; ModuleID = 'blender/source/blender/editors/transform/transform.c'
source_filename = "blender/source/blender/editors/transform/transform.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.ListBase = type { i8*, i8* }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.BMAllocTemplate = type { i32, i32, i32, i32 }
%struct.TransInfo = type { i32, i32, i32, i16, i32, float, float, void (%struct.TransInfo*, i32*)*, i32 (%struct.TransInfo*, %struct.wmEvent*)*, i32, %struct.TransData*, %struct.TransDataExtension*, %struct.TransData2D*, %struct.TransCon, %struct.TransSnap, %struct.NumInput, %struct.MouseInput, i32, float, [20 x i8], [3 x float], [2 x float], [2 x i32], i16, i16, [3 x float], i8, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i16, i16, i8, i8, [3 x float], [3 x [3 x float]], [3 x [3 x float]], [64 x i8], %struct.Object*, i8*, {}*, i16, i16, i16, i16, i16, [4 x float], [4 x float], [3 x float], [3 x float], i8, i8*, %struct.bContext*, %struct.ScrArea*, %struct.ARegion*, %struct.Scene*, %struct.ToolSettings*, %struct.wmTimer*, %struct.wmKeyMap*, %struct.ReportList*, [2 x i32], float, %struct.Object*, [3 x [3 x float]], i8*, i8*, i8*, i8* }
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.TransData = type { float, float, float, float*, [3 x float], float*, float, [3 x float], [3 x [3 x float]], [3 x [3 x float]], [3 x [3 x float]], %struct.Object*, %struct.bConstraint*, %struct.TransDataExtension*, %struct.TransDataCurveHandleFlags*, i8*, i32, i16 }
%struct.bConstraint = type { %struct.bConstraint*, %struct.bConstraint*, i8*, i16, i16, i8, i8, [64 x i8], i16, float, float, %struct.Ipo*, float, float }
%struct.Ipo = type opaque
%struct.TransDataCurveHandleFlags = type { i8, i8, i8*, i8* }
%struct.TransDataExtension = type { [3 x float], [4 x float], [3 x float], float*, [3 x float], float*, [4 x float], float*, float, float*, [4 x float], float*, [3 x float], [4 x [4 x float]], [3 x [3 x float]], [3 x [3 x float]], [3 x [3 x float]], i32, [3 x float], [3 x float], [4 x float], [3 x float], float }
%struct.TransData2D = type { [3 x float], float*, float*, float*, [2 x float], [2 x float] }
%struct.TransCon = type { i16, [50 x i8], [3 x [3 x float]], [3 x [3 x float]], [3 x [3 x float]], [3 x float], [2 x i32], i32, {}*, void (%struct.TransInfo*, %struct.TransData*, float*, float*, float*)*, void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)*, void (%struct.TransInfo*, %struct.TransData*, float*, float*)* }
%struct.TransSnap = type { i16, i16, i16, i16, i8, i8, i8, i8, i16, [3 x float], [3 x float], [3 x float], [3 x float], i8, %struct.ListBase, %struct.TransSnapPoint*, float, double, void (%struct.TransInfo*, float*)*, void (%struct.TransInfo*, float*)*, {}*, float (%struct.TransInfo*, float*, float*)* }
%struct.TransSnapPoint = type { %struct.TransSnapPoint*, %struct.TransSnapPoint*, [3 x float] }
%struct.NumInput = type { i16, i32, [3 x i32], i8, i16, [3 x i16], [3 x float], [3 x float], [3 x float], i16, [64 x i8], i32 }
%struct.MouseInput = type { void (%struct.TransInfo*, %struct.MouseInput*, i32*, float*)*, void (%struct.TransInfo*, float*)*, [2 x i32], i8, [2 x i32], [2 x float], float, i8* }
%struct.bContext = type opaque
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.SpaceType = type opaque
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.rctf = type { float, float, float, float }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type { %struct.bAction*, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.NlaStrip*, %struct.ListBase, %struct.ListBase, i32, i32, i16, i16, float }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.AnimMapper = type { %struct.AnimMapper*, %struct.AnimMapper*, %struct.bAction*, %struct.ListBase }
%struct.NlaStrip = type { %struct.NlaStrip*, %struct.NlaStrip*, %struct.ListBase, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.ListBase, [64 x i8], float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i8*, i32, i32 }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type { %struct.ID, %struct.AnimData*, %struct.ListBase, i32, i32, i32, i32, i32, i32 }
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.RegionView3D = type { [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [6 x [4 x float]], [6 x [4 x float]], %struct.BoundBox*, %struct.RegionView3D*, %struct.RenderEngine*, %struct.ViewDepths*, i8*, %struct.SmoothView3DStore*, %struct.wmTimer*, [4 x [4 x float]], [4 x float], float, float, float, float, [3 x float], float, i8, i8, i8, i8, i8, [3 x i8], [2 x float], i16, i16, [4 x float], i16, i16, float, [3 x float], float, [3 x float] }
%struct.RenderEngine = type opaque
%struct.ViewDepths = type { i16, i16, i16, i16, float*, [2 x double], i8 }
%struct.SmoothView3DStore = type opaque
%struct.SpaceImage = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, i32, %struct.Image*, %struct.ImageUser, %struct.CurveMapping*, %struct.Scopes, %struct.Histogram, %struct.bGPdata*, [2 x float], float, float, float, float, float, i8, i8, i16, i16, i16, i8, i8, i8, i8, %struct.MaskSpaceInfo }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.Scopes = type { i32, i32, i32, float, i32, float, float, i32, float, i32, [3 x [2 x float]], %struct.Histogram, float*, float*, float*, float*, i32, i32 }
%struct.Histogram = type { i32, i32, [256 x float], [256 x float], [256 x float], [256 x float], [256 x float], float, float, i16, i16, i32, [2 x [2 x float]] }
%struct.MaskSpaceInfo = type { %struct.Mask*, i8, i8, i8, [5 x i8] }
%struct.SpaceClip = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, float, float, float, float, %struct.MovieClipUser, %struct.MovieClip*, %struct.MovieClipScopes, i32, i16, i16, i32, [2 x float], float, float, i32, [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i32, i32, [2 x float], %struct.MaskSpaceInfo }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.MovieClipScopes = type { i16, i16, i32, i32, i32, %struct.MovieTrackingMarker, %struct.ImBuf*, %struct.ImBuf*, [2 x float], i16, i16, i32, %struct.MovieTrackingTrack*, %struct.MovieTrackingMarker*, [2 x float] }
%struct.ImBuf = type opaque
%struct.wmKeyConfig = type { %struct.wmKeyConfig*, %struct.wmKeyConfig*, [64 x i8], [64 x i8], %struct.ListBase, i32, i32 }
%struct.wmKeyMapItem = type { %struct.wmKeyMapItem*, %struct.wmKeyMapItem*, [64 x i8], %struct.IDProperty*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.PointerRNA* }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.PropertyRNA = type opaque
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.uiLayout = type opaque
%struct.View3D = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], [4 x float], float, float, i8, [3 x i8], i32, i32, i16, i16, %struct.Object*, %struct.Object*, %struct.rctf, %struct.ListBase, %struct.BGpic*, %struct.View3D*, [64 x i8], i32, i32, i16, i16, i16, i16, i16, i16, float, float, float, float, [3 x float], [3 x float], i16, i16, i16, i8, i8, i8, i8, [2 x i8], %struct.ListBase, %struct.ListBase, %struct.ListBase, i8, i8, i8, [5 x i8], i8*, %struct.Material*, %struct.bGPdata* }
%struct.BGpic = type { %struct.BGpic*, %struct.BGpic*, %struct.Image*, %struct.ImageUser, %struct.MovieClip*, %struct.MovieClipUser, float, float, float, float, i16, i16, i16, i16 }
%struct.EdgeSlideData = type { %struct.TransDataEdgeSlideVert*, i32, %struct.GHash*, [2 x i32], [2 x i32], %struct.BMEditMesh*, i8, %struct.BMesh*, float, i8, i8, i32 }
%struct.TransDataEdgeSlideVert = type { %struct.BMVert*, %struct.BMVert*, %struct.BMVert*, [3 x float], float, [3 x float], [3 x float], i32 }
%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.BMEditMesh = type { %struct.BMesh*, %struct.BMEditMesh*, i32, [3 x %struct.BMLoop*]*, i32, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, [4 x i8]*, i32, [4 x i8]*, i32, i16, i16, %struct.Object*, i32 }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BLI_mempool = type opaque
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon = type { i8*, [8 x i8] }
%struct.MemArena = type opaque
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.VertSlideData = type { %struct.TransDataVertSlideVert*, i32, %struct.BMEditMesh*, float, i8, i8, i32 }
%struct.TransDataVertSlideVert = type { %struct.BMVert*, [3 x float], [2 x float], [3 x float]*, [2 x float]*, i32, i32 }
%struct.bArmature = type { %struct.ID, %struct.AnimData*, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.Bone*, %struct.EditBone*, i8*, i32, i32, i32, i32, i16, i16, i32, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32 }
%struct.Bone = type { %struct.Bone*, %struct.Bone*, %struct.IDProperty*, %struct.Bone*, %struct.ListBase, [64 x i8], float, [3 x float], [3 x float], [3 x [3 x float]], i32, [3 x float], [3 x float], [4 x [4 x float]], float, float, float, float, float, float, float, float, float, float, [3 x float], i32, i16, [1 x i16] }
%struct.EditBone = type opaque
%struct.wmWindowManager = type { %struct.ID, %struct.wmWindow*, %struct.wmWindow*, %struct.ListBase, i32, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ReportList, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.ListBase, %struct.wmTimer*, i8, [7 x i8] }
%struct.BendCustomData = type { [3 x float], [3 x float], [3 x float], [3 x float], float }
%struct.SpaceAction = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, %struct.bAction*, %struct.bDopeSheet, i8, i8, i16, float }
%struct.bDopeSheet = type { %struct.ID*, %struct.ListBase, %struct.Group*, [64 x i8], i32, i32, i32, i32 }
%struct.BMIter = type { %union.anon.0, void (i8*)*, i8* (i8*)*, i32, i8 }
%union.anon.0 = type { %struct.BMIter__face_of_vert }
%struct.BMIter__face_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { float, float }
%struct.bConstraintTypeInfo = type { i16, i16, [32 x i8], [32 x i8], void (%struct.bConstraint*)*, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)*, void (%struct.bConstraint*, %struct.bConstraint*)*, void (i8*)*, i32 (%struct.bConstraint*, %struct.ListBase*)*, void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* }
%struct.bConstraintOb = type { %struct.Scene*, %struct.Object*, %struct.bPoseChannel*, [4 x [4 x float]], [4 x [4 x float]], i16, i16 }
%struct.bPoseChannel = type { %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.IDProperty*, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i8, i8, [6 x i8], %struct.Bone*, %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.ListBase, %struct.ListBase, %struct.bMotionPath*, %struct.Object*, %struct.bPoseChannel*, [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], float, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, float, i8* }
%struct.bConstraintTarget = type { %struct.bConstraintTarget*, %struct.bConstraintTarget*, %struct.Object*, [64 x i8], [4 x [4 x float]], i16, i16, i16, i16 }
%struct.bSizeLimitConstraint = type { float, float, float, float, float, float, i16, i16 }
%struct.bLocLimitConstraint = type { float, float, float, float, float, float, i16, i16 }
%struct.bDistLimitConstraint = type { %struct.Object*, [64 x i8], float, float, i16, i16, i32 }
%struct.bRotLimitConstraint = type { float, float, float, float, float, float, i16, i16 }
%struct.BMIter__elem_of_mesh = type { %struct.BLI_mempool_iter }
%struct.BLI_mempool_iter = type { %struct.BLI_mempool*, %struct.BLI_mempool_chunk*, i32 }
%struct.BLI_mempool_chunk = type opaque
%struct.BMIter__edge_of_vert = type { %struct.BMVert*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__loop_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__vert_of_edge = type { %struct.BMEdge* }
%struct.BMIter__face_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__vert_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__edge_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_loop = type { %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMBVHTree = type opaque
%struct.SpaceIpo = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, %struct.bDopeSheet*, %struct.ListBase, i16, i16, i32, float, i32 }
%struct.SpaceNla = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], i16, i16, i32, %struct.bDopeSheet*, %struct.View2D }

@.str = private unnamed_addr constant [34 x i8] c"%s: called in an invalid context\0A\00", align 1
@__func__.convertViewVec = private unnamed_addr constant [15 x i8] c"convertViewVec\00", align 1
@transform_modal_keymap.modal_items = internal global [27 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 14, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 20, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.40, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 21, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.42, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 22, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 23, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.46, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 24, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.48, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 25, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 26, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !0
@.str.1 = private unnamed_addr constant [7 x i8] c"CANCEL\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"Cancel\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"CONFIRM\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"Confirm\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"TRANSLATE\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"Translate\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"ROTATE\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"Rotate\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"RESIZE\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"Resize\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"SNAP_INV_ON\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"Invert Snap On\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"SNAP_INV_OFF\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"Invert Snap Off\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"SNAP_TOGGLE\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"Snap Toggle\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"AXIS_X\00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"Orientation X axis\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"AXIS_Y\00", align 1
@.str.21 = private unnamed_addr constant [19 x i8] c"Orientation Y axis\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"AXIS_Z\00", align 1
@.str.23 = private unnamed_addr constant [19 x i8] c"Orientation Z axis\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"PLANE_X\00", align 1
@.str.25 = private unnamed_addr constant [20 x i8] c"Orientation X plane\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"PLANE_Y\00", align 1
@.str.27 = private unnamed_addr constant [20 x i8] c"Orientation Y plane\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"PLANE_Z\00", align 1
@.str.29 = private unnamed_addr constant [20 x i8] c"Orientation Z plane\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"CONS_OFF\00", align 1
@.str.31 = private unnamed_addr constant [19 x i8] c"Remove Constraints\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"ADD_SNAP\00", align 1
@.str.33 = private unnamed_addr constant [15 x i8] c"Add Snap Point\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"REMOVE_SNAP\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"Remove Last Snap Point\00", align 1
@.str.36 = private unnamed_addr constant [13 x i8] c"INCREMENT_UP\00", align 1
@.str.37 = private unnamed_addr constant [22 x i8] c"Numinput Increment Up\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"INCREMENT_DOWN\00", align 1
@.str.39 = private unnamed_addr constant [24 x i8] c"Numinput Increment Down\00", align 1
@.str.40 = private unnamed_addr constant [21 x i8] c"PROPORTIONAL_SIZE_UP\00", align 1
@.str.41 = private unnamed_addr constant [32 x i8] c"Increase Proportional Influence\00", align 1
@.str.42 = private unnamed_addr constant [23 x i8] c"PROPORTIONAL_SIZE_DOWN\00", align 1
@.str.43 = private unnamed_addr constant [32 x i8] c"Decrease Proportional Influence\00", align 1
@.str.44 = private unnamed_addr constant [20 x i8] c"AUTOIK_CHAIN_LEN_UP\00", align 1
@.str.45 = private unnamed_addr constant [33 x i8] c"Increase Max AutoIK Chain Length\00", align 1
@.str.46 = private unnamed_addr constant [22 x i8] c"AUTOIK_CHAIN_LEN_DOWN\00", align 1
@.str.47 = private unnamed_addr constant [33 x i8] c"Decrease Max AutoIK Chain Length\00", align 1
@.str.48 = private unnamed_addr constant [20 x i8] c"EDGESLIDE_EDGE_NEXT\00", align 1
@.str.49 = private unnamed_addr constant [28 x i8] c"Select next Edge Slide Edge\00", align 1
@.str.50 = private unnamed_addr constant [20 x i8] c"EDGESLIDE_PREV_NEXT\00", align 1
@.str.51 = private unnamed_addr constant [32 x i8] c"Select previous Edge Slide Edge\00", align 1
@.str.52 = private unnamed_addr constant [18 x i8] c"PROPORTIONAL_SIZE\00", align 1
@.str.53 = private unnamed_addr constant [30 x i8] c"Adjust Proportional Influence\00", align 1
@.str.54 = private unnamed_addr constant [20 x i8] c"Transform Modal Map\00", align 1
@.str.55 = private unnamed_addr constant [13 x i8] c"locking %s X\00", align 1
@.str.56 = private unnamed_addr constant [13 x i8] c"locking %s Y\00", align 1
@.str.57 = private unnamed_addr constant [13 x i8] c"locking %s Z\00", align 1
@.str.58 = private unnamed_addr constant [14 x i8] c"along local Z\00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"global\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.60 = private unnamed_addr constant [15 x i8] c"TransInfo data\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.61 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.63 = private unnamed_addr constant [13 x i8] c"proportional\00", align 1
@.str.64 = private unnamed_addr constant [18 x i8] c"proportional_size\00", align 1
@.str.65 = private unnamed_addr constant [26 x i8] c"proportional_edit_falloff\00", align 1
@.str.66 = private unnamed_addr constant [23 x i8] c"constraint_orientation\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"axis\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"mirror\00", align 1
@.str.69 = private unnamed_addr constant [16 x i8] c"constraint_axis\00", align 1
@.str.70 = private unnamed_addr constant [14 x i8] c"texture_space\00", align 1
@.str.71 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.72 = private unnamed_addr constant [8 x i8] c"along X\00", align 1
@.str.73 = private unnamed_addr constant [11 x i8] c"along %s X\00", align 1
@.str.74 = private unnamed_addr constant [8 x i8] c"along Y\00", align 1
@.str.75 = private unnamed_addr constant [11 x i8] c"along %s Y\00", align 1
@.str.76 = private unnamed_addr constant [8 x i8] c"along Z\00", align 1
@.str.77 = private unnamed_addr constant [11 x i8] c"along %s Z\00", align 1
@U = external dso_local global %struct.UserDef, align 8
@.str.78 = private unnamed_addr constant [15 x i8] c"Auto Keying On\00", align 1
@__func__.initBend = private unnamed_addr constant [9 x i8] c"initBend\00", align 1
@.str.79 = private unnamed_addr constant [40 x i8] c"Bend Angle: %s Radius: %s Alt, Clamp %s\00", align 1
@.str.80 = private unnamed_addr constant [45 x i8] c"Bend Angle: %.3f Radius: %.4f, Alt, Clamp %s\00", align 1
@.str.81 = private unnamed_addr constant [13 x i8] c"Shear: %s %s\00", align 1
@.str.82 = private unnamed_addr constant [48 x i8] c"Shear: %.3f %s (Press X or Y to set shear axis)\00", align 1
@.str.83 = private unnamed_addr constant [5 x i8] c"%.4f\00", align 1
@.str.84 = private unnamed_addr constant [15 x i8] c"Scale: %s%s %s\00", align 1
@.str.85 = private unnamed_addr constant [20 x i8] c"Scale: %s : %s%s %s\00", align 1
@.str.86 = private unnamed_addr constant [25 x i8] c"Scale: %s : %s : %s%s %s\00", align 1
@.str.87 = private unnamed_addr constant [25 x i8] c"Scale X: %s   Y: %s%s %s\00", align 1
@.str.88 = private unnamed_addr constant [32 x i8] c"Scale X: %s   Y: %s  Z: %s%s %s\00", align 1
@.str.89 = private unnamed_addr constant [25 x i8] c" Proportional size: %.2f\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"To Sphere: %s %s\00", align 1
@.str.91 = private unnamed_addr constant [19 x i8] c"To Sphere: %.4f %s\00", align 1
@.str.92 = private unnamed_addr constant [14 x i8] c"Rot: %s %s %s\00", align 1
@.str.93 = private unnamed_addr constant [15 x i8] c"Rot: %.2f%s %s\00", align 1
@.str.94 = private unnamed_addr constant [20 x i8] c"Trackball: %s %s %s\00", align 1
@.str.95 = private unnamed_addr constant [24 x i8] c"Trackball: %.2f %.2f %s\00", align 1
@.str.96 = private unnamed_addr constant [113 x i8] c"Use 'Time_Translate' transform mode instead of 'Translation' mode for translating keyframes in Dope Sheet Editor\00", align 1
@.str.97 = private unnamed_addr constant [5 x i8] c"%.4e\00", align 1
@.str.98 = private unnamed_addr constant [15 x i8] c"AutoIK-Len: %d\00", align 1
@.str.99 = private unnamed_addr constant [20 x i8] c"D: %s (%s)%s %s  %s\00", align 1
@.str.100 = private unnamed_addr constant [28 x i8] c"D: %s   D: %s (%s)%s %s  %s\00", align 1
@.str.101 = private unnamed_addr constant [35 x i8] c"D: %s   D: %s  D: %s (%s)%s %s  %s\00", align 1
@.str.102 = private unnamed_addr constant [26 x i8] c"Dx: %s   Dy: %s (%s)%s %s\00", align 1
@.str.103 = private unnamed_addr constant [38 x i8] c"Dx: %s   Dy: %s  Dz: %s (%s)%s %s  %s\00", align 1
@.str.104 = private unnamed_addr constant [15 x i8] c"Shrink/Fatten:\00", align 1
@.str.105 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str.106 = private unnamed_addr constant [6 x i8] c" %.4f\00", align 1
@.str.107 = private unnamed_addr constant [4 x i8] c", (\00", align 1
@.str.108 = private unnamed_addr constant [27 x i8] c" or Alt) Even Thickness %s\00", align 1
@.str.109 = private unnamed_addr constant [14 x i8] c"Tilt: %s\C2\B0 %s\00", align 1
@.str.110 = private unnamed_addr constant [16 x i8] c"Tilt: %.2f\C2\B0 %s\00", align 1
@.str.111 = private unnamed_addr constant [18 x i8] c"Shrink/Fatten: %s\00", align 1
@.str.112 = private unnamed_addr constant [19 x i8] c"Shrink/Fatten: %3f\00", align 1
@.str.113 = private unnamed_addr constant [26 x i8] c"Feather Shrink/Fatten: %s\00", align 1
@.str.114 = private unnamed_addr constant [27 x i8] c"Feather Shrink/Fatten: %3f\00", align 1
@.str.115 = private unnamed_addr constant [19 x i8] c"Push/Pull: %s%s %s\00", align 1
@.str.116 = private unnamed_addr constant [21 x i8] c"Push/Pull: %.4f%s %s\00", align 1
@.str.117 = private unnamed_addr constant [21 x i8] c"Bevel Weight: +%s %s\00", align 1
@.str.118 = private unnamed_addr constant [20 x i8] c"Bevel Weight: %s %s\00", align 1
@.str.119 = private unnamed_addr constant [23 x i8] c"Bevel Weight: +%.3f %s\00", align 1
@.str.120 = private unnamed_addr constant [22 x i8] c"Bevel Weight: %.3f %s\00", align 1
@.str.121 = private unnamed_addr constant [15 x i8] c"Crease: +%s %s\00", align 1
@.str.122 = private unnamed_addr constant [14 x i8] c"Crease: %s %s\00", align 1
@.str.123 = private unnamed_addr constant [17 x i8] c"Crease: +%.3f %s\00", align 1
@.str.124 = private unnamed_addr constant [16 x i8] c"Crease: %.3f %s\00", align 1
@.str.125 = private unnamed_addr constant [16 x i8] c"ScaleB: %s%s %s\00", align 1
@.str.126 = private unnamed_addr constant [26 x i8] c"ScaleB: %s : %s : %s%s %s\00", align 1
@.str.127 = private unnamed_addr constant [32 x i8] c"ScaleB X: %s  Y: %s  Z: %s%s %s\00", align 1
@.str.128 = private unnamed_addr constant [13 x i8] c"Envelope: %s\00", align 1
@.str.129 = private unnamed_addr constant [14 x i8] c"Envelope: %3f\00", align 1
@.str.130 = private unnamed_addr constant [26 x i8] c"Edge Slide: %s (E)ven: %s\00", align 1
@.str.131 = private unnamed_addr constant [41 x i8] c"Edge Slide: %s (E)ven: %s, (F)lipped: %s\00", align 1
@.str.132 = private unnamed_addr constant [28 x i8] c"Edge Slide: %.4f (E)ven: %s\00", align 1
@.str.133 = private unnamed_addr constant [43 x i8] c"Edge Slide: %.4f (E)ven: %s, (F)lipped: %s\00", align 1
@.str.134 = private unnamed_addr constant [4 x i8] c"sld\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@__func__.createEdgeSlideVerts = private unnamed_addr constant [21 x i8] c"createEdgeSlideVerts\00", align 1
@.str.135 = private unnamed_addr constant [9 x i8] c"sv_array\00", align 1
@.str.136 = private unnamed_addr constant [12 x i8] c"sv loop_dir\00", align 1
@.str.137 = private unnamed_addr constant [16 x i8] c"sv loop_maxdist\00", align 1
@bm_mesh_allocsize_default = external dso_local constant %struct.BMAllocTemplate, align 4
@.str.138 = private unnamed_addr constant [13 x i8] c"Vert Slide: \00", align 1
@.str.139 = private unnamed_addr constant [6 x i8] c"%.4f \00", align 1
@.str.140 = private unnamed_addr constant [13 x i8] c"(E)ven: %s, \00", align 1
@.str.141 = private unnamed_addr constant [16 x i8] c"(F)lipped: %s, \00", align 1
@.str.142 = private unnamed_addr constant [19 x i8] c"Alt or (C)lamp: %s\00", align 1
@__func__.createVertSlideVerts = private unnamed_addr constant [21 x i8] c"createVertSlideVerts\00", align 1
@.str.143 = private unnamed_addr constant [9 x i8] c"Roll: %s\00", align 1
@.str.144 = private unnamed_addr constant [11 x i8] c"Roll: %.2f\00", align 1
@.str.145 = private unnamed_addr constant [13 x i8] c"Time: +%s %s\00", align 1
@.str.146 = private unnamed_addr constant [12 x i8] c"Time: %s %s\00", align 1
@.str.147 = private unnamed_addr constant [15 x i8] c"Time: +%.3f %s\00", align 1
@.str.148 = private unnamed_addr constant [14 x i8] c"Time: %.3f %s\00", align 1
@.str.149 = private unnamed_addr constant [9 x i8] c"Mirror%s\00", align 1
@.str.150 = private unnamed_addr constant [28 x i8] c"Select a mirror axis (X, Y)\00", align 1
@.str.151 = private unnamed_addr constant [31 x i8] c"Select a mirror axis (X, Y, Z)\00", align 1
@.str.152 = private unnamed_addr constant [6 x i8] c"Align\00", align 1
@.str.153 = private unnamed_addr constant [11 x i8] c"%.0f, %.0f\00", align 1
@.str.154 = private unnamed_addr constant [24 x i8] c"Sequence Slide: %s%s, (\00", align 1
@.str.155 = private unnamed_addr constant [26 x i8] c" or Alt) Expand to fit %s\00", align 1
@.str.156 = private unnamed_addr constant [13 x i8] c"%d.00 (%.4f)\00", align 1
@.str.157 = private unnamed_addr constant [17 x i8] c"%d.00 sec (%.4f)\00", align 1
@.str.158 = private unnamed_addr constant [9 x i8] c"%.4f sec\00", align 1
@.str.159 = private unnamed_addr constant [11 x i8] c"DeltaX: %s\00", align 1
@.str.160 = private unnamed_addr constant [14 x i8] c"TimeSlide: %s\00", align 1
@.str.161 = private unnamed_addr constant [11 x i8] c"ScaleX: %s\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @setTransformViewMatrices(%struct.TransInfo* %t) #0 !dbg !4433 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %rv3d = alloca %struct.RegionView3D*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !4436, metadata !DIExpression()), !dbg !4437
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4438
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 33, !dbg !4440
  %1 = load i8, i8* %spacetype, align 8, !dbg !4440
  %conv = zext i8 %1 to i32, !dbg !4438
  %cmp = icmp eq i32 %conv, 1, !dbg !4441
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !4442

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4443
  %ar = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 55, !dbg !4444
  %3 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4444
  %tobool = icmp ne %struct.ARegion* %3, null, !dbg !4443
  br i1 %tobool, label %land.lhs.true2, label %if.else, !dbg !4445

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4446
  %ar3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 55, !dbg !4447
  %5 = load %struct.ARegion*, %struct.ARegion** %ar3, align 8, !dbg !4447
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %5, i32 0, i32 8, !dbg !4448
  %6 = load i16, i16* %regiontype, align 2, !dbg !4448
  %conv4 = sext i16 %6 to i32, !dbg !4446
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !4449
  br i1 %cmp5, label %if.then, label %if.else, !dbg !4450

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !4451, metadata !DIExpression()), !dbg !4515
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4516
  %ar7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 55, !dbg !4517
  %8 = load %struct.ARegion*, %struct.ARegion** %ar7, align 8, !dbg !4517
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %8, i32 0, i32 30, !dbg !4518
  %9 = load i8*, i8** %regiondata, align 8, !dbg !4518
  %10 = bitcast i8* %9 to %struct.RegionView3D*, !dbg !4516
  store %struct.RegionView3D* %10, %struct.RegionView3D** %rv3d, align 8, !dbg !4515
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4519
  %viewmat = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 27, !dbg !4520
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !4519
  %12 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !4521
  %viewmat8 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %12, i32 0, i32 1, !dbg !4522
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat8, i64 0, i64 0, !dbg !4521
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay9), !dbg !4523
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4524
  %viewinv = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 28, !dbg !4525
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !4524
  %14 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !4526
  %viewinv11 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %14, i32 0, i32 2, !dbg !4527
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv11, i64 0, i64 0, !dbg !4526
  call void @copy_m4_m4([4 x float]* %arraydecay10, [4 x float]* %arraydecay12), !dbg !4528
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4529
  %persmat = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 29, !dbg !4530
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persmat, i64 0, i64 0, !dbg !4529
  %16 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !4531
  %persmat14 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %16, i32 0, i32 3, !dbg !4532
  %arraydecay15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persmat14, i64 0, i64 0, !dbg !4531
  call void @copy_m4_m4([4 x float]* %arraydecay13, [4 x float]* %arraydecay15), !dbg !4533
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4534
  %persinv = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 30, !dbg !4535
  %arraydecay16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persinv, i64 0, i64 0, !dbg !4534
  %18 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !4536
  %persinv17 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %18, i32 0, i32 4, !dbg !4537
  %arraydecay18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persinv17, i64 0, i64 0, !dbg !4536
  call void @copy_m4_m4([4 x float]* %arraydecay16, [4 x float]* %arraydecay18), !dbg !4538
  %19 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !4539
  %persp = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %19, i32 0, i32 25, !dbg !4540
  %20 = load i8, i8* %persp, align 1, !dbg !4540
  %conv19 = zext i8 %20 to i16, !dbg !4539
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4541
  %persp20 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 31, !dbg !4542
  store i16 %conv19, i16* %persp20, align 4, !dbg !4543
  br label %if.end, !dbg !4544

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4545
  %viewmat21 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 27, !dbg !4547
  %arraydecay22 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat21, i64 0, i64 0, !dbg !4545
  call void @unit_m4([4 x float]* %arraydecay22), !dbg !4548
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4549
  %viewinv23 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 28, !dbg !4550
  %arraydecay24 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv23, i64 0, i64 0, !dbg !4549
  call void @unit_m4([4 x float]* %arraydecay24), !dbg !4551
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4552
  %persmat25 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 29, !dbg !4553
  %arraydecay26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persmat25, i64 0, i64 0, !dbg !4552
  call void @unit_m4([4 x float]* %arraydecay26), !dbg !4554
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4555
  %persinv27 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 30, !dbg !4556
  %arraydecay28 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persinv27, i64 0, i64 0, !dbg !4555
  call void @unit_m4([4 x float]* %arraydecay28), !dbg !4557
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4558
  %persp29 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 31, !dbg !4559
  store i16 0, i16* %persp29, align 4, !dbg !4560
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4561
  call void @calculateCenter2D(%struct.TransInfo* %27), !dbg !4562
  ret void, !dbg !4563
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local void @copy_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local void @unit_m4([4 x float]*) #2

declare dso_local void @calculateCenter2D(%struct.TransInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @convertViewVec(%struct.TransInfo* %t, float* %r_vec, i32 %dx, i32 %dy) #0 !dbg !4564 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %r_vec.addr = alloca float*, align 8
  %dx.addr = alloca i32, align 4
  %dy.addr = alloca i32, align 4
  %mval_f = alloca [2 x float], align 4
  %aspx = alloca float, align 4
  %aspy = alloca float, align 4
  %aspx70 = alloca float, align 4
  %aspy71 = alloca float, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !4567, metadata !DIExpression()), !dbg !4568
  store float* %r_vec, float** %r_vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_vec.addr, metadata !4569, metadata !DIExpression()), !dbg !4570
  store i32 %dx, i32* %dx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dx.addr, metadata !4571, metadata !DIExpression()), !dbg !4572
  store i32 %dy, i32* %dy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dy.addr, metadata !4573, metadata !DIExpression()), !dbg !4574
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4575
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 33, !dbg !4577
  %1 = load i8, i8* %spacetype, align 8, !dbg !4577
  %conv = zext i8 %1 to i32, !dbg !4575
  %cmp = icmp eq i32 %conv, 1, !dbg !4578
  br i1 %cmp, label %land.lhs.true, label %if.else12, !dbg !4579

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4580
  %ar = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 55, !dbg !4581
  %3 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4581
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %3, i32 0, i32 8, !dbg !4582
  %4 = load i16, i16* %regiontype, align 2, !dbg !4582
  %conv2 = sext i16 %4 to i32, !dbg !4580
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !4583
  br i1 %cmp3, label %if.then, label %if.else12, !dbg !4584

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4585
  %options = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 4, !dbg !4588
  %6 = load i32, i32* %options, align 8, !dbg !4588
  %and = and i32 %6, 256, !dbg !4589
  %tobool = icmp ne i32 %and, 0, !dbg !4589
  br i1 %tobool, label %if.then5, label %if.else, !dbg !4590

if.then5:                                         ; preds = %if.then
  %7 = load i32, i32* %dx.addr, align 4, !dbg !4591
  %conv6 = sitofp i32 %7 to float, !dbg !4591
  %8 = load float*, float** %r_vec.addr, align 8, !dbg !4593
  %arrayidx = getelementptr inbounds float, float* %8, i64 0, !dbg !4593
  store float %conv6, float* %arrayidx, align 4, !dbg !4594
  %9 = load i32, i32* %dy.addr, align 4, !dbg !4595
  %conv7 = sitofp i32 %9 to float, !dbg !4595
  %10 = load float*, float** %r_vec.addr, align 8, !dbg !4596
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 1, !dbg !4596
  store float %conv7, float* %arrayidx8, align 4, !dbg !4597
  br label %if.end, !dbg !4598

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata [2 x float]* %mval_f, metadata !4599, metadata !DIExpression()), !dbg !4602
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %mval_f, i64 0, i64 0, !dbg !4603
  %11 = load i32, i32* %dx.addr, align 4, !dbg !4604
  %conv9 = sitofp i32 %11 to float, !dbg !4605
  store float %conv9, float* %arrayinit.begin, align 4, !dbg !4603
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !4603
  %12 = load i32, i32* %dy.addr, align 4, !dbg !4606
  %conv10 = sitofp i32 %12 to float, !dbg !4607
  store float %conv10, float* %arrayinit.element, align 4, !dbg !4603
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4608
  %ar11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 55, !dbg !4609
  %14 = load %struct.ARegion*, %struct.ARegion** %ar11, align 8, !dbg !4609
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %mval_f, i64 0, i64 0, !dbg !4610
  %15 = load float*, float** %r_vec.addr, align 8, !dbg !4611
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4612
  %zfac = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 62, !dbg !4613
  %17 = load float, float* %zfac, align 8, !dbg !4613
  call void @ED_view3d_win_to_delta(%struct.ARegion* %14, float* %arraydecay, float* %15, float %17), !dbg !4614
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end107, !dbg !4615

if.else12:                                        ; preds = %land.lhs.true, %entry
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4616
  %spacetype13 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 33, !dbg !4618
  %19 = load i8, i8* %spacetype13, align 8, !dbg !4618
  %conv14 = zext i8 %19 to i32, !dbg !4616
  %cmp15 = icmp eq i32 %conv14, 6, !dbg !4619
  br i1 %cmp15, label %if.then17, label %if.else41, !dbg !4620

if.then17:                                        ; preds = %if.else12
  call void @llvm.dbg.declare(metadata float* %aspx, metadata !4621, metadata !DIExpression()), !dbg !4623
  call void @llvm.dbg.declare(metadata float* %aspy, metadata !4624, metadata !DIExpression()), !dbg !4625
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4626
  %options18 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 4, !dbg !4628
  %21 = load i32, i32* %options18, align 8, !dbg !4628
  %and19 = and i32 %21, 128, !dbg !4629
  %tobool20 = icmp ne i32 %and19, 0, !dbg !4629
  br i1 %tobool20, label %if.then21, label %if.else22, !dbg !4630

if.then21:                                        ; preds = %if.then17
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4631
  %view = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 52, !dbg !4633
  %23 = load i8*, i8** %view, align 8, !dbg !4633
  %24 = bitcast i8* %23 to %struct.View2D*, !dbg !4631
  %25 = load float*, float** %r_vec.addr, align 8, !dbg !4634
  %26 = load i32, i32* %dx.addr, align 4, !dbg !4635
  %27 = load i32, i32* %dy.addr, align 4, !dbg !4636
  call void @convertViewVec2D_mask(%struct.View2D* %24, float* %25, i32 %26, i32 %27), !dbg !4637
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4638
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 54, !dbg !4639
  %29 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4639
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %29, i32 0, i32 19, !dbg !4640
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !4641
  %30 = load i8*, i8** %first, align 8, !dbg !4641
  %31 = bitcast i8* %30 to %struct.SpaceImage*, !dbg !4638
  call void @ED_space_image_get_aspect(%struct.SpaceImage* %31, float* %aspx, float* %aspy), !dbg !4642
  br label %if.end37, !dbg !4643

if.else22:                                        ; preds = %if.then17
  %32 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4644
  %options23 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %32, i32 0, i32 4, !dbg !4646
  %33 = load i32, i32* %options23, align 8, !dbg !4646
  %and24 = and i32 %33, 256, !dbg !4647
  %tobool25 = icmp ne i32 %and24, 0, !dbg !4647
  br i1 %tobool25, label %if.then26, label %if.else31, !dbg !4648

if.then26:                                        ; preds = %if.else22
  %34 = load i32, i32* %dx.addr, align 4, !dbg !4649
  %conv27 = sitofp i32 %34 to float, !dbg !4649
  %35 = load float*, float** %r_vec.addr, align 8, !dbg !4651
  %arrayidx28 = getelementptr inbounds float, float* %35, i64 0, !dbg !4651
  store float %conv27, float* %arrayidx28, align 4, !dbg !4652
  %36 = load i32, i32* %dy.addr, align 4, !dbg !4653
  %conv29 = sitofp i32 %36 to float, !dbg !4653
  %37 = load float*, float** %r_vec.addr, align 8, !dbg !4654
  %arrayidx30 = getelementptr inbounds float, float* %37, i64 1, !dbg !4654
  store float %conv29, float* %arrayidx30, align 4, !dbg !4655
  store float 1.000000e+00, float* %aspy, align 4, !dbg !4656
  store float 1.000000e+00, float* %aspx, align 4, !dbg !4657
  br label %if.end36, !dbg !4658

if.else31:                                        ; preds = %if.else22
  %38 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4659
  %view32 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %38, i32 0, i32 52, !dbg !4661
  %39 = load i8*, i8** %view32, align 8, !dbg !4661
  %40 = bitcast i8* %39 to %struct.View2D*, !dbg !4659
  %41 = load float*, float** %r_vec.addr, align 8, !dbg !4662
  %42 = load i32, i32* %dx.addr, align 4, !dbg !4663
  %43 = load i32, i32* %dy.addr, align 4, !dbg !4664
  call void @convertViewVec2D(%struct.View2D* %40, float* %41, i32 %42, i32 %43), !dbg !4665
  %44 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4666
  %sa33 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %44, i32 0, i32 54, !dbg !4667
  %45 = load %struct.ScrArea*, %struct.ScrArea** %sa33, align 8, !dbg !4667
  %spacedata34 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %45, i32 0, i32 19, !dbg !4668
  %first35 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata34, i32 0, i32 0, !dbg !4669
  %46 = load i8*, i8** %first35, align 8, !dbg !4669
  %47 = bitcast i8* %46 to %struct.SpaceImage*, !dbg !4666
  call void @ED_space_image_get_uv_aspect(%struct.SpaceImage* %47, float* %aspx, float* %aspy), !dbg !4670
  br label %if.end36

if.end36:                                         ; preds = %if.else31, %if.then26
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then21
  %48 = load float, float* %aspx, align 4, !dbg !4671
  %49 = load float*, float** %r_vec.addr, align 8, !dbg !4672
  %arrayidx38 = getelementptr inbounds float, float* %49, i64 0, !dbg !4672
  %50 = load float, float* %arrayidx38, align 4, !dbg !4673
  %mul = fmul float %50, %48, !dbg !4673
  store float %mul, float* %arrayidx38, align 4, !dbg !4673
  %51 = load float, float* %aspy, align 4, !dbg !4674
  %52 = load float*, float** %r_vec.addr, align 8, !dbg !4675
  %arrayidx39 = getelementptr inbounds float, float* %52, i64 1, !dbg !4675
  %53 = load float, float* %arrayidx39, align 4, !dbg !4676
  %mul40 = fmul float %53, %51, !dbg !4676
  store float %mul40, float* %arrayidx39, align 4, !dbg !4676
  br label %if.end106, !dbg !4677

if.else41:                                        ; preds = %if.else12
  %54 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4678
  %spacetype42 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %54, i32 0, i32 33, !dbg !4678
  %55 = load i8, i8* %spacetype42, align 8, !dbg !4678
  %conv43 = zext i8 %55 to i32, !dbg !4678
  %cmp44 = icmp eq i32 %conv43, 2, !dbg !4678
  br i1 %cmp44, label %if.then50, label %lor.lhs.false, !dbg !4678

lor.lhs.false:                                    ; preds = %if.else41
  %56 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4678
  %spacetype46 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %56, i32 0, i32 33, !dbg !4678
  %57 = load i8, i8* %spacetype46, align 8, !dbg !4678
  %conv47 = zext i8 %57 to i32, !dbg !4678
  %cmp48 = icmp eq i32 %conv47, 13, !dbg !4678
  br i1 %cmp48, label %if.then50, label %if.else52, !dbg !4680

if.then50:                                        ; preds = %lor.lhs.false, %if.else41
  %58 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4681
  %view51 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %58, i32 0, i32 52, !dbg !4683
  %59 = load i8*, i8** %view51, align 8, !dbg !4683
  %60 = bitcast i8* %59 to %struct.View2D*, !dbg !4681
  %61 = load float*, float** %r_vec.addr, align 8, !dbg !4684
  %62 = load i32, i32* %dx.addr, align 4, !dbg !4685
  %63 = load i32, i32* %dy.addr, align 4, !dbg !4686
  call void @convertViewVec2D(%struct.View2D* %60, float* %61, i32 %62, i32 %63), !dbg !4687
  br label %if.end105, !dbg !4688

if.else52:                                        ; preds = %lor.lhs.false
  %64 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4689
  %spacetype53 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %64, i32 0, i32 33, !dbg !4689
  %65 = load i8, i8* %spacetype53, align 8, !dbg !4689
  %conv54 = zext i8 %65 to i32, !dbg !4689
  %cmp55 = icmp eq i32 %conv54, 16, !dbg !4689
  br i1 %cmp55, label %if.then62, label %lor.lhs.false57, !dbg !4689

lor.lhs.false57:                                  ; preds = %if.else52
  %66 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4689
  %spacetype58 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %66, i32 0, i32 33, !dbg !4689
  %67 = load i8, i8* %spacetype58, align 8, !dbg !4689
  %conv59 = zext i8 %67 to i32, !dbg !4689
  %cmp60 = icmp eq i32 %conv59, 8, !dbg !4689
  br i1 %cmp60, label %if.then62, label %if.else64, !dbg !4691

if.then62:                                        ; preds = %lor.lhs.false57, %if.else52
  %68 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4692
  %ar63 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %68, i32 0, i32 55, !dbg !4694
  %69 = load %struct.ARegion*, %struct.ARegion** %ar63, align 8, !dbg !4694
  %v2d = getelementptr inbounds %struct.ARegion, %struct.ARegion* %69, i32 0, i32 2, !dbg !4695
  %70 = load float*, float** %r_vec.addr, align 8, !dbg !4696
  %71 = load i32, i32* %dx.addr, align 4, !dbg !4697
  %72 = load i32, i32* %dy.addr, align 4, !dbg !4698
  call void @convertViewVec2D(%struct.View2D* %v2d, float* %70, i32 %71, i32 %72), !dbg !4699
  br label %if.end104, !dbg !4700

if.else64:                                        ; preds = %lor.lhs.false57
  %73 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4701
  %spacetype65 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %73, i32 0, i32 33, !dbg !4703
  %74 = load i8, i8* %spacetype65, align 8, !dbg !4703
  %conv66 = zext i8 %74 to i32, !dbg !4701
  %cmp67 = icmp eq i32 %conv66, 20, !dbg !4704
  br i1 %cmp67, label %if.then69, label %if.else102, !dbg !4705

if.then69:                                        ; preds = %if.else64
  call void @llvm.dbg.declare(metadata float* %aspx70, metadata !4706, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.declare(metadata float* %aspy71, metadata !4709, metadata !DIExpression()), !dbg !4710
  %75 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4711
  %options72 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %75, i32 0, i32 4, !dbg !4713
  %76 = load i32, i32* %options72, align 8, !dbg !4713
  %and73 = and i32 %76, 128, !dbg !4714
  %tobool74 = icmp ne i32 %and73, 0, !dbg !4714
  br i1 %tobool74, label %if.then75, label %if.else77, !dbg !4715

if.then75:                                        ; preds = %if.then69
  %77 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4716
  %view76 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %77, i32 0, i32 52, !dbg !4718
  %78 = load i8*, i8** %view76, align 8, !dbg !4718
  %79 = bitcast i8* %78 to %struct.View2D*, !dbg !4716
  %80 = load float*, float** %r_vec.addr, align 8, !dbg !4719
  %81 = load i32, i32* %dx.addr, align 4, !dbg !4720
  %82 = load i32, i32* %dy.addr, align 4, !dbg !4721
  call void @convertViewVec2D_mask(%struct.View2D* %79, float* %80, i32 %81, i32 %82), !dbg !4722
  br label %if.end79, !dbg !4723

if.else77:                                        ; preds = %if.then69
  %83 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4724
  %view78 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %83, i32 0, i32 52, !dbg !4726
  %84 = load i8*, i8** %view78, align 8, !dbg !4726
  %85 = bitcast i8* %84 to %struct.View2D*, !dbg !4724
  %86 = load float*, float** %r_vec.addr, align 8, !dbg !4727
  %87 = load i32, i32* %dx.addr, align 4, !dbg !4728
  %88 = load i32, i32* %dy.addr, align 4, !dbg !4729
  call void @convertViewVec2D(%struct.View2D* %85, float* %86, i32 %87, i32 %88), !dbg !4730
  br label %if.end79

if.end79:                                         ; preds = %if.else77, %if.then75
  %89 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4731
  %options80 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %89, i32 0, i32 4, !dbg !4733
  %90 = load i32, i32* %options80, align 8, !dbg !4733
  %and81 = and i32 %90, 64, !dbg !4734
  %tobool82 = icmp ne i32 %and81, 0, !dbg !4734
  br i1 %tobool82, label %if.then83, label %if.else87, !dbg !4735

if.then83:                                        ; preds = %if.end79
  %91 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4736
  %sa84 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %91, i32 0, i32 54, !dbg !4738
  %92 = load %struct.ScrArea*, %struct.ScrArea** %sa84, align 8, !dbg !4738
  %spacedata85 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %92, i32 0, i32 19, !dbg !4739
  %first86 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata85, i32 0, i32 0, !dbg !4740
  %93 = load i8*, i8** %first86, align 8, !dbg !4740
  %94 = bitcast i8* %93 to %struct.SpaceClip*, !dbg !4736
  call void @ED_space_clip_get_aspect_dimension_aware(%struct.SpaceClip* %94, float* %aspx70, float* %aspy71), !dbg !4741
  br label %if.end97, !dbg !4742

if.else87:                                        ; preds = %if.end79
  %95 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4743
  %options88 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %95, i32 0, i32 4, !dbg !4745
  %96 = load i32, i32* %options88, align 8, !dbg !4745
  %and89 = and i32 %96, 128, !dbg !4746
  %tobool90 = icmp ne i32 %and89, 0, !dbg !4746
  br i1 %tobool90, label %if.then91, label %if.else95, !dbg !4747

if.then91:                                        ; preds = %if.else87
  %97 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4748
  %sa92 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %97, i32 0, i32 54, !dbg !4750
  %98 = load %struct.ScrArea*, %struct.ScrArea** %sa92, align 8, !dbg !4750
  %spacedata93 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %98, i32 0, i32 19, !dbg !4751
  %first94 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata93, i32 0, i32 0, !dbg !4752
  %99 = load i8*, i8** %first94, align 8, !dbg !4752
  %100 = bitcast i8* %99 to %struct.SpaceClip*, !dbg !4748
  call void @ED_space_clip_get_aspect(%struct.SpaceClip* %100, float* %aspx70, float* %aspy71), !dbg !4753
  br label %if.end96, !dbg !4754

if.else95:                                        ; preds = %if.else87
  store float 1.000000e+00, float* %aspy71, align 4, !dbg !4755
  store float 1.000000e+00, float* %aspx70, align 4, !dbg !4757
  br label %if.end96

if.end96:                                         ; preds = %if.else95, %if.then91
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then83
  %101 = load float, float* %aspx70, align 4, !dbg !4758
  %102 = load float*, float** %r_vec.addr, align 8, !dbg !4759
  %arrayidx98 = getelementptr inbounds float, float* %102, i64 0, !dbg !4759
  %103 = load float, float* %arrayidx98, align 4, !dbg !4760
  %mul99 = fmul float %103, %101, !dbg !4760
  store float %mul99, float* %arrayidx98, align 4, !dbg !4760
  %104 = load float, float* %aspy71, align 4, !dbg !4761
  %105 = load float*, float** %r_vec.addr, align 8, !dbg !4762
  %arrayidx100 = getelementptr inbounds float, float* %105, i64 1, !dbg !4762
  %106 = load float, float* %arrayidx100, align 4, !dbg !4763
  %mul101 = fmul float %106, %104, !dbg !4763
  store float %mul101, float* %arrayidx100, align 4, !dbg !4763
  br label %if.end103, !dbg !4764

if.else102:                                       ; preds = %if.else64
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.convertViewVec, i64 0, i64 0)), !dbg !4765
  %107 = load float*, float** %r_vec.addr, align 8, !dbg !4767
  call void @zero_v3(float* %107), !dbg !4768
  br label %if.end103

if.end103:                                        ; preds = %if.else102, %if.end97
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then62
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.then50
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.end37
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.end
  ret void, !dbg !4769
}

declare dso_local void @ED_view3d_win_to_delta(%struct.ARegion*, float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @convertViewVec2D_mask(%struct.View2D* %v2d, float* %r_vec, i32 %dx, i32 %dy) #0 !dbg !4770 {
entry:
  %v2d.addr = alloca %struct.View2D*, align 8
  %r_vec.addr = alloca float*, align 8
  %dx.addr = alloca i32, align 4
  %dy.addr = alloca i32, align 4
  %divx = alloca float, align 4
  %divy = alloca float, align 4
  %mulx = alloca float, align 4
  %muly = alloca float, align 4
  store %struct.View2D* %v2d, %struct.View2D** %v2d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.View2D** %v2d.addr, metadata !4773, metadata !DIExpression()), !dbg !4774
  store float* %r_vec, float** %r_vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_vec.addr, metadata !4775, metadata !DIExpression()), !dbg !4776
  store i32 %dx, i32* %dx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dx.addr, metadata !4777, metadata !DIExpression()), !dbg !4778
  store i32 %dy, i32* %dy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dy.addr, metadata !4779, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.declare(metadata float* %divx, metadata !4781, metadata !DIExpression()), !dbg !4782
  call void @llvm.dbg.declare(metadata float* %divy, metadata !4783, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.declare(metadata float* %mulx, metadata !4785, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.declare(metadata float* %muly, metadata !4787, metadata !DIExpression()), !dbg !4788
  %0 = load %struct.View2D*, %struct.View2D** %v2d.addr, align 8, !dbg !4789
  %mask = getelementptr inbounds %struct.View2D, %struct.View2D* %0, i32 0, i32 4, !dbg !4790
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %mask), !dbg !4791
  %conv = sitofp i32 %call to float, !dbg !4791
  store float %conv, float* %divx, align 4, !dbg !4792
  %1 = load %struct.View2D*, %struct.View2D** %v2d.addr, align 8, !dbg !4793
  %mask1 = getelementptr inbounds %struct.View2D, %struct.View2D* %1, i32 0, i32 4, !dbg !4794
  %call2 = call i32 @BLI_rcti_size_y(%struct.rcti* %mask1), !dbg !4795
  %conv3 = sitofp i32 %call2 to float, !dbg !4795
  store float %conv3, float* %divy, align 4, !dbg !4796
  %2 = load %struct.View2D*, %struct.View2D** %v2d.addr, align 8, !dbg !4797
  %cur = getelementptr inbounds %struct.View2D, %struct.View2D* %2, i32 0, i32 1, !dbg !4798
  %call4 = call float @BLI_rctf_size_x(%struct.rctf* %cur), !dbg !4799
  store float %call4, float* %mulx, align 4, !dbg !4800
  %3 = load %struct.View2D*, %struct.View2D** %v2d.addr, align 8, !dbg !4801
  %cur5 = getelementptr inbounds %struct.View2D, %struct.View2D* %3, i32 0, i32 1, !dbg !4802
  %call6 = call float @BLI_rctf_size_y(%struct.rctf* %cur5), !dbg !4803
  store float %call6, float* %muly, align 4, !dbg !4804
  %4 = load float, float* %mulx, align 4, !dbg !4805
  %5 = load float, float* %divx, align 4, !dbg !4807
  %div = fdiv float %4, %5, !dbg !4808
  %6 = load float, float* %muly, align 4, !dbg !4809
  %7 = load float, float* %divy, align 4, !dbg !4810
  %div7 = fdiv float %6, %7, !dbg !4811
  %cmp = fcmp olt float %div, %div7, !dbg !4812
  br i1 %cmp, label %if.then, label %if.else, !dbg !4813

if.then:                                          ; preds = %entry
  %8 = load float, float* %divx, align 4, !dbg !4814
  store float %8, float* %divy, align 4, !dbg !4816
  %9 = load float, float* %mulx, align 4, !dbg !4817
  store float %9, float* %muly, align 4, !dbg !4818
  br label %if.end, !dbg !4819

if.else:                                          ; preds = %entry
  %10 = load float, float* %divy, align 4, !dbg !4820
  store float %10, float* %divx, align 4, !dbg !4822
  %11 = load float, float* %muly, align 4, !dbg !4823
  store float %11, float* %mulx, align 4, !dbg !4824
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load float, float* %mulx, align 4, !dbg !4825
  %13 = load i32, i32* %dx.addr, align 4, !dbg !4826
  %conv9 = sitofp i32 %13 to float, !dbg !4826
  %mul = fmul float %12, %conv9, !dbg !4827
  %14 = load float, float* %divx, align 4, !dbg !4828
  %div10 = fdiv float %mul, %14, !dbg !4829
  %15 = load float*, float** %r_vec.addr, align 8, !dbg !4830
  %arrayidx = getelementptr inbounds float, float* %15, i64 0, !dbg !4830
  store float %div10, float* %arrayidx, align 4, !dbg !4831
  %16 = load float, float* %muly, align 4, !dbg !4832
  %17 = load i32, i32* %dy.addr, align 4, !dbg !4833
  %conv11 = sitofp i32 %17 to float, !dbg !4833
  %mul12 = fmul float %16, %conv11, !dbg !4834
  %18 = load float, float* %divy, align 4, !dbg !4835
  %div13 = fdiv float %mul12, %18, !dbg !4836
  %19 = load float*, float** %r_vec.addr, align 8, !dbg !4837
  %arrayidx14 = getelementptr inbounds float, float* %19, i64 1, !dbg !4837
  store float %div13, float* %arrayidx14, align 4, !dbg !4838
  %20 = load float*, float** %r_vec.addr, align 8, !dbg !4839
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 2, !dbg !4839
  store float 0.000000e+00, float* %arrayidx15, align 4, !dbg !4840
  ret void, !dbg !4841
}

declare dso_local void @ED_space_image_get_aspect(%struct.SpaceImage*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @convertViewVec2D(%struct.View2D* %v2d, float* %r_vec, i32 %dx, i32 %dy) #0 !dbg !4842 {
entry:
  %v2d.addr = alloca %struct.View2D*, align 8
  %r_vec.addr = alloca float*, align 8
  %dx.addr = alloca i32, align 4
  %dy.addr = alloca i32, align 4
  %divx = alloca float, align 4
  %divy = alloca float, align 4
  store %struct.View2D* %v2d, %struct.View2D** %v2d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.View2D** %v2d.addr, metadata !4843, metadata !DIExpression()), !dbg !4844
  store float* %r_vec, float** %r_vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_vec.addr, metadata !4845, metadata !DIExpression()), !dbg !4846
  store i32 %dx, i32* %dx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dx.addr, metadata !4847, metadata !DIExpression()), !dbg !4848
  store i32 %dy, i32* %dy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dy.addr, metadata !4849, metadata !DIExpression()), !dbg !4850
  call void @llvm.dbg.declare(metadata float* %divx, metadata !4851, metadata !DIExpression()), !dbg !4852
  call void @llvm.dbg.declare(metadata float* %divy, metadata !4853, metadata !DIExpression()), !dbg !4854
  %0 = load %struct.View2D*, %struct.View2D** %v2d.addr, align 8, !dbg !4855
  %mask = getelementptr inbounds %struct.View2D, %struct.View2D* %0, i32 0, i32 4, !dbg !4856
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %mask), !dbg !4857
  %conv = sitofp i32 %call to float, !dbg !4857
  store float %conv, float* %divx, align 4, !dbg !4858
  %1 = load %struct.View2D*, %struct.View2D** %v2d.addr, align 8, !dbg !4859
  %mask1 = getelementptr inbounds %struct.View2D, %struct.View2D* %1, i32 0, i32 4, !dbg !4860
  %call2 = call i32 @BLI_rcti_size_y(%struct.rcti* %mask1), !dbg !4861
  %conv3 = sitofp i32 %call2 to float, !dbg !4861
  store float %conv3, float* %divy, align 4, !dbg !4862
  %2 = load %struct.View2D*, %struct.View2D** %v2d.addr, align 8, !dbg !4863
  %cur = getelementptr inbounds %struct.View2D, %struct.View2D* %2, i32 0, i32 1, !dbg !4864
  %call4 = call float @BLI_rctf_size_x(%struct.rctf* %cur), !dbg !4865
  %3 = load i32, i32* %dx.addr, align 4, !dbg !4866
  %conv5 = sitofp i32 %3 to float, !dbg !4866
  %mul = fmul float %call4, %conv5, !dbg !4867
  %4 = load float, float* %divx, align 4, !dbg !4868
  %div = fdiv float %mul, %4, !dbg !4869
  %5 = load float*, float** %r_vec.addr, align 8, !dbg !4870
  %arrayidx = getelementptr inbounds float, float* %5, i64 0, !dbg !4870
  store float %div, float* %arrayidx, align 4, !dbg !4871
  %6 = load %struct.View2D*, %struct.View2D** %v2d.addr, align 8, !dbg !4872
  %cur6 = getelementptr inbounds %struct.View2D, %struct.View2D* %6, i32 0, i32 1, !dbg !4873
  %call7 = call float @BLI_rctf_size_y(%struct.rctf* %cur6), !dbg !4874
  %7 = load i32, i32* %dy.addr, align 4, !dbg !4875
  %conv8 = sitofp i32 %7 to float, !dbg !4875
  %mul9 = fmul float %call7, %conv8, !dbg !4876
  %8 = load float, float* %divy, align 4, !dbg !4877
  %div10 = fdiv float %mul9, %8, !dbg !4878
  %9 = load float*, float** %r_vec.addr, align 8, !dbg !4879
  %arrayidx11 = getelementptr inbounds float, float* %9, i64 1, !dbg !4879
  store float %div10, float* %arrayidx11, align 4, !dbg !4880
  %10 = load float*, float** %r_vec.addr, align 8, !dbg !4881
  %arrayidx12 = getelementptr inbounds float, float* %10, i64 2, !dbg !4881
  store float 0.000000e+00, float* %arrayidx12, align 4, !dbg !4882
  ret void, !dbg !4883
}

declare dso_local void @ED_space_image_get_uv_aspect(%struct.SpaceImage*, float*, float*) #2

declare dso_local void @ED_space_clip_get_aspect_dimension_aware(%struct.SpaceClip*, float*, float*) #2

declare dso_local void @ED_space_clip_get_aspect(%struct.SpaceClip*, float*, float*) #2

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !4884 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4888, metadata !DIExpression()), !dbg !4889
  %0 = load float*, float** %r.addr, align 8, !dbg !4890
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4890
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !4891
  %1 = load float*, float** %r.addr, align 8, !dbg !4892
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !4892
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !4893
  %2 = load float*, float** %r.addr, align 8, !dbg !4894
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !4894
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !4895
  ret void, !dbg !4896
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @projectIntViewEx(%struct.TransInfo* %t, float* %vec, i32* %adr, i32 %flag) #0 !dbg !4897 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %vec.addr = alloca float*, align 8
  %adr.addr = alloca i32*, align 8
  %flag.addr = alloca i32, align 4
  %sima = alloca %struct.SpaceImage*, align 8
  %aspx = alloca float, align 4
  %aspy = alloca float, align 4
  %v = alloca [2 x float], align 4
  %aspx46 = alloca float, align 4
  %aspy47 = alloca float, align 4
  %v48 = alloca [2 x float], align 4
  %out = alloca [2 x i32], align 4
  %out89 = alloca [2 x i32], align 4
  %out105 = alloca [2 x i32], align 4
  %sc = alloca %struct.SpaceClip*, align 8
  %clip = alloca %struct.MovieClip*, align 8
  %aspx131 = alloca float, align 4
  %aspy132 = alloca float, align 4
  %v133 = alloca [2 x float], align 4
  %v162 = alloca [2 x float], align 4
  %aspx163 = alloca float, align 4
  %aspy164 = alloca float, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !4903, metadata !DIExpression()), !dbg !4904
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !4905, metadata !DIExpression()), !dbg !4906
  store i32* %adr, i32** %adr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %adr.addr, metadata !4907, metadata !DIExpression()), !dbg !4908
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !4909, metadata !DIExpression()), !dbg !4910
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4911
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 33, !dbg !4913
  %1 = load i8, i8* %spacetype, align 8, !dbg !4913
  %conv = zext i8 %1 to i32, !dbg !4911
  %cmp = icmp eq i32 %conv, 1, !dbg !4914
  br i1 %cmp, label %if.then, label %if.else, !dbg !4915

if.then:                                          ; preds = %entry
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4916
  %ar = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 55, !dbg !4919
  %3 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4919
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %3, i32 0, i32 8, !dbg !4920
  %4 = load i16, i16* %regiontype, align 2, !dbg !4920
  %conv2 = sext i16 %4 to i32, !dbg !4916
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !4921
  br i1 %cmp3, label %if.then5, label %if.end11, !dbg !4922

if.then5:                                         ; preds = %if.then
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4923
  %ar6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 55, !dbg !4926
  %6 = load %struct.ARegion*, %struct.ARegion** %ar6, align 8, !dbg !4926
  %7 = load float*, float** %vec.addr, align 8, !dbg !4927
  %8 = load i32*, i32** %adr.addr, align 8, !dbg !4928
  %9 = load i32, i32* %flag.addr, align 4, !dbg !4929
  %call = call i32 @ED_view3d_project_int_global(%struct.ARegion* %6, float* %7, i32* %8, i32 %9), !dbg !4930
  %cmp7 = icmp ne i32 %call, 0, !dbg !4931
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !4932

if.then9:                                         ; preds = %if.then5
  %10 = load i32*, i32** %adr.addr, align 8, !dbg !4933
  %arrayidx = getelementptr inbounds i32, i32* %10, i64 0, !dbg !4933
  store i32 2140000000, i32* %arrayidx, align 4, !dbg !4935
  %11 = load i32*, i32** %adr.addr, align 8, !dbg !4936
  %arrayidx10 = getelementptr inbounds i32, i32* %11, i64 1, !dbg !4936
  store i32 2140000000, i32* %arrayidx10, align 4, !dbg !4937
  br label %if.end, !dbg !4938

if.end:                                           ; preds = %if.then9, %if.then5
  br label %if.end11, !dbg !4939

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end198, !dbg !4940

if.else:                                          ; preds = %entry
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4941
  %spacetype12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 33, !dbg !4943
  %13 = load i8, i8* %spacetype12, align 8, !dbg !4943
  %conv13 = zext i8 %13 to i32, !dbg !4941
  %cmp14 = icmp eq i32 %conv13, 6, !dbg !4944
  br i1 %cmp14, label %if.then16, label %if.else64, !dbg !4945

if.then16:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !4946, metadata !DIExpression()), !dbg !4948
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4949
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 54, !dbg !4950
  %15 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4950
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %15, i32 0, i32 19, !dbg !4951
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !4952
  %16 = load i8*, i8** %first, align 8, !dbg !4952
  %17 = bitcast i8* %16 to %struct.SpaceImage*, !dbg !4949
  store %struct.SpaceImage* %17, %struct.SpaceImage** %sima, align 8, !dbg !4948
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4953
  %options = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 4, !dbg !4955
  %19 = load i32, i32* %options, align 8, !dbg !4955
  %and = and i32 %19, 128, !dbg !4956
  %tobool = icmp ne i32 %and, 0, !dbg !4956
  br i1 %tobool, label %if.then17, label %if.else34, !dbg !4957

if.then17:                                        ; preds = %if.then16
  call void @llvm.dbg.declare(metadata float* %aspx, metadata !4958, metadata !DIExpression()), !dbg !4960
  call void @llvm.dbg.declare(metadata float* %aspy, metadata !4961, metadata !DIExpression()), !dbg !4962
  call void @llvm.dbg.declare(metadata [2 x float]* %v, metadata !4963, metadata !DIExpression()), !dbg !4964
  %20 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !4965
  call void @ED_space_image_get_aspect(%struct.SpaceImage* %20, float* %aspx, float* %aspy), !dbg !4966
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %v, i64 0, i64 0, !dbg !4967
  %21 = load float*, float** %vec.addr, align 8, !dbg !4968
  call void @copy_v2_v2(float* %arraydecay, float* %21), !dbg !4969
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %v, i64 0, i64 0, !dbg !4970
  %22 = load float, float* %arrayidx18, align 4, !dbg !4970
  %23 = load float, float* %aspx, align 4, !dbg !4971
  %div = fdiv float %22, %23, !dbg !4972
  %arrayidx19 = getelementptr inbounds [2 x float], [2 x float]* %v, i64 0, i64 0, !dbg !4973
  store float %div, float* %arrayidx19, align 4, !dbg !4974
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %v, i64 0, i64 1, !dbg !4975
  %24 = load float, float* %arrayidx20, align 4, !dbg !4975
  %25 = load float, float* %aspy, align 4, !dbg !4976
  %div21 = fdiv float %24, %25, !dbg !4977
  %arrayidx22 = getelementptr inbounds [2 x float], [2 x float]* %v, i64 0, i64 1, !dbg !4978
  store float %div21, float* %arrayidx22, align 4, !dbg !4979
  %26 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !4980
  %image = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %26, i32 0, i32 5, !dbg !4981
  %27 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !4981
  %28 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !4982
  %iuser = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %28, i32 0, i32 6, !dbg !4983
  %arraydecay23 = getelementptr inbounds [2 x float], [2 x float]* %v, i64 0, i64 0, !dbg !4984
  %arraydecay24 = getelementptr inbounds [2 x float], [2 x float]* %v, i64 0, i64 0, !dbg !4985
  call void @BKE_mask_coord_to_image(%struct.Image* %27, %struct.ImageUser* %iuser, float* %arraydecay23, float* %arraydecay24), !dbg !4986
  %29 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !4987
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !4988
  %ar25 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %30, i32 0, i32 55, !dbg !4989
  %31 = load %struct.ARegion*, %struct.ARegion** %ar25, align 8, !dbg !4989
  %arraydecay26 = getelementptr inbounds [2 x float], [2 x float]* %v, i64 0, i64 0, !dbg !4990
  %arraydecay27 = getelementptr inbounds [2 x float], [2 x float]* %v, i64 0, i64 0, !dbg !4991
  call void @ED_image_point_pos__reverse(%struct.SpaceImage* %29, %struct.ARegion* %31, float* %arraydecay26, float* %arraydecay27), !dbg !4992
  %arrayidx28 = getelementptr inbounds [2 x float], [2 x float]* %v, i64 0, i64 0, !dbg !4993
  %32 = load float, float* %arrayidx28, align 4, !dbg !4993
  %conv29 = fptosi float %32 to i32, !dbg !4993
  %33 = load i32*, i32** %adr.addr, align 8, !dbg !4994
  %arrayidx30 = getelementptr inbounds i32, i32* %33, i64 0, !dbg !4994
  store i32 %conv29, i32* %arrayidx30, align 4, !dbg !4995
  %arrayidx31 = getelementptr inbounds [2 x float], [2 x float]* %v, i64 0, i64 1, !dbg !4996
  %34 = load float, float* %arrayidx31, align 4, !dbg !4996
  %conv32 = fptosi float %34 to i32, !dbg !4996
  %35 = load i32*, i32** %adr.addr, align 8, !dbg !4997
  %arrayidx33 = getelementptr inbounds i32, i32* %35, i64 1, !dbg !4997
  store i32 %conv32, i32* %arrayidx33, align 4, !dbg !4998
  br label %if.end63, !dbg !4999

if.else34:                                        ; preds = %if.then16
  %36 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5000
  %options35 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %36, i32 0, i32 4, !dbg !5002
  %37 = load i32, i32* %options35, align 8, !dbg !5002
  %and36 = and i32 %37, 256, !dbg !5003
  %tobool37 = icmp ne i32 %and36, 0, !dbg !5003
  br i1 %tobool37, label %if.then38, label %if.else45, !dbg !5004

if.then38:                                        ; preds = %if.else34
  %38 = load float*, float** %vec.addr, align 8, !dbg !5005
  %arrayidx39 = getelementptr inbounds float, float* %38, i64 0, !dbg !5005
  %39 = load float, float* %arrayidx39, align 4, !dbg !5005
  %conv40 = fptosi float %39 to i32, !dbg !5005
  %40 = load i32*, i32** %adr.addr, align 8, !dbg !5007
  %arrayidx41 = getelementptr inbounds i32, i32* %40, i64 0, !dbg !5007
  store i32 %conv40, i32* %arrayidx41, align 4, !dbg !5008
  %41 = load float*, float** %vec.addr, align 8, !dbg !5009
  %arrayidx42 = getelementptr inbounds float, float* %41, i64 1, !dbg !5009
  %42 = load float, float* %arrayidx42, align 4, !dbg !5009
  %conv43 = fptosi float %42 to i32, !dbg !5009
  %43 = load i32*, i32** %adr.addr, align 8, !dbg !5010
  %arrayidx44 = getelementptr inbounds i32, i32* %43, i64 1, !dbg !5010
  store i32 %conv43, i32* %arrayidx44, align 4, !dbg !5011
  br label %if.end62, !dbg !5012

if.else45:                                        ; preds = %if.else34
  call void @llvm.dbg.declare(metadata float* %aspx46, metadata !5013, metadata !DIExpression()), !dbg !5015
  call void @llvm.dbg.declare(metadata float* %aspy47, metadata !5016, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.declare(metadata [2 x float]* %v48, metadata !5018, metadata !DIExpression()), !dbg !5019
  %44 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5020
  %sa49 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %44, i32 0, i32 54, !dbg !5021
  %45 = load %struct.ScrArea*, %struct.ScrArea** %sa49, align 8, !dbg !5021
  %spacedata50 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %45, i32 0, i32 19, !dbg !5022
  %first51 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata50, i32 0, i32 0, !dbg !5023
  %46 = load i8*, i8** %first51, align 8, !dbg !5023
  %47 = bitcast i8* %46 to %struct.SpaceImage*, !dbg !5020
  call void @ED_space_image_get_uv_aspect(%struct.SpaceImage* %47, float* %aspx46, float* %aspy47), !dbg !5024
  %48 = load float*, float** %vec.addr, align 8, !dbg !5025
  %arrayidx52 = getelementptr inbounds float, float* %48, i64 0, !dbg !5025
  %49 = load float, float* %arrayidx52, align 4, !dbg !5025
  %50 = load float, float* %aspx46, align 4, !dbg !5026
  %div53 = fdiv float %49, %50, !dbg !5027
  %arrayidx54 = getelementptr inbounds [2 x float], [2 x float]* %v48, i64 0, i64 0, !dbg !5028
  store float %div53, float* %arrayidx54, align 4, !dbg !5029
  %51 = load float*, float** %vec.addr, align 8, !dbg !5030
  %arrayidx55 = getelementptr inbounds float, float* %51, i64 1, !dbg !5030
  %52 = load float, float* %arrayidx55, align 4, !dbg !5030
  %53 = load float, float* %aspy47, align 4, !dbg !5031
  %div56 = fdiv float %52, %53, !dbg !5032
  %arrayidx57 = getelementptr inbounds [2 x float], [2 x float]* %v48, i64 0, i64 1, !dbg !5033
  store float %div56, float* %arrayidx57, align 4, !dbg !5034
  %54 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5035
  %view = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %54, i32 0, i32 52, !dbg !5036
  %55 = load i8*, i8** %view, align 8, !dbg !5036
  %56 = bitcast i8* %55 to %struct.View2D*, !dbg !5035
  %arrayidx58 = getelementptr inbounds [2 x float], [2 x float]* %v48, i64 0, i64 0, !dbg !5037
  %57 = load float, float* %arrayidx58, align 4, !dbg !5037
  %arrayidx59 = getelementptr inbounds [2 x float], [2 x float]* %v48, i64 0, i64 1, !dbg !5038
  %58 = load float, float* %arrayidx59, align 4, !dbg !5038
  %59 = load i32*, i32** %adr.addr, align 8, !dbg !5039
  %arrayidx60 = getelementptr inbounds i32, i32* %59, i64 0, !dbg !5039
  %60 = load i32*, i32** %adr.addr, align 8, !dbg !5040
  %arrayidx61 = getelementptr inbounds i32, i32* %60, i64 1, !dbg !5040
  call void @UI_view2d_view_to_region(%struct.View2D* %56, float %57, float %58, i32* %arrayidx60, i32* %arrayidx61), !dbg !5041
  br label %if.end62

if.end62:                                         ; preds = %if.else45, %if.then38
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then17
  br label %if.end197, !dbg !5042

if.else64:                                        ; preds = %if.else
  %61 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5043
  %spacetype65 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %61, i32 0, i32 33, !dbg !5045
  %62 = load i8, i8* %spacetype65, align 8, !dbg !5045
  %conv66 = zext i8 %62 to i32, !dbg !5043
  %cmp67 = icmp eq i32 %conv66, 12, !dbg !5046
  br i1 %cmp67, label %if.then69, label %if.else79, !dbg !5047

if.then69:                                        ; preds = %if.else64
  call void @llvm.dbg.declare(metadata [2 x i32]* %out, metadata !5048, metadata !DIExpression()), !dbg !5050
  %63 = bitcast [2 x i32]* %out to i8*, !dbg !5050
  call void @llvm.memset.p0i8.i64(i8* align 4 %63, i8 0, i64 8, i1 false), !dbg !5050
  %64 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5051
  %view70 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %64, i32 0, i32 52, !dbg !5053
  %65 = load i8*, i8** %view70, align 8, !dbg !5053
  %66 = bitcast i8* %65 to %struct.View2D*, !dbg !5054
  %67 = load float*, float** %vec.addr, align 8, !dbg !5055
  %arrayidx71 = getelementptr inbounds float, float* %67, i64 0, !dbg !5055
  %68 = load float, float* %arrayidx71, align 4, !dbg !5055
  %69 = load float*, float** %vec.addr, align 8, !dbg !5056
  %arrayidx72 = getelementptr inbounds float, float* %69, i64 1, !dbg !5056
  %70 = load float, float* %arrayidx72, align 4, !dbg !5056
  %arrayidx73 = getelementptr inbounds [2 x i32], [2 x i32]* %out, i64 0, i64 0, !dbg !5057
  %arrayidx74 = getelementptr inbounds [2 x i32], [2 x i32]* %out, i64 0, i64 1, !dbg !5058
  call void @UI_view2d_view_to_region(%struct.View2D* %66, float %68, float %70, i32* %arrayidx73, i32* %arrayidx74), !dbg !5059
  %arrayidx75 = getelementptr inbounds [2 x i32], [2 x i32]* %out, i64 0, i64 0, !dbg !5060
  %71 = load i32, i32* %arrayidx75, align 4, !dbg !5060
  %72 = load i32*, i32** %adr.addr, align 8, !dbg !5061
  %arrayidx76 = getelementptr inbounds i32, i32* %72, i64 0, !dbg !5061
  store i32 %71, i32* %arrayidx76, align 4, !dbg !5062
  %arrayidx77 = getelementptr inbounds [2 x i32], [2 x i32]* %out, i64 0, i64 1, !dbg !5063
  %73 = load i32, i32* %arrayidx77, align 4, !dbg !5063
  %74 = load i32*, i32** %adr.addr, align 8, !dbg !5064
  %arrayidx78 = getelementptr inbounds i32, i32* %74, i64 1, !dbg !5064
  store i32 %73, i32* %arrayidx78, align 4, !dbg !5065
  br label %if.end196, !dbg !5066

if.else79:                                        ; preds = %if.else64
  %75 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5067
  %spacetype80 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %75, i32 0, i32 33, !dbg !5067
  %76 = load i8, i8* %spacetype80, align 8, !dbg !5067
  %conv81 = zext i8 %76 to i32, !dbg !5067
  %cmp82 = icmp eq i32 %conv81, 2, !dbg !5067
  br i1 %cmp82, label %if.then88, label %lor.lhs.false, !dbg !5067

lor.lhs.false:                                    ; preds = %if.else79
  %77 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5067
  %spacetype84 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %77, i32 0, i32 33, !dbg !5067
  %78 = load i8, i8* %spacetype84, align 8, !dbg !5067
  %conv85 = zext i8 %78 to i32, !dbg !5067
  %cmp86 = icmp eq i32 %conv85, 13, !dbg !5067
  br i1 %cmp86, label %if.then88, label %if.else99, !dbg !5069

if.then88:                                        ; preds = %lor.lhs.false, %if.else79
  call void @llvm.dbg.declare(metadata [2 x i32]* %out89, metadata !5070, metadata !DIExpression()), !dbg !5072
  %79 = bitcast [2 x i32]* %out89 to i8*, !dbg !5072
  call void @llvm.memset.p0i8.i64(i8* align 4 %79, i8 0, i64 8, i1 false), !dbg !5072
  %80 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5073
  %view90 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %80, i32 0, i32 52, !dbg !5074
  %81 = load i8*, i8** %view90, align 8, !dbg !5074
  %82 = bitcast i8* %81 to %struct.View2D*, !dbg !5075
  %83 = load float*, float** %vec.addr, align 8, !dbg !5076
  %arrayidx91 = getelementptr inbounds float, float* %83, i64 0, !dbg !5076
  %84 = load float, float* %arrayidx91, align 4, !dbg !5076
  %85 = load float*, float** %vec.addr, align 8, !dbg !5077
  %arrayidx92 = getelementptr inbounds float, float* %85, i64 1, !dbg !5077
  %86 = load float, float* %arrayidx92, align 4, !dbg !5077
  %arrayidx93 = getelementptr inbounds [2 x i32], [2 x i32]* %out89, i64 0, i64 0, !dbg !5078
  %arrayidx94 = getelementptr inbounds [2 x i32], [2 x i32]* %out89, i64 0, i64 1, !dbg !5079
  call void @UI_view2d_view_to_region(%struct.View2D* %82, float %84, float %86, i32* %arrayidx93, i32* %arrayidx94), !dbg !5080
  %arrayidx95 = getelementptr inbounds [2 x i32], [2 x i32]* %out89, i64 0, i64 0, !dbg !5081
  %87 = load i32, i32* %arrayidx95, align 4, !dbg !5081
  %88 = load i32*, i32** %adr.addr, align 8, !dbg !5082
  %arrayidx96 = getelementptr inbounds i32, i32* %88, i64 0, !dbg !5082
  store i32 %87, i32* %arrayidx96, align 4, !dbg !5083
  %arrayidx97 = getelementptr inbounds [2 x i32], [2 x i32]* %out89, i64 0, i64 1, !dbg !5084
  %89 = load i32, i32* %arrayidx97, align 4, !dbg !5084
  %90 = load i32*, i32** %adr.addr, align 8, !dbg !5085
  %arrayidx98 = getelementptr inbounds i32, i32* %90, i64 1, !dbg !5085
  store i32 %89, i32* %arrayidx98, align 4, !dbg !5086
  br label %if.end195, !dbg !5087

if.else99:                                        ; preds = %lor.lhs.false
  %91 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5088
  %spacetype100 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %91, i32 0, i32 33, !dbg !5090
  %92 = load i8, i8* %spacetype100, align 8, !dbg !5090
  %conv101 = zext i8 %92 to i32, !dbg !5088
  %cmp102 = icmp eq i32 %conv101, 8, !dbg !5091
  br i1 %cmp102, label %if.then104, label %if.else115, !dbg !5092

if.then104:                                       ; preds = %if.else99
  call void @llvm.dbg.declare(metadata [2 x i32]* %out105, metadata !5093, metadata !DIExpression()), !dbg !5095
  %93 = bitcast [2 x i32]* %out105 to i8*, !dbg !5095
  call void @llvm.memset.p0i8.i64(i8* align 4 %93, i8 0, i64 8, i1 false), !dbg !5095
  %94 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5096
  %view106 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %94, i32 0, i32 52, !dbg !5097
  %95 = load i8*, i8** %view106, align 8, !dbg !5097
  %96 = bitcast i8* %95 to %struct.View2D*, !dbg !5098
  %97 = load float*, float** %vec.addr, align 8, !dbg !5099
  %arrayidx107 = getelementptr inbounds float, float* %97, i64 0, !dbg !5099
  %98 = load float, float* %arrayidx107, align 4, !dbg !5099
  %99 = load float*, float** %vec.addr, align 8, !dbg !5100
  %arrayidx108 = getelementptr inbounds float, float* %99, i64 1, !dbg !5100
  %100 = load float, float* %arrayidx108, align 4, !dbg !5100
  %arrayidx109 = getelementptr inbounds [2 x i32], [2 x i32]* %out105, i64 0, i64 0, !dbg !5101
  %arrayidx110 = getelementptr inbounds [2 x i32], [2 x i32]* %out105, i64 0, i64 1, !dbg !5102
  call void @UI_view2d_view_to_region(%struct.View2D* %96, float %98, float %100, i32* %arrayidx109, i32* %arrayidx110), !dbg !5103
  %arrayidx111 = getelementptr inbounds [2 x i32], [2 x i32]* %out105, i64 0, i64 0, !dbg !5104
  %101 = load i32, i32* %arrayidx111, align 4, !dbg !5104
  %102 = load i32*, i32** %adr.addr, align 8, !dbg !5105
  %arrayidx112 = getelementptr inbounds i32, i32* %102, i64 0, !dbg !5105
  store i32 %101, i32* %arrayidx112, align 4, !dbg !5106
  %arrayidx113 = getelementptr inbounds [2 x i32], [2 x i32]* %out105, i64 0, i64 1, !dbg !5107
  %103 = load i32, i32* %arrayidx113, align 4, !dbg !5107
  %104 = load i32*, i32** %adr.addr, align 8, !dbg !5108
  %arrayidx114 = getelementptr inbounds i32, i32* %104, i64 1, !dbg !5108
  store i32 %103, i32* %arrayidx114, align 4, !dbg !5109
  br label %if.end194, !dbg !5110

if.else115:                                       ; preds = %if.else99
  %105 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5111
  %spacetype116 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %105, i32 0, i32 33, !dbg !5113
  %106 = load i8, i8* %spacetype116, align 8, !dbg !5113
  %conv117 = zext i8 %106 to i32, !dbg !5111
  %cmp118 = icmp eq i32 %conv117, 20, !dbg !5114
  br i1 %cmp118, label %if.then120, label %if.else181, !dbg !5115

if.then120:                                       ; preds = %if.else115
  call void @llvm.dbg.declare(metadata %struct.SpaceClip** %sc, metadata !5116, metadata !DIExpression()), !dbg !5118
  %107 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5119
  %sa121 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %107, i32 0, i32 54, !dbg !5120
  %108 = load %struct.ScrArea*, %struct.ScrArea** %sa121, align 8, !dbg !5120
  %spacedata122 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %108, i32 0, i32 19, !dbg !5121
  %first123 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata122, i32 0, i32 0, !dbg !5122
  %109 = load i8*, i8** %first123, align 8, !dbg !5122
  %110 = bitcast i8* %109 to %struct.SpaceClip*, !dbg !5119
  store %struct.SpaceClip* %110, %struct.SpaceClip** %sc, align 8, !dbg !5118
  %111 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5123
  %options124 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %111, i32 0, i32 4, !dbg !5125
  %112 = load i32, i32* %options124, align 8, !dbg !5125
  %and125 = and i32 %112, 128, !dbg !5126
  %tobool126 = icmp ne i32 %and125, 0, !dbg !5126
  br i1 %tobool126, label %if.then127, label %if.else157, !dbg !5127

if.then127:                                       ; preds = %if.then120
  call void @llvm.dbg.declare(metadata %struct.MovieClip** %clip, metadata !5128, metadata !DIExpression()), !dbg !5132
  %113 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !5133
  %call128 = call %struct.MovieClip* @ED_space_clip_get_clip(%struct.SpaceClip* %113), !dbg !5134
  store %struct.MovieClip* %call128, %struct.MovieClip** %clip, align 8, !dbg !5132
  %114 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !5135
  %tobool129 = icmp ne %struct.MovieClip* %114, null, !dbg !5135
  br i1 %tobool129, label %if.then130, label %if.else153, !dbg !5137

if.then130:                                       ; preds = %if.then127
  call void @llvm.dbg.declare(metadata float* %aspx131, metadata !5138, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.declare(metadata float* %aspy132, metadata !5141, metadata !DIExpression()), !dbg !5142
  call void @llvm.dbg.declare(metadata [2 x float]* %v133, metadata !5143, metadata !DIExpression()), !dbg !5144
  %115 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !5145
  call void @ED_space_clip_get_aspect(%struct.SpaceClip* %115, float* %aspx131, float* %aspy132), !dbg !5146
  %arraydecay134 = getelementptr inbounds [2 x float], [2 x float]* %v133, i64 0, i64 0, !dbg !5147
  %116 = load float*, float** %vec.addr, align 8, !dbg !5148
  call void @copy_v2_v2(float* %arraydecay134, float* %116), !dbg !5149
  %arrayidx135 = getelementptr inbounds [2 x float], [2 x float]* %v133, i64 0, i64 0, !dbg !5150
  %117 = load float, float* %arrayidx135, align 4, !dbg !5150
  %118 = load float, float* %aspx131, align 4, !dbg !5151
  %div136 = fdiv float %117, %118, !dbg !5152
  %arrayidx137 = getelementptr inbounds [2 x float], [2 x float]* %v133, i64 0, i64 0, !dbg !5153
  store float %div136, float* %arrayidx137, align 4, !dbg !5154
  %arrayidx138 = getelementptr inbounds [2 x float], [2 x float]* %v133, i64 0, i64 1, !dbg !5155
  %119 = load float, float* %arrayidx138, align 4, !dbg !5155
  %120 = load float, float* %aspy132, align 4, !dbg !5156
  %div139 = fdiv float %119, %120, !dbg !5157
  %arrayidx140 = getelementptr inbounds [2 x float], [2 x float]* %v133, i64 0, i64 1, !dbg !5158
  store float %div139, float* %arrayidx140, align 4, !dbg !5159
  %121 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !5160
  %clip141 = getelementptr inbounds %struct.SpaceClip, %struct.SpaceClip* %121, i32 0, i32 10, !dbg !5161
  %122 = load %struct.MovieClip*, %struct.MovieClip** %clip141, align 8, !dbg !5161
  %123 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !5162
  %user = getelementptr inbounds %struct.SpaceClip, %struct.SpaceClip* %123, i32 0, i32 9, !dbg !5163
  %arraydecay142 = getelementptr inbounds [2 x float], [2 x float]* %v133, i64 0, i64 0, !dbg !5164
  %arraydecay143 = getelementptr inbounds [2 x float], [2 x float]* %v133, i64 0, i64 0, !dbg !5165
  call void @BKE_mask_coord_to_movieclip(%struct.MovieClip* %122, %struct.MovieClipUser* %user, float* %arraydecay142, float* %arraydecay143), !dbg !5166
  %124 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !5167
  %125 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5168
  %ar144 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %125, i32 0, i32 55, !dbg !5169
  %126 = load %struct.ARegion*, %struct.ARegion** %ar144, align 8, !dbg !5169
  %arraydecay145 = getelementptr inbounds [2 x float], [2 x float]* %v133, i64 0, i64 0, !dbg !5170
  %arraydecay146 = getelementptr inbounds [2 x float], [2 x float]* %v133, i64 0, i64 0, !dbg !5171
  call void @ED_clip_point_stable_pos__reverse(%struct.SpaceClip* %124, %struct.ARegion* %126, float* %arraydecay145, float* %arraydecay146), !dbg !5172
  %arrayidx147 = getelementptr inbounds [2 x float], [2 x float]* %v133, i64 0, i64 0, !dbg !5173
  %127 = load float, float* %arrayidx147, align 4, !dbg !5173
  %conv148 = fptosi float %127 to i32, !dbg !5173
  %128 = load i32*, i32** %adr.addr, align 8, !dbg !5174
  %arrayidx149 = getelementptr inbounds i32, i32* %128, i64 0, !dbg !5174
  store i32 %conv148, i32* %arrayidx149, align 4, !dbg !5175
  %arrayidx150 = getelementptr inbounds [2 x float], [2 x float]* %v133, i64 0, i64 1, !dbg !5176
  %129 = load float, float* %arrayidx150, align 4, !dbg !5176
  %conv151 = fptosi float %129 to i32, !dbg !5176
  %130 = load i32*, i32** %adr.addr, align 8, !dbg !5177
  %arrayidx152 = getelementptr inbounds i32, i32* %130, i64 1, !dbg !5177
  store i32 %conv151, i32* %arrayidx152, align 4, !dbg !5178
  br label %if.end156, !dbg !5179

if.else153:                                       ; preds = %if.then127
  %131 = load i32*, i32** %adr.addr, align 8, !dbg !5180
  %arrayidx154 = getelementptr inbounds i32, i32* %131, i64 0, !dbg !5180
  store i32 0, i32* %arrayidx154, align 4, !dbg !5182
  %132 = load i32*, i32** %adr.addr, align 8, !dbg !5183
  %arrayidx155 = getelementptr inbounds i32, i32* %132, i64 1, !dbg !5183
  store i32 0, i32* %arrayidx155, align 4, !dbg !5184
  br label %if.end156

if.end156:                                        ; preds = %if.else153, %if.then130
  br label %if.end180, !dbg !5185

if.else157:                                       ; preds = %if.then120
  %133 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5186
  %options158 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %133, i32 0, i32 4, !dbg !5188
  %134 = load i32, i32* %options158, align 8, !dbg !5188
  %and159 = and i32 %134, 64, !dbg !5189
  %tobool160 = icmp ne i32 %and159, 0, !dbg !5189
  br i1 %tobool160, label %if.then161, label %if.else178, !dbg !5190

if.then161:                                       ; preds = %if.else157
  call void @llvm.dbg.declare(metadata [2 x float]* %v162, metadata !5191, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.declare(metadata float* %aspx163, metadata !5194, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.declare(metadata float* %aspy164, metadata !5196, metadata !DIExpression()), !dbg !5197
  %arraydecay165 = getelementptr inbounds [2 x float], [2 x float]* %v162, i64 0, i64 0, !dbg !5198
  %135 = load float*, float** %vec.addr, align 8, !dbg !5199
  call void @copy_v2_v2(float* %arraydecay165, float* %135), !dbg !5200
  %136 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5201
  %sa166 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %136, i32 0, i32 54, !dbg !5202
  %137 = load %struct.ScrArea*, %struct.ScrArea** %sa166, align 8, !dbg !5202
  %spacedata167 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %137, i32 0, i32 19, !dbg !5203
  %first168 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata167, i32 0, i32 0, !dbg !5204
  %138 = load i8*, i8** %first168, align 8, !dbg !5204
  %139 = bitcast i8* %138 to %struct.SpaceClip*, !dbg !5201
  call void @ED_space_clip_get_aspect_dimension_aware(%struct.SpaceClip* %139, float* %aspx163, float* %aspy164), !dbg !5205
  %140 = load float, float* %aspx163, align 4, !dbg !5206
  %arrayidx169 = getelementptr inbounds [2 x float], [2 x float]* %v162, i64 0, i64 0, !dbg !5207
  %141 = load float, float* %arrayidx169, align 4, !dbg !5208
  %div170 = fdiv float %141, %140, !dbg !5208
  store float %div170, float* %arrayidx169, align 4, !dbg !5208
  %142 = load float, float* %aspy164, align 4, !dbg !5209
  %arrayidx171 = getelementptr inbounds [2 x float], [2 x float]* %v162, i64 0, i64 1, !dbg !5210
  %143 = load float, float* %arrayidx171, align 4, !dbg !5211
  %div172 = fdiv float %143, %142, !dbg !5211
  store float %div172, float* %arrayidx171, align 4, !dbg !5211
  %144 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5212
  %view173 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %144, i32 0, i32 52, !dbg !5213
  %145 = load i8*, i8** %view173, align 8, !dbg !5213
  %146 = bitcast i8* %145 to %struct.View2D*, !dbg !5212
  %arrayidx174 = getelementptr inbounds [2 x float], [2 x float]* %v162, i64 0, i64 0, !dbg !5214
  %147 = load float, float* %arrayidx174, align 4, !dbg !5214
  %arrayidx175 = getelementptr inbounds [2 x float], [2 x float]* %v162, i64 0, i64 1, !dbg !5215
  %148 = load float, float* %arrayidx175, align 4, !dbg !5215
  %149 = load i32*, i32** %adr.addr, align 8, !dbg !5216
  %arrayidx176 = getelementptr inbounds i32, i32* %149, i64 0, !dbg !5216
  %150 = load i32*, i32** %adr.addr, align 8, !dbg !5217
  %arrayidx177 = getelementptr inbounds i32, i32* %150, i64 1, !dbg !5217
  call void @UI_view2d_view_to_region(%struct.View2D* %146, float %147, float %148, i32* %arrayidx176, i32* %arrayidx177), !dbg !5218
  br label %if.end179, !dbg !5219

if.else178:                                       ; preds = %if.else157
  br label %if.end179

if.end179:                                        ; preds = %if.else178, %if.then161
  br label %if.end180

if.end180:                                        ; preds = %if.end179, %if.end156
  br label %if.end193, !dbg !5220

if.else181:                                       ; preds = %if.else115
  %151 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5221
  %spacetype182 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %151, i32 0, i32 33, !dbg !5223
  %152 = load i8, i8* %spacetype182, align 8, !dbg !5223
  %conv183 = zext i8 %152 to i32, !dbg !5221
  %cmp184 = icmp eq i32 %conv183, 16, !dbg !5224
  br i1 %cmp184, label %if.then186, label %if.end192, !dbg !5225

if.then186:                                       ; preds = %if.else181
  %153 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5226
  %view187 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %153, i32 0, i32 52, !dbg !5228
  %154 = load i8*, i8** %view187, align 8, !dbg !5228
  %155 = bitcast i8* %154 to %struct.View2D*, !dbg !5229
  %156 = load float*, float** %vec.addr, align 8, !dbg !5230
  %arrayidx188 = getelementptr inbounds float, float* %156, i64 0, !dbg !5230
  %157 = load float, float* %arrayidx188, align 4, !dbg !5230
  %158 = load float*, float** %vec.addr, align 8, !dbg !5231
  %arrayidx189 = getelementptr inbounds float, float* %158, i64 1, !dbg !5231
  %159 = load float, float* %arrayidx189, align 4, !dbg !5231
  %160 = load i32*, i32** %adr.addr, align 8, !dbg !5232
  %arrayidx190 = getelementptr inbounds i32, i32* %160, i64 0, !dbg !5232
  %161 = load i32*, i32** %adr.addr, align 8, !dbg !5233
  %arrayidx191 = getelementptr inbounds i32, i32* %161, i64 1, !dbg !5233
  call void @UI_view2d_view_to_region(%struct.View2D* %155, float %157, float %159, i32* %arrayidx190, i32* %arrayidx191), !dbg !5234
  br label %if.end192, !dbg !5235

if.end192:                                        ; preds = %if.then186, %if.else181
  br label %if.end193

if.end193:                                        ; preds = %if.end192, %if.end180
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %if.then104
  br label %if.end195

if.end195:                                        ; preds = %if.end194, %if.then88
  br label %if.end196

if.end196:                                        ; preds = %if.end195, %if.then69
  br label %if.end197

if.end197:                                        ; preds = %if.end196, %if.end63
  br label %if.end198

if.end198:                                        ; preds = %if.end197, %if.end11
  ret void, !dbg !5236
}

declare dso_local i32 @ED_view3d_project_int_global(%struct.ARegion*, float*, i32*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !5237 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5240, metadata !DIExpression()), !dbg !5241
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5242, metadata !DIExpression()), !dbg !5243
  %0 = load float*, float** %a.addr, align 8, !dbg !5244
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5244
  %1 = load float, float* %arrayidx, align 4, !dbg !5244
  %2 = load float*, float** %r.addr, align 8, !dbg !5245
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5245
  store float %1, float* %arrayidx1, align 4, !dbg !5246
  %3 = load float*, float** %a.addr, align 8, !dbg !5247
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !5247
  %4 = load float, float* %arrayidx2, align 4, !dbg !5247
  %5 = load float*, float** %r.addr, align 8, !dbg !5248
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5248
  store float %4, float* %arrayidx3, align 4, !dbg !5249
  ret void, !dbg !5250
}

declare dso_local void @BKE_mask_coord_to_image(%struct.Image*, %struct.ImageUser*, float*, float*) #2

declare dso_local void @ED_image_point_pos__reverse(%struct.SpaceImage*, %struct.ARegion*, float*, float*) #2

declare dso_local void @UI_view2d_view_to_region(%struct.View2D*, float, float, i32*, i32*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local %struct.MovieClip* @ED_space_clip_get_clip(%struct.SpaceClip*) #2

declare dso_local void @BKE_mask_coord_to_movieclip(%struct.MovieClip*, %struct.MovieClipUser*, float*, float*) #2

declare dso_local void @ED_clip_point_stable_pos__reverse(%struct.SpaceClip*, %struct.ARegion*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @projectIntView(%struct.TransInfo* %t, float* %vec, i32* %adr) #0 !dbg !5251 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %vec.addr = alloca float*, align 8
  %adr.addr = alloca i32*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !5254, metadata !DIExpression()), !dbg !5255
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !5256, metadata !DIExpression()), !dbg !5257
  store i32* %adr, i32** %adr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %adr.addr, metadata !5258, metadata !DIExpression()), !dbg !5259
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5260
  %1 = load float*, float** %vec.addr, align 8, !dbg !5261
  %2 = load i32*, i32** %adr.addr, align 8, !dbg !5262
  call void @projectIntViewEx(%struct.TransInfo* %0, float* %1, i32* %2, i32 0), !dbg !5263
  ret void, !dbg !5264
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @projectFloatViewEx(%struct.TransInfo* %t, float* %vec, float* %adr, i32 %flag) #0 !dbg !5265 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %vec.addr = alloca float*, align 8
  %adr.addr = alloca float*, align 8
  %flag.addr = alloca i32, align 4
  %a = alloca [2 x i32], align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !5268, metadata !DIExpression()), !dbg !5269
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !5270, metadata !DIExpression()), !dbg !5271
  store float* %adr, float** %adr.addr, align 8
  call void @llvm.dbg.declare(metadata float** %adr.addr, metadata !5272, metadata !DIExpression()), !dbg !5273
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !5274, metadata !DIExpression()), !dbg !5275
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5276
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 33, !dbg !5277
  %1 = load i8, i8* %spacetype, align 8, !dbg !5277
  %conv = zext i8 %1 to i32, !dbg !5276
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
  ], !dbg !5278

sw.bb:                                            ; preds = %entry
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5279
  %options = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 4, !dbg !5283
  %3 = load i32, i32* %options, align 8, !dbg !5283
  %and = and i32 %3, 256, !dbg !5284
  %tobool = icmp ne i32 %and, 0, !dbg !5284
  br i1 %tobool, label %if.then, label %if.else, !dbg !5285

if.then:                                          ; preds = %sw.bb
  %4 = load float*, float** %vec.addr, align 8, !dbg !5286
  %arrayidx = getelementptr inbounds float, float* %4, i64 0, !dbg !5286
  %5 = load float, float* %arrayidx, align 4, !dbg !5286
  %6 = load float*, float** %adr.addr, align 8, !dbg !5288
  %arrayidx1 = getelementptr inbounds float, float* %6, i64 0, !dbg !5288
  store float %5, float* %arrayidx1, align 4, !dbg !5289
  %7 = load float*, float** %vec.addr, align 8, !dbg !5290
  %arrayidx2 = getelementptr inbounds float, float* %7, i64 1, !dbg !5290
  %8 = load float, float* %arrayidx2, align 4, !dbg !5290
  %9 = load float*, float** %adr.addr, align 8, !dbg !5291
  %arrayidx3 = getelementptr inbounds float, float* %9, i64 1, !dbg !5291
  store float %8, float* %arrayidx3, align 4, !dbg !5292
  br label %if.end21, !dbg !5293

if.else:                                          ; preds = %sw.bb
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5294
  %ar = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 55, !dbg !5296
  %11 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5296
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %11, i32 0, i32 8, !dbg !5297
  %12 = load i16, i16* %regiontype, align 2, !dbg !5297
  %conv4 = sext i16 %12 to i32, !dbg !5294
  %cmp = icmp eq i32 %conv4, 0, !dbg !5298
  br i1 %cmp, label %if.then6, label %if.end20, !dbg !5299

if.then6:                                         ; preds = %if.else
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5300
  %ar7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 55, !dbg !5303
  %14 = load %struct.ARegion*, %struct.ARegion** %ar7, align 8, !dbg !5303
  %15 = load float*, float** %vec.addr, align 8, !dbg !5304
  %16 = load float*, float** %adr.addr, align 8, !dbg !5305
  %17 = load i32, i32* %flag.addr, align 4, !dbg !5306
  %call = call i32 @ED_view3d_project_float_global(%struct.ARegion* %14, float* %15, float* %16, i32 %17), !dbg !5307
  %cmp8 = icmp ne i32 %call, 0, !dbg !5308
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !5309

if.then10:                                        ; preds = %if.then6
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5310
  %ar11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 55, !dbg !5312
  %19 = load %struct.ARegion*, %struct.ARegion** %ar11, align 8, !dbg !5312
  %winx = getelementptr inbounds %struct.ARegion, %struct.ARegion* %19, i32 0, i32 5, !dbg !5313
  %20 = load i16, i16* %winx, align 8, !dbg !5313
  %conv12 = sext i16 %20 to i32, !dbg !5310
  %conv13 = sitofp i32 %conv12 to float, !dbg !5310
  %div = fdiv float %conv13, 2.000000e+00, !dbg !5314
  %21 = load float*, float** %adr.addr, align 8, !dbg !5315
  %arrayidx14 = getelementptr inbounds float, float* %21, i64 0, !dbg !5315
  store float %div, float* %arrayidx14, align 4, !dbg !5316
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5317
  %ar15 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 55, !dbg !5318
  %23 = load %struct.ARegion*, %struct.ARegion** %ar15, align 8, !dbg !5318
  %winy = getelementptr inbounds %struct.ARegion, %struct.ARegion* %23, i32 0, i32 6, !dbg !5319
  %24 = load i16, i16* %winy, align 2, !dbg !5319
  %conv16 = sext i16 %24 to i32, !dbg !5317
  %conv17 = sitofp i32 %conv16 to float, !dbg !5317
  %div18 = fdiv float %conv17, 2.000000e+00, !dbg !5320
  %25 = load float*, float** %adr.addr, align 8, !dbg !5321
  %arrayidx19 = getelementptr inbounds float, float* %25, i64 1, !dbg !5321
  store float %div18, float* %arrayidx19, align 4, !dbg !5322
  br label %if.end, !dbg !5323

if.end:                                           ; preds = %if.then10, %if.then6
  br label %sw.epilog, !dbg !5324

if.end20:                                         ; preds = %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then
  br label %sw.epilog, !dbg !5325

sw.default:                                       ; preds = %entry
  call void @llvm.dbg.declare(metadata [2 x i32]* %a, metadata !5326, metadata !DIExpression()), !dbg !5328
  %26 = bitcast [2 x i32]* %a to i8*, !dbg !5328
  call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 8, i1 false), !dbg !5328
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5329
  %28 = load float*, float** %vec.addr, align 8, !dbg !5330
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %a, i64 0, i64 0, !dbg !5331
  call void @projectIntView(%struct.TransInfo* %27, float* %28, i32* %arraydecay), !dbg !5332
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %a, i64 0, i64 0, !dbg !5333
  %29 = load i32, i32* %arrayidx22, align 4, !dbg !5333
  %conv23 = sitofp i32 %29 to float, !dbg !5333
  %30 = load float*, float** %adr.addr, align 8, !dbg !5334
  %arrayidx24 = getelementptr inbounds float, float* %30, i64 0, !dbg !5334
  store float %conv23, float* %arrayidx24, align 4, !dbg !5335
  %arrayidx25 = getelementptr inbounds [2 x i32], [2 x i32]* %a, i64 0, i64 1, !dbg !5336
  %31 = load i32, i32* %arrayidx25, align 4, !dbg !5336
  %conv26 = sitofp i32 %31 to float, !dbg !5336
  %32 = load float*, float** %adr.addr, align 8, !dbg !5337
  %arrayidx27 = getelementptr inbounds float, float* %32, i64 1, !dbg !5337
  store float %conv26, float* %arrayidx27, align 4, !dbg !5338
  br label %sw.epilog, !dbg !5339

sw.epilog:                                        ; preds = %if.end, %sw.default, %if.end21
  ret void, !dbg !5340
}

declare dso_local i32 @ED_view3d_project_float_global(%struct.ARegion*, float*, float*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @projectFloatView(%struct.TransInfo* %t, float* %vec, float* %adr) #0 !dbg !5341 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %vec.addr = alloca float*, align 8
  %adr.addr = alloca float*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !5344, metadata !DIExpression()), !dbg !5345
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !5346, metadata !DIExpression()), !dbg !5347
  store float* %adr, float** %adr.addr, align 8
  call void @llvm.dbg.declare(metadata float** %adr.addr, metadata !5348, metadata !DIExpression()), !dbg !5349
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5350
  %1 = load float*, float** %vec.addr, align 8, !dbg !5351
  %2 = load float*, float** %adr.addr, align 8, !dbg !5352
  call void @projectFloatViewEx(%struct.TransInfo* %0, float* %1, float* %2, i32 0), !dbg !5353
  ret void, !dbg !5354
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @applyAspectRatio(%struct.TransInfo* %t, float* %vec) #0 !dbg !5355 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %vec.addr = alloca float*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %aspx = alloca float, align 4
  %aspy = alloca float, align 4
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %sc = alloca %struct.SpaceClip*, align 8
  %aspx32 = alloca float, align 4
  %aspy33 = alloca float, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !5358, metadata !DIExpression()), !dbg !5359
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !5360, metadata !DIExpression()), !dbg !5361
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5362
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 33, !dbg !5364
  %1 = load i8, i8* %spacetype, align 8, !dbg !5364
  %conv = zext i8 %1 to i32, !dbg !5362
  %cmp = icmp eq i32 %conv, 6, !dbg !5365
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5366

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5367
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 0, !dbg !5368
  %3 = load i32, i32* %mode, align 8, !dbg !5368
  %cmp2 = icmp eq i32 %3, 1, !dbg !5369
  br i1 %cmp2, label %land.lhs.true4, label %if.else, !dbg !5370

land.lhs.true4:                                   ; preds = %land.lhs.true
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5371
  %options = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 4, !dbg !5372
  %5 = load i32, i32* %options, align 8, !dbg !5372
  %and = and i32 %5, 256, !dbg !5373
  %tobool = icmp ne i32 %and, 0, !dbg !5373
  br i1 %tobool, label %if.else, label %if.then, !dbg !5374

if.then:                                          ; preds = %land.lhs.true4
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !5375, metadata !DIExpression()), !dbg !5377
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5378
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 54, !dbg !5379
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5379
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %7, i32 0, i32 19, !dbg !5380
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !5381
  %8 = load i8*, i8** %first, align 8, !dbg !5381
  %9 = bitcast i8* %8 to %struct.SpaceImage*, !dbg !5378
  store %struct.SpaceImage* %9, %struct.SpaceImage** %sima, align 8, !dbg !5377
  call void @llvm.dbg.declare(metadata float* %aspx, metadata !5382, metadata !DIExpression()), !dbg !5383
  call void @llvm.dbg.declare(metadata float* %aspy, metadata !5384, metadata !DIExpression()), !dbg !5385
  %10 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !5386
  %flag = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %10, i32 0, i32 4, !dbg !5388
  %11 = load i32, i32* %flag, align 4, !dbg !5388
  %and5 = and i32 %11, 512, !dbg !5389
  %cmp6 = icmp eq i32 %and5, 0, !dbg !5390
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !5391

if.then8:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %width, metadata !5392, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.declare(metadata i32* %height, metadata !5395, metadata !DIExpression()), !dbg !5396
  %12 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !5397
  call void @ED_space_image_get_size(%struct.SpaceImage* %12, i32* %width, i32* %height), !dbg !5398
  %13 = load i32, i32* %width, align 4, !dbg !5399
  %conv9 = sitofp i32 %13 to float, !dbg !5399
  %14 = load float*, float** %vec.addr, align 8, !dbg !5400
  %arrayidx = getelementptr inbounds float, float* %14, i64 0, !dbg !5400
  %15 = load float, float* %arrayidx, align 4, !dbg !5401
  %mul = fmul float %15, %conv9, !dbg !5401
  store float %mul, float* %arrayidx, align 4, !dbg !5401
  %16 = load i32, i32* %height, align 4, !dbg !5402
  %conv10 = sitofp i32 %16 to float, !dbg !5402
  %17 = load float*, float** %vec.addr, align 8, !dbg !5403
  %arrayidx11 = getelementptr inbounds float, float* %17, i64 1, !dbg !5403
  %18 = load float, float* %arrayidx11, align 4, !dbg !5404
  %mul12 = fmul float %18, %conv10, !dbg !5404
  store float %mul12, float* %arrayidx11, align 4, !dbg !5404
  br label %if.end, !dbg !5405

if.end:                                           ; preds = %if.then8, %if.then
  %19 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !5406
  call void @ED_space_image_get_uv_aspect(%struct.SpaceImage* %19, float* %aspx, float* %aspy), !dbg !5407
  %20 = load float, float* %aspx, align 4, !dbg !5408
  %21 = load float*, float** %vec.addr, align 8, !dbg !5409
  %arrayidx13 = getelementptr inbounds float, float* %21, i64 0, !dbg !5409
  %22 = load float, float* %arrayidx13, align 4, !dbg !5410
  %div = fdiv float %22, %20, !dbg !5410
  store float %div, float* %arrayidx13, align 4, !dbg !5410
  %23 = load float, float* %aspy, align 4, !dbg !5411
  %24 = load float*, float** %vec.addr, align 8, !dbg !5412
  %arrayidx14 = getelementptr inbounds float, float* %24, i64 1, !dbg !5412
  %25 = load float, float* %arrayidx14, align 4, !dbg !5413
  %div15 = fdiv float %25, %23, !dbg !5413
  store float %div15, float* %arrayidx14, align 4, !dbg !5413
  br label %if.end55, !dbg !5414

if.else:                                          ; preds = %land.lhs.true4, %land.lhs.true, %entry
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5415
  %spacetype16 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 33, !dbg !5417
  %27 = load i8, i8* %spacetype16, align 8, !dbg !5417
  %conv17 = zext i8 %27 to i32, !dbg !5415
  %cmp18 = icmp eq i32 %conv17, 20, !dbg !5418
  br i1 %cmp18, label %land.lhs.true20, label %if.end54, !dbg !5419

land.lhs.true20:                                  ; preds = %if.else
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5420
  %mode21 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 0, !dbg !5421
  %29 = load i32, i32* %mode21, align 8, !dbg !5421
  %cmp22 = icmp eq i32 %29, 1, !dbg !5422
  br i1 %cmp22, label %if.then24, label %if.end54, !dbg !5423

if.then24:                                        ; preds = %land.lhs.true20
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5424
  %options25 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %30, i32 0, i32 4, !dbg !5427
  %31 = load i32, i32* %options25, align 8, !dbg !5427
  %and26 = and i32 %31, 192, !dbg !5428
  %tobool27 = icmp ne i32 %and26, 0, !dbg !5428
  br i1 %tobool27, label %if.then28, label %if.end53, !dbg !5429

if.then28:                                        ; preds = %if.then24
  call void @llvm.dbg.declare(metadata %struct.SpaceClip** %sc, metadata !5430, metadata !DIExpression()), !dbg !5432
  %32 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5433
  %sa29 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %32, i32 0, i32 54, !dbg !5434
  %33 = load %struct.ScrArea*, %struct.ScrArea** %sa29, align 8, !dbg !5434
  %spacedata30 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %33, i32 0, i32 19, !dbg !5435
  %first31 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata30, i32 0, i32 0, !dbg !5436
  %34 = load i8*, i8** %first31, align 8, !dbg !5436
  %35 = bitcast i8* %34 to %struct.SpaceClip*, !dbg !5433
  store %struct.SpaceClip* %35, %struct.SpaceClip** %sc, align 8, !dbg !5432
  call void @llvm.dbg.declare(metadata float* %aspx32, metadata !5437, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.declare(metadata float* %aspy33, metadata !5439, metadata !DIExpression()), !dbg !5440
  %36 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5441
  %options34 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %36, i32 0, i32 4, !dbg !5443
  %37 = load i32, i32* %options34, align 8, !dbg !5443
  %and35 = and i32 %37, 64, !dbg !5444
  %tobool36 = icmp ne i32 %and35, 0, !dbg !5444
  br i1 %tobool36, label %if.then37, label %if.else42, !dbg !5445

if.then37:                                        ; preds = %if.then28
  %38 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !5446
  call void @ED_space_clip_get_aspect_dimension_aware(%struct.SpaceClip* %38, float* %aspx32, float* %aspy33), !dbg !5448
  %39 = load float, float* %aspx32, align 4, !dbg !5449
  %40 = load float*, float** %vec.addr, align 8, !dbg !5450
  %arrayidx38 = getelementptr inbounds float, float* %40, i64 0, !dbg !5450
  %41 = load float, float* %arrayidx38, align 4, !dbg !5451
  %div39 = fdiv float %41, %39, !dbg !5451
  store float %div39, float* %arrayidx38, align 4, !dbg !5451
  %42 = load float, float* %aspy33, align 4, !dbg !5452
  %43 = load float*, float** %vec.addr, align 8, !dbg !5453
  %arrayidx40 = getelementptr inbounds float, float* %43, i64 1, !dbg !5453
  %44 = load float, float* %arrayidx40, align 4, !dbg !5454
  %div41 = fdiv float %44, %42, !dbg !5454
  store float %div41, float* %arrayidx40, align 4, !dbg !5454
  br label %if.end52, !dbg !5455

if.else42:                                        ; preds = %if.then28
  %45 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5456
  %options43 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %45, i32 0, i32 4, !dbg !5458
  %46 = load i32, i32* %options43, align 8, !dbg !5458
  %and44 = and i32 %46, 128, !dbg !5459
  %tobool45 = icmp ne i32 %and44, 0, !dbg !5459
  br i1 %tobool45, label %if.then46, label %if.end51, !dbg !5460

if.then46:                                        ; preds = %if.else42
  %47 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !5461
  call void @ED_space_clip_get_aspect(%struct.SpaceClip* %47, float* %aspx32, float* %aspy33), !dbg !5463
  %48 = load float, float* %aspx32, align 4, !dbg !5464
  %49 = load float*, float** %vec.addr, align 8, !dbg !5465
  %arrayidx47 = getelementptr inbounds float, float* %49, i64 0, !dbg !5465
  %50 = load float, float* %arrayidx47, align 4, !dbg !5466
  %div48 = fdiv float %50, %48, !dbg !5466
  store float %div48, float* %arrayidx47, align 4, !dbg !5466
  %51 = load float, float* %aspy33, align 4, !dbg !5467
  %52 = load float*, float** %vec.addr, align 8, !dbg !5468
  %arrayidx49 = getelementptr inbounds float, float* %52, i64 1, !dbg !5468
  %53 = load float, float* %arrayidx49, align 4, !dbg !5469
  %div50 = fdiv float %53, %51, !dbg !5469
  store float %div50, float* %arrayidx49, align 4, !dbg !5469
  br label %if.end51, !dbg !5470

if.end51:                                         ; preds = %if.then46, %if.else42
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then37
  br label %if.end53, !dbg !5471

if.end53:                                         ; preds = %if.end52, %if.then24
  br label %if.end54, !dbg !5472

if.end54:                                         ; preds = %if.end53, %land.lhs.true20, %if.else
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.end
  ret void, !dbg !5473
}

declare dso_local void @ED_space_image_get_size(%struct.SpaceImage*, i32*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @removeAspectRatio(%struct.TransInfo* %t, float* %vec) #0 !dbg !5474 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %vec.addr = alloca float*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %aspx = alloca float, align 4
  %aspy = alloca float, align 4
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %sc = alloca %struct.SpaceClip*, align 8
  %aspx28 = alloca float, align 4
  %aspy29 = alloca float, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !5475, metadata !DIExpression()), !dbg !5476
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !5477, metadata !DIExpression()), !dbg !5478
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5479
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 33, !dbg !5481
  %1 = load i8, i8* %spacetype, align 8, !dbg !5481
  %conv = zext i8 %1 to i32, !dbg !5479
  %cmp = icmp eq i32 %conv, 6, !dbg !5482
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5483

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5484
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 0, !dbg !5485
  %3 = load i32, i32* %mode, align 8, !dbg !5485
  %cmp2 = icmp eq i32 %3, 1, !dbg !5486
  br i1 %cmp2, label %if.then, label %if.else, !dbg !5487

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !5488, metadata !DIExpression()), !dbg !5490
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5491
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 54, !dbg !5492
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5492
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %5, i32 0, i32 19, !dbg !5493
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !5494
  %6 = load i8*, i8** %first, align 8, !dbg !5494
  %7 = bitcast i8* %6 to %struct.SpaceImage*, !dbg !5491
  store %struct.SpaceImage* %7, %struct.SpaceImage** %sima, align 8, !dbg !5490
  call void @llvm.dbg.declare(metadata float* %aspx, metadata !5495, metadata !DIExpression()), !dbg !5496
  call void @llvm.dbg.declare(metadata float* %aspy, metadata !5497, metadata !DIExpression()), !dbg !5498
  %8 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !5499
  %flag = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %8, i32 0, i32 4, !dbg !5501
  %9 = load i32, i32* %flag, align 4, !dbg !5501
  %and = and i32 %9, 512, !dbg !5502
  %cmp4 = icmp eq i32 %and, 0, !dbg !5503
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !5504

if.then6:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %width, metadata !5505, metadata !DIExpression()), !dbg !5507
  call void @llvm.dbg.declare(metadata i32* %height, metadata !5508, metadata !DIExpression()), !dbg !5509
  %10 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !5510
  call void @ED_space_image_get_size(%struct.SpaceImage* %10, i32* %width, i32* %height), !dbg !5511
  %11 = load i32, i32* %width, align 4, !dbg !5512
  %conv7 = sitofp i32 %11 to float, !dbg !5512
  %12 = load float*, float** %vec.addr, align 8, !dbg !5513
  %arrayidx = getelementptr inbounds float, float* %12, i64 0, !dbg !5513
  %13 = load float, float* %arrayidx, align 4, !dbg !5514
  %div = fdiv float %13, %conv7, !dbg !5514
  store float %div, float* %arrayidx, align 4, !dbg !5514
  %14 = load i32, i32* %height, align 4, !dbg !5515
  %conv8 = sitofp i32 %14 to float, !dbg !5515
  %15 = load float*, float** %vec.addr, align 8, !dbg !5516
  %arrayidx9 = getelementptr inbounds float, float* %15, i64 1, !dbg !5516
  %16 = load float, float* %arrayidx9, align 4, !dbg !5517
  %div10 = fdiv float %16, %conv8, !dbg !5517
  store float %div10, float* %arrayidx9, align 4, !dbg !5517
  br label %if.end, !dbg !5518

if.end:                                           ; preds = %if.then6, %if.then
  %17 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !5519
  call void @ED_space_image_get_uv_aspect(%struct.SpaceImage* %17, float* %aspx, float* %aspy), !dbg !5520
  %18 = load float, float* %aspx, align 4, !dbg !5521
  %19 = load float*, float** %vec.addr, align 8, !dbg !5522
  %arrayidx11 = getelementptr inbounds float, float* %19, i64 0, !dbg !5522
  %20 = load float, float* %arrayidx11, align 4, !dbg !5523
  %mul = fmul float %20, %18, !dbg !5523
  store float %mul, float* %arrayidx11, align 4, !dbg !5523
  %21 = load float, float* %aspy, align 4, !dbg !5524
  %22 = load float*, float** %vec.addr, align 8, !dbg !5525
  %arrayidx12 = getelementptr inbounds float, float* %22, i64 1, !dbg !5525
  %23 = load float, float* %arrayidx12, align 4, !dbg !5526
  %mul13 = fmul float %23, %21, !dbg !5526
  store float %mul13, float* %arrayidx12, align 4, !dbg !5526
  br label %if.end47, !dbg !5527

if.else:                                          ; preds = %land.lhs.true, %entry
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5528
  %spacetype14 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 33, !dbg !5530
  %25 = load i8, i8* %spacetype14, align 8, !dbg !5530
  %conv15 = zext i8 %25 to i32, !dbg !5528
  %cmp16 = icmp eq i32 %conv15, 20, !dbg !5531
  br i1 %cmp16, label %land.lhs.true18, label %if.end46, !dbg !5532

land.lhs.true18:                                  ; preds = %if.else
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5533
  %mode19 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 0, !dbg !5534
  %27 = load i32, i32* %mode19, align 8, !dbg !5534
  %cmp20 = icmp eq i32 %27, 1, !dbg !5535
  br i1 %cmp20, label %if.then22, label %if.end46, !dbg !5536

if.then22:                                        ; preds = %land.lhs.true18
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5537
  %options = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 4, !dbg !5540
  %29 = load i32, i32* %options, align 8, !dbg !5540
  %and23 = and i32 %29, 192, !dbg !5541
  %tobool = icmp ne i32 %and23, 0, !dbg !5541
  br i1 %tobool, label %if.then24, label %if.end45, !dbg !5542

if.then24:                                        ; preds = %if.then22
  call void @llvm.dbg.declare(metadata %struct.SpaceClip** %sc, metadata !5543, metadata !DIExpression()), !dbg !5545
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5546
  %sa25 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %30, i32 0, i32 54, !dbg !5547
  %31 = load %struct.ScrArea*, %struct.ScrArea** %sa25, align 8, !dbg !5547
  %spacedata26 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %31, i32 0, i32 19, !dbg !5548
  %first27 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata26, i32 0, i32 0, !dbg !5549
  %32 = load i8*, i8** %first27, align 8, !dbg !5549
  %33 = bitcast i8* %32 to %struct.SpaceClip*, !dbg !5546
  store %struct.SpaceClip* %33, %struct.SpaceClip** %sc, align 8, !dbg !5545
  call void @llvm.dbg.declare(metadata float* %aspx28, metadata !5550, metadata !DIExpression()), !dbg !5551
  store float 1.000000e+00, float* %aspx28, align 4, !dbg !5551
  call void @llvm.dbg.declare(metadata float* %aspy29, metadata !5552, metadata !DIExpression()), !dbg !5553
  store float 1.000000e+00, float* %aspy29, align 4, !dbg !5553
  %34 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5554
  %options30 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %34, i32 0, i32 4, !dbg !5556
  %35 = load i32, i32* %options30, align 8, !dbg !5556
  %and31 = and i32 %35, 64, !dbg !5557
  %tobool32 = icmp ne i32 %and31, 0, !dbg !5557
  br i1 %tobool32, label %if.then33, label %if.else34, !dbg !5558

if.then33:                                        ; preds = %if.then24
  %36 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !5559
  call void @ED_space_clip_get_aspect_dimension_aware(%struct.SpaceClip* %36, float* %aspx28, float* %aspy29), !dbg !5561
  br label %if.end40, !dbg !5562

if.else34:                                        ; preds = %if.then24
  %37 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5563
  %options35 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %37, i32 0, i32 4, !dbg !5565
  %38 = load i32, i32* %options35, align 8, !dbg !5565
  %and36 = and i32 %38, 128, !dbg !5566
  %tobool37 = icmp ne i32 %and36, 0, !dbg !5566
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !5567

if.then38:                                        ; preds = %if.else34
  %39 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !5568
  call void @ED_space_clip_get_aspect(%struct.SpaceClip* %39, float* %aspx28, float* %aspy29), !dbg !5570
  br label %if.end39, !dbg !5571

if.end39:                                         ; preds = %if.then38, %if.else34
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then33
  %40 = load float, float* %aspx28, align 4, !dbg !5572
  %41 = load float*, float** %vec.addr, align 8, !dbg !5573
  %arrayidx41 = getelementptr inbounds float, float* %41, i64 0, !dbg !5573
  %42 = load float, float* %arrayidx41, align 4, !dbg !5574
  %mul42 = fmul float %42, %40, !dbg !5574
  store float %mul42, float* %arrayidx41, align 4, !dbg !5574
  %43 = load float, float* %aspy29, align 4, !dbg !5575
  %44 = load float*, float** %vec.addr, align 8, !dbg !5576
  %arrayidx43 = getelementptr inbounds float, float* %44, i64 1, !dbg !5576
  %45 = load float, float* %arrayidx43, align 4, !dbg !5577
  %mul44 = fmul float %45, %43, !dbg !5577
  store float %mul44, float* %arrayidx43, align 4, !dbg !5577
  br label %if.end45, !dbg !5578

if.end45:                                         ; preds = %if.end40, %if.then22
  br label %if.end46, !dbg !5579

if.end46:                                         ; preds = %if.end45, %land.lhs.true18, %if.else
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.end
  ret void, !dbg !5580
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyMap* @transform_modal_keymap(%struct.wmKeyConfig* %keyconf) #0 !dbg !2 {
entry:
  %retval = alloca %struct.wmKeyMap*, align 8
  %keyconf.addr = alloca %struct.wmKeyConfig*, align 8
  %keymap = alloca %struct.wmKeyMap*, align 8
  store %struct.wmKeyConfig* %keyconf, %struct.wmKeyConfig** %keyconf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf.addr, metadata !5581, metadata !DIExpression()), !dbg !5582
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap, metadata !5583, metadata !DIExpression()), !dbg !5586
  %0 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !5587
  %call = call %struct.wmKeyMap* @WM_modalkeymap_get(%struct.wmKeyConfig* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.54, i64 0, i64 0)), !dbg !5588
  store %struct.wmKeyMap* %call, %struct.wmKeyMap** %keymap, align 8, !dbg !5586
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5589
  %tobool = icmp ne %struct.wmKeyMap* %1, null, !dbg !5589
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5591

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5592
  %modal_items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %2, i32 0, i32 10, !dbg !5593
  %3 = load i8*, i8** %modal_items, align 8, !dbg !5593
  %tobool1 = icmp ne i8* %3, null, !dbg !5592
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5594

if.then:                                          ; preds = %land.lhs.true
  store %struct.wmKeyMap* null, %struct.wmKeyMap** %retval, align 8, !dbg !5595
  br label %return, !dbg !5595

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !5596
  %call2 = call %struct.wmKeyMap* @WM_modalkeymap_add(%struct.wmKeyConfig* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.54, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([27 x %struct.EnumPropertyItem], [27 x %struct.EnumPropertyItem]* @transform_modal_keymap.modal_items, i64 0, i64 0)), !dbg !5597
  store %struct.wmKeyMap* %call2, %struct.wmKeyMap** %keymap, align 8, !dbg !5598
  %5 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5599
  %call3 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %5, i32 218, i32 1, i32 -1, i32 0, i32 1), !dbg !5600
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5601
  %call4 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %6, i32 1, i32 1, i32 -1, i32 0, i32 2), !dbg !5602
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5603
  %call5 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %7, i32 220, i32 1, i32 -1, i32 0, i32 2), !dbg !5604
  %8 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5605
  %call6 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %8, i32 163, i32 1, i32 -1, i32 0, i32 2), !dbg !5606
  %9 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5607
  %call7 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %9, i32 103, i32 1, i32 0, i32 0, i32 3), !dbg !5608
  %10 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5609
  %call8 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %10, i32 114, i32 1, i32 0, i32 0, i32 4), !dbg !5610
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5611
  %call9 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %11, i32 115, i32 1, i32 0, i32 0, i32 5), !dbg !5612
  %12 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5613
  %call10 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %12, i32 219, i32 1, i32 1, i32 0, i32 8), !dbg !5614
  %13 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5615
  %call11 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %13, i32 212, i32 1, i32 -1, i32 0, i32 6), !dbg !5616
  %14 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5617
  %call12 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %14, i32 212, i32 2, i32 -1, i32 0, i32 7), !dbg !5618
  %15 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5619
  %call13 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %15, i32 215, i32 1, i32 -1, i32 0, i32 6), !dbg !5620
  %16 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5621
  %call14 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %16, i32 215, i32 2, i32 -1, i32 0, i32 7), !dbg !5622
  %17 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5623
  %call15 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %17, i32 97, i32 1, i32 0, i32 0, i32 16), !dbg !5624
  %18 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5625
  %call16 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %18, i32 97, i32 1, i32 4, i32 0, i32 17), !dbg !5626
  %19 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5627
  %call17 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %19, i32 168, i32 1, i32 0, i32 0, i32 20), !dbg !5628
  %20 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5629
  %call18 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %20, i32 169, i32 1, i32 0, i32 0, i32 21), !dbg !5630
  %21 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5631
  %call19 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %21, i32 11, i32 1, i32 0, i32 0, i32 20), !dbg !5632
  %22 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5633
  %call20 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %22, i32 10, i32 1, i32 0, i32 0, i32 21), !dbg !5634
  %23 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5635
  %call21 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %23, i32 14, i32 0, i32 0, i32 0, i32 26), !dbg !5636
  %24 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5637
  %call22 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %24, i32 11, i32 1, i32 4, i32 0, i32 24), !dbg !5638
  %25 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5639
  %call23 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %25, i32 10, i32 1, i32 4, i32 0, i32 25), !dbg !5640
  %26 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5641
  %call24 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %26, i32 168, i32 1, i32 1, i32 0, i32 22), !dbg !5642
  %27 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5643
  %call25 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %27, i32 169, i32 1, i32 1, i32 0, i32 23), !dbg !5644
  %28 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5645
  %call26 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %28, i32 11, i32 1, i32 1, i32 0, i32 22), !dbg !5646
  %29 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5647
  %call27 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %29, i32 10, i32 1, i32 1, i32 0, i32 23), !dbg !5648
  %30 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !5649
  store %struct.wmKeyMap* %30, %struct.wmKeyMap** %retval, align 8, !dbg !5650
  br label %return, !dbg !5650

return:                                           ; preds = %if.end, %if.then
  %31 = load %struct.wmKeyMap*, %struct.wmKeyMap** %retval, align 8, !dbg !5651
  ret %struct.wmKeyMap* %31, !dbg !5651
}

declare dso_local %struct.wmKeyMap* @WM_modalkeymap_get(%struct.wmKeyConfig*, i8*) #2

declare dso_local %struct.wmKeyMap* @WM_modalkeymap_add(%struct.wmKeyConfig*, i8*, %struct.EnumPropertyItem*) #2

declare dso_local %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap*, i32, i32, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @transformEvent(%struct.TransInfo* %t, %struct.wmEvent* %event) #0 !dbg !5652 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %struct.TransInfo*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %cmode = alloca i8, align 1
  %handled = alloca i8, align 1
  %fac = alloca float, align 4
  %mati = alloca [3 x [3 x float]], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !5658, metadata !DIExpression()), !dbg !5659
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5660, metadata !DIExpression()), !dbg !5661
  call void @llvm.dbg.declare(metadata i8* %cmode, metadata !5662, metadata !DIExpression()), !dbg !5663
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5664
  %call = call zeroext i8 @constraintModeToChar(%struct.TransInfo* %0), !dbg !5665
  store i8 %call, i8* %cmode, align 1, !dbg !5663
  call void @llvm.dbg.declare(metadata i8* %handled, metadata !5666, metadata !DIExpression()), !dbg !5667
  store i8 0, i8* %handled, align 1, !dbg !5667
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5668
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5669
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 16, !dbg !5670
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5671
  %call1 = call i32 @handleMouseInput(%struct.TransInfo* %1, %struct.MouseInput* %mouse, %struct.wmEvent* %3), !dbg !5672
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5673
  %redraw = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 17, !dbg !5674
  %5 = load i32, i32* %redraw, align 8, !dbg !5675
  %or = or i32 %5, %call1, !dbg !5675
  store i32 %or, i32* %redraw, align 8, !dbg !5675
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5676
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 3, !dbg !5678
  %7 = load i16, i16* %val, align 2, !dbg !5678
  %conv = sext i16 %7 to i32, !dbg !5676
  %cmp = icmp eq i32 %conv, 1, !dbg !5679
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !5680

lor.lhs.false:                                    ; preds = %entry
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5681
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 2, !dbg !5682
  %9 = load i16, i16* %type, align 8, !dbg !5682
  %conv3 = sext i16 %9 to i32, !dbg !5681
  %cmp4 = icmp eq i32 %conv3, 20514, !dbg !5683
  br i1 %cmp4, label %land.lhs.true, label %if.else, !dbg !5684

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5685
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 15, !dbg !5686
  %call6 = call zeroext i8 @hasNumInput(%struct.NumInput* %num), !dbg !5687
  %conv7 = zext i8 %call6 to i32, !dbg !5687
  %tobool = icmp ne i32 %conv7, 0, !dbg !5687
  br i1 %tobool, label %land.lhs.true8, label %if.else, !dbg !5688

land.lhs.true8:                                   ; preds = %land.lhs.true
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5689
  %context = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 53, !dbg !5690
  %12 = load %struct.bContext*, %struct.bContext** %context, align 8, !dbg !5690
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5691
  %num9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 15, !dbg !5692
  %14 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5693
  %call10 = call zeroext i8 @handleNumInput(%struct.bContext* %12, %struct.NumInput* %num9, %struct.wmEvent* %14), !dbg !5694
  %conv11 = zext i8 %call10 to i32, !dbg !5694
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !5694
  br i1 %tobool12, label %if.then, label %if.else, !dbg !5695

if.then:                                          ; preds = %land.lhs.true8
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5696
  %redraw13 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 17, !dbg !5698
  %16 = load i32, i32* %redraw13, align 8, !dbg !5699
  %or14 = or i32 %16, 1, !dbg !5699
  store i32 %or14, i32* %redraw13, align 8, !dbg !5699
  store i8 1, i8* %handled, align 1, !dbg !5700
  br label %if.end739, !dbg !5701

if.else:                                          ; preds = %land.lhs.true8, %land.lhs.true, %lor.lhs.false
  %17 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5702
  %type15 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %17, i32 0, i32 2, !dbg !5704
  %18 = load i16, i16* %type15, align 8, !dbg !5704
  %conv16 = sext i16 %18 to i32, !dbg !5702
  %cmp17 = icmp eq i32 %conv16, 4, !dbg !5705
  br i1 %cmp17, label %if.then19, label %if.else40, !dbg !5706

if.then19:                                        ; preds = %if.else
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5707
  %modifiers = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 2, !dbg !5710
  %20 = load i32, i32* %modifiers, align 8, !dbg !5710
  %and = and i32 %20, 1, !dbg !5711
  %tobool20 = icmp ne i32 %and, 0, !dbg !5711
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !5712

if.then21:                                        ; preds = %if.then19
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5713
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 13, !dbg !5714
  %mode = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 7, !dbg !5715
  %22 = load i32, i32* %mode, align 4, !dbg !5716
  %or22 = or i32 %22, 16, !dbg !5716
  store i32 %or22, i32* %mode, align 4, !dbg !5716
  br label %if.end, !dbg !5713

if.end:                                           ; preds = %if.then21, %if.then19
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5717
  %mval = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 61, !dbg !5718
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !5717
  %24 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5719
  %mval23 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %24, i32 0, i32 6, !dbg !5720
  %arraydecay24 = getelementptr inbounds [2 x i32], [2 x i32]* %mval23, i64 0, i64 0, !dbg !5719
  call void @copy_v2_v2_int(i32* %arraydecay, i32* %arraydecay24), !dbg !5721
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5722
  %redraw25 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 17, !dbg !5723
  %26 = load i32, i32* %redraw25, align 8, !dbg !5724
  %or26 = or i32 %26, 1, !dbg !5724
  store i32 %or26, i32* %redraw25, align 8, !dbg !5724
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5725
  %state = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %27, i32 0, i32 3, !dbg !5727
  %28 = load i16, i16* %state, align 4, !dbg !5727
  %conv27 = sext i16 %28 to i32, !dbg !5725
  %cmp28 = icmp eq i32 %conv27, 0, !dbg !5728
  br i1 %cmp28, label %if.then30, label %if.end32, !dbg !5729

if.then30:                                        ; preds = %if.end
  %29 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5730
  %state31 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %29, i32 0, i32 3, !dbg !5732
  store i16 1, i16* %state31, align 4, !dbg !5733
  br label %if.end32, !dbg !5734

if.end32:                                         ; preds = %if.then30, %if.end
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5735
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5736
  %mouse33 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %31, i32 0, i32 16, !dbg !5737
  %32 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5738
  %mval34 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %32, i32 0, i32 61, !dbg !5739
  %arraydecay35 = getelementptr inbounds [2 x i32], [2 x i32]* %mval34, i64 0, i64 0, !dbg !5738
  %33 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5740
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %33, i32 0, i32 47, !dbg !5741
  %arraydecay36 = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !5740
  call void @applyMouseInput(%struct.TransInfo* %30, %struct.MouseInput* %mouse33, i32* %arraydecay35, float* %arraydecay36), !dbg !5742
  %34 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5743
  %35 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5744
  %call37 = call i32 @handleSnapping(%struct.TransInfo* %34, %struct.wmEvent* %35), !dbg !5745
  %36 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5746
  %redraw38 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %36, i32 0, i32 17, !dbg !5747
  %37 = load i32, i32* %redraw38, align 8, !dbg !5748
  %or39 = or i32 %37, %call37, !dbg !5748
  store i32 %or39, i32* %redraw38, align 8, !dbg !5748
  store i8 1, i8* %handled, align 1, !dbg !5749
  br label %if.end738, !dbg !5750

if.else40:                                        ; preds = %if.else
  %38 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5751
  %type41 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %38, i32 0, i32 2, !dbg !5753
  %39 = load i16, i16* %type41, align 8, !dbg !5753
  %conv42 = sext i16 %39 to i32, !dbg !5751
  %cmp43 = icmp eq i32 %conv42, 20514, !dbg !5754
  br i1 %cmp43, label %if.then45, label %if.else418, !dbg !5755

if.then45:                                        ; preds = %if.else40
  %40 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5756
  %val46 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %40, i32 0, i32 3, !dbg !5758
  %41 = load i16, i16* %val46, align 2, !dbg !5758
  %conv47 = sext i16 %41 to i32, !dbg !5756
  switch i32 %conv47, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb49
    i32 3, label %sw.bb51
    i32 4, label %sw.bb134
    i32 5, label %sw.bb177
    i32 6, label %sw.bb237
    i32 7, label %sw.bb242
    i32 8, label %sw.bb247
    i32 9, label %sw.bb252
    i32 10, label %sw.bb260
    i32 11, label %sw.bb269
    i32 12, label %sw.bb278
    i32 13, label %sw.bb293
    i32 14, label %sw.bb309
    i32 15, label %sw.bb325
    i32 16, label %sw.bb334
    i32 17, label %sw.bb337
    i32 26, label %sw.bb340
    i32 20, label %sw.bb363
    i32 21, label %sw.bb389
    i32 24, label %sw.bb399
    i32 25, label %sw.bb399
    i32 22, label %sw.bb402
    i32 23, label %sw.bb410
  ], !dbg !5759

sw.bb:                                            ; preds = %if.then45
  %42 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5760
  %state48 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %42, i32 0, i32 3, !dbg !5762
  store i16 3, i16* %state48, align 4, !dbg !5763
  store i8 1, i8* %handled, align 1, !dbg !5764
  br label %sw.epilog, !dbg !5765

sw.bb49:                                          ; preds = %if.then45
  %43 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5766
  %state50 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %43, i32 0, i32 3, !dbg !5767
  store i16 2, i16* %state50, align 4, !dbg !5768
  store i8 1, i8* %handled, align 1, !dbg !5769
  br label %sw.epilog, !dbg !5770

sw.bb51:                                          ; preds = %if.then45
  %44 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5771
  %mode52 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %44, i32 0, i32 0, !dbg !5771
  %45 = load i32, i32* %mode52, align 8, !dbg !5771
  %cmp53 = icmp eq i32 %45, 2, !dbg !5771
  br i1 %cmp53, label %if.then71, label %lor.lhs.false55, !dbg !5771

lor.lhs.false55:                                  ; preds = %sw.bb51
  %46 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5771
  %mode56 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %46, i32 0, i32 0, !dbg !5771
  %47 = load i32, i32* %mode56, align 8, !dbg !5771
  %cmp57 = icmp eq i32 %47, 3, !dbg !5771
  br i1 %cmp57, label %if.then71, label %lor.lhs.false59, !dbg !5771

lor.lhs.false59:                                  ; preds = %lor.lhs.false55
  %48 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5771
  %mode60 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %48, i32 0, i32 0, !dbg !5771
  %49 = load i32, i32* %mode60, align 8, !dbg !5771
  %cmp61 = icmp eq i32 %49, 10, !dbg !5771
  br i1 %cmp61, label %if.then71, label %lor.lhs.false63, !dbg !5771

lor.lhs.false63:                                  ; preds = %lor.lhs.false59
  %50 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5771
  %mode64 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %50, i32 0, i32 0, !dbg !5771
  %51 = load i32, i32* %mode64, align 8, !dbg !5771
  %cmp65 = icmp eq i32 %51, 28, !dbg !5771
  br i1 %cmp65, label %if.then71, label %lor.lhs.false67, !dbg !5771

lor.lhs.false67:                                  ; preds = %lor.lhs.false63
  %52 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5771
  %mode68 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %52, i32 0, i32 0, !dbg !5771
  %53 = load i32, i32* %mode68, align 8, !dbg !5771
  %cmp69 = icmp eq i32 %53, 29, !dbg !5771
  br i1 %cmp69, label %if.then71, label %if.else75, !dbg !5773

if.then71:                                        ; preds = %lor.lhs.false67, %lor.lhs.false63, %lor.lhs.false59, %lor.lhs.false55, %sw.bb51
  %54 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5774
  call void @resetTransModal(%struct.TransInfo* %54), !dbg !5776
  %55 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5777
  call void @resetTransRestrictions(%struct.TransInfo* %55), !dbg !5778
  %56 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5779
  call void @restoreTransObjects(%struct.TransInfo* %56), !dbg !5780
  %57 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5781
  call void @initTranslation(%struct.TransInfo* %57), !dbg !5782
  %58 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5783
  call void @initSnapping(%struct.TransInfo* %58, %struct.wmOperator* null), !dbg !5784
  %59 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5785
  %redraw72 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %59, i32 0, i32 17, !dbg !5786
  %60 = load i32, i32* %redraw72, align 8, !dbg !5787
  %or73 = or i32 %60, 1, !dbg !5787
  store i32 %or73, i32* %redraw72, align 8, !dbg !5787
  %61 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5788
  %context74 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %61, i32 0, i32 53, !dbg !5789
  %62 = load %struct.bContext*, %struct.bContext** %context74, align 8, !dbg !5789
  call void @WM_event_add_mousemove(%struct.bContext* %62), !dbg !5790
  store i8 1, i8* %handled, align 1, !dbg !5791
  br label %if.end133, !dbg !5792

if.else75:                                        ; preds = %lor.lhs.false67
  %63 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5793
  %mode76 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %63, i32 0, i32 0, !dbg !5795
  %64 = load i32, i32* %mode76, align 8, !dbg !5795
  %cmp77 = icmp eq i32 %64, 30, !dbg !5796
  br i1 %cmp77, label %if.then79, label %if.else82, !dbg !5797

if.then79:                                        ; preds = %if.else75
  %65 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5798
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %65, i32 0, i32 1, !dbg !5800
  %66 = load i32, i32* %flag, align 4, !dbg !5801
  %xor = xor i32 %66, 16777216, !dbg !5801
  store i32 %xor, i32* %flag, align 4, !dbg !5801
  %67 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5802
  %redraw80 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %67, i32 0, i32 17, !dbg !5803
  %68 = load i32, i32* %redraw80, align 8, !dbg !5804
  %or81 = or i32 %68, 1, !dbg !5804
  store i32 %or81, i32* %redraw80, align 8, !dbg !5804
  store i8 1, i8* %handled, align 1, !dbg !5805
  br label %if.end132, !dbg !5806

if.else82:                                        ; preds = %if.else75
  %69 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5807
  %obedit = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %69, i32 0, i32 63, !dbg !5810
  %70 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5810
  %tobool83 = icmp ne %struct.Object* %70, null, !dbg !5807
  br i1 %tobool83, label %land.lhs.true84, label %if.else117, !dbg !5811

land.lhs.true84:                                  ; preds = %if.else82
  %71 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5812
  %obedit85 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %71, i32 0, i32 63, !dbg !5813
  %72 = load %struct.Object*, %struct.Object** %obedit85, align 8, !dbg !5813
  %type86 = getelementptr inbounds %struct.Object, %struct.Object* %72, i32 0, i32 3, !dbg !5814
  %73 = load i16, i16* %type86, align 8, !dbg !5814
  %conv87 = sext i16 %73 to i32, !dbg !5812
  %cmp88 = icmp eq i32 %conv87, 1, !dbg !5815
  br i1 %cmp88, label %if.then90, label %if.else117, !dbg !5816

if.then90:                                        ; preds = %land.lhs.true84
  %74 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5817
  %mode91 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %74, i32 0, i32 0, !dbg !5820
  %75 = load i32, i32* %mode91, align 8, !dbg !5820
  %cmp92 = icmp eq i32 %75, 1, !dbg !5821
  br i1 %cmp92, label %land.lhs.true94, label %if.end116, !dbg !5822

land.lhs.true94:                                  ; preds = %if.then90
  %76 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5823
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %76, i32 0, i32 33, !dbg !5824
  %77 = load i8, i8* %spacetype, align 8, !dbg !5824
  %conv95 = zext i8 %77 to i32, !dbg !5823
  %cmp96 = icmp eq i32 %conv95, 1, !dbg !5825
  br i1 %cmp96, label %if.then98, label %if.end116, !dbg !5826

if.then98:                                        ; preds = %land.lhs.true94
  %78 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5827
  call void @resetTransModal(%struct.TransInfo* %78), !dbg !5829
  %79 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5830
  call void @resetTransRestrictions(%struct.TransInfo* %79), !dbg !5831
  %80 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5832
  call void @restoreTransObjects(%struct.TransInfo* %80), !dbg !5833
  %81 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5834
  call void @initEdgeSlide(%struct.TransInfo* %81), !dbg !5835
  %82 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5836
  %state99 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %82, i32 0, i32 3, !dbg !5838
  %83 = load i16, i16* %state99, align 4, !dbg !5838
  %conv100 = sext i16 %83 to i32, !dbg !5836
  %cmp101 = icmp eq i32 %conv100, 3, !dbg !5839
  br i1 %cmp101, label %if.then103, label %if.end105, !dbg !5840

if.then103:                                       ; preds = %if.then98
  %84 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5841
  %state104 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %84, i32 0, i32 3, !dbg !5843
  store i16 0, i16* %state104, align 4, !dbg !5844
  %85 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5845
  call void @initVertSlide(%struct.TransInfo* %85), !dbg !5846
  br label %if.end105, !dbg !5847

if.end105:                                        ; preds = %if.then103, %if.then98
  %86 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5848
  %state106 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %86, i32 0, i32 3, !dbg !5850
  %87 = load i16, i16* %state106, align 4, !dbg !5850
  %conv107 = sext i16 %87 to i32, !dbg !5848
  %cmp108 = icmp eq i32 %conv107, 3, !dbg !5851
  br i1 %cmp108, label %if.then110, label %if.end112, !dbg !5852

if.then110:                                       ; preds = %if.end105
  %88 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5853
  %state111 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %88, i32 0, i32 3, !dbg !5855
  store i16 0, i16* %state111, align 4, !dbg !5856
  %89 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5857
  call void @resetTransRestrictions(%struct.TransInfo* %89), !dbg !5858
  %90 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5859
  call void @restoreTransObjects(%struct.TransInfo* %90), !dbg !5860
  %91 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5861
  call void @initTranslation(%struct.TransInfo* %91), !dbg !5862
  br label %if.end112, !dbg !5863

if.end112:                                        ; preds = %if.then110, %if.end105
  %92 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5864
  call void @initSnapping(%struct.TransInfo* %92, %struct.wmOperator* null), !dbg !5865
  %93 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5866
  %redraw113 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %93, i32 0, i32 17, !dbg !5867
  %94 = load i32, i32* %redraw113, align 8, !dbg !5868
  %or114 = or i32 %94, 1, !dbg !5868
  store i32 %or114, i32* %redraw113, align 8, !dbg !5868
  store i8 1, i8* %handled, align 1, !dbg !5869
  %95 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5870
  %context115 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %95, i32 0, i32 53, !dbg !5871
  %96 = load %struct.bContext*, %struct.bContext** %context115, align 8, !dbg !5871
  call void @WM_event_add_mousemove(%struct.bContext* %96), !dbg !5872
  br label %if.end116, !dbg !5873

if.end116:                                        ; preds = %if.end112, %land.lhs.true94, %if.then90
  br label %if.end131, !dbg !5874

if.else117:                                       ; preds = %land.lhs.true84, %if.else82
  %97 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5875
  %options = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %97, i32 0, i32 4, !dbg !5877
  %98 = load i32, i32* %options, align 8, !dbg !5877
  %and118 = and i32 %98, 192, !dbg !5878
  %tobool119 = icmp ne i32 %and118, 0, !dbg !5878
  br i1 %tobool119, label %if.then120, label %if.end130, !dbg !5879

if.then120:                                       ; preds = %if.else117
  %99 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5880
  %mode121 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %99, i32 0, i32 0, !dbg !5883
  %100 = load i32, i32* %mode121, align 8, !dbg !5883
  %cmp122 = icmp eq i32 %100, 1, !dbg !5884
  br i1 %cmp122, label %if.then124, label %if.end129, !dbg !5885

if.then124:                                       ; preds = %if.then120
  %101 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5886
  call void @restoreTransObjects(%struct.TransInfo* %101), !dbg !5888
  %102 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5889
  %flag125 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %102, i32 0, i32 1, !dbg !5890
  %103 = load i32, i32* %flag125, align 4, !dbg !5891
  %xor126 = xor i32 %103, 16777216, !dbg !5891
  store i32 %xor126, i32* %flag125, align 4, !dbg !5891
  %104 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5892
  %redraw127 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %104, i32 0, i32 17, !dbg !5893
  %105 = load i32, i32* %redraw127, align 8, !dbg !5894
  %or128 = or i32 %105, 1, !dbg !5894
  store i32 %or128, i32* %redraw127, align 8, !dbg !5894
  store i8 1, i8* %handled, align 1, !dbg !5895
  br label %if.end129, !dbg !5896

if.end129:                                        ; preds = %if.then124, %if.then120
  br label %if.end130, !dbg !5897

if.end130:                                        ; preds = %if.end129, %if.else117
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.end116
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then79
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then71
  br label %sw.epilog, !dbg !5898

sw.bb134:                                         ; preds = %if.then45
  %106 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5899
  %options135 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %106, i32 0, i32 4, !dbg !5901
  %107 = load i32, i32* %options135, align 8, !dbg !5901
  %and136 = and i32 %107, 1, !dbg !5902
  %tobool137 = icmp ne i32 %and136, 0, !dbg !5902
  br i1 %tobool137, label %if.end176, label %land.lhs.true138, !dbg !5903

land.lhs.true138:                                 ; preds = %sw.bb134
  %108 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5904
  %options139 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %108, i32 0, i32 4, !dbg !5905
  %109 = load i32, i32* %options139, align 8, !dbg !5905
  %and140 = and i32 %109, 192, !dbg !5906
  %tobool141 = icmp ne i32 %and140, 0, !dbg !5906
  br i1 %tobool141, label %if.end176, label %if.then142, !dbg !5907

if.then142:                                       ; preds = %land.lhs.true138
  %110 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5908
  %mode143 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %110, i32 0, i32 0, !dbg !5908
  %111 = load i32, i32* %mode143, align 8, !dbg !5908
  %cmp144 = icmp eq i32 %111, 2, !dbg !5908
  br i1 %cmp144, label %if.then166, label %lor.lhs.false146, !dbg !5908

lor.lhs.false146:                                 ; preds = %if.then142
  %112 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5908
  %mode147 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %112, i32 0, i32 0, !dbg !5908
  %113 = load i32, i32* %mode147, align 8, !dbg !5908
  %cmp148 = icmp eq i32 %113, 3, !dbg !5908
  br i1 %cmp148, label %if.then166, label %lor.lhs.false150, !dbg !5908

lor.lhs.false150:                                 ; preds = %lor.lhs.false146
  %114 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5908
  %mode151 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %114, i32 0, i32 0, !dbg !5908
  %115 = load i32, i32* %mode151, align 8, !dbg !5908
  %cmp152 = icmp eq i32 %115, 10, !dbg !5908
  br i1 %cmp152, label %if.then166, label %lor.lhs.false154, !dbg !5908

lor.lhs.false154:                                 ; preds = %lor.lhs.false150
  %116 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5908
  %mode155 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %116, i32 0, i32 0, !dbg !5908
  %117 = load i32, i32* %mode155, align 8, !dbg !5908
  %cmp156 = icmp eq i32 %117, 1, !dbg !5908
  br i1 %cmp156, label %if.then166, label %lor.lhs.false158, !dbg !5908

lor.lhs.false158:                                 ; preds = %lor.lhs.false154
  %118 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5908
  %mode159 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %118, i32 0, i32 0, !dbg !5908
  %119 = load i32, i32* %mode159, align 8, !dbg !5908
  %cmp160 = icmp eq i32 %119, 28, !dbg !5908
  br i1 %cmp160, label %if.then166, label %lor.lhs.false162, !dbg !5908

lor.lhs.false162:                                 ; preds = %lor.lhs.false158
  %120 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5908
  %mode163 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %120, i32 0, i32 0, !dbg !5908
  %121 = load i32, i32* %mode163, align 8, !dbg !5908
  %cmp164 = icmp eq i32 %121, 29, !dbg !5908
  br i1 %cmp164, label %if.then166, label %if.end175, !dbg !5911

if.then166:                                       ; preds = %lor.lhs.false162, %lor.lhs.false158, %lor.lhs.false154, %lor.lhs.false150, %lor.lhs.false146, %if.then142
  %122 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5912
  call void @resetTransModal(%struct.TransInfo* %122), !dbg !5914
  %123 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5915
  call void @resetTransRestrictions(%struct.TransInfo* %123), !dbg !5916
  %124 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5917
  %mode167 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %124, i32 0, i32 0, !dbg !5919
  %125 = load i32, i32* %mode167, align 8, !dbg !5919
  %cmp168 = icmp eq i32 %125, 2, !dbg !5920
  br i1 %cmp168, label %if.then170, label %if.else171, !dbg !5921

if.then170:                                       ; preds = %if.then166
  %126 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5922
  call void @restoreTransObjects(%struct.TransInfo* %126), !dbg !5924
  %127 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5925
  call void @initTrackball(%struct.TransInfo* %127), !dbg !5926
  br label %if.end172, !dbg !5927

if.else171:                                       ; preds = %if.then166
  %128 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5928
  call void @restoreTransObjects(%struct.TransInfo* %128), !dbg !5930
  %129 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5931
  call void @initRotation(%struct.TransInfo* %129), !dbg !5932
  br label %if.end172

if.end172:                                        ; preds = %if.else171, %if.then170
  %130 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5933
  call void @initSnapping(%struct.TransInfo* %130, %struct.wmOperator* null), !dbg !5934
  %131 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5935
  %redraw173 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %131, i32 0, i32 17, !dbg !5936
  %132 = load i32, i32* %redraw173, align 8, !dbg !5937
  %or174 = or i32 %132, 1, !dbg !5937
  store i32 %or174, i32* %redraw173, align 8, !dbg !5937
  store i8 1, i8* %handled, align 1, !dbg !5938
  br label %if.end175, !dbg !5939

if.end175:                                        ; preds = %if.end172, %lor.lhs.false162
  br label %if.end176, !dbg !5940

if.end176:                                        ; preds = %if.end175, %land.lhs.true138, %sw.bb134
  br label %sw.epilog, !dbg !5941

sw.bb177:                                         ; preds = %if.then45
  %133 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5942
  %mode178 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %133, i32 0, i32 0, !dbg !5942
  %134 = load i32, i32* %mode178, align 8, !dbg !5942
  %cmp179 = icmp eq i32 %134, 2, !dbg !5942
  br i1 %cmp179, label %if.then197, label %lor.lhs.false181, !dbg !5942

lor.lhs.false181:                                 ; preds = %sw.bb177
  %135 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5942
  %mode182 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %135, i32 0, i32 0, !dbg !5942
  %136 = load i32, i32* %mode182, align 8, !dbg !5942
  %cmp183 = icmp eq i32 %136, 1, !dbg !5942
  br i1 %cmp183, label %if.then197, label %lor.lhs.false185, !dbg !5942

lor.lhs.false185:                                 ; preds = %lor.lhs.false181
  %137 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5942
  %mode186 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %137, i32 0, i32 0, !dbg !5942
  %138 = load i32, i32* %mode186, align 8, !dbg !5942
  %cmp187 = icmp eq i32 %138, 10, !dbg !5942
  br i1 %cmp187, label %if.then197, label %lor.lhs.false189, !dbg !5942

lor.lhs.false189:                                 ; preds = %lor.lhs.false185
  %139 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5942
  %mode190 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %139, i32 0, i32 0, !dbg !5942
  %140 = load i32, i32* %mode190, align 8, !dbg !5942
  %cmp191 = icmp eq i32 %140, 28, !dbg !5942
  br i1 %cmp191, label %if.then197, label %lor.lhs.false193, !dbg !5942

lor.lhs.false193:                                 ; preds = %lor.lhs.false189
  %141 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5942
  %mode194 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %141, i32 0, i32 0, !dbg !5942
  %142 = load i32, i32* %mode194, align 8, !dbg !5942
  %cmp195 = icmp eq i32 %142, 29, !dbg !5942
  br i1 %cmp195, label %if.then197, label %if.else211, !dbg !5944

if.then197:                                       ; preds = %lor.lhs.false193, %lor.lhs.false189, %lor.lhs.false185, %lor.lhs.false181, %sw.bb177
  %143 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5945
  %con198 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %143, i32 0, i32 13, !dbg !5948
  %mode199 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con198, i32 0, i32 7, !dbg !5949
  %144 = load i32, i32* %mode199, align 4, !dbg !5949
  %and200 = and i32 %144, 1, !dbg !5950
  %tobool201 = icmp ne i32 %and200, 0, !dbg !5950
  br i1 %tobool201, label %land.lhs.true202, label %if.end208, !dbg !5951

land.lhs.true202:                                 ; preds = %if.then197
  %145 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5952
  %con203 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %145, i32 0, i32 13, !dbg !5953
  %orientation = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con203, i32 0, i32 0, !dbg !5954
  %146 = load i16, i16* %orientation, align 8, !dbg !5954
  %conv204 = sext i16 %146 to i32, !dbg !5952
  %cmp205 = icmp eq i32 %conv204, 2, !dbg !5955
  br i1 %cmp205, label %if.then207, label %if.end208, !dbg !5956

if.then207:                                       ; preds = %land.lhs.true202
  %147 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5957
  call void @stopConstraint(%struct.TransInfo* %147), !dbg !5959
  br label %if.end208, !dbg !5960

if.end208:                                        ; preds = %if.then207, %land.lhs.true202, %if.then197
  %148 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5961
  call void @resetTransModal(%struct.TransInfo* %148), !dbg !5962
  %149 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5963
  call void @resetTransRestrictions(%struct.TransInfo* %149), !dbg !5964
  %150 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5965
  call void @restoreTransObjects(%struct.TransInfo* %150), !dbg !5966
  %151 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5967
  call void @initResize(%struct.TransInfo* %151), !dbg !5968
  %152 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5969
  call void @initSnapping(%struct.TransInfo* %152, %struct.wmOperator* null), !dbg !5970
  %153 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5971
  %redraw209 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %153, i32 0, i32 17, !dbg !5972
  %154 = load i32, i32* %redraw209, align 8, !dbg !5973
  %or210 = or i32 %154, 1, !dbg !5973
  store i32 %or210, i32* %redraw209, align 8, !dbg !5973
  store i8 1, i8* %handled, align 1, !dbg !5974
  br label %if.end236, !dbg !5975

if.else211:                                       ; preds = %lor.lhs.false193
  %155 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5976
  %mode212 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %155, i32 0, i32 0, !dbg !5978
  %156 = load i32, i32* %mode212, align 8, !dbg !5978
  %cmp213 = icmp eq i32 %156, 8, !dbg !5979
  br i1 %cmp213, label %if.then215, label %if.else220, !dbg !5980

if.then215:                                       ; preds = %if.else211
  %157 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5981
  %flag216 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %157, i32 0, i32 1, !dbg !5983
  %158 = load i32, i32* %flag216, align 4, !dbg !5984
  %xor217 = xor i32 %158, 16777216, !dbg !5984
  store i32 %xor217, i32* %flag216, align 4, !dbg !5984
  %159 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5985
  %redraw218 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %159, i32 0, i32 17, !dbg !5986
  %160 = load i32, i32* %redraw218, align 8, !dbg !5987
  %or219 = or i32 %160, 1, !dbg !5987
  store i32 %or219, i32* %redraw218, align 8, !dbg !5987
  store i8 1, i8* %handled, align 1, !dbg !5988
  br label %if.end235, !dbg !5989

if.else220:                                       ; preds = %if.else211
  %161 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5990
  %mode221 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %161, i32 0, i32 0, !dbg !5992
  %162 = load i32, i32* %mode221, align 8, !dbg !5992
  %cmp222 = icmp eq i32 %162, 3, !dbg !5993
  br i1 %cmp222, label %if.then224, label %if.end234, !dbg !5994

if.then224:                                       ; preds = %if.else220
  %163 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !5995
  %options225 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %163, i32 0, i32 4, !dbg !5998
  %164 = load i32, i32* %options225, align 8, !dbg !5998
  %and226 = and i32 %164, 64, !dbg !5999
  %tobool227 = icmp ne i32 %and226, 0, !dbg !5999
  br i1 %tobool227, label %if.then228, label %if.end233, !dbg !6000

if.then228:                                       ; preds = %if.then224
  %165 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6001
  call void @restoreTransObjects(%struct.TransInfo* %165), !dbg !6003
  %166 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6004
  %flag229 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %166, i32 0, i32 1, !dbg !6005
  %167 = load i32, i32* %flag229, align 4, !dbg !6006
  %xor230 = xor i32 %167, 16777216, !dbg !6006
  store i32 %xor230, i32* %flag229, align 4, !dbg !6006
  %168 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6007
  %redraw231 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %168, i32 0, i32 17, !dbg !6008
  %169 = load i32, i32* %redraw231, align 8, !dbg !6009
  %or232 = or i32 %169, 1, !dbg !6009
  store i32 %or232, i32* %redraw231, align 8, !dbg !6009
  store i8 1, i8* %handled, align 1, !dbg !6010
  br label %if.end233, !dbg !6011

if.end233:                                        ; preds = %if.then228, %if.then224
  br label %if.end234, !dbg !6012

if.end234:                                        ; preds = %if.end233, %if.else220
  br label %if.end235

if.end235:                                        ; preds = %if.end234, %if.then215
  br label %if.end236

if.end236:                                        ; preds = %if.end235, %if.end208
  br label %sw.epilog, !dbg !6013

sw.bb237:                                         ; preds = %if.then45
  %170 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6014
  %modifiers238 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %170, i32 0, i32 2, !dbg !6015
  %171 = load i32, i32* %modifiers238, align 8, !dbg !6016
  %or239 = or i32 %171, 8, !dbg !6016
  store i32 %or239, i32* %modifiers238, align 8, !dbg !6016
  %172 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6017
  %redraw240 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %172, i32 0, i32 17, !dbg !6018
  %173 = load i32, i32* %redraw240, align 8, !dbg !6019
  %or241 = or i32 %173, 1, !dbg !6019
  store i32 %or241, i32* %redraw240, align 8, !dbg !6019
  store i8 1, i8* %handled, align 1, !dbg !6020
  br label %sw.epilog, !dbg !6021

sw.bb242:                                         ; preds = %if.then45
  %174 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6022
  %modifiers243 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %174, i32 0, i32 2, !dbg !6023
  %175 = load i32, i32* %modifiers243, align 8, !dbg !6024
  %and244 = and i32 %175, -9, !dbg !6024
  store i32 %and244, i32* %modifiers243, align 8, !dbg !6024
  %176 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6025
  %redraw245 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %176, i32 0, i32 17, !dbg !6026
  %177 = load i32, i32* %redraw245, align 8, !dbg !6027
  %or246 = or i32 %177, 1, !dbg !6027
  store i32 %or246, i32* %redraw245, align 8, !dbg !6027
  store i8 1, i8* %handled, align 1, !dbg !6028
  br label %sw.epilog, !dbg !6029

sw.bb247:                                         ; preds = %if.then45
  %178 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6030
  %modifiers248 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %178, i32 0, i32 2, !dbg !6031
  %179 = load i32, i32* %modifiers248, align 8, !dbg !6032
  %xor249 = xor i32 %179, 4, !dbg !6032
  store i32 %xor249, i32* %modifiers248, align 8, !dbg !6032
  %180 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6033
  %redraw250 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %180, i32 0, i32 17, !dbg !6034
  %181 = load i32, i32* %redraw250, align 8, !dbg !6035
  %or251 = or i32 %181, 1, !dbg !6035
  store i32 %or251, i32* %redraw250, align 8, !dbg !6035
  store i8 1, i8* %handled, align 1, !dbg !6036
  br label %sw.epilog, !dbg !6037

sw.bb252:                                         ; preds = %if.then45
  %182 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6038
  %flag253 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %182, i32 0, i32 1, !dbg !6040
  %183 = load i32, i32* %flag253, align 4, !dbg !6040
  %and254 = and i32 %183, 256, !dbg !6041
  %tobool255 = icmp ne i32 %and254, 0, !dbg !6041
  br i1 %tobool255, label %if.end259, label %if.then256, !dbg !6042

if.then256:                                       ; preds = %sw.bb252
  %184 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6043
  %185 = load i8, i8* %cmode, align 1, !dbg !6045
  call void @transform_event_xyz_constraint(%struct.TransInfo* %184, i16 signext 120, i8 zeroext %185), !dbg !6046
  %186 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6047
  %redraw257 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %186, i32 0, i32 17, !dbg !6048
  %187 = load i32, i32* %redraw257, align 8, !dbg !6049
  %or258 = or i32 %187, 1, !dbg !6049
  store i32 %or258, i32* %redraw257, align 8, !dbg !6049
  store i8 1, i8* %handled, align 1, !dbg !6050
  br label %if.end259, !dbg !6051

if.end259:                                        ; preds = %if.then256, %sw.bb252
  br label %sw.epilog, !dbg !6052

sw.bb260:                                         ; preds = %if.then45
  %188 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6053
  %flag261 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %188, i32 0, i32 1, !dbg !6055
  %189 = load i32, i32* %flag261, align 4, !dbg !6055
  %and262 = and i32 %189, 256, !dbg !6056
  %cmp263 = icmp eq i32 %and262, 0, !dbg !6057
  br i1 %cmp263, label %if.then265, label %if.end268, !dbg !6058

if.then265:                                       ; preds = %sw.bb260
  %190 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6059
  %191 = load i8, i8* %cmode, align 1, !dbg !6061
  call void @transform_event_xyz_constraint(%struct.TransInfo* %190, i16 signext 121, i8 zeroext %191), !dbg !6062
  %192 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6063
  %redraw266 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %192, i32 0, i32 17, !dbg !6064
  %193 = load i32, i32* %redraw266, align 8, !dbg !6065
  %or267 = or i32 %193, 1, !dbg !6065
  store i32 %or267, i32* %redraw266, align 8, !dbg !6065
  store i8 1, i8* %handled, align 1, !dbg !6066
  br label %if.end268, !dbg !6067

if.end268:                                        ; preds = %if.then265, %sw.bb260
  br label %sw.epilog, !dbg !6068

sw.bb269:                                         ; preds = %if.then45
  %194 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6069
  %flag270 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %194, i32 0, i32 1, !dbg !6071
  %195 = load i32, i32* %flag270, align 4, !dbg !6071
  %and271 = and i32 %195, 256, !dbg !6072
  %cmp272 = icmp eq i32 %and271, 0, !dbg !6073
  br i1 %cmp272, label %if.then274, label %if.end277, !dbg !6074

if.then274:                                       ; preds = %sw.bb269
  %196 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6075
  %197 = load i8, i8* %cmode, align 1, !dbg !6077
  call void @transform_event_xyz_constraint(%struct.TransInfo* %196, i16 signext 122, i8 zeroext %197), !dbg !6078
  %198 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6079
  %redraw275 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %198, i32 0, i32 17, !dbg !6080
  %199 = load i32, i32* %redraw275, align 8, !dbg !6081
  %or276 = or i32 %199, 1, !dbg !6081
  store i32 %or276, i32* %redraw275, align 8, !dbg !6081
  store i8 1, i8* %handled, align 1, !dbg !6082
  br label %if.end277, !dbg !6083

if.end277:                                        ; preds = %if.then274, %sw.bb269
  br label %sw.epilog, !dbg !6084

sw.bb278:                                         ; preds = %if.then45
  %200 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6085
  %flag279 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %200, i32 0, i32 1, !dbg !6087
  %201 = load i32, i32* %flag279, align 4, !dbg !6087
  %and280 = and i32 %201, 33024, !dbg !6088
  %cmp281 = icmp eq i32 %and280, 0, !dbg !6089
  br i1 %cmp281, label %if.then283, label %if.end292, !dbg !6090

if.then283:                                       ; preds = %sw.bb278
  %202 = load i8, i8* %cmode, align 1, !dbg !6091
  %conv284 = zext i8 %202 to i32, !dbg !6091
  %cmp285 = icmp eq i32 %conv284, 88, !dbg !6094
  br i1 %cmp285, label %if.then287, label %if.else288, !dbg !6095

if.then287:                                       ; preds = %if.then283
  %203 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6096
  call void @stopConstraint(%struct.TransInfo* %203), !dbg !6098
  br label %if.end289, !dbg !6099

if.else288:                                       ; preds = %if.then283
  %204 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6100
  %205 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6102
  %current_orientation = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %205, i32 0, i32 43, !dbg !6103
  %206 = load i16, i16* %current_orientation, align 2, !dbg !6103
  call void @setUserConstraint(%struct.TransInfo* %204, i16 signext %206, i32 12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i64 0, i64 0)), !dbg !6104
  br label %if.end289

if.end289:                                        ; preds = %if.else288, %if.then287
  %207 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6105
  %redraw290 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %207, i32 0, i32 17, !dbg !6106
  %208 = load i32, i32* %redraw290, align 8, !dbg !6107
  %or291 = or i32 %208, 1, !dbg !6107
  store i32 %or291, i32* %redraw290, align 8, !dbg !6107
  store i8 1, i8* %handled, align 1, !dbg !6108
  br label %if.end292, !dbg !6109

if.end292:                                        ; preds = %if.end289, %sw.bb278
  br label %sw.epilog, !dbg !6110

sw.bb293:                                         ; preds = %if.then45
  %209 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6111
  %flag294 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %209, i32 0, i32 1, !dbg !6113
  %210 = load i32, i32* %flag294, align 4, !dbg !6113
  %and295 = and i32 %210, 33024, !dbg !6114
  %cmp296 = icmp eq i32 %and295, 0, !dbg !6115
  br i1 %cmp296, label %if.then298, label %if.end308, !dbg !6116

if.then298:                                       ; preds = %sw.bb293
  %211 = load i8, i8* %cmode, align 1, !dbg !6117
  %conv299 = zext i8 %211 to i32, !dbg !6117
  %cmp300 = icmp eq i32 %conv299, 89, !dbg !6120
  br i1 %cmp300, label %if.then302, label %if.else303, !dbg !6121

if.then302:                                       ; preds = %if.then298
  %212 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6122
  call void @stopConstraint(%struct.TransInfo* %212), !dbg !6124
  br label %if.end305, !dbg !6125

if.else303:                                       ; preds = %if.then298
  %213 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6126
  %214 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6128
  %current_orientation304 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %214, i32 0, i32 43, !dbg !6129
  %215 = load i16, i16* %current_orientation304, align 2, !dbg !6129
  call void @setUserConstraint(%struct.TransInfo* %213, i16 signext %215, i32 10, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.56, i64 0, i64 0)), !dbg !6130
  br label %if.end305

if.end305:                                        ; preds = %if.else303, %if.then302
  %216 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6131
  %redraw306 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %216, i32 0, i32 17, !dbg !6132
  %217 = load i32, i32* %redraw306, align 8, !dbg !6133
  %or307 = or i32 %217, 1, !dbg !6133
  store i32 %or307, i32* %redraw306, align 8, !dbg !6133
  store i8 1, i8* %handled, align 1, !dbg !6134
  br label %if.end308, !dbg !6135

if.end308:                                        ; preds = %if.end305, %sw.bb293
  br label %sw.epilog, !dbg !6136

sw.bb309:                                         ; preds = %if.then45
  %218 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6137
  %flag310 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %218, i32 0, i32 1, !dbg !6139
  %219 = load i32, i32* %flag310, align 4, !dbg !6139
  %and311 = and i32 %219, 33024, !dbg !6140
  %cmp312 = icmp eq i32 %and311, 0, !dbg !6141
  br i1 %cmp312, label %if.then314, label %if.end324, !dbg !6142

if.then314:                                       ; preds = %sw.bb309
  %220 = load i8, i8* %cmode, align 1, !dbg !6143
  %conv315 = zext i8 %220 to i32, !dbg !6143
  %cmp316 = icmp eq i32 %conv315, 90, !dbg !6146
  br i1 %cmp316, label %if.then318, label %if.else319, !dbg !6147

if.then318:                                       ; preds = %if.then314
  %221 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6148
  call void @stopConstraint(%struct.TransInfo* %221), !dbg !6150
  br label %if.end321, !dbg !6151

if.else319:                                       ; preds = %if.then314
  %222 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6152
  %223 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6154
  %current_orientation320 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %223, i32 0, i32 43, !dbg !6155
  %224 = load i16, i16* %current_orientation320, align 2, !dbg !6155
  call void @setUserConstraint(%struct.TransInfo* %222, i16 signext %224, i32 6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.57, i64 0, i64 0)), !dbg !6156
  br label %if.end321

if.end321:                                        ; preds = %if.else319, %if.then318
  %225 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6157
  %redraw322 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %225, i32 0, i32 17, !dbg !6158
  %226 = load i32, i32* %redraw322, align 8, !dbg !6159
  %or323 = or i32 %226, 1, !dbg !6159
  store i32 %or323, i32* %redraw322, align 8, !dbg !6159
  store i8 1, i8* %handled, align 1, !dbg !6160
  br label %if.end324, !dbg !6161

if.end324:                                        ; preds = %if.end321, %sw.bb309
  br label %sw.epilog, !dbg !6162

sw.bb325:                                         ; preds = %if.then45
  %227 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6163
  %flag326 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %227, i32 0, i32 1, !dbg !6165
  %228 = load i32, i32* %flag326, align 4, !dbg !6165
  %and327 = and i32 %228, 256, !dbg !6166
  %cmp328 = icmp eq i32 %and327, 0, !dbg !6167
  br i1 %cmp328, label %if.then330, label %if.end333, !dbg !6168

if.then330:                                       ; preds = %sw.bb325
  %229 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6169
  call void @stopConstraint(%struct.TransInfo* %229), !dbg !6171
  %230 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6172
  %redraw331 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %230, i32 0, i32 17, !dbg !6173
  %231 = load i32, i32* %redraw331, align 8, !dbg !6174
  %or332 = or i32 %231, 1, !dbg !6174
  store i32 %or332, i32* %redraw331, align 8, !dbg !6174
  store i8 1, i8* %handled, align 1, !dbg !6175
  br label %if.end333, !dbg !6176

if.end333:                                        ; preds = %if.then330, %sw.bb325
  br label %sw.epilog, !dbg !6177

sw.bb334:                                         ; preds = %if.then45
  %232 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6178
  call void @addSnapPoint(%struct.TransInfo* %232), !dbg !6179
  %233 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6180
  %redraw335 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %233, i32 0, i32 17, !dbg !6181
  %234 = load i32, i32* %redraw335, align 8, !dbg !6182
  %or336 = or i32 %234, 1, !dbg !6182
  store i32 %or336, i32* %redraw335, align 8, !dbg !6182
  store i8 1, i8* %handled, align 1, !dbg !6183
  br label %sw.epilog, !dbg !6184

sw.bb337:                                         ; preds = %if.then45
  %235 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6185
  call void @removeSnapPoint(%struct.TransInfo* %235), !dbg !6186
  %236 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6187
  %redraw338 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %236, i32 0, i32 17, !dbg !6188
  %237 = load i32, i32* %redraw338, align 8, !dbg !6189
  %or339 = or i32 %237, 1, !dbg !6189
  store i32 %or339, i32* %redraw338, align 8, !dbg !6189
  store i8 1, i8* %handled, align 1, !dbg !6190
  br label %sw.epilog, !dbg !6191

sw.bb340:                                         ; preds = %if.then45
  %238 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6192
  %flag341 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %238, i32 0, i32 1, !dbg !6194
  %239 = load i32, i32* %flag341, align 4, !dbg !6194
  %and342 = and i32 %239, 2048, !dbg !6195
  %tobool343 = icmp ne i32 %and342, 0, !dbg !6195
  br i1 %tobool343, label %if.then344, label %if.end362, !dbg !6196

if.then344:                                       ; preds = %sw.bb340
  call void @llvm.dbg.declare(metadata float* %fac, metadata !6197, metadata !DIExpression()), !dbg !6199
  %240 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6200
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %240, i32 0, i32 5, !dbg !6201
  %241 = load i32, i32* %y, align 8, !dbg !6201
  %242 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6202
  %prevy = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %242, i32 0, i32 13, !dbg !6203
  %243 = load i32, i32* %prevy, align 4, !dbg !6203
  %sub = sub nsw i32 %241, %243, !dbg !6204
  %conv345 = sitofp i32 %sub to float, !dbg !6205
  %mul = fmul float 0x3F747AE140000000, %conv345, !dbg !6206
  %add = fadd float 1.000000e+00, %mul, !dbg !6207
  store float %add, float* %fac, align 4, !dbg !6199
  %244 = load float, float* %fac, align 4, !dbg !6208
  %245 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6209
  %prop_size = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %245, i32 0, i32 18, !dbg !6210
  %246 = load float, float* %prop_size, align 4, !dbg !6211
  %mul346 = fmul float %246, %244, !dbg !6211
  store float %mul346, float* %prop_size, align 4, !dbg !6211
  %247 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6212
  %spacetype347 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %247, i32 0, i32 33, !dbg !6214
  %248 = load i8, i8* %spacetype347, align 8, !dbg !6214
  %conv348 = zext i8 %248 to i32, !dbg !6212
  %cmp349 = icmp eq i32 %conv348, 1, !dbg !6215
  br i1 %cmp349, label %land.lhs.true351, label %if.end359, !dbg !6216

land.lhs.true351:                                 ; preds = %if.then344
  %249 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6217
  %persp = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %249, i32 0, i32 31, !dbg !6218
  %250 = load i16, i16* %persp, align 4, !dbg !6218
  %conv352 = sext i16 %250 to i32, !dbg !6217
  %cmp353 = icmp ne i32 %conv352, 0, !dbg !6219
  br i1 %cmp353, label %if.then355, label %if.end359, !dbg !6220

if.then355:                                       ; preds = %land.lhs.true351
  %251 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6221
  %prop_size356 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %251, i32 0, i32 18, !dbg !6222
  %252 = load float, float* %prop_size356, align 4, !dbg !6222
  %253 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6223
  %view = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %253, i32 0, i32 52, !dbg !6224
  %254 = load i8*, i8** %view, align 8, !dbg !6224
  %255 = bitcast i8* %254 to %struct.View3D*, !dbg !6225
  %far = getelementptr inbounds %struct.View3D, %struct.View3D* %255, i32 0, i32 33, !dbg !6226
  %256 = load float, float* %far, align 8, !dbg !6226
  %call357 = call float @min_ff(float %252, float %256), !dbg !6227
  %257 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6228
  %prop_size358 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %257, i32 0, i32 18, !dbg !6229
  store float %call357, float* %prop_size358, align 4, !dbg !6230
  br label %if.end359, !dbg !6228

if.end359:                                        ; preds = %if.then355, %land.lhs.true351, %if.then344
  %258 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6231
  call void @calculatePropRatio(%struct.TransInfo* %258), !dbg !6232
  %259 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6233
  %redraw360 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %259, i32 0, i32 17, !dbg !6234
  %260 = load i32, i32* %redraw360, align 8, !dbg !6235
  %or361 = or i32 %260, 1, !dbg !6235
  store i32 %or361, i32* %redraw360, align 8, !dbg !6235
  store i8 1, i8* %handled, align 1, !dbg !6236
  br label %if.end362, !dbg !6237

if.end362:                                        ; preds = %if.end359, %sw.bb340
  br label %sw.epilog, !dbg !6238

sw.bb363:                                         ; preds = %if.then45
  %261 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6239
  %flag364 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %261, i32 0, i32 1, !dbg !6241
  %262 = load i32, i32* %flag364, align 4, !dbg !6241
  %and365 = and i32 %262, 2048, !dbg !6242
  %tobool366 = icmp ne i32 %and365, 0, !dbg !6242
  br i1 %tobool366, label %if.then367, label %if.end388, !dbg !6243

if.then367:                                       ; preds = %sw.bb363
  %263 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6244
  %prop_size368 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %263, i32 0, i32 18, !dbg !6246
  %264 = load float, float* %prop_size368, align 4, !dbg !6247
  %mul369 = fmul float %264, 0x3FF19999A0000000, !dbg !6247
  store float %mul369, float* %prop_size368, align 4, !dbg !6247
  %265 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6248
  %spacetype370 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %265, i32 0, i32 33, !dbg !6250
  %266 = load i8, i8* %spacetype370, align 8, !dbg !6250
  %conv371 = zext i8 %266 to i32, !dbg !6248
  %cmp372 = icmp eq i32 %conv371, 1, !dbg !6251
  br i1 %cmp372, label %land.lhs.true374, label %if.end385, !dbg !6252

land.lhs.true374:                                 ; preds = %if.then367
  %267 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6253
  %persp375 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %267, i32 0, i32 31, !dbg !6254
  %268 = load i16, i16* %persp375, align 4, !dbg !6254
  %conv376 = sext i16 %268 to i32, !dbg !6253
  %cmp377 = icmp ne i32 %conv376, 0, !dbg !6255
  br i1 %cmp377, label %if.then379, label %if.end385, !dbg !6256

if.then379:                                       ; preds = %land.lhs.true374
  %269 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6257
  %prop_size380 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %269, i32 0, i32 18, !dbg !6258
  %270 = load float, float* %prop_size380, align 4, !dbg !6258
  %271 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6259
  %view381 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %271, i32 0, i32 52, !dbg !6260
  %272 = load i8*, i8** %view381, align 8, !dbg !6260
  %273 = bitcast i8* %272 to %struct.View3D*, !dbg !6261
  %far382 = getelementptr inbounds %struct.View3D, %struct.View3D* %273, i32 0, i32 33, !dbg !6262
  %274 = load float, float* %far382, align 8, !dbg !6262
  %call383 = call float @min_ff(float %270, float %274), !dbg !6263
  %275 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6264
  %prop_size384 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %275, i32 0, i32 18, !dbg !6265
  store float %call383, float* %prop_size384, align 4, !dbg !6266
  br label %if.end385, !dbg !6264

if.end385:                                        ; preds = %if.then379, %land.lhs.true374, %if.then367
  %276 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6267
  call void @calculatePropRatio(%struct.TransInfo* %276), !dbg !6268
  %277 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6269
  %redraw386 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %277, i32 0, i32 17, !dbg !6270
  %278 = load i32, i32* %redraw386, align 8, !dbg !6271
  %or387 = or i32 %278, 1, !dbg !6271
  store i32 %or387, i32* %redraw386, align 8, !dbg !6271
  store i8 1, i8* %handled, align 1, !dbg !6272
  br label %if.end388, !dbg !6273

if.end388:                                        ; preds = %if.end385, %sw.bb363
  br label %sw.epilog, !dbg !6274

sw.bb389:                                         ; preds = %if.then45
  %279 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6275
  %flag390 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %279, i32 0, i32 1, !dbg !6277
  %280 = load i32, i32* %flag390, align 4, !dbg !6277
  %and391 = and i32 %280, 2048, !dbg !6278
  %tobool392 = icmp ne i32 %and391, 0, !dbg !6278
  br i1 %tobool392, label %if.then393, label %if.end398, !dbg !6279

if.then393:                                       ; preds = %sw.bb389
  %281 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6280
  %prop_size394 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %281, i32 0, i32 18, !dbg !6282
  %282 = load float, float* %prop_size394, align 4, !dbg !6283
  %mul395 = fmul float %282, 0x3FED1745C0000000, !dbg !6283
  store float %mul395, float* %prop_size394, align 4, !dbg !6283
  %283 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6284
  call void @calculatePropRatio(%struct.TransInfo* %283), !dbg !6285
  %284 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6286
  %redraw396 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %284, i32 0, i32 17, !dbg !6287
  %285 = load i32, i32* %redraw396, align 8, !dbg !6288
  %or397 = or i32 %285, 1, !dbg !6288
  store i32 %or397, i32* %redraw396, align 8, !dbg !6288
  store i8 1, i8* %handled, align 1, !dbg !6289
  br label %if.end398, !dbg !6290

if.end398:                                        ; preds = %if.then393, %sw.bb389
  br label %sw.epilog, !dbg !6291

sw.bb399:                                         ; preds = %if.then45, %if.then45
  %286 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6292
  %redraw400 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %286, i32 0, i32 17, !dbg !6293
  %287 = load i32, i32* %redraw400, align 8, !dbg !6294
  %or401 = or i32 %287, 1, !dbg !6294
  store i32 %or401, i32* %redraw400, align 8, !dbg !6294
  store i8 1, i8* %handled, align 1, !dbg !6295
  br label %sw.epilog, !dbg !6296

sw.bb402:                                         ; preds = %if.then45
  %288 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6297
  %flag403 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %288, i32 0, i32 1, !dbg !6299
  %289 = load i32, i32* %flag403, align 4, !dbg !6299
  %and404 = and i32 %289, 262144, !dbg !6300
  %tobool405 = icmp ne i32 %and404, 0, !dbg !6300
  br i1 %tobool405, label %if.then406, label %if.end409, !dbg !6301

if.then406:                                       ; preds = %sw.bb402
  %290 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6302
  call void @transform_autoik_update(%struct.TransInfo* %290, i16 signext 1), !dbg !6304
  %291 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6305
  %redraw407 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %291, i32 0, i32 17, !dbg !6306
  %292 = load i32, i32* %redraw407, align 8, !dbg !6307
  %or408 = or i32 %292, 1, !dbg !6307
  store i32 %or408, i32* %redraw407, align 8, !dbg !6307
  store i8 1, i8* %handled, align 1, !dbg !6308
  br label %if.end409, !dbg !6309

if.end409:                                        ; preds = %if.then406, %sw.bb402
  br label %sw.epilog, !dbg !6310

sw.bb410:                                         ; preds = %if.then45
  %293 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6311
  %flag411 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %293, i32 0, i32 1, !dbg !6313
  %294 = load i32, i32* %flag411, align 4, !dbg !6313
  %and412 = and i32 %294, 262144, !dbg !6314
  %tobool413 = icmp ne i32 %and412, 0, !dbg !6314
  br i1 %tobool413, label %if.then414, label %if.end417, !dbg !6315

if.then414:                                       ; preds = %sw.bb410
  %295 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6316
  call void @transform_autoik_update(%struct.TransInfo* %295, i16 signext -1), !dbg !6318
  %296 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6319
  %redraw415 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %296, i32 0, i32 17, !dbg !6320
  %297 = load i32, i32* %redraw415, align 8, !dbg !6321
  %or416 = or i32 %297, 1, !dbg !6321
  store i32 %or416, i32* %redraw415, align 8, !dbg !6321
  store i8 1, i8* %handled, align 1, !dbg !6322
  br label %if.end417, !dbg !6323

if.end417:                                        ; preds = %if.then414, %sw.bb410
  br label %sw.epilog, !dbg !6324

sw.default:                                       ; preds = %if.then45
  br label %sw.epilog, !dbg !6325

sw.epilog:                                        ; preds = %sw.default, %if.end417, %if.end409, %sw.bb399, %if.end398, %if.end388, %if.end362, %sw.bb337, %sw.bb334, %if.end333, %if.end324, %if.end308, %if.end292, %if.end277, %if.end268, %if.end259, %sw.bb247, %sw.bb242, %sw.bb237, %if.end236, %if.end176, %if.end133, %sw.bb49, %sw.bb
  br label %if.end737, !dbg !6326

if.else418:                                       ; preds = %if.else40
  %298 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6327
  %val419 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %298, i32 0, i32 3, !dbg !6329
  %299 = load i16, i16* %val419, align 2, !dbg !6329
  %conv420 = sext i16 %299 to i32, !dbg !6327
  %cmp421 = icmp eq i32 %conv420, 1, !dbg !6330
  br i1 %cmp421, label %if.then423, label %if.else670, !dbg !6331

if.then423:                                       ; preds = %if.else418
  %300 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6332
  %type424 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %300, i32 0, i32 2, !dbg !6334
  %301 = load i16, i16* %type424, align 8, !dbg !6334
  %conv425 = sext i16 %301 to i32, !dbg !6332
  switch i32 %conv425, label %sw.default665 [
    i32 3, label %sw.bb426
    i32 217, label %sw.bb428
    i32 216, label %sw.bb428
    i32 221, label %sw.bb433
    i32 2, label %sw.bb435
    i32 218, label %sw.bb479
    i32 163, label %sw.bb481
    i32 220, label %sw.bb481
    i32 103, label %sw.bb483
    i32 115, label %sw.bb499
    i32 114, label %sw.bb515
    i32 99, label %sw.bb546
    i32 120, label %sw.bb566
    i32 121, label %sw.bb566
    i32 122, label %sw.bb566
    i32 111, label %sw.bb573
    i32 164, label %sw.bb589
    i32 168, label %sw.bb618
    i32 11, label %sw.bb618
    i32 162, label %sw.bb627
    i32 169, label %sw.bb640
    i32 10, label %sw.bb640
    i32 213, label %sw.bb649
    i32 214, label %sw.bb649
  ], !dbg !6335

sw.bb426:                                         ; preds = %if.then423
  %302 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6336
  %state427 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %302, i32 0, i32 3, !dbg !6338
  store i16 3, i16* %state427, align 4, !dbg !6339
  store i8 1, i8* %handled, align 1, !dbg !6340
  br label %sw.epilog666, !dbg !6341

sw.bb428:                                         ; preds = %if.then423, %if.then423
  %303 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6342
  %modifiers429 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %303, i32 0, i32 2, !dbg !6343
  %304 = load i32, i32* %modifiers429, align 8, !dbg !6344
  %or430 = or i32 %304, 16, !dbg !6344
  store i32 %or430, i32* %modifiers429, align 8, !dbg !6344
  %305 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6345
  %redraw431 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %305, i32 0, i32 17, !dbg !6346
  %306 = load i32, i32* %redraw431, align 8, !dbg !6347
  %or432 = or i32 %306, 1, !dbg !6347
  store i32 %or432, i32* %redraw431, align 8, !dbg !6347
  store i8 1, i8* %handled, align 1, !dbg !6348
  br label %sw.epilog666, !dbg !6349

sw.bb433:                                         ; preds = %if.then423
  %307 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6350
  %state434 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %307, i32 0, i32 3, !dbg !6351
  store i16 2, i16* %state434, align 4, !dbg !6352
  store i8 1, i8* %handled, align 1, !dbg !6353
  br label %sw.epilog666, !dbg !6354

sw.bb435:                                         ; preds = %if.then423
  %308 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6355
  %flag436 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %308, i32 0, i32 1, !dbg !6357
  %309 = load i32, i32* %flag436, align 4, !dbg !6357
  %and437 = and i32 %309, 256, !dbg !6358
  %cmp438 = icmp eq i32 %and437, 0, !dbg !6359
  br i1 %cmp438, label %if.then440, label %if.end478, !dbg !6360

if.then440:                                       ; preds = %sw.bb435
  %310 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6361
  %flag441 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %310, i32 0, i32 1, !dbg !6364
  %311 = load i32, i32* %flag441, align 4, !dbg !6364
  %and442 = and i32 %311, 16, !dbg !6365
  %tobool443 = icmp ne i32 %and442, 0, !dbg !6365
  br i1 %tobool443, label %if.then444, label %if.else456, !dbg !6366

if.then444:                                       ; preds = %if.then440
  %312 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6367
  %mode445 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %312, i32 0, i32 0, !dbg !6370
  %313 = load i32, i32* %mode445, align 8, !dbg !6370
  %cmp446 = icmp eq i32 %313, 1, !dbg !6371
  br i1 %cmp446, label %if.then448, label %if.else449, !dbg !6372

if.then448:                                       ; preds = %if.then444
  %314 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6373
  call void @setLocalConstraint(%struct.TransInfo* %314, i32 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58, i64 0, i64 0)), !dbg !6374
  br label %if.end455, !dbg !6374

if.else449:                                       ; preds = %if.then444
  %315 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6375
  %mode450 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %315, i32 0, i32 0, !dbg !6377
  %316 = load i32, i32* %mode450, align 8, !dbg !6377
  %cmp451 = icmp eq i32 %316, 2, !dbg !6378
  br i1 %cmp451, label %if.then453, label %if.end454, !dbg !6379

if.then453:                                       ; preds = %if.else449
  %317 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6380
  call void @restoreTransObjects(%struct.TransInfo* %317), !dbg !6382
  %318 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6383
  call void @initTrackball(%struct.TransInfo* %318), !dbg !6384
  br label %if.end454, !dbg !6385

if.end454:                                        ; preds = %if.then453, %if.else449
  br label %if.end455

if.end455:                                        ; preds = %if.end454, %if.then448
  br label %if.end475, !dbg !6386

if.else456:                                       ; preds = %if.then440
  %319 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6387
  %modifiers457 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %319, i32 0, i32 2, !dbg !6389
  %320 = load i32, i32* %modifiers457, align 8, !dbg !6390
  %or458 = or i32 %320, 1, !dbg !6390
  store i32 %or458, i32* %modifiers457, align 8, !dbg !6390
  %321 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6391
  %con459 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %321, i32 0, i32 13, !dbg !6393
  %mode460 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con459, i32 0, i32 7, !dbg !6394
  %322 = load i32, i32* %mode460, align 4, !dbg !6394
  %and461 = and i32 %322, 1, !dbg !6395
  %tobool462 = icmp ne i32 %and461, 0, !dbg !6395
  br i1 %tobool462, label %if.then463, label %if.else464, !dbg !6396

if.then463:                                       ; preds = %if.else456
  %323 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6397
  call void @stopConstraint(%struct.TransInfo* %323), !dbg !6399
  br label %if.end474, !dbg !6400

if.else464:                                       ; preds = %if.else456
  %324 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6401
  %shift = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %324, i32 0, i32 17, !dbg !6404
  %325 = load i16, i16* %shift, align 8, !dbg !6404
  %tobool465 = icmp ne i16 %325, 0, !dbg !6401
  br i1 %tobool465, label %if.then466, label %if.else468, !dbg !6405

if.then466:                                       ; preds = %if.else464
  %326 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6406
  %327 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6408
  %spacemtx = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %327, i32 0, i32 37, !dbg !6409
  %arraydecay467 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %spacemtx, i64 0, i64 0, !dbg !6408
  call void @initSelectConstraint(%struct.TransInfo* %326, [3 x float]* %arraydecay467), !dbg !6410
  br label %if.end473, !dbg !6411

if.else468:                                       ; preds = %if.else464
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mati, metadata !6412, metadata !DIExpression()), !dbg !6414
  %328 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6415
  %spacename = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %328, i32 0, i32 38, !dbg !6416
  %arraydecay469 = getelementptr inbounds [64 x i8], [64 x i8]* %spacename, i64 0, i64 0, !dbg !6415
  %call470 = call i8* @strcpy(i8* %arraydecay469, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i64 0, i64 0)) #5, !dbg !6417
  %arraydecay471 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mati, i64 0, i64 0, !dbg !6418
  call void @unit_m3([3 x float]* %arraydecay471), !dbg !6419
  %329 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6420
  %arraydecay472 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mati, i64 0, i64 0, !dbg !6421
  call void @initSelectConstraint(%struct.TransInfo* %329, [3 x float]* %arraydecay472), !dbg !6422
  br label %if.end473

if.end473:                                        ; preds = %if.else468, %if.then466
  %330 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6423
  call void @postSelectConstraint(%struct.TransInfo* %330), !dbg !6424
  br label %if.end474

if.end474:                                        ; preds = %if.end473, %if.then463
  br label %if.end475

if.end475:                                        ; preds = %if.end474, %if.end455
  %331 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6425
  %redraw476 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %331, i32 0, i32 17, !dbg !6426
  %332 = load i32, i32* %redraw476, align 8, !dbg !6427
  %or477 = or i32 %332, 1, !dbg !6427
  store i32 %or477, i32* %redraw476, align 8, !dbg !6427
  store i8 1, i8* %handled, align 1, !dbg !6428
  br label %if.end478, !dbg !6429

if.end478:                                        ; preds = %if.end475, %sw.bb435
  br label %sw.epilog666, !dbg !6430

sw.bb479:                                         ; preds = %if.then423
  %333 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6431
  %state480 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %333, i32 0, i32 3, !dbg !6432
  store i16 3, i16* %state480, align 4, !dbg !6433
  store i8 1, i8* %handled, align 1, !dbg !6434
  br label %sw.epilog666, !dbg !6435

sw.bb481:                                         ; preds = %if.then423, %if.then423
  %334 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6436
  %state482 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %334, i32 0, i32 3, !dbg !6437
  store i16 2, i16* %state482, align 4, !dbg !6438
  store i8 1, i8* %handled, align 1, !dbg !6439
  br label %sw.epilog666, !dbg !6440

sw.bb483:                                         ; preds = %if.then423
  %335 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6441
  %mode484 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %335, i32 0, i32 0, !dbg !6441
  %336 = load i32, i32* %mode484, align 8, !dbg !6441
  %cmp485 = icmp eq i32 %336, 2, !dbg !6441
  br i1 %cmp485, label %if.then495, label %lor.lhs.false487, !dbg !6441

lor.lhs.false487:                                 ; preds = %sw.bb483
  %337 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6441
  %mode488 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %337, i32 0, i32 0, !dbg !6441
  %338 = load i32, i32* %mode488, align 8, !dbg !6441
  %cmp489 = icmp eq i32 %338, 3, !dbg !6441
  br i1 %cmp489, label %if.then495, label %lor.lhs.false491, !dbg !6441

lor.lhs.false491:                                 ; preds = %lor.lhs.false487
  %339 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6441
  %mode492 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %339, i32 0, i32 0, !dbg !6441
  %340 = load i32, i32* %mode492, align 8, !dbg !6441
  %cmp493 = icmp eq i32 %340, 10, !dbg !6441
  br i1 %cmp493, label %if.then495, label %if.end498, !dbg !6443

if.then495:                                       ; preds = %lor.lhs.false491, %lor.lhs.false487, %sw.bb483
  %341 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6444
  call void @resetTransModal(%struct.TransInfo* %341), !dbg !6446
  %342 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6447
  call void @resetTransRestrictions(%struct.TransInfo* %342), !dbg !6448
  %343 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6449
  call void @restoreTransObjects(%struct.TransInfo* %343), !dbg !6450
  %344 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6451
  call void @initTranslation(%struct.TransInfo* %344), !dbg !6452
  %345 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6453
  call void @initSnapping(%struct.TransInfo* %345, %struct.wmOperator* null), !dbg !6454
  %346 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6455
  %redraw496 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %346, i32 0, i32 17, !dbg !6456
  %347 = load i32, i32* %redraw496, align 8, !dbg !6457
  %or497 = or i32 %347, 1, !dbg !6457
  store i32 %or497, i32* %redraw496, align 8, !dbg !6457
  store i8 1, i8* %handled, align 1, !dbg !6458
  br label %if.end498, !dbg !6459

if.end498:                                        ; preds = %if.then495, %lor.lhs.false491
  br label %sw.epilog666, !dbg !6460

sw.bb499:                                         ; preds = %if.then423
  %348 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6461
  %mode500 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %348, i32 0, i32 0, !dbg !6461
  %349 = load i32, i32* %mode500, align 8, !dbg !6461
  %cmp501 = icmp eq i32 %349, 2, !dbg !6461
  br i1 %cmp501, label %if.then511, label %lor.lhs.false503, !dbg !6461

lor.lhs.false503:                                 ; preds = %sw.bb499
  %350 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6461
  %mode504 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %350, i32 0, i32 0, !dbg !6461
  %351 = load i32, i32* %mode504, align 8, !dbg !6461
  %cmp505 = icmp eq i32 %351, 1, !dbg !6461
  br i1 %cmp505, label %if.then511, label %lor.lhs.false507, !dbg !6461

lor.lhs.false507:                                 ; preds = %lor.lhs.false503
  %352 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6461
  %mode508 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %352, i32 0, i32 0, !dbg !6461
  %353 = load i32, i32* %mode508, align 8, !dbg !6461
  %cmp509 = icmp eq i32 %353, 10, !dbg !6461
  br i1 %cmp509, label %if.then511, label %if.end514, !dbg !6463

if.then511:                                       ; preds = %lor.lhs.false507, %lor.lhs.false503, %sw.bb499
  %354 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6464
  call void @resetTransModal(%struct.TransInfo* %354), !dbg !6466
  %355 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6467
  call void @resetTransRestrictions(%struct.TransInfo* %355), !dbg !6468
  %356 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6469
  call void @restoreTransObjects(%struct.TransInfo* %356), !dbg !6470
  %357 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6471
  call void @initResize(%struct.TransInfo* %357), !dbg !6472
  %358 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6473
  call void @initSnapping(%struct.TransInfo* %358, %struct.wmOperator* null), !dbg !6474
  %359 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6475
  %redraw512 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %359, i32 0, i32 17, !dbg !6476
  %360 = load i32, i32* %redraw512, align 8, !dbg !6477
  %or513 = or i32 %360, 1, !dbg !6477
  store i32 %or513, i32* %redraw512, align 8, !dbg !6477
  store i8 1, i8* %handled, align 1, !dbg !6478
  br label %if.end514, !dbg !6479

if.end514:                                        ; preds = %if.then511, %lor.lhs.false507
  br label %sw.epilog666, !dbg !6480

sw.bb515:                                         ; preds = %if.then423
  %361 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6481
  %options516 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %361, i32 0, i32 4, !dbg !6483
  %362 = load i32, i32* %options516, align 8, !dbg !6483
  %and517 = and i32 %362, 1, !dbg !6484
  %tobool518 = icmp ne i32 %and517, 0, !dbg !6484
  br i1 %tobool518, label %if.end545, label %if.then519, !dbg !6485

if.then519:                                       ; preds = %sw.bb515
  %363 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6486
  %mode520 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %363, i32 0, i32 0, !dbg !6486
  %364 = load i32, i32* %mode520, align 8, !dbg !6486
  %cmp521 = icmp eq i32 %364, 2, !dbg !6486
  br i1 %cmp521, label %if.then535, label %lor.lhs.false523, !dbg !6486

lor.lhs.false523:                                 ; preds = %if.then519
  %365 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6486
  %mode524 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %365, i32 0, i32 0, !dbg !6486
  %366 = load i32, i32* %mode524, align 8, !dbg !6486
  %cmp525 = icmp eq i32 %366, 3, !dbg !6486
  br i1 %cmp525, label %if.then535, label %lor.lhs.false527, !dbg !6486

lor.lhs.false527:                                 ; preds = %lor.lhs.false523
  %367 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6486
  %mode528 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %367, i32 0, i32 0, !dbg !6486
  %368 = load i32, i32* %mode528, align 8, !dbg !6486
  %cmp529 = icmp eq i32 %368, 10, !dbg !6486
  br i1 %cmp529, label %if.then535, label %lor.lhs.false531, !dbg !6486

lor.lhs.false531:                                 ; preds = %lor.lhs.false527
  %369 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6486
  %mode532 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %369, i32 0, i32 0, !dbg !6486
  %370 = load i32, i32* %mode532, align 8, !dbg !6486
  %cmp533 = icmp eq i32 %370, 1, !dbg !6486
  br i1 %cmp533, label %if.then535, label %if.end544, !dbg !6489

if.then535:                                       ; preds = %lor.lhs.false531, %lor.lhs.false527, %lor.lhs.false523, %if.then519
  %371 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6490
  call void @resetTransModal(%struct.TransInfo* %371), !dbg !6492
  %372 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6493
  call void @resetTransRestrictions(%struct.TransInfo* %372), !dbg !6494
  %373 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6495
  %mode536 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %373, i32 0, i32 0, !dbg !6497
  %374 = load i32, i32* %mode536, align 8, !dbg !6497
  %cmp537 = icmp eq i32 %374, 2, !dbg !6498
  br i1 %cmp537, label %if.then539, label %if.else540, !dbg !6499

if.then539:                                       ; preds = %if.then535
  %375 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6500
  call void @restoreTransObjects(%struct.TransInfo* %375), !dbg !6502
  %376 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6503
  call void @initTrackball(%struct.TransInfo* %376), !dbg !6504
  br label %if.end541, !dbg !6505

if.else540:                                       ; preds = %if.then535
  %377 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6506
  call void @restoreTransObjects(%struct.TransInfo* %377), !dbg !6508
  %378 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6509
  call void @initRotation(%struct.TransInfo* %378), !dbg !6510
  br label %if.end541

if.end541:                                        ; preds = %if.else540, %if.then539
  %379 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6511
  call void @initSnapping(%struct.TransInfo* %379, %struct.wmOperator* null), !dbg !6512
  %380 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6513
  %redraw542 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %380, i32 0, i32 17, !dbg !6514
  %381 = load i32, i32* %redraw542, align 8, !dbg !6515
  %or543 = or i32 %381, 1, !dbg !6515
  store i32 %or543, i32* %redraw542, align 8, !dbg !6515
  store i8 1, i8* %handled, align 1, !dbg !6516
  br label %if.end544, !dbg !6517

if.end544:                                        ; preds = %if.end541, %lor.lhs.false531
  br label %if.end545, !dbg !6518

if.end545:                                        ; preds = %if.end544, %sw.bb515
  br label %sw.epilog666, !dbg !6519

sw.bb546:                                         ; preds = %if.then423
  %382 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6520
  %alt = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %382, i32 0, i32 19, !dbg !6522
  %383 = load i16, i16* %alt, align 4, !dbg !6522
  %tobool547 = icmp ne i16 %383, 0, !dbg !6520
  br i1 %tobool547, label %if.then548, label %if.else557, !dbg !6523

if.then548:                                       ; preds = %sw.bb546
  %384 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6524
  %options549 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %384, i32 0, i32 4, !dbg !6527
  %385 = load i32, i32* %options549, align 8, !dbg !6527
  %and550 = and i32 %385, 4, !dbg !6528
  %tobool551 = icmp ne i32 %and550, 0, !dbg !6528
  br i1 %tobool551, label %if.end556, label %if.then552, !dbg !6529

if.then552:                                       ; preds = %if.then548
  %386 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6530
  %flag553 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %386, i32 0, i32 1, !dbg !6532
  %387 = load i32, i32* %flag553, align 4, !dbg !6533
  %xor554 = xor i32 %387, 4096, !dbg !6533
  store i32 %xor554, i32* %flag553, align 4, !dbg !6533
  %388 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6534
  call void @sort_trans_data_dist(%struct.TransInfo* %388), !dbg !6535
  %389 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6536
  call void @calculatePropRatio(%struct.TransInfo* %389), !dbg !6537
  %390 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6538
  %redraw555 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %390, i32 0, i32 17, !dbg !6539
  store i32 1, i32* %redraw555, align 8, !dbg !6540
  store i8 1, i8* %handled, align 1, !dbg !6541
  br label %if.end556, !dbg !6542

if.end556:                                        ; preds = %if.then552, %if.then548
  br label %if.end565, !dbg !6543

if.else557:                                       ; preds = %sw.bb546
  %391 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6544
  %flag558 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %391, i32 0, i32 1, !dbg !6547
  %392 = load i32, i32* %flag558, align 4, !dbg !6547
  %and559 = and i32 %392, 256, !dbg !6548
  %tobool560 = icmp ne i32 %and559, 0, !dbg !6548
  br i1 %tobool560, label %if.end564, label %if.then561, !dbg !6549

if.then561:                                       ; preds = %if.else557
  %393 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6550
  call void @stopConstraint(%struct.TransInfo* %393), !dbg !6552
  %394 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6553
  %redraw562 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %394, i32 0, i32 17, !dbg !6554
  %395 = load i32, i32* %redraw562, align 8, !dbg !6555
  %or563 = or i32 %395, 1, !dbg !6555
  store i32 %or563, i32* %redraw562, align 8, !dbg !6555
  store i8 1, i8* %handled, align 1, !dbg !6556
  br label %if.end564, !dbg !6557

if.end564:                                        ; preds = %if.then561, %if.else557
  br label %if.end565

if.end565:                                        ; preds = %if.end564, %if.end556
  br label %sw.epilog666, !dbg !6558

sw.bb566:                                         ; preds = %if.then423, %if.then423, %if.then423
  %396 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6559
  %flag567 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %396, i32 0, i32 1, !dbg !6561
  %397 = load i32, i32* %flag567, align 4, !dbg !6561
  %and568 = and i32 %397, 256, !dbg !6562
  %tobool569 = icmp ne i32 %and568, 0, !dbg !6562
  br i1 %tobool569, label %if.end572, label %if.then570, !dbg !6563

if.then570:                                       ; preds = %sw.bb566
  %398 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6564
  %399 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6566
  %type571 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %399, i32 0, i32 2, !dbg !6567
  %400 = load i16, i16* %type571, align 8, !dbg !6567
  %401 = load i8, i8* %cmode, align 1, !dbg !6568
  call void @transform_event_xyz_constraint(%struct.TransInfo* %398, i16 signext %400, i8 zeroext %401), !dbg !6569
  store i8 1, i8* %handled, align 1, !dbg !6570
  br label %if.end572, !dbg !6571

if.end572:                                        ; preds = %if.then570, %sw.bb566
  br label %sw.epilog666, !dbg !6572

sw.bb573:                                         ; preds = %if.then423
  %402 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6573
  %flag574 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %402, i32 0, i32 1, !dbg !6575
  %403 = load i32, i32* %flag574, align 4, !dbg !6575
  %and575 = and i32 %403, 2048, !dbg !6576
  %tobool576 = icmp ne i32 %and575, 0, !dbg !6576
  br i1 %tobool576, label %land.lhs.true577, label %if.end588, !dbg !6577

land.lhs.true577:                                 ; preds = %sw.bb573
  %404 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6578
  %shift578 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %404, i32 0, i32 17, !dbg !6579
  %405 = load i16, i16* %shift578, align 8, !dbg !6579
  %conv579 = sext i16 %405 to i32, !dbg !6578
  %tobool580 = icmp ne i32 %conv579, 0, !dbg !6578
  br i1 %tobool580, label %if.then581, label %if.end588, !dbg !6580

if.then581:                                       ; preds = %land.lhs.true577
  %406 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6581
  %prop_mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %406, i32 0, i32 45, !dbg !6583
  %407 = load i16, i16* %prop_mode, align 2, !dbg !6583
  %conv582 = sext i16 %407 to i32, !dbg !6581
  %add583 = add nsw i32 %conv582, 1, !dbg !6584
  %rem = srem i32 %add583, 7, !dbg !6585
  %conv584 = trunc i32 %rem to i16, !dbg !6586
  %408 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6587
  %prop_mode585 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %408, i32 0, i32 45, !dbg !6588
  store i16 %conv584, i16* %prop_mode585, align 2, !dbg !6589
  %409 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6590
  call void @calculatePropRatio(%struct.TransInfo* %409), !dbg !6591
  %410 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6592
  %redraw586 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %410, i32 0, i32 17, !dbg !6593
  %411 = load i32, i32* %redraw586, align 8, !dbg !6594
  %or587 = or i32 %411, 1, !dbg !6594
  store i32 %or587, i32* %redraw586, align 8, !dbg !6594
  store i8 1, i8* %handled, align 1, !dbg !6595
  br label %if.end588, !dbg !6596

if.end588:                                        ; preds = %if.then581, %land.lhs.true577, %sw.bb573
  br label %sw.epilog666, !dbg !6597

sw.bb589:                                         ; preds = %if.then423
  %412 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6598
  %alt590 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %412, i32 0, i32 19, !dbg !6600
  %413 = load i16, i16* %alt590, align 4, !dbg !6600
  %conv591 = sext i16 %413 to i32, !dbg !6598
  %tobool592 = icmp ne i32 %conv591, 0, !dbg !6598
  br i1 %tobool592, label %land.lhs.true593, label %if.end617, !dbg !6601

land.lhs.true593:                                 ; preds = %sw.bb589
  %414 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6602
  %flag594 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %414, i32 0, i32 1, !dbg !6603
  %415 = load i32, i32* %flag594, align 4, !dbg !6603
  %and595 = and i32 %415, 2048, !dbg !6604
  %tobool596 = icmp ne i32 %and595, 0, !dbg !6604
  br i1 %tobool596, label %if.then597, label %if.end617, !dbg !6605

if.then597:                                       ; preds = %land.lhs.true593
  %416 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6606
  %prop_size598 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %416, i32 0, i32 18, !dbg !6608
  %417 = load float, float* %prop_size598, align 4, !dbg !6609
  %mul599 = fmul float %417, 0x3FF19999A0000000, !dbg !6609
  store float %mul599, float* %prop_size598, align 4, !dbg !6609
  %418 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6610
  %spacetype600 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %418, i32 0, i32 33, !dbg !6612
  %419 = load i8, i8* %spacetype600, align 8, !dbg !6612
  %conv601 = zext i8 %419 to i32, !dbg !6610
  %cmp602 = icmp eq i32 %conv601, 1, !dbg !6613
  br i1 %cmp602, label %land.lhs.true604, label %if.end615, !dbg !6614

land.lhs.true604:                                 ; preds = %if.then597
  %420 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6615
  %persp605 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %420, i32 0, i32 31, !dbg !6616
  %421 = load i16, i16* %persp605, align 4, !dbg !6616
  %conv606 = sext i16 %421 to i32, !dbg !6615
  %cmp607 = icmp ne i32 %conv606, 0, !dbg !6617
  br i1 %cmp607, label %if.then609, label %if.end615, !dbg !6618

if.then609:                                       ; preds = %land.lhs.true604
  %422 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6619
  %prop_size610 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %422, i32 0, i32 18, !dbg !6620
  %423 = load float, float* %prop_size610, align 4, !dbg !6620
  %424 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6621
  %view611 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %424, i32 0, i32 52, !dbg !6622
  %425 = load i8*, i8** %view611, align 8, !dbg !6622
  %426 = bitcast i8* %425 to %struct.View3D*, !dbg !6623
  %far612 = getelementptr inbounds %struct.View3D, %struct.View3D* %426, i32 0, i32 33, !dbg !6624
  %427 = load float, float* %far612, align 8, !dbg !6624
  %call613 = call float @min_ff(float %423, float %427), !dbg !6625
  %428 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6626
  %prop_size614 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %428, i32 0, i32 18, !dbg !6627
  store float %call613, float* %prop_size614, align 4, !dbg !6628
  br label %if.end615, !dbg !6626

if.end615:                                        ; preds = %if.then609, %land.lhs.true604, %if.then597
  %429 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6629
  call void @calculatePropRatio(%struct.TransInfo* %429), !dbg !6630
  %430 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6631
  %redraw616 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %430, i32 0, i32 17, !dbg !6632
  store i32 1, i32* %redraw616, align 8, !dbg !6633
  store i8 1, i8* %handled, align 1, !dbg !6634
  br label %if.end617, !dbg !6635

if.end617:                                        ; preds = %if.end615, %land.lhs.true593, %sw.bb589
  br label %sw.epilog666, !dbg !6636

sw.bb618:                                         ; preds = %if.then423, %if.then423
  %431 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6637
  %flag619 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %431, i32 0, i32 1, !dbg !6639
  %432 = load i32, i32* %flag619, align 4, !dbg !6639
  %and620 = and i32 %432, 262144, !dbg !6640
  %tobool621 = icmp ne i32 %and620, 0, !dbg !6640
  br i1 %tobool621, label %if.then622, label %if.else623, !dbg !6641

if.then622:                                       ; preds = %sw.bb618
  %433 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6642
  call void @transform_autoik_update(%struct.TransInfo* %433, i16 signext 1), !dbg !6644
  br label %if.end625, !dbg !6645

if.else623:                                       ; preds = %sw.bb618
  %434 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6646
  %type624 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %434, i32 0, i32 2, !dbg !6648
  %435 = load i16, i16* %type624, align 8, !dbg !6648
  call void @view_editmove(i16 zeroext %435), !dbg !6649
  br label %if.end625

if.end625:                                        ; preds = %if.else623, %if.then622
  %436 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6650
  %redraw626 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %436, i32 0, i32 17, !dbg !6651
  store i32 1, i32* %redraw626, align 8, !dbg !6652
  store i8 1, i8* %handled, align 1, !dbg !6653
  br label %sw.epilog666, !dbg !6654

sw.bb627:                                         ; preds = %if.then423
  %437 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6655
  %alt628 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %437, i32 0, i32 19, !dbg !6657
  %438 = load i16, i16* %alt628, align 4, !dbg !6657
  %conv629 = sext i16 %438 to i32, !dbg !6655
  %tobool630 = icmp ne i32 %conv629, 0, !dbg !6655
  br i1 %tobool630, label %land.lhs.true631, label %if.end639, !dbg !6658

land.lhs.true631:                                 ; preds = %sw.bb627
  %439 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6659
  %flag632 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %439, i32 0, i32 1, !dbg !6660
  %440 = load i32, i32* %flag632, align 4, !dbg !6660
  %and633 = and i32 %440, 2048, !dbg !6661
  %tobool634 = icmp ne i32 %and633, 0, !dbg !6661
  br i1 %tobool634, label %if.then635, label %if.end639, !dbg !6662

if.then635:                                       ; preds = %land.lhs.true631
  %441 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6663
  %prop_size636 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %441, i32 0, i32 18, !dbg !6665
  %442 = load float, float* %prop_size636, align 4, !dbg !6666
  %mul637 = fmul float %442, 0x3FED1745C0000000, !dbg !6666
  store float %mul637, float* %prop_size636, align 4, !dbg !6666
  %443 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6667
  call void @calculatePropRatio(%struct.TransInfo* %443), !dbg !6668
  %444 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6669
  %redraw638 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %444, i32 0, i32 17, !dbg !6670
  store i32 1, i32* %redraw638, align 8, !dbg !6671
  store i8 1, i8* %handled, align 1, !dbg !6672
  br label %if.end639, !dbg !6673

if.end639:                                        ; preds = %if.then635, %land.lhs.true631, %sw.bb627
  br label %sw.epilog666, !dbg !6674

sw.bb640:                                         ; preds = %if.then423, %if.then423
  %445 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6675
  %flag641 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %445, i32 0, i32 1, !dbg !6677
  %446 = load i32, i32* %flag641, align 4, !dbg !6677
  %and642 = and i32 %446, 262144, !dbg !6678
  %tobool643 = icmp ne i32 %and642, 0, !dbg !6678
  br i1 %tobool643, label %if.then644, label %if.else645, !dbg !6679

if.then644:                                       ; preds = %sw.bb640
  %447 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6680
  call void @transform_autoik_update(%struct.TransInfo* %447, i16 signext -1), !dbg !6682
  br label %if.end647, !dbg !6683

if.else645:                                       ; preds = %sw.bb640
  %448 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6684
  %type646 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %448, i32 0, i32 2, !dbg !6686
  %449 = load i16, i16* %type646, align 8, !dbg !6686
  call void @view_editmove(i16 zeroext %449), !dbg !6687
  br label %if.end647

if.end647:                                        ; preds = %if.else645, %if.then644
  %450 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6688
  %redraw648 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %450, i32 0, i32 17, !dbg !6689
  store i32 1, i32* %redraw648, align 8, !dbg !6690
  store i8 1, i8* %handled, align 1, !dbg !6691
  br label %sw.epilog666, !dbg !6692

sw.bb649:                                         ; preds = %if.then423, %if.then423
  %451 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6693
  %spacetype650 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %451, i32 0, i32 33, !dbg !6693
  %452 = load i8, i8* %spacetype650, align 8, !dbg !6693
  %conv651 = zext i8 %452 to i32, !dbg !6693
  %cmp652 = icmp eq i32 %conv651, 8, !dbg !6693
  br i1 %cmp652, label %if.then659, label %lor.lhs.false654, !dbg !6693

lor.lhs.false654:                                 ; preds = %sw.bb649
  %453 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6693
  %spacetype655 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %453, i32 0, i32 33, !dbg !6693
  %454 = load i8, i8* %spacetype655, align 8, !dbg !6693
  %conv656 = zext i8 %454 to i32, !dbg !6693
  %cmp657 = icmp eq i32 %conv656, 1, !dbg !6693
  br i1 %cmp657, label %if.then659, label %if.end664, !dbg !6695

if.then659:                                       ; preds = %lor.lhs.false654, %sw.bb649
  %455 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6696
  %flag660 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %455, i32 0, i32 1, !dbg !6698
  %456 = load i32, i32* %flag660, align 4, !dbg !6699
  %or661 = or i32 %456, 16777216, !dbg !6699
  store i32 %or661, i32* %flag660, align 4, !dbg !6699
  %457 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6700
  %redraw662 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %457, i32 0, i32 17, !dbg !6701
  %458 = load i32, i32* %redraw662, align 8, !dbg !6702
  %or663 = or i32 %458, 1, !dbg !6702
  store i32 %or663, i32* %redraw662, align 8, !dbg !6702
  store i8 1, i8* %handled, align 1, !dbg !6703
  br label %if.end664, !dbg !6704

if.end664:                                        ; preds = %if.then659, %lor.lhs.false654
  br label %sw.epilog666, !dbg !6705

sw.default665:                                    ; preds = %if.then423
  br label %sw.epilog666, !dbg !6706

sw.epilog666:                                     ; preds = %sw.default665, %if.end664, %if.end647, %if.end639, %if.end625, %if.end617, %if.end588, %if.end572, %if.end565, %if.end545, %if.end514, %if.end498, %sw.bb481, %sw.bb479, %if.end478, %sw.bb433, %sw.bb428, %sw.bb426
  %459 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6707
  %460 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6708
  %call667 = call i32 @handleSnapping(%struct.TransInfo* %459, %struct.wmEvent* %460), !dbg !6709
  %461 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6710
  %redraw668 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %461, i32 0, i32 17, !dbg !6711
  %462 = load i32, i32* %redraw668, align 8, !dbg !6712
  %or669 = or i32 %462, %call667, !dbg !6712
  store i32 %or669, i32* %redraw668, align 8, !dbg !6712
  br label %if.end736, !dbg !6713

if.else670:                                       ; preds = %if.else418
  %463 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6714
  %val671 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %463, i32 0, i32 3, !dbg !6716
  %464 = load i16, i16* %val671, align 2, !dbg !6716
  %conv672 = sext i16 %464 to i32, !dbg !6714
  %cmp673 = icmp eq i32 %conv672, 2, !dbg !6717
  br i1 %cmp673, label %if.then675, label %if.end735, !dbg !6718

if.then675:                                       ; preds = %if.else670
  %465 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6719
  %type676 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %465, i32 0, i32 2, !dbg !6721
  %466 = load i16, i16* %type676, align 8, !dbg !6721
  %conv677 = sext i16 %466 to i32, !dbg !6719
  switch i32 %conv677, label %sw.default710 [
    i32 217, label %sw.bb678
    i32 216, label %sw.bb678
    i32 2, label %sw.bb683
    i32 213, label %sw.bb694
    i32 214, label %sw.bb694
  ], !dbg !6722

sw.bb678:                                         ; preds = %if.then675, %if.then675
  %467 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6723
  %modifiers679 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %467, i32 0, i32 2, !dbg !6725
  %468 = load i32, i32* %modifiers679, align 8, !dbg !6726
  %and680 = and i32 %468, -17, !dbg !6726
  store i32 %and680, i32* %modifiers679, align 8, !dbg !6726
  %469 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6727
  %redraw681 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %469, i32 0, i32 17, !dbg !6728
  %470 = load i32, i32* %redraw681, align 8, !dbg !6729
  %or682 = or i32 %470, 1, !dbg !6729
  store i32 %or682, i32* %redraw681, align 8, !dbg !6729
  store i8 1, i8* %handled, align 1, !dbg !6730
  br label %sw.epilog711, !dbg !6731

sw.bb683:                                         ; preds = %if.then675
  %471 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6732
  %flag684 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %471, i32 0, i32 1, !dbg !6734
  %472 = load i32, i32* %flag684, align 4, !dbg !6734
  %and685 = and i32 %472, 256, !dbg !6735
  %cmp686 = icmp eq i32 %and685, 0, !dbg !6736
  br i1 %cmp686, label %if.then688, label %if.end693, !dbg !6737

if.then688:                                       ; preds = %sw.bb683
  %473 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6738
  %modifiers689 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %473, i32 0, i32 2, !dbg !6740
  %474 = load i32, i32* %modifiers689, align 8, !dbg !6741
  %and690 = and i32 %474, -2, !dbg !6741
  store i32 %and690, i32* %modifiers689, align 8, !dbg !6741
  %475 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6742
  call void @postSelectConstraint(%struct.TransInfo* %475), !dbg !6743
  %476 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6744
  %redraw691 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %476, i32 0, i32 17, !dbg !6745
  %477 = load i32, i32* %redraw691, align 8, !dbg !6746
  %or692 = or i32 %477, 1, !dbg !6746
  store i32 %or692, i32* %redraw691, align 8, !dbg !6746
  store i8 1, i8* %handled, align 1, !dbg !6747
  br label %if.end693, !dbg !6748

if.end693:                                        ; preds = %if.then688, %sw.bb683
  br label %sw.epilog711, !dbg !6749

sw.bb694:                                         ; preds = %if.then675, %if.then675
  %478 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6750
  %spacetype695 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %478, i32 0, i32 33, !dbg !6750
  %479 = load i8, i8* %spacetype695, align 8, !dbg !6750
  %conv696 = zext i8 %479 to i32, !dbg !6750
  %cmp697 = icmp eq i32 %conv696, 8, !dbg !6750
  br i1 %cmp697, label %if.then704, label %lor.lhs.false699, !dbg !6750

lor.lhs.false699:                                 ; preds = %sw.bb694
  %480 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6750
  %spacetype700 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %480, i32 0, i32 33, !dbg !6750
  %481 = load i8, i8* %spacetype700, align 8, !dbg !6750
  %conv701 = zext i8 %481 to i32, !dbg !6750
  %cmp702 = icmp eq i32 %conv701, 1, !dbg !6750
  br i1 %cmp702, label %if.then704, label %if.end709, !dbg !6752

if.then704:                                       ; preds = %lor.lhs.false699, %sw.bb694
  %482 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6753
  %flag705 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %482, i32 0, i32 1, !dbg !6755
  %483 = load i32, i32* %flag705, align 4, !dbg !6756
  %and706 = and i32 %483, -16777217, !dbg !6756
  store i32 %and706, i32* %flag705, align 4, !dbg !6756
  %484 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6757
  %redraw707 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %484, i32 0, i32 17, !dbg !6758
  %485 = load i32, i32* %redraw707, align 8, !dbg !6759
  %or708 = or i32 %485, 1, !dbg !6759
  store i32 %or708, i32* %redraw707, align 8, !dbg !6759
  store i8 1, i8* %handled, align 1, !dbg !6760
  br label %if.end709, !dbg !6761

if.end709:                                        ; preds = %if.then704, %lor.lhs.false699
  br label %sw.epilog711, !dbg !6762

sw.default710:                                    ; preds = %if.then675
  br label %sw.epilog711, !dbg !6763

sw.epilog711:                                     ; preds = %sw.default710, %if.end709, %if.end693, %sw.bb678
  %486 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6764
  %flag712 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %486, i32 0, i32 1, !dbg !6766
  %487 = load i32, i32* %flag712, align 4, !dbg !6766
  %and713 = and i32 %487, 8388608, !dbg !6767
  %tobool714 = icmp ne i32 %and713, 0, !dbg !6767
  br i1 %tobool714, label %if.then715, label %if.end734, !dbg !6768

if.then715:                                       ; preds = %sw.epilog711
  %488 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6769
  %type716 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %488, i32 0, i32 2, !dbg !6772
  %489 = load i16, i16* %type716, align 8, !dbg !6772
  %conv717 = sext i16 %489 to i32, !dbg !6769
  %490 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6773
  %launch_event = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %490, i32 0, i32 42, !dbg !6774
  %491 = load i16, i16* %launch_event, align 8, !dbg !6774
  %conv718 = sext i16 %491 to i32, !dbg !6773
  %cmp719 = icmp eq i32 %conv717, %conv718, !dbg !6775
  br i1 %cmp719, label %land.lhs.true721, label %if.end733, !dbg !6776

land.lhs.true721:                                 ; preds = %if.then715
  %492 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6777
  %launch_event722 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %492, i32 0, i32 42, !dbg !6778
  %493 = load i16, i16* %launch_event722, align 8, !dbg !6778
  %conv723 = sext i16 %493 to i32, !dbg !6777
  %cmp724 = icmp eq i32 %conv723, 1, !dbg !6779
  br i1 %cmp724, label %if.then731, label %lor.lhs.false726, !dbg !6780

lor.lhs.false726:                                 ; preds = %land.lhs.true721
  %494 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6781
  %launch_event727 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %494, i32 0, i32 42, !dbg !6782
  %495 = load i16, i16* %launch_event727, align 8, !dbg !6782
  %conv728 = sext i16 %495 to i32, !dbg !6781
  %cmp729 = icmp eq i32 %conv728, 3, !dbg !6783
  br i1 %cmp729, label %if.then731, label %if.end733, !dbg !6784

if.then731:                                       ; preds = %lor.lhs.false726, %land.lhs.true721
  %496 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6785
  %state732 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %496, i32 0, i32 3, !dbg !6787
  store i16 2, i16* %state732, align 4, !dbg !6788
  br label %if.end733, !dbg !6789

if.end733:                                        ; preds = %if.then731, %lor.lhs.false726, %if.then715
  br label %if.end734, !dbg !6790

if.end734:                                        ; preds = %if.end733, %sw.epilog711
  br label %if.end735, !dbg !6791

if.end735:                                        ; preds = %if.end734, %if.else670
  br label %if.end736

if.end736:                                        ; preds = %if.end735, %sw.epilog666
  br label %if.end737

if.end737:                                        ; preds = %if.end736, %sw.epilog
  br label %if.end738

if.end738:                                        ; preds = %if.end737, %if.end32
  br label %if.end739

if.end739:                                        ; preds = %if.end738, %if.then
  %497 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6792
  %handleEvent = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %497, i32 0, i32 8, !dbg !6794
  %498 = load i32 (%struct.TransInfo*, %struct.wmEvent*)*, i32 (%struct.TransInfo*, %struct.wmEvent*)** %handleEvent, align 8, !dbg !6794
  %tobool740 = icmp ne i32 (%struct.TransInfo*, %struct.wmEvent*)* %498, null, !dbg !6792
  br i1 %tobool740, label %land.lhs.true741, label %if.end753, !dbg !6795

land.lhs.true741:                                 ; preds = %if.end739
  %499 = load i8, i8* %handled, align 1, !dbg !6796
  %tobool742 = icmp ne i8 %499, 0, !dbg !6796
  br i1 %tobool742, label %lor.lhs.false743, label %if.then748, !dbg !6797

lor.lhs.false743:                                 ; preds = %land.lhs.true741
  %500 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6798
  %type744 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %500, i32 0, i32 2, !dbg !6799
  %501 = load i16, i16* %type744, align 8, !dbg !6799
  %conv745 = sext i16 %501 to i32, !dbg !6798
  %cmp746 = icmp eq i32 %conv745, 4, !dbg !6800
  br i1 %cmp746, label %if.then748, label %if.end753, !dbg !6801

if.then748:                                       ; preds = %lor.lhs.false743, %land.lhs.true741
  %502 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6802
  %handleEvent749 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %502, i32 0, i32 8, !dbg !6804
  %503 = load i32 (%struct.TransInfo*, %struct.wmEvent*)*, i32 (%struct.TransInfo*, %struct.wmEvent*)** %handleEvent749, align 8, !dbg !6804
  %504 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6805
  %505 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6806
  %call750 = call i32 %503(%struct.TransInfo* %504, %struct.wmEvent* %505), !dbg !6802
  %506 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6807
  %redraw751 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %506, i32 0, i32 17, !dbg !6808
  %507 = load i32, i32* %redraw751, align 8, !dbg !6809
  %or752 = or i32 %507, %call750, !dbg !6809
  store i32 %or752, i32* %redraw751, align 8, !dbg !6809
  br label %if.end753, !dbg !6810

if.end753:                                        ; preds = %if.then748, %lor.lhs.false743, %if.end739
  %508 = load i8, i8* %handled, align 1, !dbg !6811
  %conv754 = zext i8 %508 to i32, !dbg !6811
  %tobool755 = icmp ne i32 %conv754, 0, !dbg !6811
  br i1 %tobool755, label %if.end778, label %lor.lhs.false756, !dbg !6813

lor.lhs.false756:                                 ; preds = %if.end753
  %509 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6814
  %redraw757 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %509, i32 0, i32 17, !dbg !6815
  %510 = load i32, i32* %redraw757, align 8, !dbg !6815
  %tobool758 = icmp ne i32 %510, 0, !dbg !6814
  br i1 %tobool758, label %if.end778, label %land.lhs.true759, !dbg !6816

land.lhs.true759:                                 ; preds = %lor.lhs.false756
  %511 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6817
  %val760 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %511, i32 0, i32 3, !dbg !6818
  %512 = load i16, i16* %val760, align 2, !dbg !6818
  %conv761 = sext i16 %512 to i32, !dbg !6817
  %cmp762 = icmp eq i32 %conv761, 1, !dbg !6819
  br i1 %cmp762, label %land.lhs.true769, label %lor.lhs.false764, !dbg !6820

lor.lhs.false764:                                 ; preds = %land.lhs.true759
  %513 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6821
  %type765 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %513, i32 0, i32 2, !dbg !6822
  %514 = load i16, i16* %type765, align 8, !dbg !6822
  %conv766 = sext i16 %514 to i32, !dbg !6821
  %cmp767 = icmp eq i32 %conv766, 20514, !dbg !6823
  br i1 %cmp767, label %land.lhs.true769, label %if.end778, !dbg !6824

land.lhs.true769:                                 ; preds = %lor.lhs.false764, %land.lhs.true759
  %515 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6825
  %context770 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %515, i32 0, i32 53, !dbg !6826
  %516 = load %struct.bContext*, %struct.bContext** %context770, align 8, !dbg !6826
  %517 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6827
  %num771 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %517, i32 0, i32 15, !dbg !6828
  %518 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6829
  %call772 = call zeroext i8 @handleNumInput(%struct.bContext* %516, %struct.NumInput* %num771, %struct.wmEvent* %518), !dbg !6830
  %conv773 = zext i8 %call772 to i32, !dbg !6830
  %tobool774 = icmp ne i32 %conv773, 0, !dbg !6830
  br i1 %tobool774, label %if.then775, label %if.end778, !dbg !6831

if.then775:                                       ; preds = %land.lhs.true769
  %519 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6832
  %redraw776 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %519, i32 0, i32 17, !dbg !6834
  %520 = load i32, i32* %redraw776, align 8, !dbg !6835
  %or777 = or i32 %520, 1, !dbg !6835
  store i32 %or777, i32* %redraw776, align 8, !dbg !6835
  store i8 1, i8* %handled, align 1, !dbg !6836
  br label %if.end778, !dbg !6837

if.end778:                                        ; preds = %if.then775, %land.lhs.true769, %lor.lhs.false764, %lor.lhs.false756, %if.end753
  %521 = load i8, i8* %handled, align 1, !dbg !6838
  %conv779 = zext i8 %521 to i32, !dbg !6838
  %tobool780 = icmp ne i32 %conv779, 0, !dbg !6838
  br i1 %tobool780, label %if.then784, label %lor.lhs.false781, !dbg !6840

lor.lhs.false781:                                 ; preds = %if.end778
  %522 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6841
  %redraw782 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %522, i32 0, i32 17, !dbg !6842
  %523 = load i32, i32* %redraw782, align 8, !dbg !6842
  %tobool783 = icmp ne i32 %523, 0, !dbg !6841
  br i1 %tobool783, label %if.then784, label %if.else785, !dbg !6843

if.then784:                                       ; preds = %lor.lhs.false781, %if.end778
  store i32 0, i32* %retval, align 4, !dbg !6844
  br label %return, !dbg !6844

if.else785:                                       ; preds = %lor.lhs.false781
  store i32 8, i32* %retval, align 4, !dbg !6846
  br label %return, !dbg !6846

return:                                           ; preds = %if.else785, %if.then784
  %524 = load i32, i32* %retval, align 4, !dbg !6848
  ret i32 %524, !dbg !6848
}

declare dso_local zeroext i8 @constraintModeToChar(%struct.TransInfo*) #2

declare dso_local i32 @handleMouseInput(%struct.TransInfo*, %struct.MouseInput*, %struct.wmEvent*) #2

declare dso_local zeroext i8 @hasNumInput(%struct.NumInput*) #2

declare dso_local zeroext i8 @handleNumInput(%struct.bContext*, %struct.NumInput*, %struct.wmEvent*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2_int(i32* %r, i32* %a) #0 !dbg !6849 {
entry:
  %r.addr = alloca i32*, align 8
  %a.addr = alloca i32*, align 8
  store i32* %r, i32** %r.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r.addr, metadata !6852, metadata !DIExpression()), !dbg !6853
  store i32* %a, i32** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %a.addr, metadata !6854, metadata !DIExpression()), !dbg !6855
  %0 = load i32*, i32** %a.addr, align 8, !dbg !6856
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !6856
  %1 = load i32, i32* %arrayidx, align 4, !dbg !6856
  %2 = load i32*, i32** %r.addr, align 8, !dbg !6857
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 0, !dbg !6857
  store i32 %1, i32* %arrayidx1, align 4, !dbg !6858
  %3 = load i32*, i32** %a.addr, align 8, !dbg !6859
  %arrayidx2 = getelementptr inbounds i32, i32* %3, i64 1, !dbg !6859
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !6859
  %5 = load i32*, i32** %r.addr, align 8, !dbg !6860
  %arrayidx3 = getelementptr inbounds i32, i32* %5, i64 1, !dbg !6860
  store i32 %4, i32* %arrayidx3, align 4, !dbg !6861
  ret void, !dbg !6862
}

declare dso_local void @applyMouseInput(%struct.TransInfo*, %struct.MouseInput*, i32*, float*) #2

declare dso_local i32 @handleSnapping(%struct.TransInfo*, %struct.wmEvent*) #2

declare dso_local void @resetTransModal(%struct.TransInfo*) #2

declare dso_local void @resetTransRestrictions(%struct.TransInfo*) #2

declare dso_local void @restoreTransObjects(%struct.TransInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @initTranslation(%struct.TransInfo* %t) #0 !dbg !6863 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %rv3d = alloca %struct.RegionView3D*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !6864, metadata !DIExpression()), !dbg !6865
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6866
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 33, !dbg !6868
  %1 = load i8, i8* %spacetype, align 8, !dbg !6868
  %conv = zext i8 %1 to i32, !dbg !6866
  %cmp = icmp eq i32 %conv, 12, !dbg !6869
  br i1 %cmp, label %if.then, label %if.end, !dbg !6870

if.then:                                          ; preds = %entry
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6871
  %reports = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 60, !dbg !6873
  %3 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !6873
  call void @BKE_report(%struct.ReportList* %3, i32 32, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.96, i64 0, i64 0)), !dbg !6874
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6875
  %state = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 3, !dbg !6876
  store i16 3, i16* %state, align 4, !dbg !6877
  br label %if.end, !dbg !6878

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6879
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 0, !dbg !6880
  store i32 1, i32* %mode, align 8, !dbg !6881
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6882
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 7, !dbg !6883
  store void (%struct.TransInfo*, i32*)* @applyTranslation, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !6884
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6885
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6886
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 16, !dbg !6887
  call void @initMouseInputMode(%struct.TransInfo* %7, %struct.MouseInput* %mouse, i32 1), !dbg !6888
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6889
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 1, !dbg !6890
  %10 = load i32, i32* %flag, align 4, !dbg !6890
  %and = and i32 %10, 32768, !dbg !6891
  %tobool = icmp ne i32 %and, 0, !dbg !6892
  %11 = zext i1 %tobool to i64, !dbg !6892
  %cond = select i1 %tobool, i32 1, i32 2, !dbg !6892
  %conv2 = trunc i32 %cond to i16, !dbg !6892
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6893
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 24, !dbg !6894
  store i16 %conv2, i16* %idx_max, align 2, !dbg !6895
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6896
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 15, !dbg !6897
  %flag3 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 4, !dbg !6898
  store i16 0, i16* %flag3, align 2, !dbg !6899
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6900
  %idx_max4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 24, !dbg !6901
  %15 = load i16, i16* %idx_max4, align 2, !dbg !6901
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6902
  %num5 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 15, !dbg !6903
  %idx_max6 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num5, i32 0, i32 0, !dbg !6904
  store i16 %15, i16* %idx_max6, align 8, !dbg !6905
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6906
  %spacetype7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 33, !dbg !6908
  %18 = load i8, i8* %spacetype7, align 8, !dbg !6908
  %conv8 = zext i8 %18 to i32, !dbg !6906
  %cmp9 = icmp eq i32 %conv8, 1, !dbg !6909
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !6910

if.then11:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !6911, metadata !DIExpression()), !dbg !6913
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6914
  %ar = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 55, !dbg !6915
  %20 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6915
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %20, i32 0, i32 30, !dbg !6916
  %21 = load i8*, i8** %regiondata, align 8, !dbg !6916
  %22 = bitcast i8* %21 to %struct.RegionView3D*, !dbg !6914
  store %struct.RegionView3D* %22, %struct.RegionView3D** %rv3d, align 8, !dbg !6913
  %23 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !6917
  %tobool12 = icmp ne %struct.RegionView3D* %23, null, !dbg !6917
  br i1 %tobool12, label %if.then13, label %if.end21, !dbg !6919

if.then13:                                        ; preds = %if.then11
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6920
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 25, !dbg !6922
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !6920
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6923
  %25 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !6924
  %gridview = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %25, i32 0, i32 36, !dbg !6925
  %26 = load float, float* %gridview, align 8, !dbg !6925
  %mul = fmul float %26, 1.000000e+00, !dbg !6926
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6927
  %snap14 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %27, i32 0, i32 25, !dbg !6928
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %snap14, i64 0, i64 1, !dbg !6927
  store float %mul, float* %arrayidx15, align 4, !dbg !6929
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6930
  %snap16 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 25, !dbg !6931
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %snap16, i64 0, i64 1, !dbg !6930
  %29 = load float, float* %arrayidx17, align 4, !dbg !6930
  %mul18 = fmul float %29, 0x3FB99999A0000000, !dbg !6932
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6933
  %snap19 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %30, i32 0, i32 25, !dbg !6934
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %snap19, i64 0, i64 2, !dbg !6933
  store float %mul18, float* %arrayidx20, align 4, !dbg !6935
  br label %if.end21, !dbg !6936

if.end21:                                         ; preds = %if.then13, %if.then11
  br label %if.end60, !dbg !6937

if.else:                                          ; preds = %if.end
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6938
  %spacetype22 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %31, i32 0, i32 33, !dbg !6938
  %32 = load i8, i8* %spacetype22, align 8, !dbg !6938
  %conv23 = zext i8 %32 to i32, !dbg !6938
  %cmp24 = icmp eq i32 %conv23, 6, !dbg !6938
  br i1 %cmp24, label %if.then30, label %lor.lhs.false, !dbg !6938

lor.lhs.false:                                    ; preds = %if.else
  %33 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6938
  %spacetype26 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %33, i32 0, i32 33, !dbg !6938
  %34 = load i8, i8* %spacetype26, align 8, !dbg !6938
  %conv27 = zext i8 %34 to i32, !dbg !6938
  %cmp28 = icmp eq i32 %conv27, 20, !dbg !6938
  br i1 %cmp28, label %if.then30, label %if.else37, !dbg !6940

if.then30:                                        ; preds = %lor.lhs.false, %if.else
  %35 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6941
  %snap31 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %35, i32 0, i32 25, !dbg !6943
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %snap31, i64 0, i64 0, !dbg !6941
  store float 0.000000e+00, float* %arrayidx32, align 4, !dbg !6944
  %36 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6945
  %snap33 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %36, i32 0, i32 25, !dbg !6946
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %snap33, i64 0, i64 1, !dbg !6945
  store float 1.250000e-01, float* %arrayidx34, align 4, !dbg !6947
  %37 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6948
  %snap35 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %37, i32 0, i32 25, !dbg !6949
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %snap35, i64 0, i64 2, !dbg !6948
  store float 6.250000e-02, float* %arrayidx36, align 4, !dbg !6950
  br label %if.end59, !dbg !6951

if.else37:                                        ; preds = %lor.lhs.false
  %38 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6952
  %spacetype38 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %38, i32 0, i32 33, !dbg !6954
  %39 = load i8, i8* %spacetype38, align 8, !dbg !6954
  %conv39 = zext i8 %39 to i32, !dbg !6952
  %cmp40 = icmp eq i32 %conv39, 16, !dbg !6955
  br i1 %cmp40, label %if.then42, label %if.else51, !dbg !6956

if.then42:                                        ; preds = %if.else37
  %40 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6957
  %snap43 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %40, i32 0, i32 25, !dbg !6959
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %snap43, i64 0, i64 0, !dbg !6957
  store float 0.000000e+00, float* %arrayidx44, align 4, !dbg !6960
  %call = call float @ED_node_grid_size(), !dbg !6961
  %mul45 = fmul float %call, 5.000000e+00, !dbg !6962
  %41 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6963
  %snap46 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %41, i32 0, i32 25, !dbg !6964
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %snap46, i64 0, i64 1, !dbg !6963
  store float %mul45, float* %arrayidx47, align 4, !dbg !6965
  %call48 = call float @ED_node_grid_size(), !dbg !6966
  %42 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6967
  %snap49 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %42, i32 0, i32 25, !dbg !6968
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %snap49, i64 0, i64 2, !dbg !6967
  store float %call48, float* %arrayidx50, align 4, !dbg !6969
  br label %if.end58, !dbg !6970

if.else51:                                        ; preds = %if.else37
  %43 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6971
  %snap52 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %43, i32 0, i32 25, !dbg !6973
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %snap52, i64 0, i64 0, !dbg !6971
  store float 0.000000e+00, float* %arrayidx53, align 4, !dbg !6974
  %44 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6975
  %snap54 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %44, i32 0, i32 25, !dbg !6976
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %snap54, i64 0, i64 2, !dbg !6975
  store float 1.000000e+00, float* %arrayidx55, align 4, !dbg !6977
  %45 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6978
  %snap56 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %45, i32 0, i32 25, !dbg !6979
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %snap56, i64 0, i64 1, !dbg !6978
  store float 1.000000e+00, float* %arrayidx57, align 4, !dbg !6980
  br label %if.end58

if.end58:                                         ; preds = %if.else51, %if.then42
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then30
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end21
  %46 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6981
  %num61 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %46, i32 0, i32 15, !dbg !6982
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num61, i32 0, i32 8, !dbg !6983
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !6981
  %47 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6984
  %snap62 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %47, i32 0, i32 25, !dbg !6985
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %snap62, i64 0, i64 1, !dbg !6984
  %48 = load float, float* %arrayidx63, align 4, !dbg !6984
  call void @copy_v3_fl(float* %arraydecay, float %48), !dbg !6986
  %49 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6987
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %49, i32 0, i32 56, !dbg !6988
  %50 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6988
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %50, i32 0, i32 38, !dbg !6989
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !6990
  %51 = load i8, i8* %system, align 4, !dbg !6990
  %conv64 = zext i8 %51 to i32, !dbg !6987
  %52 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6991
  %num65 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %52, i32 0, i32 15, !dbg !6992
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num65, i32 0, i32 1, !dbg !6993
  store i32 %conv64, i32* %unit_sys, align 4, !dbg !6994
  %53 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !6995
  %spacetype66 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %53, i32 0, i32 33, !dbg !6997
  %54 = load i8, i8* %spacetype66, align 8, !dbg !6997
  %conv67 = zext i8 %54 to i32, !dbg !6995
  %cmp68 = icmp eq i32 %conv67, 1, !dbg !6998
  br i1 %cmp68, label %if.then70, label %if.else79, !dbg !6999

if.then70:                                        ; preds = %if.end60
  %55 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7000
  %num71 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %55, i32 0, i32 15, !dbg !7002
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num71, i32 0, i32 2, !dbg !7003
  %arrayidx72 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !7000
  store i32 1, i32* %arrayidx72, align 8, !dbg !7004
  %56 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7005
  %num73 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %56, i32 0, i32 15, !dbg !7006
  %unit_type74 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num73, i32 0, i32 2, !dbg !7007
  %arrayidx75 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type74, i64 0, i64 1, !dbg !7005
  store i32 1, i32* %arrayidx75, align 4, !dbg !7008
  %57 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7009
  %num76 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %57, i32 0, i32 15, !dbg !7010
  %unit_type77 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num76, i32 0, i32 2, !dbg !7011
  %arrayidx78 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type77, i64 0, i64 2, !dbg !7009
  store i32 1, i32* %arrayidx78, align 8, !dbg !7012
  br label %if.end89, !dbg !7013

if.else79:                                        ; preds = %if.end60
  %58 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7014
  %num80 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %58, i32 0, i32 15, !dbg !7016
  %unit_type81 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num80, i32 0, i32 2, !dbg !7017
  %arrayidx82 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type81, i64 0, i64 0, !dbg !7014
  store i32 0, i32* %arrayidx82, align 8, !dbg !7018
  %59 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7019
  %num83 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %59, i32 0, i32 15, !dbg !7020
  %unit_type84 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num83, i32 0, i32 2, !dbg !7021
  %arrayidx85 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type84, i64 0, i64 1, !dbg !7019
  store i32 0, i32* %arrayidx85, align 4, !dbg !7022
  %60 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7023
  %num86 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %60, i32 0, i32 15, !dbg !7024
  %unit_type87 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num86, i32 0, i32 2, !dbg !7025
  %arrayidx88 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type87, i64 0, i64 2, !dbg !7023
  store i32 0, i32* %arrayidx88, align 8, !dbg !7026
  br label %if.end89

if.end89:                                         ; preds = %if.else79, %if.then70
  ret void, !dbg !7027
}

declare dso_local void @initSnapping(%struct.TransInfo*, %struct.wmOperator*) #2

declare dso_local void @WM_event_add_mousemove(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @initEdgeSlide(%struct.TransInfo* %t) #0 !dbg !7028 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %sld = alloca %struct.EdgeSlideData*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !7029, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.declare(metadata %struct.EdgeSlideData** %sld, metadata !7031, metadata !DIExpression()), !dbg !7032
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7033
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !7034
  store i32 28, i32* %mode, align 8, !dbg !7035
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7036
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 7, !dbg !7037
  store void (%struct.TransInfo*, i32*)* @applyEdgeSlide, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !7038
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7039
  %handleEvent = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 8, !dbg !7040
  store i32 (%struct.TransInfo*, %struct.wmEvent*)* @handleEventEdgeSlide, i32 (%struct.TransInfo*, %struct.wmEvent*)** %handleEvent, align 8, !dbg !7041
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7042
  %call = call zeroext i8 @createEdgeSlideVerts(%struct.TransInfo* %3), !dbg !7044
  %tobool = icmp ne i8 %call, 0, !dbg !7044
  br i1 %tobool, label %if.end, label %if.then, !dbg !7045

if.then:                                          ; preds = %entry
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7046
  %state = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 3, !dbg !7048
  store i16 3, i16* %state, align 4, !dbg !7049
  br label %return, !dbg !7050

if.end:                                           ; preds = %entry
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7051
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 40, !dbg !7052
  %6 = load i8*, i8** %customData, align 8, !dbg !7052
  %7 = bitcast i8* %6 to %struct.EdgeSlideData*, !dbg !7051
  store %struct.EdgeSlideData* %7, %struct.EdgeSlideData** %sld, align 8, !dbg !7053
  %8 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !7054
  %tobool1 = icmp ne %struct.EdgeSlideData* %8, null, !dbg !7054
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !7056

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !7057

if.end3:                                          ; preds = %if.end
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7058
  %customFree = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 41, !dbg !7059
  %customFree4 = bitcast {}** %customFree to void (%struct.TransInfo*)**, !dbg !7059
  store void (%struct.TransInfo*)* @freeEdgeSlideVerts, void (%struct.TransInfo*)** %customFree4, align 8, !dbg !7060
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7061
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7062
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 16, !dbg !7063
  %12 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !7064
  %mval_end = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %12, i32 0, i32 4, !dbg !7065
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval_end, i64 0, i64 0, !dbg !7064
  %13 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !7066
  %mval_start = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %13, i32 0, i32 3, !dbg !7067
  %arraydecay5 = getelementptr inbounds [2 x i32], [2 x i32]* %mval_start, i64 0, i64 0, !dbg !7066
  call void @setCustomPoints(%struct.TransInfo* %10, %struct.MouseInput* %mouse, i32* %arraydecay, i32* %arraydecay5), !dbg !7068
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7069
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7070
  %mouse6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 16, !dbg !7071
  call void @initMouseInputMode(%struct.TransInfo* %14, %struct.MouseInput* %mouse6, i32 13), !dbg !7072
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7073
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 24, !dbg !7074
  store i16 0, i16* %idx_max, align 2, !dbg !7075
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7076
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 15, !dbg !7077
  %idx_max7 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 0, !dbg !7078
  store i16 0, i16* %idx_max7, align 8, !dbg !7079
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7080
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 25, !dbg !7081
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !7080
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !7082
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7083
  %snap8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 25, !dbg !7084
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %snap8, i64 0, i64 1, !dbg !7083
  store float 0x3FB99999A0000000, float* %arrayidx9, align 4, !dbg !7085
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7086
  %snap10 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 25, !dbg !7087
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %snap10, i64 0, i64 1, !dbg !7086
  %21 = load float, float* %arrayidx11, align 4, !dbg !7086
  %mul = fmul float %21, 0x3FB99999A0000000, !dbg !7088
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7089
  %snap12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 25, !dbg !7090
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %snap12, i64 0, i64 2, !dbg !7089
  store float %mul, float* %arrayidx13, align 4, !dbg !7091
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7092
  %num14 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 15, !dbg !7093
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num14, i32 0, i32 8, !dbg !7094
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !7092
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7095
  %snap16 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 25, !dbg !7096
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %snap16, i64 0, i64 1, !dbg !7095
  %25 = load float, float* %arrayidx17, align 4, !dbg !7095
  call void @copy_v3_fl(float* %arraydecay15, float %25), !dbg !7097
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7098
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 56, !dbg !7099
  %27 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7099
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %27, i32 0, i32 38, !dbg !7100
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !7101
  %28 = load i8, i8* %system, align 4, !dbg !7101
  %conv = zext i8 %28 to i32, !dbg !7098
  %29 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7102
  %num18 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %29, i32 0, i32 15, !dbg !7103
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num18, i32 0, i32 1, !dbg !7104
  store i32 %conv, i32* %unit_sys, align 4, !dbg !7105
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7106
  %num19 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %30, i32 0, i32 15, !dbg !7107
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num19, i32 0, i32 2, !dbg !7108
  %arrayidx20 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !7106
  store i32 0, i32* %arrayidx20, align 8, !dbg !7109
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7110
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %31, i32 0, i32 1, !dbg !7111
  %32 = load i32, i32* %flag, align 4, !dbg !7112
  %or = or i32 %32, 4194560, !dbg !7112
  store i32 %or, i32* %flag, align 4, !dbg !7112
  br label %return, !dbg !7113

return:                                           ; preds = %if.end3, %if.then2, %if.then
  ret void, !dbg !7113
}

; Function Attrs: noinline nounwind uwtable
define internal void @initVertSlide(%struct.TransInfo* %t) #0 !dbg !7114 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %sld = alloca %struct.VertSlideData*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !7115, metadata !DIExpression()), !dbg !7116
  call void @llvm.dbg.declare(metadata %struct.VertSlideData** %sld, metadata !7117, metadata !DIExpression()), !dbg !7118
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7119
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !7120
  store i32 29, i32* %mode, align 8, !dbg !7121
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7122
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 7, !dbg !7123
  store void (%struct.TransInfo*, i32*)* @applyVertSlide, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !7124
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7125
  %handleEvent = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 8, !dbg !7126
  store i32 (%struct.TransInfo*, %struct.wmEvent*)* @handleEventVertSlide, i32 (%struct.TransInfo*, %struct.wmEvent*)** %handleEvent, align 8, !dbg !7127
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7128
  %call = call zeroext i8 @createVertSlideVerts(%struct.TransInfo* %3), !dbg !7130
  %tobool = icmp ne i8 %call, 0, !dbg !7130
  br i1 %tobool, label %if.end, label %if.then, !dbg !7131

if.then:                                          ; preds = %entry
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7132
  %state = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 3, !dbg !7134
  store i16 3, i16* %state, align 4, !dbg !7135
  br label %return, !dbg !7136

if.end:                                           ; preds = %entry
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7137
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 40, !dbg !7138
  %6 = load i8*, i8** %customData, align 8, !dbg !7138
  %7 = bitcast i8* %6 to %struct.VertSlideData*, !dbg !7137
  store %struct.VertSlideData* %7, %struct.VertSlideData** %sld, align 8, !dbg !7139
  %8 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !7140
  %tobool1 = icmp ne %struct.VertSlideData* %8, null, !dbg !7140
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !7142

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !7143

if.end3:                                          ; preds = %if.end
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7144
  %customFree = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 41, !dbg !7145
  %customFree4 = bitcast {}** %customFree to void (%struct.TransInfo*)**, !dbg !7145
  store void (%struct.TransInfo*)* @freeVertSlideVerts, void (%struct.TransInfo*)** %customFree4, align 8, !dbg !7146
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7147
  call void @calcVertSlideCustomPoints(%struct.TransInfo* %10), !dbg !7148
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7149
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7150
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 16, !dbg !7151
  call void @initMouseInputMode(%struct.TransInfo* %11, %struct.MouseInput* %mouse, i32 12), !dbg !7152
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7153
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 24, !dbg !7154
  store i16 0, i16* %idx_max, align 2, !dbg !7155
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7156
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 15, !dbg !7157
  %idx_max5 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 0, !dbg !7158
  store i16 0, i16* %idx_max5, align 8, !dbg !7159
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7160
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 25, !dbg !7161
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !7160
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !7162
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7163
  %snap6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 25, !dbg !7164
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %snap6, i64 0, i64 1, !dbg !7163
  store float 0x3FB99999A0000000, float* %arrayidx7, align 4, !dbg !7165
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7166
  %snap8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 25, !dbg !7167
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %snap8, i64 0, i64 1, !dbg !7166
  %18 = load float, float* %arrayidx9, align 4, !dbg !7166
  %mul = fmul float %18, 0x3FB99999A0000000, !dbg !7168
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7169
  %snap10 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 25, !dbg !7170
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %snap10, i64 0, i64 2, !dbg !7169
  store float %mul, float* %arrayidx11, align 4, !dbg !7171
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7172
  %num12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 15, !dbg !7173
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num12, i32 0, i32 8, !dbg !7174
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !7172
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7175
  %snap13 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 25, !dbg !7176
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %snap13, i64 0, i64 1, !dbg !7175
  %22 = load float, float* %arrayidx14, align 4, !dbg !7175
  call void @copy_v3_fl(float* %arraydecay, float %22), !dbg !7177
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7178
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 56, !dbg !7179
  %24 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7179
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %24, i32 0, i32 38, !dbg !7180
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !7181
  %25 = load i8, i8* %system, align 4, !dbg !7181
  %conv = zext i8 %25 to i32, !dbg !7178
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7182
  %num15 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 15, !dbg !7183
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num15, i32 0, i32 1, !dbg !7184
  store i32 %conv, i32* %unit_sys, align 4, !dbg !7185
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7186
  %num16 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %27, i32 0, i32 15, !dbg !7187
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num16, i32 0, i32 2, !dbg !7188
  %arrayidx17 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !7186
  store i32 0, i32* %arrayidx17, align 8, !dbg !7189
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7190
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 1, !dbg !7191
  %29 = load i32, i32* %flag, align 4, !dbg !7192
  %or = or i32 %29, 4194560, !dbg !7192
  store i32 %or, i32* %flag, align 4, !dbg !7192
  br label %return, !dbg !7193

return:                                           ; preds = %if.end3, %if.then2, %if.then
  ret void, !dbg !7193
}

; Function Attrs: noinline nounwind uwtable
define internal void @initTrackball(%struct.TransInfo* %t) #0 !dbg !7194 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !7195, metadata !DIExpression()), !dbg !7196
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7197
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !7198
  store i32 10, i32* %mode, align 8, !dbg !7199
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7200
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 7, !dbg !7201
  store void (%struct.TransInfo*, i32*)* @applyTrackball, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !7202
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7203
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7204
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 16, !dbg !7205
  call void @initMouseInputMode(%struct.TransInfo* %2, %struct.MouseInput* %mouse, i32 7), !dbg !7206
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7207
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 24, !dbg !7208
  store i16 1, i16* %idx_max, align 2, !dbg !7209
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7210
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 15, !dbg !7211
  %idx_max1 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 0, !dbg !7212
  store i16 1, i16* %idx_max1, align 8, !dbg !7213
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7214
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 25, !dbg !7215
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !7214
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !7216
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7217
  %snap2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 25, !dbg !7218
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %snap2, i64 0, i64 1, !dbg !7217
  store float 0x3FB6571840000000, float* %arrayidx3, align 4, !dbg !7219
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7220
  %snap4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 25, !dbg !7221
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %snap4, i64 0, i64 2, !dbg !7220
  store float 0x3F91DF46A0000000, float* %arrayidx5, align 4, !dbg !7222
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7223
  %num6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 15, !dbg !7224
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num6, i32 0, i32 8, !dbg !7225
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !7223
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7226
  %snap7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 25, !dbg !7227
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %snap7, i64 0, i64 2, !dbg !7226
  %11 = load float, float* %arrayidx8, align 4, !dbg !7226
  call void @copy_v3_fl(float* %arraydecay, float %11), !dbg !7228
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7229
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 56, !dbg !7230
  %13 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7230
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 38, !dbg !7231
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !7232
  %14 = load i8, i8* %system, align 4, !dbg !7232
  %conv = zext i8 %14 to i32, !dbg !7229
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7233
  %num9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 15, !dbg !7234
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num9, i32 0, i32 1, !dbg !7235
  store i32 %conv, i32* %unit_sys, align 4, !dbg !7236
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7237
  %scene10 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 56, !dbg !7238
  %17 = load %struct.Scene*, %struct.Scene** %scene10, align 8, !dbg !7238
  %unit11 = getelementptr inbounds %struct.Scene, %struct.Scene* %17, i32 0, i32 38, !dbg !7239
  %system_rotation = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit11, i32 0, i32 2, !dbg !7240
  %18 = load i8, i8* %system_rotation, align 1, !dbg !7240
  %conv12 = zext i8 %18 to i32, !dbg !7237
  %cmp = icmp eq i32 %conv12, 2, !dbg !7241
  %conv13 = zext i1 %cmp to i32, !dbg !7241
  %conv14 = trunc i32 %conv13 to i8, !dbg !7242
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7243
  %num15 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 15, !dbg !7244
  %unit_use_radians = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num15, i32 0, i32 3, !dbg !7245
  store i8 %conv14, i8* %unit_use_radians, align 4, !dbg !7246
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7247
  %num16 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 15, !dbg !7248
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num16, i32 0, i32 2, !dbg !7249
  %arrayidx17 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !7247
  store i32 5, i32* %arrayidx17, align 8, !dbg !7250
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7251
  %num18 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 15, !dbg !7252
  %unit_type19 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num18, i32 0, i32 2, !dbg !7253
  %arrayidx20 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type19, i64 0, i64 1, !dbg !7251
  store i32 5, i32* %arrayidx20, align 4, !dbg !7254
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7255
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 1, !dbg !7256
  %23 = load i32, i32* %flag, align 4, !dbg !7257
  %or = or i32 %23, 256, !dbg !7257
  store i32 %or, i32* %flag, align 4, !dbg !7257
  ret void, !dbg !7258
}

; Function Attrs: noinline nounwind uwtable
define internal void @initRotation(%struct.TransInfo* %t) #0 !dbg !7259 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !7260, metadata !DIExpression()), !dbg !7261
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7262
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !7263
  store i32 2, i32* %mode, align 8, !dbg !7264
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7265
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 7, !dbg !7266
  store void (%struct.TransInfo*, i32*)* @applyRotation, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !7267
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7268
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 16, !dbg !7269
  call void @setInputPostFct(%struct.MouseInput* %mouse, void (%struct.TransInfo*, float*)* @postInputRotation), !dbg !7270
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7271
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7272
  %mouse1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 16, !dbg !7273
  call void @initMouseInputMode(%struct.TransInfo* %3, %struct.MouseInput* %mouse1, i32 5), !dbg !7274
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7275
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 24, !dbg !7276
  store i16 0, i16* %idx_max, align 2, !dbg !7277
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7278
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 15, !dbg !7279
  %idx_max2 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 0, !dbg !7280
  store i16 0, i16* %idx_max2, align 8, !dbg !7281
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7282
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 25, !dbg !7283
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !7282
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !7284
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7285
  %snap3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 25, !dbg !7286
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %snap3, i64 0, i64 1, !dbg !7285
  store float 0x3FB6571840000000, float* %arrayidx4, align 4, !dbg !7287
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7288
  %snap5 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 25, !dbg !7289
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %snap5, i64 0, i64 2, !dbg !7288
  store float 0x3F91DF46A0000000, float* %arrayidx6, align 4, !dbg !7290
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7291
  %num7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 15, !dbg !7292
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num7, i32 0, i32 8, !dbg !7293
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !7291
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7294
  %snap8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 25, !dbg !7295
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %snap8, i64 0, i64 2, !dbg !7294
  %12 = load float, float* %arrayidx9, align 4, !dbg !7294
  call void @copy_v3_fl(float* %arraydecay, float %12), !dbg !7296
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7297
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 56, !dbg !7298
  %14 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7298
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %14, i32 0, i32 38, !dbg !7299
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !7300
  %15 = load i8, i8* %system, align 4, !dbg !7300
  %conv = zext i8 %15 to i32, !dbg !7297
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7301
  %num10 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 15, !dbg !7302
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num10, i32 0, i32 1, !dbg !7303
  store i32 %conv, i32* %unit_sys, align 4, !dbg !7304
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7305
  %scene11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 56, !dbg !7306
  %18 = load %struct.Scene*, %struct.Scene** %scene11, align 8, !dbg !7306
  %unit12 = getelementptr inbounds %struct.Scene, %struct.Scene* %18, i32 0, i32 38, !dbg !7307
  %system_rotation = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit12, i32 0, i32 2, !dbg !7308
  %19 = load i8, i8* %system_rotation, align 1, !dbg !7308
  %conv13 = zext i8 %19 to i32, !dbg !7305
  %cmp = icmp eq i32 %conv13, 2, !dbg !7309
  %conv14 = zext i1 %cmp to i32, !dbg !7309
  %conv15 = trunc i32 %conv14 to i8, !dbg !7310
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7311
  %num16 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 15, !dbg !7312
  %unit_use_radians = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num16, i32 0, i32 3, !dbg !7313
  store i8 %conv15, i8* %unit_use_radians, align 4, !dbg !7314
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7315
  %num17 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 15, !dbg !7316
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num17, i32 0, i32 2, !dbg !7317
  %arrayidx18 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !7315
  store i32 5, i32* %arrayidx18, align 8, !dbg !7318
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7319
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 1, !dbg !7321
  %23 = load i32, i32* %flag, align 4, !dbg !7321
  %and = and i32 %23, 32768, !dbg !7322
  %tobool = icmp ne i32 %and, 0, !dbg !7322
  br i1 %tobool, label %if.then, label %if.end, !dbg !7323

if.then:                                          ; preds = %entry
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7324
  %flag19 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 1, !dbg !7325
  %25 = load i32, i32* %flag19, align 4, !dbg !7326
  %or = or i32 %25, 256, !dbg !7326
  store i32 %or, i32* %flag19, align 4, !dbg !7326
  br label %if.end, !dbg !7324

if.end:                                           ; preds = %if.then, %entry
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7327
  %options = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 4, !dbg !7329
  %27 = load i32, i32* %options, align 8, !dbg !7329
  %and20 = and i32 %27, 256, !dbg !7330
  %tobool21 = icmp ne i32 %and20, 0, !dbg !7330
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !7331

if.then22:                                        ; preds = %if.end
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7332
  %axis = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 49, !dbg !7334
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !7332
  store float 0.000000e+00, float* %arrayidx23, align 4, !dbg !7335
  %29 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7336
  %axis24 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %29, i32 0, i32 49, !dbg !7337
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %axis24, i64 0, i64 1, !dbg !7336
  store float 0.000000e+00, float* %arrayidx25, align 4, !dbg !7338
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7339
  %axis26 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %30, i32 0, i32 49, !dbg !7340
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %axis26, i64 0, i64 2, !dbg !7339
  store float -1.000000e+00, float* %arrayidx27, align 4, !dbg !7341
  br label %if.end34, !dbg !7342

if.else:                                          ; preds = %if.end
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7343
  %axis28 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %31, i32 0, i32 49, !dbg !7345
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %axis28, i64 0, i64 0, !dbg !7343
  %32 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7346
  %viewinv = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %32, i32 0, i32 28, !dbg !7347
  %arrayidx30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 2, !dbg !7346
  %arraydecay31 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx30, i64 0, i64 0, !dbg !7346
  call void @negate_v3_v3(float* %arraydecay29, float* %arraydecay31), !dbg !7348
  %33 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7349
  %axis32 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %33, i32 0, i32 49, !dbg !7350
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %axis32, i64 0, i64 0, !dbg !7349
  %call = call float @normalize_v3(float* %arraydecay33), !dbg !7351
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then22
  %34 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7352
  %axis_orig = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %34, i32 0, i32 50, !dbg !7353
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %axis_orig, i64 0, i64 0, !dbg !7352
  %35 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7354
  %axis36 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %35, i32 0, i32 49, !dbg !7355
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %axis36, i64 0, i64 0, !dbg !7354
  call void @copy_v3_v3(float* %arraydecay35, float* %arraydecay37), !dbg !7356
  ret void, !dbg !7357
}

declare dso_local void @stopConstraint(%struct.TransInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @initResize(%struct.TransInfo* %t) #0 !dbg !7358 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !7359, metadata !DIExpression()), !dbg !7360
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7361
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !7362
  store i32 3, i32* %mode, align 8, !dbg !7363
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7364
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 7, !dbg !7365
  store void (%struct.TransInfo*, i32*)* @applyResize, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !7366
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7367
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7368
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 16, !dbg !7369
  call void @initMouseInputMode(%struct.TransInfo* %2, %struct.MouseInput* %mouse, i32 3), !dbg !7370
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7371
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 1, !dbg !7372
  %5 = load i32, i32* %flag, align 4, !dbg !7373
  %or = or i32 %5, 512, !dbg !7373
  store i32 %or, i32* %flag, align 4, !dbg !7373
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7374
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 15, !dbg !7375
  %val_flag = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 5, !dbg !7376
  %arrayidx = getelementptr inbounds [3 x i16], [3 x i16]* %val_flag, i64 0, i64 0, !dbg !7374
  %7 = load i16, i16* %arrayidx, align 8, !dbg !7377
  %conv = sext i16 %7 to i32, !dbg !7377
  %or1 = or i32 %conv, 1, !dbg !7377
  %conv2 = trunc i32 %or1 to i16, !dbg !7377
  store i16 %conv2, i16* %arrayidx, align 8, !dbg !7377
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7378
  %num3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 15, !dbg !7379
  %val_flag4 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num3, i32 0, i32 5, !dbg !7380
  %arrayidx5 = getelementptr inbounds [3 x i16], [3 x i16]* %val_flag4, i64 0, i64 1, !dbg !7378
  %9 = load i16, i16* %arrayidx5, align 2, !dbg !7381
  %conv6 = sext i16 %9 to i32, !dbg !7381
  %or7 = or i32 %conv6, 1, !dbg !7381
  %conv8 = trunc i32 %or7 to i16, !dbg !7381
  store i16 %conv8, i16* %arrayidx5, align 2, !dbg !7381
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7382
  %num9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 15, !dbg !7383
  %val_flag10 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num9, i32 0, i32 5, !dbg !7384
  %arrayidx11 = getelementptr inbounds [3 x i16], [3 x i16]* %val_flag10, i64 0, i64 2, !dbg !7382
  %11 = load i16, i16* %arrayidx11, align 4, !dbg !7385
  %conv12 = sext i16 %11 to i32, !dbg !7385
  %or13 = or i32 %conv12, 1, !dbg !7385
  %conv14 = trunc i32 %or13 to i16, !dbg !7385
  store i16 %conv14, i16* %arrayidx11, align 4, !dbg !7385
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7386
  %num15 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 15, !dbg !7387
  %flag16 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num15, i32 0, i32 4, !dbg !7388
  %13 = load i16, i16* %flag16, align 2, !dbg !7389
  %conv17 = sext i16 %13 to i32, !dbg !7389
  %or18 = or i32 %conv17, 1, !dbg !7389
  %conv19 = trunc i32 %or18 to i16, !dbg !7389
  store i16 %conv19, i16* %flag16, align 2, !dbg !7389
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7390
  %obedit = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 63, !dbg !7392
  %15 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7392
  %tobool = icmp ne %struct.Object* %15, null, !dbg !7390
  br i1 %tobool, label %if.end, label %if.then, !dbg !7393

if.then:                                          ; preds = %entry
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7394
  %flag20 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 1, !dbg !7396
  %17 = load i32, i32* %flag20, align 4, !dbg !7397
  %or21 = or i32 %17, 1024, !dbg !7397
  store i32 %or21, i32* %flag20, align 4, !dbg !7397
  br label %if.end, !dbg !7398

if.end:                                           ; preds = %if.then, %entry
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7399
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 24, !dbg !7400
  store i16 2, i16* %idx_max, align 2, !dbg !7401
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7402
  %num22 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 15, !dbg !7403
  %idx_max23 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num22, i32 0, i32 0, !dbg !7404
  store i16 2, i16* %idx_max23, align 8, !dbg !7405
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7406
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 25, !dbg !7407
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !7406
  store float 0.000000e+00, float* %arrayidx24, align 4, !dbg !7408
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7409
  %snap25 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 25, !dbg !7410
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %snap25, i64 0, i64 1, !dbg !7409
  store float 0x3FB99999A0000000, float* %arrayidx26, align 4, !dbg !7411
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7412
  %snap27 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 25, !dbg !7413
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %snap27, i64 0, i64 1, !dbg !7412
  %23 = load float, float* %arrayidx28, align 4, !dbg !7412
  %mul = fmul float %23, 0x3FB99999A0000000, !dbg !7414
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7415
  %snap29 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 25, !dbg !7416
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %snap29, i64 0, i64 2, !dbg !7415
  store float %mul, float* %arrayidx30, align 4, !dbg !7417
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7418
  %num31 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 15, !dbg !7419
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num31, i32 0, i32 8, !dbg !7420
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !7418
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7421
  %snap32 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 25, !dbg !7422
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %snap32, i64 0, i64 1, !dbg !7421
  %27 = load float, float* %arrayidx33, align 4, !dbg !7421
  call void @copy_v3_fl(float* %arraydecay, float %27), !dbg !7423
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7424
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 56, !dbg !7425
  %29 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7425
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %29, i32 0, i32 38, !dbg !7426
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !7427
  %30 = load i8, i8* %system, align 4, !dbg !7427
  %conv34 = zext i8 %30 to i32, !dbg !7424
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7428
  %num35 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %31, i32 0, i32 15, !dbg !7429
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num35, i32 0, i32 1, !dbg !7430
  store i32 %conv34, i32* %unit_sys, align 4, !dbg !7431
  %32 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7432
  %num36 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %32, i32 0, i32 15, !dbg !7433
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num36, i32 0, i32 2, !dbg !7434
  %arrayidx37 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !7432
  store i32 0, i32* %arrayidx37, align 8, !dbg !7435
  %33 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7436
  %num38 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %33, i32 0, i32 15, !dbg !7437
  %unit_type39 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num38, i32 0, i32 2, !dbg !7438
  %arrayidx40 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type39, i64 0, i64 1, !dbg !7436
  store i32 0, i32* %arrayidx40, align 4, !dbg !7439
  %34 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7440
  %num41 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %34, i32 0, i32 15, !dbg !7441
  %unit_type42 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num41, i32 0, i32 2, !dbg !7442
  %arrayidx43 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type42, i64 0, i64 2, !dbg !7440
  store i32 0, i32* %arrayidx43, align 8, !dbg !7443
  ret void, !dbg !7444
}

; Function Attrs: noinline nounwind uwtable
define internal void @transform_event_xyz_constraint(%struct.TransInfo* %t, i16 signext %key_type, i8 zeroext %cmode) #0 !dbg !7445 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %key_type.addr = alloca i16, align 2
  %cmode.addr = alloca i8, align 1
  %constraint_axis = alloca i32, align 4
  %constraint_plane = alloca i32, align 4
  %edit_2d = alloca i32, align 4
  %msg1 = alloca i8*, align 8
  %msg2 = alloca i8*, align 8
  %msg3 = alloca i8*, align 8
  %axis = alloca i8, align 1
  %orientation28 = alloca i16, align 2
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !7448, metadata !DIExpression()), !dbg !7449
  store i16 %key_type, i16* %key_type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %key_type.addr, metadata !7450, metadata !DIExpression()), !dbg !7451
  store i8 %cmode, i8* %cmode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cmode.addr, metadata !7452, metadata !DIExpression()), !dbg !7453
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7454
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 1, !dbg !7456
  %1 = load i32, i32* %flag, align 4, !dbg !7456
  %and = and i32 %1, 256, !dbg !7457
  %tobool = icmp ne i32 %and, 0, !dbg !7457
  br i1 %tobool, label %if.end61, label %if.then, !dbg !7458

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %constraint_axis, metadata !7459, metadata !DIExpression()), !dbg !7461
  call void @llvm.dbg.declare(metadata i32* %constraint_plane, metadata !7462, metadata !DIExpression()), !dbg !7463
  call void @llvm.dbg.declare(metadata i32* %edit_2d, metadata !7464, metadata !DIExpression()), !dbg !7465
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7466
  %flag1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 1, !dbg !7467
  %3 = load i32, i32* %flag1, align 4, !dbg !7467
  %and2 = and i32 %3, 32768, !dbg !7468
  store i32 %and2, i32* %edit_2d, align 4, !dbg !7465
  call void @llvm.dbg.declare(metadata i8** %msg1, metadata !7469, metadata !DIExpression()), !dbg !7470
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8** %msg1, align 8, !dbg !7470
  call void @llvm.dbg.declare(metadata i8** %msg2, metadata !7471, metadata !DIExpression()), !dbg !7472
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8** %msg2, align 8, !dbg !7472
  call void @llvm.dbg.declare(metadata i8** %msg3, metadata !7473, metadata !DIExpression()), !dbg !7474
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8** %msg3, align 8, !dbg !7474
  call void @llvm.dbg.declare(metadata i8* %axis, metadata !7475, metadata !DIExpression()), !dbg !7476
  %4 = load i16, i16* %key_type.addr, align 2, !dbg !7477
  %conv = sext i16 %4 to i32, !dbg !7477
  switch i32 %conv, label %sw.default [
    i32 120, label %sw.bb
    i32 121, label %sw.bb3
    i32 122, label %sw.bb4
  ], !dbg !7478

sw.bb:                                            ; preds = %if.then
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72, i64 0, i64 0), i8** %msg1, align 8, !dbg !7479
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.73, i64 0, i64 0), i8** %msg2, align 8, !dbg !7481
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i64 0, i64 0), i8** %msg3, align 8, !dbg !7482
  store i8 88, i8* %axis, align 1, !dbg !7483
  store i32 2, i32* %constraint_axis, align 4, !dbg !7484
  br label %sw.epilog, !dbg !7485

sw.bb3:                                           ; preds = %if.then
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0), i8** %msg1, align 8, !dbg !7486
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.75, i64 0, i64 0), i8** %msg2, align 8, !dbg !7487
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.56, i64 0, i64 0), i8** %msg3, align 8, !dbg !7488
  store i8 89, i8* %axis, align 1, !dbg !7489
  store i32 4, i32* %constraint_axis, align 4, !dbg !7490
  br label %sw.epilog, !dbg !7491

sw.bb4:                                           ; preds = %if.then
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.76, i64 0, i64 0), i8** %msg1, align 8, !dbg !7492
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i64 0, i64 0), i8** %msg2, align 8, !dbg !7493
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.57, i64 0, i64 0), i8** %msg3, align 8, !dbg !7494
  store i8 90, i8* %axis, align 1, !dbg !7495
  store i32 8, i32* %constraint_axis, align 4, !dbg !7496
  br label %sw.epilog, !dbg !7497

sw.default:                                       ; preds = %if.then
  br label %if.end61, !dbg !7498

sw.epilog:                                        ; preds = %sw.bb4, %sw.bb3, %sw.bb
  %5 = load i32, i32* %constraint_axis, align 4, !dbg !7499
  %neg = xor i32 %5, -1, !dbg !7500
  %and5 = and i32 14, %neg, !dbg !7501
  store i32 %and5, i32* %constraint_plane, align 4, !dbg !7502
  %6 = load i32, i32* %edit_2d, align 4, !dbg !7503
  %tobool6 = icmp ne i32 %6, 0, !dbg !7503
  br i1 %tobool6, label %land.lhs.true, label %if.else15, !dbg !7505

land.lhs.true:                                    ; preds = %sw.epilog
  %7 = load i16, i16* %key_type.addr, align 2, !dbg !7506
  %conv7 = sext i16 %7 to i32, !dbg !7506
  %cmp = icmp ne i32 %conv7, 122, !dbg !7507
  br i1 %cmp, label %if.then9, label %if.else15, !dbg !7508

if.then9:                                         ; preds = %land.lhs.true
  %8 = load i8, i8* %cmode.addr, align 1, !dbg !7509
  %conv10 = zext i8 %8 to i32, !dbg !7509
  %9 = load i8, i8* %axis, align 1, !dbg !7512
  %conv11 = zext i8 %9 to i32, !dbg !7512
  %cmp12 = icmp eq i32 %conv10, %conv11, !dbg !7513
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !7514

if.then14:                                        ; preds = %if.then9
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7515
  call void @stopConstraint(%struct.TransInfo* %10), !dbg !7517
  br label %if.end, !dbg !7518

if.else:                                          ; preds = %if.then9
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7519
  %12 = load i32, i32* %constraint_axis, align 4, !dbg !7521
  %13 = load i8*, i8** %msg1, align 8, !dbg !7522
  call void @setUserConstraint(%struct.TransInfo* %11, i16 signext 0, i32 %12, i8* %13), !dbg !7523
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then14
  br label %if.end60, !dbg !7524

if.else15:                                        ; preds = %land.lhs.true, %sw.epilog
  %14 = load i32, i32* %edit_2d, align 4, !dbg !7525
  %tobool16 = icmp ne i32 %14, 0, !dbg !7525
  br i1 %tobool16, label %if.end59, label %if.then17, !dbg !7527

if.then17:                                        ; preds = %if.else15
  %15 = load i8, i8* %cmode.addr, align 1, !dbg !7528
  %conv18 = zext i8 %15 to i32, !dbg !7528
  %16 = load i8, i8* %axis, align 1, !dbg !7531
  %conv19 = zext i8 %16 to i32, !dbg !7531
  %cmp20 = icmp eq i32 %conv18, %conv19, !dbg !7532
  br i1 %cmp20, label %if.then22, label %if.else46, !dbg !7533

if.then22:                                        ; preds = %if.then17
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7534
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 13, !dbg !7537
  %orientation = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 0, !dbg !7538
  %18 = load i16, i16* %orientation, align 8, !dbg !7538
  %conv23 = sext i16 %18 to i32, !dbg !7534
  %cmp24 = icmp ne i32 %conv23, 0, !dbg !7539
  br i1 %cmp24, label %if.then26, label %if.else27, !dbg !7540

if.then26:                                        ; preds = %if.then22
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7541
  call void @stopConstraint(%struct.TransInfo* %19), !dbg !7543
  br label %if.end45, !dbg !7544

if.else27:                                        ; preds = %if.then22
  call void @llvm.dbg.declare(metadata i16* %orientation28, metadata !7545, metadata !DIExpression()), !dbg !7547
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7548
  %current_orientation = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 43, !dbg !7549
  %21 = load i16, i16* %current_orientation, align 2, !dbg !7549
  %conv29 = sext i16 %21 to i32, !dbg !7548
  %cmp30 = icmp ne i32 %conv29, 0, !dbg !7550
  br i1 %cmp30, label %cond.true, label %cond.false, !dbg !7548

cond.true:                                        ; preds = %if.else27
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7551
  %current_orientation32 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 43, !dbg !7552
  %23 = load i16, i16* %current_orientation32, align 2, !dbg !7552
  %conv33 = sext i16 %23 to i32, !dbg !7551
  br label %cond.end, !dbg !7548

cond.false:                                       ; preds = %if.else27
  br label %cond.end, !dbg !7548

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv33, %cond.true ], [ 1, %cond.false ], !dbg !7548
  %conv34 = trunc i32 %cond to i16, !dbg !7553
  store i16 %conv34, i16* %orientation28, align 2, !dbg !7547
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7554
  %modifiers = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 2, !dbg !7556
  %25 = load i32, i32* %modifiers, align 8, !dbg !7556
  %and35 = and i32 %25, 16, !dbg !7557
  %tobool36 = icmp ne i32 %and35, 0, !dbg !7557
  br i1 %tobool36, label %if.else38, label %if.then37, !dbg !7558

if.then37:                                        ; preds = %cond.end
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7559
  %27 = load i16, i16* %orientation28, align 2, !dbg !7560
  %28 = load i32, i32* %constraint_axis, align 4, !dbg !7561
  %29 = load i8*, i8** %msg2, align 8, !dbg !7562
  call void @setUserConstraint(%struct.TransInfo* %26, i16 signext %27, i32 %28, i8* %29), !dbg !7563
  br label %if.end44, !dbg !7563

if.else38:                                        ; preds = %cond.end
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7564
  %modifiers39 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %30, i32 0, i32 2, !dbg !7566
  %31 = load i32, i32* %modifiers39, align 8, !dbg !7566
  %and40 = and i32 %31, 16, !dbg !7567
  %tobool41 = icmp ne i32 %and40, 0, !dbg !7567
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !7568

if.then42:                                        ; preds = %if.else38
  %32 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7569
  %33 = load i16, i16* %orientation28, align 2, !dbg !7570
  %34 = load i32, i32* %constraint_plane, align 4, !dbg !7571
  %35 = load i8*, i8** %msg3, align 8, !dbg !7572
  call void @setUserConstraint(%struct.TransInfo* %32, i16 signext %33, i32 %34, i8* %35), !dbg !7573
  br label %if.end43, !dbg !7573

if.end43:                                         ; preds = %if.then42, %if.else38
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then37
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then26
  br label %if.end58, !dbg !7574

if.else46:                                        ; preds = %if.then17
  %36 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7575
  %modifiers47 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %36, i32 0, i32 2, !dbg !7578
  %37 = load i32, i32* %modifiers47, align 8, !dbg !7578
  %and48 = and i32 %37, 16, !dbg !7579
  %tobool49 = icmp ne i32 %and48, 0, !dbg !7579
  br i1 %tobool49, label %if.else51, label %if.then50, !dbg !7580

if.then50:                                        ; preds = %if.else46
  %38 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7581
  %39 = load i32, i32* %constraint_axis, align 4, !dbg !7582
  %40 = load i8*, i8** %msg2, align 8, !dbg !7583
  call void @setUserConstraint(%struct.TransInfo* %38, i16 signext 0, i32 %39, i8* %40), !dbg !7584
  br label %if.end57, !dbg !7584

if.else51:                                        ; preds = %if.else46
  %41 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7585
  %modifiers52 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %41, i32 0, i32 2, !dbg !7587
  %42 = load i32, i32* %modifiers52, align 8, !dbg !7587
  %and53 = and i32 %42, 16, !dbg !7588
  %tobool54 = icmp ne i32 %and53, 0, !dbg !7588
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !7589

if.then55:                                        ; preds = %if.else51
  %43 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7590
  %44 = load i32, i32* %constraint_plane, align 4, !dbg !7591
  %45 = load i8*, i8** %msg3, align 8, !dbg !7592
  call void @setUserConstraint(%struct.TransInfo* %43, i16 signext 0, i32 %44, i8* %45), !dbg !7593
  br label %if.end56, !dbg !7593

if.end56:                                         ; preds = %if.then55, %if.else51
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then50
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end45
  br label %if.end59, !dbg !7594

if.end59:                                         ; preds = %if.end58, %if.else15
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end
  %46 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7595
  %redraw = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %46, i32 0, i32 17, !dbg !7596
  %47 = load i32, i32* %redraw, align 8, !dbg !7597
  %or = or i32 %47, 1, !dbg !7597
  store i32 %or, i32* %redraw, align 8, !dbg !7597
  br label %if.end61, !dbg !7598

if.end61:                                         ; preds = %sw.default, %if.end60, %entry
  ret void, !dbg !7599
}

declare dso_local void @setUserConstraint(%struct.TransInfo*, i16 signext, i32, i8*) #2

declare dso_local void @addSnapPoint(%struct.TransInfo*) #2

declare dso_local void @removeSnapPoint(%struct.TransInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !7600 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !7604, metadata !DIExpression()), !dbg !7605
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !7606, metadata !DIExpression()), !dbg !7607
  %0 = load float, float* %a.addr, align 4, !dbg !7608
  %1 = load float, float* %b.addr, align 4, !dbg !7609
  %cmp = fcmp olt float %0, %1, !dbg !7610
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7611

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !7612
  br label %cond.end, !dbg !7611

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !7613
  br label %cond.end, !dbg !7611

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !7611
  ret float %cond, !dbg !7614
}

declare dso_local void @calculatePropRatio(%struct.TransInfo*) #2

declare dso_local void @transform_autoik_update(%struct.TransInfo*, i16 signext) #2

declare dso_local void @setLocalConstraint(%struct.TransInfo*, i32, i8*) #2

declare dso_local void @initSelectConstraint(%struct.TransInfo*, [3 x float]*) #2

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #4

declare dso_local void @unit_m3([3 x float]*) #2

declare dso_local void @postSelectConstraint(%struct.TransInfo*) #2

declare dso_local void @sort_trans_data_dist(%struct.TransInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @view_editmove(i16 zeroext %UNUSED_event) #0 !dbg !7615 {
entry:
  %UNUSED_event.addr = alloca i16, align 2
  store i16 %UNUSED_event, i16* %UNUSED_event.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %UNUSED_event.addr, metadata !7618, metadata !DIExpression()), !dbg !7619
  ret void, !dbg !7620
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @calculateTransformCenter(%struct.bContext* %C, i32 %centerMode, float* %cent3d, float* %cent2d) #0 !dbg !7621 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %centerMode.addr = alloca i32, align 4
  %cent3d.addr = alloca float*, align 8
  %cent2d.addr = alloca float*, align 8
  %t = alloca %struct.TransInfo*, align 8
  %success = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7624, metadata !DIExpression()), !dbg !7625
  store i32 %centerMode, i32* %centerMode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %centerMode.addr, metadata !7626, metadata !DIExpression()), !dbg !7627
  store float* %cent3d, float** %cent3d.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cent3d.addr, metadata !7628, metadata !DIExpression()), !dbg !7629
  store float* %cent2d, float** %cent2d.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cent2d.addr, metadata !7630, metadata !DIExpression()), !dbg !7631
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t, metadata !7632, metadata !DIExpression()), !dbg !7633
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7634
  %call = call i8* %0(i64 1392, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i64 0, i64 0)), !dbg !7634
  %1 = bitcast i8* %call to %struct.TransInfo*, !dbg !7634
  store %struct.TransInfo* %1, %struct.TransInfo** %t, align 8, !dbg !7633
  call void @llvm.dbg.declare(metadata i8* %success, metadata !7635, metadata !DIExpression()), !dbg !7636
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !7637
  %state = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 3, !dbg !7638
  store i16 1, i16* %state, align 4, !dbg !7639
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !7640
  %options = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 4, !dbg !7641
  store i32 4, i32* %options, align 8, !dbg !7642
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !7643
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 0, !dbg !7644
  store i32 0, i32* %mode, align 8, !dbg !7645
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7646
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !7647
  call void @initTransInfo(%struct.bContext* %5, %struct.TransInfo* %6, %struct.wmOperator* null, %struct.wmEvent* null), !dbg !7648
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !7649
  %around = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 32, !dbg !7650
  store i16 0, i16* %around, align 2, !dbg !7651
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7652
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !7653
  call void @createTransData(%struct.bContext* %8, %struct.TransInfo* %9), !dbg !7654
  %10 = load i32, i32* %centerMode.addr, align 4, !dbg !7655
  %conv = trunc i32 %10 to i16, !dbg !7655
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !7656
  %around1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 32, !dbg !7657
  store i16 %conv, i16* %around1, align 2, !dbg !7658
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !7659
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 9, !dbg !7661
  %13 = load i32, i32* %total, align 8, !dbg !7661
  %cmp = icmp eq i32 %13, 0, !dbg !7662
  br i1 %cmp, label %if.then, label %if.else, !dbg !7663

if.then:                                          ; preds = %entry
  store i8 0, i8* %success, align 1, !dbg !7664
  br label %if.end8, !dbg !7666

if.else:                                          ; preds = %entry
  store i8 1, i8* %success, align 1, !dbg !7667
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !7669
  call void @calculateCenter(%struct.TransInfo* %14), !dbg !7670
  %15 = load float*, float** %cent2d.addr, align 8, !dbg !7671
  %tobool = icmp ne float* %15, null, !dbg !7671
  br i1 %tobool, label %if.then3, label %if.end, !dbg !7673

if.then3:                                         ; preds = %if.else
  %16 = load float*, float** %cent2d.addr, align 8, !dbg !7674
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !7676
  %center2d = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 21, !dbg !7677
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %center2d, i64 0, i64 0, !dbg !7676
  call void @copy_v2_v2(float* %16, float* %arraydecay), !dbg !7678
  br label %if.end, !dbg !7679

if.end:                                           ; preds = %if.then3, %if.else
  %18 = load float*, float** %cent3d.addr, align 8, !dbg !7680
  %tobool4 = icmp ne float* %18, null, !dbg !7680
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !7682

if.then5:                                         ; preds = %if.end
  %19 = load float*, float** %cent3d.addr, align 8, !dbg !7683
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !7685
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 13, !dbg !7686
  %center = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 5, !dbg !7687
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !7685
  call void @copy_v3_v3(float* %19, float* %arraydecay6), !dbg !7688
  br label %if.end7, !dbg !7689

if.end7:                                          ; preds = %if.then5, %if.end
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7690
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !7691
  call void @special_aftertrans_update(%struct.bContext* %21, %struct.TransInfo* %22), !dbg !7692
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7693
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !7694
  call void @postTrans(%struct.bContext* %23, %struct.TransInfo* %24), !dbg !7695
  %25 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7696
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !7697
  %27 = bitcast %struct.TransInfo* %26 to i8*, !dbg !7697
  call void %25(i8* %27), !dbg !7696
  %28 = load i8, i8* %success, align 1, !dbg !7698
  ret i8 %28, !dbg !7699
}

declare dso_local void @initTransInfo(%struct.bContext*, %struct.TransInfo*, %struct.wmOperator*, %struct.wmEvent*) #2

declare dso_local void @createTransData(%struct.bContext*, %struct.TransInfo*) #2

declare dso_local void @calculateCenter(%struct.TransInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !7700 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7701, metadata !DIExpression()), !dbg !7702
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7703, metadata !DIExpression()), !dbg !7704
  %0 = load float*, float** %a.addr, align 8, !dbg !7705
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7705
  %1 = load float, float* %arrayidx, align 4, !dbg !7705
  %2 = load float*, float** %r.addr, align 8, !dbg !7706
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7706
  store float %1, float* %arrayidx1, align 4, !dbg !7707
  %3 = load float*, float** %a.addr, align 8, !dbg !7708
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !7708
  %4 = load float, float* %arrayidx2, align 4, !dbg !7708
  %5 = load float*, float** %r.addr, align 8, !dbg !7709
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !7709
  store float %4, float* %arrayidx3, align 4, !dbg !7710
  %6 = load float*, float** %a.addr, align 8, !dbg !7711
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !7711
  %7 = load float, float* %arrayidx4, align 4, !dbg !7711
  %8 = load float*, float** %r.addr, align 8, !dbg !7712
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !7712
  store float %7, float* %arrayidx5, align 4, !dbg !7713
  ret void, !dbg !7714
}

declare dso_local void @special_aftertrans_update(%struct.bContext*, %struct.TransInfo*) #2

declare dso_local void @postTrans(%struct.bContext*, %struct.TransInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @saveTransform(%struct.bContext* %C, %struct.TransInfo* %t, %struct.wmOperator* %op) #0 !dbg !7715 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %t.addr = alloca %struct.TransInfo*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %constraint_axis = alloca [3 x i32], align 4
  %proportional = alloca i32, align 4
  %prop = alloca %struct.PropertyRNA*, align 8
  %values = alloca float*, align 8
  %v3d = alloca %struct.View3D*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7814, metadata !DIExpression()), !dbg !7815
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !7816, metadata !DIExpression()), !dbg !7817
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7818, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !7820, metadata !DIExpression()), !dbg !7823
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7824
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !7825
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !7823
  call void @llvm.dbg.declare(metadata [3 x i32]* %constraint_axis, metadata !7826, metadata !DIExpression()), !dbg !7827
  %1 = bitcast [3 x i32]* %constraint_axis to i8*, !dbg !7827
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 12, i1 false), !dbg !7827
  call void @llvm.dbg.declare(metadata i32* %proportional, metadata !7828, metadata !DIExpression()), !dbg !7829
  store i32 0, i32* %proportional, align 4, !dbg !7829
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !7830, metadata !DIExpression()), !dbg !7831
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7832
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !7834
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7834
  %call1 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i64 0, i64 0)), !dbg !7835
  store %struct.PropertyRNA* %call1, %struct.PropertyRNA** %prop, align 8, !dbg !7836
  %tobool = icmp ne %struct.PropertyRNA* %call1, null, !dbg !7836
  br i1 %tobool, label %if.then, label %if.end, !dbg !7837

if.then:                                          ; preds = %entry
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7838
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !7840
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !7840
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7841
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7842
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 0, !dbg !7843
  %8 = load i32, i32* %mode, align 8, !dbg !7843
  call void @RNA_property_enum_set(%struct.PointerRNA* %5, %struct.PropertyRNA* %6, i32 %8), !dbg !7844
  br label %if.end, !dbg !7845

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7846
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 7, !dbg !7848
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !7848
  %call4 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0)), !dbg !7849
  store %struct.PropertyRNA* %call4, %struct.PropertyRNA** %prop, align 8, !dbg !7850
  %tobool5 = icmp ne %struct.PropertyRNA* %call4, null, !dbg !7850
  br i1 %tobool5, label %if.then6, label %if.end16, !dbg !7851

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata float** %values, metadata !7852, metadata !DIExpression()), !dbg !7854
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7855
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 1, !dbg !7856
  %12 = load i32, i32* %flag, align 4, !dbg !7856
  %and = and i32 %12, 1048576, !dbg !7857
  %tobool7 = icmp ne i32 %and, 0, !dbg !7857
  br i1 %tobool7, label %cond.true, label %cond.false, !dbg !7858

cond.true:                                        ; preds = %if.then6
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7859
  %auto_values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 48, !dbg !7860
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %auto_values, i64 0, i64 0, !dbg !7859
  br label %cond.end, !dbg !7858

cond.false:                                       ; preds = %if.then6
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7861
  %values8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 47, !dbg !7862
  %arraydecay9 = getelementptr inbounds [4 x float], [4 x float]* %values8, i64 0, i64 0, !dbg !7861
  br label %cond.end, !dbg !7858

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay, %cond.true ], [ %arraydecay9, %cond.false ], !dbg !7858
  store float* %cond, float** %values, align 8, !dbg !7854
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7863
  %call10 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %15), !dbg !7865
  %tobool11 = icmp ne i8 %call10, 0, !dbg !7865
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !7866

if.then12:                                        ; preds = %cond.end
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7867
  %ptr13 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %16, i32 0, i32 7, !dbg !7869
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr13, align 8, !dbg !7869
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7870
  %19 = load float*, float** %values, align 8, !dbg !7871
  call void @RNA_property_float_set_array(%struct.PointerRNA* %17, %struct.PropertyRNA* %18, float* %19), !dbg !7872
  br label %if.end15, !dbg !7873

if.else:                                          ; preds = %cond.end
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7874
  %ptr14 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %20, i32 0, i32 7, !dbg !7876
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr14, align 8, !dbg !7876
  %22 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7877
  %23 = load float*, float** %values, align 8, !dbg !7878
  %arrayidx = getelementptr inbounds float, float* %23, i64 0, !dbg !7878
  %24 = load float, float* %arrayidx, align 4, !dbg !7878
  call void @RNA_property_float_set(%struct.PointerRNA* %21, %struct.PropertyRNA* %22, float %24), !dbg !7879
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then12
  br label %if.end16, !dbg !7880

if.end16:                                         ; preds = %if.end15, %if.end
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7881
  %flag17 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 1, !dbg !7882
  %26 = load i32, i32* %flag17, align 4, !dbg !7882
  %and18 = and i32 %26, 33560576, !dbg !7883
  switch i32 %and18, label %sw.default [
    i32 2048, label %sw.bb
    i32 6144, label %sw.bb19
    i32 33556480, label %sw.bb20
  ], !dbg !7884

sw.bb:                                            ; preds = %if.end16
  store i32 1, i32* %proportional, align 4, !dbg !7885
  br label %sw.epilog, !dbg !7887

sw.bb19:                                          ; preds = %if.end16
  store i32 2, i32* %proportional, align 4, !dbg !7888
  br label %sw.epilog, !dbg !7889

sw.bb20:                                          ; preds = %if.end16
  store i32 3, i32* %proportional, align 4, !dbg !7890
  br label %sw.epilog, !dbg !7891

sw.default:                                       ; preds = %if.end16
  store i32 0, i32* %proportional, align 4, !dbg !7892
  br label %sw.epilog, !dbg !7893

sw.epilog:                                        ; preds = %sw.default, %sw.bb20, %sw.bb19, %sw.bb
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7894
  %flag21 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %27, i32 0, i32 1, !dbg !7896
  %28 = load i32, i32* %flag21, align 4, !dbg !7896
  %and22 = and i32 %28, 2097152, !dbg !7897
  %tobool23 = icmp ne i32 %and22, 0, !dbg !7897
  br i1 %tobool23, label %if.then24, label %if.end98, !dbg !7898

if.then24:                                        ; preds = %sw.epilog
  %29 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7899
  %options = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %29, i32 0, i32 4, !dbg !7902
  %30 = load i32, i32* %options, align 8, !dbg !7902
  %and25 = and i32 %30, 4, !dbg !7903
  %tobool26 = icmp ne i32 %and25, 0, !dbg !7903
  br i1 %tobool26, label %if.end71, label %if.then27, !dbg !7904

if.then27:                                        ; preds = %if.then24
  %31 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7905
  %ptr28 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %31, i32 0, i32 7, !dbg !7908
  %32 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr28, align 8, !dbg !7908
  %call29 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %32, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.63, i64 0, i64 0)), !dbg !7909
  store %struct.PropertyRNA* %call29, %struct.PropertyRNA** %prop, align 8, !dbg !7910
  %tobool30 = icmp ne %struct.PropertyRNA* %call29, null, !dbg !7910
  br i1 %tobool30, label %land.lhs.true, label %if.end51, !dbg !7911

land.lhs.true:                                    ; preds = %if.then27
  %33 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7912
  %ptr31 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %33, i32 0, i32 7, !dbg !7913
  %34 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr31, align 8, !dbg !7913
  %35 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7914
  %call32 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %34, %struct.PropertyRNA* %35), !dbg !7915
  %tobool33 = icmp ne i8 %call32, 0, !dbg !7915
  br i1 %tobool33, label %if.end51, label %if.then34, !dbg !7916

if.then34:                                        ; preds = %land.lhs.true
  %36 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7917
  %obedit = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %36, i32 0, i32 63, !dbg !7920
  %37 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7920
  %tobool35 = icmp ne %struct.Object* %37, null, !dbg !7917
  br i1 %tobool35, label %if.then36, label %if.else38, !dbg !7921

if.then36:                                        ; preds = %if.then34
  %38 = load i32, i32* %proportional, align 4, !dbg !7922
  %conv = trunc i32 %38 to i16, !dbg !7922
  %39 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7923
  %proportional37 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %39, i32 0, i32 56, !dbg !7924
  store i16 %conv, i16* %proportional37, align 2, !dbg !7925
  br label %if.end50, !dbg !7923

if.else38:                                        ; preds = %if.then34
  %40 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7926
  %options39 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %40, i32 0, i32 4, !dbg !7928
  %41 = load i32, i32* %options39, align 8, !dbg !7928
  %and40 = and i32 %41, 128, !dbg !7929
  %tobool41 = icmp ne i32 %and40, 0, !dbg !7929
  br i1 %tobool41, label %if.then42, label %if.else45, !dbg !7930

if.then42:                                        ; preds = %if.else38
  %42 = load i32, i32* %proportional, align 4, !dbg !7931
  %cmp = icmp ne i32 %42, 0, !dbg !7932
  %conv43 = zext i1 %cmp to i32, !dbg !7932
  %conv44 = trunc i32 %conv43 to i8, !dbg !7933
  %43 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7934
  %proportional_mask = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %43, i32 0, i32 59, !dbg !7935
  store i8 %conv44, i8* %proportional_mask, align 1, !dbg !7936
  br label %if.end49, !dbg !7934

if.else45:                                        ; preds = %if.else38
  %44 = load i32, i32* %proportional, align 4, !dbg !7937
  %cmp46 = icmp ne i32 %44, 0, !dbg !7938
  %conv47 = zext i1 %cmp46 to i32, !dbg !7938
  %conv48 = trunc i32 %conv47 to i8, !dbg !7939
  %45 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7940
  %proportional_objects = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %45, i32 0, i32 58, !dbg !7941
  store i8 %conv48, i8* %proportional_objects, align 2, !dbg !7942
  br label %if.end49

if.end49:                                         ; preds = %if.else45, %if.then42
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then36
  br label %if.end51, !dbg !7943

if.end51:                                         ; preds = %if.end50, %land.lhs.true, %if.then27
  %46 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7944
  %ptr52 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %46, i32 0, i32 7, !dbg !7946
  %47 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr52, align 8, !dbg !7946
  %call53 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %47, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.64, i64 0, i64 0)), !dbg !7947
  store %struct.PropertyRNA* %call53, %struct.PropertyRNA** %prop, align 8, !dbg !7948
  %tobool54 = icmp ne %struct.PropertyRNA* %call53, null, !dbg !7948
  br i1 %tobool54, label %land.lhs.true55, label %if.end60, !dbg !7949

land.lhs.true55:                                  ; preds = %if.end51
  %48 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7950
  %ptr56 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %48, i32 0, i32 7, !dbg !7951
  %49 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr56, align 8, !dbg !7951
  %50 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7952
  %call57 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %49, %struct.PropertyRNA* %50), !dbg !7953
  %tobool58 = icmp ne i8 %call57, 0, !dbg !7953
  br i1 %tobool58, label %if.end60, label %if.then59, !dbg !7954

if.then59:                                        ; preds = %land.lhs.true55
  %51 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7955
  %prop_size = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %51, i32 0, i32 18, !dbg !7957
  %52 = load float, float* %prop_size, align 4, !dbg !7957
  %53 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7958
  %proportional_size = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %53, i32 0, i32 19, !dbg !7959
  store float %52, float* %proportional_size, align 8, !dbg !7960
  br label %if.end60, !dbg !7961

if.end60:                                         ; preds = %if.then59, %land.lhs.true55, %if.end51
  %54 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7962
  %ptr61 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %54, i32 0, i32 7, !dbg !7964
  %55 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr61, align 8, !dbg !7964
  %call62 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %55, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.65, i64 0, i64 0)), !dbg !7965
  store %struct.PropertyRNA* %call62, %struct.PropertyRNA** %prop, align 8, !dbg !7966
  %tobool63 = icmp ne %struct.PropertyRNA* %call62, null, !dbg !7966
  br i1 %tobool63, label %land.lhs.true64, label %if.end70, !dbg !7967

land.lhs.true64:                                  ; preds = %if.end60
  %56 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7968
  %ptr65 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %56, i32 0, i32 7, !dbg !7969
  %57 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr65, align 8, !dbg !7969
  %58 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7970
  %call66 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %57, %struct.PropertyRNA* %58), !dbg !7971
  %tobool67 = icmp ne i8 %call66, 0, !dbg !7971
  br i1 %tobool67, label %if.end70, label %if.then68, !dbg !7972

if.then68:                                        ; preds = %land.lhs.true64
  %59 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7973
  %prop_mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %59, i32 0, i32 45, !dbg !7975
  %60 = load i16, i16* %prop_mode, align 2, !dbg !7975
  %61 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7976
  %prop_mode69 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %61, i32 0, i32 57, !dbg !7977
  store i16 %60, i16* %prop_mode69, align 8, !dbg !7978
  br label %if.end70, !dbg !7979

if.end70:                                         ; preds = %if.then68, %land.lhs.true64, %if.end60
  br label %if.end71, !dbg !7980

if.end71:                                         ; preds = %if.end70, %if.then24
  %62 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7981
  %modifiers = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %62, i32 0, i32 2, !dbg !7983
  %63 = load i32, i32* %modifiers, align 8, !dbg !7983
  %and72 = and i32 %63, 4, !dbg !7984
  %tobool73 = icmp ne i32 %and72, 0, !dbg !7984
  br i1 %tobool73, label %if.then74, label %if.else77, !dbg !7985

if.then74:                                        ; preds = %if.end71
  %64 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7986
  %snap_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %64, i32 0, i32 54, !dbg !7988
  %65 = load i16, i16* %snap_flag, align 2, !dbg !7989
  %conv75 = sext i16 %65 to i32, !dbg !7989
  %or = or i32 %conv75, 1, !dbg !7989
  %conv76 = trunc i32 %or to i16, !dbg !7989
  store i16 %conv76, i16* %snap_flag, align 2, !dbg !7989
  br label %if.end82, !dbg !7990

if.else77:                                        ; preds = %if.end71
  %66 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7991
  %snap_flag78 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %66, i32 0, i32 54, !dbg !7993
  %67 = load i16, i16* %snap_flag78, align 2, !dbg !7994
  %conv79 = sext i16 %67 to i32, !dbg !7994
  %and80 = and i32 %conv79, -2, !dbg !7994
  %conv81 = trunc i32 %and80 to i16, !dbg !7994
  store i16 %conv81, i16* %snap_flag78, align 2, !dbg !7994
  br label %if.end82

if.end82:                                         ; preds = %if.else77, %if.then74
  %68 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !7995
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %68, i32 0, i32 33, !dbg !7997
  %69 = load i8, i8* %spacetype, align 8, !dbg !7997
  %conv83 = zext i8 %69 to i32, !dbg !7995
  %cmp84 = icmp eq i32 %conv83, 1, !dbg !7998
  br i1 %cmp84, label %if.then86, label %if.end97, !dbg !7999

if.then86:                                        ; preds = %if.end82
  %70 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8000
  %ptr87 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %70, i32 0, i32 7, !dbg !8003
  %71 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr87, align 8, !dbg !8003
  %call88 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %71, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i64 0, i64 0)), !dbg !8004
  store %struct.PropertyRNA* %call88, %struct.PropertyRNA** %prop, align 8, !dbg !8005
  %tobool89 = icmp ne %struct.PropertyRNA* %call88, null, !dbg !8005
  br i1 %tobool89, label %land.lhs.true90, label %if.end96, !dbg !8006

land.lhs.true90:                                  ; preds = %if.then86
  %72 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8007
  %ptr91 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %72, i32 0, i32 7, !dbg !8008
  %73 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr91, align 8, !dbg !8008
  %74 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8009
  %call92 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %73, %struct.PropertyRNA* %74), !dbg !8010
  %tobool93 = icmp ne i8 %call92, 0, !dbg !8010
  br i1 %tobool93, label %if.end96, label %if.then94, !dbg !8011

if.then94:                                        ; preds = %land.lhs.true90
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d, metadata !8012, metadata !DIExpression()), !dbg !8014
  %75 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8015
  %view = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %75, i32 0, i32 52, !dbg !8016
  %76 = load i8*, i8** %view, align 8, !dbg !8016
  %77 = bitcast i8* %76 to %struct.View3D*, !dbg !8015
  store %struct.View3D* %77, %struct.View3D** %v3d, align 8, !dbg !8014
  %78 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8017
  %current_orientation = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %78, i32 0, i32 43, !dbg !8018
  %79 = load i16, i16* %current_orientation, align 2, !dbg !8018
  %conv95 = trunc i16 %79 to i8, !dbg !8017
  %80 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !8019
  %twmode = getelementptr inbounds %struct.View3D, %struct.View3D* %80, i32 0, i32 41, !dbg !8020
  store i8 %conv95, i8* %twmode, align 4, !dbg !8021
  br label %if.end96, !dbg !8022

if.end96:                                         ; preds = %if.then94, %land.lhs.true90, %if.then86
  br label %if.end97, !dbg !8023

if.end97:                                         ; preds = %if.end96, %if.end82
  br label %if.end98, !dbg !8024

if.end98:                                         ; preds = %if.end97, %sw.epilog
  %81 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8025
  %ptr99 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %81, i32 0, i32 7, !dbg !8027
  %82 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr99, align 8, !dbg !8027
  %call100 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %82, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.63, i64 0, i64 0)), !dbg !8028
  %tobool101 = icmp ne %struct.PropertyRNA* %call100, null, !dbg !8028
  br i1 %tobool101, label %if.then102, label %if.end109, !dbg !8029

if.then102:                                       ; preds = %if.end98
  %83 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8030
  %ptr103 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %83, i32 0, i32 7, !dbg !8032
  %84 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr103, align 8, !dbg !8032
  %85 = load i32, i32* %proportional, align 4, !dbg !8033
  call void @RNA_enum_set(%struct.PointerRNA* %84, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.63, i64 0, i64 0), i32 %85), !dbg !8034
  %86 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8035
  %ptr104 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %86, i32 0, i32 7, !dbg !8036
  %87 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr104, align 8, !dbg !8036
  %88 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8037
  %prop_mode105 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %88, i32 0, i32 45, !dbg !8038
  %89 = load i16, i16* %prop_mode105, align 2, !dbg !8038
  %conv106 = sext i16 %89 to i32, !dbg !8037
  call void @RNA_enum_set(%struct.PointerRNA* %87, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.65, i64 0, i64 0), i32 %conv106), !dbg !8039
  %90 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8040
  %ptr107 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %90, i32 0, i32 7, !dbg !8041
  %91 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr107, align 8, !dbg !8041
  %92 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8042
  %prop_size108 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %92, i32 0, i32 18, !dbg !8043
  %93 = load float, float* %prop_size108, align 4, !dbg !8043
  call void @RNA_float_set(%struct.PointerRNA* %91, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.64, i64 0, i64 0), float %93), !dbg !8044
  br label %if.end109, !dbg !8045

if.end109:                                        ; preds = %if.then102, %if.end98
  %94 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8046
  %ptr110 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %94, i32 0, i32 7, !dbg !8048
  %95 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr110, align 8, !dbg !8048
  %call111 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %95, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0)), !dbg !8049
  store %struct.PropertyRNA* %call111, %struct.PropertyRNA** %prop, align 8, !dbg !8050
  %tobool112 = icmp ne %struct.PropertyRNA* %call111, null, !dbg !8050
  br i1 %tobool112, label %if.then113, label %if.end116, !dbg !8051

if.then113:                                       ; preds = %if.end109
  %96 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8052
  %ptr114 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %96, i32 0, i32 7, !dbg !8054
  %97 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr114, align 8, !dbg !8054
  %98 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8055
  %99 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8056
  %axis = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %99, i32 0, i32 49, !dbg !8057
  %arraydecay115 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !8056
  call void @RNA_property_float_set_array(%struct.PointerRNA* %97, %struct.PropertyRNA* %98, float* %arraydecay115), !dbg !8058
  br label %if.end116, !dbg !8059

if.end116:                                        ; preds = %if.then113, %if.end109
  %100 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8060
  %ptr117 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %100, i32 0, i32 7, !dbg !8062
  %101 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr117, align 8, !dbg !8062
  %call118 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %101, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i64 0, i64 0)), !dbg !8063
  store %struct.PropertyRNA* %call118, %struct.PropertyRNA** %prop, align 8, !dbg !8064
  %tobool119 = icmp ne %struct.PropertyRNA* %call118, null, !dbg !8064
  br i1 %tobool119, label %if.then120, label %if.end124, !dbg !8065

if.then120:                                       ; preds = %if.end116
  %102 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8066
  %ptr121 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %102, i32 0, i32 7, !dbg !8068
  %103 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr121, align 8, !dbg !8068
  %104 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8069
  %105 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8070
  %flag122 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %105, i32 0, i32 1, !dbg !8071
  %106 = load i32, i32* %flag122, align 4, !dbg !8071
  %and123 = and i32 %106, 524288, !dbg !8072
  call void @RNA_property_boolean_set(%struct.PointerRNA* %103, %struct.PropertyRNA* %104, i32 %and123), !dbg !8073
  br label %if.end124, !dbg !8074

if.end124:                                        ; preds = %if.then120, %if.end116
  %107 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8075
  %ptr125 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %107, i32 0, i32 7, !dbg !8077
  %108 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr125, align 8, !dbg !8077
  %call126 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %108, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i64 0, i64 0)), !dbg !8078
  store %struct.PropertyRNA* %call126, %struct.PropertyRNA** %prop, align 8, !dbg !8079
  %tobool127 = icmp ne %struct.PropertyRNA* %call126, null, !dbg !8079
  br i1 %tobool127, label %if.then128, label %if.end170, !dbg !8080

if.then128:                                       ; preds = %if.end124
  %109 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8081
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %109, i32 0, i32 13, !dbg !8084
  %mode129 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 7, !dbg !8085
  %110 = load i32, i32* %mode129, align 4, !dbg !8085
  %and130 = and i32 %110, 1, !dbg !8086
  %tobool131 = icmp ne i32 %and130, 0, !dbg !8086
  br i1 %tobool131, label %if.then132, label %if.else136, !dbg !8087

if.then132:                                       ; preds = %if.then128
  %111 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8088
  %ptr133 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %111, i32 0, i32 7, !dbg !8090
  %112 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr133, align 8, !dbg !8090
  %113 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8091
  %con134 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %113, i32 0, i32 13, !dbg !8092
  %orientation = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con134, i32 0, i32 0, !dbg !8093
  %114 = load i16, i16* %orientation, align 8, !dbg !8093
  %conv135 = sext i16 %114 to i32, !dbg !8091
  call void @RNA_enum_set(%struct.PointerRNA* %112, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i64 0, i64 0), i32 %conv135), !dbg !8094
  br label %if.end140, !dbg !8095

if.else136:                                       ; preds = %if.then128
  %115 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8096
  %ptr137 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %115, i32 0, i32 7, !dbg !8098
  %116 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr137, align 8, !dbg !8098
  %117 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8099
  %current_orientation138 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %117, i32 0, i32 43, !dbg !8100
  %118 = load i16, i16* %current_orientation138, align 2, !dbg !8100
  %conv139 = sext i16 %118 to i32, !dbg !8099
  call void @RNA_enum_set(%struct.PointerRNA* %116, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i64 0, i64 0), i32 %conv139), !dbg !8101
  br label %if.end140

if.end140:                                        ; preds = %if.else136, %if.then132
  %119 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8102
  %con141 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %119, i32 0, i32 13, !dbg !8104
  %mode142 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con141, i32 0, i32 7, !dbg !8105
  %120 = load i32, i32* %mode142, align 4, !dbg !8105
  %and143 = and i32 %120, 1, !dbg !8106
  %tobool144 = icmp ne i32 %and143, 0, !dbg !8106
  br i1 %tobool144, label %if.then145, label %if.end167, !dbg !8107

if.then145:                                       ; preds = %if.end140
  %121 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8108
  %con146 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %121, i32 0, i32 13, !dbg !8111
  %mode147 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con146, i32 0, i32 7, !dbg !8112
  %122 = load i32, i32* %mode147, align 4, !dbg !8112
  %and148 = and i32 %122, 2, !dbg !8113
  %tobool149 = icmp ne i32 %and148, 0, !dbg !8113
  br i1 %tobool149, label %if.then150, label %if.end152, !dbg !8114

if.then150:                                       ; preds = %if.then145
  %arrayidx151 = getelementptr inbounds [3 x i32], [3 x i32]* %constraint_axis, i64 0, i64 0, !dbg !8115
  store i32 1, i32* %arrayidx151, align 4, !dbg !8117
  br label %if.end152, !dbg !8118

if.end152:                                        ; preds = %if.then150, %if.then145
  %123 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8119
  %con153 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %123, i32 0, i32 13, !dbg !8121
  %mode154 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con153, i32 0, i32 7, !dbg !8122
  %124 = load i32, i32* %mode154, align 4, !dbg !8122
  %and155 = and i32 %124, 4, !dbg !8123
  %tobool156 = icmp ne i32 %and155, 0, !dbg !8123
  br i1 %tobool156, label %if.then157, label %if.end159, !dbg !8124

if.then157:                                       ; preds = %if.end152
  %arrayidx158 = getelementptr inbounds [3 x i32], [3 x i32]* %constraint_axis, i64 0, i64 1, !dbg !8125
  store i32 1, i32* %arrayidx158, align 4, !dbg !8127
  br label %if.end159, !dbg !8128

if.end159:                                        ; preds = %if.then157, %if.end152
  %125 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8129
  %con160 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %125, i32 0, i32 13, !dbg !8131
  %mode161 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con160, i32 0, i32 7, !dbg !8132
  %126 = load i32, i32* %mode161, align 4, !dbg !8132
  %and162 = and i32 %126, 8, !dbg !8133
  %tobool163 = icmp ne i32 %and162, 0, !dbg !8133
  br i1 %tobool163, label %if.then164, label %if.end166, !dbg !8134

if.then164:                                       ; preds = %if.end159
  %arrayidx165 = getelementptr inbounds [3 x i32], [3 x i32]* %constraint_axis, i64 0, i64 2, !dbg !8135
  store i32 1, i32* %arrayidx165, align 4, !dbg !8137
  br label %if.end166, !dbg !8138

if.end166:                                        ; preds = %if.then164, %if.end159
  br label %if.end167, !dbg !8139

if.end167:                                        ; preds = %if.end166, %if.end140
  %127 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8140
  %ptr168 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %127, i32 0, i32 7, !dbg !8141
  %128 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr168, align 8, !dbg !8141
  %129 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8142
  %arraydecay169 = getelementptr inbounds [3 x i32], [3 x i32]* %constraint_axis, i64 0, i64 0, !dbg !8143
  call void @RNA_property_boolean_set_array(%struct.PointerRNA* %128, %struct.PropertyRNA* %129, i32* %arraydecay169), !dbg !8144
  br label %if.end170, !dbg !8145

if.end170:                                        ; preds = %if.end167, %if.end124
  ret void, !dbg !8146
}

declare dso_local %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext*) #2

declare dso_local %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA*, i8*) #2

declare dso_local void @RNA_property_enum_set(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

declare dso_local zeroext i8 @RNA_property_array_check(%struct.PropertyRNA*) #2

declare dso_local void @RNA_property_float_set_array(%struct.PointerRNA*, %struct.PropertyRNA*, float*) #2

declare dso_local void @RNA_property_float_set(%struct.PointerRNA*, %struct.PropertyRNA*, float) #2

declare dso_local zeroext i8 @RNA_property_is_set(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local void @RNA_enum_set(%struct.PointerRNA*, i8*, i32) #2

declare dso_local void @RNA_float_set(%struct.PointerRNA*, i8*, float) #2

declare dso_local void @RNA_property_boolean_set(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

declare dso_local void @RNA_property_boolean_set_array(%struct.PointerRNA*, %struct.PropertyRNA*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @initTransform(%struct.bContext* %C, %struct.TransInfo* %t, %struct.wmOperator* %op, %struct.wmEvent* %event, i32 %mode) #0 !dbg !8147 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %t.addr = alloca %struct.TransInfo*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %mode.addr = alloca i32, align 4
  %options = alloca i32, align 4
  %prop = alloca %struct.PropertyRNA*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %values = alloca [4 x float], align 16
  %constraint_axis = alloca [3 x i32], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8150, metadata !DIExpression()), !dbg !8151
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !8152, metadata !DIExpression()), !dbg !8153
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8154, metadata !DIExpression()), !dbg !8155
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !8156, metadata !DIExpression()), !dbg !8157
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8158, metadata !DIExpression()), !dbg !8159
  call void @llvm.dbg.declare(metadata i32* %options, metadata !8160, metadata !DIExpression()), !dbg !8161
  store i32 0, i32* %options, align 4, !dbg !8161
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !8162, metadata !DIExpression()), !dbg !8163
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8164
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8165
  %context = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 53, !dbg !8166
  store %struct.bContext* %0, %struct.bContext** %context, align 8, !dbg !8167
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8168
  %state = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 3, !dbg !8169
  store i16 0, i16* %state, align 4, !dbg !8170
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8171
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !8173
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8173
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.70, i64 0, i64 0)), !dbg !8174
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !8175
  %tobool = icmp ne %struct.PropertyRNA* %call, null, !dbg !8175
  br i1 %tobool, label %land.lhs.true, label %if.end8, !dbg !8176

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8177
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !8178
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !8178
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8179
  %call2 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %6, %struct.PropertyRNA* %7), !dbg !8180
  %conv = zext i8 %call2 to i32, !dbg !8180
  %tobool3 = icmp ne i32 %conv, 0, !dbg !8180
  br i1 %tobool3, label %if.then, label %if.end8, !dbg !8181

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8182
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !8185
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !8185
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8186
  %call5 = call i32 @RNA_property_boolean_get(%struct.PointerRNA* %9, %struct.PropertyRNA* %10), !dbg !8187
  %tobool6 = icmp ne i32 %call5, 0, !dbg !8187
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !8188

if.then7:                                         ; preds = %if.then
  %11 = load i32, i32* %options, align 4, !dbg !8189
  %or = or i32 %11, 1, !dbg !8189
  store i32 %or, i32* %options, align 4, !dbg !8189
  br label %if.end, !dbg !8191

if.end:                                           ; preds = %if.then7, %if.then
  br label %if.end8, !dbg !8192

if.end8:                                          ; preds = %if.end, %land.lhs.true, %entry
  %12 = load i32, i32* %options, align 4, !dbg !8193
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8194
  %options9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 4, !dbg !8195
  store i32 %12, i32* %options9, align 8, !dbg !8196
  %14 = load i32, i32* %mode.addr, align 4, !dbg !8197
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8198
  %mode10 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 0, !dbg !8199
  store i32 %14, i32* %mode10, align 8, !dbg !8200
  %16 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8201
  %tobool11 = icmp ne %struct.wmEvent* %16, null, !dbg !8201
  br i1 %tobool11, label %cond.true, label %cond.false, !dbg !8201

cond.true:                                        ; preds = %if.end8
  %17 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8202
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %17, i32 0, i32 2, !dbg !8203
  %18 = load i16, i16* %type, align 8, !dbg !8203
  %conv12 = sext i16 %18 to i32, !dbg !8202
  br label %cond.end, !dbg !8201

cond.false:                                       ; preds = %if.end8
  br label %cond.end, !dbg !8201

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv12, %cond.true ], [ -1, %cond.false ], !dbg !8201
  %conv13 = trunc i32 %cond to i16, !dbg !8201
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8204
  %launch_event = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 42, !dbg !8205
  store i16 %conv13, i16* %launch_event, align 8, !dbg !8206
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8207
  %launch_event14 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 42, !dbg !8209
  %21 = load i16, i16* %launch_event14, align 8, !dbg !8209
  %conv15 = sext i16 %21 to i32, !dbg !8207
  %cmp = icmp eq i32 %conv15, 20485, !dbg !8210
  br i1 %cmp, label %if.then17, label %if.else, !dbg !8211

if.then17:                                        ; preds = %cond.end
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8212
  %launch_event18 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 42, !dbg !8214
  store i16 3, i16* %launch_event18, align 8, !dbg !8215
  br label %if.end26, !dbg !8216

if.else:                                          ; preds = %cond.end
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8217
  %launch_event19 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 42, !dbg !8219
  %24 = load i16, i16* %launch_event19, align 8, !dbg !8219
  %conv20 = sext i16 %24 to i32, !dbg !8217
  %cmp21 = icmp eq i32 %conv20, 20483, !dbg !8220
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !8221

if.then23:                                        ; preds = %if.else
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8222
  %launch_event24 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 42, !dbg !8224
  store i16 1, i16* %launch_event24, align 8, !dbg !8225
  br label %if.end25, !dbg !8226

if.end25:                                         ; preds = %if.then23, %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then17
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8227
  %launch_event27 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 42, !dbg !8229
  %27 = load i16, i16* %launch_event27, align 8, !dbg !8229
  %conv28 = sext i16 %27 to i32, !dbg !8227
  %cmp29 = icmp eq i32 %conv28, 0, !dbg !8230
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !8231

if.then31:                                        ; preds = %if.end26
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8232
  %launch_event32 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 42, !dbg !8234
  store i16 1, i16* %launch_event32, align 8, !dbg !8235
  br label %if.end33, !dbg !8236

if.end33:                                         ; preds = %if.then31, %if.end26
  %29 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8237
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8238
  %31 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8239
  %32 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8240
  call void @initTransInfo(%struct.bContext* %29, %struct.TransInfo* %30, %struct.wmOperator* %31, %struct.wmEvent* %32), !dbg !8241
  %33 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8242
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %33, i32 0, i32 33, !dbg !8244
  %34 = load i8, i8* %spacetype, align 8, !dbg !8244
  %conv34 = zext i8 %34 to i32, !dbg !8242
  %cmp35 = icmp eq i32 %conv34, 1, !dbg !8245
  br i1 %cmp35, label %if.then37, label %if.else48, !dbg !8246

if.then37:                                        ; preds = %if.end33
  %35 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8247
  %36 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8249
  call void @initTransformOrientation(%struct.bContext* %35, %struct.TransInfo* %36), !dbg !8250
  %37 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8251
  %ar = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %37, i32 0, i32 55, !dbg !8252
  %38 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8252
  %type38 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %38, i32 0, i32 20, !dbg !8253
  %39 = load %struct.ARegionType*, %struct.ARegionType** %type38, align 8, !dbg !8253
  %40 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8254
  %41 = bitcast %struct.TransInfo* %40 to i8*, !dbg !8254
  %call39 = call i8* @ED_region_draw_cb_activate(%struct.ARegionType* %39, void (%struct.bContext*, %struct.ARegion*, i8*)* @drawTransformApply, i8* %41, i32 2), !dbg !8255
  %42 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8256
  %draw_handle_apply = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %42, i32 0, i32 65, !dbg !8257
  store i8* %call39, i8** %draw_handle_apply, align 8, !dbg !8258
  %43 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8259
  %ar40 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %43, i32 0, i32 55, !dbg !8260
  %44 = load %struct.ARegion*, %struct.ARegion** %ar40, align 8, !dbg !8260
  %type41 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %44, i32 0, i32 20, !dbg !8261
  %45 = load %struct.ARegionType*, %struct.ARegionType** %type41, align 8, !dbg !8261
  %46 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8262
  %47 = bitcast %struct.TransInfo* %46 to i8*, !dbg !8262
  %call42 = call i8* @ED_region_draw_cb_activate(%struct.ARegionType* %45, void (%struct.bContext*, %struct.ARegion*, i8*)* @drawTransformView, i8* %47, i32 0), !dbg !8263
  %48 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8264
  %draw_handle_view = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %48, i32 0, i32 66, !dbg !8265
  store i8* %call42, i8** %draw_handle_view, align 8, !dbg !8266
  %49 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8267
  %ar43 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %49, i32 0, i32 55, !dbg !8268
  %50 = load %struct.ARegion*, %struct.ARegion** %ar43, align 8, !dbg !8268
  %type44 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %50, i32 0, i32 20, !dbg !8269
  %51 = load %struct.ARegionType*, %struct.ARegionType** %type44, align 8, !dbg !8269
  %52 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8270
  %53 = bitcast %struct.TransInfo* %52 to i8*, !dbg !8270
  %call45 = call i8* @ED_region_draw_cb_activate(%struct.ARegionType* %51, void (%struct.bContext*, %struct.ARegion*, i8*)* @drawTransformPixel, i8* %53, i32 1), !dbg !8271
  %54 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8272
  %draw_handle_pixel = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %54, i32 0, i32 67, !dbg !8273
  store i8* %call45, i8** %draw_handle_pixel, align 8, !dbg !8274
  %55 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8275
  %call46 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %55), !dbg !8276
  %56 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8277
  %57 = bitcast %struct.TransInfo* %56 to i8*, !dbg !8277
  %call47 = call i8* @WM_paint_cursor_activate(%struct.wmWindowManager* %call46, i32 (%struct.bContext*)* @helpline_poll, void (%struct.bContext*, i32, i32, i8*)* @drawHelpline, i8* %57), !dbg !8278
  %58 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8279
  %draw_handle_cursor = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %58, i32 0, i32 68, !dbg !8280
  store i8* %call47, i8** %draw_handle_cursor, align 8, !dbg !8281
  br label %if.end97, !dbg !8282

if.else48:                                        ; preds = %if.end33
  %59 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8283
  %spacetype49 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %59, i32 0, i32 33, !dbg !8285
  %60 = load i8, i8* %spacetype49, align 8, !dbg !8285
  %conv50 = zext i8 %60 to i32, !dbg !8283
  %cmp51 = icmp eq i32 %conv50, 6, !dbg !8286
  br i1 %cmp51, label %if.then53, label %if.else61, !dbg !8287

if.then53:                                        ; preds = %if.else48
  %61 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8288
  %spacemtx = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %61, i32 0, i32 37, !dbg !8290
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %spacemtx, i64 0, i64 0, !dbg !8288
  call void @unit_m3([3 x float]* %arraydecay), !dbg !8291
  %62 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8292
  %ar54 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %62, i32 0, i32 55, !dbg !8293
  %63 = load %struct.ARegion*, %struct.ARegion** %ar54, align 8, !dbg !8293
  %type55 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %63, i32 0, i32 20, !dbg !8294
  %64 = load %struct.ARegionType*, %struct.ARegionType** %type55, align 8, !dbg !8294
  %65 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8295
  %66 = bitcast %struct.TransInfo* %65 to i8*, !dbg !8295
  %call56 = call i8* @ED_region_draw_cb_activate(%struct.ARegionType* %64, void (%struct.bContext*, %struct.ARegion*, i8*)* @drawTransformView, i8* %66, i32 0), !dbg !8296
  %67 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8297
  %draw_handle_view57 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %67, i32 0, i32 66, !dbg !8298
  store i8* %call56, i8** %draw_handle_view57, align 8, !dbg !8299
  %68 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8300
  %call58 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %68), !dbg !8301
  %69 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8302
  %70 = bitcast %struct.TransInfo* %69 to i8*, !dbg !8302
  %call59 = call i8* @WM_paint_cursor_activate(%struct.wmWindowManager* %call58, i32 (%struct.bContext*)* @helpline_poll, void (%struct.bContext*, i32, i32, i8*)* @drawHelpline, i8* %70), !dbg !8303
  %71 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8304
  %draw_handle_cursor60 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %71, i32 0, i32 68, !dbg !8305
  store i8* %call59, i8** %draw_handle_cursor60, align 8, !dbg !8306
  br label %if.end96, !dbg !8307

if.else61:                                        ; preds = %if.else48
  %72 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8308
  %spacetype62 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %72, i32 0, i32 33, !dbg !8310
  %73 = load i8, i8* %spacetype62, align 8, !dbg !8310
  %conv63 = zext i8 %73 to i32, !dbg !8308
  %cmp64 = icmp eq i32 %conv63, 20, !dbg !8311
  br i1 %cmp64, label %if.then66, label %if.else76, !dbg !8312

if.then66:                                        ; preds = %if.else61
  %74 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8313
  %spacemtx67 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %74, i32 0, i32 37, !dbg !8315
  %arraydecay68 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %spacemtx67, i64 0, i64 0, !dbg !8313
  call void @unit_m3([3 x float]* %arraydecay68), !dbg !8316
  %75 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8317
  %ar69 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %75, i32 0, i32 55, !dbg !8318
  %76 = load %struct.ARegion*, %struct.ARegion** %ar69, align 8, !dbg !8318
  %type70 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %76, i32 0, i32 20, !dbg !8319
  %77 = load %struct.ARegionType*, %struct.ARegionType** %type70, align 8, !dbg !8319
  %78 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8320
  %79 = bitcast %struct.TransInfo* %78 to i8*, !dbg !8320
  %call71 = call i8* @ED_region_draw_cb_activate(%struct.ARegionType* %77, void (%struct.bContext*, %struct.ARegion*, i8*)* @drawTransformView, i8* %79, i32 0), !dbg !8321
  %80 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8322
  %draw_handle_view72 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %80, i32 0, i32 66, !dbg !8323
  store i8* %call71, i8** %draw_handle_view72, align 8, !dbg !8324
  %81 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8325
  %call73 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %81), !dbg !8326
  %82 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8327
  %83 = bitcast %struct.TransInfo* %82 to i8*, !dbg !8327
  %call74 = call i8* @WM_paint_cursor_activate(%struct.wmWindowManager* %call73, i32 (%struct.bContext*)* @helpline_poll, void (%struct.bContext*, i32, i32, i8*)* @drawHelpline, i8* %83), !dbg !8328
  %84 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8329
  %draw_handle_cursor75 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %84, i32 0, i32 68, !dbg !8330
  store i8* %call74, i8** %draw_handle_cursor75, align 8, !dbg !8331
  br label %if.end95, !dbg !8332

if.else76:                                        ; preds = %if.else61
  %85 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8333
  %spacetype77 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %85, i32 0, i32 33, !dbg !8335
  %86 = load i8, i8* %spacetype77, align 8, !dbg !8335
  %conv78 = zext i8 %86 to i32, !dbg !8333
  %cmp79 = icmp eq i32 %conv78, 16, !dbg !8336
  br i1 %cmp79, label %if.then81, label %if.else91, !dbg !8337

if.then81:                                        ; preds = %if.else76
  %87 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8338
  %spacemtx82 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %87, i32 0, i32 37, !dbg !8340
  %arraydecay83 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %spacemtx82, i64 0, i64 0, !dbg !8338
  call void @unit_m3([3 x float]* %arraydecay83), !dbg !8341
  %88 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8342
  %ar84 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %88, i32 0, i32 55, !dbg !8343
  %89 = load %struct.ARegion*, %struct.ARegion** %ar84, align 8, !dbg !8343
  %type85 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %89, i32 0, i32 20, !dbg !8344
  %90 = load %struct.ARegionType*, %struct.ARegionType** %type85, align 8, !dbg !8344
  %91 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8345
  %92 = bitcast %struct.TransInfo* %91 to i8*, !dbg !8345
  %call86 = call i8* @ED_region_draw_cb_activate(%struct.ARegionType* %90, void (%struct.bContext*, %struct.ARegion*, i8*)* @drawTransformView, i8* %92, i32 0), !dbg !8346
  %93 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8347
  %draw_handle_view87 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %93, i32 0, i32 66, !dbg !8348
  store i8* %call86, i8** %draw_handle_view87, align 8, !dbg !8349
  %94 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8350
  %call88 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %94), !dbg !8351
  %95 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8352
  %96 = bitcast %struct.TransInfo* %95 to i8*, !dbg !8352
  %call89 = call i8* @WM_paint_cursor_activate(%struct.wmWindowManager* %call88, i32 (%struct.bContext*)* @helpline_poll, void (%struct.bContext*, i32, i32, i8*)* @drawHelpline, i8* %96), !dbg !8353
  %97 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8354
  %draw_handle_cursor90 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %97, i32 0, i32 68, !dbg !8355
  store i8* %call89, i8** %draw_handle_cursor90, align 8, !dbg !8356
  br label %if.end94, !dbg !8357

if.else91:                                        ; preds = %if.else76
  %98 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8358
  %spacemtx92 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %98, i32 0, i32 37, !dbg !8359
  %arraydecay93 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %spacemtx92, i64 0, i64 0, !dbg !8358
  call void @unit_m3([3 x float]* %arraydecay93), !dbg !8360
  br label %if.end94

if.end94:                                         ; preds = %if.else91, %if.then81
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then66
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then53
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then37
  %99 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8361
  %100 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8362
  call void @createTransData(%struct.bContext* %99, %struct.TransInfo* %100), !dbg !8363
  %101 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8364
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %101, i32 0, i32 9, !dbg !8366
  %102 = load i32, i32* %total, align 8, !dbg !8366
  %cmp98 = icmp eq i32 %102, 0, !dbg !8367
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !8368

if.then100:                                       ; preds = %if.end97
  %103 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8369
  %104 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8371
  call void @postTrans(%struct.bContext* %103, %struct.TransInfo* %104), !dbg !8372
  store i8 0, i8* %retval, align 1, !dbg !8373
  br label %return, !dbg !8373

if.end101:                                        ; preds = %if.end97
  %105 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8374
  %tobool102 = icmp ne %struct.wmEvent* %105, null, !dbg !8374
  br i1 %tobool102, label %if.then103, label %if.end176, !dbg !8376

if.then103:                                       ; preds = %if.end101
  %106 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8377
  %call104 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %106), !dbg !8379
  %107 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8380
  %type105 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %107, i32 0, i32 4, !dbg !8381
  %108 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type105, align 8, !dbg !8381
  %modalkeymap = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %108, i32 0, i32 15, !dbg !8382
  %109 = load %struct.wmKeyMap*, %struct.wmKeyMap** %modalkeymap, align 8, !dbg !8382
  %call106 = call %struct.wmKeyMap* @WM_keymap_active(%struct.wmWindowManager* %call104, %struct.wmKeyMap* %109), !dbg !8383
  %110 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8384
  %keymap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %110, i32 0, i32 59, !dbg !8385
  store %struct.wmKeyMap* %call106, %struct.wmKeyMap** %keymap, align 8, !dbg !8386
  %111 = load i32, i32* %mode.addr, align 4, !dbg !8387
  %cmp107 = icmp eq i32 %111, 1, !dbg !8387
  br i1 %cmp107, label %if.then114, label %lor.lhs.false, !dbg !8387

lor.lhs.false:                                    ; preds = %if.then103
  %112 = load i32, i32* %mode.addr, align 4, !dbg !8387
  %cmp109 = icmp eq i32 %112, 2, !dbg !8387
  br i1 %cmp109, label %if.then114, label %lor.lhs.false111, !dbg !8387

lor.lhs.false111:                                 ; preds = %lor.lhs.false
  %113 = load i32, i32* %mode.addr, align 4, !dbg !8387
  %cmp112 = icmp eq i32 %113, 3, !dbg !8387
  br i1 %cmp112, label %if.then114, label %if.end175, !dbg !8389

if.then114:                                       ; preds = %lor.lhs.false111, %lor.lhs.false, %if.then103
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !8390, metadata !DIExpression()), !dbg !8415
  %114 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8416
  %keymap115 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %114, i32 0, i32 59, !dbg !8418
  %115 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap115, align 8, !dbg !8418
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %115, i32 0, i32 2, !dbg !8419
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !8420
  %116 = load i8*, i8** %first, align 8, !dbg !8420
  %117 = bitcast i8* %116 to %struct.wmKeyMapItem*, !dbg !8416
  store %struct.wmKeyMapItem* %117, %struct.wmKeyMapItem** %kmi, align 8, !dbg !8421
  br label %for.cond, !dbg !8422

for.cond:                                         ; preds = %for.inc, %if.then114
  %118 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !8423
  %tobool116 = icmp ne %struct.wmKeyMapItem* %118, null, !dbg !8425
  br i1 %tobool116, label %for.body, label %for.end, !dbg !8425

for.body:                                         ; preds = %for.cond
  %119 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !8426
  %propvalue = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %119, i32 0, i32 5, !dbg !8429
  %120 = load i16, i16* %propvalue, align 8, !dbg !8429
  %conv117 = sext i16 %120 to i32, !dbg !8426
  %cmp118 = icmp eq i32 %conv117, 6, !dbg !8430
  br i1 %cmp118, label %land.lhs.true120, label %if.end174, !dbg !8431

land.lhs.true120:                                 ; preds = %for.body
  %121 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !8432
  %val = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %121, i32 0, i32 7, !dbg !8433
  %122 = load i16, i16* %val, align 4, !dbg !8433
  %conv121 = sext i16 %122 to i32, !dbg !8432
  %cmp122 = icmp eq i32 %conv121, 1, !dbg !8434
  br i1 %cmp122, label %if.then124, label %if.end174, !dbg !8435

if.then124:                                       ; preds = %land.lhs.true120
  %123 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !8436
  %type125 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %123, i32 0, i32 6, !dbg !8436
  %124 = load i16, i16* %type125, align 2, !dbg !8436
  %conv126 = sext i16 %124 to i32, !dbg !8436
  %cmp127 = icmp eq i32 %conv126, 212, !dbg !8436
  br i1 %cmp127, label %land.lhs.true134, label %lor.lhs.false129, !dbg !8436

lor.lhs.false129:                                 ; preds = %if.then124
  %125 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !8436
  %type130 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %125, i32 0, i32 6, !dbg !8436
  %126 = load i16, i16* %type130, align 2, !dbg !8436
  %conv131 = sext i16 %126 to i32, !dbg !8436
  %cmp132 = icmp eq i32 %conv131, 215, !dbg !8436
  br i1 %cmp132, label %land.lhs.true134, label %lor.lhs.false137, !dbg !8439

land.lhs.true134:                                 ; preds = %lor.lhs.false129, %if.then124
  %127 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8440
  %ctrl = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %127, i32 0, i32 18, !dbg !8441
  %128 = load i16, i16* %ctrl, align 2, !dbg !8441
  %conv135 = sext i16 %128 to i32, !dbg !8440
  %tobool136 = icmp ne i32 %conv135, 0, !dbg !8440
  br i1 %tobool136, label %if.then171, label %lor.lhs.false137, !dbg !8442

lor.lhs.false137:                                 ; preds = %land.lhs.true134, %lor.lhs.false129
  %129 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !8443
  %type138 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %129, i32 0, i32 6, !dbg !8443
  %130 = load i16, i16* %type138, align 2, !dbg !8443
  %conv139 = sext i16 %130 to i32, !dbg !8443
  %cmp140 = icmp eq i32 %conv139, 217, !dbg !8443
  br i1 %cmp140, label %land.lhs.true147, label %lor.lhs.false142, !dbg !8443

lor.lhs.false142:                                 ; preds = %lor.lhs.false137
  %131 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !8443
  %type143 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %131, i32 0, i32 6, !dbg !8443
  %132 = load i16, i16* %type143, align 2, !dbg !8443
  %conv144 = sext i16 %132 to i32, !dbg !8443
  %cmp145 = icmp eq i32 %conv144, 216, !dbg !8443
  br i1 %cmp145, label %land.lhs.true147, label %lor.lhs.false150, !dbg !8444

land.lhs.true147:                                 ; preds = %lor.lhs.false142, %lor.lhs.false137
  %133 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8445
  %shift = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %133, i32 0, i32 17, !dbg !8446
  %134 = load i16, i16* %shift, align 8, !dbg !8446
  %conv148 = sext i16 %134 to i32, !dbg !8445
  %tobool149 = icmp ne i32 %conv148, 0, !dbg !8445
  br i1 %tobool149, label %if.then171, label %lor.lhs.false150, !dbg !8447

lor.lhs.false150:                                 ; preds = %land.lhs.true147, %lor.lhs.false142
  %135 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !8448
  %type151 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %135, i32 0, i32 6, !dbg !8448
  %136 = load i16, i16* %type151, align 2, !dbg !8448
  %conv152 = sext i16 %136 to i32, !dbg !8448
  %cmp153 = icmp eq i32 %conv152, 213, !dbg !8448
  br i1 %cmp153, label %land.lhs.true160, label %lor.lhs.false155, !dbg !8448

lor.lhs.false155:                                 ; preds = %lor.lhs.false150
  %137 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !8448
  %type156 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %137, i32 0, i32 6, !dbg !8448
  %138 = load i16, i16* %type156, align 2, !dbg !8448
  %conv157 = sext i16 %138 to i32, !dbg !8448
  %cmp158 = icmp eq i32 %conv157, 214, !dbg !8448
  br i1 %cmp158, label %land.lhs.true160, label %lor.lhs.false163, !dbg !8449

land.lhs.true160:                                 ; preds = %lor.lhs.false155, %lor.lhs.false150
  %139 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8450
  %alt = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %139, i32 0, i32 19, !dbg !8451
  %140 = load i16, i16* %alt, align 4, !dbg !8451
  %conv161 = sext i16 %140 to i32, !dbg !8450
  %tobool162 = icmp ne i32 %conv161, 0, !dbg !8450
  br i1 %tobool162, label %if.then171, label %lor.lhs.false163, !dbg !8452

lor.lhs.false163:                                 ; preds = %land.lhs.true160, %lor.lhs.false155
  %141 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !8453
  %type164 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %141, i32 0, i32 6, !dbg !8454
  %142 = load i16, i16* %type164, align 2, !dbg !8454
  %conv165 = sext i16 %142 to i32, !dbg !8453
  %cmp166 = icmp eq i32 %conv165, 172, !dbg !8455
  br i1 %cmp166, label %land.lhs.true168, label %if.end173, !dbg !8456

land.lhs.true168:                                 ; preds = %lor.lhs.false163
  %143 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8457
  %oskey = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %143, i32 0, i32 20, !dbg !8458
  %144 = load i16, i16* %oskey, align 2, !dbg !8458
  %conv169 = sext i16 %144 to i32, !dbg !8457
  %tobool170 = icmp ne i32 %conv169, 0, !dbg !8457
  br i1 %tobool170, label %if.then171, label %if.end173, !dbg !8459

if.then171:                                       ; preds = %land.lhs.true168, %land.lhs.true160, %land.lhs.true147, %land.lhs.true134
  %145 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8460
  %modifiers = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %145, i32 0, i32 2, !dbg !8462
  %146 = load i32, i32* %modifiers, align 8, !dbg !8463
  %or172 = or i32 %146, 8, !dbg !8463
  store i32 %or172, i32* %modifiers, align 8, !dbg !8463
  br label %if.end173, !dbg !8464

if.end173:                                        ; preds = %if.then171, %land.lhs.true168, %lor.lhs.false163
  br label %for.end, !dbg !8465

if.end174:                                        ; preds = %land.lhs.true120, %for.body
  br label %for.inc, !dbg !8466

for.inc:                                          ; preds = %if.end174
  %147 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !8467
  %next = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %147, i32 0, i32 0, !dbg !8468
  %148 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next, align 8, !dbg !8468
  store %struct.wmKeyMapItem* %148, %struct.wmKeyMapItem** %kmi, align 8, !dbg !8469
  br label %for.cond, !dbg !8470, !llvm.loop !8471

for.end:                                          ; preds = %if.end173, %for.cond
  br label %if.end175, !dbg !8473

if.end175:                                        ; preds = %for.end, %lor.lhs.false111
  br label %if.end176, !dbg !8474

if.end176:                                        ; preds = %if.end175, %if.end101
  %149 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8475
  %150 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8476
  call void @initSnapping(%struct.TransInfo* %149, %struct.wmOperator* %150), !dbg !8477
  %151 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8478
  %mode177 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %151, i32 0, i32 0, !dbg !8479
  %152 = load i32, i32* %mode177, align 8, !dbg !8479
  store i32 %152, i32* %mode.addr, align 4, !dbg !8480
  %153 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8481
  call void @calculatePropRatio(%struct.TransInfo* %153), !dbg !8482
  %154 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8483
  call void @calculateCenter(%struct.TransInfo* %154), !dbg !8484
  %155 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8485
  %156 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8486
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %156, i32 0, i32 16, !dbg !8487
  %157 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8488
  %center2d = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %157, i32 0, i32 21, !dbg !8489
  %arraydecay178 = getelementptr inbounds [2 x float], [2 x float]* %center2d, i64 0, i64 0, !dbg !8488
  %158 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8490
  %imval = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %158, i32 0, i32 22, !dbg !8491
  %arraydecay179 = getelementptr inbounds [2 x i32], [2 x i32]* %imval, i64 0, i64 0, !dbg !8490
  call void @initMouseInput(%struct.TransInfo* %155, %struct.MouseInput* %mouse, float* %arraydecay178, i32* %arraydecay179), !dbg !8492
  %159 = load i32, i32* %mode.addr, align 4, !dbg !8493
  switch i32 %159, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb180
    i32 3, label %sw.bb181
    i32 4, label %sw.bb182
    i32 5, label %sw.bb183
    i32 6, label %sw.bb184
    i32 7, label %sw.bb185
    i32 8, label %sw.bb186
    i32 9, label %sw.bb187
    i32 16, label %sw.bb188
    i32 17, label %sw.bb189
    i32 10, label %sw.bb190
    i32 11, label %sw.bb191
    i32 12, label %sw.bb192
    i32 14, label %sw.bb193
    i32 15, label %sw.bb199
    i32 28, label %sw.bb200
    i32 29, label %sw.bb201
    i32 18, label %sw.bb202
    i32 19, label %sw.bb203
    i32 20, label %sw.bb204
    i32 21, label %sw.bb205
    i32 23, label %sw.bb206
    i32 22, label %sw.bb220
    i32 24, label %sw.bb233
    i32 13, label %sw.bb234
    i32 26, label %sw.bb235
    i32 27, label %sw.bb236
    i32 30, label %sw.bb237
  ], !dbg !8494

sw.bb:                                            ; preds = %if.end176
  %160 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8495
  call void @initTranslation(%struct.TransInfo* %160), !dbg !8497
  br label %sw.epilog, !dbg !8498

sw.bb180:                                         ; preds = %if.end176
  %161 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8499
  call void @initRotation(%struct.TransInfo* %161), !dbg !8500
  br label %sw.epilog, !dbg !8501

sw.bb181:                                         ; preds = %if.end176
  %162 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8502
  call void @initResize(%struct.TransInfo* %162), !dbg !8503
  br label %sw.epilog, !dbg !8504

sw.bb182:                                         ; preds = %if.end176
  %163 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8505
  call void @initSkinResize(%struct.TransInfo* %163), !dbg !8506
  br label %sw.epilog, !dbg !8507

sw.bb183:                                         ; preds = %if.end176
  %164 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8508
  call void @initToSphere(%struct.TransInfo* %164), !dbg !8509
  br label %sw.epilog, !dbg !8510

sw.bb184:                                         ; preds = %if.end176
  %165 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8511
  call void @initShear(%struct.TransInfo* %165), !dbg !8512
  br label %sw.epilog, !dbg !8513

sw.bb185:                                         ; preds = %if.end176
  %166 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8514
  call void @initBend(%struct.TransInfo* %166), !dbg !8515
  br label %sw.epilog, !dbg !8516

sw.bb186:                                         ; preds = %if.end176
  %167 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8517
  call void @initShrinkFatten(%struct.TransInfo* %167), !dbg !8518
  br label %sw.epilog, !dbg !8519

sw.bb187:                                         ; preds = %if.end176
  %168 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8520
  call void @initTilt(%struct.TransInfo* %168), !dbg !8521
  br label %sw.epilog, !dbg !8522

sw.bb188:                                         ; preds = %if.end176
  %169 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8523
  call void @initCurveShrinkFatten(%struct.TransInfo* %169), !dbg !8524
  br label %sw.epilog, !dbg !8525

sw.bb189:                                         ; preds = %if.end176
  %170 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8526
  call void @initMaskShrinkFatten(%struct.TransInfo* %170), !dbg !8527
  br label %sw.epilog, !dbg !8528

sw.bb190:                                         ; preds = %if.end176
  %171 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8529
  call void @initTrackball(%struct.TransInfo* %171), !dbg !8530
  br label %sw.epilog, !dbg !8531

sw.bb191:                                         ; preds = %if.end176
  %172 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8532
  call void @initPushPull(%struct.TransInfo* %172), !dbg !8533
  br label %sw.epilog, !dbg !8534

sw.bb192:                                         ; preds = %if.end176
  %173 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8535
  call void @initCrease(%struct.TransInfo* %173), !dbg !8536
  br label %sw.epilog, !dbg !8537

sw.bb193:                                         ; preds = %if.end176
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !8538, metadata !DIExpression()), !dbg !8607
  %174 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8608
  %poseobj = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %174, i32 0, i32 39, !dbg !8609
  %175 = load %struct.Object*, %struct.Object** %poseobj, align 8, !dbg !8609
  %data = getelementptr inbounds %struct.Object, %struct.Object* %175, i32 0, i32 19, !dbg !8610
  %176 = load i8*, i8** %data, align 8, !dbg !8610
  %177 = bitcast i8* %176 to %struct.bArmature*, !dbg !8608
  store %struct.bArmature* %177, %struct.bArmature** %arm, align 8, !dbg !8607
  %178 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !8611
  %drawtype = getelementptr inbounds %struct.bArmature, %struct.bArmature* %178, i32 0, i32 9, !dbg !8613
  %179 = load i32, i32* %drawtype, align 4, !dbg !8613
  %cmp194 = icmp eq i32 %179, 3, !dbg !8614
  br i1 %cmp194, label %if.then196, label %if.else197, !dbg !8615

if.then196:                                       ; preds = %sw.bb193
  %180 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8616
  call void @initBoneEnvelope(%struct.TransInfo* %180), !dbg !8617
  br label %if.end198, !dbg !8617

if.else197:                                       ; preds = %sw.bb193
  %181 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8618
  call void @initBoneSize(%struct.TransInfo* %181), !dbg !8619
  br label %if.end198

if.end198:                                        ; preds = %if.else197, %if.then196
  br label %sw.epilog, !dbg !8620

sw.bb199:                                         ; preds = %if.end176
  %182 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8621
  call void @initBoneEnvelope(%struct.TransInfo* %182), !dbg !8622
  br label %sw.epilog, !dbg !8623

sw.bb200:                                         ; preds = %if.end176
  %183 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8624
  call void @initEdgeSlide(%struct.TransInfo* %183), !dbg !8625
  br label %sw.epilog, !dbg !8626

sw.bb201:                                         ; preds = %if.end176
  %184 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8627
  call void @initVertSlide(%struct.TransInfo* %184), !dbg !8628
  br label %sw.epilog, !dbg !8629

sw.bb202:                                         ; preds = %if.end176
  %185 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8630
  call void @initBoneRoll(%struct.TransInfo* %185), !dbg !8631
  br label %sw.epilog, !dbg !8632

sw.bb203:                                         ; preds = %if.end176
  %186 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8633
  call void @initTimeTranslate(%struct.TransInfo* %186), !dbg !8634
  br label %sw.epilog, !dbg !8635

sw.bb204:                                         ; preds = %if.end176
  %187 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8636
  call void @initTimeSlide(%struct.TransInfo* %187), !dbg !8637
  br label %sw.epilog, !dbg !8638

sw.bb205:                                         ; preds = %if.end176
  %188 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8639
  call void @initTimeScale(%struct.TransInfo* %188), !dbg !8640
  br label %sw.epilog, !dbg !8641

sw.bb206:                                         ; preds = %if.end176
  %189 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8642
  %spacetype207 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %189, i32 0, i32 33, !dbg !8642
  %190 = load i8, i8* %spacetype207, align 8, !dbg !8642
  %conv208 = zext i8 %190 to i32, !dbg !8642
  %cmp209 = icmp eq i32 %conv208, 2, !dbg !8642
  br i1 %cmp209, label %if.then216, label %lor.lhs.false211, !dbg !8642

lor.lhs.false211:                                 ; preds = %sw.bb206
  %191 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8642
  %spacetype212 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %191, i32 0, i32 33, !dbg !8642
  %192 = load i8, i8* %spacetype212, align 8, !dbg !8642
  %conv213 = zext i8 %192 to i32, !dbg !8642
  %cmp214 = icmp eq i32 %conv213, 13, !dbg !8642
  br i1 %cmp214, label %if.then216, label %if.else217, !dbg !8644

if.then216:                                       ; preds = %lor.lhs.false211, %sw.bb206
  %193 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8645
  call void @initTranslation(%struct.TransInfo* %193), !dbg !8646
  br label %if.end218, !dbg !8646

if.else217:                                       ; preds = %lor.lhs.false211
  %194 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8647
  call void @initTimeTranslate(%struct.TransInfo* %194), !dbg !8648
  br label %if.end218

if.end218:                                        ; preds = %if.else217, %if.then216
  %195 = load i32, i32* %mode.addr, align 4, !dbg !8649
  %196 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8650
  %mode219 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %196, i32 0, i32 0, !dbg !8651
  store i32 %195, i32* %mode219, align 8, !dbg !8652
  br label %sw.epilog, !dbg !8653

sw.bb220:                                         ; preds = %if.end176
  %197 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8654
  %spacetype221 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %197, i32 0, i32 33, !dbg !8654
  %198 = load i8, i8* %spacetype221, align 8, !dbg !8654
  %conv222 = zext i8 %198 to i32, !dbg !8654
  %cmp223 = icmp eq i32 %conv222, 2, !dbg !8654
  br i1 %cmp223, label %if.then230, label %lor.lhs.false225, !dbg !8654

lor.lhs.false225:                                 ; preds = %sw.bb220
  %199 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8654
  %spacetype226 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %199, i32 0, i32 33, !dbg !8654
  %200 = load i8, i8* %spacetype226, align 8, !dbg !8654
  %conv227 = zext i8 %200 to i32, !dbg !8654
  %cmp228 = icmp eq i32 %conv227, 13, !dbg !8654
  br i1 %cmp228, label %if.then230, label %if.else231, !dbg !8656

if.then230:                                       ; preds = %lor.lhs.false225, %sw.bb220
  %201 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8657
  call void @initTranslation(%struct.TransInfo* %201), !dbg !8658
  br label %if.end232, !dbg !8658

if.else231:                                       ; preds = %lor.lhs.false225
  %202 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8659
  call void @initTimeTranslate(%struct.TransInfo* %202), !dbg !8660
  br label %if.end232

if.end232:                                        ; preds = %if.else231, %if.then230
  br label %sw.epilog, !dbg !8661

sw.bb233:                                         ; preds = %if.end176
  %203 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8662
  call void @initBakeTime(%struct.TransInfo* %203), !dbg !8663
  br label %sw.epilog, !dbg !8664

sw.bb234:                                         ; preds = %if.end176
  %204 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8665
  call void @initMirror(%struct.TransInfo* %204), !dbg !8666
  br label %sw.epilog, !dbg !8667

sw.bb235:                                         ; preds = %if.end176
  %205 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8668
  call void @initBevelWeight(%struct.TransInfo* %205), !dbg !8669
  br label %sw.epilog, !dbg !8670

sw.bb236:                                         ; preds = %if.end176
  %206 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8671
  call void @initAlign(%struct.TransInfo* %206), !dbg !8672
  br label %sw.epilog, !dbg !8673

sw.bb237:                                         ; preds = %if.end176
  %207 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8674
  call void @initSeqSlide(%struct.TransInfo* %207), !dbg !8675
  br label %sw.epilog, !dbg !8676

sw.epilog:                                        ; preds = %if.end176, %sw.bb237, %sw.bb236, %sw.bb235, %sw.bb234, %sw.bb233, %if.end232, %if.end218, %sw.bb205, %sw.bb204, %sw.bb203, %sw.bb202, %sw.bb201, %sw.bb200, %sw.bb199, %if.end198, %sw.bb192, %sw.bb191, %sw.bb190, %sw.bb189, %sw.bb188, %sw.bb187, %sw.bb186, %sw.bb185, %sw.bb184, %sw.bb183, %sw.bb182, %sw.bb181, %sw.bb180, %sw.bb
  %208 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8677
  %state238 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %208, i32 0, i32 3, !dbg !8679
  %209 = load i16, i16* %state238, align 4, !dbg !8679
  %conv239 = sext i16 %209 to i32, !dbg !8677
  %cmp240 = icmp eq i32 %conv239, 3, !dbg !8680
  br i1 %cmp240, label %if.then242, label %if.end243, !dbg !8681

if.then242:                                       ; preds = %sw.epilog
  %210 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8682
  %211 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8684
  call void @postTrans(%struct.bContext* %210, %struct.TransInfo* %211), !dbg !8685
  store i8 0, i8* %retval, align 1, !dbg !8686
  br label %return, !dbg !8686

if.end243:                                        ; preds = %sw.epilog
  %212 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8687
  %ptr244 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %212, i32 0, i32 7, !dbg !8689
  %213 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr244, align 8, !dbg !8689
  %call245 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %213, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0)), !dbg !8690
  store %struct.PropertyRNA* %call245, %struct.PropertyRNA** %prop, align 8, !dbg !8691
  %tobool246 = icmp ne %struct.PropertyRNA* %call245, null, !dbg !8691
  br i1 %tobool246, label %land.lhs.true247, label %if.end268, !dbg !8692

land.lhs.true247:                                 ; preds = %if.end243
  %214 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8693
  %ptr248 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %214, i32 0, i32 7, !dbg !8694
  %215 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr248, align 8, !dbg !8694
  %216 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8695
  %call249 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %215, %struct.PropertyRNA* %216), !dbg !8696
  %conv250 = zext i8 %call249 to i32, !dbg !8696
  %tobool251 = icmp ne i32 %conv250, 0, !dbg !8696
  br i1 %tobool251, label %if.then252, label %if.end268, !dbg !8697

if.then252:                                       ; preds = %land.lhs.true247
  call void @llvm.dbg.declare(metadata [4 x float]* %values, metadata !8698, metadata !DIExpression()), !dbg !8700
  %217 = bitcast [4 x float]* %values to i8*, !dbg !8700
  call void @llvm.memset.p0i8.i64(i8* align 16 %217, i8 0, i64 16, i1 false), !dbg !8700
  %218 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8701
  %call253 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %218), !dbg !8703
  %tobool254 = icmp ne i8 %call253, 0, !dbg !8703
  br i1 %tobool254, label %if.then255, label %if.else258, !dbg !8704

if.then255:                                       ; preds = %if.then252
  %219 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8705
  %ptr256 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %219, i32 0, i32 7, !dbg !8707
  %220 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr256, align 8, !dbg !8707
  %arraydecay257 = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !8708
  call void @RNA_float_get_array(%struct.PointerRNA* %220, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0), float* %arraydecay257), !dbg !8709
  br label %if.end261, !dbg !8710

if.else258:                                       ; preds = %if.then252
  %221 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8711
  %ptr259 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %221, i32 0, i32 7, !dbg !8713
  %222 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr259, align 8, !dbg !8713
  %call260 = call float @RNA_float_get(%struct.PointerRNA* %222, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0)), !dbg !8714
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !8715
  store float %call260, float* %arrayidx, align 16, !dbg !8716
  br label %if.end261

if.end261:                                        ; preds = %if.else258, %if.then255
  %223 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8717
  %values262 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %223, i32 0, i32 47, !dbg !8718
  %arraydecay263 = getelementptr inbounds [4 x float], [4 x float]* %values262, i64 0, i64 0, !dbg !8717
  %arraydecay264 = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !8719
  call void @copy_v4_v4(float* %arraydecay263, float* %arraydecay264), !dbg !8720
  %224 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8721
  %auto_values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %224, i32 0, i32 48, !dbg !8722
  %arraydecay265 = getelementptr inbounds [4 x float], [4 x float]* %auto_values, i64 0, i64 0, !dbg !8721
  %arraydecay266 = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !8723
  call void @copy_v4_v4(float* %arraydecay265, float* %arraydecay266), !dbg !8724
  %225 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8725
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %225, i32 0, i32 1, !dbg !8726
  %226 = load i32, i32* %flag, align 4, !dbg !8727
  %or267 = or i32 %226, 1048576, !dbg !8727
  store i32 %or267, i32* %flag, align 4, !dbg !8727
  br label %if.end268, !dbg !8728

if.end268:                                        ; preds = %if.end261, %land.lhs.true247, %if.end243
  %227 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8729
  %ptr269 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %227, i32 0, i32 7, !dbg !8731
  %228 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr269, align 8, !dbg !8731
  %call270 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %228, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0)), !dbg !8732
  store %struct.PropertyRNA* %call270, %struct.PropertyRNA** %prop, align 8, !dbg !8733
  %tobool271 = icmp ne %struct.PropertyRNA* %call270, null, !dbg !8733
  br i1 %tobool271, label %land.lhs.true272, label %if.end286, !dbg !8734

land.lhs.true272:                                 ; preds = %if.end268
  %229 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8735
  %ptr273 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %229, i32 0, i32 7, !dbg !8736
  %230 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr273, align 8, !dbg !8736
  %231 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8737
  %call274 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %230, %struct.PropertyRNA* %231), !dbg !8738
  %conv275 = zext i8 %call274 to i32, !dbg !8738
  %tobool276 = icmp ne i32 %conv275, 0, !dbg !8738
  br i1 %tobool276, label %if.then277, label %if.end286, !dbg !8739

if.then277:                                       ; preds = %land.lhs.true272
  %232 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8740
  %ptr278 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %232, i32 0, i32 7, !dbg !8742
  %233 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr278, align 8, !dbg !8742
  %234 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8743
  %235 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8744
  %axis = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %235, i32 0, i32 49, !dbg !8745
  %arraydecay279 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !8744
  call void @RNA_property_float_get_array(%struct.PointerRNA* %233, %struct.PropertyRNA* %234, float* %arraydecay279), !dbg !8746
  %236 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8747
  %axis280 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %236, i32 0, i32 49, !dbg !8748
  %arraydecay281 = getelementptr inbounds [3 x float], [3 x float]* %axis280, i64 0, i64 0, !dbg !8747
  %call282 = call float @normalize_v3(float* %arraydecay281), !dbg !8749
  %237 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8750
  %axis_orig = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %237, i32 0, i32 50, !dbg !8751
  %arraydecay283 = getelementptr inbounds [3 x float], [3 x float]* %axis_orig, i64 0, i64 0, !dbg !8750
  %238 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8752
  %axis284 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %238, i32 0, i32 49, !dbg !8753
  %arraydecay285 = getelementptr inbounds [3 x float], [3 x float]* %axis284, i64 0, i64 0, !dbg !8752
  call void @copy_v3_v3(float* %arraydecay283, float* %arraydecay285), !dbg !8754
  br label %if.end286, !dbg !8755

if.end286:                                        ; preds = %if.then277, %land.lhs.true272, %if.end268
  %239 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8756
  %ptr287 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %239, i32 0, i32 7, !dbg !8758
  %240 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr287, align 8, !dbg !8758
  %call288 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %240, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i64 0, i64 0)), !dbg !8759
  store %struct.PropertyRNA* %call288, %struct.PropertyRNA** %prop, align 8, !dbg !8760
  %tobool289 = icmp ne %struct.PropertyRNA* %call288, null, !dbg !8760
  br i1 %tobool289, label %land.lhs.true290, label %if.end333, !dbg !8761

land.lhs.true290:                                 ; preds = %if.end286
  %241 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8762
  %ptr291 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %241, i32 0, i32 7, !dbg !8763
  %242 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr291, align 8, !dbg !8763
  %243 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8764
  %call292 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %242, %struct.PropertyRNA* %243), !dbg !8765
  %conv293 = zext i8 %call292 to i32, !dbg !8765
  %tobool294 = icmp ne i32 %conv293, 0, !dbg !8765
  br i1 %tobool294, label %if.then295, label %if.end333, !dbg !8766

if.then295:                                       ; preds = %land.lhs.true290
  call void @llvm.dbg.declare(metadata [3 x i32]* %constraint_axis, metadata !8767, metadata !DIExpression()), !dbg !8769
  %244 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8770
  %ptr296 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %244, i32 0, i32 7, !dbg !8771
  %245 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr296, align 8, !dbg !8771
  %246 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8772
  %arraydecay297 = getelementptr inbounds [3 x i32], [3 x i32]* %constraint_axis, i64 0, i64 0, !dbg !8773
  call void @RNA_property_boolean_get_array(%struct.PointerRNA* %245, %struct.PropertyRNA* %246, i32* %arraydecay297), !dbg !8774
  %arrayidx298 = getelementptr inbounds [3 x i32], [3 x i32]* %constraint_axis, i64 0, i64 0, !dbg !8775
  %247 = load i32, i32* %arrayidx298, align 4, !dbg !8775
  %tobool299 = icmp ne i32 %247, 0, !dbg !8775
  br i1 %tobool299, label %if.then306, label %lor.lhs.false300, !dbg !8777

lor.lhs.false300:                                 ; preds = %if.then295
  %arrayidx301 = getelementptr inbounds [3 x i32], [3 x i32]* %constraint_axis, i64 0, i64 1, !dbg !8778
  %248 = load i32, i32* %arrayidx301, align 4, !dbg !8778
  %tobool302 = icmp ne i32 %248, 0, !dbg !8778
  br i1 %tobool302, label %if.then306, label %lor.lhs.false303, !dbg !8779

lor.lhs.false303:                                 ; preds = %lor.lhs.false300
  %arrayidx304 = getelementptr inbounds [3 x i32], [3 x i32]* %constraint_axis, i64 0, i64 2, !dbg !8780
  %249 = load i32, i32* %arrayidx304, align 4, !dbg !8780
  %tobool305 = icmp ne i32 %249, 0, !dbg !8780
  br i1 %tobool305, label %if.then306, label %if.end332, !dbg !8781

if.then306:                                       ; preds = %lor.lhs.false303, %lor.lhs.false300, %if.then295
  %250 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8782
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %250, i32 0, i32 13, !dbg !8784
  %mode307 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 7, !dbg !8785
  %251 = load i32, i32* %mode307, align 4, !dbg !8786
  %or308 = or i32 %251, 1, !dbg !8786
  store i32 %or308, i32* %mode307, align 4, !dbg !8786
  %arrayidx309 = getelementptr inbounds [3 x i32], [3 x i32]* %constraint_axis, i64 0, i64 0, !dbg !8787
  %252 = load i32, i32* %arrayidx309, align 4, !dbg !8787
  %tobool310 = icmp ne i32 %252, 0, !dbg !8787
  br i1 %tobool310, label %if.then311, label %if.end315, !dbg !8789

if.then311:                                       ; preds = %if.then306
  %253 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8790
  %con312 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %253, i32 0, i32 13, !dbg !8792
  %mode313 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con312, i32 0, i32 7, !dbg !8793
  %254 = load i32, i32* %mode313, align 4, !dbg !8794
  %or314 = or i32 %254, 2, !dbg !8794
  store i32 %or314, i32* %mode313, align 4, !dbg !8794
  br label %if.end315, !dbg !8795

if.end315:                                        ; preds = %if.then311, %if.then306
  %arrayidx316 = getelementptr inbounds [3 x i32], [3 x i32]* %constraint_axis, i64 0, i64 1, !dbg !8796
  %255 = load i32, i32* %arrayidx316, align 4, !dbg !8796
  %tobool317 = icmp ne i32 %255, 0, !dbg !8796
  br i1 %tobool317, label %if.then318, label %if.end322, !dbg !8798

if.then318:                                       ; preds = %if.end315
  %256 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8799
  %con319 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %256, i32 0, i32 13, !dbg !8801
  %mode320 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con319, i32 0, i32 7, !dbg !8802
  %257 = load i32, i32* %mode320, align 4, !dbg !8803
  %or321 = or i32 %257, 4, !dbg !8803
  store i32 %or321, i32* %mode320, align 4, !dbg !8803
  br label %if.end322, !dbg !8804

if.end322:                                        ; preds = %if.then318, %if.end315
  %arrayidx323 = getelementptr inbounds [3 x i32], [3 x i32]* %constraint_axis, i64 0, i64 2, !dbg !8805
  %258 = load i32, i32* %arrayidx323, align 4, !dbg !8805
  %tobool324 = icmp ne i32 %258, 0, !dbg !8805
  br i1 %tobool324, label %if.then325, label %if.end329, !dbg !8807

if.then325:                                       ; preds = %if.end322
  %259 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8808
  %con326 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %259, i32 0, i32 13, !dbg !8810
  %mode327 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con326, i32 0, i32 7, !dbg !8811
  %260 = load i32, i32* %mode327, align 4, !dbg !8812
  %or328 = or i32 %260, 8, !dbg !8812
  store i32 %or328, i32* %mode327, align 4, !dbg !8812
  br label %if.end329, !dbg !8813

if.end329:                                        ; preds = %if.then325, %if.end322
  %261 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8814
  %262 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8815
  %current_orientation = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %262, i32 0, i32 43, !dbg !8816
  %263 = load i16, i16* %current_orientation, align 2, !dbg !8816
  %264 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8817
  %con330 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %264, i32 0, i32 13, !dbg !8818
  %mode331 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con330, i32 0, i32 7, !dbg !8819
  %265 = load i32, i32* %mode331, align 4, !dbg !8819
  call void @setUserConstraint(%struct.TransInfo* %261, i16 signext %263, i32 %265, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i64 0, i64 0)), !dbg !8820
  br label %if.end332, !dbg !8821

if.end332:                                        ; preds = %if.end329, %lor.lhs.false303
  br label %if.end333, !dbg !8822

if.end333:                                        ; preds = %if.end332, %land.lhs.true290, %if.end286
  %266 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !8823
  %context334 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %266, i32 0, i32 53, !dbg !8824
  store %struct.bContext* null, %struct.bContext** %context334, align 8, !dbg !8825
  store i8 1, i8* %retval, align 1, !dbg !8826
  br label %return, !dbg !8826

return:                                           ; preds = %if.end333, %if.then242, %if.then100
  %267 = load i8, i8* %retval, align 1, !dbg !8827
  ret i8 %267, !dbg !8827
}

declare dso_local i32 @RNA_property_boolean_get(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local void @initTransformOrientation(%struct.bContext*, %struct.TransInfo*) #2

declare dso_local i8* @ED_region_draw_cb_activate(%struct.ARegionType*, void (%struct.bContext*, %struct.ARegion*, i8*)*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @drawTransformApply(%struct.bContext* %C, %struct.ARegion* %UNUSED_ar, i8* %arg) #0 !dbg !8828 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_ar.addr = alloca %struct.ARegion*, align 8
  %arg.addr = alloca i8*, align 8
  %t = alloca %struct.TransInfo*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8835, metadata !DIExpression()), !dbg !8836
  store %struct.ARegion* %UNUSED_ar, %struct.ARegion** %UNUSED_ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %UNUSED_ar.addr, metadata !8837, metadata !DIExpression()), !dbg !8838
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8839, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t, metadata !8841, metadata !DIExpression()), !dbg !8842
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8843
  %1 = bitcast i8* %0 to %struct.TransInfo*, !dbg !8843
  store %struct.TransInfo* %1, %struct.TransInfo** %t, align 8, !dbg !8842
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !8844
  %redraw = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 17, !dbg !8846
  %3 = load i32, i32* %redraw, align 8, !dbg !8846
  %and = and i32 %3, 2, !dbg !8847
  %tobool = icmp ne i32 %and, 0, !dbg !8847
  br i1 %tobool, label %if.then, label %if.end, !dbg !8848

if.then:                                          ; preds = %entry
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !8849
  %redraw1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 17, !dbg !8851
  %5 = load i32, i32* %redraw1, align 8, !dbg !8852
  %or = or i32 %5, 1, !dbg !8852
  store i32 %or, i32* %redraw1, align 8, !dbg !8852
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8853
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !8854
  call void @transformApply(%struct.bContext* %6, %struct.TransInfo* %7), !dbg !8855
  br label %if.end, !dbg !8856

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8857
}

; Function Attrs: noinline nounwind uwtable
define internal void @drawTransformView(%struct.bContext* %C, %struct.ARegion* %UNUSED_ar, i8* %arg) #0 !dbg !8858 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_ar.addr = alloca %struct.ARegion*, align 8
  %arg.addr = alloca i8*, align 8
  %t = alloca %struct.TransInfo*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8863, metadata !DIExpression()), !dbg !8864
  store %struct.ARegion* %UNUSED_ar, %struct.ARegion** %UNUSED_ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %UNUSED_ar.addr, metadata !8865, metadata !DIExpression()), !dbg !8866
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8867, metadata !DIExpression()), !dbg !8868
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t, metadata !8869, metadata !DIExpression()), !dbg !8870
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8871
  %1 = bitcast i8* %0 to %struct.TransInfo*, !dbg !8871
  store %struct.TransInfo* %1, %struct.TransInfo** %t, align 8, !dbg !8870
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !8872
  call void @drawConstraint(%struct.TransInfo* %2), !dbg !8873
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8874
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !8875
  call void @drawPropCircle(%struct.bContext* %3, %struct.TransInfo* %4), !dbg !8876
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8877
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !8878
  call void @drawSnapping(%struct.bContext* %5, %struct.TransInfo* %6), !dbg !8879
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8880
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !8881
  call void @drawEdgeSlide(%struct.bContext* %7, %struct.TransInfo* %8), !dbg !8882
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8883
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !8884
  call void @drawVertSlide(%struct.bContext* %9, %struct.TransInfo* %10), !dbg !8885
  ret void, !dbg !8886
}

; Function Attrs: noinline nounwind uwtable
define internal void @drawTransformPixel(%struct.bContext* %UNUSED_C, %struct.ARegion* %ar, i8* %arg) #0 !dbg !8887 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %arg.addr = alloca i8*, align 8
  %t = alloca %struct.TransInfo*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !8888, metadata !DIExpression()), !dbg !8889
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !8890, metadata !DIExpression()), !dbg !8891
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8892, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t, metadata !8894, metadata !DIExpression()), !dbg !8895
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8896
  %1 = bitcast i8* %0 to %struct.TransInfo*, !dbg !8896
  store %struct.TransInfo* %1, %struct.TransInfo** %t, align 8, !dbg !8895
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !8897, metadata !DIExpression()), !dbg !8900
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !8901
  %scene1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 56, !dbg !8902
  %3 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !8902
  store %struct.Scene* %3, %struct.Scene** %scene, align 8, !dbg !8900
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8903, metadata !DIExpression()), !dbg !8906
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8907
  %basact = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 6, !dbg !8907
  %5 = load %struct.Base*, %struct.Base** %basact, align 8, !dbg !8907
  %tobool = icmp ne %struct.Base* %5, null, !dbg !8907
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8907

cond.true:                                        ; preds = %entry
  %6 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8907
  %basact2 = getelementptr inbounds %struct.Scene, %struct.Scene* %6, i32 0, i32 6, !dbg !8907
  %7 = load %struct.Base*, %struct.Base** %basact2, align 8, !dbg !8907
  %object = getelementptr inbounds %struct.Base, %struct.Base* %7, i32 0, i32 7, !dbg !8907
  %8 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !8907
  br label %cond.end, !dbg !8907

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8907

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Object* [ %8, %cond.true ], [ null, %cond.false ], !dbg !8907
  store %struct.Object* %cond, %struct.Object** %ob, align 8, !dbg !8906
  %9 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 92), align 2, !dbg !8908
  %conv = sext i16 %9 to i32, !dbg !8910
  %and = and i32 %conv, 128, !dbg !8911
  %cmp = icmp eq i32 %and, 0, !dbg !8912
  br i1 %cmp, label %if.then, label %if.end16, !dbg !8913

if.then:                                          ; preds = %cond.end
  %10 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8914
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !8917
  %ar4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 55, !dbg !8918
  %12 = load %struct.ARegion*, %struct.ARegion** %ar4, align 8, !dbg !8918
  %cmp5 = icmp eq %struct.ARegion* %10, %12, !dbg !8919
  br i1 %cmp5, label %if.then7, label %if.end15, !dbg !8920

if.then7:                                         ; preds = %if.then
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !8921
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 1, !dbg !8924
  %14 = load i32, i32* %flag, align 4, !dbg !8924
  %and8 = and i32 %14, 5, !dbg !8925
  %tobool9 = icmp ne i32 %and8, 0, !dbg !8925
  br i1 %tobool9, label %if.then10, label %if.end14, !dbg !8926

if.then10:                                        ; preds = %if.then7
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8927
  %tobool11 = icmp ne %struct.Object* %15, null, !dbg !8927
  br i1 %tobool11, label %land.lhs.true, label %if.end, !dbg !8930

land.lhs.true:                                    ; preds = %if.then10
  %16 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8931
  %17 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8932
  %id = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 0, !dbg !8933
  %call = call i32 @autokeyframe_cfra_can_key(%struct.Scene* %16, %struct.ID* %id), !dbg !8934
  %tobool12 = icmp ne i32 %call, 0, !dbg !8934
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !8935

if.then13:                                        ; preds = %land.lhs.true
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !8936
  %19 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8938
  call void @drawAutoKeyWarning(%struct.TransInfo* %18, %struct.ARegion* %19), !dbg !8939
  br label %if.end, !dbg !8940

if.end:                                           ; preds = %if.then13, %land.lhs.true, %if.then10
  br label %if.end14, !dbg !8941

if.end14:                                         ; preds = %if.end, %if.then7
  br label %if.end15, !dbg !8942

if.end15:                                         ; preds = %if.end14, %if.then
  br label %if.end16, !dbg !8943

if.end16:                                         ; preds = %if.end15, %cond.end
  ret void, !dbg !8944
}

declare dso_local i8* @WM_paint_cursor_activate(%struct.wmWindowManager*, i32 (%struct.bContext*)*, void (%struct.bContext*, i32, i32, i8*)*, i8*) #2

declare dso_local %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @helpline_poll(%struct.bContext* %C) #0 !dbg !8945 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8948, metadata !DIExpression()), !dbg !8949
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !8950, metadata !DIExpression()), !dbg !8951
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8952
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !8953
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !8951
  %1 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8954
  %tobool = icmp ne %struct.ARegion* %1, null, !dbg !8954
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8956

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8957
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %2, i32 0, i32 8, !dbg !8958
  %3 = load i16, i16* %regiontype, align 2, !dbg !8958
  %conv = sext i16 %3 to i32, !dbg !8957
  %cmp = icmp eq i32 %conv, 0, !dbg !8959
  br i1 %cmp, label %if.then, label %if.end, !dbg !8960

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !8961
  br label %return, !dbg !8961

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !8962
  br label %return, !dbg !8962

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !8963
  ret i32 %4, !dbg !8963
}

; Function Attrs: noinline nounwind uwtable
define internal void @drawHelpline(%struct.bContext* %UNUSED_C, i32 %x, i32 %y, i8* %customdata) #0 !dbg !8964 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %customdata.addr = alloca i8*, align 8
  %t = alloca %struct.TransInfo*, align 8
  %vecrot = alloca [3 x float], align 4
  %cent = alloca [2 x float], align 4
  %mval = alloca [2 x i32], align 4
  %ob = alloca %struct.Object*, align 8
  %ob16 = alloca %struct.Object*, align 8
  %dx = alloca float, align 4
  %dy = alloca float, align 4
  %angle = alloca float, align 4
  %dist = alloca float, align 4
  %delta_angle = alloca float, align 4
  %spacing_angle = alloca float, align 4
  %col = alloca [3 x i8], align 1
  %col2 = alloca [3 x i8], align 1
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !8967, metadata !DIExpression()), !dbg !8968
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8969, metadata !DIExpression()), !dbg !8970
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !8971, metadata !DIExpression()), !dbg !8972
  store i8* %customdata, i8** %customdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %customdata.addr, metadata !8973, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t, metadata !8975, metadata !DIExpression()), !dbg !8976
  %0 = load i8*, i8** %customdata.addr, align 8, !dbg !8977
  %1 = bitcast i8* %0 to %struct.TransInfo*, !dbg !8978
  store %struct.TransInfo* %1, %struct.TransInfo** %t, align 8, !dbg !8976
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !8979
  %helpline = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 34, !dbg !8981
  %3 = load i8, i8* %helpline, align 1, !dbg !8981
  %conv = zext i8 %3 to i32, !dbg !8979
  %cmp = icmp ne i32 %conv, 0, !dbg !8982
  br i1 %cmp, label %land.lhs.true, label %if.end121, !dbg !8983

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !8984
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 1, !dbg !8985
  %5 = load i32, i32* %flag, align 4, !dbg !8985
  %and = and i32 %5, 128, !dbg !8986
  %tobool = icmp ne i32 %and, 0, !dbg !8986
  br i1 %tobool, label %if.end121, label %if.then, !dbg !8987

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [3 x float]* %vecrot, metadata !8988, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.declare(metadata [2 x float]* %cent, metadata !8991, metadata !DIExpression()), !dbg !8992
  call void @llvm.dbg.declare(metadata [2 x i32]* %mval, metadata !8993, metadata !DIExpression()), !dbg !8994
  %6 = load i32, i32* %x.addr, align 4, !dbg !8995
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !8996
  store i32 %6, i32* %arrayidx, align 4, !dbg !8997
  %7 = load i32, i32* %y.addr, align 4, !dbg !8998
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 1, !dbg !8999
  store i32 %7, i32* %arrayidx2, align 4, !dbg !9000
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vecrot, i64 0, i64 0, !dbg !9001
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !9002
  %center = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 20, !dbg !9003
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !9002
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay3), !dbg !9004
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !9005
  %flag4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 1, !dbg !9007
  %10 = load i32, i32* %flag4, align 4, !dbg !9007
  %and5 = and i32 %10, 2, !dbg !9008
  %tobool6 = icmp ne i32 %and5, 0, !dbg !9008
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !9009

if.then7:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9010, metadata !DIExpression()), !dbg !9012
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !9013
  %obedit = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 63, !dbg !9014
  %12 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9014
  store %struct.Object* %12, %struct.Object** %ob, align 8, !dbg !9012
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9015
  %tobool8 = icmp ne %struct.Object* %13, null, !dbg !9015
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !9017

if.then9:                                         ; preds = %if.then7
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9018
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 47, !dbg !9019
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !9018
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %vecrot, i64 0, i64 0, !dbg !9020
  call void @mul_m4_v3([4 x float]* %arraydecay10, float* %arraydecay11), !dbg !9021
  br label %if.end, !dbg !9021

if.end:                                           ; preds = %if.then9, %if.then7
  br label %if.end24, !dbg !9022

if.else:                                          ; preds = %if.then
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !9023
  %flag12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 1, !dbg !9025
  %16 = load i32, i32* %flag12, align 4, !dbg !9025
  %and13 = and i32 %16, 4, !dbg !9026
  %tobool14 = icmp ne i32 %and13, 0, !dbg !9026
  br i1 %tobool14, label %if.then15, label %if.end23, !dbg !9027

if.then15:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.Object** %ob16, metadata !9028, metadata !DIExpression()), !dbg !9030
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !9031
  %poseobj = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 39, !dbg !9032
  %18 = load %struct.Object*, %struct.Object** %poseobj, align 8, !dbg !9032
  store %struct.Object* %18, %struct.Object** %ob16, align 8, !dbg !9030
  %19 = load %struct.Object*, %struct.Object** %ob16, align 8, !dbg !9033
  %tobool17 = icmp ne %struct.Object* %19, null, !dbg !9033
  br i1 %tobool17, label %if.then18, label %if.end22, !dbg !9035

if.then18:                                        ; preds = %if.then15
  %20 = load %struct.Object*, %struct.Object** %ob16, align 8, !dbg !9036
  %obmat19 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 47, !dbg !9037
  %arraydecay20 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat19, i64 0, i64 0, !dbg !9036
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %vecrot, i64 0, i64 0, !dbg !9038
  call void @mul_m4_v3([4 x float]* %arraydecay20, float* %arraydecay21), !dbg !9039
  br label %if.end22, !dbg !9039

if.end22:                                         ; preds = %if.then18, %if.then15
  br label %if.end23, !dbg !9040

if.end23:                                         ; preds = %if.end22, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !9041
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %vecrot, i64 0, i64 0, !dbg !9042
  %arraydecay26 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !9043
  call void @projectFloatViewEx(%struct.TransInfo* %21, float* %arraydecay25, float* %arraydecay26, i32 8), !dbg !9044
  call void @glPushMatrix(), !dbg !9045
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !9046
  %helpline27 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 34, !dbg !9047
  %23 = load i8, i8* %helpline27, align 1, !dbg !9047
  %conv28 = zext i8 %23 to i32, !dbg !9046
  switch i32 %conv28, label %sw.epilog [
    i32 1, label %sw.bb
    i32 3, label %sw.bb45
    i32 4, label %sw.bb50
    i32 2, label %sw.bb55
    i32 5, label %sw.bb109
  ], !dbg !9048

sw.bb:                                            ; preds = %if.end24
  call void @UI_ThemeColor(i32 192), !dbg !9049
  call void @setlinestyle(i32 3), !dbg !9051
  call void @glBegin(i32 3), !dbg !9052
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !9053
  %mval29 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 61, !dbg !9054
  %arraydecay30 = getelementptr inbounds [2 x i32], [2 x i32]* %mval29, i64 0, i64 0, !dbg !9053
  call void @glVertex2iv(i32* %arraydecay30), !dbg !9055
  %arraydecay31 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !9056
  call void @glVertex2fv(float* %arraydecay31), !dbg !9057
  call void @glEnd(), !dbg !9058
  %arrayidx32 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !9059
  %25 = load i32, i32* %arrayidx32, align 4, !dbg !9059
  %conv33 = sitofp i32 %25 to float, !dbg !9059
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 1, !dbg !9060
  %26 = load i32, i32* %arrayidx34, align 4, !dbg !9060
  %conv35 = sitofp i32 %26 to float, !dbg !9060
  call void @glTranslatef(float %conv33, float %conv35, float 0.000000e+00), !dbg !9061
  %arrayidx36 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !9062
  %27 = load float, float* %arrayidx36, align 4, !dbg !9062
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !9062
  %mval37 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 61, !dbg !9062
  %arrayidx38 = getelementptr inbounds [2 x i32], [2 x i32]* %mval37, i64 0, i64 0, !dbg !9062
  %29 = load i32, i32* %arrayidx38, align 8, !dbg !9062
  %conv39 = sitofp i32 %29 to float, !dbg !9062
  %sub = fsub float %27, %conv39, !dbg !9062
  %arrayidx40 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 1, !dbg !9062
  %30 = load float, float* %arrayidx40, align 4, !dbg !9062
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !9062
  %mval41 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %31, i32 0, i32 61, !dbg !9062
  %arrayidx42 = getelementptr inbounds [2 x i32], [2 x i32]* %mval41, i64 0, i64 1, !dbg !9062
  %32 = load i32, i32* %arrayidx42, align 4, !dbg !9062
  %conv43 = sitofp i32 %32 to float, !dbg !9062
  %sub44 = fsub float %30, %conv43, !dbg !9062
  %call = call float @atan2f(float %sub, float %sub44) #5, !dbg !9062
  %mul = fmul float %call, 0x404CA5DC20000000, !dbg !9062
  %fneg = fneg float %mul, !dbg !9063
  call void @glRotatef(float %fneg, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00), !dbg !9064
  call void @setlinestyle(i32 0), !dbg !9065
  %33 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !9066
  call void @glLineWidth(float 3.000000e+00), !dbg !9066
  call void @drawArrow(i32 0, i16 signext 5, i16 signext 10, i16 signext 5), !dbg !9067
  call void @drawArrow(i32 1, i16 signext 5, i16 signext 10, i16 signext 5), !dbg !9068
  %34 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !9069
  call void @glLineWidth(float 1.000000e+00), !dbg !9069
  br label %sw.epilog, !dbg !9070

sw.bb45:                                          ; preds = %if.end24
  call void @UI_ThemeColor(i32 192), !dbg !9071
  %arrayidx46 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !9072
  %35 = load i32, i32* %arrayidx46, align 4, !dbg !9072
  %conv47 = sitofp i32 %35 to float, !dbg !9072
  %arrayidx48 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 1, !dbg !9073
  %36 = load i32, i32* %arrayidx48, align 4, !dbg !9073
  %conv49 = sitofp i32 %36 to float, !dbg !9073
  call void @glTranslatef(float %conv47, float %conv49, float 0.000000e+00), !dbg !9074
  %37 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !9075
  call void @glLineWidth(float 3.000000e+00), !dbg !9075
  call void @drawArrow(i32 3, i16 signext 5, i16 signext 10, i16 signext 5), !dbg !9076
  call void @drawArrow(i32 2, i16 signext 5, i16 signext 10, i16 signext 5), !dbg !9077
  %38 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !9078
  call void @glLineWidth(float 1.000000e+00), !dbg !9078
  br label %sw.epilog, !dbg !9079

sw.bb50:                                          ; preds = %if.end24
  call void @UI_ThemeColor(i32 192), !dbg !9080
  %arrayidx51 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !9081
  %39 = load i32, i32* %arrayidx51, align 4, !dbg !9081
  %conv52 = sitofp i32 %39 to float, !dbg !9081
  %arrayidx53 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 1, !dbg !9082
  %40 = load i32, i32* %arrayidx53, align 4, !dbg !9082
  %conv54 = sitofp i32 %40 to float, !dbg !9082
  call void @glTranslatef(float %conv52, float %conv54, float 0.000000e+00), !dbg !9083
  %41 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !9084
  call void @glLineWidth(float 3.000000e+00), !dbg !9084
  call void @drawArrow(i32 0, i16 signext 5, i16 signext 10, i16 signext 5), !dbg !9085
  call void @drawArrow(i32 1, i16 signext 5, i16 signext 10, i16 signext 5), !dbg !9086
  %42 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !9087
  call void @glLineWidth(float 1.000000e+00), !dbg !9087
  br label %sw.epilog, !dbg !9088

sw.bb55:                                          ; preds = %if.end24
  call void @llvm.dbg.declare(metadata float* %dx, metadata !9089, metadata !DIExpression()), !dbg !9091
  %43 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !9092
  %mval56 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %43, i32 0, i32 61, !dbg !9093
  %arrayidx57 = getelementptr inbounds [2 x i32], [2 x i32]* %mval56, i64 0, i64 0, !dbg !9092
  %44 = load i32, i32* %arrayidx57, align 8, !dbg !9092
  %conv58 = sitofp i32 %44 to float, !dbg !9092
  %arrayidx59 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !9094
  %45 = load float, float* %arrayidx59, align 4, !dbg !9094
  %sub60 = fsub float %conv58, %45, !dbg !9095
  store float %sub60, float* %dx, align 4, !dbg !9091
  call void @llvm.dbg.declare(metadata float* %dy, metadata !9096, metadata !DIExpression()), !dbg !9097
  %46 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !9098
  %mval61 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %46, i32 0, i32 61, !dbg !9099
  %arrayidx62 = getelementptr inbounds [2 x i32], [2 x i32]* %mval61, i64 0, i64 1, !dbg !9098
  %47 = load i32, i32* %arrayidx62, align 4, !dbg !9098
  %conv63 = sitofp i32 %47 to float, !dbg !9098
  %arrayidx64 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 1, !dbg !9100
  %48 = load float, float* %arrayidx64, align 4, !dbg !9100
  %sub65 = fsub float %conv63, %48, !dbg !9101
  store float %sub65, float* %dy, align 4, !dbg !9097
  call void @llvm.dbg.declare(metadata float* %angle, metadata !9102, metadata !DIExpression()), !dbg !9103
  %49 = load float, float* %dy, align 4, !dbg !9104
  %50 = load float, float* %dx, align 4, !dbg !9105
  %call66 = call float @atan2f(float %49, float %50) #5, !dbg !9106
  store float %call66, float* %angle, align 4, !dbg !9103
  call void @llvm.dbg.declare(metadata float* %dist, metadata !9107, metadata !DIExpression()), !dbg !9108
  %51 = load float, float* %dx, align 4, !dbg !9109
  %52 = load float, float* %dy, align 4, !dbg !9110
  %call67 = call float @hypotf(float %51, float %52) #5, !dbg !9111
  store float %call67, float* %dist, align 4, !dbg !9108
  call void @llvm.dbg.declare(metadata float* %delta_angle, metadata !9112, metadata !DIExpression()), !dbg !9113
  %53 = load float, float* %dist, align 4, !dbg !9114
  %div = fdiv float 1.500000e+01, %53, !dbg !9115
  %call68 = call float @min_ff(float %div, float 0x3FE921FB60000000), !dbg !9116
  store float %call68, float* %delta_angle, align 4, !dbg !9113
  call void @llvm.dbg.declare(metadata float* %spacing_angle, metadata !9117, metadata !DIExpression()), !dbg !9118
  %54 = load float, float* %dist, align 4, !dbg !9119
  %div69 = fdiv float 5.000000e+00, %54, !dbg !9120
  %call70 = call float @min_ff(float %div69, float 0x3FD0C15240000000), !dbg !9121
  store float %call70, float* %spacing_angle, align 4, !dbg !9118
  call void @UI_ThemeColor(i32 192), !dbg !9122
  call void @setlinestyle(i32 3), !dbg !9123
  call void @glBegin(i32 3), !dbg !9124
  %55 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !9125
  %mval71 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %55, i32 0, i32 61, !dbg !9126
  %arraydecay72 = getelementptr inbounds [2 x i32], [2 x i32]* %mval71, i64 0, i64 0, !dbg !9125
  call void @glVertex2iv(i32* %arraydecay72), !dbg !9127
  %arraydecay73 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !9128
  call void @glVertex2fv(float* %arraydecay73), !dbg !9129
  call void @glEnd(), !dbg !9130
  %arrayidx74 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 0, !dbg !9131
  %56 = load float, float* %arrayidx74, align 4, !dbg !9131
  %57 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !9132
  %mval75 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %57, i32 0, i32 61, !dbg !9133
  %arrayidx76 = getelementptr inbounds [2 x i32], [2 x i32]* %mval75, i64 0, i64 0, !dbg !9132
  %58 = load i32, i32* %arrayidx76, align 8, !dbg !9132
  %conv77 = sitofp i32 %58 to float, !dbg !9132
  %sub78 = fsub float %56, %conv77, !dbg !9134
  %arrayidx79 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !9135
  %59 = load i32, i32* %arrayidx79, align 4, !dbg !9135
  %conv80 = sitofp i32 %59 to float, !dbg !9135
  %add = fadd float %sub78, %conv80, !dbg !9136
  %arrayidx81 = getelementptr inbounds [2 x float], [2 x float]* %cent, i64 0, i64 1, !dbg !9137
  %60 = load float, float* %arrayidx81, align 4, !dbg !9137
  %61 = load %struct.TransInfo*, %struct.TransInfo** %t, align 8, !dbg !9138
  %mval82 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %61, i32 0, i32 61, !dbg !9139
  %arrayidx83 = getelementptr inbounds [2 x i32], [2 x i32]* %mval82, i64 0, i64 1, !dbg !9138
  %62 = load i32, i32* %arrayidx83, align 4, !dbg !9138
  %conv84 = sitofp i32 %62 to float, !dbg !9138
  %sub85 = fsub float %60, %conv84, !dbg !9140
  %arrayidx86 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 1, !dbg !9141
  %63 = load i32, i32* %arrayidx86, align 4, !dbg !9141
  %conv87 = sitofp i32 %63 to float, !dbg !9141
  %add88 = fadd float %sub85, %conv87, !dbg !9142
  call void @glTranslatef(float %add, float %add88, float 0.000000e+00), !dbg !9143
  call void @setlinestyle(i32 0), !dbg !9144
  %64 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !9145
  call void @glLineWidth(float 3.000000e+00), !dbg !9145
  %65 = load float, float* %dist, align 4, !dbg !9146
  %66 = load float, float* %angle, align 4, !dbg !9147
  %67 = load float, float* %delta_angle, align 4, !dbg !9148
  %sub89 = fsub float %66, %67, !dbg !9149
  %68 = load float, float* %angle, align 4, !dbg !9150
  %69 = load float, float* %spacing_angle, align 4, !dbg !9151
  %sub90 = fsub float %68, %69, !dbg !9152
  call void @drawArc(float %65, float %sub89, float %sub90, i32 10), !dbg !9153
  %70 = load float, float* %dist, align 4, !dbg !9154
  %71 = load float, float* %angle, align 4, !dbg !9155
  %72 = load float, float* %spacing_angle, align 4, !dbg !9156
  %add91 = fadd float %71, %72, !dbg !9157
  %73 = load float, float* %angle, align 4, !dbg !9158
  %74 = load float, float* %delta_angle, align 4, !dbg !9159
  %add92 = fadd float %73, %74, !dbg !9160
  call void @drawArc(float %70, float %add91, float %add92, i32 10), !dbg !9161
  call void @glPushMatrix(), !dbg !9162
  %75 = load float, float* %angle, align 4, !dbg !9163
  %76 = load float, float* %delta_angle, align 4, !dbg !9164
  %sub93 = fsub float %75, %76, !dbg !9165
  %call94 = call float @cosf(float %sub93) #5, !dbg !9166
  %77 = load float, float* %dist, align 4, !dbg !9167
  %mul95 = fmul float %call94, %77, !dbg !9168
  %78 = load float, float* %angle, align 4, !dbg !9169
  %79 = load float, float* %delta_angle, align 4, !dbg !9170
  %sub96 = fsub float %78, %79, !dbg !9171
  %call97 = call float @sinf(float %sub96) #5, !dbg !9172
  %80 = load float, float* %dist, align 4, !dbg !9173
  %mul98 = fmul float %call97, %80, !dbg !9174
  call void @glTranslatef(float %mul95, float %mul98, float 0.000000e+00), !dbg !9175
  %81 = load float, float* %angle, align 4, !dbg !9176
  %82 = load float, float* %delta_angle, align 4, !dbg !9176
  %sub99 = fsub float %81, %82, !dbg !9176
  %mul100 = fmul float %sub99, 0x404CA5DC20000000, !dbg !9176
  call void @glRotatef(float %mul100, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00), !dbg !9177
  call void @drawArrowHead(i32 1, i16 signext 5), !dbg !9178
  call void @glPopMatrix(), !dbg !9179
  %83 = load float, float* %angle, align 4, !dbg !9180
  %84 = load float, float* %delta_angle, align 4, !dbg !9181
  %add101 = fadd float %83, %84, !dbg !9182
  %call102 = call float @cosf(float %add101) #5, !dbg !9183
  %85 = load float, float* %dist, align 4, !dbg !9184
  %mul103 = fmul float %call102, %85, !dbg !9185
  %86 = load float, float* %angle, align 4, !dbg !9186
  %87 = load float, float* %delta_angle, align 4, !dbg !9187
  %add104 = fadd float %86, %87, !dbg !9188
  %call105 = call float @sinf(float %add104) #5, !dbg !9189
  %88 = load float, float* %dist, align 4, !dbg !9190
  %mul106 = fmul float %call105, %88, !dbg !9191
  call void @glTranslatef(float %mul103, float %mul106, float 0.000000e+00), !dbg !9192
  %89 = load float, float* %angle, align 4, !dbg !9193
  %90 = load float, float* %delta_angle, align 4, !dbg !9193
  %add107 = fadd float %89, %90, !dbg !9193
  %mul108 = fmul float %add107, 0x404CA5DC20000000, !dbg !9193
  call void @glRotatef(float %mul108, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00), !dbg !9194
  call void @drawArrowHead(i32 0, i16 signext 5), !dbg !9195
  %91 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !9196
  call void @glLineWidth(float 1.000000e+00), !dbg !9196
  br label %sw.epilog, !dbg !9197

sw.bb109:                                         ; preds = %if.end24
  call void @llvm.dbg.declare(metadata [3 x i8]* %col, metadata !9198, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.declare(metadata [3 x i8]* %col2, metadata !9202, metadata !DIExpression()), !dbg !9203
  %arraydecay110 = getelementptr inbounds [3 x i8], [3 x i8]* %col, i64 0, i64 0, !dbg !9204
  call void @UI_GetThemeColor3ubv(i32 24, i8* %arraydecay110), !dbg !9205
  %arrayidx111 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !9206
  %92 = load i32, i32* %arrayidx111, align 4, !dbg !9206
  %conv112 = sitofp i32 %92 to float, !dbg !9206
  %arrayidx113 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 1, !dbg !9207
  %93 = load i32, i32* %arrayidx113, align 4, !dbg !9207
  %conv114 = sitofp i32 %93 to float, !dbg !9207
  call void @glTranslatef(float %conv112, float %conv114, float 0.000000e+00), !dbg !9208
  %94 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !9209
  call void @glLineWidth(float 3.000000e+00), !dbg !9209
  %arraydecay115 = getelementptr inbounds [3 x i8], [3 x i8]* %col, i64 0, i64 0, !dbg !9210
  %arraydecay116 = getelementptr inbounds [3 x i8], [3 x i8]* %col2, i64 0, i64 0, !dbg !9211
  call void @UI_make_axis_color(i8* %arraydecay115, i8* %arraydecay116, i8 zeroext 88), !dbg !9212
  %arraydecay117 = getelementptr inbounds [3 x i8], [3 x i8]* %col2, i64 0, i64 0, !dbg !9213
  call void @glColor3ubv(i8* %arraydecay117), !dbg !9214
  call void @drawArrow(i32 3, i16 signext 5, i16 signext 10, i16 signext 5), !dbg !9215
  call void @drawArrow(i32 2, i16 signext 5, i16 signext 10, i16 signext 5), !dbg !9216
  %arraydecay118 = getelementptr inbounds [3 x i8], [3 x i8]* %col, i64 0, i64 0, !dbg !9217
  %arraydecay119 = getelementptr inbounds [3 x i8], [3 x i8]* %col2, i64 0, i64 0, !dbg !9218
  call void @UI_make_axis_color(i8* %arraydecay118, i8* %arraydecay119, i8 zeroext 89), !dbg !9219
  %arraydecay120 = getelementptr inbounds [3 x i8], [3 x i8]* %col2, i64 0, i64 0, !dbg !9220
  call void @glColor3ubv(i8* %arraydecay120), !dbg !9221
  call void @drawArrow(i32 0, i16 signext 5, i16 signext 10, i16 signext 5), !dbg !9222
  call void @drawArrow(i32 1, i16 signext 5, i16 signext 10, i16 signext 5), !dbg !9223
  %95 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !9224
  call void @glLineWidth(float 1.000000e+00), !dbg !9224
  br label %sw.epilog, !dbg !9225

sw.epilog:                                        ; preds = %if.end24, %sw.bb109, %sw.bb55, %sw.bb50, %sw.bb45, %sw.bb
  call void @glPopMatrix(), !dbg !9226
  br label %if.end121, !dbg !9227

if.end121:                                        ; preds = %sw.epilog, %land.lhs.true, %entry
  ret void, !dbg !9228
}

declare dso_local %struct.wmKeyMap* @WM_keymap_active(%struct.wmWindowManager*, %struct.wmKeyMap*) #2

declare dso_local void @initMouseInput(%struct.TransInfo*, %struct.MouseInput*, float*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @initSkinResize(%struct.TransInfo* %t) #0 !dbg !9229 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !9230, metadata !DIExpression()), !dbg !9231
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9232
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !9233
  store i32 4, i32* %mode, align 8, !dbg !9234
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9235
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 7, !dbg !9236
  store void (%struct.TransInfo*, i32*)* @applySkinResize, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !9237
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9238
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9239
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 16, !dbg !9240
  call void @initMouseInputMode(%struct.TransInfo* %2, %struct.MouseInput* %mouse, i32 3), !dbg !9241
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9242
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 1, !dbg !9243
  %5 = load i32, i32* %flag, align 4, !dbg !9244
  %or = or i32 %5, 512, !dbg !9244
  store i32 %or, i32* %flag, align 4, !dbg !9244
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9245
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 15, !dbg !9246
  %val_flag = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 5, !dbg !9247
  %arrayidx = getelementptr inbounds [3 x i16], [3 x i16]* %val_flag, i64 0, i64 0, !dbg !9245
  %7 = load i16, i16* %arrayidx, align 8, !dbg !9248
  %conv = sext i16 %7 to i32, !dbg !9248
  %or1 = or i32 %conv, 1, !dbg !9248
  %conv2 = trunc i32 %or1 to i16, !dbg !9248
  store i16 %conv2, i16* %arrayidx, align 8, !dbg !9248
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9249
  %num3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 15, !dbg !9250
  %val_flag4 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num3, i32 0, i32 5, !dbg !9251
  %arrayidx5 = getelementptr inbounds [3 x i16], [3 x i16]* %val_flag4, i64 0, i64 1, !dbg !9249
  %9 = load i16, i16* %arrayidx5, align 2, !dbg !9252
  %conv6 = sext i16 %9 to i32, !dbg !9252
  %or7 = or i32 %conv6, 1, !dbg !9252
  %conv8 = trunc i32 %or7 to i16, !dbg !9252
  store i16 %conv8, i16* %arrayidx5, align 2, !dbg !9252
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9253
  %num9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 15, !dbg !9254
  %val_flag10 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num9, i32 0, i32 5, !dbg !9255
  %arrayidx11 = getelementptr inbounds [3 x i16], [3 x i16]* %val_flag10, i64 0, i64 2, !dbg !9253
  %11 = load i16, i16* %arrayidx11, align 4, !dbg !9256
  %conv12 = sext i16 %11 to i32, !dbg !9256
  %or13 = or i32 %conv12, 1, !dbg !9256
  %conv14 = trunc i32 %or13 to i16, !dbg !9256
  store i16 %conv14, i16* %arrayidx11, align 4, !dbg !9256
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9257
  %num15 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 15, !dbg !9258
  %flag16 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num15, i32 0, i32 4, !dbg !9259
  %13 = load i16, i16* %flag16, align 2, !dbg !9260
  %conv17 = sext i16 %13 to i32, !dbg !9260
  %or18 = or i32 %conv17, 1, !dbg !9260
  %conv19 = trunc i32 %or18 to i16, !dbg !9260
  store i16 %conv19, i16* %flag16, align 2, !dbg !9260
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9261
  %obedit = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 63, !dbg !9263
  %15 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9263
  %tobool = icmp ne %struct.Object* %15, null, !dbg !9261
  br i1 %tobool, label %if.end, label %if.then, !dbg !9264

if.then:                                          ; preds = %entry
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9265
  %flag20 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 1, !dbg !9267
  %17 = load i32, i32* %flag20, align 4, !dbg !9268
  %or21 = or i32 %17, 1024, !dbg !9268
  store i32 %or21, i32* %flag20, align 4, !dbg !9268
  br label %if.end, !dbg !9269

if.end:                                           ; preds = %if.then, %entry
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9270
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 24, !dbg !9271
  store i16 2, i16* %idx_max, align 2, !dbg !9272
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9273
  %num22 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 15, !dbg !9274
  %idx_max23 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num22, i32 0, i32 0, !dbg !9275
  store i16 2, i16* %idx_max23, align 8, !dbg !9276
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9277
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 25, !dbg !9278
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !9277
  store float 0.000000e+00, float* %arrayidx24, align 4, !dbg !9279
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9280
  %snap25 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 25, !dbg !9281
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %snap25, i64 0, i64 1, !dbg !9280
  store float 0x3FB99999A0000000, float* %arrayidx26, align 4, !dbg !9282
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9283
  %snap27 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 25, !dbg !9284
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %snap27, i64 0, i64 1, !dbg !9283
  %23 = load float, float* %arrayidx28, align 4, !dbg !9283
  %mul = fmul float %23, 0x3FB99999A0000000, !dbg !9285
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9286
  %snap29 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 25, !dbg !9287
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %snap29, i64 0, i64 2, !dbg !9286
  store float %mul, float* %arrayidx30, align 4, !dbg !9288
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9289
  %num31 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 15, !dbg !9290
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num31, i32 0, i32 8, !dbg !9291
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !9289
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9292
  %snap32 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 25, !dbg !9293
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %snap32, i64 0, i64 1, !dbg !9292
  %27 = load float, float* %arrayidx33, align 4, !dbg !9292
  call void @copy_v3_fl(float* %arraydecay, float %27), !dbg !9294
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9295
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 56, !dbg !9296
  %29 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9296
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %29, i32 0, i32 38, !dbg !9297
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !9298
  %30 = load i8, i8* %system, align 4, !dbg !9298
  %conv34 = zext i8 %30 to i32, !dbg !9295
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9299
  %num35 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %31, i32 0, i32 15, !dbg !9300
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num35, i32 0, i32 1, !dbg !9301
  store i32 %conv34, i32* %unit_sys, align 4, !dbg !9302
  %32 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9303
  %num36 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %32, i32 0, i32 15, !dbg !9304
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num36, i32 0, i32 2, !dbg !9305
  %arrayidx37 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !9303
  store i32 0, i32* %arrayidx37, align 8, !dbg !9306
  %33 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9307
  %num38 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %33, i32 0, i32 15, !dbg !9308
  %unit_type39 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num38, i32 0, i32 2, !dbg !9309
  %arrayidx40 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type39, i64 0, i64 1, !dbg !9307
  store i32 0, i32* %arrayidx40, align 4, !dbg !9310
  %34 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9311
  %num41 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %34, i32 0, i32 15, !dbg !9312
  %unit_type42 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num41, i32 0, i32 2, !dbg !9313
  %arrayidx43 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type42, i64 0, i64 2, !dbg !9311
  store i32 0, i32* %arrayidx43, align 8, !dbg !9314
  ret void, !dbg !9315
}

; Function Attrs: noinline nounwind uwtable
define internal void @initToSphere(%struct.TransInfo* %t) #0 !dbg !9316 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %td = alloca %struct.TransData*, align 8
  %i = alloca i32, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !9317, metadata !DIExpression()), !dbg !9318
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !9319, metadata !DIExpression()), !dbg !9320
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9321
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !9322
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !9322
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !9320
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9323, metadata !DIExpression()), !dbg !9324
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9325
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 0, !dbg !9326
  store i32 5, i32* %mode, align 8, !dbg !9327
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9328
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 7, !dbg !9329
  store void (%struct.TransInfo*, i32*)* @applyToSphere, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !9330
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9331
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9332
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 16, !dbg !9333
  call void @initMouseInputMode(%struct.TransInfo* %4, %struct.MouseInput* %mouse, i32 8), !dbg !9334
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9335
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 24, !dbg !9336
  store i16 0, i16* %idx_max, align 2, !dbg !9337
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9338
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 15, !dbg !9339
  %idx_max1 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 0, !dbg !9340
  store i16 0, i16* %idx_max1, align 8, !dbg !9341
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9342
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 25, !dbg !9343
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !9342
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !9344
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9345
  %snap2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 25, !dbg !9346
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %snap2, i64 0, i64 1, !dbg !9345
  store float 0x3FB99999A0000000, float* %arrayidx3, align 4, !dbg !9347
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9348
  %snap4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 25, !dbg !9349
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %snap4, i64 0, i64 1, !dbg !9348
  %11 = load float, float* %arrayidx5, align 4, !dbg !9348
  %mul = fmul float %11, 0x3FB99999A0000000, !dbg !9350
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9351
  %snap6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 25, !dbg !9352
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %snap6, i64 0, i64 2, !dbg !9351
  store float %mul, float* %arrayidx7, align 4, !dbg !9353
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9354
  %num8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 15, !dbg !9355
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num8, i32 0, i32 8, !dbg !9356
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !9354
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9357
  %snap9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 25, !dbg !9358
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %snap9, i64 0, i64 1, !dbg !9357
  %15 = load float, float* %arrayidx10, align 4, !dbg !9357
  call void @copy_v3_fl(float* %arraydecay, float %15), !dbg !9359
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9360
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 56, !dbg !9361
  %17 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9361
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %17, i32 0, i32 38, !dbg !9362
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !9363
  %18 = load i8, i8* %system, align 4, !dbg !9363
  %conv = zext i8 %18 to i32, !dbg !9360
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9364
  %num11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 15, !dbg !9365
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num11, i32 0, i32 1, !dbg !9366
  store i32 %conv, i32* %unit_sys, align 4, !dbg !9367
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9368
  %num12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 15, !dbg !9369
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num12, i32 0, i32 2, !dbg !9370
  %arrayidx13 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !9368
  store i32 0, i32* %arrayidx13, align 8, !dbg !9371
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9372
  %num14 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 15, !dbg !9373
  %val_flag = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num14, i32 0, i32 5, !dbg !9374
  %arrayidx15 = getelementptr inbounds [3 x i16], [3 x i16]* %val_flag, i64 0, i64 0, !dbg !9372
  %22 = load i16, i16* %arrayidx15, align 8, !dbg !9375
  %conv16 = sext i16 %22 to i32, !dbg !9375
  %or = or i32 %conv16, 3, !dbg !9375
  %conv17 = trunc i32 %or to i16, !dbg !9375
  store i16 %conv17, i16* %arrayidx15, align 8, !dbg !9375
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9376
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 1, !dbg !9377
  %24 = load i32, i32* %flag, align 4, !dbg !9378
  %or18 = or i32 %24, 256, !dbg !9378
  store i32 %or18, i32* %flag, align 4, !dbg !9378
  store i32 0, i32* %i, align 4, !dbg !9379
  br label %for.cond, !dbg !9381

for.cond:                                         ; preds = %for.inc, %entry
  %25 = load i32, i32* %i, align 4, !dbg !9382
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9384
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 9, !dbg !9385
  %27 = load i32, i32* %total, align 8, !dbg !9385
  %cmp = icmp slt i32 %25, %27, !dbg !9386
  br i1 %cmp, label %for.body, label %for.end, !dbg !9387

for.body:                                         ; preds = %for.cond
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9388
  %center = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 20, !dbg !9390
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !9388
  %29 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !9391
  %iloc = getelementptr inbounds %struct.TransData, %struct.TransData* %29, i32 0, i32 4, !dbg !9392
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %iloc, i64 0, i64 0, !dbg !9391
  %call = call float @len_v3v3(float* %arraydecay20, float* %arraydecay21), !dbg !9393
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9394
  %val = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %30, i32 0, i32 5, !dbg !9395
  %31 = load float, float* %val, align 4, !dbg !9396
  %add = fadd float %31, %call, !dbg !9396
  store float %add, float* %val, align 4, !dbg !9396
  br label %for.inc, !dbg !9397

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %i, align 4, !dbg !9398
  %inc = add nsw i32 %32, 1, !dbg !9398
  store i32 %inc, i32* %i, align 4, !dbg !9398
  %33 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !9399
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %33, i32 1, !dbg !9399
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !9399
  br label %for.cond, !dbg !9400, !llvm.loop !9401

for.end:                                          ; preds = %for.cond
  %34 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9403
  %total22 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %34, i32 0, i32 9, !dbg !9404
  %35 = load i32, i32* %total22, align 8, !dbg !9404
  %conv23 = sitofp i32 %35 to float, !dbg !9405
  %36 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9406
  %val24 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %36, i32 0, i32 5, !dbg !9407
  %37 = load float, float* %val24, align 4, !dbg !9408
  %div = fdiv float %37, %conv23, !dbg !9408
  store float %div, float* %val24, align 4, !dbg !9408
  ret void, !dbg !9409
}

; Function Attrs: noinline nounwind uwtable
define internal void @initShear(%struct.TransInfo* %t) #0 !dbg !9410 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !9411, metadata !DIExpression()), !dbg !9412
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9413
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !9414
  store i32 6, i32* %mode, align 8, !dbg !9415
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9416
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 7, !dbg !9417
  store void (%struct.TransInfo*, i32*)* @applyShear, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !9418
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9419
  %handleEvent = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 8, !dbg !9420
  store i32 (%struct.TransInfo*, %struct.wmEvent*)* @handleEventShear, i32 (%struct.TransInfo*, %struct.wmEvent*)** %handleEvent, align 8, !dbg !9421
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9422
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 16, !dbg !9423
  call void @setInputPostFct(%struct.MouseInput* %mouse, void (%struct.TransInfo*, float*)* @postInputShear), !dbg !9424
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9425
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9426
  %mouse1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 16, !dbg !9427
  call void @initMouseInputMode(%struct.TransInfo* %4, %struct.MouseInput* %mouse1, i32 9), !dbg !9428
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9429
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 24, !dbg !9430
  store i16 0, i16* %idx_max, align 2, !dbg !9431
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9432
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 15, !dbg !9433
  %idx_max2 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 0, !dbg !9434
  store i16 0, i16* %idx_max2, align 8, !dbg !9435
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9436
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 25, !dbg !9437
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !9436
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !9438
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9439
  %snap3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 25, !dbg !9440
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %snap3, i64 0, i64 1, !dbg !9439
  store float 0x3FB99999A0000000, float* %arrayidx4, align 4, !dbg !9441
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9442
  %snap5 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 25, !dbg !9443
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %snap5, i64 0, i64 1, !dbg !9442
  %11 = load float, float* %arrayidx6, align 4, !dbg !9442
  %mul = fmul float %11, 0x3FB99999A0000000, !dbg !9444
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9445
  %snap7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 25, !dbg !9446
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %snap7, i64 0, i64 2, !dbg !9445
  store float %mul, float* %arrayidx8, align 4, !dbg !9447
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9448
  %num9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 15, !dbg !9449
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num9, i32 0, i32 8, !dbg !9450
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !9448
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9451
  %snap10 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 25, !dbg !9452
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %snap10, i64 0, i64 1, !dbg !9451
  %15 = load float, float* %arrayidx11, align 4, !dbg !9451
  call void @copy_v3_fl(float* %arraydecay, float %15), !dbg !9453
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9454
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 56, !dbg !9455
  %17 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9455
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %17, i32 0, i32 38, !dbg !9456
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !9457
  %18 = load i8, i8* %system, align 4, !dbg !9457
  %conv = zext i8 %18 to i32, !dbg !9454
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9458
  %num12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 15, !dbg !9459
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num12, i32 0, i32 1, !dbg !9460
  store i32 %conv, i32* %unit_sys, align 4, !dbg !9461
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9462
  %num13 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 15, !dbg !9463
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num13, i32 0, i32 2, !dbg !9464
  %arrayidx14 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !9462
  store i32 0, i32* %arrayidx14, align 8, !dbg !9465
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9466
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 1, !dbg !9467
  %22 = load i32, i32* %flag, align 4, !dbg !9468
  %or = or i32 %22, 256, !dbg !9468
  store i32 %or, i32* %flag, align 4, !dbg !9468
  ret void, !dbg !9469
}

; Function Attrs: noinline nounwind uwtable
define internal void @initBend(%struct.TransInfo* %t) #0 !dbg !9470 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %mval_fl = alloca [2 x float], align 4
  %curs = alloca float*, align 8
  %tvec = alloca [3 x float], align 4
  %data = alloca %struct.BendCustomData*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !9471, metadata !DIExpression()), !dbg !9472
  call void @llvm.dbg.declare(metadata [2 x float]* %mval_fl, metadata !9473, metadata !DIExpression()), !dbg !9474
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %mval_fl, i64 0, i64 0, !dbg !9475
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9476
  %mval = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 61, !dbg !9476
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !9476
  %1 = load i32, i32* %arrayidx, align 8, !dbg !9476
  %conv = sitofp i32 %1 to float, !dbg !9476
  store float %conv, float* %arrayinit.begin, align 4, !dbg !9475
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !9475
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9476
  %mval1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 61, !dbg !9476
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %mval1, i64 0, i64 1, !dbg !9476
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !9476
  %conv3 = sitofp i32 %3 to float, !dbg !9476
  store float %conv3, float* %arrayinit.element, align 4, !dbg !9475
  call void @llvm.dbg.declare(metadata float** %curs, metadata !9477, metadata !DIExpression()), !dbg !9478
  call void @llvm.dbg.declare(metadata [3 x float]* %tvec, metadata !9479, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.declare(metadata %struct.BendCustomData** %data, metadata !9481, metadata !DIExpression()), !dbg !9490
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9491
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 0, !dbg !9492
  store i32 7, i32* %mode, align 8, !dbg !9493
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9494
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 7, !dbg !9495
  store void (%struct.TransInfo*, i32*)* @Bend, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !9496
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9497
  %handleEvent = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 8, !dbg !9498
  store i32 (%struct.TransInfo*, %struct.wmEvent*)* @handleEventBend, i32 (%struct.TransInfo*, %struct.wmEvent*)** %handleEvent, align 8, !dbg !9499
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9500
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 16, !dbg !9501
  call void @setInputPostFct(%struct.MouseInput* %mouse, void (%struct.TransInfo*, float*)* @postInputRotation), !dbg !9502
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9503
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9504
  %mouse4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 16, !dbg !9505
  call void @initMouseInputMode(%struct.TransInfo* %8, %struct.MouseInput* %mouse4, i32 6), !dbg !9506
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9507
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 24, !dbg !9508
  store i16 1, i16* %idx_max, align 2, !dbg !9509
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9510
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 15, !dbg !9511
  %idx_max5 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 0, !dbg !9512
  store i16 1, i16* %idx_max5, align 8, !dbg !9513
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9514
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 25, !dbg !9515
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !9514
  store float 0.000000e+00, float* %arrayidx6, align 4, !dbg !9516
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9517
  %snap7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 25, !dbg !9518
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %snap7, i64 0, i64 1, !dbg !9517
  store float 0x3FB6571840000000, float* %arrayidx8, align 4, !dbg !9519
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9520
  %snap9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 25, !dbg !9521
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %snap9, i64 0, i64 2, !dbg !9520
  store float 0x3F91DF46A0000000, float* %arrayidx10, align 4, !dbg !9522
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9523
  %num11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 15, !dbg !9524
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num11, i32 0, i32 8, !dbg !9525
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !9523
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9526
  %snap12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 25, !dbg !9527
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %snap12, i64 0, i64 1, !dbg !9526
  %17 = load float, float* %arrayidx13, align 4, !dbg !9526
  call void @copy_v3_fl(float* %arraydecay, float %17), !dbg !9528
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9529
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 56, !dbg !9530
  %19 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9530
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %19, i32 0, i32 38, !dbg !9531
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !9532
  %20 = load i8, i8* %system, align 4, !dbg !9532
  %conv14 = zext i8 %20 to i32, !dbg !9529
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9533
  %num15 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 15, !dbg !9534
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num15, i32 0, i32 1, !dbg !9535
  store i32 %conv14, i32* %unit_sys, align 4, !dbg !9536
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9537
  %scene16 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 56, !dbg !9538
  %23 = load %struct.Scene*, %struct.Scene** %scene16, align 8, !dbg !9538
  %unit17 = getelementptr inbounds %struct.Scene, %struct.Scene* %23, i32 0, i32 38, !dbg !9539
  %system_rotation = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit17, i32 0, i32 2, !dbg !9540
  %24 = load i8, i8* %system_rotation, align 1, !dbg !9540
  %conv18 = zext i8 %24 to i32, !dbg !9537
  %cmp = icmp eq i32 %conv18, 2, !dbg !9541
  %conv19 = zext i1 %cmp to i32, !dbg !9541
  %conv20 = trunc i32 %conv19 to i8, !dbg !9542
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9543
  %num21 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 15, !dbg !9544
  %unit_use_radians = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num21, i32 0, i32 3, !dbg !9545
  store i8 %conv20, i8* %unit_use_radians, align 4, !dbg !9546
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9547
  %num22 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 15, !dbg !9548
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num22, i32 0, i32 2, !dbg !9549
  %arrayidx23 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !9547
  store i32 5, i32* %arrayidx23, align 8, !dbg !9550
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9551
  %num24 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %27, i32 0, i32 15, !dbg !9552
  %unit_type25 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num24, i32 0, i32 2, !dbg !9553
  %arrayidx26 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type25, i64 0, i64 1, !dbg !9551
  store i32 1, i32* %arrayidx26, align 4, !dbg !9554
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9555
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 1, !dbg !9556
  %29 = load i32, i32* %flag, align 4, !dbg !9557
  %or = or i32 %29, 256, !dbg !9557
  store i32 %or, i32* %flag, align 4, !dbg !9557
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9558
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9559
  %center = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %31, i32 0, i32 20, !dbg !9560
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !9559
  call void @calculateCenterCursor(%struct.TransInfo* %30, float* %arraydecay27), !dbg !9561
  %32 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9562
  %val = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %32, i32 0, i32 5, !dbg !9563
  store float 0.000000e+00, float* %val, align 4, !dbg !9564
  %33 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9565
  %call = call i8* %33(i64 52, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__func__.initBend, i64 0, i64 0)), !dbg !9565
  %34 = bitcast i8* %call to %struct.BendCustomData*, !dbg !9565
  store %struct.BendCustomData* %34, %struct.BendCustomData** %data, align 8, !dbg !9566
  %35 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9567
  %scene28 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %35, i32 0, i32 56, !dbg !9568
  %36 = load %struct.Scene*, %struct.Scene** %scene28, align 8, !dbg !9568
  %37 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9569
  %view = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %37, i32 0, i32 52, !dbg !9570
  %38 = load i8*, i8** %view, align 8, !dbg !9570
  %39 = bitcast i8* %38 to %struct.View3D*, !dbg !9569
  %call29 = call float* @ED_view3d_cursor3d_get(%struct.Scene* %36, %struct.View3D* %39), !dbg !9571
  store float* %call29, float** %curs, align 8, !dbg !9572
  %40 = load %struct.BendCustomData*, %struct.BendCustomData** %data, align 8, !dbg !9573
  %warp_sta = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %40, i32 0, i32 0, !dbg !9574
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %warp_sta, i64 0, i64 0, !dbg !9573
  %41 = load float*, float** %curs, align 8, !dbg !9575
  call void @copy_v3_v3(float* %arraydecay30, float* %41), !dbg !9576
  %42 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9577
  %ar = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %42, i32 0, i32 55, !dbg !9578
  %43 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !9578
  %44 = load float*, float** %curs, align 8, !dbg !9579
  %arraydecay31 = getelementptr inbounds [2 x float], [2 x float]* %mval_fl, i64 0, i64 0, !dbg !9580
  %45 = load %struct.BendCustomData*, %struct.BendCustomData** %data, align 8, !dbg !9581
  %warp_end = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %45, i32 0, i32 1, !dbg !9582
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %warp_end, i64 0, i64 0, !dbg !9581
  call void @ED_view3d_win_to_3d(%struct.ARegion* %43, float* %44, float* %arraydecay31, float* %arraydecay32), !dbg !9583
  %46 = load %struct.BendCustomData*, %struct.BendCustomData** %data, align 8, !dbg !9584
  %warp_nor = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %46, i32 0, i32 2, !dbg !9585
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %warp_nor, i64 0, i64 0, !dbg !9584
  %47 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9586
  %viewinv = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %47, i32 0, i32 28, !dbg !9587
  %arrayidx34 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 2, !dbg !9586
  %arraydecay35 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx34, i64 0, i64 0, !dbg !9586
  call void @copy_v3_v3(float* %arraydecay33, float* %arraydecay35), !dbg !9588
  %48 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9589
  %flag36 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %48, i32 0, i32 1, !dbg !9591
  %49 = load i32, i32* %flag36, align 4, !dbg !9591
  %and = and i32 %49, 2, !dbg !9592
  %tobool = icmp ne i32 %and, 0, !dbg !9592
  br i1 %tobool, label %if.then, label %if.end, !dbg !9593

if.then:                                          ; preds = %entry
  %50 = load %struct.BendCustomData*, %struct.BendCustomData** %data, align 8, !dbg !9594
  %warp_sta37 = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %50, i32 0, i32 0, !dbg !9596
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %warp_sta37, i64 0, i64 0, !dbg !9594
  %51 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9597
  %obedit = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %51, i32 0, i32 63, !dbg !9598
  %52 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9598
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 47, !dbg !9599
  %arrayidx39 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 3, !dbg !9597
  %arraydecay40 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx39, i64 0, i64 0, !dbg !9597
  call void @sub_v3_v3(float* %arraydecay38, float* %arraydecay40), !dbg !9600
  %53 = load %struct.BendCustomData*, %struct.BendCustomData** %data, align 8, !dbg !9601
  %warp_end41 = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %53, i32 0, i32 1, !dbg !9602
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %warp_end41, i64 0, i64 0, !dbg !9601
  %54 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9603
  %obedit43 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %54, i32 0, i32 63, !dbg !9604
  %55 = load %struct.Object*, %struct.Object** %obedit43, align 8, !dbg !9604
  %obmat44 = getelementptr inbounds %struct.Object, %struct.Object* %55, i32 0, i32 47, !dbg !9605
  %arrayidx45 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat44, i64 0, i64 3, !dbg !9603
  %arraydecay46 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx45, i64 0, i64 0, !dbg !9603
  call void @sub_v3_v3(float* %arraydecay42, float* %arraydecay46), !dbg !9606
  br label %if.end, !dbg !9607

if.end:                                           ; preds = %if.then, %entry
  %56 = load %struct.BendCustomData*, %struct.BendCustomData** %data, align 8, !dbg !9608
  %warp_nor47 = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %56, i32 0, i32 2, !dbg !9609
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %warp_nor47, i64 0, i64 0, !dbg !9608
  %call49 = call float @normalize_v3(float* %arraydecay48), !dbg !9610
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !9611
  %57 = load %struct.BendCustomData*, %struct.BendCustomData** %data, align 8, !dbg !9612
  %warp_end51 = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %57, i32 0, i32 1, !dbg !9613
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %warp_end51, i64 0, i64 0, !dbg !9612
  %58 = load %struct.BendCustomData*, %struct.BendCustomData** %data, align 8, !dbg !9614
  %warp_sta53 = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %58, i32 0, i32 0, !dbg !9615
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %warp_sta53, i64 0, i64 0, !dbg !9614
  call void @sub_v3_v3v3(float* %arraydecay50, float* %arraydecay52, float* %arraydecay54), !dbg !9616
  %59 = load %struct.BendCustomData*, %struct.BendCustomData** %data, align 8, !dbg !9617
  %warp_tan = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %59, i32 0, i32 3, !dbg !9618
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %warp_tan, i64 0, i64 0, !dbg !9617
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !9619
  %60 = load %struct.BendCustomData*, %struct.BendCustomData** %data, align 8, !dbg !9620
  %warp_nor57 = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %60, i32 0, i32 2, !dbg !9621
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %warp_nor57, i64 0, i64 0, !dbg !9620
  call void @cross_v3_v3v3(float* %arraydecay55, float* %arraydecay56, float* %arraydecay58), !dbg !9622
  %61 = load %struct.BendCustomData*, %struct.BendCustomData** %data, align 8, !dbg !9623
  %warp_tan59 = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %61, i32 0, i32 3, !dbg !9624
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %warp_tan59, i64 0, i64 0, !dbg !9623
  %call61 = call float @normalize_v3(float* %arraydecay60), !dbg !9625
  %62 = load %struct.BendCustomData*, %struct.BendCustomData** %data, align 8, !dbg !9626
  %warp_end62 = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %62, i32 0, i32 1, !dbg !9627
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %warp_end62, i64 0, i64 0, !dbg !9626
  %63 = load %struct.BendCustomData*, %struct.BendCustomData** %data, align 8, !dbg !9628
  %warp_sta64 = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %63, i32 0, i32 0, !dbg !9629
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %warp_sta64, i64 0, i64 0, !dbg !9628
  %call66 = call float @len_v3v3(float* %arraydecay63, float* %arraydecay65), !dbg !9630
  %64 = load %struct.BendCustomData*, %struct.BendCustomData** %data, align 8, !dbg !9631
  %warp_init_dist = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %64, i32 0, i32 4, !dbg !9632
  store float %call66, float* %warp_init_dist, align 4, !dbg !9633
  %65 = load %struct.BendCustomData*, %struct.BendCustomData** %data, align 8, !dbg !9634
  %66 = bitcast %struct.BendCustomData* %65 to i8*, !dbg !9634
  %67 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9635
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %67, i32 0, i32 40, !dbg !9636
  store i8* %66, i8** %customData, align 8, !dbg !9637
  ret void, !dbg !9638
}

; Function Attrs: noinline nounwind uwtable
define internal void @initShrinkFatten(%struct.TransInfo* %t) #0 !dbg !9639 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !9640, metadata !DIExpression()), !dbg !9641
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9642
  %obedit = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 63, !dbg !9644
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9644
  %cmp = icmp eq %struct.Object* %1, null, !dbg !9645
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9646

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9647
  %obedit1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 63, !dbg !9648
  %3 = load %struct.Object*, %struct.Object** %obedit1, align 8, !dbg !9648
  %type = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !9649
  %4 = load i16, i16* %type, align 8, !dbg !9649
  %conv = sext i16 %4 to i32, !dbg !9647
  %cmp2 = icmp ne i32 %conv, 1, !dbg !9650
  br i1 %cmp2, label %if.then, label %if.else, !dbg !9651

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9652
  call void @initResize(%struct.TransInfo* %5), !dbg !9654
  br label %if.end, !dbg !9655

if.else:                                          ; preds = %lor.lhs.false
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9656
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 0, !dbg !9658
  store i32 8, i32* %mode, align 8, !dbg !9659
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9660
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 7, !dbg !9661
  store void (%struct.TransInfo*, i32*)* @applyShrinkFatten, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !9662
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9663
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9664
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 16, !dbg !9665
  call void @initMouseInputMode(%struct.TransInfo* %8, %struct.MouseInput* %mouse, i32 11), !dbg !9666
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9667
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 24, !dbg !9668
  store i16 0, i16* %idx_max, align 2, !dbg !9669
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9670
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 15, !dbg !9671
  %idx_max4 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 0, !dbg !9672
  store i16 0, i16* %idx_max4, align 8, !dbg !9673
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9674
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 25, !dbg !9675
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !9674
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !9676
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9677
  %snap5 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 25, !dbg !9678
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %snap5, i64 0, i64 1, !dbg !9677
  store float 1.000000e+00, float* %arrayidx6, align 4, !dbg !9679
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9680
  %snap7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 25, !dbg !9681
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %snap7, i64 0, i64 1, !dbg !9680
  %15 = load float, float* %arrayidx8, align 4, !dbg !9680
  %mul = fmul float %15, 0x3FB99999A0000000, !dbg !9682
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9683
  %snap9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 25, !dbg !9684
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %snap9, i64 0, i64 2, !dbg !9683
  store float %mul, float* %arrayidx10, align 4, !dbg !9685
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9686
  %num11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 15, !dbg !9687
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num11, i32 0, i32 8, !dbg !9688
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !9686
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9689
  %snap12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 25, !dbg !9690
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %snap12, i64 0, i64 1, !dbg !9689
  %19 = load float, float* %arrayidx13, align 4, !dbg !9689
  call void @copy_v3_fl(float* %arraydecay, float %19), !dbg !9691
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9692
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 56, !dbg !9693
  %21 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9693
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %21, i32 0, i32 38, !dbg !9694
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !9695
  %22 = load i8, i8* %system, align 4, !dbg !9695
  %conv14 = zext i8 %22 to i32, !dbg !9692
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9696
  %num15 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 15, !dbg !9697
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num15, i32 0, i32 1, !dbg !9698
  store i32 %conv14, i32* %unit_sys, align 4, !dbg !9699
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9700
  %num16 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 15, !dbg !9701
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num16, i32 0, i32 2, !dbg !9702
  %arrayidx17 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !9700
  store i32 1, i32* %arrayidx17, align 8, !dbg !9703
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9704
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 1, !dbg !9705
  %26 = load i32, i32* %flag, align 4, !dbg !9706
  %or = or i32 %26, 256, !dbg !9706
  store i32 %or, i32* %flag, align 4, !dbg !9706
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9707
}

; Function Attrs: noinline nounwind uwtable
define internal void @initTilt(%struct.TransInfo* %t) #0 !dbg !9708 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !9709, metadata !DIExpression()), !dbg !9710
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9711
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !9712
  store i32 9, i32* %mode, align 8, !dbg !9713
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9714
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 7, !dbg !9715
  store void (%struct.TransInfo*, i32*)* @applyTilt, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !9716
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9717
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9718
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 16, !dbg !9719
  call void @initMouseInputMode(%struct.TransInfo* %2, %struct.MouseInput* %mouse, i32 5), !dbg !9720
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9721
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 24, !dbg !9722
  store i16 0, i16* %idx_max, align 2, !dbg !9723
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9724
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 15, !dbg !9725
  %idx_max1 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 0, !dbg !9726
  store i16 0, i16* %idx_max1, align 8, !dbg !9727
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9728
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 25, !dbg !9729
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !9728
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !9730
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9731
  %snap2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 25, !dbg !9732
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %snap2, i64 0, i64 1, !dbg !9731
  store float 0x3FB6571840000000, float* %arrayidx3, align 4, !dbg !9733
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9734
  %snap4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 25, !dbg !9735
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %snap4, i64 0, i64 2, !dbg !9734
  store float 0x3F91DF46A0000000, float* %arrayidx5, align 4, !dbg !9736
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9737
  %num6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 15, !dbg !9738
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num6, i32 0, i32 8, !dbg !9739
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !9737
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9740
  %snap7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 25, !dbg !9741
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %snap7, i64 0, i64 2, !dbg !9740
  %11 = load float, float* %arrayidx8, align 4, !dbg !9740
  call void @copy_v3_fl(float* %arraydecay, float %11), !dbg !9742
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9743
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 56, !dbg !9744
  %13 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9744
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 38, !dbg !9745
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !9746
  %14 = load i8, i8* %system, align 4, !dbg !9746
  %conv = zext i8 %14 to i32, !dbg !9743
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9747
  %num9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 15, !dbg !9748
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num9, i32 0, i32 1, !dbg !9749
  store i32 %conv, i32* %unit_sys, align 4, !dbg !9750
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9751
  %scene10 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 56, !dbg !9752
  %17 = load %struct.Scene*, %struct.Scene** %scene10, align 8, !dbg !9752
  %unit11 = getelementptr inbounds %struct.Scene, %struct.Scene* %17, i32 0, i32 38, !dbg !9753
  %system_rotation = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit11, i32 0, i32 2, !dbg !9754
  %18 = load i8, i8* %system_rotation, align 1, !dbg !9754
  %conv12 = zext i8 %18 to i32, !dbg !9751
  %cmp = icmp eq i32 %conv12, 2, !dbg !9755
  %conv13 = zext i1 %cmp to i32, !dbg !9755
  %conv14 = trunc i32 %conv13 to i8, !dbg !9756
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9757
  %num15 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 15, !dbg !9758
  %unit_use_radians = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num15, i32 0, i32 3, !dbg !9759
  store i8 %conv14, i8* %unit_use_radians, align 4, !dbg !9760
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9761
  %num16 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 15, !dbg !9762
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num16, i32 0, i32 2, !dbg !9763
  %arrayidx17 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !9761
  store i32 5, i32* %arrayidx17, align 8, !dbg !9764
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9765
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 1, !dbg !9766
  %22 = load i32, i32* %flag, align 4, !dbg !9767
  %or = or i32 %22, 4194560, !dbg !9767
  store i32 %or, i32* %flag, align 4, !dbg !9767
  ret void, !dbg !9768
}

; Function Attrs: noinline nounwind uwtable
define internal void @initCurveShrinkFatten(%struct.TransInfo* %t) #0 !dbg !9769 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !9770, metadata !DIExpression()), !dbg !9771
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9772
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !9773
  store i32 16, i32* %mode, align 8, !dbg !9774
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9775
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 7, !dbg !9776
  store void (%struct.TransInfo*, i32*)* @applyCurveShrinkFatten, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !9777
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9778
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9779
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 16, !dbg !9780
  call void @initMouseInputMode(%struct.TransInfo* %2, %struct.MouseInput* %mouse, i32 2), !dbg !9781
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9782
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 24, !dbg !9783
  store i16 0, i16* %idx_max, align 2, !dbg !9784
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9785
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 15, !dbg !9786
  %idx_max1 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 0, !dbg !9787
  store i16 0, i16* %idx_max1, align 8, !dbg !9788
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9789
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 25, !dbg !9790
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !9789
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !9791
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9792
  %snap2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 25, !dbg !9793
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %snap2, i64 0, i64 1, !dbg !9792
  store float 0x3FB99999A0000000, float* %arrayidx3, align 4, !dbg !9794
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9795
  %snap4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 25, !dbg !9796
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %snap4, i64 0, i64 1, !dbg !9795
  %9 = load float, float* %arrayidx5, align 4, !dbg !9795
  %mul = fmul float %9, 0x3FB99999A0000000, !dbg !9797
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9798
  %snap6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 25, !dbg !9799
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %snap6, i64 0, i64 2, !dbg !9798
  store float %mul, float* %arrayidx7, align 4, !dbg !9800
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9801
  %num8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 15, !dbg !9802
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num8, i32 0, i32 8, !dbg !9803
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !9801
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9804
  %snap9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 25, !dbg !9805
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %snap9, i64 0, i64 1, !dbg !9804
  %13 = load float, float* %arrayidx10, align 4, !dbg !9804
  call void @copy_v3_fl(float* %arraydecay, float %13), !dbg !9806
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9807
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 56, !dbg !9808
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9808
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %15, i32 0, i32 38, !dbg !9809
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !9810
  %16 = load i8, i8* %system, align 4, !dbg !9810
  %conv = zext i8 %16 to i32, !dbg !9807
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9811
  %num11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 15, !dbg !9812
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num11, i32 0, i32 1, !dbg !9813
  store i32 %conv, i32* %unit_sys, align 4, !dbg !9814
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9815
  %num12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 15, !dbg !9816
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num12, i32 0, i32 2, !dbg !9817
  %arrayidx13 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !9815
  store i32 0, i32* %arrayidx13, align 8, !dbg !9818
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9819
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 1, !dbg !9820
  %20 = load i32, i32* %flag, align 4, !dbg !9821
  %or = or i32 %20, 1024, !dbg !9821
  store i32 %or, i32* %flag, align 4, !dbg !9821
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9822
  %flag14 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 1, !dbg !9823
  %22 = load i32, i32* %flag14, align 4, !dbg !9824
  %or15 = or i32 %22, 256, !dbg !9824
  store i32 %or15, i32* %flag14, align 4, !dbg !9824
  ret void, !dbg !9825
}

; Function Attrs: noinline nounwind uwtable
define internal void @initMaskShrinkFatten(%struct.TransInfo* %t) #0 !dbg !9826 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !9827, metadata !DIExpression()), !dbg !9828
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9829
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !9830
  store i32 17, i32* %mode, align 8, !dbg !9831
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9832
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 7, !dbg !9833
  store void (%struct.TransInfo*, i32*)* @applyMaskShrinkFatten, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !9834
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9835
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9836
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 16, !dbg !9837
  call void @initMouseInputMode(%struct.TransInfo* %2, %struct.MouseInput* %mouse, i32 2), !dbg !9838
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9839
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 24, !dbg !9840
  store i16 0, i16* %idx_max, align 2, !dbg !9841
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9842
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 15, !dbg !9843
  %idx_max1 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 0, !dbg !9844
  store i16 0, i16* %idx_max1, align 8, !dbg !9845
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9846
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 25, !dbg !9847
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !9846
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !9848
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9849
  %snap2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 25, !dbg !9850
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %snap2, i64 0, i64 1, !dbg !9849
  store float 0x3FB99999A0000000, float* %arrayidx3, align 4, !dbg !9851
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9852
  %snap4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 25, !dbg !9853
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %snap4, i64 0, i64 1, !dbg !9852
  %9 = load float, float* %arrayidx5, align 4, !dbg !9852
  %mul = fmul float %9, 0x3FB99999A0000000, !dbg !9854
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9855
  %snap6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 25, !dbg !9856
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %snap6, i64 0, i64 2, !dbg !9855
  store float %mul, float* %arrayidx7, align 4, !dbg !9857
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9858
  %num8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 15, !dbg !9859
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num8, i32 0, i32 8, !dbg !9860
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !9858
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9861
  %snap9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 25, !dbg !9862
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %snap9, i64 0, i64 1, !dbg !9861
  %13 = load float, float* %arrayidx10, align 4, !dbg !9861
  call void @copy_v3_fl(float* %arraydecay, float %13), !dbg !9863
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9864
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 56, !dbg !9865
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9865
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %15, i32 0, i32 38, !dbg !9866
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !9867
  %16 = load i8, i8* %system, align 4, !dbg !9867
  %conv = zext i8 %16 to i32, !dbg !9864
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9868
  %num11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 15, !dbg !9869
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num11, i32 0, i32 1, !dbg !9870
  store i32 %conv, i32* %unit_sys, align 4, !dbg !9871
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9872
  %num12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 15, !dbg !9873
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num12, i32 0, i32 2, !dbg !9874
  %arrayidx13 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !9872
  store i32 0, i32* %arrayidx13, align 8, !dbg !9875
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9876
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 1, !dbg !9877
  %20 = load i32, i32* %flag, align 4, !dbg !9878
  %or = or i32 %20, 1024, !dbg !9878
  store i32 %or, i32* %flag, align 4, !dbg !9878
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9879
  %flag14 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 1, !dbg !9880
  %22 = load i32, i32* %flag14, align 4, !dbg !9881
  %or15 = or i32 %22, 256, !dbg !9881
  store i32 %or15, i32* %flag14, align 4, !dbg !9881
  ret void, !dbg !9882
}

; Function Attrs: noinline nounwind uwtable
define internal void @initPushPull(%struct.TransInfo* %t) #0 !dbg !9883 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !9884, metadata !DIExpression()), !dbg !9885
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9886
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !9887
  store i32 11, i32* %mode, align 8, !dbg !9888
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9889
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 7, !dbg !9890
  store void (%struct.TransInfo*, i32*)* @applyPushPull, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !9891
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9892
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9893
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 16, !dbg !9894
  call void @initMouseInputMode(%struct.TransInfo* %2, %struct.MouseInput* %mouse, i32 11), !dbg !9895
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9896
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 24, !dbg !9897
  store i16 0, i16* %idx_max, align 2, !dbg !9898
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9899
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 15, !dbg !9900
  %idx_max1 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 0, !dbg !9901
  store i16 0, i16* %idx_max1, align 8, !dbg !9902
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9903
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 25, !dbg !9904
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !9903
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !9905
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9906
  %snap2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 25, !dbg !9907
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %snap2, i64 0, i64 1, !dbg !9906
  store float 1.000000e+00, float* %arrayidx3, align 4, !dbg !9908
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9909
  %snap4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 25, !dbg !9910
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %snap4, i64 0, i64 1, !dbg !9909
  %9 = load float, float* %arrayidx5, align 4, !dbg !9909
  %mul = fmul float %9, 0x3FB99999A0000000, !dbg !9911
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9912
  %snap6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 25, !dbg !9913
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %snap6, i64 0, i64 2, !dbg !9912
  store float %mul, float* %arrayidx7, align 4, !dbg !9914
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9915
  %num8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 15, !dbg !9916
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num8, i32 0, i32 8, !dbg !9917
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !9915
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9918
  %snap9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 25, !dbg !9919
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %snap9, i64 0, i64 1, !dbg !9918
  %13 = load float, float* %arrayidx10, align 4, !dbg !9918
  call void @copy_v3_fl(float* %arraydecay, float %13), !dbg !9920
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9921
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 56, !dbg !9922
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9922
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %15, i32 0, i32 38, !dbg !9923
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !9924
  %16 = load i8, i8* %system, align 4, !dbg !9924
  %conv = zext i8 %16 to i32, !dbg !9921
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9925
  %num11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 15, !dbg !9926
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num11, i32 0, i32 1, !dbg !9927
  store i32 %conv, i32* %unit_sys, align 4, !dbg !9928
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9929
  %num12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 15, !dbg !9930
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num12, i32 0, i32 2, !dbg !9931
  %arrayidx13 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !9929
  store i32 1, i32* %arrayidx13, align 8, !dbg !9932
  ret void, !dbg !9933
}

; Function Attrs: noinline nounwind uwtable
define internal void @initCrease(%struct.TransInfo* %t) #0 !dbg !9934 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !9935, metadata !DIExpression()), !dbg !9936
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9937
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !9938
  store i32 12, i32* %mode, align 8, !dbg !9939
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9940
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 7, !dbg !9941
  store void (%struct.TransInfo*, i32*)* @applyCrease, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !9942
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9943
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9944
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 16, !dbg !9945
  call void @initMouseInputMode(%struct.TransInfo* %2, %struct.MouseInput* %mouse, i32 4), !dbg !9946
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9947
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 24, !dbg !9948
  store i16 0, i16* %idx_max, align 2, !dbg !9949
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9950
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 15, !dbg !9951
  %idx_max1 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 0, !dbg !9952
  store i16 0, i16* %idx_max1, align 8, !dbg !9953
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9954
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 25, !dbg !9955
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !9954
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !9956
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9957
  %snap2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 25, !dbg !9958
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %snap2, i64 0, i64 1, !dbg !9957
  store float 0x3FB99999A0000000, float* %arrayidx3, align 4, !dbg !9959
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9960
  %snap4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 25, !dbg !9961
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %snap4, i64 0, i64 1, !dbg !9960
  %9 = load float, float* %arrayidx5, align 4, !dbg !9960
  %mul = fmul float %9, 0x3FB99999A0000000, !dbg !9962
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9963
  %snap6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 25, !dbg !9964
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %snap6, i64 0, i64 2, !dbg !9963
  store float %mul, float* %arrayidx7, align 4, !dbg !9965
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9966
  %num8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 15, !dbg !9967
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num8, i32 0, i32 8, !dbg !9968
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !9966
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9969
  %snap9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 25, !dbg !9970
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %snap9, i64 0, i64 1, !dbg !9969
  %13 = load float, float* %arrayidx10, align 4, !dbg !9969
  call void @copy_v3_fl(float* %arraydecay, float %13), !dbg !9971
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9972
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 56, !dbg !9973
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9973
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %15, i32 0, i32 38, !dbg !9974
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !9975
  %16 = load i8, i8* %system, align 4, !dbg !9975
  %conv = zext i8 %16 to i32, !dbg !9972
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9976
  %num11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 15, !dbg !9977
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num11, i32 0, i32 1, !dbg !9978
  store i32 %conv, i32* %unit_sys, align 4, !dbg !9979
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9980
  %num12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 15, !dbg !9981
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num12, i32 0, i32 2, !dbg !9982
  %arrayidx13 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !9980
  store i32 0, i32* %arrayidx13, align 8, !dbg !9983
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9984
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 1, !dbg !9985
  %20 = load i32, i32* %flag, align 4, !dbg !9986
  %or = or i32 %20, 4194560, !dbg !9986
  store i32 %or, i32* %flag, align 4, !dbg !9986
  ret void, !dbg !9987
}

; Function Attrs: noinline nounwind uwtable
define internal void @initBoneEnvelope(%struct.TransInfo* %t) #0 !dbg !9988 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !9989, metadata !DIExpression()), !dbg !9990
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9991
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !9992
  store i32 15, i32* %mode, align 8, !dbg !9993
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9994
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 7, !dbg !9995
  store void (%struct.TransInfo*, i32*)* @applyBoneEnvelope, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !9996
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9997
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !9998
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 16, !dbg !9999
  call void @initMouseInputMode(%struct.TransInfo* %2, %struct.MouseInput* %mouse, i32 2), !dbg !10000
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10001
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 24, !dbg !10002
  store i16 0, i16* %idx_max, align 2, !dbg !10003
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10004
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 15, !dbg !10005
  %idx_max1 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 0, !dbg !10006
  store i16 0, i16* %idx_max1, align 8, !dbg !10007
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10008
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 25, !dbg !10009
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !10008
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !10010
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10011
  %snap2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 25, !dbg !10012
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %snap2, i64 0, i64 1, !dbg !10011
  store float 0x3FB99999A0000000, float* %arrayidx3, align 4, !dbg !10013
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10014
  %snap4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 25, !dbg !10015
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %snap4, i64 0, i64 1, !dbg !10014
  %9 = load float, float* %arrayidx5, align 4, !dbg !10014
  %mul = fmul float %9, 0x3FB99999A0000000, !dbg !10016
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10017
  %snap6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 25, !dbg !10018
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %snap6, i64 0, i64 2, !dbg !10017
  store float %mul, float* %arrayidx7, align 4, !dbg !10019
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10020
  %num8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 15, !dbg !10021
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num8, i32 0, i32 8, !dbg !10022
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !10020
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10023
  %snap9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 25, !dbg !10024
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %snap9, i64 0, i64 1, !dbg !10023
  %13 = load float, float* %arrayidx10, align 4, !dbg !10023
  call void @copy_v3_fl(float* %arraydecay, float %13), !dbg !10025
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10026
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 56, !dbg !10027
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10027
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %15, i32 0, i32 38, !dbg !10028
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !10029
  %16 = load i8, i8* %system, align 4, !dbg !10029
  %conv = zext i8 %16 to i32, !dbg !10026
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10030
  %num11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 15, !dbg !10031
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num11, i32 0, i32 1, !dbg !10032
  store i32 %conv, i32* %unit_sys, align 4, !dbg !10033
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10034
  %num12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 15, !dbg !10035
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num12, i32 0, i32 2, !dbg !10036
  %arrayidx13 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !10034
  store i32 0, i32* %arrayidx13, align 8, !dbg !10037
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10038
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 1, !dbg !10039
  %20 = load i32, i32* %flag, align 4, !dbg !10040
  %or = or i32 %20, 4194560, !dbg !10040
  store i32 %or, i32* %flag, align 4, !dbg !10040
  ret void, !dbg !10041
}

; Function Attrs: noinline nounwind uwtable
define internal void @initBoneSize(%struct.TransInfo* %t) #0 !dbg !10042 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !10043, metadata !DIExpression()), !dbg !10044
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10045
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !10046
  store i32 14, i32* %mode, align 8, !dbg !10047
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10048
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 7, !dbg !10049
  store void (%struct.TransInfo*, i32*)* @applyBoneSize, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !10050
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10051
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10052
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 16, !dbg !10053
  call void @initMouseInputMode(%struct.TransInfo* %2, %struct.MouseInput* %mouse, i32 3), !dbg !10054
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10055
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 24, !dbg !10056
  store i16 2, i16* %idx_max, align 2, !dbg !10057
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10058
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 15, !dbg !10059
  %idx_max1 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 0, !dbg !10060
  store i16 2, i16* %idx_max1, align 8, !dbg !10061
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10062
  %num2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 15, !dbg !10063
  %val_flag = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num2, i32 0, i32 5, !dbg !10064
  %arrayidx = getelementptr inbounds [3 x i16], [3 x i16]* %val_flag, i64 0, i64 0, !dbg !10062
  %7 = load i16, i16* %arrayidx, align 8, !dbg !10065
  %conv = sext i16 %7 to i32, !dbg !10065
  %or = or i32 %conv, 1, !dbg !10065
  %conv3 = trunc i32 %or to i16, !dbg !10065
  store i16 %conv3, i16* %arrayidx, align 8, !dbg !10065
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10066
  %num4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 15, !dbg !10067
  %val_flag5 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num4, i32 0, i32 5, !dbg !10068
  %arrayidx6 = getelementptr inbounds [3 x i16], [3 x i16]* %val_flag5, i64 0, i64 1, !dbg !10066
  %9 = load i16, i16* %arrayidx6, align 2, !dbg !10069
  %conv7 = sext i16 %9 to i32, !dbg !10069
  %or8 = or i32 %conv7, 1, !dbg !10069
  %conv9 = trunc i32 %or8 to i16, !dbg !10069
  store i16 %conv9, i16* %arrayidx6, align 2, !dbg !10069
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10070
  %num10 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 15, !dbg !10071
  %val_flag11 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num10, i32 0, i32 5, !dbg !10072
  %arrayidx12 = getelementptr inbounds [3 x i16], [3 x i16]* %val_flag11, i64 0, i64 2, !dbg !10070
  %11 = load i16, i16* %arrayidx12, align 4, !dbg !10073
  %conv13 = sext i16 %11 to i32, !dbg !10073
  %or14 = or i32 %conv13, 1, !dbg !10073
  %conv15 = trunc i32 %or14 to i16, !dbg !10073
  store i16 %conv15, i16* %arrayidx12, align 4, !dbg !10073
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10074
  %num16 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 15, !dbg !10075
  %flag = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num16, i32 0, i32 4, !dbg !10076
  %13 = load i16, i16* %flag, align 2, !dbg !10077
  %conv17 = sext i16 %13 to i32, !dbg !10077
  %or18 = or i32 %conv17, 1, !dbg !10077
  %conv19 = trunc i32 %or18 to i16, !dbg !10077
  store i16 %conv19, i16* %flag, align 2, !dbg !10077
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10078
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 25, !dbg !10079
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !10078
  store float 0.000000e+00, float* %arrayidx20, align 4, !dbg !10080
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10081
  %snap21 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 25, !dbg !10082
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %snap21, i64 0, i64 1, !dbg !10081
  store float 0x3FB99999A0000000, float* %arrayidx22, align 4, !dbg !10083
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10084
  %snap23 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 25, !dbg !10085
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %snap23, i64 0, i64 1, !dbg !10084
  %17 = load float, float* %arrayidx24, align 4, !dbg !10084
  %mul = fmul float %17, 0x3FB99999A0000000, !dbg !10086
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10087
  %snap25 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 25, !dbg !10088
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %snap25, i64 0, i64 2, !dbg !10087
  store float %mul, float* %arrayidx26, align 4, !dbg !10089
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10090
  %num27 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 15, !dbg !10091
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num27, i32 0, i32 8, !dbg !10092
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !10090
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10093
  %snap28 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 25, !dbg !10094
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %snap28, i64 0, i64 1, !dbg !10093
  %21 = load float, float* %arrayidx29, align 4, !dbg !10093
  call void @copy_v3_fl(float* %arraydecay, float %21), !dbg !10095
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10096
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 56, !dbg !10097
  %23 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10097
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %23, i32 0, i32 38, !dbg !10098
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !10099
  %24 = load i8, i8* %system, align 4, !dbg !10099
  %conv30 = zext i8 %24 to i32, !dbg !10096
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10100
  %num31 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 15, !dbg !10101
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num31, i32 0, i32 1, !dbg !10102
  store i32 %conv30, i32* %unit_sys, align 4, !dbg !10103
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10104
  %num32 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 15, !dbg !10105
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num32, i32 0, i32 2, !dbg !10106
  %arrayidx33 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !10104
  store i32 0, i32* %arrayidx33, align 8, !dbg !10107
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10108
  %num34 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %27, i32 0, i32 15, !dbg !10109
  %unit_type35 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num34, i32 0, i32 2, !dbg !10110
  %arrayidx36 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type35, i64 0, i64 1, !dbg !10108
  store i32 0, i32* %arrayidx36, align 4, !dbg !10111
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10112
  %num37 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 15, !dbg !10113
  %unit_type38 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num37, i32 0, i32 2, !dbg !10114
  %arrayidx39 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type38, i64 0, i64 2, !dbg !10112
  store i32 0, i32* %arrayidx39, align 8, !dbg !10115
  ret void, !dbg !10116
}

; Function Attrs: noinline nounwind uwtable
define internal void @initBoneRoll(%struct.TransInfo* %t) #0 !dbg !10117 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !10118, metadata !DIExpression()), !dbg !10119
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10120
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !10121
  store i32 18, i32* %mode, align 8, !dbg !10122
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10123
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 7, !dbg !10124
  store void (%struct.TransInfo*, i32*)* @applyBoneRoll, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !10125
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10126
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10127
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 16, !dbg !10128
  call void @initMouseInputMode(%struct.TransInfo* %2, %struct.MouseInput* %mouse, i32 5), !dbg !10129
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10130
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 24, !dbg !10131
  store i16 0, i16* %idx_max, align 2, !dbg !10132
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10133
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 15, !dbg !10134
  %idx_max1 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 0, !dbg !10135
  store i16 0, i16* %idx_max1, align 8, !dbg !10136
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10137
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 25, !dbg !10138
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !10137
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !10139
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10140
  %snap2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 25, !dbg !10141
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %snap2, i64 0, i64 1, !dbg !10140
  store float 0x3FB6571840000000, float* %arrayidx3, align 4, !dbg !10142
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10143
  %snap4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 25, !dbg !10144
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %snap4, i64 0, i64 2, !dbg !10143
  store float 0x3F91DF46A0000000, float* %arrayidx5, align 4, !dbg !10145
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10146
  %num6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 15, !dbg !10147
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num6, i32 0, i32 8, !dbg !10148
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !10146
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10149
  %snap7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 25, !dbg !10150
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %snap7, i64 0, i64 1, !dbg !10149
  %11 = load float, float* %arrayidx8, align 4, !dbg !10149
  call void @copy_v3_fl(float* %arraydecay, float %11), !dbg !10151
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10152
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 56, !dbg !10153
  %13 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10153
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 38, !dbg !10154
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !10155
  %14 = load i8, i8* %system, align 4, !dbg !10155
  %conv = zext i8 %14 to i32, !dbg !10152
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10156
  %num9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 15, !dbg !10157
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num9, i32 0, i32 1, !dbg !10158
  store i32 %conv, i32* %unit_sys, align 4, !dbg !10159
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10160
  %scene10 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 56, !dbg !10161
  %17 = load %struct.Scene*, %struct.Scene** %scene10, align 8, !dbg !10161
  %unit11 = getelementptr inbounds %struct.Scene, %struct.Scene* %17, i32 0, i32 38, !dbg !10162
  %system_rotation = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit11, i32 0, i32 2, !dbg !10163
  %18 = load i8, i8* %system_rotation, align 1, !dbg !10163
  %conv12 = zext i8 %18 to i32, !dbg !10160
  %cmp = icmp eq i32 %conv12, 2, !dbg !10164
  %conv13 = zext i1 %cmp to i32, !dbg !10164
  %conv14 = trunc i32 %conv13 to i8, !dbg !10165
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10166
  %num15 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 15, !dbg !10167
  %unit_use_radians = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num15, i32 0, i32 3, !dbg !10168
  store i8 %conv14, i8* %unit_use_radians, align 4, !dbg !10169
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10170
  %num16 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 15, !dbg !10171
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num16, i32 0, i32 2, !dbg !10172
  %arrayidx17 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !10170
  store i32 5, i32* %arrayidx17, align 8, !dbg !10173
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10174
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 1, !dbg !10175
  %22 = load i32, i32* %flag, align 4, !dbg !10176
  %or = or i32 %22, 4194560, !dbg !10176
  store i32 %or, i32* %flag, align 4, !dbg !10176
  ret void, !dbg !10177
}

; Function Attrs: noinline nounwind uwtable
define internal void @initTimeTranslate(%struct.TransInfo* %t) #0 !dbg !10178 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !10179, metadata !DIExpression()), !dbg !10180
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10181
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 33, !dbg !10181
  %1 = load i8, i8* %spacetype, align 8, !dbg !10181
  %conv = zext i8 %1 to i32, !dbg !10181
  %cmp = icmp eq i32 %conv, 12, !dbg !10181
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !10181

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10181
  %spacetype2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 33, !dbg !10181
  %3 = load i8, i8* %spacetype2, align 8, !dbg !10181
  %conv3 = zext i8 %3 to i32, !dbg !10181
  %cmp4 = icmp eq i32 %conv3, 8, !dbg !10181
  br i1 %cmp4, label %if.end, label %if.then, !dbg !10183

if.then:                                          ; preds = %lor.lhs.false
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10184
  %state = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 3, !dbg !10186
  store i16 3, i16* %state, align 4, !dbg !10187
  br label %if.end, !dbg !10188

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10189
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 0, !dbg !10190
  store i32 19, i32* %mode, align 8, !dbg !10191
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10192
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 7, !dbg !10193
  store void (%struct.TransInfo*, i32*)* @applyTimeTranslate, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !10194
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10195
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10196
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 16, !dbg !10197
  call void @initMouseInputMode(%struct.TransInfo* %7, %struct.MouseInput* %mouse, i32 0), !dbg !10198
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10199
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 24, !dbg !10200
  store i16 0, i16* %idx_max, align 2, !dbg !10201
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10202
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 15, !dbg !10203
  %flag = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 4, !dbg !10204
  store i16 0, i16* %flag, align 2, !dbg !10205
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10206
  %idx_max6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 24, !dbg !10207
  %12 = load i16, i16* %idx_max6, align 2, !dbg !10207
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10208
  %num7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 15, !dbg !10209
  %idx_max8 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num7, i32 0, i32 0, !dbg !10210
  store i16 %12, i16* %idx_max8, align 8, !dbg !10211
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10212
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 25, !dbg !10213
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !10212
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !10214
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10215
  %snap9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 25, !dbg !10216
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %snap9, i64 0, i64 2, !dbg !10215
  store float 1.000000e+00, float* %arrayidx10, align 4, !dbg !10217
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10218
  %snap11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 25, !dbg !10219
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %snap11, i64 0, i64 1, !dbg !10218
  store float 1.000000e+00, float* %arrayidx12, align 4, !dbg !10220
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10221
  %num13 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 15, !dbg !10222
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num13, i32 0, i32 8, !dbg !10223
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !10221
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10224
  %snap14 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 25, !dbg !10225
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %snap14, i64 0, i64 1, !dbg !10224
  %19 = load float, float* %arrayidx15, align 4, !dbg !10224
  call void @copy_v3_fl(float* %arraydecay, float %19), !dbg !10226
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10227
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 56, !dbg !10228
  %21 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10228
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %21, i32 0, i32 38, !dbg !10229
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !10230
  %22 = load i8, i8* %system, align 4, !dbg !10230
  %conv16 = zext i8 %22 to i32, !dbg !10227
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10231
  %num17 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 15, !dbg !10232
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num17, i32 0, i32 1, !dbg !10233
  store i32 %conv16, i32* %unit_sys, align 4, !dbg !10234
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10235
  %num18 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 15, !dbg !10236
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num18, i32 0, i32 2, !dbg !10237
  %arrayidx19 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !10235
  store i32 0, i32* %arrayidx19, align 8, !dbg !10238
  ret void, !dbg !10239
}

; Function Attrs: noinline nounwind uwtable
define internal void @initTimeSlide(%struct.TransInfo* %t) #0 !dbg !10240 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %saction = alloca %struct.SpaceAction*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !10241, metadata !DIExpression()), !dbg !10242
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10243
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 33, !dbg !10245
  %1 = load i8, i8* %spacetype, align 8, !dbg !10245
  %conv = zext i8 %1 to i32, !dbg !10243
  %cmp = icmp eq i32 %conv, 12, !dbg !10246
  br i1 %cmp, label %if.then, label %if.else, !dbg !10247

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SpaceAction** %saction, metadata !10248, metadata !DIExpression()), !dbg !10250
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10251
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 54, !dbg !10252
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !10252
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %3, i32 0, i32 19, !dbg !10253
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !10254
  %4 = load i8*, i8** %first, align 8, !dbg !10254
  %5 = bitcast i8* %4 to %struct.SpaceAction*, !dbg !10255
  store %struct.SpaceAction* %5, %struct.SpaceAction** %saction, align 8, !dbg !10250
  %6 = load %struct.SpaceAction*, %struct.SpaceAction** %saction, align 8, !dbg !10256
  %flag = getelementptr inbounds %struct.SpaceAction, %struct.SpaceAction* %6, i32 0, i32 11, !dbg !10257
  %7 = load i16, i16* %flag, align 2, !dbg !10258
  %conv2 = sext i16 %7 to i32, !dbg !10258
  %or = or i32 %conv2, 1, !dbg !10258
  %conv3 = trunc i32 %or to i16, !dbg !10258
  store i16 %conv3, i16* %flag, align 2, !dbg !10258
  br label %if.end, !dbg !10259

if.else:                                          ; preds = %entry
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10260
  %state = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 3, !dbg !10262
  store i16 3, i16* %state, align 4, !dbg !10263
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10264
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 0, !dbg !10265
  store i32 20, i32* %mode, align 8, !dbg !10266
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10267
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 7, !dbg !10268
  store void (%struct.TransInfo*, i32*)* @applyTimeSlide, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !10269
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10270
  %flag4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 1, !dbg !10271
  %12 = load i32, i32* %flag4, align 4, !dbg !10272
  %or5 = or i32 %12, 131072, !dbg !10272
  store i32 %or5, i32* %flag4, align 4, !dbg !10272
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10273
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10274
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 16, !dbg !10275
  call void @initMouseInputMode(%struct.TransInfo* %13, %struct.MouseInput* %mouse, i32 0), !dbg !10276
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10277
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 24, !dbg !10278
  store i16 0, i16* %idx_max, align 2, !dbg !10279
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10280
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 15, !dbg !10281
  %flag6 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 4, !dbg !10282
  store i16 0, i16* %flag6, align 2, !dbg !10283
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10284
  %idx_max7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 24, !dbg !10285
  %18 = load i16, i16* %idx_max7, align 2, !dbg !10285
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10286
  %num8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 15, !dbg !10287
  %idx_max9 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num8, i32 0, i32 0, !dbg !10288
  store i16 %18, i16* %idx_max9, align 8, !dbg !10289
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10290
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 25, !dbg !10291
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !10290
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !10292
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10293
  %snap10 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 25, !dbg !10294
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %snap10, i64 0, i64 2, !dbg !10293
  store float 1.000000e+00, float* %arrayidx11, align 4, !dbg !10295
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10296
  %snap12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 25, !dbg !10297
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %snap12, i64 0, i64 1, !dbg !10296
  store float 1.000000e+00, float* %arrayidx13, align 4, !dbg !10298
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10299
  %num14 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 15, !dbg !10300
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num14, i32 0, i32 8, !dbg !10301
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !10299
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10302
  %snap15 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 25, !dbg !10303
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %snap15, i64 0, i64 1, !dbg !10302
  %25 = load float, float* %arrayidx16, align 4, !dbg !10302
  call void @copy_v3_fl(float* %arraydecay, float %25), !dbg !10304
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10305
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 56, !dbg !10306
  %27 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10306
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %27, i32 0, i32 38, !dbg !10307
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !10308
  %28 = load i8, i8* %system, align 4, !dbg !10308
  %conv17 = zext i8 %28 to i32, !dbg !10305
  %29 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10309
  %num18 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %29, i32 0, i32 15, !dbg !10310
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num18, i32 0, i32 1, !dbg !10311
  store i32 %conv17, i32* %unit_sys, align 4, !dbg !10312
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10313
  %num19 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %30, i32 0, i32 15, !dbg !10314
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num19, i32 0, i32 2, !dbg !10315
  %arrayidx20 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !10313
  store i32 0, i32* %arrayidx20, align 8, !dbg !10316
  ret void, !dbg !10317
}

; Function Attrs: noinline nounwind uwtable
define internal void @initTimeScale(%struct.TransInfo* %t) #0 !dbg !10318 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %center = alloca [2 x float], align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !10319, metadata !DIExpression()), !dbg !10320
  call void @llvm.dbg.declare(metadata [2 x float]* %center, metadata !10321, metadata !DIExpression()), !dbg !10322
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10323
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 33, !dbg !10323
  %1 = load i8, i8* %spacetype, align 8, !dbg !10323
  %conv = zext i8 %1 to i32, !dbg !10323
  %cmp = icmp eq i32 %conv, 12, !dbg !10323
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10323

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10323
  %spacetype2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 33, !dbg !10323
  %3 = load i8, i8* %spacetype2, align 8, !dbg !10323
  %conv3 = zext i8 %3 to i32, !dbg !10323
  %cmp4 = icmp eq i32 %conv3, 13, !dbg !10323
  br label %lor.end, !dbg !10323

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp4, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32, !dbg !10323
  %cmp6 = icmp eq i32 %lor.ext, 0, !dbg !10325
  br i1 %cmp6, label %if.then, label %if.end, !dbg !10326

if.then:                                          ; preds = %lor.end
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10327
  %state = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 3, !dbg !10329
  store i16 3, i16* %state, align 4, !dbg !10330
  br label %if.end, !dbg !10331

if.end:                                           ; preds = %if.then, %lor.end
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10332
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 0, !dbg !10333
  store i32 21, i32* %mode, align 8, !dbg !10334
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10335
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 7, !dbg !10336
  store void (%struct.TransInfo*, i32*)* @applyTimeScale, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !10337
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10338
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 56, !dbg !10339
  %9 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10339
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 22, !dbg !10340
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !10341
  %10 = load i32, i32* %cfra, align 8, !dbg !10341
  %conv8 = sitofp i32 %10 to float, !dbg !10338
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10342
  %center9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 20, !dbg !10343
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %center9, i64 0, i64 0, !dbg !10342
  store float %conv8, float* %arrayidx, align 4, !dbg !10344
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10345
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10346
  %center10 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 20, !dbg !10347
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %center10, i64 0, i64 0, !dbg !10346
  %arraydecay11 = getelementptr inbounds [2 x float], [2 x float]* %center, i64 0, i64 0, !dbg !10348
  call void @projectFloatView(%struct.TransInfo* %12, float* %arraydecay, float* %arraydecay11), !dbg !10349
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10350
  %imval = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 22, !dbg !10351
  %arrayidx12 = getelementptr inbounds [2 x i32], [2 x i32]* %imval, i64 0, i64 1, !dbg !10350
  %15 = load i32, i32* %arrayidx12, align 4, !dbg !10350
  %conv13 = sitofp i32 %15 to float, !dbg !10350
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %center, i64 0, i64 1, !dbg !10352
  store float %conv13, float* %arrayidx14, align 4, !dbg !10353
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10354
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10355
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 16, !dbg !10356
  %arraydecay15 = getelementptr inbounds [2 x float], [2 x float]* %center, i64 0, i64 0, !dbg !10357
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10358
  %imval16 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 22, !dbg !10359
  %arraydecay17 = getelementptr inbounds [2 x i32], [2 x i32]* %imval16, i64 0, i64 0, !dbg !10358
  call void @initMouseInput(%struct.TransInfo* %16, %struct.MouseInput* %mouse, float* %arraydecay15, i32* %arraydecay17), !dbg !10360
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10361
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10362
  %mouse18 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 16, !dbg !10363
  call void @initMouseInputMode(%struct.TransInfo* %19, %struct.MouseInput* %mouse18, i32 3), !dbg !10364
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10365
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 1, !dbg !10366
  %22 = load i32, i32* %flag, align 4, !dbg !10367
  %or = or i32 %22, 512, !dbg !10367
  store i32 %or, i32* %flag, align 4, !dbg !10367
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10368
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 15, !dbg !10369
  %val_flag = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 5, !dbg !10370
  %arrayidx19 = getelementptr inbounds [3 x i16], [3 x i16]* %val_flag, i64 0, i64 0, !dbg !10368
  %24 = load i16, i16* %arrayidx19, align 8, !dbg !10371
  %conv20 = sext i16 %24 to i32, !dbg !10371
  %or21 = or i32 %conv20, 1, !dbg !10371
  %conv22 = trunc i32 %or21 to i16, !dbg !10371
  store i16 %conv22, i16* %arrayidx19, align 8, !dbg !10371
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10372
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 24, !dbg !10373
  store i16 0, i16* %idx_max, align 2, !dbg !10374
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10375
  %num23 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 15, !dbg !10376
  %flag24 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num23, i32 0, i32 4, !dbg !10377
  store i16 0, i16* %flag24, align 2, !dbg !10378
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10379
  %idx_max25 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %27, i32 0, i32 24, !dbg !10380
  %28 = load i16, i16* %idx_max25, align 2, !dbg !10380
  %29 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10381
  %num26 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %29, i32 0, i32 15, !dbg !10382
  %idx_max27 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num26, i32 0, i32 0, !dbg !10383
  store i16 %28, i16* %idx_max27, align 8, !dbg !10384
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10385
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %30, i32 0, i32 25, !dbg !10386
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !10385
  store float 0.000000e+00, float* %arrayidx28, align 4, !dbg !10387
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10388
  %snap29 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %31, i32 0, i32 25, !dbg !10389
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %snap29, i64 0, i64 2, !dbg !10388
  store float 1.000000e+00, float* %arrayidx30, align 4, !dbg !10390
  %32 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10391
  %snap31 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %32, i32 0, i32 25, !dbg !10392
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %snap31, i64 0, i64 1, !dbg !10391
  store float 1.000000e+00, float* %arrayidx32, align 4, !dbg !10393
  %33 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10394
  %num33 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %33, i32 0, i32 15, !dbg !10395
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num33, i32 0, i32 8, !dbg !10396
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !10394
  %34 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10397
  %snap35 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %34, i32 0, i32 25, !dbg !10398
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %snap35, i64 0, i64 1, !dbg !10397
  %35 = load float, float* %arrayidx36, align 4, !dbg !10397
  call void @copy_v3_fl(float* %arraydecay34, float %35), !dbg !10399
  %36 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10400
  %scene37 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %36, i32 0, i32 56, !dbg !10401
  %37 = load %struct.Scene*, %struct.Scene** %scene37, align 8, !dbg !10401
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %37, i32 0, i32 38, !dbg !10402
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !10403
  %38 = load i8, i8* %system, align 4, !dbg !10403
  %conv38 = zext i8 %38 to i32, !dbg !10400
  %39 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10404
  %num39 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %39, i32 0, i32 15, !dbg !10405
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num39, i32 0, i32 1, !dbg !10406
  store i32 %conv38, i32* %unit_sys, align 4, !dbg !10407
  %40 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10408
  %num40 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %40, i32 0, i32 15, !dbg !10409
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num40, i32 0, i32 2, !dbg !10410
  %arrayidx41 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !10408
  store i32 0, i32* %arrayidx41, align 8, !dbg !10411
  ret void, !dbg !10412
}

; Function Attrs: noinline nounwind uwtable
define internal void @initBakeTime(%struct.TransInfo* %t) #0 !dbg !10413 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !10414, metadata !DIExpression()), !dbg !10415
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10416
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 7, !dbg !10417
  store void (%struct.TransInfo*, i32*)* @applyBakeTime, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !10418
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10419
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10420
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 16, !dbg !10421
  call void @initMouseInputMode(%struct.TransInfo* %1, %struct.MouseInput* %mouse, i32 0), !dbg !10422
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10423
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 24, !dbg !10424
  store i16 0, i16* %idx_max, align 2, !dbg !10425
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10426
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 15, !dbg !10427
  %idx_max1 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 0, !dbg !10428
  store i16 0, i16* %idx_max1, align 8, !dbg !10429
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10430
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 25, !dbg !10431
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !10430
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !10432
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10433
  %snap2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 25, !dbg !10434
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %snap2, i64 0, i64 1, !dbg !10433
  store float 1.000000e+00, float* %arrayidx3, align 4, !dbg !10435
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10436
  %snap4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 25, !dbg !10437
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %snap4, i64 0, i64 1, !dbg !10436
  %8 = load float, float* %arrayidx5, align 4, !dbg !10436
  %mul = fmul float %8, 0x3FB99999A0000000, !dbg !10438
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10439
  %snap6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 25, !dbg !10440
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %snap6, i64 0, i64 2, !dbg !10439
  store float %mul, float* %arrayidx7, align 4, !dbg !10441
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10442
  %num8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 15, !dbg !10443
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num8, i32 0, i32 8, !dbg !10444
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !10442
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10445
  %snap9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 25, !dbg !10446
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %snap9, i64 0, i64 1, !dbg !10445
  %12 = load float, float* %arrayidx10, align 4, !dbg !10445
  call void @copy_v3_fl(float* %arraydecay, float %12), !dbg !10447
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10448
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 56, !dbg !10449
  %14 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10449
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %14, i32 0, i32 38, !dbg !10450
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !10451
  %15 = load i8, i8* %system, align 4, !dbg !10451
  %conv = zext i8 %15 to i32, !dbg !10448
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10452
  %num11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 15, !dbg !10453
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num11, i32 0, i32 1, !dbg !10454
  store i32 %conv, i32* %unit_sys, align 4, !dbg !10455
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10456
  %num12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 15, !dbg !10457
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num12, i32 0, i32 2, !dbg !10458
  %arrayidx13 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !10456
  store i32 0, i32* %arrayidx13, align 8, !dbg !10459
  ret void, !dbg !10460
}

; Function Attrs: noinline nounwind uwtable
define internal void @initMirror(%struct.TransInfo* %t) #0 !dbg !10461 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !10462, metadata !DIExpression()), !dbg !10463
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10464
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 7, !dbg !10465
  store void (%struct.TransInfo*, i32*)* @applyMirror, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !10466
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10467
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10468
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 16, !dbg !10469
  call void @initMouseInputMode(%struct.TransInfo* %1, %struct.MouseInput* %mouse, i32 0), !dbg !10470
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10471
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 1, !dbg !10472
  %4 = load i32, i32* %flag, align 4, !dbg !10473
  %or = or i32 %4, 512, !dbg !10473
  store i32 %or, i32* %flag, align 4, !dbg !10473
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10474
  %obedit = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 63, !dbg !10476
  %6 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10476
  %tobool = icmp ne %struct.Object* %6, null, !dbg !10474
  br i1 %tobool, label %if.end, label %if.then, !dbg !10477

if.then:                                          ; preds = %entry
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10478
  %flag1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 1, !dbg !10480
  %8 = load i32, i32* %flag1, align 4, !dbg !10481
  %or2 = or i32 %8, 1024, !dbg !10481
  store i32 %or2, i32* %flag1, align 4, !dbg !10481
  br label %if.end, !dbg !10482

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10483
}

; Function Attrs: noinline nounwind uwtable
define internal void @initBevelWeight(%struct.TransInfo* %t) #0 !dbg !10484 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !10485, metadata !DIExpression()), !dbg !10486
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10487
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !10488
  store i32 26, i32* %mode, align 8, !dbg !10489
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10490
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 7, !dbg !10491
  store void (%struct.TransInfo*, i32*)* @applyBevelWeight, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !10492
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10493
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10494
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 16, !dbg !10495
  call void @initMouseInputMode(%struct.TransInfo* %2, %struct.MouseInput* %mouse, i32 4), !dbg !10496
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10497
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 24, !dbg !10498
  store i16 0, i16* %idx_max, align 2, !dbg !10499
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10500
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 15, !dbg !10501
  %idx_max1 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 0, !dbg !10502
  store i16 0, i16* %idx_max1, align 8, !dbg !10503
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10504
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 25, !dbg !10505
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !10504
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !10506
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10507
  %snap2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 25, !dbg !10508
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %snap2, i64 0, i64 1, !dbg !10507
  store float 0x3FB99999A0000000, float* %arrayidx3, align 4, !dbg !10509
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10510
  %snap4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 25, !dbg !10511
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %snap4, i64 0, i64 1, !dbg !10510
  %9 = load float, float* %arrayidx5, align 4, !dbg !10510
  %mul = fmul float %9, 0x3FB99999A0000000, !dbg !10512
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10513
  %snap6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 25, !dbg !10514
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %snap6, i64 0, i64 2, !dbg !10513
  store float %mul, float* %arrayidx7, align 4, !dbg !10515
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10516
  %num8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 15, !dbg !10517
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num8, i32 0, i32 8, !dbg !10518
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !10516
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10519
  %snap9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 25, !dbg !10520
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %snap9, i64 0, i64 1, !dbg !10519
  %13 = load float, float* %arrayidx10, align 4, !dbg !10519
  call void @copy_v3_fl(float* %arraydecay, float %13), !dbg !10521
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10522
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 56, !dbg !10523
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10523
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %15, i32 0, i32 38, !dbg !10524
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !10525
  %16 = load i8, i8* %system, align 4, !dbg !10525
  %conv = zext i8 %16 to i32, !dbg !10522
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10526
  %num11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 15, !dbg !10527
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num11, i32 0, i32 1, !dbg !10528
  store i32 %conv, i32* %unit_sys, align 4, !dbg !10529
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10530
  %num12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 15, !dbg !10531
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num12, i32 0, i32 2, !dbg !10532
  %arrayidx13 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !10530
  store i32 0, i32* %arrayidx13, align 8, !dbg !10533
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10534
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 1, !dbg !10535
  %20 = load i32, i32* %flag, align 4, !dbg !10536
  %or = or i32 %20, 4194560, !dbg !10536
  store i32 %or, i32* %flag, align 4, !dbg !10536
  ret void, !dbg !10537
}

; Function Attrs: noinline nounwind uwtable
define internal void @initAlign(%struct.TransInfo* %t) #0 !dbg !10538 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !10539, metadata !DIExpression()), !dbg !10540
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10541
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 1, !dbg !10542
  %1 = load i32, i32* %flag, align 4, !dbg !10543
  %or = or i32 %1, 256, !dbg !10543
  store i32 %or, i32* %flag, align 4, !dbg !10543
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10544
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 7, !dbg !10545
  store void (%struct.TransInfo*, i32*)* @applyAlign, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !10546
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10547
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10548
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 16, !dbg !10549
  call void @initMouseInputMode(%struct.TransInfo* %3, %struct.MouseInput* %mouse, i32 0), !dbg !10550
  ret void, !dbg !10551
}

; Function Attrs: noinline nounwind uwtable
define internal void @initSeqSlide(%struct.TransInfo* %t) #0 !dbg !10552 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !10553, metadata !DIExpression()), !dbg !10554
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10555
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 7, !dbg !10556
  store void (%struct.TransInfo*, i32*)* @applySeqSlide, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !10557
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10558
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10559
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 16, !dbg !10560
  call void @initMouseInputMode(%struct.TransInfo* %1, %struct.MouseInput* %mouse, i32 1), !dbg !10561
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10562
  %idx_max = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 24, !dbg !10563
  store i16 1, i16* %idx_max, align 2, !dbg !10564
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10565
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 15, !dbg !10566
  %flag = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num, i32 0, i32 4, !dbg !10567
  store i16 0, i16* %flag, align 2, !dbg !10568
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10569
  %idx_max1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 24, !dbg !10570
  %6 = load i16, i16* %idx_max1, align 2, !dbg !10570
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10571
  %num2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 15, !dbg !10572
  %idx_max3 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num2, i32 0, i32 0, !dbg !10573
  store i16 %6, i16* %idx_max3, align 8, !dbg !10574
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10575
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 25, !dbg !10576
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 0, !dbg !10575
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !10577
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10578
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 56, !dbg !10579
  %10 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10579
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %10, i32 0, i32 22, !dbg !10580
  %frs_sec = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 55, !dbg !10581
  %11 = load i16, i16* %frs_sec, align 4, !dbg !10581
  %conv = sext i16 %11 to i32, !dbg !10578
  %conv4 = sitofp i32 %conv to float, !dbg !10578
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10582
  %scene5 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 56, !dbg !10583
  %13 = load %struct.Scene*, %struct.Scene** %scene5, align 8, !dbg !10583
  %r6 = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 22, !dbg !10584
  %frs_sec_base = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r6, i32 0, i32 65, !dbg !10585
  %14 = load float, float* %frs_sec_base, align 4, !dbg !10585
  %div = fdiv float %conv4, %14, !dbg !10586
  %conv7 = fpext float %div to double, !dbg !10578
  %15 = call double @llvm.floor.f64(double %conv7), !dbg !10587
  %conv8 = fptrunc double %15 to float, !dbg !10587
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10588
  %snap9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 25, !dbg !10589
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %snap9, i64 0, i64 1, !dbg !10588
  store float %conv8, float* %arrayidx10, align 4, !dbg !10590
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10591
  %snap11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 25, !dbg !10592
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %snap11, i64 0, i64 2, !dbg !10591
  store float 1.000000e+01, float* %arrayidx12, align 4, !dbg !10593
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10594
  %num13 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 15, !dbg !10595
  %val_inc = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num13, i32 0, i32 8, !dbg !10596
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %val_inc, i64 0, i64 0, !dbg !10594
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10597
  %snap14 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 25, !dbg !10598
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %snap14, i64 0, i64 1, !dbg !10597
  %20 = load float, float* %arrayidx15, align 4, !dbg !10597
  call void @copy_v3_fl(float* %arraydecay, float %20), !dbg !10599
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10600
  %scene16 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 56, !dbg !10601
  %22 = load %struct.Scene*, %struct.Scene** %scene16, align 8, !dbg !10601
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %22, i32 0, i32 38, !dbg !10602
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit, i32 0, i32 1, !dbg !10603
  %23 = load i8, i8* %system, align 4, !dbg !10603
  %conv17 = zext i8 %23 to i32, !dbg !10600
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10604
  %num18 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 15, !dbg !10605
  %unit_sys = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num18, i32 0, i32 1, !dbg !10606
  store i32 %conv17, i32* %unit_sys, align 4, !dbg !10607
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10608
  %num19 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 15, !dbg !10609
  %unit_type = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num19, i32 0, i32 2, !dbg !10610
  %arrayidx20 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type, i64 0, i64 0, !dbg !10608
  store i32 0, i32* %arrayidx20, align 8, !dbg !10611
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10612
  %num21 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 15, !dbg !10613
  %unit_type22 = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num21, i32 0, i32 2, !dbg !10614
  %arrayidx23 = getelementptr inbounds [3 x i32], [3 x i32]* %unit_type22, i64 0, i64 1, !dbg !10612
  store i32 0, i32* %arrayidx23, align 4, !dbg !10615
  ret void, !dbg !10616
}

declare dso_local void @RNA_float_get_array(%struct.PointerRNA*, i8*, float*) #2

declare dso_local float @RNA_float_get(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4(float* %r, float* %a) #0 !dbg !10617 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !10618, metadata !DIExpression()), !dbg !10619
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10620, metadata !DIExpression()), !dbg !10621
  %0 = load float*, float** %a.addr, align 8, !dbg !10622
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10622
  %1 = load float, float* %arrayidx, align 4, !dbg !10622
  %2 = load float*, float** %r.addr, align 8, !dbg !10623
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !10623
  store float %1, float* %arrayidx1, align 4, !dbg !10624
  %3 = load float*, float** %a.addr, align 8, !dbg !10625
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !10625
  %4 = load float, float* %arrayidx2, align 4, !dbg !10625
  %5 = load float*, float** %r.addr, align 8, !dbg !10626
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !10626
  store float %4, float* %arrayidx3, align 4, !dbg !10627
  %6 = load float*, float** %a.addr, align 8, !dbg !10628
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !10628
  %7 = load float, float* %arrayidx4, align 4, !dbg !10628
  %8 = load float*, float** %r.addr, align 8, !dbg !10629
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !10629
  store float %7, float* %arrayidx5, align 4, !dbg !10630
  %9 = load float*, float** %a.addr, align 8, !dbg !10631
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 3, !dbg !10631
  %10 = load float, float* %arrayidx6, align 4, !dbg !10631
  %11 = load float*, float** %r.addr, align 8, !dbg !10632
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 3, !dbg !10632
  store float %10, float* %arrayidx7, align 4, !dbg !10633
  ret void, !dbg !10634
}

declare dso_local void @RNA_property_float_get_array(%struct.PointerRNA*, %struct.PropertyRNA*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !10635 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !10638, metadata !DIExpression()), !dbg !10639
  %0 = load float*, float** %n.addr, align 8, !dbg !10640
  %1 = load float*, float** %n.addr, align 8, !dbg !10641
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !10642
  ret float %call, !dbg !10643
}

declare dso_local void @RNA_property_boolean_get_array(%struct.PointerRNA*, %struct.PropertyRNA*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @transformApply(%struct.bContext* %C, %struct.TransInfo* %t) #0 !dbg !10644 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10647, metadata !DIExpression()), !dbg !10648
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !10649, metadata !DIExpression()), !dbg !10650
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10651
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10652
  %context = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 53, !dbg !10653
  store %struct.bContext* %0, %struct.bContext** %context, align 8, !dbg !10654
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10655
  %redraw = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 17, !dbg !10657
  %3 = load i32, i32* %redraw, align 8, !dbg !10657
  %and = and i32 %3, 1, !dbg !10658
  %tobool = icmp ne i32 %and, 0, !dbg !10658
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !10659

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10660
  %draw_handle_apply = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 65, !dbg !10661
  %5 = load i8*, i8** %draw_handle_apply, align 8, !dbg !10661
  %cmp = icmp eq i8* %5, null, !dbg !10662
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !10663

land.lhs.true:                                    ; preds = %lor.lhs.false
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10664
  %redraw1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 17, !dbg !10665
  %7 = load i32, i32* %redraw1, align 8, !dbg !10665
  %and2 = and i32 %7, 2, !dbg !10666
  %tobool3 = icmp ne i32 %and2, 0, !dbg !10666
  br i1 %tobool3, label %if.then, label %if.else, !dbg !10667

if.then:                                          ; preds = %land.lhs.true, %entry
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10668
  call void @selectConstraint(%struct.TransInfo* %8), !dbg !10670
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10671
  %transform = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 7, !dbg !10673
  %10 = load void (%struct.TransInfo*, i32*)*, void (%struct.TransInfo*, i32*)** %transform, align 8, !dbg !10673
  %tobool4 = icmp ne void (%struct.TransInfo*, i32*)* %10, null, !dbg !10671
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !10674

if.then5:                                         ; preds = %if.then
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10675
  %transform6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 7, !dbg !10677
  %12 = load void (%struct.TransInfo*, i32*)*, void (%struct.TransInfo*, i32*)** %transform6, align 8, !dbg !10677
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10678
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10679
  %mval = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 61, !dbg !10680
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !10679
  call void %12(%struct.TransInfo* %13, i32* %arraydecay), !dbg !10675
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10681
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10682
  call void @viewRedrawForce(%struct.bContext* %15, %struct.TransInfo* %16), !dbg !10683
  br label %if.end, !dbg !10684

if.end:                                           ; preds = %if.then5, %if.then
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10685
  %redraw7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 17, !dbg !10686
  store i32 0, i32* %redraw7, align 8, !dbg !10687
  br label %if.end13, !dbg !10688

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10689
  %redraw8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 17, !dbg !10691
  %19 = load i32, i32* %redraw8, align 8, !dbg !10691
  %and9 = and i32 %19, 2, !dbg !10692
  %tobool10 = icmp ne i32 %and9, 0, !dbg !10692
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !10693

if.then11:                                        ; preds = %if.else
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10694
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10696
  call void @viewRedrawForce(%struct.bContext* %20, %struct.TransInfo* %21), !dbg !10697
  br label %if.end12, !dbg !10698

if.end12:                                         ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10699
  %options = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 4, !dbg !10701
  %23 = load i32, i32* %options, align 8, !dbg !10701
  %and14 = and i32 %23, 16, !dbg !10702
  %tobool15 = icmp ne i32 %and14, 0, !dbg !10702
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !10703

if.then16:                                        ; preds = %if.end13
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10704
  %state = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 3, !dbg !10706
  store i16 2, i16* %state, align 4, !dbg !10707
  br label %if.end17, !dbg !10708

if.end17:                                         ; preds = %if.then16, %if.end13
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10709
  %context18 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 53, !dbg !10710
  store %struct.bContext* null, %struct.bContext** %context18, align 8, !dbg !10711
  ret void, !dbg !10712
}

declare dso_local void @selectConstraint(%struct.TransInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @viewRedrawForce(%struct.bContext* %C, %struct.TransInfo* %t) #0 !dbg !10713 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %t.addr = alloca %struct.TransInfo*, align 8
  %window = alloca %struct.wmWindow*, align 8
  %mask = alloca %struct.Mask*, align 8
  %window65 = alloca %struct.wmWindow*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %sc = alloca %struct.SpaceClip*, align 8
  %clip = alloca %struct.MovieClip*, align 8
  %mask93 = alloca %struct.Mask*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10716, metadata !DIExpression()), !dbg !10717
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !10718, metadata !DIExpression()), !dbg !10719
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10720
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 33, !dbg !10722
  %1 = load i8, i8* %spacetype, align 8, !dbg !10722
  %conv = zext i8 %1 to i32, !dbg !10720
  %cmp = icmp eq i32 %conv, 1, !dbg !10723
  br i1 %cmp, label %if.then, label %if.else19, !dbg !10724

if.then:                                          ; preds = %entry
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10725
  %options = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 4, !dbg !10728
  %3 = load i32, i32* %options, align 8, !dbg !10728
  %and = and i32 %3, 256, !dbg !10729
  %tobool = icmp ne i32 %and, 0, !dbg !10729
  br i1 %tobool, label %if.then2, label %if.else, !dbg !10730

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %window, metadata !10731, metadata !DIExpression()), !dbg !10735
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10736
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %4), !dbg !10737
  store %struct.wmWindow* %call, %struct.wmWindow** %window, align 8, !dbg !10735
  %5 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !10738
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10739
  %ar = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 55, !dbg !10740
  %7 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10740
  call void @WM_paint_cursor_tag_redraw(%struct.wmWindow* %5, %struct.ARegion* %7), !dbg !10741
  br label %if.end18, !dbg !10742

if.else:                                          ; preds = %if.then
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10743
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 1, !dbg !10746
  %9 = load i32, i32* %flag, align 4, !dbg !10746
  %and3 = and i32 %9, 4, !dbg !10747
  %tobool4 = icmp ne i32 %and3, 0, !dbg !10747
  br i1 %tobool4, label %if.then5, label %if.else6, !dbg !10748

if.then5:                                         ; preds = %if.else
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10749
  call void @WM_event_add_notifier(%struct.bContext* %10, i32 85196800, i8* null), !dbg !10750
  br label %if.end, !dbg !10750

if.else6:                                         ; preds = %if.else
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10751
  call void @WM_event_add_notifier(%struct.bContext* %11, i32 85065728, i8* null), !dbg !10752
  br label %if.end

if.end:                                           ; preds = %if.else6, %if.then5
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10753
  %animtimer = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 58, !dbg !10755
  %13 = load %struct.wmTimer*, %struct.wmTimer** %animtimer, align 8, !dbg !10755
  %tobool7 = icmp ne %struct.wmTimer* %13, null, !dbg !10756
  br i1 %tobool7, label %land.lhs.true, label %if.end17, !dbg !10757

land.lhs.true:                                    ; preds = %if.end
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10758
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 56, !dbg !10758
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10758
  %tobool8 = icmp ne %struct.Scene* %15, null, !dbg !10758
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !10759

cond.true:                                        ; preds = %land.lhs.true
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10758
  %scene9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 56, !dbg !10758
  %17 = load %struct.Scene*, %struct.Scene** %scene9, align 8, !dbg !10758
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %17, i32 0, i32 20, !dbg !10758
  %18 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !10758
  %autokey_mode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %18, i32 0, i32 21, !dbg !10758
  %19 = load i16, i16* %autokey_mode, align 8, !dbg !10758
  %conv10 = sext i16 %19 to i32, !dbg !10758
  %and11 = and i32 %conv10, 1, !dbg !10758
  %tobool12 = icmp ne i32 %and11, 0, !dbg !10758
  br i1 %tobool12, label %if.then16, label %if.end17, !dbg !10758

cond.false:                                       ; preds = %land.lhs.true
  %20 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 91), align 8, !dbg !10758
  %conv13 = sext i16 %20 to i32, !dbg !10758
  %and14 = and i32 %conv13, 1, !dbg !10758
  %tobool15 = icmp ne i32 %and14, 0, !dbg !10758
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !10759

if.then16:                                        ; preds = %cond.false, %cond.true
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10760
  call void @WM_event_add_notifier(%struct.bContext* %21, i32 85524480, i8* null), !dbg !10761
  br label %if.end17, !dbg !10761

if.end17:                                         ; preds = %if.then16, %cond.false, %cond.true, %if.end
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then2
  br label %if.end104, !dbg !10762

if.else19:                                        ; preds = %entry
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10763
  %spacetype20 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 33, !dbg !10765
  %23 = load i8, i8* %spacetype20, align 8, !dbg !10765
  %conv21 = zext i8 %23 to i32, !dbg !10763
  %cmp22 = icmp eq i32 %conv21, 12, !dbg !10766
  br i1 %cmp22, label %if.then24, label %if.else25, !dbg !10767

if.then24:                                        ; preds = %if.else19
  %24 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10768
  call void @WM_event_add_notifier(%struct.bContext* %24, i32 239468545, i8* null), !dbg !10770
  br label %if.end103, !dbg !10771

if.else25:                                        ; preds = %if.else19
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10772
  %spacetype26 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 33, !dbg !10774
  %26 = load i8, i8* %spacetype26, align 8, !dbg !10774
  %conv27 = zext i8 %26 to i32, !dbg !10772
  %cmp28 = icmp eq i32 %conv27, 2, !dbg !10775
  br i1 %cmp28, label %if.then30, label %if.else31, !dbg !10776

if.then30:                                        ; preds = %if.else25
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10777
  call void @WM_event_add_notifier(%struct.bContext* %27, i32 239468545, i8* null), !dbg !10779
  br label %if.end102, !dbg !10780

if.else31:                                        ; preds = %if.else25
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10781
  %spacetype32 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 33, !dbg !10783
  %29 = load i8, i8* %spacetype32, align 8, !dbg !10783
  %conv33 = zext i8 %29 to i32, !dbg !10781
  %cmp34 = icmp eq i32 %conv33, 13, !dbg !10784
  br i1 %cmp34, label %if.then36, label %if.else37, !dbg !10785

if.then36:                                        ; preds = %if.else31
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10786
  call void @WM_event_add_notifier(%struct.bContext* %30, i32 239665153, i8* null), !dbg !10788
  br label %if.end101, !dbg !10789

if.else37:                                        ; preds = %if.else31
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10790
  %spacetype38 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %31, i32 0, i32 33, !dbg !10792
  %32 = load i8, i8* %spacetype38, align 8, !dbg !10792
  %conv39 = zext i8 %32 to i32, !dbg !10790
  %cmp40 = icmp eq i32 %conv39, 16, !dbg !10793
  br i1 %cmp40, label %if.then42, label %if.else43, !dbg !10794

if.then42:                                        ; preds = %if.else37
  %33 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10795
  call void @WM_event_add_notifier(%struct.bContext* %33, i32 252772352, i8* null), !dbg !10797
  br label %if.end100, !dbg !10798

if.else43:                                        ; preds = %if.else37
  %34 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10799
  %spacetype44 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %34, i32 0, i32 33, !dbg !10801
  %35 = load i8, i8* %spacetype44, align 8, !dbg !10801
  %conv45 = zext i8 %35 to i32, !dbg !10799
  %cmp46 = icmp eq i32 %conv45, 8, !dbg !10802
  br i1 %cmp46, label %if.then48, label %if.else49, !dbg !10803

if.then48:                                        ; preds = %if.else43
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10804
  call void @WM_event_add_notifier(%struct.bContext* %36, i32 67502080, i8* null), !dbg !10806
  br label %if.end99, !dbg !10807

if.else49:                                        ; preds = %if.else43
  %37 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10808
  %spacetype50 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %37, i32 0, i32 33, !dbg !10810
  %38 = load i8, i8* %spacetype50, align 8, !dbg !10810
  %conv51 = zext i8 %38 to i32, !dbg !10808
  %cmp52 = icmp eq i32 %conv51, 6, !dbg !10811
  br i1 %cmp52, label %if.then54, label %if.else76, !dbg !10812

if.then54:                                        ; preds = %if.else49
  %39 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10813
  %options55 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %39, i32 0, i32 4, !dbg !10816
  %40 = load i32, i32* %options55, align 8, !dbg !10816
  %and56 = and i32 %40, 128, !dbg !10817
  %tobool57 = icmp ne i32 %and56, 0, !dbg !10817
  br i1 %tobool57, label %if.then58, label %if.else60, !dbg !10818

if.then58:                                        ; preds = %if.then54
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !10819, metadata !DIExpression()), !dbg !10823
  %41 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10824
  %call59 = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %41), !dbg !10825
  store %struct.Mask* %call59, %struct.Mask** %mask, align 8, !dbg !10823
  %42 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10826
  %43 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !10827
  %44 = bitcast %struct.Mask* %43 to i8*, !dbg !10827
  call void @WM_event_add_notifier(%struct.bContext* %42, i32 352321537, i8* %44), !dbg !10828
  br label %if.end75, !dbg !10829

if.else60:                                        ; preds = %if.then54
  %45 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10830
  %options61 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %45, i32 0, i32 4, !dbg !10832
  %46 = load i32, i32* %options61, align 8, !dbg !10832
  %and62 = and i32 %46, 256, !dbg !10833
  %tobool63 = icmp ne i32 %and62, 0, !dbg !10833
  br i1 %tobool63, label %if.then64, label %if.else68, !dbg !10834

if.then64:                                        ; preds = %if.else60
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %window65, metadata !10835, metadata !DIExpression()), !dbg !10837
  %47 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10838
  %call66 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %47), !dbg !10839
  store %struct.wmWindow* %call66, %struct.wmWindow** %window65, align 8, !dbg !10837
  %48 = load %struct.wmWindow*, %struct.wmWindow** %window65, align 8, !dbg !10840
  %49 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10841
  %ar67 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %49, i32 0, i32 55, !dbg !10842
  %50 = load %struct.ARegion*, %struct.ARegion** %ar67, align 8, !dbg !10842
  call void @WM_paint_cursor_tag_redraw(%struct.wmWindow* %48, %struct.ARegion* %50), !dbg !10843
  br label %if.end74, !dbg !10844

if.else68:                                        ; preds = %if.else60
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !10845, metadata !DIExpression()), !dbg !10847
  %51 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10848
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %51, i32 0, i32 54, !dbg !10849
  %52 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !10849
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %52, i32 0, i32 19, !dbg !10850
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !10851
  %53 = load i8*, i8** %first, align 8, !dbg !10851
  %54 = bitcast i8* %53 to %struct.SpaceImage*, !dbg !10852
  store %struct.SpaceImage* %54, %struct.SpaceImage** %sima, align 8, !dbg !10847
  %55 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !10853
  %lock = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %55, i32 0, i32 21, !dbg !10855
  %56 = load i16, i16* %lock, align 2, !dbg !10855
  %tobool69 = icmp ne i16 %56, 0, !dbg !10853
  br i1 %tobool69, label %if.then70, label %if.else71, !dbg !10856

if.then70:                                        ; preds = %if.else68
  %57 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10857
  %58 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10858
  %obedit = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %58, i32 0, i32 63, !dbg !10859
  %59 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10859
  %data = getelementptr inbounds %struct.Object, %struct.Object* %59, i32 0, i32 19, !dbg !10860
  %60 = load i8*, i8** %data, align 8, !dbg !10860
  call void @WM_event_add_notifier(%struct.bContext* %57, i32 274399232, i8* %60), !dbg !10861
  br label %if.end73, !dbg !10861

if.else71:                                        ; preds = %if.else68
  %61 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10862
  %sa72 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %61, i32 0, i32 54, !dbg !10863
  %62 = load %struct.ScrArea*, %struct.ScrArea** %sa72, align 8, !dbg !10863
  call void @ED_area_tag_redraw(%struct.ScrArea* %62), !dbg !10864
  br label %if.end73

if.end73:                                         ; preds = %if.else71, %if.then70
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then64
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then58
  br label %if.end98, !dbg !10865

if.else76:                                        ; preds = %if.else49
  %63 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10866
  %spacetype77 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %63, i32 0, i32 33, !dbg !10868
  %64 = load i8, i8* %spacetype77, align 8, !dbg !10868
  %conv78 = zext i8 %64 to i32, !dbg !10866
  %cmp79 = icmp eq i32 %conv78, 20, !dbg !10869
  br i1 %cmp79, label %if.then81, label %if.end97, !dbg !10870

if.then81:                                        ; preds = %if.else76
  call void @llvm.dbg.declare(metadata %struct.SpaceClip** %sc, metadata !10871, metadata !DIExpression()), !dbg !10873
  %65 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10874
  %sa82 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %65, i32 0, i32 54, !dbg !10875
  %66 = load %struct.ScrArea*, %struct.ScrArea** %sa82, align 8, !dbg !10875
  %spacedata83 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %66, i32 0, i32 19, !dbg !10876
  %first84 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata83, i32 0, i32 0, !dbg !10877
  %67 = load i8*, i8** %first84, align 8, !dbg !10877
  %68 = bitcast i8* %67 to %struct.SpaceClip*, !dbg !10878
  store %struct.SpaceClip* %68, %struct.SpaceClip** %sc, align 8, !dbg !10873
  %69 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !10879
  %call85 = call zeroext i8 @ED_space_clip_check_show_trackedit(%struct.SpaceClip* %69), !dbg !10881
  %tobool86 = icmp ne i8 %call85, 0, !dbg !10881
  br i1 %tobool86, label %if.then87, label %if.else89, !dbg !10882

if.then87:                                        ; preds = %if.then81
  call void @llvm.dbg.declare(metadata %struct.MovieClip** %clip, metadata !10883, metadata !DIExpression()), !dbg !10885
  %70 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !10886
  %call88 = call %struct.MovieClip* @ED_space_clip_get_clip(%struct.SpaceClip* %70), !dbg !10887
  store %struct.MovieClip* %call88, %struct.MovieClip** %clip, align 8, !dbg !10885
  %71 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10888
  call void @WM_event_add_notifier(%struct.bContext* %71, i32 85065728, i8* null), !dbg !10889
  %72 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10890
  %73 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !10891
  %74 = bitcast %struct.MovieClip* %73 to i8*, !dbg !10891
  call void @WM_event_add_notifier(%struct.bContext* %72, i32 335544321, i8* %74), !dbg !10892
  br label %if.end96, !dbg !10893

if.else89:                                        ; preds = %if.then81
  %75 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !10894
  %call90 = call zeroext i8 @ED_space_clip_check_show_maskedit(%struct.SpaceClip* %75), !dbg !10896
  %tobool91 = icmp ne i8 %call90, 0, !dbg !10896
  br i1 %tobool91, label %if.then92, label %if.end95, !dbg !10897

if.then92:                                        ; preds = %if.else89
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask93, metadata !10898, metadata !DIExpression()), !dbg !10900
  %76 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10901
  %call94 = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %76), !dbg !10902
  store %struct.Mask* %call94, %struct.Mask** %mask93, align 8, !dbg !10900
  %77 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10903
  %78 = load %struct.Mask*, %struct.Mask** %mask93, align 8, !dbg !10904
  %79 = bitcast %struct.Mask* %78 to i8*, !dbg !10904
  call void @WM_event_add_notifier(%struct.bContext* %77, i32 352321537, i8* %79), !dbg !10905
  br label %if.end95, !dbg !10906

if.end95:                                         ; preds = %if.then92, %if.else89
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then87
  br label %if.end97, !dbg !10907

if.end97:                                         ; preds = %if.end96, %if.else76
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.end75
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.then48
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then42
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.then36
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then30
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.then24
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.end18
  ret void, !dbg !10908
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @transformEnd(%struct.bContext* %C, %struct.TransInfo* %t) #0 !dbg !10909 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %t.addr = alloca %struct.TransInfo*, align 8
  %exit_code = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10912, metadata !DIExpression()), !dbg !10913
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !10914, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.declare(metadata i32* %exit_code, metadata !10916, metadata !DIExpression()), !dbg !10917
  store i32 1, i32* %exit_code, align 4, !dbg !10917
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10918
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10919
  %context = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 53, !dbg !10920
  store %struct.bContext* %0, %struct.bContext** %context, align 8, !dbg !10921
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10922
  %state = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 3, !dbg !10924
  %3 = load i16, i16* %state, align 4, !dbg !10924
  %conv = sext i16 %3 to i32, !dbg !10922
  %cmp = icmp ne i32 %conv, 0, !dbg !10925
  br i1 %cmp, label %land.lhs.true, label %if.end15, !dbg !10926

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10927
  %state2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 3, !dbg !10928
  %5 = load i16, i16* %state2, align 4, !dbg !10928
  %conv3 = sext i16 %5 to i32, !dbg !10927
  %cmp4 = icmp ne i32 %conv3, 1, !dbg !10929
  br i1 %cmp4, label %if.then, label %if.end15, !dbg !10930

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10931
  %state6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 3, !dbg !10934
  %7 = load i16, i16* %state6, align 4, !dbg !10934
  %conv7 = sext i16 %7 to i32, !dbg !10931
  %cmp8 = icmp eq i32 %conv7, 3, !dbg !10935
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !10936

if.then10:                                        ; preds = %if.then
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10937
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 0, !dbg !10940
  %9 = load i32, i32* %mode, align 8, !dbg !10940
  %cmp11 = icmp eq i32 %9, 28, !dbg !10941
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !10942

if.then13:                                        ; preds = %if.then10
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10943
  %call = call i32 @doEdgeSlide(%struct.TransInfo* %10, float 0.000000e+00), !dbg !10944
  br label %if.end, !dbg !10944

if.end:                                           ; preds = %if.then13, %if.then10
  store i32 2, i32* %exit_code, align 4, !dbg !10945
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10946
  call void @restoreTransObjects(%struct.TransInfo* %11), !dbg !10947
  br label %if.end14, !dbg !10948

if.else:                                          ; preds = %if.then
  store i32 4, i32* %exit_code, align 4, !dbg !10949
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.end
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10951
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10952
  call void @special_aftertrans_update(%struct.bContext* %12, %struct.TransInfo* %13), !dbg !10953
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10954
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10955
  call void @postTrans(%struct.bContext* %14, %struct.TransInfo* %15), !dbg !10956
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10957
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10958
  call void @viewRedrawPost(%struct.bContext* %16, %struct.TransInfo* %17), !dbg !10959
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10960
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10961
  call void @viewRedrawForce(%struct.bContext* %18, %struct.TransInfo* %19), !dbg !10962
  br label %if.end15, !dbg !10963

if.end15:                                         ; preds = %if.end14, %land.lhs.true, %entry
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10964
  %context16 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 53, !dbg !10965
  store %struct.bContext* null, %struct.bContext** %context16, align 8, !dbg !10966
  %21 = load i32, i32* %exit_code, align 4, !dbg !10967
  ret i32 %21, !dbg !10968
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @doEdgeSlide(%struct.TransInfo* %t, float %perc) #0 !dbg !10969 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %perc.addr = alloca float, align 4
  %sld = alloca %struct.EdgeSlideData*, align 8
  %svlist = alloca %struct.TransDataEdgeSlideVert*, align 8
  %sv1 = alloca %struct.TransDataEdgeSlideVert*, align 8
  %i = alloca i32, align 4
  %vec = alloca [3 x float], align 4
  %curr_sv = alloca %struct.TransDataEdgeSlideVert*, align 8
  %curr_length_perc = alloca float, align 4
  %co_a = alloca [3 x float], align 4
  %co_b = alloca [3 x float], align 4
  %fac = alloca float, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !10972, metadata !DIExpression()), !dbg !10973
  store float %perc, float* %perc.addr, align 4
  call void @llvm.dbg.declare(metadata float* %perc.addr, metadata !10974, metadata !DIExpression()), !dbg !10975
  call void @llvm.dbg.declare(metadata %struct.EdgeSlideData** %sld, metadata !10976, metadata !DIExpression()), !dbg !10977
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !10978
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 40, !dbg !10979
  %1 = load i8*, i8** %customData, align 8, !dbg !10979
  %2 = bitcast i8* %1 to %struct.EdgeSlideData*, !dbg !10978
  store %struct.EdgeSlideData* %2, %struct.EdgeSlideData** %sld, align 8, !dbg !10977
  call void @llvm.dbg.declare(metadata %struct.TransDataEdgeSlideVert** %svlist, metadata !10980, metadata !DIExpression()), !dbg !10981
  %3 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !10982
  %sv = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %3, i32 0, i32 0, !dbg !10983
  %4 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !10983
  store %struct.TransDataEdgeSlideVert* %4, %struct.TransDataEdgeSlideVert** %svlist, align 8, !dbg !10981
  call void @llvm.dbg.declare(metadata %struct.TransDataEdgeSlideVert** %sv1, metadata !10984, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10986, metadata !DIExpression()), !dbg !10987
  %5 = load float, float* %perc.addr, align 4, !dbg !10988
  %6 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !10989
  %perc2 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %6, i32 0, i32 8, !dbg !10990
  store float %5, float* %perc2, align 8, !dbg !10991
  %7 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %svlist, align 8, !dbg !10992
  store %struct.TransDataEdgeSlideVert* %7, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !10993
  %8 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !10994
  %is_proportional = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %8, i32 0, i32 9, !dbg !10996
  %9 = load i8, i8* %is_proportional, align 4, !dbg !10996
  %conv = zext i8 %9 to i32, !dbg !10994
  %cmp = icmp eq i32 %conv, 1, !dbg !10997
  br i1 %cmp, label %if.then, label %if.else23, !dbg !10998

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !10999
  br label %for.cond, !dbg !11002

for.cond:                                         ; preds = %for.inc, %if.then
  %10 = load i32, i32* %i, align 4, !dbg !11003
  %11 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11005
  %totsv = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %11, i32 0, i32 1, !dbg !11006
  %12 = load i32, i32* %totsv, align 8, !dbg !11006
  %cmp4 = icmp slt i32 %10, %12, !dbg !11007
  br i1 %cmp4, label %for.body, label %for.end, !dbg !11008

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !11009, metadata !DIExpression()), !dbg !11011
  %13 = load float, float* %perc.addr, align 4, !dbg !11012
  %cmp6 = fcmp ogt float %13, 0.000000e+00, !dbg !11014
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !11015

if.then8:                                         ; preds = %for.body
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !11016
  %14 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11018
  %dir_a = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %14, i32 0, i32 5, !dbg !11019
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %dir_a, i64 0, i64 0, !dbg !11018
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay9), !dbg !11020
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !11021
  %15 = load float, float* %perc.addr, align 4, !dbg !11022
  call void @mul_v3_fl(float* %arraydecay10, float %15), !dbg !11023
  %16 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11024
  %v = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %16, i32 0, i32 2, !dbg !11025
  %17 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11025
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %17, i32 0, i32 2, !dbg !11026
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11024
  %18 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11027
  %v_co_orig = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %18, i32 0, i32 3, !dbg !11028
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %v_co_orig, i64 0, i64 0, !dbg !11027
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !11029
  call void @add_v3_v3v3(float* %arraydecay11, float* %arraydecay12, float* %arraydecay13), !dbg !11030
  br label %if.end, !dbg !11031

if.else:                                          ; preds = %for.body
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !11032
  %19 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11034
  %dir_b = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %19, i32 0, i32 6, !dbg !11035
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %dir_b, i64 0, i64 0, !dbg !11034
  call void @copy_v3_v3(float* %arraydecay14, float* %arraydecay15), !dbg !11036
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !11037
  %20 = load float, float* %perc.addr, align 4, !dbg !11038
  %fneg = fneg float %20, !dbg !11039
  call void @mul_v3_fl(float* %arraydecay16, float %fneg), !dbg !11040
  %21 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11041
  %v17 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %21, i32 0, i32 2, !dbg !11042
  %22 = load %struct.BMVert*, %struct.BMVert** %v17, align 8, !dbg !11042
  %co18 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %22, i32 0, i32 2, !dbg !11043
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %co18, i64 0, i64 0, !dbg !11041
  %23 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11044
  %v_co_orig20 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %23, i32 0, i32 3, !dbg !11045
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %v_co_orig20, i64 0, i64 0, !dbg !11044
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !11046
  call void @add_v3_v3v3(float* %arraydecay19, float* %arraydecay21, float* %arraydecay22), !dbg !11047
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %for.inc, !dbg !11048

for.inc:                                          ; preds = %if.end
  %24 = load i32, i32* %i, align 4, !dbg !11049
  %inc = add nsw i32 %24, 1, !dbg !11049
  store i32 %inc, i32* %i, align 4, !dbg !11049
  %25 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11050
  %incdec.ptr = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %25, i32 1, !dbg !11050
  store %struct.TransDataEdgeSlideVert* %incdec.ptr, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11050
  br label %for.cond, !dbg !11051, !llvm.loop !11052

for.end:                                          ; preds = %for.cond
  br label %if.end73, !dbg !11054

if.else23:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.TransDataEdgeSlideVert** %curr_sv, metadata !11055, metadata !DIExpression()), !dbg !11057
  %26 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11058
  %sv24 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %26, i32 0, i32 0, !dbg !11059
  %27 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv24, align 8, !dbg !11059
  %28 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11060
  %curr_sv_index = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %28, i32 0, i32 11, !dbg !11061
  %29 = load i32, i32* %curr_sv_index, align 8, !dbg !11061
  %idxprom = sext i32 %29 to i64, !dbg !11058
  %arrayidx = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %27, i64 %idxprom, !dbg !11058
  store %struct.TransDataEdgeSlideVert* %arrayidx, %struct.TransDataEdgeSlideVert** %curr_sv, align 8, !dbg !11057
  call void @llvm.dbg.declare(metadata float* %curr_length_perc, metadata !11062, metadata !DIExpression()), !dbg !11063
  %30 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %curr_sv, align 8, !dbg !11064
  %edge_len = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %30, i32 0, i32 4, !dbg !11065
  %31 = load float, float* %edge_len, align 4, !dbg !11065
  %32 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11066
  %flipped_vtx = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %32, i32 0, i32 10, !dbg !11067
  %33 = load i8, i8* %flipped_vtx, align 1, !dbg !11067
  %conv25 = zext i8 %33 to i32, !dbg !11066
  %tobool = icmp ne i32 %conv25, 0, !dbg !11066
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11066

cond.true:                                        ; preds = %if.else23
  %34 = load float, float* %perc.addr, align 4, !dbg !11068
  br label %cond.end, !dbg !11066

cond.false:                                       ; preds = %if.else23
  %35 = load float, float* %perc.addr, align 4, !dbg !11069
  %fneg26 = fneg float %35, !dbg !11070
  br label %cond.end, !dbg !11066

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %34, %cond.true ], [ %fneg26, %cond.false ], !dbg !11066
  %add = fadd float %cond, 1.000000e+00, !dbg !11071
  %div = fdiv float %add, 2.000000e+00, !dbg !11072
  %mul = fmul float %31, %div, !dbg !11073
  store float %mul, float* %curr_length_perc, align 4, !dbg !11063
  call void @llvm.dbg.declare(metadata [3 x float]* %co_a, metadata !11074, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.declare(metadata [3 x float]* %co_b, metadata !11076, metadata !DIExpression()), !dbg !11077
  store i32 0, i32* %i, align 4, !dbg !11078
  br label %for.cond27, !dbg !11080

for.cond27:                                       ; preds = %for.inc69, %cond.end
  %36 = load i32, i32* %i, align 4, !dbg !11081
  %37 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11083
  %totsv28 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %37, i32 0, i32 1, !dbg !11084
  %38 = load i32, i32* %totsv28, align 8, !dbg !11084
  %cmp29 = icmp slt i32 %36, %38, !dbg !11085
  br i1 %cmp29, label %for.body31, label %for.end72, !dbg !11086

for.body31:                                       ; preds = %for.cond27
  %39 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11087
  %edge_len32 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %39, i32 0, i32 4, !dbg !11090
  %40 = load float, float* %edge_len32, align 4, !dbg !11090
  %cmp33 = fcmp ogt float %40, 0x3E80000000000000, !dbg !11091
  br i1 %cmp33, label %if.then35, label %if.end68, !dbg !11092

if.then35:                                        ; preds = %for.body31
  call void @llvm.dbg.declare(metadata float* %fac, metadata !11093, metadata !DIExpression()), !dbg !11095
  %41 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11096
  %edge_len36 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %41, i32 0, i32 4, !dbg !11097
  %42 = load float, float* %edge_len36, align 4, !dbg !11097
  %43 = load float, float* %curr_length_perc, align 4, !dbg !11098
  %call = call float @min_ff(float %42, float %43), !dbg !11099
  %44 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11100
  %edge_len37 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %44, i32 0, i32 4, !dbg !11101
  %45 = load float, float* %edge_len37, align 4, !dbg !11101
  %div38 = fdiv float %call, %45, !dbg !11102
  store float %div38, float* %fac, align 4, !dbg !11095
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %co_a, i64 0, i64 0, !dbg !11103
  %46 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11104
  %v_co_orig40 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %46, i32 0, i32 3, !dbg !11105
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %v_co_orig40, i64 0, i64 0, !dbg !11104
  %47 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11106
  %dir_a42 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %47, i32 0, i32 5, !dbg !11107
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %dir_a42, i64 0, i64 0, !dbg !11106
  call void @add_v3_v3v3(float* %arraydecay39, float* %arraydecay41, float* %arraydecay43), !dbg !11108
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %co_b, i64 0, i64 0, !dbg !11109
  %48 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11110
  %v_co_orig45 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %48, i32 0, i32 3, !dbg !11111
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %v_co_orig45, i64 0, i64 0, !dbg !11110
  %49 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11112
  %dir_b47 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %49, i32 0, i32 6, !dbg !11113
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %dir_b47, i64 0, i64 0, !dbg !11112
  call void @add_v3_v3v3(float* %arraydecay44, float* %arraydecay46, float* %arraydecay48), !dbg !11114
  %50 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11115
  %flipped_vtx49 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %50, i32 0, i32 10, !dbg !11117
  %51 = load i8, i8* %flipped_vtx49, align 1, !dbg !11117
  %tobool50 = icmp ne i8 %51, 0, !dbg !11115
  br i1 %tobool50, label %if.then51, label %if.else59, !dbg !11118

if.then51:                                        ; preds = %if.then35
  %52 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11119
  %v52 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %52, i32 0, i32 2, !dbg !11121
  %53 = load %struct.BMVert*, %struct.BMVert** %v52, align 8, !dbg !11121
  %co53 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %53, i32 0, i32 2, !dbg !11122
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %co53, i64 0, i64 0, !dbg !11119
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %co_b, i64 0, i64 0, !dbg !11123
  %54 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11124
  %v_co_orig56 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %54, i32 0, i32 3, !dbg !11125
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %v_co_orig56, i64 0, i64 0, !dbg !11124
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %co_a, i64 0, i64 0, !dbg !11126
  %55 = load float, float* %fac, align 4, !dbg !11127
  call void @interp_line_v3_v3v3v3(float* %arraydecay54, float* %arraydecay55, float* %arraydecay57, float* %arraydecay58, float %55), !dbg !11128
  br label %if.end67, !dbg !11129

if.else59:                                        ; preds = %if.then35
  %56 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11130
  %v60 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %56, i32 0, i32 2, !dbg !11132
  %57 = load %struct.BMVert*, %struct.BMVert** %v60, align 8, !dbg !11132
  %co61 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %57, i32 0, i32 2, !dbg !11133
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %co61, i64 0, i64 0, !dbg !11130
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %co_a, i64 0, i64 0, !dbg !11134
  %58 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11135
  %v_co_orig64 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %58, i32 0, i32 3, !dbg !11136
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %v_co_orig64, i64 0, i64 0, !dbg !11135
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %co_b, i64 0, i64 0, !dbg !11137
  %59 = load float, float* %fac, align 4, !dbg !11138
  call void @interp_line_v3_v3v3v3(float* %arraydecay62, float* %arraydecay63, float* %arraydecay65, float* %arraydecay66, float %59), !dbg !11139
  br label %if.end67

if.end67:                                         ; preds = %if.else59, %if.then51
  br label %if.end68, !dbg !11140

if.end68:                                         ; preds = %if.end67, %for.body31
  br label %for.inc69, !dbg !11141

for.inc69:                                        ; preds = %if.end68
  %60 = load i32, i32* %i, align 4, !dbg !11142
  %inc70 = add nsw i32 %60, 1, !dbg !11142
  store i32 %inc70, i32* %i, align 4, !dbg !11142
  %61 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11143
  %incdec.ptr71 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %61, i32 1, !dbg !11143
  store %struct.TransDataEdgeSlideVert* %incdec.ptr71, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !11143
  br label %for.cond27, !dbg !11144, !llvm.loop !11145

for.end72:                                        ; preds = %for.cond27
  br label %if.end73

if.end73:                                         ; preds = %for.end72, %for.end
  %62 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11147
  call void @projectEdgeSlideData(%struct.TransInfo* %62, i8 zeroext 0), !dbg !11148
  ret i32 1, !dbg !11149
}

; Function Attrs: noinline nounwind uwtable
define internal void @viewRedrawPost(%struct.bContext* %C, %struct.TransInfo* %t) #0 !dbg !11150 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11151, metadata !DIExpression()), !dbg !11152
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !11153, metadata !DIExpression()), !dbg !11154
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11155
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 54, !dbg !11156
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11156
  call void @ED_area_headerprint(%struct.ScrArea* %1, i8* null), !dbg !11157
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11158
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 33, !dbg !11160
  %3 = load i8, i8* %spacetype, align 8, !dbg !11160
  %conv = zext i8 %3 to i32, !dbg !11158
  %cmp = icmp eq i32 %conv, 1, !dbg !11161
  br i1 %cmp, label %if.then, label %if.end16, !dbg !11162

if.then:                                          ; preds = %entry
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11163
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 56, !dbg !11163
  %5 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11163
  %tobool = icmp ne %struct.Scene* %5, null, !dbg !11163
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11166

cond.true:                                        ; preds = %if.then
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11163
  %scene2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 56, !dbg !11163
  %7 = load %struct.Scene*, %struct.Scene** %scene2, align 8, !dbg !11163
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 20, !dbg !11163
  %8 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !11163
  %autokey_mode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %8, i32 0, i32 21, !dbg !11163
  %9 = load i16, i16* %autokey_mode, align 8, !dbg !11163
  %conv3 = sext i16 %9 to i32, !dbg !11163
  %and = and i32 %conv3, 1, !dbg !11163
  %tobool4 = icmp ne i32 %and, 0, !dbg !11163
  br i1 %tobool4, label %if.then8, label %if.end, !dbg !11163

cond.false:                                       ; preds = %if.then
  %10 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 91), align 8, !dbg !11163
  %conv5 = sext i16 %10 to i32, !dbg !11163
  %and6 = and i32 %conv5, 1, !dbg !11163
  %tobool7 = icmp ne i32 %and6, 0, !dbg !11163
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !11166

if.then8:                                         ; preds = %cond.false, %cond.true
  call void @WM_main_add_notifier(i32 239468545, i8* null), !dbg !11167
  br label %if.end, !dbg !11167

if.end:                                           ; preds = %if.then8, %cond.false, %cond.true
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11168
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 0, !dbg !11170
  %12 = load i32, i32* %mode, align 8, !dbg !11170
  %cmp9 = icmp eq i32 %12, 28, !dbg !11171
  br i1 %cmp9, label %land.lhs.true, label %if.end15, !dbg !11172

land.lhs.true:                                    ; preds = %if.end
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11173
  %settings = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 57, !dbg !11174
  %14 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !11174
  %uvcalc_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %14, i32 0, i32 10, !dbg !11175
  %15 = load i8, i8* %uvcalc_flag, align 1, !dbg !11175
  %conv11 = zext i8 %15 to i32, !dbg !11173
  %and12 = and i32 %conv11, 4, !dbg !11176
  %tobool13 = icmp ne i32 %and12, 0, !dbg !11176
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !11177

if.then14:                                        ; preds = %land.lhs.true
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11178
  call void @WM_event_add_notifier(%struct.bContext* %16, i32 274399232, i8* null), !dbg !11179
  br label %if.end15, !dbg !11179

if.end15:                                         ; preds = %if.then14, %land.lhs.true, %if.end
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11180
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11181
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %18), !dbg !11182
  %19 = bitcast %struct.Scene* %call to i8*, !dbg !11182
  call void @WM_event_add_notifier(%struct.bContext* %17, i32 68288512, i8* %19), !dbg !11183
  br label %if.end16, !dbg !11184

if.end16:                                         ; preds = %if.end15, %entry
  ret void, !dbg !11185
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @projectEdgeSlideData(%struct.TransInfo* %t, i8 zeroext %is_final) #0 !dbg !11186 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %is_final.addr = alloca i8, align 1
  %sld = alloca %struct.EdgeSlideData*, align 8
  %sv = alloca %struct.TransDataEdgeSlideVert*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %i = alloca i32, align 4
  %fiter = alloca %struct.BMIter, align 8
  %l = alloca %struct.BMLoop*, align 8
  %f_copy = alloca %struct.BMFace*, align 8
  %f_copy_flip = alloca %struct.BMFace*, align 8
  %l_ed_sel = alloca %struct.BMLoop*, align 8
  %eiter = alloca %struct.BMIter, align 8
  %e_sel = alloca %struct.BMEdge*, align 8
  %l_adj = alloca %struct.BMLoop*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !11189, metadata !DIExpression()), !dbg !11190
  store i8 %is_final, i8* %is_final.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_final.addr, metadata !11191, metadata !DIExpression()), !dbg !11192
  call void @llvm.dbg.declare(metadata %struct.EdgeSlideData** %sld, metadata !11193, metadata !DIExpression()), !dbg !11194
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11195
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 40, !dbg !11196
  %1 = load i8*, i8** %customData, align 8, !dbg !11196
  %2 = bitcast i8* %1 to %struct.EdgeSlideData*, !dbg !11195
  store %struct.EdgeSlideData* %2, %struct.EdgeSlideData** %sld, align 8, !dbg !11194
  call void @llvm.dbg.declare(metadata %struct.TransDataEdgeSlideVert** %sv, metadata !11197, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !11199, metadata !DIExpression()), !dbg !11202
  %3 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11203
  %em1 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %3, i32 0, i32 5, !dbg !11204
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em1, align 8, !dbg !11204
  store %struct.BMEditMesh* %4, %struct.BMEditMesh** %em, align 8, !dbg !11202
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11205, metadata !DIExpression()), !dbg !11206
  %5 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11207
  %use_origfaces = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %5, i32 0, i32 6, !dbg !11209
  %6 = load i8, i8* %use_origfaces, align 8, !dbg !11209
  %conv = zext i8 %6 to i32, !dbg !11207
  %cmp = icmp eq i32 %conv, 0, !dbg !11210
  br i1 %cmp, label %if.then, label %if.end, !dbg !11211

if.then:                                          ; preds = %entry
  br label %for.end151, !dbg !11212

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !11214
  %7 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11216
  %sv3 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %7, i32 0, i32 0, !dbg !11217
  %8 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv3, align 8, !dbg !11217
  store %struct.TransDataEdgeSlideVert* %8, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !11218
  br label %for.cond, !dbg !11219

for.cond:                                         ; preds = %for.inc150, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !11220
  %10 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11222
  %totsv = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %10, i32 0, i32 1, !dbg !11223
  %11 = load i32, i32* %totsv, align 8, !dbg !11223
  %cmp4 = icmp slt i32 %9, %11, !dbg !11224
  br i1 %cmp4, label %for.body, label %for.end151, !dbg !11225

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BMIter* %fiter, metadata !11226, metadata !DIExpression()), !dbg !11315
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !11316, metadata !DIExpression()), !dbg !11317
  %12 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !11318
  %v = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %12, i32 0, i32 2, !dbg !11318
  %13 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11318
  %14 = bitcast %struct.BMVert* %13 to i8*, !dbg !11318
  %call = call i8* @BM_iter_new(%struct.BMIter* %fiter, %struct.BMesh* null, i8 zeroext 6, i8* %14), !dbg !11318
  %15 = bitcast i8* %call to %struct.BMLoop*, !dbg !11318
  store %struct.BMLoop* %15, %struct.BMLoop** %l, align 8, !dbg !11318
  br label %for.cond6, !dbg !11318

for.cond6:                                        ; preds = %for.inc147, %for.body
  %16 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11320
  %tobool = icmp ne %struct.BMLoop* %16, null, !dbg !11318
  br i1 %tobool, label %for.body7, label %for.end149, !dbg !11318

for.body7:                                        ; preds = %for.cond6
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f_copy, metadata !11322, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f_copy_flip, metadata !11325, metadata !DIExpression()), !dbg !11326
  %17 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11327
  %origfaces = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %17, i32 0, i32 2, !dbg !11328
  %18 = load %struct.GHash*, %struct.GHash** %origfaces, align 8, !dbg !11328
  %19 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11329
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %19, i32 0, i32 3, !dbg !11330
  %20 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !11330
  %21 = bitcast %struct.BMFace* %20 to i8*, !dbg !11329
  %call8 = call i8* @BLI_ghash_lookup(%struct.GHash* %18, i8* %21), !dbg !11331
  %22 = bitcast i8* %call8 to %struct.BMFace*, !dbg !11331
  store %struct.BMFace* %22, %struct.BMFace** %f_copy, align 8, !dbg !11332
  %23 = load %struct.BMFace*, %struct.BMFace** %f_copy, align 8, !dbg !11333
  store %struct.BMFace* %23, %struct.BMFace** %f_copy_flip, align 8, !dbg !11334
  %24 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11335
  %e = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %24, i32 0, i32 2, !dbg !11335
  %25 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11335
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %25, i32 0, i32 0, !dbg !11335
  %call9 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !11335
  %conv10 = zext i8 %call9 to i32, !dbg !11335
  %tobool11 = icmp ne i32 %conv10, 0, !dbg !11335
  br i1 %tobool11, label %if.then17, label %lor.lhs.false, !dbg !11337

lor.lhs.false:                                    ; preds = %for.body7
  %26 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11338
  %prev = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %26, i32 0, i32 7, !dbg !11338
  %27 = load %struct.BMLoop*, %struct.BMLoop** %prev, align 8, !dbg !11338
  %e12 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %27, i32 0, i32 2, !dbg !11338
  %28 = load %struct.BMEdge*, %struct.BMEdge** %e12, align 8, !dbg !11338
  %head13 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %28, i32 0, i32 0, !dbg !11338
  %call14 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head13, i8 zeroext 1), !dbg !11338
  %conv15 = zext i8 %call14 to i32, !dbg !11338
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !11338
  br i1 %tobool16, label %if.then17, label %if.else56, !dbg !11339

if.then17:                                        ; preds = %lor.lhs.false, %for.body7
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_ed_sel, metadata !11340, metadata !DIExpression()), !dbg !11342
  %29 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11343
  store %struct.BMLoop* %29, %struct.BMLoop** %l_ed_sel, align 8, !dbg !11342
  %30 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11344
  %e18 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %30, i32 0, i32 2, !dbg !11344
  %31 = load %struct.BMEdge*, %struct.BMEdge** %e18, align 8, !dbg !11344
  %head19 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %31, i32 0, i32 0, !dbg !11344
  %call20 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head19, i8 zeroext 1), !dbg !11344
  %tobool21 = icmp ne i8 %call20, 0, !dbg !11344
  br i1 %tobool21, label %if.end24, label %if.then22, !dbg !11346

if.then22:                                        ; preds = %if.then17
  %32 = load %struct.BMLoop*, %struct.BMLoop** %l_ed_sel, align 8, !dbg !11347
  %prev23 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %32, i32 0, i32 7, !dbg !11348
  %33 = load %struct.BMLoop*, %struct.BMLoop** %prev23, align 8, !dbg !11348
  store %struct.BMLoop* %33, %struct.BMLoop** %l_ed_sel, align 8, !dbg !11349
  br label %if.end24, !dbg !11350

if.end24:                                         ; preds = %if.then22, %if.then17
  %34 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11351
  %perc = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %34, i32 0, i32 8, !dbg !11353
  %35 = load float, float* %perc, align 8, !dbg !11353
  %cmp25 = fcmp olt float %35, 0.000000e+00, !dbg !11354
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !11355

if.then27:                                        ; preds = %if.end24
  %36 = load %struct.BMLoop*, %struct.BMLoop** %l_ed_sel, align 8, !dbg !11356
  %radial_next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %36, i32 0, i32 4, !dbg !11359
  %37 = load %struct.BMLoop*, %struct.BMLoop** %radial_next, align 8, !dbg !11359
  %f28 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %37, i32 0, i32 3, !dbg !11360
  %38 = load %struct.BMFace*, %struct.BMFace** %f28, align 8, !dbg !11360
  %39 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !11361
  %v_b = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %39, i32 0, i32 1, !dbg !11362
  %40 = load %struct.BMVert*, %struct.BMVert** %v_b, align 8, !dbg !11362
  %call29 = call zeroext i8 @BM_vert_in_face(%struct.BMFace* %38, %struct.BMVert* %40), !dbg !11363
  %tobool30 = icmp ne i8 %call29, 0, !dbg !11363
  br i1 %tobool30, label %if.then31, label %if.end36, !dbg !11364

if.then31:                                        ; preds = %if.then27
  %41 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11365
  %origfaces32 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %41, i32 0, i32 2, !dbg !11367
  %42 = load %struct.GHash*, %struct.GHash** %origfaces32, align 8, !dbg !11367
  %43 = load %struct.BMLoop*, %struct.BMLoop** %l_ed_sel, align 8, !dbg !11368
  %radial_next33 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %43, i32 0, i32 4, !dbg !11369
  %44 = load %struct.BMLoop*, %struct.BMLoop** %radial_next33, align 8, !dbg !11369
  %f34 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %44, i32 0, i32 3, !dbg !11370
  %45 = load %struct.BMFace*, %struct.BMFace** %f34, align 8, !dbg !11370
  %46 = bitcast %struct.BMFace* %45 to i8*, !dbg !11368
  %call35 = call i8* @BLI_ghash_lookup(%struct.GHash* %42, i8* %46), !dbg !11371
  %47 = bitcast i8* %call35 to %struct.BMFace*, !dbg !11371
  store %struct.BMFace* %47, %struct.BMFace** %f_copy_flip, align 8, !dbg !11372
  br label %if.end36, !dbg !11373

if.end36:                                         ; preds = %if.then31, %if.then27
  br label %if.end52, !dbg !11374

if.else:                                          ; preds = %if.end24
  %48 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11375
  %perc37 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %48, i32 0, i32 8, !dbg !11377
  %49 = load float, float* %perc37, align 8, !dbg !11377
  %cmp38 = fcmp ogt float %49, 0.000000e+00, !dbg !11378
  br i1 %cmp38, label %if.then40, label %if.end51, !dbg !11379

if.then40:                                        ; preds = %if.else
  %50 = load %struct.BMLoop*, %struct.BMLoop** %l_ed_sel, align 8, !dbg !11380
  %radial_next41 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %50, i32 0, i32 4, !dbg !11383
  %51 = load %struct.BMLoop*, %struct.BMLoop** %radial_next41, align 8, !dbg !11383
  %f42 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %51, i32 0, i32 3, !dbg !11384
  %52 = load %struct.BMFace*, %struct.BMFace** %f42, align 8, !dbg !11384
  %53 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !11385
  %v_a = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %53, i32 0, i32 0, !dbg !11386
  %54 = load %struct.BMVert*, %struct.BMVert** %v_a, align 8, !dbg !11386
  %call43 = call zeroext i8 @BM_vert_in_face(%struct.BMFace* %52, %struct.BMVert* %54), !dbg !11387
  %tobool44 = icmp ne i8 %call43, 0, !dbg !11387
  br i1 %tobool44, label %if.then45, label %if.end50, !dbg !11388

if.then45:                                        ; preds = %if.then40
  %55 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11389
  %origfaces46 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %55, i32 0, i32 2, !dbg !11391
  %56 = load %struct.GHash*, %struct.GHash** %origfaces46, align 8, !dbg !11391
  %57 = load %struct.BMLoop*, %struct.BMLoop** %l_ed_sel, align 8, !dbg !11392
  %radial_next47 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %57, i32 0, i32 4, !dbg !11393
  %58 = load %struct.BMLoop*, %struct.BMLoop** %radial_next47, align 8, !dbg !11393
  %f48 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %58, i32 0, i32 3, !dbg !11394
  %59 = load %struct.BMFace*, %struct.BMFace** %f48, align 8, !dbg !11394
  %60 = bitcast %struct.BMFace* %59 to i8*, !dbg !11392
  %call49 = call i8* @BLI_ghash_lookup(%struct.GHash* %56, i8* %60), !dbg !11395
  %61 = bitcast i8* %call49 to %struct.BMFace*, !dbg !11395
  store %struct.BMFace* %61, %struct.BMFace** %f_copy_flip, align 8, !dbg !11396
  br label %if.end50, !dbg !11397

if.end50:                                         ; preds = %if.then45, %if.then40
  br label %if.end51, !dbg !11398

if.end51:                                         ; preds = %if.end50, %if.else
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.end36
  %62 = load %struct.BMFace*, %struct.BMFace** %f_copy_flip, align 8, !dbg !11399
  %tobool53 = icmp ne %struct.BMFace* %62, null, !dbg !11399
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !11401

if.then54:                                        ; preds = %if.end52
  br label %for.inc147, !dbg !11402

if.end55:                                         ; preds = %if.end52
  br label %if.end135, !dbg !11404

if.else56:                                        ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata %struct.BMIter* %eiter, metadata !11405, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e_sel, metadata !11408, metadata !DIExpression()), !dbg !11409
  %63 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !11410
  %v57 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %63, i32 0, i32 2, !dbg !11410
  %64 = load %struct.BMVert*, %struct.BMVert** %v57, align 8, !dbg !11410
  %65 = bitcast %struct.BMVert* %64 to i8*, !dbg !11410
  %call58 = call i8* @BM_iter_new(%struct.BMIter* %eiter, %struct.BMesh* null, i8 zeroext 4, i8* %65), !dbg !11410
  %66 = bitcast i8* %call58 to %struct.BMEdge*, !dbg !11410
  store %struct.BMEdge* %66, %struct.BMEdge** %e_sel, align 8, !dbg !11410
  br label %for.cond59, !dbg !11410

for.cond59:                                       ; preds = %for.inc, %if.else56
  %67 = load %struct.BMEdge*, %struct.BMEdge** %e_sel, align 8, !dbg !11412
  %tobool60 = icmp ne %struct.BMEdge* %67, null, !dbg !11410
  br i1 %tobool60, label %for.body61, label %for.end, !dbg !11410

for.body61:                                       ; preds = %for.cond59
  %68 = load %struct.BMEdge*, %struct.BMEdge** %e_sel, align 8, !dbg !11414
  %head62 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %68, i32 0, i32 0, !dbg !11414
  %call63 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head62, i8 zeroext 1), !dbg !11414
  %tobool64 = icmp ne i8 %call63, 0, !dbg !11414
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !11417

if.then65:                                        ; preds = %for.body61
  br label %for.end, !dbg !11418

if.end66:                                         ; preds = %for.body61
  br label %for.inc, !dbg !11420

for.inc:                                          ; preds = %if.end66
  %call67 = call i8* @BM_iter_step(%struct.BMIter* %eiter), !dbg !11412
  %69 = bitcast i8* %call67 to %struct.BMEdge*, !dbg !11412
  store %struct.BMEdge* %69, %struct.BMEdge** %e_sel, align 8, !dbg !11412
  br label %for.cond59, !dbg !11412, !llvm.loop !11421

for.end:                                          ; preds = %if.then65, %for.cond59
  %70 = load %struct.BMEdge*, %struct.BMEdge** %e_sel, align 8, !dbg !11423
  %tobool68 = icmp ne %struct.BMEdge* %70, null, !dbg !11423
  br i1 %tobool68, label %if.then69, label %if.end134, !dbg !11425

if.then69:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_adj, metadata !11426, metadata !DIExpression()), !dbg !11428
  store %struct.BMLoop* null, %struct.BMLoop** %l_adj, align 8, !dbg !11428
  %71 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11429
  %perc70 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %71, i32 0, i32 8, !dbg !11431
  %72 = load float, float* %perc70, align 8, !dbg !11431
  %cmp71 = fcmp olt float %72, 0.000000e+00, !dbg !11432
  br i1 %cmp71, label %if.then73, label %if.else93, !dbg !11433

if.then73:                                        ; preds = %if.then69
  %73 = load %struct.BMEdge*, %struct.BMEdge** %e_sel, align 8, !dbg !11434
  %l74 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %73, i32 0, i32 4, !dbg !11437
  %74 = load %struct.BMLoop*, %struct.BMLoop** %l74, align 8, !dbg !11437
  %f75 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %74, i32 0, i32 3, !dbg !11438
  %75 = load %struct.BMFace*, %struct.BMFace** %f75, align 8, !dbg !11438
  %76 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !11439
  %v_b76 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %76, i32 0, i32 1, !dbg !11440
  %77 = load %struct.BMVert*, %struct.BMVert** %v_b76, align 8, !dbg !11440
  %call77 = call zeroext i8 @BM_vert_in_face(%struct.BMFace* %75, %struct.BMVert* %77), !dbg !11441
  %tobool78 = icmp ne i8 %call77, 0, !dbg !11441
  br i1 %tobool78, label %if.then79, label %if.else81, !dbg !11442

if.then79:                                        ; preds = %if.then73
  %78 = load %struct.BMEdge*, %struct.BMEdge** %e_sel, align 8, !dbg !11443
  %l80 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %78, i32 0, i32 4, !dbg !11445
  %79 = load %struct.BMLoop*, %struct.BMLoop** %l80, align 8, !dbg !11445
  store %struct.BMLoop* %79, %struct.BMLoop** %l_adj, align 8, !dbg !11446
  br label %if.end92, !dbg !11447

if.else81:                                        ; preds = %if.then73
  %80 = load %struct.BMEdge*, %struct.BMEdge** %e_sel, align 8, !dbg !11448
  %l82 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %80, i32 0, i32 4, !dbg !11450
  %81 = load %struct.BMLoop*, %struct.BMLoop** %l82, align 8, !dbg !11450
  %radial_next83 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %81, i32 0, i32 4, !dbg !11451
  %82 = load %struct.BMLoop*, %struct.BMLoop** %radial_next83, align 8, !dbg !11451
  %f84 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %82, i32 0, i32 3, !dbg !11452
  %83 = load %struct.BMFace*, %struct.BMFace** %f84, align 8, !dbg !11452
  %84 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !11453
  %v_b85 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %84, i32 0, i32 1, !dbg !11454
  %85 = load %struct.BMVert*, %struct.BMVert** %v_b85, align 8, !dbg !11454
  %call86 = call zeroext i8 @BM_vert_in_face(%struct.BMFace* %83, %struct.BMVert* %85), !dbg !11455
  %tobool87 = icmp ne i8 %call86, 0, !dbg !11455
  br i1 %tobool87, label %if.then88, label %if.end91, !dbg !11456

if.then88:                                        ; preds = %if.else81
  %86 = load %struct.BMEdge*, %struct.BMEdge** %e_sel, align 8, !dbg !11457
  %l89 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %86, i32 0, i32 4, !dbg !11459
  %87 = load %struct.BMLoop*, %struct.BMLoop** %l89, align 8, !dbg !11459
  %radial_next90 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %87, i32 0, i32 4, !dbg !11460
  %88 = load %struct.BMLoop*, %struct.BMLoop** %radial_next90, align 8, !dbg !11460
  store %struct.BMLoop* %88, %struct.BMLoop** %l_adj, align 8, !dbg !11461
  br label %if.end91, !dbg !11462

if.end91:                                         ; preds = %if.then88, %if.else81
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.then79
  br label %if.end118, !dbg !11463

if.else93:                                        ; preds = %if.then69
  %89 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11464
  %perc94 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %89, i32 0, i32 8, !dbg !11466
  %90 = load float, float* %perc94, align 8, !dbg !11466
  %cmp95 = fcmp ogt float %90, 0.000000e+00, !dbg !11467
  br i1 %cmp95, label %if.then97, label %if.end117, !dbg !11468

if.then97:                                        ; preds = %if.else93
  %91 = load %struct.BMEdge*, %struct.BMEdge** %e_sel, align 8, !dbg !11469
  %l98 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %91, i32 0, i32 4, !dbg !11472
  %92 = load %struct.BMLoop*, %struct.BMLoop** %l98, align 8, !dbg !11472
  %f99 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %92, i32 0, i32 3, !dbg !11473
  %93 = load %struct.BMFace*, %struct.BMFace** %f99, align 8, !dbg !11473
  %94 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !11474
  %v_a100 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %94, i32 0, i32 0, !dbg !11475
  %95 = load %struct.BMVert*, %struct.BMVert** %v_a100, align 8, !dbg !11475
  %call101 = call zeroext i8 @BM_vert_in_face(%struct.BMFace* %93, %struct.BMVert* %95), !dbg !11476
  %tobool102 = icmp ne i8 %call101, 0, !dbg !11476
  br i1 %tobool102, label %if.then103, label %if.else105, !dbg !11477

if.then103:                                       ; preds = %if.then97
  %96 = load %struct.BMEdge*, %struct.BMEdge** %e_sel, align 8, !dbg !11478
  %l104 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %96, i32 0, i32 4, !dbg !11480
  %97 = load %struct.BMLoop*, %struct.BMLoop** %l104, align 8, !dbg !11480
  store %struct.BMLoop* %97, %struct.BMLoop** %l_adj, align 8, !dbg !11481
  br label %if.end116, !dbg !11482

if.else105:                                       ; preds = %if.then97
  %98 = load %struct.BMEdge*, %struct.BMEdge** %e_sel, align 8, !dbg !11483
  %l106 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %98, i32 0, i32 4, !dbg !11485
  %99 = load %struct.BMLoop*, %struct.BMLoop** %l106, align 8, !dbg !11485
  %radial_next107 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %99, i32 0, i32 4, !dbg !11486
  %100 = load %struct.BMLoop*, %struct.BMLoop** %radial_next107, align 8, !dbg !11486
  %f108 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %100, i32 0, i32 3, !dbg !11487
  %101 = load %struct.BMFace*, %struct.BMFace** %f108, align 8, !dbg !11487
  %102 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !11488
  %v_a109 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %102, i32 0, i32 0, !dbg !11489
  %103 = load %struct.BMVert*, %struct.BMVert** %v_a109, align 8, !dbg !11489
  %call110 = call zeroext i8 @BM_vert_in_face(%struct.BMFace* %101, %struct.BMVert* %103), !dbg !11490
  %tobool111 = icmp ne i8 %call110, 0, !dbg !11490
  br i1 %tobool111, label %if.then112, label %if.end115, !dbg !11491

if.then112:                                       ; preds = %if.else105
  %104 = load %struct.BMEdge*, %struct.BMEdge** %e_sel, align 8, !dbg !11492
  %l113 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %104, i32 0, i32 4, !dbg !11494
  %105 = load %struct.BMLoop*, %struct.BMLoop** %l113, align 8, !dbg !11494
  %radial_next114 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %105, i32 0, i32 4, !dbg !11495
  %106 = load %struct.BMLoop*, %struct.BMLoop** %radial_next114, align 8, !dbg !11495
  store %struct.BMLoop* %106, %struct.BMLoop** %l_adj, align 8, !dbg !11496
  br label %if.end115, !dbg !11497

if.end115:                                        ; preds = %if.then112, %if.else105
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.then103
  br label %if.end117, !dbg !11498

if.end117:                                        ; preds = %if.end116, %if.else93
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.end92
  %107 = load %struct.BMLoop*, %struct.BMLoop** %l_adj, align 8, !dbg !11499
  %tobool119 = icmp ne %struct.BMLoop* %107, null, !dbg !11499
  br i1 %tobool119, label %if.then120, label %if.end133, !dbg !11501

if.then120:                                       ; preds = %if.end118
  %108 = load %struct.BMLoop*, %struct.BMLoop** %l_adj, align 8, !dbg !11502
  %109 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !11504
  %v121 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %109, i32 0, i32 2, !dbg !11505
  %110 = load %struct.BMVert*, %struct.BMVert** %v121, align 8, !dbg !11505
  %call122 = call %struct.BMLoop* @BM_loop_other_edge_loop(%struct.BMLoop* %108, %struct.BMVert* %110), !dbg !11506
  store %struct.BMLoop* %call122, %struct.BMLoop** %l_adj, align 8, !dbg !11507
  %111 = load %struct.BMLoop*, %struct.BMLoop** %l_adj, align 8, !dbg !11508
  %e123 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %111, i32 0, i32 2, !dbg !11510
  %112 = load %struct.BMEdge*, %struct.BMEdge** %e123, align 8, !dbg !11510
  %call124 = call zeroext i8 @BM_edge_is_boundary(%struct.BMEdge* %112), !dbg !11511
  %tobool125 = icmp ne i8 %call124, 0, !dbg !11511
  br i1 %tobool125, label %if.else128, label %if.then126, !dbg !11512

if.then126:                                       ; preds = %if.then120
  %113 = load %struct.BMLoop*, %struct.BMLoop** %l_adj, align 8, !dbg !11513
  %radial_next127 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %113, i32 0, i32 4, !dbg !11515
  %114 = load %struct.BMLoop*, %struct.BMLoop** %radial_next127, align 8, !dbg !11515
  store %struct.BMLoop* %114, %struct.BMLoop** %l_adj, align 8, !dbg !11516
  br label %if.end129, !dbg !11517

if.else128:                                       ; preds = %if.then120
  %115 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11518
  store %struct.BMLoop* %115, %struct.BMLoop** %l_adj, align 8, !dbg !11520
  br label %if.end129

if.end129:                                        ; preds = %if.else128, %if.then126
  %116 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11521
  %origfaces130 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %116, i32 0, i32 2, !dbg !11522
  %117 = load %struct.GHash*, %struct.GHash** %origfaces130, align 8, !dbg !11522
  %118 = load %struct.BMLoop*, %struct.BMLoop** %l_adj, align 8, !dbg !11523
  %f131 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %118, i32 0, i32 3, !dbg !11524
  %119 = load %struct.BMFace*, %struct.BMFace** %f131, align 8, !dbg !11524
  %120 = bitcast %struct.BMFace* %119 to i8*, !dbg !11523
  %call132 = call i8* @BLI_ghash_lookup(%struct.GHash* %117, i8* %120), !dbg !11525
  %121 = bitcast i8* %call132 to %struct.BMFace*, !dbg !11525
  store %struct.BMFace* %121, %struct.BMFace** %f_copy_flip, align 8, !dbg !11526
  br label %if.end133, !dbg !11527

if.end133:                                        ; preds = %if.end129, %if.end118
  br label %if.end134, !dbg !11528

if.end134:                                        ; preds = %if.end133, %for.end
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.end55
  %122 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11529
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %122, i32 0, i32 0, !dbg !11530
  %123 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11530
  %124 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11531
  %125 = load %struct.BMFace*, %struct.BMFace** %f_copy_flip, align 8, !dbg !11532
  call void @BM_loop_interp_from_face(%struct.BMesh* %123, %struct.BMLoop* %124, %struct.BMFace* %125, i8 zeroext 0, i8 zeroext 0), !dbg !11533
  %126 = load i8, i8* %is_final.addr, align 1, !dbg !11534
  %tobool136 = icmp ne i8 %126, 0, !dbg !11534
  br i1 %tobool136, label %if.then137, label %if.end144, !dbg !11536

if.then137:                                       ; preds = %if.end135
  %127 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11537
  %bm138 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %127, i32 0, i32 0, !dbg !11539
  %128 = load %struct.BMesh*, %struct.BMesh** %bm138, align 8, !dbg !11539
  %129 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11540
  %130 = load %struct.BMFace*, %struct.BMFace** %f_copy_flip, align 8, !dbg !11541
  call void @BM_loop_interp_multires(%struct.BMesh* %128, %struct.BMLoop* %129, %struct.BMFace* %130), !dbg !11542
  %131 = load %struct.BMFace*, %struct.BMFace** %f_copy, align 8, !dbg !11543
  %132 = load %struct.BMFace*, %struct.BMFace** %f_copy_flip, align 8, !dbg !11545
  %cmp139 = icmp ne %struct.BMFace* %131, %132, !dbg !11546
  br i1 %cmp139, label %if.then141, label %if.end143, !dbg !11547

if.then141:                                       ; preds = %if.then137
  %133 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11548
  %bm142 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %133, i32 0, i32 0, !dbg !11550
  %134 = load %struct.BMesh*, %struct.BMesh** %bm142, align 8, !dbg !11550
  %135 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11551
  %136 = load %struct.BMFace*, %struct.BMFace** %f_copy, align 8, !dbg !11552
  call void @BM_loop_interp_multires(%struct.BMesh* %134, %struct.BMLoop* %135, %struct.BMFace* %136), !dbg !11553
  br label %if.end143, !dbg !11554

if.end143:                                        ; preds = %if.then141, %if.then137
  br label %if.end144, !dbg !11555

if.end144:                                        ; preds = %if.end143, %if.end135
  %137 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11556
  %bm_origfaces = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %137, i32 0, i32 7, !dbg !11557
  %138 = load %struct.BMesh*, %struct.BMesh** %bm_origfaces, align 8, !dbg !11557
  %139 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11558
  %bm145 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %139, i32 0, i32 0, !dbg !11559
  %140 = load %struct.BMesh*, %struct.BMesh** %bm145, align 8, !dbg !11559
  %141 = load %struct.BMFace*, %struct.BMFace** %f_copy, align 8, !dbg !11560
  %142 = bitcast %struct.BMFace* %141 to i8*, !dbg !11560
  %143 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11561
  %f146 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %143, i32 0, i32 3, !dbg !11562
  %144 = load %struct.BMFace*, %struct.BMFace** %f146, align 8, !dbg !11562
  %145 = bitcast %struct.BMFace* %144 to i8*, !dbg !11561
  call void @BM_elem_attrs_copy(%struct.BMesh* %138, %struct.BMesh* %140, i8* %142, i8* %145), !dbg !11563
  br label %for.inc147, !dbg !11564

for.inc147:                                       ; preds = %if.end144, %if.then54
  %call148 = call i8* @BM_iter_step(%struct.BMIter* %fiter), !dbg !11320
  %146 = bitcast i8* %call148 to %struct.BMLoop*, !dbg !11320
  store %struct.BMLoop* %146, %struct.BMLoop** %l, align 8, !dbg !11320
  br label %for.cond6, !dbg !11320, !llvm.loop !11565

for.end149:                                       ; preds = %for.cond6
  br label %for.inc150, !dbg !11567

for.inc150:                                       ; preds = %for.end149
  %147 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !11568
  %incdec.ptr = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %147, i32 1, !dbg !11568
  store %struct.TransDataEdgeSlideVert* %incdec.ptr, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !11568
  %148 = load i32, i32* %i, align 4, !dbg !11569
  %inc = add nsw i32 %148, 1, !dbg !11569
  store i32 %inc, i32* %i, align 4, !dbg !11569
  br label %for.cond, !dbg !11570, !llvm.loop !11571

for.end151:                                       ; preds = %if.then, %for.cond
  ret void, !dbg !11573
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !11574 {
entry:
  %retval = alloca i8*, align 8
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !11579, metadata !DIExpression()), !dbg !11580
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !11581, metadata !DIExpression()), !dbg !11582
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !11583, metadata !DIExpression()), !dbg !11584
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11585, metadata !DIExpression()), !dbg !11586
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11587
  %1 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11587
  %2 = load i8, i8* %itype.addr, align 1, !dbg !11587
  %3 = load i8*, i8** %data.addr, align 8, !dbg !11587
  %call = call zeroext i8 @BM_iter_init(%struct.BMIter* %0, %struct.BMesh* %1, i8 zeroext %2, i8* %3), !dbg !11587
  %tobool = icmp ne i8 %call, 0, !dbg !11587
  br i1 %tobool, label %if.then, label %if.else, !dbg !11589

if.then:                                          ; preds = %entry
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11590
  %call1 = call i8* @BM_iter_step(%struct.BMIter* %4), !dbg !11592
  store i8* %call1, i8** %retval, align 8, !dbg !11593
  br label %return, !dbg !11593

if.else:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11594
  br label %return, !dbg !11594

return:                                           ; preds = %if.else, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !11596
  ret i8* %5, !dbg !11596
}

declare dso_local i8* @BLI_ghash_lookup(%struct.GHash*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !11597 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !11603, metadata !DIExpression()), !dbg !11604
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !11605, metadata !DIExpression()), !dbg !11606
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !11607
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 3, !dbg !11608
  %1 = load i8, i8* %hflag1, align 1, !dbg !11608
  %conv = zext i8 %1 to i32, !dbg !11607
  %2 = load i8, i8* %hflag.addr, align 1, !dbg !11609
  %conv2 = zext i8 %2 to i32, !dbg !11609
  %and = and i32 %conv, %conv2, !dbg !11610
  %conv3 = trunc i32 %and to i8, !dbg !11607
  ret i8 %conv3, !dbg !11611
}

declare dso_local zeroext i8 @BM_vert_in_face(%struct.BMFace*, %struct.BMVert*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_step(%struct.BMIter* %iter) #0 !dbg !11612 {
entry:
  %iter.addr = alloca %struct.BMIter*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !11615, metadata !DIExpression()), !dbg !11616
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11617
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %0, i32 0, i32 2, !dbg !11618
  %1 = load i8* (i8*)*, i8* (i8*)** %step, align 8, !dbg !11618
  %2 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11619
  %3 = bitcast %struct.BMIter* %2 to i8*, !dbg !11619
  %call = call i8* %1(i8* %3), !dbg !11617
  ret i8* %call, !dbg !11620
}

declare dso_local %struct.BMLoop* @BM_loop_other_edge_loop(%struct.BMLoop*, %struct.BMVert*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_edge_is_boundary(%struct.BMEdge* %e) #0 !dbg !11621 {
entry:
  %e.addr = alloca %struct.BMEdge*, align 8
  %l = alloca %struct.BMLoop*, align 8
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !11627, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !11629, metadata !DIExpression()), !dbg !11632
  %0 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !11633
  %l1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %0, i32 0, i32 4, !dbg !11634
  %1 = load %struct.BMLoop*, %struct.BMLoop** %l1, align 8, !dbg !11634
  store %struct.BMLoop* %1, %struct.BMLoop** %l, align 8, !dbg !11632
  %2 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11635
  %tobool = icmp ne %struct.BMLoop* %2, null, !dbg !11635
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !11636

land.rhs:                                         ; preds = %entry
  %3 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11637
  %radial_next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %3, i32 0, i32 4, !dbg !11638
  %4 = load %struct.BMLoop*, %struct.BMLoop** %radial_next, align 8, !dbg !11638
  %5 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11639
  %cmp = icmp eq %struct.BMLoop* %4, %5, !dbg !11640
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !11641
  %land.ext = zext i1 %6 to i32, !dbg !11636
  %conv = trunc i32 %land.ext to i8, !dbg !11642
  ret i8 %conv, !dbg !11643
}

declare dso_local void @BM_loop_interp_from_face(%struct.BMesh*, %struct.BMLoop*, %struct.BMFace*, i8 zeroext, i8 zeroext) #2

declare dso_local void @BM_loop_interp_multires(%struct.BMesh*, %struct.BMLoop*, %struct.BMFace*) #2

declare dso_local void @BM_elem_attrs_copy(%struct.BMesh*, %struct.BMesh*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @freeEdgeSlideTempFaces(%struct.EdgeSlideData* %sld) #0 !dbg !11644 {
entry:
  %sld.addr = alloca %struct.EdgeSlideData*, align 8
  store %struct.EdgeSlideData* %sld, %struct.EdgeSlideData** %sld.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EdgeSlideData** %sld.addr, metadata !11647, metadata !DIExpression()), !dbg !11648
  %0 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld.addr, align 8, !dbg !11649
  %use_origfaces = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %0, i32 0, i32 6, !dbg !11651
  %1 = load i8, i8* %use_origfaces, align 8, !dbg !11651
  %tobool = icmp ne i8 %1, 0, !dbg !11649
  br i1 %tobool, label %if.then, label %if.end10, !dbg !11652

if.then:                                          ; preds = %entry
  %2 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld.addr, align 8, !dbg !11653
  %bm_origfaces = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %2, i32 0, i32 7, !dbg !11656
  %3 = load %struct.BMesh*, %struct.BMesh** %bm_origfaces, align 8, !dbg !11656
  %tobool1 = icmp ne %struct.BMesh* %3, null, !dbg !11653
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !11657

if.then2:                                         ; preds = %if.then
  %4 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld.addr, align 8, !dbg !11658
  %bm_origfaces3 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %4, i32 0, i32 7, !dbg !11660
  %5 = load %struct.BMesh*, %struct.BMesh** %bm_origfaces3, align 8, !dbg !11660
  call void @BM_mesh_free(%struct.BMesh* %5), !dbg !11661
  %6 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld.addr, align 8, !dbg !11662
  %bm_origfaces4 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %6, i32 0, i32 7, !dbg !11663
  store %struct.BMesh* null, %struct.BMesh** %bm_origfaces4, align 8, !dbg !11664
  br label %if.end, !dbg !11665

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld.addr, align 8, !dbg !11666
  %origfaces = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %7, i32 0, i32 2, !dbg !11668
  %8 = load %struct.GHash*, %struct.GHash** %origfaces, align 8, !dbg !11668
  %tobool5 = icmp ne %struct.GHash* %8, null, !dbg !11666
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !11669

if.then6:                                         ; preds = %if.end
  %9 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld.addr, align 8, !dbg !11670
  %origfaces7 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %9, i32 0, i32 2, !dbg !11672
  %10 = load %struct.GHash*, %struct.GHash** %origfaces7, align 8, !dbg !11672
  call void @BLI_ghash_free(%struct.GHash* %10, void (i8*)* null, void (i8*)* null), !dbg !11673
  %11 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld.addr, align 8, !dbg !11674
  %origfaces8 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %11, i32 0, i32 2, !dbg !11675
  store %struct.GHash* null, %struct.GHash** %origfaces8, align 8, !dbg !11676
  br label %if.end9, !dbg !11677

if.end9:                                          ; preds = %if.then6, %if.end
  br label %if.end10, !dbg !11678

if.end10:                                         ; preds = %if.end9, %entry
  ret void, !dbg !11679
}

declare dso_local void @BM_mesh_free(%struct.BMesh*) #2

declare dso_local void @BLI_ghash_free(%struct.GHash*, void (i8*)*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @freeEdgeSlideVerts(%struct.TransInfo* %t) #0 !dbg !11680 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %sld = alloca %struct.EdgeSlideData*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !11681, metadata !DIExpression()), !dbg !11682
  call void @llvm.dbg.declare(metadata %struct.EdgeSlideData** %sld, metadata !11683, metadata !DIExpression()), !dbg !11684
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11685
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 40, !dbg !11686
  %1 = load i8*, i8** %customData, align 8, !dbg !11686
  %2 = bitcast i8* %1 to %struct.EdgeSlideData*, !dbg !11685
  store %struct.EdgeSlideData* %2, %struct.EdgeSlideData** %sld, align 8, !dbg !11684
  %3 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11687
  %tobool = icmp ne %struct.EdgeSlideData* %3, null, !dbg !11687
  br i1 %tobool, label %if.end, label %if.then, !dbg !11689

if.then:                                          ; preds = %entry
  br label %return, !dbg !11690

if.end:                                           ; preds = %entry
  %4 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11691
  call void @freeEdgeSlideTempFaces(%struct.EdgeSlideData* %4), !dbg !11692
  %5 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11693
  %em = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %5, i32 0, i32 5, !dbg !11694
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11694
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !11695
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11695
  call void @bmesh_edit_end(%struct.BMesh* %7, i32 1), !dbg !11696
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11697
  %9 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11698
  %sv = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %9, i32 0, i32 0, !dbg !11699
  %10 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !11699
  %11 = bitcast %struct.TransDataEdgeSlideVert* %10 to i8*, !dbg !11698
  call void %8(i8* %11), !dbg !11697
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11700
  %13 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11701
  %14 = bitcast %struct.EdgeSlideData* %13 to i8*, !dbg !11701
  call void %12(i8* %14), !dbg !11700
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11702
  %customData1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 40, !dbg !11703
  store i8* null, i8** %customData1, align 8, !dbg !11704
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11705
  call void @recalcData(%struct.TransInfo* %16), !dbg !11706
  br label %return, !dbg !11707

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11707
}

declare dso_local void @bmesh_edit_end(%struct.BMesh*, i32) #2

declare dso_local void @recalcData(%struct.TransInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @freeVertSlideVerts(%struct.TransInfo* %t) #0 !dbg !11708 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %sld = alloca %struct.VertSlideData*, align 8
  %sv = alloca %struct.TransDataVertSlideVert*, align 8
  %i = alloca i32, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !11709, metadata !DIExpression()), !dbg !11710
  call void @llvm.dbg.declare(metadata %struct.VertSlideData** %sld, metadata !11711, metadata !DIExpression()), !dbg !11712
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11713
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 40, !dbg !11714
  %1 = load i8*, i8** %customData, align 8, !dbg !11714
  %2 = bitcast i8* %1 to %struct.VertSlideData*, !dbg !11713
  store %struct.VertSlideData* %2, %struct.VertSlideData** %sld, align 8, !dbg !11712
  %3 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !11715
  %tobool = icmp ne %struct.VertSlideData* %3, null, !dbg !11715
  br i1 %tobool, label %if.end, label %if.then, !dbg !11717

if.then:                                          ; preds = %entry
  br label %return, !dbg !11718

if.end:                                           ; preds = %entry
  %4 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !11719
  %totsv = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %4, i32 0, i32 1, !dbg !11721
  %5 = load i32, i32* %totsv, align 8, !dbg !11721
  %cmp = icmp sgt i32 %5, 0, !dbg !11722
  br i1 %cmp, label %if.then1, label %if.end5, !dbg !11723

if.then1:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.TransDataVertSlideVert** %sv, metadata !11724, metadata !DIExpression()), !dbg !11726
  %6 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !11727
  %sv2 = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %6, i32 0, i32 0, !dbg !11728
  %7 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv2, align 8, !dbg !11728
  store %struct.TransDataVertSlideVert* %7, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !11726
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11729, metadata !DIExpression()), !dbg !11730
  store i32 0, i32* %i, align 4, !dbg !11730
  store i32 0, i32* %i, align 4, !dbg !11731
  br label %for.cond, !dbg !11733

for.cond:                                         ; preds = %for.inc, %if.then1
  %8 = load i32, i32* %i, align 4, !dbg !11734
  %9 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !11736
  %totsv3 = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %9, i32 0, i32 1, !dbg !11737
  %10 = load i32, i32* %totsv3, align 8, !dbg !11737
  %cmp4 = icmp slt i32 %8, %10, !dbg !11738
  br i1 %cmp4, label %for.body, label %for.end, !dbg !11739

for.body:                                         ; preds = %for.cond
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11740
  %12 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !11742
  %co_link_orig_2d = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %12, i32 0, i32 4, !dbg !11743
  %13 = load [2 x float]*, [2 x float]** %co_link_orig_2d, align 8, !dbg !11743
  %14 = bitcast [2 x float]* %13 to i8*, !dbg !11742
  call void %11(i8* %14), !dbg !11740
  %15 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11744
  %16 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !11745
  %co_link_orig_3d = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %16, i32 0, i32 3, !dbg !11746
  %17 = load [3 x float]*, [3 x float]** %co_link_orig_3d, align 8, !dbg !11746
  %18 = bitcast [3 x float]* %17 to i8*, !dbg !11745
  call void %15(i8* %18), !dbg !11744
  br label %for.inc, !dbg !11747

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !11748
  %inc = add nsw i32 %19, 1, !dbg !11748
  store i32 %inc, i32* %i, align 4, !dbg !11748
  %20 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !11749
  %incdec.ptr = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %20, i32 1, !dbg !11749
  store %struct.TransDataVertSlideVert* %incdec.ptr, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !11749
  br label %for.cond, !dbg !11750, !llvm.loop !11751

for.end:                                          ; preds = %for.cond
  br label %if.end5, !dbg !11753

if.end5:                                          ; preds = %for.end, %if.end
  %21 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11754
  %22 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !11755
  %sv6 = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %22, i32 0, i32 0, !dbg !11756
  %23 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv6, align 8, !dbg !11756
  %24 = bitcast %struct.TransDataVertSlideVert* %23 to i8*, !dbg !11755
  call void %21(i8* %24), !dbg !11754
  %25 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11757
  %26 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !11758
  %27 = bitcast %struct.VertSlideData* %26 to i8*, !dbg !11758
  call void %25(i8* %27), !dbg !11757
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11759
  %customData7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 40, !dbg !11760
  store i8* null, i8** %customData7, align 8, !dbg !11761
  %29 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11762
  call void @recalcData(%struct.TransInfo* %29), !dbg !11763
  br label %return, !dbg !11764

return:                                           ; preds = %if.end5, %if.then
  ret void, !dbg !11764
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @checkUseAxisMatrix(%struct.TransInfo* %t) #0 !dbg !11765 {
entry:
  %retval = alloca i8, align 1
  %t.addr = alloca %struct.TransInfo*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !11768, metadata !DIExpression()), !dbg !11769
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11770
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 1, !dbg !11772
  %1 = load i32, i32* %flag, align 4, !dbg !11772
  %and = and i32 %1, 2, !dbg !11773
  %tobool = icmp ne i32 %and, 0, !dbg !11773
  br i1 %tobool, label %if.then, label %if.end23, !dbg !11774

if.then:                                          ; preds = %entry
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11775
  %around = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 32, !dbg !11778
  %3 = load i16, i16* %around, align 2, !dbg !11778
  %conv = sext i16 %3 to i32, !dbg !11775
  %cmp = icmp eq i32 %conv, 2, !dbg !11779
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11780

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11781
  %obedit = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 63, !dbg !11781
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11781
  %type = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 3, !dbg !11781
  %6 = load i16, i16* %type, align 8, !dbg !11781
  %conv2 = sext i16 %6 to i32, !dbg !11781
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !11781
  br i1 %cmp3, label %if.then22, label %lor.lhs.false, !dbg !11781

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11781
  %obedit5 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 63, !dbg !11781
  %8 = load %struct.Object*, %struct.Object** %obedit5, align 8, !dbg !11781
  %type6 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 3, !dbg !11781
  %9 = load i16, i16* %type6, align 8, !dbg !11781
  %conv7 = sext i16 %9 to i32, !dbg !11781
  %cmp8 = icmp eq i32 %conv7, 2, !dbg !11781
  br i1 %cmp8, label %if.then22, label %lor.lhs.false10, !dbg !11781

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11781
  %obedit11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 63, !dbg !11781
  %11 = load %struct.Object*, %struct.Object** %obedit11, align 8, !dbg !11781
  %type12 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 3, !dbg !11781
  %12 = load i16, i16* %type12, align 8, !dbg !11781
  %conv13 = sext i16 %12 to i32, !dbg !11781
  %cmp14 = icmp eq i32 %conv13, 5, !dbg !11781
  br i1 %cmp14, label %if.then22, label %lor.lhs.false16, !dbg !11781

lor.lhs.false16:                                  ; preds = %lor.lhs.false10
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11781
  %obedit17 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 63, !dbg !11781
  %14 = load %struct.Object*, %struct.Object** %obedit17, align 8, !dbg !11781
  %type18 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 3, !dbg !11781
  %15 = load i16, i16* %type18, align 8, !dbg !11781
  %conv19 = sext i16 %15 to i32, !dbg !11781
  %cmp20 = icmp eq i32 %conv19, 25, !dbg !11781
  br i1 %cmp20, label %if.then22, label %if.end, !dbg !11782

if.then22:                                        ; preds = %lor.lhs.false16, %lor.lhs.false10, %lor.lhs.false, %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !11783
  br label %return, !dbg !11783

if.end:                                           ; preds = %lor.lhs.false16, %if.then
  br label %if.end23, !dbg !11785

if.end23:                                         ; preds = %if.end, %entry
  store i8 0, i8* %retval, align 1, !dbg !11786
  br label %return, !dbg !11786

return:                                           ; preds = %if.end23, %if.then22
  %16 = load i8, i8* %retval, align 1, !dbg !11787
  ret i8 %16, !dbg !11787
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_size_x(%struct.rcti* %rct) #0 !dbg !11788 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !11794, metadata !DIExpression()), !dbg !11795
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !11796
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 1, !dbg !11797
  %1 = load i32, i32* %xmax, align 4, !dbg !11797
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !11798
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 0, !dbg !11799
  %3 = load i32, i32* %xmin, align 4, !dbg !11799
  %sub = sub nsw i32 %1, %3, !dbg !11800
  ret i32 %sub, !dbg !11801
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_size_y(%struct.rcti* %rct) #0 !dbg !11802 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !11803, metadata !DIExpression()), !dbg !11804
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !11805
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 3, !dbg !11806
  %1 = load i32, i32* %ymax, align 4, !dbg !11806
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !11807
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 2, !dbg !11808
  %3 = load i32, i32* %ymin, align 4, !dbg !11808
  %sub = sub nsw i32 %1, %3, !dbg !11809
  ret i32 %sub, !dbg !11810
}

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_size_x(%struct.rctf* %rct) #0 !dbg !11811 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !11816, metadata !DIExpression()), !dbg !11817
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !11818
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 1, !dbg !11819
  %1 = load float, float* %xmax, align 4, !dbg !11819
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !11820
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 0, !dbg !11821
  %3 = load float, float* %xmin, align 4, !dbg !11821
  %sub = fsub float %1, %3, !dbg !11822
  ret float %sub, !dbg !11823
}

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_size_y(%struct.rctf* %rct) #0 !dbg !11824 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !11825, metadata !DIExpression()), !dbg !11826
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !11827
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 3, !dbg !11828
  %1 = load float, float* %ymax, align 4, !dbg !11828
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !11829
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 2, !dbg !11830
  %3 = load float, float* %ymin, align 4, !dbg !11830
  %sub = fsub float %1, %3, !dbg !11831
  ret float %sub, !dbg !11832
}

declare dso_local void @drawConstraint(%struct.TransInfo*) #2

declare dso_local void @drawPropCircle(%struct.bContext*, %struct.TransInfo*) #2

declare dso_local void @drawSnapping(%struct.bContext*, %struct.TransInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @drawEdgeSlide(%struct.bContext* %C, %struct.TransInfo* %t) #0 !dbg !11833 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %t.addr = alloca %struct.TransInfo*, align 8
  %sld = alloca %struct.EdgeSlideData*, align 8
  %v3d = alloca %struct.View3D*, align 8
  %co_a = alloca [3 x float], align 4
  %co_b = alloca [3 x float], align 4
  %co_mark = alloca [3 x float], align 4
  %curr_sv = alloca %struct.TransDataEdgeSlideVert*, align 8
  %fac = alloca float, align 4
  %ctrl_size = alloca float, align 4
  %guide_size = alloca float, align 4
  %line_size = alloca float, align 4
  %alpha_shade = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11836, metadata !DIExpression()), !dbg !11837
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !11838, metadata !DIExpression()), !dbg !11839
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11840
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !11842
  %1 = load i32, i32* %mode, align 8, !dbg !11842
  %cmp = icmp eq i32 %1, 28, !dbg !11843
  br i1 %cmp, label %if.then, label %if.end66, !dbg !11844

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.EdgeSlideData** %sld, metadata !11845, metadata !DIExpression()), !dbg !11847
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11848
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 40, !dbg !11849
  %3 = load i8*, i8** %customData, align 8, !dbg !11849
  %4 = bitcast i8* %3 to %struct.EdgeSlideData*, !dbg !11850
  store %struct.EdgeSlideData* %4, %struct.EdgeSlideData** %sld, align 8, !dbg !11847
  %5 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11851
  %tobool = icmp ne %struct.EdgeSlideData* %5, null, !dbg !11851
  br i1 %tobool, label %land.lhs.true, label %if.end65, !dbg !11853

land.lhs.true:                                    ; preds = %if.then
  %6 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11854
  %is_proportional = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %6, i32 0, i32 9, !dbg !11855
  %7 = load i8, i8* %is_proportional, align 4, !dbg !11855
  %conv = zext i8 %7 to i32, !dbg !11854
  %cmp1 = icmp eq i32 %conv, 0, !dbg !11856
  br i1 %cmp1, label %if.then3, label %if.end65, !dbg !11857

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d, metadata !11858, metadata !DIExpression()), !dbg !11860
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11861
  %call = call %struct.View3D* @CTX_wm_view3d(%struct.bContext* %8), !dbg !11862
  store %struct.View3D* %call, %struct.View3D** %v3d, align 8, !dbg !11860
  call void @llvm.dbg.declare(metadata [3 x float]* %co_a, metadata !11863, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.declare(metadata [3 x float]* %co_b, metadata !11865, metadata !DIExpression()), !dbg !11866
  call void @llvm.dbg.declare(metadata [3 x float]* %co_mark, metadata !11867, metadata !DIExpression()), !dbg !11868
  call void @llvm.dbg.declare(metadata %struct.TransDataEdgeSlideVert** %curr_sv, metadata !11869, metadata !DIExpression()), !dbg !11870
  %9 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11871
  %sv = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %9, i32 0, i32 0, !dbg !11872
  %10 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !11872
  %11 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11873
  %curr_sv_index = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %11, i32 0, i32 11, !dbg !11874
  %12 = load i32, i32* %curr_sv_index, align 8, !dbg !11874
  %idxprom = sext i32 %12 to i64, !dbg !11871
  %arrayidx = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %10, i64 %idxprom, !dbg !11871
  store %struct.TransDataEdgeSlideVert* %arrayidx, %struct.TransDataEdgeSlideVert** %curr_sv, align 8, !dbg !11870
  call void @llvm.dbg.declare(metadata float* %fac, metadata !11875, metadata !DIExpression()), !dbg !11876
  %13 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11877
  %perc = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %13, i32 0, i32 8, !dbg !11878
  %14 = load float, float* %perc, align 8, !dbg !11878
  %add = fadd float %14, 1.000000e+00, !dbg !11879
  %div = fdiv float %add, 2.000000e+00, !dbg !11880
  store float %div, float* %fac, align 4, !dbg !11876
  call void @llvm.dbg.declare(metadata float* %ctrl_size, metadata !11881, metadata !DIExpression()), !dbg !11882
  %call4 = call float @UI_GetThemeValuef(i32 48), !dbg !11883
  %add5 = fadd float %call4, 1.500000e+00, !dbg !11884
  store float %add5, float* %ctrl_size, align 4, !dbg !11882
  call void @llvm.dbg.declare(metadata float* %guide_size, metadata !11885, metadata !DIExpression()), !dbg !11886
  %15 = load float, float* %ctrl_size, align 4, !dbg !11887
  %sub = fsub float %15, 5.000000e-01, !dbg !11888
  store float %sub, float* %guide_size, align 4, !dbg !11886
  call void @llvm.dbg.declare(metadata float* %line_size, metadata !11889, metadata !DIExpression()), !dbg !11890
  %call6 = call float @UI_GetThemeValuef(i32 37), !dbg !11891
  %add7 = fadd float %call6, 5.000000e-01, !dbg !11892
  store float %add7, float* %line_size, align 4, !dbg !11890
  call void @llvm.dbg.declare(metadata i32* %alpha_shade, metadata !11893, metadata !DIExpression()), !dbg !11894
  store i32 -30, i32* %alpha_shade, align 4, !dbg !11894
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co_a, i64 0, i64 0, !dbg !11895
  %16 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %curr_sv, align 8, !dbg !11896
  %v_co_orig = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %16, i32 0, i32 3, !dbg !11897
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %v_co_orig, i64 0, i64 0, !dbg !11896
  %17 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %curr_sv, align 8, !dbg !11898
  %dir_a = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %17, i32 0, i32 5, !dbg !11899
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %dir_a, i64 0, i64 0, !dbg !11898
  call void @add_v3_v3v3(float* %arraydecay, float* %arraydecay8, float* %arraydecay9), !dbg !11900
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %co_b, i64 0, i64 0, !dbg !11901
  %18 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %curr_sv, align 8, !dbg !11902
  %v_co_orig11 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %18, i32 0, i32 3, !dbg !11903
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %v_co_orig11, i64 0, i64 0, !dbg !11902
  %19 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %curr_sv, align 8, !dbg !11904
  %dir_b = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %19, i32 0, i32 6, !dbg !11905
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %dir_b, i64 0, i64 0, !dbg !11904
  call void @add_v3_v3v3(float* %arraydecay10, float* %arraydecay12, float* %arraydecay13), !dbg !11906
  %20 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !11907
  %tobool14 = icmp ne %struct.View3D* %20, null, !dbg !11907
  br i1 %tobool14, label %land.lhs.true15, label %if.end, !dbg !11909

land.lhs.true15:                                  ; preds = %if.then3
  %21 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !11910
  %zbuf = getelementptr inbounds %struct.View3D, %struct.View3D* %21, i32 0, i32 47, !dbg !11911
  %22 = load i8, i8* %zbuf, align 8, !dbg !11911
  %conv16 = zext i8 %22 to i32, !dbg !11910
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !11910
  br i1 %tobool17, label %if.then18, label %if.end, !dbg !11912

if.then18:                                        ; preds = %land.lhs.true15
  call void @glDisable(i32 2929), !dbg !11913
  br label %if.end, !dbg !11913

if.end:                                           ; preds = %if.then18, %land.lhs.true15, %if.then3
  call void @glEnable(i32 3042), !dbg !11914
  call void @glBlendFunc(i32 770, i32 771), !dbg !11915
  call void @glPushAttrib(i32 7), !dbg !11916
  call void @glPushMatrix(), !dbg !11917
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !11918
  %obedit = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 63, !dbg !11918
  %24 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11918
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 47, !dbg !11918
  %arraydecay19 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !11918
  %25 = bitcast [4 x float]* %arraydecay19 to float*, !dbg !11918
  call void @glMultMatrixf(float* %25), !dbg !11918
  %26 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !11919
  %27 = load float, float* %line_size, align 4, !dbg !11919
  call void @glLineWidth(float %27), !dbg !11919
  call void @UI_ThemeColorShadeAlpha(i32 39, i32 80, i32 -30), !dbg !11920
  call void @glBegin(i32 1), !dbg !11921
  %28 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %curr_sv, align 8, !dbg !11922
  %v_a = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %28, i32 0, i32 0, !dbg !11924
  %29 = load %struct.BMVert*, %struct.BMVert** %v_a, align 8, !dbg !11924
  %tobool20 = icmp ne %struct.BMVert* %29, null, !dbg !11922
  br i1 %tobool20, label %if.then21, label %if.end26, !dbg !11925

if.then21:                                        ; preds = %if.end
  %30 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %curr_sv, align 8, !dbg !11926
  %v_a22 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %30, i32 0, i32 0, !dbg !11928
  %31 = load %struct.BMVert*, %struct.BMVert** %v_a22, align 8, !dbg !11928
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %31, i32 0, i32 2, !dbg !11929
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11926
  call void @glVertex3fv(float* %arraydecay23), !dbg !11930
  %32 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %curr_sv, align 8, !dbg !11931
  %v_co_orig24 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %32, i32 0, i32 3, !dbg !11932
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %v_co_orig24, i64 0, i64 0, !dbg !11931
  call void @glVertex3fv(float* %arraydecay25), !dbg !11933
  br label %if.end26, !dbg !11934

if.end26:                                         ; preds = %if.then21, %if.end
  %33 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %curr_sv, align 8, !dbg !11935
  %v_b = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %33, i32 0, i32 1, !dbg !11937
  %34 = load %struct.BMVert*, %struct.BMVert** %v_b, align 8, !dbg !11937
  %tobool27 = icmp ne %struct.BMVert* %34, null, !dbg !11935
  br i1 %tobool27, label %if.then28, label %if.end34, !dbg !11938

if.then28:                                        ; preds = %if.end26
  %35 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %curr_sv, align 8, !dbg !11939
  %v_b29 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %35, i32 0, i32 1, !dbg !11941
  %36 = load %struct.BMVert*, %struct.BMVert** %v_b29, align 8, !dbg !11941
  %co30 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %36, i32 0, i32 2, !dbg !11942
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %co30, i64 0, i64 0, !dbg !11939
  call void @glVertex3fv(float* %arraydecay31), !dbg !11943
  %37 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %curr_sv, align 8, !dbg !11944
  %v_co_orig32 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %37, i32 0, i32 3, !dbg !11945
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %v_co_orig32, i64 0, i64 0, !dbg !11944
  call void @glVertex3fv(float* %arraydecay33), !dbg !11946
  br label %if.end34, !dbg !11947

if.end34:                                         ; preds = %if.then28, %if.end26
  call void @bglEnd(), !dbg !11948
  call void @UI_ThemeColorShadeAlpha(i32 28, i32 -30, i32 -30), !dbg !11949
  %38 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !11950
  %39 = load float, float* %ctrl_size, align 4, !dbg !11950
  call void @glPointSize(float %39), !dbg !11950
  call void @bglBegin(i32 0), !dbg !11951
  %40 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !11952
  %flipped_vtx = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %40, i32 0, i32 10, !dbg !11954
  %41 = load i8, i8* %flipped_vtx, align 1, !dbg !11954
  %tobool35 = icmp ne i8 %41, 0, !dbg !11952
  br i1 %tobool35, label %if.then36, label %if.else, !dbg !11955

if.then36:                                        ; preds = %if.end34
  %42 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %curr_sv, align 8, !dbg !11956
  %v_b37 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %42, i32 0, i32 1, !dbg !11959
  %43 = load %struct.BMVert*, %struct.BMVert** %v_b37, align 8, !dbg !11959
  %tobool38 = icmp ne %struct.BMVert* %43, null, !dbg !11956
  br i1 %tobool38, label %if.then39, label %if.end43, !dbg !11960

if.then39:                                        ; preds = %if.then36
  %44 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %curr_sv, align 8, !dbg !11961
  %v_b40 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %44, i32 0, i32 1, !dbg !11962
  %45 = load %struct.BMVert*, %struct.BMVert** %v_b40, align 8, !dbg !11962
  %co41 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %45, i32 0, i32 2, !dbg !11963
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %co41, i64 0, i64 0, !dbg !11961
  call void @bglVertex3fv(float* %arraydecay42), !dbg !11964
  br label %if.end43, !dbg !11964

if.end43:                                         ; preds = %if.then39, %if.then36
  br label %if.end51, !dbg !11965

if.else:                                          ; preds = %if.end34
  %46 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %curr_sv, align 8, !dbg !11966
  %v_a44 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %46, i32 0, i32 0, !dbg !11969
  %47 = load %struct.BMVert*, %struct.BMVert** %v_a44, align 8, !dbg !11969
  %tobool45 = icmp ne %struct.BMVert* %47, null, !dbg !11966
  br i1 %tobool45, label %if.then46, label %if.end50, !dbg !11970

if.then46:                                        ; preds = %if.else
  %48 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %curr_sv, align 8, !dbg !11971
  %v_a47 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %48, i32 0, i32 0, !dbg !11972
  %49 = load %struct.BMVert*, %struct.BMVert** %v_a47, align 8, !dbg !11972
  %co48 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %49, i32 0, i32 2, !dbg !11973
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %co48, i64 0, i64 0, !dbg !11971
  call void @bglVertex3fv(float* %arraydecay49), !dbg !11974
  br label %if.end50, !dbg !11974

if.end50:                                         ; preds = %if.then46, %if.else
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end43
  call void @bglEnd(), !dbg !11975
  call void @UI_ThemeColorShadeAlpha(i32 28, i32 255, i32 -30), !dbg !11976
  %50 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !11977
  %51 = load float, float* %guide_size, align 4, !dbg !11977
  call void @glPointSize(float %51), !dbg !11977
  call void @bglBegin(i32 0), !dbg !11978
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %co_mark, i64 0, i64 0, !dbg !11979
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %co_b, i64 0, i64 0, !dbg !11980
  %52 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %curr_sv, align 8, !dbg !11981
  %v_co_orig54 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %52, i32 0, i32 3, !dbg !11982
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %v_co_orig54, i64 0, i64 0, !dbg !11981
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %co_a, i64 0, i64 0, !dbg !11983
  %53 = load float, float* %fac, align 4, !dbg !11984
  call void @interp_line_v3_v3v3v3(float* %arraydecay52, float* %arraydecay53, float* %arraydecay55, float* %arraydecay56, float %53), !dbg !11985
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %co_mark, i64 0, i64 0, !dbg !11986
  call void @bglVertex3fv(float* %arraydecay57), !dbg !11987
  call void @bglEnd(), !dbg !11988
  call void @glPopMatrix(), !dbg !11989
  call void @glPopAttrib(), !dbg !11990
  call void @glDisable(i32 3042), !dbg !11991
  %54 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !11992
  %tobool58 = icmp ne %struct.View3D* %54, null, !dbg !11992
  br i1 %tobool58, label %land.lhs.true59, label %if.end64, !dbg !11994

land.lhs.true59:                                  ; preds = %if.end51
  %55 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !11995
  %zbuf60 = getelementptr inbounds %struct.View3D, %struct.View3D* %55, i32 0, i32 47, !dbg !11996
  %56 = load i8, i8* %zbuf60, align 8, !dbg !11996
  %conv61 = zext i8 %56 to i32, !dbg !11995
  %tobool62 = icmp ne i32 %conv61, 0, !dbg !11995
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !11997

if.then63:                                        ; preds = %land.lhs.true59
  call void @glEnable(i32 2929), !dbg !11998
  br label %if.end64, !dbg !11998

if.end64:                                         ; preds = %if.then63, %land.lhs.true59, %if.end51
  br label %if.end65, !dbg !11999

if.end65:                                         ; preds = %if.end64, %land.lhs.true, %if.then
  br label %if.end66, !dbg !12000

if.end66:                                         ; preds = %if.end65, %entry
  ret void, !dbg !12001
}

; Function Attrs: noinline nounwind uwtable
define internal void @drawVertSlide(%struct.bContext* %C, %struct.TransInfo* %t) #0 !dbg !12002 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %t.addr = alloca %struct.TransInfo*, align 8
  %sld = alloca %struct.VertSlideData*, align 8
  %v3d = alloca %struct.View3D*, align 8
  %curr_sv = alloca %struct.TransDataVertSlideVert*, align 8
  %sv2 = alloca %struct.TransDataVertSlideVert*, align 8
  %ctrl_size = alloca float, align 4
  %line_size = alloca float, align 4
  %alpha_shade = alloca i32, align 4
  %is_clamp = alloca i8, align 1
  %i = alloca i32, align 4
  %a = alloca [3 x float], align 4
  %b = alloca [3 x float], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12003, metadata !DIExpression()), !dbg !12004
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !12005, metadata !DIExpression()), !dbg !12006
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12007
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !12009
  %1 = load i32, i32* %mode, align 8, !dbg !12009
  %cmp = icmp eq i32 %1, 29, !dbg !12010
  br i1 %cmp, label %if.then, label %if.end71, !dbg !12011

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.VertSlideData** %sld, metadata !12012, metadata !DIExpression()), !dbg !12014
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12015
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 40, !dbg !12016
  %3 = load i8*, i8** %customData, align 8, !dbg !12016
  %4 = bitcast i8* %3 to %struct.VertSlideData*, !dbg !12017
  store %struct.VertSlideData* %4, %struct.VertSlideData** %sld, align 8, !dbg !12014
  %5 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !12018
  %tobool = icmp ne %struct.VertSlideData* %5, null, !dbg !12018
  br i1 %tobool, label %if.then1, label %if.end70, !dbg !12020

if.then1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d, metadata !12021, metadata !DIExpression()), !dbg !12023
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12024
  %call = call %struct.View3D* @CTX_wm_view3d(%struct.bContext* %6), !dbg !12025
  store %struct.View3D* %call, %struct.View3D** %v3d, align 8, !dbg !12023
  call void @llvm.dbg.declare(metadata %struct.TransDataVertSlideVert** %curr_sv, metadata !12026, metadata !DIExpression()), !dbg !12027
  %7 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !12028
  %sv = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %7, i32 0, i32 0, !dbg !12029
  %8 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !12029
  %9 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !12030
  %curr_sv_index = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %9, i32 0, i32 6, !dbg !12031
  %10 = load i32, i32* %curr_sv_index, align 8, !dbg !12031
  %idxprom = sext i32 %10 to i64, !dbg !12028
  %arrayidx = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %8, i64 %idxprom, !dbg !12028
  store %struct.TransDataVertSlideVert* %arrayidx, %struct.TransDataVertSlideVert** %curr_sv, align 8, !dbg !12027
  call void @llvm.dbg.declare(metadata %struct.TransDataVertSlideVert** %sv2, metadata !12032, metadata !DIExpression()), !dbg !12033
  call void @llvm.dbg.declare(metadata float* %ctrl_size, metadata !12034, metadata !DIExpression()), !dbg !12035
  %call3 = call float @UI_GetThemeValuef(i32 48), !dbg !12036
  %add = fadd float %call3, 1.500000e+00, !dbg !12037
  store float %add, float* %ctrl_size, align 4, !dbg !12035
  call void @llvm.dbg.declare(metadata float* %line_size, metadata !12038, metadata !DIExpression()), !dbg !12039
  %call4 = call float @UI_GetThemeValuef(i32 37), !dbg !12040
  %add5 = fadd float %call4, 5.000000e-01, !dbg !12041
  store float %add5, float* %line_size, align 4, !dbg !12039
  call void @llvm.dbg.declare(metadata i32* %alpha_shade, metadata !12042, metadata !DIExpression()), !dbg !12043
  store i32 -160, i32* %alpha_shade, align 4, !dbg !12043
  call void @llvm.dbg.declare(metadata i8* %is_clamp, metadata !12044, metadata !DIExpression()), !dbg !12046
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12047
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 1, !dbg !12048
  %12 = load i32, i32* %flag, align 4, !dbg !12048
  %and = and i32 %12, 16777216, !dbg !12049
  %tobool6 = icmp ne i32 %and, 0, !dbg !12050
  %lnot = xor i1 %tobool6, true, !dbg !12050
  %lnot.ext = zext i1 %lnot to i32, !dbg !12050
  %conv = trunc i32 %lnot.ext to i8, !dbg !12050
  store i8 %conv, i8* %is_clamp, align 1, !dbg !12046
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12051, metadata !DIExpression()), !dbg !12052
  %13 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !12053
  %tobool7 = icmp ne %struct.View3D* %13, null, !dbg !12053
  br i1 %tobool7, label %land.lhs.true, label %if.end, !dbg !12055

land.lhs.true:                                    ; preds = %if.then1
  %14 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !12056
  %zbuf = getelementptr inbounds %struct.View3D, %struct.View3D* %14, i32 0, i32 47, !dbg !12057
  %15 = load i8, i8* %zbuf, align 8, !dbg !12057
  %conv8 = zext i8 %15 to i32, !dbg !12056
  %tobool9 = icmp ne i32 %conv8, 0, !dbg !12056
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !12058

if.then10:                                        ; preds = %land.lhs.true
  call void @glDisable(i32 2929), !dbg !12059
  br label %if.end, !dbg !12059

if.end:                                           ; preds = %if.then10, %land.lhs.true, %if.then1
  call void @glEnable(i32 3042), !dbg !12060
  call void @glBlendFunc(i32 770, i32 771), !dbg !12061
  call void @glPushAttrib(i32 7), !dbg !12062
  call void @glPushMatrix(), !dbg !12063
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12064
  %obedit = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 63, !dbg !12064
  %17 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12064
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 47, !dbg !12064
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !12064
  %18 = bitcast [4 x float]* %arraydecay to float*, !dbg !12064
  call void @glMultMatrixf(float* %18), !dbg !12064
  %19 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !12065
  %20 = load float, float* %line_size, align 4, !dbg !12065
  call void @glLineWidth(float %20), !dbg !12065
  call void @UI_ThemeColorShadeAlpha(i32 39, i32 80, i32 -160), !dbg !12066
  call void @glBegin(i32 1), !dbg !12067
  %21 = load i8, i8* %is_clamp, align 1, !dbg !12068
  %tobool11 = icmp ne i8 %21, 0, !dbg !12068
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !12070

if.then12:                                        ; preds = %if.end
  %22 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !12071
  %sv13 = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %22, i32 0, i32 0, !dbg !12073
  %23 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv13, align 8, !dbg !12073
  store %struct.TransDataVertSlideVert* %23, %struct.TransDataVertSlideVert** %sv2, align 8, !dbg !12074
  store i32 0, i32* %i, align 4, !dbg !12075
  br label %for.cond, !dbg !12077

for.cond:                                         ; preds = %for.inc, %if.then12
  %24 = load i32, i32* %i, align 4, !dbg !12078
  %25 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !12080
  %totsv = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %25, i32 0, i32 1, !dbg !12081
  %26 = load i32, i32* %totsv, align 8, !dbg !12081
  %cmp14 = icmp slt i32 %24, %26, !dbg !12082
  br i1 %cmp14, label %for.body, label %for.end, !dbg !12083

for.body:                                         ; preds = %for.cond
  %27 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv2, align 8, !dbg !12084
  %co_orig_3d = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %27, i32 0, i32 1, !dbg !12086
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %co_orig_3d, i64 0, i64 0, !dbg !12084
  call void @glVertex3fv(float* %arraydecay16), !dbg !12087
  %28 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv2, align 8, !dbg !12088
  %co_link_orig_3d = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %28, i32 0, i32 3, !dbg !12089
  %29 = load [3 x float]*, [3 x float]** %co_link_orig_3d, align 8, !dbg !12089
  %30 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv2, align 8, !dbg !12090
  %co_link_curr = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %30, i32 0, i32 6, !dbg !12091
  %31 = load i32, i32* %co_link_curr, align 4, !dbg !12091
  %idxprom17 = sext i32 %31 to i64, !dbg !12088
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %29, i64 %idxprom17, !dbg !12088
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx18, i64 0, i64 0, !dbg !12088
  call void @glVertex3fv(float* %arraydecay19), !dbg !12092
  br label %for.inc, !dbg !12093

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %i, align 4, !dbg !12094
  %inc = add nsw i32 %32, 1, !dbg !12094
  store i32 %inc, i32* %i, align 4, !dbg !12094
  %33 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv2, align 8, !dbg !12095
  %incdec.ptr = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %33, i32 1, !dbg !12095
  store %struct.TransDataVertSlideVert* %incdec.ptr, %struct.TransDataVertSlideVert** %sv2, align 8, !dbg !12095
  br label %for.cond, !dbg !12096, !llvm.loop !12097

for.end:                                          ; preds = %for.cond
  br label %if.end49, !dbg !12099

if.else:                                          ; preds = %if.end
  %34 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !12100
  %sv20 = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %34, i32 0, i32 0, !dbg !12102
  %35 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv20, align 8, !dbg !12102
  store %struct.TransDataVertSlideVert* %35, %struct.TransDataVertSlideVert** %sv2, align 8, !dbg !12103
  store i32 0, i32* %i, align 4, !dbg !12104
  br label %for.cond21, !dbg !12106

for.cond21:                                       ; preds = %for.inc45, %if.else
  %36 = load i32, i32* %i, align 4, !dbg !12107
  %37 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !12109
  %totsv22 = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %37, i32 0, i32 1, !dbg !12110
  %38 = load i32, i32* %totsv22, align 8, !dbg !12110
  %cmp23 = icmp slt i32 %36, %38, !dbg !12111
  br i1 %cmp23, label %for.body25, label %for.end48, !dbg !12112

for.body25:                                       ; preds = %for.cond21
  call void @llvm.dbg.declare(metadata [3 x float]* %a, metadata !12113, metadata !DIExpression()), !dbg !12115
  call void @llvm.dbg.declare(metadata [3 x float]* %b, metadata !12116, metadata !DIExpression()), !dbg !12117
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !12118
  %39 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv2, align 8, !dbg !12119
  %co_link_orig_3d27 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %39, i32 0, i32 3, !dbg !12120
  %40 = load [3 x float]*, [3 x float]** %co_link_orig_3d27, align 8, !dbg !12120
  %41 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv2, align 8, !dbg !12121
  %co_link_curr28 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %41, i32 0, i32 6, !dbg !12122
  %42 = load i32, i32* %co_link_curr28, align 4, !dbg !12122
  %idxprom29 = sext i32 %42 to i64, !dbg !12119
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %40, i64 %idxprom29, !dbg !12119
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx30, i64 0, i64 0, !dbg !12119
  %43 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv2, align 8, !dbg !12123
  %co_orig_3d32 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %43, i32 0, i32 1, !dbg !12124
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %co_orig_3d32, i64 0, i64 0, !dbg !12123
  call void @sub_v3_v3v3(float* %arraydecay26, float* %arraydecay31, float* %arraydecay33), !dbg !12125
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !12126
  call void @mul_v3_fl(float* %arraydecay34, float 1.000000e+02), !dbg !12127
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !12128
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !12129
  call void @negate_v3_v3(float* %arraydecay35, float* %arraydecay36), !dbg !12130
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !12131
  %44 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv2, align 8, !dbg !12132
  %co_orig_3d38 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %44, i32 0, i32 1, !dbg !12133
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %co_orig_3d38, i64 0, i64 0, !dbg !12132
  call void @add_v3_v3(float* %arraydecay37, float* %arraydecay39), !dbg !12134
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !12135
  %45 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv2, align 8, !dbg !12136
  %co_orig_3d41 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %45, i32 0, i32 1, !dbg !12137
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %co_orig_3d41, i64 0, i64 0, !dbg !12136
  call void @add_v3_v3(float* %arraydecay40, float* %arraydecay42), !dbg !12138
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %a, i64 0, i64 0, !dbg !12139
  call void @glVertex3fv(float* %arraydecay43), !dbg !12140
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %b, i64 0, i64 0, !dbg !12141
  call void @glVertex3fv(float* %arraydecay44), !dbg !12142
  br label %for.inc45, !dbg !12143

for.inc45:                                        ; preds = %for.body25
  %46 = load i32, i32* %i, align 4, !dbg !12144
  %inc46 = add nsw i32 %46, 1, !dbg !12144
  store i32 %inc46, i32* %i, align 4, !dbg !12144
  %47 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv2, align 8, !dbg !12145
  %incdec.ptr47 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %47, i32 1, !dbg !12145
  store %struct.TransDataVertSlideVert* %incdec.ptr47, %struct.TransDataVertSlideVert** %sv2, align 8, !dbg !12145
  br label %for.cond21, !dbg !12146, !llvm.loop !12147

for.end48:                                        ; preds = %for.cond21
  br label %if.end49

if.end49:                                         ; preds = %for.end48, %for.end
  call void @bglEnd(), !dbg !12149
  %48 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !12150
  %49 = load float, float* %ctrl_size, align 4, !dbg !12150
  call void @glPointSize(float %49), !dbg !12150
  call void @bglBegin(i32 0), !dbg !12151
  %50 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !12152
  %flipped_vtx = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %50, i32 0, i32 5, !dbg !12153
  %51 = load i8, i8* %flipped_vtx, align 1, !dbg !12153
  %conv50 = zext i8 %51 to i32, !dbg !12152
  %tobool51 = icmp ne i32 %conv50, 0, !dbg !12152
  br i1 %tobool51, label %land.lhs.true52, label %cond.false, !dbg !12154

land.lhs.true52:                                  ; preds = %if.end49
  %52 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !12155
  %is_proportional = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %52, i32 0, i32 4, !dbg !12156
  %53 = load i8, i8* %is_proportional, align 4, !dbg !12156
  %conv53 = zext i8 %53 to i32, !dbg !12155
  %cmp54 = icmp eq i32 %conv53, 0, !dbg !12157
  br i1 %cmp54, label %cond.true, label %cond.false, !dbg !12158

cond.true:                                        ; preds = %land.lhs.true52
  %54 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %curr_sv, align 8, !dbg !12159
  %co_link_orig_3d56 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %54, i32 0, i32 3, !dbg !12160
  %55 = load [3 x float]*, [3 x float]** %co_link_orig_3d56, align 8, !dbg !12160
  %56 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %curr_sv, align 8, !dbg !12161
  %co_link_curr57 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %56, i32 0, i32 6, !dbg !12162
  %57 = load i32, i32* %co_link_curr57, align 4, !dbg !12162
  %idxprom58 = sext i32 %57 to i64, !dbg !12159
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %55, i64 %idxprom58, !dbg !12159
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx59, i64 0, i64 0, !dbg !12159
  br label %cond.end, !dbg !12158

cond.false:                                       ; preds = %land.lhs.true52, %if.end49
  %58 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %curr_sv, align 8, !dbg !12163
  %co_orig_3d61 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %58, i32 0, i32 1, !dbg !12164
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %co_orig_3d61, i64 0, i64 0, !dbg !12163
  br label %cond.end, !dbg !12158

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay60, %cond.true ], [ %arraydecay62, %cond.false ], !dbg !12158
  call void @bglVertex3fv(float* %cond), !dbg !12165
  call void @bglEnd(), !dbg !12166
  call void @glPopMatrix(), !dbg !12167
  call void @glPopAttrib(), !dbg !12168
  call void @glDisable(i32 3042), !dbg !12169
  %59 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !12170
  %tobool63 = icmp ne %struct.View3D* %59, null, !dbg !12170
  br i1 %tobool63, label %land.lhs.true64, label %if.end69, !dbg !12172

land.lhs.true64:                                  ; preds = %cond.end
  %60 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !12173
  %zbuf65 = getelementptr inbounds %struct.View3D, %struct.View3D* %60, i32 0, i32 47, !dbg !12174
  %61 = load i8, i8* %zbuf65, align 8, !dbg !12174
  %conv66 = zext i8 %61 to i32, !dbg !12173
  %tobool67 = icmp ne i32 %conv66, 0, !dbg !12173
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !12175

if.then68:                                        ; preds = %land.lhs.true64
  call void @glEnable(i32 2929), !dbg !12176
  br label %if.end69, !dbg !12176

if.end69:                                         ; preds = %if.then68, %land.lhs.true64, %cond.end
  br label %if.end70, !dbg !12177

if.end70:                                         ; preds = %if.end69, %if.then
  br label %if.end71, !dbg !12178

if.end71:                                         ; preds = %if.end70, %entry
  ret void, !dbg !12179
}

declare dso_local %struct.View3D* @CTX_wm_view3d(%struct.bContext*) #2

declare dso_local float @UI_GetThemeValuef(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !12180 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12183, metadata !DIExpression()), !dbg !12184
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12185, metadata !DIExpression()), !dbg !12186
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !12187, metadata !DIExpression()), !dbg !12188
  %0 = load float*, float** %a.addr, align 8, !dbg !12189
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12189
  %1 = load float, float* %arrayidx, align 4, !dbg !12189
  %2 = load float*, float** %b.addr, align 8, !dbg !12190
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !12190
  %3 = load float, float* %arrayidx1, align 4, !dbg !12190
  %add = fadd float %1, %3, !dbg !12191
  %4 = load float*, float** %r.addr, align 8, !dbg !12192
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !12192
  store float %add, float* %arrayidx2, align 4, !dbg !12193
  %5 = load float*, float** %a.addr, align 8, !dbg !12194
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !12194
  %6 = load float, float* %arrayidx3, align 4, !dbg !12194
  %7 = load float*, float** %b.addr, align 8, !dbg !12195
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !12195
  %8 = load float, float* %arrayidx4, align 4, !dbg !12195
  %add5 = fadd float %6, %8, !dbg !12196
  %9 = load float*, float** %r.addr, align 8, !dbg !12197
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !12197
  store float %add5, float* %arrayidx6, align 4, !dbg !12198
  %10 = load float*, float** %a.addr, align 8, !dbg !12199
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !12199
  %11 = load float, float* %arrayidx7, align 4, !dbg !12199
  %12 = load float*, float** %b.addr, align 8, !dbg !12200
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !12200
  %13 = load float, float* %arrayidx8, align 4, !dbg !12200
  %add9 = fadd float %11, %13, !dbg !12201
  %14 = load float*, float** %r.addr, align 8, !dbg !12202
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !12202
  store float %add9, float* %arrayidx10, align 4, !dbg !12203
  ret void, !dbg !12204
}

declare dso_local void @glDisable(i32) #2

declare dso_local void @glEnable(i32) #2

declare dso_local void @glBlendFunc(i32, i32) #2

declare dso_local void @glPushAttrib(i32) #2

declare dso_local void @glPushMatrix() #2

declare dso_local void @glMultMatrixf(float*) #2

declare dso_local void @glLineWidth(float) #2

declare dso_local void @UI_ThemeColorShadeAlpha(i32, i32, i32) #2

declare dso_local void @glBegin(i32) #2

declare dso_local void @glVertex3fv(float*) #2

declare dso_local void @bglEnd() #2

declare dso_local void @glPointSize(float) #2

declare dso_local void @bglBegin(i32) #2

declare dso_local void @bglVertex3fv(float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @interp_line_v3_v3v3v3(float* %p, float* %v1, float* %v2, float* %v3, float %t) #0 !dbg !12205 {
entry:
  %p.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %t.addr = alloca float, align 4
  %t_mid = alloca float, align 4
  %t_delta = alloca float, align 4
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !12208, metadata !DIExpression()), !dbg !12209
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !12210, metadata !DIExpression()), !dbg !12211
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !12212, metadata !DIExpression()), !dbg !12213
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !12214, metadata !DIExpression()), !dbg !12215
  store float %t, float* %t.addr, align 4
  call void @llvm.dbg.declare(metadata float* %t.addr, metadata !12216, metadata !DIExpression()), !dbg !12217
  call void @llvm.dbg.declare(metadata float* %t_mid, metadata !12218, metadata !DIExpression()), !dbg !12219
  call void @llvm.dbg.declare(metadata float* %t_delta, metadata !12220, metadata !DIExpression()), !dbg !12221
  %0 = load float*, float** %v2.addr, align 8, !dbg !12222
  %1 = load float*, float** %v1.addr, align 8, !dbg !12223
  %2 = load float*, float** %v3.addr, align 8, !dbg !12224
  %call = call float @line_point_factor_v3(float* %0, float* %1, float* %2), !dbg !12225
  store float %call, float* %t_mid, align 4, !dbg !12226
  %3 = load float, float* %t.addr, align 4, !dbg !12227
  %4 = load float, float* %t_mid, align 4, !dbg !12228
  %sub = fsub float %3, %4, !dbg !12229
  store float %sub, float* %t_delta, align 4, !dbg !12230
  %5 = load float, float* %t_delta, align 4, !dbg !12231
  %6 = call float @llvm.fabs.f32(float %5), !dbg !12233
  %cmp = fcmp olt float %6, 0x3E80000000000000, !dbg !12234
  br i1 %cmp, label %if.then, label %if.else, !dbg !12235

if.then:                                          ; preds = %entry
  %7 = load float*, float** %p.addr, align 8, !dbg !12236
  %8 = load float*, float** %v2.addr, align 8, !dbg !12238
  call void @copy_v3_v3(float* %7, float* %8), !dbg !12239
  br label %if.end7, !dbg !12240

if.else:                                          ; preds = %entry
  %9 = load float, float* %t_delta, align 4, !dbg !12241
  %cmp1 = fcmp olt float %9, 0.000000e+00, !dbg !12243
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !12244

if.then2:                                         ; preds = %if.else
  %10 = load float*, float** %p.addr, align 8, !dbg !12245
  %11 = load float*, float** %v1.addr, align 8, !dbg !12247
  %12 = load float*, float** %v2.addr, align 8, !dbg !12248
  %13 = load float, float* %t.addr, align 4, !dbg !12249
  %14 = load float, float* %t_mid, align 4, !dbg !12250
  %div = fdiv float %13, %14, !dbg !12251
  call void @interp_v3_v3v3(float* %10, float* %11, float* %12, float %div), !dbg !12252
  br label %if.end, !dbg !12253

if.else3:                                         ; preds = %if.else
  %15 = load float*, float** %p.addr, align 8, !dbg !12254
  %16 = load float*, float** %v2.addr, align 8, !dbg !12256
  %17 = load float*, float** %v3.addr, align 8, !dbg !12257
  %18 = load float, float* %t.addr, align 4, !dbg !12258
  %19 = load float, float* %t_mid, align 4, !dbg !12259
  %sub4 = fsub float %18, %19, !dbg !12260
  %20 = load float, float* %t_mid, align 4, !dbg !12261
  %sub5 = fsub float 1.000000e+00, %20, !dbg !12262
  %div6 = fdiv float %sub4, %sub5, !dbg !12263
  call void @interp_v3_v3v3(float* %15, float* %16, float* %17, float %div6), !dbg !12264
  br label %if.end

if.end:                                           ; preds = %if.else3, %if.then2
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  ret void, !dbg !12265
}

declare dso_local void @glPopMatrix() #2

declare dso_local void @glPopAttrib() #2

declare dso_local float @line_point_factor_v3(float*, float*, float*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

declare dso_local void @interp_v3_v3v3(float*, float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !12266 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12267, metadata !DIExpression()), !dbg !12268
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12269, metadata !DIExpression()), !dbg !12270
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !12271, metadata !DIExpression()), !dbg !12272
  %0 = load float*, float** %a.addr, align 8, !dbg !12273
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12273
  %1 = load float, float* %arrayidx, align 4, !dbg !12273
  %2 = load float*, float** %b.addr, align 8, !dbg !12274
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !12274
  %3 = load float, float* %arrayidx1, align 4, !dbg !12274
  %sub = fsub float %1, %3, !dbg !12275
  %4 = load float*, float** %r.addr, align 8, !dbg !12276
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !12276
  store float %sub, float* %arrayidx2, align 4, !dbg !12277
  %5 = load float*, float** %a.addr, align 8, !dbg !12278
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !12278
  %6 = load float, float* %arrayidx3, align 4, !dbg !12278
  %7 = load float*, float** %b.addr, align 8, !dbg !12279
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !12279
  %8 = load float, float* %arrayidx4, align 4, !dbg !12279
  %sub5 = fsub float %6, %8, !dbg !12280
  %9 = load float*, float** %r.addr, align 8, !dbg !12281
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !12281
  store float %sub5, float* %arrayidx6, align 4, !dbg !12282
  %10 = load float*, float** %a.addr, align 8, !dbg !12283
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !12283
  %11 = load float, float* %arrayidx7, align 4, !dbg !12283
  %12 = load float*, float** %b.addr, align 8, !dbg !12284
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !12284
  %13 = load float, float* %arrayidx8, align 4, !dbg !12284
  %sub9 = fsub float %11, %13, !dbg !12285
  %14 = load float*, float** %r.addr, align 8, !dbg !12286
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !12286
  store float %sub9, float* %arrayidx10, align 4, !dbg !12287
  ret void, !dbg !12288
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !12289 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12292, metadata !DIExpression()), !dbg !12293
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !12294, metadata !DIExpression()), !dbg !12295
  %0 = load float, float* %f.addr, align 4, !dbg !12296
  %1 = load float*, float** %r.addr, align 8, !dbg !12297
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !12297
  %2 = load float, float* %arrayidx, align 4, !dbg !12298
  %mul = fmul float %2, %0, !dbg !12298
  store float %mul, float* %arrayidx, align 4, !dbg !12298
  %3 = load float, float* %f.addr, align 4, !dbg !12299
  %4 = load float*, float** %r.addr, align 8, !dbg !12300
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !12300
  %5 = load float, float* %arrayidx1, align 4, !dbg !12301
  %mul2 = fmul float %5, %3, !dbg !12301
  store float %mul2, float* %arrayidx1, align 4, !dbg !12301
  %6 = load float, float* %f.addr, align 4, !dbg !12302
  %7 = load float*, float** %r.addr, align 8, !dbg !12303
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !12303
  %8 = load float, float* %arrayidx3, align 4, !dbg !12304
  %mul4 = fmul float %8, %6, !dbg !12304
  store float %mul4, float* %arrayidx3, align 4, !dbg !12304
  ret void, !dbg !12305
}

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3_v3(float* %r, float* %a) #0 !dbg !12306 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12307, metadata !DIExpression()), !dbg !12308
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12309, metadata !DIExpression()), !dbg !12310
  %0 = load float*, float** %a.addr, align 8, !dbg !12311
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12311
  %1 = load float, float* %arrayidx, align 4, !dbg !12311
  %fneg = fneg float %1, !dbg !12312
  %2 = load float*, float** %r.addr, align 8, !dbg !12313
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !12313
  store float %fneg, float* %arrayidx1, align 4, !dbg !12314
  %3 = load float*, float** %a.addr, align 8, !dbg !12315
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !12315
  %4 = load float, float* %arrayidx2, align 4, !dbg !12315
  %fneg3 = fneg float %4, !dbg !12316
  %5 = load float*, float** %r.addr, align 8, !dbg !12317
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !12317
  store float %fneg3, float* %arrayidx4, align 4, !dbg !12318
  %6 = load float*, float** %a.addr, align 8, !dbg !12319
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !12319
  %7 = load float, float* %arrayidx5, align 4, !dbg !12319
  %fneg6 = fneg float %7, !dbg !12320
  %8 = load float*, float** %r.addr, align 8, !dbg !12321
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !12321
  store float %fneg6, float* %arrayidx7, align 4, !dbg !12322
  ret void, !dbg !12323
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !12324 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12325, metadata !DIExpression()), !dbg !12326
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12327, metadata !DIExpression()), !dbg !12328
  %0 = load float*, float** %a.addr, align 8, !dbg !12329
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12329
  %1 = load float, float* %arrayidx, align 4, !dbg !12329
  %2 = load float*, float** %r.addr, align 8, !dbg !12330
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !12330
  %3 = load float, float* %arrayidx1, align 4, !dbg !12331
  %add = fadd float %3, %1, !dbg !12331
  store float %add, float* %arrayidx1, align 4, !dbg !12331
  %4 = load float*, float** %a.addr, align 8, !dbg !12332
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !12332
  %5 = load float, float* %arrayidx2, align 4, !dbg !12332
  %6 = load float*, float** %r.addr, align 8, !dbg !12333
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !12333
  %7 = load float, float* %arrayidx3, align 4, !dbg !12334
  %add4 = fadd float %7, %5, !dbg !12334
  store float %add4, float* %arrayidx3, align 4, !dbg !12334
  %8 = load float*, float** %a.addr, align 8, !dbg !12335
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !12335
  %9 = load float, float* %arrayidx5, align 4, !dbg !12335
  %10 = load float*, float** %r.addr, align 8, !dbg !12336
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !12336
  %11 = load float, float* %arrayidx6, align 4, !dbg !12337
  %add7 = fadd float %11, %9, !dbg !12337
  store float %add7, float* %arrayidx6, align 4, !dbg !12337
  ret void, !dbg !12338
}

declare dso_local i32 @autokeyframe_cfra_can_key(%struct.Scene*, %struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @drawAutoKeyWarning(%struct.TransInfo* %UNUSED_t, %struct.ARegion* %ar) #0 !dbg !12339 {
entry:
  %UNUSED_t.addr = alloca %struct.TransInfo*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %rect = alloca %struct.rcti, align 4
  %printable = alloca i8*, align 8
  %printable_size = alloca [2 x float], align 4
  %xco = alloca i32, align 4
  %yco = alloca i32, align 4
  store %struct.TransInfo* %UNUSED_t, %struct.TransInfo** %UNUSED_t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %UNUSED_t.addr, metadata !12342, metadata !DIExpression()), !dbg !12343
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !12344, metadata !DIExpression()), !dbg !12345
  call void @llvm.dbg.declare(metadata %struct.rcti* %rect, metadata !12346, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.declare(metadata i8** %printable, metadata !12348, metadata !DIExpression()), !dbg !12349
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i64 0, i64 0), i8** %printable, align 8, !dbg !12349
  call void @llvm.dbg.declare(metadata [2 x float]* %printable_size, metadata !12350, metadata !DIExpression()), !dbg !12351
  call void @llvm.dbg.declare(metadata i32* %xco, metadata !12352, metadata !DIExpression()), !dbg !12353
  call void @llvm.dbg.declare(metadata i32* %yco, metadata !12354, metadata !DIExpression()), !dbg !12355
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !12356
  call void @ED_region_visible_rect(%struct.ARegion* %0, %struct.rcti* %rect), !dbg !12357
  %1 = load i8*, i8** %printable, align 8, !dbg !12358
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %printable_size, i64 0, i64 0, !dbg !12359
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %printable_size, i64 0, i64 1, !dbg !12360
  call void @BLF_width_and_height_default(i8* %1, i64 1024, float* %arrayidx, float* %arrayidx1), !dbg !12361
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 1, !dbg !12362
  %2 = load i32, i32* %xmax, align 4, !dbg !12362
  %3 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !12363
  %conv = sext i16 %3 to i32, !dbg !12364
  %sub = sub nsw i32 %2, %conv, !dbg !12365
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %printable_size, i64 0, i64 0, !dbg !12366
  %4 = load float, float* %arrayidx2, align 4, !dbg !12366
  %conv3 = fptosi float %4 to i32, !dbg !12367
  %sub4 = sub nsw i32 %sub, %conv3, !dbg !12368
  store i32 %sub4, i32* %xco, align 4, !dbg !12369
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 3, !dbg !12370
  %5 = load i32, i32* %ymax, align 4, !dbg !12370
  %6 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !12371
  %conv5 = sext i16 %6 to i32, !dbg !12372
  %sub6 = sub nsw i32 %5, %conv5, !dbg !12373
  store i32 %sub6, i32* %yco, align 4, !dbg !12374
  call void @UI_ThemeColorShade(i32 4, i32 -50), !dbg !12375
  %7 = load i32, i32* %xco, align 4, !dbg !12376
  %conv7 = sitofp i32 %7 to float, !dbg !12376
  %8 = load i32, i32* %yco, align 4, !dbg !12377
  %conv8 = sitofp i32 %8 to float, !dbg !12377
  %9 = load i8*, i8** %printable, align 8, !dbg !12378
  call void @BLF_draw_default_ascii(float %conv7, float %conv8, float 0.000000e+00, i8* %9, i64 1024), !dbg !12379
  call void @glBlendFunc(i32 770, i32 771), !dbg !12380
  call void @glEnable(i32 3042), !dbg !12381
  %10 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !12382
  %conv9 = sext i16 %10 to i32, !dbg !12383
  %11 = load i32, i32* %xco, align 4, !dbg !12384
  %sub10 = sub nsw i32 %11, %conv9, !dbg !12384
  store i32 %sub10, i32* %xco, align 4, !dbg !12384
  %arrayidx11 = getelementptr inbounds [2 x float], [2 x float]* %printable_size, i64 0, i64 1, !dbg !12385
  %12 = load float, float* %arrayidx11, align 4, !dbg !12385
  %conv12 = fptosi float %12 to i32, !dbg !12386
  %div = sdiv i32 %conv12, 2, !dbg !12387
  %13 = load i32, i32* %yco, align 4, !dbg !12388
  %sub13 = sub nsw i32 %13, %div, !dbg !12388
  store i32 %sub13, i32* %yco, align 4, !dbg !12388
  %14 = load i32, i32* %xco, align 4, !dbg !12389
  %conv14 = sitofp i32 %14 to float, !dbg !12389
  %15 = load i32, i32* %yco, align 4, !dbg !12390
  %conv15 = sitofp i32 %15 to float, !dbg !12390
  call void @UI_icon_draw(float %conv14, float %conv15, i32 494), !dbg !12391
  call void @glDisable(i32 3042), !dbg !12392
  ret void, !dbg !12393
}

declare dso_local void @ED_region_visible_rect(%struct.ARegion*, %struct.rcti*) #2

declare dso_local void @BLF_width_and_height_default(i8*, i64, float*, float*) #2

declare dso_local void @UI_ThemeColorShade(i32, i32) #2

declare dso_local void @BLF_draw_default_ascii(float, float, float, i8*, i64) #2

declare dso_local void @UI_icon_draw(float, float, i32) #2

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #2

declare dso_local void @mul_m4_v3([4 x float]*, float*) #2

declare dso_local void @UI_ThemeColor(i32) #2

declare dso_local void @setlinestyle(i32) #2

declare dso_local void @glVertex2iv(i32*) #2

declare dso_local void @glVertex2fv(float*) #2

declare dso_local void @glEnd() #2

declare dso_local void @glTranslatef(float, float, float) #2

declare dso_local void @glRotatef(float, float, float, float) #2

; Function Attrs: nounwind
declare dso_local float @atan2f(float, float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @drawArrow(i32 %d, i16 signext %offset, i16 signext %length, i16 signext %size) #0 !dbg !12394 {
entry:
  %d.addr = alloca i32, align 4
  %offset.addr = alloca i16, align 2
  %length.addr = alloca i16, align 2
  %size.addr = alloca i16, align 2
  store i32 %d, i32* %d.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d.addr, metadata !12398, metadata !DIExpression()), !dbg !12399
  store i16 %offset, i16* %offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %offset.addr, metadata !12400, metadata !DIExpression()), !dbg !12401
  store i16 %length, i16* %length.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %length.addr, metadata !12402, metadata !DIExpression()), !dbg !12403
  store i16 %size, i16* %size.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %size.addr, metadata !12404, metadata !DIExpression()), !dbg !12405
  %0 = load i32, i32* %d.addr, align 4, !dbg !12406
  switch i32 %0, label %sw.epilog [
    i32 2, label %sw.bb
    i32 3, label %sw.bb8
    i32 1, label %sw.bb35
    i32 0, label %sw.bb45
  ], !dbg !12407

sw.bb:                                            ; preds = %entry
  %1 = load i16, i16* %offset.addr, align 2, !dbg !12408
  %conv = sext i16 %1 to i32, !dbg !12408
  %sub = sub nsw i32 0, %conv, !dbg !12410
  %conv1 = trunc i32 %sub to i16, !dbg !12410
  store i16 %conv1, i16* %offset.addr, align 2, !dbg !12411
  %2 = load i16, i16* %length.addr, align 2, !dbg !12412
  %conv2 = sext i16 %2 to i32, !dbg !12412
  %sub3 = sub nsw i32 0, %conv2, !dbg !12413
  %conv4 = trunc i32 %sub3 to i16, !dbg !12413
  store i16 %conv4, i16* %length.addr, align 2, !dbg !12414
  %3 = load i16, i16* %size.addr, align 2, !dbg !12415
  %conv5 = sext i16 %3 to i32, !dbg !12415
  %sub6 = sub nsw i32 0, %conv5, !dbg !12416
  %conv7 = trunc i32 %sub6 to i16, !dbg !12416
  store i16 %conv7, i16* %size.addr, align 2, !dbg !12417
  br label %sw.bb8, !dbg !12418

sw.bb8:                                           ; preds = %entry, %sw.bb
  call void @glBegin(i32 1), !dbg !12419
  %4 = load i16, i16* %offset.addr, align 2, !dbg !12420
  call void @glVertex2s(i16 signext %4, i16 signext 0), !dbg !12421
  %5 = load i16, i16* %offset.addr, align 2, !dbg !12422
  %conv9 = sext i16 %5 to i32, !dbg !12422
  %6 = load i16, i16* %length.addr, align 2, !dbg !12423
  %conv10 = sext i16 %6 to i32, !dbg !12423
  %add = add nsw i32 %conv9, %conv10, !dbg !12424
  %conv11 = trunc i32 %add to i16, !dbg !12422
  call void @glVertex2s(i16 signext %conv11, i16 signext 0), !dbg !12425
  %7 = load i16, i16* %offset.addr, align 2, !dbg !12426
  %conv12 = sext i16 %7 to i32, !dbg !12426
  %8 = load i16, i16* %length.addr, align 2, !dbg !12427
  %conv13 = sext i16 %8 to i32, !dbg !12427
  %add14 = add nsw i32 %conv12, %conv13, !dbg !12428
  %conv15 = trunc i32 %add14 to i16, !dbg !12426
  call void @glVertex2s(i16 signext %conv15, i16 signext 0), !dbg !12429
  %9 = load i16, i16* %offset.addr, align 2, !dbg !12430
  %conv16 = sext i16 %9 to i32, !dbg !12430
  %10 = load i16, i16* %length.addr, align 2, !dbg !12431
  %conv17 = sext i16 %10 to i32, !dbg !12431
  %add18 = add nsw i32 %conv16, %conv17, !dbg !12432
  %11 = load i16, i16* %size.addr, align 2, !dbg !12433
  %conv19 = sext i16 %11 to i32, !dbg !12433
  %sub20 = sub nsw i32 %add18, %conv19, !dbg !12434
  %conv21 = trunc i32 %sub20 to i16, !dbg !12430
  %12 = load i16, i16* %size.addr, align 2, !dbg !12435
  %conv22 = sext i16 %12 to i32, !dbg !12435
  %sub23 = sub nsw i32 0, %conv22, !dbg !12436
  %conv24 = trunc i32 %sub23 to i16, !dbg !12436
  call void @glVertex2s(i16 signext %conv21, i16 signext %conv24), !dbg !12437
  %13 = load i16, i16* %offset.addr, align 2, !dbg !12438
  %conv25 = sext i16 %13 to i32, !dbg !12438
  %14 = load i16, i16* %length.addr, align 2, !dbg !12439
  %conv26 = sext i16 %14 to i32, !dbg !12439
  %add27 = add nsw i32 %conv25, %conv26, !dbg !12440
  %conv28 = trunc i32 %add27 to i16, !dbg !12438
  call void @glVertex2s(i16 signext %conv28, i16 signext 0), !dbg !12441
  %15 = load i16, i16* %offset.addr, align 2, !dbg !12442
  %conv29 = sext i16 %15 to i32, !dbg !12442
  %16 = load i16, i16* %length.addr, align 2, !dbg !12443
  %conv30 = sext i16 %16 to i32, !dbg !12443
  %add31 = add nsw i32 %conv29, %conv30, !dbg !12444
  %17 = load i16, i16* %size.addr, align 2, !dbg !12445
  %conv32 = sext i16 %17 to i32, !dbg !12445
  %sub33 = sub nsw i32 %add31, %conv32, !dbg !12446
  %conv34 = trunc i32 %sub33 to i16, !dbg !12442
  %18 = load i16, i16* %size.addr, align 2, !dbg !12447
  call void @glVertex2s(i16 signext %conv34, i16 signext %18), !dbg !12448
  call void @glEnd(), !dbg !12449
  br label %sw.epilog, !dbg !12450

sw.bb35:                                          ; preds = %entry
  %19 = load i16, i16* %offset.addr, align 2, !dbg !12451
  %conv36 = sext i16 %19 to i32, !dbg !12451
  %sub37 = sub nsw i32 0, %conv36, !dbg !12452
  %conv38 = trunc i32 %sub37 to i16, !dbg !12452
  store i16 %conv38, i16* %offset.addr, align 2, !dbg !12453
  %20 = load i16, i16* %length.addr, align 2, !dbg !12454
  %conv39 = sext i16 %20 to i32, !dbg !12454
  %sub40 = sub nsw i32 0, %conv39, !dbg !12455
  %conv41 = trunc i32 %sub40 to i16, !dbg !12455
  store i16 %conv41, i16* %length.addr, align 2, !dbg !12456
  %21 = load i16, i16* %size.addr, align 2, !dbg !12457
  %conv42 = sext i16 %21 to i32, !dbg !12457
  %sub43 = sub nsw i32 0, %conv42, !dbg !12458
  %conv44 = trunc i32 %sub43 to i16, !dbg !12458
  store i16 %conv44, i16* %size.addr, align 2, !dbg !12459
  br label %sw.bb45, !dbg !12460

sw.bb45:                                          ; preds = %entry, %sw.bb35
  call void @glBegin(i32 1), !dbg !12461
  %22 = load i16, i16* %offset.addr, align 2, !dbg !12462
  call void @glVertex2s(i16 signext 0, i16 signext %22), !dbg !12463
  %23 = load i16, i16* %offset.addr, align 2, !dbg !12464
  %conv46 = sext i16 %23 to i32, !dbg !12464
  %24 = load i16, i16* %length.addr, align 2, !dbg !12465
  %conv47 = sext i16 %24 to i32, !dbg !12465
  %add48 = add nsw i32 %conv46, %conv47, !dbg !12466
  %conv49 = trunc i32 %add48 to i16, !dbg !12464
  call void @glVertex2s(i16 signext 0, i16 signext %conv49), !dbg !12467
  %25 = load i16, i16* %offset.addr, align 2, !dbg !12468
  %conv50 = sext i16 %25 to i32, !dbg !12468
  %26 = load i16, i16* %length.addr, align 2, !dbg !12469
  %conv51 = sext i16 %26 to i32, !dbg !12469
  %add52 = add nsw i32 %conv50, %conv51, !dbg !12470
  %conv53 = trunc i32 %add52 to i16, !dbg !12468
  call void @glVertex2s(i16 signext 0, i16 signext %conv53), !dbg !12471
  %27 = load i16, i16* %size.addr, align 2, !dbg !12472
  %conv54 = sext i16 %27 to i32, !dbg !12472
  %sub55 = sub nsw i32 0, %conv54, !dbg !12473
  %conv56 = trunc i32 %sub55 to i16, !dbg !12473
  %28 = load i16, i16* %offset.addr, align 2, !dbg !12474
  %conv57 = sext i16 %28 to i32, !dbg !12474
  %29 = load i16, i16* %length.addr, align 2, !dbg !12475
  %conv58 = sext i16 %29 to i32, !dbg !12475
  %add59 = add nsw i32 %conv57, %conv58, !dbg !12476
  %30 = load i16, i16* %size.addr, align 2, !dbg !12477
  %conv60 = sext i16 %30 to i32, !dbg !12477
  %sub61 = sub nsw i32 %add59, %conv60, !dbg !12478
  %conv62 = trunc i32 %sub61 to i16, !dbg !12474
  call void @glVertex2s(i16 signext %conv56, i16 signext %conv62), !dbg !12479
  %31 = load i16, i16* %offset.addr, align 2, !dbg !12480
  %conv63 = sext i16 %31 to i32, !dbg !12480
  %32 = load i16, i16* %length.addr, align 2, !dbg !12481
  %conv64 = sext i16 %32 to i32, !dbg !12481
  %add65 = add nsw i32 %conv63, %conv64, !dbg !12482
  %conv66 = trunc i32 %add65 to i16, !dbg !12480
  call void @glVertex2s(i16 signext 0, i16 signext %conv66), !dbg !12483
  %33 = load i16, i16* %size.addr, align 2, !dbg !12484
  %34 = load i16, i16* %offset.addr, align 2, !dbg !12485
  %conv67 = sext i16 %34 to i32, !dbg !12485
  %35 = load i16, i16* %length.addr, align 2, !dbg !12486
  %conv68 = sext i16 %35 to i32, !dbg !12486
  %add69 = add nsw i32 %conv67, %conv68, !dbg !12487
  %36 = load i16, i16* %size.addr, align 2, !dbg !12488
  %conv70 = sext i16 %36 to i32, !dbg !12488
  %sub71 = sub nsw i32 %add69, %conv70, !dbg !12489
  %conv72 = trunc i32 %sub71 to i16, !dbg !12485
  call void @glVertex2s(i16 signext %33, i16 signext %conv72), !dbg !12490
  call void @glEnd(), !dbg !12491
  br label %sw.epilog, !dbg !12492

sw.epilog:                                        ; preds = %entry, %sw.bb45, %sw.bb8
  ret void, !dbg !12493
}

; Function Attrs: nounwind
declare dso_local float @hypotf(float, float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @drawArc(float %size, float %angle_start, float %angle_end, i32 %segments) #0 !dbg !12494 {
entry:
  %size.addr = alloca float, align 4
  %angle_start.addr = alloca float, align 4
  %angle_end.addr = alloca float, align 4
  %segments.addr = alloca i32, align 4
  %delta = alloca float, align 4
  %angle = alloca float, align 4
  %a = alloca i32, align 4
  store float %size, float* %size.addr, align 4
  call void @llvm.dbg.declare(metadata float* %size.addr, metadata !12497, metadata !DIExpression()), !dbg !12498
  store float %angle_start, float* %angle_start.addr, align 4
  call void @llvm.dbg.declare(metadata float* %angle_start.addr, metadata !12499, metadata !DIExpression()), !dbg !12500
  store float %angle_end, float* %angle_end.addr, align 4
  call void @llvm.dbg.declare(metadata float* %angle_end.addr, metadata !12501, metadata !DIExpression()), !dbg !12502
  store i32 %segments, i32* %segments.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %segments.addr, metadata !12503, metadata !DIExpression()), !dbg !12504
  call void @llvm.dbg.declare(metadata float* %delta, metadata !12505, metadata !DIExpression()), !dbg !12506
  %0 = load float, float* %angle_end.addr, align 4, !dbg !12507
  %1 = load float, float* %angle_start.addr, align 4, !dbg !12508
  %sub = fsub float %0, %1, !dbg !12509
  %2 = load i32, i32* %segments.addr, align 4, !dbg !12510
  %conv = sitofp i32 %2 to float, !dbg !12510
  %div = fdiv float %sub, %conv, !dbg !12511
  store float %div, float* %delta, align 4, !dbg !12506
  call void @llvm.dbg.declare(metadata float* %angle, metadata !12512, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.declare(metadata i32* %a, metadata !12514, metadata !DIExpression()), !dbg !12515
  call void @glBegin(i32 3), !dbg !12516
  %3 = load float, float* %angle_start.addr, align 4, !dbg !12517
  store float %3, float* %angle, align 4, !dbg !12519
  store i32 0, i32* %a, align 4, !dbg !12520
  br label %for.cond, !dbg !12521

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %a, align 4, !dbg !12522
  %5 = load i32, i32* %segments.addr, align 4, !dbg !12524
  %cmp = icmp slt i32 %4, %5, !dbg !12525
  br i1 %cmp, label %for.body, label %for.end, !dbg !12526

for.body:                                         ; preds = %for.cond
  %6 = load float, float* %angle, align 4, !dbg !12527
  %call = call float @cosf(float %6) #5, !dbg !12529
  %7 = load float, float* %size.addr, align 4, !dbg !12530
  %mul = fmul float %call, %7, !dbg !12531
  %8 = load float, float* %angle, align 4, !dbg !12532
  %call2 = call float @sinf(float %8) #5, !dbg !12533
  %9 = load float, float* %size.addr, align 4, !dbg !12534
  %mul3 = fmul float %call2, %9, !dbg !12535
  call void @glVertex2f(float %mul, float %mul3), !dbg !12536
  br label %for.inc, !dbg !12537

for.inc:                                          ; preds = %for.body
  %10 = load float, float* %delta, align 4, !dbg !12538
  %11 = load float, float* %angle, align 4, !dbg !12539
  %add = fadd float %11, %10, !dbg !12539
  store float %add, float* %angle, align 4, !dbg !12539
  %12 = load i32, i32* %a, align 4, !dbg !12540
  %inc = add nsw i32 %12, 1, !dbg !12540
  store i32 %inc, i32* %a, align 4, !dbg !12540
  br label %for.cond, !dbg !12541, !llvm.loop !12542

for.end:                                          ; preds = %for.cond
  %13 = load float, float* %angle_end.addr, align 4, !dbg !12544
  %call4 = call float @cosf(float %13) #5, !dbg !12545
  %14 = load float, float* %size.addr, align 4, !dbg !12546
  %mul5 = fmul float %call4, %14, !dbg !12547
  %15 = load float, float* %angle_end.addr, align 4, !dbg !12548
  %call6 = call float @sinf(float %15) #5, !dbg !12549
  %16 = load float, float* %size.addr, align 4, !dbg !12550
  %mul7 = fmul float %call6, %16, !dbg !12551
  call void @glVertex2f(float %mul5, float %mul7), !dbg !12552
  call void @glEnd(), !dbg !12553
  ret void, !dbg !12554
}

; Function Attrs: nounwind
declare dso_local float @cosf(float) #4

; Function Attrs: nounwind
declare dso_local float @sinf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @drawArrowHead(i32 %d, i16 signext %size) #0 !dbg !12555 {
entry:
  %d.addr = alloca i32, align 4
  %size.addr = alloca i16, align 2
  store i32 %d, i32* %d.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d.addr, metadata !12558, metadata !DIExpression()), !dbg !12559
  store i16 %size, i16* %size.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %size.addr, metadata !12560, metadata !DIExpression()), !dbg !12561
  %0 = load i32, i32* %d.addr, align 4, !dbg !12562
  switch i32 %0, label %sw.epilog [
    i32 2, label %sw.bb
    i32 3, label %sw.bb2
    i32 1, label %sw.bb12
    i32 0, label %sw.bb16
  ], !dbg !12563

sw.bb:                                            ; preds = %entry
  %1 = load i16, i16* %size.addr, align 2, !dbg !12564
  %conv = sext i16 %1 to i32, !dbg !12564
  %sub = sub nsw i32 0, %conv, !dbg !12566
  %conv1 = trunc i32 %sub to i16, !dbg !12566
  store i16 %conv1, i16* %size.addr, align 2, !dbg !12567
  br label %sw.bb2, !dbg !12568

sw.bb2:                                           ; preds = %entry, %sw.bb
  call void @glBegin(i32 1), !dbg !12569
  call void @glVertex2s(i16 signext 0, i16 signext 0), !dbg !12570
  %2 = load i16, i16* %size.addr, align 2, !dbg !12571
  %conv3 = sext i16 %2 to i32, !dbg !12571
  %sub4 = sub nsw i32 0, %conv3, !dbg !12572
  %conv5 = trunc i32 %sub4 to i16, !dbg !12572
  %3 = load i16, i16* %size.addr, align 2, !dbg !12573
  %conv6 = sext i16 %3 to i32, !dbg !12573
  %sub7 = sub nsw i32 0, %conv6, !dbg !12574
  %conv8 = trunc i32 %sub7 to i16, !dbg !12574
  call void @glVertex2s(i16 signext %conv5, i16 signext %conv8), !dbg !12575
  call void @glVertex2s(i16 signext 0, i16 signext 0), !dbg !12576
  %4 = load i16, i16* %size.addr, align 2, !dbg !12577
  %conv9 = sext i16 %4 to i32, !dbg !12577
  %sub10 = sub nsw i32 0, %conv9, !dbg !12578
  %conv11 = trunc i32 %sub10 to i16, !dbg !12578
  %5 = load i16, i16* %size.addr, align 2, !dbg !12579
  call void @glVertex2s(i16 signext %conv11, i16 signext %5), !dbg !12580
  call void @glEnd(), !dbg !12581
  br label %sw.epilog, !dbg !12582

sw.bb12:                                          ; preds = %entry
  %6 = load i16, i16* %size.addr, align 2, !dbg !12583
  %conv13 = sext i16 %6 to i32, !dbg !12583
  %sub14 = sub nsw i32 0, %conv13, !dbg !12584
  %conv15 = trunc i32 %sub14 to i16, !dbg !12584
  store i16 %conv15, i16* %size.addr, align 2, !dbg !12585
  br label %sw.bb16, !dbg !12586

sw.bb16:                                          ; preds = %entry, %sw.bb12
  call void @glBegin(i32 1), !dbg !12587
  call void @glVertex2s(i16 signext 0, i16 signext 0), !dbg !12588
  %7 = load i16, i16* %size.addr, align 2, !dbg !12589
  %conv17 = sext i16 %7 to i32, !dbg !12589
  %sub18 = sub nsw i32 0, %conv17, !dbg !12590
  %conv19 = trunc i32 %sub18 to i16, !dbg !12590
  %8 = load i16, i16* %size.addr, align 2, !dbg !12591
  %conv20 = sext i16 %8 to i32, !dbg !12591
  %sub21 = sub nsw i32 0, %conv20, !dbg !12592
  %conv22 = trunc i32 %sub21 to i16, !dbg !12592
  call void @glVertex2s(i16 signext %conv19, i16 signext %conv22), !dbg !12593
  call void @glVertex2s(i16 signext 0, i16 signext 0), !dbg !12594
  %9 = load i16, i16* %size.addr, align 2, !dbg !12595
  %10 = load i16, i16* %size.addr, align 2, !dbg !12596
  %conv23 = sext i16 %10 to i32, !dbg !12596
  %sub24 = sub nsw i32 0, %conv23, !dbg !12597
  %conv25 = trunc i32 %sub24 to i16, !dbg !12597
  call void @glVertex2s(i16 signext %9, i16 signext %conv25), !dbg !12598
  call void @glEnd(), !dbg !12599
  br label %sw.epilog, !dbg !12600

sw.epilog:                                        ; preds = %entry, %sw.bb16, %sw.bb2
  ret void, !dbg !12601
}

declare dso_local void @UI_GetThemeColor3ubv(i32, i8*) #2

declare dso_local void @UI_make_axis_color(i8*, i8*, i8 zeroext) #2

declare dso_local void @glColor3ubv(i8*) #2

declare dso_local void @glVertex2s(i16 signext, i16 signext) #2

declare dso_local void @glVertex2f(float, float) #2

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !12602 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12605, metadata !DIExpression()), !dbg !12606
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12607, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.declare(metadata float* %d, metadata !12609, metadata !DIExpression()), !dbg !12610
  %0 = load float*, float** %a.addr, align 8, !dbg !12611
  %1 = load float*, float** %a.addr, align 8, !dbg !12612
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !12613
  store float %call, float* %d, align 4, !dbg !12610
  %2 = load float, float* %d, align 4, !dbg !12614
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !12616
  br i1 %cmp, label %if.then, label %if.else, !dbg !12617

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !12618
  %call1 = call float @sqrtf(float %3) #5, !dbg !12620
  store float %call1, float* %d, align 4, !dbg !12621
  %4 = load float*, float** %r.addr, align 8, !dbg !12622
  %5 = load float*, float** %a.addr, align 8, !dbg !12623
  %6 = load float, float* %d, align 4, !dbg !12624
  %div = fdiv float 1.000000e+00, %6, !dbg !12625
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !12626
  br label %if.end, !dbg !12627

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !12628
  call void @zero_v3(float* %7), !dbg !12630
  store float 0.000000e+00, float* %d, align 4, !dbg !12631
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !12632
  ret float %8, !dbg !12633
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !12634 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12637, metadata !DIExpression()), !dbg !12638
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !12639, metadata !DIExpression()), !dbg !12640
  %0 = load float*, float** %a.addr, align 8, !dbg !12641
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12641
  %1 = load float, float* %arrayidx, align 4, !dbg !12641
  %2 = load float*, float** %b.addr, align 8, !dbg !12642
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !12642
  %3 = load float, float* %arrayidx1, align 4, !dbg !12642
  %mul = fmul float %1, %3, !dbg !12643
  %4 = load float*, float** %a.addr, align 8, !dbg !12644
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !12644
  %5 = load float, float* %arrayidx2, align 4, !dbg !12644
  %6 = load float*, float** %b.addr, align 8, !dbg !12645
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !12645
  %7 = load float, float* %arrayidx3, align 4, !dbg !12645
  %mul4 = fmul float %5, %7, !dbg !12646
  %add = fadd float %mul, %mul4, !dbg !12647
  %8 = load float*, float** %a.addr, align 8, !dbg !12648
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !12648
  %9 = load float, float* %arrayidx5, align 4, !dbg !12648
  %10 = load float*, float** %b.addr, align 8, !dbg !12649
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !12649
  %11 = load float, float* %arrayidx6, align 4, !dbg !12649
  %mul7 = fmul float %9, %11, !dbg !12650
  %add8 = fadd float %add, %mul7, !dbg !12651
  ret float %add8, !dbg !12652
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !12653 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12656, metadata !DIExpression()), !dbg !12657
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12658, metadata !DIExpression()), !dbg !12659
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !12660, metadata !DIExpression()), !dbg !12661
  %0 = load float*, float** %a.addr, align 8, !dbg !12662
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12662
  %1 = load float, float* %arrayidx, align 4, !dbg !12662
  %2 = load float, float* %f.addr, align 4, !dbg !12663
  %mul = fmul float %1, %2, !dbg !12664
  %3 = load float*, float** %r.addr, align 8, !dbg !12665
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !12665
  store float %mul, float* %arrayidx1, align 4, !dbg !12666
  %4 = load float*, float** %a.addr, align 8, !dbg !12667
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !12667
  %5 = load float, float* %arrayidx2, align 4, !dbg !12667
  %6 = load float, float* %f.addr, align 4, !dbg !12668
  %mul3 = fmul float %5, %6, !dbg !12669
  %7 = load float*, float** %r.addr, align 8, !dbg !12670
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !12670
  store float %mul3, float* %arrayidx4, align 4, !dbg !12671
  %8 = load float*, float** %a.addr, align 8, !dbg !12672
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !12672
  %9 = load float, float* %arrayidx5, align 4, !dbg !12672
  %10 = load float, float* %f.addr, align 4, !dbg !12673
  %mul6 = fmul float %9, %10, !dbg !12674
  %11 = load float*, float** %r.addr, align 8, !dbg !12675
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !12675
  store float %mul6, float* %arrayidx7, align 4, !dbg !12676
  ret void, !dbg !12677
}

declare dso_local %struct.wmWindow* @CTX_wm_window(%struct.bContext*) #2

declare dso_local void @WM_paint_cursor_tag_redraw(%struct.wmWindow*, %struct.ARegion*) #2

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

declare dso_local %struct.Mask* @CTX_data_edit_mask(%struct.bContext*) #2

declare dso_local void @ED_area_tag_redraw(%struct.ScrArea*) #2

declare dso_local zeroext i8 @ED_space_clip_check_show_trackedit(%struct.SpaceClip*) #2

declare dso_local zeroext i8 @ED_space_clip_check_show_maskedit(%struct.SpaceClip*) #2

declare dso_local void @ED_area_headerprint(%struct.ScrArea*, i8*) #2

declare dso_local void @WM_main_add_notifier(i32, i8*) #2

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @Bend(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !12678 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %td = alloca %struct.TransData*, align 8
  %vec = alloca [3 x float], align 4
  %pivot = alloca [3 x float], align 4
  %warp_end_radius = alloca [3 x float], align 4
  %i = alloca i32, align 4
  %str = alloca [256 x i8], align 16
  %data1 = alloca %struct.BendCustomData*, align 8
  %is_clamp = alloca i8, align 1
  %values = alloca %union.anon.1, align 4
  %radius_snap = alloca float, align 4
  %snap_hack = alloca float, align 4
  %c = alloca [128 x i8], align 16
  %mat = alloca [3 x [3 x float]], align 16
  %delta = alloca [3 x float], align 4
  %fac = alloca float, align 4
  %fac_scaled = alloca float, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !12681, metadata !DIExpression()), !dbg !12682
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !12683, metadata !DIExpression()), !dbg !12684
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !12685, metadata !DIExpression()), !dbg !12686
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12687
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !12688
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !12688
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !12686
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !12689, metadata !DIExpression()), !dbg !12690
  call void @llvm.dbg.declare(metadata [3 x float]* %pivot, metadata !12691, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.declare(metadata [3 x float]* %warp_end_radius, metadata !12693, metadata !DIExpression()), !dbg !12694
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12695, metadata !DIExpression()), !dbg !12696
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !12697, metadata !DIExpression()), !dbg !12698
  call void @llvm.dbg.declare(metadata %struct.BendCustomData** %data1, metadata !12699, metadata !DIExpression()), !dbg !12702
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12703
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 40, !dbg !12704
  %3 = load i8*, i8** %customData, align 8, !dbg !12704
  %4 = bitcast i8* %3 to %struct.BendCustomData*, !dbg !12703
  store %struct.BendCustomData* %4, %struct.BendCustomData** %data1, align 8, !dbg !12702
  call void @llvm.dbg.declare(metadata i8* %is_clamp, metadata !12705, metadata !DIExpression()), !dbg !12706
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12707
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 1, !dbg !12708
  %6 = load i32, i32* %flag, align 4, !dbg !12708
  %and = and i32 %6, 16777216, !dbg !12709
  %cmp = icmp eq i32 %and, 0, !dbg !12710
  %conv = zext i1 %cmp to i32, !dbg !12710
  %conv2 = trunc i32 %conv to i8, !dbg !12711
  store i8 %conv2, i8* %is_clamp, align 1, !dbg !12706
  call void @llvm.dbg.declare(metadata %union.anon.1* %values, metadata !12712, metadata !DIExpression()), !dbg !12721
  %vector = bitcast %union.anon.1* %values to [2 x float]*, !dbg !12722
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %vector, i64 0, i64 0, !dbg !12723
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12724
  %values3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 47, !dbg !12725
  %arraydecay4 = getelementptr inbounds [4 x float], [4 x float]* %values3, i64 0, i64 0, !dbg !12724
  call void @copy_v2_v2(float* %arraydecay, float* %arraydecay4), !dbg !12726
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12727
  %tsnap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 14, !dbg !12729
  %mode = getelementptr inbounds %struct.TransSnap, %struct.TransSnap* %tsnap, i32 0, i32 0, !dbg !12730
  %9 = load i16, i16* %mode, align 8, !dbg !12730
  %conv5 = sext i16 %9 to i32, !dbg !12727
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !12731
  br i1 %cmp6, label %if.then, label %if.end, !dbg !12732

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %radius_snap, metadata !12733, metadata !DIExpression()), !dbg !12735
  store float 0x3FB99999A0000000, float* %radius_snap, align 4, !dbg !12735
  call void @llvm.dbg.declare(metadata float* %snap_hack, metadata !12736, metadata !DIExpression()), !dbg !12737
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12738
  %snap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 25, !dbg !12739
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %snap, i64 0, i64 1, !dbg !12738
  %11 = load float, float* %arrayidx, align 4, !dbg !12738
  %12 = load %struct.BendCustomData*, %struct.BendCustomData** %data1, align 8, !dbg !12740
  %warp_init_dist = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %12, i32 0, i32 4, !dbg !12741
  %13 = load float, float* %warp_init_dist, align 4, !dbg !12741
  %mul = fmul float %11, %13, !dbg !12742
  %div = fdiv float %mul, 0x3FB99999A0000000, !dbg !12743
  store float %div, float* %snap_hack, align 4, !dbg !12737
  %14 = load float, float* %snap_hack, align 4, !dbg !12744
  %data8 = bitcast %union.anon.1* %values to %struct.anon.2*, !dbg !12745
  %scale = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data8, i32 0, i32 1, !dbg !12746
  %15 = load float, float* %scale, align 4, !dbg !12747
  %mul9 = fmul float %15, %14, !dbg !12747
  store float %mul9, float* %scale, align 4, !dbg !12747
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12748
  %vector10 = bitcast %union.anon.1* %values to [2 x float]*, !dbg !12749
  %arraydecay11 = getelementptr inbounds [2 x float], [2 x float]* %vector10, i64 0, i64 0, !dbg !12750
  call void @snapGridIncrement(%struct.TransInfo* %16, float* %arraydecay11), !dbg !12751
  %17 = load float, float* %snap_hack, align 4, !dbg !12752
  %data12 = bitcast %union.anon.1* %values to %struct.anon.2*, !dbg !12753
  %scale13 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data12, i32 0, i32 1, !dbg !12754
  %18 = load float, float* %scale13, align 4, !dbg !12755
  %div14 = fdiv float %18, %17, !dbg !12755
  store float %div14, float* %scale13, align 4, !dbg !12755
  br label %if.end, !dbg !12756

if.end:                                           ; preds = %if.then, %entry
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12757
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 15, !dbg !12759
  %vector15 = bitcast %union.anon.1* %values to [2 x float]*, !dbg !12760
  %arraydecay16 = getelementptr inbounds [2 x float], [2 x float]* %vector15, i64 0, i64 0, !dbg !12761
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %arraydecay16), !dbg !12762
  %tobool = icmp ne i8 %call, 0, !dbg !12762
  br i1 %tobool, label %if.then17, label %if.end24, !dbg !12763

if.then17:                                        ; preds = %if.end
  %data18 = bitcast %union.anon.1* %values to %struct.anon.2*, !dbg !12764
  %scale19 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data18, i32 0, i32 1, !dbg !12766
  %20 = load float, float* %scale19, align 4, !dbg !12766
  %21 = load %struct.BendCustomData*, %struct.BendCustomData** %data1, align 8, !dbg !12767
  %warp_init_dist20 = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %21, i32 0, i32 4, !dbg !12768
  %22 = load float, float* %warp_init_dist20, align 4, !dbg !12768
  %div21 = fdiv float %20, %22, !dbg !12769
  %data22 = bitcast %union.anon.1* %values to %struct.anon.2*, !dbg !12770
  %scale23 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data22, i32 0, i32 1, !dbg !12771
  store float %div21, float* %scale23, align 4, !dbg !12772
  br label %if.end24, !dbg !12773

if.end24:                                         ; preds = %if.then17, %if.end
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12774
  %num25 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 15, !dbg !12776
  %call26 = call zeroext i8 @hasNumInput(%struct.NumInput* %num25), !dbg !12777
  %tobool27 = icmp ne i8 %call26, 0, !dbg !12777
  br i1 %tobool27, label %if.then28, label %if.else, !dbg !12778

if.then28:                                        ; preds = %if.end24
  call void @llvm.dbg.declare(metadata [128 x i8]* %c, metadata !12779, metadata !DIExpression()), !dbg !12781
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12782
  %num29 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 15, !dbg !12783
  %arraydecay30 = getelementptr inbounds [128 x i8], [128 x i8]* %c, i64 0, i64 0, !dbg !12784
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12785
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 56, !dbg !12786
  %26 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12786
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %26, i32 0, i32 38, !dbg !12787
  call void @outputNumInput(%struct.NumInput* %num29, i8* %arraydecay30, %struct.UnitSettings* %unit), !dbg !12788
  %arraydecay31 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !12789
  %arrayidx32 = getelementptr inbounds [128 x i8], [128 x i8]* %c, i64 0, i64 0, !dbg !12790
  %arrayidx33 = getelementptr inbounds [128 x i8], [128 x i8]* %c, i64 0, i64 64, !dbg !12791
  %27 = load i8, i8* %is_clamp, align 1, !dbg !12792
  %call34 = call i8* @WM_bool_as_string(i8 zeroext %27), !dbg !12793
  %call35 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay31, i64 256, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.79, i64 0, i64 0), i8* %arrayidx32, i8* %arrayidx33, i8* %call34), !dbg !12794
  br label %if.end47, !dbg !12795

if.else:                                          ; preds = %if.end24
  %arraydecay36 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !12796
  %data37 = bitcast %union.anon.1* %values to %struct.anon.2*, !dbg !12798
  %angle = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data37, i32 0, i32 0, !dbg !12798
  %28 = load float, float* %angle, align 4, !dbg !12798
  %mul38 = fmul float %28, 0x404CA5DC20000000, !dbg !12798
  %conv39 = fpext float %mul38 to double, !dbg !12798
  %data40 = bitcast %union.anon.1* %values to %struct.anon.2*, !dbg !12799
  %scale41 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data40, i32 0, i32 1, !dbg !12800
  %29 = load float, float* %scale41, align 4, !dbg !12800
  %30 = load %struct.BendCustomData*, %struct.BendCustomData** %data1, align 8, !dbg !12801
  %warp_init_dist42 = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %30, i32 0, i32 4, !dbg !12802
  %31 = load float, float* %warp_init_dist42, align 4, !dbg !12802
  %mul43 = fmul float %29, %31, !dbg !12803
  %conv44 = fpext float %mul43 to double, !dbg !12804
  %32 = load i8, i8* %is_clamp, align 1, !dbg !12805
  %call45 = call i8* @WM_bool_as_string(i8 zeroext %32), !dbg !12806
  %call46 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay36, i64 256, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.80, i64 0, i64 0), double %conv39, double %conv44, i8* %call45), !dbg !12807
  br label %if.end47

if.end47:                                         ; preds = %if.else, %if.then28
  %33 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12808
  %values48 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %33, i32 0, i32 47, !dbg !12809
  %arraydecay49 = getelementptr inbounds [4 x float], [4 x float]* %values48, i64 0, i64 0, !dbg !12808
  %vector50 = bitcast %union.anon.1* %values to [2 x float]*, !dbg !12810
  %arraydecay51 = getelementptr inbounds [2 x float], [2 x float]* %vector50, i64 0, i64 0, !dbg !12811
  call void @copy_v2_v2(float* %arraydecay49, float* %arraydecay51), !dbg !12812
  %data52 = bitcast %union.anon.1* %values to %struct.anon.2*, !dbg !12813
  %angle53 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data52, i32 0, i32 0, !dbg !12814
  %34 = load float, float* %angle53, align 4, !dbg !12815
  %mul54 = fmul float %34, -1.000000e+00, !dbg !12815
  store float %mul54, float* %angle53, align 4, !dbg !12815
  %35 = load %struct.BendCustomData*, %struct.BendCustomData** %data1, align 8, !dbg !12816
  %warp_init_dist55 = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %35, i32 0, i32 4, !dbg !12817
  %36 = load float, float* %warp_init_dist55, align 4, !dbg !12817
  %data56 = bitcast %union.anon.1* %values to %struct.anon.2*, !dbg !12818
  %scale57 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data56, i32 0, i32 1, !dbg !12819
  %37 = load float, float* %scale57, align 4, !dbg !12820
  %mul58 = fmul float %37, %36, !dbg !12820
  store float %mul58, float* %scale57, align 4, !dbg !12820
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %warp_end_radius, i64 0, i64 0, !dbg !12821
  %38 = load %struct.BendCustomData*, %struct.BendCustomData** %data1, align 8, !dbg !12822
  %warp_end = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %38, i32 0, i32 1, !dbg !12823
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %warp_end, i64 0, i64 0, !dbg !12822
  call void @copy_v3_v3(float* %arraydecay59, float* %arraydecay60), !dbg !12824
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %warp_end_radius, i64 0, i64 0, !dbg !12825
  %39 = load %struct.BendCustomData*, %struct.BendCustomData** %data1, align 8, !dbg !12826
  %warp_sta = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %39, i32 0, i32 0, !dbg !12827
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %warp_sta, i64 0, i64 0, !dbg !12826
  %data63 = bitcast %union.anon.1* %values to %struct.anon.2*, !dbg !12828
  %scale64 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data63, i32 0, i32 1, !dbg !12829
  %40 = load float, float* %scale64, align 4, !dbg !12829
  call void @dist_ensure_v3_v3fl(float* %arraydecay61, float* %arraydecay62, float %40), !dbg !12830
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %pivot, i64 0, i64 0, !dbg !12831
  %41 = load %struct.BendCustomData*, %struct.BendCustomData** %data1, align 8, !dbg !12832
  %warp_sta66 = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %41, i32 0, i32 0, !dbg !12833
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %warp_sta66, i64 0, i64 0, !dbg !12832
  call void @copy_v3_v3(float* %arraydecay65, float* %arraydecay67), !dbg !12834
  %data68 = bitcast %union.anon.1* %values to %struct.anon.2*, !dbg !12835
  %angle69 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data68, i32 0, i32 0, !dbg !12837
  %42 = load float, float* %angle69, align 4, !dbg !12837
  %cmp70 = fcmp ogt float %42, 0.000000e+00, !dbg !12838
  br i1 %cmp70, label %if.then72, label %if.else81, !dbg !12839

if.then72:                                        ; preds = %if.end47
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %pivot, i64 0, i64 0, !dbg !12840
  %43 = load %struct.BendCustomData*, %struct.BendCustomData** %data1, align 8, !dbg !12842
  %warp_tan = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %43, i32 0, i32 3, !dbg !12843
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %warp_tan, i64 0, i64 0, !dbg !12842
  %data75 = bitcast %union.anon.1* %values to %struct.anon.2*, !dbg !12844
  %scale76 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data75, i32 0, i32 1, !dbg !12845
  %44 = load float, float* %scale76, align 4, !dbg !12845
  %fneg = fneg float %44, !dbg !12846
  %data77 = bitcast %union.anon.1* %values to %struct.anon.2*, !dbg !12847
  %angle78 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data77, i32 0, i32 0, !dbg !12848
  %45 = load float, float* %angle78, align 4, !dbg !12848
  %sub = fsub float 0x3FF921FB60000000, %45, !dbg !12849
  %call79 = call float @shell_angle_to_dist(float %sub), !dbg !12850
  %mul80 = fmul float %fneg, %call79, !dbg !12851
  call void @madd_v3_v3fl(float* %arraydecay73, float* %arraydecay74, float %mul80), !dbg !12852
  br label %if.end91, !dbg !12853

if.else81:                                        ; preds = %if.end47
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %pivot, i64 0, i64 0, !dbg !12854
  %46 = load %struct.BendCustomData*, %struct.BendCustomData** %data1, align 8, !dbg !12856
  %warp_tan83 = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %46, i32 0, i32 3, !dbg !12857
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %warp_tan83, i64 0, i64 0, !dbg !12856
  %data85 = bitcast %union.anon.1* %values to %struct.anon.2*, !dbg !12858
  %scale86 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data85, i32 0, i32 1, !dbg !12859
  %47 = load float, float* %scale86, align 4, !dbg !12859
  %data87 = bitcast %union.anon.1* %values to %struct.anon.2*, !dbg !12860
  %angle88 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data87, i32 0, i32 0, !dbg !12861
  %48 = load float, float* %angle88, align 4, !dbg !12861
  %add = fadd float 0x3FF921FB60000000, %48, !dbg !12862
  %call89 = call float @shell_angle_to_dist(float %add), !dbg !12863
  %mul90 = fmul float %47, %call89, !dbg !12864
  call void @madd_v3_v3fl(float* %arraydecay82, float* %arraydecay84, float %mul90), !dbg !12865
  br label %if.end91

if.end91:                                         ; preds = %if.else81, %if.then72
  store i32 0, i32* %i, align 4, !dbg !12866
  br label %for.cond, !dbg !12868

for.cond:                                         ; preds = %for.inc, %if.end91
  %49 = load i32, i32* %i, align 4, !dbg !12869
  %50 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12871
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %50, i32 0, i32 9, !dbg !12872
  %51 = load i32, i32* %total, align 8, !dbg !12872
  %cmp92 = icmp slt i32 %49, %51, !dbg !12873
  br i1 %cmp92, label %for.body, label %for.end, !dbg !12874

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !12875, metadata !DIExpression()), !dbg !12877
  call void @llvm.dbg.declare(metadata [3 x float]* %delta, metadata !12878, metadata !DIExpression()), !dbg !12879
  call void @llvm.dbg.declare(metadata float* %fac, metadata !12880, metadata !DIExpression()), !dbg !12881
  call void @llvm.dbg.declare(metadata float* %fac_scaled, metadata !12882, metadata !DIExpression()), !dbg !12883
  %52 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !12884
  %flag94 = getelementptr inbounds %struct.TransData, %struct.TransData* %52, i32 0, i32 16, !dbg !12886
  %53 = load i32, i32* %flag94, align 8, !dbg !12886
  %and95 = and i32 %53, 4, !dbg !12887
  %tobool96 = icmp ne i32 %and95, 0, !dbg !12887
  br i1 %tobool96, label %if.then97, label %if.end98, !dbg !12888

if.then97:                                        ; preds = %for.body
  br label %for.end, !dbg !12889

if.end98:                                         ; preds = %for.body
  %54 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !12890
  %flag99 = getelementptr inbounds %struct.TransData, %struct.TransData* %54, i32 0, i32 16, !dbg !12892
  %55 = load i32, i32* %flag99, align 8, !dbg !12892
  %and100 = and i32 %55, 2048, !dbg !12893
  %tobool101 = icmp ne i32 %and100, 0, !dbg !12893
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !12894

if.then102:                                       ; preds = %if.end98
  br label %for.inc, !dbg !12895

if.end103:                                        ; preds = %if.end98
  %data104 = bitcast %union.anon.1* %values to %struct.anon.2*, !dbg !12896
  %angle105 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data104, i32 0, i32 0, !dbg !12896
  %56 = load float, float* %angle105, align 4, !dbg !12896
  %cmp106 = fcmp oeq float %56, 0.000000e+00, !dbg !12896
  br i1 %cmp106, label %if.then108, label %if.end110, !dbg !12898

if.then108:                                       ; preds = %if.end103
  %57 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !12899
  %loc = getelementptr inbounds %struct.TransData, %struct.TransData* %57, i32 0, i32 3, !dbg !12901
  %58 = load float*, float** %loc, align 8, !dbg !12901
  %59 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !12902
  %iloc = getelementptr inbounds %struct.TransData, %struct.TransData* %59, i32 0, i32 4, !dbg !12903
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %iloc, i64 0, i64 0, !dbg !12902
  call void @copy_v3_v3(float* %58, float* %arraydecay109), !dbg !12904
  br label %for.inc, !dbg !12905

if.end110:                                        ; preds = %if.end103
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12906
  %60 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !12907
  %iloc112 = getelementptr inbounds %struct.TransData, %struct.TransData* %60, i32 0, i32 4, !dbg !12908
  %arraydecay113 = getelementptr inbounds [3 x float], [3 x float]* %iloc112, i64 0, i64 0, !dbg !12907
  call void @copy_v3_v3(float* %arraydecay111, float* %arraydecay113), !dbg !12909
  %61 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !12910
  %mtx = getelementptr inbounds %struct.TransData, %struct.TransData* %61, i32 0, i32 8, !dbg !12911
  %arraydecay114 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mtx, i64 0, i64 0, !dbg !12910
  %arraydecay115 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12912
  call void @mul_m3_v3([3 x float]* %arraydecay114, float* %arraydecay115), !dbg !12913
  %arraydecay116 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12914
  %62 = load %struct.BendCustomData*, %struct.BendCustomData** %data1, align 8, !dbg !12915
  %warp_sta117 = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %62, i32 0, i32 0, !dbg !12916
  %arraydecay118 = getelementptr inbounds [3 x float], [3 x float]* %warp_sta117, i64 0, i64 0, !dbg !12915
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %warp_end_radius, i64 0, i64 0, !dbg !12917
  %call120 = call float @line_point_factor_v3(float* %arraydecay116, float* %arraydecay118, float* %arraydecay119), !dbg !12918
  store float %call120, float* %fac, align 4, !dbg !12919
  %63 = load i8, i8* %is_clamp, align 1, !dbg !12920
  %tobool121 = icmp ne i8 %63, 0, !dbg !12920
  br i1 %tobool121, label %if.then122, label %if.end132, !dbg !12922

if.then122:                                       ; preds = %if.end110
  %64 = load float, float* %fac, align 4, !dbg !12923
  %cmp123 = fcmp olt float %64, 0.000000e+00, !dbg !12923
  br i1 %cmp123, label %if.then125, label %if.else126, !dbg !12927

if.then125:                                       ; preds = %if.then122
  store float 0.000000e+00, float* %fac, align 4, !dbg !12923
  br label %if.end131, !dbg !12923

if.else126:                                       ; preds = %if.then122
  %65 = load float, float* %fac, align 4, !dbg !12928
  %cmp127 = fcmp ogt float %65, 1.000000e+00, !dbg !12928
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !12923

if.then129:                                       ; preds = %if.else126
  store float 1.000000e+00, float* %fac, align 4, !dbg !12928
  br label %if.end130, !dbg !12928

if.end130:                                        ; preds = %if.then129, %if.else126
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then125
  br label %if.end132, !dbg !12930

if.end132:                                        ; preds = %if.end131, %if.end110
  %66 = load float, float* %fac, align 4, !dbg !12931
  %67 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !12932
  %factor = getelementptr inbounds %struct.TransData, %struct.TransData* %67, i32 0, i32 2, !dbg !12933
  %68 = load float, float* %factor, align 8, !dbg !12933
  %mul133 = fmul float %66, %68, !dbg !12934
  store float %mul133, float* %fac_scaled, align 4, !dbg !12935
  %arraydecay134 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !12936
  %69 = load %struct.BendCustomData*, %struct.BendCustomData** %data1, align 8, !dbg !12937
  %warp_nor = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %69, i32 0, i32 2, !dbg !12938
  %arraydecay135 = getelementptr inbounds [3 x float], [3 x float]* %warp_nor, i64 0, i64 0, !dbg !12937
  %data136 = bitcast %union.anon.1* %values to %struct.anon.2*, !dbg !12939
  %angle137 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data136, i32 0, i32 0, !dbg !12940
  %70 = load float, float* %angle137, align 4, !dbg !12940
  %71 = load float, float* %fac_scaled, align 4, !dbg !12941
  %mul138 = fmul float %70, %71, !dbg !12942
  call void @axis_angle_normalized_to_mat3([3 x float]* %arraydecay134, float* %arraydecay135, float %mul138), !dbg !12943
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 0, !dbg !12944
  %72 = load %struct.BendCustomData*, %struct.BendCustomData** %data1, align 8, !dbg !12945
  %warp_sta140 = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %72, i32 0, i32 0, !dbg !12946
  %arraydecay141 = getelementptr inbounds [3 x float], [3 x float]* %warp_sta140, i64 0, i64 0, !dbg !12945
  %arraydecay142 = getelementptr inbounds [3 x float], [3 x float]* %warp_end_radius, i64 0, i64 0, !dbg !12947
  %73 = load float, float* %fac_scaled, align 4, !dbg !12948
  call void @interp_v3_v3v3(float* %arraydecay139, float* %arraydecay141, float* %arraydecay142, float %73), !dbg !12949
  %arraydecay143 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 0, !dbg !12950
  %74 = load %struct.BendCustomData*, %struct.BendCustomData** %data1, align 8, !dbg !12951
  %warp_sta144 = getelementptr inbounds %struct.BendCustomData, %struct.BendCustomData* %74, i32 0, i32 0, !dbg !12952
  %arraydecay145 = getelementptr inbounds [3 x float], [3 x float]* %warp_sta144, i64 0, i64 0, !dbg !12951
  call void @sub_v3_v3(float* %arraydecay143, float* %arraydecay145), !dbg !12953
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12954
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 0, !dbg !12955
  call void @sub_v3_v3(float* %arraydecay146, float* %arraydecay147), !dbg !12956
  %arraydecay148 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12957
  %arraydecay149 = getelementptr inbounds [3 x float], [3 x float]* %pivot, i64 0, i64 0, !dbg !12958
  call void @sub_v3_v3(float* %arraydecay148, float* %arraydecay149), !dbg !12959
  %arraydecay150 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !12960
  %arraydecay151 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12961
  call void @mul_m3_v3([3 x float]* %arraydecay150, float* %arraydecay151), !dbg !12962
  %arraydecay152 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12963
  %arraydecay153 = getelementptr inbounds [3 x float], [3 x float]* %pivot, i64 0, i64 0, !dbg !12964
  call void @add_v3_v3(float* %arraydecay152, float* %arraydecay153), !dbg !12965
  %75 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !12966
  %smtx = getelementptr inbounds %struct.TransData, %struct.TransData* %75, i32 0, i32 9, !dbg !12967
  %arraydecay154 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smtx, i64 0, i64 0, !dbg !12966
  %arraydecay155 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12968
  call void @mul_m3_v3([3 x float]* %arraydecay154, float* %arraydecay155), !dbg !12969
  %76 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !12970
  %loc156 = getelementptr inbounds %struct.TransData, %struct.TransData* %76, i32 0, i32 3, !dbg !12971
  %77 = load float*, float** %loc156, align 8, !dbg !12971
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12972
  call void @copy_v3_v3(float* %77, float* %arraydecay157), !dbg !12973
  br label %for.inc, !dbg !12974

for.inc:                                          ; preds = %if.end132, %if.then108, %if.then102
  %78 = load i32, i32* %i, align 4, !dbg !12975
  %inc = add nsw i32 %78, 1, !dbg !12975
  store i32 %inc, i32* %i, align 4, !dbg !12975
  %79 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !12976
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %79, i32 1, !dbg !12976
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !12976
  br label %for.cond, !dbg !12977, !llvm.loop !12978

for.end:                                          ; preds = %if.then97, %for.cond
  %80 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12980
  call void @recalcData(%struct.TransInfo* %80), !dbg !12981
  %81 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !12982
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %81, i32 0, i32 54, !dbg !12983
  %82 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12983
  %arraydecay158 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !12984
  call void @ED_area_headerprint(%struct.ScrArea* %82, i8* %arraydecay158), !dbg !12985
  ret void, !dbg !12986
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @handleEventBend(%struct.TransInfo* %UNUSED_t, %struct.wmEvent* %event) #0 !dbg !12987 {
entry:
  %UNUSED_t.addr = alloca %struct.TransInfo*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %status = alloca i32, align 4
  store %struct.TransInfo* %UNUSED_t, %struct.TransInfo** %UNUSED_t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %UNUSED_t.addr, metadata !12990, metadata !DIExpression()), !dbg !12991
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !12992, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12994, metadata !DIExpression()), !dbg !12995
  store i32 0, i32* %status, align 4, !dbg !12995
  %0 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12996
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %0, i32 0, i32 2, !dbg !12998
  %1 = load i16, i16* %type, align 8, !dbg !12998
  %conv = sext i16 %1 to i32, !dbg !12996
  %cmp = icmp eq i32 %conv, 2, !dbg !12999
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13000

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !13001
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 3, !dbg !13002
  %3 = load i16, i16* %val, align 2, !dbg !13002
  %conv2 = sext i16 %3 to i32, !dbg !13001
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !13003
  br i1 %cmp3, label %if.then, label %if.end, !dbg !13004

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %status, align 4, !dbg !13005
  br label %if.end, !dbg !13007

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load i32, i32* %status, align 4, !dbg !13008
  ret i32 %4, !dbg !13009
}

declare dso_local void @setInputPostFct(%struct.MouseInput*, void (%struct.TransInfo*, float*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @postInputRotation(%struct.TransInfo* %t, float* %values) #0 !dbg !13010 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %values.addr = alloca float*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !13011, metadata !DIExpression()), !dbg !13012
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !13013, metadata !DIExpression()), !dbg !13014
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13015
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 13, !dbg !13017
  %mode = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 7, !dbg !13018
  %1 = load i32, i32* %mode, align 4, !dbg !13018
  %and = and i32 %1, 1, !dbg !13019
  %tobool = icmp ne i32 %and, 0, !dbg !13019
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !13020

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13021
  %con1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 13, !dbg !13022
  %applyRot = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con1, i32 0, i32 11, !dbg !13023
  %3 = load void (%struct.TransInfo*, %struct.TransData*, float*, float*)*, void (%struct.TransInfo*, %struct.TransData*, float*, float*)** %applyRot, align 8, !dbg !13023
  %tobool2 = icmp ne void (%struct.TransInfo*, %struct.TransData*, float*, float*)* %3, null, !dbg !13021
  br i1 %tobool2, label %if.then, label %if.end, !dbg !13024

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13025
  %con3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 13, !dbg !13027
  %applyRot4 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con3, i32 0, i32 11, !dbg !13028
  %5 = load void (%struct.TransInfo*, %struct.TransData*, float*, float*)*, void (%struct.TransInfo*, %struct.TransData*, float*, float*)** %applyRot4, align 8, !dbg !13028
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13029
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13030
  %axis = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 49, !dbg !13031
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !13030
  %8 = load float*, float** %values.addr, align 8, !dbg !13032
  call void %5(%struct.TransInfo* %6, %struct.TransData* null, float* %arraydecay, float* %8), !dbg !13025
  br label %if.end, !dbg !13033

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !13034
}

declare dso_local void @initMouseInputMode(%struct.TransInfo*, %struct.MouseInput*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_fl(float* %r, float %f) #0 !dbg !13035 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !13036, metadata !DIExpression()), !dbg !13037
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !13038, metadata !DIExpression()), !dbg !13039
  %0 = load float, float* %f.addr, align 4, !dbg !13040
  %1 = load float*, float** %r.addr, align 8, !dbg !13041
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !13041
  store float %0, float* %arrayidx, align 4, !dbg !13042
  %2 = load float, float* %f.addr, align 4, !dbg !13043
  %3 = load float*, float** %r.addr, align 8, !dbg !13044
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !13044
  store float %2, float* %arrayidx1, align 4, !dbg !13045
  %4 = load float, float* %f.addr, align 4, !dbg !13046
  %5 = load float*, float** %r.addr, align 8, !dbg !13047
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 2, !dbg !13047
  store float %4, float* %arrayidx2, align 4, !dbg !13048
  ret void, !dbg !13049
}

declare dso_local void @calculateCenterCursor(%struct.TransInfo*, float*) #2

declare dso_local float* @ED_view3d_cursor3d_get(%struct.Scene*, %struct.View3D*) #2

declare dso_local void @ED_view3d_win_to_3d(%struct.ARegion*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3(float* %r, float* %a) #0 !dbg !13050 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !13051, metadata !DIExpression()), !dbg !13052
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !13053, metadata !DIExpression()), !dbg !13054
  %0 = load float*, float** %a.addr, align 8, !dbg !13055
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !13055
  %1 = load float, float* %arrayidx, align 4, !dbg !13055
  %2 = load float*, float** %r.addr, align 8, !dbg !13056
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !13056
  %3 = load float, float* %arrayidx1, align 4, !dbg !13057
  %sub = fsub float %3, %1, !dbg !13057
  store float %sub, float* %arrayidx1, align 4, !dbg !13057
  %4 = load float*, float** %a.addr, align 8, !dbg !13058
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !13058
  %5 = load float, float* %arrayidx2, align 4, !dbg !13058
  %6 = load float*, float** %r.addr, align 8, !dbg !13059
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !13059
  %7 = load float, float* %arrayidx3, align 4, !dbg !13060
  %sub4 = fsub float %7, %5, !dbg !13060
  store float %sub4, float* %arrayidx3, align 4, !dbg !13060
  %8 = load float*, float** %a.addr, align 8, !dbg !13061
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !13061
  %9 = load float, float* %arrayidx5, align 4, !dbg !13061
  %10 = load float*, float** %r.addr, align 8, !dbg !13062
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !13062
  %11 = load float, float* %arrayidx6, align 4, !dbg !13063
  %sub7 = fsub float %11, %9, !dbg !13063
  store float %sub7, float* %arrayidx6, align 4, !dbg !13063
  ret void, !dbg !13064
}

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !13065 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !13066, metadata !DIExpression()), !dbg !13067
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !13068, metadata !DIExpression()), !dbg !13069
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !13070, metadata !DIExpression()), !dbg !13071
  %0 = load float*, float** %a.addr, align 8, !dbg !13072
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !13072
  %1 = load float, float* %arrayidx, align 4, !dbg !13072
  %2 = load float*, float** %b.addr, align 8, !dbg !13073
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !13073
  %3 = load float, float* %arrayidx1, align 4, !dbg !13073
  %mul = fmul float %1, %3, !dbg !13074
  %4 = load float*, float** %a.addr, align 8, !dbg !13075
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !13075
  %5 = load float, float* %arrayidx2, align 4, !dbg !13075
  %6 = load float*, float** %b.addr, align 8, !dbg !13076
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !13076
  %7 = load float, float* %arrayidx3, align 4, !dbg !13076
  %mul4 = fmul float %5, %7, !dbg !13077
  %sub = fsub float %mul, %mul4, !dbg !13078
  %8 = load float*, float** %r.addr, align 8, !dbg !13079
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !13079
  store float %sub, float* %arrayidx5, align 4, !dbg !13080
  %9 = load float*, float** %a.addr, align 8, !dbg !13081
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !13081
  %10 = load float, float* %arrayidx6, align 4, !dbg !13081
  %11 = load float*, float** %b.addr, align 8, !dbg !13082
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !13082
  %12 = load float, float* %arrayidx7, align 4, !dbg !13082
  %mul8 = fmul float %10, %12, !dbg !13083
  %13 = load float*, float** %a.addr, align 8, !dbg !13084
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !13084
  %14 = load float, float* %arrayidx9, align 4, !dbg !13084
  %15 = load float*, float** %b.addr, align 8, !dbg !13085
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !13085
  %16 = load float, float* %arrayidx10, align 4, !dbg !13085
  %mul11 = fmul float %14, %16, !dbg !13086
  %sub12 = fsub float %mul8, %mul11, !dbg !13087
  %17 = load float*, float** %r.addr, align 8, !dbg !13088
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !13088
  store float %sub12, float* %arrayidx13, align 4, !dbg !13089
  %18 = load float*, float** %a.addr, align 8, !dbg !13090
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !13090
  %19 = load float, float* %arrayidx14, align 4, !dbg !13090
  %20 = load float*, float** %b.addr, align 8, !dbg !13091
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !13091
  %21 = load float, float* %arrayidx15, align 4, !dbg !13091
  %mul16 = fmul float %19, %21, !dbg !13092
  %22 = load float*, float** %a.addr, align 8, !dbg !13093
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !13093
  %23 = load float, float* %arrayidx17, align 4, !dbg !13093
  %24 = load float*, float** %b.addr, align 8, !dbg !13094
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !13094
  %25 = load float, float* %arrayidx18, align 4, !dbg !13094
  %mul19 = fmul float %23, %25, !dbg !13095
  %sub20 = fsub float %mul16, %mul19, !dbg !13096
  %26 = load float*, float** %r.addr, align 8, !dbg !13097
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !13097
  store float %sub20, float* %arrayidx21, align 4, !dbg !13098
  ret void, !dbg !13099
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !13100 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !13101, metadata !DIExpression()), !dbg !13102
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !13103, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !13105, metadata !DIExpression()), !dbg !13106
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !13107
  %0 = load float*, float** %b.addr, align 8, !dbg !13108
  %1 = load float*, float** %a.addr, align 8, !dbg !13109
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !13110
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !13111
  %call = call float @len_v3(float* %arraydecay1), !dbg !13112
  ret float %call, !dbg !13113
}

declare dso_local void @snapGridIncrement(%struct.TransInfo*, float*) #2

declare dso_local zeroext i8 @applyNumInput(%struct.NumInput*, float*) #2

declare dso_local void @outputNumInput(%struct.NumInput*, i8*, %struct.UnitSettings*) #2

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

declare dso_local i8* @WM_bool_as_string(i8 zeroext) #2

declare dso_local void @dist_ensure_v3_v3fl(float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !13114 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !13115, metadata !DIExpression()), !dbg !13116
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !13117, metadata !DIExpression()), !dbg !13118
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !13119, metadata !DIExpression()), !dbg !13120
  %0 = load float*, float** %a.addr, align 8, !dbg !13121
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !13121
  %1 = load float, float* %arrayidx, align 4, !dbg !13121
  %2 = load float, float* %f.addr, align 4, !dbg !13122
  %mul = fmul float %1, %2, !dbg !13123
  %3 = load float*, float** %r.addr, align 8, !dbg !13124
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !13124
  %4 = load float, float* %arrayidx1, align 4, !dbg !13125
  %add = fadd float %4, %mul, !dbg !13125
  store float %add, float* %arrayidx1, align 4, !dbg !13125
  %5 = load float*, float** %a.addr, align 8, !dbg !13126
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !13126
  %6 = load float, float* %arrayidx2, align 4, !dbg !13126
  %7 = load float, float* %f.addr, align 4, !dbg !13127
  %mul3 = fmul float %6, %7, !dbg !13128
  %8 = load float*, float** %r.addr, align 8, !dbg !13129
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !13129
  %9 = load float, float* %arrayidx4, align 4, !dbg !13130
  %add5 = fadd float %9, %mul3, !dbg !13130
  store float %add5, float* %arrayidx4, align 4, !dbg !13130
  %10 = load float*, float** %a.addr, align 8, !dbg !13131
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !13131
  %11 = load float, float* %arrayidx6, align 4, !dbg !13131
  %12 = load float, float* %f.addr, align 4, !dbg !13132
  %mul7 = fmul float %11, %12, !dbg !13133
  %13 = load float*, float** %r.addr, align 8, !dbg !13134
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !13134
  %14 = load float, float* %arrayidx8, align 4, !dbg !13135
  %add9 = fadd float %14, %mul7, !dbg !13135
  store float %add9, float* %arrayidx8, align 4, !dbg !13135
  ret void, !dbg !13136
}

; Function Attrs: noinline nounwind uwtable
define internal float @shell_angle_to_dist(float %angle) #0 !dbg !13137 {
entry:
  %angle.addr = alloca float, align 4
  store float %angle, float* %angle.addr, align 4
  call void @llvm.dbg.declare(metadata float* %angle.addr, metadata !13141, metadata !DIExpression()), !dbg !13142
  %0 = load float, float* %angle.addr, align 4, !dbg !13143
  %cmp = fcmp olt float %0, 0x3E45798EE0000000, !dbg !13143
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13144

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !13144

cond.false:                                       ; preds = %entry
  %1 = load float, float* %angle.addr, align 4, !dbg !13145
  %call = call float @cosf(float %1) #5, !dbg !13146
  %div = fdiv float 1.000000e+00, %call, !dbg !13147
  %2 = call float @llvm.fabs.f32(float %div), !dbg !13148
  br label %cond.end, !dbg !13144

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 1.000000e+00, %cond.true ], [ %2, %cond.false ], !dbg !13144
  ret float %cond, !dbg !13149
}

declare dso_local void @mul_m3_v3([3 x float]*, float*) #2

declare dso_local void @axis_angle_normalized_to_mat3([3 x float]*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !13150 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !13153, metadata !DIExpression()), !dbg !13154
  %0 = load float*, float** %a.addr, align 8, !dbg !13155
  %1 = load float*, float** %a.addr, align 8, !dbg !13156
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !13157
  %call1 = call float @sqrtf(float %call) #5, !dbg !13158
  ret float %call1, !dbg !13159
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyShear(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !13160 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %td = alloca %struct.TransData*, align 8
  %vec = alloca [3 x float], align 4
  %smat = alloca [3 x [3 x float]], align 16
  %tmat = alloca [3 x [3 x float]], align 16
  %totmat = alloca [3 x [3 x float]], align 16
  %persmat = alloca [3 x [3 x float]], align 16
  %persinv = alloca [3 x [3 x float]], align 16
  %value = alloca float, align 4
  %i = alloca i32, align 4
  %str = alloca [256 x i8], align 16
  %c = alloca [64 x i8], align 16
  %mat3 = alloca [3 x [3 x float]], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !13161, metadata !DIExpression()), !dbg !13162
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !13163, metadata !DIExpression()), !dbg !13164
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !13165, metadata !DIExpression()), !dbg !13166
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13167
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !13168
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !13168
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !13166
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !13169, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %smat, metadata !13171, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %tmat, metadata !13173, metadata !DIExpression()), !dbg !13174
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %totmat, metadata !13175, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %persmat, metadata !13177, metadata !DIExpression()), !dbg !13178
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %persinv, metadata !13179, metadata !DIExpression()), !dbg !13180
  call void @llvm.dbg.declare(metadata float* %value, metadata !13181, metadata !DIExpression()), !dbg !13182
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13183, metadata !DIExpression()), !dbg !13184
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !13185, metadata !DIExpression()), !dbg !13186
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %persmat, i64 0, i64 0, !dbg !13187
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13188
  %viewmat = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 27, !dbg !13189
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !13188
  call void @copy_m3_m4([3 x float]* %arraydecay, [4 x float]* %arraydecay1), !dbg !13190
  %arraydecay2 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %persinv, i64 0, i64 0, !dbg !13191
  %arraydecay3 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %persmat, i64 0, i64 0, !dbg !13192
  %call = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay2, [3 x float]* %arraydecay3), !dbg !13193
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13194
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 47, !dbg !13195
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !13194
  %4 = load float, float* %arrayidx, align 4, !dbg !13194
  store float %4, float* %value, align 4, !dbg !13196
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13197
  call void @snapGridIncrement(%struct.TransInfo* %5, float* %value), !dbg !13198
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13199
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 15, !dbg !13200
  %call4 = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %value), !dbg !13201
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13202
  %num5 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 15, !dbg !13204
  %call6 = call zeroext i8 @hasNumInput(%struct.NumInput* %num5), !dbg !13205
  %tobool = icmp ne i8 %call6, 0, !dbg !13205
  br i1 %tobool, label %if.then, label %if.else, !dbg !13206

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [64 x i8]* %c, metadata !13207, metadata !DIExpression()), !dbg !13209
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13210
  %num7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 15, !dbg !13211
  %arraydecay8 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !13212
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13213
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 56, !dbg !13214
  %10 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13214
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %10, i32 0, i32 38, !dbg !13215
  call void @outputNumInput(%struct.NumInput* %num7, i8* %arraydecay8, %struct.UnitSettings* %unit), !dbg !13216
  %arraydecay9 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !13217
  %arraydecay10 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !13218
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13219
  %proptext = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 19, !dbg !13220
  %arraydecay11 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext, i64 0, i64 0, !dbg !13219
  %call12 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay9, i64 256, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81, i64 0, i64 0), i8* %arraydecay10, i8* %arraydecay11), !dbg !13221
  br label %if.end, !dbg !13222

if.else:                                          ; preds = %entry
  %arraydecay13 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !13223
  %12 = load float, float* %value, align 4, !dbg !13225
  %conv = fpext float %12 to double, !dbg !13225
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13226
  %proptext14 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 19, !dbg !13227
  %arraydecay15 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext14, i64 0, i64 0, !dbg !13226
  %call16 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay13, i64 256, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.82, i64 0, i64 0), double %conv, i8* %arraydecay15), !dbg !13228
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load float, float* %value, align 4, !dbg !13229
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13230
  %values17 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 47, !dbg !13231
  %arrayidx18 = getelementptr inbounds [4 x float], [4 x float]* %values17, i64 0, i64 0, !dbg !13230
  store float %14, float* %arrayidx18, align 4, !dbg !13232
  %arraydecay19 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !13233
  call void @unit_m3([3 x float]* %arraydecay19), !dbg !13234
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13235
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 40, !dbg !13237
  %17 = load i8*, i8** %customData, align 8, !dbg !13237
  %cmp = icmp eq i8* %17, null, !dbg !13238
  br i1 %cmp, label %if.then21, label %if.else24, !dbg !13239

if.then21:                                        ; preds = %if.end
  %18 = load float, float* %value, align 4, !dbg !13240
  %arrayidx22 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 1, !dbg !13241
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx22, i64 0, i64 0, !dbg !13241
  store float %18, float* %arrayidx23, align 4, !dbg !13242
  br label %if.end27, !dbg !13241

if.else24:                                        ; preds = %if.end
  %19 = load float, float* %value, align 4, !dbg !13243
  %arrayidx25 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !13244
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx25, i64 0, i64 1, !dbg !13244
  store float %19, float* %arrayidx26, align 4, !dbg !13245
  br label %if.end27

if.end27:                                         ; preds = %if.else24, %if.then21
  %arraydecay28 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !13246
  %arraydecay29 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !13247
  %arraydecay30 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %persmat, i64 0, i64 0, !dbg !13248
  call void @mul_m3_m3m3([3 x float]* %arraydecay28, [3 x float]* %arraydecay29, [3 x float]* %arraydecay30), !dbg !13249
  %arraydecay31 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !13250
  %arraydecay32 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %persinv, i64 0, i64 0, !dbg !13251
  %arraydecay33 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !13252
  call void @mul_m3_m3m3([3 x float]* %arraydecay31, [3 x float]* %arraydecay32, [3 x float]* %arraydecay33), !dbg !13253
  store i32 0, i32* %i, align 4, !dbg !13254
  br label %for.cond, !dbg !13256

for.cond:                                         ; preds = %for.inc, %if.end27
  %20 = load i32, i32* %i, align 4, !dbg !13257
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13259
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 9, !dbg !13260
  %22 = load i32, i32* %total, align 8, !dbg !13260
  %cmp34 = icmp slt i32 %20, %22, !dbg !13261
  br i1 %cmp34, label %for.body, label %for.end, !dbg !13262

for.body:                                         ; preds = %for.cond
  %23 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !13263
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %23, i32 0, i32 16, !dbg !13266
  %24 = load i32, i32* %flag, align 8, !dbg !13266
  %and = and i32 %24, 4, !dbg !13267
  %tobool36 = icmp ne i32 %and, 0, !dbg !13267
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !13268

if.then37:                                        ; preds = %for.body
  br label %for.end, !dbg !13269

if.end38:                                         ; preds = %for.body
  %25 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !13270
  %flag39 = getelementptr inbounds %struct.TransData, %struct.TransData* %25, i32 0, i32 16, !dbg !13272
  %26 = load i32, i32* %flag39, align 8, !dbg !13272
  %and40 = and i32 %26, 2048, !dbg !13273
  %tobool41 = icmp ne i32 %and40, 0, !dbg !13273
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !13274

if.then42:                                        ; preds = %if.end38
  br label %for.inc, !dbg !13275

if.end43:                                         ; preds = %if.end38
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13276
  %obedit = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %27, i32 0, i32 63, !dbg !13278
  %28 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !13278
  %tobool44 = icmp ne %struct.Object* %28, null, !dbg !13276
  br i1 %tobool44, label %if.then45, label %if.else52, !dbg !13279

if.then45:                                        ; preds = %if.end43
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat3, metadata !13280, metadata !DIExpression()), !dbg !13282
  %arraydecay46 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat3, i64 0, i64 0, !dbg !13283
  %arraydecay47 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !13284
  %29 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !13285
  %mtx = getelementptr inbounds %struct.TransData, %struct.TransData* %29, i32 0, i32 8, !dbg !13286
  %arraydecay48 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mtx, i64 0, i64 0, !dbg !13285
  call void @mul_m3_m3m3([3 x float]* %arraydecay46, [3 x float]* %arraydecay47, [3 x float]* %arraydecay48), !dbg !13287
  %arraydecay49 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !13288
  %30 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !13289
  %smtx = getelementptr inbounds %struct.TransData, %struct.TransData* %30, i32 0, i32 9, !dbg !13290
  %arraydecay50 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smtx, i64 0, i64 0, !dbg !13289
  %arraydecay51 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat3, i64 0, i64 0, !dbg !13291
  call void @mul_m3_m3m3([3 x float]* %arraydecay49, [3 x float]* %arraydecay50, [3 x float]* %arraydecay51), !dbg !13292
  br label %if.end55, !dbg !13293

if.else52:                                        ; preds = %if.end43
  %arraydecay53 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !13294
  %arraydecay54 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !13296
  call void @copy_m3_m3([3 x float]* %arraydecay53, [3 x float]* %arraydecay54), !dbg !13297
  br label %if.end55

if.end55:                                         ; preds = %if.else52, %if.then45
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !13298
  %31 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !13299
  %center = getelementptr inbounds %struct.TransData, %struct.TransData* %31, i32 0, i32 7, !dbg !13300
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !13299
  %32 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13301
  %center58 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %32, i32 0, i32 20, !dbg !13302
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %center58, i64 0, i64 0, !dbg !13301
  call void @sub_v3_v3v3(float* %arraydecay56, float* %arraydecay57, float* %arraydecay59), !dbg !13303
  %arraydecay60 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !13304
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !13305
  call void @mul_m3_v3([3 x float]* %arraydecay60, float* %arraydecay61), !dbg !13306
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !13307
  %33 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13308
  %center63 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %33, i32 0, i32 20, !dbg !13309
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %center63, i64 0, i64 0, !dbg !13308
  call void @add_v3_v3(float* %arraydecay62, float* %arraydecay64), !dbg !13310
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !13311
  %34 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !13312
  %center66 = getelementptr inbounds %struct.TransData, %struct.TransData* %34, i32 0, i32 7, !dbg !13313
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %center66, i64 0, i64 0, !dbg !13312
  call void @sub_v3_v3(float* %arraydecay65, float* %arraydecay67), !dbg !13314
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !13315
  %35 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !13316
  %factor = getelementptr inbounds %struct.TransData, %struct.TransData* %35, i32 0, i32 2, !dbg !13317
  %36 = load float, float* %factor, align 8, !dbg !13317
  call void @mul_v3_fl(float* %arraydecay68, float %36), !dbg !13318
  %37 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !13319
  %loc = getelementptr inbounds %struct.TransData, %struct.TransData* %37, i32 0, i32 3, !dbg !13320
  %38 = load float*, float** %loc, align 8, !dbg !13320
  %39 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !13321
  %iloc = getelementptr inbounds %struct.TransData, %struct.TransData* %39, i32 0, i32 4, !dbg !13322
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %iloc, i64 0, i64 0, !dbg !13321
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !13323
  call void @add_v3_v3v3(float* %38, float* %arraydecay69, float* %arraydecay70), !dbg !13324
  br label %for.inc, !dbg !13325

for.inc:                                          ; preds = %if.end55, %if.then42
  %40 = load i32, i32* %i, align 4, !dbg !13326
  %inc = add nsw i32 %40, 1, !dbg !13326
  store i32 %inc, i32* %i, align 4, !dbg !13326
  %41 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !13327
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %41, i32 1, !dbg !13327
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !13327
  br label %for.cond, !dbg !13328, !llvm.loop !13329

for.end:                                          ; preds = %if.then37, %for.cond
  %42 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13331
  call void @recalcData(%struct.TransInfo* %42), !dbg !13332
  %43 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13333
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %43, i32 0, i32 54, !dbg !13334
  %44 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !13334
  %arraydecay71 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !13335
  call void @ED_area_headerprint(%struct.ScrArea* %44, i8* %arraydecay71), !dbg !13336
  ret void, !dbg !13337
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @handleEventShear(%struct.TransInfo* %t, %struct.wmEvent* %event) #0 !dbg !13338 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %status = alloca i32, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !13339, metadata !DIExpression()), !dbg !13340
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !13341, metadata !DIExpression()), !dbg !13342
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13343, metadata !DIExpression()), !dbg !13344
  store i32 0, i32* %status, align 4, !dbg !13344
  %0 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !13345
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %0, i32 0, i32 2, !dbg !13347
  %1 = load i16, i16* %type, align 8, !dbg !13347
  %conv = sext i16 %1 to i32, !dbg !13345
  %cmp = icmp eq i32 %conv, 2, !dbg !13348
  br i1 %cmp, label %land.lhs.true, label %if.else11, !dbg !13349

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !13350
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 3, !dbg !13351
  %3 = load i16, i16* %val, align 2, !dbg !13351
  %conv2 = sext i16 %3 to i32, !dbg !13350
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !13352
  br i1 %cmp3, label %if.then, label %if.else11, !dbg !13353

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13354
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 40, !dbg !13357
  %5 = load i8*, i8** %customData, align 8, !dbg !13357
  %cmp5 = icmp eq i8* %5, null, !dbg !13358
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !13359

if.then7:                                         ; preds = %if.then
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13360
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13362
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 16, !dbg !13363
  call void @initMouseInputMode(%struct.TransInfo* %6, %struct.MouseInput* %mouse, i32 11), !dbg !13364
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13365
  %customData8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 40, !dbg !13366
  store i8* inttoptr (i64 1 to i8*), i8** %customData8, align 8, !dbg !13367
  br label %if.end, !dbg !13368

if.else:                                          ; preds = %if.then
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13369
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13371
  %mouse9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 16, !dbg !13372
  call void @initMouseInputMode(%struct.TransInfo* %9, %struct.MouseInput* %mouse9, i32 9), !dbg !13373
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13374
  %customData10 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 40, !dbg !13375
  store i8* null, i8** %customData10, align 8, !dbg !13376
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  store i32 1, i32* %status, align 4, !dbg !13377
  br label %if.end39, !dbg !13378

if.else11:                                        ; preds = %land.lhs.true, %entry
  %12 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !13379
  %type12 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %12, i32 0, i32 2, !dbg !13381
  %13 = load i16, i16* %type12, align 8, !dbg !13381
  %conv13 = sext i16 %13 to i32, !dbg !13379
  %cmp14 = icmp eq i32 %conv13, 120, !dbg !13382
  br i1 %cmp14, label %land.lhs.true16, label %if.else24, !dbg !13383

land.lhs.true16:                                  ; preds = %if.else11
  %14 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !13384
  %val17 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %14, i32 0, i32 3, !dbg !13385
  %15 = load i16, i16* %val17, align 2, !dbg !13385
  %conv18 = sext i16 %15 to i32, !dbg !13384
  %cmp19 = icmp eq i32 %conv18, 1, !dbg !13386
  br i1 %cmp19, label %if.then21, label %if.else24, !dbg !13387

if.then21:                                        ; preds = %land.lhs.true16
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13388
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13390
  %mouse22 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 16, !dbg !13391
  call void @initMouseInputMode(%struct.TransInfo* %16, %struct.MouseInput* %mouse22, i32 9), !dbg !13392
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13393
  %customData23 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 40, !dbg !13394
  store i8* null, i8** %customData23, align 8, !dbg !13395
  store i32 1, i32* %status, align 4, !dbg !13396
  br label %if.end38, !dbg !13397

if.else24:                                        ; preds = %land.lhs.true16, %if.else11
  %19 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !13398
  %type25 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %19, i32 0, i32 2, !dbg !13400
  %20 = load i16, i16* %type25, align 8, !dbg !13400
  %conv26 = sext i16 %20 to i32, !dbg !13398
  %cmp27 = icmp eq i32 %conv26, 121, !dbg !13401
  br i1 %cmp27, label %land.lhs.true29, label %if.end37, !dbg !13402

land.lhs.true29:                                  ; preds = %if.else24
  %21 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !13403
  %val30 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %21, i32 0, i32 3, !dbg !13404
  %22 = load i16, i16* %val30, align 2, !dbg !13404
  %conv31 = sext i16 %22 to i32, !dbg !13403
  %cmp32 = icmp eq i32 %conv31, 1, !dbg !13405
  br i1 %cmp32, label %if.then34, label %if.end37, !dbg !13406

if.then34:                                        ; preds = %land.lhs.true29
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13407
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13409
  %mouse35 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 16, !dbg !13410
  call void @initMouseInputMode(%struct.TransInfo* %23, %struct.MouseInput* %mouse35, i32 11), !dbg !13411
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13412
  %customData36 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 40, !dbg !13413
  store i8* inttoptr (i64 1 to i8*), i8** %customData36, align 8, !dbg !13414
  store i32 1, i32* %status, align 4, !dbg !13415
  br label %if.end37, !dbg !13416

if.end37:                                         ; preds = %if.then34, %land.lhs.true29, %if.else24
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then21
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end
  %26 = load i32, i32* %status, align 4, !dbg !13417
  ret i32 %26, !dbg !13418
}

; Function Attrs: noinline nounwind uwtable
define internal void @postInputShear(%struct.TransInfo* %UNUSED_t, float* %values) #0 !dbg !13419 {
entry:
  %UNUSED_t.addr = alloca %struct.TransInfo*, align 8
  %values.addr = alloca float*, align 8
  store %struct.TransInfo* %UNUSED_t, %struct.TransInfo** %UNUSED_t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %UNUSED_t.addr, metadata !13420, metadata !DIExpression()), !dbg !13421
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !13422, metadata !DIExpression()), !dbg !13423
  %0 = load float*, float** %values.addr, align 8, !dbg !13424
  call void @mul_v3_fl(float* %0, float 0x3FA99999A0000000), !dbg !13425
  ret void, !dbg !13426
}

declare dso_local void @copy_m3_m4([3 x float]*, [4 x float]*) #2

declare dso_local zeroext i8 @invert_m3_m3([3 x float]*, [3 x float]*) #2

declare dso_local void @mul_m3_m3m3([3 x float]*, [3 x float]*, [3 x float]*) #2

declare dso_local void @copy_m3_m3([3 x float]*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @applyResize(%struct.TransInfo* %t, i32* %mval) #0 !dbg !13427 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %mval.addr = alloca i32*, align 8
  %td = alloca %struct.TransData*, align 8
  %size = alloca [3 x float], align 4
  %mat = alloca [3 x [3 x float]], align 16
  %ratio = alloca float, align 4
  %i = alloca i32, align 4
  %str = alloca [256 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !13428, metadata !DIExpression()), !dbg !13429
  store i32* %mval, i32** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mval.addr, metadata !13430, metadata !DIExpression()), !dbg !13431
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !13432, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !13434, metadata !DIExpression()), !dbg !13435
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !13436, metadata !DIExpression()), !dbg !13437
  call void @llvm.dbg.declare(metadata float* %ratio, metadata !13438, metadata !DIExpression()), !dbg !13439
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13440, metadata !DIExpression()), !dbg !13441
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !13442, metadata !DIExpression()), !dbg !13443
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13444
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 1, !dbg !13446
  %1 = load i32, i32* %flag, align 4, !dbg !13446
  %and = and i32 %1, 128, !dbg !13447
  %tobool = icmp ne i32 %and, 0, !dbg !13447
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !13448

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13449
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 13, !dbg !13450
  %mode = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 7, !dbg !13451
  %3 = load i32, i32* %mode, align 4, !dbg !13451
  %cmp = icmp eq i32 %3, 0, !dbg !13452
  br i1 %cmp, label %if.then, label %if.else, !dbg !13453

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13454
  %imval = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 22, !dbg !13456
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %imval, i64 0, i64 0, !dbg !13454
  %5 = load i32, i32* %arrayidx, align 8, !dbg !13454
  %6 = load i32*, i32** %mval.addr, align 8, !dbg !13457
  %arrayidx1 = getelementptr inbounds i32, i32* %6, i64 0, !dbg !13457
  %7 = load i32, i32* %arrayidx1, align 4, !dbg !13457
  %sub = sub nsw i32 %5, %7, !dbg !13458
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13459
  %imval2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 22, !dbg !13460
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %imval2, i64 0, i64 1, !dbg !13459
  %9 = load i32, i32* %arrayidx3, align 4, !dbg !13459
  %10 = load i32*, i32** %mval.addr, align 8, !dbg !13461
  %arrayidx4 = getelementptr inbounds i32, i32* %10, i64 1, !dbg !13461
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !13461
  %sub5 = sub nsw i32 %9, %11, !dbg !13462
  %add = add nsw i32 %sub, %sub5, !dbg !13463
  %conv = sitofp i32 %add to float, !dbg !13464
  %div = fdiv float %conv, 1.000000e+02, !dbg !13465
  %sub6 = fsub float 1.000000e+00, %div, !dbg !13466
  store float %sub6, float* %ratio, align 4, !dbg !13467
  br label %if.end, !dbg !13468

if.else:                                          ; preds = %land.lhs.true, %entry
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13469
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 47, !dbg !13471
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !13469
  %13 = load float, float* %arrayidx7, align 4, !dbg !13469
  store float %13, float* %ratio, align 4, !dbg !13472
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load float, float* %ratio, align 4, !dbg !13473
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !13474
  store float %14, float* %arrayidx8, align 4, !dbg !13475
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !13476
  store float %14, float* %arrayidx9, align 4, !dbg !13477
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !13478
  store float %14, float* %arrayidx10, align 4, !dbg !13479
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13480
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !13481
  call void @snapGridIncrement(%struct.TransInfo* %15, float* %arraydecay), !dbg !13482
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13483
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 15, !dbg !13485
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !13486
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %arraydecay11), !dbg !13487
  %tobool12 = icmp ne i8 %call, 0, !dbg !13487
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !13488

if.then13:                                        ; preds = %if.end
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13489
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !13491
  call void @constraintNumInput(%struct.TransInfo* %17, float* %arraydecay14), !dbg !13492
  br label %if.end15, !dbg !13493

if.end15:                                         ; preds = %if.then13, %if.end
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13494
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !13495
  call void @applySnapping(%struct.TransInfo* %18, float* %arraydecay16), !dbg !13496
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13497
  %flag17 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 1, !dbg !13499
  %20 = load i32, i32* %flag17, align 4, !dbg !13499
  %and18 = and i32 %20, 1048576, !dbg !13500
  %tobool19 = icmp ne i32 %and18, 0, !dbg !13500
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !13501

if.then20:                                        ; preds = %if.end15
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !13502
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13504
  %auto_values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 48, !dbg !13505
  %arraydecay22 = getelementptr inbounds [4 x float], [4 x float]* %auto_values, i64 0, i64 0, !dbg !13504
  call void @copy_v3_v3(float* %arraydecay21, float* %arraydecay22), !dbg !13506
  br label %if.end23, !dbg !13507

if.end23:                                         ; preds = %if.then20, %if.end15
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13508
  %values24 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 47, !dbg !13509
  %arraydecay25 = getelementptr inbounds [4 x float], [4 x float]* %values24, i64 0, i64 0, !dbg !13508
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !13510
  call void @copy_v3_v3(float* %arraydecay25, float* %arraydecay26), !dbg !13511
  %arraydecay27 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !13512
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !13513
  call void @size_to_mat3([3 x float]* %arraydecay27, float* %arraydecay28), !dbg !13514
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13515
  %con29 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 13, !dbg !13517
  %applySize = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con29, i32 0, i32 10, !dbg !13518
  %24 = load void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)*, void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)** %applySize, align 8, !dbg !13518
  %tobool30 = icmp ne void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)* %24, null, !dbg !13515
  br i1 %tobool30, label %if.then31, label %if.end35, !dbg !13519

if.then31:                                        ; preds = %if.end23
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13520
  %con32 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 13, !dbg !13522
  %applySize33 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con32, i32 0, i32 10, !dbg !13523
  %26 = load void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)*, void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)** %applySize33, align 8, !dbg !13523
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13524
  %arraydecay34 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !13525
  call void %26(%struct.TransInfo* %27, %struct.TransData* null, [3 x float]* %arraydecay34), !dbg !13520
  br label %if.end35, !dbg !13526

if.end35:                                         ; preds = %if.then31, %if.end23
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13527
  %mat36 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 36, !dbg !13528
  %arraydecay37 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat36, i64 0, i64 0, !dbg !13527
  %arraydecay38 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !13529
  call void @copy_m3_m3([3 x float]* %arraydecay37, [3 x float]* %arraydecay38), !dbg !13530
  %29 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13531
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !13532
  %arraydecay40 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !13533
  call void @headerResize(%struct.TransInfo* %29, float* %arraydecay39, i8* %arraydecay40), !dbg !13534
  store i32 0, i32* %i, align 4, !dbg !13535
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13537
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %30, i32 0, i32 10, !dbg !13538
  %31 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !13538
  store %struct.TransData* %31, %struct.TransData** %td, align 8, !dbg !13539
  br label %for.cond, !dbg !13540

for.cond:                                         ; preds = %for.inc, %if.end35
  %32 = load i32, i32* %i, align 4, !dbg !13541
  %33 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13543
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %33, i32 0, i32 9, !dbg !13544
  %34 = load i32, i32* %total, align 8, !dbg !13544
  %cmp41 = icmp slt i32 %32, %34, !dbg !13545
  br i1 %cmp41, label %for.body, label %for.end, !dbg !13546

for.body:                                         ; preds = %for.cond
  %35 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !13547
  %flag43 = getelementptr inbounds %struct.TransData, %struct.TransData* %35, i32 0, i32 16, !dbg !13550
  %36 = load i32, i32* %flag43, align 8, !dbg !13550
  %and44 = and i32 %36, 4, !dbg !13551
  %tobool45 = icmp ne i32 %and44, 0, !dbg !13551
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !13552

if.then46:                                        ; preds = %for.body
  br label %for.end, !dbg !13553

if.end47:                                         ; preds = %for.body
  %37 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !13554
  %flag48 = getelementptr inbounds %struct.TransData, %struct.TransData* %37, i32 0, i32 16, !dbg !13556
  %38 = load i32, i32* %flag48, align 8, !dbg !13556
  %and49 = and i32 %38, 2048, !dbg !13557
  %tobool50 = icmp ne i32 %and49, 0, !dbg !13557
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !13558

if.then51:                                        ; preds = %if.end47
  br label %for.inc, !dbg !13559

if.end52:                                         ; preds = %if.end47
  %39 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13560
  %40 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !13561
  %arraydecay53 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !13562
  call void @ElementResize(%struct.TransInfo* %39, %struct.TransData* %40, [3 x float]* %arraydecay53), !dbg !13563
  br label %for.inc, !dbg !13564

for.inc:                                          ; preds = %if.end52, %if.then51
  %41 = load i32, i32* %i, align 4, !dbg !13565
  %inc = add nsw i32 %41, 1, !dbg !13565
  store i32 %inc, i32* %i, align 4, !dbg !13565
  %42 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !13566
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %42, i32 1, !dbg !13566
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !13566
  br label %for.cond, !dbg !13567, !llvm.loop !13568

for.end:                                          ; preds = %if.then46, %for.cond
  %43 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13570
  %flag54 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %43, i32 0, i32 1, !dbg !13572
  %44 = load i32, i32* %flag54, align 4, !dbg !13572
  %and55 = and i32 %44, 65536, !dbg !13573
  %tobool56 = icmp ne i32 %and55, 0, !dbg !13573
  br i1 %tobool56, label %land.lhs.true57, label %if.end89, !dbg !13574

land.lhs.true57:                                  ; preds = %for.end
  %45 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13575
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !13576
  %call59 = call zeroext i8 @clipUVTransform(%struct.TransInfo* %45, float* %arraydecay58, i8 zeroext 1), !dbg !13577
  %conv60 = zext i8 %call59 to i32, !dbg !13577
  %tobool61 = icmp ne i32 %conv60, 0, !dbg !13577
  br i1 %tobool61, label %if.then62, label %if.end89, !dbg !13578

if.then62:                                        ; preds = %land.lhs.true57
  %arraydecay63 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !13579
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !13581
  call void @size_to_mat3([3 x float]* %arraydecay63, float* %arraydecay64), !dbg !13582
  %46 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13583
  %con65 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %46, i32 0, i32 13, !dbg !13585
  %applySize66 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con65, i32 0, i32 10, !dbg !13586
  %47 = load void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)*, void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)** %applySize66, align 8, !dbg !13586
  %tobool67 = icmp ne void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)* %47, null, !dbg !13583
  br i1 %tobool67, label %if.then68, label %if.end72, !dbg !13587

if.then68:                                        ; preds = %if.then62
  %48 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13588
  %con69 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %48, i32 0, i32 13, !dbg !13589
  %applySize70 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con69, i32 0, i32 10, !dbg !13590
  %49 = load void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)*, void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)** %applySize70, align 8, !dbg !13590
  %50 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13591
  %arraydecay71 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !13592
  call void %49(%struct.TransInfo* %50, %struct.TransData* null, [3 x float]* %arraydecay71), !dbg !13588
  br label %if.end72, !dbg !13588

if.end72:                                         ; preds = %if.then68, %if.then62
  store i32 0, i32* %i, align 4, !dbg !13593
  %51 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13595
  %data73 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %51, i32 0, i32 10, !dbg !13596
  %52 = load %struct.TransData*, %struct.TransData** %data73, align 8, !dbg !13596
  store %struct.TransData* %52, %struct.TransData** %td, align 8, !dbg !13597
  br label %for.cond74, !dbg !13598

for.cond74:                                       ; preds = %for.inc80, %if.end72
  %53 = load i32, i32* %i, align 4, !dbg !13599
  %54 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13601
  %total75 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %54, i32 0, i32 9, !dbg !13602
  %55 = load i32, i32* %total75, align 8, !dbg !13602
  %cmp76 = icmp slt i32 %53, %55, !dbg !13603
  br i1 %cmp76, label %for.body78, label %for.end83, !dbg !13604

for.body78:                                       ; preds = %for.cond74
  %56 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13605
  %57 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !13606
  %arraydecay79 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !13607
  call void @ElementResize(%struct.TransInfo* %56, %struct.TransData* %57, [3 x float]* %arraydecay79), !dbg !13608
  br label %for.inc80, !dbg !13608

for.inc80:                                        ; preds = %for.body78
  %58 = load i32, i32* %i, align 4, !dbg !13609
  %inc81 = add nsw i32 %58, 1, !dbg !13609
  store i32 %inc81, i32* %i, align 4, !dbg !13609
  %59 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !13610
  %incdec.ptr82 = getelementptr inbounds %struct.TransData, %struct.TransData* %59, i32 1, !dbg !13610
  store %struct.TransData* %incdec.ptr82, %struct.TransData** %td, align 8, !dbg !13610
  br label %for.cond74, !dbg !13611, !llvm.loop !13612

for.end83:                                        ; preds = %for.cond74
  %60 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13614
  %flag84 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %60, i32 0, i32 1, !dbg !13616
  %61 = load i32, i32* %flag84, align 4, !dbg !13616
  %and85 = and i32 %61, 33560576, !dbg !13617
  %tobool86 = icmp ne i32 %and85, 0, !dbg !13617
  br i1 %tobool86, label %if.then87, label %if.end88, !dbg !13618

if.then87:                                        ; preds = %for.end83
  %62 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13619
  call void @clipUVData(%struct.TransInfo* %62), !dbg !13621
  br label %if.end88, !dbg !13622

if.end88:                                         ; preds = %if.then87, %for.end83
  br label %if.end89, !dbg !13623

if.end89:                                         ; preds = %if.end88, %land.lhs.true57, %for.end
  %63 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13624
  call void @recalcData(%struct.TransInfo* %63), !dbg !13625
  %64 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13626
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %64, i32 0, i32 54, !dbg !13627
  %65 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !13627
  %arraydecay90 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !13628
  call void @ED_area_headerprint(%struct.ScrArea* %65, i8* %arraydecay90), !dbg !13629
  ret void, !dbg !13630
}

declare dso_local void @constraintNumInput(%struct.TransInfo*, float*) #2

declare dso_local void @applySnapping(%struct.TransInfo*, float*) #2

declare dso_local void @size_to_mat3([3 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @headerResize(%struct.TransInfo* %t, float* %vec, i8* %str) #0 !dbg !13631 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %vec.addr = alloca float*, align 8
  %str.addr = alloca i8*, align 8
  %tvec = alloca [192 x i8], align 16
  %ofs = alloca i64, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !13634, metadata !DIExpression()), !dbg !13635
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !13636, metadata !DIExpression()), !dbg !13637
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !13638, metadata !DIExpression()), !dbg !13639
  call void @llvm.dbg.declare(metadata [192 x i8]* %tvec, metadata !13640, metadata !DIExpression()), !dbg !13644
  call void @llvm.dbg.declare(metadata i64* %ofs, metadata !13645, metadata !DIExpression()), !dbg !13648
  store i64 0, i64* %ofs, align 8, !dbg !13648
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13649
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 15, !dbg !13651
  %call = call zeroext i8 @hasNumInput(%struct.NumInput* %num), !dbg !13652
  %tobool = icmp ne i8 %call, 0, !dbg !13652
  br i1 %tobool, label %if.then, label %if.else, !dbg !13653

if.then:                                          ; preds = %entry
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13654
  %num1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 15, !dbg !13656
  %arraydecay = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !13657
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13658
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 56, !dbg !13659
  %3 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13659
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 38, !dbg !13660
  call void @outputNumInput(%struct.NumInput* %num1, i8* %arraydecay, %struct.UnitSettings* %unit), !dbg !13661
  br label %if.end, !dbg !13662

if.else:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !13663
  %4 = load float*, float** %vec.addr, align 8, !dbg !13665
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !13665
  %5 = load float, float* %arrayidx2, align 4, !dbg !13665
  %conv = fpext float %5 to double, !dbg !13665
  %call3 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arrayidx, i64 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), double %conv), !dbg !13666
  %arrayidx4 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 64, !dbg !13667
  %6 = load float*, float** %vec.addr, align 8, !dbg !13668
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 1, !dbg !13668
  %7 = load float, float* %arrayidx5, align 4, !dbg !13668
  %conv6 = fpext float %7 to double, !dbg !13668
  %call7 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arrayidx4, i64 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), double %conv6), !dbg !13669
  %arrayidx8 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 128, !dbg !13670
  %8 = load float*, float** %vec.addr, align 8, !dbg !13671
  %arrayidx9 = getelementptr inbounds float, float* %8, i64 2, !dbg !13671
  %9 = load float, float* %arrayidx9, align 4, !dbg !13671
  %conv10 = fpext float %9 to double, !dbg !13671
  %call11 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arrayidx8, i64 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), double %conv10), !dbg !13672
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13673
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 13, !dbg !13675
  %mode = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 7, !dbg !13676
  %11 = load i32, i32* %mode, align 4, !dbg !13676
  %and = and i32 %11, 1, !dbg !13677
  %tobool12 = icmp ne i32 %and, 0, !dbg !13677
  br i1 %tobool12, label %if.then13, label %if.else46, !dbg !13678

if.then13:                                        ; preds = %if.end
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13679
  %num14 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 15, !dbg !13681
  %idx_max = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num14, i32 0, i32 0, !dbg !13682
  %13 = load i16, i16* %idx_max, align 8, !dbg !13682
  %conv15 = sext i16 %13 to i32, !dbg !13679
  switch i32 %conv15, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb21
    i32 2, label %sw.bb33
  ], !dbg !13683

sw.bb:                                            ; preds = %if.then13
  %14 = load i8*, i8** %str.addr, align 8, !dbg !13684
  %15 = load i64, i64* %ofs, align 8, !dbg !13686
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %15, !dbg !13687
  %16 = load i64, i64* %ofs, align 8, !dbg !13688
  %sub = sub i64 256, %16, !dbg !13689
  %arrayidx16 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !13690
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13691
  %con17 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 13, !dbg !13692
  %text = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con17, i32 0, i32 1, !dbg !13693
  %arraydecay18 = getelementptr inbounds [50 x i8], [50 x i8]* %text, i64 0, i64 0, !dbg !13691
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13694
  %proptext = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 19, !dbg !13695
  %arraydecay19 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext, i64 0, i64 0, !dbg !13694
  %call20 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr, i64 %sub, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.84, i64 0, i64 0), i8* %arrayidx16, i8* %arraydecay18, i8* %arraydecay19), !dbg !13696
  %19 = load i64, i64* %ofs, align 8, !dbg !13697
  %add = add i64 %19, %call20, !dbg !13697
  store i64 %add, i64* %ofs, align 8, !dbg !13697
  br label %sw.epilog, !dbg !13698

sw.bb21:                                          ; preds = %if.then13
  %20 = load i8*, i8** %str.addr, align 8, !dbg !13699
  %21 = load i64, i64* %ofs, align 8, !dbg !13700
  %add.ptr22 = getelementptr inbounds i8, i8* %20, i64 %21, !dbg !13701
  %22 = load i64, i64* %ofs, align 8, !dbg !13702
  %sub23 = sub i64 256, %22, !dbg !13703
  %arrayidx24 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !13704
  %arrayidx25 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 64, !dbg !13705
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13706
  %con26 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 13, !dbg !13707
  %text27 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con26, i32 0, i32 1, !dbg !13708
  %arraydecay28 = getelementptr inbounds [50 x i8], [50 x i8]* %text27, i64 0, i64 0, !dbg !13706
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13709
  %proptext29 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 19, !dbg !13710
  %arraydecay30 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext29, i64 0, i64 0, !dbg !13709
  %call31 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr22, i64 %sub23, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.85, i64 0, i64 0), i8* %arrayidx24, i8* %arrayidx25, i8* %arraydecay28, i8* %arraydecay30), !dbg !13711
  %25 = load i64, i64* %ofs, align 8, !dbg !13712
  %add32 = add i64 %25, %call31, !dbg !13712
  store i64 %add32, i64* %ofs, align 8, !dbg !13712
  br label %sw.epilog, !dbg !13713

sw.bb33:                                          ; preds = %if.then13
  %26 = load i8*, i8** %str.addr, align 8, !dbg !13714
  %27 = load i64, i64* %ofs, align 8, !dbg !13715
  %add.ptr34 = getelementptr inbounds i8, i8* %26, i64 %27, !dbg !13716
  %28 = load i64, i64* %ofs, align 8, !dbg !13717
  %sub35 = sub i64 256, %28, !dbg !13718
  %arrayidx36 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !13719
  %arrayidx37 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 64, !dbg !13720
  %arrayidx38 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 128, !dbg !13721
  %29 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13722
  %con39 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %29, i32 0, i32 13, !dbg !13723
  %text40 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con39, i32 0, i32 1, !dbg !13724
  %arraydecay41 = getelementptr inbounds [50 x i8], [50 x i8]* %text40, i64 0, i64 0, !dbg !13722
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13725
  %proptext42 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %30, i32 0, i32 19, !dbg !13726
  %arraydecay43 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext42, i64 0, i64 0, !dbg !13725
  %call44 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr34, i64 %sub35, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.86, i64 0, i64 0), i8* %arrayidx36, i8* %arrayidx37, i8* %arrayidx38, i8* %arraydecay41, i8* %arraydecay43), !dbg !13727
  %31 = load i64, i64* %ofs, align 8, !dbg !13728
  %add45 = add i64 %31, %call44, !dbg !13728
  store i64 %add45, i64* %ofs, align 8, !dbg !13728
  br label %sw.epilog, !dbg !13729

sw.epilog:                                        ; preds = %if.then13, %sw.bb33, %sw.bb21, %sw.bb
  br label %if.end75, !dbg !13730

if.else46:                                        ; preds = %if.end
  %32 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13731
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %32, i32 0, i32 1, !dbg !13734
  %33 = load i32, i32* %flag, align 4, !dbg !13734
  %and47 = and i32 %33, 32768, !dbg !13735
  %tobool48 = icmp ne i32 %and47, 0, !dbg !13735
  br i1 %tobool48, label %if.then49, label %if.else61, !dbg !13736

if.then49:                                        ; preds = %if.else46
  %34 = load i8*, i8** %str.addr, align 8, !dbg !13737
  %35 = load i64, i64* %ofs, align 8, !dbg !13739
  %add.ptr50 = getelementptr inbounds i8, i8* %34, i64 %35, !dbg !13740
  %36 = load i64, i64* %ofs, align 8, !dbg !13741
  %sub51 = sub i64 256, %36, !dbg !13742
  %arrayidx52 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !13743
  %arrayidx53 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 64, !dbg !13744
  %37 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13745
  %con54 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %37, i32 0, i32 13, !dbg !13746
  %text55 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con54, i32 0, i32 1, !dbg !13747
  %arraydecay56 = getelementptr inbounds [50 x i8], [50 x i8]* %text55, i64 0, i64 0, !dbg !13745
  %38 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13748
  %proptext57 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %38, i32 0, i32 19, !dbg !13749
  %arraydecay58 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext57, i64 0, i64 0, !dbg !13748
  %call59 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr50, i64 %sub51, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.87, i64 0, i64 0), i8* %arrayidx52, i8* %arrayidx53, i8* %arraydecay56, i8* %arraydecay58), !dbg !13750
  %39 = load i64, i64* %ofs, align 8, !dbg !13751
  %add60 = add i64 %39, %call59, !dbg !13751
  store i64 %add60, i64* %ofs, align 8, !dbg !13751
  br label %if.end74, !dbg !13752

if.else61:                                        ; preds = %if.else46
  %40 = load i8*, i8** %str.addr, align 8, !dbg !13753
  %41 = load i64, i64* %ofs, align 8, !dbg !13755
  %add.ptr62 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !13756
  %42 = load i64, i64* %ofs, align 8, !dbg !13757
  %sub63 = sub i64 256, %42, !dbg !13758
  %arrayidx64 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !13759
  %arrayidx65 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 64, !dbg !13760
  %arrayidx66 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 128, !dbg !13761
  %43 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13762
  %con67 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %43, i32 0, i32 13, !dbg !13763
  %text68 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con67, i32 0, i32 1, !dbg !13764
  %arraydecay69 = getelementptr inbounds [50 x i8], [50 x i8]* %text68, i64 0, i64 0, !dbg !13762
  %44 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13765
  %proptext70 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %44, i32 0, i32 19, !dbg !13766
  %arraydecay71 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext70, i64 0, i64 0, !dbg !13765
  %call72 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr62, i64 %sub63, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.88, i64 0, i64 0), i8* %arrayidx64, i8* %arrayidx65, i8* %arrayidx66, i8* %arraydecay69, i8* %arraydecay71), !dbg !13767
  %45 = load i64, i64* %ofs, align 8, !dbg !13768
  %add73 = add i64 %45, %call72, !dbg !13768
  store i64 %add73, i64* %ofs, align 8, !dbg !13768
  br label %if.end74

if.end74:                                         ; preds = %if.else61, %if.then49
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %sw.epilog
  %46 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13769
  %flag76 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %46, i32 0, i32 1, !dbg !13771
  %47 = load i32, i32* %flag76, align 4, !dbg !13771
  %and77 = and i32 %47, 33560576, !dbg !13772
  %tobool78 = icmp ne i32 %and77, 0, !dbg !13772
  br i1 %tobool78, label %if.then79, label %if.end85, !dbg !13773

if.then79:                                        ; preds = %if.end75
  %48 = load i8*, i8** %str.addr, align 8, !dbg !13774
  %49 = load i64, i64* %ofs, align 8, !dbg !13776
  %add.ptr80 = getelementptr inbounds i8, i8* %48, i64 %49, !dbg !13777
  %50 = load i64, i64* %ofs, align 8, !dbg !13778
  %sub81 = sub i64 256, %50, !dbg !13779
  %51 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13780
  %prop_size = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %51, i32 0, i32 18, !dbg !13781
  %52 = load float, float* %prop_size, align 4, !dbg !13781
  %conv82 = fpext float %52 to double, !dbg !13780
  %call83 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr80, i64 %sub81, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.89, i64 0, i64 0), double %conv82), !dbg !13782
  %53 = load i64, i64* %ofs, align 8, !dbg !13783
  %add84 = add i64 %53, %call83, !dbg !13783
  store i64 %add84, i64* %ofs, align 8, !dbg !13783
  br label %if.end85, !dbg !13784

if.end85:                                         ; preds = %if.then79, %if.end75
  ret void, !dbg !13785
}

; Function Attrs: noinline nounwind uwtable
define internal void @ElementResize(%struct.TransInfo* %t, %struct.TransData* %td, [3 x float]* %mat) #0 !dbg !13786 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %td.addr = alloca %struct.TransData*, align 8
  %mat.addr = alloca [3 x float]*, align 8
  %tmat = alloca [3 x [3 x float]], align 16
  %smat = alloca [3 x [3 x float]], align 16
  %center = alloca [3 x float], align 4
  %vec = alloca [3 x float], align 4
  %fsize = alloca [3 x float], align 4
  %obsizemat = alloca [3 x [3 x float]], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !13789, metadata !DIExpression()), !dbg !13790
  store %struct.TransData* %td, %struct.TransData** %td.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransData** %td.addr, metadata !13791, metadata !DIExpression()), !dbg !13792
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !13793, metadata !DIExpression()), !dbg !13794
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %tmat, metadata !13795, metadata !DIExpression()), !dbg !13796
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %smat, metadata !13797, metadata !DIExpression()), !dbg !13798
  call void @llvm.dbg.declare(metadata [3 x float]* %center, metadata !13799, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !13801, metadata !DIExpression()), !dbg !13802
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13803
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 1, !dbg !13805
  %1 = load i32, i32* %flag, align 4, !dbg !13805
  %and = and i32 %1, 2, !dbg !13806
  %tobool = icmp ne i32 %and, 0, !dbg !13806
  br i1 %tobool, label %if.then, label %if.else, !dbg !13807

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !13808
  %2 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !13810
  %3 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13811
  %mtx = getelementptr inbounds %struct.TransData, %struct.TransData* %3, i32 0, i32 8, !dbg !13812
  %arraydecay1 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mtx, i64 0, i64 0, !dbg !13811
  call void @mul_m3_m3m3([3 x float]* %arraydecay, [3 x float]* %2, [3 x float]* %arraydecay1), !dbg !13813
  %arraydecay2 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !13814
  %4 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13815
  %smtx = getelementptr inbounds %struct.TransData, %struct.TransData* %4, i32 0, i32 9, !dbg !13816
  %arraydecay3 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smtx, i64 0, i64 0, !dbg !13815
  %arraydecay4 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !13817
  call void @mul_m3_m3m3([3 x float]* %arraydecay2, [3 x float]* %arraydecay3, [3 x float]* %arraydecay4), !dbg !13818
  br label %if.end, !dbg !13819

if.else:                                          ; preds = %entry
  %arraydecay5 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !13820
  %5 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !13822
  call void @copy_m3_m3([3 x float]* %arraydecay5, [3 x float]* %5), !dbg !13823
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13824
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 13, !dbg !13826
  %applySize = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 10, !dbg !13827
  %7 = load void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)*, void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)** %applySize, align 8, !dbg !13827
  %tobool6 = icmp ne void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)* %7, null, !dbg !13824
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !13828

if.then7:                                         ; preds = %if.end
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13829
  %con8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 13, !dbg !13831
  %applySize9 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con8, i32 0, i32 10, !dbg !13832
  %9 = load void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)*, void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)** %applySize9, align 8, !dbg !13832
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13833
  %11 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13834
  %arraydecay10 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !13835
  call void %9(%struct.TransInfo* %10, %struct.TransData* %11, [3 x float]* %arraydecay10), !dbg !13829
  br label %if.end11, !dbg !13836

if.end11:                                         ; preds = %if.then7, %if.end
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13837
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13839
  %around = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 32, !dbg !13840
  %14 = load i16, i16* %around, align 2, !dbg !13840
  %call = call zeroext i8 @transdata_check_local_center(%struct.TransInfo* %12, i16 signext %14), !dbg !13841
  %tobool12 = icmp ne i8 %call, 0, !dbg !13841
  br i1 %tobool12, label %if.then13, label %if.else17, !dbg !13842

if.then13:                                        ; preds = %if.end11
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !13843
  %15 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13845
  %center15 = getelementptr inbounds %struct.TransData, %struct.TransData* %15, i32 0, i32 7, !dbg !13846
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %center15, i64 0, i64 0, !dbg !13845
  call void @copy_v3_v3(float* %arraydecay14, float* %arraydecay16), !dbg !13847
  br label %if.end38, !dbg !13848

if.else17:                                        ; preds = %if.end11
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13849
  %options = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 4, !dbg !13851
  %17 = load i32, i32* %options, align 8, !dbg !13851
  %and18 = and i32 %17, 64, !dbg !13852
  %tobool19 = icmp ne i32 %and18, 0, !dbg !13852
  br i1 %tobool19, label %if.then20, label %if.else33, !dbg !13853

if.then20:                                        ; preds = %if.else17
  %18 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13854
  %flag21 = getelementptr inbounds %struct.TransData, %struct.TransData* %18, i32 0, i32 16, !dbg !13857
  %19 = load i32, i32* %flag21, align 8, !dbg !13857
  %and22 = and i32 %19, 256, !dbg !13858
  %tobool23 = icmp ne i32 %and22, 0, !dbg !13858
  br i1 %tobool23, label %if.then24, label %if.else28, !dbg !13859

if.then24:                                        ; preds = %if.then20
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !13860
  %20 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13862
  %center26 = getelementptr inbounds %struct.TransData, %struct.TransData* %20, i32 0, i32 7, !dbg !13863
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %center26, i64 0, i64 0, !dbg !13862
  call void @copy_v3_v3(float* %arraydecay25, float* %arraydecay27), !dbg !13864
  br label %if.end32, !dbg !13865

if.else28:                                        ; preds = %if.then20
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !13866
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13868
  %center30 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 20, !dbg !13869
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %center30, i64 0, i64 0, !dbg !13868
  call void @copy_v3_v3(float* %arraydecay29, float* %arraydecay31), !dbg !13870
  br label %if.end32

if.end32:                                         ; preds = %if.else28, %if.then24
  br label %if.end37, !dbg !13871

if.else33:                                        ; preds = %if.else17
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !13872
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13874
  %center35 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 20, !dbg !13875
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %center35, i64 0, i64 0, !dbg !13874
  call void @copy_v3_v3(float* %arraydecay34, float* %arraydecay36), !dbg !13876
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.end32
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then13
  %23 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13877
  %ext = getelementptr inbounds %struct.TransData, %struct.TransData* %23, i32 0, i32 13, !dbg !13879
  %24 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext, align 8, !dbg !13879
  %tobool39 = icmp ne %struct.TransDataExtension* %24, null, !dbg !13877
  br i1 %tobool39, label %if.then40, label %if.end130, !dbg !13880

if.then40:                                        ; preds = %if.end38
  call void @llvm.dbg.declare(metadata [3 x float]* %fsize, metadata !13881, metadata !DIExpression()), !dbg !13883
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13884
  %flag41 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 1, !dbg !13886
  %26 = load i32, i32* %flag41, align 4, !dbg !13886
  %and42 = and i32 %26, 13, !dbg !13887
  %tobool43 = icmp ne i32 %and42, 0, !dbg !13887
  br i1 %tobool43, label %if.then44, label %if.else52, !dbg !13888

if.then44:                                        ; preds = %if.then40
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %obsizemat, metadata !13889, metadata !DIExpression()), !dbg !13891
  %arraydecay45 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %obsizemat, i64 0, i64 0, !dbg !13892
  %arraydecay46 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !13893
  %27 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13894
  %axismtx = getelementptr inbounds %struct.TransData, %struct.TransData* %27, i32 0, i32 10, !dbg !13895
  %arraydecay47 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %axismtx, i64 0, i64 0, !dbg !13894
  call void @mul_m3_m3m3([3 x float]* %arraydecay45, [3 x float]* %arraydecay46, [3 x float]* %arraydecay47), !dbg !13896
  %arraydecay48 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %obsizemat, i64 0, i64 0, !dbg !13897
  %28 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13898
  %axismtx49 = getelementptr inbounds %struct.TransData, %struct.TransData* %28, i32 0, i32 10, !dbg !13899
  %arraydecay50 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %axismtx49, i64 0, i64 0, !dbg !13898
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %fsize, i64 0, i64 0, !dbg !13900
  call void @TransMat3ToSize([3 x float]* %arraydecay48, [3 x float]* %arraydecay50, float* %arraydecay51), !dbg !13901
  br label %if.end55, !dbg !13902

if.else52:                                        ; preds = %if.then40
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %fsize, i64 0, i64 0, !dbg !13903
  %arraydecay54 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !13905
  call void @mat3_to_size(float* %arraydecay53, [3 x float]* %arraydecay54), !dbg !13906
  br label %if.end55

if.end55:                                         ; preds = %if.else52, %if.then44
  %29 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13907
  %protectflag = getelementptr inbounds %struct.TransData, %struct.TransData* %29, i32 0, i32 17, !dbg !13908
  %30 = load i16, i16* %protectflag, align 4, !dbg !13908
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %fsize, i64 0, i64 0, !dbg !13909
  call void @protectedSizeBits(i16 signext %30, float* %arraydecay56), !dbg !13910
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13911
  %flag57 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %31, i32 0, i32 1, !dbg !13913
  %32 = load i32, i32* %flag57, align 4, !dbg !13913
  %and58 = and i32 %32, 16384, !dbg !13914
  %cmp = icmp eq i32 %and58, 0, !dbg !13915
  br i1 %cmp, label %if.then59, label %if.end129, !dbg !13916

if.then59:                                        ; preds = %if.end55
  %33 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13917
  %flag60 = getelementptr inbounds %struct.TransData, %struct.TransData* %33, i32 0, i32 16, !dbg !13920
  %34 = load i32, i32* %flag60, align 8, !dbg !13920
  %and61 = and i32 %34, 32, !dbg !13921
  %tobool62 = icmp ne i32 %and61, 0, !dbg !13921
  br i1 %tobool62, label %land.lhs.true, label %if.else84, !dbg !13922

land.lhs.true:                                    ; preds = %if.then59
  %35 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !13923
  %con63 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %35, i32 0, i32 13, !dbg !13924
  %mode = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con63, i32 0, i32 7, !dbg !13925
  %36 = load i32, i32* %mode, align 4, !dbg !13925
  %and64 = and i32 %36, 1, !dbg !13926
  %tobool65 = icmp ne i32 %and64, 0, !dbg !13926
  br i1 %tobool65, label %if.else84, label %if.then66, !dbg !13927

if.then66:                                        ; preds = %land.lhs.true
  %37 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13928
  %ival = getelementptr inbounds %struct.TransData, %struct.TransData* %37, i32 0, i32 6, !dbg !13930
  %38 = load float, float* %ival, align 8, !dbg !13930
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %fsize, i64 0, i64 0, !dbg !13931
  %39 = load float, float* %arrayidx, align 4, !dbg !13931
  %sub = fsub float %39, 1.000000e+00, !dbg !13932
  %40 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13933
  %factor = getelementptr inbounds %struct.TransData, %struct.TransData* %40, i32 0, i32 2, !dbg !13934
  %41 = load float, float* %factor, align 8, !dbg !13934
  %mul = fmul float %sub, %41, !dbg !13935
  %add = fadd float 1.000000e+00, %mul, !dbg !13936
  %mul67 = fmul float %38, %add, !dbg !13937
  %42 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13938
  %val = getelementptr inbounds %struct.TransData, %struct.TransData* %42, i32 0, i32 5, !dbg !13939
  %43 = load float*, float** %val, align 8, !dbg !13939
  store float %mul67, float* %43, align 4, !dbg !13940
  %44 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13941
  %ext68 = getelementptr inbounds %struct.TransData, %struct.TransData* %44, i32 0, i32 13, !dbg !13942
  %45 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext68, align 8, !dbg !13942
  %isize = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %45, i32 0, i32 12, !dbg !13943
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %isize, i64 0, i64 0, !dbg !13941
  %46 = load float, float* %arrayidx69, align 8, !dbg !13941
  %47 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13944
  %ext70 = getelementptr inbounds %struct.TransData, %struct.TransData* %47, i32 0, i32 13, !dbg !13945
  %48 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext70, align 8, !dbg !13945
  %size = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %48, i32 0, i32 11, !dbg !13946
  %49 = load float*, float** %size, align 8, !dbg !13946
  %arrayidx71 = getelementptr inbounds float, float* %49, i64 0, !dbg !13944
  store float %46, float* %arrayidx71, align 4, !dbg !13947
  %50 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13948
  %ext72 = getelementptr inbounds %struct.TransData, %struct.TransData* %50, i32 0, i32 13, !dbg !13949
  %51 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext72, align 8, !dbg !13949
  %isize73 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %51, i32 0, i32 12, !dbg !13950
  %arrayidx74 = getelementptr inbounds [3 x float], [3 x float]* %isize73, i64 0, i64 1, !dbg !13948
  %52 = load float, float* %arrayidx74, align 4, !dbg !13948
  %53 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13951
  %ext75 = getelementptr inbounds %struct.TransData, %struct.TransData* %53, i32 0, i32 13, !dbg !13952
  %54 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext75, align 8, !dbg !13952
  %size76 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %54, i32 0, i32 11, !dbg !13953
  %55 = load float*, float** %size76, align 8, !dbg !13953
  %arrayidx77 = getelementptr inbounds float, float* %55, i64 1, !dbg !13951
  store float %52, float* %arrayidx77, align 4, !dbg !13954
  %56 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13955
  %ext78 = getelementptr inbounds %struct.TransData, %struct.TransData* %56, i32 0, i32 13, !dbg !13956
  %57 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext78, align 8, !dbg !13956
  %isize79 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %57, i32 0, i32 12, !dbg !13957
  %arrayidx80 = getelementptr inbounds [3 x float], [3 x float]* %isize79, i64 0, i64 2, !dbg !13955
  %58 = load float, float* %arrayidx80, align 8, !dbg !13955
  %59 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13958
  %ext81 = getelementptr inbounds %struct.TransData, %struct.TransData* %59, i32 0, i32 13, !dbg !13959
  %60 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext81, align 8, !dbg !13959
  %size82 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %60, i32 0, i32 11, !dbg !13960
  %61 = load float*, float** %size82, align 8, !dbg !13960
  %arrayidx83 = getelementptr inbounds float, float* %61, i64 2, !dbg !13958
  store float %58, float* %arrayidx83, align 4, !dbg !13961
  br label %if.end128, !dbg !13962

if.else84:                                        ; preds = %land.lhs.true, %if.then59
  %62 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13963
  %flag85 = getelementptr inbounds %struct.TransData, %struct.TransData* %62, i32 0, i32 16, !dbg !13966
  %63 = load i32, i32* %flag85, align 8, !dbg !13966
  %and86 = and i32 %63, 32, !dbg !13967
  %tobool87 = icmp ne i32 %and86, 0, !dbg !13967
  br i1 %tobool87, label %if.then88, label %if.end91, !dbg !13968

if.then88:                                        ; preds = %if.else84
  %64 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13969
  %ival89 = getelementptr inbounds %struct.TransData, %struct.TransData* %64, i32 0, i32 6, !dbg !13970
  %65 = load float, float* %ival89, align 8, !dbg !13970
  %66 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13971
  %val90 = getelementptr inbounds %struct.TransData, %struct.TransData* %66, i32 0, i32 5, !dbg !13972
  %67 = load float*, float** %val90, align 8, !dbg !13972
  store float %65, float* %67, align 4, !dbg !13973
  br label %if.end91, !dbg !13974

if.end91:                                         ; preds = %if.then88, %if.else84
  %68 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13975
  %ext92 = getelementptr inbounds %struct.TransData, %struct.TransData* %68, i32 0, i32 13, !dbg !13976
  %69 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext92, align 8, !dbg !13976
  %isize93 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %69, i32 0, i32 12, !dbg !13977
  %arrayidx94 = getelementptr inbounds [3 x float], [3 x float]* %isize93, i64 0, i64 0, !dbg !13975
  %70 = load float, float* %arrayidx94, align 8, !dbg !13975
  %arrayidx95 = getelementptr inbounds [3 x float], [3 x float]* %fsize, i64 0, i64 0, !dbg !13978
  %71 = load float, float* %arrayidx95, align 4, !dbg !13978
  %sub96 = fsub float %71, 1.000000e+00, !dbg !13979
  %72 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13980
  %factor97 = getelementptr inbounds %struct.TransData, %struct.TransData* %72, i32 0, i32 2, !dbg !13981
  %73 = load float, float* %factor97, align 8, !dbg !13981
  %mul98 = fmul float %sub96, %73, !dbg !13982
  %add99 = fadd float 1.000000e+00, %mul98, !dbg !13983
  %mul100 = fmul float %70, %add99, !dbg !13984
  %74 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13985
  %ext101 = getelementptr inbounds %struct.TransData, %struct.TransData* %74, i32 0, i32 13, !dbg !13986
  %75 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext101, align 8, !dbg !13986
  %size102 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %75, i32 0, i32 11, !dbg !13987
  %76 = load float*, float** %size102, align 8, !dbg !13987
  %arrayidx103 = getelementptr inbounds float, float* %76, i64 0, !dbg !13985
  store float %mul100, float* %arrayidx103, align 4, !dbg !13988
  %77 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13989
  %ext104 = getelementptr inbounds %struct.TransData, %struct.TransData* %77, i32 0, i32 13, !dbg !13990
  %78 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext104, align 8, !dbg !13990
  %isize105 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %78, i32 0, i32 12, !dbg !13991
  %arrayidx106 = getelementptr inbounds [3 x float], [3 x float]* %isize105, i64 0, i64 1, !dbg !13989
  %79 = load float, float* %arrayidx106, align 4, !dbg !13989
  %arrayidx107 = getelementptr inbounds [3 x float], [3 x float]* %fsize, i64 0, i64 1, !dbg !13992
  %80 = load float, float* %arrayidx107, align 4, !dbg !13992
  %sub108 = fsub float %80, 1.000000e+00, !dbg !13993
  %81 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13994
  %factor109 = getelementptr inbounds %struct.TransData, %struct.TransData* %81, i32 0, i32 2, !dbg !13995
  %82 = load float, float* %factor109, align 8, !dbg !13995
  %mul110 = fmul float %sub108, %82, !dbg !13996
  %add111 = fadd float 1.000000e+00, %mul110, !dbg !13997
  %mul112 = fmul float %79, %add111, !dbg !13998
  %83 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !13999
  %ext113 = getelementptr inbounds %struct.TransData, %struct.TransData* %83, i32 0, i32 13, !dbg !14000
  %84 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext113, align 8, !dbg !14000
  %size114 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %84, i32 0, i32 11, !dbg !14001
  %85 = load float*, float** %size114, align 8, !dbg !14001
  %arrayidx115 = getelementptr inbounds float, float* %85, i64 1, !dbg !13999
  store float %mul112, float* %arrayidx115, align 4, !dbg !14002
  %86 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14003
  %ext116 = getelementptr inbounds %struct.TransData, %struct.TransData* %86, i32 0, i32 13, !dbg !14004
  %87 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext116, align 8, !dbg !14004
  %isize117 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %87, i32 0, i32 12, !dbg !14005
  %arrayidx118 = getelementptr inbounds [3 x float], [3 x float]* %isize117, i64 0, i64 2, !dbg !14003
  %88 = load float, float* %arrayidx118, align 8, !dbg !14003
  %arrayidx119 = getelementptr inbounds [3 x float], [3 x float]* %fsize, i64 0, i64 2, !dbg !14006
  %89 = load float, float* %arrayidx119, align 4, !dbg !14006
  %sub120 = fsub float %89, 1.000000e+00, !dbg !14007
  %90 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14008
  %factor121 = getelementptr inbounds %struct.TransData, %struct.TransData* %90, i32 0, i32 2, !dbg !14009
  %91 = load float, float* %factor121, align 8, !dbg !14009
  %mul122 = fmul float %sub120, %91, !dbg !14010
  %add123 = fadd float 1.000000e+00, %mul122, !dbg !14011
  %mul124 = fmul float %88, %add123, !dbg !14012
  %92 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14013
  %ext125 = getelementptr inbounds %struct.TransData, %struct.TransData* %92, i32 0, i32 13, !dbg !14014
  %93 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext125, align 8, !dbg !14014
  %size126 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %93, i32 0, i32 11, !dbg !14015
  %94 = load float*, float** %size126, align 8, !dbg !14015
  %arrayidx127 = getelementptr inbounds float, float* %94, i64 2, !dbg !14013
  store float %mul124, float* %arrayidx127, align 4, !dbg !14016
  br label %if.end128

if.end128:                                        ; preds = %if.end91, %if.then66
  br label %if.end129, !dbg !14017

if.end129:                                        ; preds = %if.end128, %if.end55
  %95 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14018
  %96 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14019
  call void @constraintSizeLim(%struct.TransInfo* %95, %struct.TransData* %96), !dbg !14020
  br label %if.end130, !dbg !14021

if.end130:                                        ; preds = %if.end129, %if.end38
  %97 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14022
  %flag131 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %97, i32 0, i32 1, !dbg !14024
  %98 = load i32, i32* %flag131, align 4, !dbg !14024
  %and132 = and i32 %98, 64, !dbg !14025
  %tobool133 = icmp ne i32 %and132, 0, !dbg !14025
  br i1 %tobool133, label %if.then134, label %if.else138, !dbg !14026

if.then134:                                       ; preds = %if.end130
  %arraydecay135 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14027
  %99 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14028
  %iloc = getelementptr inbounds %struct.TransData, %struct.TransData* %99, i32 0, i32 4, !dbg !14029
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %iloc, i64 0, i64 0, !dbg !14028
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !14030
  call void @sub_v3_v3v3(float* %arraydecay135, float* %arraydecay136, float* %arraydecay137), !dbg !14031
  br label %if.end143, !dbg !14031

if.else138:                                       ; preds = %if.end130
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14032
  %100 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14033
  %center140 = getelementptr inbounds %struct.TransData, %struct.TransData* %100, i32 0, i32 7, !dbg !14034
  %arraydecay141 = getelementptr inbounds [3 x float], [3 x float]* %center140, i64 0, i64 0, !dbg !14033
  %arraydecay142 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !14035
  call void @sub_v3_v3v3(float* %arraydecay139, float* %arraydecay141, float* %arraydecay142), !dbg !14036
  br label %if.end143

if.end143:                                        ; preds = %if.else138, %if.then134
  %arraydecay144 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !14037
  %arraydecay145 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14038
  call void @mul_m3_v3([3 x float]* %arraydecay144, float* %arraydecay145), !dbg !14039
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14040
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !14041
  call void @add_v3_v3(float* %arraydecay146, float* %arraydecay147), !dbg !14042
  %101 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14043
  %flag148 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %101, i32 0, i32 1, !dbg !14045
  %102 = load i32, i32* %flag148, align 4, !dbg !14045
  %and149 = and i32 %102, 64, !dbg !14046
  %tobool150 = icmp ne i32 %and149, 0, !dbg !14046
  br i1 %tobool150, label %if.then151, label %if.else155, !dbg !14047

if.then151:                                       ; preds = %if.end143
  %arraydecay152 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14048
  %103 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14049
  %iloc153 = getelementptr inbounds %struct.TransData, %struct.TransData* %103, i32 0, i32 4, !dbg !14050
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %iloc153, i64 0, i64 0, !dbg !14049
  call void @sub_v3_v3(float* %arraydecay152, float* %arraydecay154), !dbg !14051
  br label %if.end159, !dbg !14051

if.else155:                                       ; preds = %if.end143
  %arraydecay156 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14052
  %104 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14053
  %center157 = getelementptr inbounds %struct.TransData, %struct.TransData* %104, i32 0, i32 7, !dbg !14054
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %center157, i64 0, i64 0, !dbg !14053
  call void @sub_v3_v3(float* %arraydecay156, float* %arraydecay158), !dbg !14055
  br label %if.end159

if.end159:                                        ; preds = %if.else155, %if.then151
  %arraydecay160 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14056
  %105 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14057
  %factor161 = getelementptr inbounds %struct.TransData, %struct.TransData* %105, i32 0, i32 2, !dbg !14058
  %106 = load float, float* %factor161, align 8, !dbg !14058
  call void @mul_v3_fl(float* %arraydecay160, float %106), !dbg !14059
  %107 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14060
  %flag162 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %107, i32 0, i32 1, !dbg !14062
  %108 = load i32, i32* %flag162, align 4, !dbg !14062
  %and163 = and i32 %108, 5, !dbg !14063
  %tobool164 = icmp ne i32 %and163, 0, !dbg !14063
  br i1 %tobool164, label %if.then165, label %if.end169, !dbg !14064

if.then165:                                       ; preds = %if.end159
  %109 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14065
  %smtx166 = getelementptr inbounds %struct.TransData, %struct.TransData* %109, i32 0, i32 9, !dbg !14067
  %arraydecay167 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smtx166, i64 0, i64 0, !dbg !14065
  %arraydecay168 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14068
  call void @mul_m3_v3([3 x float]* %arraydecay167, float* %arraydecay168), !dbg !14069
  br label %if.end169, !dbg !14070

if.end169:                                        ; preds = %if.then165, %if.end159
  %110 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14071
  %protectflag170 = getelementptr inbounds %struct.TransData, %struct.TransData* %110, i32 0, i32 17, !dbg !14072
  %111 = load i16, i16* %protectflag170, align 4, !dbg !14072
  %arraydecay171 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14073
  call void @protectedTransBits(i16 signext %111, float* %arraydecay171), !dbg !14074
  %112 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14075
  %loc = getelementptr inbounds %struct.TransData, %struct.TransData* %112, i32 0, i32 3, !dbg !14076
  %113 = load float*, float** %loc, align 8, !dbg !14076
  %114 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14077
  %iloc172 = getelementptr inbounds %struct.TransData, %struct.TransData* %114, i32 0, i32 4, !dbg !14078
  %arraydecay173 = getelementptr inbounds [3 x float], [3 x float]* %iloc172, i64 0, i64 0, !dbg !14077
  %arraydecay174 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14079
  call void @add_v3_v3v3(float* %113, float* %arraydecay173, float* %arraydecay174), !dbg !14080
  %115 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14081
  %116 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14082
  call void @constraintTransLim(%struct.TransInfo* %115, %struct.TransData* %116), !dbg !14083
  ret void, !dbg !14084
}

declare dso_local zeroext i8 @clipUVTransform(%struct.TransInfo*, float*, i8 zeroext) #2

declare dso_local void @clipUVData(%struct.TransInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @transdata_check_local_center(%struct.TransInfo* %t, i16 signext %around) #0 !dbg !14085 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %around.addr = alloca i16, align 2
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !14088, metadata !DIExpression()), !dbg !14089
  store i16 %around, i16* %around.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %around.addr, metadata !14090, metadata !DIExpression()), !dbg !14091
  %0 = load i16, i16* %around.addr, align 2, !dbg !14092
  %conv = sext i16 %0 to i32, !dbg !14092
  %cmp = icmp eq i32 %conv, 2, !dbg !14093
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !14094

land.rhs:                                         ; preds = %entry
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14095
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 1, !dbg !14096
  %2 = load i32, i32* %flag, align 4, !dbg !14096
  %and = and i32 %2, 5, !dbg !14097
  %tobool = icmp ne i32 %and, 0, !dbg !14097
  br i1 %tobool, label %lor.end, label %lor.lhs.false, !dbg !14098

lor.lhs.false:                                    ; preds = %land.rhs
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14099
  %obedit = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 63, !dbg !14100
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !14100
  %tobool2 = icmp ne %struct.Object* %4, null, !dbg !14099
  br i1 %tobool2, label %land.lhs.true, label %lor.lhs.false25, !dbg !14101

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14102
  %obedit3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 63, !dbg !14102
  %6 = load %struct.Object*, %struct.Object** %obedit3, align 8, !dbg !14102
  %type = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 3, !dbg !14102
  %7 = load i16, i16* %type, align 8, !dbg !14102
  %conv4 = sext i16 %7 to i32, !dbg !14102
  %cmp5 = icmp eq i32 %conv4, 1, !dbg !14102
  br i1 %cmp5, label %lor.end, label %lor.lhs.false7, !dbg !14102

lor.lhs.false7:                                   ; preds = %land.lhs.true
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14102
  %obedit8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 63, !dbg !14102
  %9 = load %struct.Object*, %struct.Object** %obedit8, align 8, !dbg !14102
  %type9 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 3, !dbg !14102
  %10 = load i16, i16* %type9, align 8, !dbg !14102
  %conv10 = sext i16 %10 to i32, !dbg !14102
  %cmp11 = icmp eq i32 %conv10, 2, !dbg !14102
  br i1 %cmp11, label %lor.end, label %lor.lhs.false13, !dbg !14102

lor.lhs.false13:                                  ; preds = %lor.lhs.false7
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14102
  %obedit14 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 63, !dbg !14102
  %12 = load %struct.Object*, %struct.Object** %obedit14, align 8, !dbg !14102
  %type15 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 3, !dbg !14102
  %13 = load i16, i16* %type15, align 8, !dbg !14102
  %conv16 = sext i16 %13 to i32, !dbg !14102
  %cmp17 = icmp eq i32 %conv16, 5, !dbg !14102
  br i1 %cmp17, label %lor.end, label %lor.lhs.false19, !dbg !14102

lor.lhs.false19:                                  ; preds = %lor.lhs.false13
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14102
  %obedit20 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 63, !dbg !14102
  %15 = load %struct.Object*, %struct.Object** %obedit20, align 8, !dbg !14102
  %type21 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 3, !dbg !14102
  %16 = load i16, i16* %type21, align 8, !dbg !14102
  %conv22 = sext i16 %16 to i32, !dbg !14102
  %cmp23 = icmp eq i32 %conv22, 25, !dbg !14102
  br i1 %cmp23, label %lor.end, label %lor.lhs.false25, !dbg !14103

lor.lhs.false25:                                  ; preds = %lor.lhs.false19, %lor.lhs.false
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14104
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 33, !dbg !14105
  %18 = load i8, i8* %spacetype, align 8, !dbg !14105
  %conv26 = zext i8 %18 to i32, !dbg !14104
  %cmp27 = icmp eq i32 %conv26, 2, !dbg !14106
  br i1 %cmp27, label %lor.end, label %lor.rhs, !dbg !14107

lor.rhs:                                          ; preds = %lor.lhs.false25
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14108
  %options = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 4, !dbg !14109
  %20 = load i32, i32* %options, align 8, !dbg !14109
  %and29 = and i32 %20, 448, !dbg !14110
  %tobool30 = icmp ne i32 %and29, 0, !dbg !14107
  br label %lor.end, !dbg !14107

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false25, %lor.lhs.false19, %lor.lhs.false13, %lor.lhs.false7, %land.lhs.true, %land.rhs
  %21 = phi i1 [ true, %lor.lhs.false25 ], [ true, %lor.lhs.false19 ], [ true, %lor.lhs.false13 ], [ true, %lor.lhs.false7 ], [ true, %land.lhs.true ], [ true, %land.rhs ], [ %tobool30, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %22 = phi i1 [ false, %entry ], [ %21, %lor.end ], !dbg !14111
  %land.ext = zext i1 %22 to i32, !dbg !14094
  %conv31 = trunc i32 %land.ext to i8, !dbg !14112
  ret i8 %conv31, !dbg !14113
}

; Function Attrs: noinline nounwind uwtable
define internal void @TransMat3ToSize([3 x float]* %mat, [3 x float]* %smat, float* %size) #0 !dbg !14114 {
entry:
  %mat.addr = alloca [3 x float]*, align 8
  %smat.addr = alloca [3 x float]*, align 8
  %size.addr = alloca float*, align 8
  %vec = alloca [3 x float], align 4
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !14117, metadata !DIExpression()), !dbg !14118
  store [3 x float]* %smat, [3 x float]** %smat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %smat.addr, metadata !14119, metadata !DIExpression()), !dbg !14120
  store float* %size, float** %size.addr, align 8
  call void @llvm.dbg.declare(metadata float** %size.addr, metadata !14121, metadata !DIExpression()), !dbg !14122
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !14123, metadata !DIExpression()), !dbg !14124
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14125
  %0 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !14126
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %0, i64 0, !dbg !14126
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !14126
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay1), !dbg !14127
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14128
  %call = call float @normalize_v3(float* %arraydecay2), !dbg !14129
  %1 = load float*, float** %size.addr, align 8, !dbg !14130
  %arrayidx3 = getelementptr inbounds float, float* %1, i64 0, !dbg !14130
  store float %call, float* %arrayidx3, align 4, !dbg !14131
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14132
  %2 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !14133
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %2, i64 1, !dbg !14133
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx5, i64 0, i64 0, !dbg !14133
  call void @copy_v3_v3(float* %arraydecay4, float* %arraydecay6), !dbg !14134
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14135
  %call8 = call float @normalize_v3(float* %arraydecay7), !dbg !14136
  %3 = load float*, float** %size.addr, align 8, !dbg !14137
  %arrayidx9 = getelementptr inbounds float, float* %3, i64 1, !dbg !14137
  store float %call8, float* %arrayidx9, align 4, !dbg !14138
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14139
  %4 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !14140
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %4, i64 2, !dbg !14140
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 0, !dbg !14140
  call void @copy_v3_v3(float* %arraydecay10, float* %arraydecay12), !dbg !14141
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14142
  %call14 = call float @normalize_v3(float* %arraydecay13), !dbg !14143
  %5 = load float*, float** %size.addr, align 8, !dbg !14144
  %arrayidx15 = getelementptr inbounds float, float* %5, i64 2, !dbg !14144
  store float %call14, float* %arrayidx15, align 4, !dbg !14145
  %6 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !14146
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %6, i64 0, !dbg !14146
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 0, !dbg !14146
  %7 = load [3 x float]*, [3 x float]** %smat.addr, align 8, !dbg !14148
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %7, i64 0, !dbg !14148
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx18, i64 0, i64 0, !dbg !14148
  %call20 = call i32 @tx_vec_sign_flip(float* %arraydecay17, float* %arraydecay19), !dbg !14149
  %tobool = icmp ne i32 %call20, 0, !dbg !14149
  br i1 %tobool, label %if.then, label %if.end, !dbg !14150

if.then:                                          ; preds = %entry
  %8 = load float*, float** %size.addr, align 8, !dbg !14151
  %arrayidx21 = getelementptr inbounds float, float* %8, i64 0, !dbg !14151
  %9 = load float, float* %arrayidx21, align 4, !dbg !14151
  %fneg = fneg float %9, !dbg !14152
  %10 = load float*, float** %size.addr, align 8, !dbg !14153
  %arrayidx22 = getelementptr inbounds float, float* %10, i64 0, !dbg !14153
  store float %fneg, float* %arrayidx22, align 4, !dbg !14154
  br label %if.end, !dbg !14153

if.end:                                           ; preds = %if.then, %entry
  %11 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !14155
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %11, i64 1, !dbg !14155
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx23, i64 0, i64 0, !dbg !14155
  %12 = load [3 x float]*, [3 x float]** %smat.addr, align 8, !dbg !14157
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %12, i64 1, !dbg !14157
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx25, i64 0, i64 0, !dbg !14157
  %call27 = call i32 @tx_vec_sign_flip(float* %arraydecay24, float* %arraydecay26), !dbg !14158
  %tobool28 = icmp ne i32 %call27, 0, !dbg !14158
  br i1 %tobool28, label %if.then29, label %if.end33, !dbg !14159

if.then29:                                        ; preds = %if.end
  %13 = load float*, float** %size.addr, align 8, !dbg !14160
  %arrayidx30 = getelementptr inbounds float, float* %13, i64 1, !dbg !14160
  %14 = load float, float* %arrayidx30, align 4, !dbg !14160
  %fneg31 = fneg float %14, !dbg !14161
  %15 = load float*, float** %size.addr, align 8, !dbg !14162
  %arrayidx32 = getelementptr inbounds float, float* %15, i64 1, !dbg !14162
  store float %fneg31, float* %arrayidx32, align 4, !dbg !14163
  br label %if.end33, !dbg !14162

if.end33:                                         ; preds = %if.then29, %if.end
  %16 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !14164
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %16, i64 2, !dbg !14164
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx34, i64 0, i64 0, !dbg !14164
  %17 = load [3 x float]*, [3 x float]** %smat.addr, align 8, !dbg !14166
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %17, i64 2, !dbg !14166
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx36, i64 0, i64 0, !dbg !14166
  %call38 = call i32 @tx_vec_sign_flip(float* %arraydecay35, float* %arraydecay37), !dbg !14167
  %tobool39 = icmp ne i32 %call38, 0, !dbg !14167
  br i1 %tobool39, label %if.then40, label %if.end44, !dbg !14168

if.then40:                                        ; preds = %if.end33
  %18 = load float*, float** %size.addr, align 8, !dbg !14169
  %arrayidx41 = getelementptr inbounds float, float* %18, i64 2, !dbg !14169
  %19 = load float, float* %arrayidx41, align 4, !dbg !14169
  %fneg42 = fneg float %19, !dbg !14170
  %20 = load float*, float** %size.addr, align 8, !dbg !14171
  %arrayidx43 = getelementptr inbounds float, float* %20, i64 2, !dbg !14171
  store float %fneg42, float* %arrayidx43, align 4, !dbg !14172
  br label %if.end44, !dbg !14171

if.end44:                                         ; preds = %if.then40, %if.end33
  ret void, !dbg !14173
}

declare dso_local void @mat3_to_size(float*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @protectedSizeBits(i16 signext %protectflag, float* %size) #0 !dbg !14174 {
entry:
  %protectflag.addr = alloca i16, align 2
  %size.addr = alloca float*, align 8
  store i16 %protectflag, i16* %protectflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %protectflag.addr, metadata !14177, metadata !DIExpression()), !dbg !14178
  store float* %size, float** %size.addr, align 8
  call void @llvm.dbg.declare(metadata float** %size.addr, metadata !14179, metadata !DIExpression()), !dbg !14180
  %0 = load i16, i16* %protectflag.addr, align 2, !dbg !14181
  %conv = sext i16 %0 to i32, !dbg !14181
  %and = and i32 %conv, 64, !dbg !14183
  %tobool = icmp ne i32 %and, 0, !dbg !14183
  br i1 %tobool, label %if.then, label %if.end, !dbg !14184

if.then:                                          ; preds = %entry
  %1 = load float*, float** %size.addr, align 8, !dbg !14185
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !14185
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !14186
  br label %if.end, !dbg !14185

if.end:                                           ; preds = %if.then, %entry
  %2 = load i16, i16* %protectflag.addr, align 2, !dbg !14187
  %conv1 = sext i16 %2 to i32, !dbg !14187
  %and2 = and i32 %conv1, 128, !dbg !14189
  %tobool3 = icmp ne i32 %and2, 0, !dbg !14189
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !14190

if.then4:                                         ; preds = %if.end
  %3 = load float*, float** %size.addr, align 8, !dbg !14191
  %arrayidx5 = getelementptr inbounds float, float* %3, i64 1, !dbg !14191
  store float 1.000000e+00, float* %arrayidx5, align 4, !dbg !14192
  br label %if.end6, !dbg !14191

if.end6:                                          ; preds = %if.then4, %if.end
  %4 = load i16, i16* %protectflag.addr, align 2, !dbg !14193
  %conv7 = sext i16 %4 to i32, !dbg !14193
  %and8 = and i32 %conv7, 256, !dbg !14195
  %tobool9 = icmp ne i32 %and8, 0, !dbg !14195
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !14196

if.then10:                                        ; preds = %if.end6
  %5 = load float*, float** %size.addr, align 8, !dbg !14197
  %arrayidx11 = getelementptr inbounds float, float* %5, i64 2, !dbg !14197
  store float 1.000000e+00, float* %arrayidx11, align 4, !dbg !14198
  br label %if.end12, !dbg !14197

if.end12:                                         ; preds = %if.then10, %if.end6
  ret void, !dbg !14199
}

; Function Attrs: noinline nounwind uwtable
define internal void @constraintSizeLim(%struct.TransInfo* %t, %struct.TransData* %td) #0 !dbg !14200 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %td.addr = alloca %struct.TransData*, align 8
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %cob = alloca %struct.bConstraintOb, align 8
  %con2 = alloca %struct.bConstraint*, align 8
  %size_sign = alloca [3 x float], align 4
  %size_abs = alloca [3 x float], align 4
  %i = alloca i32, align 4
  %data = alloca %struct.bSizeLimitConstraint*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !14203, metadata !DIExpression()), !dbg !14204
  store %struct.TransData* %td, %struct.TransData** %td.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransData** %td.addr, metadata !14205, metadata !DIExpression()), !dbg !14206
  %0 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14207
  %con = getelementptr inbounds %struct.TransData, %struct.TransData* %0, i32 0, i32 12, !dbg !14209
  %1 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !14209
  %tobool = icmp ne %struct.bConstraint* %1, null, !dbg !14207
  br i1 %tobool, label %land.lhs.true, label %if.end103, !dbg !14210

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14211
  %ext = getelementptr inbounds %struct.TransData, %struct.TransData* %2, i32 0, i32 13, !dbg !14212
  %3 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext, align 8, !dbg !14212
  %tobool1 = icmp ne %struct.TransDataExtension* %3, null, !dbg !14211
  br i1 %tobool1, label %if.then, label %if.end103, !dbg !14213

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !14214, metadata !DIExpression()), !dbg !14325
  %call = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_from_type(i32 7), !dbg !14326
  store %struct.bConstraintTypeInfo* %call, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !14325
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb* %cob, metadata !14327, metadata !DIExpression()), !dbg !14329
  %4 = bitcast %struct.bConstraintOb* %cob to i8*, !dbg !14329
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 160, i1 false), !dbg !14329
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con2, metadata !14330, metadata !DIExpression()), !dbg !14333
  call void @llvm.dbg.declare(metadata [3 x float]* %size_sign, metadata !14334, metadata !DIExpression()), !dbg !14335
  call void @llvm.dbg.declare(metadata [3 x float]* %size_abs, metadata !14336, metadata !DIExpression()), !dbg !14337
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14338, metadata !DIExpression()), !dbg !14339
  %5 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14340
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %5, i32 0, i32 16, !dbg !14342
  %6 = load i32, i32* %flag, align 8, !dbg !14342
  %and = and i32 %6, 32, !dbg !14343
  %tobool3 = icmp ne i32 %and, 0, !dbg !14343
  br i1 %tobool3, label %land.lhs.true4, label %if.else, !dbg !14344

land.lhs.true4:                                   ; preds = %if.then
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14345
  %con5 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 13, !dbg !14346
  %mode = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con5, i32 0, i32 7, !dbg !14347
  %8 = load i32, i32* %mode, align 4, !dbg !14347
  %and6 = and i32 %8, 1, !dbg !14348
  %tobool7 = icmp ne i32 %and6, 0, !dbg !14348
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !14349

if.then8:                                         ; preds = %land.lhs.true4
  br label %if.end103, !dbg !14350

if.else:                                          ; preds = %land.lhs.true4, %if.then
  %9 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14352
  %flag9 = getelementptr inbounds %struct.TransData, %struct.TransData* %9, i32 0, i32 16, !dbg !14355
  %10 = load i32, i32* %flag9, align 8, !dbg !14355
  %and10 = and i32 %10, 32, !dbg !14356
  %tobool11 = icmp ne i32 %and10, 0, !dbg !14356
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !14357

if.then12:                                        ; preds = %if.else
  br label %if.end103, !dbg !14358

if.end:                                           ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !14359
  br label %for.cond, !dbg !14361

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !14362
  %cmp = icmp slt i32 %11, 3, !dbg !14364
  br i1 %cmp, label %for.body, label %for.end, !dbg !14365

for.body:                                         ; preds = %for.cond
  %12 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14366
  %ext13 = getelementptr inbounds %struct.TransData, %struct.TransData* %12, i32 0, i32 13, !dbg !14368
  %13 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext13, align 8, !dbg !14368
  %size = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %13, i32 0, i32 11, !dbg !14369
  %14 = load float*, float** %size, align 8, !dbg !14369
  %15 = load i32, i32* %i, align 4, !dbg !14370
  %idxprom = sext i32 %15 to i64, !dbg !14366
  %arrayidx = getelementptr inbounds float, float* %14, i64 %idxprom, !dbg !14366
  %16 = load float, float* %arrayidx, align 4, !dbg !14366
  %call14 = call float @signf(float %16), !dbg !14371
  %17 = load i32, i32* %i, align 4, !dbg !14372
  %idxprom15 = sext i32 %17 to i64, !dbg !14373
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %size_sign, i64 0, i64 %idxprom15, !dbg !14373
  store float %call14, float* %arrayidx16, align 4, !dbg !14374
  %18 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14375
  %ext17 = getelementptr inbounds %struct.TransData, %struct.TransData* %18, i32 0, i32 13, !dbg !14376
  %19 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext17, align 8, !dbg !14376
  %size18 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %19, i32 0, i32 11, !dbg !14377
  %20 = load float*, float** %size18, align 8, !dbg !14377
  %21 = load i32, i32* %i, align 4, !dbg !14378
  %idxprom19 = sext i32 %21 to i64, !dbg !14375
  %arrayidx20 = getelementptr inbounds float, float* %20, i64 %idxprom19, !dbg !14375
  %22 = load float, float* %arrayidx20, align 4, !dbg !14375
  %23 = call float @llvm.fabs.f32(float %22), !dbg !14379
  %24 = load i32, i32* %i, align 4, !dbg !14380
  %idxprom21 = sext i32 %24 to i64, !dbg !14381
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %size_abs, i64 0, i64 %idxprom21, !dbg !14381
  store float %23, float* %arrayidx22, align 4, !dbg !14382
  br label %for.inc, !dbg !14383

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %i, align 4, !dbg !14384
  %inc = add nsw i32 %25, 1, !dbg !14384
  store i32 %inc, i32* %i, align 4, !dbg !14384
  br label %for.cond, !dbg !14385, !llvm.loop !14386

for.end:                                          ; preds = %for.cond
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !14388
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !14389
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %size_abs, i64 0, i64 0, !dbg !14390
  call void @size_to_mat4([4 x float]* %arraydecay, float* %arraydecay23), !dbg !14391
  br label %if.end24

if.end24:                                         ; preds = %for.end
  %26 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14392
  %con25 = getelementptr inbounds %struct.TransData, %struct.TransData* %26, i32 0, i32 12, !dbg !14394
  %27 = load %struct.bConstraint*, %struct.bConstraint** %con25, align 8, !dbg !14394
  store %struct.bConstraint* %27, %struct.bConstraint** %con2, align 8, !dbg !14395
  br label %for.cond26, !dbg !14396

for.cond26:                                       ; preds = %for.inc78, %if.end24
  %28 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14397
  %tobool27 = icmp ne %struct.bConstraint* %28, null, !dbg !14399
  br i1 %tobool27, label %for.body28, label %for.end79, !dbg !14399

for.body28:                                       ; preds = %for.cond26
  %29 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14400
  %flag29 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %29, i32 0, i32 4, !dbg !14403
  %30 = load i16, i16* %flag29, align 2, !dbg !14403
  %conv = sext i16 %30 to i32, !dbg !14400
  %and30 = and i32 %conv, 516, !dbg !14404
  %tobool31 = icmp ne i32 %and30, 0, !dbg !14404
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !14405

if.then32:                                        ; preds = %for.body28
  br label %for.inc78, !dbg !14406

if.end33:                                         ; preds = %for.body28
  %31 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14407
  %enforce = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %31, i32 0, i32 9, !dbg !14409
  %32 = load float, float* %enforce, align 8, !dbg !14409
  %cmp34 = fcmp oeq float %32, 0.000000e+00, !dbg !14410
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !14411

if.then36:                                        ; preds = %if.end33
  br label %for.inc78, !dbg !14412

if.end37:                                         ; preds = %if.end33
  %33 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14413
  %type = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %33, i32 0, i32 3, !dbg !14415
  %34 = load i16, i16* %type, align 8, !dbg !14415
  %conv38 = sext i16 %34 to i32, !dbg !14413
  %cmp39 = icmp eq i32 %conv38, 7, !dbg !14416
  br i1 %cmp39, label %if.then41, label %if.end77, !dbg !14417

if.then41:                                        ; preds = %if.end37
  call void @llvm.dbg.declare(metadata %struct.bSizeLimitConstraint** %data, metadata !14418, metadata !DIExpression()), !dbg !14432
  %35 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14433
  %data42 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %35, i32 0, i32 2, !dbg !14434
  %36 = load i8*, i8** %data42, align 8, !dbg !14434
  %37 = bitcast i8* %36 to %struct.bSizeLimitConstraint*, !dbg !14433
  store %struct.bSizeLimitConstraint* %37, %struct.bSizeLimitConstraint** %data, align 8, !dbg !14432
  %38 = load %struct.bSizeLimitConstraint*, %struct.bSizeLimitConstraint** %data, align 8, !dbg !14435
  %flag2 = getelementptr inbounds %struct.bSizeLimitConstraint, %struct.bSizeLimitConstraint* %38, i32 0, i32 7, !dbg !14437
  %39 = load i16, i16* %flag2, align 2, !dbg !14437
  %conv43 = sext i16 %39 to i32, !dbg !14435
  %and44 = and i32 %conv43, 2, !dbg !14438
  %cmp45 = icmp eq i32 %and44, 0, !dbg !14439
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !14440

if.then47:                                        ; preds = %if.then41
  br label %for.inc78, !dbg !14441

if.end48:                                         ; preds = %if.then41
  %40 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14442
  %ownspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %40, i32 0, i32 5, !dbg !14444
  %41 = load i8, i8* %ownspace, align 4, !dbg !14444
  %conv49 = zext i8 %41 to i32, !dbg !14442
  %cmp50 = icmp eq i32 %conv49, 0, !dbg !14445
  br i1 %cmp50, label %if.then52, label %if.else58, !dbg !14446

if.then52:                                        ; preds = %if.end48
  %matrix53 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !14447
  %arraydecay54 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix53, i64 0, i64 0, !dbg !14449
  %42 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14450
  %mtx = getelementptr inbounds %struct.TransData, %struct.TransData* %42, i32 0, i32 8, !dbg !14451
  %arraydecay55 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mtx, i64 0, i64 0, !dbg !14450
  %matrix56 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !14452
  %arraydecay57 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix56, i64 0, i64 0, !dbg !14453
  call void @mul_m4_m3m4([4 x float]* %arraydecay54, [3 x float]* %arraydecay55, [4 x float]* %arraydecay57), !dbg !14454
  br label %if.end65, !dbg !14455

if.else58:                                        ; preds = %if.end48
  %43 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14456
  %ownspace59 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %43, i32 0, i32 5, !dbg !14458
  %44 = load i8, i8* %ownspace59, align 4, !dbg !14458
  %conv60 = zext i8 %44 to i32, !dbg !14456
  %cmp61 = icmp ne i32 %conv60, 1, !dbg !14459
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !14460

if.then63:                                        ; preds = %if.else58
  br label %for.inc78, !dbg !14461

if.end64:                                         ; preds = %if.else58
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then52
  %45 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !14463
  %evaluate_constraint = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %45, i32 0, i32 11, !dbg !14464
  %46 = load void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)** %evaluate_constraint, align 8, !dbg !14464
  %47 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14465
  call void %46(%struct.bConstraint* %47, %struct.bConstraintOb* %cob, %struct.ListBase* null), !dbg !14463
  %48 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14466
  %ownspace66 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %48, i32 0, i32 5, !dbg !14468
  %49 = load i8, i8* %ownspace66, align 4, !dbg !14468
  %conv67 = zext i8 %49 to i32, !dbg !14466
  %cmp68 = icmp eq i32 %conv67, 0, !dbg !14469
  br i1 %cmp68, label %if.then70, label %if.end76, !dbg !14470

if.then70:                                        ; preds = %if.end65
  %matrix71 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !14471
  %arraydecay72 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix71, i64 0, i64 0, !dbg !14473
  %50 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14474
  %smtx = getelementptr inbounds %struct.TransData, %struct.TransData* %50, i32 0, i32 9, !dbg !14475
  %arraydecay73 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smtx, i64 0, i64 0, !dbg !14474
  %matrix74 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !14476
  %arraydecay75 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix74, i64 0, i64 0, !dbg !14477
  call void @mul_m4_m3m4([4 x float]* %arraydecay72, [3 x float]* %arraydecay73, [4 x float]* %arraydecay75), !dbg !14478
  br label %if.end76, !dbg !14479

if.end76:                                         ; preds = %if.then70, %if.end65
  br label %if.end77, !dbg !14480

if.end77:                                         ; preds = %if.end76, %if.end37
  br label %for.inc78, !dbg !14481

for.inc78:                                        ; preds = %if.end77, %if.then63, %if.then47, %if.then36, %if.then32
  %51 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14482
  %next = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %51, i32 0, i32 0, !dbg !14483
  %52 = load %struct.bConstraint*, %struct.bConstraint** %next, align 8, !dbg !14483
  store %struct.bConstraint* %52, %struct.bConstraint** %con2, align 8, !dbg !14484
  br label %for.cond26, !dbg !14485, !llvm.loop !14486

for.end79:                                        ; preds = %for.cond26
  %53 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14488
  %flag80 = getelementptr inbounds %struct.TransData, %struct.TransData* %53, i32 0, i32 16, !dbg !14490
  %54 = load i32, i32* %flag80, align 8, !dbg !14490
  %and81 = and i32 %54, 32, !dbg !14491
  %tobool82 = icmp ne i32 %and81, 0, !dbg !14491
  br i1 %tobool82, label %land.lhs.true83, label %if.else89, !dbg !14492

land.lhs.true83:                                  ; preds = %for.end79
  %55 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14493
  %con84 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %55, i32 0, i32 13, !dbg !14494
  %mode85 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con84, i32 0, i32 7, !dbg !14495
  %56 = load i32, i32* %mode85, align 4, !dbg !14495
  %and86 = and i32 %56, 1, !dbg !14496
  %tobool87 = icmp ne i32 %and86, 0, !dbg !14496
  br i1 %tobool87, label %if.else89, label %if.then88, !dbg !14497

if.then88:                                        ; preds = %land.lhs.true83
  br label %if.end103, !dbg !14498

if.else89:                                        ; preds = %land.lhs.true83, %for.end79
  %57 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14500
  %flag90 = getelementptr inbounds %struct.TransData, %struct.TransData* %57, i32 0, i32 16, !dbg !14503
  %58 = load i32, i32* %flag90, align 8, !dbg !14503
  %and91 = and i32 %58, 32, !dbg !14504
  %tobool92 = icmp ne i32 %and91, 0, !dbg !14504
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !14505

if.then93:                                        ; preds = %if.else89
  br label %if.end103, !dbg !14506

if.end94:                                         ; preds = %if.else89
  %59 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14507
  %ext95 = getelementptr inbounds %struct.TransData, %struct.TransData* %59, i32 0, i32 13, !dbg !14508
  %60 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext95, align 8, !dbg !14508
  %size96 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %60, i32 0, i32 11, !dbg !14509
  %61 = load float*, float** %size96, align 8, !dbg !14509
  %matrix97 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !14510
  %arraydecay98 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix97, i64 0, i64 0, !dbg !14511
  call void @mat4_to_size(float* %61, [4 x float]* %arraydecay98), !dbg !14512
  %62 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14513
  %ext99 = getelementptr inbounds %struct.TransData, %struct.TransData* %62, i32 0, i32 13, !dbg !14514
  %63 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext99, align 8, !dbg !14514
  %size100 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %63, i32 0, i32 11, !dbg !14515
  %64 = load float*, float** %size100, align 8, !dbg !14515
  %arraydecay101 = getelementptr inbounds [3 x float], [3 x float]* %size_sign, i64 0, i64 0, !dbg !14516
  call void @mul_v3_v3(float* %64, float* %arraydecay101), !dbg !14517
  br label %if.end102

if.end102:                                        ; preds = %if.end94
  br label %if.end103, !dbg !14518

if.end103:                                        ; preds = %if.then8, %if.then12, %if.then88, %if.then93, %if.end102, %land.lhs.true, %entry
  ret void, !dbg !14519
}

; Function Attrs: noinline nounwind uwtable
define internal void @protectedTransBits(i16 signext %protectflag, float* %vec) #0 !dbg !14520 {
entry:
  %protectflag.addr = alloca i16, align 2
  %vec.addr = alloca float*, align 8
  store i16 %protectflag, i16* %protectflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %protectflag.addr, metadata !14521, metadata !DIExpression()), !dbg !14522
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !14523, metadata !DIExpression()), !dbg !14524
  %0 = load i16, i16* %protectflag.addr, align 2, !dbg !14525
  %conv = sext i16 %0 to i32, !dbg !14525
  %and = and i32 %conv, 1, !dbg !14527
  %tobool = icmp ne i32 %and, 0, !dbg !14527
  br i1 %tobool, label %if.then, label %if.end, !dbg !14528

if.then:                                          ; preds = %entry
  %1 = load float*, float** %vec.addr, align 8, !dbg !14529
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !14529
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !14530
  br label %if.end, !dbg !14529

if.end:                                           ; preds = %if.then, %entry
  %2 = load i16, i16* %protectflag.addr, align 2, !dbg !14531
  %conv1 = sext i16 %2 to i32, !dbg !14531
  %and2 = and i32 %conv1, 2, !dbg !14533
  %tobool3 = icmp ne i32 %and2, 0, !dbg !14533
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !14534

if.then4:                                         ; preds = %if.end
  %3 = load float*, float** %vec.addr, align 8, !dbg !14535
  %arrayidx5 = getelementptr inbounds float, float* %3, i64 1, !dbg !14535
  store float 0.000000e+00, float* %arrayidx5, align 4, !dbg !14536
  br label %if.end6, !dbg !14535

if.end6:                                          ; preds = %if.then4, %if.end
  %4 = load i16, i16* %protectflag.addr, align 2, !dbg !14537
  %conv7 = sext i16 %4 to i32, !dbg !14537
  %and8 = and i32 %conv7, 4, !dbg !14539
  %tobool9 = icmp ne i32 %and8, 0, !dbg !14539
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !14540

if.then10:                                        ; preds = %if.end6
  %5 = load float*, float** %vec.addr, align 8, !dbg !14541
  %arrayidx11 = getelementptr inbounds float, float* %5, i64 2, !dbg !14541
  store float 0.000000e+00, float* %arrayidx11, align 4, !dbg !14542
  br label %if.end12, !dbg !14541

if.end12:                                         ; preds = %if.then10, %if.end6
  ret void, !dbg !14543
}

; Function Attrs: noinline nounwind uwtable
define internal void @constraintTransLim(%struct.TransInfo* %t, %struct.TransData* %td) #0 !dbg !14544 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %td.addr = alloca %struct.TransData*, align 8
  %ctiLoc = alloca %struct.bConstraintTypeInfo*, align 8
  %ctiDist = alloca %struct.bConstraintTypeInfo*, align 8
  %cob = alloca %struct.bConstraintOb, align 8
  %con2 = alloca %struct.bConstraint*, align 8
  %ctime = alloca float, align 4
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %targets = alloca %struct.ListBase, align 8
  %data = alloca %struct.bLocLimitConstraint*, align 8
  %data29 = alloca %struct.bDistLimitConstraint*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !14545, metadata !DIExpression()), !dbg !14546
  store %struct.TransData* %td, %struct.TransData** %td.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransData** %td.addr, metadata !14547, metadata !DIExpression()), !dbg !14548
  %0 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14549
  %con = getelementptr inbounds %struct.TransData, %struct.TransData* %0, i32 0, i32 12, !dbg !14551
  %1 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !14551
  %tobool = icmp ne %struct.bConstraint* %1, null, !dbg !14549
  br i1 %tobool, label %if.then, label %if.end75, !dbg !14552

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %ctiLoc, metadata !14553, metadata !DIExpression()), !dbg !14555
  %call = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_from_type(i32 6), !dbg !14556
  store %struct.bConstraintTypeInfo* %call, %struct.bConstraintTypeInfo** %ctiLoc, align 8, !dbg !14555
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %ctiDist, metadata !14557, metadata !DIExpression()), !dbg !14558
  %call1 = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_from_type(i32 14), !dbg !14559
  store %struct.bConstraintTypeInfo* %call1, %struct.bConstraintTypeInfo** %ctiDist, align 8, !dbg !14558
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb* %cob, metadata !14560, metadata !DIExpression()), !dbg !14561
  %2 = bitcast %struct.bConstraintOb* %cob to i8*, !dbg !14561
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 160, i1 false), !dbg !14561
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con2, metadata !14562, metadata !DIExpression()), !dbg !14563
  call void @llvm.dbg.declare(metadata float* %ctime, metadata !14564, metadata !DIExpression()), !dbg !14565
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14566
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 56, !dbg !14567
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !14567
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 22, !dbg !14568
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !14569
  %5 = load i32, i32* %cfra, align 8, !dbg !14569
  %conv = sitofp i32 %5 to float, !dbg !14570
  store float %conv, float* %ctime, align 4, !dbg !14565
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !14571
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !14572
  call void @unit_m4([4 x float]* %arraydecay), !dbg !14573
  %matrix3 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !14574
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix3, i64 0, i64 3, !dbg !14575
  %arraydecay4 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !14575
  %6 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14576
  %loc = getelementptr inbounds %struct.TransData, %struct.TransData* %6, i32 0, i32 3, !dbg !14577
  %7 = load float*, float** %loc, align 8, !dbg !14577
  call void @copy_v3_v3(float* %arraydecay4, float* %7), !dbg !14578
  %8 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14579
  %con5 = getelementptr inbounds %struct.TransData, %struct.TransData* %8, i32 0, i32 12, !dbg !14581
  %9 = load %struct.bConstraint*, %struct.bConstraint** %con5, align 8, !dbg !14581
  store %struct.bConstraint* %9, %struct.bConstraint** %con2, align 8, !dbg !14582
  br label %for.cond, !dbg !14583

for.cond:                                         ; preds = %for.inc, %if.then
  %10 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14584
  %tobool6 = icmp ne %struct.bConstraint* %10, null, !dbg !14586
  br i1 %tobool6, label %for.body, label %for.end, !dbg !14586

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !14587, metadata !DIExpression()), !dbg !14589
  store %struct.bConstraintTypeInfo* null, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !14589
  call void @llvm.dbg.declare(metadata %struct.ListBase* %targets, metadata !14590, metadata !DIExpression()), !dbg !14591
  %11 = bitcast %struct.ListBase* %targets to i8*, !dbg !14591
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false), !dbg !14591
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14592
  %flag = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %12, i32 0, i32 4, !dbg !14594
  %13 = load i16, i16* %flag, align 2, !dbg !14594
  %conv7 = sext i16 %13 to i32, !dbg !14592
  %and = and i32 %conv7, 516, !dbg !14595
  %tobool8 = icmp ne i32 %and, 0, !dbg !14595
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !14596

if.then9:                                         ; preds = %for.body
  br label %for.inc, !dbg !14597

if.end:                                           ; preds = %for.body
  %14 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14598
  %enforce = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %14, i32 0, i32 9, !dbg !14600
  %15 = load float, float* %enforce, align 8, !dbg !14600
  %cmp = fcmp oeq float %15, 0.000000e+00, !dbg !14601
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !14602

if.then11:                                        ; preds = %if.end
  br label %for.inc, !dbg !14603

if.end12:                                         ; preds = %if.end
  %16 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14604
  %type = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %16, i32 0, i32 3, !dbg !14606
  %17 = load i16, i16* %type, align 8, !dbg !14606
  %conv13 = sext i16 %17 to i32, !dbg !14604
  %cmp14 = icmp eq i32 %conv13, 6, !dbg !14607
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !14608

if.then16:                                        ; preds = %if.end12
  call void @llvm.dbg.declare(metadata %struct.bLocLimitConstraint** %data, metadata !14609, metadata !DIExpression()), !dbg !14623
  %18 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14624
  %data17 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %18, i32 0, i32 2, !dbg !14625
  %19 = load i8*, i8** %data17, align 8, !dbg !14625
  %20 = bitcast i8* %19 to %struct.bLocLimitConstraint*, !dbg !14624
  store %struct.bLocLimitConstraint* %20, %struct.bLocLimitConstraint** %data, align 8, !dbg !14623
  %21 = load %struct.bLocLimitConstraint*, %struct.bLocLimitConstraint** %data, align 8, !dbg !14626
  %flag2 = getelementptr inbounds %struct.bLocLimitConstraint, %struct.bLocLimitConstraint* %21, i32 0, i32 7, !dbg !14628
  %22 = load i16, i16* %flag2, align 2, !dbg !14628
  %conv18 = sext i16 %22 to i32, !dbg !14626
  %and19 = and i32 %conv18, 2, !dbg !14629
  %cmp20 = icmp eq i32 %and19, 0, !dbg !14630
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !14631

if.then22:                                        ; preds = %if.then16
  br label %for.inc, !dbg !14632

if.end23:                                         ; preds = %if.then16
  %23 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %ctiLoc, align 8, !dbg !14633
  store %struct.bConstraintTypeInfo* %23, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !14634
  br label %if.end39, !dbg !14635

if.else:                                          ; preds = %if.end12
  %24 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14636
  %type24 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %24, i32 0, i32 3, !dbg !14638
  %25 = load i16, i16* %type24, align 8, !dbg !14638
  %conv25 = sext i16 %25 to i32, !dbg !14636
  %cmp26 = icmp eq i32 %conv25, 14, !dbg !14639
  br i1 %cmp26, label %if.then28, label %if.end38, !dbg !14640

if.then28:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.bDistLimitConstraint** %data29, metadata !14641, metadata !DIExpression()), !dbg !14654
  %26 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14655
  %data30 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %26, i32 0, i32 2, !dbg !14656
  %27 = load i8*, i8** %data30, align 8, !dbg !14656
  %28 = bitcast i8* %27 to %struct.bDistLimitConstraint*, !dbg !14655
  store %struct.bDistLimitConstraint* %28, %struct.bDistLimitConstraint** %data29, align 8, !dbg !14654
  %29 = load %struct.bDistLimitConstraint*, %struct.bDistLimitConstraint** %data29, align 8, !dbg !14657
  %flag31 = getelementptr inbounds %struct.bDistLimitConstraint, %struct.bDistLimitConstraint* %29, i32 0, i32 4, !dbg !14659
  %30 = load i16, i16* %flag31, align 8, !dbg !14659
  %conv32 = sext i16 %30 to i32, !dbg !14657
  %and33 = and i32 %conv32, 2, !dbg !14660
  %cmp34 = icmp eq i32 %and33, 0, !dbg !14661
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !14662

if.then36:                                        ; preds = %if.then28
  br label %for.inc, !dbg !14663

if.end37:                                         ; preds = %if.then28
  %31 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %ctiDist, align 8, !dbg !14664
  store %struct.bConstraintTypeInfo* %31, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !14665
  br label %if.end38, !dbg !14666

if.end38:                                         ; preds = %if.end37, %if.else
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end23
  %32 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !14667
  %tobool40 = icmp ne %struct.bConstraintTypeInfo* %32, null, !dbg !14667
  br i1 %tobool40, label %if.then41, label %if.end70, !dbg !14669

if.then41:                                        ; preds = %if.end39
  %33 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14670
  %ownspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %33, i32 0, i32 5, !dbg !14673
  %34 = load i8, i8* %ownspace, align 4, !dbg !14673
  %conv42 = zext i8 %34 to i32, !dbg !14670
  %cmp43 = icmp eq i32 %conv42, 0, !dbg !14674
  br i1 %cmp43, label %if.then45, label %if.else51, !dbg !14675

if.then45:                                        ; preds = %if.then41
  %matrix46 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !14676
  %arraydecay47 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix46, i64 0, i64 0, !dbg !14678
  %35 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14679
  %mtx = getelementptr inbounds %struct.TransData, %struct.TransData* %35, i32 0, i32 8, !dbg !14680
  %arraydecay48 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mtx, i64 0, i64 0, !dbg !14679
  %matrix49 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !14681
  %arraydecay50 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix49, i64 0, i64 0, !dbg !14682
  call void @mul_m4_m3m4([4 x float]* %arraydecay47, [3 x float]* %arraydecay48, [4 x float]* %arraydecay50), !dbg !14683
  br label %if.end58, !dbg !14684

if.else51:                                        ; preds = %if.then41
  %36 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14685
  %ownspace52 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %36, i32 0, i32 5, !dbg !14687
  %37 = load i8, i8* %ownspace52, align 4, !dbg !14687
  %conv53 = zext i8 %37 to i32, !dbg !14685
  %cmp54 = icmp ne i32 %conv53, 1, !dbg !14688
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !14689

if.then56:                                        ; preds = %if.else51
  br label %for.inc, !dbg !14690

if.end57:                                         ; preds = %if.else51
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then45
  %38 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14692
  %39 = load float, float* %ctime, align 4, !dbg !14693
  call void @BKE_constraint_targets_for_solving_get(%struct.bConstraint* %38, %struct.bConstraintOb* %cob, %struct.ListBase* %targets, float %39), !dbg !14694
  %40 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !14695
  %evaluate_constraint = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %40, i32 0, i32 11, !dbg !14696
  %41 = load void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)** %evaluate_constraint, align 8, !dbg !14696
  %42 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14697
  call void %41(%struct.bConstraint* %42, %struct.bConstraintOb* %cob, %struct.ListBase* %targets), !dbg !14695
  %43 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14698
  %ownspace59 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %43, i32 0, i32 5, !dbg !14700
  %44 = load i8, i8* %ownspace59, align 4, !dbg !14700
  %conv60 = zext i8 %44 to i32, !dbg !14698
  %cmp61 = icmp eq i32 %conv60, 0, !dbg !14701
  br i1 %cmp61, label %if.then63, label %if.end69, !dbg !14702

if.then63:                                        ; preds = %if.end58
  %matrix64 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !14703
  %arraydecay65 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix64, i64 0, i64 0, !dbg !14705
  %45 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14706
  %smtx = getelementptr inbounds %struct.TransData, %struct.TransData* %45, i32 0, i32 9, !dbg !14707
  %arraydecay66 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smtx, i64 0, i64 0, !dbg !14706
  %matrix67 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !14708
  %arraydecay68 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix67, i64 0, i64 0, !dbg !14709
  call void @mul_m4_m3m4([4 x float]* %arraydecay65, [3 x float]* %arraydecay66, [4 x float]* %arraydecay68), !dbg !14710
  br label %if.end69, !dbg !14711

if.end69:                                         ; preds = %if.then63, %if.end58
  call void @BLI_freelistN(%struct.ListBase* %targets), !dbg !14712
  br label %if.end70, !dbg !14713

if.end70:                                         ; preds = %if.end69, %if.end39
  br label %for.inc, !dbg !14714

for.inc:                                          ; preds = %if.end70, %if.then56, %if.then36, %if.then22, %if.then11, %if.then9
  %46 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !14715
  %next = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %46, i32 0, i32 0, !dbg !14716
  %47 = load %struct.bConstraint*, %struct.bConstraint** %next, align 8, !dbg !14716
  store %struct.bConstraint* %47, %struct.bConstraint** %con2, align 8, !dbg !14717
  br label %for.cond, !dbg !14718, !llvm.loop !14719

for.end:                                          ; preds = %for.cond
  %48 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !14721
  %loc71 = getelementptr inbounds %struct.TransData, %struct.TransData* %48, i32 0, i32 3, !dbg !14722
  %49 = load float*, float** %loc71, align 8, !dbg !14722
  %matrix72 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !14723
  %arrayidx73 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix72, i64 0, i64 3, !dbg !14724
  %arraydecay74 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx73, i64 0, i64 0, !dbg !14724
  call void @copy_v3_v3(float* %49, float* %arraydecay74), !dbg !14725
  br label %if.end75, !dbg !14726

if.end75:                                         ; preds = %for.end, %entry
  ret void, !dbg !14727
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @tx_vec_sign_flip(float* %a, float* %b) #0 !dbg !14728 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !14731, metadata !DIExpression()), !dbg !14732
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !14733, metadata !DIExpression()), !dbg !14734
  %0 = load float*, float** %a.addr, align 8, !dbg !14735
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !14735
  %1 = load float, float* %arrayidx, align 4, !dbg !14735
  %call = call i32 @tx_sign(float %1), !dbg !14736
  %2 = load float*, float** %b.addr, align 8, !dbg !14737
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !14737
  %3 = load float, float* %arrayidx1, align 4, !dbg !14737
  %call2 = call i32 @tx_sign(float %3), !dbg !14738
  %and = and i32 %call, %call2, !dbg !14739
  %cmp = icmp eq i32 %and, 0, !dbg !14740
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !14741

lor.lhs.false:                                    ; preds = %entry
  %4 = load float*, float** %a.addr, align 8, !dbg !14742
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 1, !dbg !14742
  %5 = load float, float* %arrayidx3, align 4, !dbg !14742
  %call4 = call i32 @tx_sign(float %5), !dbg !14743
  %6 = load float*, float** %b.addr, align 8, !dbg !14744
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 1, !dbg !14744
  %7 = load float, float* %arrayidx5, align 4, !dbg !14744
  %call6 = call i32 @tx_sign(float %7), !dbg !14745
  %and7 = and i32 %call4, %call6, !dbg !14746
  %cmp8 = icmp eq i32 %and7, 0, !dbg !14747
  br i1 %cmp8, label %lor.end, label %lor.rhs, !dbg !14748

lor.rhs:                                          ; preds = %lor.lhs.false
  %8 = load float*, float** %a.addr, align 8, !dbg !14749
  %arrayidx9 = getelementptr inbounds float, float* %8, i64 2, !dbg !14749
  %9 = load float, float* %arrayidx9, align 4, !dbg !14749
  %call10 = call i32 @tx_sign(float %9), !dbg !14750
  %10 = load float*, float** %b.addr, align 8, !dbg !14751
  %arrayidx11 = getelementptr inbounds float, float* %10, i64 2, !dbg !14751
  %11 = load float, float* %arrayidx11, align 4, !dbg !14751
  %call12 = call i32 @tx_sign(float %11), !dbg !14752
  %and13 = and i32 %call10, %call12, !dbg !14753
  %cmp14 = icmp eq i32 %and13, 0, !dbg !14754
  br label %lor.end, !dbg !14748

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %12 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp14, %lor.rhs ]
  %lor.ext = zext i1 %12 to i32, !dbg !14748
  ret i32 %lor.ext, !dbg !14755
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @tx_sign(float %a) #0 !dbg !14756 {
entry:
  %a.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !14759, metadata !DIExpression()), !dbg !14760
  %0 = load float, float* %a.addr, align 4, !dbg !14761
  %cmp = fcmp olt float %0, 0xBEE4F8B580000000, !dbg !14762
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14761

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !14761

cond.false:                                       ; preds = %entry
  %1 = load float, float* %a.addr, align 4, !dbg !14763
  %cmp1 = fcmp ogt float %1, 0x3EE4F8B580000000, !dbg !14764
  %2 = zext i1 %cmp1 to i64, !dbg !14763
  %cond = select i1 %cmp1, i32 2, i32 3, !dbg !14763
  br label %cond.end, !dbg !14761

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond2 = phi i32 [ 1, %cond.true ], [ %cond, %cond.false ], !dbg !14761
  ret i32 %cond2, !dbg !14765
}

declare dso_local %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_from_type(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float @signf(float %f) #0 !dbg !14766 {
entry:
  %f.addr = alloca float, align 4
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !14769, metadata !DIExpression()), !dbg !14770
  %0 = load float, float* %f.addr, align 4, !dbg !14771
  %cmp = fcmp olt float %0, 0.000000e+00, !dbg !14772
  %1 = zext i1 %cmp to i64, !dbg !14773
  %cond = select i1 %cmp, float -1.000000e+00, float 1.000000e+00, !dbg !14773
  ret float %cond, !dbg !14774
}

declare dso_local void @size_to_mat4([4 x float]*, float*) #2

declare dso_local void @mul_m4_m3m4([4 x float]*, [3 x float]*, [4 x float]*) #2

declare dso_local void @mat4_to_size(float*, [4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3(float* %r, float* %a) #0 !dbg !14775 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !14776, metadata !DIExpression()), !dbg !14777
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !14778, metadata !DIExpression()), !dbg !14779
  %0 = load float*, float** %a.addr, align 8, !dbg !14780
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !14780
  %1 = load float, float* %arrayidx, align 4, !dbg !14780
  %2 = load float*, float** %r.addr, align 8, !dbg !14781
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !14781
  %3 = load float, float* %arrayidx1, align 4, !dbg !14782
  %mul = fmul float %3, %1, !dbg !14782
  store float %mul, float* %arrayidx1, align 4, !dbg !14782
  %4 = load float*, float** %a.addr, align 8, !dbg !14783
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !14783
  %5 = load float, float* %arrayidx2, align 4, !dbg !14783
  %6 = load float*, float** %r.addr, align 8, !dbg !14784
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !14784
  %7 = load float, float* %arrayidx3, align 4, !dbg !14785
  %mul4 = fmul float %7, %5, !dbg !14785
  store float %mul4, float* %arrayidx3, align 4, !dbg !14785
  %8 = load float*, float** %a.addr, align 8, !dbg !14786
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !14786
  %9 = load float, float* %arrayidx5, align 4, !dbg !14786
  %10 = load float*, float** %r.addr, align 8, !dbg !14787
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !14787
  %11 = load float, float* %arrayidx6, align 4, !dbg !14788
  %mul7 = fmul float %11, %9, !dbg !14788
  store float %mul7, float* %arrayidx6, align 4, !dbg !14788
  ret void, !dbg !14789
}

declare dso_local void @BKE_constraint_targets_for_solving_get(%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*, float) #2

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @applySkinResize(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !14790 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %td = alloca %struct.TransData*, align 8
  %size = alloca [3 x float], align 4
  %mat = alloca [3 x [3 x float]], align 16
  %ratio = alloca float, align 4
  %i = alloca i32, align 4
  %str = alloca [256 x i8], align 16
  %tmat = alloca [3 x [3 x float]], align 16
  %smat = alloca [3 x [3 x float]], align 16
  %fsize = alloca [3 x float], align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !14791, metadata !DIExpression()), !dbg !14792
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !14793, metadata !DIExpression()), !dbg !14794
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !14795, metadata !DIExpression()), !dbg !14796
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !14797, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !14799, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.declare(metadata float* %ratio, metadata !14801, metadata !DIExpression()), !dbg !14802
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14803, metadata !DIExpression()), !dbg !14804
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !14805, metadata !DIExpression()), !dbg !14806
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14807
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 47, !dbg !14808
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !14807
  %1 = load float, float* %arrayidx, align 4, !dbg !14807
  store float %1, float* %ratio, align 4, !dbg !14809
  %2 = load float, float* %ratio, align 4, !dbg !14810
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !14811
  store float %2, float* %arrayidx1, align 4, !dbg !14812
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !14813
  store float %2, float* %arrayidx2, align 4, !dbg !14814
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !14815
  store float %2, float* %arrayidx3, align 4, !dbg !14816
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14817
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !14818
  call void @snapGridIncrement(%struct.TransInfo* %3, float* %arraydecay), !dbg !14819
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14820
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 15, !dbg !14822
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !14823
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %arraydecay4), !dbg !14824
  %tobool = icmp ne i8 %call, 0, !dbg !14824
  br i1 %tobool, label %if.then, label %if.end, !dbg !14825

if.then:                                          ; preds = %entry
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14826
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !14828
  call void @constraintNumInput(%struct.TransInfo* %5, float* %arraydecay5), !dbg !14829
  br label %if.end, !dbg !14830

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14831
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !14832
  call void @applySnapping(%struct.TransInfo* %6, float* %arraydecay6), !dbg !14833
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14834
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 1, !dbg !14836
  %8 = load i32, i32* %flag, align 4, !dbg !14836
  %and = and i32 %8, 1048576, !dbg !14837
  %tobool7 = icmp ne i32 %and, 0, !dbg !14837
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !14838

if.then8:                                         ; preds = %if.end
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !14839
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14841
  %auto_values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 48, !dbg !14842
  %arraydecay10 = getelementptr inbounds [4 x float], [4 x float]* %auto_values, i64 0, i64 0, !dbg !14841
  call void @copy_v3_v3(float* %arraydecay9, float* %arraydecay10), !dbg !14843
  br label %if.end11, !dbg !14844

if.end11:                                         ; preds = %if.then8, %if.end
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14845
  %values12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 47, !dbg !14846
  %arraydecay13 = getelementptr inbounds [4 x float], [4 x float]* %values12, i64 0, i64 0, !dbg !14845
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !14847
  call void @copy_v3_v3(float* %arraydecay13, float* %arraydecay14), !dbg !14848
  %arraydecay15 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !14849
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !14850
  call void @size_to_mat3([3 x float]* %arraydecay15, float* %arraydecay16), !dbg !14851
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14852
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !14853
  %arraydecay18 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !14854
  call void @headerResize(%struct.TransInfo* %11, float* %arraydecay17, i8* %arraydecay18), !dbg !14855
  store i32 0, i32* %i, align 4, !dbg !14856
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14858
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 10, !dbg !14859
  %13 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !14859
  store %struct.TransData* %13, %struct.TransData** %td, align 8, !dbg !14860
  br label %for.cond, !dbg !14861

for.cond:                                         ; preds = %for.inc, %if.end11
  %14 = load i32, i32* %i, align 4, !dbg !14862
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14864
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 9, !dbg !14865
  %16 = load i32, i32* %total, align 8, !dbg !14865
  %cmp = icmp slt i32 %14, %16, !dbg !14866
  br i1 %cmp, label %for.body, label %for.end, !dbg !14867

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %tmat, metadata !14868, metadata !DIExpression()), !dbg !14870
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %smat, metadata !14871, metadata !DIExpression()), !dbg !14872
  call void @llvm.dbg.declare(metadata [3 x float]* %fsize, metadata !14873, metadata !DIExpression()), !dbg !14874
  %17 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !14875
  %flag19 = getelementptr inbounds %struct.TransData, %struct.TransData* %17, i32 0, i32 16, !dbg !14877
  %18 = load i32, i32* %flag19, align 8, !dbg !14877
  %and20 = and i32 %18, 4, !dbg !14878
  %tobool21 = icmp ne i32 %and20, 0, !dbg !14878
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !14879

if.then22:                                        ; preds = %for.body
  br label %for.end, !dbg !14880

if.end23:                                         ; preds = %for.body
  %19 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !14881
  %flag24 = getelementptr inbounds %struct.TransData, %struct.TransData* %19, i32 0, i32 16, !dbg !14883
  %20 = load i32, i32* %flag24, align 8, !dbg !14883
  %and25 = and i32 %20, 2048, !dbg !14884
  %tobool26 = icmp ne i32 %and25, 0, !dbg !14884
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !14885

if.then27:                                        ; preds = %if.end23
  br label %for.inc, !dbg !14886

if.end28:                                         ; preds = %if.end23
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14887
  %flag29 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 1, !dbg !14889
  %22 = load i32, i32* %flag29, align 4, !dbg !14889
  %and30 = and i32 %22, 2, !dbg !14890
  %tobool31 = icmp ne i32 %and30, 0, !dbg !14890
  br i1 %tobool31, label %if.then32, label %if.else, !dbg !14891

if.then32:                                        ; preds = %if.end28
  %arraydecay33 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !14892
  %arraydecay34 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !14894
  %23 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !14895
  %mtx = getelementptr inbounds %struct.TransData, %struct.TransData* %23, i32 0, i32 8, !dbg !14896
  %arraydecay35 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mtx, i64 0, i64 0, !dbg !14895
  call void @mul_m3_m3m3([3 x float]* %arraydecay33, [3 x float]* %arraydecay34, [3 x float]* %arraydecay35), !dbg !14897
  %arraydecay36 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !14898
  %24 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !14899
  %smtx = getelementptr inbounds %struct.TransData, %struct.TransData* %24, i32 0, i32 9, !dbg !14900
  %arraydecay37 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smtx, i64 0, i64 0, !dbg !14899
  %arraydecay38 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !14901
  call void @mul_m3_m3m3([3 x float]* %arraydecay36, [3 x float]* %arraydecay37, [3 x float]* %arraydecay38), !dbg !14902
  br label %if.end41, !dbg !14903

if.else:                                          ; preds = %if.end28
  %arraydecay39 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !14904
  %arraydecay40 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !14906
  call void @copy_m3_m3([3 x float]* %arraydecay39, [3 x float]* %arraydecay40), !dbg !14907
  br label %if.end41

if.end41:                                         ; preds = %if.else, %if.then32
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14908
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 13, !dbg !14910
  %applySize = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 10, !dbg !14911
  %26 = load void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)*, void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)** %applySize, align 8, !dbg !14911
  %tobool42 = icmp ne void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)* %26, null, !dbg !14908
  br i1 %tobool42, label %if.then43, label %if.end47, !dbg !14912

if.then43:                                        ; preds = %if.end41
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14913
  %con44 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %27, i32 0, i32 13, !dbg !14915
  %applySize45 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con44, i32 0, i32 10, !dbg !14916
  %28 = load void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)*, void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)** %applySize45, align 8, !dbg !14916
  %29 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14917
  %arraydecay46 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !14918
  call void %28(%struct.TransInfo* %29, %struct.TransData* null, [3 x float]* %arraydecay46), !dbg !14913
  br label %if.end47, !dbg !14919

if.end47:                                         ; preds = %if.then43, %if.end41
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %fsize, i64 0, i64 0, !dbg !14920
  %arraydecay49 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !14921
  call void @mat3_to_size(float* %arraydecay48, [3 x float]* %arraydecay49), !dbg !14922
  %30 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !14923
  %ext = getelementptr inbounds %struct.TransData, %struct.TransData* %30, i32 0, i32 13, !dbg !14924
  %31 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext, align 8, !dbg !14924
  %isize = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %31, i32 0, i32 12, !dbg !14925
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %isize, i64 0, i64 0, !dbg !14923
  %32 = load float, float* %arrayidx50, align 8, !dbg !14923
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %fsize, i64 0, i64 0, !dbg !14926
  %33 = load float, float* %arrayidx51, align 4, !dbg !14926
  %sub = fsub float %33, 1.000000e+00, !dbg !14927
  %34 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !14928
  %factor = getelementptr inbounds %struct.TransData, %struct.TransData* %34, i32 0, i32 2, !dbg !14929
  %35 = load float, float* %factor, align 8, !dbg !14929
  %mul = fmul float %sub, %35, !dbg !14930
  %add = fadd float 1.000000e+00, %mul, !dbg !14931
  %mul52 = fmul float %32, %add, !dbg !14932
  %36 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !14933
  %val = getelementptr inbounds %struct.TransData, %struct.TransData* %36, i32 0, i32 5, !dbg !14934
  %37 = load float*, float** %val, align 8, !dbg !14934
  %arrayidx53 = getelementptr inbounds float, float* %37, i64 0, !dbg !14933
  store float %mul52, float* %arrayidx53, align 4, !dbg !14935
  %38 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !14936
  %ext54 = getelementptr inbounds %struct.TransData, %struct.TransData* %38, i32 0, i32 13, !dbg !14937
  %39 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext54, align 8, !dbg !14937
  %isize55 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %39, i32 0, i32 12, !dbg !14938
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %isize55, i64 0, i64 1, !dbg !14936
  %40 = load float, float* %arrayidx56, align 4, !dbg !14936
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %fsize, i64 0, i64 1, !dbg !14939
  %41 = load float, float* %arrayidx57, align 4, !dbg !14939
  %sub58 = fsub float %41, 1.000000e+00, !dbg !14940
  %42 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !14941
  %factor59 = getelementptr inbounds %struct.TransData, %struct.TransData* %42, i32 0, i32 2, !dbg !14942
  %43 = load float, float* %factor59, align 8, !dbg !14942
  %mul60 = fmul float %sub58, %43, !dbg !14943
  %add61 = fadd float 1.000000e+00, %mul60, !dbg !14944
  %mul62 = fmul float %40, %add61, !dbg !14945
  %44 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !14946
  %val63 = getelementptr inbounds %struct.TransData, %struct.TransData* %44, i32 0, i32 5, !dbg !14947
  %45 = load float*, float** %val63, align 8, !dbg !14947
  %arrayidx64 = getelementptr inbounds float, float* %45, i64 1, !dbg !14946
  store float %mul62, float* %arrayidx64, align 4, !dbg !14948
  br label %for.inc, !dbg !14949

for.inc:                                          ; preds = %if.end47, %if.then27
  %46 = load i32, i32* %i, align 4, !dbg !14950
  %inc = add nsw i32 %46, 1, !dbg !14950
  store i32 %inc, i32* %i, align 4, !dbg !14950
  %47 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !14951
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %47, i32 1, !dbg !14951
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !14951
  br label %for.cond, !dbg !14952, !llvm.loop !14953

for.end:                                          ; preds = %if.then22, %for.cond
  %48 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14955
  call void @recalcData(%struct.TransInfo* %48), !dbg !14956
  %49 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14957
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %49, i32 0, i32 54, !dbg !14958
  %50 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !14958
  %arraydecay65 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !14959
  call void @ED_area_headerprint(%struct.ScrArea* %50, i8* %arraydecay65), !dbg !14960
  ret void, !dbg !14961
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyToSphere(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !14962 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %vec = alloca [3 x float], align 4
  %ratio = alloca float, align 4
  %radius = alloca float, align 4
  %i = alloca i32, align 4
  %str = alloca [256 x i8], align 16
  %td = alloca %struct.TransData*, align 8
  %c = alloca [64 x i8], align 16
  %tratio = alloca float, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !14963, metadata !DIExpression()), !dbg !14964
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !14965, metadata !DIExpression()), !dbg !14966
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !14967, metadata !DIExpression()), !dbg !14968
  call void @llvm.dbg.declare(metadata float* %ratio, metadata !14969, metadata !DIExpression()), !dbg !14970
  call void @llvm.dbg.declare(metadata float* %radius, metadata !14971, metadata !DIExpression()), !dbg !14972
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14973, metadata !DIExpression()), !dbg !14974
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !14975, metadata !DIExpression()), !dbg !14976
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !14977, metadata !DIExpression()), !dbg !14978
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14979
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !14980
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !14980
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !14978
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14981
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 47, !dbg !14982
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !14981
  %3 = load float, float* %arrayidx, align 4, !dbg !14981
  store float %3, float* %ratio, align 4, !dbg !14983
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14984
  call void @snapGridIncrement(%struct.TransInfo* %4, float* %ratio), !dbg !14985
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !14986
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 15, !dbg !14987
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %ratio), !dbg !14988
  %6 = load float, float* %ratio, align 4, !dbg !14989
  %cmp = fcmp olt float %6, 0.000000e+00, !dbg !14991
  br i1 %cmp, label %if.then, label %if.else, !dbg !14992

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* %ratio, align 4, !dbg !14993
  br label %if.end3, !dbg !14994

if.else:                                          ; preds = %entry
  %7 = load float, float* %ratio, align 4, !dbg !14995
  %cmp1 = fcmp ogt float %7, 1.000000e+00, !dbg !14997
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !14998

if.then2:                                         ; preds = %if.else
  store float 1.000000e+00, float* %ratio, align 4, !dbg !14999
  br label %if.end, !dbg !15000

if.end:                                           ; preds = %if.then2, %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %8 = load float, float* %ratio, align 4, !dbg !15001
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15002
  %values4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 47, !dbg !15003
  %arrayidx5 = getelementptr inbounds [4 x float], [4 x float]* %values4, i64 0, i64 0, !dbg !15002
  store float %8, float* %arrayidx5, align 4, !dbg !15004
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15005
  %num6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 15, !dbg !15007
  %call7 = call zeroext i8 @hasNumInput(%struct.NumInput* %num6), !dbg !15008
  %tobool = icmp ne i8 %call7, 0, !dbg !15008
  br i1 %tobool, label %if.then8, label %if.else14, !dbg !15009

if.then8:                                         ; preds = %if.end3
  call void @llvm.dbg.declare(metadata [64 x i8]* %c, metadata !15010, metadata !DIExpression()), !dbg !15012
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15013
  %num9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 15, !dbg !15014
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !15015
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15016
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 56, !dbg !15017
  %13 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !15017
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 38, !dbg !15018
  call void @outputNumInput(%struct.NumInput* %num9, i8* %arraydecay, %struct.UnitSettings* %unit), !dbg !15019
  %arraydecay10 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !15020
  %arraydecay11 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !15021
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15022
  %proptext = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 19, !dbg !15023
  %arraydecay12 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext, i64 0, i64 0, !dbg !15022
  %call13 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay10, i64 256, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i64 0, i64 0), i8* %arraydecay11, i8* %arraydecay12), !dbg !15024
  br label %if.end19, !dbg !15025

if.else14:                                        ; preds = %if.end3
  %arraydecay15 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !15026
  %15 = load float, float* %ratio, align 4, !dbg !15028
  %conv = fpext float %15 to double, !dbg !15028
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15029
  %proptext16 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 19, !dbg !15030
  %arraydecay17 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext16, i64 0, i64 0, !dbg !15029
  %call18 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay15, i64 256, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.91, i64 0, i64 0), double %conv, i8* %arraydecay17), !dbg !15031
  br label %if.end19

if.end19:                                         ; preds = %if.else14, %if.then8
  store i32 0, i32* %i, align 4, !dbg !15032
  br label %for.cond, !dbg !15034

for.cond:                                         ; preds = %for.inc, %if.end19
  %17 = load i32, i32* %i, align 4, !dbg !15035
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15037
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 9, !dbg !15038
  %19 = load i32, i32* %total, align 8, !dbg !15038
  %cmp20 = icmp slt i32 %17, %19, !dbg !15039
  br i1 %cmp20, label %for.body, label %for.end, !dbg !15040

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %tratio, metadata !15041, metadata !DIExpression()), !dbg !15043
  %20 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !15044
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %20, i32 0, i32 16, !dbg !15046
  %21 = load i32, i32* %flag, align 8, !dbg !15046
  %and = and i32 %21, 4, !dbg !15047
  %tobool22 = icmp ne i32 %and, 0, !dbg !15047
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !15048

if.then23:                                        ; preds = %for.body
  br label %for.end, !dbg !15049

if.end24:                                         ; preds = %for.body
  %22 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !15050
  %flag25 = getelementptr inbounds %struct.TransData, %struct.TransData* %22, i32 0, i32 16, !dbg !15052
  %23 = load i32, i32* %flag25, align 8, !dbg !15052
  %and26 = and i32 %23, 2048, !dbg !15053
  %tobool27 = icmp ne i32 %and26, 0, !dbg !15053
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !15054

if.then28:                                        ; preds = %if.end24
  br label %for.inc, !dbg !15055

if.end29:                                         ; preds = %if.end24
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15056
  %24 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !15057
  %iloc = getelementptr inbounds %struct.TransData, %struct.TransData* %24, i32 0, i32 4, !dbg !15058
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %iloc, i64 0, i64 0, !dbg !15057
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15059
  %center = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 20, !dbg !15060
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !15059
  call void @sub_v3_v3v3(float* %arraydecay30, float* %arraydecay31, float* %arraydecay32), !dbg !15061
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15062
  %call34 = call float @normalize_v3(float* %arraydecay33), !dbg !15063
  store float %call34, float* %radius, align 4, !dbg !15064
  %26 = load float, float* %ratio, align 4, !dbg !15065
  %27 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !15066
  %factor = getelementptr inbounds %struct.TransData, %struct.TransData* %27, i32 0, i32 2, !dbg !15067
  %28 = load float, float* %factor, align 8, !dbg !15067
  %mul = fmul float %26, %28, !dbg !15068
  store float %mul, float* %tratio, align 4, !dbg !15069
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15070
  %29 = load float, float* %radius, align 4, !dbg !15071
  %30 = load float, float* %tratio, align 4, !dbg !15072
  %sub = fsub float 1.000000e+00, %30, !dbg !15073
  %mul36 = fmul float %29, %sub, !dbg !15074
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15075
  %val = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %31, i32 0, i32 5, !dbg !15076
  %32 = load float, float* %val, align 4, !dbg !15076
  %33 = load float, float* %tratio, align 4, !dbg !15077
  %mul37 = fmul float %32, %33, !dbg !15078
  %add = fadd float %mul36, %mul37, !dbg !15079
  call void @mul_v3_fl(float* %arraydecay35, float %add), !dbg !15080
  %34 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !15081
  %loc = getelementptr inbounds %struct.TransData, %struct.TransData* %34, i32 0, i32 3, !dbg !15082
  %35 = load float*, float** %loc, align 8, !dbg !15082
  %36 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15083
  %center38 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %36, i32 0, i32 20, !dbg !15084
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %center38, i64 0, i64 0, !dbg !15083
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15085
  call void @add_v3_v3v3(float* %35, float* %arraydecay39, float* %arraydecay40), !dbg !15086
  br label %for.inc, !dbg !15087

for.inc:                                          ; preds = %if.end29, %if.then28
  %37 = load i32, i32* %i, align 4, !dbg !15088
  %inc = add nsw i32 %37, 1, !dbg !15088
  store i32 %inc, i32* %i, align 4, !dbg !15088
  %38 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !15089
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %38, i32 1, !dbg !15089
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !15089
  br label %for.cond, !dbg !15090, !llvm.loop !15091

for.end:                                          ; preds = %if.then23, %for.cond
  %39 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15093
  call void @recalcData(%struct.TransInfo* %39), !dbg !15094
  %40 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15095
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %40, i32 0, i32 54, !dbg !15096
  %41 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !15096
  %arraydecay41 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !15097
  call void @ED_area_headerprint(%struct.ScrArea* %41, i8* %arraydecay41), !dbg !15098
  ret void, !dbg !15099
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyRotation(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !15100 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %str = alloca [256 x i8], align 16
  %ofs = alloca i64, align 8
  %final = alloca float, align 4
  %c = alloca [64 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !15101, metadata !DIExpression()), !dbg !15102
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !15103, metadata !DIExpression()), !dbg !15104
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !15105, metadata !DIExpression()), !dbg !15106
  call void @llvm.dbg.declare(metadata i64* %ofs, metadata !15107, metadata !DIExpression()), !dbg !15108
  store i64 0, i64* %ofs, align 8, !dbg !15108
  call void @llvm.dbg.declare(metadata float* %final, metadata !15109, metadata !DIExpression()), !dbg !15110
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15111
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 47, !dbg !15112
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !15111
  %1 = load float, float* %arrayidx, align 4, !dbg !15111
  store float %1, float* %final, align 4, !dbg !15113
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15114
  call void @snapGridIncrement(%struct.TransInfo* %2, float* %final), !dbg !15115
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15116
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 13, !dbg !15118
  %mode = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 7, !dbg !15119
  %4 = load i32, i32* %mode, align 4, !dbg !15119
  %and = and i32 %4, 1, !dbg !15120
  %tobool = icmp ne i32 %and, 0, !dbg !15120
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !15121

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15122
  %con1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 13, !dbg !15123
  %applyRot = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con1, i32 0, i32 11, !dbg !15124
  %6 = load void (%struct.TransInfo*, %struct.TransData*, float*, float*)*, void (%struct.TransInfo*, %struct.TransData*, float*, float*)** %applyRot, align 8, !dbg !15124
  %tobool2 = icmp ne void (%struct.TransInfo*, %struct.TransData*, float*, float*)* %6, null, !dbg !15122
  br i1 %tobool2, label %if.then, label %if.else, !dbg !15125

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15126
  %con3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 13, !dbg !15128
  %applyRot4 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con3, i32 0, i32 11, !dbg !15129
  %8 = load void (%struct.TransInfo*, %struct.TransData*, float*, float*)*, void (%struct.TransInfo*, %struct.TransData*, float*, float*)** %applyRot4, align 8, !dbg !15129
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15130
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15131
  %axis = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 49, !dbg !15132
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !15131
  call void %8(%struct.TransInfo* %9, %struct.TransData* null, float* %arraydecay, float* null), !dbg !15126
  br label %if.end, !dbg !15133

if.else:                                          ; preds = %land.lhs.true, %entry
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15134
  %axis5 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 49, !dbg !15136
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %axis5, i64 0, i64 0, !dbg !15134
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15137
  %axis_orig = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 50, !dbg !15138
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %axis_orig, i64 0, i64 0, !dbg !15137
  call void @copy_v3_v3(float* %arraydecay6, float* %arraydecay7), !dbg !15139
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15140
  call void @applySnapping(%struct.TransInfo* %13, float* %final), !dbg !15141
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15142
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 15, !dbg !15144
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %final), !dbg !15145
  %tobool8 = icmp ne i8 %call, 0, !dbg !15145
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !15146

if.then9:                                         ; preds = %if.end
  %15 = load float, float* %final, align 4, !dbg !15147
  %call10 = call float @angle_wrap_rad(float %15), !dbg !15149
  store float %call10, float* %final, align 4, !dbg !15150
  br label %if.end11, !dbg !15151

if.end11:                                         ; preds = %if.then9, %if.end
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15152
  %num12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 15, !dbg !15154
  %call13 = call zeroext i8 @hasNumInput(%struct.NumInput* %num12), !dbg !15155
  %tobool14 = icmp ne i8 %call13, 0, !dbg !15155
  br i1 %tobool14, label %if.then15, label %if.else24, !dbg !15156

if.then15:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata [64 x i8]* %c, metadata !15157, metadata !DIExpression()), !dbg !15159
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15160
  %num16 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 15, !dbg !15161
  %arraydecay17 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !15162
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15163
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 56, !dbg !15164
  %19 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !15164
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %19, i32 0, i32 38, !dbg !15165
  call void @outputNumInput(%struct.NumInput* %num16, i8* %arraydecay17, %struct.UnitSettings* %unit), !dbg !15166
  %arraydecay18 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !15167
  %20 = load i64, i64* %ofs, align 8, !dbg !15168
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay18, i64 %20, !dbg !15169
  %21 = load i64, i64* %ofs, align 8, !dbg !15170
  %sub = sub i64 256, %21, !dbg !15171
  %arrayidx19 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !15172
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15173
  %con20 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 13, !dbg !15174
  %text = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con20, i32 0, i32 1, !dbg !15175
  %arraydecay21 = getelementptr inbounds [50 x i8], [50 x i8]* %text, i64 0, i64 0, !dbg !15173
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15176
  %proptext = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 19, !dbg !15177
  %arraydecay22 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext, i64 0, i64 0, !dbg !15176
  %call23 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr, i64 %sub, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.92, i64 0, i64 0), i8* %arrayidx19, i8* %arraydecay21, i8* %arraydecay22), !dbg !15178
  %24 = load i64, i64* %ofs, align 8, !dbg !15179
  %add = add i64 %24, %call23, !dbg !15179
  store i64 %add, i64* %ofs, align 8, !dbg !15179
  br label %if.end35, !dbg !15180

if.else24:                                        ; preds = %if.end11
  %arraydecay25 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !15181
  %25 = load i64, i64* %ofs, align 8, !dbg !15183
  %add.ptr26 = getelementptr inbounds i8, i8* %arraydecay25, i64 %25, !dbg !15184
  %26 = load i64, i64* %ofs, align 8, !dbg !15185
  %sub27 = sub i64 256, %26, !dbg !15186
  %27 = load float, float* %final, align 4, !dbg !15187
  %mul = fmul float %27, 0x404CA5DC20000000, !dbg !15187
  %conv = fpext float %mul to double, !dbg !15187
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15188
  %con28 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 13, !dbg !15189
  %text29 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con28, i32 0, i32 1, !dbg !15190
  %arraydecay30 = getelementptr inbounds [50 x i8], [50 x i8]* %text29, i64 0, i64 0, !dbg !15188
  %29 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15191
  %proptext31 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %29, i32 0, i32 19, !dbg !15192
  %arraydecay32 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext31, i64 0, i64 0, !dbg !15191
  %call33 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr26, i64 %sub27, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.93, i64 0, i64 0), double %conv, i8* %arraydecay30, i8* %arraydecay32), !dbg !15193
  %30 = load i64, i64* %ofs, align 8, !dbg !15194
  %add34 = add i64 %30, %call33, !dbg !15194
  store i64 %add34, i64* %ofs, align 8, !dbg !15194
  br label %if.end35

if.end35:                                         ; preds = %if.else24, %if.then15
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15195
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %31, i32 0, i32 1, !dbg !15197
  %32 = load i32, i32* %flag, align 4, !dbg !15197
  %and36 = and i32 %32, 33560576, !dbg !15198
  %tobool37 = icmp ne i32 %and36, 0, !dbg !15198
  br i1 %tobool37, label %if.then38, label %if.end45, !dbg !15199

if.then38:                                        ; preds = %if.end35
  %arraydecay39 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !15200
  %33 = load i64, i64* %ofs, align 8, !dbg !15202
  %add.ptr40 = getelementptr inbounds i8, i8* %arraydecay39, i64 %33, !dbg !15203
  %34 = load i64, i64* %ofs, align 8, !dbg !15204
  %sub41 = sub i64 256, %34, !dbg !15205
  %35 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15206
  %prop_size = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %35, i32 0, i32 18, !dbg !15207
  %36 = load float, float* %prop_size, align 4, !dbg !15207
  %conv42 = fpext float %36 to double, !dbg !15206
  %call43 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr40, i64 %sub41, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.89, i64 0, i64 0), double %conv42), !dbg !15208
  %37 = load i64, i64* %ofs, align 8, !dbg !15209
  %add44 = add i64 %37, %call43, !dbg !15209
  store i64 %add44, i64* %ofs, align 8, !dbg !15209
  br label %if.end45, !dbg !15210

if.end45:                                         ; preds = %if.then38, %if.end35
  %38 = load float, float* %final, align 4, !dbg !15211
  %39 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15212
  %values46 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %39, i32 0, i32 47, !dbg !15213
  %arrayidx47 = getelementptr inbounds [4 x float], [4 x float]* %values46, i64 0, i64 0, !dbg !15212
  store float %38, float* %arrayidx47, align 4, !dbg !15214
  %40 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15215
  %41 = load float, float* %final, align 4, !dbg !15216
  %42 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15217
  %axis48 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %42, i32 0, i32 49, !dbg !15218
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %axis48, i64 0, i64 0, !dbg !15217
  call void @applyRotationValue(%struct.TransInfo* %40, float %41, float* %arraydecay49), !dbg !15219
  %43 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15220
  call void @recalcData(%struct.TransInfo* %43), !dbg !15221
  %44 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15222
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %44, i32 0, i32 54, !dbg !15223
  %45 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !15223
  %arraydecay50 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !15224
  call void @ED_area_headerprint(%struct.ScrArea* %45, i8* %arraydecay50), !dbg !15225
  ret void, !dbg !15226
}

declare dso_local float @angle_wrap_rad(float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @applyRotationValue(%struct.TransInfo* %t, float %angle, float* %axis) #0 !dbg !15227 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %angle.addr = alloca float, align 4
  %axis.addr = alloca float*, align 8
  %td = alloca %struct.TransData*, align 8
  %mat = alloca [3 x [3 x float]], align 16
  %i = alloca i32, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !15230, metadata !DIExpression()), !dbg !15231
  store float %angle, float* %angle.addr, align 4
  call void @llvm.dbg.declare(metadata float* %angle.addr, metadata !15232, metadata !DIExpression()), !dbg !15233
  store float* %axis, float** %axis.addr, align 8
  call void @llvm.dbg.declare(metadata float** %axis.addr, metadata !15234, metadata !DIExpression()), !dbg !15235
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !15236, metadata !DIExpression()), !dbg !15237
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15238
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !15239
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !15239
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !15237
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !15240, metadata !DIExpression()), !dbg !15241
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15242, metadata !DIExpression()), !dbg !15243
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !15244
  %2 = load float*, float** %axis.addr, align 8, !dbg !15245
  %3 = load float, float* %angle.addr, align 4, !dbg !15246
  call void @axis_angle_normalized_to_mat3([3 x float]* %arraydecay, float* %2, float %3), !dbg !15247
  store i32 0, i32* %i, align 4, !dbg !15248
  br label %for.cond, !dbg !15250

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !15251
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15253
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 9, !dbg !15254
  %6 = load i32, i32* %total, align 8, !dbg !15254
  %cmp = icmp slt i32 %4, %6, !dbg !15255
  br i1 %cmp, label %for.body, label %for.end, !dbg !15256

for.body:                                         ; preds = %for.cond
  %7 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !15257
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %7, i32 0, i32 16, !dbg !15260
  %8 = load i32, i32* %flag, align 8, !dbg !15260
  %and = and i32 %8, 4, !dbg !15261
  %tobool = icmp ne i32 %and, 0, !dbg !15261
  br i1 %tobool, label %if.then, label %if.end, !dbg !15262

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !15263

if.end:                                           ; preds = %for.body
  %9 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !15264
  %flag1 = getelementptr inbounds %struct.TransData, %struct.TransData* %9, i32 0, i32 16, !dbg !15266
  %10 = load i32, i32* %flag1, align 8, !dbg !15266
  %and2 = and i32 %10, 2048, !dbg !15267
  %tobool3 = icmp ne i32 %and2, 0, !dbg !15267
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !15268

if.then4:                                         ; preds = %if.end
  br label %for.inc, !dbg !15269

if.end5:                                          ; preds = %if.end
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15270
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 13, !dbg !15272
  %applyRot = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 11, !dbg !15273
  %12 = load void (%struct.TransInfo*, %struct.TransData*, float*, float*)*, void (%struct.TransInfo*, %struct.TransData*, float*, float*)** %applyRot, align 8, !dbg !15273
  %tobool6 = icmp ne void (%struct.TransInfo*, %struct.TransData*, float*, float*)* %12, null, !dbg !15270
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !15274

if.then7:                                         ; preds = %if.end5
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15275
  %con8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 13, !dbg !15277
  %applyRot9 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con8, i32 0, i32 11, !dbg !15278
  %14 = load void (%struct.TransInfo*, %struct.TransData*, float*, float*)*, void (%struct.TransInfo*, %struct.TransData*, float*, float*)** %applyRot9, align 8, !dbg !15278
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15279
  %16 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !15280
  %17 = load float*, float** %axis.addr, align 8, !dbg !15281
  call void %14(%struct.TransInfo* %15, %struct.TransData* %16, float* %17, float* null), !dbg !15275
  %arraydecay10 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !15282
  %18 = load float*, float** %axis.addr, align 8, !dbg !15283
  %19 = load float, float* %angle.addr, align 4, !dbg !15284
  %20 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !15285
  %factor = getelementptr inbounds %struct.TransData, %struct.TransData* %20, i32 0, i32 2, !dbg !15286
  %21 = load float, float* %factor, align 8, !dbg !15286
  %mul = fmul float %19, %21, !dbg !15287
  call void @axis_angle_normalized_to_mat3([3 x float]* %arraydecay10, float* %18, float %mul), !dbg !15288
  br label %if.end19, !dbg !15289

if.else:                                          ; preds = %if.end5
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15290
  %flag11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 1, !dbg !15292
  %23 = load i32, i32* %flag11, align 4, !dbg !15292
  %and12 = and i32 %23, 2048, !dbg !15293
  %tobool13 = icmp ne i32 %and12, 0, !dbg !15293
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !15294

if.then14:                                        ; preds = %if.else
  %arraydecay15 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !15295
  %24 = load float*, float** %axis.addr, align 8, !dbg !15297
  %25 = load float, float* %angle.addr, align 4, !dbg !15298
  %26 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !15299
  %factor16 = getelementptr inbounds %struct.TransData, %struct.TransData* %26, i32 0, i32 2, !dbg !15300
  %27 = load float, float* %factor16, align 8, !dbg !15300
  %mul17 = fmul float %25, %27, !dbg !15301
  call void @axis_angle_normalized_to_mat3([3 x float]* %arraydecay15, float* %24, float %mul17), !dbg !15302
  br label %if.end18, !dbg !15303

if.end18:                                         ; preds = %if.then14, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then7
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15304
  %29 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !15305
  %arraydecay20 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !15306
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15307
  %around = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %30, i32 0, i32 32, !dbg !15308
  %31 = load i16, i16* %around, align 2, !dbg !15308
  call void @ElementRotation(%struct.TransInfo* %28, %struct.TransData* %29, [3 x float]* %arraydecay20, i16 signext %31), !dbg !15309
  br label %for.inc, !dbg !15310

for.inc:                                          ; preds = %if.end19, %if.then4
  %32 = load i32, i32* %i, align 4, !dbg !15311
  %inc = add nsw i32 %32, 1, !dbg !15311
  store i32 %inc, i32* %i, align 4, !dbg !15311
  %33 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !15312
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %33, i32 1, !dbg !15312
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !15312
  br label %for.cond, !dbg !15313, !llvm.loop !15314

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !15316
}

; Function Attrs: noinline nounwind uwtable
define internal void @ElementRotation(%struct.TransInfo* %t, %struct.TransData* %td, [3 x float]* %mat, i16 signext %around) #0 !dbg !15317 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %td.addr = alloca %struct.TransData*, align 8
  %mat.addr = alloca [3 x float]*, align 8
  %around.addr = alloca i16, align 2
  %vec = alloca [3 x float], align 4
  %totmat = alloca [3 x [3 x float]], align 16
  %smat = alloca [3 x [3 x float]], align 16
  %eul = alloca [3 x float], align 4
  %fmat = alloca [3 x [3 x float]], align 16
  %quat = alloca [4 x float], align 16
  %center = alloca float*, align 8
  %pmtx = alloca [3 x [3 x float]], align 16
  %imtx = alloca [3 x [3 x float]], align 16
  %iquat138 = alloca [4 x float], align 16
  %tquat = alloca [4 x float], align 16
  %eulmat = alloca [3 x [3 x float]], align 16
  %iquat272 = alloca [4 x float], align 16
  %tquat273 = alloca [4 x float], align 16
  %obmat306 = alloca [3 x [3 x float]], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !15320, metadata !DIExpression()), !dbg !15321
  store %struct.TransData* %td, %struct.TransData** %td.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransData** %td.addr, metadata !15322, metadata !DIExpression()), !dbg !15323
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !15324, metadata !DIExpression()), !dbg !15325
  store i16 %around, i16* %around.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %around.addr, metadata !15326, metadata !DIExpression()), !dbg !15327
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !15328, metadata !DIExpression()), !dbg !15329
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %totmat, metadata !15330, metadata !DIExpression()), !dbg !15331
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %smat, metadata !15332, metadata !DIExpression()), !dbg !15333
  call void @llvm.dbg.declare(metadata [3 x float]* %eul, metadata !15334, metadata !DIExpression()), !dbg !15335
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %fmat, metadata !15336, metadata !DIExpression()), !dbg !15337
  call void @llvm.dbg.declare(metadata [4 x float]* %quat, metadata !15338, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.declare(metadata float** %center, metadata !15340, metadata !DIExpression()), !dbg !15341
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15342
  %1 = load i16, i16* %around.addr, align 2, !dbg !15344
  %call = call zeroext i8 @transdata_check_local_center(%struct.TransInfo* %0, i16 signext %1), !dbg !15345
  %tobool = icmp ne i8 %call, 0, !dbg !15345
  br i1 %tobool, label %if.then, label %if.else, !dbg !15346

if.then:                                          ; preds = %entry
  %2 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15347
  %center1 = getelementptr inbounds %struct.TransData, %struct.TransData* %2, i32 0, i32 7, !dbg !15349
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %center1, i64 0, i64 0, !dbg !15347
  store float* %arraydecay, float** %center, align 8, !dbg !15350
  br label %if.end, !dbg !15351

if.else:                                          ; preds = %entry
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15352
  %center2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 20, !dbg !15354
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %center2, i64 0, i64 0, !dbg !15352
  store float* %arraydecay3, float** %center, align 8, !dbg !15355
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15356
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 1, !dbg !15358
  %5 = load i32, i32* %flag, align 4, !dbg !15358
  %and = and i32 %5, 64, !dbg !15359
  %tobool4 = icmp ne i32 %and, 0, !dbg !15359
  br i1 %tobool4, label %if.then5, label %if.else52, !dbg !15360

if.then5:                                         ; preds = %if.end
  %arraydecay6 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !15361
  %6 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !15363
  %7 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15364
  %mtx = getelementptr inbounds %struct.TransData, %struct.TransData* %7, i32 0, i32 8, !dbg !15365
  %arraydecay7 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mtx, i64 0, i64 0, !dbg !15364
  call void @mul_m3_m3m3([3 x float]* %arraydecay6, [3 x float]* %6, [3 x float]* %arraydecay7), !dbg !15366
  %arraydecay8 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !15367
  %8 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15368
  %smtx = getelementptr inbounds %struct.TransData, %struct.TransData* %8, i32 0, i32 9, !dbg !15369
  %arraydecay9 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smtx, i64 0, i64 0, !dbg !15368
  %arraydecay10 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !15370
  call void @mul_m3_m3m3([3 x float]* %arraydecay8, [3 x float]* %arraydecay9, [3 x float]* %arraydecay10), !dbg !15371
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15372
  %9 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15373
  %iloc = getelementptr inbounds %struct.TransData, %struct.TransData* %9, i32 0, i32 4, !dbg !15374
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %iloc, i64 0, i64 0, !dbg !15373
  %10 = load float*, float** %center, align 8, !dbg !15375
  call void @sub_v3_v3v3(float* %arraydecay11, float* %arraydecay12, float* %10), !dbg !15376
  %arraydecay13 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !15377
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15378
  call void @mul_m3_v3([3 x float]* %arraydecay13, float* %arraydecay14), !dbg !15379
  %11 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15380
  %loc = getelementptr inbounds %struct.TransData, %struct.TransData* %11, i32 0, i32 3, !dbg !15381
  %12 = load float*, float** %loc, align 8, !dbg !15381
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15382
  %13 = load float*, float** %center, align 8, !dbg !15383
  call void @add_v3_v3v3(float* %12, float* %arraydecay15, float* %13), !dbg !15384
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15385
  %14 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15386
  %loc17 = getelementptr inbounds %struct.TransData, %struct.TransData* %14, i32 0, i32 3, !dbg !15387
  %15 = load float*, float** %loc17, align 8, !dbg !15387
  %16 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15388
  %iloc18 = getelementptr inbounds %struct.TransData, %struct.TransData* %16, i32 0, i32 4, !dbg !15389
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %iloc18, i64 0, i64 0, !dbg !15388
  call void @sub_v3_v3v3(float* %arraydecay16, float* %15, float* %arraydecay19), !dbg !15390
  %17 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15391
  %protectflag = getelementptr inbounds %struct.TransData, %struct.TransData* %17, i32 0, i32 17, !dbg !15392
  %18 = load i16, i16* %protectflag, align 4, !dbg !15392
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15393
  call void @protectedTransBits(i16 signext %18, float* %arraydecay20), !dbg !15394
  %19 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15395
  %loc21 = getelementptr inbounds %struct.TransData, %struct.TransData* %19, i32 0, i32 3, !dbg !15396
  %20 = load float*, float** %loc21, align 8, !dbg !15396
  %21 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15397
  %iloc22 = getelementptr inbounds %struct.TransData, %struct.TransData* %21, i32 0, i32 4, !dbg !15398
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %iloc22, i64 0, i64 0, !dbg !15397
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15399
  call void @add_v3_v3v3(float* %20, float* %arraydecay23, float* %arraydecay24), !dbg !15400
  %22 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15401
  %flag25 = getelementptr inbounds %struct.TransData, %struct.TransData* %22, i32 0, i32 16, !dbg !15403
  %23 = load i32, i32* %flag25, align 8, !dbg !15403
  %and26 = and i32 %23, 8, !dbg !15404
  %tobool27 = icmp ne i32 %and26, 0, !dbg !15404
  br i1 %tobool27, label %if.then28, label %if.end51, !dbg !15405

if.then28:                                        ; preds = %if.then5
  %arraydecay29 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %fmat, i64 0, i64 0, !dbg !15406
  %24 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15406
  %smtx30 = getelementptr inbounds %struct.TransData, %struct.TransData* %24, i32 0, i32 9, !dbg !15406
  %arraydecay31 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smtx30, i64 0, i64 0, !dbg !15406
  %25 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !15406
  %26 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15406
  %mtx32 = getelementptr inbounds %struct.TransData, %struct.TransData* %26, i32 0, i32 8, !dbg !15406
  %arraydecay33 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mtx32, i64 0, i64 0, !dbg !15406
  call void @_va_mul_m3_series_4([3 x float]* %arraydecay29, [3 x float]* %arraydecay31, [3 x float]* %25, [3 x float]* %arraydecay33), !dbg !15406
  %arraydecay34 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !15408
  %arraydecay35 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %fmat, i64 0, i64 0, !dbg !15409
  call void @mat3_to_quat(float* %arraydecay34, [3 x float]* %arraydecay35), !dbg !15410
  %27 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15411
  %ext = getelementptr inbounds %struct.TransData, %struct.TransData* %27, i32 0, i32 13, !dbg !15413
  %28 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext, align 8, !dbg !15413
  %quat36 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %28, i32 0, i32 5, !dbg !15414
  %29 = load float*, float** %quat36, align 8, !dbg !15414
  %tobool37 = icmp ne float* %29, null, !dbg !15411
  br i1 %tobool37, label %if.then38, label %if.end50, !dbg !15415

if.then38:                                        ; preds = %if.then28
  %30 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15416
  %ext39 = getelementptr inbounds %struct.TransData, %struct.TransData* %30, i32 0, i32 13, !dbg !15418
  %31 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext39, align 8, !dbg !15418
  %quat40 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %31, i32 0, i32 5, !dbg !15419
  %32 = load float*, float** %quat40, align 8, !dbg !15419
  %arraydecay41 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !15420
  %33 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15421
  %ext42 = getelementptr inbounds %struct.TransData, %struct.TransData* %33, i32 0, i32 13, !dbg !15422
  %34 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext42, align 8, !dbg !15422
  %iquat = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %34, i32 0, i32 6, !dbg !15423
  %arraydecay43 = getelementptr inbounds [4 x float], [4 x float]* %iquat, i64 0, i64 0, !dbg !15421
  call void @mul_qt_qtqt(float* %32, float* %arraydecay41, float* %arraydecay43), !dbg !15424
  %35 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15425
  %protectflag44 = getelementptr inbounds %struct.TransData, %struct.TransData* %35, i32 0, i32 17, !dbg !15426
  %36 = load i16, i16* %protectflag44, align 4, !dbg !15426
  %37 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15427
  %ext45 = getelementptr inbounds %struct.TransData, %struct.TransData* %37, i32 0, i32 13, !dbg !15428
  %38 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext45, align 8, !dbg !15428
  %quat46 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %38, i32 0, i32 5, !dbg !15429
  %39 = load float*, float** %quat46, align 8, !dbg !15429
  %40 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15430
  %ext47 = getelementptr inbounds %struct.TransData, %struct.TransData* %40, i32 0, i32 13, !dbg !15431
  %41 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext47, align 8, !dbg !15431
  %iquat48 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %41, i32 0, i32 6, !dbg !15432
  %arraydecay49 = getelementptr inbounds [4 x float], [4 x float]* %iquat48, i64 0, i64 0, !dbg !15430
  call void @protectedQuaternionBits(i16 signext %36, float* %39, float* %arraydecay49), !dbg !15433
  br label %if.end50, !dbg !15434

if.end50:                                         ; preds = %if.then38, %if.then28
  br label %if.end51, !dbg !15435

if.end51:                                         ; preds = %if.end50, %if.then5
  br label %if.end352, !dbg !15436

if.else52:                                        ; preds = %if.end
  %42 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15437
  %flag53 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %42, i32 0, i32 1, !dbg !15439
  %43 = load i32, i32* %flag53, align 4, !dbg !15439
  %and54 = and i32 %43, 4, !dbg !15440
  %tobool55 = icmp ne i32 %and54, 0, !dbg !15440
  br i1 %tobool55, label %if.then56, label %if.else205, !dbg !15441

if.then56:                                        ; preds = %if.else52
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %pmtx, metadata !15442, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %imtx, metadata !15445, metadata !DIExpression()), !dbg !15446
  %arraydecay57 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %pmtx, i64 0, i64 0, !dbg !15447
  %44 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15448
  %poseobj = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %44, i32 0, i32 39, !dbg !15449
  %45 = load %struct.Object*, %struct.Object** %poseobj, align 8, !dbg !15449
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %45, i32 0, i32 47, !dbg !15450
  %arraydecay58 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !15448
  call void @copy_m3_m4([3 x float]* %arraydecay57, [4 x float]* %arraydecay58), !dbg !15451
  %arraydecay59 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imtx, i64 0, i64 0, !dbg !15452
  %arraydecay60 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %pmtx, i64 0, i64 0, !dbg !15453
  %call61 = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay59, [3 x float]* %arraydecay60), !dbg !15454
  %46 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15455
  %flag62 = getelementptr inbounds %struct.TransData, %struct.TransData* %46, i32 0, i32 16, !dbg !15457
  %47 = load i32, i32* %flag62, align 8, !dbg !15457
  %and63 = and i32 %47, 8192, !dbg !15458
  %cmp = icmp eq i32 %and63, 0, !dbg !15459
  br i1 %cmp, label %if.then64, label %if.end106, !dbg !15460

if.then64:                                        ; preds = %if.then56
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15461
  %48 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15463
  %center66 = getelementptr inbounds %struct.TransData, %struct.TransData* %48, i32 0, i32 7, !dbg !15464
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %center66, i64 0, i64 0, !dbg !15463
  %49 = load float*, float** %center, align 8, !dbg !15465
  call void @sub_v3_v3v3(float* %arraydecay65, float* %arraydecay67, float* %49), !dbg !15466
  %arraydecay68 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %pmtx, i64 0, i64 0, !dbg !15467
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15468
  call void @mul_m3_v3([3 x float]* %arraydecay68, float* %arraydecay69), !dbg !15469
  %50 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !15470
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15471
  call void @mul_m3_v3([3 x float]* %50, float* %arraydecay70), !dbg !15472
  %arraydecay71 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imtx, i64 0, i64 0, !dbg !15473
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15474
  call void @mul_m3_v3([3 x float]* %arraydecay71, float* %arraydecay72), !dbg !15475
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15476
  %51 = load float*, float** %center, align 8, !dbg !15477
  call void @add_v3_v3(float* %arraydecay73, float* %51), !dbg !15478
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15479
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15480
  %52 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15481
  %center76 = getelementptr inbounds %struct.TransData, %struct.TransData* %52, i32 0, i32 7, !dbg !15482
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %center76, i64 0, i64 0, !dbg !15481
  call void @sub_v3_v3v3(float* %arraydecay74, float* %arraydecay75, float* %arraydecay77), !dbg !15483
  %53 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15484
  %flag78 = getelementptr inbounds %struct.TransData, %struct.TransData* %53, i32 0, i32 16, !dbg !15486
  %54 = load i32, i32* %flag78, align 8, !dbg !15486
  %and79 = and i32 %54, 524288, !dbg !15487
  %tobool80 = icmp ne i32 %and79, 0, !dbg !15487
  br i1 %tobool80, label %if.then81, label %if.else82, !dbg !15488

if.then81:                                        ; preds = %if.then64
  br label %if.end99, !dbg !15489

if.else82:                                        ; preds = %if.then64
  %55 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15491
  %flag83 = getelementptr inbounds %struct.TransData, %struct.TransData* %55, i32 0, i32 16, !dbg !15493
  %56 = load i32, i32* %flag83, align 8, !dbg !15493
  %and84 = and i32 %56, 1048576, !dbg !15494
  %tobool85 = icmp ne i32 %and84, 0, !dbg !15494
  br i1 %tobool85, label %if.then86, label %if.else92, !dbg !15495

if.then86:                                        ; preds = %if.else82
  %arraydecay87 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %pmtx, i64 0, i64 0, !dbg !15496
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15498
  call void @mul_m3_v3([3 x float]* %arraydecay87, float* %arraydecay88), !dbg !15499
  %57 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15500
  %ext89 = getelementptr inbounds %struct.TransData, %struct.TransData* %57, i32 0, i32 13, !dbg !15501
  %58 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext89, align 8, !dbg !15501
  %l_smtx = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %58, i32 0, i32 14, !dbg !15502
  %arraydecay90 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %l_smtx, i64 0, i64 0, !dbg !15500
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15503
  call void @mul_m3_v3([3 x float]* %arraydecay90, float* %arraydecay91), !dbg !15504
  br label %if.end98, !dbg !15505

if.else92:                                        ; preds = %if.else82
  %arraydecay93 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %pmtx, i64 0, i64 0, !dbg !15506
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15508
  call void @mul_m3_v3([3 x float]* %arraydecay93, float* %arraydecay94), !dbg !15509
  %59 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15510
  %smtx95 = getelementptr inbounds %struct.TransData, %struct.TransData* %59, i32 0, i32 9, !dbg !15511
  %arraydecay96 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smtx95, i64 0, i64 0, !dbg !15510
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15512
  call void @mul_m3_v3([3 x float]* %arraydecay96, float* %arraydecay97), !dbg !15513
  br label %if.end98

if.end98:                                         ; preds = %if.else92, %if.then86
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.then81
  %60 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15514
  %protectflag100 = getelementptr inbounds %struct.TransData, %struct.TransData* %60, i32 0, i32 17, !dbg !15515
  %61 = load i16, i16* %protectflag100, align 4, !dbg !15515
  %arraydecay101 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15516
  call void @protectedTransBits(i16 signext %61, float* %arraydecay101), !dbg !15517
  %62 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15518
  %loc102 = getelementptr inbounds %struct.TransData, %struct.TransData* %62, i32 0, i32 3, !dbg !15519
  %63 = load float*, float** %loc102, align 8, !dbg !15519
  %64 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15520
  %iloc103 = getelementptr inbounds %struct.TransData, %struct.TransData* %64, i32 0, i32 4, !dbg !15521
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %iloc103, i64 0, i64 0, !dbg !15520
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15522
  call void @add_v3_v3v3(float* %63, float* %arraydecay104, float* %arraydecay105), !dbg !15523
  %65 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15524
  %66 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15525
  call void @constraintTransLim(%struct.TransInfo* %65, %struct.TransData* %66), !dbg !15526
  br label %if.end106, !dbg !15527

if.end106:                                        ; preds = %if.end99, %if.then56
  %67 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15528
  %flag107 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %67, i32 0, i32 1, !dbg !15530
  %68 = load i32, i32* %flag107, align 4, !dbg !15530
  %and108 = and i32 %68, 16384, !dbg !15531
  %cmp109 = icmp eq i32 %and108, 0, !dbg !15532
  br i1 %cmp109, label %if.then110, label %if.end204, !dbg !15533

if.then110:                                       ; preds = %if.end106
  %69 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15534
  %ext111 = getelementptr inbounds %struct.TransData, %struct.TransData* %69, i32 0, i32 13, !dbg !15537
  %70 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext111, align 8, !dbg !15537
  %rotOrder = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %70, i32 0, i32 17, !dbg !15538
  %71 = load i32, i32* %rotOrder, align 8, !dbg !15538
  %cmp112 = icmp eq i32 %71, 0, !dbg !15539
  br i1 %cmp112, label %if.then113, label %if.else133, !dbg !15540

if.then113:                                       ; preds = %if.then110
  %arraydecay114 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %fmat, i64 0, i64 0, !dbg !15541
  %72 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15541
  %ext115 = getelementptr inbounds %struct.TransData, %struct.TransData* %72, i32 0, i32 13, !dbg !15541
  %73 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext115, align 8, !dbg !15541
  %r_smtx = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %73, i32 0, i32 16, !dbg !15541
  %arraydecay116 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %r_smtx, i64 0, i64 0, !dbg !15541
  %74 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !15541
  %75 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15541
  %ext117 = getelementptr inbounds %struct.TransData, %struct.TransData* %75, i32 0, i32 13, !dbg !15541
  %76 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext117, align 8, !dbg !15541
  %r_mtx = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %76, i32 0, i32 15, !dbg !15541
  %arraydecay118 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %r_mtx, i64 0, i64 0, !dbg !15541
  call void @_va_mul_m3_series_4([3 x float]* %arraydecay114, [3 x float]* %arraydecay116, [3 x float]* %74, [3 x float]* %arraydecay118), !dbg !15541
  %arraydecay119 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !15543
  %arraydecay120 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %fmat, i64 0, i64 0, !dbg !15544
  call void @mat3_to_quat(float* %arraydecay119, [3 x float]* %arraydecay120), !dbg !15545
  %77 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15546
  %ext121 = getelementptr inbounds %struct.TransData, %struct.TransData* %77, i32 0, i32 13, !dbg !15547
  %78 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext121, align 8, !dbg !15547
  %quat122 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %78, i32 0, i32 5, !dbg !15548
  %79 = load float*, float** %quat122, align 8, !dbg !15548
  %arraydecay123 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !15549
  %80 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15550
  %ext124 = getelementptr inbounds %struct.TransData, %struct.TransData* %80, i32 0, i32 13, !dbg !15551
  %81 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext124, align 8, !dbg !15551
  %iquat125 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %81, i32 0, i32 6, !dbg !15552
  %arraydecay126 = getelementptr inbounds [4 x float], [4 x float]* %iquat125, i64 0, i64 0, !dbg !15550
  call void @mul_qt_qtqt(float* %79, float* %arraydecay123, float* %arraydecay126), !dbg !15553
  %82 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15554
  %protectflag127 = getelementptr inbounds %struct.TransData, %struct.TransData* %82, i32 0, i32 17, !dbg !15555
  %83 = load i16, i16* %protectflag127, align 4, !dbg !15555
  %84 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15556
  %ext128 = getelementptr inbounds %struct.TransData, %struct.TransData* %84, i32 0, i32 13, !dbg !15557
  %85 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext128, align 8, !dbg !15557
  %quat129 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %85, i32 0, i32 5, !dbg !15558
  %86 = load float*, float** %quat129, align 8, !dbg !15558
  %87 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15559
  %ext130 = getelementptr inbounds %struct.TransData, %struct.TransData* %87, i32 0, i32 13, !dbg !15560
  %88 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext130, align 8, !dbg !15560
  %iquat131 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %88, i32 0, i32 6, !dbg !15561
  %arraydecay132 = getelementptr inbounds [4 x float], [4 x float]* %iquat131, i64 0, i64 0, !dbg !15559
  call void @protectedQuaternionBits(i16 signext %83, float* %86, float* %arraydecay132), !dbg !15562
  br label %if.end203, !dbg !15563

if.else133:                                       ; preds = %if.then110
  %89 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15564
  %ext134 = getelementptr inbounds %struct.TransData, %struct.TransData* %89, i32 0, i32 13, !dbg !15566
  %90 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext134, align 8, !dbg !15566
  %rotOrder135 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %90, i32 0, i32 17, !dbg !15567
  %91 = load i32, i32* %rotOrder135, align 8, !dbg !15567
  %cmp136 = icmp eq i32 %91, -1, !dbg !15568
  br i1 %cmp136, label %if.then137, label %if.else168, !dbg !15569

if.then137:                                       ; preds = %if.else133
  call void @llvm.dbg.declare(metadata [4 x float]* %iquat138, metadata !15570, metadata !DIExpression()), !dbg !15572
  call void @llvm.dbg.declare(metadata [4 x float]* %tquat, metadata !15573, metadata !DIExpression()), !dbg !15574
  %arraydecay139 = getelementptr inbounds [4 x float], [4 x float]* %iquat138, i64 0, i64 0, !dbg !15575
  %92 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15576
  %ext140 = getelementptr inbounds %struct.TransData, %struct.TransData* %92, i32 0, i32 13, !dbg !15577
  %93 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext140, align 8, !dbg !15577
  %irotAxis = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %93, i32 0, i32 10, !dbg !15578
  %arraydecay141 = getelementptr inbounds [4 x float], [4 x float]* %irotAxis, i64 0, i64 0, !dbg !15576
  %94 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15579
  %ext142 = getelementptr inbounds %struct.TransData, %struct.TransData* %94, i32 0, i32 13, !dbg !15580
  %95 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext142, align 8, !dbg !15580
  %irotAngle = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %95, i32 0, i32 8, !dbg !15581
  %96 = load float, float* %irotAngle, align 8, !dbg !15581
  call void @axis_angle_to_quat(float* %arraydecay139, float* %arraydecay141, float %96), !dbg !15582
  %arraydecay143 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %fmat, i64 0, i64 0, !dbg !15583
  %97 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15583
  %ext144 = getelementptr inbounds %struct.TransData, %struct.TransData* %97, i32 0, i32 13, !dbg !15583
  %98 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext144, align 8, !dbg !15583
  %r_smtx145 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %98, i32 0, i32 16, !dbg !15583
  %arraydecay146 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %r_smtx145, i64 0, i64 0, !dbg !15583
  %99 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !15583
  %100 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15583
  %ext147 = getelementptr inbounds %struct.TransData, %struct.TransData* %100, i32 0, i32 13, !dbg !15583
  %101 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext147, align 8, !dbg !15583
  %r_mtx148 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %101, i32 0, i32 15, !dbg !15583
  %arraydecay149 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %r_mtx148, i64 0, i64 0, !dbg !15583
  call void @_va_mul_m3_series_4([3 x float]* %arraydecay143, [3 x float]* %arraydecay146, [3 x float]* %99, [3 x float]* %arraydecay149), !dbg !15583
  %arraydecay150 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !15584
  %arraydecay151 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %fmat, i64 0, i64 0, !dbg !15585
  call void @mat3_to_quat(float* %arraydecay150, [3 x float]* %arraydecay151), !dbg !15586
  %arraydecay152 = getelementptr inbounds [4 x float], [4 x float]* %tquat, i64 0, i64 0, !dbg !15587
  %arraydecay153 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !15588
  %arraydecay154 = getelementptr inbounds [4 x float], [4 x float]* %iquat138, i64 0, i64 0, !dbg !15589
  call void @mul_qt_qtqt(float* %arraydecay152, float* %arraydecay153, float* %arraydecay154), !dbg !15590
  %102 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15591
  %ext155 = getelementptr inbounds %struct.TransData, %struct.TransData* %102, i32 0, i32 13, !dbg !15592
  %103 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext155, align 8, !dbg !15592
  %rotAxis = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %103, i32 0, i32 9, !dbg !15593
  %104 = load float*, float** %rotAxis, align 8, !dbg !15593
  %105 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15594
  %ext156 = getelementptr inbounds %struct.TransData, %struct.TransData* %105, i32 0, i32 13, !dbg !15595
  %106 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext156, align 8, !dbg !15595
  %rotAngle = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %106, i32 0, i32 7, !dbg !15596
  %107 = load float*, float** %rotAngle, align 8, !dbg !15596
  %arraydecay157 = getelementptr inbounds [4 x float], [4 x float]* %tquat, i64 0, i64 0, !dbg !15597
  call void @quat_to_axis_angle(float* %104, float* %107, float* %arraydecay157), !dbg !15598
  %108 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15599
  %protectflag158 = getelementptr inbounds %struct.TransData, %struct.TransData* %108, i32 0, i32 17, !dbg !15600
  %109 = load i16, i16* %protectflag158, align 4, !dbg !15600
  %110 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15601
  %ext159 = getelementptr inbounds %struct.TransData, %struct.TransData* %110, i32 0, i32 13, !dbg !15602
  %111 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext159, align 8, !dbg !15602
  %rotAxis160 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %111, i32 0, i32 9, !dbg !15603
  %112 = load float*, float** %rotAxis160, align 8, !dbg !15603
  %113 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15604
  %ext161 = getelementptr inbounds %struct.TransData, %struct.TransData* %113, i32 0, i32 13, !dbg !15605
  %114 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext161, align 8, !dbg !15605
  %rotAngle162 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %114, i32 0, i32 7, !dbg !15606
  %115 = load float*, float** %rotAngle162, align 8, !dbg !15606
  %116 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15607
  %ext163 = getelementptr inbounds %struct.TransData, %struct.TransData* %116, i32 0, i32 13, !dbg !15608
  %117 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext163, align 8, !dbg !15608
  %irotAxis164 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %117, i32 0, i32 10, !dbg !15609
  %arraydecay165 = getelementptr inbounds [4 x float], [4 x float]* %irotAxis164, i64 0, i64 0, !dbg !15607
  %118 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15610
  %ext166 = getelementptr inbounds %struct.TransData, %struct.TransData* %118, i32 0, i32 13, !dbg !15611
  %119 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext166, align 8, !dbg !15611
  %irotAngle167 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %119, i32 0, i32 8, !dbg !15612
  %120 = load float, float* %irotAngle167, align 8, !dbg !15612
  call void @protectedAxisAngleBits(i16 signext %109, float* %112, float* %115, float* %arraydecay165, float %120), !dbg !15613
  br label %if.end202, !dbg !15614

if.else168:                                       ; preds = %if.else133
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %eulmat, metadata !15615, metadata !DIExpression()), !dbg !15617
  %arraydecay169 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !15618
  %121 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !15619
  %122 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15620
  %ext170 = getelementptr inbounds %struct.TransData, %struct.TransData* %122, i32 0, i32 13, !dbg !15621
  %123 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext170, align 8, !dbg !15621
  %r_mtx171 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %123, i32 0, i32 15, !dbg !15622
  %arraydecay172 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %r_mtx171, i64 0, i64 0, !dbg !15620
  call void @mul_m3_m3m3([3 x float]* %arraydecay169, [3 x float]* %121, [3 x float]* %arraydecay172), !dbg !15623
  %arraydecay173 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !15624
  %124 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15625
  %ext174 = getelementptr inbounds %struct.TransData, %struct.TransData* %124, i32 0, i32 13, !dbg !15626
  %125 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext174, align 8, !dbg !15626
  %r_smtx175 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %125, i32 0, i32 16, !dbg !15627
  %arraydecay176 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %r_smtx175, i64 0, i64 0, !dbg !15625
  %arraydecay177 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !15628
  call void @mul_m3_m3m3([3 x float]* %arraydecay173, [3 x float]* %arraydecay176, [3 x float]* %arraydecay177), !dbg !15629
  %arraydecay178 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !15630
  %126 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15631
  %ext179 = getelementptr inbounds %struct.TransData, %struct.TransData* %126, i32 0, i32 13, !dbg !15632
  %127 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext179, align 8, !dbg !15632
  %irot = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %127, i32 0, i32 4, !dbg !15633
  %arraydecay180 = getelementptr inbounds [3 x float], [3 x float]* %irot, i64 0, i64 0, !dbg !15631
  call void @copy_v3_v3(float* %arraydecay178, float* %arraydecay180), !dbg !15634
  %arraydecay181 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %eulmat, i64 0, i64 0, !dbg !15635
  %arraydecay182 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !15636
  %128 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15637
  %ext183 = getelementptr inbounds %struct.TransData, %struct.TransData* %128, i32 0, i32 13, !dbg !15638
  %129 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext183, align 8, !dbg !15638
  %rotOrder184 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %129, i32 0, i32 17, !dbg !15639
  %130 = load i32, i32* %rotOrder184, align 8, !dbg !15639
  %conv = trunc i32 %130 to i16, !dbg !15637
  call void @eulO_to_mat3([3 x float]* %arraydecay181, float* %arraydecay182, i16 signext %conv), !dbg !15640
  %arraydecay185 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %fmat, i64 0, i64 0, !dbg !15641
  %arraydecay186 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !15642
  %arraydecay187 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %eulmat, i64 0, i64 0, !dbg !15643
  call void @mul_m3_m3m3([3 x float]* %arraydecay185, [3 x float]* %arraydecay186, [3 x float]* %arraydecay187), !dbg !15644
  %arraydecay188 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !15645
  %131 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15646
  %ext189 = getelementptr inbounds %struct.TransData, %struct.TransData* %131, i32 0, i32 13, !dbg !15647
  %132 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext189, align 8, !dbg !15647
  %rot = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %132, i32 0, i32 3, !dbg !15648
  %133 = load float*, float** %rot, align 8, !dbg !15648
  %134 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15649
  %ext190 = getelementptr inbounds %struct.TransData, %struct.TransData* %134, i32 0, i32 13, !dbg !15650
  %135 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext190, align 8, !dbg !15650
  %rotOrder191 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %135, i32 0, i32 17, !dbg !15651
  %136 = load i32, i32* %rotOrder191, align 8, !dbg !15651
  %conv192 = trunc i32 %136 to i16, !dbg !15649
  %arraydecay193 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %fmat, i64 0, i64 0, !dbg !15652
  call void @mat3_to_compatible_eulO(float* %arraydecay188, float* %133, i16 signext %conv192, [3 x float]* %arraydecay193), !dbg !15653
  %137 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15654
  %protectflag194 = getelementptr inbounds %struct.TransData, %struct.TransData* %137, i32 0, i32 17, !dbg !15655
  %138 = load i16, i16* %protectflag194, align 4, !dbg !15655
  %arraydecay195 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !15656
  %139 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15657
  %ext196 = getelementptr inbounds %struct.TransData, %struct.TransData* %139, i32 0, i32 13, !dbg !15658
  %140 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext196, align 8, !dbg !15658
  %irot197 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %140, i32 0, i32 4, !dbg !15659
  %arraydecay198 = getelementptr inbounds [3 x float], [3 x float]* %irot197, i64 0, i64 0, !dbg !15657
  call void @protectedRotateBits(i16 signext %138, float* %arraydecay195, float* %arraydecay198), !dbg !15660
  %141 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15661
  %ext199 = getelementptr inbounds %struct.TransData, %struct.TransData* %141, i32 0, i32 13, !dbg !15662
  %142 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext199, align 8, !dbg !15662
  %rot200 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %142, i32 0, i32 3, !dbg !15663
  %143 = load float*, float** %rot200, align 8, !dbg !15663
  %arraydecay201 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !15664
  call void @copy_v3_v3(float* %143, float* %arraydecay201), !dbg !15665
  br label %if.end202

if.end202:                                        ; preds = %if.else168, %if.then137
  br label %if.end203

if.end203:                                        ; preds = %if.end202, %if.then113
  %144 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15666
  %145 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15667
  call void @constraintRotLim(%struct.TransInfo* %144, %struct.TransData* %145), !dbg !15668
  br label %if.end204, !dbg !15669

if.end204:                                        ; preds = %if.end203, %if.end106
  br label %if.end351, !dbg !15670

if.else205:                                       ; preds = %if.else52
  %146 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15671
  %flag206 = getelementptr inbounds %struct.TransData, %struct.TransData* %146, i32 0, i32 16, !dbg !15674
  %147 = load i32, i32* %flag206, align 8, !dbg !15674
  %and207 = and i32 %147, 8192, !dbg !15675
  %cmp208 = icmp eq i32 %and207, 0, !dbg !15676
  br i1 %cmp208, label %if.then210, label %if.end228, !dbg !15677

if.then210:                                       ; preds = %if.else205
  %arraydecay211 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15678
  %148 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15680
  %center212 = getelementptr inbounds %struct.TransData, %struct.TransData* %148, i32 0, i32 7, !dbg !15681
  %arraydecay213 = getelementptr inbounds [3 x float], [3 x float]* %center212, i64 0, i64 0, !dbg !15680
  %149 = load float*, float** %center, align 8, !dbg !15682
  call void @sub_v3_v3v3(float* %arraydecay211, float* %arraydecay213, float* %149), !dbg !15683
  %150 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !15684
  %arraydecay214 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15685
  call void @mul_m3_v3([3 x float]* %150, float* %arraydecay214), !dbg !15686
  %arraydecay215 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15687
  %151 = load float*, float** %center, align 8, !dbg !15688
  call void @add_v3_v3(float* %arraydecay215, float* %151), !dbg !15689
  %arraydecay216 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15690
  %152 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15691
  %center217 = getelementptr inbounds %struct.TransData, %struct.TransData* %152, i32 0, i32 7, !dbg !15692
  %arraydecay218 = getelementptr inbounds [3 x float], [3 x float]* %center217, i64 0, i64 0, !dbg !15691
  call void @sub_v3_v3(float* %arraydecay216, float* %arraydecay218), !dbg !15693
  %153 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15694
  %smtx219 = getelementptr inbounds %struct.TransData, %struct.TransData* %153, i32 0, i32 9, !dbg !15695
  %arraydecay220 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smtx219, i64 0, i64 0, !dbg !15694
  %arraydecay221 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15696
  call void @mul_m3_v3([3 x float]* %arraydecay220, float* %arraydecay221), !dbg !15697
  %154 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15698
  %protectflag222 = getelementptr inbounds %struct.TransData, %struct.TransData* %154, i32 0, i32 17, !dbg !15699
  %155 = load i16, i16* %protectflag222, align 4, !dbg !15699
  %arraydecay223 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15700
  call void @protectedTransBits(i16 signext %155, float* %arraydecay223), !dbg !15701
  %156 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15702
  %loc224 = getelementptr inbounds %struct.TransData, %struct.TransData* %156, i32 0, i32 3, !dbg !15703
  %157 = load float*, float** %loc224, align 8, !dbg !15703
  %158 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15704
  %iloc225 = getelementptr inbounds %struct.TransData, %struct.TransData* %158, i32 0, i32 4, !dbg !15705
  %arraydecay226 = getelementptr inbounds [3 x float], [3 x float]* %iloc225, i64 0, i64 0, !dbg !15704
  %arraydecay227 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15706
  call void @add_v3_v3v3(float* %157, float* %arraydecay226, float* %arraydecay227), !dbg !15707
  br label %if.end228, !dbg !15708

if.end228:                                        ; preds = %if.then210, %if.else205
  %159 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15709
  %160 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15710
  call void @constraintTransLim(%struct.TransInfo* %159, %struct.TransData* %160), !dbg !15711
  %161 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15712
  %flag229 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %161, i32 0, i32 1, !dbg !15714
  %162 = load i32, i32* %flag229, align 4, !dbg !15714
  %and230 = and i32 %162, 16384, !dbg !15715
  %cmp231 = icmp eq i32 %and230, 0, !dbg !15716
  br i1 %cmp231, label %if.then233, label %if.end350, !dbg !15717

if.then233:                                       ; preds = %if.end228
  %163 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15718
  %ext234 = getelementptr inbounds %struct.TransData, %struct.TransData* %163, i32 0, i32 13, !dbg !15721
  %164 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext234, align 8, !dbg !15721
  %rotOrder235 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %164, i32 0, i32 17, !dbg !15722
  %165 = load i32, i32* %rotOrder235, align 8, !dbg !15722
  %cmp236 = icmp eq i32 %165, 0, !dbg !15723
  br i1 %cmp236, label %if.then241, label %lor.lhs.false, !dbg !15724

lor.lhs.false:                                    ; preds = %if.then233
  %166 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15725
  %flag238 = getelementptr inbounds %struct.TransData, %struct.TransData* %166, i32 0, i32 16, !dbg !15726
  %167 = load i32, i32* %flag238, align 8, !dbg !15726
  %and239 = and i32 %167, 8, !dbg !15727
  %tobool240 = icmp ne i32 %and239, 0, !dbg !15727
  br i1 %tobool240, label %if.then241, label %if.else266, !dbg !15728

if.then241:                                       ; preds = %lor.lhs.false, %if.then233
  %168 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15729
  %ext242 = getelementptr inbounds %struct.TransData, %struct.TransData* %168, i32 0, i32 13, !dbg !15732
  %169 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext242, align 8, !dbg !15732
  %quat243 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %169, i32 0, i32 5, !dbg !15733
  %170 = load float*, float** %quat243, align 8, !dbg !15733
  %tobool244 = icmp ne float* %170, null, !dbg !15729
  br i1 %tobool244, label %if.then245, label %if.end265, !dbg !15734

if.then245:                                       ; preds = %if.then241
  %arraydecay246 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %fmat, i64 0, i64 0, !dbg !15735
  %171 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15735
  %smtx247 = getelementptr inbounds %struct.TransData, %struct.TransData* %171, i32 0, i32 9, !dbg !15735
  %arraydecay248 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smtx247, i64 0, i64 0, !dbg !15735
  %172 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !15735
  %173 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15735
  %mtx249 = getelementptr inbounds %struct.TransData, %struct.TransData* %173, i32 0, i32 8, !dbg !15735
  %arraydecay250 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mtx249, i64 0, i64 0, !dbg !15735
  call void @_va_mul_m3_series_4([3 x float]* %arraydecay246, [3 x float]* %arraydecay248, [3 x float]* %172, [3 x float]* %arraydecay250), !dbg !15735
  %arraydecay251 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !15737
  %arraydecay252 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %fmat, i64 0, i64 0, !dbg !15738
  call void @mat3_to_quat(float* %arraydecay251, [3 x float]* %arraydecay252), !dbg !15739
  %174 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15740
  %ext253 = getelementptr inbounds %struct.TransData, %struct.TransData* %174, i32 0, i32 13, !dbg !15741
  %175 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext253, align 8, !dbg !15741
  %quat254 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %175, i32 0, i32 5, !dbg !15742
  %176 = load float*, float** %quat254, align 8, !dbg !15742
  %arraydecay255 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !15743
  %177 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15744
  %ext256 = getelementptr inbounds %struct.TransData, %struct.TransData* %177, i32 0, i32 13, !dbg !15745
  %178 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext256, align 8, !dbg !15745
  %iquat257 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %178, i32 0, i32 6, !dbg !15746
  %arraydecay258 = getelementptr inbounds [4 x float], [4 x float]* %iquat257, i64 0, i64 0, !dbg !15744
  call void @mul_qt_qtqt(float* %176, float* %arraydecay255, float* %arraydecay258), !dbg !15747
  %179 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15748
  %protectflag259 = getelementptr inbounds %struct.TransData, %struct.TransData* %179, i32 0, i32 17, !dbg !15749
  %180 = load i16, i16* %protectflag259, align 4, !dbg !15749
  %181 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15750
  %ext260 = getelementptr inbounds %struct.TransData, %struct.TransData* %181, i32 0, i32 13, !dbg !15751
  %182 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext260, align 8, !dbg !15751
  %quat261 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %182, i32 0, i32 5, !dbg !15752
  %183 = load float*, float** %quat261, align 8, !dbg !15752
  %184 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15753
  %ext262 = getelementptr inbounds %struct.TransData, %struct.TransData* %184, i32 0, i32 13, !dbg !15754
  %185 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext262, align 8, !dbg !15754
  %iquat263 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %185, i32 0, i32 6, !dbg !15755
  %arraydecay264 = getelementptr inbounds [4 x float], [4 x float]* %iquat263, i64 0, i64 0, !dbg !15753
  call void @protectedQuaternionBits(i16 signext %180, float* %183, float* %arraydecay264), !dbg !15756
  br label %if.end265, !dbg !15757

if.end265:                                        ; preds = %if.then245, %if.then241
  br label %if.end349, !dbg !15758

if.else266:                                       ; preds = %lor.lhs.false
  %186 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15759
  %ext267 = getelementptr inbounds %struct.TransData, %struct.TransData* %186, i32 0, i32 13, !dbg !15761
  %187 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext267, align 8, !dbg !15761
  %rotOrder268 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %187, i32 0, i32 17, !dbg !15762
  %188 = load i32, i32* %rotOrder268, align 8, !dbg !15762
  %cmp269 = icmp eq i32 %188, -1, !dbg !15763
  br i1 %cmp269, label %if.then271, label %if.else305, !dbg !15764

if.then271:                                       ; preds = %if.else266
  call void @llvm.dbg.declare(metadata [4 x float]* %iquat272, metadata !15765, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.declare(metadata [4 x float]* %tquat273, metadata !15768, metadata !DIExpression()), !dbg !15769
  %arraydecay274 = getelementptr inbounds [4 x float], [4 x float]* %iquat272, i64 0, i64 0, !dbg !15770
  %189 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15771
  %ext275 = getelementptr inbounds %struct.TransData, %struct.TransData* %189, i32 0, i32 13, !dbg !15772
  %190 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext275, align 8, !dbg !15772
  %irotAxis276 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %190, i32 0, i32 10, !dbg !15773
  %arraydecay277 = getelementptr inbounds [4 x float], [4 x float]* %irotAxis276, i64 0, i64 0, !dbg !15771
  %191 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15774
  %ext278 = getelementptr inbounds %struct.TransData, %struct.TransData* %191, i32 0, i32 13, !dbg !15775
  %192 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext278, align 8, !dbg !15775
  %irotAngle279 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %192, i32 0, i32 8, !dbg !15776
  %193 = load float, float* %irotAngle279, align 8, !dbg !15776
  call void @axis_angle_to_quat(float* %arraydecay274, float* %arraydecay277, float %193), !dbg !15777
  %arraydecay280 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %fmat, i64 0, i64 0, !dbg !15778
  %194 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15778
  %smtx281 = getelementptr inbounds %struct.TransData, %struct.TransData* %194, i32 0, i32 9, !dbg !15778
  %arraydecay282 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smtx281, i64 0, i64 0, !dbg !15778
  %195 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !15778
  %196 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15778
  %mtx283 = getelementptr inbounds %struct.TransData, %struct.TransData* %196, i32 0, i32 8, !dbg !15778
  %arraydecay284 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mtx283, i64 0, i64 0, !dbg !15778
  call void @_va_mul_m3_series_4([3 x float]* %arraydecay280, [3 x float]* %arraydecay282, [3 x float]* %195, [3 x float]* %arraydecay284), !dbg !15778
  %arraydecay285 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !15779
  %arraydecay286 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %fmat, i64 0, i64 0, !dbg !15780
  call void @mat3_to_quat(float* %arraydecay285, [3 x float]* %arraydecay286), !dbg !15781
  %arraydecay287 = getelementptr inbounds [4 x float], [4 x float]* %tquat273, i64 0, i64 0, !dbg !15782
  %arraydecay288 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !15783
  %arraydecay289 = getelementptr inbounds [4 x float], [4 x float]* %iquat272, i64 0, i64 0, !dbg !15784
  call void @mul_qt_qtqt(float* %arraydecay287, float* %arraydecay288, float* %arraydecay289), !dbg !15785
  %197 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15786
  %ext290 = getelementptr inbounds %struct.TransData, %struct.TransData* %197, i32 0, i32 13, !dbg !15787
  %198 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext290, align 8, !dbg !15787
  %rotAxis291 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %198, i32 0, i32 9, !dbg !15788
  %199 = load float*, float** %rotAxis291, align 8, !dbg !15788
  %200 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15789
  %ext292 = getelementptr inbounds %struct.TransData, %struct.TransData* %200, i32 0, i32 13, !dbg !15790
  %201 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext292, align 8, !dbg !15790
  %rotAngle293 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %201, i32 0, i32 7, !dbg !15791
  %202 = load float*, float** %rotAngle293, align 8, !dbg !15791
  %arraydecay294 = getelementptr inbounds [4 x float], [4 x float]* %tquat273, i64 0, i64 0, !dbg !15792
  call void @quat_to_axis_angle(float* %199, float* %202, float* %arraydecay294), !dbg !15793
  %203 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15794
  %protectflag295 = getelementptr inbounds %struct.TransData, %struct.TransData* %203, i32 0, i32 17, !dbg !15795
  %204 = load i16, i16* %protectflag295, align 4, !dbg !15795
  %205 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15796
  %ext296 = getelementptr inbounds %struct.TransData, %struct.TransData* %205, i32 0, i32 13, !dbg !15797
  %206 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext296, align 8, !dbg !15797
  %rotAxis297 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %206, i32 0, i32 9, !dbg !15798
  %207 = load float*, float** %rotAxis297, align 8, !dbg !15798
  %208 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15799
  %ext298 = getelementptr inbounds %struct.TransData, %struct.TransData* %208, i32 0, i32 13, !dbg !15800
  %209 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext298, align 8, !dbg !15800
  %rotAngle299 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %209, i32 0, i32 7, !dbg !15801
  %210 = load float*, float** %rotAngle299, align 8, !dbg !15801
  %211 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15802
  %ext300 = getelementptr inbounds %struct.TransData, %struct.TransData* %211, i32 0, i32 13, !dbg !15803
  %212 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext300, align 8, !dbg !15803
  %irotAxis301 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %212, i32 0, i32 10, !dbg !15804
  %arraydecay302 = getelementptr inbounds [4 x float], [4 x float]* %irotAxis301, i64 0, i64 0, !dbg !15802
  %213 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15805
  %ext303 = getelementptr inbounds %struct.TransData, %struct.TransData* %213, i32 0, i32 13, !dbg !15806
  %214 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext303, align 8, !dbg !15806
  %irotAngle304 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %214, i32 0, i32 8, !dbg !15807
  %215 = load float, float* %irotAngle304, align 8, !dbg !15807
  call void @protectedAxisAngleBits(i16 signext %204, float* %207, float* %210, float* %arraydecay302, float %215), !dbg !15808
  br label %if.end348, !dbg !15809

if.else305:                                       ; preds = %if.else266
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %obmat306, metadata !15810, metadata !DIExpression()), !dbg !15812
  %arraydecay307 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !15813
  %216 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !15814
  %217 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15815
  %mtx308 = getelementptr inbounds %struct.TransData, %struct.TransData* %217, i32 0, i32 8, !dbg !15816
  %arraydecay309 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mtx308, i64 0, i64 0, !dbg !15815
  call void @mul_m3_m3m3([3 x float]* %arraydecay307, [3 x float]* %216, [3 x float]* %arraydecay309), !dbg !15817
  %arraydecay310 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !15818
  %218 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15819
  %smtx311 = getelementptr inbounds %struct.TransData, %struct.TransData* %218, i32 0, i32 9, !dbg !15820
  %arraydecay312 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smtx311, i64 0, i64 0, !dbg !15819
  %arraydecay313 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !15821
  call void @mul_m3_m3m3([3 x float]* %arraydecay310, [3 x float]* %arraydecay312, [3 x float]* %arraydecay313), !dbg !15822
  %arraydecay314 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !15823
  %219 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15824
  %ext315 = getelementptr inbounds %struct.TransData, %struct.TransData* %219, i32 0, i32 13, !dbg !15825
  %220 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext315, align 8, !dbg !15825
  %irot316 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %220, i32 0, i32 4, !dbg !15826
  %arraydecay317 = getelementptr inbounds [3 x float], [3 x float]* %irot316, i64 0, i64 0, !dbg !15824
  %221 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15827
  %ext318 = getelementptr inbounds %struct.TransData, %struct.TransData* %221, i32 0, i32 13, !dbg !15828
  %222 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext318, align 8, !dbg !15828
  %drot = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %222, i32 0, i32 0, !dbg !15829
  %arraydecay319 = getelementptr inbounds [3 x float], [3 x float]* %drot, i64 0, i64 0, !dbg !15827
  call void @add_v3_v3v3(float* %arraydecay314, float* %arraydecay317, float* %arraydecay319), !dbg !15830
  %arraydecay320 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %obmat306, i64 0, i64 0, !dbg !15831
  %arraydecay321 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !15832
  %223 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15833
  %ext322 = getelementptr inbounds %struct.TransData, %struct.TransData* %223, i32 0, i32 13, !dbg !15834
  %224 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext322, align 8, !dbg !15834
  %rotOrder323 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %224, i32 0, i32 17, !dbg !15835
  %225 = load i32, i32* %rotOrder323, align 8, !dbg !15835
  %conv324 = trunc i32 %225 to i16, !dbg !15833
  call void @eulO_to_mat3([3 x float]* %arraydecay320, float* %arraydecay321, i16 signext %conv324), !dbg !15836
  %arraydecay325 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %fmat, i64 0, i64 0, !dbg !15837
  %arraydecay326 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !15838
  %arraydecay327 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %obmat306, i64 0, i64 0, !dbg !15839
  call void @mul_m3_m3m3([3 x float]* %arraydecay325, [3 x float]* %arraydecay326, [3 x float]* %arraydecay327), !dbg !15840
  %arraydecay328 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !15841
  %226 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15842
  %ext329 = getelementptr inbounds %struct.TransData, %struct.TransData* %226, i32 0, i32 13, !dbg !15843
  %227 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext329, align 8, !dbg !15843
  %rot330 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %227, i32 0, i32 3, !dbg !15844
  %228 = load float*, float** %rot330, align 8, !dbg !15844
  %229 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15845
  %ext331 = getelementptr inbounds %struct.TransData, %struct.TransData* %229, i32 0, i32 13, !dbg !15846
  %230 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext331, align 8, !dbg !15846
  %rotOrder332 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %230, i32 0, i32 17, !dbg !15847
  %231 = load i32, i32* %rotOrder332, align 8, !dbg !15847
  %conv333 = trunc i32 %231 to i16, !dbg !15845
  %arraydecay334 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %fmat, i64 0, i64 0, !dbg !15848
  call void @mat3_to_compatible_eulO(float* %arraydecay328, float* %228, i16 signext %conv333, [3 x float]* %arraydecay334), !dbg !15849
  %arraydecay335 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !15850
  %arraydecay336 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !15851
  %232 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15852
  %ext337 = getelementptr inbounds %struct.TransData, %struct.TransData* %232, i32 0, i32 13, !dbg !15853
  %233 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext337, align 8, !dbg !15853
  %drot338 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %233, i32 0, i32 0, !dbg !15854
  %arraydecay339 = getelementptr inbounds [3 x float], [3 x float]* %drot338, i64 0, i64 0, !dbg !15852
  call void @sub_v3_v3v3(float* %arraydecay335, float* %arraydecay336, float* %arraydecay339), !dbg !15855
  %234 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15856
  %protectflag340 = getelementptr inbounds %struct.TransData, %struct.TransData* %234, i32 0, i32 17, !dbg !15857
  %235 = load i16, i16* %protectflag340, align 4, !dbg !15857
  %arraydecay341 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !15858
  %236 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15859
  %ext342 = getelementptr inbounds %struct.TransData, %struct.TransData* %236, i32 0, i32 13, !dbg !15860
  %237 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext342, align 8, !dbg !15860
  %irot343 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %237, i32 0, i32 4, !dbg !15861
  %arraydecay344 = getelementptr inbounds [3 x float], [3 x float]* %irot343, i64 0, i64 0, !dbg !15859
  call void @protectedRotateBits(i16 signext %235, float* %arraydecay341, float* %arraydecay344), !dbg !15862
  %238 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15863
  %ext345 = getelementptr inbounds %struct.TransData, %struct.TransData* %238, i32 0, i32 13, !dbg !15864
  %239 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext345, align 8, !dbg !15864
  %rot346 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %239, i32 0, i32 3, !dbg !15865
  %240 = load float*, float** %rot346, align 8, !dbg !15865
  %arraydecay347 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !15866
  call void @copy_v3_v3(float* %240, float* %arraydecay347), !dbg !15867
  br label %if.end348

if.end348:                                        ; preds = %if.else305, %if.then271
  br label %if.end349

if.end349:                                        ; preds = %if.end348, %if.end265
  %241 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !15868
  %242 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !15869
  call void @constraintRotLim(%struct.TransInfo* %241, %struct.TransData* %242), !dbg !15870
  br label %if.end350, !dbg !15871

if.end350:                                        ; preds = %if.end349, %if.end228
  br label %if.end351

if.end351:                                        ; preds = %if.end350, %if.end204
  br label %if.end352

if.end352:                                        ; preds = %if.end351, %if.end51
  ret void, !dbg !15872
}

declare dso_local void @_va_mul_m3_series_4([3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*) #2

declare dso_local void @mat3_to_quat(float*, [3 x float]*) #2

declare dso_local void @mul_qt_qtqt(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @protectedQuaternionBits(i16 signext %protectflag, float* %quat, float* %oldquat) #0 !dbg !15873 {
entry:
  %protectflag.addr = alloca i16, align 2
  %quat.addr = alloca float*, align 8
  %oldquat.addr = alloca float*, align 8
  %eul = alloca [3 x float], align 4
  %oldeul = alloca [3 x float], align 4
  %nquat = alloca [4 x float], align 16
  %noldquat = alloca [4 x float], align 16
  %qlen = alloca float, align 4
  store i16 %protectflag, i16* %protectflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %protectflag.addr, metadata !15876, metadata !DIExpression()), !dbg !15877
  store float* %quat, float** %quat.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quat.addr, metadata !15878, metadata !DIExpression()), !dbg !15879
  store float* %oldquat, float** %oldquat.addr, align 8
  call void @llvm.dbg.declare(metadata float** %oldquat.addr, metadata !15880, metadata !DIExpression()), !dbg !15881
  %0 = load i16, i16* %protectflag.addr, align 2, !dbg !15882
  %conv = sext i16 %0 to i32, !dbg !15882
  %and = and i32 %conv, 568, !dbg !15884
  %cmp = icmp eq i32 %and, 0, !dbg !15885
  br i1 %cmp, label %if.then, label %if.end, !dbg !15886

if.then:                                          ; preds = %entry
  br label %if.end75, !dbg !15887

if.end:                                           ; preds = %entry
  %1 = load i16, i16* %protectflag.addr, align 2, !dbg !15888
  %conv2 = sext i16 %1 to i32, !dbg !15888
  %and3 = and i32 %conv2, 1024, !dbg !15890
  %tobool = icmp ne i32 %and3, 0, !dbg !15890
  br i1 %tobool, label %if.then4, label %if.else, !dbg !15891

if.then4:                                         ; preds = %if.end
  %2 = load i16, i16* %protectflag.addr, align 2, !dbg !15892
  %conv5 = sext i16 %2 to i32, !dbg !15892
  %and6 = and i32 %conv5, 512, !dbg !15895
  %tobool7 = icmp ne i32 %and6, 0, !dbg !15895
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !15896

if.then8:                                         ; preds = %if.then4
  %3 = load float*, float** %oldquat.addr, align 8, !dbg !15897
  %arrayidx = getelementptr inbounds float, float* %3, i64 0, !dbg !15897
  %4 = load float, float* %arrayidx, align 4, !dbg !15897
  %5 = load float*, float** %quat.addr, align 8, !dbg !15898
  %arrayidx9 = getelementptr inbounds float, float* %5, i64 0, !dbg !15898
  store float %4, float* %arrayidx9, align 4, !dbg !15899
  br label %if.end10, !dbg !15898

if.end10:                                         ; preds = %if.then8, %if.then4
  %6 = load i16, i16* %protectflag.addr, align 2, !dbg !15900
  %conv11 = sext i16 %6 to i32, !dbg !15900
  %and12 = and i32 %conv11, 8, !dbg !15902
  %tobool13 = icmp ne i32 %and12, 0, !dbg !15902
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !15903

if.then14:                                        ; preds = %if.end10
  %7 = load float*, float** %oldquat.addr, align 8, !dbg !15904
  %arrayidx15 = getelementptr inbounds float, float* %7, i64 1, !dbg !15904
  %8 = load float, float* %arrayidx15, align 4, !dbg !15904
  %9 = load float*, float** %quat.addr, align 8, !dbg !15905
  %arrayidx16 = getelementptr inbounds float, float* %9, i64 1, !dbg !15905
  store float %8, float* %arrayidx16, align 4, !dbg !15906
  br label %if.end17, !dbg !15905

if.end17:                                         ; preds = %if.then14, %if.end10
  %10 = load i16, i16* %protectflag.addr, align 2, !dbg !15907
  %conv18 = sext i16 %10 to i32, !dbg !15907
  %and19 = and i32 %conv18, 16, !dbg !15909
  %tobool20 = icmp ne i32 %and19, 0, !dbg !15909
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !15910

if.then21:                                        ; preds = %if.end17
  %11 = load float*, float** %oldquat.addr, align 8, !dbg !15911
  %arrayidx22 = getelementptr inbounds float, float* %11, i64 2, !dbg !15911
  %12 = load float, float* %arrayidx22, align 4, !dbg !15911
  %13 = load float*, float** %quat.addr, align 8, !dbg !15912
  %arrayidx23 = getelementptr inbounds float, float* %13, i64 2, !dbg !15912
  store float %12, float* %arrayidx23, align 4, !dbg !15913
  br label %if.end24, !dbg !15912

if.end24:                                         ; preds = %if.then21, %if.end17
  %14 = load i16, i16* %protectflag.addr, align 2, !dbg !15914
  %conv25 = sext i16 %14 to i32, !dbg !15914
  %and26 = and i32 %conv25, 32, !dbg !15916
  %tobool27 = icmp ne i32 %and26, 0, !dbg !15916
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !15917

if.then28:                                        ; preds = %if.end24
  %15 = load float*, float** %oldquat.addr, align 8, !dbg !15918
  %arrayidx29 = getelementptr inbounds float, float* %15, i64 3, !dbg !15918
  %16 = load float, float* %arrayidx29, align 4, !dbg !15918
  %17 = load float*, float** %quat.addr, align 8, !dbg !15919
  %arrayidx30 = getelementptr inbounds float, float* %17, i64 3, !dbg !15919
  store float %16, float* %arrayidx30, align 4, !dbg !15920
  br label %if.end31, !dbg !15919

if.end31:                                         ; preds = %if.then28, %if.end24
  br label %if.end75, !dbg !15921

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata [3 x float]* %eul, metadata !15922, metadata !DIExpression()), !dbg !15924
  call void @llvm.dbg.declare(metadata [3 x float]* %oldeul, metadata !15925, metadata !DIExpression()), !dbg !15926
  call void @llvm.dbg.declare(metadata [4 x float]* %nquat, metadata !15927, metadata !DIExpression()), !dbg !15928
  call void @llvm.dbg.declare(metadata [4 x float]* %noldquat, metadata !15929, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.declare(metadata float* %qlen, metadata !15931, metadata !DIExpression()), !dbg !15932
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %nquat, i64 0, i64 0, !dbg !15933
  %18 = load float*, float** %quat.addr, align 8, !dbg !15934
  %call = call float @normalize_qt_qt(float* %arraydecay, float* %18), !dbg !15935
  store float %call, float* %qlen, align 4, !dbg !15936
  %arraydecay32 = getelementptr inbounds [4 x float], [4 x float]* %noldquat, i64 0, i64 0, !dbg !15937
  %19 = load float*, float** %oldquat.addr, align 8, !dbg !15938
  %call33 = call float @normalize_qt_qt(float* %arraydecay32, float* %19), !dbg !15939
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !15940
  %arraydecay35 = getelementptr inbounds [4 x float], [4 x float]* %nquat, i64 0, i64 0, !dbg !15941
  call void @quat_to_eul(float* %arraydecay34, float* %arraydecay35), !dbg !15942
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %oldeul, i64 0, i64 0, !dbg !15943
  %arraydecay37 = getelementptr inbounds [4 x float], [4 x float]* %noldquat, i64 0, i64 0, !dbg !15944
  call void @quat_to_eul(float* %arraydecay36, float* %arraydecay37), !dbg !15945
  %20 = load i16, i16* %protectflag.addr, align 2, !dbg !15946
  %conv38 = sext i16 %20 to i32, !dbg !15946
  %and39 = and i32 %conv38, 8, !dbg !15948
  %tobool40 = icmp ne i32 %and39, 0, !dbg !15948
  br i1 %tobool40, label %if.then41, label %if.end44, !dbg !15949

if.then41:                                        ; preds = %if.else
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %oldeul, i64 0, i64 0, !dbg !15950
  %21 = load float, float* %arrayidx42, align 4, !dbg !15950
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !15951
  store float %21, float* %arrayidx43, align 4, !dbg !15952
  br label %if.end44, !dbg !15951

if.end44:                                         ; preds = %if.then41, %if.else
  %22 = load i16, i16* %protectflag.addr, align 2, !dbg !15953
  %conv45 = sext i16 %22 to i32, !dbg !15953
  %and46 = and i32 %conv45, 16, !dbg !15955
  %tobool47 = icmp ne i32 %and46, 0, !dbg !15955
  br i1 %tobool47, label %if.then48, label %if.end51, !dbg !15956

if.then48:                                        ; preds = %if.end44
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %oldeul, i64 0, i64 1, !dbg !15957
  %23 = load float, float* %arrayidx49, align 4, !dbg !15957
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 1, !dbg !15958
  store float %23, float* %arrayidx50, align 4, !dbg !15959
  br label %if.end51, !dbg !15958

if.end51:                                         ; preds = %if.then48, %if.end44
  %24 = load i16, i16* %protectflag.addr, align 2, !dbg !15960
  %conv52 = sext i16 %24 to i32, !dbg !15960
  %and53 = and i32 %conv52, 32, !dbg !15962
  %tobool54 = icmp ne i32 %and53, 0, !dbg !15962
  br i1 %tobool54, label %if.then55, label %if.end58, !dbg !15963

if.then55:                                        ; preds = %if.end51
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %oldeul, i64 0, i64 2, !dbg !15964
  %25 = load float, float* %arrayidx56, align 4, !dbg !15964
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 2, !dbg !15965
  store float %25, float* %arrayidx57, align 4, !dbg !15966
  br label %if.end58, !dbg !15965

if.end58:                                         ; preds = %if.then55, %if.end51
  %26 = load float*, float** %quat.addr, align 8, !dbg !15967
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !15968
  call void @eul_to_quat(float* %26, float* %arraydecay59), !dbg !15969
  %27 = load float*, float** %quat.addr, align 8, !dbg !15970
  %28 = load float, float* %qlen, align 4, !dbg !15971
  call void @mul_qt_fl(float* %27, float %28), !dbg !15972
  %arrayidx60 = getelementptr inbounds [4 x float], [4 x float]* %nquat, i64 0, i64 0, !dbg !15973
  %29 = load float, float* %arrayidx60, align 16, !dbg !15973
  %cmp61 = fcmp olt float %29, 0.000000e+00, !dbg !15975
  br i1 %cmp61, label %land.lhs.true, label %lor.lhs.false, !dbg !15976

land.lhs.true:                                    ; preds = %if.end58
  %30 = load float*, float** %quat.addr, align 8, !dbg !15977
  %arrayidx63 = getelementptr inbounds float, float* %30, i64 0, !dbg !15977
  %31 = load float, float* %arrayidx63, align 4, !dbg !15977
  %cmp64 = fcmp ogt float %31, 0.000000e+00, !dbg !15978
  br i1 %cmp64, label %if.then73, label %lor.lhs.false, !dbg !15979

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end58
  %arrayidx66 = getelementptr inbounds [4 x float], [4 x float]* %nquat, i64 0, i64 0, !dbg !15980
  %32 = load float, float* %arrayidx66, align 16, !dbg !15980
  %cmp67 = fcmp ogt float %32, 0.000000e+00, !dbg !15981
  br i1 %cmp67, label %land.lhs.true69, label %if.end74, !dbg !15982

land.lhs.true69:                                  ; preds = %lor.lhs.false
  %33 = load float*, float** %quat.addr, align 8, !dbg !15983
  %arrayidx70 = getelementptr inbounds float, float* %33, i64 0, !dbg !15983
  %34 = load float, float* %arrayidx70, align 4, !dbg !15983
  %cmp71 = fcmp olt float %34, 0.000000e+00, !dbg !15984
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !15985

if.then73:                                        ; preds = %land.lhs.true69, %land.lhs.true
  %35 = load float*, float** %quat.addr, align 8, !dbg !15986
  call void @mul_qt_fl(float* %35, float -1.000000e+00), !dbg !15988
  br label %if.end74, !dbg !15989

if.end74:                                         ; preds = %if.then73, %land.lhs.true69, %lor.lhs.false
  br label %if.end75

if.end75:                                         ; preds = %if.then, %if.end74, %if.end31
  ret void, !dbg !15990
}

declare dso_local void @axis_angle_to_quat(float*, float*, float) #2

declare dso_local void @quat_to_axis_angle(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @protectedAxisAngleBits(i16 signext %protectflag, float* %axis, float* %angle, float* %oldAxis, float %oldAngle) #0 !dbg !15991 {
entry:
  %protectflag.addr = alloca i16, align 2
  %axis.addr = alloca float*, align 8
  %angle.addr = alloca float*, align 8
  %oldAxis.addr = alloca float*, align 8
  %oldAngle.addr = alloca float, align 4
  %eul = alloca [3 x float], align 4
  %oldeul = alloca [3 x float], align 4
  store i16 %protectflag, i16* %protectflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %protectflag.addr, metadata !15994, metadata !DIExpression()), !dbg !15995
  store float* %axis, float** %axis.addr, align 8
  call void @llvm.dbg.declare(metadata float** %axis.addr, metadata !15996, metadata !DIExpression()), !dbg !15997
  store float* %angle, float** %angle.addr, align 8
  call void @llvm.dbg.declare(metadata float** %angle.addr, metadata !15998, metadata !DIExpression()), !dbg !15999
  store float* %oldAxis, float** %oldAxis.addr, align 8
  call void @llvm.dbg.declare(metadata float** %oldAxis.addr, metadata !16000, metadata !DIExpression()), !dbg !16001
  store float %oldAngle, float* %oldAngle.addr, align 4
  call void @llvm.dbg.declare(metadata float* %oldAngle.addr, metadata !16002, metadata !DIExpression()), !dbg !16003
  %0 = load i16, i16* %protectflag.addr, align 2, !dbg !16004
  %conv = sext i16 %0 to i32, !dbg !16004
  %and = and i32 %conv, 568, !dbg !16006
  %cmp = icmp eq i32 %and, 0, !dbg !16007
  br i1 %cmp, label %if.then, label %if.end, !dbg !16008

if.then:                                          ; preds = %entry
  br label %if.end68, !dbg !16009

if.end:                                           ; preds = %entry
  %1 = load i16, i16* %protectflag.addr, align 2, !dbg !16010
  %conv2 = sext i16 %1 to i32, !dbg !16010
  %and3 = and i32 %conv2, 1024, !dbg !16012
  %tobool = icmp ne i32 %and3, 0, !dbg !16012
  br i1 %tobool, label %if.then4, label %if.else, !dbg !16013

if.then4:                                         ; preds = %if.end
  %2 = load i16, i16* %protectflag.addr, align 2, !dbg !16014
  %conv5 = sext i16 %2 to i32, !dbg !16014
  %and6 = and i32 %conv5, 512, !dbg !16017
  %tobool7 = icmp ne i32 %and6, 0, !dbg !16017
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !16018

if.then8:                                         ; preds = %if.then4
  %3 = load float, float* %oldAngle.addr, align 4, !dbg !16019
  %4 = load float*, float** %angle.addr, align 8, !dbg !16020
  store float %3, float* %4, align 4, !dbg !16021
  br label %if.end9, !dbg !16022

if.end9:                                          ; preds = %if.then8, %if.then4
  %5 = load i16, i16* %protectflag.addr, align 2, !dbg !16023
  %conv10 = sext i16 %5 to i32, !dbg !16023
  %and11 = and i32 %conv10, 8, !dbg !16025
  %tobool12 = icmp ne i32 %and11, 0, !dbg !16025
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !16026

if.then13:                                        ; preds = %if.end9
  %6 = load float*, float** %oldAxis.addr, align 8, !dbg !16027
  %arrayidx = getelementptr inbounds float, float* %6, i64 0, !dbg !16027
  %7 = load float, float* %arrayidx, align 4, !dbg !16027
  %8 = load float*, float** %axis.addr, align 8, !dbg !16028
  %arrayidx14 = getelementptr inbounds float, float* %8, i64 0, !dbg !16028
  store float %7, float* %arrayidx14, align 4, !dbg !16029
  br label %if.end15, !dbg !16028

if.end15:                                         ; preds = %if.then13, %if.end9
  %9 = load i16, i16* %protectflag.addr, align 2, !dbg !16030
  %conv16 = sext i16 %9 to i32, !dbg !16030
  %and17 = and i32 %conv16, 16, !dbg !16032
  %tobool18 = icmp ne i32 %and17, 0, !dbg !16032
  br i1 %tobool18, label %if.then19, label %if.end22, !dbg !16033

if.then19:                                        ; preds = %if.end15
  %10 = load float*, float** %oldAxis.addr, align 8, !dbg !16034
  %arrayidx20 = getelementptr inbounds float, float* %10, i64 1, !dbg !16034
  %11 = load float, float* %arrayidx20, align 4, !dbg !16034
  %12 = load float*, float** %axis.addr, align 8, !dbg !16035
  %arrayidx21 = getelementptr inbounds float, float* %12, i64 1, !dbg !16035
  store float %11, float* %arrayidx21, align 4, !dbg !16036
  br label %if.end22, !dbg !16035

if.end22:                                         ; preds = %if.then19, %if.end15
  %13 = load i16, i16* %protectflag.addr, align 2, !dbg !16037
  %conv23 = sext i16 %13 to i32, !dbg !16037
  %and24 = and i32 %conv23, 32, !dbg !16039
  %tobool25 = icmp ne i32 %and24, 0, !dbg !16039
  br i1 %tobool25, label %if.then26, label %if.end29, !dbg !16040

if.then26:                                        ; preds = %if.end22
  %14 = load float*, float** %oldAxis.addr, align 8, !dbg !16041
  %arrayidx27 = getelementptr inbounds float, float* %14, i64 2, !dbg !16041
  %15 = load float, float* %arrayidx27, align 4, !dbg !16041
  %16 = load float*, float** %axis.addr, align 8, !dbg !16042
  %arrayidx28 = getelementptr inbounds float, float* %16, i64 2, !dbg !16042
  store float %15, float* %arrayidx28, align 4, !dbg !16043
  br label %if.end29, !dbg !16042

if.end29:                                         ; preds = %if.then26, %if.end22
  br label %if.end68, !dbg !16044

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata [3 x float]* %eul, metadata !16045, metadata !DIExpression()), !dbg !16047
  call void @llvm.dbg.declare(metadata [3 x float]* %oldeul, metadata !16048, metadata !DIExpression()), !dbg !16049
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !16050
  %17 = load float*, float** %axis.addr, align 8, !dbg !16051
  %18 = load float*, float** %angle.addr, align 8, !dbg !16052
  %19 = load float, float* %18, align 4, !dbg !16053
  call void @axis_angle_to_eulO(float* %arraydecay, i16 signext 1, float* %17, float %19), !dbg !16054
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %oldeul, i64 0, i64 0, !dbg !16055
  %20 = load float*, float** %oldAxis.addr, align 8, !dbg !16056
  %21 = load float, float* %oldAngle.addr, align 4, !dbg !16057
  call void @axis_angle_to_eulO(float* %arraydecay30, i16 signext 1, float* %20, float %21), !dbg !16058
  %22 = load i16, i16* %protectflag.addr, align 2, !dbg !16059
  %conv31 = sext i16 %22 to i32, !dbg !16059
  %and32 = and i32 %conv31, 8, !dbg !16061
  %tobool33 = icmp ne i32 %and32, 0, !dbg !16061
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !16062

if.then34:                                        ; preds = %if.else
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %oldeul, i64 0, i64 0, !dbg !16063
  %23 = load float, float* %arrayidx35, align 4, !dbg !16063
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !16064
  store float %23, float* %arrayidx36, align 4, !dbg !16065
  br label %if.end37, !dbg !16064

if.end37:                                         ; preds = %if.then34, %if.else
  %24 = load i16, i16* %protectflag.addr, align 2, !dbg !16066
  %conv38 = sext i16 %24 to i32, !dbg !16066
  %and39 = and i32 %conv38, 16, !dbg !16068
  %tobool40 = icmp ne i32 %and39, 0, !dbg !16068
  br i1 %tobool40, label %if.then41, label %if.end44, !dbg !16069

if.then41:                                        ; preds = %if.end37
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %oldeul, i64 0, i64 1, !dbg !16070
  %25 = load float, float* %arrayidx42, align 4, !dbg !16070
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 1, !dbg !16071
  store float %25, float* %arrayidx43, align 4, !dbg !16072
  br label %if.end44, !dbg !16071

if.end44:                                         ; preds = %if.then41, %if.end37
  %26 = load i16, i16* %protectflag.addr, align 2, !dbg !16073
  %conv45 = sext i16 %26 to i32, !dbg !16073
  %and46 = and i32 %conv45, 32, !dbg !16075
  %tobool47 = icmp ne i32 %and46, 0, !dbg !16075
  br i1 %tobool47, label %if.then48, label %if.end51, !dbg !16076

if.then48:                                        ; preds = %if.end44
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %oldeul, i64 0, i64 2, !dbg !16077
  %27 = load float, float* %arrayidx49, align 4, !dbg !16077
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 2, !dbg !16078
  store float %27, float* %arrayidx50, align 4, !dbg !16079
  br label %if.end51, !dbg !16078

if.end51:                                         ; preds = %if.then48, %if.end44
  %28 = load float*, float** %axis.addr, align 8, !dbg !16080
  %29 = load float*, float** %angle.addr, align 8, !dbg !16081
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !16082
  call void @eulO_to_axis_angle(float* %28, float* %29, float* %arraydecay52, i16 signext 1), !dbg !16083
  %30 = load float*, float** %axis.addr, align 8, !dbg !16084
  %arrayidx53 = getelementptr inbounds float, float* %30, i64 0, !dbg !16084
  %31 = load float, float* %arrayidx53, align 4, !dbg !16084
  %32 = load float*, float** %axis.addr, align 8, !dbg !16084
  %arrayidx54 = getelementptr inbounds float, float* %32, i64 1, !dbg !16084
  %33 = load float, float* %arrayidx54, align 4, !dbg !16084
  %sub = fsub float %31, %33, !dbg !16084
  %34 = call float @llvm.fabs.f32(float %sub), !dbg !16084
  %cmp55 = fcmp oge float %34, 0x3E80000000000000, !dbg !16084
  %35 = zext i1 %cmp55 to i64, !dbg !16084
  %cond = select i1 %cmp55, i32 0, i32 1, !dbg !16084
  %tobool57 = icmp ne i32 %cond, 0, !dbg !16084
  br i1 %tobool57, label %land.lhs.true, label %if.end67, !dbg !16086

land.lhs.true:                                    ; preds = %if.end51
  %36 = load float*, float** %axis.addr, align 8, !dbg !16087
  %arrayidx58 = getelementptr inbounds float, float* %36, i64 1, !dbg !16087
  %37 = load float, float* %arrayidx58, align 4, !dbg !16087
  %38 = load float*, float** %axis.addr, align 8, !dbg !16087
  %arrayidx59 = getelementptr inbounds float, float* %38, i64 2, !dbg !16087
  %39 = load float, float* %arrayidx59, align 4, !dbg !16087
  %sub60 = fsub float %37, %39, !dbg !16087
  %40 = call float @llvm.fabs.f32(float %sub60), !dbg !16087
  %cmp61 = fcmp oge float %40, 0x3E80000000000000, !dbg !16087
  %41 = zext i1 %cmp61 to i64, !dbg !16087
  %cond63 = select i1 %cmp61, i32 0, i32 1, !dbg !16087
  %tobool64 = icmp ne i32 %cond63, 0, !dbg !16087
  br i1 %tobool64, label %if.then65, label %if.end67, !dbg !16088

if.then65:                                        ; preds = %land.lhs.true
  %42 = load float*, float** %axis.addr, align 8, !dbg !16089
  %arrayidx66 = getelementptr inbounds float, float* %42, i64 1, !dbg !16089
  store float 1.000000e+00, float* %arrayidx66, align 4, !dbg !16091
  br label %if.end67, !dbg !16092

if.end67:                                         ; preds = %if.then65, %land.lhs.true, %if.end51
  br label %if.end68

if.end68:                                         ; preds = %if.then, %if.end67, %if.end29
  ret void, !dbg !16093
}

declare dso_local void @eulO_to_mat3([3 x float]*, float*, i16 signext) #2

declare dso_local void @mat3_to_compatible_eulO(float*, float*, i16 signext, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @protectedRotateBits(i16 signext %protectflag, float* %eul, float* %oldeul) #0 !dbg !16094 {
entry:
  %protectflag.addr = alloca i16, align 2
  %eul.addr = alloca float*, align 8
  %oldeul.addr = alloca float*, align 8
  store i16 %protectflag, i16* %protectflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %protectflag.addr, metadata !16095, metadata !DIExpression()), !dbg !16096
  store float* %eul, float** %eul.addr, align 8
  call void @llvm.dbg.declare(metadata float** %eul.addr, metadata !16097, metadata !DIExpression()), !dbg !16098
  store float* %oldeul, float** %oldeul.addr, align 8
  call void @llvm.dbg.declare(metadata float** %oldeul.addr, metadata !16099, metadata !DIExpression()), !dbg !16100
  %0 = load i16, i16* %protectflag.addr, align 2, !dbg !16101
  %conv = sext i16 %0 to i32, !dbg !16101
  %and = and i32 %conv, 8, !dbg !16103
  %tobool = icmp ne i32 %and, 0, !dbg !16103
  br i1 %tobool, label %if.then, label %if.end, !dbg !16104

if.then:                                          ; preds = %entry
  %1 = load float*, float** %oldeul.addr, align 8, !dbg !16105
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !16105
  %2 = load float, float* %arrayidx, align 4, !dbg !16105
  %3 = load float*, float** %eul.addr, align 8, !dbg !16106
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !16106
  store float %2, float* %arrayidx1, align 4, !dbg !16107
  br label %if.end, !dbg !16106

if.end:                                           ; preds = %if.then, %entry
  %4 = load i16, i16* %protectflag.addr, align 2, !dbg !16108
  %conv2 = sext i16 %4 to i32, !dbg !16108
  %and3 = and i32 %conv2, 16, !dbg !16110
  %tobool4 = icmp ne i32 %and3, 0, !dbg !16110
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !16111

if.then5:                                         ; preds = %if.end
  %5 = load float*, float** %oldeul.addr, align 8, !dbg !16112
  %arrayidx6 = getelementptr inbounds float, float* %5, i64 1, !dbg !16112
  %6 = load float, float* %arrayidx6, align 4, !dbg !16112
  %7 = load float*, float** %eul.addr, align 8, !dbg !16113
  %arrayidx7 = getelementptr inbounds float, float* %7, i64 1, !dbg !16113
  store float %6, float* %arrayidx7, align 4, !dbg !16114
  br label %if.end8, !dbg !16113

if.end8:                                          ; preds = %if.then5, %if.end
  %8 = load i16, i16* %protectflag.addr, align 2, !dbg !16115
  %conv9 = sext i16 %8 to i32, !dbg !16115
  %and10 = and i32 %conv9, 32, !dbg !16117
  %tobool11 = icmp ne i32 %and10, 0, !dbg !16117
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !16118

if.then12:                                        ; preds = %if.end8
  %9 = load float*, float** %oldeul.addr, align 8, !dbg !16119
  %arrayidx13 = getelementptr inbounds float, float* %9, i64 2, !dbg !16119
  %10 = load float, float* %arrayidx13, align 4, !dbg !16119
  %11 = load float*, float** %eul.addr, align 8, !dbg !16120
  %arrayidx14 = getelementptr inbounds float, float* %11, i64 2, !dbg !16120
  store float %10, float* %arrayidx14, align 4, !dbg !16121
  br label %if.end15, !dbg !16120

if.end15:                                         ; preds = %if.then12, %if.end8
  ret void, !dbg !16122
}

; Function Attrs: noinline nounwind uwtable
define internal void @constraintRotLim(%struct.TransInfo* %UNUSED_t, %struct.TransData* %td) #0 !dbg !16123 {
entry:
  %UNUSED_t.addr = alloca %struct.TransInfo*, align 8
  %td.addr = alloca %struct.TransData*, align 8
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %cob = alloca %struct.bConstraintOb, align 8
  %con1 = alloca %struct.bConstraint*, align 8
  %do_limit = alloca i8, align 1
  %data = alloca %struct.bRotLimitConstraint*, align 8
  store %struct.TransInfo* %UNUSED_t, %struct.TransInfo** %UNUSED_t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %UNUSED_t.addr, metadata !16124, metadata !DIExpression()), !dbg !16125
  store %struct.TransData* %td, %struct.TransData** %td.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransData** %td.addr, metadata !16126, metadata !DIExpression()), !dbg !16127
  %0 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16128
  %con = getelementptr inbounds %struct.TransData, %struct.TransData* %0, i32 0, i32 12, !dbg !16130
  %1 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !16130
  %tobool = icmp ne %struct.bConstraint* %1, null, !dbg !16128
  br i1 %tobool, label %if.then, label %if.end85, !dbg !16131

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !16132, metadata !DIExpression()), !dbg !16134
  %call = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_from_type(i32 5), !dbg !16135
  store %struct.bConstraintTypeInfo* %call, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !16134
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb* %cob, metadata !16136, metadata !DIExpression()), !dbg !16137
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con1, metadata !16138, metadata !DIExpression()), !dbg !16139
  call void @llvm.dbg.declare(metadata i8* %do_limit, metadata !16140, metadata !DIExpression()), !dbg !16141
  store i8 0, i8* %do_limit, align 1, !dbg !16141
  %2 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16142
  %con2 = getelementptr inbounds %struct.TransData, %struct.TransData* %2, i32 0, i32 12, !dbg !16144
  %3 = load %struct.bConstraint*, %struct.bConstraint** %con2, align 8, !dbg !16144
  store %struct.bConstraint* %3, %struct.bConstraint** %con1, align 8, !dbg !16145
  br label %for.cond, !dbg !16146

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con1, align 8, !dbg !16147
  %tobool3 = icmp ne %struct.bConstraint* %4, null, !dbg !16149
  br i1 %tobool3, label %for.body, label %for.end, !dbg !16149

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bConstraint*, %struct.bConstraint** %con1, align 8, !dbg !16150
  %flag = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %5, i32 0, i32 4, !dbg !16153
  %6 = load i16, i16* %flag, align 2, !dbg !16153
  %conv = sext i16 %6 to i32, !dbg !16150
  %and = and i32 %conv, 516, !dbg !16154
  %tobool4 = icmp ne i32 %and, 0, !dbg !16154
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !16155

if.then5:                                         ; preds = %for.body
  br label %for.inc, !dbg !16156

if.end:                                           ; preds = %for.body
  %7 = load %struct.bConstraint*, %struct.bConstraint** %con1, align 8, !dbg !16157
  %enforce = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %7, i32 0, i32 9, !dbg !16159
  %8 = load float, float* %enforce, align 8, !dbg !16159
  %cmp = fcmp oeq float %8, 0.000000e+00, !dbg !16160
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !16161

if.then7:                                         ; preds = %if.end
  br label %for.inc, !dbg !16162

if.end8:                                          ; preds = %if.end
  %9 = load %struct.bConstraint*, %struct.bConstraint** %con1, align 8, !dbg !16163
  %type = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %9, i32 0, i32 3, !dbg !16165
  %10 = load i16, i16* %type, align 8, !dbg !16165
  %conv9 = sext i16 %10 to i32, !dbg !16163
  %cmp10 = icmp eq i32 %conv9, 5, !dbg !16166
  br i1 %cmp10, label %if.then12, label %if.end54, !dbg !16167

if.then12:                                        ; preds = %if.end8
  call void @llvm.dbg.declare(metadata %struct.bRotLimitConstraint** %data, metadata !16168, metadata !DIExpression()), !dbg !16182
  %11 = load %struct.bConstraint*, %struct.bConstraint** %con1, align 8, !dbg !16183
  %data13 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %11, i32 0, i32 2, !dbg !16184
  %12 = load i8*, i8** %data13, align 8, !dbg !16184
  %13 = bitcast i8* %12 to %struct.bRotLimitConstraint*, !dbg !16183
  store %struct.bRotLimitConstraint* %13, %struct.bRotLimitConstraint** %data, align 8, !dbg !16182
  %14 = load %struct.bRotLimitConstraint*, %struct.bRotLimitConstraint** %data, align 8, !dbg !16185
  %flag2 = getelementptr inbounds %struct.bRotLimitConstraint, %struct.bRotLimitConstraint* %14, i32 0, i32 7, !dbg !16187
  %15 = load i16, i16* %flag2, align 2, !dbg !16187
  %conv14 = sext i16 %15 to i32, !dbg !16185
  %and15 = and i32 %conv14, 2, !dbg !16188
  %cmp16 = icmp eq i32 %and15, 0, !dbg !16189
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !16190

if.then18:                                        ; preds = %if.then12
  br label %for.inc, !dbg !16191

if.end19:                                         ; preds = %if.then12
  %16 = load %struct.bConstraint*, %struct.bConstraint** %con1, align 8, !dbg !16192
  %ownspace = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %16, i32 0, i32 5, !dbg !16192
  %17 = load i8, i8* %ownspace, align 4, !dbg !16192
  %conv20 = zext i8 %17 to i32, !dbg !16192
  %cmp21 = icmp eq i32 %conv20, 0, !dbg !16192
  br i1 %cmp21, label %if.end28, label %lor.lhs.false, !dbg !16192

lor.lhs.false:                                    ; preds = %if.end19
  %18 = load %struct.bConstraint*, %struct.bConstraint** %con1, align 8, !dbg !16192
  %ownspace23 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %18, i32 0, i32 5, !dbg !16192
  %19 = load i8, i8* %ownspace23, align 4, !dbg !16192
  %conv24 = zext i8 %19 to i32, !dbg !16192
  %cmp25 = icmp eq i32 %conv24, 1, !dbg !16192
  br i1 %cmp25, label %if.end28, label %if.then27, !dbg !16194

if.then27:                                        ; preds = %lor.lhs.false
  br label %for.inc, !dbg !16195

if.end28:                                         ; preds = %lor.lhs.false, %if.end19
  %20 = load i8, i8* %do_limit, align 1, !dbg !16196
  %conv29 = zext i8 %20 to i32, !dbg !16196
  %cmp30 = icmp eq i32 %conv29, 0, !dbg !16198
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !16199

if.then32:                                        ; preds = %if.end28
  %21 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16200
  call void @constraintob_from_transdata(%struct.bConstraintOb* %cob, %struct.TransData* %21), !dbg !16202
  store i8 1, i8* %do_limit, align 1, !dbg !16203
  br label %if.end33, !dbg !16204

if.end33:                                         ; preds = %if.then32, %if.end28
  %22 = load %struct.bConstraint*, %struct.bConstraint** %con1, align 8, !dbg !16205
  %ownspace34 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %22, i32 0, i32 5, !dbg !16207
  %23 = load i8, i8* %ownspace34, align 4, !dbg !16207
  %conv35 = zext i8 %23 to i32, !dbg !16205
  %cmp36 = icmp eq i32 %conv35, 0, !dbg !16208
  br i1 %cmp36, label %if.then38, label %if.end42, !dbg !16209

if.then38:                                        ; preds = %if.end33
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !16210
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !16212
  %24 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16213
  %mtx = getelementptr inbounds %struct.TransData, %struct.TransData* %24, i32 0, i32 8, !dbg !16214
  %arraydecay39 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mtx, i64 0, i64 0, !dbg !16213
  %matrix40 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !16215
  %arraydecay41 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix40, i64 0, i64 0, !dbg !16216
  call void @mul_m4_m3m4([4 x float]* %arraydecay, [3 x float]* %arraydecay39, [4 x float]* %arraydecay41), !dbg !16217
  br label %if.end42, !dbg !16218

if.end42:                                         ; preds = %if.then38, %if.end33
  %25 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !16219
  %evaluate_constraint = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %25, i32 0, i32 11, !dbg !16220
  %26 = load void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)** %evaluate_constraint, align 8, !dbg !16220
  %27 = load %struct.bConstraint*, %struct.bConstraint** %con1, align 8, !dbg !16221
  call void %26(%struct.bConstraint* %27, %struct.bConstraintOb* %cob, %struct.ListBase* null), !dbg !16219
  %28 = load %struct.bConstraint*, %struct.bConstraint** %con1, align 8, !dbg !16222
  %ownspace43 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %28, i32 0, i32 5, !dbg !16224
  %29 = load i8, i8* %ownspace43, align 4, !dbg !16224
  %conv44 = zext i8 %29 to i32, !dbg !16222
  %cmp45 = icmp eq i32 %conv44, 0, !dbg !16225
  br i1 %cmp45, label %if.then47, label %if.end53, !dbg !16226

if.then47:                                        ; preds = %if.end42
  %matrix48 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !16227
  %arraydecay49 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix48, i64 0, i64 0, !dbg !16229
  %30 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16230
  %smtx = getelementptr inbounds %struct.TransData, %struct.TransData* %30, i32 0, i32 9, !dbg !16231
  %arraydecay50 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smtx, i64 0, i64 0, !dbg !16230
  %matrix51 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !16232
  %arraydecay52 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix51, i64 0, i64 0, !dbg !16233
  call void @mul_m4_m3m4([4 x float]* %arraydecay49, [3 x float]* %arraydecay50, [4 x float]* %arraydecay52), !dbg !16234
  br label %if.end53, !dbg !16235

if.end53:                                         ; preds = %if.then47, %if.end42
  br label %if.end54, !dbg !16236

if.end54:                                         ; preds = %if.end53, %if.end8
  br label %for.inc, !dbg !16237

for.inc:                                          ; preds = %if.end54, %if.then27, %if.then18, %if.then7, %if.then5
  %31 = load %struct.bConstraint*, %struct.bConstraint** %con1, align 8, !dbg !16238
  %next = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %31, i32 0, i32 0, !dbg !16239
  %32 = load %struct.bConstraint*, %struct.bConstraint** %next, align 8, !dbg !16239
  store %struct.bConstraint* %32, %struct.bConstraint** %con1, align 8, !dbg !16240
  br label %for.cond, !dbg !16241, !llvm.loop !16242

for.end:                                          ; preds = %for.cond
  %33 = load i8, i8* %do_limit, align 1, !dbg !16244
  %tobool55 = icmp ne i8 %33, 0, !dbg !16244
  br i1 %tobool55, label %if.then56, label %if.end84, !dbg !16246

if.then56:                                        ; preds = %for.end
  %34 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16247
  %ext = getelementptr inbounds %struct.TransData, %struct.TransData* %34, i32 0, i32 13, !dbg !16250
  %35 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext, align 8, !dbg !16250
  %rotOrder = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %35, i32 0, i32 17, !dbg !16251
  %36 = load i32, i32* %rotOrder, align 8, !dbg !16251
  %cmp57 = icmp eq i32 %36, 0, !dbg !16252
  br i1 %cmp57, label %if.then59, label %if.else, !dbg !16253

if.then59:                                        ; preds = %if.then56
  %37 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16254
  %ext60 = getelementptr inbounds %struct.TransData, %struct.TransData* %37, i32 0, i32 13, !dbg !16256
  %38 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext60, align 8, !dbg !16256
  %quat = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %38, i32 0, i32 5, !dbg !16257
  %39 = load float*, float** %quat, align 8, !dbg !16257
  %matrix61 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !16258
  %arraydecay62 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix61, i64 0, i64 0, !dbg !16259
  call void @mat4_to_quat(float* %39, [4 x float]* %arraydecay62), !dbg !16260
  br label %if.end83, !dbg !16261

if.else:                                          ; preds = %if.then56
  %40 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16262
  %ext63 = getelementptr inbounds %struct.TransData, %struct.TransData* %40, i32 0, i32 13, !dbg !16264
  %41 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext63, align 8, !dbg !16264
  %rotOrder64 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %41, i32 0, i32 17, !dbg !16265
  %42 = load i32, i32* %rotOrder64, align 8, !dbg !16265
  %cmp65 = icmp eq i32 %42, -1, !dbg !16266
  br i1 %cmp65, label %if.then67, label %if.else75, !dbg !16267

if.then67:                                        ; preds = %if.else
  %43 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16268
  %ext68 = getelementptr inbounds %struct.TransData, %struct.TransData* %43, i32 0, i32 13, !dbg !16270
  %44 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext68, align 8, !dbg !16270
  %quat69 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %44, i32 0, i32 5, !dbg !16271
  %45 = load float*, float** %quat69, align 8, !dbg !16271
  %arrayidx = getelementptr inbounds float, float* %45, i64 1, !dbg !16268
  %46 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16272
  %ext70 = getelementptr inbounds %struct.TransData, %struct.TransData* %46, i32 0, i32 13, !dbg !16273
  %47 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext70, align 8, !dbg !16273
  %quat71 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %47, i32 0, i32 5, !dbg !16274
  %48 = load float*, float** %quat71, align 8, !dbg !16274
  %arrayidx72 = getelementptr inbounds float, float* %48, i64 0, !dbg !16272
  %matrix73 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !16275
  %arraydecay74 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix73, i64 0, i64 0, !dbg !16276
  call void @mat4_to_axis_angle(float* %arrayidx, float* %arrayidx72, [4 x float]* %arraydecay74), !dbg !16277
  br label %if.end82, !dbg !16278

if.else75:                                        ; preds = %if.else
  %49 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16279
  %ext76 = getelementptr inbounds %struct.TransData, %struct.TransData* %49, i32 0, i32 13, !dbg !16281
  %50 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext76, align 8, !dbg !16281
  %rot = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %50, i32 0, i32 3, !dbg !16282
  %51 = load float*, float** %rot, align 8, !dbg !16282
  %52 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16283
  %ext77 = getelementptr inbounds %struct.TransData, %struct.TransData* %52, i32 0, i32 13, !dbg !16284
  %53 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext77, align 8, !dbg !16284
  %rotOrder78 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %53, i32 0, i32 17, !dbg !16285
  %54 = load i32, i32* %rotOrder78, align 8, !dbg !16285
  %conv79 = trunc i32 %54 to i16, !dbg !16283
  %matrix80 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %cob, i32 0, i32 3, !dbg !16286
  %arraydecay81 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix80, i64 0, i64 0, !dbg !16287
  call void @mat4_to_eulO(float* %51, i16 signext %conv79, [4 x float]* %arraydecay81), !dbg !16288
  br label %if.end82

if.end82:                                         ; preds = %if.else75, %if.then67
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.then59
  br label %if.end84, !dbg !16289

if.end84:                                         ; preds = %if.end83, %for.end
  br label %if.end85, !dbg !16290

if.end85:                                         ; preds = %if.end84, %entry
  ret void, !dbg !16291
}

declare dso_local float @normalize_qt_qt(float*, float*) #2

declare dso_local void @quat_to_eul(float*, float*) #2

declare dso_local void @eul_to_quat(float*, float*) #2

declare dso_local void @mul_qt_fl(float*, float) #2

declare dso_local void @axis_angle_to_eulO(float*, i16 signext, float*, float) #2

declare dso_local void @eulO_to_axis_angle(float*, float*, float*, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @constraintob_from_transdata(%struct.bConstraintOb* %cob, %struct.TransData* %td) #0 !dbg !16292 {
entry:
  %cob.addr = alloca %struct.bConstraintOb*, align 8
  %td.addr = alloca %struct.TransData*, align 8
  %quat = alloca [4 x float], align 16
  store %struct.bConstraintOb* %cob, %struct.bConstraintOb** %cob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob.addr, metadata !16296, metadata !DIExpression()), !dbg !16297
  store %struct.TransData* %td, %struct.TransData** %td.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransData** %td.addr, metadata !16298, metadata !DIExpression()), !dbg !16299
  %0 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !16300
  %1 = bitcast %struct.bConstraintOb* %0 to i8*, !dbg !16301
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 160, i1 false), !dbg !16301
  %2 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16302
  %ext = getelementptr inbounds %struct.TransData, %struct.TransData* %2, i32 0, i32 13, !dbg !16304
  %3 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext, align 8, !dbg !16304
  %tobool = icmp ne %struct.TransDataExtension* %3, null, !dbg !16302
  br i1 %tobool, label %if.then, label %if.end25, !dbg !16305

if.then:                                          ; preds = %entry
  %4 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16306
  %ext1 = getelementptr inbounds %struct.TransData, %struct.TransData* %4, i32 0, i32 13, !dbg !16309
  %5 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext1, align 8, !dbg !16309
  %rotOrder = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %5, i32 0, i32 17, !dbg !16310
  %6 = load i32, i32* %rotOrder, align 8, !dbg !16310
  %cmp = icmp eq i32 %6, 0, !dbg !16311
  br i1 %cmp, label %if.then2, label %if.else, !dbg !16312

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata [4 x float]* %quat, metadata !16313, metadata !DIExpression()), !dbg !16315
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !16316
  %7 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16317
  %ext3 = getelementptr inbounds %struct.TransData, %struct.TransData* %7, i32 0, i32 13, !dbg !16318
  %8 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext3, align 8, !dbg !16318
  %quat4 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %8, i32 0, i32 5, !dbg !16319
  %9 = load float*, float** %quat4, align 8, !dbg !16319
  %call = call float @normalize_qt_qt(float* %arraydecay, float* %9), !dbg !16320
  %10 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !16321
  %matrix = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %10, i32 0, i32 3, !dbg !16322
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix, i64 0, i64 0, !dbg !16321
  %arraydecay6 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !16323
  call void @quat_to_mat4([4 x float]* %arraydecay5, float* %arraydecay6), !dbg !16324
  br label %if.end24, !dbg !16325

if.else:                                          ; preds = %if.then
  %11 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16326
  %ext7 = getelementptr inbounds %struct.TransData, %struct.TransData* %11, i32 0, i32 13, !dbg !16328
  %12 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext7, align 8, !dbg !16328
  %rotOrder8 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %12, i32 0, i32 17, !dbg !16329
  %13 = load i32, i32* %rotOrder8, align 8, !dbg !16329
  %cmp9 = icmp eq i32 %13, -1, !dbg !16330
  br i1 %cmp9, label %if.then10, label %if.else18, !dbg !16331

if.then10:                                        ; preds = %if.else
  %14 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !16332
  %matrix11 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %14, i32 0, i32 3, !dbg !16334
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix11, i64 0, i64 0, !dbg !16332
  %15 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16335
  %ext13 = getelementptr inbounds %struct.TransData, %struct.TransData* %15, i32 0, i32 13, !dbg !16336
  %16 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext13, align 8, !dbg !16336
  %quat14 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %16, i32 0, i32 5, !dbg !16337
  %17 = load float*, float** %quat14, align 8, !dbg !16337
  %arrayidx = getelementptr inbounds float, float* %17, i64 1, !dbg !16335
  %18 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16338
  %ext15 = getelementptr inbounds %struct.TransData, %struct.TransData* %18, i32 0, i32 13, !dbg !16339
  %19 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext15, align 8, !dbg !16339
  %quat16 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %19, i32 0, i32 5, !dbg !16340
  %20 = load float*, float** %quat16, align 8, !dbg !16340
  %arrayidx17 = getelementptr inbounds float, float* %20, i64 0, !dbg !16338
  %21 = load float, float* %arrayidx17, align 4, !dbg !16338
  call void @axis_angle_to_mat4([4 x float]* %arraydecay12, float* %arrayidx, float %21), !dbg !16341
  br label %if.end, !dbg !16342

if.else18:                                        ; preds = %if.else
  %22 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob.addr, align 8, !dbg !16343
  %matrix19 = getelementptr inbounds %struct.bConstraintOb, %struct.bConstraintOb* %22, i32 0, i32 3, !dbg !16345
  %arraydecay20 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %matrix19, i64 0, i64 0, !dbg !16343
  %23 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16346
  %ext21 = getelementptr inbounds %struct.TransData, %struct.TransData* %23, i32 0, i32 13, !dbg !16347
  %24 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext21, align 8, !dbg !16347
  %rot = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %24, i32 0, i32 3, !dbg !16348
  %25 = load float*, float** %rot, align 8, !dbg !16348
  %26 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !16349
  %ext22 = getelementptr inbounds %struct.TransData, %struct.TransData* %26, i32 0, i32 13, !dbg !16350
  %27 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext22, align 8, !dbg !16350
  %rotOrder23 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %27, i32 0, i32 17, !dbg !16351
  %28 = load i32, i32* %rotOrder23, align 8, !dbg !16351
  %conv = trunc i32 %28 to i16, !dbg !16349
  call void @eulO_to_mat4([4 x float]* %arraydecay20, float* %25, i16 signext %conv), !dbg !16352
  br label %if.end

if.end:                                           ; preds = %if.else18, %if.then10
  br label %if.end24

if.end24:                                         ; preds = %if.end, %if.then2
  br label %if.end25, !dbg !16353

if.end25:                                         ; preds = %if.end24, %entry
  ret void, !dbg !16354
}

declare dso_local void @mat4_to_quat(float*, [4 x float]*) #2

declare dso_local void @mat4_to_axis_angle(float*, float*, [4 x float]*) #2

declare dso_local void @mat4_to_eulO(float*, i16 signext, [4 x float]*) #2

declare dso_local void @quat_to_mat4([4 x float]*, float*) #2

declare dso_local void @axis_angle_to_mat4([4 x float]*, float*, float) #2

declare dso_local void @eulO_to_mat4([4 x float]*, float*, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @applyTrackball(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !16355 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %str = alloca [256 x i8], align 16
  %ofs = alloca i64, align 8
  %axis1 = alloca [3 x float], align 4
  %axis2 = alloca [3 x float], align 4
  %mat = alloca [3 x [3 x float]], align 16
  %totmat = alloca [3 x [3 x float]], align 16
  %smat = alloca [3 x [3 x float]], align 16
  %phi = alloca [2 x float], align 4
  %c = alloca [128 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !16356, metadata !DIExpression()), !dbg !16357
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !16358, metadata !DIExpression()), !dbg !16359
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !16360, metadata !DIExpression()), !dbg !16361
  call void @llvm.dbg.declare(metadata i64* %ofs, metadata !16362, metadata !DIExpression()), !dbg !16363
  store i64 0, i64* %ofs, align 8, !dbg !16363
  call void @llvm.dbg.declare(metadata [3 x float]* %axis1, metadata !16364, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.declare(metadata [3 x float]* %axis2, metadata !16366, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !16368, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %totmat, metadata !16370, metadata !DIExpression()), !dbg !16371
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %smat, metadata !16372, metadata !DIExpression()), !dbg !16373
  call void @llvm.dbg.declare(metadata [2 x float]* %phi, metadata !16374, metadata !DIExpression()), !dbg !16375
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %axis1, i64 0, i64 0, !dbg !16376
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16377
  %persinv = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 30, !dbg !16378
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persinv, i64 0, i64 0, !dbg !16377
  %arraydecay1 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !16377
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay1), !dbg !16379
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %axis2, i64 0, i64 0, !dbg !16380
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16381
  %persinv3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 30, !dbg !16382
  %arrayidx4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persinv3, i64 0, i64 1, !dbg !16381
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx4, i64 0, i64 0, !dbg !16381
  call void @copy_v3_v3(float* %arraydecay2, float* %arraydecay5), !dbg !16383
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %axis1, i64 0, i64 0, !dbg !16384
  %call = call float @normalize_v3(float* %arraydecay6), !dbg !16385
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %axis2, i64 0, i64 0, !dbg !16386
  %call8 = call float @normalize_v3(float* %arraydecay7), !dbg !16387
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16388
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 47, !dbg !16389
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !16388
  %3 = load float, float* %arrayidx9, align 4, !dbg !16388
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %phi, i64 0, i64 0, !dbg !16390
  store float %3, float* %arrayidx10, align 4, !dbg !16391
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16392
  %values11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 47, !dbg !16393
  %arrayidx12 = getelementptr inbounds [4 x float], [4 x float]* %values11, i64 0, i64 1, !dbg !16392
  %5 = load float, float* %arrayidx12, align 4, !dbg !16392
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* %phi, i64 0, i64 1, !dbg !16394
  store float %5, float* %arrayidx13, align 4, !dbg !16395
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16396
  %arraydecay14 = getelementptr inbounds [2 x float], [2 x float]* %phi, i64 0, i64 0, !dbg !16397
  call void @snapGridIncrement(%struct.TransInfo* %6, float* %arraydecay14), !dbg !16398
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16399
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 15, !dbg !16400
  %arraydecay15 = getelementptr inbounds [2 x float], [2 x float]* %phi, i64 0, i64 0, !dbg !16401
  %call16 = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %arraydecay15), !dbg !16402
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16403
  %num17 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 15, !dbg !16405
  %call18 = call zeroext i8 @hasNumInput(%struct.NumInput* %num17), !dbg !16406
  %tobool = icmp ne i8 %call18, 0, !dbg !16406
  br i1 %tobool, label %if.then, label %if.else, !dbg !16407

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [128 x i8]* %c, metadata !16408, metadata !DIExpression()), !dbg !16410
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16411
  %num19 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 15, !dbg !16412
  %arraydecay20 = getelementptr inbounds [128 x i8], [128 x i8]* %c, i64 0, i64 0, !dbg !16413
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16414
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 56, !dbg !16415
  %11 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !16415
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %11, i32 0, i32 38, !dbg !16416
  call void @outputNumInput(%struct.NumInput* %num19, i8* %arraydecay20, %struct.UnitSettings* %unit), !dbg !16417
  %arraydecay21 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !16418
  %12 = load i64, i64* %ofs, align 8, !dbg !16419
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay21, i64 %12, !dbg !16420
  %13 = load i64, i64* %ofs, align 8, !dbg !16421
  %sub = sub i64 256, %13, !dbg !16422
  %arrayidx22 = getelementptr inbounds [128 x i8], [128 x i8]* %c, i64 0, i64 0, !dbg !16423
  %arrayidx23 = getelementptr inbounds [128 x i8], [128 x i8]* %c, i64 0, i64 64, !dbg !16424
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16425
  %proptext = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 19, !dbg !16426
  %arraydecay24 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext, i64 0, i64 0, !dbg !16425
  %call25 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr, i64 %sub, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.94, i64 0, i64 0), i8* %arrayidx22, i8* %arrayidx23, i8* %arraydecay24), !dbg !16427
  %15 = load i64, i64* %ofs, align 8, !dbg !16428
  %add = add i64 %15, %call25, !dbg !16428
  store i64 %add, i64* %ofs, align 8, !dbg !16428
  br label %if.end, !dbg !16429

if.else:                                          ; preds = %entry
  %arraydecay26 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !16430
  %16 = load i64, i64* %ofs, align 8, !dbg !16432
  %add.ptr27 = getelementptr inbounds i8, i8* %arraydecay26, i64 %16, !dbg !16433
  %17 = load i64, i64* %ofs, align 8, !dbg !16434
  %sub28 = sub i64 256, %17, !dbg !16435
  %arrayidx29 = getelementptr inbounds [2 x float], [2 x float]* %phi, i64 0, i64 0, !dbg !16436
  %18 = load float, float* %arrayidx29, align 4, !dbg !16436
  %mul = fmul float %18, 0x404CA5DC20000000, !dbg !16436
  %conv = fpext float %mul to double, !dbg !16436
  %arrayidx30 = getelementptr inbounds [2 x float], [2 x float]* %phi, i64 0, i64 1, !dbg !16437
  %19 = load float, float* %arrayidx30, align 4, !dbg !16437
  %mul31 = fmul float %19, 0x404CA5DC20000000, !dbg !16437
  %conv32 = fpext float %mul31 to double, !dbg !16437
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16438
  %proptext33 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 19, !dbg !16439
  %arraydecay34 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext33, i64 0, i64 0, !dbg !16438
  %call35 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr27, i64 %sub28, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.95, i64 0, i64 0), double %conv, double %conv32, i8* %arraydecay34), !dbg !16440
  %21 = load i64, i64* %ofs, align 8, !dbg !16441
  %add36 = add i64 %21, %call35, !dbg !16441
  store i64 %add36, i64* %ofs, align 8, !dbg !16441
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16442
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 1, !dbg !16444
  %23 = load i32, i32* %flag, align 4, !dbg !16444
  %and = and i32 %23, 33560576, !dbg !16445
  %tobool37 = icmp ne i32 %and, 0, !dbg !16445
  br i1 %tobool37, label %if.then38, label %if.end45, !dbg !16446

if.then38:                                        ; preds = %if.end
  %arraydecay39 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !16447
  %24 = load i64, i64* %ofs, align 8, !dbg !16449
  %add.ptr40 = getelementptr inbounds i8, i8* %arraydecay39, i64 %24, !dbg !16450
  %25 = load i64, i64* %ofs, align 8, !dbg !16451
  %sub41 = sub i64 256, %25, !dbg !16452
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16453
  %prop_size = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 18, !dbg !16454
  %27 = load float, float* %prop_size, align 4, !dbg !16454
  %conv42 = fpext float %27 to double, !dbg !16453
  %call43 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr40, i64 %sub41, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.89, i64 0, i64 0), double %conv42), !dbg !16455
  %28 = load i64, i64* %ofs, align 8, !dbg !16456
  %add44 = add i64 %28, %call43, !dbg !16456
  store i64 %add44, i64* %ofs, align 8, !dbg !16456
  br label %if.end45, !dbg !16457

if.end45:                                         ; preds = %if.then38, %if.end
  %arraydecay46 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !16458
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %axis1, i64 0, i64 0, !dbg !16459
  %arrayidx48 = getelementptr inbounds [2 x float], [2 x float]* %phi, i64 0, i64 0, !dbg !16460
  %29 = load float, float* %arrayidx48, align 4, !dbg !16460
  call void @axis_angle_normalized_to_mat3([3 x float]* %arraydecay46, float* %arraydecay47, float %29), !dbg !16461
  %arraydecay49 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !16462
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %axis2, i64 0, i64 0, !dbg !16463
  %arrayidx51 = getelementptr inbounds [2 x float], [2 x float]* %phi, i64 0, i64 1, !dbg !16464
  %30 = load float, float* %arrayidx51, align 4, !dbg !16464
  call void @axis_angle_normalized_to_mat3([3 x float]* %arraydecay49, float* %arraydecay50, float %30), !dbg !16465
  %arraydecay52 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !16466
  %arraydecay53 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !16467
  %arraydecay54 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !16468
  call void @mul_m3_m3m3([3 x float]* %arraydecay52, [3 x float]* %arraydecay53, [3 x float]* %arraydecay54), !dbg !16469
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16470
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %axis1, i64 0, i64 0, !dbg !16471
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %axis2, i64 0, i64 0, !dbg !16472
  %arraydecay57 = getelementptr inbounds [2 x float], [2 x float]* %phi, i64 0, i64 0, !dbg !16473
  call void @applyTrackballValue(%struct.TransInfo* %31, float* %arraydecay55, float* %arraydecay56, float* %arraydecay57), !dbg !16474
  %32 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16475
  call void @recalcData(%struct.TransInfo* %32), !dbg !16476
  %33 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16477
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %33, i32 0, i32 54, !dbg !16478
  %34 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !16478
  %arraydecay58 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !16479
  call void @ED_area_headerprint(%struct.ScrArea* %34, i8* %arraydecay58), !dbg !16480
  ret void, !dbg !16481
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyTrackballValue(%struct.TransInfo* %t, float* %axis1, float* %axis2, float* %angles) #0 !dbg !16482 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %axis1.addr = alloca float*, align 8
  %axis2.addr = alloca float*, align 8
  %angles.addr = alloca float*, align 8
  %td = alloca %struct.TransData*, align 8
  %mat = alloca [3 x [3 x float]], align 16
  %smat = alloca [3 x [3 x float]], align 16
  %totmat = alloca [3 x [3 x float]], align 16
  %i = alloca i32, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !16485, metadata !DIExpression()), !dbg !16486
  store float* %axis1, float** %axis1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %axis1.addr, metadata !16487, metadata !DIExpression()), !dbg !16488
  store float* %axis2, float** %axis2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %axis2.addr, metadata !16489, metadata !DIExpression()), !dbg !16490
  store float* %angles, float** %angles.addr, align 8
  call void @llvm.dbg.declare(metadata float** %angles.addr, metadata !16491, metadata !DIExpression()), !dbg !16492
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !16493, metadata !DIExpression()), !dbg !16494
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16495
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !16496
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !16496
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !16494
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !16497, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %smat, metadata !16499, metadata !DIExpression()), !dbg !16500
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %totmat, metadata !16501, metadata !DIExpression()), !dbg !16502
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16503, metadata !DIExpression()), !dbg !16504
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !16505
  %2 = load float*, float** %axis1.addr, align 8, !dbg !16506
  %3 = load float*, float** %angles.addr, align 8, !dbg !16507
  %arrayidx = getelementptr inbounds float, float* %3, i64 0, !dbg !16507
  %4 = load float, float* %arrayidx, align 4, !dbg !16507
  call void @axis_angle_normalized_to_mat3([3 x float]* %arraydecay, float* %2, float %4), !dbg !16508
  %arraydecay1 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !16509
  %5 = load float*, float** %axis2.addr, align 8, !dbg !16510
  %6 = load float*, float** %angles.addr, align 8, !dbg !16511
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 1, !dbg !16511
  %7 = load float, float* %arrayidx2, align 4, !dbg !16511
  call void @axis_angle_normalized_to_mat3([3 x float]* %arraydecay1, float* %5, float %7), !dbg !16512
  %arraydecay3 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !16513
  %arraydecay4 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !16514
  %arraydecay5 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !16515
  call void @mul_m3_m3m3([3 x float]* %arraydecay3, [3 x float]* %arraydecay4, [3 x float]* %arraydecay5), !dbg !16516
  store i32 0, i32* %i, align 4, !dbg !16517
  br label %for.cond, !dbg !16519

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !16520
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16522
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 9, !dbg !16523
  %10 = load i32, i32* %total, align 8, !dbg !16523
  %cmp = icmp slt i32 %8, %10, !dbg !16524
  br i1 %cmp, label %for.body, label %for.end, !dbg !16525

for.body:                                         ; preds = %for.cond
  %11 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !16526
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %11, i32 0, i32 16, !dbg !16529
  %12 = load i32, i32* %flag, align 8, !dbg !16529
  %and = and i32 %12, 4, !dbg !16530
  %tobool = icmp ne i32 %and, 0, !dbg !16530
  br i1 %tobool, label %if.then, label %if.end, !dbg !16531

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !16532

if.end:                                           ; preds = %for.body
  %13 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !16533
  %flag6 = getelementptr inbounds %struct.TransData, %struct.TransData* %13, i32 0, i32 16, !dbg !16535
  %14 = load i32, i32* %flag6, align 8, !dbg !16535
  %and7 = and i32 %14, 2048, !dbg !16536
  %tobool8 = icmp ne i32 %and7, 0, !dbg !16536
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !16537

if.then9:                                         ; preds = %if.end
  br label %for.inc, !dbg !16538

if.end10:                                         ; preds = %if.end
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16539
  %flag11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 1, !dbg !16541
  %16 = load i32, i32* %flag11, align 4, !dbg !16541
  %and12 = and i32 %16, 2048, !dbg !16542
  %tobool13 = icmp ne i32 %and12, 0, !dbg !16542
  br i1 %tobool13, label %if.then14, label %if.end24, !dbg !16543

if.then14:                                        ; preds = %if.end10
  %arraydecay15 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !16544
  %17 = load float*, float** %axis1.addr, align 8, !dbg !16546
  %18 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !16547
  %factor = getelementptr inbounds %struct.TransData, %struct.TransData* %18, i32 0, i32 2, !dbg !16548
  %19 = load float, float* %factor, align 8, !dbg !16548
  %20 = load float*, float** %angles.addr, align 8, !dbg !16549
  %arrayidx16 = getelementptr inbounds float, float* %20, i64 0, !dbg !16549
  %21 = load float, float* %arrayidx16, align 4, !dbg !16549
  %mul = fmul float %19, %21, !dbg !16550
  call void @axis_angle_normalized_to_mat3([3 x float]* %arraydecay15, float* %17, float %mul), !dbg !16551
  %arraydecay17 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !16552
  %22 = load float*, float** %axis2.addr, align 8, !dbg !16553
  %23 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !16554
  %factor18 = getelementptr inbounds %struct.TransData, %struct.TransData* %23, i32 0, i32 2, !dbg !16555
  %24 = load float, float* %factor18, align 8, !dbg !16555
  %25 = load float*, float** %angles.addr, align 8, !dbg !16556
  %arrayidx19 = getelementptr inbounds float, float* %25, i64 1, !dbg !16556
  %26 = load float, float* %arrayidx19, align 4, !dbg !16556
  %mul20 = fmul float %24, %26, !dbg !16557
  call void @axis_angle_normalized_to_mat3([3 x float]* %arraydecay17, float* %22, float %mul20), !dbg !16558
  %arraydecay21 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !16559
  %arraydecay22 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !16560
  %arraydecay23 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %totmat, i64 0, i64 0, !dbg !16561
  call void @mul_m3_m3m3([3 x float]* %arraydecay21, [3 x float]* %arraydecay22, [3 x float]* %arraydecay23), !dbg !16562
  br label %if.end24, !dbg !16563

if.end24:                                         ; preds = %if.then14, %if.end10
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16564
  %28 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !16565
  %arraydecay25 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !16566
  %29 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16567
  %around = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %29, i32 0, i32 32, !dbg !16568
  %30 = load i16, i16* %around, align 2, !dbg !16568
  call void @ElementRotation(%struct.TransInfo* %27, %struct.TransData* %28, [3 x float]* %arraydecay25, i16 signext %30), !dbg !16569
  br label %for.inc, !dbg !16570

for.inc:                                          ; preds = %if.end24, %if.then9
  %31 = load i32, i32* %i, align 4, !dbg !16571
  %inc = add nsw i32 %31, 1, !dbg !16571
  store i32 %inc, i32* %i, align 4, !dbg !16571
  %32 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !16572
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %32, i32 1, !dbg !16572
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !16572
  br label %for.cond, !dbg !16573, !llvm.loop !16574

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !16576
}

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @applyTranslation(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !16577 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %str = alloca [256 x i8], align 16
  %pvec = alloca [3 x float], align 4
  %tvec = alloca [3 x float], align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !16578, metadata !DIExpression()), !dbg !16579
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !16580, metadata !DIExpression()), !dbg !16581
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !16582, metadata !DIExpression()), !dbg !16583
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16584
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 13, !dbg !16586
  %mode = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 7, !dbg !16587
  %1 = load i32, i32* %mode, align 4, !dbg !16587
  %and = and i32 %1, 1, !dbg !16588
  %tobool = icmp ne i32 %and, 0, !dbg !16588
  br i1 %tobool, label %if.then, label %if.else, !dbg !16589

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %pvec, metadata !16590, metadata !DIExpression()), !dbg !16592
  %2 = bitcast [3 x float]* %pvec to i8*, !dbg !16592
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 12, i1 false), !dbg !16592
  call void @llvm.dbg.declare(metadata [3 x float]* %tvec, metadata !16593, metadata !DIExpression()), !dbg !16594
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16595
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 15, !dbg !16597
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16598
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 47, !dbg !16599
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !16598
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %arraydecay), !dbg !16600
  %tobool1 = icmp ne i8 %call, 0, !dbg !16600
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !16601

if.then2:                                         ; preds = %if.then
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16602
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16604
  %values3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 47, !dbg !16605
  %arraydecay4 = getelementptr inbounds [4 x float], [4 x float]* %values3, i64 0, i64 0, !dbg !16604
  call void @removeAspectRatio(%struct.TransInfo* %5, float* %arraydecay4), !dbg !16606
  br label %if.end, !dbg !16607

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16608
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16609
  %values5 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 47, !dbg !16610
  %arraydecay6 = getelementptr inbounds [4 x float], [4 x float]* %values5, i64 0, i64 0, !dbg !16609
  call void @applySnapping(%struct.TransInfo* %7, float* %arraydecay6), !dbg !16611
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16612
  %con7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 13, !dbg !16613
  %applyVec = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con7, i32 0, i32 9, !dbg !16614
  %10 = load void (%struct.TransInfo*, %struct.TransData*, float*, float*, float*)*, void (%struct.TransInfo*, %struct.TransData*, float*, float*, float*)** %applyVec, align 8, !dbg !16614
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16615
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16616
  %values8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 47, !dbg !16617
  %arraydecay9 = getelementptr inbounds [4 x float], [4 x float]* %values8, i64 0, i64 0, !dbg !16616
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !16618
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %pvec, i64 0, i64 0, !dbg !16619
  call void %10(%struct.TransInfo* %11, %struct.TransData* null, float* %arraydecay9, float* %arraydecay10, float* %arraydecay11), !dbg !16612
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16620
  %values12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 47, !dbg !16621
  %arraydecay13 = getelementptr inbounds [4 x float], [4 x float]* %values12, i64 0, i64 0, !dbg !16620
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !16622
  call void @copy_v3_v3(float* %arraydecay13, float* %arraydecay14), !dbg !16623
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16624
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %pvec, i64 0, i64 0, !dbg !16625
  %arraydecay16 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !16626
  call void @headerTranslation(%struct.TransInfo* %14, float* %arraydecay15, i8* %arraydecay16), !dbg !16627
  br label %if.end33, !dbg !16628

if.else:                                          ; preds = %entry
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16629
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16631
  %values17 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 47, !dbg !16632
  %arraydecay18 = getelementptr inbounds [4 x float], [4 x float]* %values17, i64 0, i64 0, !dbg !16631
  call void @snapGridIncrement(%struct.TransInfo* %15, float* %arraydecay18), !dbg !16633
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16634
  %num19 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 15, !dbg !16636
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16637
  %values20 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 47, !dbg !16638
  %arraydecay21 = getelementptr inbounds [4 x float], [4 x float]* %values20, i64 0, i64 0, !dbg !16637
  %call22 = call zeroext i8 @applyNumInput(%struct.NumInput* %num19, float* %arraydecay21), !dbg !16639
  %tobool23 = icmp ne i8 %call22, 0, !dbg !16639
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !16640

if.then24:                                        ; preds = %if.else
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16641
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16643
  %values25 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 47, !dbg !16644
  %arraydecay26 = getelementptr inbounds [4 x float], [4 x float]* %values25, i64 0, i64 0, !dbg !16643
  call void @removeAspectRatio(%struct.TransInfo* %19, float* %arraydecay26), !dbg !16645
  br label %if.end27, !dbg !16646

if.end27:                                         ; preds = %if.then24, %if.else
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16647
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16648
  %values28 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 47, !dbg !16649
  %arraydecay29 = getelementptr inbounds [4 x float], [4 x float]* %values28, i64 0, i64 0, !dbg !16648
  call void @applySnapping(%struct.TransInfo* %21, float* %arraydecay29), !dbg !16650
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16651
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16652
  %values30 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 47, !dbg !16653
  %arraydecay31 = getelementptr inbounds [4 x float], [4 x float]* %values30, i64 0, i64 0, !dbg !16652
  %arraydecay32 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !16654
  call void @headerTranslation(%struct.TransInfo* %23, float* %arraydecay31, i8* %arraydecay32), !dbg !16655
  br label %if.end33

if.end33:                                         ; preds = %if.end27, %if.end
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16656
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16657
  %values34 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 47, !dbg !16658
  %arraydecay35 = getelementptr inbounds [4 x float], [4 x float]* %values34, i64 0, i64 0, !dbg !16657
  call void @applyTranslationValue(%struct.TransInfo* %25, float* %arraydecay35), !dbg !16659
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16660
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %27, i32 0, i32 1, !dbg !16662
  %28 = load i32, i32* %flag, align 4, !dbg !16662
  %and36 = and i32 %28, 65536, !dbg !16663
  %tobool37 = icmp ne i32 %and36, 0, !dbg !16663
  br i1 %tobool37, label %land.lhs.true, label %if.end50, !dbg !16664

land.lhs.true:                                    ; preds = %if.end33
  %29 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16665
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16666
  %values38 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %30, i32 0, i32 47, !dbg !16667
  %arraydecay39 = getelementptr inbounds [4 x float], [4 x float]* %values38, i64 0, i64 0, !dbg !16666
  %call40 = call zeroext i8 @clipUVTransform(%struct.TransInfo* %29, float* %arraydecay39, i8 zeroext 0), !dbg !16668
  %conv = zext i8 %call40 to i32, !dbg !16668
  %tobool41 = icmp ne i32 %conv, 0, !dbg !16668
  br i1 %tobool41, label %if.then42, label %if.end50, !dbg !16669

if.then42:                                        ; preds = %land.lhs.true
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16670
  %32 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16672
  %values43 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %32, i32 0, i32 47, !dbg !16673
  %arraydecay44 = getelementptr inbounds [4 x float], [4 x float]* %values43, i64 0, i64 0, !dbg !16672
  call void @applyTranslationValue(%struct.TransInfo* %31, float* %arraydecay44), !dbg !16674
  %33 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16675
  %flag45 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %33, i32 0, i32 1, !dbg !16677
  %34 = load i32, i32* %flag45, align 4, !dbg !16677
  %and46 = and i32 %34, 33560576, !dbg !16678
  %tobool47 = icmp ne i32 %and46, 0, !dbg !16678
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !16679

if.then48:                                        ; preds = %if.then42
  %35 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16680
  call void @clipUVData(%struct.TransInfo* %35), !dbg !16682
  br label %if.end49, !dbg !16683

if.end49:                                         ; preds = %if.then48, %if.then42
  br label %if.end50, !dbg !16684

if.end50:                                         ; preds = %if.end49, %land.lhs.true, %if.end33
  %36 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16685
  call void @recalcData(%struct.TransInfo* %36), !dbg !16686
  %37 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16687
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %37, i32 0, i32 54, !dbg !16688
  %38 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !16688
  %arraydecay51 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !16689
  call void @ED_area_headerprint(%struct.ScrArea* %38, i8* %arraydecay51), !dbg !16690
  ret void, !dbg !16691
}

declare dso_local float @ED_node_grid_size() #2

; Function Attrs: noinline nounwind uwtable
define internal void @headerTranslation(%struct.TransInfo* %t, float* %vec, i8* %str) #0 !dbg !16692 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %vec.addr = alloca float*, align 8
  %str.addr = alloca i8*, align 8
  %ofs = alloca i64, align 8
  %tvec = alloca [192 x i8], align 16
  %distvec = alloca [64 x i8], align 16
  %autoik = alloca [64 x i8], align 16
  %dist = alloca float, align 4
  %dvec = alloca [3 x float], align 4
  %do_split = alloca i8, align 1
  %i = alloca i32, align 4
  %do_split57 = alloca i8, align 1
  %chainlen = alloca i16, align 2
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !16693, metadata !DIExpression()), !dbg !16694
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !16695, metadata !DIExpression()), !dbg !16696
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !16697, metadata !DIExpression()), !dbg !16698
  call void @llvm.dbg.declare(metadata i64* %ofs, metadata !16699, metadata !DIExpression()), !dbg !16700
  store i64 0, i64* %ofs, align 8, !dbg !16700
  call void @llvm.dbg.declare(metadata [192 x i8]* %tvec, metadata !16701, metadata !DIExpression()), !dbg !16702
  call void @llvm.dbg.declare(metadata [64 x i8]* %distvec, metadata !16703, metadata !DIExpression()), !dbg !16704
  call void @llvm.dbg.declare(metadata [64 x i8]* %autoik, metadata !16705, metadata !DIExpression()), !dbg !16706
  call void @llvm.dbg.declare(metadata float* %dist, metadata !16707, metadata !DIExpression()), !dbg !16708
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16709
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 15, !dbg !16711
  %call = call zeroext i8 @hasNumInput(%struct.NumInput* %num), !dbg !16712
  %tobool = icmp ne i8 %call, 0, !dbg !16712
  br i1 %tobool, label %if.then, label %if.else, !dbg !16713

if.then:                                          ; preds = %entry
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16714
  %num1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 15, !dbg !16716
  %arraydecay = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !16717
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16718
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 56, !dbg !16719
  %3 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !16719
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 38, !dbg !16720
  call void @outputNumInput(%struct.NumInput* %num1, i8* %arraydecay, %struct.UnitSettings* %unit), !dbg !16721
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16722
  %num2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 15, !dbg !16723
  %val = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num2, i32 0, i32 6, !dbg !16724
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !16722
  %call4 = call float @len_v3(float* %arraydecay3), !dbg !16725
  store float %call4, float* %dist, align 4, !dbg !16726
  br label %if.end46, !dbg !16727

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %dvec, metadata !16728, metadata !DIExpression()), !dbg !16730
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !16731
  %5 = load float*, float** %vec.addr, align 8, !dbg !16732
  call void @copy_v3_v3(float* %arraydecay5, float* %5), !dbg !16733
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16734
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !16735
  call void @applyAspectRatio(%struct.TransInfo* %6, float* %arraydecay6), !dbg !16736
  %7 = load float*, float** %vec.addr, align 8, !dbg !16737
  %call7 = call float @len_v3(float* %7), !dbg !16738
  store float %call7, float* %dist, align 4, !dbg !16739
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16740
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 1, !dbg !16742
  %9 = load i32, i32* %flag, align 4, !dbg !16742
  %and = and i32 %9, 32768, !dbg !16743
  %tobool8 = icmp ne i32 %and, 0, !dbg !16743
  br i1 %tobool8, label %if.else33, label %land.lhs.true, !dbg !16744

land.lhs.true:                                    ; preds = %if.else
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16745
  %scene9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 56, !dbg !16746
  %11 = load %struct.Scene*, %struct.Scene** %scene9, align 8, !dbg !16746
  %unit10 = getelementptr inbounds %struct.Scene, %struct.Scene* %11, i32 0, i32 38, !dbg !16747
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit10, i32 0, i32 1, !dbg !16748
  %12 = load i8, i8* %system, align 4, !dbg !16748
  %conv = zext i8 %12 to i32, !dbg !16745
  %tobool11 = icmp ne i32 %conv, 0, !dbg !16745
  br i1 %tobool11, label %if.then12, label %if.else33, !dbg !16749

if.then12:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8* %do_split, metadata !16750, metadata !DIExpression()), !dbg !16752
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16753
  %scene13 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 56, !dbg !16754
  %14 = load %struct.Scene*, %struct.Scene** %scene13, align 8, !dbg !16754
  %unit14 = getelementptr inbounds %struct.Scene, %struct.Scene* %14, i32 0, i32 38, !dbg !16755
  %flag15 = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit14, i32 0, i32 3, !dbg !16756
  %15 = load i16, i16* %flag15, align 2, !dbg !16756
  %conv16 = sext i16 %15 to i32, !dbg !16753
  %and17 = and i32 %conv16, 1, !dbg !16757
  %cmp = icmp ne i32 %and17, 0, !dbg !16758
  %conv18 = zext i1 %cmp to i32, !dbg !16758
  %conv19 = trunc i32 %conv18 to i8, !dbg !16759
  store i8 %conv19, i8* %do_split, align 1, !dbg !16752
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16760, metadata !DIExpression()), !dbg !16761
  store i32 0, i32* %i, align 4, !dbg !16762
  br label %for.cond, !dbg !16764

for.cond:                                         ; preds = %for.inc, %if.then12
  %16 = load i32, i32* %i, align 4, !dbg !16765
  %cmp20 = icmp slt i32 %16, 3, !dbg !16767
  br i1 %cmp20, label %for.body, label %for.end, !dbg !16768

for.body:                                         ; preds = %for.cond
  %17 = load i32, i32* %i, align 4, !dbg !16769
  %mul = mul nsw i32 64, %17, !dbg !16771
  %idxprom = sext i32 %mul to i64, !dbg !16772
  %arrayidx = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 %idxprom, !dbg !16772
  %18 = load i32, i32* %i, align 4, !dbg !16773
  %idxprom22 = sext i32 %18 to i64, !dbg !16774
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 %idxprom22, !dbg !16774
  %19 = load float, float* %arrayidx23, align 4, !dbg !16774
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16775
  %scene24 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 56, !dbg !16776
  %21 = load %struct.Scene*, %struct.Scene** %scene24, align 8, !dbg !16776
  %unit25 = getelementptr inbounds %struct.Scene, %struct.Scene* %21, i32 0, i32 38, !dbg !16777
  %scale_length = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit25, i32 0, i32 0, !dbg !16778
  %22 = load float, float* %scale_length, align 8, !dbg !16778
  %mul26 = fmul float %19, %22, !dbg !16779
  %conv27 = fpext float %mul26 to double, !dbg !16774
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16780
  %scene28 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 56, !dbg !16781
  %24 = load %struct.Scene*, %struct.Scene** %scene28, align 8, !dbg !16781
  %unit29 = getelementptr inbounds %struct.Scene, %struct.Scene* %24, i32 0, i32 38, !dbg !16782
  %system30 = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit29, i32 0, i32 1, !dbg !16783
  %25 = load i8, i8* %system30, align 4, !dbg !16783
  %conv31 = zext i8 %25 to i32, !dbg !16780
  %26 = load i8, i8* %do_split, align 1, !dbg !16784
  %call32 = call i64 @bUnit_AsString(i8* %arrayidx, i32 64, double %conv27, i32 4, i32 %conv31, i32 1, i8 zeroext %26, i8 zeroext 1), !dbg !16785
  br label %for.inc, !dbg !16786

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4, !dbg !16787
  %inc = add nsw i32 %27, 1, !dbg !16787
  store i32 %inc, i32* %i, align 4, !dbg !16787
  br label %for.cond, !dbg !16788, !llvm.loop !16789

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !16791

if.else33:                                        ; preds = %land.lhs.true, %if.else
  %arrayidx34 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !16792
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !16794
  %28 = load float, float* %arrayidx35, align 4, !dbg !16794
  %conv36 = fpext float %28 to double, !dbg !16794
  %call37 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arrayidx34, i64 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), double %conv36), !dbg !16795
  %arrayidx38 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 64, !dbg !16796
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !16797
  %29 = load float, float* %arrayidx39, align 4, !dbg !16797
  %conv40 = fpext float %29 to double, !dbg !16797
  %call41 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arrayidx38, i64 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), double %conv40), !dbg !16798
  %arrayidx42 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 128, !dbg !16799
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !16800
  %30 = load float, float* %arrayidx43, align 4, !dbg !16800
  %conv44 = fpext float %30 to double, !dbg !16800
  %call45 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arrayidx42, i64 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), double %conv44), !dbg !16801
  br label %if.end

if.end:                                           ; preds = %if.else33, %for.end
  br label %if.end46

if.end46:                                         ; preds = %if.end, %if.then
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16802
  %flag47 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %31, i32 0, i32 1, !dbg !16804
  %32 = load i32, i32* %flag47, align 4, !dbg !16804
  %and48 = and i32 %32, 32768, !dbg !16805
  %tobool49 = icmp ne i32 %and48, 0, !dbg !16805
  br i1 %tobool49, label %if.else77, label %land.lhs.true50, !dbg !16806

land.lhs.true50:                                  ; preds = %if.end46
  %33 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16807
  %scene51 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %33, i32 0, i32 56, !dbg !16808
  %34 = load %struct.Scene*, %struct.Scene** %scene51, align 8, !dbg !16808
  %unit52 = getelementptr inbounds %struct.Scene, %struct.Scene* %34, i32 0, i32 38, !dbg !16809
  %system53 = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit52, i32 0, i32 1, !dbg !16810
  %35 = load i8, i8* %system53, align 4, !dbg !16810
  %conv54 = zext i8 %35 to i32, !dbg !16807
  %tobool55 = icmp ne i32 %conv54, 0, !dbg !16807
  br i1 %tobool55, label %if.then56, label %if.else77, !dbg !16811

if.then56:                                        ; preds = %land.lhs.true50
  call void @llvm.dbg.declare(metadata i8* %do_split57, metadata !16812, metadata !DIExpression()), !dbg !16814
  %36 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16815
  %scene58 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %36, i32 0, i32 56, !dbg !16816
  %37 = load %struct.Scene*, %struct.Scene** %scene58, align 8, !dbg !16816
  %unit59 = getelementptr inbounds %struct.Scene, %struct.Scene* %37, i32 0, i32 38, !dbg !16817
  %flag60 = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit59, i32 0, i32 3, !dbg !16818
  %38 = load i16, i16* %flag60, align 2, !dbg !16818
  %conv61 = sext i16 %38 to i32, !dbg !16815
  %and62 = and i32 %conv61, 1, !dbg !16819
  %cmp63 = icmp ne i32 %and62, 0, !dbg !16820
  %conv64 = zext i1 %cmp63 to i32, !dbg !16820
  %conv65 = trunc i32 %conv64 to i8, !dbg !16821
  store i8 %conv65, i8* %do_split57, align 1, !dbg !16814
  %arraydecay66 = getelementptr inbounds [64 x i8], [64 x i8]* %distvec, i64 0, i64 0, !dbg !16822
  %39 = load float, float* %dist, align 4, !dbg !16823
  %40 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16824
  %scene67 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %40, i32 0, i32 56, !dbg !16825
  %41 = load %struct.Scene*, %struct.Scene** %scene67, align 8, !dbg !16825
  %unit68 = getelementptr inbounds %struct.Scene, %struct.Scene* %41, i32 0, i32 38, !dbg !16826
  %scale_length69 = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit68, i32 0, i32 0, !dbg !16827
  %42 = load float, float* %scale_length69, align 8, !dbg !16827
  %mul70 = fmul float %39, %42, !dbg !16828
  %conv71 = fpext float %mul70 to double, !dbg !16823
  %43 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16829
  %scene72 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %43, i32 0, i32 56, !dbg !16830
  %44 = load %struct.Scene*, %struct.Scene** %scene72, align 8, !dbg !16830
  %unit73 = getelementptr inbounds %struct.Scene, %struct.Scene* %44, i32 0, i32 38, !dbg !16831
  %system74 = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %unit73, i32 0, i32 1, !dbg !16832
  %45 = load i8, i8* %system74, align 4, !dbg !16832
  %conv75 = zext i8 %45 to i32, !dbg !16829
  %46 = load i8, i8* %do_split57, align 1, !dbg !16833
  %call76 = call i64 @bUnit_AsString(i8* %arraydecay66, i32 64, double %conv71, i32 4, i32 %conv75, i32 1, i8 zeroext %46, i8 zeroext 0), !dbg !16834
  br label %if.end91, !dbg !16835

if.else77:                                        ; preds = %land.lhs.true50, %if.end46
  %47 = load float, float* %dist, align 4, !dbg !16836
  %cmp78 = fcmp ogt float %47, 1.000000e+10, !dbg !16838
  br i1 %cmp78, label %if.then82, label %lor.lhs.false, !dbg !16839

lor.lhs.false:                                    ; preds = %if.else77
  %48 = load float, float* %dist, align 4, !dbg !16840
  %cmp80 = fcmp olt float %48, -1.000000e+10, !dbg !16841
  br i1 %cmp80, label %if.then82, label %if.else86, !dbg !16842

if.then82:                                        ; preds = %lor.lhs.false, %if.else77
  %arraydecay83 = getelementptr inbounds [64 x i8], [64 x i8]* %distvec, i64 0, i64 0, !dbg !16843
  %49 = load float, float* %dist, align 4, !dbg !16845
  %conv84 = fpext float %49 to double, !dbg !16845
  %call85 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay83, i64 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97, i64 0, i64 0), double %conv84), !dbg !16846
  br label %if.end90, !dbg !16847

if.else86:                                        ; preds = %lor.lhs.false
  %arraydecay87 = getelementptr inbounds [64 x i8], [64 x i8]* %distvec, i64 0, i64 0, !dbg !16848
  %50 = load float, float* %dist, align 4, !dbg !16850
  %conv88 = fpext float %50 to double, !dbg !16850
  %call89 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay87, i64 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), double %conv88), !dbg !16851
  br label %if.end90

if.end90:                                         ; preds = %if.else86, %if.then82
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.then56
  %51 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16852
  %flag92 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %51, i32 0, i32 1, !dbg !16854
  %52 = load i32, i32* %flag92, align 4, !dbg !16854
  %and93 = and i32 %52, 262144, !dbg !16855
  %tobool94 = icmp ne i32 %and93, 0, !dbg !16855
  br i1 %tobool94, label %if.then95, label %if.else104, !dbg !16856

if.then95:                                        ; preds = %if.end91
  call void @llvm.dbg.declare(metadata i16* %chainlen, metadata !16857, metadata !DIExpression()), !dbg !16859
  %53 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16860
  %settings = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %53, i32 0, i32 57, !dbg !16861
  %54 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !16861
  %autoik_chainlen = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %54, i32 0, i32 14, !dbg !16862
  %55 = load i16, i16* %autoik_chainlen, align 8, !dbg !16862
  store i16 %55, i16* %chainlen, align 2, !dbg !16859
  %56 = load i16, i16* %chainlen, align 2, !dbg !16863
  %tobool96 = icmp ne i16 %56, 0, !dbg !16863
  br i1 %tobool96, label %if.then97, label %if.else101, !dbg !16865

if.then97:                                        ; preds = %if.then95
  %arraydecay98 = getelementptr inbounds [64 x i8], [64 x i8]* %autoik, i64 0, i64 0, !dbg !16866
  %57 = load i16, i16* %chainlen, align 2, !dbg !16867
  %conv99 = sext i16 %57 to i32, !dbg !16867
  %call100 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay98, i64 64, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.98, i64 0, i64 0), i32 %conv99), !dbg !16868
  br label %if.end103, !dbg !16868

if.else101:                                       ; preds = %if.then95
  %arrayidx102 = getelementptr inbounds [64 x i8], [64 x i8]* %autoik, i64 0, i64 0, !dbg !16869
  store i8 0, i8* %arrayidx102, align 16, !dbg !16870
  br label %if.end103

if.end103:                                        ; preds = %if.else101, %if.then97
  br label %if.end106, !dbg !16871

if.else104:                                       ; preds = %if.end91
  %arrayidx105 = getelementptr inbounds [64 x i8], [64 x i8]* %autoik, i64 0, i64 0, !dbg !16872
  store i8 0, i8* %arrayidx105, align 16, !dbg !16873
  br label %if.end106

if.end106:                                        ; preds = %if.else104, %if.end103
  %58 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16874
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %58, i32 0, i32 13, !dbg !16876
  %mode = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 7, !dbg !16877
  %59 = load i32, i32* %mode, align 4, !dbg !16877
  %and107 = and i32 %59, 1, !dbg !16878
  %tobool108 = icmp ne i32 %and107, 0, !dbg !16878
  br i1 %tobool108, label %if.then109, label %if.else148, !dbg !16879

if.then109:                                       ; preds = %if.end106
  %60 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16880
  %num110 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %60, i32 0, i32 15, !dbg !16882
  %idx_max = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num110, i32 0, i32 0, !dbg !16883
  %61 = load i16, i16* %idx_max, align 8, !dbg !16883
  %conv111 = sext i16 %61 to i32, !dbg !16880
  switch i32 %conv111, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb119
    i32 2, label %sw.bb133
  ], !dbg !16884

sw.bb:                                            ; preds = %if.then109
  %62 = load i8*, i8** %str.addr, align 8, !dbg !16885
  %63 = load i64, i64* %ofs, align 8, !dbg !16887
  %add.ptr = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !16888
  %64 = load i64, i64* %ofs, align 8, !dbg !16889
  %sub = sub i64 256, %64, !dbg !16890
  %arrayidx112 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !16891
  %arraydecay113 = getelementptr inbounds [64 x i8], [64 x i8]* %distvec, i64 0, i64 0, !dbg !16892
  %65 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16893
  %con114 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %65, i32 0, i32 13, !dbg !16894
  %text = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con114, i32 0, i32 1, !dbg !16895
  %arraydecay115 = getelementptr inbounds [50 x i8], [50 x i8]* %text, i64 0, i64 0, !dbg !16893
  %66 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16896
  %proptext = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %66, i32 0, i32 19, !dbg !16897
  %arraydecay116 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext, i64 0, i64 0, !dbg !16896
  %arraydecay117 = getelementptr inbounds [64 x i8], [64 x i8]* %autoik, i64 0, i64 0, !dbg !16898
  %call118 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr, i64 %sub, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.99, i64 0, i64 0), i8* %arrayidx112, i8* %arraydecay113, i8* %arraydecay115, i8* %arraydecay116, i8* %arraydecay117), !dbg !16899
  %67 = load i64, i64* %ofs, align 8, !dbg !16900
  %add = add i64 %67, %call118, !dbg !16900
  store i64 %add, i64* %ofs, align 8, !dbg !16900
  br label %sw.epilog, !dbg !16901

sw.bb119:                                         ; preds = %if.then109
  %68 = load i8*, i8** %str.addr, align 8, !dbg !16902
  %69 = load i64, i64* %ofs, align 8, !dbg !16903
  %add.ptr120 = getelementptr inbounds i8, i8* %68, i64 %69, !dbg !16904
  %70 = load i64, i64* %ofs, align 8, !dbg !16905
  %sub121 = sub i64 256, %70, !dbg !16906
  %arrayidx122 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !16907
  %arrayidx123 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 64, !dbg !16908
  %arraydecay124 = getelementptr inbounds [64 x i8], [64 x i8]* %distvec, i64 0, i64 0, !dbg !16909
  %71 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16910
  %con125 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %71, i32 0, i32 13, !dbg !16911
  %text126 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con125, i32 0, i32 1, !dbg !16912
  %arraydecay127 = getelementptr inbounds [50 x i8], [50 x i8]* %text126, i64 0, i64 0, !dbg !16910
  %72 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16913
  %proptext128 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %72, i32 0, i32 19, !dbg !16914
  %arraydecay129 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext128, i64 0, i64 0, !dbg !16913
  %arraydecay130 = getelementptr inbounds [64 x i8], [64 x i8]* %autoik, i64 0, i64 0, !dbg !16915
  %call131 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr120, i64 %sub121, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.100, i64 0, i64 0), i8* %arrayidx122, i8* %arrayidx123, i8* %arraydecay124, i8* %arraydecay127, i8* %arraydecay129, i8* %arraydecay130), !dbg !16916
  %73 = load i64, i64* %ofs, align 8, !dbg !16917
  %add132 = add i64 %73, %call131, !dbg !16917
  store i64 %add132, i64* %ofs, align 8, !dbg !16917
  br label %sw.epilog, !dbg !16918

sw.bb133:                                         ; preds = %if.then109
  %74 = load i8*, i8** %str.addr, align 8, !dbg !16919
  %75 = load i64, i64* %ofs, align 8, !dbg !16920
  %add.ptr134 = getelementptr inbounds i8, i8* %74, i64 %75, !dbg !16921
  %76 = load i64, i64* %ofs, align 8, !dbg !16922
  %sub135 = sub i64 256, %76, !dbg !16923
  %arrayidx136 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !16924
  %arrayidx137 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 64, !dbg !16925
  %arrayidx138 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 128, !dbg !16926
  %arraydecay139 = getelementptr inbounds [64 x i8], [64 x i8]* %distvec, i64 0, i64 0, !dbg !16927
  %77 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16928
  %con140 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %77, i32 0, i32 13, !dbg !16929
  %text141 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con140, i32 0, i32 1, !dbg !16930
  %arraydecay142 = getelementptr inbounds [50 x i8], [50 x i8]* %text141, i64 0, i64 0, !dbg !16928
  %78 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16931
  %proptext143 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %78, i32 0, i32 19, !dbg !16932
  %arraydecay144 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext143, i64 0, i64 0, !dbg !16931
  %arraydecay145 = getelementptr inbounds [64 x i8], [64 x i8]* %autoik, i64 0, i64 0, !dbg !16933
  %call146 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr134, i64 %sub135, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.101, i64 0, i64 0), i8* %arrayidx136, i8* %arrayidx137, i8* %arrayidx138, i8* %arraydecay139, i8* %arraydecay142, i8* %arraydecay144, i8* %arraydecay145), !dbg !16934
  %79 = load i64, i64* %ofs, align 8, !dbg !16935
  %add147 = add i64 %79, %call146, !dbg !16935
  store i64 %add147, i64* %ofs, align 8, !dbg !16935
  br label %sw.epilog, !dbg !16936

sw.epilog:                                        ; preds = %if.then109, %sw.bb133, %sw.bb119, %sw.bb
  br label %if.end181, !dbg !16937

if.else148:                                       ; preds = %if.end106
  %80 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16938
  %flag149 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %80, i32 0, i32 1, !dbg !16941
  %81 = load i32, i32* %flag149, align 4, !dbg !16941
  %and150 = and i32 %81, 32768, !dbg !16942
  %tobool151 = icmp ne i32 %and150, 0, !dbg !16942
  br i1 %tobool151, label %if.then152, label %if.else165, !dbg !16943

if.then152:                                       ; preds = %if.else148
  %82 = load i8*, i8** %str.addr, align 8, !dbg !16944
  %83 = load i64, i64* %ofs, align 8, !dbg !16946
  %add.ptr153 = getelementptr inbounds i8, i8* %82, i64 %83, !dbg !16947
  %84 = load i64, i64* %ofs, align 8, !dbg !16948
  %sub154 = sub i64 256, %84, !dbg !16949
  %arrayidx155 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !16950
  %arrayidx156 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 64, !dbg !16951
  %arraydecay157 = getelementptr inbounds [64 x i8], [64 x i8]* %distvec, i64 0, i64 0, !dbg !16952
  %85 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16953
  %con158 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %85, i32 0, i32 13, !dbg !16954
  %text159 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con158, i32 0, i32 1, !dbg !16955
  %arraydecay160 = getelementptr inbounds [50 x i8], [50 x i8]* %text159, i64 0, i64 0, !dbg !16953
  %86 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16956
  %proptext161 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %86, i32 0, i32 19, !dbg !16957
  %arraydecay162 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext161, i64 0, i64 0, !dbg !16956
  %call163 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr153, i64 %sub154, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.102, i64 0, i64 0), i8* %arrayidx155, i8* %arrayidx156, i8* %arraydecay157, i8* %arraydecay160, i8* %arraydecay162), !dbg !16958
  %87 = load i64, i64* %ofs, align 8, !dbg !16959
  %add164 = add i64 %87, %call163, !dbg !16959
  store i64 %add164, i64* %ofs, align 8, !dbg !16959
  br label %if.end180, !dbg !16960

if.else165:                                       ; preds = %if.else148
  %88 = load i8*, i8** %str.addr, align 8, !dbg !16961
  %89 = load i64, i64* %ofs, align 8, !dbg !16963
  %add.ptr166 = getelementptr inbounds i8, i8* %88, i64 %89, !dbg !16964
  %90 = load i64, i64* %ofs, align 8, !dbg !16965
  %sub167 = sub i64 256, %90, !dbg !16966
  %arrayidx168 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !16967
  %arrayidx169 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 64, !dbg !16968
  %arrayidx170 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 128, !dbg !16969
  %arraydecay171 = getelementptr inbounds [64 x i8], [64 x i8]* %distvec, i64 0, i64 0, !dbg !16970
  %91 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16971
  %con172 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %91, i32 0, i32 13, !dbg !16972
  %text173 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con172, i32 0, i32 1, !dbg !16973
  %arraydecay174 = getelementptr inbounds [50 x i8], [50 x i8]* %text173, i64 0, i64 0, !dbg !16971
  %92 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16974
  %proptext175 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %92, i32 0, i32 19, !dbg !16975
  %arraydecay176 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext175, i64 0, i64 0, !dbg !16974
  %arraydecay177 = getelementptr inbounds [64 x i8], [64 x i8]* %autoik, i64 0, i64 0, !dbg !16976
  %call178 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr166, i64 %sub167, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.103, i64 0, i64 0), i8* %arrayidx168, i8* %arrayidx169, i8* %arrayidx170, i8* %arraydecay171, i8* %arraydecay174, i8* %arraydecay176, i8* %arraydecay177), !dbg !16977
  %93 = load i64, i64* %ofs, align 8, !dbg !16978
  %add179 = add i64 %93, %call178, !dbg !16978
  store i64 %add179, i64* %ofs, align 8, !dbg !16978
  br label %if.end180

if.end180:                                        ; preds = %if.else165, %if.then152
  br label %if.end181

if.end181:                                        ; preds = %if.end180, %sw.epilog
  %94 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16979
  %flag182 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %94, i32 0, i32 1, !dbg !16981
  %95 = load i32, i32* %flag182, align 4, !dbg !16981
  %and183 = and i32 %95, 33560576, !dbg !16982
  %tobool184 = icmp ne i32 %and183, 0, !dbg !16982
  br i1 %tobool184, label %if.then185, label %if.end191, !dbg !16983

if.then185:                                       ; preds = %if.end181
  %96 = load i8*, i8** %str.addr, align 8, !dbg !16984
  %97 = load i64, i64* %ofs, align 8, !dbg !16986
  %add.ptr186 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !16987
  %98 = load i64, i64* %ofs, align 8, !dbg !16988
  %sub187 = sub i64 256, %98, !dbg !16989
  %99 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !16990
  %prop_size = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %99, i32 0, i32 18, !dbg !16991
  %100 = load float, float* %prop_size, align 4, !dbg !16991
  %conv188 = fpext float %100 to double, !dbg !16990
  %call189 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr186, i64 %sub187, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.89, i64 0, i64 0), double %conv188), !dbg !16992
  %101 = load i64, i64* %ofs, align 8, !dbg !16993
  %add190 = add i64 %101, %call189, !dbg !16993
  store i64 %add190, i64* %ofs, align 8, !dbg !16993
  br label %if.end191, !dbg !16994

if.end191:                                        ; preds = %if.then185, %if.end181
  ret void, !dbg !16995
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyTranslationValue(%struct.TransInfo* %t, float* %vec) #0 !dbg !16996 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %vec.addr = alloca float*, align 8
  %td = alloca %struct.TransData*, align 8
  %tvec = alloca [3 x float], align 4
  %i = alloca i32, align 4
  %original_normal = alloca float*, align 8
  %axis = alloca [3 x float], align 4
  %quat = alloca [4 x float], align 16
  %mat = alloca [3 x [3 x float]], align 16
  %angle = alloca float, align 4
  %mat32 = alloca [3 x [3 x float]], align 16
  %pvec = alloca [3 x float], align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !16997, metadata !DIExpression()), !dbg !16998
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !16999, metadata !DIExpression()), !dbg !17000
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !17001, metadata !DIExpression()), !dbg !17002
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17003
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !17004
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !17004
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !17002
  call void @llvm.dbg.declare(metadata [3 x float]* %tvec, metadata !17005, metadata !DIExpression()), !dbg !17006
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17007, metadata !DIExpression()), !dbg !17008
  store i32 0, i32* %i, align 4, !dbg !17009
  br label %for.cond, !dbg !17011

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !17012
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17014
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 9, !dbg !17015
  %4 = load i32, i32* %total, align 8, !dbg !17015
  %cmp = icmp slt i32 %2, %4, !dbg !17016
  br i1 %cmp, label %for.body, label %for.end, !dbg !17017

for.body:                                         ; preds = %for.cond
  %5 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17018
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %5, i32 0, i32 16, !dbg !17021
  %6 = load i32, i32* %flag, align 8, !dbg !17021
  %and = and i32 %6, 4, !dbg !17022
  %tobool = icmp ne i32 %and, 0, !dbg !17022
  br i1 %tobool, label %if.then, label %if.end, !dbg !17023

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !17024

if.end:                                           ; preds = %for.body
  %7 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17025
  %flag1 = getelementptr inbounds %struct.TransData, %struct.TransData* %7, i32 0, i32 16, !dbg !17027
  %8 = load i32, i32* %flag1, align 8, !dbg !17027
  %and2 = and i32 %8, 2048, !dbg !17028
  %tobool3 = icmp ne i32 %and2, 0, !dbg !17028
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !17029

if.then4:                                         ; preds = %if.end
  br label %for.inc, !dbg !17030

if.end5:                                          ; preds = %if.end
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17031
  %call = call zeroext i8 @usingSnappingNormal(%struct.TransInfo* %9), !dbg !17033
  %tobool6 = icmp ne i8 %call, 0, !dbg !17033
  br i1 %tobool6, label %if.then7, label %if.end36, !dbg !17034

if.then7:                                         ; preds = %if.end5
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17035
  %call8 = call zeroext i8 @validSnappingNormal(%struct.TransInfo* %10), !dbg !17038
  %tobool9 = icmp ne i8 %call8, 0, !dbg !17038
  br i1 %tobool9, label %if.then10, label %if.else31, !dbg !17039

if.then10:                                        ; preds = %if.then7
  call void @llvm.dbg.declare(metadata float** %original_normal, metadata !17040, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.declare(metadata [3 x float]* %axis, metadata !17043, metadata !DIExpression()), !dbg !17044
  call void @llvm.dbg.declare(metadata [4 x float]* %quat, metadata !17045, metadata !DIExpression()), !dbg !17046
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !17047, metadata !DIExpression()), !dbg !17048
  call void @llvm.dbg.declare(metadata float* %angle, metadata !17049, metadata !DIExpression()), !dbg !17050
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17051
  %flag11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 1, !dbg !17053
  %12 = load i32, i32* %flag11, align 4, !dbg !17053
  %and12 = and i32 %12, 4, !dbg !17054
  %tobool13 = icmp ne i32 %and12, 0, !dbg !17054
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !17055

if.then14:                                        ; preds = %if.then10
  %13 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17056
  %axismtx = getelementptr inbounds %struct.TransData, %struct.TransData* %13, i32 0, i32 10, !dbg !17057
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %axismtx, i64 0, i64 1, !dbg !17056
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !17056
  store float* %arraydecay, float** %original_normal, align 8, !dbg !17058
  br label %if.end18, !dbg !17059

if.else:                                          ; preds = %if.then10
  %14 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17060
  %axismtx15 = getelementptr inbounds %struct.TransData, %struct.TransData* %14, i32 0, i32 10, !dbg !17061
  %arrayidx16 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %axismtx15, i64 0, i64 2, !dbg !17060
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 0, !dbg !17060
  store float* %arraydecay17, float** %original_normal, align 8, !dbg !17062
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then14
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !17063
  %15 = load float*, float** %original_normal, align 8, !dbg !17064
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17065
  %tsnap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 14, !dbg !17066
  %snapNormal = getelementptr inbounds %struct.TransSnap, %struct.TransSnap* %tsnap, i32 0, i32 11, !dbg !17067
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %snapNormal, i64 0, i64 0, !dbg !17065
  call void @cross_v3_v3v3(float* %arraydecay19, float* %15, float* %arraydecay20), !dbg !17068
  %17 = load float*, float** %original_normal, align 8, !dbg !17069
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17070
  %tsnap21 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 14, !dbg !17071
  %snapNormal22 = getelementptr inbounds %struct.TransSnap, %struct.TransSnap* %tsnap21, i32 0, i32 11, !dbg !17072
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %snapNormal22, i64 0, i64 0, !dbg !17070
  %call24 = call float @dot_v3v3(float* %17, float* %arraydecay23), !dbg !17073
  %call25 = call float @saacos(float %call24), !dbg !17074
  store float %call25, float* %angle, align 4, !dbg !17075
  %arraydecay26 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !17076
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !17077
  %19 = load float, float* %angle, align 4, !dbg !17078
  call void @axis_angle_to_quat(float* %arraydecay26, float* %arraydecay27, float %19), !dbg !17079
  %arraydecay28 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !17080
  %arraydecay29 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !17081
  call void @quat_to_mat3([3 x float]* %arraydecay28, float* %arraydecay29), !dbg !17082
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17083
  %21 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17084
  %arraydecay30 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !17085
  call void @ElementRotation(%struct.TransInfo* %20, %struct.TransData* %21, [3 x float]* %arraydecay30, i16 signext 2), !dbg !17086
  br label %if.end35, !dbg !17087

if.else31:                                        ; preds = %if.then7
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat32, metadata !17088, metadata !DIExpression()), !dbg !17090
  %arraydecay33 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat32, i64 0, i64 0, !dbg !17091
  call void @unit_m3([3 x float]* %arraydecay33), !dbg !17092
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17093
  %23 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17094
  %arraydecay34 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat32, i64 0, i64 0, !dbg !17095
  call void @ElementRotation(%struct.TransInfo* %22, %struct.TransData* %23, [3 x float]* %arraydecay34, i16 signext 2), !dbg !17096
  br label %if.end35

if.end35:                                         ; preds = %if.else31, %if.end18
  br label %if.end36, !dbg !17097

if.end36:                                         ; preds = %if.end35, %if.end5
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17098
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 13, !dbg !17100
  %applyVec = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 9, !dbg !17101
  %25 = load void (%struct.TransInfo*, %struct.TransData*, float*, float*, float*)*, void (%struct.TransInfo*, %struct.TransData*, float*, float*, float*)** %applyVec, align 8, !dbg !17101
  %tobool37 = icmp ne void (%struct.TransInfo*, %struct.TransData*, float*, float*, float*)* %25, null, !dbg !17098
  br i1 %tobool37, label %if.then38, label %if.else43, !dbg !17102

if.then38:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata [3 x float]* %pvec, metadata !17103, metadata !DIExpression()), !dbg !17105
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17106
  %con39 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 13, !dbg !17107
  %applyVec40 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con39, i32 0, i32 9, !dbg !17108
  %27 = load void (%struct.TransInfo*, %struct.TransData*, float*, float*, float*)*, void (%struct.TransInfo*, %struct.TransData*, float*, float*, float*)** %applyVec40, align 8, !dbg !17108
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17109
  %29 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17110
  %30 = load float*, float** %vec.addr, align 8, !dbg !17111
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !17112
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %pvec, i64 0, i64 0, !dbg !17113
  call void %27(%struct.TransInfo* %28, %struct.TransData* %29, float* %30, float* %arraydecay41, float* %arraydecay42), !dbg !17106
  br label %if.end45, !dbg !17114

if.else43:                                        ; preds = %if.end36
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !17115
  %31 = load float*, float** %vec.addr, align 8, !dbg !17117
  call void @copy_v3_v3(float* %arraydecay44, float* %31), !dbg !17118
  br label %if.end45

if.end45:                                         ; preds = %if.else43, %if.then38
  %32 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17119
  %smtx = getelementptr inbounds %struct.TransData, %struct.TransData* %32, i32 0, i32 9, !dbg !17120
  %arraydecay46 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smtx, i64 0, i64 0, !dbg !17119
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !17121
  call void @mul_m3_v3([3 x float]* %arraydecay46, float* %arraydecay47), !dbg !17122
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !17123
  %33 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17124
  %factor = getelementptr inbounds %struct.TransData, %struct.TransData* %33, i32 0, i32 2, !dbg !17125
  %34 = load float, float* %factor, align 8, !dbg !17125
  call void @mul_v3_fl(float* %arraydecay48, float %34), !dbg !17126
  %35 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17127
  %protectflag = getelementptr inbounds %struct.TransData, %struct.TransData* %35, i32 0, i32 17, !dbg !17128
  %36 = load i16, i16* %protectflag, align 4, !dbg !17128
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !17129
  call void @protectedTransBits(i16 signext %36, float* %arraydecay49), !dbg !17130
  %37 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17131
  %loc = getelementptr inbounds %struct.TransData, %struct.TransData* %37, i32 0, i32 3, !dbg !17133
  %38 = load float*, float** %loc, align 8, !dbg !17133
  %tobool50 = icmp ne float* %38, null, !dbg !17131
  br i1 %tobool50, label %if.then51, label %if.end55, !dbg !17134

if.then51:                                        ; preds = %if.end45
  %39 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17135
  %loc52 = getelementptr inbounds %struct.TransData, %struct.TransData* %39, i32 0, i32 3, !dbg !17136
  %40 = load float*, float** %loc52, align 8, !dbg !17136
  %41 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17137
  %iloc = getelementptr inbounds %struct.TransData, %struct.TransData* %41, i32 0, i32 4, !dbg !17138
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %iloc, i64 0, i64 0, !dbg !17137
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !17139
  call void @add_v3_v3v3(float* %40, float* %arraydecay53, float* %arraydecay54), !dbg !17140
  br label %if.end55, !dbg !17140

if.end55:                                         ; preds = %if.then51, %if.end45
  %42 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17141
  %43 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17142
  call void @constraintTransLim(%struct.TransInfo* %42, %struct.TransData* %43), !dbg !17143
  br label %for.inc, !dbg !17144

for.inc:                                          ; preds = %if.end55, %if.then4
  %44 = load i32, i32* %i, align 4, !dbg !17145
  %inc = add nsw i32 %44, 1, !dbg !17145
  store i32 %inc, i32* %i, align 4, !dbg !17145
  %45 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17146
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %45, i32 1, !dbg !17146
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !17146
  br label %for.cond, !dbg !17147, !llvm.loop !17148

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !17150
}

declare dso_local i64 @bUnit_AsString(i8*, i32, double, i32, i32, i32, i8 zeroext, i8 zeroext) #2

declare dso_local zeroext i8 @usingSnappingNormal(%struct.TransInfo*) #2

declare dso_local zeroext i8 @validSnappingNormal(%struct.TransInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @saacos(float %fac) #0 !dbg !17151 {
entry:
  %retval = alloca float, align 4
  %fac.addr = alloca float, align 4
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !17152, metadata !DIExpression()), !dbg !17153
  %0 = load float, float* %fac.addr, align 4, !dbg !17154
  %cmp = fcmp ole float %0, -1.000000e+00, !dbg !17154
  br i1 %cmp, label %if.then, label %if.else, !dbg !17156

if.then:                                          ; preds = %entry
  store float 0x400921FB60000000, float* %retval, align 4, !dbg !17157
  br label %return, !dbg !17157

if.else:                                          ; preds = %entry
  %1 = load float, float* %fac.addr, align 4, !dbg !17158
  %cmp1 = fcmp oge float %1, 1.000000e+00, !dbg !17158
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !17160

if.then2:                                         ; preds = %if.else
  store float 0.000000e+00, float* %retval, align 4, !dbg !17161
  br label %return, !dbg !17161

if.else3:                                         ; preds = %if.else
  %2 = load float, float* %fac.addr, align 4, !dbg !17162
  %call = call float @acosf(float %2) #5, !dbg !17163
  store float %call, float* %retval, align 4, !dbg !17164
  br label %return, !dbg !17164

return:                                           ; preds = %if.else3, %if.then2, %if.then
  %3 = load float, float* %retval, align 4, !dbg !17165
  ret float %3, !dbg !17165
}

declare dso_local void @quat_to_mat3([3 x float]*, float*) #2

; Function Attrs: nounwind
declare dso_local float @acosf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @applyShrinkFatten(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !17166 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %distance = alloca float, align 4
  %i = alloca i32, align 4
  %str = alloca [256 x i8], align 16
  %ofs = alloca i64, align 8
  %td = alloca %struct.TransData*, align 8
  %c = alloca [64 x i8], align 16
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  %tdistance = alloca float, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !17167, metadata !DIExpression()), !dbg !17168
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !17169, metadata !DIExpression()), !dbg !17170
  call void @llvm.dbg.declare(metadata float* %distance, metadata !17171, metadata !DIExpression()), !dbg !17172
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17173, metadata !DIExpression()), !dbg !17174
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !17175, metadata !DIExpression()), !dbg !17176
  call void @llvm.dbg.declare(metadata i64* %ofs, metadata !17177, metadata !DIExpression()), !dbg !17178
  store i64 0, i64* %ofs, align 8, !dbg !17178
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !17179, metadata !DIExpression()), !dbg !17180
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17181
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !17182
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !17182
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !17180
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17183
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 47, !dbg !17184
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !17183
  %3 = load float, float* %arrayidx, align 4, !dbg !17183
  %fneg = fneg float %3, !dbg !17185
  store float %fneg, float* %distance, align 4, !dbg !17186
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17187
  call void @snapGridIncrement(%struct.TransInfo* %4, float* %distance), !dbg !17188
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17189
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 15, !dbg !17190
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %distance), !dbg !17191
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17192
  %6 = load i64, i64* %ofs, align 8, !dbg !17193
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 %6, !dbg !17194
  %7 = load i64, i64* %ofs, align 8, !dbg !17195
  %sub = sub i64 256, %7, !dbg !17196
  %call1 = call i64 @BLI_strncpy_rlen(i8* %add.ptr, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.104, i64 0, i64 0), i64 %sub), !dbg !17197
  %8 = load i64, i64* %ofs, align 8, !dbg !17198
  %add = add i64 %8, %call1, !dbg !17198
  store i64 %add, i64* %ofs, align 8, !dbg !17198
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17199
  %num2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 15, !dbg !17201
  %call3 = call zeroext i8 @hasNumInput(%struct.NumInput* %num2), !dbg !17202
  %tobool = icmp ne i8 %call3, 0, !dbg !17202
  br i1 %tobool, label %if.then, label %if.else, !dbg !17203

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [64 x i8]* %c, metadata !17204, metadata !DIExpression()), !dbg !17206
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17207
  %num4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 15, !dbg !17208
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !17209
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17210
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 56, !dbg !17211
  %12 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !17211
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %12, i32 0, i32 38, !dbg !17212
  call void @outputNumInput(%struct.NumInput* %num4, i8* %arraydecay5, %struct.UnitSettings* %unit), !dbg !17213
  %arraydecay6 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17214
  %13 = load i64, i64* %ofs, align 8, !dbg !17215
  %add.ptr7 = getelementptr inbounds i8, i8* %arraydecay6, i64 %13, !dbg !17216
  %14 = load i64, i64* %ofs, align 8, !dbg !17217
  %sub8 = sub i64 256, %14, !dbg !17218
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !17219
  %call10 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr7, i64 %sub8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.105, i64 0, i64 0), i8* %arraydecay9), !dbg !17220
  %15 = load i64, i64* %ofs, align 8, !dbg !17221
  %add11 = add i64 %15, %call10, !dbg !17221
  store i64 %add11, i64* %ofs, align 8, !dbg !17221
  br label %if.end, !dbg !17222

if.else:                                          ; preds = %entry
  %arraydecay12 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17223
  %16 = load i64, i64* %ofs, align 8, !dbg !17225
  %add.ptr13 = getelementptr inbounds i8, i8* %arraydecay12, i64 %16, !dbg !17226
  %17 = load i64, i64* %ofs, align 8, !dbg !17227
  %sub14 = sub i64 256, %17, !dbg !17228
  %18 = load float, float* %distance, align 4, !dbg !17229
  %conv = fpext float %18 to double, !dbg !17229
  %call15 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr13, i64 %sub14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.106, i64 0, i64 0), double %conv), !dbg !17230
  %19 = load i64, i64* %ofs, align 8, !dbg !17231
  %add16 = add i64 %19, %call15, !dbg !17231
  store i64 %add16, i64* %ofs, align 8, !dbg !17231
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17232
  %proptext = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 19, !dbg !17234
  %arrayidx17 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext, i64 0, i64 0, !dbg !17232
  %21 = load i8, i8* %arrayidx17, align 8, !dbg !17232
  %tobool18 = icmp ne i8 %21, 0, !dbg !17232
  br i1 %tobool18, label %if.then19, label %if.end27, !dbg !17235

if.then19:                                        ; preds = %if.end
  %arraydecay20 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17236
  %22 = load i64, i64* %ofs, align 8, !dbg !17238
  %add.ptr21 = getelementptr inbounds i8, i8* %arraydecay20, i64 %22, !dbg !17239
  %23 = load i64, i64* %ofs, align 8, !dbg !17240
  %sub22 = sub i64 256, %23, !dbg !17241
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17242
  %proptext23 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 19, !dbg !17243
  %arraydecay24 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext23, i64 0, i64 0, !dbg !17242
  %call25 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr21, i64 %sub22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.105, i64 0, i64 0), i8* %arraydecay24), !dbg !17244
  %25 = load i64, i64* %ofs, align 8, !dbg !17245
  %add26 = add i64 %25, %call25, !dbg !17245
  store i64 %add26, i64* %ofs, align 8, !dbg !17245
  br label %if.end27, !dbg !17246

if.end27:                                         ; preds = %if.then19, %if.end
  %arraydecay28 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17247
  %26 = load i64, i64* %ofs, align 8, !dbg !17248
  %add.ptr29 = getelementptr inbounds i8, i8* %arraydecay28, i64 %26, !dbg !17249
  %27 = load i64, i64* %ofs, align 8, !dbg !17250
  %sub30 = sub i64 256, %27, !dbg !17251
  %call31 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr29, i64 %sub30, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i64 0, i64 0)), !dbg !17252
  %28 = load i64, i64* %ofs, align 8, !dbg !17253
  %add32 = add i64 %28, %call31, !dbg !17253
  store i64 %add32, i64* %ofs, align 8, !dbg !17253
  %29 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17254
  %keymap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %29, i32 0, i32 59, !dbg !17256
  %30 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !17256
  %tobool33 = icmp ne %struct.wmKeyMap* %30, null, !dbg !17254
  br i1 %tobool33, label %if.then34, label %if.end47, !dbg !17257

if.then34:                                        ; preds = %if.end27
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !17258, metadata !DIExpression()), !dbg !17260
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17261
  %keymap35 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %31, i32 0, i32 59, !dbg !17262
  %32 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap35, align 8, !dbg !17262
  %call36 = call %struct.wmKeyMapItem* @WM_modalkeymap_find_propvalue(%struct.wmKeyMap* %32, i32 5), !dbg !17263
  store %struct.wmKeyMapItem* %call36, %struct.wmKeyMapItem** %kmi, align 8, !dbg !17260
  %33 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !17264
  %tobool37 = icmp ne %struct.wmKeyMapItem* %33, null, !dbg !17264
  br i1 %tobool37, label %if.then38, label %if.end46, !dbg !17266

if.then38:                                        ; preds = %if.then34
  %34 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !17267
  %arraydecay39 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17269
  %35 = load i64, i64* %ofs, align 8, !dbg !17270
  %add.ptr40 = getelementptr inbounds i8, i8* %arraydecay39, i64 %35, !dbg !17271
  %36 = load i64, i64* %ofs, align 8, !dbg !17272
  %sub41 = sub i64 256, %36, !dbg !17273
  %conv42 = trunc i64 %sub41 to i32, !dbg !17274
  %call43 = call i32 @WM_keymap_item_to_string(%struct.wmKeyMapItem* %34, i8* %add.ptr40, i32 %conv42), !dbg !17275
  %conv44 = sext i32 %call43 to i64, !dbg !17275
  %37 = load i64, i64* %ofs, align 8, !dbg !17276
  %add45 = add i64 %37, %conv44, !dbg !17276
  store i64 %add45, i64* %ofs, align 8, !dbg !17276
  br label %if.end46, !dbg !17277

if.end46:                                         ; preds = %if.then38, %if.then34
  br label %if.end47, !dbg !17278

if.end47:                                         ; preds = %if.end46, %if.end27
  %arraydecay48 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17279
  %38 = load i64, i64* %ofs, align 8, !dbg !17280
  %add.ptr49 = getelementptr inbounds i8, i8* %arraydecay48, i64 %38, !dbg !17281
  %39 = load i64, i64* %ofs, align 8, !dbg !17282
  %sub50 = sub i64 256, %39, !dbg !17283
  %40 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17284
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %40, i32 0, i32 1, !dbg !17285
  %41 = load i32, i32* %flag, align 4, !dbg !17285
  %and = and i32 %41, 16777216, !dbg !17286
  %cmp = icmp ne i32 %and, 0, !dbg !17287
  %conv51 = zext i1 %cmp to i32, !dbg !17287
  %conv52 = trunc i32 %conv51 to i8, !dbg !17288
  %call53 = call i8* @WM_bool_as_string(i8 zeroext %conv52), !dbg !17289
  %call54 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr49, i64 %sub50, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.108, i64 0, i64 0), i8* %call53), !dbg !17290
  %42 = load float, float* %distance, align 4, !dbg !17291
  %fneg55 = fneg float %42, !dbg !17292
  %43 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17293
  %values56 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %43, i32 0, i32 47, !dbg !17294
  %arrayidx57 = getelementptr inbounds [4 x float], [4 x float]* %values56, i64 0, i64 0, !dbg !17293
  store float %fneg55, float* %arrayidx57, align 4, !dbg !17295
  store i32 0, i32* %i, align 4, !dbg !17296
  br label %for.cond, !dbg !17298

for.cond:                                         ; preds = %for.inc, %if.end47
  %44 = load i32, i32* %i, align 4, !dbg !17299
  %45 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17301
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %45, i32 0, i32 9, !dbg !17302
  %46 = load i32, i32* %total, align 8, !dbg !17302
  %cmp58 = icmp slt i32 %44, %46, !dbg !17303
  br i1 %cmp58, label %for.body, label %for.end, !dbg !17304

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %tdistance, metadata !17305, metadata !DIExpression()), !dbg !17307
  %47 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17308
  %flag60 = getelementptr inbounds %struct.TransData, %struct.TransData* %47, i32 0, i32 16, !dbg !17310
  %48 = load i32, i32* %flag60, align 8, !dbg !17310
  %and61 = and i32 %48, 4, !dbg !17311
  %tobool62 = icmp ne i32 %and61, 0, !dbg !17311
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !17312

if.then63:                                        ; preds = %for.body
  br label %for.end, !dbg !17313

if.end64:                                         ; preds = %for.body
  %49 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17314
  %flag65 = getelementptr inbounds %struct.TransData, %struct.TransData* %49, i32 0, i32 16, !dbg !17316
  %50 = load i32, i32* %flag65, align 8, !dbg !17316
  %and66 = and i32 %50, 2048, !dbg !17317
  %tobool67 = icmp ne i32 %and66, 0, !dbg !17317
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !17318

if.then68:                                        ; preds = %if.end64
  br label %for.inc, !dbg !17319

if.end69:                                         ; preds = %if.end64
  %51 = load float, float* %distance, align 4, !dbg !17320
  %52 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17321
  %factor = getelementptr inbounds %struct.TransData, %struct.TransData* %52, i32 0, i32 2, !dbg !17322
  %53 = load float, float* %factor, align 8, !dbg !17322
  %mul = fmul float %51, %53, !dbg !17323
  store float %mul, float* %tdistance, align 4, !dbg !17324
  %54 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17325
  %ext = getelementptr inbounds %struct.TransData, %struct.TransData* %54, i32 0, i32 13, !dbg !17327
  %55 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext, align 8, !dbg !17327
  %tobool70 = icmp ne %struct.TransDataExtension* %55, null, !dbg !17325
  br i1 %tobool70, label %land.lhs.true, label %if.end78, !dbg !17328

land.lhs.true:                                    ; preds = %if.end69
  %56 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17329
  %flag71 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %56, i32 0, i32 1, !dbg !17330
  %57 = load i32, i32* %flag71, align 4, !dbg !17330
  %and72 = and i32 %57, 16777216, !dbg !17331
  %tobool73 = icmp ne i32 %and72, 0, !dbg !17331
  br i1 %tobool73, label %if.then74, label %if.end78, !dbg !17332

if.then74:                                        ; preds = %land.lhs.true
  %58 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17333
  %ext75 = getelementptr inbounds %struct.TransData, %struct.TransData* %58, i32 0, i32 13, !dbg !17335
  %59 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext75, align 8, !dbg !17335
  %isize = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %59, i32 0, i32 12, !dbg !17336
  %arrayidx76 = getelementptr inbounds [3 x float], [3 x float]* %isize, i64 0, i64 0, !dbg !17333
  %60 = load float, float* %arrayidx76, align 8, !dbg !17333
  %61 = load float, float* %tdistance, align 4, !dbg !17337
  %mul77 = fmul float %61, %60, !dbg !17337
  store float %mul77, float* %tdistance, align 4, !dbg !17337
  br label %if.end78, !dbg !17338

if.end78:                                         ; preds = %if.then74, %land.lhs.true, %if.end69
  %62 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17339
  %loc = getelementptr inbounds %struct.TransData, %struct.TransData* %62, i32 0, i32 3, !dbg !17340
  %63 = load float*, float** %loc, align 8, !dbg !17340
  %64 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17341
  %iloc = getelementptr inbounds %struct.TransData, %struct.TransData* %64, i32 0, i32 4, !dbg !17342
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %iloc, i64 0, i64 0, !dbg !17341
  %65 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17343
  %axismtx = getelementptr inbounds %struct.TransData, %struct.TransData* %65, i32 0, i32 10, !dbg !17344
  %arrayidx80 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %axismtx, i64 0, i64 2, !dbg !17343
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx80, i64 0, i64 0, !dbg !17343
  %66 = load float, float* %tdistance, align 4, !dbg !17345
  call void @madd_v3_v3v3fl(float* %63, float* %arraydecay79, float* %arraydecay81, float %66), !dbg !17346
  br label %for.inc, !dbg !17347

for.inc:                                          ; preds = %if.end78, %if.then68
  %67 = load i32, i32* %i, align 4, !dbg !17348
  %inc = add nsw i32 %67, 1, !dbg !17348
  store i32 %inc, i32* %i, align 4, !dbg !17348
  %68 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17349
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %68, i32 1, !dbg !17349
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !17349
  br label %for.cond, !dbg !17350, !llvm.loop !17351

for.end:                                          ; preds = %if.then63, %for.cond
  %69 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17353
  call void @recalcData(%struct.TransInfo* %69), !dbg !17354
  %70 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17355
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %70, i32 0, i32 54, !dbg !17356
  %71 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !17356
  %arraydecay82 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17357
  call void @ED_area_headerprint(%struct.ScrArea* %71, i8* %arraydecay82), !dbg !17358
  ret void, !dbg !17359
}

declare dso_local i64 @BLI_strncpy_rlen(i8*, i8*, i64) #2

declare dso_local %struct.wmKeyMapItem* @WM_modalkeymap_find_propvalue(%struct.wmKeyMap*, i32) #2

declare dso_local i32 @WM_keymap_item_to_string(%struct.wmKeyMapItem*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3v3fl(float* %r, float* %a, float* %b, float %f) #0 !dbg !17360 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !17363, metadata !DIExpression()), !dbg !17364
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !17365, metadata !DIExpression()), !dbg !17366
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !17367, metadata !DIExpression()), !dbg !17368
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !17369, metadata !DIExpression()), !dbg !17370
  %0 = load float*, float** %a.addr, align 8, !dbg !17371
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !17371
  %1 = load float, float* %arrayidx, align 4, !dbg !17371
  %2 = load float*, float** %b.addr, align 8, !dbg !17372
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !17372
  %3 = load float, float* %arrayidx1, align 4, !dbg !17372
  %4 = load float, float* %f.addr, align 4, !dbg !17373
  %mul = fmul float %3, %4, !dbg !17374
  %add = fadd float %1, %mul, !dbg !17375
  %5 = load float*, float** %r.addr, align 8, !dbg !17376
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 0, !dbg !17376
  store float %add, float* %arrayidx2, align 4, !dbg !17377
  %6 = load float*, float** %a.addr, align 8, !dbg !17378
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !17378
  %7 = load float, float* %arrayidx3, align 4, !dbg !17378
  %8 = load float*, float** %b.addr, align 8, !dbg !17379
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !17379
  %9 = load float, float* %arrayidx4, align 4, !dbg !17379
  %10 = load float, float* %f.addr, align 4, !dbg !17380
  %mul5 = fmul float %9, %10, !dbg !17381
  %add6 = fadd float %7, %mul5, !dbg !17382
  %11 = load float*, float** %r.addr, align 8, !dbg !17383
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !17383
  store float %add6, float* %arrayidx7, align 4, !dbg !17384
  %12 = load float*, float** %a.addr, align 8, !dbg !17385
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !17385
  %13 = load float, float* %arrayidx8, align 4, !dbg !17385
  %14 = load float*, float** %b.addr, align 8, !dbg !17386
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 2, !dbg !17386
  %15 = load float, float* %arrayidx9, align 4, !dbg !17386
  %16 = load float, float* %f.addr, align 4, !dbg !17387
  %mul10 = fmul float %15, %16, !dbg !17388
  %add11 = fadd float %13, %mul10, !dbg !17389
  %17 = load float*, float** %r.addr, align 8, !dbg !17390
  %arrayidx12 = getelementptr inbounds float, float* %17, i64 2, !dbg !17390
  store float %add11, float* %arrayidx12, align 4, !dbg !17391
  ret void, !dbg !17392
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyTilt(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !17393 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %td = alloca %struct.TransData*, align 8
  %i = alloca i32, align 4
  %str = alloca [256 x i8], align 16
  %final = alloca float, align 4
  %c = alloca [64 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !17394, metadata !DIExpression()), !dbg !17395
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !17396, metadata !DIExpression()), !dbg !17397
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !17398, metadata !DIExpression()), !dbg !17399
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17400
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !17401
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !17401
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !17399
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17402, metadata !DIExpression()), !dbg !17403
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !17404, metadata !DIExpression()), !dbg !17405
  call void @llvm.dbg.declare(metadata float* %final, metadata !17406, metadata !DIExpression()), !dbg !17407
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17408
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 47, !dbg !17409
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !17408
  %3 = load float, float* %arrayidx, align 4, !dbg !17408
  store float %3, float* %final, align 4, !dbg !17410
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17411
  call void @snapGridIncrement(%struct.TransInfo* %4, float* %final), !dbg !17412
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17413
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 15, !dbg !17414
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %final), !dbg !17415
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17416
  %num1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 15, !dbg !17418
  %call2 = call zeroext i8 @hasNumInput(%struct.NumInput* %num1), !dbg !17419
  %tobool = icmp ne i8 %call2, 0, !dbg !17419
  br i1 %tobool, label %if.then, label %if.else, !dbg !17420

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [64 x i8]* %c, metadata !17421, metadata !DIExpression()), !dbg !17423
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17424
  %num3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 15, !dbg !17425
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !17426
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17427
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 56, !dbg !17428
  %9 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !17428
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 38, !dbg !17429
  call void @outputNumInput(%struct.NumInput* %num3, i8* %arraydecay, %struct.UnitSettings* %unit), !dbg !17430
  %arraydecay4 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17431
  %arrayidx5 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !17432
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17433
  %proptext = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 19, !dbg !17434
  %arraydecay6 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext, i64 0, i64 0, !dbg !17433
  %call7 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay4, i64 256, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.109, i64 0, i64 0), i8* %arrayidx5, i8* %arraydecay6), !dbg !17435
  %11 = load float, float* %final, align 4, !dbg !17436
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17437
  %values8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 47, !dbg !17438
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %values8, i64 0, i64 0, !dbg !17437
  store float %11, float* %arrayidx9, align 4, !dbg !17439
  br label %if.end, !dbg !17440

if.else:                                          ; preds = %entry
  %arraydecay10 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17441
  %13 = load float, float* %final, align 4, !dbg !17443
  %mul = fmul float %13, 0x404CA5DC20000000, !dbg !17443
  %conv = fpext float %mul to double, !dbg !17443
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17444
  %proptext11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 19, !dbg !17445
  %arraydecay12 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext11, i64 0, i64 0, !dbg !17444
  %call13 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay10, i64 256, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.110, i64 0, i64 0), double %conv, i8* %arraydecay12), !dbg !17446
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %i, align 4, !dbg !17447
  br label %for.cond, !dbg !17449

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load i32, i32* %i, align 4, !dbg !17450
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17452
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 9, !dbg !17453
  %17 = load i32, i32* %total, align 8, !dbg !17453
  %cmp = icmp slt i32 %15, %17, !dbg !17454
  br i1 %cmp, label %for.body, label %for.end, !dbg !17455

for.body:                                         ; preds = %for.cond
  %18 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17456
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %18, i32 0, i32 16, !dbg !17459
  %19 = load i32, i32* %flag, align 8, !dbg !17459
  %and = and i32 %19, 4, !dbg !17460
  %tobool15 = icmp ne i32 %and, 0, !dbg !17460
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !17461

if.then16:                                        ; preds = %for.body
  br label %for.end, !dbg !17462

if.end17:                                         ; preds = %for.body
  %20 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17463
  %flag18 = getelementptr inbounds %struct.TransData, %struct.TransData* %20, i32 0, i32 16, !dbg !17465
  %21 = load i32, i32* %flag18, align 8, !dbg !17465
  %and19 = and i32 %21, 2048, !dbg !17466
  %tobool20 = icmp ne i32 %and19, 0, !dbg !17466
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !17467

if.then21:                                        ; preds = %if.end17
  br label %for.inc, !dbg !17468

if.end22:                                         ; preds = %if.end17
  %22 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17469
  %val = getelementptr inbounds %struct.TransData, %struct.TransData* %22, i32 0, i32 5, !dbg !17471
  %23 = load float*, float** %val, align 8, !dbg !17471
  %tobool23 = icmp ne float* %23, null, !dbg !17469
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !17472

if.then24:                                        ; preds = %if.end22
  %24 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17473
  %ival = getelementptr inbounds %struct.TransData, %struct.TransData* %24, i32 0, i32 6, !dbg !17475
  %25 = load float, float* %ival, align 8, !dbg !17475
  %26 = load float, float* %final, align 4, !dbg !17476
  %27 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17477
  %factor = getelementptr inbounds %struct.TransData, %struct.TransData* %27, i32 0, i32 2, !dbg !17478
  %28 = load float, float* %factor, align 8, !dbg !17478
  %mul25 = fmul float %26, %28, !dbg !17479
  %add = fadd float %25, %mul25, !dbg !17480
  %29 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17481
  %val26 = getelementptr inbounds %struct.TransData, %struct.TransData* %29, i32 0, i32 5, !dbg !17482
  %30 = load float*, float** %val26, align 8, !dbg !17482
  store float %add, float* %30, align 4, !dbg !17483
  br label %if.end27, !dbg !17484

if.end27:                                         ; preds = %if.then24, %if.end22
  br label %for.inc, !dbg !17485

for.inc:                                          ; preds = %if.end27, %if.then21
  %31 = load i32, i32* %i, align 4, !dbg !17486
  %inc = add nsw i32 %31, 1, !dbg !17486
  store i32 %inc, i32* %i, align 4, !dbg !17486
  %32 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17487
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %32, i32 1, !dbg !17487
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !17487
  br label %for.cond, !dbg !17488, !llvm.loop !17489

for.end:                                          ; preds = %if.then16, %for.cond
  %33 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17491
  call void @recalcData(%struct.TransInfo* %33), !dbg !17492
  %34 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17493
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %34, i32 0, i32 54, !dbg !17494
  %35 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !17494
  %arraydecay28 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17495
  call void @ED_area_headerprint(%struct.ScrArea* %35, i8* %arraydecay28), !dbg !17496
  ret void, !dbg !17497
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyCurveShrinkFatten(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !17498 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %td = alloca %struct.TransData*, align 8
  %ratio = alloca float, align 4
  %i = alloca i32, align 4
  %str = alloca [256 x i8], align 16
  %c = alloca [64 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !17499, metadata !DIExpression()), !dbg !17500
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !17501, metadata !DIExpression()), !dbg !17502
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !17503, metadata !DIExpression()), !dbg !17504
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17505
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !17506
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !17506
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !17504
  call void @llvm.dbg.declare(metadata float* %ratio, metadata !17507, metadata !DIExpression()), !dbg !17508
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17509, metadata !DIExpression()), !dbg !17510
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !17511, metadata !DIExpression()), !dbg !17512
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17513
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 47, !dbg !17514
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !17513
  %3 = load float, float* %arrayidx, align 4, !dbg !17513
  store float %3, float* %ratio, align 4, !dbg !17515
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17516
  call void @snapGridIncrement(%struct.TransInfo* %4, float* %ratio), !dbg !17517
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17518
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 15, !dbg !17519
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %ratio), !dbg !17520
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17521
  %num1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 15, !dbg !17523
  %call2 = call zeroext i8 @hasNumInput(%struct.NumInput* %num1), !dbg !17524
  %tobool = icmp ne i8 %call2, 0, !dbg !17524
  br i1 %tobool, label %if.then, label %if.else, !dbg !17525

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [64 x i8]* %c, metadata !17526, metadata !DIExpression()), !dbg !17528
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17529
  %num3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 15, !dbg !17530
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !17531
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17532
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 56, !dbg !17533
  %9 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !17533
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 38, !dbg !17534
  call void @outputNumInput(%struct.NumInput* %num3, i8* %arraydecay, %struct.UnitSettings* %unit), !dbg !17535
  %arraydecay4 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17536
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !17537
  %call6 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay4, i64 256, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.111, i64 0, i64 0), i8* %arraydecay5), !dbg !17538
  br label %if.end, !dbg !17539

if.else:                                          ; preds = %entry
  %arraydecay7 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17540
  %10 = load float, float* %ratio, align 4, !dbg !17542
  %conv = fpext float %10 to double, !dbg !17542
  %call8 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay7, i64 256, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.112, i64 0, i64 0), double %conv), !dbg !17543
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %i, align 4, !dbg !17544
  br label %for.cond, !dbg !17546

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !17547
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17549
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 9, !dbg !17550
  %13 = load i32, i32* %total, align 8, !dbg !17550
  %cmp = icmp slt i32 %11, %13, !dbg !17551
  br i1 %cmp, label %for.body, label %for.end, !dbg !17552

for.body:                                         ; preds = %for.cond
  %14 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17553
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %14, i32 0, i32 16, !dbg !17556
  %15 = load i32, i32* %flag, align 8, !dbg !17556
  %and = and i32 %15, 4, !dbg !17557
  %tobool10 = icmp ne i32 %and, 0, !dbg !17557
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !17558

if.then11:                                        ; preds = %for.body
  br label %for.end, !dbg !17559

if.end12:                                         ; preds = %for.body
  %16 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17560
  %flag13 = getelementptr inbounds %struct.TransData, %struct.TransData* %16, i32 0, i32 16, !dbg !17562
  %17 = load i32, i32* %flag13, align 8, !dbg !17562
  %and14 = and i32 %17, 2048, !dbg !17563
  %tobool15 = icmp ne i32 %and14, 0, !dbg !17563
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !17564

if.then16:                                        ; preds = %if.end12
  br label %for.inc, !dbg !17565

if.end17:                                         ; preds = %if.end12
  %18 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17566
  %val = getelementptr inbounds %struct.TransData, %struct.TransData* %18, i32 0, i32 5, !dbg !17568
  %19 = load float*, float** %val, align 8, !dbg !17568
  %tobool18 = icmp ne float* %19, null, !dbg !17566
  br i1 %tobool18, label %if.then19, label %if.end33, !dbg !17569

if.then19:                                        ; preds = %if.end17
  %20 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17570
  %ival = getelementptr inbounds %struct.TransData, %struct.TransData* %20, i32 0, i32 6, !dbg !17572
  %21 = load float, float* %ival, align 8, !dbg !17572
  %22 = load float, float* %ratio, align 4, !dbg !17573
  %mul = fmul float %21, %22, !dbg !17574
  %23 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17575
  %val20 = getelementptr inbounds %struct.TransData, %struct.TransData* %23, i32 0, i32 5, !dbg !17576
  %24 = load float*, float** %val20, align 8, !dbg !17576
  store float %mul, float* %24, align 4, !dbg !17577
  %25 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17578
  %val21 = getelementptr inbounds %struct.TransData, %struct.TransData* %25, i32 0, i32 5, !dbg !17579
  %26 = load float*, float** %val21, align 8, !dbg !17579
  %27 = load float, float* %26, align 4, !dbg !17580
  %28 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17581
  %factor = getelementptr inbounds %struct.TransData, %struct.TransData* %28, i32 0, i32 2, !dbg !17582
  %29 = load float, float* %factor, align 8, !dbg !17582
  %mul22 = fmul float %27, %29, !dbg !17583
  %30 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17584
  %factor23 = getelementptr inbounds %struct.TransData, %struct.TransData* %30, i32 0, i32 2, !dbg !17585
  %31 = load float, float* %factor23, align 8, !dbg !17585
  %sub = fsub float 1.000000e+00, %31, !dbg !17586
  %32 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17587
  %ival24 = getelementptr inbounds %struct.TransData, %struct.TransData* %32, i32 0, i32 6, !dbg !17588
  %33 = load float, float* %ival24, align 8, !dbg !17588
  %mul25 = fmul float %sub, %33, !dbg !17589
  %add = fadd float %mul22, %mul25, !dbg !17590
  %34 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17591
  %val26 = getelementptr inbounds %struct.TransData, %struct.TransData* %34, i32 0, i32 5, !dbg !17592
  %35 = load float*, float** %val26, align 8, !dbg !17592
  store float %add, float* %35, align 4, !dbg !17593
  %36 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17594
  %val27 = getelementptr inbounds %struct.TransData, %struct.TransData* %36, i32 0, i32 5, !dbg !17596
  %37 = load float*, float** %val27, align 8, !dbg !17596
  %38 = load float, float* %37, align 4, !dbg !17597
  %cmp28 = fcmp ole float %38, 0.000000e+00, !dbg !17598
  br i1 %cmp28, label %if.then30, label %if.end32, !dbg !17599

if.then30:                                        ; preds = %if.then19
  %39 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17600
  %val31 = getelementptr inbounds %struct.TransData, %struct.TransData* %39, i32 0, i32 5, !dbg !17601
  %40 = load float*, float** %val31, align 8, !dbg !17601
  store float 0x3F50624DE0000000, float* %40, align 4, !dbg !17602
  br label %if.end32, !dbg !17603

if.end32:                                         ; preds = %if.then30, %if.then19
  br label %if.end33, !dbg !17604

if.end33:                                         ; preds = %if.end32, %if.end17
  br label %for.inc, !dbg !17605

for.inc:                                          ; preds = %if.end33, %if.then16
  %41 = load i32, i32* %i, align 4, !dbg !17606
  %inc = add nsw i32 %41, 1, !dbg !17606
  store i32 %inc, i32* %i, align 4, !dbg !17606
  %42 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17607
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %42, i32 1, !dbg !17607
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !17607
  br label %for.cond, !dbg !17608, !llvm.loop !17609

for.end:                                          ; preds = %if.then11, %for.cond
  %43 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17611
  call void @recalcData(%struct.TransInfo* %43), !dbg !17612
  %44 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17613
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %44, i32 0, i32 54, !dbg !17614
  %45 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !17614
  %arraydecay34 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17615
  call void @ED_area_headerprint(%struct.ScrArea* %45, i8* %arraydecay34), !dbg !17616
  ret void, !dbg !17617
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyMaskShrinkFatten(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !17618 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %td = alloca %struct.TransData*, align 8
  %ratio = alloca float, align 4
  %i = alloca i32, align 4
  %initial_feather = alloca i8, align 1
  %str = alloca [256 x i8], align 16
  %c = alloca [64 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !17619, metadata !DIExpression()), !dbg !17620
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !17621, metadata !DIExpression()), !dbg !17622
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !17623, metadata !DIExpression()), !dbg !17624
  call void @llvm.dbg.declare(metadata float* %ratio, metadata !17625, metadata !DIExpression()), !dbg !17626
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17627, metadata !DIExpression()), !dbg !17628
  call void @llvm.dbg.declare(metadata i8* %initial_feather, metadata !17629, metadata !DIExpression()), !dbg !17630
  store i8 0, i8* %initial_feather, align 1, !dbg !17630
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !17631, metadata !DIExpression()), !dbg !17632
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17633
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 47, !dbg !17634
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !17633
  %1 = load float, float* %arrayidx, align 4, !dbg !17633
  store float %1, float* %ratio, align 4, !dbg !17635
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17636
  call void @snapGridIncrement(%struct.TransInfo* %2, float* %ratio), !dbg !17637
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17638
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 15, !dbg !17639
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %ratio), !dbg !17640
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17641
  %num1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 15, !dbg !17643
  %call2 = call zeroext i8 @hasNumInput(%struct.NumInput* %num1), !dbg !17644
  %tobool = icmp ne i8 %call2, 0, !dbg !17644
  br i1 %tobool, label %if.then, label %if.else, !dbg !17645

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [64 x i8]* %c, metadata !17646, metadata !DIExpression()), !dbg !17648
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17649
  %num3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 15, !dbg !17650
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !17651
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17652
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 56, !dbg !17653
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !17653
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 38, !dbg !17654
  call void @outputNumInput(%struct.NumInput* %num3, i8* %arraydecay, %struct.UnitSettings* %unit), !dbg !17655
  %arraydecay4 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17656
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !17657
  %call6 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay4, i64 256, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.113, i64 0, i64 0), i8* %arraydecay5), !dbg !17658
  br label %if.end, !dbg !17659

if.else:                                          ; preds = %entry
  %arraydecay7 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17660
  %8 = load float, float* %ratio, align 4, !dbg !17662
  %conv = fpext float %8 to double, !dbg !17662
  %call8 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay7, i64 256, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.114, i64 0, i64 0), double %conv), !dbg !17663
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load float, float* %ratio, align 4, !dbg !17664
  %cmp = fcmp ogt float %9, 1.000000e+00, !dbg !17666
  br i1 %cmp, label %if.then10, label %if.end25, !dbg !17667

if.then10:                                        ; preds = %if.end
  store i8 1, i8* %initial_feather, align 1, !dbg !17668
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17670
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 10, !dbg !17672
  %11 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !17672
  store %struct.TransData* %11, %struct.TransData** %td, align 8, !dbg !17673
  store i32 0, i32* %i, align 4, !dbg !17674
  br label %for.cond, !dbg !17675

for.cond:                                         ; preds = %for.inc, %if.then10
  %12 = load i32, i32* %i, align 4, !dbg !17676
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17678
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 9, !dbg !17679
  %14 = load i32, i32* %total, align 8, !dbg !17679
  %cmp11 = icmp slt i32 %12, %14, !dbg !17680
  br i1 %cmp11, label %for.body, label %for.end, !dbg !17681

for.body:                                         ; preds = %for.cond
  %15 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17682
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %15, i32 0, i32 16, !dbg !17685
  %16 = load i32, i32* %flag, align 8, !dbg !17685
  %and = and i32 %16, 4, !dbg !17686
  %tobool13 = icmp ne i32 %and, 0, !dbg !17686
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !17687

if.then14:                                        ; preds = %for.body
  br label %for.end, !dbg !17688

if.end15:                                         ; preds = %for.body
  %17 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17689
  %flag16 = getelementptr inbounds %struct.TransData, %struct.TransData* %17, i32 0, i32 16, !dbg !17691
  %18 = load i32, i32* %flag16, align 8, !dbg !17691
  %and17 = and i32 %18, 2048, !dbg !17692
  %tobool18 = icmp ne i32 %and17, 0, !dbg !17692
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !17693

if.then19:                                        ; preds = %if.end15
  br label %for.inc, !dbg !17694

if.end20:                                         ; preds = %if.end15
  %19 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17695
  %ival = getelementptr inbounds %struct.TransData, %struct.TransData* %19, i32 0, i32 6, !dbg !17697
  %20 = load float, float* %ival, align 8, !dbg !17697
  %cmp21 = fcmp oge float %20, 0x3F50624DE0000000, !dbg !17698
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !17699

if.then23:                                        ; preds = %if.end20
  store i8 0, i8* %initial_feather, align 1, !dbg !17700
  br label %if.end24, !dbg !17701

if.end24:                                         ; preds = %if.then23, %if.end20
  br label %for.inc, !dbg !17702

for.inc:                                          ; preds = %if.end24, %if.then19
  %21 = load i32, i32* %i, align 4, !dbg !17703
  %inc = add nsw i32 %21, 1, !dbg !17703
  store i32 %inc, i32* %i, align 4, !dbg !17703
  %22 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17704
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %22, i32 1, !dbg !17704
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !17704
  br label %for.cond, !dbg !17705, !llvm.loop !17706

for.end:                                          ; preds = %if.then14, %for.cond
  br label %if.end25, !dbg !17708

if.end25:                                         ; preds = %for.end, %if.end
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17709
  %data26 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 10, !dbg !17711
  %24 = load %struct.TransData*, %struct.TransData** %data26, align 8, !dbg !17711
  store %struct.TransData* %24, %struct.TransData** %td, align 8, !dbg !17712
  store i32 0, i32* %i, align 4, !dbg !17713
  br label %for.cond27, !dbg !17714

for.cond27:                                       ; preds = %for.inc68, %if.end25
  %25 = load i32, i32* %i, align 4, !dbg !17715
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17717
  %total28 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 9, !dbg !17718
  %27 = load i32, i32* %total28, align 8, !dbg !17718
  %cmp29 = icmp slt i32 %25, %27, !dbg !17719
  br i1 %cmp29, label %for.body31, label %for.end71, !dbg !17720

for.body31:                                       ; preds = %for.cond27
  %28 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17721
  %flag32 = getelementptr inbounds %struct.TransData, %struct.TransData* %28, i32 0, i32 16, !dbg !17724
  %29 = load i32, i32* %flag32, align 8, !dbg !17724
  %and33 = and i32 %29, 4, !dbg !17725
  %tobool34 = icmp ne i32 %and33, 0, !dbg !17725
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !17726

if.then35:                                        ; preds = %for.body31
  br label %for.end71, !dbg !17727

if.end36:                                         ; preds = %for.body31
  %30 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17728
  %flag37 = getelementptr inbounds %struct.TransData, %struct.TransData* %30, i32 0, i32 16, !dbg !17730
  %31 = load i32, i32* %flag37, align 8, !dbg !17730
  %and38 = and i32 %31, 2048, !dbg !17731
  %tobool39 = icmp ne i32 %and38, 0, !dbg !17731
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !17732

if.then40:                                        ; preds = %if.end36
  br label %for.inc68, !dbg !17733

if.end41:                                         ; preds = %if.end36
  %32 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17734
  %val = getelementptr inbounds %struct.TransData, %struct.TransData* %32, i32 0, i32 5, !dbg !17736
  %33 = load float*, float** %val, align 8, !dbg !17736
  %tobool42 = icmp ne float* %33, null, !dbg !17734
  br i1 %tobool42, label %if.then43, label %if.end67, !dbg !17737

if.then43:                                        ; preds = %if.end41
  %34 = load i8, i8* %initial_feather, align 1, !dbg !17738
  %tobool44 = icmp ne i8 %34, 0, !dbg !17738
  br i1 %tobool44, label %if.then45, label %if.else48, !dbg !17741

if.then45:                                        ; preds = %if.then43
  %35 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17742
  %ival46 = getelementptr inbounds %struct.TransData, %struct.TransData* %35, i32 0, i32 6, !dbg !17743
  %36 = load float, float* %ival46, align 8, !dbg !17743
  %37 = load float, float* %ratio, align 4, !dbg !17744
  %sub = fsub float %37, 1.000000e+00, !dbg !17745
  %mul = fmul float %sub, 0x3F847AE140000000, !dbg !17746
  %add = fadd float %36, %mul, !dbg !17747
  %38 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17748
  %val47 = getelementptr inbounds %struct.TransData, %struct.TransData* %38, i32 0, i32 5, !dbg !17749
  %39 = load float*, float** %val47, align 8, !dbg !17749
  store float %add, float* %39, align 4, !dbg !17750
  br label %if.end52, !dbg !17751

if.else48:                                        ; preds = %if.then43
  %40 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17752
  %ival49 = getelementptr inbounds %struct.TransData, %struct.TransData* %40, i32 0, i32 6, !dbg !17753
  %41 = load float, float* %ival49, align 8, !dbg !17753
  %42 = load float, float* %ratio, align 4, !dbg !17754
  %mul50 = fmul float %41, %42, !dbg !17755
  %43 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17756
  %val51 = getelementptr inbounds %struct.TransData, %struct.TransData* %43, i32 0, i32 5, !dbg !17757
  %44 = load float*, float** %val51, align 8, !dbg !17757
  store float %mul50, float* %44, align 4, !dbg !17758
  br label %if.end52

if.end52:                                         ; preds = %if.else48, %if.then45
  %45 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17759
  %val53 = getelementptr inbounds %struct.TransData, %struct.TransData* %45, i32 0, i32 5, !dbg !17760
  %46 = load float*, float** %val53, align 8, !dbg !17760
  %47 = load float, float* %46, align 4, !dbg !17761
  %48 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17762
  %factor = getelementptr inbounds %struct.TransData, %struct.TransData* %48, i32 0, i32 2, !dbg !17763
  %49 = load float, float* %factor, align 8, !dbg !17763
  %mul54 = fmul float %47, %49, !dbg !17764
  %50 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17765
  %factor55 = getelementptr inbounds %struct.TransData, %struct.TransData* %50, i32 0, i32 2, !dbg !17766
  %51 = load float, float* %factor55, align 8, !dbg !17766
  %sub56 = fsub float 1.000000e+00, %51, !dbg !17767
  %52 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17768
  %ival57 = getelementptr inbounds %struct.TransData, %struct.TransData* %52, i32 0, i32 6, !dbg !17769
  %53 = load float, float* %ival57, align 8, !dbg !17769
  %mul58 = fmul float %sub56, %53, !dbg !17770
  %add59 = fadd float %mul54, %mul58, !dbg !17771
  %54 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17772
  %val60 = getelementptr inbounds %struct.TransData, %struct.TransData* %54, i32 0, i32 5, !dbg !17773
  %55 = load float*, float** %val60, align 8, !dbg !17773
  store float %add59, float* %55, align 4, !dbg !17774
  %56 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17775
  %val61 = getelementptr inbounds %struct.TransData, %struct.TransData* %56, i32 0, i32 5, !dbg !17777
  %57 = load float*, float** %val61, align 8, !dbg !17777
  %58 = load float, float* %57, align 4, !dbg !17778
  %cmp62 = fcmp ole float %58, 0.000000e+00, !dbg !17779
  br i1 %cmp62, label %if.then64, label %if.end66, !dbg !17780

if.then64:                                        ; preds = %if.end52
  %59 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17781
  %val65 = getelementptr inbounds %struct.TransData, %struct.TransData* %59, i32 0, i32 5, !dbg !17782
  %60 = load float*, float** %val65, align 8, !dbg !17782
  store float 0x3F50624DE0000000, float* %60, align 4, !dbg !17783
  br label %if.end66, !dbg !17784

if.end66:                                         ; preds = %if.then64, %if.end52
  br label %if.end67, !dbg !17785

if.end67:                                         ; preds = %if.end66, %if.end41
  br label %for.inc68, !dbg !17786

for.inc68:                                        ; preds = %if.end67, %if.then40
  %61 = load i32, i32* %i, align 4, !dbg !17787
  %inc69 = add nsw i32 %61, 1, !dbg !17787
  store i32 %inc69, i32* %i, align 4, !dbg !17787
  %62 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17788
  %incdec.ptr70 = getelementptr inbounds %struct.TransData, %struct.TransData* %62, i32 1, !dbg !17788
  store %struct.TransData* %incdec.ptr70, %struct.TransData** %td, align 8, !dbg !17788
  br label %for.cond27, !dbg !17789, !llvm.loop !17790

for.end71:                                        ; preds = %if.then35, %for.cond27
  %63 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17792
  call void @recalcData(%struct.TransInfo* %63), !dbg !17793
  %64 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17794
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %64, i32 0, i32 54, !dbg !17795
  %65 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !17795
  %arraydecay72 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17796
  call void @ED_area_headerprint(%struct.ScrArea* %65, i8* %arraydecay72), !dbg !17797
  ret void, !dbg !17798
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyPushPull(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !17799 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %vec = alloca [3 x float], align 4
  %axis = alloca [3 x float], align 4
  %distance = alloca float, align 4
  %i = alloca i32, align 4
  %str = alloca [256 x i8], align 16
  %td = alloca %struct.TransData*, align 8
  %c = alloca [64 x i8], align 16
  %dvec = alloca [3 x float], align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !17800, metadata !DIExpression()), !dbg !17801
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !17802, metadata !DIExpression()), !dbg !17803
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !17804, metadata !DIExpression()), !dbg !17805
  call void @llvm.dbg.declare(metadata [3 x float]* %axis, metadata !17806, metadata !DIExpression()), !dbg !17807
  call void @llvm.dbg.declare(metadata float* %distance, metadata !17808, metadata !DIExpression()), !dbg !17809
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17810, metadata !DIExpression()), !dbg !17811
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !17812, metadata !DIExpression()), !dbg !17813
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !17814, metadata !DIExpression()), !dbg !17815
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17816
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !17817
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !17817
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !17815
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17818
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 47, !dbg !17819
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !17818
  %3 = load float, float* %arrayidx, align 4, !dbg !17818
  store float %3, float* %distance, align 4, !dbg !17820
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17821
  call void @snapGridIncrement(%struct.TransInfo* %4, float* %distance), !dbg !17822
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17823
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 15, !dbg !17824
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %distance), !dbg !17825
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17826
  %num1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 15, !dbg !17828
  %call2 = call zeroext i8 @hasNumInput(%struct.NumInput* %num1), !dbg !17829
  %tobool = icmp ne i8 %call2, 0, !dbg !17829
  br i1 %tobool, label %if.then, label %if.else, !dbg !17830

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [64 x i8]* %c, metadata !17831, metadata !DIExpression()), !dbg !17833
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17834
  %num3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 15, !dbg !17835
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !17836
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17837
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 56, !dbg !17838
  %9 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !17838
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 38, !dbg !17839
  call void @outputNumInput(%struct.NumInput* %num3, i8* %arraydecay, %struct.UnitSettings* %unit), !dbg !17840
  %arraydecay4 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17841
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !17842
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17843
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 13, !dbg !17844
  %text = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 1, !dbg !17845
  %arraydecay6 = getelementptr inbounds [50 x i8], [50 x i8]* %text, i64 0, i64 0, !dbg !17843
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17846
  %proptext = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 19, !dbg !17847
  %arraydecay7 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext, i64 0, i64 0, !dbg !17846
  %call8 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay4, i64 256, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.115, i64 0, i64 0), i8* %arraydecay5, i8* %arraydecay6, i8* %arraydecay7), !dbg !17848
  br label %if.end, !dbg !17849

if.else:                                          ; preds = %entry
  %arraydecay9 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17850
  %12 = load float, float* %distance, align 4, !dbg !17852
  %conv = fpext float %12 to double, !dbg !17852
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17853
  %con10 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 13, !dbg !17854
  %text11 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con10, i32 0, i32 1, !dbg !17855
  %arraydecay12 = getelementptr inbounds [50 x i8], [50 x i8]* %text11, i64 0, i64 0, !dbg !17853
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17856
  %proptext13 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 19, !dbg !17857
  %arraydecay14 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext13, i64 0, i64 0, !dbg !17856
  %call15 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay9, i64 256, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.116, i64 0, i64 0), double %conv, i8* %arraydecay12, i8* %arraydecay14), !dbg !17858
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load float, float* %distance, align 4, !dbg !17859
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17860
  %values16 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 47, !dbg !17861
  %arrayidx17 = getelementptr inbounds [4 x float], [4 x float]* %values16, i64 0, i64 0, !dbg !17860
  store float %15, float* %arrayidx17, align 4, !dbg !17862
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17863
  %con18 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 13, !dbg !17865
  %applyRot = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con18, i32 0, i32 11, !dbg !17866
  %18 = load void (%struct.TransInfo*, %struct.TransData*, float*, float*)*, void (%struct.TransInfo*, %struct.TransData*, float*, float*)** %applyRot, align 8, !dbg !17866
  %tobool19 = icmp ne void (%struct.TransInfo*, %struct.TransData*, float*, float*)* %18, null, !dbg !17863
  br i1 %tobool19, label %land.lhs.true, label %if.end26, !dbg !17867

land.lhs.true:                                    ; preds = %if.end
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17868
  %con20 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 13, !dbg !17869
  %mode = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con20, i32 0, i32 7, !dbg !17870
  %20 = load i32, i32* %mode, align 4, !dbg !17870
  %and = and i32 %20, 1, !dbg !17871
  %tobool21 = icmp ne i32 %and, 0, !dbg !17871
  br i1 %tobool21, label %if.then22, label %if.end26, !dbg !17872

if.then22:                                        ; preds = %land.lhs.true
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17873
  %con23 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 13, !dbg !17875
  %applyRot24 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con23, i32 0, i32 11, !dbg !17876
  %22 = load void (%struct.TransInfo*, %struct.TransData*, float*, float*)*, void (%struct.TransInfo*, %struct.TransData*, float*, float*)** %applyRot24, align 8, !dbg !17876
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17877
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !17878
  call void %22(%struct.TransInfo* %23, %struct.TransData* null, float* %arraydecay25, float* null), !dbg !17873
  br label %if.end26, !dbg !17879

if.end26:                                         ; preds = %if.then22, %land.lhs.true, %if.end
  store i32 0, i32* %i, align 4, !dbg !17880
  br label %for.cond, !dbg !17882

for.cond:                                         ; preds = %for.inc, %if.end26
  %24 = load i32, i32* %i, align 4, !dbg !17883
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17885
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 9, !dbg !17886
  %26 = load i32, i32* %total, align 8, !dbg !17886
  %cmp = icmp slt i32 %24, %26, !dbg !17887
  br i1 %cmp, label %for.body, label %for.end, !dbg !17888

for.body:                                         ; preds = %for.cond
  %27 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17889
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %27, i32 0, i32 16, !dbg !17892
  %28 = load i32, i32* %flag, align 8, !dbg !17892
  %and28 = and i32 %28, 4, !dbg !17893
  %tobool29 = icmp ne i32 %and28, 0, !dbg !17893
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !17894

if.then30:                                        ; preds = %for.body
  br label %for.end, !dbg !17895

if.end31:                                         ; preds = %for.body
  %29 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17896
  %flag32 = getelementptr inbounds %struct.TransData, %struct.TransData* %29, i32 0, i32 16, !dbg !17898
  %30 = load i32, i32* %flag32, align 8, !dbg !17898
  %and33 = and i32 %30, 2048, !dbg !17899
  %tobool34 = icmp ne i32 %and33, 0, !dbg !17899
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !17900

if.then35:                                        ; preds = %if.end31
  br label %for.inc, !dbg !17901

if.end36:                                         ; preds = %if.end31
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !17902
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17903
  %center = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %31, i32 0, i32 20, !dbg !17904
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !17903
  %32 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17905
  %center39 = getelementptr inbounds %struct.TransData, %struct.TransData* %32, i32 0, i32 7, !dbg !17906
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %center39, i64 0, i64 0, !dbg !17905
  call void @sub_v3_v3v3(float* %arraydecay37, float* %arraydecay38, float* %arraydecay40), !dbg !17907
  %33 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17908
  %con41 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %33, i32 0, i32 13, !dbg !17910
  %applyRot42 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con41, i32 0, i32 11, !dbg !17911
  %34 = load void (%struct.TransInfo*, %struct.TransData*, float*, float*)*, void (%struct.TransInfo*, %struct.TransData*, float*, float*)** %applyRot42, align 8, !dbg !17911
  %tobool43 = icmp ne void (%struct.TransInfo*, %struct.TransData*, float*, float*)* %34, null, !dbg !17908
  br i1 %tobool43, label %land.lhs.true44, label %if.end66, !dbg !17912

land.lhs.true44:                                  ; preds = %if.end36
  %35 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17913
  %con45 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %35, i32 0, i32 13, !dbg !17914
  %mode46 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con45, i32 0, i32 7, !dbg !17915
  %36 = load i32, i32* %mode46, align 4, !dbg !17915
  %and47 = and i32 %36, 1, !dbg !17916
  %tobool48 = icmp ne i32 %and47, 0, !dbg !17916
  br i1 %tobool48, label %if.then49, label %if.end66, !dbg !17917

if.then49:                                        ; preds = %land.lhs.true44
  %37 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17918
  %con50 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %37, i32 0, i32 13, !dbg !17920
  %applyRot51 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con50, i32 0, i32 11, !dbg !17921
  %38 = load void (%struct.TransInfo*, %struct.TransData*, float*, float*)*, void (%struct.TransInfo*, %struct.TransData*, float*, float*)** %applyRot51, align 8, !dbg !17921
  %39 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17922
  %40 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17923
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !17924
  call void %38(%struct.TransInfo* %39, %struct.TransData* %40, float* %arraydecay52, float* null), !dbg !17918
  %41 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17925
  %call53 = call zeroext i8 @isLockConstraint(%struct.TransInfo* %41), !dbg !17927
  %tobool54 = icmp ne i8 %call53, 0, !dbg !17927
  br i1 %tobool54, label %if.then55, label %if.else61, !dbg !17928

if.then55:                                        ; preds = %if.then49
  call void @llvm.dbg.declare(metadata [3 x float]* %dvec, metadata !17929, metadata !DIExpression()), !dbg !17931
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !17932
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !17933
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !17934
  call void @project_v3_v3v3(float* %arraydecay56, float* %arraydecay57, float* %arraydecay58), !dbg !17935
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !17936
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !17937
  call void @sub_v3_v3(float* %arraydecay59, float* %arraydecay60), !dbg !17938
  br label %if.end65, !dbg !17939

if.else61:                                        ; preds = %if.then49
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !17940
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !17942
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !17943
  call void @project_v3_v3v3(float* %arraydecay62, float* %arraydecay63, float* %arraydecay64), !dbg !17944
  br label %if.end65

if.end65:                                         ; preds = %if.else61, %if.then55
  br label %if.end66, !dbg !17945

if.end66:                                         ; preds = %if.end65, %land.lhs.true44, %if.end36
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !17946
  %call68 = call float @normalize_v3(float* %arraydecay67), !dbg !17947
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !17948
  %42 = load float, float* %distance, align 4, !dbg !17949
  call void @mul_v3_fl(float* %arraydecay69, float %42), !dbg !17950
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !17951
  %43 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17952
  %factor = getelementptr inbounds %struct.TransData, %struct.TransData* %43, i32 0, i32 2, !dbg !17953
  %44 = load float, float* %factor, align 8, !dbg !17953
  call void @mul_v3_fl(float* %arraydecay70, float %44), !dbg !17954
  %45 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17955
  %loc = getelementptr inbounds %struct.TransData, %struct.TransData* %45, i32 0, i32 3, !dbg !17956
  %46 = load float*, float** %loc, align 8, !dbg !17956
  %47 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17957
  %iloc = getelementptr inbounds %struct.TransData, %struct.TransData* %47, i32 0, i32 4, !dbg !17958
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %iloc, i64 0, i64 0, !dbg !17957
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !17959
  call void @add_v3_v3v3(float* %46, float* %arraydecay71, float* %arraydecay72), !dbg !17960
  br label %for.inc, !dbg !17961

for.inc:                                          ; preds = %if.end66, %if.then35
  %48 = load i32, i32* %i, align 4, !dbg !17962
  %inc = add nsw i32 %48, 1, !dbg !17962
  store i32 %inc, i32* %i, align 4, !dbg !17962
  %49 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !17963
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %49, i32 1, !dbg !17963
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !17963
  br label %for.cond, !dbg !17964, !llvm.loop !17965

for.end:                                          ; preds = %if.then30, %for.cond
  %50 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17967
  call void @recalcData(%struct.TransInfo* %50), !dbg !17968
  %51 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17969
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %51, i32 0, i32 54, !dbg !17970
  %52 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !17970
  %arraydecay73 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !17971
  call void @ED_area_headerprint(%struct.ScrArea* %52, i8* %arraydecay73), !dbg !17972
  ret void, !dbg !17973
}

declare dso_local zeroext i8 @isLockConstraint(%struct.TransInfo*) #2

declare dso_local void @project_v3_v3v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @applyBevelWeight(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !17974 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %td = alloca %struct.TransData*, align 8
  %weight = alloca float, align 4
  %i = alloca i32, align 4
  %str = alloca [256 x i8], align 16
  %c = alloca [64 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !17975, metadata !DIExpression()), !dbg !17976
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !17977, metadata !DIExpression()), !dbg !17978
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !17979, metadata !DIExpression()), !dbg !17980
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17981
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !17982
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !17982
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !17980
  call void @llvm.dbg.declare(metadata float* %weight, metadata !17983, metadata !DIExpression()), !dbg !17984
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17985, metadata !DIExpression()), !dbg !17986
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !17987, metadata !DIExpression()), !dbg !17988
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17989
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 47, !dbg !17990
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !17989
  %3 = load float, float* %arrayidx, align 4, !dbg !17989
  store float %3, float* %weight, align 4, !dbg !17991
  %4 = load float, float* %weight, align 4, !dbg !17992
  %cmp = fcmp ogt float %4, 1.000000e+00, !dbg !17994
  br i1 %cmp, label %if.then, label %if.end, !dbg !17995

if.then:                                          ; preds = %entry
  store float 1.000000e+00, float* %weight, align 4, !dbg !17996
  br label %if.end, !dbg !17997

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !17998
  call void @snapGridIncrement(%struct.TransInfo* %5, float* %weight), !dbg !17999
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18000
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 15, !dbg !18001
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %weight), !dbg !18002
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18003
  %num1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 15, !dbg !18005
  %call2 = call zeroext i8 @hasNumInput(%struct.NumInput* %num1), !dbg !18006
  %tobool = icmp ne i8 %call2, 0, !dbg !18006
  br i1 %tobool, label %if.then3, label %if.else17, !dbg !18007

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata [64 x i8]* %c, metadata !18008, metadata !DIExpression()), !dbg !18010
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18011
  %num4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 15, !dbg !18012
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !18013
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18014
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 56, !dbg !18015
  %10 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !18015
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %10, i32 0, i32 38, !dbg !18016
  call void @outputNumInput(%struct.NumInput* %num4, i8* %arraydecay, %struct.UnitSettings* %unit), !dbg !18017
  %11 = load float, float* %weight, align 4, !dbg !18018
  %cmp5 = fcmp oge float %11, 0.000000e+00, !dbg !18020
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !18021

if.then6:                                         ; preds = %if.then3
  %arraydecay7 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18022
  %arraydecay8 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !18023
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18024
  %proptext = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 19, !dbg !18025
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext, i64 0, i64 0, !dbg !18024
  %call10 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay7, i64 256, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.117, i64 0, i64 0), i8* %arraydecay8, i8* %arraydecay9), !dbg !18026
  br label %if.end16, !dbg !18026

if.else:                                          ; preds = %if.then3
  %arraydecay11 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18027
  %arraydecay12 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !18028
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18029
  %proptext13 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 19, !dbg !18030
  %arraydecay14 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext13, i64 0, i64 0, !dbg !18029
  %call15 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay11, i64 256, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.118, i64 0, i64 0), i8* %arraydecay12, i8* %arraydecay14), !dbg !18031
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then6
  br label %if.end31, !dbg !18032

if.else17:                                        ; preds = %if.end
  %14 = load float, float* %weight, align 4, !dbg !18033
  %cmp18 = fcmp oge float %14, 0.000000e+00, !dbg !18036
  br i1 %cmp18, label %if.then19, label %if.else24, !dbg !18037

if.then19:                                        ; preds = %if.else17
  %arraydecay20 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18038
  %15 = load float, float* %weight, align 4, !dbg !18039
  %conv = fpext float %15 to double, !dbg !18039
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18040
  %proptext21 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 19, !dbg !18041
  %arraydecay22 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext21, i64 0, i64 0, !dbg !18040
  %call23 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay20, i64 256, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.119, i64 0, i64 0), double %conv, i8* %arraydecay22), !dbg !18042
  br label %if.end30, !dbg !18042

if.else24:                                        ; preds = %if.else17
  %arraydecay25 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18043
  %17 = load float, float* %weight, align 4, !dbg !18044
  %conv26 = fpext float %17 to double, !dbg !18044
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18045
  %proptext27 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 19, !dbg !18046
  %arraydecay28 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext27, i64 0, i64 0, !dbg !18045
  %call29 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay25, i64 256, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.120, i64 0, i64 0), double %conv26, i8* %arraydecay28), !dbg !18047
  br label %if.end30

if.end30:                                         ; preds = %if.else24, %if.then19
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end16
  store i32 0, i32* %i, align 4, !dbg !18048
  br label %for.cond, !dbg !18050

for.cond:                                         ; preds = %for.inc, %if.end31
  %19 = load i32, i32* %i, align 4, !dbg !18051
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18053
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 9, !dbg !18054
  %21 = load i32, i32* %total, align 8, !dbg !18054
  %cmp32 = icmp slt i32 %19, %21, !dbg !18055
  br i1 %cmp32, label %for.body, label %for.end, !dbg !18056

for.body:                                         ; preds = %for.cond
  %22 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18057
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %22, i32 0, i32 16, !dbg !18060
  %23 = load i32, i32* %flag, align 8, !dbg !18060
  %and = and i32 %23, 4, !dbg !18061
  %tobool34 = icmp ne i32 %and, 0, !dbg !18061
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !18062

if.then35:                                        ; preds = %for.body
  br label %for.end, !dbg !18063

if.end36:                                         ; preds = %for.body
  %24 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18064
  %val = getelementptr inbounds %struct.TransData, %struct.TransData* %24, i32 0, i32 5, !dbg !18066
  %25 = load float*, float** %val, align 8, !dbg !18066
  %tobool37 = icmp ne float* %25, null, !dbg !18064
  br i1 %tobool37, label %if.then38, label %if.end52, !dbg !18067

if.then38:                                        ; preds = %if.end36
  %26 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18068
  %ival = getelementptr inbounds %struct.TransData, %struct.TransData* %26, i32 0, i32 6, !dbg !18070
  %27 = load float, float* %ival, align 8, !dbg !18070
  %28 = load float, float* %weight, align 4, !dbg !18071
  %29 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18072
  %factor = getelementptr inbounds %struct.TransData, %struct.TransData* %29, i32 0, i32 2, !dbg !18073
  %30 = load float, float* %factor, align 8, !dbg !18073
  %mul = fmul float %28, %30, !dbg !18074
  %add = fadd float %27, %mul, !dbg !18075
  %31 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18076
  %val39 = getelementptr inbounds %struct.TransData, %struct.TransData* %31, i32 0, i32 5, !dbg !18077
  %32 = load float*, float** %val39, align 8, !dbg !18077
  store float %add, float* %32, align 4, !dbg !18078
  %33 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18079
  %val40 = getelementptr inbounds %struct.TransData, %struct.TransData* %33, i32 0, i32 5, !dbg !18081
  %34 = load float*, float** %val40, align 8, !dbg !18081
  %35 = load float, float* %34, align 4, !dbg !18082
  %cmp41 = fcmp olt float %35, 0.000000e+00, !dbg !18083
  br i1 %cmp41, label %if.then43, label %if.end45, !dbg !18084

if.then43:                                        ; preds = %if.then38
  %36 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18085
  %val44 = getelementptr inbounds %struct.TransData, %struct.TransData* %36, i32 0, i32 5, !dbg !18086
  %37 = load float*, float** %val44, align 8, !dbg !18086
  store float 0.000000e+00, float* %37, align 4, !dbg !18087
  br label %if.end45, !dbg !18088

if.end45:                                         ; preds = %if.then43, %if.then38
  %38 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18089
  %val46 = getelementptr inbounds %struct.TransData, %struct.TransData* %38, i32 0, i32 5, !dbg !18091
  %39 = load float*, float** %val46, align 8, !dbg !18091
  %40 = load float, float* %39, align 4, !dbg !18092
  %cmp47 = fcmp ogt float %40, 1.000000e+00, !dbg !18093
  br i1 %cmp47, label %if.then49, label %if.end51, !dbg !18094

if.then49:                                        ; preds = %if.end45
  %41 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18095
  %val50 = getelementptr inbounds %struct.TransData, %struct.TransData* %41, i32 0, i32 5, !dbg !18096
  %42 = load float*, float** %val50, align 8, !dbg !18096
  store float 1.000000e+00, float* %42, align 4, !dbg !18097
  br label %if.end51, !dbg !18098

if.end51:                                         ; preds = %if.then49, %if.end45
  br label %if.end52, !dbg !18099

if.end52:                                         ; preds = %if.end51, %if.end36
  br label %for.inc, !dbg !18100

for.inc:                                          ; preds = %if.end52
  %43 = load i32, i32* %i, align 4, !dbg !18101
  %inc = add nsw i32 %43, 1, !dbg !18101
  store i32 %inc, i32* %i, align 4, !dbg !18101
  %44 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18102
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %44, i32 1, !dbg !18102
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !18102
  br label %for.cond, !dbg !18103, !llvm.loop !18104

for.end:                                          ; preds = %if.then35, %for.cond
  %45 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18106
  call void @recalcData(%struct.TransInfo* %45), !dbg !18107
  %46 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18108
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %46, i32 0, i32 54, !dbg !18109
  %47 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !18109
  %arraydecay53 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18110
  call void @ED_area_headerprint(%struct.ScrArea* %47, i8* %arraydecay53), !dbg !18111
  ret void, !dbg !18112
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyCrease(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !18113 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %td = alloca %struct.TransData*, align 8
  %crease = alloca float, align 4
  %i = alloca i32, align 4
  %str = alloca [256 x i8], align 16
  %c = alloca [64 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !18114, metadata !DIExpression()), !dbg !18115
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !18116, metadata !DIExpression()), !dbg !18117
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !18118, metadata !DIExpression()), !dbg !18119
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18120
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !18121
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !18121
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !18119
  call void @llvm.dbg.declare(metadata float* %crease, metadata !18122, metadata !DIExpression()), !dbg !18123
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18124, metadata !DIExpression()), !dbg !18125
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !18126, metadata !DIExpression()), !dbg !18127
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18128
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 47, !dbg !18129
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !18128
  %3 = load float, float* %arrayidx, align 4, !dbg !18128
  store float %3, float* %crease, align 4, !dbg !18130
  %4 = load float, float* %crease, align 4, !dbg !18131
  %cmp = fcmp ogt float %4, 1.000000e+00, !dbg !18133
  br i1 %cmp, label %if.then, label %if.end, !dbg !18134

if.then:                                          ; preds = %entry
  store float 1.000000e+00, float* %crease, align 4, !dbg !18135
  br label %if.end, !dbg !18136

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18137
  call void @snapGridIncrement(%struct.TransInfo* %5, float* %crease), !dbg !18138
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18139
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 15, !dbg !18140
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %crease), !dbg !18141
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18142
  %num1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 15, !dbg !18144
  %call2 = call zeroext i8 @hasNumInput(%struct.NumInput* %num1), !dbg !18145
  %tobool = icmp ne i8 %call2, 0, !dbg !18145
  br i1 %tobool, label %if.then3, label %if.else17, !dbg !18146

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata [64 x i8]* %c, metadata !18147, metadata !DIExpression()), !dbg !18149
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18150
  %num4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 15, !dbg !18151
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !18152
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18153
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 56, !dbg !18154
  %10 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !18154
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %10, i32 0, i32 38, !dbg !18155
  call void @outputNumInput(%struct.NumInput* %num4, i8* %arraydecay, %struct.UnitSettings* %unit), !dbg !18156
  %11 = load float, float* %crease, align 4, !dbg !18157
  %cmp5 = fcmp oge float %11, 0.000000e+00, !dbg !18159
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !18160

if.then6:                                         ; preds = %if.then3
  %arraydecay7 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18161
  %arraydecay8 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !18162
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18163
  %proptext = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 19, !dbg !18164
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext, i64 0, i64 0, !dbg !18163
  %call10 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay7, i64 256, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.121, i64 0, i64 0), i8* %arraydecay8, i8* %arraydecay9), !dbg !18165
  br label %if.end16, !dbg !18165

if.else:                                          ; preds = %if.then3
  %arraydecay11 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18166
  %arraydecay12 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !18167
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18168
  %proptext13 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 19, !dbg !18169
  %arraydecay14 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext13, i64 0, i64 0, !dbg !18168
  %call15 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay11, i64 256, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.122, i64 0, i64 0), i8* %arraydecay12, i8* %arraydecay14), !dbg !18170
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then6
  br label %if.end31, !dbg !18171

if.else17:                                        ; preds = %if.end
  %14 = load float, float* %crease, align 4, !dbg !18172
  %cmp18 = fcmp oge float %14, 0.000000e+00, !dbg !18175
  br i1 %cmp18, label %if.then19, label %if.else24, !dbg !18176

if.then19:                                        ; preds = %if.else17
  %arraydecay20 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18177
  %15 = load float, float* %crease, align 4, !dbg !18178
  %conv = fpext float %15 to double, !dbg !18178
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18179
  %proptext21 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 19, !dbg !18180
  %arraydecay22 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext21, i64 0, i64 0, !dbg !18179
  %call23 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay20, i64 256, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.123, i64 0, i64 0), double %conv, i8* %arraydecay22), !dbg !18181
  br label %if.end30, !dbg !18181

if.else24:                                        ; preds = %if.else17
  %arraydecay25 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18182
  %17 = load float, float* %crease, align 4, !dbg !18183
  %conv26 = fpext float %17 to double, !dbg !18183
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18184
  %proptext27 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 19, !dbg !18185
  %arraydecay28 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext27, i64 0, i64 0, !dbg !18184
  %call29 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay25, i64 256, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.124, i64 0, i64 0), double %conv26, i8* %arraydecay28), !dbg !18186
  br label %if.end30

if.end30:                                         ; preds = %if.else24, %if.then19
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end16
  store i32 0, i32* %i, align 4, !dbg !18187
  br label %for.cond, !dbg !18189

for.cond:                                         ; preds = %for.inc, %if.end31
  %19 = load i32, i32* %i, align 4, !dbg !18190
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18192
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 9, !dbg !18193
  %21 = load i32, i32* %total, align 8, !dbg !18193
  %cmp32 = icmp slt i32 %19, %21, !dbg !18194
  br i1 %cmp32, label %for.body, label %for.end, !dbg !18195

for.body:                                         ; preds = %for.cond
  %22 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18196
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %22, i32 0, i32 16, !dbg !18199
  %23 = load i32, i32* %flag, align 8, !dbg !18199
  %and = and i32 %23, 4, !dbg !18200
  %tobool34 = icmp ne i32 %and, 0, !dbg !18200
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !18201

if.then35:                                        ; preds = %for.body
  br label %for.end, !dbg !18202

if.end36:                                         ; preds = %for.body
  %24 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18203
  %flag37 = getelementptr inbounds %struct.TransData, %struct.TransData* %24, i32 0, i32 16, !dbg !18205
  %25 = load i32, i32* %flag37, align 8, !dbg !18205
  %and38 = and i32 %25, 2048, !dbg !18206
  %tobool39 = icmp ne i32 %and38, 0, !dbg !18206
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !18207

if.then40:                                        ; preds = %if.end36
  br label %for.inc, !dbg !18208

if.end41:                                         ; preds = %if.end36
  %26 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18209
  %val = getelementptr inbounds %struct.TransData, %struct.TransData* %26, i32 0, i32 5, !dbg !18211
  %27 = load float*, float** %val, align 8, !dbg !18211
  %tobool42 = icmp ne float* %27, null, !dbg !18209
  br i1 %tobool42, label %if.then43, label %if.end57, !dbg !18212

if.then43:                                        ; preds = %if.end41
  %28 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18213
  %ival = getelementptr inbounds %struct.TransData, %struct.TransData* %28, i32 0, i32 6, !dbg !18215
  %29 = load float, float* %ival, align 8, !dbg !18215
  %30 = load float, float* %crease, align 4, !dbg !18216
  %31 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18217
  %factor = getelementptr inbounds %struct.TransData, %struct.TransData* %31, i32 0, i32 2, !dbg !18218
  %32 = load float, float* %factor, align 8, !dbg !18218
  %mul = fmul float %30, %32, !dbg !18219
  %add = fadd float %29, %mul, !dbg !18220
  %33 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18221
  %val44 = getelementptr inbounds %struct.TransData, %struct.TransData* %33, i32 0, i32 5, !dbg !18222
  %34 = load float*, float** %val44, align 8, !dbg !18222
  store float %add, float* %34, align 4, !dbg !18223
  %35 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18224
  %val45 = getelementptr inbounds %struct.TransData, %struct.TransData* %35, i32 0, i32 5, !dbg !18226
  %36 = load float*, float** %val45, align 8, !dbg !18226
  %37 = load float, float* %36, align 4, !dbg !18227
  %cmp46 = fcmp olt float %37, 0.000000e+00, !dbg !18228
  br i1 %cmp46, label %if.then48, label %if.end50, !dbg !18229

if.then48:                                        ; preds = %if.then43
  %38 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18230
  %val49 = getelementptr inbounds %struct.TransData, %struct.TransData* %38, i32 0, i32 5, !dbg !18231
  %39 = load float*, float** %val49, align 8, !dbg !18231
  store float 0.000000e+00, float* %39, align 4, !dbg !18232
  br label %if.end50, !dbg !18233

if.end50:                                         ; preds = %if.then48, %if.then43
  %40 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18234
  %val51 = getelementptr inbounds %struct.TransData, %struct.TransData* %40, i32 0, i32 5, !dbg !18236
  %41 = load float*, float** %val51, align 8, !dbg !18236
  %42 = load float, float* %41, align 4, !dbg !18237
  %cmp52 = fcmp ogt float %42, 1.000000e+00, !dbg !18238
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !18239

if.then54:                                        ; preds = %if.end50
  %43 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18240
  %val55 = getelementptr inbounds %struct.TransData, %struct.TransData* %43, i32 0, i32 5, !dbg !18241
  %44 = load float*, float** %val55, align 8, !dbg !18241
  store float 1.000000e+00, float* %44, align 4, !dbg !18242
  br label %if.end56, !dbg !18243

if.end56:                                         ; preds = %if.then54, %if.end50
  br label %if.end57, !dbg !18244

if.end57:                                         ; preds = %if.end56, %if.end41
  br label %for.inc, !dbg !18245

for.inc:                                          ; preds = %if.end57, %if.then40
  %45 = load i32, i32* %i, align 4, !dbg !18246
  %inc = add nsw i32 %45, 1, !dbg !18246
  store i32 %inc, i32* %i, align 4, !dbg !18246
  %46 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18247
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %46, i32 1, !dbg !18247
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !18247
  br label %for.cond, !dbg !18248, !llvm.loop !18249

for.end:                                          ; preds = %if.then35, %for.cond
  %47 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18251
  call void @recalcData(%struct.TransInfo* %47), !dbg !18252
  %48 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18253
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %48, i32 0, i32 54, !dbg !18254
  %49 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !18254
  %arraydecay58 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18255
  call void @ED_area_headerprint(%struct.ScrArea* %49, i8* %arraydecay58), !dbg !18256
  ret void, !dbg !18257
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyBoneSize(%struct.TransInfo* %t, i32* %mval) #0 !dbg !18258 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %mval.addr = alloca i32*, align 8
  %td = alloca %struct.TransData*, align 8
  %size = alloca [3 x float], align 4
  %mat = alloca [3 x [3 x float]], align 16
  %ratio = alloca float, align 4
  %i = alloca i32, align 4
  %str = alloca [256 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !18259, metadata !DIExpression()), !dbg !18260
  store i32* %mval, i32** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mval.addr, metadata !18261, metadata !DIExpression()), !dbg !18262
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !18263, metadata !DIExpression()), !dbg !18264
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18265
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !18266
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !18266
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !18264
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !18267, metadata !DIExpression()), !dbg !18268
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !18269, metadata !DIExpression()), !dbg !18270
  call void @llvm.dbg.declare(metadata float* %ratio, metadata !18271, metadata !DIExpression()), !dbg !18272
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18273, metadata !DIExpression()), !dbg !18274
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !18275, metadata !DIExpression()), !dbg !18276
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18277
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 1, !dbg !18279
  %3 = load i32, i32* %flag, align 4, !dbg !18279
  %and = and i32 %3, 128, !dbg !18280
  %tobool = icmp ne i32 %and, 0, !dbg !18280
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !18281

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18282
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 13, !dbg !18283
  %mode = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 7, !dbg !18284
  %5 = load i32, i32* %mode, align 4, !dbg !18284
  %cmp = icmp eq i32 %5, 0, !dbg !18285
  br i1 %cmp, label %if.then, label %if.else, !dbg !18286

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18287
  %imval = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 22, !dbg !18289
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %imval, i64 0, i64 0, !dbg !18287
  %7 = load i32, i32* %arrayidx, align 8, !dbg !18287
  %8 = load i32*, i32** %mval.addr, align 8, !dbg !18290
  %arrayidx1 = getelementptr inbounds i32, i32* %8, i64 0, !dbg !18290
  %9 = load i32, i32* %arrayidx1, align 4, !dbg !18290
  %sub = sub nsw i32 %7, %9, !dbg !18291
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18292
  %imval2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 22, !dbg !18293
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %imval2, i64 0, i64 1, !dbg !18292
  %11 = load i32, i32* %arrayidx3, align 4, !dbg !18292
  %12 = load i32*, i32** %mval.addr, align 8, !dbg !18294
  %arrayidx4 = getelementptr inbounds i32, i32* %12, i64 1, !dbg !18294
  %13 = load i32, i32* %arrayidx4, align 4, !dbg !18294
  %sub5 = sub nsw i32 %11, %13, !dbg !18295
  %add = add nsw i32 %sub, %sub5, !dbg !18296
  %conv = sitofp i32 %add to float, !dbg !18297
  %div = fdiv float %conv, 1.000000e+02, !dbg !18298
  %sub6 = fsub float 1.000000e+00, %div, !dbg !18299
  store float %sub6, float* %ratio, align 4, !dbg !18300
  br label %if.end, !dbg !18301

if.else:                                          ; preds = %land.lhs.true, %entry
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18302
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 47, !dbg !18304
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !18302
  %15 = load float, float* %arrayidx7, align 4, !dbg !18302
  store float %15, float* %ratio, align 4, !dbg !18305
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %16 = load float, float* %ratio, align 4, !dbg !18306
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !18307
  store float %16, float* %arrayidx8, align 4, !dbg !18308
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !18309
  store float %16, float* %arrayidx9, align 4, !dbg !18310
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !18311
  store float %16, float* %arrayidx10, align 4, !dbg !18312
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18313
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !18314
  call void @snapGridIncrement(%struct.TransInfo* %17, float* %arraydecay), !dbg !18315
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18316
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 15, !dbg !18318
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !18319
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %arraydecay11), !dbg !18320
  %tobool12 = icmp ne i8 %call, 0, !dbg !18320
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !18321

if.then13:                                        ; preds = %if.end
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18322
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !18324
  call void @constraintNumInput(%struct.TransInfo* %19, float* %arraydecay14), !dbg !18325
  br label %if.end15, !dbg !18326

if.end15:                                         ; preds = %if.then13, %if.end
  %arraydecay16 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !18327
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !18328
  call void @size_to_mat3([3 x float]* %arraydecay16, float* %arraydecay17), !dbg !18329
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18330
  %con18 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 13, !dbg !18332
  %applySize = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con18, i32 0, i32 10, !dbg !18333
  %21 = load void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)*, void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)** %applySize, align 8, !dbg !18333
  %tobool19 = icmp ne void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)* %21, null, !dbg !18330
  br i1 %tobool19, label %if.then20, label %if.end24, !dbg !18334

if.then20:                                        ; preds = %if.end15
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18335
  %con21 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 13, !dbg !18337
  %applySize22 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con21, i32 0, i32 10, !dbg !18338
  %23 = load void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)*, void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)** %applySize22, align 8, !dbg !18338
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18339
  %arraydecay23 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !18340
  call void %23(%struct.TransInfo* %24, %struct.TransData* null, [3 x float]* %arraydecay23), !dbg !18335
  br label %if.end24, !dbg !18341

if.end24:                                         ; preds = %if.then20, %if.end15
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18342
  %mat25 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 36, !dbg !18343
  %arraydecay26 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat25, i64 0, i64 0, !dbg !18342
  %arraydecay27 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !18344
  call void @copy_m3_m3([3 x float]* %arraydecay26, [3 x float]* %arraydecay27), !dbg !18345
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18346
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !18347
  %arraydecay29 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18348
  call void @headerBoneSize(%struct.TransInfo* %26, float* %arraydecay28, i8* %arraydecay29), !dbg !18349
  store i32 0, i32* %i, align 4, !dbg !18350
  br label %for.cond, !dbg !18352

for.cond:                                         ; preds = %for.inc, %if.end24
  %27 = load i32, i32* %i, align 4, !dbg !18353
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18355
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 9, !dbg !18356
  %29 = load i32, i32* %total, align 8, !dbg !18356
  %cmp30 = icmp slt i32 %27, %29, !dbg !18357
  br i1 %cmp30, label %for.body, label %for.end, !dbg !18358

for.body:                                         ; preds = %for.cond
  %30 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18359
  %flag32 = getelementptr inbounds %struct.TransData, %struct.TransData* %30, i32 0, i32 16, !dbg !18362
  %31 = load i32, i32* %flag32, align 8, !dbg !18362
  %and33 = and i32 %31, 4, !dbg !18363
  %tobool34 = icmp ne i32 %and33, 0, !dbg !18363
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !18364

if.then35:                                        ; preds = %for.body
  br label %for.end, !dbg !18365

if.end36:                                         ; preds = %for.body
  %32 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18366
  %flag37 = getelementptr inbounds %struct.TransData, %struct.TransData* %32, i32 0, i32 16, !dbg !18368
  %33 = load i32, i32* %flag37, align 8, !dbg !18368
  %and38 = and i32 %33, 2048, !dbg !18369
  %tobool39 = icmp ne i32 %and38, 0, !dbg !18369
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !18370

if.then40:                                        ; preds = %if.end36
  br label %for.inc, !dbg !18371

if.end41:                                         ; preds = %if.end36
  %34 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18372
  %35 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18373
  %arraydecay42 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !18374
  call void @ElementBoneSize(%struct.TransInfo* %34, %struct.TransData* %35, [3 x float]* %arraydecay42), !dbg !18375
  br label %for.inc, !dbg !18376

for.inc:                                          ; preds = %if.end41, %if.then40
  %36 = load i32, i32* %i, align 4, !dbg !18377
  %inc = add nsw i32 %36, 1, !dbg !18377
  store i32 %inc, i32* %i, align 4, !dbg !18377
  %37 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18378
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %37, i32 1, !dbg !18378
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !18378
  br label %for.cond, !dbg !18379, !llvm.loop !18380

for.end:                                          ; preds = %if.then35, %for.cond
  %38 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18382
  call void @recalcData(%struct.TransInfo* %38), !dbg !18383
  %39 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18384
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %39, i32 0, i32 54, !dbg !18385
  %40 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !18385
  %arraydecay43 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18386
  call void @ED_area_headerprint(%struct.ScrArea* %40, i8* %arraydecay43), !dbg !18387
  ret void, !dbg !18388
}

; Function Attrs: noinline nounwind uwtable
define internal void @headerBoneSize(%struct.TransInfo* %t, float* %vec, i8* %str) #0 !dbg !18389 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %vec.addr = alloca float*, align 8
  %str.addr = alloca i8*, align 8
  %tvec = alloca [192 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !18390, metadata !DIExpression()), !dbg !18391
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !18392, metadata !DIExpression()), !dbg !18393
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !18394, metadata !DIExpression()), !dbg !18395
  call void @llvm.dbg.declare(metadata [192 x i8]* %tvec, metadata !18396, metadata !DIExpression()), !dbg !18397
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18398
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 15, !dbg !18400
  %call = call zeroext i8 @hasNumInput(%struct.NumInput* %num), !dbg !18401
  %tobool = icmp ne i8 %call, 0, !dbg !18401
  br i1 %tobool, label %if.then, label %if.else, !dbg !18402

if.then:                                          ; preds = %entry
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18403
  %num1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 15, !dbg !18405
  %arraydecay = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !18406
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18407
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 56, !dbg !18408
  %3 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !18408
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 38, !dbg !18409
  call void @outputNumInput(%struct.NumInput* %num1, i8* %arraydecay, %struct.UnitSettings* %unit), !dbg !18410
  br label %if.end, !dbg !18411

if.else:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !18412
  %4 = load float*, float** %vec.addr, align 8, !dbg !18414
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !18414
  %5 = load float, float* %arrayidx2, align 4, !dbg !18414
  %conv = fpext float %5 to double, !dbg !18414
  %call3 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arrayidx, i64 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), double %conv), !dbg !18415
  %arrayidx4 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 64, !dbg !18416
  %6 = load float*, float** %vec.addr, align 8, !dbg !18417
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 1, !dbg !18417
  %7 = load float, float* %arrayidx5, align 4, !dbg !18417
  %conv6 = fpext float %7 to double, !dbg !18417
  %call7 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arrayidx4, i64 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), double %conv6), !dbg !18418
  %arrayidx8 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 128, !dbg !18419
  %8 = load float*, float** %vec.addr, align 8, !dbg !18420
  %arrayidx9 = getelementptr inbounds float, float* %8, i64 2, !dbg !18420
  %9 = load float, float* %arrayidx9, align 4, !dbg !18420
  %conv10 = fpext float %9 to double, !dbg !18420
  %call11 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arrayidx8, i64 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), double %conv10), !dbg !18421
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18422
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 13, !dbg !18424
  %mode = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 7, !dbg !18425
  %11 = load i32, i32* %mode, align 4, !dbg !18425
  %and = and i32 %11, 1, !dbg !18426
  %tobool12 = icmp ne i32 %and, 0, !dbg !18426
  br i1 %tobool12, label %if.then13, label %if.else34, !dbg !18427

if.then13:                                        ; preds = %if.end
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18428
  %num14 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 15, !dbg !18431
  %idx_max = getelementptr inbounds %struct.NumInput, %struct.NumInput* %num14, i32 0, i32 0, !dbg !18432
  %13 = load i16, i16* %idx_max, align 8, !dbg !18432
  %conv15 = sext i16 %13 to i32, !dbg !18428
  %cmp = icmp eq i32 %conv15, 0, !dbg !18433
  br i1 %cmp, label %if.then17, label %if.else23, !dbg !18434

if.then17:                                        ; preds = %if.then13
  %14 = load i8*, i8** %str.addr, align 8, !dbg !18435
  %arrayidx18 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !18436
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18437
  %con19 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 13, !dbg !18438
  %text = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con19, i32 0, i32 1, !dbg !18439
  %arraydecay20 = getelementptr inbounds [50 x i8], [50 x i8]* %text, i64 0, i64 0, !dbg !18437
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18440
  %proptext = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 19, !dbg !18441
  %arraydecay21 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext, i64 0, i64 0, !dbg !18440
  %call22 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %14, i64 256, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.125, i64 0, i64 0), i8* %arrayidx18, i8* %arraydecay20, i8* %arraydecay21), !dbg !18442
  br label %if.end33, !dbg !18442

if.else23:                                        ; preds = %if.then13
  %17 = load i8*, i8** %str.addr, align 8, !dbg !18443
  %arrayidx24 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !18444
  %arrayidx25 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 64, !dbg !18445
  %arrayidx26 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 128, !dbg !18446
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18447
  %con27 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 13, !dbg !18448
  %text28 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con27, i32 0, i32 1, !dbg !18449
  %arraydecay29 = getelementptr inbounds [50 x i8], [50 x i8]* %text28, i64 0, i64 0, !dbg !18447
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18450
  %proptext30 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 19, !dbg !18451
  %arraydecay31 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext30, i64 0, i64 0, !dbg !18450
  %call32 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %17, i64 256, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.126, i64 0, i64 0), i8* %arrayidx24, i8* %arrayidx25, i8* %arrayidx26, i8* %arraydecay29, i8* %arraydecay31), !dbg !18452
  br label %if.end33

if.end33:                                         ; preds = %if.else23, %if.then17
  br label %if.end44, !dbg !18453

if.else34:                                        ; preds = %if.end
  %20 = load i8*, i8** %str.addr, align 8, !dbg !18454
  %arrayidx35 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !18456
  %arrayidx36 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 64, !dbg !18457
  %arrayidx37 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 128, !dbg !18458
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18459
  %con38 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 13, !dbg !18460
  %text39 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con38, i32 0, i32 1, !dbg !18461
  %arraydecay40 = getelementptr inbounds [50 x i8], [50 x i8]* %text39, i64 0, i64 0, !dbg !18459
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18462
  %proptext41 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 19, !dbg !18463
  %arraydecay42 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext41, i64 0, i64 0, !dbg !18462
  %call43 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %20, i64 256, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.127, i64 0, i64 0), i8* %arrayidx35, i8* %arrayidx36, i8* %arrayidx37, i8* %arraydecay40, i8* %arraydecay42), !dbg !18464
  br label %if.end44

if.end44:                                         ; preds = %if.else34, %if.end33
  ret void, !dbg !18465
}

; Function Attrs: noinline nounwind uwtable
define internal void @ElementBoneSize(%struct.TransInfo* %t, %struct.TransData* %td, [3 x float]* %mat) #0 !dbg !18466 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %td.addr = alloca %struct.TransData*, align 8
  %mat.addr = alloca [3 x float]*, align 8
  %tmat = alloca [3 x [3 x float]], align 16
  %smat = alloca [3 x [3 x float]], align 16
  %oldy = alloca float, align 4
  %sizemat = alloca [3 x [3 x float]], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !18467, metadata !DIExpression()), !dbg !18468
  store %struct.TransData* %td, %struct.TransData** %td.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransData** %td.addr, metadata !18469, metadata !DIExpression()), !dbg !18470
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !18471, metadata !DIExpression()), !dbg !18472
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %tmat, metadata !18473, metadata !DIExpression()), !dbg !18474
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %smat, metadata !18475, metadata !DIExpression()), !dbg !18476
  call void @llvm.dbg.declare(metadata float* %oldy, metadata !18477, metadata !DIExpression()), !dbg !18478
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %sizemat, metadata !18479, metadata !DIExpression()), !dbg !18480
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !18481
  %0 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !18482
  %1 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !18483
  %mtx = getelementptr inbounds %struct.TransData, %struct.TransData* %1, i32 0, i32 8, !dbg !18484
  %arraydecay1 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mtx, i64 0, i64 0, !dbg !18483
  call void @mul_m3_m3m3([3 x float]* %arraydecay, [3 x float]* %0, [3 x float]* %arraydecay1), !dbg !18485
  %arraydecay2 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !18486
  %2 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !18487
  %smtx = getelementptr inbounds %struct.TransData, %struct.TransData* %2, i32 0, i32 9, !dbg !18488
  %arraydecay3 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smtx, i64 0, i64 0, !dbg !18487
  %arraydecay4 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !18489
  call void @mul_m3_m3m3([3 x float]* %arraydecay2, [3 x float]* %arraydecay3, [3 x float]* %arraydecay4), !dbg !18490
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18491
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 13, !dbg !18493
  %applySize = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 10, !dbg !18494
  %4 = load void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)*, void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)** %applySize, align 8, !dbg !18494
  %tobool = icmp ne void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)* %4, null, !dbg !18491
  br i1 %tobool, label %if.then, label %if.end, !dbg !18495

if.then:                                          ; preds = %entry
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18496
  %con5 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 13, !dbg !18498
  %applySize6 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con5, i32 0, i32 10, !dbg !18499
  %6 = load void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)*, void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)** %applySize6, align 8, !dbg !18499
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18500
  %8 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !18501
  %arraydecay7 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !18502
  call void %6(%struct.TransInfo* %7, %struct.TransData* %8, [3 x float]* %arraydecay7), !dbg !18496
  br label %if.end, !dbg !18503

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !18504
  %iloc = getelementptr inbounds %struct.TransData, %struct.TransData* %9, i32 0, i32 4, !dbg !18505
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %iloc, i64 0, i64 1, !dbg !18504
  %10 = load float, float* %arrayidx, align 4, !dbg !18504
  store float %10, float* %oldy, align 4, !dbg !18506
  %arraydecay8 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %sizemat, i64 0, i64 0, !dbg !18507
  %11 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !18508
  %iloc9 = getelementptr inbounds %struct.TransData, %struct.TransData* %11, i32 0, i32 4, !dbg !18509
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %iloc9, i64 0, i64 0, !dbg !18508
  call void @size_to_mat3([3 x float]* %arraydecay8, float* %arraydecay10), !dbg !18510
  %arraydecay11 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !18511
  %arraydecay12 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !18512
  %arraydecay13 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %sizemat, i64 0, i64 0, !dbg !18513
  call void @mul_m3_m3m3([3 x float]* %arraydecay11, [3 x float]* %arraydecay12, [3 x float]* %arraydecay13), !dbg !18514
  %12 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !18515
  %loc = getelementptr inbounds %struct.TransData, %struct.TransData* %12, i32 0, i32 3, !dbg !18516
  %13 = load float*, float** %loc, align 8, !dbg !18516
  %arraydecay14 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !18517
  call void @mat3_to_size(float* %13, [3 x float]* %arraydecay14), !dbg !18518
  %14 = load float, float* %oldy, align 4, !dbg !18519
  %15 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !18520
  %loc15 = getelementptr inbounds %struct.TransData, %struct.TransData* %15, i32 0, i32 3, !dbg !18521
  %16 = load float*, float** %loc15, align 8, !dbg !18521
  %arrayidx16 = getelementptr inbounds float, float* %16, i64 1, !dbg !18520
  store float %14, float* %arrayidx16, align 4, !dbg !18522
  ret void, !dbg !18523
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyBoneEnvelope(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !18524 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %td = alloca %struct.TransData*, align 8
  %ratio = alloca float, align 4
  %i = alloca i32, align 4
  %str = alloca [256 x i8], align 16
  %c = alloca [64 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !18525, metadata !DIExpression()), !dbg !18526
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !18527, metadata !DIExpression()), !dbg !18528
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !18529, metadata !DIExpression()), !dbg !18530
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18531
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !18532
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !18532
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !18530
  call void @llvm.dbg.declare(metadata float* %ratio, metadata !18533, metadata !DIExpression()), !dbg !18534
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18535, metadata !DIExpression()), !dbg !18536
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !18537, metadata !DIExpression()), !dbg !18538
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18539
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 47, !dbg !18540
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !18539
  %3 = load float, float* %arrayidx, align 4, !dbg !18539
  store float %3, float* %ratio, align 4, !dbg !18541
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18542
  call void @snapGridIncrement(%struct.TransInfo* %4, float* %ratio), !dbg !18543
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18544
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 15, !dbg !18545
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %ratio), !dbg !18546
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18547
  %num1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 15, !dbg !18549
  %call2 = call zeroext i8 @hasNumInput(%struct.NumInput* %num1), !dbg !18550
  %tobool = icmp ne i8 %call2, 0, !dbg !18550
  br i1 %tobool, label %if.then, label %if.else, !dbg !18551

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [64 x i8]* %c, metadata !18552, metadata !DIExpression()), !dbg !18554
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18555
  %num3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 15, !dbg !18556
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !18557
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18558
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 56, !dbg !18559
  %9 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !18559
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 38, !dbg !18560
  call void @outputNumInput(%struct.NumInput* %num3, i8* %arraydecay, %struct.UnitSettings* %unit), !dbg !18561
  %arraydecay4 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18562
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !18563
  %call6 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay4, i64 256, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.128, i64 0, i64 0), i8* %arraydecay5), !dbg !18564
  br label %if.end, !dbg !18565

if.else:                                          ; preds = %entry
  %arraydecay7 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18566
  %10 = load float, float* %ratio, align 4, !dbg !18568
  %conv = fpext float %10 to double, !dbg !18568
  %call8 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay7, i64 256, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.129, i64 0, i64 0), double %conv), !dbg !18569
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %i, align 4, !dbg !18570
  br label %for.cond, !dbg !18572

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !18573
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18575
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 9, !dbg !18576
  %13 = load i32, i32* %total, align 8, !dbg !18576
  %cmp = icmp slt i32 %11, %13, !dbg !18577
  br i1 %cmp, label %for.body, label %for.end, !dbg !18578

for.body:                                         ; preds = %for.cond
  %14 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18579
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %14, i32 0, i32 16, !dbg !18582
  %15 = load i32, i32* %flag, align 8, !dbg !18582
  %and = and i32 %15, 4, !dbg !18583
  %tobool10 = icmp ne i32 %and, 0, !dbg !18583
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !18584

if.then11:                                        ; preds = %for.body
  br label %for.end, !dbg !18585

if.end12:                                         ; preds = %for.body
  %16 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18586
  %flag13 = getelementptr inbounds %struct.TransData, %struct.TransData* %16, i32 0, i32 16, !dbg !18588
  %17 = load i32, i32* %flag13, align 8, !dbg !18588
  %and14 = and i32 %17, 2048, !dbg !18589
  %tobool15 = icmp ne i32 %and14, 0, !dbg !18589
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !18590

if.then16:                                        ; preds = %if.end12
  br label %for.inc, !dbg !18591

if.end17:                                         ; preds = %if.end12
  %18 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18592
  %val = getelementptr inbounds %struct.TransData, %struct.TransData* %18, i32 0, i32 5, !dbg !18594
  %19 = load float*, float** %val, align 8, !dbg !18594
  %tobool18 = icmp ne float* %19, null, !dbg !18592
  br i1 %tobool18, label %if.then19, label %if.end27, !dbg !18595

if.then19:                                        ; preds = %if.end17
  %20 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18596
  %ival = getelementptr inbounds %struct.TransData, %struct.TransData* %20, i32 0, i32 6, !dbg !18599
  %21 = load float, float* %ival, align 8, !dbg !18599
  %tobool20 = fcmp une float %21, 0.000000e+00, !dbg !18596
  br i1 %tobool20, label %if.then21, label %if.else24, !dbg !18600

if.then21:                                        ; preds = %if.then19
  %22 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18601
  %ival22 = getelementptr inbounds %struct.TransData, %struct.TransData* %22, i32 0, i32 6, !dbg !18602
  %23 = load float, float* %ival22, align 8, !dbg !18602
  %24 = load float, float* %ratio, align 4, !dbg !18603
  %mul = fmul float %23, %24, !dbg !18604
  %25 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18605
  %val23 = getelementptr inbounds %struct.TransData, %struct.TransData* %25, i32 0, i32 5, !dbg !18606
  %26 = load float*, float** %val23, align 8, !dbg !18606
  store float %mul, float* %26, align 4, !dbg !18607
  br label %if.end26, !dbg !18608

if.else24:                                        ; preds = %if.then19
  %27 = load float, float* %ratio, align 4, !dbg !18609
  %28 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18610
  %val25 = getelementptr inbounds %struct.TransData, %struct.TransData* %28, i32 0, i32 5, !dbg !18611
  %29 = load float*, float** %val25, align 8, !dbg !18611
  store float %27, float* %29, align 4, !dbg !18612
  br label %if.end26

if.end26:                                         ; preds = %if.else24, %if.then21
  br label %if.end27, !dbg !18613

if.end27:                                         ; preds = %if.end26, %if.end17
  br label %for.inc, !dbg !18614

for.inc:                                          ; preds = %if.end27, %if.then16
  %30 = load i32, i32* %i, align 4, !dbg !18615
  %inc = add nsw i32 %30, 1, !dbg !18615
  store i32 %inc, i32* %i, align 4, !dbg !18615
  %31 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !18616
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %31, i32 1, !dbg !18616
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !18616
  br label %for.cond, !dbg !18617, !llvm.loop !18618

for.end:                                          ; preds = %if.then11, %for.cond
  %32 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18620
  call void @recalcData(%struct.TransInfo* %32), !dbg !18621
  %33 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18622
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %33, i32 0, i32 54, !dbg !18623
  %34 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !18623
  %arraydecay28 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18624
  call void @ED_area_headerprint(%struct.ScrArea* %34, i8* %arraydecay28), !dbg !18625
  ret void, !dbg !18626
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_iter_init(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !18627 {
entry:
  %retval = alloca i8, align 1
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !18630, metadata !DIExpression()), !dbg !18631
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !18632, metadata !DIExpression()), !dbg !18633
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !18634, metadata !DIExpression()), !dbg !18635
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !18636, metadata !DIExpression()), !dbg !18637
  %0 = load i8, i8* %itype.addr, align 1, !dbg !18638
  %1 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18639
  %itype1 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %1, i32 0, i32 4, !dbg !18640
  store i8 %0, i8* %itype1, align 4, !dbg !18641
  %2 = load i8, i8* %itype.addr, align 1, !dbg !18642
  %conv = zext i8 %2 to i32, !dbg !18643
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb10
    i32 4, label %sw.bb17
    i32 5, label %sw.bb21
    i32 6, label %sw.bb26
    i32 7, label %sw.bb31
    i32 8, label %sw.bb35
    i32 9, label %sw.bb40
    i32 10, label %sw.bb44
    i32 11, label %sw.bb49
    i32 13, label %sw.bb54
    i32 14, label %sw.bb58
  ], !dbg !18644

sw.bb:                                            ; preds = %entry
  %3 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18645
  %begin = getelementptr inbounds %struct.BMIter, %struct.BMIter* %3, i32 0, i32 1, !dbg !18647
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin, align 8, !dbg !18648
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18649
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %4, i32 0, i32 2, !dbg !18650
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step, align 8, !dbg !18651
  %5 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !18652
  %vpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 9, !dbg !18653
  %6 = load %struct.BLI_mempool*, %struct.BLI_mempool** %vpool, align 8, !dbg !18653
  %7 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18654
  %data2 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %7, i32 0, i32 0, !dbg !18655
  %elem_of_mesh = bitcast %union.anon.0* %data2 to %struct.BMIter__elem_of_mesh*, !dbg !18656
  %pooliter = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh, i32 0, i32 0, !dbg !18657
  %pool = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter, i32 0, i32 0, !dbg !18658
  store %struct.BLI_mempool* %6, %struct.BLI_mempool** %pool, align 8, !dbg !18659
  br label %sw.epilog, !dbg !18660

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18661
  %begin4 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %8, i32 0, i32 1, !dbg !18662
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin4, align 8, !dbg !18663
  %9 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18664
  %step5 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %9, i32 0, i32 2, !dbg !18665
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step5, align 8, !dbg !18666
  %10 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !18667
  %epool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 10, !dbg !18668
  %11 = load %struct.BLI_mempool*, %struct.BLI_mempool** %epool, align 8, !dbg !18668
  %12 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18669
  %data6 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %12, i32 0, i32 0, !dbg !18670
  %elem_of_mesh7 = bitcast %union.anon.0* %data6 to %struct.BMIter__elem_of_mesh*, !dbg !18671
  %pooliter8 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh7, i32 0, i32 0, !dbg !18672
  %pool9 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter8, i32 0, i32 0, !dbg !18673
  store %struct.BLI_mempool* %11, %struct.BLI_mempool** %pool9, align 8, !dbg !18674
  br label %sw.epilog, !dbg !18675

sw.bb10:                                          ; preds = %entry
  %13 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18676
  %begin11 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %13, i32 0, i32 1, !dbg !18677
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin11, align 8, !dbg !18678
  %14 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18679
  %step12 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %14, i32 0, i32 2, !dbg !18680
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step12, align 8, !dbg !18681
  %15 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !18682
  %fpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 12, !dbg !18683
  %16 = load %struct.BLI_mempool*, %struct.BLI_mempool** %fpool, align 8, !dbg !18683
  %17 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18684
  %data13 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %17, i32 0, i32 0, !dbg !18685
  %elem_of_mesh14 = bitcast %union.anon.0* %data13 to %struct.BMIter__elem_of_mesh*, !dbg !18686
  %pooliter15 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh14, i32 0, i32 0, !dbg !18687
  %pool16 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter15, i32 0, i32 0, !dbg !18688
  store %struct.BLI_mempool* %16, %struct.BLI_mempool** %pool16, align 8, !dbg !18689
  br label %sw.epilog, !dbg !18690

sw.bb17:                                          ; preds = %entry
  %18 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18691
  %begin18 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %18, i32 0, i32 1, !dbg !18692
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_begin to void (i8*)*), void (i8*)** %begin18, align 8, !dbg !18693
  %19 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18694
  %step19 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %19, i32 0, i32 2, !dbg !18695
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_step to i8* (i8*)*), i8* (i8*)** %step19, align 8, !dbg !18696
  %20 = load i8*, i8** %data.addr, align 8, !dbg !18697
  %21 = bitcast i8* %20 to %struct.BMVert*, !dbg !18698
  %22 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18699
  %data20 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %22, i32 0, i32 0, !dbg !18700
  %edge_of_vert = bitcast %union.anon.0* %data20 to %struct.BMIter__edge_of_vert*, !dbg !18701
  %vdata = getelementptr inbounds %struct.BMIter__edge_of_vert, %struct.BMIter__edge_of_vert* %edge_of_vert, i32 0, i32 0, !dbg !18702
  store %struct.BMVert* %21, %struct.BMVert** %vdata, align 8, !dbg !18703
  br label %sw.epilog, !dbg !18704

sw.bb21:                                          ; preds = %entry
  %23 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18705
  %begin22 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %23, i32 0, i32 1, !dbg !18706
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_begin to void (i8*)*), void (i8*)** %begin22, align 8, !dbg !18707
  %24 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18708
  %step23 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %24, i32 0, i32 2, !dbg !18709
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_step to i8* (i8*)*), i8* (i8*)** %step23, align 8, !dbg !18710
  %25 = load i8*, i8** %data.addr, align 8, !dbg !18711
  %26 = bitcast i8* %25 to %struct.BMVert*, !dbg !18712
  %27 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18713
  %data24 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %27, i32 0, i32 0, !dbg !18714
  %face_of_vert = bitcast %union.anon.0* %data24 to %struct.BMIter__face_of_vert*, !dbg !18715
  %vdata25 = getelementptr inbounds %struct.BMIter__face_of_vert, %struct.BMIter__face_of_vert* %face_of_vert, i32 0, i32 0, !dbg !18716
  store %struct.BMVert* %26, %struct.BMVert** %vdata25, align 8, !dbg !18717
  br label %sw.epilog, !dbg !18718

sw.bb26:                                          ; preds = %entry
  %28 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18719
  %begin27 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %28, i32 0, i32 1, !dbg !18720
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_begin to void (i8*)*), void (i8*)** %begin27, align 8, !dbg !18721
  %29 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18722
  %step28 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %29, i32 0, i32 2, !dbg !18723
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_step to i8* (i8*)*), i8* (i8*)** %step28, align 8, !dbg !18724
  %30 = load i8*, i8** %data.addr, align 8, !dbg !18725
  %31 = bitcast i8* %30 to %struct.BMVert*, !dbg !18726
  %32 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18727
  %data29 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %32, i32 0, i32 0, !dbg !18728
  %loop_of_vert = bitcast %union.anon.0* %data29 to %struct.BMIter__loop_of_vert*, !dbg !18729
  %vdata30 = getelementptr inbounds %struct.BMIter__loop_of_vert, %struct.BMIter__loop_of_vert* %loop_of_vert, i32 0, i32 0, !dbg !18730
  store %struct.BMVert* %31, %struct.BMVert** %vdata30, align 8, !dbg !18731
  br label %sw.epilog, !dbg !18732

sw.bb31:                                          ; preds = %entry
  %33 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18733
  %begin32 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %33, i32 0, i32 1, !dbg !18734
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_begin to void (i8*)*), void (i8*)** %begin32, align 8, !dbg !18735
  %34 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18736
  %step33 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %34, i32 0, i32 2, !dbg !18737
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_step to i8* (i8*)*), i8* (i8*)** %step33, align 8, !dbg !18738
  %35 = load i8*, i8** %data.addr, align 8, !dbg !18739
  %36 = bitcast i8* %35 to %struct.BMEdge*, !dbg !18740
  %37 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18741
  %data34 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %37, i32 0, i32 0, !dbg !18742
  %vert_of_edge = bitcast %union.anon.0* %data34 to %struct.BMIter__vert_of_edge*, !dbg !18743
  %edata = getelementptr inbounds %struct.BMIter__vert_of_edge, %struct.BMIter__vert_of_edge* %vert_of_edge, i32 0, i32 0, !dbg !18744
  store %struct.BMEdge* %36, %struct.BMEdge** %edata, align 8, !dbg !18745
  br label %sw.epilog, !dbg !18746

sw.bb35:                                          ; preds = %entry
  %38 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18747
  %begin36 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %38, i32 0, i32 1, !dbg !18748
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_begin to void (i8*)*), void (i8*)** %begin36, align 8, !dbg !18749
  %39 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18750
  %step37 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %39, i32 0, i32 2, !dbg !18751
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_step to i8* (i8*)*), i8* (i8*)** %step37, align 8, !dbg !18752
  %40 = load i8*, i8** %data.addr, align 8, !dbg !18753
  %41 = bitcast i8* %40 to %struct.BMEdge*, !dbg !18754
  %42 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18755
  %data38 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %42, i32 0, i32 0, !dbg !18756
  %face_of_edge = bitcast %union.anon.0* %data38 to %struct.BMIter__face_of_edge*, !dbg !18757
  %edata39 = getelementptr inbounds %struct.BMIter__face_of_edge, %struct.BMIter__face_of_edge* %face_of_edge, i32 0, i32 0, !dbg !18758
  store %struct.BMEdge* %41, %struct.BMEdge** %edata39, align 8, !dbg !18759
  br label %sw.epilog, !dbg !18760

sw.bb40:                                          ; preds = %entry
  %43 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18761
  %begin41 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %43, i32 0, i32 1, !dbg !18762
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_begin to void (i8*)*), void (i8*)** %begin41, align 8, !dbg !18763
  %44 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18764
  %step42 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %44, i32 0, i32 2, !dbg !18765
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_step to i8* (i8*)*), i8* (i8*)** %step42, align 8, !dbg !18766
  %45 = load i8*, i8** %data.addr, align 8, !dbg !18767
  %46 = bitcast i8* %45 to %struct.BMFace*, !dbg !18768
  %47 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18769
  %data43 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %47, i32 0, i32 0, !dbg !18770
  %vert_of_face = bitcast %union.anon.0* %data43 to %struct.BMIter__vert_of_face*, !dbg !18771
  %pdata = getelementptr inbounds %struct.BMIter__vert_of_face, %struct.BMIter__vert_of_face* %vert_of_face, i32 0, i32 0, !dbg !18772
  store %struct.BMFace* %46, %struct.BMFace** %pdata, align 8, !dbg !18773
  br label %sw.epilog, !dbg !18774

sw.bb44:                                          ; preds = %entry
  %48 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18775
  %begin45 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %48, i32 0, i32 1, !dbg !18776
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_begin to void (i8*)*), void (i8*)** %begin45, align 8, !dbg !18777
  %49 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18778
  %step46 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %49, i32 0, i32 2, !dbg !18779
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_step to i8* (i8*)*), i8* (i8*)** %step46, align 8, !dbg !18780
  %50 = load i8*, i8** %data.addr, align 8, !dbg !18781
  %51 = bitcast i8* %50 to %struct.BMFace*, !dbg !18782
  %52 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18783
  %data47 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %52, i32 0, i32 0, !dbg !18784
  %edge_of_face = bitcast %union.anon.0* %data47 to %struct.BMIter__edge_of_face*, !dbg !18785
  %pdata48 = getelementptr inbounds %struct.BMIter__edge_of_face, %struct.BMIter__edge_of_face* %edge_of_face, i32 0, i32 0, !dbg !18786
  store %struct.BMFace* %51, %struct.BMFace** %pdata48, align 8, !dbg !18787
  br label %sw.epilog, !dbg !18788

sw.bb49:                                          ; preds = %entry
  %53 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18789
  %begin50 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %53, i32 0, i32 1, !dbg !18790
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_begin to void (i8*)*), void (i8*)** %begin50, align 8, !dbg !18791
  %54 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18792
  %step51 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %54, i32 0, i32 2, !dbg !18793
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_step to i8* (i8*)*), i8* (i8*)** %step51, align 8, !dbg !18794
  %55 = load i8*, i8** %data.addr, align 8, !dbg !18795
  %56 = bitcast i8* %55 to %struct.BMFace*, !dbg !18796
  %57 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18797
  %data52 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %57, i32 0, i32 0, !dbg !18798
  %loop_of_face = bitcast %union.anon.0* %data52 to %struct.BMIter__loop_of_face*, !dbg !18799
  %pdata53 = getelementptr inbounds %struct.BMIter__loop_of_face, %struct.BMIter__loop_of_face* %loop_of_face, i32 0, i32 0, !dbg !18800
  store %struct.BMFace* %56, %struct.BMFace** %pdata53, align 8, !dbg !18801
  br label %sw.epilog, !dbg !18802

sw.bb54:                                          ; preds = %entry
  %58 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18803
  %begin55 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %58, i32 0, i32 1, !dbg !18804
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_begin to void (i8*)*), void (i8*)** %begin55, align 8, !dbg !18805
  %59 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18806
  %step56 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %59, i32 0, i32 2, !dbg !18807
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_step to i8* (i8*)*), i8* (i8*)** %step56, align 8, !dbg !18808
  %60 = load i8*, i8** %data.addr, align 8, !dbg !18809
  %61 = bitcast i8* %60 to %struct.BMLoop*, !dbg !18810
  %62 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18811
  %data57 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %62, i32 0, i32 0, !dbg !18812
  %loop_of_loop = bitcast %union.anon.0* %data57 to %struct.BMIter__loop_of_loop*, !dbg !18813
  %ldata = getelementptr inbounds %struct.BMIter__loop_of_loop, %struct.BMIter__loop_of_loop* %loop_of_loop, i32 0, i32 0, !dbg !18814
  store %struct.BMLoop* %61, %struct.BMLoop** %ldata, align 8, !dbg !18815
  br label %sw.epilog, !dbg !18816

sw.bb58:                                          ; preds = %entry
  %63 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18817
  %begin59 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %63, i32 0, i32 1, !dbg !18818
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_begin to void (i8*)*), void (i8*)** %begin59, align 8, !dbg !18819
  %64 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18820
  %step60 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %64, i32 0, i32 2, !dbg !18821
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_step to i8* (i8*)*), i8* (i8*)** %step60, align 8, !dbg !18822
  %65 = load i8*, i8** %data.addr, align 8, !dbg !18823
  %66 = bitcast i8* %65 to %struct.BMEdge*, !dbg !18824
  %67 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18825
  %data61 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %67, i32 0, i32 0, !dbg !18826
  %loop_of_edge = bitcast %union.anon.0* %data61 to %struct.BMIter__loop_of_edge*, !dbg !18827
  %edata62 = getelementptr inbounds %struct.BMIter__loop_of_edge, %struct.BMIter__loop_of_edge* %loop_of_edge, i32 0, i32 0, !dbg !18828
  store %struct.BMEdge* %66, %struct.BMEdge** %edata62, align 8, !dbg !18829
  br label %sw.epilog, !dbg !18830

sw.default:                                       ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !18831
  br label %return, !dbg !18831

sw.epilog:                                        ; preds = %sw.bb58, %sw.bb54, %sw.bb49, %sw.bb44, %sw.bb40, %sw.bb35, %sw.bb31, %sw.bb26, %sw.bb21, %sw.bb17, %sw.bb10, %sw.bb3, %sw.bb
  %68 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18832
  %begin63 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %68, i32 0, i32 1, !dbg !18833
  %69 = load void (i8*)*, void (i8*)** %begin63, align 8, !dbg !18833
  %70 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18834
  %71 = bitcast %struct.BMIter* %70 to i8*, !dbg !18834
  call void %69(i8* %71), !dbg !18832
  store i8 1, i8* %retval, align 1, !dbg !18835
  br label %return, !dbg !18835

return:                                           ; preds = %sw.epilog, %sw.default
  %72 = load i8, i8* %retval, align 1, !dbg !18836
  ret i8 %72, !dbg !18836
}

declare dso_local void @bmiter__elem_of_mesh_begin(%struct.BMIter__elem_of_mesh*) #2

declare dso_local i8* @bmiter__elem_of_mesh_step(%struct.BMIter__elem_of_mesh*) #2

declare dso_local void @bmiter__edge_of_vert_begin(%struct.BMIter__edge_of_vert*) #2

declare dso_local i8* @bmiter__edge_of_vert_step(%struct.BMIter__edge_of_vert*) #2

declare dso_local void @bmiter__face_of_vert_begin(%struct.BMIter__face_of_vert*) #2

declare dso_local i8* @bmiter__face_of_vert_step(%struct.BMIter__face_of_vert*) #2

declare dso_local void @bmiter__loop_of_vert_begin(%struct.BMIter__loop_of_vert*) #2

declare dso_local i8* @bmiter__loop_of_vert_step(%struct.BMIter__loop_of_vert*) #2

declare dso_local void @bmiter__vert_of_edge_begin(%struct.BMIter__vert_of_edge*) #2

declare dso_local i8* @bmiter__vert_of_edge_step(%struct.BMIter__vert_of_edge*) #2

declare dso_local void @bmiter__face_of_edge_begin(%struct.BMIter__face_of_edge*) #2

declare dso_local i8* @bmiter__face_of_edge_step(%struct.BMIter__face_of_edge*) #2

declare dso_local void @bmiter__vert_of_face_begin(%struct.BMIter__vert_of_face*) #2

declare dso_local i8* @bmiter__vert_of_face_step(%struct.BMIter__vert_of_face*) #2

declare dso_local void @bmiter__edge_of_face_begin(%struct.BMIter__edge_of_face*) #2

declare dso_local i8* @bmiter__edge_of_face_step(%struct.BMIter__edge_of_face*) #2

declare dso_local void @bmiter__loop_of_face_begin(%struct.BMIter__loop_of_face*) #2

declare dso_local i8* @bmiter__loop_of_face_step(%struct.BMIter__loop_of_face*) #2

declare dso_local void @bmiter__loop_of_loop_begin(%struct.BMIter__loop_of_loop*) #2

declare dso_local i8* @bmiter__loop_of_loop_step(%struct.BMIter__loop_of_loop*) #2

declare dso_local void @bmiter__loop_of_edge_begin(%struct.BMIter__loop_of_edge*) #2

declare dso_local i8* @bmiter__loop_of_edge_step(%struct.BMIter__loop_of_edge*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @applyEdgeSlide(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !18837 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %str = alloca [256 x i8], align 16
  %final = alloca float, align 4
  %sld = alloca %struct.EdgeSlideData*, align 8
  %flipped = alloca i8, align 1
  %is_proportional = alloca i8, align 1
  %c = alloca [64 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !18838, metadata !DIExpression()), !dbg !18839
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !18840, metadata !DIExpression()), !dbg !18841
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !18842, metadata !DIExpression()), !dbg !18843
  call void @llvm.dbg.declare(metadata float* %final, metadata !18844, metadata !DIExpression()), !dbg !18845
  call void @llvm.dbg.declare(metadata %struct.EdgeSlideData** %sld, metadata !18846, metadata !DIExpression()), !dbg !18847
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18848
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 40, !dbg !18849
  %1 = load i8*, i8** %customData, align 8, !dbg !18849
  %2 = bitcast i8* %1 to %struct.EdgeSlideData*, !dbg !18848
  store %struct.EdgeSlideData* %2, %struct.EdgeSlideData** %sld, align 8, !dbg !18847
  call void @llvm.dbg.declare(metadata i8* %flipped, metadata !18850, metadata !DIExpression()), !dbg !18851
  %3 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !18852
  %flipped_vtx = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %3, i32 0, i32 10, !dbg !18853
  %4 = load i8, i8* %flipped_vtx, align 1, !dbg !18853
  store i8 %4, i8* %flipped, align 1, !dbg !18851
  call void @llvm.dbg.declare(metadata i8* %is_proportional, metadata !18854, metadata !DIExpression()), !dbg !18855
  %5 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !18856
  %is_proportional1 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %5, i32 0, i32 9, !dbg !18857
  %6 = load i8, i8* %is_proportional1, align 4, !dbg !18857
  store i8 %6, i8* %is_proportional, align 1, !dbg !18855
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18858
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 47, !dbg !18859
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !18858
  %8 = load float, float* %arrayidx, align 4, !dbg !18858
  store float %8, float* %final, align 4, !dbg !18860
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18861
  call void @snapGridIncrement(%struct.TransInfo* %9, float* %final), !dbg !18862
  %10 = load float, float* %final, align 4, !dbg !18863
  %cmp = fcmp olt float %10, -1.000000e+00, !dbg !18863
  br i1 %cmp, label %if.then, label %if.else, !dbg !18866

if.then:                                          ; preds = %entry
  store float -1.000000e+00, float* %final, align 4, !dbg !18863
  br label %if.end4, !dbg !18863

if.else:                                          ; preds = %entry
  %11 = load float, float* %final, align 4, !dbg !18867
  %cmp2 = fcmp ogt float %11, 1.000000e+00, !dbg !18867
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !18863

if.then3:                                         ; preds = %if.else
  store float 1.000000e+00, float* %final, align 4, !dbg !18867
  br label %if.end, !dbg !18867

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18869
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 15, !dbg !18870
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %final), !dbg !18871
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18872
  %num5 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 15, !dbg !18874
  %call6 = call zeroext i8 @hasNumInput(%struct.NumInput* %num5), !dbg !18875
  %tobool = icmp ne i8 %call6, 0, !dbg !18875
  br i1 %tobool, label %if.then7, label %if.else27, !dbg !18876

if.then7:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata [64 x i8]* %c, metadata !18877, metadata !DIExpression()), !dbg !18879
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18880
  %num8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 15, !dbg !18881
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !18882
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18883
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 56, !dbg !18884
  %16 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !18884
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %16, i32 0, i32 38, !dbg !18885
  call void @outputNumInput(%struct.NumInput* %num8, i8* %arraydecay, %struct.UnitSettings* %unit), !dbg !18886
  %17 = load i8, i8* %is_proportional, align 1, !dbg !18887
  %tobool9 = icmp ne i8 %17, 0, !dbg !18887
  br i1 %tobool9, label %if.then10, label %if.else16, !dbg !18889

if.then10:                                        ; preds = %if.then7
  %arraydecay11 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18890
  %arrayidx12 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !18892
  %18 = load i8, i8* %is_proportional, align 1, !dbg !18893
  %tobool13 = icmp ne i8 %18, 0, !dbg !18894
  %lnot = xor i1 %tobool13, true, !dbg !18894
  %lnot.ext = zext i1 %lnot to i32, !dbg !18894
  %conv = trunc i32 %lnot.ext to i8, !dbg !18894
  %call14 = call i8* @WM_bool_as_string(i8 zeroext %conv), !dbg !18895
  %call15 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay11, i64 256, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.130, i64 0, i64 0), i8* %arrayidx12, i8* %call14), !dbg !18896
  br label %if.end26, !dbg !18897

if.else16:                                        ; preds = %if.then7
  %arraydecay17 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18898
  %arrayidx18 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !18900
  %19 = load i8, i8* %is_proportional, align 1, !dbg !18901
  %tobool19 = icmp ne i8 %19, 0, !dbg !18902
  %lnot20 = xor i1 %tobool19, true, !dbg !18902
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !18902
  %conv22 = trunc i32 %lnot.ext21 to i8, !dbg !18902
  %call23 = call i8* @WM_bool_as_string(i8 zeroext %conv22), !dbg !18903
  %20 = load i8, i8* %flipped, align 1, !dbg !18904
  %call24 = call i8* @WM_bool_as_string(i8 zeroext %20), !dbg !18905
  %call25 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay17, i64 256, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.131, i64 0, i64 0), i8* %arrayidx18, i8* %call23, i8* %call24), !dbg !18906
  br label %if.end26

if.end26:                                         ; preds = %if.else16, %if.then10
  br label %if.end49, !dbg !18907

if.else27:                                        ; preds = %if.end4
  %21 = load i8, i8* %is_proportional, align 1, !dbg !18908
  %tobool28 = icmp ne i8 %21, 0, !dbg !18908
  br i1 %tobool28, label %if.then29, label %if.else38, !dbg !18910

if.then29:                                        ; preds = %if.else27
  %arraydecay30 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18911
  %22 = load float, float* %final, align 4, !dbg !18913
  %conv31 = fpext float %22 to double, !dbg !18913
  %23 = load i8, i8* %is_proportional, align 1, !dbg !18914
  %tobool32 = icmp ne i8 %23, 0, !dbg !18915
  %lnot33 = xor i1 %tobool32, true, !dbg !18915
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !18915
  %conv35 = trunc i32 %lnot.ext34 to i8, !dbg !18915
  %call36 = call i8* @WM_bool_as_string(i8 zeroext %conv35), !dbg !18916
  %call37 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay30, i64 256, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.132, i64 0, i64 0), double %conv31, i8* %call36), !dbg !18917
  br label %if.end48, !dbg !18918

if.else38:                                        ; preds = %if.else27
  %arraydecay39 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18919
  %24 = load float, float* %final, align 4, !dbg !18921
  %conv40 = fpext float %24 to double, !dbg !18921
  %25 = load i8, i8* %is_proportional, align 1, !dbg !18922
  %tobool41 = icmp ne i8 %25, 0, !dbg !18923
  %lnot42 = xor i1 %tobool41, true, !dbg !18923
  %lnot.ext43 = zext i1 %lnot42 to i32, !dbg !18923
  %conv44 = trunc i32 %lnot.ext43 to i8, !dbg !18923
  %call45 = call i8* @WM_bool_as_string(i8 zeroext %conv44), !dbg !18924
  %26 = load i8, i8* %flipped, align 1, !dbg !18925
  %call46 = call i8* @WM_bool_as_string(i8 zeroext %26), !dbg !18926
  %call47 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay39, i64 256, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.133, i64 0, i64 0), double %conv40, i8* %call45, i8* %call46), !dbg !18927
  br label %if.end48

if.end48:                                         ; preds = %if.else38, %if.then29
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.end26
  %27 = load float, float* %final, align 4, !dbg !18928
  %cmp50 = fcmp olt float %27, -1.000000e+00, !dbg !18928
  br i1 %cmp50, label %if.then52, label %if.else53, !dbg !18931

if.then52:                                        ; preds = %if.end49
  store float -1.000000e+00, float* %final, align 4, !dbg !18928
  br label %if.end58, !dbg !18928

if.else53:                                        ; preds = %if.end49
  %28 = load float, float* %final, align 4, !dbg !18932
  %cmp54 = fcmp ogt float %28, 1.000000e+00, !dbg !18932
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !18928

if.then56:                                        ; preds = %if.else53
  store float 1.000000e+00, float* %final, align 4, !dbg !18932
  br label %if.end57, !dbg !18932

if.end57:                                         ; preds = %if.then56, %if.else53
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then52
  %29 = load float, float* %final, align 4, !dbg !18934
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18935
  %values59 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %30, i32 0, i32 47, !dbg !18936
  %arrayidx60 = getelementptr inbounds [4 x float], [4 x float]* %values59, i64 0, i64 0, !dbg !18935
  store float %29, float* %arrayidx60, align 4, !dbg !18937
  %31 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18938
  %32 = load float, float* %final, align 4, !dbg !18939
  %call61 = call i32 @doEdgeSlide(%struct.TransInfo* %31, float %32), !dbg !18940
  %33 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18941
  call void @recalcData(%struct.TransInfo* %33), !dbg !18942
  %34 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18943
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %34, i32 0, i32 54, !dbg !18944
  %35 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !18944
  %arraydecay62 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !18945
  call void @ED_area_headerprint(%struct.ScrArea* %35, i8* %arraydecay62), !dbg !18946
  ret void, !dbg !18947
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @handleEventEdgeSlide(%struct.TransInfo* %t, %struct.wmEvent* %event) #0 !dbg !18948 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %struct.TransInfo*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %sld = alloca %struct.EdgeSlideData*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !18949, metadata !DIExpression()), !dbg !18950
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !18951, metadata !DIExpression()), !dbg !18952
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18953
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !18955
  %1 = load i32, i32* %mode, align 8, !dbg !18955
  %cmp = icmp eq i32 %1, 28, !dbg !18956
  br i1 %cmp, label %if.then, label %if.end41, !dbg !18957

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.EdgeSlideData** %sld, metadata !18958, metadata !DIExpression()), !dbg !18960
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !18961
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 40, !dbg !18962
  %3 = load i8*, i8** %customData, align 8, !dbg !18962
  %4 = bitcast i8* %3 to %struct.EdgeSlideData*, !dbg !18961
  store %struct.EdgeSlideData* %4, %struct.EdgeSlideData** %sld, align 8, !dbg !18960
  %5 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !18963
  %tobool = icmp ne %struct.EdgeSlideData* %5, null, !dbg !18963
  br i1 %tobool, label %if.then1, label %if.end40, !dbg !18965

if.then1:                                         ; preds = %if.then
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !18966
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 2, !dbg !18968
  %7 = load i16, i16* %type, align 8, !dbg !18968
  %conv = sext i16 %7 to i32, !dbg !18966
  switch i32 %conv, label %sw.default [
    i32 101, label %sw.bb
    i32 102, label %sw.bb9
    i32 20514, label %sw.bb27
  ], !dbg !18969

sw.bb:                                            ; preds = %if.then1
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !18970
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 3, !dbg !18973
  %9 = load i16, i16* %val, align 2, !dbg !18973
  %conv2 = sext i16 %9 to i32, !dbg !18970
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !18974
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !18975

if.then5:                                         ; preds = %sw.bb
  %10 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !18976
  %is_proportional = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %10, i32 0, i32 9, !dbg !18978
  %11 = load i8, i8* %is_proportional, align 4, !dbg !18978
  %tobool6 = icmp ne i8 %11, 0, !dbg !18979
  %lnot = xor i1 %tobool6, true, !dbg !18979
  %lnot.ext = zext i1 %lnot to i32, !dbg !18979
  %conv7 = trunc i32 %lnot.ext to i8, !dbg !18979
  %12 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !18980
  %is_proportional8 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %12, i32 0, i32 9, !dbg !18981
  store i8 %conv7, i8* %is_proportional8, align 4, !dbg !18982
  store i32 1, i32* %retval, align 4, !dbg !18983
  br label %return, !dbg !18983

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog39, !dbg !18984

sw.bb9:                                           ; preds = %if.then1
  %13 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !18985
  %val10 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %13, i32 0, i32 3, !dbg !18988
  %14 = load i16, i16* %val10, align 2, !dbg !18988
  %conv11 = sext i16 %14 to i32, !dbg !18985
  %cmp12 = icmp eq i32 %conv11, 1, !dbg !18989
  br i1 %cmp12, label %if.then14, label %if.end26, !dbg !18990

if.then14:                                        ; preds = %sw.bb9
  %15 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !18991
  %is_proportional15 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %15, i32 0, i32 9, !dbg !18994
  %16 = load i8, i8* %is_proportional15, align 4, !dbg !18994
  %conv16 = zext i8 %16 to i32, !dbg !18991
  %cmp17 = icmp eq i32 %conv16, 0, !dbg !18995
  br i1 %cmp17, label %if.then19, label %if.end25, !dbg !18996

if.then19:                                        ; preds = %if.then14
  %17 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !18997
  %flipped_vtx = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %17, i32 0, i32 10, !dbg !18999
  %18 = load i8, i8* %flipped_vtx, align 1, !dbg !18999
  %tobool20 = icmp ne i8 %18, 0, !dbg !19000
  %lnot21 = xor i1 %tobool20, true, !dbg !19000
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !19000
  %conv23 = trunc i32 %lnot.ext22 to i8, !dbg !19000
  %19 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !19001
  %flipped_vtx24 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %19, i32 0, i32 10, !dbg !19002
  store i8 %conv23, i8* %flipped_vtx24, align 1, !dbg !19003
  br label %if.end25, !dbg !19004

if.end25:                                         ; preds = %if.then19, %if.then14
  store i32 1, i32* %retval, align 4, !dbg !19005
  br label %return, !dbg !19005

if.end26:                                         ; preds = %sw.bb9
  br label %sw.epilog39, !dbg !19006

sw.bb27:                                          ; preds = %if.then1
  %20 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !19007
  %val28 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %20, i32 0, i32 3, !dbg !19009
  %21 = load i16, i16* %val28, align 2, !dbg !19009
  %conv29 = sext i16 %21 to i32, !dbg !19007
  switch i32 %conv29, label %sw.epilog [
    i32 25, label %sw.bb30
    i32 24, label %sw.bb33
  ], !dbg !19010

sw.bb30:                                          ; preds = %sw.bb27
  %22 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !19011
  %curr_sv_index = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %22, i32 0, i32 11, !dbg !19014
  %23 = load i32, i32* %curr_sv_index, align 8, !dbg !19014
  %sub = sub nsw i32 %23, 1, !dbg !19015
  %24 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !19016
  %totsv = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %24, i32 0, i32 1, !dbg !19017
  %25 = load i32, i32* %totsv, align 8, !dbg !19017
  %add = add nsw i32 %sub, %25, !dbg !19018
  %26 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !19019
  %totsv31 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %26, i32 0, i32 1, !dbg !19020
  %27 = load i32, i32* %totsv31, align 8, !dbg !19020
  %rem = srem i32 %add, %27, !dbg !19021
  %28 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !19022
  %curr_sv_index32 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %28, i32 0, i32 11, !dbg !19023
  store i32 %rem, i32* %curr_sv_index32, align 8, !dbg !19024
  br label %sw.epilog, !dbg !19025

sw.bb33:                                          ; preds = %sw.bb27
  %29 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !19026
  %curr_sv_index34 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %29, i32 0, i32 11, !dbg !19028
  %30 = load i32, i32* %curr_sv_index34, align 8, !dbg !19028
  %add35 = add nsw i32 %30, 1, !dbg !19029
  %31 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !19030
  %totsv36 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %31, i32 0, i32 1, !dbg !19031
  %32 = load i32, i32* %totsv36, align 8, !dbg !19031
  %rem37 = srem i32 %add35, %32, !dbg !19032
  %33 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !19033
  %curr_sv_index38 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %33, i32 0, i32 11, !dbg !19034
  store i32 %rem37, i32* %curr_sv_index38, align 8, !dbg !19035
  br label %sw.epilog, !dbg !19036

sw.epilog:                                        ; preds = %sw.bb27, %sw.bb33, %sw.bb30
  br label %sw.epilog39, !dbg !19037

sw.default:                                       ; preds = %if.then1
  br label %sw.epilog39, !dbg !19038

sw.epilog39:                                      ; preds = %sw.default, %sw.epilog, %if.end26, %if.end
  br label %if.end40, !dbg !19039

if.end40:                                         ; preds = %sw.epilog39, %if.then
  br label %if.end41, !dbg !19040

if.end41:                                         ; preds = %if.end40, %entry
  store i32 0, i32* %retval, align 4, !dbg !19041
  br label %return, !dbg !19041

return:                                           ; preds = %if.end41, %if.end25, %if.then5
  %34 = load i32, i32* %retval, align 4, !dbg !19042
  ret i32 %34, !dbg !19042
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @createEdgeSlideVerts(%struct.TransInfo* %t) #0 !dbg !19043 {
entry:
  %retval = alloca i8, align 1
  %t.addr = alloca %struct.TransInfo*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %e = alloca %struct.BMEdge*, align 8
  %v = alloca %struct.BMVert*, align 8
  %sv_array = alloca %struct.TransDataEdgeSlideVert*, align 8
  %sv_tot = alloca i32, align 4
  %btree = alloca %struct.BMBVHTree*, align 8
  %sv_table = alloca i32*, align 8
  %sld = alloca %struct.EdgeSlideData*, align 8
  %v3d = alloca %struct.View3D*, align 8
  %rv3d = alloca %struct.RegionView3D*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %projectMat = alloca [4 x [4 x float]], align 16
  %mval = alloca [2 x float], align 4
  %mval_start = alloca [2 x float], align 4
  %mval_end = alloca [2 x float], align 4
  %mval_dir = alloca [3 x float], align 4
  %maxdist = alloca float, align 4
  %loop_dir = alloca [3 x float]*, align 8
  %loop_maxdist = alloca float*, align 8
  %numsel = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %loop_nr = alloca i32, align 4
  %l_nr = alloca i32, align 4
  %use_btree_disp = alloca i32, align 4
  %iter2 = alloca %struct.BMIter, align 8
  %vec_a = alloca [3 x float], align 4
  %vec_b = alloca [3 x float], align 4
  %l_a = alloca %struct.BMLoop*, align 8
  %l_b = alloca %struct.BMLoop*, align 8
  %l_a_prev = alloca %struct.BMLoop*, align 8
  %l_b_prev = alloca %struct.BMLoop*, align 8
  %v_first = alloca %struct.BMVert*, align 8
  %e_next = alloca %struct.BMEdge*, align 8
  %l_tmp = alloca %struct.BMLoop*, align 8
  %e_next176 = alloca %struct.BMEdge*, align 8
  %l_tmp183 = alloca %struct.BMLoop*, align 8
  %l_a_ok_prev = alloca i8, align 1
  %l_b_ok_prev = alloca i8, align 1
  %sv = alloca %struct.TransDataEdgeSlideVert*, align 8
  %v_prev = alloca %struct.BMVert*, align 8
  %e_prev = alloca %struct.BMEdge*, align 8
  %l_tmp226 = alloca %struct.BMLoop*, align 8
  %l_tmp242 = alloca %struct.BMLoop*, align 8
  %l_tmp272 = alloca %struct.BMLoop*, align 8
  %l_tmp304 = alloca %struct.BMLoop*, align 8
  %iter2478 = alloca %struct.BMIter, align 8
  %e2 = alloca %struct.BMEdge*, align 8
  %d = alloca float, align 4
  %sco_a = alloca [3 x float], align 4
  %sco_b = alloca [3 x float], align 4
  %fiter = alloca %struct.BMIter, align 8
  %f = alloca %struct.BMFace*, align 8
  %f_copy = alloca %struct.BMFace*, align 8
  %sw_ap = alloca %struct.BMVert*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !19044, metadata !DIExpression()), !dbg !19045
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !19046, metadata !DIExpression()), !dbg !19047
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !19048
  %obedit = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 63, !dbg !19049
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !19049
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !19050
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !19047
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !19051, metadata !DIExpression()), !dbg !19052
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !19053
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !19054
  %3 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !19054
  store %struct.BMesh* %3, %struct.BMesh** %bm, align 8, !dbg !19052
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !19055, metadata !DIExpression()), !dbg !19056
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !19057, metadata !DIExpression()), !dbg !19058
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !19059, metadata !DIExpression()), !dbg !19060
  call void @llvm.dbg.declare(metadata %struct.TransDataEdgeSlideVert** %sv_array, metadata !19061, metadata !DIExpression()), !dbg !19062
  call void @llvm.dbg.declare(metadata i32* %sv_tot, metadata !19063, metadata !DIExpression()), !dbg !19064
  call void @llvm.dbg.declare(metadata %struct.BMBVHTree** %btree, metadata !19065, metadata !DIExpression()), !dbg !19069
  call void @llvm.dbg.declare(metadata i32** %sv_table, metadata !19070, metadata !DIExpression()), !dbg !19071
  call void @llvm.dbg.declare(metadata %struct.EdgeSlideData** %sld, metadata !19072, metadata !DIExpression()), !dbg !19073
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !19074
  %call2 = call i8* %4(i64 80, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i64 0, i64 0)), !dbg !19074
  %5 = bitcast i8* %call2 to %struct.EdgeSlideData*, !dbg !19074
  store %struct.EdgeSlideData* %5, %struct.EdgeSlideData** %sld, align 8, !dbg !19073
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d, metadata !19075, metadata !DIExpression()), !dbg !19076
  store %struct.View3D* null, %struct.View3D** %v3d, align 8, !dbg !19076
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !19077, metadata !DIExpression()), !dbg !19078
  store %struct.RegionView3D* null, %struct.RegionView3D** %rv3d, align 8, !dbg !19078
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !19079, metadata !DIExpression()), !dbg !19080
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !19081
  %ar3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 55, !dbg !19082
  %7 = load %struct.ARegion*, %struct.ARegion** %ar3, align 8, !dbg !19082
  store %struct.ARegion* %7, %struct.ARegion** %ar, align 8, !dbg !19080
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %projectMat, metadata !19083, metadata !DIExpression()), !dbg !19084
  call void @llvm.dbg.declare(metadata [2 x float]* %mval, metadata !19085, metadata !DIExpression()), !dbg !19086
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !19087
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !19088
  %mval4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 61, !dbg !19089
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval4, i64 0, i64 0, !dbg !19088
  %9 = load i32, i32* %arrayidx, align 8, !dbg !19088
  %conv = sitofp i32 %9 to float, !dbg !19090
  store float %conv, float* %arrayinit.begin, align 4, !dbg !19087
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !19087
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !19091
  %mval5 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 61, !dbg !19092
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %mval5, i64 0, i64 1, !dbg !19091
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !19091
  %conv7 = sitofp i32 %11 to float, !dbg !19093
  store float %conv7, float* %arrayinit.element, align 4, !dbg !19087
  call void @llvm.dbg.declare(metadata [2 x float]* %mval_start, metadata !19094, metadata !DIExpression()), !dbg !19095
  call void @llvm.dbg.declare(metadata [2 x float]* %mval_end, metadata !19096, metadata !DIExpression()), !dbg !19097
  call void @llvm.dbg.declare(metadata [3 x float]* %mval_dir, metadata !19098, metadata !DIExpression()), !dbg !19099
  call void @llvm.dbg.declare(metadata float* %maxdist, metadata !19100, metadata !DIExpression()), !dbg !19101
  call void @llvm.dbg.declare(metadata [3 x float]** %loop_dir, metadata !19102, metadata !DIExpression()), !dbg !19103
  call void @llvm.dbg.declare(metadata float** %loop_maxdist, metadata !19104, metadata !DIExpression()), !dbg !19105
  call void @llvm.dbg.declare(metadata i32* %numsel, metadata !19106, metadata !DIExpression()), !dbg !19107
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19108, metadata !DIExpression()), !dbg !19109
  call void @llvm.dbg.declare(metadata i32* %j, metadata !19110, metadata !DIExpression()), !dbg !19111
  call void @llvm.dbg.declare(metadata i32* %loop_nr, metadata !19112, metadata !DIExpression()), !dbg !19113
  call void @llvm.dbg.declare(metadata i32* %l_nr, metadata !19114, metadata !DIExpression()), !dbg !19115
  call void @llvm.dbg.declare(metadata i32* %use_btree_disp, metadata !19116, metadata !DIExpression()), !dbg !19117
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !19118
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 33, !dbg !19120
  %13 = load i8, i8* %spacetype, align 8, !dbg !19120
  %conv8 = zext i8 %13 to i32, !dbg !19118
  %cmp = icmp eq i32 %conv8, 1, !dbg !19121
  br i1 %cmp, label %if.then, label %if.end, !dbg !19122

if.then:                                          ; preds = %entry
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !19123
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 54, !dbg !19125
  %15 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !19125
  %tobool = icmp ne %struct.ScrArea* %15, null, !dbg !19123
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19123

cond.true:                                        ; preds = %if.then
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !19126
  %sa10 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 54, !dbg !19127
  %17 = load %struct.ScrArea*, %struct.ScrArea** %sa10, align 8, !dbg !19127
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %17, i32 0, i32 19, !dbg !19128
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !19129
  %18 = load i8*, i8** %first, align 8, !dbg !19129
  br label %cond.end, !dbg !19123

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !19123

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %18, %cond.true ], [ null, %cond.false ], !dbg !19123
  %19 = bitcast i8* %cond to %struct.View3D*, !dbg !19123
  store %struct.View3D* %19, %struct.View3D** %v3d, align 8, !dbg !19130
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !19131
  %ar11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 55, !dbg !19132
  %21 = load %struct.ARegion*, %struct.ARegion** %ar11, align 8, !dbg !19132
  %tobool12 = icmp ne %struct.ARegion* %21, null, !dbg !19131
  br i1 %tobool12, label %cond.true13, label %cond.false15, !dbg !19131

cond.true13:                                      ; preds = %cond.end
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !19133
  %ar14 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 55, !dbg !19134
  %23 = load %struct.ARegion*, %struct.ARegion** %ar14, align 8, !dbg !19134
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %23, i32 0, i32 30, !dbg !19135
  %24 = load i8*, i8** %regiondata, align 8, !dbg !19135
  br label %cond.end16, !dbg !19131

cond.false15:                                     ; preds = %cond.end
  br label %cond.end16, !dbg !19131

cond.end16:                                       ; preds = %cond.false15, %cond.true13
  %cond17 = phi i8* [ %24, %cond.true13 ], [ null, %cond.false15 ], !dbg !19131
  %25 = bitcast i8* %cond17 to %struct.RegionView3D*, !dbg !19131
  store %struct.RegionView3D* %25, %struct.RegionView3D** %rv3d, align 8, !dbg !19136
  br label %if.end, !dbg !19137

if.end:                                           ; preds = %cond.end16, %entry
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !19138
  %settings = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 57, !dbg !19140
  %27 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !19140
  %uvcalc_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %27, i32 0, i32 10, !dbg !19141
  %28 = load i8, i8* %uvcalc_flag, align 1, !dbg !19141
  %conv18 = zext i8 %28 to i32, !dbg !19138
  %and = and i32 %conv18, 4, !dbg !19142
  %tobool19 = icmp ne i32 %and, 0, !dbg !19142
  br i1 %tobool19, label %land.lhs.true, label %if.else, !dbg !19143

land.lhs.true:                                    ; preds = %if.end
  %29 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !19144
  %shapenr = getelementptr inbounds %struct.BMesh, %struct.BMesh* %29, i32 0, i32 29, !dbg !19145
  %30 = load i32, i32* %shapenr, align 4, !dbg !19145
  %cmp20 = icmp sle i32 %30, 1, !dbg !19146
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !19147

if.then22:                                        ; preds = %land.lhs.true
  %31 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !19148
  %use_origfaces = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %31, i32 0, i32 6, !dbg !19150
  store i8 1, i8* %use_origfaces, align 8, !dbg !19151
  br label %if.end24, !dbg !19152

if.else:                                          ; preds = %land.lhs.true, %if.end
  %32 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !19153
  %use_origfaces23 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %32, i32 0, i32 6, !dbg !19155
  store i8 0, i8* %use_origfaces23, align 8, !dbg !19156
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then22
  %33 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !19157
  %is_proportional = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %33, i32 0, i32 9, !dbg !19158
  store i8 1, i8* %is_proportional, align 4, !dbg !19159
  %34 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !19160
  %curr_sv_index = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %34, i32 0, i32 11, !dbg !19161
  store i32 0, i32* %curr_sv_index, align 8, !dbg !19162
  %35 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !19163
  %flipped_vtx = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %35, i32 0, i32 10, !dbg !19164
  store i8 0, i8* %flipped_vtx, align 1, !dbg !19165
  %36 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !19166
  %tobool25 = icmp ne %struct.RegionView3D* %36, null, !dbg !19166
  br i1 %tobool25, label %if.else27, label %if.then26, !dbg !19168

if.then26:                                        ; preds = %if.end24
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat, i64 0, i64 0, !dbg !19169
  call void @unit_m4([4 x float]* %arraydecay), !dbg !19171
  br label %if.end30, !dbg !19172

if.else27:                                        ; preds = %if.end24
  %37 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !19173
  %38 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !19175
  %obedit28 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %38, i32 0, i32 63, !dbg !19176
  %39 = load %struct.Object*, %struct.Object** %obedit28, align 8, !dbg !19176
  %arraydecay29 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat, i64 0, i64 0, !dbg !19177
  call void @ED_view3d_ob_project_mat_get(%struct.RegionView3D* %37, %struct.Object* %39, [4 x float]* %arraydecay29), !dbg !19178
  br label %if.end30

if.end30:                                         ; preds = %if.else27, %if.then26
  %40 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !19179
  %call31 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %40, i8 zeroext 1, i8* null), !dbg !19179
  %41 = bitcast i8* %call31 to %struct.BMVert*, !dbg !19179
  store %struct.BMVert* %41, %struct.BMVert** %v, align 8, !dbg !19179
  br label %for.cond, !dbg !19179

for.cond:                                         ; preds = %for.inc54, %if.end30
  %42 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19181
  %tobool32 = icmp ne %struct.BMVert* %42, null, !dbg !19179
  br i1 %tobool32, label %for.body, label %for.end56, !dbg !19179

for.body:                                         ; preds = %for.cond
  %43 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19183
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %43, i32 0, i32 0, !dbg !19183
  %call33 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !19183
  %tobool34 = icmp ne i8 %call33, 0, !dbg !19183
  br i1 %tobool34, label %if.then35, label %if.end53, !dbg !19186

if.then35:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter2, metadata !19187, metadata !DIExpression()), !dbg !19189
  store i32 0, i32* %numsel, align 4, !dbg !19190
  %44 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19191
  %45 = bitcast %struct.BMVert* %44 to i8*, !dbg !19191
  %call36 = call i8* @BM_iter_new(%struct.BMIter* %iter2, %struct.BMesh* null, i8 zeroext 4, i8* %45), !dbg !19191
  %46 = bitcast i8* %call36 to %struct.BMEdge*, !dbg !19191
  store %struct.BMEdge* %46, %struct.BMEdge** %e, align 8, !dbg !19191
  br label %for.cond37, !dbg !19191

for.cond37:                                       ; preds = %for.inc, %if.then35
  %47 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19193
  %tobool38 = icmp ne %struct.BMEdge* %47, null, !dbg !19191
  br i1 %tobool38, label %for.body39, label %for.end, !dbg !19191

for.body39:                                       ; preds = %for.cond37
  %48 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19195
  %head40 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %48, i32 0, i32 0, !dbg !19195
  %call41 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head40, i8 zeroext 1), !dbg !19195
  %tobool42 = icmp ne i8 %call41, 0, !dbg !19195
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !19198

if.then43:                                        ; preds = %for.body39
  %49 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19199
  %50 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19201
  %e44 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %50, i32 0, i32 4, !dbg !19202
  store %struct.BMEdge* %49, %struct.BMEdge** %e44, align 8, !dbg !19203
  %51 = load i32, i32* %numsel, align 4, !dbg !19204
  %inc = add nsw i32 %51, 1, !dbg !19204
  store i32 %inc, i32* %numsel, align 4, !dbg !19204
  br label %if.end45, !dbg !19205

if.end45:                                         ; preds = %if.then43, %for.body39
  br label %for.inc, !dbg !19206

for.inc:                                          ; preds = %if.end45
  %call46 = call i8* @BM_iter_step(%struct.BMIter* %iter2), !dbg !19193
  %52 = bitcast i8* %call46 to %struct.BMEdge*, !dbg !19193
  store %struct.BMEdge* %52, %struct.BMEdge** %e, align 8, !dbg !19193
  br label %for.cond37, !dbg !19193, !llvm.loop !19207

for.end:                                          ; preds = %for.cond37
  %53 = load i32, i32* %numsel, align 4, !dbg !19209
  %cmp47 = icmp eq i32 %53, 0, !dbg !19211
  br i1 %cmp47, label %if.then51, label %lor.lhs.false, !dbg !19212

lor.lhs.false:                                    ; preds = %for.end
  %54 = load i32, i32* %numsel, align 4, !dbg !19213
  %cmp49 = icmp sgt i32 %54, 2, !dbg !19214
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !19215

if.then51:                                        ; preds = %lor.lhs.false, %for.end
  %55 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !19216
  %56 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !19218
  %57 = bitcast %struct.EdgeSlideData* %56 to i8*, !dbg !19218
  call void %55(i8* %57), !dbg !19216
  store i8 0, i8* %retval, align 1, !dbg !19219
  br label %return, !dbg !19219

if.end52:                                         ; preds = %lor.lhs.false
  br label %if.end53, !dbg !19220

if.end53:                                         ; preds = %if.end52, %for.body
  br label %for.inc54, !dbg !19221

for.inc54:                                        ; preds = %if.end53
  %call55 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !19181
  %58 = bitcast i8* %call55 to %struct.BMVert*, !dbg !19181
  store %struct.BMVert* %58, %struct.BMVert** %v, align 8, !dbg !19181
  br label %for.cond, !dbg !19181, !llvm.loop !19222

for.end56:                                        ; preds = %for.cond
  %59 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !19224
  %call57 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %59, i8 zeroext 2, i8* null), !dbg !19224
  %60 = bitcast i8* %call57 to %struct.BMEdge*, !dbg !19224
  store %struct.BMEdge* %60, %struct.BMEdge** %e, align 8, !dbg !19224
  br label %for.cond58, !dbg !19224

for.cond58:                                       ; preds = %for.inc73, %for.end56
  %61 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19226
  %tobool59 = icmp ne %struct.BMEdge* %61, null, !dbg !19224
  br i1 %tobool59, label %for.body60, label %for.end75, !dbg !19224

for.body60:                                       ; preds = %for.cond58
  %62 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19228
  %head61 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %62, i32 0, i32 0, !dbg !19228
  %call62 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head61, i8 zeroext 1), !dbg !19228
  %tobool63 = icmp ne i8 %call62, 0, !dbg !19228
  br i1 %tobool63, label %if.then64, label %if.end72, !dbg !19231

if.then64:                                        ; preds = %for.body60
  %63 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19232
  %call65 = call zeroext i8 @BM_edge_is_manifold(%struct.BMEdge* %63), !dbg !19235
  %tobool66 = icmp ne i8 %call65, 0, !dbg !19235
  br i1 %tobool66, label %if.end71, label %land.lhs.true67, !dbg !19236

land.lhs.true67:                                  ; preds = %if.then64
  %64 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19237
  %call68 = call zeroext i8 @BM_edge_is_boundary(%struct.BMEdge* %64), !dbg !19238
  %tobool69 = icmp ne i8 %call68, 0, !dbg !19238
  br i1 %tobool69, label %if.end71, label %if.then70, !dbg !19239

if.then70:                                        ; preds = %land.lhs.true67
  %65 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !19240
  %66 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !19242
  %67 = bitcast %struct.EdgeSlideData* %66 to i8*, !dbg !19242
  call void %65(i8* %67), !dbg !19240
  store i8 0, i8* %retval, align 1, !dbg !19243
  br label %return, !dbg !19243

if.end71:                                         ; preds = %land.lhs.true67, %if.then64
  br label %if.end72, !dbg !19244

if.end72:                                         ; preds = %if.end71, %for.body60
  br label %for.inc73, !dbg !19245

for.inc73:                                        ; preds = %if.end72
  %call74 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !19226
  %68 = bitcast i8* %call74 to %struct.BMEdge*, !dbg !19226
  store %struct.BMEdge* %68, %struct.BMEdge** %e, align 8, !dbg !19226
  br label %for.cond58, !dbg !19226, !llvm.loop !19246

for.end75:                                        ; preds = %for.cond58
  %69 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !19248
  %70 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !19249
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %70, i32 0, i32 0, !dbg !19250
  %71 = load i32, i32* %totvert, align 8, !dbg !19250
  %conv76 = sext i32 %71 to i64, !dbg !19249
  %mul = mul i64 4, %conv76, !dbg !19251
  %call77 = call i8* %69(i64 %mul, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.createEdgeSlideVerts, i64 0, i64 0)), !dbg !19248
  %72 = bitcast i8* %call77 to i32*, !dbg !19248
  store i32* %72, i32** %sv_table, align 8, !dbg !19252
  store i32 0, i32* %j, align 4, !dbg !19253
  %73 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !19254
  %call78 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %73, i8 zeroext 1, i8* null), !dbg !19254
  %74 = bitcast i8* %call78 to %struct.BMVert*, !dbg !19254
  store %struct.BMVert* %74, %struct.BMVert** %v, align 8, !dbg !19254
  store i32 0, i32* %i, align 4, !dbg !19254
  br label %for.cond79, !dbg !19254

for.cond79:                                       ; preds = %for.inc94, %for.end75
  %75 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19256
  %tobool80 = icmp ne %struct.BMVert* %75, null, !dbg !19254
  br i1 %tobool80, label %for.body81, label %for.end97, !dbg !19254

for.body81:                                       ; preds = %for.cond79
  %76 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19258
  %head82 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %76, i32 0, i32 0, !dbg !19258
  %call83 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head82, i8 zeroext 1), !dbg !19258
  %tobool84 = icmp ne i8 %call83, 0, !dbg !19258
  br i1 %tobool84, label %if.then85, label %if.else88, !dbg !19261

if.then85:                                        ; preds = %for.body81
  %77 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19262
  %head86 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %77, i32 0, i32 0, !dbg !19262
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head86, i8 zeroext 16), !dbg !19262
  %78 = load i32, i32* %j, align 4, !dbg !19264
  %79 = load i32*, i32** %sv_table, align 8, !dbg !19265
  %80 = load i32, i32* %i, align 4, !dbg !19266
  %idxprom = sext i32 %80 to i64, !dbg !19265
  %arrayidx87 = getelementptr inbounds i32, i32* %79, i64 %idxprom, !dbg !19265
  store i32 %78, i32* %arrayidx87, align 4, !dbg !19267
  %81 = load i32, i32* %j, align 4, !dbg !19268
  %add = add nsw i32 %81, 1, !dbg !19268
  store i32 %add, i32* %j, align 4, !dbg !19268
  br label %if.end92, !dbg !19269

if.else88:                                        ; preds = %for.body81
  %82 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19270
  %head89 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %82, i32 0, i32 0, !dbg !19270
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head89, i8 zeroext 16), !dbg !19270
  %83 = load i32*, i32** %sv_table, align 8, !dbg !19272
  %84 = load i32, i32* %i, align 4, !dbg !19273
  %idxprom90 = sext i32 %84 to i64, !dbg !19272
  %arrayidx91 = getelementptr inbounds i32, i32* %83, i64 %idxprom90, !dbg !19272
  store i32 -1, i32* %arrayidx91, align 4, !dbg !19274
  br label %if.end92

if.end92:                                         ; preds = %if.else88, %if.then85
  %85 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19275
  %head93 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %85, i32 0, i32 0, !dbg !19275
  %86 = load i32, i32* %i, align 4, !dbg !19275
  call void @_bm_elem_index_set(%struct.BMHeader* %head93, i32 %86), !dbg !19275
  br label %for.inc94, !dbg !19276

for.inc94:                                        ; preds = %if.end92
  %call95 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !19256
  %87 = bitcast i8* %call95 to %struct.BMVert*, !dbg !19256
  store %struct.BMVert* %87, %struct.BMVert** %v, align 8, !dbg !19256
  %88 = load i32, i32* %i, align 4, !dbg !19256
  %inc96 = add nsw i32 %88, 1, !dbg !19256
  store i32 %inc96, i32* %i, align 4, !dbg !19256
  br label %for.cond79, !dbg !19256, !llvm.loop !19277

for.end97:                                        ; preds = %for.cond79
  %89 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !19279
  %elem_index_dirty = getelementptr inbounds %struct.BMesh, %struct.BMesh* %89, i32 0, i32 7, !dbg !19280
  %90 = load i8, i8* %elem_index_dirty, align 4, !dbg !19281
  %conv98 = zext i8 %90 to i32, !dbg !19281
  %and99 = and i32 %conv98, -2, !dbg !19281
  %conv100 = trunc i32 %and99 to i8, !dbg !19281
  store i8 %conv100, i8* %elem_index_dirty, align 4, !dbg !19281
  %91 = load i32, i32* %j, align 4, !dbg !19282
  %tobool101 = icmp ne i32 %91, 0, !dbg !19282
  br i1 %tobool101, label %if.end103, label %if.then102, !dbg !19284

if.then102:                                       ; preds = %for.end97
  %92 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !19285
  %93 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !19287
  %94 = bitcast %struct.EdgeSlideData* %93 to i8*, !dbg !19287
  call void %92(i8* %94), !dbg !19285
  %95 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !19288
  %96 = load i32*, i32** %sv_table, align 8, !dbg !19289
  %97 = bitcast i32* %96 to i8*, !dbg !19289
  call void %95(i8* %97), !dbg !19288
  store i8 0, i8* %retval, align 1, !dbg !19290
  br label %return, !dbg !19290

if.end103:                                        ; preds = %for.end97
  %98 = load i32, i32* %j, align 4, !dbg !19291
  store i32 %98, i32* %sv_tot, align 4, !dbg !19292
  %99 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !19293
  %100 = load i32, i32* %sv_tot, align 4, !dbg !19294
  %conv104 = sext i32 %100 to i64, !dbg !19294
  %mul105 = mul i64 72, %conv104, !dbg !19295
  %call106 = call i8* %99(i64 %mul105, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.135, i64 0, i64 0)), !dbg !19293
  %101 = bitcast i8* %call106 to %struct.TransDataEdgeSlideVert*, !dbg !19293
  store %struct.TransDataEdgeSlideVert* %101, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !19296
  store i32 0, i32* %loop_nr, align 4, !dbg !19297
  br label %while.body, !dbg !19298

while.body:                                       ; preds = %if.end103, %if.then124, %do.end444
  call void @llvm.dbg.declare(metadata [3 x float]* %vec_a, metadata !19299, metadata !DIExpression()), !dbg !19301
  call void @llvm.dbg.declare(metadata [3 x float]* %vec_b, metadata !19302, metadata !DIExpression()), !dbg !19303
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_a, metadata !19304, metadata !DIExpression()), !dbg !19305
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_b, metadata !19306, metadata !DIExpression()), !dbg !19307
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_a_prev, metadata !19308, metadata !DIExpression()), !dbg !19309
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_b_prev, metadata !19310, metadata !DIExpression()), !dbg !19311
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v_first, metadata !19312, metadata !DIExpression()), !dbg !19313
  store %struct.BMVert* null, %struct.BMVert** %v, align 8, !dbg !19314
  %102 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !19315
  %call107 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %102, i8 zeroext 1, i8* null), !dbg !19315
  %103 = bitcast i8* %call107 to %struct.BMVert*, !dbg !19315
  store %struct.BMVert* %103, %struct.BMVert** %v, align 8, !dbg !19315
  br label %for.cond108, !dbg !19315

for.cond108:                                      ; preds = %for.inc116, %while.body
  %104 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19317
  %tobool109 = icmp ne %struct.BMVert* %104, null, !dbg !19315
  br i1 %tobool109, label %for.body110, label %for.end118, !dbg !19315

for.body110:                                      ; preds = %for.cond108
  %105 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19319
  %head111 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %105, i32 0, i32 0, !dbg !19319
  %call112 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head111, i8 zeroext 16), !dbg !19319
  %tobool113 = icmp ne i8 %call112, 0, !dbg !19319
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !19322

if.then114:                                       ; preds = %for.body110
  br label %for.end118, !dbg !19323

if.end115:                                        ; preds = %for.body110
  br label %for.inc116, !dbg !19324

for.inc116:                                       ; preds = %if.end115
  %call117 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !19317
  %106 = bitcast i8* %call117 to %struct.BMVert*, !dbg !19317
  store %struct.BMVert* %106, %struct.BMVert** %v, align 8, !dbg !19317
  br label %for.cond108, !dbg !19317, !llvm.loop !19325

for.end118:                                       ; preds = %if.then114, %for.cond108
  %107 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19327
  %tobool119 = icmp ne %struct.BMVert* %107, null, !dbg !19327
  br i1 %tobool119, label %if.end121, label %if.then120, !dbg !19329

if.then120:                                       ; preds = %for.end118
  br label %while.end, !dbg !19330

if.end121:                                        ; preds = %for.end118
  %108 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19331
  %e122 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %108, i32 0, i32 4, !dbg !19333
  %109 = load %struct.BMEdge*, %struct.BMEdge** %e122, align 8, !dbg !19333
  %tobool123 = icmp ne %struct.BMEdge* %109, null, !dbg !19331
  br i1 %tobool123, label %if.end125, label %if.then124, !dbg !19334

if.then124:                                       ; preds = %if.end121
  br label %while.body, !dbg !19335, !llvm.loop !19336

if.end125:                                        ; preds = %if.end121
  %110 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19338
  store %struct.BMVert* %110, %struct.BMVert** %v_first, align 8, !dbg !19339
  %111 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19340
  %e126 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %111, i32 0, i32 4, !dbg !19341
  %112 = load %struct.BMEdge*, %struct.BMEdge** %e126, align 8, !dbg !19341
  store %struct.BMEdge* %112, %struct.BMEdge** %e, align 8, !dbg !19342
  br label %do.body, !dbg !19343

do.body:                                          ; preds = %do.cond, %if.end125
  %113 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19344
  %114 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19346
  %call127 = call %struct.BMEdge* @get_other_edge(%struct.BMVert* %113, %struct.BMEdge* %114), !dbg !19347
  store %struct.BMEdge* %call127, %struct.BMEdge** %e, align 8, !dbg !19348
  %115 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19349
  %tobool128 = icmp ne %struct.BMEdge* %115, null, !dbg !19349
  br i1 %tobool128, label %if.end131, label %if.then129, !dbg !19351

if.then129:                                       ; preds = %do.body
  %116 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19352
  %e130 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %116, i32 0, i32 4, !dbg !19354
  %117 = load %struct.BMEdge*, %struct.BMEdge** %e130, align 8, !dbg !19354
  store %struct.BMEdge* %117, %struct.BMEdge** %e, align 8, !dbg !19355
  br label %do.end, !dbg !19356

if.end131:                                        ; preds = %do.body
  %118 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19357
  %119 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19357
  %call132 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %118, %struct.BMVert* %119), !dbg !19357
  %head133 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %call132, i32 0, i32 0, !dbg !19357
  %call134 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head133, i8 zeroext 16), !dbg !19357
  %tobool135 = icmp ne i8 %call134, 0, !dbg !19357
  br i1 %tobool135, label %if.end137, label %if.then136, !dbg !19359

if.then136:                                       ; preds = %if.end131
  br label %do.end, !dbg !19360

if.end137:                                        ; preds = %if.end131
  %120 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19361
  %121 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19362
  %call138 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %120, %struct.BMVert* %121), !dbg !19363
  store %struct.BMVert* %call138, %struct.BMVert** %v, align 8, !dbg !19364
  br label %do.cond, !dbg !19365

do.cond:                                          ; preds = %if.end137
  %122 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19366
  %123 = load %struct.BMVert*, %struct.BMVert** %v_first, align 8, !dbg !19367
  %e139 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %123, i32 0, i32 4, !dbg !19368
  %124 = load %struct.BMEdge*, %struct.BMEdge** %e139, align 8, !dbg !19368
  %cmp140 = icmp ne %struct.BMEdge* %122, %124, !dbg !19369
  br i1 %cmp140, label %do.body, label %do.end, !dbg !19365, !llvm.loop !19370

do.end:                                           ; preds = %do.cond, %if.then136, %if.then129
  %125 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19372
  %head142 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %125, i32 0, i32 0, !dbg !19372
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head142, i8 zeroext 16), !dbg !19372
  %126 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19373
  %l = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %126, i32 0, i32 4, !dbg !19374
  %127 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !19374
  store %struct.BMLoop* %127, %struct.BMLoop** %l_a, align 8, !dbg !19375
  %128 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19376
  %l143 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %128, i32 0, i32 4, !dbg !19377
  %129 = load %struct.BMLoop*, %struct.BMLoop** %l143, align 8, !dbg !19377
  %radial_next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %129, i32 0, i32 4, !dbg !19378
  %130 = load %struct.BMLoop*, %struct.BMLoop** %radial_next, align 8, !dbg !19378
  store %struct.BMLoop* %130, %struct.BMLoop** %l_b, align 8, !dbg !19379
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e_next, metadata !19380, metadata !DIExpression()), !dbg !19382
  %131 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19383
  %132 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19384
  %call144 = call %struct.BMEdge* @get_other_edge(%struct.BMVert* %131, %struct.BMEdge* %132), !dbg !19385
  store %struct.BMEdge* %call144, %struct.BMEdge** %e_next, align 8, !dbg !19382
  %133 = load %struct.BMEdge*, %struct.BMEdge** %e_next, align 8, !dbg !19386
  %tobool145 = icmp ne %struct.BMEdge* %133, null, !dbg !19386
  br i1 %tobool145, label %if.then146, label %if.else149, !dbg !19388

if.then146:                                       ; preds = %do.end
  %134 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19389
  %135 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19391
  %136 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19392
  %137 = load %struct.BMEdge*, %struct.BMEdge** %e_next, align 8, !dbg !19393
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %vec_a, i64 0, i64 0, !dbg !19394
  %call148 = call %struct.BMLoop* @get_next_loop(%struct.BMVert* %134, %struct.BMLoop* %135, %struct.BMEdge* %136, %struct.BMEdge* %137, float* %arraydecay147), !dbg !19395
  br label %if.end172, !dbg !19396

if.else149:                                       ; preds = %do.end
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_tmp, metadata !19397, metadata !DIExpression()), !dbg !19399
  %138 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19400
  %139 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19401
  %call150 = call %struct.BMLoop* @BM_loop_other_edge_loop(%struct.BMLoop* %138, %struct.BMVert* %139), !dbg !19402
  store %struct.BMLoop* %call150, %struct.BMLoop** %l_tmp, align 8, !dbg !19399
  %140 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp, align 8, !dbg !19403
  %e151 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %140, i32 0, i32 2, !dbg !19403
  %141 = load %struct.BMEdge*, %struct.BMEdge** %e151, align 8, !dbg !19403
  %call152 = call zeroext i8 @BM_edge_is_boundary(%struct.BMEdge* %141), !dbg !19403
  %conv153 = zext i8 %call152 to i32, !dbg !19403
  %cmp154 = icmp eq i32 %conv153, 0, !dbg !19403
  br i1 %cmp154, label %land.lhs.true156, label %if.else164, !dbg !19403

land.lhs.true156:                                 ; preds = %if.else149
  %142 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19403
  %call157 = call i32 @BM_vert_edge_count_nonwire(%struct.BMVert* %142), !dbg !19403
  %cmp158 = icmp eq i32 %call157, 2, !dbg !19403
  br i1 %cmp158, label %if.then160, label %if.else164, !dbg !19405

if.then160:                                       ; preds = %land.lhs.true156
  %143 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19406
  %144 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19408
  %145 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19409
  %146 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp, align 8, !dbg !19410
  %e161 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %146, i32 0, i32 2, !dbg !19411
  %147 = load %struct.BMEdge*, %struct.BMEdge** %e161, align 8, !dbg !19411
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %vec_a, i64 0, i64 0, !dbg !19412
  %call163 = call %struct.BMLoop* @get_next_loop(%struct.BMVert* %143, %struct.BMLoop* %144, %struct.BMEdge* %145, %struct.BMEdge* %147, float* %arraydecay162), !dbg !19413
  br label %if.end171, !dbg !19414

if.else164:                                       ; preds = %land.lhs.true156, %if.else149
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %vec_a, i64 0, i64 0, !dbg !19415
  %148 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp, align 8, !dbg !19417
  %e166 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %148, i32 0, i32 2, !dbg !19418
  %149 = load %struct.BMEdge*, %struct.BMEdge** %e166, align 8, !dbg !19418
  %150 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19419
  %call167 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %149, %struct.BMVert* %150), !dbg !19420
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %call167, i32 0, i32 2, !dbg !19421
  %arraydecay168 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !19420
  %151 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19422
  %co169 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %151, i32 0, i32 2, !dbg !19423
  %arraydecay170 = getelementptr inbounds [3 x float], [3 x float]* %co169, i64 0, i64 0, !dbg !19422
  call void @sub_v3_v3v3(float* %arraydecay165, float* %arraydecay168, float* %arraydecay170), !dbg !19424
  br label %if.end171

if.end171:                                        ; preds = %if.else164, %if.then160
  br label %if.end172

if.end172:                                        ; preds = %if.end171, %if.then146
  %152 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19425
  %153 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19427
  %cmp173 = icmp ne %struct.BMLoop* %152, %153, !dbg !19428
  br i1 %cmp173, label %if.then175, label %if.else208, !dbg !19429

if.then175:                                       ; preds = %if.end172
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e_next176, metadata !19430, metadata !DIExpression()), !dbg !19432
  %154 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19433
  %155 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19434
  %call177 = call %struct.BMEdge* @get_other_edge(%struct.BMVert* %154, %struct.BMEdge* %155), !dbg !19435
  store %struct.BMEdge* %call177, %struct.BMEdge** %e_next176, align 8, !dbg !19432
  %156 = load %struct.BMEdge*, %struct.BMEdge** %e_next176, align 8, !dbg !19436
  %tobool178 = icmp ne %struct.BMEdge* %156, null, !dbg !19436
  br i1 %tobool178, label %if.then179, label %if.else182, !dbg !19438

if.then179:                                       ; preds = %if.then175
  %157 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19439
  %158 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19441
  %159 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19442
  %160 = load %struct.BMEdge*, %struct.BMEdge** %e_next176, align 8, !dbg !19443
  %arraydecay180 = getelementptr inbounds [3 x float], [3 x float]* %vec_b, i64 0, i64 0, !dbg !19444
  %call181 = call %struct.BMLoop* @get_next_loop(%struct.BMVert* %157, %struct.BMLoop* %158, %struct.BMEdge* %159, %struct.BMEdge* %160, float* %arraydecay180), !dbg !19445
  br label %if.end207, !dbg !19446

if.else182:                                       ; preds = %if.then175
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_tmp183, metadata !19447, metadata !DIExpression()), !dbg !19449
  %161 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19450
  %162 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19451
  %call184 = call %struct.BMLoop* @BM_loop_other_edge_loop(%struct.BMLoop* %161, %struct.BMVert* %162), !dbg !19452
  store %struct.BMLoop* %call184, %struct.BMLoop** %l_tmp183, align 8, !dbg !19449
  %163 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp183, align 8, !dbg !19453
  %e185 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %163, i32 0, i32 2, !dbg !19453
  %164 = load %struct.BMEdge*, %struct.BMEdge** %e185, align 8, !dbg !19453
  %call186 = call zeroext i8 @BM_edge_is_boundary(%struct.BMEdge* %164), !dbg !19453
  %conv187 = zext i8 %call186 to i32, !dbg !19453
  %cmp188 = icmp eq i32 %conv187, 0, !dbg !19453
  br i1 %cmp188, label %land.lhs.true190, label %if.else198, !dbg !19453

land.lhs.true190:                                 ; preds = %if.else182
  %165 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19453
  %call191 = call i32 @BM_vert_edge_count_nonwire(%struct.BMVert* %165), !dbg !19453
  %cmp192 = icmp eq i32 %call191, 2, !dbg !19453
  br i1 %cmp192, label %if.then194, label %if.else198, !dbg !19455

if.then194:                                       ; preds = %land.lhs.true190
  %166 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19456
  %167 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19458
  %168 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19459
  %169 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp183, align 8, !dbg !19460
  %e195 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %169, i32 0, i32 2, !dbg !19461
  %170 = load %struct.BMEdge*, %struct.BMEdge** %e195, align 8, !dbg !19461
  %arraydecay196 = getelementptr inbounds [3 x float], [3 x float]* %vec_b, i64 0, i64 0, !dbg !19462
  %call197 = call %struct.BMLoop* @get_next_loop(%struct.BMVert* %166, %struct.BMLoop* %167, %struct.BMEdge* %168, %struct.BMEdge* %170, float* %arraydecay196), !dbg !19463
  br label %if.end206, !dbg !19464

if.else198:                                       ; preds = %land.lhs.true190, %if.else182
  %arraydecay199 = getelementptr inbounds [3 x float], [3 x float]* %vec_b, i64 0, i64 0, !dbg !19465
  %171 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp183, align 8, !dbg !19467
  %e200 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %171, i32 0, i32 2, !dbg !19468
  %172 = load %struct.BMEdge*, %struct.BMEdge** %e200, align 8, !dbg !19468
  %173 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19469
  %call201 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %172, %struct.BMVert* %173), !dbg !19470
  %co202 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %call201, i32 0, i32 2, !dbg !19471
  %arraydecay203 = getelementptr inbounds [3 x float], [3 x float]* %co202, i64 0, i64 0, !dbg !19470
  %174 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19472
  %co204 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %174, i32 0, i32 2, !dbg !19473
  %arraydecay205 = getelementptr inbounds [3 x float], [3 x float]* %co204, i64 0, i64 0, !dbg !19472
  call void @sub_v3_v3v3(float* %arraydecay199, float* %arraydecay203, float* %arraydecay205), !dbg !19474
  br label %if.end206

if.end206:                                        ; preds = %if.else198, %if.then194
  br label %if.end207

if.end207:                                        ; preds = %if.end206, %if.then179
  br label %if.end209, !dbg !19475

if.else208:                                       ; preds = %if.end172
  store %struct.BMLoop* null, %struct.BMLoop** %l_b, align 8, !dbg !19476
  br label %if.end209

if.end209:                                        ; preds = %if.else208, %if.end207
  store %struct.BMLoop* null, %struct.BMLoop** %l_a_prev, align 8, !dbg !19478
  store %struct.BMLoop* null, %struct.BMLoop** %l_b_prev, align 8, !dbg !19479
  %175 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19480
  store %struct.BMVert* %175, %struct.BMVert** %v_first, align 8, !dbg !19481
  br label %do.body210, !dbg !19482

do.body210:                                       ; preds = %land.end, %if.end209
  call void @llvm.dbg.declare(metadata i8* %l_a_ok_prev, metadata !19483, metadata !DIExpression()), !dbg !19485
  call void @llvm.dbg.declare(metadata i8* %l_b_ok_prev, metadata !19486, metadata !DIExpression()), !dbg !19487
  call void @llvm.dbg.declare(metadata %struct.TransDataEdgeSlideVert** %sv, metadata !19488, metadata !DIExpression()), !dbg !19489
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v_prev, metadata !19490, metadata !DIExpression()), !dbg !19491
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e_prev, metadata !19492, metadata !DIExpression()), !dbg !19493
  %176 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !19494
  %177 = load i32*, i32** %sv_table, align 8, !dbg !19495
  %178 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19496
  %head211 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %178, i32 0, i32 0, !dbg !19496
  %call212 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head211), !dbg !19496
  %idxprom213 = sext i32 %call212 to i64, !dbg !19495
  %arrayidx214 = getelementptr inbounds i32, i32* %177, i64 %idxprom213, !dbg !19495
  %179 = load i32, i32* %arrayidx214, align 4, !dbg !19495
  %idxprom215 = sext i32 %179 to i64, !dbg !19494
  %arrayidx216 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %176, i64 %idxprom215, !dbg !19494
  store %struct.TransDataEdgeSlideVert* %arrayidx216, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !19497
  %180 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19498
  %181 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !19499
  %v217 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %181, i32 0, i32 2, !dbg !19500
  store %struct.BMVert* %180, %struct.BMVert** %v217, align 8, !dbg !19501
  %182 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !19502
  %v_co_orig = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %182, i32 0, i32 3, !dbg !19503
  %arraydecay218 = getelementptr inbounds [3 x float], [3 x float]* %v_co_orig, i64 0, i64 0, !dbg !19502
  %183 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19504
  %co219 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %183, i32 0, i32 2, !dbg !19505
  %arraydecay220 = getelementptr inbounds [3 x float], [3 x float]* %co219, i64 0, i64 0, !dbg !19504
  call void @copy_v3_v3(float* %arraydecay218, float* %arraydecay220), !dbg !19506
  %184 = load i32, i32* %loop_nr, align 4, !dbg !19507
  %185 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !19508
  %loop_nr221 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %185, i32 0, i32 7, !dbg !19509
  store i32 %184, i32* %loop_nr221, align 8, !dbg !19510
  %186 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19511
  %tobool222 = icmp ne %struct.BMLoop* %186, null, !dbg !19511
  br i1 %tobool222, label %if.then225, label %lor.lhs.false223, !dbg !19513

lor.lhs.false223:                                 ; preds = %do.body210
  %187 = load %struct.BMLoop*, %struct.BMLoop** %l_a_prev, align 8, !dbg !19514
  %tobool224 = icmp ne %struct.BMLoop* %187, null, !dbg !19514
  br i1 %tobool224, label %if.then225, label %if.end237, !dbg !19515

if.then225:                                       ; preds = %lor.lhs.false223, %do.body210
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_tmp226, metadata !19516, metadata !DIExpression()), !dbg !19518
  %188 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19519
  %tobool227 = icmp ne %struct.BMLoop* %188, null, !dbg !19519
  br i1 %tobool227, label %cond.true228, label %cond.false229, !dbg !19519

cond.true228:                                     ; preds = %if.then225
  %189 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19520
  br label %cond.end230, !dbg !19519

cond.false229:                                    ; preds = %if.then225
  %190 = load %struct.BMLoop*, %struct.BMLoop** %l_a_prev, align 8, !dbg !19521
  br label %cond.end230, !dbg !19519

cond.end230:                                      ; preds = %cond.false229, %cond.true228
  %cond231 = phi %struct.BMLoop* [ %189, %cond.true228 ], [ %190, %cond.false229 ], !dbg !19519
  %191 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19522
  %call232 = call %struct.BMLoop* @BM_loop_other_edge_loop(%struct.BMLoop* %cond231, %struct.BMVert* %191), !dbg !19523
  store %struct.BMLoop* %call232, %struct.BMLoop** %l_tmp226, align 8, !dbg !19518
  %192 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp226, align 8, !dbg !19524
  %e233 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %192, i32 0, i32 2, !dbg !19525
  %193 = load %struct.BMEdge*, %struct.BMEdge** %e233, align 8, !dbg !19525
  %194 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19526
  %call234 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %193, %struct.BMVert* %194), !dbg !19527
  %195 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !19528
  %v_a = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %195, i32 0, i32 0, !dbg !19529
  store %struct.BMVert* %call234, %struct.BMVert** %v_a, align 8, !dbg !19530
  %196 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !19531
  %dir_a = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %196, i32 0, i32 5, !dbg !19532
  %arraydecay235 = getelementptr inbounds [3 x float], [3 x float]* %dir_a, i64 0, i64 0, !dbg !19531
  %arraydecay236 = getelementptr inbounds [3 x float], [3 x float]* %vec_a, i64 0, i64 0, !dbg !19533
  call void @copy_v3_v3(float* %arraydecay235, float* %arraydecay236), !dbg !19534
  br label %if.end237, !dbg !19535

if.end237:                                        ; preds = %cond.end230, %lor.lhs.false223
  %197 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19536
  %tobool238 = icmp ne %struct.BMLoop* %197, null, !dbg !19536
  br i1 %tobool238, label %if.then241, label %lor.lhs.false239, !dbg !19538

lor.lhs.false239:                                 ; preds = %if.end237
  %198 = load %struct.BMLoop*, %struct.BMLoop** %l_b_prev, align 8, !dbg !19539
  %tobool240 = icmp ne %struct.BMLoop* %198, null, !dbg !19539
  br i1 %tobool240, label %if.then241, label %if.end253, !dbg !19540

if.then241:                                       ; preds = %lor.lhs.false239, %if.end237
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_tmp242, metadata !19541, metadata !DIExpression()), !dbg !19543
  %199 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19544
  %tobool243 = icmp ne %struct.BMLoop* %199, null, !dbg !19544
  br i1 %tobool243, label %cond.true244, label %cond.false245, !dbg !19544

cond.true244:                                     ; preds = %if.then241
  %200 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19545
  br label %cond.end246, !dbg !19544

cond.false245:                                    ; preds = %if.then241
  %201 = load %struct.BMLoop*, %struct.BMLoop** %l_b_prev, align 8, !dbg !19546
  br label %cond.end246, !dbg !19544

cond.end246:                                      ; preds = %cond.false245, %cond.true244
  %cond247 = phi %struct.BMLoop* [ %200, %cond.true244 ], [ %201, %cond.false245 ], !dbg !19544
  %202 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19547
  %call248 = call %struct.BMLoop* @BM_loop_other_edge_loop(%struct.BMLoop* %cond247, %struct.BMVert* %202), !dbg !19548
  store %struct.BMLoop* %call248, %struct.BMLoop** %l_tmp242, align 8, !dbg !19543
  %203 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp242, align 8, !dbg !19549
  %e249 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %203, i32 0, i32 2, !dbg !19550
  %204 = load %struct.BMEdge*, %struct.BMEdge** %e249, align 8, !dbg !19550
  %205 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19551
  %call250 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %204, %struct.BMVert* %205), !dbg !19552
  %206 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !19553
  %v_b = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %206, i32 0, i32 1, !dbg !19554
  store %struct.BMVert* %call250, %struct.BMVert** %v_b, align 8, !dbg !19555
  %207 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !19556
  %dir_b = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %207, i32 0, i32 6, !dbg !19557
  %arraydecay251 = getelementptr inbounds [3 x float], [3 x float]* %dir_b, i64 0, i64 0, !dbg !19556
  %arraydecay252 = getelementptr inbounds [3 x float], [3 x float]* %vec_b, i64 0, i64 0, !dbg !19558
  call void @copy_v3_v3(float* %arraydecay251, float* %arraydecay252), !dbg !19559
  br label %if.end253, !dbg !19560

if.end253:                                        ; preds = %cond.end246, %lor.lhs.false239
  %208 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19561
  store %struct.BMVert* %208, %struct.BMVert** %v_prev, align 8, !dbg !19562
  %209 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19563
  %210 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19564
  %call254 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %209, %struct.BMVert* %210), !dbg !19565
  store %struct.BMVert* %call254, %struct.BMVert** %v, align 8, !dbg !19566
  %211 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19567
  store %struct.BMEdge* %211, %struct.BMEdge** %e_prev, align 8, !dbg !19568
  %212 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19569
  %213 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19570
  %call255 = call %struct.BMEdge* @get_other_edge(%struct.BMVert* %212, %struct.BMEdge* %213), !dbg !19571
  store %struct.BMEdge* %call255, %struct.BMEdge** %e, align 8, !dbg !19572
  %214 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19573
  %tobool256 = icmp ne %struct.BMEdge* %214, null, !dbg !19573
  br i1 %tobool256, label %if.end336, label %if.then257, !dbg !19575

if.then257:                                       ; preds = %if.end253
  %215 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !19576
  %216 = load i32*, i32** %sv_table, align 8, !dbg !19578
  %217 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19579
  %head258 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %217, i32 0, i32 0, !dbg !19579
  %call259 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head258), !dbg !19579
  %idxprom260 = sext i32 %call259 to i64, !dbg !19578
  %arrayidx261 = getelementptr inbounds i32, i32* %216, i64 %idxprom260, !dbg !19578
  %218 = load i32, i32* %arrayidx261, align 4, !dbg !19578
  %idxprom262 = sext i32 %218 to i64, !dbg !19576
  %arrayidx263 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %215, i64 %idxprom262, !dbg !19576
  store %struct.TransDataEdgeSlideVert* %arrayidx263, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !19580
  %219 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19581
  %220 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !19582
  %v264 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %220, i32 0, i32 2, !dbg !19583
  store %struct.BMVert* %219, %struct.BMVert** %v264, align 8, !dbg !19584
  %221 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !19585
  %v_co_orig265 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %221, i32 0, i32 3, !dbg !19586
  %arraydecay266 = getelementptr inbounds [3 x float], [3 x float]* %v_co_orig265, i64 0, i64 0, !dbg !19585
  %222 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19587
  %co267 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %222, i32 0, i32 2, !dbg !19588
  %arraydecay268 = getelementptr inbounds [3 x float], [3 x float]* %co267, i64 0, i64 0, !dbg !19587
  call void @copy_v3_v3(float* %arraydecay266, float* %arraydecay268), !dbg !19589
  %223 = load i32, i32* %loop_nr, align 4, !dbg !19590
  %224 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !19591
  %loop_nr269 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %224, i32 0, i32 7, !dbg !19592
  store i32 %223, i32* %loop_nr269, align 8, !dbg !19593
  %225 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19594
  %tobool270 = icmp ne %struct.BMLoop* %225, null, !dbg !19594
  br i1 %tobool270, label %if.then271, label %if.end301, !dbg !19596

if.then271:                                       ; preds = %if.then257
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_tmp272, metadata !19597, metadata !DIExpression()), !dbg !19599
  %226 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19600
  %227 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19601
  %call273 = call %struct.BMLoop* @BM_loop_other_edge_loop(%struct.BMLoop* %226, %struct.BMVert* %227), !dbg !19602
  store %struct.BMLoop* %call273, %struct.BMLoop** %l_tmp272, align 8, !dbg !19599
  %228 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp272, align 8, !dbg !19603
  %e274 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %228, i32 0, i32 2, !dbg !19604
  %229 = load %struct.BMEdge*, %struct.BMEdge** %e274, align 8, !dbg !19604
  %230 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19605
  %call275 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %229, %struct.BMVert* %230), !dbg !19606
  %231 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !19607
  %v_a276 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %231, i32 0, i32 0, !dbg !19608
  store %struct.BMVert* %call275, %struct.BMVert** %v_a276, align 8, !dbg !19609
  %232 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp272, align 8, !dbg !19610
  %e277 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %232, i32 0, i32 2, !dbg !19610
  %233 = load %struct.BMEdge*, %struct.BMEdge** %e277, align 8, !dbg !19610
  %call278 = call zeroext i8 @BM_edge_is_boundary(%struct.BMEdge* %233), !dbg !19610
  %conv279 = zext i8 %call278 to i32, !dbg !19610
  %cmp280 = icmp eq i32 %conv279, 0, !dbg !19610
  br i1 %cmp280, label %land.lhs.true282, label %if.else291, !dbg !19610

land.lhs.true282:                                 ; preds = %if.then271
  %234 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19610
  %call283 = call i32 @BM_vert_edge_count_nonwire(%struct.BMVert* %234), !dbg !19610
  %cmp284 = icmp eq i32 %call283, 2, !dbg !19610
  br i1 %cmp284, label %if.then286, label %if.else291, !dbg !19612

if.then286:                                       ; preds = %land.lhs.true282
  %235 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19613
  %236 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19615
  %237 = load %struct.BMEdge*, %struct.BMEdge** %e_prev, align 8, !dbg !19616
  %238 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp272, align 8, !dbg !19617
  %e287 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %238, i32 0, i32 2, !dbg !19618
  %239 = load %struct.BMEdge*, %struct.BMEdge** %e287, align 8, !dbg !19618
  %240 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !19619
  %dir_a288 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %240, i32 0, i32 5, !dbg !19620
  %arraydecay289 = getelementptr inbounds [3 x float], [3 x float]* %dir_a288, i64 0, i64 0, !dbg !19619
  %call290 = call %struct.BMLoop* @get_next_loop(%struct.BMVert* %235, %struct.BMLoop* %236, %struct.BMEdge* %237, %struct.BMEdge* %239, float* %arraydecay289), !dbg !19621
  br label %if.end300, !dbg !19622

if.else291:                                       ; preds = %land.lhs.true282, %if.then271
  %241 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !19623
  %dir_a292 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %241, i32 0, i32 5, !dbg !19625
  %arraydecay293 = getelementptr inbounds [3 x float], [3 x float]* %dir_a292, i64 0, i64 0, !dbg !19623
  %242 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp272, align 8, !dbg !19626
  %e294 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %242, i32 0, i32 2, !dbg !19627
  %243 = load %struct.BMEdge*, %struct.BMEdge** %e294, align 8, !dbg !19627
  %244 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19628
  %call295 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %243, %struct.BMVert* %244), !dbg !19629
  %co296 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %call295, i32 0, i32 2, !dbg !19630
  %arraydecay297 = getelementptr inbounds [3 x float], [3 x float]* %co296, i64 0, i64 0, !dbg !19629
  %245 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19631
  %co298 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %245, i32 0, i32 2, !dbg !19632
  %arraydecay299 = getelementptr inbounds [3 x float], [3 x float]* %co298, i64 0, i64 0, !dbg !19631
  call void @sub_v3_v3v3(float* %arraydecay293, float* %arraydecay297, float* %arraydecay299), !dbg !19633
  br label %if.end300

if.end300:                                        ; preds = %if.else291, %if.then286
  br label %if.end301, !dbg !19634

if.end301:                                        ; preds = %if.end300, %if.then257
  %246 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19635
  %tobool302 = icmp ne %struct.BMLoop* %246, null, !dbg !19635
  br i1 %tobool302, label %if.then303, label %if.end333, !dbg !19637

if.then303:                                       ; preds = %if.end301
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_tmp304, metadata !19638, metadata !DIExpression()), !dbg !19640
  %247 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19641
  %248 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19642
  %call305 = call %struct.BMLoop* @BM_loop_other_edge_loop(%struct.BMLoop* %247, %struct.BMVert* %248), !dbg !19643
  store %struct.BMLoop* %call305, %struct.BMLoop** %l_tmp304, align 8, !dbg !19640
  %249 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp304, align 8, !dbg !19644
  %e306 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %249, i32 0, i32 2, !dbg !19645
  %250 = load %struct.BMEdge*, %struct.BMEdge** %e306, align 8, !dbg !19645
  %251 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19646
  %call307 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %250, %struct.BMVert* %251), !dbg !19647
  %252 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !19648
  %v_b308 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %252, i32 0, i32 1, !dbg !19649
  store %struct.BMVert* %call307, %struct.BMVert** %v_b308, align 8, !dbg !19650
  %253 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp304, align 8, !dbg !19651
  %e309 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %253, i32 0, i32 2, !dbg !19651
  %254 = load %struct.BMEdge*, %struct.BMEdge** %e309, align 8, !dbg !19651
  %call310 = call zeroext i8 @BM_edge_is_boundary(%struct.BMEdge* %254), !dbg !19651
  %conv311 = zext i8 %call310 to i32, !dbg !19651
  %cmp312 = icmp eq i32 %conv311, 0, !dbg !19651
  br i1 %cmp312, label %land.lhs.true314, label %if.else323, !dbg !19651

land.lhs.true314:                                 ; preds = %if.then303
  %255 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19651
  %call315 = call i32 @BM_vert_edge_count_nonwire(%struct.BMVert* %255), !dbg !19651
  %cmp316 = icmp eq i32 %call315, 2, !dbg !19651
  br i1 %cmp316, label %if.then318, label %if.else323, !dbg !19653

if.then318:                                       ; preds = %land.lhs.true314
  %256 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19654
  %257 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19656
  %258 = load %struct.BMEdge*, %struct.BMEdge** %e_prev, align 8, !dbg !19657
  %259 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp304, align 8, !dbg !19658
  %e319 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %259, i32 0, i32 2, !dbg !19659
  %260 = load %struct.BMEdge*, %struct.BMEdge** %e319, align 8, !dbg !19659
  %261 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !19660
  %dir_b320 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %261, i32 0, i32 6, !dbg !19661
  %arraydecay321 = getelementptr inbounds [3 x float], [3 x float]* %dir_b320, i64 0, i64 0, !dbg !19660
  %call322 = call %struct.BMLoop* @get_next_loop(%struct.BMVert* %256, %struct.BMLoop* %257, %struct.BMEdge* %258, %struct.BMEdge* %260, float* %arraydecay321), !dbg !19662
  br label %if.end332, !dbg !19663

if.else323:                                       ; preds = %land.lhs.true314, %if.then303
  %262 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !19664
  %dir_b324 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %262, i32 0, i32 6, !dbg !19666
  %arraydecay325 = getelementptr inbounds [3 x float], [3 x float]* %dir_b324, i64 0, i64 0, !dbg !19664
  %263 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp304, align 8, !dbg !19667
  %e326 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %263, i32 0, i32 2, !dbg !19668
  %264 = load %struct.BMEdge*, %struct.BMEdge** %e326, align 8, !dbg !19668
  %265 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19669
  %call327 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %264, %struct.BMVert* %265), !dbg !19670
  %co328 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %call327, i32 0, i32 2, !dbg !19671
  %arraydecay329 = getelementptr inbounds [3 x float], [3 x float]* %co328, i64 0, i64 0, !dbg !19670
  %266 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19672
  %co330 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %266, i32 0, i32 2, !dbg !19673
  %arraydecay331 = getelementptr inbounds [3 x float], [3 x float]* %co330, i64 0, i64 0, !dbg !19672
  call void @sub_v3_v3v3(float* %arraydecay325, float* %arraydecay329, float* %arraydecay331), !dbg !19674
  br label %if.end332

if.end332:                                        ; preds = %if.else323, %if.then318
  br label %if.end333, !dbg !19675

if.end333:                                        ; preds = %if.end332, %if.end301
  %267 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19676
  %head334 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %267, i32 0, i32 0, !dbg !19676
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head334, i8 zeroext 16), !dbg !19676
  %268 = load %struct.BMVert*, %struct.BMVert** %v_prev, align 8, !dbg !19677
  %head335 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %268, i32 0, i32 0, !dbg !19677
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head335, i8 zeroext 16), !dbg !19677
  br label %do.end444, !dbg !19678

if.end336:                                        ; preds = %if.end253
  %269 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19679
  %cmp337 = icmp ne %struct.BMLoop* %269, null, !dbg !19680
  %conv338 = zext i1 %cmp337 to i32, !dbg !19680
  %conv339 = trunc i32 %conv338 to i8, !dbg !19681
  store i8 %conv339, i8* %l_a_ok_prev, align 1, !dbg !19682
  %270 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19683
  %cmp340 = icmp ne %struct.BMLoop* %270, null, !dbg !19684
  %conv341 = zext i1 %cmp340 to i32, !dbg !19684
  %conv342 = trunc i32 %conv341 to i8, !dbg !19685
  store i8 %conv342, i8* %l_b_ok_prev, align 1, !dbg !19686
  %271 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19687
  store %struct.BMLoop* %271, %struct.BMLoop** %l_a_prev, align 8, !dbg !19688
  %272 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19689
  store %struct.BMLoop* %272, %struct.BMLoop** %l_b_prev, align 8, !dbg !19690
  %273 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19691
  %tobool343 = icmp ne %struct.BMLoop* %273, null, !dbg !19691
  br i1 %tobool343, label %if.then344, label %if.else347, !dbg !19693

if.then344:                                       ; preds = %if.end336
  %274 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19694
  %275 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19696
  %276 = load %struct.BMEdge*, %struct.BMEdge** %e_prev, align 8, !dbg !19697
  %277 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19698
  %arraydecay345 = getelementptr inbounds [3 x float], [3 x float]* %vec_a, i64 0, i64 0, !dbg !19699
  %call346 = call %struct.BMLoop* @get_next_loop(%struct.BMVert* %274, %struct.BMLoop* %275, %struct.BMEdge* %276, %struct.BMEdge* %277, float* %arraydecay345), !dbg !19700
  store %struct.BMLoop* %call346, %struct.BMLoop** %l_a, align 8, !dbg !19701
  br label %if.end349, !dbg !19702

if.else347:                                       ; preds = %if.end336
  %arraydecay348 = getelementptr inbounds [3 x float], [3 x float]* %vec_a, i64 0, i64 0, !dbg !19703
  call void @zero_v3(float* %arraydecay348), !dbg !19705
  br label %if.end349

if.end349:                                        ; preds = %if.else347, %if.then344
  %278 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19706
  %tobool350 = icmp ne %struct.BMLoop* %278, null, !dbg !19706
  br i1 %tobool350, label %if.then351, label %if.else354, !dbg !19708

if.then351:                                       ; preds = %if.end349
  %279 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19709
  %280 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19711
  %281 = load %struct.BMEdge*, %struct.BMEdge** %e_prev, align 8, !dbg !19712
  %282 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19713
  %arraydecay352 = getelementptr inbounds [3 x float], [3 x float]* %vec_b, i64 0, i64 0, !dbg !19714
  %call353 = call %struct.BMLoop* @get_next_loop(%struct.BMVert* %279, %struct.BMLoop* %280, %struct.BMEdge* %281, %struct.BMEdge* %282, float* %arraydecay352), !dbg !19715
  store %struct.BMLoop* %call353, %struct.BMLoop** %l_b, align 8, !dbg !19716
  br label %if.end356, !dbg !19717

if.else354:                                       ; preds = %if.end349
  %arraydecay355 = getelementptr inbounds [3 x float], [3 x float]* %vec_b, i64 0, i64 0, !dbg !19718
  call void @zero_v3(float* %arraydecay355), !dbg !19720
  br label %if.end356

if.end356:                                        ; preds = %if.else354, %if.then351
  %283 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19721
  %tobool357 = icmp ne %struct.BMLoop* %283, null, !dbg !19721
  br i1 %tobool357, label %land.lhs.true358, label %if.else361, !dbg !19723

land.lhs.true358:                                 ; preds = %if.end356
  %284 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19724
  %tobool359 = icmp ne %struct.BMLoop* %284, null, !dbg !19724
  br i1 %tobool359, label %if.then360, label %if.else361, !dbg !19725

if.then360:                                       ; preds = %land.lhs.true358
  br label %if.end435, !dbg !19726

if.else361:                                       ; preds = %land.lhs.true358, %if.end356
  %285 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19728
  %tobool362 = icmp ne %struct.BMLoop* %285, null, !dbg !19728
  br i1 %tobool362, label %if.then365, label %lor.lhs.false363, !dbg !19731

lor.lhs.false363:                                 ; preds = %if.else361
  %286 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19732
  %tobool364 = icmp ne %struct.BMLoop* %286, null, !dbg !19732
  br i1 %tobool364, label %if.then365, label %if.else389, !dbg !19733

if.then365:                                       ; preds = %lor.lhs.false363, %if.else361
  %287 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19734
  %cmp366 = icmp eq %struct.BMLoop* %287, null, !dbg !19737
  br i1 %cmp366, label %land.lhs.true368, label %if.else376, !dbg !19738

land.lhs.true368:                                 ; preds = %if.then365
  %288 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19739
  %tobool369 = icmp ne %struct.BMLoop* %288, null, !dbg !19739
  br i1 %tobool369, label %land.lhs.true370, label %if.else376, !dbg !19740

land.lhs.true370:                                 ; preds = %land.lhs.true368
  %289 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19741
  %radial_next371 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %289, i32 0, i32 4, !dbg !19742
  %290 = load %struct.BMLoop*, %struct.BMLoop** %radial_next371, align 8, !dbg !19742
  %291 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19743
  %cmp372 = icmp ne %struct.BMLoop* %290, %291, !dbg !19744
  br i1 %cmp372, label %if.then374, label %if.else376, !dbg !19745

if.then374:                                       ; preds = %land.lhs.true370
  %292 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19746
  %radial_next375 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %292, i32 0, i32 4, !dbg !19747
  %293 = load %struct.BMLoop*, %struct.BMLoop** %radial_next375, align 8, !dbg !19747
  store %struct.BMLoop* %293, %struct.BMLoop** %l_a, align 8, !dbg !19748
  br label %if.end388, !dbg !19749

if.else376:                                       ; preds = %land.lhs.true370, %land.lhs.true368, %if.then365
  %294 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19750
  %cmp377 = icmp eq %struct.BMLoop* %294, null, !dbg !19752
  br i1 %cmp377, label %land.lhs.true379, label %if.end387, !dbg !19753

land.lhs.true379:                                 ; preds = %if.else376
  %295 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19754
  %tobool380 = icmp ne %struct.BMLoop* %295, null, !dbg !19754
  br i1 %tobool380, label %land.lhs.true381, label %if.end387, !dbg !19755

land.lhs.true381:                                 ; preds = %land.lhs.true379
  %296 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19756
  %radial_next382 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %296, i32 0, i32 4, !dbg !19757
  %297 = load %struct.BMLoop*, %struct.BMLoop** %radial_next382, align 8, !dbg !19757
  %298 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19758
  %cmp383 = icmp ne %struct.BMLoop* %297, %298, !dbg !19759
  br i1 %cmp383, label %if.then385, label %if.end387, !dbg !19760

if.then385:                                       ; preds = %land.lhs.true381
  %299 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19761
  %radial_next386 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %299, i32 0, i32 4, !dbg !19762
  %300 = load %struct.BMLoop*, %struct.BMLoop** %radial_next386, align 8, !dbg !19762
  store %struct.BMLoop* %300, %struct.BMLoop** %l_b, align 8, !dbg !19763
  br label %if.end387, !dbg !19764

if.end387:                                        ; preds = %if.then385, %land.lhs.true381, %land.lhs.true379, %if.else376
  br label %if.end388

if.end388:                                        ; preds = %if.end387, %if.then374
  br label %if.end420, !dbg !19765

if.else389:                                       ; preds = %lor.lhs.false363
  %301 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19766
  %l390 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %301, i32 0, i32 4, !dbg !19768
  %302 = load %struct.BMLoop*, %struct.BMLoop** %l390, align 8, !dbg !19768
  %cmp391 = icmp ne %struct.BMLoop* %302, null, !dbg !19769
  br i1 %cmp391, label %if.then393, label %if.end419, !dbg !19770

if.then393:                                       ; preds = %if.else389
  %303 = load i8, i8* %l_a_ok_prev, align 1, !dbg !19771
  %tobool394 = icmp ne i8 %303, 0, !dbg !19771
  br i1 %tobool394, label %if.then395, label %if.else405, !dbg !19774

if.then395:                                       ; preds = %if.then393
  %304 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19775
  %l396 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %304, i32 0, i32 4, !dbg !19777
  %305 = load %struct.BMLoop*, %struct.BMLoop** %l396, align 8, !dbg !19777
  store %struct.BMLoop* %305, %struct.BMLoop** %l_a, align 8, !dbg !19778
  %306 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19779
  %radial_next397 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %306, i32 0, i32 4, !dbg !19780
  %307 = load %struct.BMLoop*, %struct.BMLoop** %radial_next397, align 8, !dbg !19780
  %308 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19781
  %cmp398 = icmp ne %struct.BMLoop* %307, %308, !dbg !19782
  br i1 %cmp398, label %cond.true400, label %cond.false402, !dbg !19783

cond.true400:                                     ; preds = %if.then395
  %309 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19784
  %radial_next401 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %309, i32 0, i32 4, !dbg !19785
  %310 = load %struct.BMLoop*, %struct.BMLoop** %radial_next401, align 8, !dbg !19785
  br label %cond.end403, !dbg !19783

cond.false402:                                    ; preds = %if.then395
  br label %cond.end403, !dbg !19783

cond.end403:                                      ; preds = %cond.false402, %cond.true400
  %cond404 = phi %struct.BMLoop* [ %310, %cond.true400 ], [ null, %cond.false402 ], !dbg !19783
  store %struct.BMLoop* %cond404, %struct.BMLoop** %l_b, align 8, !dbg !19786
  br label %if.end418, !dbg !19787

if.else405:                                       ; preds = %if.then393
  %311 = load i8, i8* %l_b_ok_prev, align 1, !dbg !19788
  %tobool406 = icmp ne i8 %311, 0, !dbg !19788
  br i1 %tobool406, label %if.then407, label %if.end417, !dbg !19790

if.then407:                                       ; preds = %if.else405
  %312 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19791
  %l408 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %312, i32 0, i32 4, !dbg !19793
  %313 = load %struct.BMLoop*, %struct.BMLoop** %l408, align 8, !dbg !19793
  store %struct.BMLoop* %313, %struct.BMLoop** %l_b, align 8, !dbg !19794
  %314 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19795
  %radial_next409 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %314, i32 0, i32 4, !dbg !19796
  %315 = load %struct.BMLoop*, %struct.BMLoop** %radial_next409, align 8, !dbg !19796
  %316 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19797
  %cmp410 = icmp ne %struct.BMLoop* %315, %316, !dbg !19798
  br i1 %cmp410, label %cond.true412, label %cond.false414, !dbg !19799

cond.true412:                                     ; preds = %if.then407
  %317 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19800
  %radial_next413 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %317, i32 0, i32 4, !dbg !19801
  %318 = load %struct.BMLoop*, %struct.BMLoop** %radial_next413, align 8, !dbg !19801
  br label %cond.end415, !dbg !19799

cond.false414:                                    ; preds = %if.then407
  br label %cond.end415, !dbg !19799

cond.end415:                                      ; preds = %cond.false414, %cond.true412
  %cond416 = phi %struct.BMLoop* [ %318, %cond.true412 ], [ null, %cond.false414 ], !dbg !19799
  store %struct.BMLoop* %cond416, %struct.BMLoop** %l_a, align 8, !dbg !19802
  br label %if.end417, !dbg !19803

if.end417:                                        ; preds = %cond.end415, %if.else405
  br label %if.end418

if.end418:                                        ; preds = %if.end417, %cond.end403
  br label %if.end419, !dbg !19804

if.end419:                                        ; preds = %if.end418, %if.else389
  br label %if.end420

if.end420:                                        ; preds = %if.end419, %if.end388
  %319 = load i8, i8* %l_a_ok_prev, align 1, !dbg !19805
  %tobool421 = icmp ne i8 %319, 0, !dbg !19805
  br i1 %tobool421, label %if.end427, label %land.lhs.true422, !dbg !19807

land.lhs.true422:                                 ; preds = %if.end420
  %320 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19808
  %tobool423 = icmp ne %struct.BMLoop* %320, null, !dbg !19808
  br i1 %tobool423, label %if.then424, label %if.end427, !dbg !19809

if.then424:                                       ; preds = %land.lhs.true422
  %321 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19810
  %322 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19812
  %323 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19813
  %324 = load %struct.BMEdge*, %struct.BMEdge** %e_prev, align 8, !dbg !19814
  %arraydecay425 = getelementptr inbounds [3 x float], [3 x float]* %vec_a, i64 0, i64 0, !dbg !19815
  %call426 = call %struct.BMLoop* @get_next_loop(%struct.BMVert* %321, %struct.BMLoop* %322, %struct.BMEdge* %323, %struct.BMEdge* %324, float* %arraydecay425), !dbg !19816
  br label %if.end427, !dbg !19817

if.end427:                                        ; preds = %if.then424, %land.lhs.true422, %if.end420
  %325 = load i8, i8* %l_b_ok_prev, align 1, !dbg !19818
  %tobool428 = icmp ne i8 %325, 0, !dbg !19818
  br i1 %tobool428, label %if.end434, label %land.lhs.true429, !dbg !19820

land.lhs.true429:                                 ; preds = %if.end427
  %326 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19821
  %tobool430 = icmp ne %struct.BMLoop* %326, null, !dbg !19821
  br i1 %tobool430, label %if.then431, label %if.end434, !dbg !19822

if.then431:                                       ; preds = %land.lhs.true429
  %327 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19823
  %328 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19825
  %329 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19826
  %330 = load %struct.BMEdge*, %struct.BMEdge** %e_prev, align 8, !dbg !19827
  %arraydecay432 = getelementptr inbounds [3 x float], [3 x float]* %vec_b, i64 0, i64 0, !dbg !19828
  %call433 = call %struct.BMLoop* @get_next_loop(%struct.BMVert* %327, %struct.BMLoop* %328, %struct.BMEdge* %329, %struct.BMEdge* %330, float* %arraydecay432), !dbg !19829
  br label %if.end434, !dbg !19830

if.end434:                                        ; preds = %if.then431, %land.lhs.true429, %if.end427
  br label %if.end435

if.end435:                                        ; preds = %if.end434, %if.then360
  %331 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19831
  %head436 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %331, i32 0, i32 0, !dbg !19831
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head436, i8 zeroext 16), !dbg !19831
  %332 = load %struct.BMVert*, %struct.BMVert** %v_prev, align 8, !dbg !19832
  %head437 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %332, i32 0, i32 0, !dbg !19832
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head437, i8 zeroext 16), !dbg !19832
  br label %do.cond438, !dbg !19833

do.cond438:                                       ; preds = %if.end435
  %333 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19834
  %334 = load %struct.BMVert*, %struct.BMVert** %v_first, align 8, !dbg !19835
  %e439 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %334, i32 0, i32 4, !dbg !19836
  %335 = load %struct.BMEdge*, %struct.BMEdge** %e439, align 8, !dbg !19836
  %cmp440 = icmp ne %struct.BMEdge* %333, %335, !dbg !19837
  br i1 %cmp440, label %land.rhs, label %land.end, !dbg !19838

land.rhs:                                         ; preds = %do.cond438
  %336 = load %struct.BMLoop*, %struct.BMLoop** %l_a, align 8, !dbg !19839
  %tobool442 = icmp ne %struct.BMLoop* %336, null, !dbg !19839
  br i1 %tobool442, label %lor.end, label %lor.rhs, !dbg !19840

lor.rhs:                                          ; preds = %land.rhs
  %337 = load %struct.BMLoop*, %struct.BMLoop** %l_b, align 8, !dbg !19841
  %tobool443 = icmp ne %struct.BMLoop* %337, null, !dbg !19840
  br label %lor.end, !dbg !19840

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %338 = phi i1 [ true, %land.rhs ], [ %tobool443, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %do.cond438
  %339 = phi i1 [ false, %do.cond438 ], [ %338, %lor.end ], !dbg !19842
  br i1 %339, label %do.body210, label %do.end444, !dbg !19833, !llvm.loop !19843

do.end444:                                        ; preds = %land.end, %if.end333
  %340 = load i32, i32* %loop_nr, align 4, !dbg !19845
  %inc445 = add nsw i32 %340, 1, !dbg !19845
  store i32 %inc445, i32* %loop_nr, align 4, !dbg !19845
  br label %while.body, !dbg !19298, !llvm.loop !19336

while.end:                                        ; preds = %if.then120
  %341 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !19846
  %tobool446 = icmp ne %struct.View3D* %341, null, !dbg !19846
  br i1 %tobool446, label %land.lhs.true447, label %land.end456, !dbg !19847

land.lhs.true447:                                 ; preds = %while.end
  %342 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !19848
  %obedit448 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %342, i32 0, i32 63, !dbg !19849
  %343 = load %struct.Object*, %struct.Object** %obedit448, align 8, !dbg !19849
  %dt = getelementptr inbounds %struct.Object, %struct.Object* %343, i32 0, i32 87, !dbg !19850
  %344 = load i8, i8* %dt, align 2, !dbg !19850
  %conv449 = zext i8 %344 to i32, !dbg !19848
  %cmp450 = icmp sgt i32 %conv449, 2, !dbg !19851
  br i1 %cmp450, label %land.rhs452, label %land.end456, !dbg !19852

land.rhs452:                                      ; preds = %land.lhs.true447
  %345 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !19853
  %drawtype = getelementptr inbounds %struct.View3D, %struct.View3D* %345, i32 0, i32 24, !dbg !19854
  %346 = load i16, i16* %drawtype, align 8, !dbg !19854
  %conv453 = sext i16 %346 to i32, !dbg !19853
  %cmp454 = icmp sgt i32 %conv453, 2, !dbg !19855
  br label %land.end456

land.end456:                                      ; preds = %land.rhs452, %land.lhs.true447, %while.end
  %347 = phi i1 [ false, %land.lhs.true447 ], [ false, %while.end ], [ %cmp454, %land.rhs452 ], !dbg !19856
  %land.ext = zext i1 %347 to i32, !dbg !19852
  store i32 %land.ext, i32* %use_btree_disp, align 4, !dbg !19857
  %348 = load i32, i32* %use_btree_disp, align 4, !dbg !19858
  %tobool457 = icmp ne i32 %348, 0, !dbg !19858
  br i1 %tobool457, label %if.then458, label %if.else460, !dbg !19860

if.then458:                                       ; preds = %land.end456
  %349 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !19861
  %call459 = call %struct.BMBVHTree* @BKE_bmbvh_new_from_editmesh(%struct.BMEditMesh* %349, i32 4, [3 x float]* null, i8 zeroext 0), !dbg !19863
  store %struct.BMBVHTree* %call459, %struct.BMBVHTree** %btree, align 8, !dbg !19864
  br label %if.end461, !dbg !19865

if.else460:                                       ; preds = %land.end456
  store %struct.BMBVHTree* null, %struct.BMBVHTree** %btree, align 8, !dbg !19866
  br label %if.end461

if.end461:                                        ; preds = %if.else460, %if.then458
  %350 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !19868
  %351 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !19869
  %sv462 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %351, i32 0, i32 0, !dbg !19870
  store %struct.TransDataEdgeSlideVert* %350, %struct.TransDataEdgeSlideVert** %sv462, align 8, !dbg !19871
  %352 = load i32, i32* %sv_tot, align 4, !dbg !19872
  %353 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !19873
  %totsv = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %353, i32 0, i32 1, !dbg !19874
  store i32 %352, i32* %totsv, align 8, !dbg !19875
  %arraydecay463 = getelementptr inbounds [3 x float], [3 x float]* %mval_dir, i64 0, i64 0, !dbg !19876
  call void @zero_v3(float* %arraydecay463), !dbg !19877
  store float -1.000000e+00, float* %maxdist, align 4, !dbg !19878
  %354 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !19879
  %355 = load i32, i32* %loop_nr, align 4, !dbg !19880
  %conv464 = sext i32 %355 to i64, !dbg !19880
  %mul465 = mul i64 12, %conv464, !dbg !19881
  %call466 = call i8* %354(i64 %mul465, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.136, i64 0, i64 0)), !dbg !19879
  %356 = bitcast i8* %call466 to [3 x float]*, !dbg !19879
  store [3 x float]* %356, [3 x float]** %loop_dir, align 8, !dbg !19882
  %357 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !19883
  %358 = load i32, i32* %loop_nr, align 4, !dbg !19884
  %conv467 = sext i32 %358 to i64, !dbg !19884
  %mul468 = mul i64 4, %conv467, !dbg !19885
  %call469 = call i8* %357(i64 %mul468, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.137, i64 0, i64 0)), !dbg !19883
  %359 = bitcast i8* %call469 to float*, !dbg !19883
  store float* %359, float** %loop_maxdist, align 8, !dbg !19886
  %360 = load float*, float** %loop_maxdist, align 8, !dbg !19887
  %361 = load i32, i32* %loop_nr, align 4, !dbg !19888
  call void @fill_vn_fl(float* %360, i32 %361, float -1.000000e+00), !dbg !19889
  %362 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !19890
  %call470 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %362, i8 zeroext 2, i8* null), !dbg !19890
  %363 = bitcast i8* %call470 to %struct.BMEdge*, !dbg !19890
  store %struct.BMEdge* %363, %struct.BMEdge** %e, align 8, !dbg !19890
  br label %for.cond471, !dbg !19890

for.cond471:                                      ; preds = %for.inc604, %if.end461
  %364 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19892
  %tobool472 = icmp ne %struct.BMEdge* %364, null, !dbg !19890
  br i1 %tobool472, label %for.body473, label %for.end606, !dbg !19890

for.body473:                                      ; preds = %for.cond471
  %365 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19894
  %head474 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %365, i32 0, i32 0, !dbg !19894
  %call475 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head474, i8 zeroext 1), !dbg !19894
  %tobool476 = icmp ne i8 %call475, 0, !dbg !19894
  br i1 %tobool476, label %if.then477, label %if.end603, !dbg !19897

if.then477:                                       ; preds = %for.body473
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter2478, metadata !19898, metadata !DIExpression()), !dbg !19900
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e2, metadata !19901, metadata !DIExpression()), !dbg !19902
  call void @llvm.dbg.declare(metadata float* %d, metadata !19903, metadata !DIExpression()), !dbg !19904
  store i32 0, i32* %i, align 4, !dbg !19905
  br label %for.cond479, !dbg !19907

for.cond479:                                      ; preds = %for.inc600, %if.then477
  %366 = load i32, i32* %i, align 4, !dbg !19908
  %cmp480 = icmp slt i32 %366, 2, !dbg !19910
  br i1 %cmp480, label %for.body482, label %for.end602, !dbg !19911

for.body482:                                      ; preds = %for.cond479
  %367 = load i32, i32* %i, align 4, !dbg !19912
  %tobool483 = icmp ne i32 %367, 0, !dbg !19912
  br i1 %tobool483, label %cond.true484, label %cond.false485, !dbg !19912

cond.true484:                                     ; preds = %for.body482
  %368 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19914
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %368, i32 0, i32 2, !dbg !19915
  %369 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !19915
  br label %cond.end486, !dbg !19912

cond.false485:                                    ; preds = %for.body482
  %370 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !19916
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %370, i32 0, i32 3, !dbg !19917
  %371 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !19917
  br label %cond.end486, !dbg !19912

cond.end486:                                      ; preds = %cond.false485, %cond.true484
  %cond487 = phi %struct.BMVert* [ %369, %cond.true484 ], [ %371, %cond.false485 ], !dbg !19912
  store %struct.BMVert* %cond487, %struct.BMVert** %v, align 8, !dbg !19918
  %372 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19919
  %373 = bitcast %struct.BMVert* %372 to i8*, !dbg !19919
  %call488 = call i8* @BM_iter_new(%struct.BMIter* %iter2478, %struct.BMesh* null, i8 zeroext 4, i8* %373), !dbg !19919
  %374 = bitcast i8* %call488 to %struct.BMEdge*, !dbg !19919
  store %struct.BMEdge* %374, %struct.BMEdge** %e2, align 8, !dbg !19919
  br label %for.cond489, !dbg !19919

for.cond489:                                      ; preds = %for.inc597, %cond.end486
  %375 = load %struct.BMEdge*, %struct.BMEdge** %e2, align 8, !dbg !19921
  %tobool490 = icmp ne %struct.BMEdge* %375, null, !dbg !19919
  br i1 %tobool490, label %for.body491, label %for.end599, !dbg !19919

for.body491:                                      ; preds = %for.cond489
  call void @llvm.dbg.declare(metadata [3 x float]* %sco_a, metadata !19923, metadata !DIExpression()), !dbg !19925
  call void @llvm.dbg.declare(metadata [3 x float]* %sco_b, metadata !19926, metadata !DIExpression()), !dbg !19927
  %376 = load %struct.BMEdge*, %struct.BMEdge** %e2, align 8, !dbg !19928
  %head492 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %376, i32 0, i32 0, !dbg !19928
  %call493 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head492, i8 zeroext 1), !dbg !19928
  %tobool494 = icmp ne i8 %call493, 0, !dbg !19928
  br i1 %tobool494, label %if.then495, label %if.end496, !dbg !19930

if.then495:                                       ; preds = %for.body491
  br label %for.inc597, !dbg !19931

if.end496:                                        ; preds = %for.body491
  %377 = load i32, i32* %use_btree_disp, align 4, !dbg !19932
  %tobool497 = icmp ne i32 %377, 0, !dbg !19932
  br i1 %tobool497, label %land.lhs.true498, label %if.end503, !dbg !19934

land.lhs.true498:                                 ; preds = %if.end496
  %378 = load %struct.BMBVHTree*, %struct.BMBVHTree** %btree, align 8, !dbg !19935
  %379 = load %struct.BMEdge*, %struct.BMEdge** %e2, align 8, !dbg !19936
  %380 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !19937
  %381 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !19938
  %382 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !19939
  %obedit499 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %382, i32 0, i32 63, !dbg !19940
  %383 = load %struct.Object*, %struct.Object** %obedit499, align 8, !dbg !19940
  %call500 = call zeroext i8 @BMBVH_EdgeVisible(%struct.BMBVHTree* %378, %struct.BMEdge* %379, %struct.ARegion* %380, %struct.View3D* %381, %struct.Object* %383), !dbg !19941
  %tobool501 = icmp ne i8 %call500, 0, !dbg !19941
  br i1 %tobool501, label %if.end503, label %if.then502, !dbg !19942

if.then502:                                       ; preds = %land.lhs.true498
  br label %for.inc597, !dbg !19943

if.end503:                                        ; preds = %land.lhs.true498, %if.end496
  %384 = load i32*, i32** %sv_table, align 8, !dbg !19945
  %385 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19946
  %head504 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %385, i32 0, i32 0, !dbg !19946
  %call505 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head504), !dbg !19946
  %idxprom506 = sext i32 %call505 to i64, !dbg !19945
  %arrayidx507 = getelementptr inbounds i32, i32* %384, i64 %idxprom506, !dbg !19945
  %386 = load i32, i32* %arrayidx507, align 4, !dbg !19945
  store i32 %386, i32* %j, align 4, !dbg !19947
  %387 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !19948
  %388 = load i32, i32* %j, align 4, !dbg !19950
  %idxprom508 = sext i32 %388 to i64, !dbg !19948
  %arrayidx509 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %387, i64 %idxprom508, !dbg !19948
  %v_b510 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %arrayidx509, i32 0, i32 1, !dbg !19951
  %389 = load %struct.BMVert*, %struct.BMVert** %v_b510, align 8, !dbg !19951
  %tobool511 = icmp ne %struct.BMVert* %389, null, !dbg !19948
  br i1 %tobool511, label %if.then512, label %if.else520, !dbg !19952

if.then512:                                       ; preds = %if.end503
  %390 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !19953
  %391 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !19955
  %392 = load i32, i32* %j, align 4, !dbg !19956
  %idxprom513 = sext i32 %392 to i64, !dbg !19955
  %arrayidx514 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %391, i64 %idxprom513, !dbg !19955
  %v_b515 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %arrayidx514, i32 0, i32 1, !dbg !19957
  %393 = load %struct.BMVert*, %struct.BMVert** %v_b515, align 8, !dbg !19957
  %co516 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %393, i32 0, i32 2, !dbg !19958
  %arraydecay517 = getelementptr inbounds [3 x float], [3 x float]* %co516, i64 0, i64 0, !dbg !19955
  %arraydecay518 = getelementptr inbounds [3 x float], [3 x float]* %sco_b, i64 0, i64 0, !dbg !19959
  %arraydecay519 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat, i64 0, i64 0, !dbg !19960
  call void @ED_view3d_project_float_v3_m4(%struct.ARegion* %390, float* %arraydecay517, float* %arraydecay518, [4 x float]* %arraydecay519), !dbg !19961
  br label %if.end531, !dbg !19962

if.else520:                                       ; preds = %if.end503
  %arraydecay521 = getelementptr inbounds [3 x float], [3 x float]* %sco_b, i64 0, i64 0, !dbg !19963
  %394 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19965
  %co522 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %394, i32 0, i32 2, !dbg !19966
  %arraydecay523 = getelementptr inbounds [3 x float], [3 x float]* %co522, i64 0, i64 0, !dbg !19965
  %395 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !19967
  %396 = load i32, i32* %j, align 4, !dbg !19968
  %idxprom524 = sext i32 %396 to i64, !dbg !19967
  %arrayidx525 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %395, i64 %idxprom524, !dbg !19967
  %dir_b526 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %arrayidx525, i32 0, i32 6, !dbg !19969
  %arraydecay527 = getelementptr inbounds [3 x float], [3 x float]* %dir_b526, i64 0, i64 0, !dbg !19967
  call void @add_v3_v3v3(float* %arraydecay521, float* %arraydecay523, float* %arraydecay527), !dbg !19970
  %397 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !19971
  %arraydecay528 = getelementptr inbounds [3 x float], [3 x float]* %sco_b, i64 0, i64 0, !dbg !19972
  %arraydecay529 = getelementptr inbounds [3 x float], [3 x float]* %sco_b, i64 0, i64 0, !dbg !19973
  %arraydecay530 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat, i64 0, i64 0, !dbg !19974
  call void @ED_view3d_project_float_v3_m4(%struct.ARegion* %397, float* %arraydecay528, float* %arraydecay529, [4 x float]* %arraydecay530), !dbg !19975
  br label %if.end531

if.end531:                                        ; preds = %if.else520, %if.then512
  %398 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !19976
  %399 = load i32, i32* %j, align 4, !dbg !19978
  %idxprom532 = sext i32 %399 to i64, !dbg !19976
  %arrayidx533 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %398, i64 %idxprom532, !dbg !19976
  %v_a534 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %arrayidx533, i32 0, i32 0, !dbg !19979
  %400 = load %struct.BMVert*, %struct.BMVert** %v_a534, align 8, !dbg !19979
  %tobool535 = icmp ne %struct.BMVert* %400, null, !dbg !19976
  br i1 %tobool535, label %if.then536, label %if.else544, !dbg !19980

if.then536:                                       ; preds = %if.end531
  %401 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !19981
  %402 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !19983
  %403 = load i32, i32* %j, align 4, !dbg !19984
  %idxprom537 = sext i32 %403 to i64, !dbg !19983
  %arrayidx538 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %402, i64 %idxprom537, !dbg !19983
  %v_a539 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %arrayidx538, i32 0, i32 0, !dbg !19985
  %404 = load %struct.BMVert*, %struct.BMVert** %v_a539, align 8, !dbg !19985
  %co540 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %404, i32 0, i32 2, !dbg !19986
  %arraydecay541 = getelementptr inbounds [3 x float], [3 x float]* %co540, i64 0, i64 0, !dbg !19983
  %arraydecay542 = getelementptr inbounds [3 x float], [3 x float]* %sco_a, i64 0, i64 0, !dbg !19987
  %arraydecay543 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat, i64 0, i64 0, !dbg !19988
  call void @ED_view3d_project_float_v3_m4(%struct.ARegion* %401, float* %arraydecay541, float* %arraydecay542, [4 x float]* %arraydecay543), !dbg !19989
  br label %if.end555, !dbg !19990

if.else544:                                       ; preds = %if.end531
  %arraydecay545 = getelementptr inbounds [3 x float], [3 x float]* %sco_a, i64 0, i64 0, !dbg !19991
  %405 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !19993
  %co546 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %405, i32 0, i32 2, !dbg !19994
  %arraydecay547 = getelementptr inbounds [3 x float], [3 x float]* %co546, i64 0, i64 0, !dbg !19993
  %406 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !19995
  %407 = load i32, i32* %j, align 4, !dbg !19996
  %idxprom548 = sext i32 %407 to i64, !dbg !19995
  %arrayidx549 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %406, i64 %idxprom548, !dbg !19995
  %dir_a550 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %arrayidx549, i32 0, i32 5, !dbg !19997
  %arraydecay551 = getelementptr inbounds [3 x float], [3 x float]* %dir_a550, i64 0, i64 0, !dbg !19995
  call void @add_v3_v3v3(float* %arraydecay545, float* %arraydecay547, float* %arraydecay551), !dbg !19998
  %408 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !19999
  %arraydecay552 = getelementptr inbounds [3 x float], [3 x float]* %sco_a, i64 0, i64 0, !dbg !20000
  %arraydecay553 = getelementptr inbounds [3 x float], [3 x float]* %sco_a, i64 0, i64 0, !dbg !20001
  %arraydecay554 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat, i64 0, i64 0, !dbg !20002
  call void @ED_view3d_project_float_v3_m4(%struct.ARegion* %408, float* %arraydecay552, float* %arraydecay553, [4 x float]* %arraydecay554), !dbg !20003
  br label %if.end555

if.end555:                                        ; preds = %if.else544, %if.then536
  %arraydecay556 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !20004
  %arraydecay557 = getelementptr inbounds [3 x float], [3 x float]* %sco_b, i64 0, i64 0, !dbg !20005
  %arraydecay558 = getelementptr inbounds [3 x float], [3 x float]* %sco_a, i64 0, i64 0, !dbg !20006
  %call559 = call float @dist_to_line_segment_v2(float* %arraydecay556, float* %arraydecay557, float* %arraydecay558), !dbg !20007
  store float %call559, float* %d, align 4, !dbg !20008
  %409 = load float, float* %maxdist, align 4, !dbg !20009
  %cmp560 = fcmp oeq float %409, -1.000000e+00, !dbg !20011
  br i1 %cmp560, label %if.then571, label %lor.lhs.false562, !dbg !20012

lor.lhs.false562:                                 ; preds = %if.end555
  %410 = load float, float* %d, align 4, !dbg !20013
  %411 = load float, float* %maxdist, align 4, !dbg !20014
  %cmp563 = fcmp olt float %410, %411, !dbg !20015
  br i1 %cmp563, label %land.lhs.true565, label %if.end575, !dbg !20016

land.lhs.true565:                                 ; preds = %lor.lhs.false562
  %arraydecay566 = getelementptr inbounds [3 x float], [3 x float]* %sco_b, i64 0, i64 0, !dbg !20017
  %arraydecay567 = getelementptr inbounds [3 x float], [3 x float]* %sco_a, i64 0, i64 0, !dbg !20018
  %call568 = call float @len_squared_v2v2(float* %arraydecay566, float* %arraydecay567), !dbg !20019
  %cmp569 = fcmp ogt float %call568, 0x3FB99999A0000000, !dbg !20020
  br i1 %cmp569, label %if.then571, label %if.end575, !dbg !20021

if.then571:                                       ; preds = %land.lhs.true565, %if.end555
  %412 = load float, float* %d, align 4, !dbg !20022
  store float %412, float* %maxdist, align 4, !dbg !20024
  %arraydecay572 = getelementptr inbounds [3 x float], [3 x float]* %mval_dir, i64 0, i64 0, !dbg !20025
  %arraydecay573 = getelementptr inbounds [3 x float], [3 x float]* %sco_b, i64 0, i64 0, !dbg !20026
  %arraydecay574 = getelementptr inbounds [3 x float], [3 x float]* %sco_a, i64 0, i64 0, !dbg !20027
  call void @sub_v3_v3v3(float* %arraydecay572, float* %arraydecay573, float* %arraydecay574), !dbg !20028
  br label %if.end575, !dbg !20029

if.end575:                                        ; preds = %if.then571, %land.lhs.true565, %lor.lhs.false562
  %413 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !20030
  %414 = load i32, i32* %j, align 4, !dbg !20031
  %idxprom576 = sext i32 %414 to i64, !dbg !20030
  %arrayidx577 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %413, i64 %idxprom576, !dbg !20030
  %loop_nr578 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %arrayidx577, i32 0, i32 7, !dbg !20032
  %415 = load i32, i32* %loop_nr578, align 8, !dbg !20032
  store i32 %415, i32* %l_nr, align 4, !dbg !20033
  %416 = load float*, float** %loop_maxdist, align 8, !dbg !20034
  %417 = load i32, i32* %l_nr, align 4, !dbg !20036
  %idxprom579 = sext i32 %417 to i64, !dbg !20034
  %arrayidx580 = getelementptr inbounds float, float* %416, i64 %idxprom579, !dbg !20034
  %418 = load float, float* %arrayidx580, align 4, !dbg !20034
  %cmp581 = fcmp oeq float %418, -1.000000e+00, !dbg !20037
  br i1 %cmp581, label %if.then588, label %lor.lhs.false583, !dbg !20038

lor.lhs.false583:                                 ; preds = %if.end575
  %419 = load float, float* %d, align 4, !dbg !20039
  %420 = load float*, float** %loop_maxdist, align 8, !dbg !20040
  %421 = load i32, i32* %l_nr, align 4, !dbg !20041
  %idxprom584 = sext i32 %421 to i64, !dbg !20040
  %arrayidx585 = getelementptr inbounds float, float* %420, i64 %idxprom584, !dbg !20040
  %422 = load float, float* %arrayidx585, align 4, !dbg !20040
  %cmp586 = fcmp olt float %419, %422, !dbg !20042
  br i1 %cmp586, label %if.then588, label %if.end596, !dbg !20043

if.then588:                                       ; preds = %lor.lhs.false583, %if.end575
  %423 = load float, float* %d, align 4, !dbg !20044
  %424 = load float*, float** %loop_maxdist, align 8, !dbg !20046
  %425 = load i32, i32* %l_nr, align 4, !dbg !20047
  %idxprom589 = sext i32 %425 to i64, !dbg !20046
  %arrayidx590 = getelementptr inbounds float, float* %424, i64 %idxprom589, !dbg !20046
  store float %423, float* %arrayidx590, align 4, !dbg !20048
  %426 = load [3 x float]*, [3 x float]** %loop_dir, align 8, !dbg !20049
  %427 = load i32, i32* %l_nr, align 4, !dbg !20050
  %idxprom591 = sext i32 %427 to i64, !dbg !20049
  %arrayidx592 = getelementptr inbounds [3 x float], [3 x float]* %426, i64 %idxprom591, !dbg !20049
  %arraydecay593 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx592, i64 0, i64 0, !dbg !20049
  %arraydecay594 = getelementptr inbounds [3 x float], [3 x float]* %sco_b, i64 0, i64 0, !dbg !20051
  %arraydecay595 = getelementptr inbounds [3 x float], [3 x float]* %sco_a, i64 0, i64 0, !dbg !20052
  call void @sub_v3_v3v3(float* %arraydecay593, float* %arraydecay594, float* %arraydecay595), !dbg !20053
  br label %if.end596, !dbg !20054

if.end596:                                        ; preds = %if.then588, %lor.lhs.false583
  br label %for.inc597, !dbg !20055

for.inc597:                                       ; preds = %if.end596, %if.then502, %if.then495
  %call598 = call i8* @BM_iter_step(%struct.BMIter* %iter2478), !dbg !19921
  %428 = bitcast i8* %call598 to %struct.BMEdge*, !dbg !19921
  store %struct.BMEdge* %428, %struct.BMEdge** %e2, align 8, !dbg !19921
  br label %for.cond489, !dbg !19921, !llvm.loop !20056

for.end599:                                       ; preds = %for.cond489
  br label %for.inc600, !dbg !20058

for.inc600:                                       ; preds = %for.end599
  %429 = load i32, i32* %i, align 4, !dbg !20059
  %inc601 = add nsw i32 %429, 1, !dbg !20059
  store i32 %inc601, i32* %i, align 4, !dbg !20059
  br label %for.cond479, !dbg !20060, !llvm.loop !20061

for.end602:                                       ; preds = %for.cond479
  br label %if.end603, !dbg !20063

if.end603:                                        ; preds = %for.end602, %for.body473
  br label %for.inc604, !dbg !20064

for.inc604:                                       ; preds = %if.end603
  %call605 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !19892
  %430 = bitcast i8* %call605 to %struct.BMEdge*, !dbg !19892
  store %struct.BMEdge* %430, %struct.BMEdge** %e, align 8, !dbg !19892
  br label %for.cond471, !dbg !19892, !llvm.loop !20065

for.end606:                                       ; preds = %for.cond471
  %arraydecay607 = getelementptr inbounds [3 x float], [3 x float]* %mval_dir, i64 0, i64 0, !dbg !20067
  %call608 = call float @len_squared_v2(float* %arraydecay607), !dbg !20067
  %cmp609 = fcmp olt float %call608, 0x3FB99999A0000000, !dbg !20067
  br i1 %cmp609, label %if.then611, label %if.end614, !dbg !20069

if.then611:                                       ; preds = %for.end606
  %arrayidx612 = getelementptr inbounds [3 x float], [3 x float]* %mval_dir, i64 0, i64 0, !dbg !20070
  store float 0.000000e+00, float* %arrayidx612, align 4, !dbg !20072
  %arrayidx613 = getelementptr inbounds [3 x float], [3 x float]* %mval_dir, i64 0, i64 1, !dbg !20073
  store float 1.000000e+02, float* %arrayidx613, align 4, !dbg !20074
  br label %if.end614, !dbg !20075

if.end614:                                        ; preds = %if.then611, %for.end606
  %431 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !20076
  call void @bmesh_edit_begin(%struct.BMesh* %431, i32 1), !dbg !20077
  %432 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !20078
  %use_origfaces615 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %432, i32 0, i32 6, !dbg !20080
  %433 = load i8, i8* %use_origfaces615, align 8, !dbg !20080
  %tobool616 = icmp ne i8 %433, 0, !dbg !20078
  br i1 %tobool616, label %if.then617, label %if.end621, !dbg !20081

if.then617:                                       ; preds = %if.end614
  %call618 = call %struct.GHash* @BLI_ghash_ptr_new(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.createEdgeSlideVerts, i64 0, i64 0)), !dbg !20082
  %434 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !20084
  %origfaces = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %434, i32 0, i32 2, !dbg !20085
  store %struct.GHash* %call618, %struct.GHash** %origfaces, align 8, !dbg !20086
  %call619 = call %struct.BMesh* @BM_mesh_create(%struct.BMAllocTemplate* @bm_mesh_allocsize_default), !dbg !20087
  %435 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !20088
  %bm_origfaces = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %435, i32 0, i32 7, !dbg !20089
  store %struct.BMesh* %call619, %struct.BMesh** %bm_origfaces, align 8, !dbg !20090
  %436 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !20091
  %bm_origfaces620 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %436, i32 0, i32 7, !dbg !20092
  %437 = load %struct.BMesh*, %struct.BMesh** %bm_origfaces620, align 8, !dbg !20092
  %438 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !20093
  call void @BM_mesh_copy_init_customdata(%struct.BMesh* %437, %struct.BMesh* %438, %struct.BMAllocTemplate* null), !dbg !20094
  br label %if.end621, !dbg !20095

if.end621:                                        ; preds = %if.then617, %if.end614
  %439 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !20096
  %sv622 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %439, i32 0, i32 0, !dbg !20097
  %440 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv622, align 8, !dbg !20097
  store %struct.TransDataEdgeSlideVert* %440, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !20098
  store i32 0, i32* %i, align 4, !dbg !20099
  br label %for.cond623, !dbg !20101

for.cond623:                                      ; preds = %for.inc666, %if.end621
  %441 = load i32, i32* %i, align 4, !dbg !20102
  %442 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !20104
  %totsv624 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %442, i32 0, i32 1, !dbg !20105
  %443 = load i32, i32* %totsv624, align 8, !dbg !20105
  %cmp625 = icmp slt i32 %441, %443, !dbg !20106
  br i1 %cmp625, label %for.body627, label %for.end668, !dbg !20107

for.body627:                                      ; preds = %for.cond623
  call void @llvm.dbg.declare(metadata %struct.BMIter* %fiter, metadata !20108, metadata !DIExpression()), !dbg !20110
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !20111, metadata !DIExpression()), !dbg !20112
  %444 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !20113
  %use_origfaces628 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %444, i32 0, i32 6, !dbg !20115
  %445 = load i8, i8* %use_origfaces628, align 8, !dbg !20115
  %tobool629 = icmp ne i8 %445, 0, !dbg !20113
  br i1 %tobool629, label %if.then630, label %if.end647, !dbg !20116

if.then630:                                       ; preds = %for.body627
  %446 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !20117
  %v631 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %446, i32 0, i32 2, !dbg !20117
  %447 = load %struct.BMVert*, %struct.BMVert** %v631, align 8, !dbg !20117
  %448 = bitcast %struct.BMVert* %447 to i8*, !dbg !20117
  %call632 = call i8* @BM_iter_new(%struct.BMIter* %fiter, %struct.BMesh* null, i8 zeroext 5, i8* %448), !dbg !20117
  %449 = bitcast i8* %call632 to %struct.BMFace*, !dbg !20117
  store %struct.BMFace* %449, %struct.BMFace** %f, align 8, !dbg !20117
  br label %for.cond633, !dbg !20117

for.cond633:                                      ; preds = %for.inc644, %if.then630
  %450 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !20120
  %tobool634 = icmp ne %struct.BMFace* %450, null, !dbg !20117
  br i1 %tobool634, label %for.body635, label %for.end646, !dbg !20117

for.body635:                                      ; preds = %for.cond633
  %451 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !20122
  %origfaces636 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %451, i32 0, i32 2, !dbg !20125
  %452 = load %struct.GHash*, %struct.GHash** %origfaces636, align 8, !dbg !20125
  %453 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !20126
  %454 = bitcast %struct.BMFace* %453 to i8*, !dbg !20126
  %call637 = call zeroext i8 @BLI_ghash_haskey(%struct.GHash* %452, i8* %454), !dbg !20127
  %tobool638 = icmp ne i8 %call637, 0, !dbg !20127
  br i1 %tobool638, label %if.end643, label %if.then639, !dbg !20128

if.then639:                                       ; preds = %for.body635
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f_copy, metadata !20129, metadata !DIExpression()), !dbg !20131
  %455 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !20132
  %bm_origfaces640 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %455, i32 0, i32 7, !dbg !20133
  %456 = load %struct.BMesh*, %struct.BMesh** %bm_origfaces640, align 8, !dbg !20133
  %457 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !20134
  %458 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !20135
  %call641 = call %struct.BMFace* @BM_face_copy(%struct.BMesh* %456, %struct.BMesh* %457, %struct.BMFace* %458, i8 zeroext 1, i8 zeroext 1), !dbg !20136
  store %struct.BMFace* %call641, %struct.BMFace** %f_copy, align 8, !dbg !20131
  %459 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !20137
  %origfaces642 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %459, i32 0, i32 2, !dbg !20138
  %460 = load %struct.GHash*, %struct.GHash** %origfaces642, align 8, !dbg !20138
  %461 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !20139
  %462 = bitcast %struct.BMFace* %461 to i8*, !dbg !20139
  %463 = load %struct.BMFace*, %struct.BMFace** %f_copy, align 8, !dbg !20140
  %464 = bitcast %struct.BMFace* %463 to i8*, !dbg !20140
  call void @BLI_ghash_insert(%struct.GHash* %460, i8* %462, i8* %464), !dbg !20141
  br label %if.end643, !dbg !20142

if.end643:                                        ; preds = %if.then639, %for.body635
  br label %for.inc644, !dbg !20143

for.inc644:                                       ; preds = %if.end643
  %call645 = call i8* @BM_iter_step(%struct.BMIter* %fiter), !dbg !20120
  %465 = bitcast i8* %call645 to %struct.BMFace*, !dbg !20120
  store %struct.BMFace* %465, %struct.BMFace** %f, align 8, !dbg !20120
  br label %for.cond633, !dbg !20120, !llvm.loop !20144

for.end646:                                       ; preds = %for.cond633
  br label %if.end647, !dbg !20146

if.end647:                                        ; preds = %for.end646, %for.body627
  %466 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !20147
  %loop_nr648 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %466, i32 0, i32 7, !dbg !20148
  %467 = load i32, i32* %loop_nr648, align 8, !dbg !20148
  store i32 %467, i32* %l_nr, align 4, !dbg !20149
  %468 = load [3 x float]*, [3 x float]** %loop_dir, align 8, !dbg !20150
  %469 = load i32, i32* %l_nr, align 4, !dbg !20152
  %idxprom649 = sext i32 %469 to i64, !dbg !20150
  %arrayidx650 = getelementptr inbounds [3 x float], [3 x float]* %468, i64 %idxprom649, !dbg !20150
  %arraydecay651 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx650, i64 0, i64 0, !dbg !20150
  %arraydecay652 = getelementptr inbounds [3 x float], [3 x float]* %mval_dir, i64 0, i64 0, !dbg !20153
  %call653 = call float @dot_v3v3(float* %arraydecay651, float* %arraydecay652), !dbg !20154
  %cmp654 = fcmp olt float %call653, 0.000000e+00, !dbg !20155
  br i1 %cmp654, label %if.then656, label %if.end665, !dbg !20156

if.then656:                                       ; preds = %if.end647
  %470 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !20157
  %dir_a657 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %470, i32 0, i32 5, !dbg !20159
  %arraydecay658 = getelementptr inbounds [3 x float], [3 x float]* %dir_a657, i64 0, i64 0, !dbg !20157
  %471 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !20160
  %dir_b659 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %471, i32 0, i32 6, !dbg !20161
  %arraydecay660 = getelementptr inbounds [3 x float], [3 x float]* %dir_b659, i64 0, i64 0, !dbg !20160
  call void @swap_v3_v3(float* %arraydecay658, float* %arraydecay660), !dbg !20162
  call void @llvm.dbg.declare(metadata %struct.BMVert** %sw_ap, metadata !20163, metadata !DIExpression()), !dbg !20165
  %472 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !20165
  %v_a661 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %472, i32 0, i32 0, !dbg !20165
  %473 = load %struct.BMVert*, %struct.BMVert** %v_a661, align 8, !dbg !20165
  store %struct.BMVert* %473, %struct.BMVert** %sw_ap, align 8, !dbg !20165
  %474 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !20165
  %v_b662 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %474, i32 0, i32 1, !dbg !20165
  %475 = load %struct.BMVert*, %struct.BMVert** %v_b662, align 8, !dbg !20165
  %476 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !20165
  %v_a663 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %476, i32 0, i32 0, !dbg !20165
  store %struct.BMVert* %475, %struct.BMVert** %v_a663, align 8, !dbg !20165
  %477 = load %struct.BMVert*, %struct.BMVert** %sw_ap, align 8, !dbg !20165
  %478 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !20165
  %v_b664 = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %478, i32 0, i32 1, !dbg !20165
  store %struct.BMVert* %477, %struct.BMVert** %v_b664, align 8, !dbg !20165
  br label %if.end665, !dbg !20166

if.end665:                                        ; preds = %if.then656, %if.end647
  br label %for.inc666, !dbg !20167

for.inc666:                                       ; preds = %if.end665
  %479 = load i32, i32* %i, align 4, !dbg !20168
  %inc667 = add nsw i32 %479, 1, !dbg !20168
  store i32 %inc667, i32* %i, align 4, !dbg !20168
  %480 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !20169
  %incdec.ptr = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %480, i32 1, !dbg !20169
  store %struct.TransDataEdgeSlideVert* %incdec.ptr, %struct.TransDataEdgeSlideVert** %sv_array, align 8, !dbg !20169
  br label %for.cond623, !dbg !20170, !llvm.loop !20171

for.end668:                                       ; preds = %for.cond623
  %481 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !20173
  %tobool669 = icmp ne %struct.RegionView3D* %481, null, !dbg !20173
  br i1 %tobool669, label %if.then670, label %if.end672, !dbg !20175

if.then670:                                       ; preds = %for.end668
  %482 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20176
  %483 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !20177
  %arraydecay671 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !20178
  call void @calcNonProportionalEdgeSlide(%struct.TransInfo* %482, %struct.EdgeSlideData* %483, float* %arraydecay671), !dbg !20179
  br label %if.end672, !dbg !20179

if.end672:                                        ; preds = %if.then670, %for.end668
  %484 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !20180
  %485 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !20181
  %em673 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %485, i32 0, i32 5, !dbg !20182
  store %struct.BMEditMesh* %484, %struct.BMEditMesh** %em673, align 8, !dbg !20183
  %arraydecay674 = getelementptr inbounds [2 x float], [2 x float]* %mval_start, i64 0, i64 0, !dbg !20184
  call void @zero_v2(float* %arraydecay674), !dbg !20185
  %arraydecay675 = getelementptr inbounds [2 x float], [2 x float]* %mval_end, i64 0, i64 0, !dbg !20186
  %arraydecay676 = getelementptr inbounds [3 x float], [3 x float]* %mval_dir, i64 0, i64 0, !dbg !20187
  call void @copy_v2_v2(float* %arraydecay675, float* %arraydecay676), !dbg !20188
  %arraydecay677 = getelementptr inbounds [2 x float], [2 x float]* %mval_end, i64 0, i64 0, !dbg !20189
  call void @mul_v2_fl(float* %arraydecay677, float 5.000000e-01), !dbg !20190
  %486 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20191
  %mval678 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %486, i32 0, i32 61, !dbg !20192
  %arrayidx679 = getelementptr inbounds [2 x i32], [2 x i32]* %mval678, i64 0, i64 0, !dbg !20191
  %487 = load i32, i32* %arrayidx679, align 8, !dbg !20191
  %conv680 = sitofp i32 %487 to float, !dbg !20191
  %arrayidx681 = getelementptr inbounds [2 x float], [2 x float]* %mval_start, i64 0, i64 0, !dbg !20193
  %488 = load float, float* %arrayidx681, align 4, !dbg !20193
  %add682 = fadd float %conv680, %488, !dbg !20194
  %conv683 = fptosi float %add682 to i32, !dbg !20191
  %489 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !20195
  %mval_start684 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %489, i32 0, i32 3, !dbg !20196
  %arrayidx685 = getelementptr inbounds [2 x i32], [2 x i32]* %mval_start684, i64 0, i64 0, !dbg !20195
  store i32 %conv683, i32* %arrayidx685, align 8, !dbg !20197
  %490 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20198
  %mval686 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %490, i32 0, i32 61, !dbg !20199
  %arrayidx687 = getelementptr inbounds [2 x i32], [2 x i32]* %mval686, i64 0, i64 1, !dbg !20198
  %491 = load i32, i32* %arrayidx687, align 4, !dbg !20198
  %conv688 = sitofp i32 %491 to float, !dbg !20198
  %arrayidx689 = getelementptr inbounds [2 x float], [2 x float]* %mval_start, i64 0, i64 1, !dbg !20200
  %492 = load float, float* %arrayidx689, align 4, !dbg !20200
  %add690 = fadd float %conv688, %492, !dbg !20201
  %conv691 = fptosi float %add690 to i32, !dbg !20198
  %493 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !20202
  %mval_start692 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %493, i32 0, i32 3, !dbg !20203
  %arrayidx693 = getelementptr inbounds [2 x i32], [2 x i32]* %mval_start692, i64 0, i64 1, !dbg !20202
  store i32 %conv691, i32* %arrayidx693, align 4, !dbg !20204
  %494 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20205
  %mval694 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %494, i32 0, i32 61, !dbg !20206
  %arrayidx695 = getelementptr inbounds [2 x i32], [2 x i32]* %mval694, i64 0, i64 0, !dbg !20205
  %495 = load i32, i32* %arrayidx695, align 8, !dbg !20205
  %conv696 = sitofp i32 %495 to float, !dbg !20205
  %arrayidx697 = getelementptr inbounds [2 x float], [2 x float]* %mval_end, i64 0, i64 0, !dbg !20207
  %496 = load float, float* %arrayidx697, align 4, !dbg !20207
  %add698 = fadd float %conv696, %496, !dbg !20208
  %conv699 = fptosi float %add698 to i32, !dbg !20205
  %497 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !20209
  %mval_end700 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %497, i32 0, i32 4, !dbg !20210
  %arrayidx701 = getelementptr inbounds [2 x i32], [2 x i32]* %mval_end700, i64 0, i64 0, !dbg !20209
  store i32 %conv699, i32* %arrayidx701, align 8, !dbg !20211
  %498 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20212
  %mval702 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %498, i32 0, i32 61, !dbg !20213
  %arrayidx703 = getelementptr inbounds [2 x i32], [2 x i32]* %mval702, i64 0, i64 1, !dbg !20212
  %499 = load i32, i32* %arrayidx703, align 4, !dbg !20212
  %conv704 = sitofp i32 %499 to float, !dbg !20212
  %arrayidx705 = getelementptr inbounds [2 x float], [2 x float]* %mval_end, i64 0, i64 1, !dbg !20214
  %500 = load float, float* %arrayidx705, align 4, !dbg !20214
  %add706 = fadd float %conv704, %500, !dbg !20215
  %conv707 = fptosi float %add706 to i32, !dbg !20212
  %501 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !20216
  %mval_end708 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %501, i32 0, i32 4, !dbg !20217
  %arrayidx709 = getelementptr inbounds [2 x i32], [2 x i32]* %mval_end708, i64 0, i64 1, !dbg !20216
  store i32 %conv707, i32* %arrayidx709, align 4, !dbg !20218
  %502 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !20219
  %perc = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %502, i32 0, i32 8, !dbg !20220
  store float 0.000000e+00, float* %perc, align 8, !dbg !20221
  %503 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld, align 8, !dbg !20222
  %504 = bitcast %struct.EdgeSlideData* %503 to i8*, !dbg !20222
  %505 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20223
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %505, i32 0, i32 40, !dbg !20224
  store i8* %504, i8** %customData, align 8, !dbg !20225
  %506 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !20226
  %507 = load i32*, i32** %sv_table, align 8, !dbg !20227
  %508 = bitcast i32* %507 to i8*, !dbg !20227
  call void %506(i8* %508), !dbg !20226
  %509 = load %struct.BMBVHTree*, %struct.BMBVHTree** %btree, align 8, !dbg !20228
  %tobool710 = icmp ne %struct.BMBVHTree* %509, null, !dbg !20228
  br i1 %tobool710, label %if.then711, label %if.end712, !dbg !20230

if.then711:                                       ; preds = %if.end672
  %510 = load %struct.BMBVHTree*, %struct.BMBVHTree** %btree, align 8, !dbg !20231
  call void @BKE_bmbvh_free(%struct.BMBVHTree* %510), !dbg !20233
  br label %if.end712, !dbg !20234

if.end712:                                        ; preds = %if.then711, %if.end672
  %511 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !20235
  %512 = load [3 x float]*, [3 x float]** %loop_dir, align 8, !dbg !20236
  %513 = bitcast [3 x float]* %512 to i8*, !dbg !20236
  call void %511(i8* %513), !dbg !20235
  %514 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !20237
  %515 = load float*, float** %loop_maxdist, align 8, !dbg !20238
  %516 = bitcast float* %515 to i8*, !dbg !20238
  call void %514(i8* %516), !dbg !20237
  store i8 1, i8* %retval, align 1, !dbg !20239
  br label %return, !dbg !20239

return:                                           ; preds = %if.end712, %if.then102, %if.then70, %if.then51
  %517 = load i8, i8* %retval, align 1, !dbg !20240
  ret i8 %517, !dbg !20240
}

declare dso_local void @setCustomPoints(%struct.TransInfo*, %struct.MouseInput*, i32*, i32*) #2

declare dso_local %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object*) #2

declare dso_local void @ED_view3d_ob_project_mat_get(%struct.RegionView3D*, %struct.Object*, [4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_edge_is_manifold(%struct.BMEdge* %e) #0 !dbg !20241 {
entry:
  %e.addr = alloca %struct.BMEdge*, align 8
  %l = alloca %struct.BMLoop*, align 8
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !20242, metadata !DIExpression()), !dbg !20243
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !20244, metadata !DIExpression()), !dbg !20245
  %0 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !20246
  %l1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %0, i32 0, i32 4, !dbg !20247
  %1 = load %struct.BMLoop*, %struct.BMLoop** %l1, align 8, !dbg !20247
  store %struct.BMLoop* %1, %struct.BMLoop** %l, align 8, !dbg !20245
  %2 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !20248
  %tobool = icmp ne %struct.BMLoop* %2, null, !dbg !20248
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !20249

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !20250
  %radial_next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %3, i32 0, i32 4, !dbg !20251
  %4 = load %struct.BMLoop*, %struct.BMLoop** %radial_next, align 8, !dbg !20251
  %5 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !20252
  %cmp = icmp ne %struct.BMLoop* %4, %5, !dbg !20253
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !20254

land.rhs:                                         ; preds = %land.lhs.true
  %6 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !20255
  %radial_next2 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %6, i32 0, i32 4, !dbg !20256
  %7 = load %struct.BMLoop*, %struct.BMLoop** %radial_next2, align 8, !dbg !20256
  %radial_next3 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %7, i32 0, i32 4, !dbg !20257
  %8 = load %struct.BMLoop*, %struct.BMLoop** %radial_next3, align 8, !dbg !20257
  %9 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !20258
  %cmp4 = icmp eq %struct.BMLoop* %8, %9, !dbg !20259
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp4, %land.rhs ], !dbg !20260
  %land.ext = zext i1 %10 to i32, !dbg !20254
  %conv = trunc i32 %land.ext to i8, !dbg !20261
  ret i8 %conv, !dbg !20262
}

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_flag_enable(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !20263 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !20267, metadata !DIExpression()), !dbg !20268
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !20269, metadata !DIExpression()), !dbg !20270
  %0 = load i8, i8* %hflag.addr, align 1, !dbg !20271
  %conv = zext i8 %0 to i32, !dbg !20271
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !20272
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %1, i32 0, i32 3, !dbg !20273
  %2 = load i8, i8* %hflag1, align 1, !dbg !20274
  %conv2 = zext i8 %2 to i32, !dbg !20274
  %or = or i32 %conv2, %conv, !dbg !20274
  %conv3 = trunc i32 %or to i8, !dbg !20274
  store i8 %conv3, i8* %hflag1, align 1, !dbg !20274
  ret void, !dbg !20275
}

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_flag_disable(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !20276 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !20277, metadata !DIExpression()), !dbg !20278
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !20279, metadata !DIExpression()), !dbg !20280
  %0 = load i8, i8* %hflag.addr, align 1, !dbg !20281
  %conv = zext i8 %0 to i32, !dbg !20281
  %neg = xor i32 %conv, -1, !dbg !20282
  %conv1 = trunc i32 %neg to i8, !dbg !20283
  %conv2 = zext i8 %conv1 to i32, !dbg !20283
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !20284
  %hflag3 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %1, i32 0, i32 3, !dbg !20285
  %2 = load i8, i8* %hflag3, align 1, !dbg !20286
  %conv4 = zext i8 %2 to i32, !dbg !20286
  %and = and i32 %conv4, %conv2, !dbg !20286
  %conv5 = trunc i32 %and to i8, !dbg !20286
  store i8 %conv5, i8* %hflag3, align 1, !dbg !20286
  ret void, !dbg !20287
}

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_index_set(%struct.BMHeader* %head, i32 %index) #0 !dbg !20288 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %index.addr = alloca i32, align 4
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !20291, metadata !DIExpression()), !dbg !20292
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !20293, metadata !DIExpression()), !dbg !20294
  %0 = load i32, i32* %index.addr, align 4, !dbg !20295
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !20296
  %index1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %1, i32 0, i32 1, !dbg !20297
  store i32 %0, i32* %index1, align 8, !dbg !20298
  ret void, !dbg !20299
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.BMEdge* @get_other_edge(%struct.BMVert* %v, %struct.BMEdge* %e) #0 !dbg !20300 {
entry:
  %retval = alloca %struct.BMEdge*, align 8
  %v.addr = alloca %struct.BMVert*, align 8
  %e.addr = alloca %struct.BMEdge*, align 8
  %iter = alloca %struct.BMIter, align 8
  %e_iter = alloca %struct.BMEdge*, align 8
  store %struct.BMVert* %v, %struct.BMVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v.addr, metadata !20303, metadata !DIExpression()), !dbg !20304
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !20305, metadata !DIExpression()), !dbg !20306
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !20307, metadata !DIExpression()), !dbg !20308
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e_iter, metadata !20309, metadata !DIExpression()), !dbg !20310
  %0 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !20311
  %1 = bitcast %struct.BMVert* %0 to i8*, !dbg !20311
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* null, i8 zeroext 4, i8* %1), !dbg !20311
  %2 = bitcast i8* %call to %struct.BMEdge*, !dbg !20311
  store %struct.BMEdge* %2, %struct.BMEdge** %e_iter, align 8, !dbg !20311
  br label %for.cond, !dbg !20311

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.BMEdge*, %struct.BMEdge** %e_iter, align 8, !dbg !20313
  %tobool = icmp ne %struct.BMEdge* %3, null, !dbg !20311
  br i1 %tobool, label %for.body, label %for.end, !dbg !20311

for.body:                                         ; preds = %for.cond
  %4 = load %struct.BMEdge*, %struct.BMEdge** %e_iter, align 8, !dbg !20315
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %4, i32 0, i32 0, !dbg !20315
  %call1 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !20315
  %conv = zext i8 %call1 to i32, !dbg !20315
  %tobool2 = icmp ne i32 %conv, 0, !dbg !20315
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !20318

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.BMEdge*, %struct.BMEdge** %e_iter, align 8, !dbg !20319
  %6 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !20320
  %cmp = icmp ne %struct.BMEdge* %5, %6, !dbg !20321
  br i1 %cmp, label %if.then, label %if.end, !dbg !20322

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.BMEdge*, %struct.BMEdge** %e_iter, align 8, !dbg !20323
  store %struct.BMEdge* %7, %struct.BMEdge** %retval, align 8, !dbg !20325
  br label %return, !dbg !20325

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !20326

for.inc:                                          ; preds = %if.end
  %call4 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !20313
  %8 = bitcast i8* %call4 to %struct.BMEdge*, !dbg !20313
  store %struct.BMEdge* %8, %struct.BMEdge** %e_iter, align 8, !dbg !20313
  br label %for.cond, !dbg !20313, !llvm.loop !20327

for.end:                                          ; preds = %for.cond
  store %struct.BMEdge* null, %struct.BMEdge** %retval, align 8, !dbg !20329
  br label %return, !dbg !20329

return:                                           ; preds = %for.end, %if.then
  %9 = load %struct.BMEdge*, %struct.BMEdge** %retval, align 8, !dbg !20330
  ret %struct.BMEdge* %9, !dbg !20330
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %e, %struct.BMVert* %v) #0 !dbg !20331 {
entry:
  %retval = alloca %struct.BMVert*, align 8
  %e.addr = alloca %struct.BMEdge*, align 8
  %v.addr = alloca %struct.BMVert*, align 8
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !20336, metadata !DIExpression()), !dbg !20337
  store %struct.BMVert* %v, %struct.BMVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v.addr, metadata !20338, metadata !DIExpression()), !dbg !20339
  %0 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !20340
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %0, i32 0, i32 2, !dbg !20342
  %1 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !20342
  %2 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !20343
  %cmp = icmp eq %struct.BMVert* %1, %2, !dbg !20344
  br i1 %cmp, label %if.then, label %if.else, !dbg !20345

if.then:                                          ; preds = %entry
  %3 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !20346
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %3, i32 0, i32 3, !dbg !20348
  %4 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !20348
  store %struct.BMVert* %4, %struct.BMVert** %retval, align 8, !dbg !20349
  br label %return, !dbg !20349

if.else:                                          ; preds = %entry
  %5 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !20350
  %v21 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %5, i32 0, i32 3, !dbg !20352
  %6 = load %struct.BMVert*, %struct.BMVert** %v21, align 8, !dbg !20352
  %7 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !20353
  %cmp2 = icmp eq %struct.BMVert* %6, %7, !dbg !20354
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !20355

if.then3:                                         ; preds = %if.else
  %8 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !20356
  %v14 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %8, i32 0, i32 2, !dbg !20358
  %9 = load %struct.BMVert*, %struct.BMVert** %v14, align 8, !dbg !20358
  store %struct.BMVert* %9, %struct.BMVert** %retval, align 8, !dbg !20359
  br label %return, !dbg !20359

if.end:                                           ; preds = %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end
  store %struct.BMVert* null, %struct.BMVert** %retval, align 8, !dbg !20360
  br label %return, !dbg !20360

return:                                           ; preds = %if.end5, %if.then3, %if.then
  %10 = load %struct.BMVert*, %struct.BMVert** %retval, align 8, !dbg !20361
  ret %struct.BMVert* %10, !dbg !20361
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.BMLoop* @get_next_loop(%struct.BMVert* %v, %struct.BMLoop* %l, %struct.BMEdge* %e_prev, %struct.BMEdge* %e_next, float* %r_slide_vec) #0 !dbg !20362 {
entry:
  %retval = alloca %struct.BMLoop*, align 8
  %v.addr = alloca %struct.BMVert*, align 8
  %l.addr = alloca %struct.BMLoop*, align 8
  %e_prev.addr = alloca %struct.BMEdge*, align 8
  %e_next.addr = alloca %struct.BMEdge*, align 8
  %r_slide_vec.addr = alloca float*, align 8
  %l_first = alloca %struct.BMLoop*, align 8
  %vec_accum = alloca [3 x float], align 4
  %vec_accum_len = alloca float, align 4
  %i = alloca i32, align 4
  %l_tmp = alloca %struct.BMLoop*, align 8
  %tdir = alloca [3 x float], align 4
  %tvec = alloca [3 x float], align 4
  %dist = alloca float, align 4
  %tvec38 = alloca [3 x float], align 4
  store %struct.BMVert* %v, %struct.BMVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v.addr, metadata !20365, metadata !DIExpression()), !dbg !20366
  store %struct.BMLoop* %l, %struct.BMLoop** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l.addr, metadata !20367, metadata !DIExpression()), !dbg !20368
  store %struct.BMEdge* %e_prev, %struct.BMEdge** %e_prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e_prev.addr, metadata !20369, metadata !DIExpression()), !dbg !20370
  store %struct.BMEdge* %e_next, %struct.BMEdge** %e_next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e_next.addr, metadata !20371, metadata !DIExpression()), !dbg !20372
  store float* %r_slide_vec, float** %r_slide_vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_slide_vec.addr, metadata !20373, metadata !DIExpression()), !dbg !20374
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_first, metadata !20375, metadata !DIExpression()), !dbg !20376
  call void @llvm.dbg.declare(metadata [3 x float]* %vec_accum, metadata !20377, metadata !DIExpression()), !dbg !20378
  %0 = bitcast [3 x float]* %vec_accum to i8*, !dbg !20378
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 12, i1 false), !dbg !20378
  call void @llvm.dbg.declare(metadata float* %vec_accum_len, metadata !20379, metadata !DIExpression()), !dbg !20380
  store float 0.000000e+00, float* %vec_accum_len, align 4, !dbg !20380
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20381, metadata !DIExpression()), !dbg !20382
  store i32 0, i32* %i, align 4, !dbg !20382
  %1 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !20383
  store %struct.BMLoop* %1, %struct.BMLoop** %l_first, align 8, !dbg !20384
  br label %do.body, !dbg !20385

do.body:                                          ; preds = %land.end, %entry
  %2 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !20386
  %3 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !20388
  %call = call %struct.BMLoop* @BM_loop_other_edge_loop(%struct.BMLoop* %2, %struct.BMVert* %3), !dbg !20389
  store %struct.BMLoop* %call, %struct.BMLoop** %l.addr, align 8, !dbg !20390
  %4 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !20391
  %e = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %4, i32 0, i32 2, !dbg !20393
  %5 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !20393
  %6 = load %struct.BMEdge*, %struct.BMEdge** %e_next.addr, align 8, !dbg !20394
  %cmp = icmp eq %struct.BMEdge* %5, %6, !dbg !20395
  br i1 %cmp, label %if.then, label %if.else37, !dbg !20396

if.then:                                          ; preds = %do.body
  %7 = load i32, i32* %i, align 4, !dbg !20397
  %tobool = icmp ne i32 %7, 0, !dbg !20397
  br i1 %tobool, label %if.then1, label %if.else, !dbg !20400

if.then1:                                         ; preds = %if.then
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec_accum, i64 0, i64 0, !dbg !20401
  %8 = load float, float* %vec_accum_len, align 4, !dbg !20403
  %9 = load i32, i32* %i, align 4, !dbg !20404
  %conv = sitofp i32 %9 to float, !dbg !20405
  %div = fdiv float %8, %conv, !dbg !20406
  call void @len_v3_ensure(float* %arraydecay, float %div), !dbg !20407
  br label %if.end35, !dbg !20408

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_tmp, metadata !20409, metadata !DIExpression()), !dbg !20411
  %10 = load %struct.BMLoop*, %struct.BMLoop** %l_first, align 8, !dbg !20412
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %10, i32 0, i32 3, !dbg !20413
  %11 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !20413
  %12 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !20414
  %call2 = call %struct.BMLoop* @BM_face_vert_share_loop(%struct.BMFace* %11, %struct.BMVert* %12), !dbg !20415
  store %struct.BMLoop* %call2, %struct.BMLoop** %l_tmp, align 8, !dbg !20411
  %13 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp, align 8, !dbg !20416
  %f3 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %13, i32 0, i32 3, !dbg !20418
  %14 = load %struct.BMFace*, %struct.BMFace** %f3, align 8, !dbg !20418
  %len = getelementptr inbounds %struct.BMFace, %struct.BMFace* %14, i32 0, i32 3, !dbg !20419
  %15 = load i32, i32* %len, align 8, !dbg !20419
  %cmp4 = icmp eq i32 %15, 4, !dbg !20420
  br i1 %cmp4, label %if.then6, label %if.else13, !dbg !20421

if.then6:                                         ; preds = %if.else
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %vec_accum, i64 0, i64 0, !dbg !20422
  %16 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp, align 8, !dbg !20424
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %16, i32 0, i32 6, !dbg !20425
  %17 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !20425
  %next8 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %17, i32 0, i32 6, !dbg !20426
  %18 = load %struct.BMLoop*, %struct.BMLoop** %next8, align 8, !dbg !20426
  %v9 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %18, i32 0, i32 1, !dbg !20427
  %19 = load %struct.BMVert*, %struct.BMVert** %v9, align 8, !dbg !20427
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %19, i32 0, i32 2, !dbg !20428
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !20424
  %20 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !20429
  %co11 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %20, i32 0, i32 2, !dbg !20430
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %co11, i64 0, i64 0, !dbg !20429
  call void @sub_v3_v3v3(float* %arraydecay7, float* %arraydecay10, float* %arraydecay12), !dbg !20431
  br label %if.end34, !dbg !20432

if.else13:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata [3 x float]* %tdir, metadata !20433, metadata !DIExpression()), !dbg !20435
  %21 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp, align 8, !dbg !20436
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %tdir, i64 0, i64 0, !dbg !20437
  call void @BM_loop_calc_face_direction(%struct.BMLoop* %21, float* %arraydecay14), !dbg !20438
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %vec_accum, i64 0, i64 0, !dbg !20439
  %22 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp, align 8, !dbg !20440
  %f16 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %22, i32 0, i32 3, !dbg !20441
  %23 = load %struct.BMFace*, %struct.BMFace** %f16, align 8, !dbg !20441
  %no = getelementptr inbounds %struct.BMFace, %struct.BMFace* %23, i32 0, i32 4, !dbg !20442
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !20440
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %tdir, i64 0, i64 0, !dbg !20443
  call void @cross_v3_v3v3(float* %arraydecay15, float* %arraydecay17, float* %arraydecay18), !dbg !20444
  call void @llvm.dbg.declare(metadata [3 x float]* %tvec, metadata !20445, metadata !DIExpression()), !dbg !20447
  call void @llvm.dbg.declare(metadata float* %dist, metadata !20448, metadata !DIExpression()), !dbg !20449
  %24 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp, align 8, !dbg !20450
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %tdir, i64 0, i64 0, !dbg !20452
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !20453
  %call21 = call zeroext i8 @bm_loop_calc_opposite_co(%struct.BMLoop* %24, float* %arraydecay19, float* %arraydecay20), !dbg !20454
  %tobool22 = icmp ne i8 %call21, 0, !dbg !20454
  br i1 %tobool22, label %if.then23, label %if.else29, !dbg !20455

if.then23:                                        ; preds = %if.else13
  %25 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp, align 8, !dbg !20456
  %v24 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %25, i32 0, i32 1, !dbg !20458
  %26 = load %struct.BMVert*, %struct.BMVert** %v24, align 8, !dbg !20458
  %co25 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %26, i32 0, i32 2, !dbg !20459
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %co25, i64 0, i64 0, !dbg !20456
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !20460
  %call28 = call float @len_v3v3(float* %arraydecay26, float* %arraydecay27), !dbg !20461
  store float %call28, float* %dist, align 4, !dbg !20462
  br label %if.end, !dbg !20463

if.else29:                                        ; preds = %if.else13
  %27 = load %struct.BMEdge*, %struct.BMEdge** %e_prev.addr, align 8, !dbg !20464
  %call30 = call float @BM_edge_calc_length(%struct.BMEdge* %27), !dbg !20466
  %28 = load %struct.BMEdge*, %struct.BMEdge** %e_next.addr, align 8, !dbg !20467
  %call31 = call float @BM_edge_calc_length(%struct.BMEdge* %28), !dbg !20468
  %add = fadd float %call30, %call31, !dbg !20469
  %div32 = fdiv float %add, 2.000000e+00, !dbg !20470
  store float %div32, float* %dist, align 4, !dbg !20471
  br label %if.end

if.end:                                           ; preds = %if.else29, %if.then23
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %vec_accum, i64 0, i64 0, !dbg !20472
  %29 = load float, float* %dist, align 4, !dbg !20473
  call void @len_v3_ensure(float* %arraydecay33, float %29), !dbg !20474
  br label %if.end34

if.end34:                                         ; preds = %if.end, %if.then6
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then1
  %30 = load float*, float** %r_slide_vec.addr, align 8, !dbg !20475
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %vec_accum, i64 0, i64 0, !dbg !20476
  call void @copy_v3_v3(float* %30, float* %arraydecay36), !dbg !20477
  %31 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !20478
  store %struct.BMLoop* %31, %struct.BMLoop** %retval, align 8, !dbg !20479
  br label %return, !dbg !20479

if.else37:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata [3 x float]* %tvec38, metadata !20480, metadata !DIExpression()), !dbg !20482
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %tvec38, i64 0, i64 0, !dbg !20483
  %32 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !20484
  %e40 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %32, i32 0, i32 2, !dbg !20485
  %33 = load %struct.BMEdge*, %struct.BMEdge** %e40, align 8, !dbg !20485
  %34 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !20486
  %call41 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %33, %struct.BMVert* %34), !dbg !20487
  %co42 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %call41, i32 0, i32 2, !dbg !20488
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %co42, i64 0, i64 0, !dbg !20487
  %35 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !20489
  %co44 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %35, i32 0, i32 2, !dbg !20490
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %co44, i64 0, i64 0, !dbg !20489
  call void @sub_v3_v3v3(float* %arraydecay39, float* %arraydecay43, float* %arraydecay45), !dbg !20491
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %tvec38, i64 0, i64 0, !dbg !20492
  %call47 = call float @normalize_v3(float* %arraydecay46), !dbg !20493
  %36 = load float, float* %vec_accum_len, align 4, !dbg !20494
  %add48 = fadd float %36, %call47, !dbg !20494
  store float %add48, float* %vec_accum_len, align 4, !dbg !20494
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %vec_accum, i64 0, i64 0, !dbg !20495
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %tvec38, i64 0, i64 0, !dbg !20496
  call void @add_v3_v3(float* %arraydecay49, float* %arraydecay50), !dbg !20497
  %37 = load i32, i32* %i, align 4, !dbg !20498
  %add51 = add nsw i32 %37, 1, !dbg !20498
  store i32 %add51, i32* %i, align 4, !dbg !20498
  br label %if.end52

if.end52:                                         ; preds = %if.else37
  %38 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !20499
  %39 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !20501
  %call53 = call %struct.BMLoop* @BM_loop_other_edge_loop(%struct.BMLoop* %38, %struct.BMVert* %39), !dbg !20502
  %e54 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %call53, i32 0, i32 2, !dbg !20503
  %40 = load %struct.BMEdge*, %struct.BMEdge** %e54, align 8, !dbg !20503
  %41 = load %struct.BMEdge*, %struct.BMEdge** %e_next.addr, align 8, !dbg !20504
  %cmp55 = icmp eq %struct.BMEdge* %40, %41, !dbg !20505
  br i1 %cmp55, label %if.then57, label %if.end66, !dbg !20506

if.then57:                                        ; preds = %if.end52
  %42 = load i32, i32* %i, align 4, !dbg !20507
  %tobool58 = icmp ne i32 %42, 0, !dbg !20507
  br i1 %tobool58, label %if.then59, label %if.end63, !dbg !20510

if.then59:                                        ; preds = %if.then57
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %vec_accum, i64 0, i64 0, !dbg !20511
  %43 = load float, float* %vec_accum_len, align 4, !dbg !20513
  %44 = load i32, i32* %i, align 4, !dbg !20514
  %conv61 = sitofp i32 %44 to float, !dbg !20515
  %div62 = fdiv float %43, %conv61, !dbg !20516
  call void @len_v3_ensure(float* %arraydecay60, float %div62), !dbg !20517
  br label %if.end63, !dbg !20518

if.end63:                                         ; preds = %if.then59, %if.then57
  %45 = load float*, float** %r_slide_vec.addr, align 8, !dbg !20519
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %vec_accum, i64 0, i64 0, !dbg !20520
  call void @copy_v3_v3(float* %45, float* %arraydecay64), !dbg !20521
  %46 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !20522
  %47 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !20523
  %call65 = call %struct.BMLoop* @BM_loop_other_edge_loop(%struct.BMLoop* %46, %struct.BMVert* %47), !dbg !20524
  store %struct.BMLoop* %call65, %struct.BMLoop** %retval, align 8, !dbg !20525
  br label %return, !dbg !20525

if.end66:                                         ; preds = %if.end52
  br label %do.cond, !dbg !20526

do.cond:                                          ; preds = %if.end66
  %48 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !20527
  %49 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !20528
  %radial_next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %49, i32 0, i32 4, !dbg !20529
  %50 = load %struct.BMLoop*, %struct.BMLoop** %radial_next, align 8, !dbg !20529
  %cmp67 = icmp ne %struct.BMLoop* %48, %50, !dbg !20530
  br i1 %cmp67, label %land.rhs, label %land.end, !dbg !20531

land.rhs:                                         ; preds = %do.cond
  %51 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !20532
  %radial_next69 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %51, i32 0, i32 4, !dbg !20533
  %52 = load %struct.BMLoop*, %struct.BMLoop** %radial_next69, align 8, !dbg !20533
  store %struct.BMLoop* %52, %struct.BMLoop** %l.addr, align 8, !dbg !20534
  %53 = load %struct.BMLoop*, %struct.BMLoop** %l_first, align 8, !dbg !20535
  %cmp70 = icmp ne %struct.BMLoop* %52, %53, !dbg !20536
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %54 = phi i1 [ false, %do.cond ], [ %cmp70, %land.rhs ], !dbg !20537
  br i1 %54, label %do.body, label %do.end, !dbg !20526, !llvm.loop !20538

do.end:                                           ; preds = %land.end
  %55 = load i32, i32* %i, align 4, !dbg !20540
  %tobool72 = icmp ne i32 %55, 0, !dbg !20540
  br i1 %tobool72, label %if.then73, label %if.end77, !dbg !20542

if.then73:                                        ; preds = %do.end
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %vec_accum, i64 0, i64 0, !dbg !20543
  %56 = load float, float* %vec_accum_len, align 4, !dbg !20545
  %57 = load i32, i32* %i, align 4, !dbg !20546
  %conv75 = sitofp i32 %57 to float, !dbg !20547
  %div76 = fdiv float %56, %conv75, !dbg !20548
  call void @len_v3_ensure(float* %arraydecay74, float %div76), !dbg !20549
  br label %if.end77, !dbg !20550

if.end77:                                         ; preds = %if.then73, %do.end
  %58 = load float*, float** %r_slide_vec.addr, align 8, !dbg !20551
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %vec_accum, i64 0, i64 0, !dbg !20552
  call void @copy_v3_v3(float* %58, float* %arraydecay78), !dbg !20553
  store %struct.BMLoop* null, %struct.BMLoop** %retval, align 8, !dbg !20554
  br label %return, !dbg !20554

return:                                           ; preds = %if.end77, %if.end63, %if.end35
  %59 = load %struct.BMLoop*, %struct.BMLoop** %retval, align 8, !dbg !20555
  ret %struct.BMLoop* %59, !dbg !20555
}

declare dso_local i32 @BM_vert_edge_count_nonwire(%struct.BMVert*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @_bm_elem_index_get(%struct.BMHeader* %head) #0 !dbg !20556 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !20559, metadata !DIExpression()), !dbg !20560
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !20561
  %index = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 1, !dbg !20562
  %1 = load i32, i32* %index, align 8, !dbg !20562
  ret i32 %1, !dbg !20563
}

declare dso_local %struct.BMBVHTree* @BKE_bmbvh_new_from_editmesh(%struct.BMEditMesh*, i32, [3 x float]*, i8 zeroext) #2

declare dso_local void @fill_vn_fl(float*, i32, float) #2

declare dso_local zeroext i8 @BMBVH_EdgeVisible(%struct.BMBVHTree*, %struct.BMEdge*, %struct.ARegion*, %struct.View3D*, %struct.Object*) #2

declare dso_local void @ED_view3d_project_float_v3_m4(%struct.ARegion*, float*, float*, [4 x float]*) #2

declare dso_local float @dist_to_line_segment_v2(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v2v2(float* %a, float* %b) #0 !dbg !20564 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [2 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !20565, metadata !DIExpression()), !dbg !20566
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !20567, metadata !DIExpression()), !dbg !20568
  call void @llvm.dbg.declare(metadata [2 x float]* %d, metadata !20569, metadata !DIExpression()), !dbg !20570
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !20571
  %0 = load float*, float** %b.addr, align 8, !dbg !20572
  %1 = load float*, float** %a.addr, align 8, !dbg !20573
  call void @sub_v2_v2v2(float* %arraydecay, float* %0, float* %1), !dbg !20574
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !20575
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !20576
  %call = call float @dot_v2v2(float* %arraydecay1, float* %arraydecay2), !dbg !20577
  ret float %call, !dbg !20578
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v2(float* %v) #0 !dbg !20579 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !20580, metadata !DIExpression()), !dbg !20581
  %0 = load float*, float** %v.addr, align 8, !dbg !20582
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !20582
  %1 = load float, float* %arrayidx, align 4, !dbg !20582
  %2 = load float*, float** %v.addr, align 8, !dbg !20583
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !20583
  %3 = load float, float* %arrayidx1, align 4, !dbg !20583
  %mul = fmul float %1, %3, !dbg !20584
  %4 = load float*, float** %v.addr, align 8, !dbg !20585
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !20585
  %5 = load float, float* %arrayidx2, align 4, !dbg !20585
  %6 = load float*, float** %v.addr, align 8, !dbg !20586
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !20586
  %7 = load float, float* %arrayidx3, align 4, !dbg !20586
  %mul4 = fmul float %5, %7, !dbg !20587
  %add = fadd float %mul, %mul4, !dbg !20588
  ret float %add, !dbg !20589
}

declare dso_local void @bmesh_edit_begin(%struct.BMesh*, i32) #2

declare dso_local %struct.GHash* @BLI_ghash_ptr_new(i8*) #2

declare dso_local %struct.BMesh* @BM_mesh_create(%struct.BMAllocTemplate*) #2

declare dso_local void @BM_mesh_copy_init_customdata(%struct.BMesh*, %struct.BMesh*, %struct.BMAllocTemplate*) #2

declare dso_local zeroext i8 @BLI_ghash_haskey(%struct.GHash*, i8*) #2

declare dso_local %struct.BMFace* @BM_face_copy(%struct.BMesh*, %struct.BMesh*, %struct.BMFace*, i8 zeroext, i8 zeroext) #2

declare dso_local void @BLI_ghash_insert(%struct.GHash*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @swap_v3_v3(float* %a, float* %b) #0 !dbg !20590 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %sw_ap = alloca float, align 4
  %sw_ap4 = alloca float, align 4
  %sw_ap9 = alloca float, align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !20593, metadata !DIExpression()), !dbg !20594
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !20595, metadata !DIExpression()), !dbg !20596
  call void @llvm.dbg.declare(metadata float* %sw_ap, metadata !20597, metadata !DIExpression()), !dbg !20599
  %0 = load float*, float** %a.addr, align 8, !dbg !20599
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !20599
  %1 = load float, float* %arrayidx, align 4, !dbg !20599
  store float %1, float* %sw_ap, align 4, !dbg !20599
  %2 = load float*, float** %b.addr, align 8, !dbg !20599
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !20599
  %3 = load float, float* %arrayidx1, align 4, !dbg !20599
  %4 = load float*, float** %a.addr, align 8, !dbg !20599
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !20599
  store float %3, float* %arrayidx2, align 4, !dbg !20599
  %5 = load float, float* %sw_ap, align 4, !dbg !20599
  %6 = load float*, float** %b.addr, align 8, !dbg !20599
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 0, !dbg !20599
  store float %5, float* %arrayidx3, align 4, !dbg !20599
  call void @llvm.dbg.declare(metadata float* %sw_ap4, metadata !20600, metadata !DIExpression()), !dbg !20602
  %7 = load float*, float** %a.addr, align 8, !dbg !20602
  %arrayidx5 = getelementptr inbounds float, float* %7, i64 1, !dbg !20602
  %8 = load float, float* %arrayidx5, align 4, !dbg !20602
  store float %8, float* %sw_ap4, align 4, !dbg !20602
  %9 = load float*, float** %b.addr, align 8, !dbg !20602
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !20602
  %10 = load float, float* %arrayidx6, align 4, !dbg !20602
  %11 = load float*, float** %a.addr, align 8, !dbg !20602
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !20602
  store float %10, float* %arrayidx7, align 4, !dbg !20602
  %12 = load float, float* %sw_ap4, align 4, !dbg !20602
  %13 = load float*, float** %b.addr, align 8, !dbg !20602
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 1, !dbg !20602
  store float %12, float* %arrayidx8, align 4, !dbg !20602
  call void @llvm.dbg.declare(metadata float* %sw_ap9, metadata !20603, metadata !DIExpression()), !dbg !20605
  %14 = load float*, float** %a.addr, align 8, !dbg !20605
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !20605
  %15 = load float, float* %arrayidx10, align 4, !dbg !20605
  store float %15, float* %sw_ap9, align 4, !dbg !20605
  %16 = load float*, float** %b.addr, align 8, !dbg !20605
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 2, !dbg !20605
  %17 = load float, float* %arrayidx11, align 4, !dbg !20605
  %18 = load float*, float** %a.addr, align 8, !dbg !20605
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 2, !dbg !20605
  store float %17, float* %arrayidx12, align 4, !dbg !20605
  %19 = load float, float* %sw_ap9, align 4, !dbg !20605
  %20 = load float*, float** %b.addr, align 8, !dbg !20605
  %arrayidx13 = getelementptr inbounds float, float* %20, i64 2, !dbg !20605
  store float %19, float* %arrayidx13, align 4, !dbg !20605
  ret void, !dbg !20606
}

; Function Attrs: noinline nounwind uwtable
define internal void @calcNonProportionalEdgeSlide(%struct.TransInfo* %t, %struct.EdgeSlideData* %sld, float* %mval) #0 !dbg !20607 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %sld.addr = alloca %struct.EdgeSlideData*, align 8
  %mval.addr = alloca float*, align 8
  %sv = alloca %struct.TransDataEdgeSlideVert*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %rv3d = alloca %struct.RegionView3D*, align 8
  %projectMat = alloca [4 x [4 x float]], align 16
  %i = alloca i32, align 4
  %v_proj = alloca [2 x float], align 4
  %dist_sq = alloca float, align 4
  %dist_min_sq = alloca float, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !20610, metadata !DIExpression()), !dbg !20611
  store %struct.EdgeSlideData* %sld, %struct.EdgeSlideData** %sld.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EdgeSlideData** %sld.addr, metadata !20612, metadata !DIExpression()), !dbg !20613
  store float* %mval, float** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mval.addr, metadata !20614, metadata !DIExpression()), !dbg !20615
  call void @llvm.dbg.declare(metadata %struct.TransDataEdgeSlideVert** %sv, metadata !20616, metadata !DIExpression()), !dbg !20617
  %0 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld.addr, align 8, !dbg !20618
  %sv1 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %0, i32 0, i32 0, !dbg !20619
  %1 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv1, align 8, !dbg !20619
  store %struct.TransDataEdgeSlideVert* %1, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !20617
  %2 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld.addr, align 8, !dbg !20620
  %totsv = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %2, i32 0, i32 1, !dbg !20622
  %3 = load i32, i32* %totsv, align 8, !dbg !20622
  %cmp = icmp sgt i32 %3, 0, !dbg !20623
  br i1 %cmp, label %if.then, label %if.else26, !dbg !20624

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !20625, metadata !DIExpression()), !dbg !20627
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20628
  %ar2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 55, !dbg !20629
  %5 = load %struct.ARegion*, %struct.ARegion** %ar2, align 8, !dbg !20629
  store %struct.ARegion* %5, %struct.ARegion** %ar, align 8, !dbg !20627
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !20630, metadata !DIExpression()), !dbg !20631
  store %struct.RegionView3D* null, %struct.RegionView3D** %rv3d, align 8, !dbg !20631
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %projectMat, metadata !20632, metadata !DIExpression()), !dbg !20633
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20634, metadata !DIExpression()), !dbg !20635
  store i32 0, i32* %i, align 4, !dbg !20635
  call void @llvm.dbg.declare(metadata [2 x float]* %v_proj, metadata !20636, metadata !DIExpression()), !dbg !20637
  call void @llvm.dbg.declare(metadata float* %dist_sq, metadata !20638, metadata !DIExpression()), !dbg !20639
  store float 0.000000e+00, float* %dist_sq, align 4, !dbg !20639
  call void @llvm.dbg.declare(metadata float* %dist_min_sq, metadata !20640, metadata !DIExpression()), !dbg !20641
  store float 0x47EFFFFFE0000000, float* %dist_min_sq, align 4, !dbg !20641
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20642
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 33, !dbg !20644
  %7 = load i8, i8* %spacetype, align 8, !dbg !20644
  %conv = zext i8 %7 to i32, !dbg !20642
  %cmp3 = icmp eq i32 %conv, 1, !dbg !20645
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !20646

if.then5:                                         ; preds = %if.then
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20647
  %ar6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 55, !dbg !20649
  %9 = load %struct.ARegion*, %struct.ARegion** %ar6, align 8, !dbg !20649
  %tobool = icmp ne %struct.ARegion* %9, null, !dbg !20647
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20647

cond.true:                                        ; preds = %if.then5
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20650
  %ar7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 55, !dbg !20651
  %11 = load %struct.ARegion*, %struct.ARegion** %ar7, align 8, !dbg !20651
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %11, i32 0, i32 30, !dbg !20652
  %12 = load i8*, i8** %regiondata, align 8, !dbg !20652
  br label %cond.end, !dbg !20647

cond.false:                                       ; preds = %if.then5
  br label %cond.end, !dbg !20647

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %12, %cond.true ], [ null, %cond.false ], !dbg !20647
  %13 = bitcast i8* %cond to %struct.RegionView3D*, !dbg !20647
  store %struct.RegionView3D* %13, %struct.RegionView3D** %rv3d, align 8, !dbg !20653
  br label %if.end, !dbg !20654

if.end:                                           ; preds = %cond.end, %if.then
  %14 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !20655
  %tobool8 = icmp ne %struct.RegionView3D* %14, null, !dbg !20655
  br i1 %tobool8, label %if.else, label %if.then9, !dbg !20657

if.then9:                                         ; preds = %if.end
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat, i64 0, i64 0, !dbg !20658
  call void @unit_m4([4 x float]* %arraydecay), !dbg !20660
  br label %if.end11, !dbg !20661

if.else:                                          ; preds = %if.end
  %15 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !20662
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20664
  %obedit = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 63, !dbg !20665
  %17 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !20665
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat, i64 0, i64 0, !dbg !20666
  call void @ED_view3d_ob_project_mat_get(%struct.RegionView3D* %15, %struct.Object* %17, [4 x float]* %arraydecay10), !dbg !20667
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then9
  store i32 0, i32* %i, align 4, !dbg !20668
  br label %for.cond, !dbg !20670

for.cond:                                         ; preds = %for.inc, %if.end11
  %18 = load i32, i32* %i, align 4, !dbg !20671
  %19 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld.addr, align 8, !dbg !20673
  %totsv12 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %19, i32 0, i32 1, !dbg !20674
  %20 = load i32, i32* %totsv12, align 8, !dbg !20674
  %cmp13 = icmp slt i32 %18, %20, !dbg !20675
  br i1 %cmp13, label %for.body, label %for.end, !dbg !20676

for.body:                                         ; preds = %for.cond
  %21 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !20677
  %dir_a = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %21, i32 0, i32 5, !dbg !20679
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %dir_a, i64 0, i64 0, !dbg !20677
  %22 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !20680
  %dir_b = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %22, i32 0, i32 6, !dbg !20681
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %dir_b, i64 0, i64 0, !dbg !20680
  %call = call float @len_v3v3(float* %arraydecay15, float* %arraydecay16), !dbg !20682
  %23 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !20683
  %edge_len = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %23, i32 0, i32 4, !dbg !20684
  store float %call, float* %edge_len, align 4, !dbg !20685
  %24 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !20686
  %25 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !20687
  %v = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %25, i32 0, i32 2, !dbg !20688
  %26 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !20688
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %26, i32 0, i32 2, !dbg !20689
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !20687
  %arraydecay18 = getelementptr inbounds [2 x float], [2 x float]* %v_proj, i64 0, i64 0, !dbg !20690
  %arraydecay19 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat, i64 0, i64 0, !dbg !20691
  call void @ED_view3d_project_float_v2_m4(%struct.ARegion* %24, float* %arraydecay17, float* %arraydecay18, [4 x float]* %arraydecay19), !dbg !20692
  %27 = load float*, float** %mval.addr, align 8, !dbg !20693
  %arraydecay20 = getelementptr inbounds [2 x float], [2 x float]* %v_proj, i64 0, i64 0, !dbg !20694
  %call21 = call float @len_squared_v2v2(float* %27, float* %arraydecay20), !dbg !20695
  store float %call21, float* %dist_sq, align 4, !dbg !20696
  %28 = load float, float* %dist_sq, align 4, !dbg !20697
  %29 = load float, float* %dist_min_sq, align 4, !dbg !20699
  %cmp22 = fcmp olt float %28, %29, !dbg !20700
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !20701

if.then24:                                        ; preds = %for.body
  %30 = load float, float* %dist_sq, align 4, !dbg !20702
  store float %30, float* %dist_min_sq, align 4, !dbg !20704
  %31 = load i32, i32* %i, align 4, !dbg !20705
  %32 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld.addr, align 8, !dbg !20706
  %curr_sv_index = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %32, i32 0, i32 11, !dbg !20707
  store i32 %31, i32* %curr_sv_index, align 8, !dbg !20708
  br label %if.end25, !dbg !20709

if.end25:                                         ; preds = %if.then24, %for.body
  br label %for.inc, !dbg !20710

for.inc:                                          ; preds = %if.end25
  %33 = load i32, i32* %i, align 4, !dbg !20711
  %inc = add nsw i32 %33, 1, !dbg !20711
  store i32 %inc, i32* %i, align 4, !dbg !20711
  %34 = load %struct.TransDataEdgeSlideVert*, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !20712
  %incdec.ptr = getelementptr inbounds %struct.TransDataEdgeSlideVert, %struct.TransDataEdgeSlideVert* %34, i32 1, !dbg !20712
  store %struct.TransDataEdgeSlideVert* %incdec.ptr, %struct.TransDataEdgeSlideVert** %sv, align 8, !dbg !20712
  br label %for.cond, !dbg !20713, !llvm.loop !20714

for.end:                                          ; preds = %for.cond
  br label %if.end28, !dbg !20716

if.else26:                                        ; preds = %entry
  %35 = load %struct.EdgeSlideData*, %struct.EdgeSlideData** %sld.addr, align 8, !dbg !20717
  %curr_sv_index27 = getelementptr inbounds %struct.EdgeSlideData, %struct.EdgeSlideData* %35, i32 0, i32 11, !dbg !20719
  store i32 0, i32* %curr_sv_index27, align 8, !dbg !20720
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %for.end
  ret void, !dbg !20721
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v2(float* %r) #0 !dbg !20722 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !20723, metadata !DIExpression()), !dbg !20724
  %0 = load float*, float** %r.addr, align 8, !dbg !20725
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !20725
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !20726
  %1 = load float*, float** %r.addr, align 8, !dbg !20727
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !20727
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !20728
  ret void, !dbg !20729
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v2_fl(float* %r, float %f) #0 !dbg !20730 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !20731, metadata !DIExpression()), !dbg !20732
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !20733, metadata !DIExpression()), !dbg !20734
  %0 = load float, float* %f.addr, align 4, !dbg !20735
  %1 = load float*, float** %r.addr, align 8, !dbg !20736
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !20736
  %2 = load float, float* %arrayidx, align 4, !dbg !20737
  %mul = fmul float %2, %0, !dbg !20737
  store float %mul, float* %arrayidx, align 4, !dbg !20737
  %3 = load float, float* %f.addr, align 4, !dbg !20738
  %4 = load float*, float** %r.addr, align 8, !dbg !20739
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !20739
  %5 = load float, float* %arrayidx1, align 4, !dbg !20740
  %mul2 = fmul float %5, %3, !dbg !20740
  store float %mul2, float* %arrayidx1, align 4, !dbg !20740
  ret void, !dbg !20741
}

declare dso_local void @BKE_bmbvh_free(%struct.BMBVHTree*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @len_v3_ensure(float* %v, float %length) #0 !dbg !20742 {
entry:
  %v.addr = alloca float*, align 8
  %length.addr = alloca float, align 4
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !20745, metadata !DIExpression()), !dbg !20746
  store float %length, float* %length.addr, align 4
  call void @llvm.dbg.declare(metadata float* %length.addr, metadata !20747, metadata !DIExpression()), !dbg !20748
  %0 = load float*, float** %v.addr, align 8, !dbg !20749
  %call = call float @normalize_v3(float* %0), !dbg !20750
  %1 = load float*, float** %v.addr, align 8, !dbg !20751
  %2 = load float, float* %length.addr, align 4, !dbg !20752
  call void @mul_v3_fl(float* %1, float %2), !dbg !20753
  ret void, !dbg !20754
}

declare dso_local %struct.BMLoop* @BM_face_vert_share_loop(%struct.BMFace*, %struct.BMVert*) #2

declare dso_local void @BM_loop_calc_face_direction(%struct.BMLoop*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @bm_loop_calc_opposite_co(%struct.BMLoop* %l_tmp, float* %plane_no, float* %r_co) #0 !dbg !20755 {
entry:
  %l_tmp.addr = alloca %struct.BMLoop*, align 8
  %plane_no.addr = alloca float*, align 8
  %r_co.addr = alloca float*, align 8
  %l_first = alloca %struct.BMLoop*, align 8
  %l_last = alloca %struct.BMLoop*, align 8
  %l_iter = alloca %struct.BMLoop*, align 8
  %dist = alloca float, align 4
  %tvec = alloca [3 x float], align 4
  %fac = alloca float, align 4
  %tdist = alloca float, align 4
  store %struct.BMLoop* %l_tmp, %struct.BMLoop** %l_tmp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_tmp.addr, metadata !20758, metadata !DIExpression()), !dbg !20759
  store float* %plane_no, float** %plane_no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane_no.addr, metadata !20760, metadata !DIExpression()), !dbg !20761
  store float* %r_co, float** %r_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_co.addr, metadata !20762, metadata !DIExpression()), !dbg !20763
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_first, metadata !20764, metadata !DIExpression()), !dbg !20765
  %0 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp.addr, align 8, !dbg !20766
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %0, i32 0, i32 6, !dbg !20767
  %1 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !20767
  store %struct.BMLoop* %1, %struct.BMLoop** %l_first, align 8, !dbg !20765
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_last, metadata !20768, metadata !DIExpression()), !dbg !20769
  %2 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp.addr, align 8, !dbg !20770
  %prev = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %2, i32 0, i32 7, !dbg !20771
  %3 = load %struct.BMLoop*, %struct.BMLoop** %prev, align 8, !dbg !20771
  store %struct.BMLoop* %3, %struct.BMLoop** %l_last, align 8, !dbg !20769
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_iter, metadata !20772, metadata !DIExpression()), !dbg !20773
  call void @llvm.dbg.declare(metadata float* %dist, metadata !20774, metadata !DIExpression()), !dbg !20775
  store float 0x47EFFFFFE0000000, float* %dist, align 4, !dbg !20775
  %4 = load %struct.BMLoop*, %struct.BMLoop** %l_first, align 8, !dbg !20776
  store %struct.BMLoop* %4, %struct.BMLoop** %l_iter, align 8, !dbg !20777
  br label %do.body, !dbg !20778

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %tvec, metadata !20779, metadata !DIExpression()), !dbg !20781
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !20782
  %5 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !20784
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %5, i32 0, i32 1, !dbg !20785
  %6 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !20785
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %6, i32 0, i32 2, !dbg !20786
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !20784
  %7 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !20787
  %next2 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %7, i32 0, i32 6, !dbg !20788
  %8 = load %struct.BMLoop*, %struct.BMLoop** %next2, align 8, !dbg !20788
  %v3 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %8, i32 0, i32 1, !dbg !20789
  %9 = load %struct.BMVert*, %struct.BMVert** %v3, align 8, !dbg !20789
  %co4 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %9, i32 0, i32 2, !dbg !20790
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %co4, i64 0, i64 0, !dbg !20787
  %10 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp.addr, align 8, !dbg !20791
  %v6 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %10, i32 0, i32 1, !dbg !20792
  %11 = load %struct.BMVert*, %struct.BMVert** %v6, align 8, !dbg !20792
  %co7 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %11, i32 0, i32 2, !dbg !20793
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %co7, i64 0, i64 0, !dbg !20791
  %12 = load float*, float** %plane_no.addr, align 8, !dbg !20794
  %call = call zeroext i8 @isect_line_plane_v3(float* %arraydecay, float* %arraydecay1, float* %arraydecay5, float* %arraydecay8, float* %12), !dbg !20795
  %tobool = icmp ne i8 %call, 0, !dbg !20795
  br i1 %tobool, label %if.then, label %if.end29, !dbg !20796

if.then:                                          ; preds = %do.body
  call void @llvm.dbg.declare(metadata float* %fac, metadata !20797, metadata !DIExpression()), !dbg !20799
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !20800
  %13 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !20801
  %v10 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %13, i32 0, i32 1, !dbg !20802
  %14 = load %struct.BMVert*, %struct.BMVert** %v10, align 8, !dbg !20802
  %co11 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %14, i32 0, i32 2, !dbg !20803
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %co11, i64 0, i64 0, !dbg !20801
  %15 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !20804
  %next13 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %15, i32 0, i32 6, !dbg !20805
  %16 = load %struct.BMLoop*, %struct.BMLoop** %next13, align 8, !dbg !20805
  %v14 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %16, i32 0, i32 1, !dbg !20806
  %17 = load %struct.BMVert*, %struct.BMVert** %v14, align 8, !dbg !20806
  %co15 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %17, i32 0, i32 2, !dbg !20807
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %co15, i64 0, i64 0, !dbg !20804
  %call17 = call float @line_point_factor_v3(float* %arraydecay9, float* %arraydecay12, float* %arraydecay16), !dbg !20808
  store float %call17, float* %fac, align 4, !dbg !20799
  %18 = load float, float* %fac, align 4, !dbg !20809
  %cmp = fcmp ogt float %18, 0xBE80000000000000, !dbg !20811
  br i1 %cmp, label %land.lhs.true, label %if.end28, !dbg !20812

land.lhs.true:                                    ; preds = %if.then
  %19 = load float, float* %fac, align 4, !dbg !20813
  %cmp18 = fcmp olt float %19, 0x3FF0000020000000, !dbg !20814
  br i1 %cmp18, label %if.then19, label %if.end28, !dbg !20815

if.then19:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %tdist, metadata !20816, metadata !DIExpression()), !dbg !20818
  %20 = load %struct.BMLoop*, %struct.BMLoop** %l_tmp.addr, align 8, !dbg !20819
  %v20 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %20, i32 0, i32 1, !dbg !20820
  %21 = load %struct.BMVert*, %struct.BMVert** %v20, align 8, !dbg !20820
  %co21 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %21, i32 0, i32 2, !dbg !20821
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %co21, i64 0, i64 0, !dbg !20819
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !20822
  %call24 = call float @len_v3v3(float* %arraydecay22, float* %arraydecay23), !dbg !20823
  store float %call24, float* %tdist, align 4, !dbg !20818
  %22 = load float, float* %tdist, align 4, !dbg !20824
  %23 = load float, float* %dist, align 4, !dbg !20826
  %cmp25 = fcmp olt float %22, %23, !dbg !20827
  br i1 %cmp25, label %if.then26, label %if.end, !dbg !20828

if.then26:                                        ; preds = %if.then19
  %24 = load float*, float** %r_co.addr, align 8, !dbg !20829
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !20831
  call void @copy_v3_v3(float* %24, float* %arraydecay27), !dbg !20832
  %25 = load float, float* %tdist, align 4, !dbg !20833
  store float %25, float* %dist, align 4, !dbg !20834
  br label %if.end, !dbg !20835

if.end:                                           ; preds = %if.then26, %if.then19
  br label %if.end28, !dbg !20836

if.end28:                                         ; preds = %if.end, %land.lhs.true, %if.then
  br label %if.end29, !dbg !20837

if.end29:                                         ; preds = %if.end28, %do.body
  br label %do.cond, !dbg !20838

do.cond:                                          ; preds = %if.end29
  %26 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !20839
  %next30 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %26, i32 0, i32 6, !dbg !20840
  %27 = load %struct.BMLoop*, %struct.BMLoop** %next30, align 8, !dbg !20840
  store %struct.BMLoop* %27, %struct.BMLoop** %l_iter, align 8, !dbg !20841
  %28 = load %struct.BMLoop*, %struct.BMLoop** %l_last, align 8, !dbg !20842
  %cmp31 = icmp ne %struct.BMLoop* %27, %28, !dbg !20843
  br i1 %cmp31, label %do.body, label %do.end, !dbg !20838, !llvm.loop !20844

do.end:                                           ; preds = %do.cond
  %29 = load float, float* %dist, align 4, !dbg !20846
  %cmp32 = fcmp une float %29, 0x47EFFFFFE0000000, !dbg !20847
  %conv = zext i1 %cmp32 to i32, !dbg !20847
  %conv33 = trunc i32 %conv to i8, !dbg !20848
  ret i8 %conv33, !dbg !20849
}

declare dso_local float @BM_edge_calc_length(%struct.BMEdge*) #2

declare dso_local zeroext i8 @isect_line_plane_v3(float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !20850 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !20851, metadata !DIExpression()), !dbg !20852
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !20853, metadata !DIExpression()), !dbg !20854
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !20855, metadata !DIExpression()), !dbg !20856
  %0 = load float*, float** %a.addr, align 8, !dbg !20857
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !20857
  %1 = load float, float* %arrayidx, align 4, !dbg !20857
  %2 = load float*, float** %b.addr, align 8, !dbg !20858
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !20858
  %3 = load float, float* %arrayidx1, align 4, !dbg !20858
  %sub = fsub float %1, %3, !dbg !20859
  %4 = load float*, float** %r.addr, align 8, !dbg !20860
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !20860
  store float %sub, float* %arrayidx2, align 4, !dbg !20861
  %5 = load float*, float** %a.addr, align 8, !dbg !20862
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !20862
  %6 = load float, float* %arrayidx3, align 4, !dbg !20862
  %7 = load float*, float** %b.addr, align 8, !dbg !20863
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !20863
  %8 = load float, float* %arrayidx4, align 4, !dbg !20863
  %sub5 = fsub float %6, %8, !dbg !20864
  %9 = load float*, float** %r.addr, align 8, !dbg !20865
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !20865
  store float %sub5, float* %arrayidx6, align 4, !dbg !20866
  ret void, !dbg !20867
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v2v2(float* %a, float* %b) #0 !dbg !20868 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !20869, metadata !DIExpression()), !dbg !20870
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !20871, metadata !DIExpression()), !dbg !20872
  %0 = load float*, float** %a.addr, align 8, !dbg !20873
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !20873
  %1 = load float, float* %arrayidx, align 4, !dbg !20873
  %2 = load float*, float** %b.addr, align 8, !dbg !20874
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !20874
  %3 = load float, float* %arrayidx1, align 4, !dbg !20874
  %mul = fmul float %1, %3, !dbg !20875
  %4 = load float*, float** %a.addr, align 8, !dbg !20876
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !20876
  %5 = load float, float* %arrayidx2, align 4, !dbg !20876
  %6 = load float*, float** %b.addr, align 8, !dbg !20877
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !20877
  %7 = load float, float* %arrayidx3, align 4, !dbg !20877
  %mul4 = fmul float %5, %7, !dbg !20878
  %add = fadd float %mul, %mul4, !dbg !20879
  ret float %add, !dbg !20880
}

declare dso_local void @ED_view3d_project_float_v2_m4(%struct.ARegion*, float*, float*, [4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @applyVertSlide(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !20881 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %str = alloca [256 x i8], align 16
  %ofs = alloca i64, align 8
  %final = alloca float, align 4
  %sld = alloca %struct.VertSlideData*, align 8
  %flipped = alloca i8, align 1
  %is_proportional = alloca i8, align 1
  %is_clamp = alloca i8, align 1
  %is_constrained = alloca i8, align 1
  %c = alloca [64 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !20882, metadata !DIExpression()), !dbg !20883
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !20884, metadata !DIExpression()), !dbg !20885
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !20886, metadata !DIExpression()), !dbg !20887
  call void @llvm.dbg.declare(metadata i64* %ofs, metadata !20888, metadata !DIExpression()), !dbg !20889
  store i64 0, i64* %ofs, align 8, !dbg !20889
  call void @llvm.dbg.declare(metadata float* %final, metadata !20890, metadata !DIExpression()), !dbg !20891
  call void @llvm.dbg.declare(metadata %struct.VertSlideData** %sld, metadata !20892, metadata !DIExpression()), !dbg !20893
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20894
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 40, !dbg !20895
  %1 = load i8*, i8** %customData, align 8, !dbg !20895
  %2 = bitcast i8* %1 to %struct.VertSlideData*, !dbg !20894
  store %struct.VertSlideData* %2, %struct.VertSlideData** %sld, align 8, !dbg !20893
  call void @llvm.dbg.declare(metadata i8* %flipped, metadata !20896, metadata !DIExpression()), !dbg !20897
  %3 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !20898
  %flipped_vtx = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %3, i32 0, i32 5, !dbg !20899
  %4 = load i8, i8* %flipped_vtx, align 1, !dbg !20899
  store i8 %4, i8* %flipped, align 1, !dbg !20897
  call void @llvm.dbg.declare(metadata i8* %is_proportional, metadata !20900, metadata !DIExpression()), !dbg !20901
  %5 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !20902
  %is_proportional1 = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %5, i32 0, i32 4, !dbg !20903
  %6 = load i8, i8* %is_proportional1, align 4, !dbg !20903
  store i8 %6, i8* %is_proportional, align 1, !dbg !20901
  call void @llvm.dbg.declare(metadata i8* %is_clamp, metadata !20904, metadata !DIExpression()), !dbg !20905
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20906
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 1, !dbg !20907
  %8 = load i32, i32* %flag, align 4, !dbg !20907
  %and = and i32 %8, 16777216, !dbg !20908
  %tobool = icmp ne i32 %and, 0, !dbg !20909
  %lnot = xor i1 %tobool, true, !dbg !20909
  %lnot.ext = zext i1 %lnot to i32, !dbg !20909
  %conv = trunc i32 %lnot.ext to i8, !dbg !20909
  store i8 %conv, i8* %is_clamp, align 1, !dbg !20905
  call void @llvm.dbg.declare(metadata i8* %is_constrained, metadata !20910, metadata !DIExpression()), !dbg !20911
  %9 = load i8, i8* %is_clamp, align 1, !dbg !20912
  %conv2 = zext i8 %9 to i32, !dbg !20912
  %cmp = icmp eq i32 %conv2, 0, !dbg !20913
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !20914

lor.rhs:                                          ; preds = %entry
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20915
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 15, !dbg !20916
  %call = call zeroext i8 @hasNumInput(%struct.NumInput* %num), !dbg !20917
  %conv4 = zext i8 %call to i32, !dbg !20917
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !20914
  br label %lor.end, !dbg !20914

lor.end:                                          ; preds = %lor.rhs, %entry
  %11 = phi i1 [ true, %entry ], [ %tobool5, %lor.rhs ]
  %lnot6 = xor i1 %11, true, !dbg !20918
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !20918
  %conv8 = trunc i32 %lnot.ext7 to i8, !dbg !20918
  store i8 %conv8, i8* %is_constrained, align 1, !dbg !20911
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20919
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 47, !dbg !20920
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !20919
  %13 = load float, float* %arrayidx, align 4, !dbg !20919
  store float %13, float* %final, align 4, !dbg !20921
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20922
  call void @snapGridIncrement(%struct.TransInfo* %14, float* %final), !dbg !20923
  %15 = load i8, i8* %is_constrained, align 1, !dbg !20924
  %tobool9 = icmp ne i8 %15, 0, !dbg !20924
  br i1 %tobool9, label %if.then, label %if.end17, !dbg !20926

if.then:                                          ; preds = %lor.end
  %16 = load float, float* %final, align 4, !dbg !20927
  %cmp10 = fcmp olt float %16, 0.000000e+00, !dbg !20927
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !20931

if.then12:                                        ; preds = %if.then
  store float 0.000000e+00, float* %final, align 4, !dbg !20927
  br label %if.end16, !dbg !20927

if.else:                                          ; preds = %if.then
  %17 = load float, float* %final, align 4, !dbg !20932
  %cmp13 = fcmp ogt float %17, 1.000000e+00, !dbg !20932
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !20927

if.then15:                                        ; preds = %if.else
  store float 1.000000e+00, float* %final, align 4, !dbg !20932
  br label %if.end, !dbg !20932

if.end:                                           ; preds = %if.then15, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then12
  br label %if.end17, !dbg !20934

if.end17:                                         ; preds = %if.end16, %lor.end
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20935
  %num18 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 15, !dbg !20936
  %call19 = call zeroext i8 @applyNumInput(%struct.NumInput* %num18, float* %final), !dbg !20937
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !20938
  %19 = load i64, i64* %ofs, align 8, !dbg !20939
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 %19, !dbg !20940
  %20 = load i64, i64* %ofs, align 8, !dbg !20941
  %sub = sub i64 256, %20, !dbg !20942
  %call20 = call i64 @BLI_strncpy_rlen(i8* %add.ptr, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.138, i64 0, i64 0), i64 %sub), !dbg !20943
  %21 = load i64, i64* %ofs, align 8, !dbg !20944
  %add = add i64 %21, %call20, !dbg !20944
  store i64 %add, i64* %ofs, align 8, !dbg !20944
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20945
  %num21 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 15, !dbg !20947
  %call22 = call zeroext i8 @hasNumInput(%struct.NumInput* %num21), !dbg !20948
  %tobool23 = icmp ne i8 %call22, 0, !dbg !20948
  br i1 %tobool23, label %if.then24, label %if.else33, !dbg !20949

if.then24:                                        ; preds = %if.end17
  call void @llvm.dbg.declare(metadata [64 x i8]* %c, metadata !20950, metadata !DIExpression()), !dbg !20952
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20953
  %num25 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 15, !dbg !20954
  %arraydecay26 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !20955
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !20956
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 56, !dbg !20957
  %25 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !20957
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %25, i32 0, i32 38, !dbg !20958
  call void @outputNumInput(%struct.NumInput* %num25, i8* %arraydecay26, %struct.UnitSettings* %unit), !dbg !20959
  %arraydecay27 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !20960
  %26 = load i64, i64* %ofs, align 8, !dbg !20961
  %add.ptr28 = getelementptr inbounds i8, i8* %arraydecay27, i64 %26, !dbg !20962
  %arrayidx29 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !20963
  %27 = load i64, i64* %ofs, align 8, !dbg !20964
  %sub30 = sub i64 256, %27, !dbg !20965
  %call31 = call i64 @BLI_strncpy_rlen(i8* %add.ptr28, i8* %arrayidx29, i64 %sub30), !dbg !20966
  %28 = load i64, i64* %ofs, align 8, !dbg !20967
  %add32 = add i64 %28, %call31, !dbg !20967
  store i64 %add32, i64* %ofs, align 8, !dbg !20967
  br label %if.end40, !dbg !20968

if.else33:                                        ; preds = %if.end17
  %arraydecay34 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !20969
  %29 = load i64, i64* %ofs, align 8, !dbg !20971
  %add.ptr35 = getelementptr inbounds i8, i8* %arraydecay34, i64 %29, !dbg !20972
  %30 = load i64, i64* %ofs, align 8, !dbg !20973
  %sub36 = sub i64 256, %30, !dbg !20974
  %31 = load float, float* %final, align 4, !dbg !20975
  %conv37 = fpext float %31 to double, !dbg !20975
  %call38 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr35, i64 %sub36, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.139, i64 0, i64 0), double %conv37), !dbg !20976
  %32 = load i64, i64* %ofs, align 8, !dbg !20977
  %add39 = add i64 %32, %call38, !dbg !20977
  store i64 %add39, i64* %ofs, align 8, !dbg !20977
  br label %if.end40

if.end40:                                         ; preds = %if.else33, %if.then24
  %arraydecay41 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !20978
  %33 = load i64, i64* %ofs, align 8, !dbg !20979
  %add.ptr42 = getelementptr inbounds i8, i8* %arraydecay41, i64 %33, !dbg !20980
  %34 = load i64, i64* %ofs, align 8, !dbg !20981
  %sub43 = sub i64 256, %34, !dbg !20982
  %35 = load i8, i8* %is_proportional, align 1, !dbg !20983
  %tobool44 = icmp ne i8 %35, 0, !dbg !20984
  %lnot45 = xor i1 %tobool44, true, !dbg !20984
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !20984
  %conv47 = trunc i32 %lnot.ext46 to i8, !dbg !20984
  %call48 = call i8* @WM_bool_as_string(i8 zeroext %conv47), !dbg !20985
  %call49 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr42, i64 %sub43, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.140, i64 0, i64 0), i8* %call48), !dbg !20986
  %36 = load i64, i64* %ofs, align 8, !dbg !20987
  %add50 = add i64 %36, %call49, !dbg !20987
  store i64 %add50, i64* %ofs, align 8, !dbg !20987
  %37 = load i8, i8* %is_proportional, align 1, !dbg !20988
  %tobool51 = icmp ne i8 %37, 0, !dbg !20988
  br i1 %tobool51, label %if.end59, label %if.then52, !dbg !20990

if.then52:                                        ; preds = %if.end40
  %arraydecay53 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !20991
  %38 = load i64, i64* %ofs, align 8, !dbg !20993
  %add.ptr54 = getelementptr inbounds i8, i8* %arraydecay53, i64 %38, !dbg !20994
  %39 = load i64, i64* %ofs, align 8, !dbg !20995
  %sub55 = sub i64 256, %39, !dbg !20996
  %40 = load i8, i8* %flipped, align 1, !dbg !20997
  %call56 = call i8* @WM_bool_as_string(i8 zeroext %40), !dbg !20998
  %call57 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr54, i64 %sub55, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.141, i64 0, i64 0), i8* %call56), !dbg !20999
  %41 = load i64, i64* %ofs, align 8, !dbg !21000
  %add58 = add i64 %41, %call57, !dbg !21000
  store i64 %add58, i64* %ofs, align 8, !dbg !21000
  br label %if.end59, !dbg !21001

if.end59:                                         ; preds = %if.then52, %if.end40
  %arraydecay60 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !21002
  %42 = load i64, i64* %ofs, align 8, !dbg !21003
  %add.ptr61 = getelementptr inbounds i8, i8* %arraydecay60, i64 %42, !dbg !21004
  %43 = load i64, i64* %ofs, align 8, !dbg !21005
  %sub62 = sub i64 256, %43, !dbg !21006
  %44 = load i8, i8* %is_clamp, align 1, !dbg !21007
  %call63 = call i8* @WM_bool_as_string(i8 zeroext %44), !dbg !21008
  %call64 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr61, i64 %sub62, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.142, i64 0, i64 0), i8* %call63), !dbg !21009
  %45 = load i64, i64* %ofs, align 8, !dbg !21010
  %add65 = add i64 %45, %call64, !dbg !21010
  store i64 %add65, i64* %ofs, align 8, !dbg !21010
  %46 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21011
  %47 = load float, float* %final, align 4, !dbg !21012
  %call66 = call i32 @doVertSlide(%struct.TransInfo* %46, float %47), !dbg !21013
  %48 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21014
  call void @recalcData(%struct.TransInfo* %48), !dbg !21015
  %49 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21016
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %49, i32 0, i32 54, !dbg !21017
  %50 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !21017
  %arraydecay67 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !21018
  call void @ED_area_headerprint(%struct.ScrArea* %50, i8* %arraydecay67), !dbg !21019
  ret void, !dbg !21020
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @handleEventVertSlide(%struct.TransInfo* %t, %struct.wmEvent* %event) #0 !dbg !21021 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %struct.TransInfo*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %sld = alloca %struct.VertSlideData*, align 8
  %is_clamp = alloca i8, align 1
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !21022, metadata !DIExpression()), !dbg !21023
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !21024, metadata !DIExpression()), !dbg !21025
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21026
  %mode = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 0, !dbg !21028
  %1 = load i32, i32* %mode, align 8, !dbg !21028
  %cmp = icmp eq i32 %1, 29, !dbg !21029
  br i1 %cmp, label %if.then, label %if.end42, !dbg !21030

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.VertSlideData** %sld, metadata !21031, metadata !DIExpression()), !dbg !21033
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21034
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 40, !dbg !21035
  %3 = load i8*, i8** %customData, align 8, !dbg !21035
  %4 = bitcast i8* %3 to %struct.VertSlideData*, !dbg !21034
  store %struct.VertSlideData* %4, %struct.VertSlideData** %sld, align 8, !dbg !21033
  %5 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21036
  %tobool = icmp ne %struct.VertSlideData* %5, null, !dbg !21036
  br i1 %tobool, label %if.then1, label %if.end41, !dbg !21038

if.then1:                                         ; preds = %if.then
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !21039
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 2, !dbg !21041
  %7 = load i16, i16* %type, align 8, !dbg !21041
  %conv = sext i16 %7 to i32, !dbg !21039
  switch i32 %conv, label %sw.default [
    i32 101, label %sw.bb
    i32 102, label %sw.bb12
    i32 99, label %sw.bb25
    i32 4, label %sw.bb32
  ], !dbg !21042

sw.bb:                                            ; preds = %if.then1
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !21043
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 3, !dbg !21046
  %9 = load i16, i16* %val, align 2, !dbg !21046
  %conv2 = sext i16 %9 to i32, !dbg !21043
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !21047
  br i1 %cmp3, label %if.then5, label %if.end11, !dbg !21048

if.then5:                                         ; preds = %sw.bb
  %10 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21049
  %is_proportional = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %10, i32 0, i32 4, !dbg !21051
  %11 = load i8, i8* %is_proportional, align 4, !dbg !21051
  %tobool6 = icmp ne i8 %11, 0, !dbg !21052
  %lnot = xor i1 %tobool6, true, !dbg !21052
  %lnot.ext = zext i1 %lnot to i32, !dbg !21052
  %conv7 = trunc i32 %lnot.ext to i8, !dbg !21052
  %12 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21053
  %is_proportional8 = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %12, i32 0, i32 4, !dbg !21054
  store i8 %conv7, i8* %is_proportional8, align 4, !dbg !21055
  %13 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21056
  %flipped_vtx = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %13, i32 0, i32 5, !dbg !21058
  %14 = load i8, i8* %flipped_vtx, align 1, !dbg !21058
  %tobool9 = icmp ne i8 %14, 0, !dbg !21056
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !21059

if.then10:                                        ; preds = %if.then5
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21060
  call void @calcVertSlideCustomPoints(%struct.TransInfo* %15), !dbg !21062
  br label %if.end, !dbg !21063

if.end:                                           ; preds = %if.then10, %if.then5
  store i32 1, i32* %retval, align 4, !dbg !21064
  br label %return, !dbg !21064

if.end11:                                         ; preds = %sw.bb
  br label %sw.epilog, !dbg !21065

sw.bb12:                                          ; preds = %if.then1
  %16 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !21066
  %val13 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %16, i32 0, i32 3, !dbg !21069
  %17 = load i16, i16* %val13, align 2, !dbg !21069
  %conv14 = sext i16 %17 to i32, !dbg !21066
  %cmp15 = icmp eq i32 %conv14, 1, !dbg !21070
  br i1 %cmp15, label %if.then17, label %if.end24, !dbg !21071

if.then17:                                        ; preds = %sw.bb12
  %18 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21072
  %flipped_vtx18 = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %18, i32 0, i32 5, !dbg !21074
  %19 = load i8, i8* %flipped_vtx18, align 1, !dbg !21074
  %tobool19 = icmp ne i8 %19, 0, !dbg !21075
  %lnot20 = xor i1 %tobool19, true, !dbg !21075
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !21075
  %conv22 = trunc i32 %lnot.ext21 to i8, !dbg !21075
  %20 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21076
  %flipped_vtx23 = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %20, i32 0, i32 5, !dbg !21077
  store i8 %conv22, i8* %flipped_vtx23, align 1, !dbg !21078
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21079
  call void @calcVertSlideCustomPoints(%struct.TransInfo* %21), !dbg !21080
  store i32 1, i32* %retval, align 4, !dbg !21081
  br label %return, !dbg !21081

if.end24:                                         ; preds = %sw.bb12
  br label %sw.epilog, !dbg !21082

sw.bb25:                                          ; preds = %if.then1
  %22 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !21083
  %val26 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %22, i32 0, i32 3, !dbg !21086
  %23 = load i16, i16* %val26, align 2, !dbg !21086
  %conv27 = sext i16 %23 to i32, !dbg !21083
  %cmp28 = icmp eq i32 %conv27, 1, !dbg !21087
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !21088

if.then30:                                        ; preds = %sw.bb25
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21089
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 1, !dbg !21091
  %25 = load i32, i32* %flag, align 4, !dbg !21092
  %xor = xor i32 %25, 16777216, !dbg !21092
  store i32 %xor, i32* %flag, align 4, !dbg !21092
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21093
  call void @calcVertSlideCustomPoints(%struct.TransInfo* %26), !dbg !21094
  store i32 1, i32* %retval, align 4, !dbg !21095
  br label %return, !dbg !21095

if.end31:                                         ; preds = %sw.bb25
  br label %sw.epilog, !dbg !21096

sw.bb32:                                          ; preds = %if.then1
  call void @llvm.dbg.declare(metadata i8* %is_clamp, metadata !21097, metadata !DIExpression()), !dbg !21099
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21100
  %flag33 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %27, i32 0, i32 1, !dbg !21101
  %28 = load i32, i32* %flag33, align 4, !dbg !21101
  %and = and i32 %28, 16777216, !dbg !21102
  %tobool34 = icmp ne i32 %and, 0, !dbg !21103
  %lnot35 = xor i1 %tobool34, true, !dbg !21103
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !21103
  %conv37 = trunc i32 %lnot.ext36 to i8, !dbg !21103
  store i8 %conv37, i8* %is_clamp, align 1, !dbg !21099
  %29 = load i8, i8* %is_clamp, align 1, !dbg !21104
  %tobool38 = icmp ne i8 %29, 0, !dbg !21104
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !21106

if.then39:                                        ; preds = %sw.bb32
  %30 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21107
  %31 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !21109
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %31, i32 0, i32 6, !dbg !21110
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !21109
  call void @calcVertSlideMouseActiveEdges(%struct.TransInfo* %30, i32* %arraydecay), !dbg !21111
  br label %if.end40, !dbg !21112

if.end40:                                         ; preds = %if.then39, %sw.bb32
  %32 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21113
  call void @calcVertSlideCustomPoints(%struct.TransInfo* %32), !dbg !21114
  br label %sw.epilog, !dbg !21115

sw.default:                                       ; preds = %if.then1
  br label %sw.epilog, !dbg !21116

sw.epilog:                                        ; preds = %sw.default, %if.end40, %if.end31, %if.end24, %if.end11
  br label %if.end41, !dbg !21117

if.end41:                                         ; preds = %sw.epilog, %if.then
  br label %if.end42, !dbg !21118

if.end42:                                         ; preds = %if.end41, %entry
  store i32 0, i32* %retval, align 4, !dbg !21119
  br label %return, !dbg !21119

return:                                           ; preds = %if.end42, %if.then30, %if.then17, %if.end
  %33 = load i32, i32* %retval, align 4, !dbg !21120
  ret i32 %33, !dbg !21120
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @createVertSlideVerts(%struct.TransInfo* %t) #0 !dbg !21121 {
entry:
  %retval = alloca i8, align 1
  %t.addr = alloca %struct.TransInfo*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %eiter = alloca %struct.BMIter, align 8
  %e = alloca %struct.BMEdge*, align 8
  %v = alloca %struct.BMVert*, align 8
  %sv_array = alloca %struct.TransDataVertSlideVert*, align 8
  %sld = alloca %struct.VertSlideData*, align 8
  %rv3d = alloca %struct.RegionView3D*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %projectMat = alloca [4 x [4 x float]], align 16
  %j = alloca i32, align 4
  %ok = alloca i8, align 1
  %k = alloca i32, align 4
  %v_other = alloca %struct.BMVert*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !21122, metadata !DIExpression()), !dbg !21123
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !21124, metadata !DIExpression()), !dbg !21125
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21126
  %obedit = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 63, !dbg !21127
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !21127
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !21128
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !21125
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !21129, metadata !DIExpression()), !dbg !21130
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !21131
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !21132
  %3 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !21132
  store %struct.BMesh* %3, %struct.BMesh** %bm, align 8, !dbg !21130
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !21133, metadata !DIExpression()), !dbg !21134
  call void @llvm.dbg.declare(metadata %struct.BMIter* %eiter, metadata !21135, metadata !DIExpression()), !dbg !21136
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !21137, metadata !DIExpression()), !dbg !21138
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !21139, metadata !DIExpression()), !dbg !21140
  call void @llvm.dbg.declare(metadata %struct.TransDataVertSlideVert** %sv_array, metadata !21141, metadata !DIExpression()), !dbg !21142
  call void @llvm.dbg.declare(metadata %struct.VertSlideData** %sld, metadata !21143, metadata !DIExpression()), !dbg !21144
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !21145
  %call2 = call i8* %4(i64 40, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i64 0, i64 0)), !dbg !21145
  %5 = bitcast i8* %call2 to %struct.VertSlideData*, !dbg !21145
  store %struct.VertSlideData* %5, %struct.VertSlideData** %sld, align 8, !dbg !21144
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !21146, metadata !DIExpression()), !dbg !21147
  store %struct.RegionView3D* null, %struct.RegionView3D** %rv3d, align 8, !dbg !21147
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !21148, metadata !DIExpression()), !dbg !21149
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21150
  %ar3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 55, !dbg !21151
  %7 = load %struct.ARegion*, %struct.ARegion** %ar3, align 8, !dbg !21151
  store %struct.ARegion* %7, %struct.ARegion** %ar, align 8, !dbg !21149
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %projectMat, metadata !21152, metadata !DIExpression()), !dbg !21153
  call void @llvm.dbg.declare(metadata i32* %j, metadata !21154, metadata !DIExpression()), !dbg !21155
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21156
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 33, !dbg !21158
  %9 = load i8, i8* %spacetype, align 8, !dbg !21158
  %conv = zext i8 %9 to i32, !dbg !21156
  %cmp = icmp eq i32 %conv, 1, !dbg !21159
  br i1 %cmp, label %if.then, label %if.end, !dbg !21160

if.then:                                          ; preds = %entry
  %10 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !21161
  %tobool = icmp ne %struct.ARegion* %10, null, !dbg !21161
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !21161

cond.true:                                        ; preds = %if.then
  %11 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !21163
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %11, i32 0, i32 30, !dbg !21164
  %12 = load i8*, i8** %regiondata, align 8, !dbg !21164
  br label %cond.end, !dbg !21161

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !21161

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %12, %cond.true ], [ null, %cond.false ], !dbg !21161
  %13 = bitcast i8* %cond to %struct.RegionView3D*, !dbg !21161
  store %struct.RegionView3D* %13, %struct.RegionView3D** %rv3d, align 8, !dbg !21165
  br label %if.end, !dbg !21166

if.end:                                           ; preds = %cond.end, %entry
  %14 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21167
  %is_proportional = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %14, i32 0, i32 4, !dbg !21168
  store i8 1, i8* %is_proportional, align 4, !dbg !21169
  %15 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21170
  %curr_sv_index = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %15, i32 0, i32 6, !dbg !21171
  store i32 0, i32* %curr_sv_index, align 8, !dbg !21172
  %16 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21173
  %flipped_vtx = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %16, i32 0, i32 5, !dbg !21174
  store i8 0, i8* %flipped_vtx, align 1, !dbg !21175
  %17 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !21176
  %tobool5 = icmp ne %struct.RegionView3D* %17, null, !dbg !21176
  br i1 %tobool5, label %if.else, label %if.then6, !dbg !21178

if.then6:                                         ; preds = %if.end
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat, i64 0, i64 0, !dbg !21179
  call void @unit_m4([4 x float]* %arraydecay), !dbg !21181
  br label %if.end9, !dbg !21182

if.else:                                          ; preds = %if.end
  %18 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !21183
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21185
  %obedit7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 63, !dbg !21186
  %20 = load %struct.Object*, %struct.Object** %obedit7, align 8, !dbg !21186
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat, i64 0, i64 0, !dbg !21187
  call void @ED_view3d_ob_project_mat_get(%struct.RegionView3D* %18, %struct.Object* %20, [4 x float]* %arraydecay8), !dbg !21188
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  store i32 0, i32* %j, align 4, !dbg !21189
  %21 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !21190
  %call10 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %21, i8 zeroext 1, i8* null), !dbg !21190
  %22 = bitcast i8* %call10 to %struct.BMVert*, !dbg !21190
  store %struct.BMVert* %22, %struct.BMVert** %v, align 8, !dbg !21190
  br label %for.cond, !dbg !21190

for.cond:                                         ; preds = %for.inc35, %if.end9
  %23 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !21192
  %tobool11 = icmp ne %struct.BMVert* %23, null, !dbg !21190
  br i1 %tobool11, label %for.body, label %for.end37, !dbg !21190

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !21194, metadata !DIExpression()), !dbg !21196
  store i8 0, i8* %ok, align 1, !dbg !21196
  %24 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !21197
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %24, i32 0, i32 0, !dbg !21197
  %call12 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !21197
  %conv13 = zext i8 %call12 to i32, !dbg !21197
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !21197
  br i1 %tobool14, label %land.lhs.true, label %if.end28, !dbg !21199

land.lhs.true:                                    ; preds = %for.body
  %25 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !21200
  %e15 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %25, i32 0, i32 4, !dbg !21201
  %26 = load %struct.BMEdge*, %struct.BMEdge** %e15, align 8, !dbg !21201
  %tobool16 = icmp ne %struct.BMEdge* %26, null, !dbg !21200
  br i1 %tobool16, label %if.then17, label %if.end28, !dbg !21202

if.then17:                                        ; preds = %land.lhs.true
  %27 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !21203
  %28 = bitcast %struct.BMVert* %27 to i8*, !dbg !21203
  %call18 = call i8* @BM_iter_new(%struct.BMIter* %eiter, %struct.BMesh* null, i8 zeroext 4, i8* %28), !dbg !21203
  %29 = bitcast i8* %call18 to %struct.BMEdge*, !dbg !21203
  store %struct.BMEdge* %29, %struct.BMEdge** %e, align 8, !dbg !21203
  br label %for.cond19, !dbg !21203

for.cond19:                                       ; preds = %for.inc, %if.then17
  %30 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !21206
  %tobool20 = icmp ne %struct.BMEdge* %30, null, !dbg !21203
  br i1 %tobool20, label %for.body21, label %for.end, !dbg !21203

for.body21:                                       ; preds = %for.cond19
  %31 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !21208
  %head22 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %31, i32 0, i32 0, !dbg !21208
  %call23 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head22, i8 zeroext 2), !dbg !21208
  %tobool24 = icmp ne i8 %call23, 0, !dbg !21208
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !21211

if.then25:                                        ; preds = %for.body21
  store i8 1, i8* %ok, align 1, !dbg !21212
  br label %for.end, !dbg !21214

if.end26:                                         ; preds = %for.body21
  br label %for.inc, !dbg !21215

for.inc:                                          ; preds = %if.end26
  %call27 = call i8* @BM_iter_step(%struct.BMIter* %eiter), !dbg !21206
  %32 = bitcast i8* %call27 to %struct.BMEdge*, !dbg !21206
  store %struct.BMEdge* %32, %struct.BMEdge** %e, align 8, !dbg !21206
  br label %for.cond19, !dbg !21206, !llvm.loop !21216

for.end:                                          ; preds = %if.then25, %for.cond19
  br label %if.end28, !dbg !21218

if.end28:                                         ; preds = %for.end, %land.lhs.true, %for.body
  %33 = load i8, i8* %ok, align 1, !dbg !21219
  %tobool29 = icmp ne i8 %33, 0, !dbg !21219
  br i1 %tobool29, label %if.then30, label %if.else32, !dbg !21221

if.then30:                                        ; preds = %if.end28
  %34 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !21222
  %head31 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %34, i32 0, i32 0, !dbg !21222
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head31, i8 zeroext 16), !dbg !21222
  %35 = load i32, i32* %j, align 4, !dbg !21224
  %add = add nsw i32 %35, 1, !dbg !21224
  store i32 %add, i32* %j, align 4, !dbg !21224
  br label %if.end34, !dbg !21225

if.else32:                                        ; preds = %if.end28
  %36 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !21226
  %head33 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %36, i32 0, i32 0, !dbg !21226
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head33, i8 zeroext 16), !dbg !21226
  br label %if.end34

if.end34:                                         ; preds = %if.else32, %if.then30
  br label %for.inc35, !dbg !21228

for.inc35:                                        ; preds = %if.end34
  %call36 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !21192
  %37 = bitcast i8* %call36 to %struct.BMVert*, !dbg !21192
  store %struct.BMVert* %37, %struct.BMVert** %v, align 8, !dbg !21192
  br label %for.cond, !dbg !21192, !llvm.loop !21229

for.end37:                                        ; preds = %for.cond
  %38 = load i32, i32* %j, align 4, !dbg !21231
  %tobool38 = icmp ne i32 %38, 0, !dbg !21231
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !21233

if.then39:                                        ; preds = %for.end37
  %39 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !21234
  %40 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21236
  %41 = bitcast %struct.VertSlideData* %40 to i8*, !dbg !21236
  call void %39(i8* %41), !dbg !21234
  store i8 0, i8* %retval, align 1, !dbg !21237
  br label %return, !dbg !21237

if.end40:                                         ; preds = %for.end37
  %42 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !21238
  %43 = load i32, i32* %j, align 4, !dbg !21239
  %conv41 = sext i32 %43 to i64, !dbg !21239
  %mul = mul i64 56, %conv41, !dbg !21240
  %call42 = call i8* %42(i64 %mul, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.135, i64 0, i64 0)), !dbg !21238
  %44 = bitcast i8* %call42 to %struct.TransDataVertSlideVert*, !dbg !21238
  store %struct.TransDataVertSlideVert* %44, %struct.TransDataVertSlideVert** %sv_array, align 8, !dbg !21241
  store i32 0, i32* %j, align 4, !dbg !21242
  %45 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !21243
  %call43 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %45, i8 zeroext 1, i8* null), !dbg !21243
  %46 = bitcast i8* %call43 to %struct.BMVert*, !dbg !21243
  store %struct.BMVert* %46, %struct.BMVert** %v, align 8, !dbg !21243
  br label %for.cond44, !dbg !21243

for.cond44:                                       ; preds = %for.inc153, %if.end40
  %47 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !21245
  %tobool45 = icmp ne %struct.BMVert* %47, null, !dbg !21243
  br i1 %tobool45, label %for.body46, label %for.end155, !dbg !21243

for.body46:                                       ; preds = %for.cond44
  %48 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !21247
  %head47 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %48, i32 0, i32 0, !dbg !21247
  %call48 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head47, i8 zeroext 16), !dbg !21247
  %tobool49 = icmp ne i8 %call48, 0, !dbg !21247
  br i1 %tobool49, label %if.then50, label %if.end152, !dbg !21250

if.then50:                                        ; preds = %for.body46
  call void @llvm.dbg.declare(metadata i32* %k, metadata !21251, metadata !DIExpression()), !dbg !21253
  %49 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !21254
  %50 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv_array, align 8, !dbg !21255
  %51 = load i32, i32* %j, align 4, !dbg !21256
  %idxprom = sext i32 %51 to i64, !dbg !21255
  %arrayidx = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %50, i64 %idxprom, !dbg !21255
  %v51 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %arrayidx, i32 0, i32 0, !dbg !21257
  store %struct.BMVert* %49, %struct.BMVert** %v51, align 8, !dbg !21258
  %52 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv_array, align 8, !dbg !21259
  %53 = load i32, i32* %j, align 4, !dbg !21260
  %idxprom52 = sext i32 %53 to i64, !dbg !21259
  %arrayidx53 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %52, i64 %idxprom52, !dbg !21259
  %co_orig_3d = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %arrayidx53, i32 0, i32 1, !dbg !21261
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %co_orig_3d, i64 0, i64 0, !dbg !21259
  %54 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !21262
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %54, i32 0, i32 2, !dbg !21263
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !21262
  call void @copy_v3_v3(float* %arraydecay54, float* %arraydecay55), !dbg !21264
  store i32 0, i32* %k, align 4, !dbg !21265
  %55 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !21266
  %56 = bitcast %struct.BMVert* %55 to i8*, !dbg !21266
  %call56 = call i8* @BM_iter_new(%struct.BMIter* %eiter, %struct.BMesh* null, i8 zeroext 4, i8* %56), !dbg !21266
  %57 = bitcast i8* %call56 to %struct.BMEdge*, !dbg !21266
  store %struct.BMEdge* %57, %struct.BMEdge** %e, align 8, !dbg !21266
  br label %for.cond57, !dbg !21266

for.cond57:                                       ; preds = %for.inc65, %if.then50
  %58 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !21268
  %tobool58 = icmp ne %struct.BMEdge* %58, null, !dbg !21266
  br i1 %tobool58, label %for.body59, label %for.end67, !dbg !21266

for.body59:                                       ; preds = %for.cond57
  %59 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !21270
  %head60 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %59, i32 0, i32 0, !dbg !21270
  %call61 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head60, i8 zeroext 2), !dbg !21270
  %tobool62 = icmp ne i8 %call61, 0, !dbg !21270
  br i1 %tobool62, label %if.end64, label %if.then63, !dbg !21273

if.then63:                                        ; preds = %for.body59
  %60 = load i32, i32* %k, align 4, !dbg !21274
  %inc = add nsw i32 %60, 1, !dbg !21274
  store i32 %inc, i32* %k, align 4, !dbg !21274
  br label %if.end64, !dbg !21276

if.end64:                                         ; preds = %if.then63, %for.body59
  br label %for.inc65, !dbg !21277

for.inc65:                                        ; preds = %if.end64
  %call66 = call i8* @BM_iter_step(%struct.BMIter* %eiter), !dbg !21268
  %61 = bitcast i8* %call66 to %struct.BMEdge*, !dbg !21268
  store %struct.BMEdge* %61, %struct.BMEdge** %e, align 8, !dbg !21268
  br label %for.cond57, !dbg !21268, !llvm.loop !21278

for.end67:                                        ; preds = %for.cond57
  %62 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !21280
  %63 = load i32, i32* %k, align 4, !dbg !21281
  %conv68 = sext i32 %63 to i64, !dbg !21281
  %mul69 = mul i64 12, %conv68, !dbg !21282
  %call70 = call i8* %62(i64 %mul69, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.createVertSlideVerts, i64 0, i64 0)), !dbg !21280
  %64 = bitcast i8* %call70 to [3 x float]*, !dbg !21280
  %65 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv_array, align 8, !dbg !21283
  %66 = load i32, i32* %j, align 4, !dbg !21284
  %idxprom71 = sext i32 %66 to i64, !dbg !21283
  %arrayidx72 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %65, i64 %idxprom71, !dbg !21283
  %co_link_orig_3d = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %arrayidx72, i32 0, i32 3, !dbg !21285
  store [3 x float]* %64, [3 x float]** %co_link_orig_3d, align 8, !dbg !21286
  %67 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !21287
  %68 = load i32, i32* %k, align 4, !dbg !21288
  %conv73 = sext i32 %68 to i64, !dbg !21288
  %mul74 = mul i64 8, %conv73, !dbg !21289
  %call75 = call i8* %67(i64 %mul74, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.createVertSlideVerts, i64 0, i64 0)), !dbg !21287
  %69 = bitcast i8* %call75 to [2 x float]*, !dbg !21287
  %70 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv_array, align 8, !dbg !21290
  %71 = load i32, i32* %j, align 4, !dbg !21291
  %idxprom76 = sext i32 %71 to i64, !dbg !21290
  %arrayidx77 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %70, i64 %idxprom76, !dbg !21290
  %co_link_orig_2d = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %arrayidx77, i32 0, i32 4, !dbg !21292
  store [2 x float]* %69, [2 x float]** %co_link_orig_2d, align 8, !dbg !21293
  %72 = load i32, i32* %k, align 4, !dbg !21294
  %73 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv_array, align 8, !dbg !21295
  %74 = load i32, i32* %j, align 4, !dbg !21296
  %idxprom78 = sext i32 %74 to i64, !dbg !21295
  %arrayidx79 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %73, i64 %idxprom78, !dbg !21295
  %co_link_tot = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %arrayidx79, i32 0, i32 5, !dbg !21297
  store i32 %72, i32* %co_link_tot, align 8, !dbg !21298
  store i32 0, i32* %k, align 4, !dbg !21299
  %75 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !21300
  %76 = bitcast %struct.BMVert* %75 to i8*, !dbg !21300
  %call80 = call i8* @BM_iter_new(%struct.BMIter* %eiter, %struct.BMesh* null, i8 zeroext 4, i8* %76), !dbg !21300
  %77 = bitcast i8* %call80 to %struct.BMEdge*, !dbg !21300
  store %struct.BMEdge* %77, %struct.BMEdge** %e, align 8, !dbg !21300
  br label %for.cond81, !dbg !21300

for.cond81:                                       ; preds = %for.inc128, %for.end67
  %78 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !21302
  %tobool82 = icmp ne %struct.BMEdge* %78, null, !dbg !21300
  br i1 %tobool82, label %for.body83, label %for.end130, !dbg !21300

for.body83:                                       ; preds = %for.cond81
  %79 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !21304
  %head84 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %79, i32 0, i32 0, !dbg !21304
  %call85 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head84, i8 zeroext 2), !dbg !21304
  %tobool86 = icmp ne i8 %call85, 0, !dbg !21304
  br i1 %tobool86, label %if.end127, label %if.then87, !dbg !21307

if.then87:                                        ; preds = %for.body83
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v_other, metadata !21308, metadata !DIExpression()), !dbg !21310
  %80 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !21311
  %81 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !21312
  %call88 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %80, %struct.BMVert* %81), !dbg !21313
  store %struct.BMVert* %call88, %struct.BMVert** %v_other, align 8, !dbg !21310
  %82 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv_array, align 8, !dbg !21314
  %83 = load i32, i32* %j, align 4, !dbg !21315
  %idxprom89 = sext i32 %83 to i64, !dbg !21314
  %arrayidx90 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %82, i64 %idxprom89, !dbg !21314
  %co_link_orig_3d91 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %arrayidx90, i32 0, i32 3, !dbg !21316
  %84 = load [3 x float]*, [3 x float]** %co_link_orig_3d91, align 8, !dbg !21316
  %85 = load i32, i32* %k, align 4, !dbg !21317
  %idxprom92 = sext i32 %85 to i64, !dbg !21314
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %84, i64 %idxprom92, !dbg !21314
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx93, i64 0, i64 0, !dbg !21314
  %86 = load %struct.BMVert*, %struct.BMVert** %v_other, align 8, !dbg !21318
  %co95 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %86, i32 0, i32 2, !dbg !21319
  %arraydecay96 = getelementptr inbounds [3 x float], [3 x float]* %co95, i64 0, i64 0, !dbg !21318
  call void @copy_v3_v3(float* %arraydecay94, float* %arraydecay96), !dbg !21320
  %87 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !21321
  %tobool97 = icmp ne %struct.ARegion* %87, null, !dbg !21321
  br i1 %tobool97, label %if.then98, label %if.else112, !dbg !21323

if.then98:                                        ; preds = %if.then87
  %88 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !21324
  %89 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv_array, align 8, !dbg !21326
  %90 = load i32, i32* %j, align 4, !dbg !21327
  %idxprom99 = sext i32 %90 to i64, !dbg !21326
  %arrayidx100 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %89, i64 %idxprom99, !dbg !21326
  %co_link_orig_3d101 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %arrayidx100, i32 0, i32 3, !dbg !21328
  %91 = load [3 x float]*, [3 x float]** %co_link_orig_3d101, align 8, !dbg !21328
  %92 = load i32, i32* %k, align 4, !dbg !21329
  %idxprom102 = sext i32 %92 to i64, !dbg !21326
  %arrayidx103 = getelementptr inbounds [3 x float], [3 x float]* %91, i64 %idxprom102, !dbg !21326
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx103, i64 0, i64 0, !dbg !21326
  %93 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv_array, align 8, !dbg !21330
  %94 = load i32, i32* %j, align 4, !dbg !21331
  %idxprom105 = sext i32 %94 to i64, !dbg !21330
  %arrayidx106 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %93, i64 %idxprom105, !dbg !21330
  %co_link_orig_2d107 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %arrayidx106, i32 0, i32 4, !dbg !21332
  %95 = load [2 x float]*, [2 x float]** %co_link_orig_2d107, align 8, !dbg !21332
  %96 = load i32, i32* %k, align 4, !dbg !21333
  %idxprom108 = sext i32 %96 to i64, !dbg !21330
  %arrayidx109 = getelementptr inbounds [2 x float], [2 x float]* %95, i64 %idxprom108, !dbg !21330
  %arraydecay110 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx109, i64 0, i64 0, !dbg !21330
  %arraydecay111 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat, i64 0, i64 0, !dbg !21334
  call void @ED_view3d_project_float_v2_m4(%struct.ARegion* %88, float* %arraydecay104, float* %arraydecay110, [4 x float]* %arraydecay111), !dbg !21335
  br label %if.end125, !dbg !21336

if.else112:                                       ; preds = %if.then87
  %97 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv_array, align 8, !dbg !21337
  %98 = load i32, i32* %j, align 4, !dbg !21339
  %idxprom113 = sext i32 %98 to i64, !dbg !21337
  %arrayidx114 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %97, i64 %idxprom113, !dbg !21337
  %co_link_orig_2d115 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %arrayidx114, i32 0, i32 4, !dbg !21340
  %99 = load [2 x float]*, [2 x float]** %co_link_orig_2d115, align 8, !dbg !21340
  %100 = load i32, i32* %k, align 4, !dbg !21341
  %idxprom116 = sext i32 %100 to i64, !dbg !21337
  %arrayidx117 = getelementptr inbounds [2 x float], [2 x float]* %99, i64 %idxprom116, !dbg !21337
  %arraydecay118 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx117, i64 0, i64 0, !dbg !21337
  %101 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv_array, align 8, !dbg !21342
  %102 = load i32, i32* %j, align 4, !dbg !21343
  %idxprom119 = sext i32 %102 to i64, !dbg !21342
  %arrayidx120 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %101, i64 %idxprom119, !dbg !21342
  %co_link_orig_3d121 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %arrayidx120, i32 0, i32 3, !dbg !21344
  %103 = load [3 x float]*, [3 x float]** %co_link_orig_3d121, align 8, !dbg !21344
  %104 = load i32, i32* %k, align 4, !dbg !21345
  %idxprom122 = sext i32 %104 to i64, !dbg !21342
  %arrayidx123 = getelementptr inbounds [3 x float], [3 x float]* %103, i64 %idxprom122, !dbg !21342
  %arraydecay124 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx123, i64 0, i64 0, !dbg !21342
  call void @copy_v2_v2(float* %arraydecay118, float* %arraydecay124), !dbg !21346
  br label %if.end125

if.end125:                                        ; preds = %if.else112, %if.then98
  %105 = load i32, i32* %k, align 4, !dbg !21347
  %inc126 = add nsw i32 %105, 1, !dbg !21347
  store i32 %inc126, i32* %k, align 4, !dbg !21347
  br label %if.end127, !dbg !21348

if.end127:                                        ; preds = %if.end125, %for.body83
  br label %for.inc128, !dbg !21349

for.inc128:                                       ; preds = %if.end127
  %call129 = call i8* @BM_iter_step(%struct.BMIter* %eiter), !dbg !21302
  %106 = bitcast i8* %call129 to %struct.BMEdge*, !dbg !21302
  store %struct.BMEdge* %106, %struct.BMEdge** %e, align 8, !dbg !21302
  br label %for.cond81, !dbg !21302, !llvm.loop !21350

for.end130:                                       ; preds = %for.cond81
  %107 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !21352
  %tobool131 = icmp ne %struct.ARegion* %107, null, !dbg !21352
  br i1 %tobool131, label %if.then132, label %if.else141, !dbg !21354

if.then132:                                       ; preds = %for.end130
  %108 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !21355
  %109 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv_array, align 8, !dbg !21357
  %110 = load i32, i32* %j, align 4, !dbg !21358
  %idxprom133 = sext i32 %110 to i64, !dbg !21357
  %arrayidx134 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %109, i64 %idxprom133, !dbg !21357
  %co_orig_3d135 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %arrayidx134, i32 0, i32 1, !dbg !21359
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %co_orig_3d135, i64 0, i64 0, !dbg !21357
  %111 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv_array, align 8, !dbg !21360
  %112 = load i32, i32* %j, align 4, !dbg !21361
  %idxprom137 = sext i32 %112 to i64, !dbg !21360
  %arrayidx138 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %111, i64 %idxprom137, !dbg !21360
  %co_orig_2d = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %arrayidx138, i32 0, i32 2, !dbg !21362
  %arraydecay139 = getelementptr inbounds [2 x float], [2 x float]* %co_orig_2d, i64 0, i64 0, !dbg !21360
  %arraydecay140 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projectMat, i64 0, i64 0, !dbg !21363
  call void @ED_view3d_project_float_v2_m4(%struct.ARegion* %108, float* %arraydecay136, float* %arraydecay139, [4 x float]* %arraydecay140), !dbg !21364
  br label %if.end150, !dbg !21365

if.else141:                                       ; preds = %for.end130
  %113 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv_array, align 8, !dbg !21366
  %114 = load i32, i32* %j, align 4, !dbg !21368
  %idxprom142 = sext i32 %114 to i64, !dbg !21366
  %arrayidx143 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %113, i64 %idxprom142, !dbg !21366
  %co_orig_2d144 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %arrayidx143, i32 0, i32 2, !dbg !21369
  %arraydecay145 = getelementptr inbounds [2 x float], [2 x float]* %co_orig_2d144, i64 0, i64 0, !dbg !21366
  %115 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv_array, align 8, !dbg !21370
  %116 = load i32, i32* %j, align 4, !dbg !21371
  %idxprom146 = sext i32 %116 to i64, !dbg !21370
  %arrayidx147 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %115, i64 %idxprom146, !dbg !21370
  %co_orig_3d148 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %arrayidx147, i32 0, i32 1, !dbg !21372
  %arraydecay149 = getelementptr inbounds [3 x float], [3 x float]* %co_orig_3d148, i64 0, i64 0, !dbg !21370
  call void @copy_v2_v2(float* %arraydecay145, float* %arraydecay149), !dbg !21373
  br label %if.end150

if.end150:                                        ; preds = %if.else141, %if.then132
  %117 = load i32, i32* %j, align 4, !dbg !21374
  %inc151 = add nsw i32 %117, 1, !dbg !21374
  store i32 %inc151, i32* %j, align 4, !dbg !21374
  br label %if.end152, !dbg !21375

if.end152:                                        ; preds = %if.end150, %for.body46
  br label %for.inc153, !dbg !21376

for.inc153:                                       ; preds = %if.end152
  %call154 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !21245
  %118 = bitcast i8* %call154 to %struct.BMVert*, !dbg !21245
  store %struct.BMVert* %118, %struct.BMVert** %v, align 8, !dbg !21245
  br label %for.cond44, !dbg !21245, !llvm.loop !21377

for.end155:                                       ; preds = %for.cond44
  %119 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv_array, align 8, !dbg !21379
  %120 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21380
  %sv = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %120, i32 0, i32 0, !dbg !21381
  store %struct.TransDataVertSlideVert* %119, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !21382
  %121 = load i32, i32* %j, align 4, !dbg !21383
  %122 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21384
  %totsv = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %122, i32 0, i32 1, !dbg !21385
  store i32 %121, i32* %totsv, align 8, !dbg !21386
  %123 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !21387
  %124 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21388
  %em156 = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %124, i32 0, i32 2, !dbg !21389
  store %struct.BMEditMesh* %123, %struct.BMEditMesh** %em156, align 8, !dbg !21390
  %125 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21391
  %perc = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %125, i32 0, i32 3, !dbg !21392
  store float 0.000000e+00, float* %perc, align 8, !dbg !21393
  %126 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21394
  %127 = bitcast %struct.VertSlideData* %126 to i8*, !dbg !21394
  %128 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21395
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %128, i32 0, i32 40, !dbg !21396
  store i8* %127, i8** %customData, align 8, !dbg !21397
  %129 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !21398
  %tobool157 = icmp ne %struct.RegionView3D* %129, null, !dbg !21398
  br i1 %tobool157, label %if.then158, label %if.end162, !dbg !21400

if.then158:                                       ; preds = %for.end155
  %130 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21401
  %131 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21403
  %mval = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %131, i32 0, i32 61, !dbg !21404
  %arraydecay159 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !21403
  call void @calcVertSlideMouseActiveVert(%struct.TransInfo* %130, i32* %arraydecay159), !dbg !21405
  %132 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21406
  %133 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21407
  %mval160 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %133, i32 0, i32 61, !dbg !21408
  %arraydecay161 = getelementptr inbounds [2 x i32], [2 x i32]* %mval160, i64 0, i64 0, !dbg !21407
  call void @calcVertSlideMouseActiveEdges(%struct.TransInfo* %132, i32* %arraydecay161), !dbg !21409
  br label %if.end162, !dbg !21410

if.end162:                                        ; preds = %if.then158, %for.end155
  store i8 1, i8* %retval, align 1, !dbg !21411
  br label %return, !dbg !21411

return:                                           ; preds = %if.end162, %if.then39
  %134 = load i8, i8* %retval, align 1, !dbg !21412
  ret i8 %134, !dbg !21412
}

; Function Attrs: noinline nounwind uwtable
define internal void @calcVertSlideCustomPoints(%struct.TransInfo* %t) #0 !dbg !21413 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %sld = alloca %struct.VertSlideData*, align 8
  %sv = alloca %struct.TransDataVertSlideVert*, align 8
  %co_orig = alloca float*, align 8
  %co_curr = alloca float*, align 8
  %mval_start = alloca [2 x i32], align 4
  %mval_end = alloca [2 x i32], align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !21414, metadata !DIExpression()), !dbg !21415
  call void @llvm.dbg.declare(metadata %struct.VertSlideData** %sld, metadata !21416, metadata !DIExpression()), !dbg !21417
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21418
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 40, !dbg !21419
  %1 = load i8*, i8** %customData, align 8, !dbg !21419
  %2 = bitcast i8* %1 to %struct.VertSlideData*, !dbg !21418
  store %struct.VertSlideData* %2, %struct.VertSlideData** %sld, align 8, !dbg !21417
  call void @llvm.dbg.declare(metadata %struct.TransDataVertSlideVert** %sv, metadata !21420, metadata !DIExpression()), !dbg !21421
  %3 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21422
  %sv1 = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %3, i32 0, i32 0, !dbg !21423
  %4 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21423
  %5 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21424
  %curr_sv_index = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %5, i32 0, i32 6, !dbg !21425
  %6 = load i32, i32* %curr_sv_index, align 8, !dbg !21425
  %idxprom = sext i32 %6 to i64, !dbg !21422
  %arrayidx = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %4, i64 %idxprom, !dbg !21422
  store %struct.TransDataVertSlideVert* %arrayidx, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !21421
  call void @llvm.dbg.declare(metadata float** %co_orig, metadata !21426, metadata !DIExpression()), !dbg !21427
  %7 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !21428
  %co_orig_2d = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %7, i32 0, i32 2, !dbg !21429
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %co_orig_2d, i64 0, i64 0, !dbg !21428
  store float* %arraydecay, float** %co_orig, align 8, !dbg !21427
  call void @llvm.dbg.declare(metadata float** %co_curr, metadata !21430, metadata !DIExpression()), !dbg !21431
  %8 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !21432
  %co_link_orig_2d = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %8, i32 0, i32 4, !dbg !21433
  %9 = load [2 x float]*, [2 x float]** %co_link_orig_2d, align 8, !dbg !21433
  %10 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !21434
  %co_link_curr = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %10, i32 0, i32 6, !dbg !21435
  %11 = load i32, i32* %co_link_curr, align 4, !dbg !21435
  %idxprom2 = sext i32 %11 to i64, !dbg !21432
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %9, i64 %idxprom2, !dbg !21432
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx3, i64 0, i64 0, !dbg !21432
  store float* %arraydecay4, float** %co_curr, align 8, !dbg !21431
  call void @llvm.dbg.declare(metadata [2 x i32]* %mval_start, metadata !21436, metadata !DIExpression()), !dbg !21438
  %arrayinit.begin = getelementptr inbounds [2 x i32], [2 x i32]* %mval_start, i64 0, i64 0, !dbg !21439
  %12 = load float*, float** %co_orig, align 8, !dbg !21440
  %arrayidx5 = getelementptr inbounds float, float* %12, i64 0, !dbg !21440
  %13 = load float, float* %arrayidx5, align 4, !dbg !21440
  %conv = fptosi float %13 to i32, !dbg !21440
  store i32 %conv, i32* %arrayinit.begin, align 4, !dbg !21439
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !21439
  %14 = load float*, float** %co_orig, align 8, !dbg !21441
  %arrayidx6 = getelementptr inbounds float, float* %14, i64 1, !dbg !21441
  %15 = load float, float* %arrayidx6, align 4, !dbg !21441
  %conv7 = fptosi float %15 to i32, !dbg !21441
  store i32 %conv7, i32* %arrayinit.element, align 4, !dbg !21439
  call void @llvm.dbg.declare(metadata [2 x i32]* %mval_end, metadata !21442, metadata !DIExpression()), !dbg !21443
  %arrayinit.begin8 = getelementptr inbounds [2 x i32], [2 x i32]* %mval_end, i64 0, i64 0, !dbg !21444
  %16 = load float*, float** %co_curr, align 8, !dbg !21445
  %arrayidx9 = getelementptr inbounds float, float* %16, i64 0, !dbg !21445
  %17 = load float, float* %arrayidx9, align 4, !dbg !21445
  %conv10 = fptosi float %17 to i32, !dbg !21445
  store i32 %conv10, i32* %arrayinit.begin8, align 4, !dbg !21444
  %arrayinit.element11 = getelementptr inbounds i32, i32* %arrayinit.begin8, i64 1, !dbg !21444
  %18 = load float*, float** %co_curr, align 8, !dbg !21446
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 1, !dbg !21446
  %19 = load float, float* %arrayidx12, align 4, !dbg !21446
  %conv13 = fptosi float %19 to i32, !dbg !21446
  store i32 %conv13, i32* %arrayinit.element11, align 4, !dbg !21444
  %20 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21447
  %flipped_vtx = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %20, i32 0, i32 5, !dbg !21449
  %21 = load i8, i8* %flipped_vtx, align 1, !dbg !21449
  %conv14 = zext i8 %21 to i32, !dbg !21447
  %tobool = icmp ne i32 %conv14, 0, !dbg !21447
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !21450

land.lhs.true:                                    ; preds = %entry
  %22 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21451
  %is_proportional = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %22, i32 0, i32 4, !dbg !21452
  %23 = load i8, i8* %is_proportional, align 4, !dbg !21452
  %conv15 = zext i8 %23 to i32, !dbg !21451
  %cmp = icmp eq i32 %conv15, 0, !dbg !21453
  br i1 %cmp, label %if.then, label %if.else, !dbg !21454

if.then:                                          ; preds = %land.lhs.true
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21455
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21457
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 16, !dbg !21458
  %arraydecay17 = getelementptr inbounds [2 x i32], [2 x i32]* %mval_start, i64 0, i64 0, !dbg !21459
  %arraydecay18 = getelementptr inbounds [2 x i32], [2 x i32]* %mval_end, i64 0, i64 0, !dbg !21460
  call void @setCustomPoints(%struct.TransInfo* %24, %struct.MouseInput* %mouse, i32* %arraydecay17, i32* %arraydecay18), !dbg !21461
  br label %if.end, !dbg !21462

if.else:                                          ; preds = %land.lhs.true, %entry
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21463
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21465
  %mouse19 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %27, i32 0, i32 16, !dbg !21466
  %arraydecay20 = getelementptr inbounds [2 x i32], [2 x i32]* %mval_end, i64 0, i64 0, !dbg !21467
  %arraydecay21 = getelementptr inbounds [2 x i32], [2 x i32]* %mval_start, i64 0, i64 0, !dbg !21468
  call void @setCustomPoints(%struct.TransInfo* %26, %struct.MouseInput* %mouse19, i32* %arraydecay20, i32* %arraydecay21), !dbg !21469
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !21470
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @doVertSlide(%struct.TransInfo* %t, float %perc) #0 !dbg !21471 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %perc.addr = alloca float, align 4
  %sld = alloca %struct.VertSlideData*, align 8
  %svlist = alloca %struct.TransDataVertSlideVert*, align 8
  %sv1 = alloca %struct.TransDataVertSlideVert*, align 8
  %i = alloca i32, align 4
  %sv_curr = alloca %struct.TransDataVertSlideVert*, align 8
  %edge_len_curr = alloca float, align 4
  %tperc = alloca float, align 4
  %edge_len = alloca float, align 4
  %dir = alloca [3 x float], align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !21472, metadata !DIExpression()), !dbg !21473
  store float %perc, float* %perc.addr, align 4
  call void @llvm.dbg.declare(metadata float* %perc.addr, metadata !21474, metadata !DIExpression()), !dbg !21475
  call void @llvm.dbg.declare(metadata %struct.VertSlideData** %sld, metadata !21476, metadata !DIExpression()), !dbg !21477
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21478
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 40, !dbg !21479
  %1 = load i8*, i8** %customData, align 8, !dbg !21479
  %2 = bitcast i8* %1 to %struct.VertSlideData*, !dbg !21478
  store %struct.VertSlideData* %2, %struct.VertSlideData** %sld, align 8, !dbg !21477
  call void @llvm.dbg.declare(metadata %struct.TransDataVertSlideVert** %svlist, metadata !21480, metadata !DIExpression()), !dbg !21481
  %3 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21482
  %sv = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %3, i32 0, i32 0, !dbg !21483
  %4 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !21483
  store %struct.TransDataVertSlideVert* %4, %struct.TransDataVertSlideVert** %svlist, align 8, !dbg !21481
  call void @llvm.dbg.declare(metadata %struct.TransDataVertSlideVert** %sv1, metadata !21484, metadata !DIExpression()), !dbg !21485
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21486, metadata !DIExpression()), !dbg !21487
  %5 = load float, float* %perc.addr, align 4, !dbg !21488
  %6 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21489
  %perc2 = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %6, i32 0, i32 3, !dbg !21490
  store float %5, float* %perc2, align 8, !dbg !21491
  %7 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %svlist, align 8, !dbg !21492
  store %struct.TransDataVertSlideVert* %7, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21493
  %8 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21494
  %is_proportional = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %8, i32 0, i32 4, !dbg !21496
  %9 = load i8, i8* %is_proportional, align 4, !dbg !21496
  %conv = zext i8 %9 to i32, !dbg !21494
  %cmp = icmp eq i32 %conv, 1, !dbg !21497
  br i1 %cmp, label %if.then, label %if.else, !dbg !21498

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !21499
  br label %for.cond, !dbg !21502

for.cond:                                         ; preds = %for.inc, %if.then
  %10 = load i32, i32* %i, align 4, !dbg !21503
  %11 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21505
  %totsv = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %11, i32 0, i32 1, !dbg !21506
  %12 = load i32, i32* %totsv, align 8, !dbg !21506
  %cmp4 = icmp slt i32 %10, %12, !dbg !21507
  br i1 %cmp4, label %for.body, label %for.end, !dbg !21508

for.body:                                         ; preds = %for.cond
  %13 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21509
  %v = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %13, i32 0, i32 0, !dbg !21511
  %14 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !21511
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %14, i32 0, i32 2, !dbg !21512
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !21509
  %15 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21513
  %co_orig_3d = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %15, i32 0, i32 1, !dbg !21514
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %co_orig_3d, i64 0, i64 0, !dbg !21513
  %16 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21515
  %co_link_orig_3d = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %16, i32 0, i32 3, !dbg !21516
  %17 = load [3 x float]*, [3 x float]** %co_link_orig_3d, align 8, !dbg !21516
  %18 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21517
  %co_link_curr = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %18, i32 0, i32 6, !dbg !21518
  %19 = load i32, i32* %co_link_curr, align 4, !dbg !21518
  %idxprom = sext i32 %19 to i64, !dbg !21515
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %17, i64 %idxprom, !dbg !21515
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !21515
  %20 = load float, float* %perc.addr, align 4, !dbg !21519
  call void @interp_v3_v3v3(float* %arraydecay, float* %arraydecay6, float* %arraydecay7, float %20), !dbg !21520
  br label %for.inc, !dbg !21521

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !21522
  %inc = add nsw i32 %21, 1, !dbg !21522
  store i32 %inc, i32* %i, align 4, !dbg !21522
  %22 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21523
  %incdec.ptr = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %22, i32 1, !dbg !21523
  store %struct.TransDataVertSlideVert* %incdec.ptr, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21523
  br label %for.cond, !dbg !21524, !llvm.loop !21525

for.end:                                          ; preds = %for.cond
  br label %if.end64, !dbg !21527

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.TransDataVertSlideVert** %sv_curr, metadata !21528, metadata !DIExpression()), !dbg !21530
  %23 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21531
  %sv8 = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %23, i32 0, i32 0, !dbg !21532
  %24 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv8, align 8, !dbg !21532
  %25 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21533
  %curr_sv_index = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %25, i32 0, i32 6, !dbg !21534
  %26 = load i32, i32* %curr_sv_index, align 8, !dbg !21534
  %idxprom9 = sext i32 %26 to i64, !dbg !21531
  %arrayidx10 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %24, i64 %idxprom9, !dbg !21531
  store %struct.TransDataVertSlideVert* %arrayidx10, %struct.TransDataVertSlideVert** %sv_curr, align 8, !dbg !21530
  call void @llvm.dbg.declare(metadata float* %edge_len_curr, metadata !21535, metadata !DIExpression()), !dbg !21536
  %27 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv_curr, align 8, !dbg !21537
  %co_orig_3d11 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %27, i32 0, i32 1, !dbg !21538
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %co_orig_3d11, i64 0, i64 0, !dbg !21537
  %28 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv_curr, align 8, !dbg !21539
  %co_link_orig_3d13 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %28, i32 0, i32 3, !dbg !21540
  %29 = load [3 x float]*, [3 x float]** %co_link_orig_3d13, align 8, !dbg !21540
  %30 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv_curr, align 8, !dbg !21541
  %co_link_curr14 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %30, i32 0, i32 6, !dbg !21542
  %31 = load i32, i32* %co_link_curr14, align 4, !dbg !21542
  %idxprom15 = sext i32 %31 to i64, !dbg !21539
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %29, i64 %idxprom15, !dbg !21539
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 0, !dbg !21539
  %call = call float @len_v3v3(float* %arraydecay12, float* %arraydecay17), !dbg !21543
  store float %call, float* %edge_len_curr, align 4, !dbg !21536
  call void @llvm.dbg.declare(metadata float* %tperc, metadata !21544, metadata !DIExpression()), !dbg !21545
  %32 = load float, float* %perc.addr, align 4, !dbg !21546
  %33 = load float, float* %edge_len_curr, align 4, !dbg !21547
  %mul = fmul float %32, %33, !dbg !21548
  store float %mul, float* %tperc, align 4, !dbg !21545
  store i32 0, i32* %i, align 4, !dbg !21549
  br label %for.cond18, !dbg !21551

for.cond18:                                       ; preds = %for.inc60, %if.else
  %34 = load i32, i32* %i, align 4, !dbg !21552
  %35 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21554
  %totsv19 = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %35, i32 0, i32 1, !dbg !21555
  %36 = load i32, i32* %totsv19, align 8, !dbg !21555
  %cmp20 = icmp slt i32 %34, %36, !dbg !21556
  br i1 %cmp20, label %for.body22, label %for.end63, !dbg !21557

for.body22:                                       ; preds = %for.cond18
  call void @llvm.dbg.declare(metadata float* %edge_len, metadata !21558, metadata !DIExpression()), !dbg !21560
  call void @llvm.dbg.declare(metadata [3 x float]* %dir, metadata !21561, metadata !DIExpression()), !dbg !21562
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !21563
  %37 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21564
  %co_link_orig_3d24 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %37, i32 0, i32 3, !dbg !21565
  %38 = load [3 x float]*, [3 x float]** %co_link_orig_3d24, align 8, !dbg !21565
  %39 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21566
  %co_link_curr25 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %39, i32 0, i32 6, !dbg !21567
  %40 = load i32, i32* %co_link_curr25, align 4, !dbg !21567
  %idxprom26 = sext i32 %40 to i64, !dbg !21564
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %38, i64 %idxprom26, !dbg !21564
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx27, i64 0, i64 0, !dbg !21564
  %41 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21568
  %co_orig_3d29 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %41, i32 0, i32 1, !dbg !21569
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %co_orig_3d29, i64 0, i64 0, !dbg !21568
  call void @sub_v3_v3v3(float* %arraydecay23, float* %arraydecay28, float* %arraydecay30), !dbg !21570
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !21571
  %call32 = call float @normalize_v3(float* %arraydecay31), !dbg !21572
  store float %call32, float* %edge_len, align 4, !dbg !21573
  %42 = load float, float* %edge_len, align 4, !dbg !21574
  %cmp33 = fcmp ogt float %42, 0x3E80000000000000, !dbg !21576
  br i1 %cmp33, label %if.then35, label %if.else53, !dbg !21577

if.then35:                                        ; preds = %for.body22
  %43 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21578
  %flipped_vtx = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %43, i32 0, i32 5, !dbg !21581
  %44 = load i8, i8* %flipped_vtx, align 1, !dbg !21581
  %tobool = icmp ne i8 %44, 0, !dbg !21578
  br i1 %tobool, label %if.then36, label %if.else46, !dbg !21582

if.then36:                                        ; preds = %if.then35
  %45 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21583
  %v37 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %45, i32 0, i32 0, !dbg !21585
  %46 = load %struct.BMVert*, %struct.BMVert** %v37, align 8, !dbg !21585
  %co38 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %46, i32 0, i32 2, !dbg !21586
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %co38, i64 0, i64 0, !dbg !21583
  %47 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21587
  %co_link_orig_3d40 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %47, i32 0, i32 3, !dbg !21588
  %48 = load [3 x float]*, [3 x float]** %co_link_orig_3d40, align 8, !dbg !21588
  %49 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21589
  %co_link_curr41 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %49, i32 0, i32 6, !dbg !21590
  %50 = load i32, i32* %co_link_curr41, align 4, !dbg !21590
  %idxprom42 = sext i32 %50 to i64, !dbg !21587
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %48, i64 %idxprom42, !dbg !21587
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx43, i64 0, i64 0, !dbg !21587
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !21591
  %51 = load float, float* %tperc, align 4, !dbg !21592
  %fneg = fneg float %51, !dbg !21593
  call void @madd_v3_v3v3fl(float* %arraydecay39, float* %arraydecay44, float* %arraydecay45, float %fneg), !dbg !21594
  br label %if.end, !dbg !21595

if.else46:                                        ; preds = %if.then35
  %52 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21596
  %v47 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %52, i32 0, i32 0, !dbg !21598
  %53 = load %struct.BMVert*, %struct.BMVert** %v47, align 8, !dbg !21598
  %co48 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %53, i32 0, i32 2, !dbg !21599
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %co48, i64 0, i64 0, !dbg !21596
  %54 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21600
  %co_orig_3d50 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %54, i32 0, i32 1, !dbg !21601
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %co_orig_3d50, i64 0, i64 0, !dbg !21600
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !21602
  %55 = load float, float* %tperc, align 4, !dbg !21603
  call void @madd_v3_v3v3fl(float* %arraydecay49, float* %arraydecay51, float* %arraydecay52, float %55), !dbg !21604
  br label %if.end

if.end:                                           ; preds = %if.else46, %if.then36
  br label %if.end59, !dbg !21605

if.else53:                                        ; preds = %for.body22
  %56 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21606
  %v54 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %56, i32 0, i32 0, !dbg !21608
  %57 = load %struct.BMVert*, %struct.BMVert** %v54, align 8, !dbg !21608
  %co55 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %57, i32 0, i32 2, !dbg !21609
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %co55, i64 0, i64 0, !dbg !21606
  %58 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21610
  %co_orig_3d57 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %58, i32 0, i32 1, !dbg !21611
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %co_orig_3d57, i64 0, i64 0, !dbg !21610
  call void @copy_v3_v3(float* %arraydecay56, float* %arraydecay58), !dbg !21612
  br label %if.end59

if.end59:                                         ; preds = %if.else53, %if.end
  br label %for.inc60, !dbg !21613

for.inc60:                                        ; preds = %if.end59
  %59 = load i32, i32* %i, align 4, !dbg !21614
  %inc61 = add nsw i32 %59, 1, !dbg !21614
  store i32 %inc61, i32* %i, align 4, !dbg !21614
  %60 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21615
  %incdec.ptr62 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %60, i32 1, !dbg !21615
  store %struct.TransDataVertSlideVert* %incdec.ptr62, %struct.TransDataVertSlideVert** %sv1, align 8, !dbg !21615
  br label %for.cond18, !dbg !21616, !llvm.loop !21617

for.end63:                                        ; preds = %for.cond18
  br label %if.end64

if.end64:                                         ; preds = %for.end63, %for.end
  ret i32 1, !dbg !21619
}

; Function Attrs: noinline nounwind uwtable
define internal void @calcVertSlideMouseActiveEdges(%struct.TransInfo* %t, i32* %mval) #0 !dbg !21620 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %mval.addr = alloca i32*, align 8
  %sld = alloca %struct.VertSlideData*, align 8
  %mval_fl = alloca [2 x float], align 4
  %dir = alloca [2 x float], align 4
  %sv = alloca %struct.TransDataVertSlideVert*, align 8
  %i = alloca i32, align 4
  %dir_dot_best = alloca float, align 4
  %co_link_curr_best = alloca i32, align 4
  %j = alloca i32, align 4
  %tdir = alloca [2 x float], align 4
  %dir_dot = alloca float, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !21621, metadata !DIExpression()), !dbg !21622
  store i32* %mval, i32** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mval.addr, metadata !21623, metadata !DIExpression()), !dbg !21624
  call void @llvm.dbg.declare(metadata %struct.VertSlideData** %sld, metadata !21625, metadata !DIExpression()), !dbg !21626
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21627
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 40, !dbg !21628
  %1 = load i8*, i8** %customData, align 8, !dbg !21628
  %2 = bitcast i8* %1 to %struct.VertSlideData*, !dbg !21627
  store %struct.VertSlideData* %2, %struct.VertSlideData** %sld, align 8, !dbg !21626
  call void @llvm.dbg.declare(metadata [2 x float]* %mval_fl, metadata !21629, metadata !DIExpression()), !dbg !21630
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %mval_fl, i64 0, i64 0, !dbg !21631
  %3 = load i32*, i32** %mval.addr, align 8, !dbg !21632
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 0, !dbg !21632
  %4 = load i32, i32* %arrayidx, align 4, !dbg !21632
  %conv = sitofp i32 %4 to float, !dbg !21632
  store float %conv, float* %arrayinit.begin, align 4, !dbg !21631
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !21631
  %5 = load i32*, i32** %mval.addr, align 8, !dbg !21632
  %arrayidx1 = getelementptr inbounds i32, i32* %5, i64 1, !dbg !21632
  %6 = load i32, i32* %arrayidx1, align 4, !dbg !21632
  %conv2 = sitofp i32 %6 to float, !dbg !21632
  store float %conv2, float* %arrayinit.element, align 4, !dbg !21631
  call void @llvm.dbg.declare(metadata [2 x float]* %dir, metadata !21633, metadata !DIExpression()), !dbg !21634
  call void @llvm.dbg.declare(metadata %struct.TransDataVertSlideVert** %sv, metadata !21635, metadata !DIExpression()), !dbg !21636
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21637, metadata !DIExpression()), !dbg !21638
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %dir, i64 0, i64 0, !dbg !21639
  %7 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21640
  %sv3 = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %7, i32 0, i32 0, !dbg !21641
  %8 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv3, align 8, !dbg !21641
  %9 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21642
  %curr_sv_index = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %9, i32 0, i32 6, !dbg !21643
  %10 = load i32, i32* %curr_sv_index, align 8, !dbg !21643
  %idxprom = sext i32 %10 to i64, !dbg !21640
  %arrayidx4 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %8, i64 %idxprom, !dbg !21640
  %co_orig_2d = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %arrayidx4, i32 0, i32 2, !dbg !21644
  %arraydecay5 = getelementptr inbounds [2 x float], [2 x float]* %co_orig_2d, i64 0, i64 0, !dbg !21640
  %arraydecay6 = getelementptr inbounds [2 x float], [2 x float]* %mval_fl, i64 0, i64 0, !dbg !21645
  call void @sub_v2_v2v2(float* %arraydecay, float* %arraydecay5, float* %arraydecay6), !dbg !21646
  %arraydecay7 = getelementptr inbounds [2 x float], [2 x float]* %dir, i64 0, i64 0, !dbg !21647
  %call = call float @normalize_v2(float* %arraydecay7), !dbg !21648
  store i32 0, i32* %i, align 4, !dbg !21649
  %11 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21651
  %sv8 = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %11, i32 0, i32 0, !dbg !21652
  %12 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv8, align 8, !dbg !21652
  store %struct.TransDataVertSlideVert* %12, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !21653
  br label %for.cond, !dbg !21654

for.cond:                                         ; preds = %for.inc36, %entry
  %13 = load i32, i32* %i, align 4, !dbg !21655
  %14 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21657
  %totsv = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %14, i32 0, i32 1, !dbg !21658
  %15 = load i32, i32* %totsv, align 8, !dbg !21658
  %cmp = icmp slt i32 %13, %15, !dbg !21659
  br i1 %cmp, label %for.body, label %for.end38, !dbg !21660

for.body:                                         ; preds = %for.cond
  %16 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !21661
  %co_link_tot = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %16, i32 0, i32 5, !dbg !21664
  %17 = load i32, i32* %co_link_tot, align 8, !dbg !21664
  %cmp10 = icmp sgt i32 %17, 1, !dbg !21665
  br i1 %cmp10, label %if.then, label %if.end35, !dbg !21666

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata float* %dir_dot_best, metadata !21667, metadata !DIExpression()), !dbg !21669
  store float 0xC7EFFFFFE0000000, float* %dir_dot_best, align 4, !dbg !21669
  call void @llvm.dbg.declare(metadata i32* %co_link_curr_best, metadata !21670, metadata !DIExpression()), !dbg !21671
  store i32 -1, i32* %co_link_curr_best, align 4, !dbg !21671
  call void @llvm.dbg.declare(metadata i32* %j, metadata !21672, metadata !DIExpression()), !dbg !21673
  store i32 0, i32* %j, align 4, !dbg !21674
  br label %for.cond12, !dbg !21676

for.cond12:                                       ; preds = %for.inc, %if.then
  %18 = load i32, i32* %j, align 4, !dbg !21677
  %19 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !21679
  %co_link_tot13 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %19, i32 0, i32 5, !dbg !21680
  %20 = load i32, i32* %co_link_tot13, align 8, !dbg !21680
  %cmp14 = icmp slt i32 %18, %20, !dbg !21681
  br i1 %cmp14, label %for.body16, label %for.end, !dbg !21682

for.body16:                                       ; preds = %for.cond12
  call void @llvm.dbg.declare(metadata [2 x float]* %tdir, metadata !21683, metadata !DIExpression()), !dbg !21685
  call void @llvm.dbg.declare(metadata float* %dir_dot, metadata !21686, metadata !DIExpression()), !dbg !21687
  %arraydecay17 = getelementptr inbounds [2 x float], [2 x float]* %tdir, i64 0, i64 0, !dbg !21688
  %21 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !21689
  %co_orig_2d18 = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %21, i32 0, i32 2, !dbg !21690
  %arraydecay19 = getelementptr inbounds [2 x float], [2 x float]* %co_orig_2d18, i64 0, i64 0, !dbg !21689
  %22 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !21691
  %co_link_orig_2d = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %22, i32 0, i32 4, !dbg !21692
  %23 = load [2 x float]*, [2 x float]** %co_link_orig_2d, align 8, !dbg !21692
  %24 = load i32, i32* %j, align 4, !dbg !21693
  %idxprom20 = sext i32 %24 to i64, !dbg !21691
  %arrayidx21 = getelementptr inbounds [2 x float], [2 x float]* %23, i64 %idxprom20, !dbg !21691
  %arraydecay22 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx21, i64 0, i64 0, !dbg !21691
  call void @sub_v2_v2v2(float* %arraydecay17, float* %arraydecay19, float* %arraydecay22), !dbg !21694
  %arraydecay23 = getelementptr inbounds [2 x float], [2 x float]* %tdir, i64 0, i64 0, !dbg !21695
  %call24 = call float @normalize_v2(float* %arraydecay23), !dbg !21696
  %arraydecay25 = getelementptr inbounds [2 x float], [2 x float]* %dir, i64 0, i64 0, !dbg !21697
  %arraydecay26 = getelementptr inbounds [2 x float], [2 x float]* %tdir, i64 0, i64 0, !dbg !21698
  %call27 = call float @dot_v2v2(float* %arraydecay25, float* %arraydecay26), !dbg !21699
  store float %call27, float* %dir_dot, align 4, !dbg !21700
  %25 = load float, float* %dir_dot, align 4, !dbg !21701
  %26 = load float, float* %dir_dot_best, align 4, !dbg !21703
  %cmp28 = fcmp ogt float %25, %26, !dbg !21704
  br i1 %cmp28, label %if.then30, label %if.end, !dbg !21705

if.then30:                                        ; preds = %for.body16
  %27 = load float, float* %dir_dot, align 4, !dbg !21706
  store float %27, float* %dir_dot_best, align 4, !dbg !21708
  %28 = load i32, i32* %j, align 4, !dbg !21709
  store i32 %28, i32* %co_link_curr_best, align 4, !dbg !21710
  br label %if.end, !dbg !21711

if.end:                                           ; preds = %if.then30, %for.body16
  br label %for.inc, !dbg !21712

for.inc:                                          ; preds = %if.end
  %29 = load i32, i32* %j, align 4, !dbg !21713
  %inc = add nsw i32 %29, 1, !dbg !21713
  store i32 %inc, i32* %j, align 4, !dbg !21713
  br label %for.cond12, !dbg !21714, !llvm.loop !21715

for.end:                                          ; preds = %for.cond12
  %30 = load i32, i32* %co_link_curr_best, align 4, !dbg !21717
  %cmp31 = icmp ne i32 %30, -1, !dbg !21719
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !21720

if.then33:                                        ; preds = %for.end
  %31 = load i32, i32* %co_link_curr_best, align 4, !dbg !21721
  %32 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !21723
  %co_link_curr = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %32, i32 0, i32 6, !dbg !21724
  store i32 %31, i32* %co_link_curr, align 4, !dbg !21725
  br label %if.end34, !dbg !21726

if.end34:                                         ; preds = %if.then33, %for.end
  br label %if.end35, !dbg !21727

if.end35:                                         ; preds = %if.end34, %for.body
  br label %for.inc36, !dbg !21728

for.inc36:                                        ; preds = %if.end35
  %33 = load i32, i32* %i, align 4, !dbg !21729
  %inc37 = add nsw i32 %33, 1, !dbg !21729
  store i32 %inc37, i32* %i, align 4, !dbg !21729
  %34 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !21730
  %incdec.ptr = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %34, i32 1, !dbg !21730
  store %struct.TransDataVertSlideVert* %incdec.ptr, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !21730
  br label %for.cond, !dbg !21731, !llvm.loop !21732

for.end38:                                        ; preds = %for.cond
  ret void, !dbg !21734
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v2(float* %n) #0 !dbg !21735 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !21736, metadata !DIExpression()), !dbg !21737
  %0 = load float*, float** %n.addr, align 8, !dbg !21738
  %1 = load float*, float** %n.addr, align 8, !dbg !21739
  %call = call float @normalize_v2_v2(float* %0, float* %1), !dbg !21740
  ret float %call, !dbg !21741
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v2_v2(float* %r, float* %a) #0 !dbg !21742 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !21743, metadata !DIExpression()), !dbg !21744
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !21745, metadata !DIExpression()), !dbg !21746
  call void @llvm.dbg.declare(metadata float* %d, metadata !21747, metadata !DIExpression()), !dbg !21748
  %0 = load float*, float** %a.addr, align 8, !dbg !21749
  %1 = load float*, float** %a.addr, align 8, !dbg !21750
  %call = call float @dot_v2v2(float* %0, float* %1), !dbg !21751
  store float %call, float* %d, align 4, !dbg !21748
  %2 = load float, float* %d, align 4, !dbg !21752
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !21754
  br i1 %cmp, label %if.then, label %if.else, !dbg !21755

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !21756
  %call1 = call float @sqrtf(float %3) #5, !dbg !21758
  store float %call1, float* %d, align 4, !dbg !21759
  %4 = load float*, float** %r.addr, align 8, !dbg !21760
  %5 = load float*, float** %a.addr, align 8, !dbg !21761
  %6 = load float, float* %d, align 4, !dbg !21762
  %div = fdiv float 1.000000e+00, %6, !dbg !21763
  call void @mul_v2_v2fl(float* %4, float* %5, float %div), !dbg !21764
  br label %if.end, !dbg !21765

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !21766
  call void @zero_v2(float* %7), !dbg !21768
  store float 0.000000e+00, float* %d, align 4, !dbg !21769
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !21770
  ret float %8, !dbg !21771
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v2_v2fl(float* %r, float* %a, float %f) #0 !dbg !21772 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !21773, metadata !DIExpression()), !dbg !21774
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !21775, metadata !DIExpression()), !dbg !21776
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !21777, metadata !DIExpression()), !dbg !21778
  %0 = load float*, float** %a.addr, align 8, !dbg !21779
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !21779
  %1 = load float, float* %arrayidx, align 4, !dbg !21779
  %2 = load float, float* %f.addr, align 4, !dbg !21780
  %mul = fmul float %1, %2, !dbg !21781
  %3 = load float*, float** %r.addr, align 8, !dbg !21782
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !21782
  store float %mul, float* %arrayidx1, align 4, !dbg !21783
  %4 = load float*, float** %a.addr, align 8, !dbg !21784
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !21784
  %5 = load float, float* %arrayidx2, align 4, !dbg !21784
  %6 = load float, float* %f.addr, align 4, !dbg !21785
  %mul3 = fmul float %5, %6, !dbg !21786
  %7 = load float*, float** %r.addr, align 8, !dbg !21787
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !21787
  store float %mul3, float* %arrayidx4, align 4, !dbg !21788
  ret void, !dbg !21789
}

; Function Attrs: noinline nounwind uwtable
define internal void @calcVertSlideMouseActiveVert(%struct.TransInfo* %t, i32* %mval) #0 !dbg !21790 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %mval.addr = alloca i32*, align 8
  %sld = alloca %struct.VertSlideData*, align 8
  %mval_fl = alloca [2 x float], align 4
  %sv = alloca %struct.TransDataVertSlideVert*, align 8
  %dist_sq = alloca float, align 4
  %dist_min_sq = alloca float, align 4
  %i = alloca i32, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !21791, metadata !DIExpression()), !dbg !21792
  store i32* %mval, i32** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mval.addr, metadata !21793, metadata !DIExpression()), !dbg !21794
  call void @llvm.dbg.declare(metadata %struct.VertSlideData** %sld, metadata !21795, metadata !DIExpression()), !dbg !21796
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21797
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 40, !dbg !21798
  %1 = load i8*, i8** %customData, align 8, !dbg !21798
  %2 = bitcast i8* %1 to %struct.VertSlideData*, !dbg !21797
  store %struct.VertSlideData* %2, %struct.VertSlideData** %sld, align 8, !dbg !21796
  call void @llvm.dbg.declare(metadata [2 x float]* %mval_fl, metadata !21799, metadata !DIExpression()), !dbg !21800
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %mval_fl, i64 0, i64 0, !dbg !21801
  %3 = load i32*, i32** %mval.addr, align 8, !dbg !21802
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 0, !dbg !21802
  %4 = load i32, i32* %arrayidx, align 4, !dbg !21802
  %conv = sitofp i32 %4 to float, !dbg !21802
  store float %conv, float* %arrayinit.begin, align 4, !dbg !21801
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !21801
  %5 = load i32*, i32** %mval.addr, align 8, !dbg !21802
  %arrayidx1 = getelementptr inbounds i32, i32* %5, i64 1, !dbg !21802
  %6 = load i32, i32* %arrayidx1, align 4, !dbg !21802
  %conv2 = sitofp i32 %6 to float, !dbg !21802
  store float %conv2, float* %arrayinit.element, align 4, !dbg !21801
  call void @llvm.dbg.declare(metadata %struct.TransDataVertSlideVert** %sv, metadata !21803, metadata !DIExpression()), !dbg !21804
  call void @llvm.dbg.declare(metadata float* %dist_sq, metadata !21805, metadata !DIExpression()), !dbg !21806
  store float 0.000000e+00, float* %dist_sq, align 4, !dbg !21806
  call void @llvm.dbg.declare(metadata float* %dist_min_sq, metadata !21807, metadata !DIExpression()), !dbg !21808
  store float 0x47EFFFFFE0000000, float* %dist_min_sq, align 4, !dbg !21808
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21809, metadata !DIExpression()), !dbg !21810
  store i32 0, i32* %i, align 4, !dbg !21811
  %7 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21813
  %sv3 = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %7, i32 0, i32 0, !dbg !21814
  %8 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv3, align 8, !dbg !21814
  store %struct.TransDataVertSlideVert* %8, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !21815
  br label %for.cond, !dbg !21816

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !21817
  %10 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21819
  %totsv = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %10, i32 0, i32 1, !dbg !21820
  %11 = load i32, i32* %totsv, align 8, !dbg !21820
  %cmp = icmp slt i32 %9, %11, !dbg !21821
  br i1 %cmp, label %for.body, label %for.end, !dbg !21822

for.body:                                         ; preds = %for.cond
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %mval_fl, i64 0, i64 0, !dbg !21823
  %12 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !21825
  %co_orig_2d = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %12, i32 0, i32 2, !dbg !21826
  %arraydecay5 = getelementptr inbounds [2 x float], [2 x float]* %co_orig_2d, i64 0, i64 0, !dbg !21825
  %call = call float @len_squared_v2v2(float* %arraydecay, float* %arraydecay5), !dbg !21827
  store float %call, float* %dist_sq, align 4, !dbg !21828
  %13 = load float, float* %dist_sq, align 4, !dbg !21829
  %14 = load float, float* %dist_min_sq, align 4, !dbg !21831
  %cmp6 = fcmp olt float %13, %14, !dbg !21832
  br i1 %cmp6, label %if.then, label %if.end, !dbg !21833

if.then:                                          ; preds = %for.body
  %15 = load float, float* %dist_sq, align 4, !dbg !21834
  store float %15, float* %dist_min_sq, align 4, !dbg !21836
  %16 = load i32, i32* %i, align 4, !dbg !21837
  %17 = load %struct.VertSlideData*, %struct.VertSlideData** %sld, align 8, !dbg !21838
  %curr_sv_index = getelementptr inbounds %struct.VertSlideData, %struct.VertSlideData* %17, i32 0, i32 6, !dbg !21839
  store i32 %16, i32* %curr_sv_index, align 8, !dbg !21840
  br label %if.end, !dbg !21841

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !21842

for.inc:                                          ; preds = %if.end
  %18 = load i32, i32* %i, align 4, !dbg !21843
  %inc = add nsw i32 %18, 1, !dbg !21843
  store i32 %inc, i32* %i, align 4, !dbg !21843
  %19 = load %struct.TransDataVertSlideVert*, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !21844
  %incdec.ptr = getelementptr inbounds %struct.TransDataVertSlideVert, %struct.TransDataVertSlideVert* %19, i32 1, !dbg !21844
  store %struct.TransDataVertSlideVert* %incdec.ptr, %struct.TransDataVertSlideVert** %sv, align 8, !dbg !21844
  br label %for.cond, !dbg !21845, !llvm.loop !21846

for.end:                                          ; preds = %for.cond
  ret void, !dbg !21848
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyBoneRoll(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !21849 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %td = alloca %struct.TransData*, align 8
  %i = alloca i32, align 4
  %str = alloca [256 x i8], align 16
  %final = alloca float, align 4
  %c = alloca [64 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !21850, metadata !DIExpression()), !dbg !21851
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !21852, metadata !DIExpression()), !dbg !21853
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !21854, metadata !DIExpression()), !dbg !21855
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21856
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !21857
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !21857
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !21855
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21858, metadata !DIExpression()), !dbg !21859
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !21860, metadata !DIExpression()), !dbg !21861
  call void @llvm.dbg.declare(metadata float* %final, metadata !21862, metadata !DIExpression()), !dbg !21863
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21864
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 47, !dbg !21865
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !21864
  %3 = load float, float* %arrayidx, align 4, !dbg !21864
  store float %3, float* %final, align 4, !dbg !21866
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21867
  call void @snapGridIncrement(%struct.TransInfo* %4, float* %final), !dbg !21868
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21869
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 15, !dbg !21870
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %final), !dbg !21871
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21872
  %num1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 15, !dbg !21874
  %call2 = call zeroext i8 @hasNumInput(%struct.NumInput* %num1), !dbg !21875
  %tobool = icmp ne i8 %call2, 0, !dbg !21875
  br i1 %tobool, label %if.then, label %if.else, !dbg !21876

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [64 x i8]* %c, metadata !21877, metadata !DIExpression()), !dbg !21879
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21880
  %num3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 15, !dbg !21881
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !21882
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21883
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 56, !dbg !21884
  %9 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !21884
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 38, !dbg !21885
  call void @outputNumInput(%struct.NumInput* %num3, i8* %arraydecay, %struct.UnitSettings* %unit), !dbg !21886
  %arraydecay4 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !21887
  %arrayidx5 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !21888
  %call6 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay4, i64 256, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.143, i64 0, i64 0), i8* %arrayidx5), !dbg !21889
  br label %if.end, !dbg !21890

if.else:                                          ; preds = %entry
  %arraydecay7 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !21891
  %10 = load float, float* %final, align 4, !dbg !21893
  %mul = fmul float %10, 0x404CA5DC20000000, !dbg !21893
  %conv = fpext float %mul to double, !dbg !21893
  %call8 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay7, i64 256, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.144, i64 0, i64 0), double %conv), !dbg !21894
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %i, align 4, !dbg !21895
  br label %for.cond, !dbg !21897

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !21898
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21900
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 9, !dbg !21901
  %13 = load i32, i32* %total, align 8, !dbg !21901
  %cmp = icmp slt i32 %11, %13, !dbg !21902
  br i1 %cmp, label %for.body, label %for.end, !dbg !21903

for.body:                                         ; preds = %for.cond
  %14 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !21904
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %14, i32 0, i32 16, !dbg !21907
  %15 = load i32, i32* %flag, align 8, !dbg !21907
  %and = and i32 %15, 4, !dbg !21908
  %tobool10 = icmp ne i32 %and, 0, !dbg !21908
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !21909

if.then11:                                        ; preds = %for.body
  br label %for.end, !dbg !21910

if.end12:                                         ; preds = %for.body
  %16 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !21911
  %flag13 = getelementptr inbounds %struct.TransData, %struct.TransData* %16, i32 0, i32 16, !dbg !21913
  %17 = load i32, i32* %flag13, align 8, !dbg !21913
  %and14 = and i32 %17, 2048, !dbg !21914
  %tobool15 = icmp ne i32 %and14, 0, !dbg !21914
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !21915

if.then16:                                        ; preds = %if.end12
  br label %for.inc, !dbg !21916

if.end17:                                         ; preds = %if.end12
  %18 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !21917
  %ival = getelementptr inbounds %struct.TransData, %struct.TransData* %18, i32 0, i32 6, !dbg !21918
  %19 = load float, float* %ival, align 8, !dbg !21918
  %20 = load float, float* %final, align 4, !dbg !21919
  %sub = fsub float %19, %20, !dbg !21920
  %21 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !21921
  %val = getelementptr inbounds %struct.TransData, %struct.TransData* %21, i32 0, i32 5, !dbg !21922
  %22 = load float*, float** %val, align 8, !dbg !21922
  store float %sub, float* %22, align 4, !dbg !21923
  br label %for.inc, !dbg !21924

for.inc:                                          ; preds = %if.end17, %if.then16
  %23 = load i32, i32* %i, align 4, !dbg !21925
  %inc = add nsw i32 %23, 1, !dbg !21925
  store i32 %inc, i32* %i, align 4, !dbg !21925
  %24 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !21926
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %24, i32 1, !dbg !21926
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !21926
  br label %for.cond, !dbg !21927, !llvm.loop !21928

for.end:                                          ; preds = %if.then11, %for.cond
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21930
  call void @recalcData(%struct.TransInfo* %25), !dbg !21931
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21932
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 54, !dbg !21933
  %27 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !21933
  %arraydecay18 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !21934
  call void @ED_area_headerprint(%struct.ScrArea* %27, i8* %arraydecay18), !dbg !21935
  ret void, !dbg !21936
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyBakeTime(%struct.TransInfo* %t, i32* %mval) #0 !dbg !21937 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %mval.addr = alloca i32*, align 8
  %td = alloca %struct.TransData*, align 8
  %time = alloca float, align 4
  %i = alloca i32, align 4
  %str = alloca [256 x i8], align 16
  %fac = alloca float, align 4
  %c = alloca [64 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !21938, metadata !DIExpression()), !dbg !21939
  store i32* %mval, i32** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mval.addr, metadata !21940, metadata !DIExpression()), !dbg !21941
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !21942, metadata !DIExpression()), !dbg !21943
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21944
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !21945
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !21945
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !21943
  call void @llvm.dbg.declare(metadata float* %time, metadata !21946, metadata !DIExpression()), !dbg !21947
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21948, metadata !DIExpression()), !dbg !21949
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !21950, metadata !DIExpression()), !dbg !21951
  call void @llvm.dbg.declare(metadata float* %fac, metadata !21952, metadata !DIExpression()), !dbg !21953
  store float 0x3FB99999A0000000, float* %fac, align 4, !dbg !21953
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21954
  %mouse = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 16, !dbg !21956
  %precision = getelementptr inbounds %struct.MouseInput, %struct.MouseInput* %mouse, i32 0, i32 3, !dbg !21957
  %3 = load i8, i8* %precision, align 8, !dbg !21957
  %tobool = icmp ne i8 %3, 0, !dbg !21954
  br i1 %tobool, label %if.then, label %if.else, !dbg !21958

if.then:                                          ; preds = %entry
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21959
  %center2d = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 21, !dbg !21961
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %center2d, i64 0, i64 0, !dbg !21959
  %5 = load float, float* %arrayidx, align 8, !dbg !21959
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21962
  %mouse1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 16, !dbg !21963
  %precision_mval = getelementptr inbounds %struct.MouseInput, %struct.MouseInput* %mouse1, i32 0, i32 4, !dbg !21964
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %precision_mval, i64 0, i64 0, !dbg !21962
  %7 = load i32, i32* %arrayidx2, align 4, !dbg !21962
  %conv = sitofp i32 %7 to float, !dbg !21962
  %sub = fsub float %5, %conv, !dbg !21965
  %8 = load float, float* %fac, align 4, !dbg !21966
  %mul = fmul float %sub, %8, !dbg !21967
  store float %mul, float* %time, align 4, !dbg !21968
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21969
  %center2d3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 21, !dbg !21970
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %center2d3, i64 0, i64 0, !dbg !21969
  %10 = load float, float* %arrayidx4, align 8, !dbg !21969
  %11 = load float, float* %fac, align 4, !dbg !21971
  %mul5 = fmul float %10, %11, !dbg !21972
  %12 = load i32*, i32** %mval.addr, align 8, !dbg !21973
  %arrayidx6 = getelementptr inbounds i32, i32* %12, i64 0, !dbg !21973
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !21973
  %conv7 = sitofp i32 %13 to float, !dbg !21973
  %sub8 = fsub float %mul5, %conv7, !dbg !21974
  %14 = load float, float* %time, align 4, !dbg !21975
  %sub9 = fsub float %sub8, %14, !dbg !21976
  %mul10 = fmul float 0x3FB99999A0000000, %sub9, !dbg !21977
  %15 = load float, float* %time, align 4, !dbg !21978
  %add = fadd float %15, %mul10, !dbg !21978
  store float %add, float* %time, align 4, !dbg !21978
  br label %if.end, !dbg !21979

if.else:                                          ; preds = %entry
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21980
  %center2d11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 21, !dbg !21982
  %arrayidx12 = getelementptr inbounds [2 x float], [2 x float]* %center2d11, i64 0, i64 0, !dbg !21980
  %17 = load float, float* %arrayidx12, align 8, !dbg !21980
  %18 = load i32*, i32** %mval.addr, align 8, !dbg !21983
  %arrayidx13 = getelementptr inbounds i32, i32* %18, i64 0, !dbg !21983
  %19 = load i32, i32* %arrayidx13, align 4, !dbg !21983
  %conv14 = sitofp i32 %19 to float, !dbg !21983
  %sub15 = fsub float %17, %conv14, !dbg !21984
  %20 = load float, float* %fac, align 4, !dbg !21985
  %mul16 = fmul float %sub15, %20, !dbg !21986
  store float %mul16, float* %time, align 4, !dbg !21987
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21988
  call void @snapGridIncrement(%struct.TransInfo* %21, float* %time), !dbg !21989
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21990
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 15, !dbg !21991
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %time), !dbg !21992
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !21993
  %num17 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 15, !dbg !21995
  %call18 = call zeroext i8 @hasNumInput(%struct.NumInput* %num17), !dbg !21996
  %tobool19 = icmp ne i8 %call18, 0, !dbg !21996
  br i1 %tobool19, label %if.then20, label %if.else35, !dbg !21997

if.then20:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata [64 x i8]* %c, metadata !21998, metadata !DIExpression()), !dbg !22000
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22001
  %num21 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 15, !dbg !22002
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !22003
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22004
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 56, !dbg !22005
  %26 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !22005
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %26, i32 0, i32 38, !dbg !22006
  call void @outputNumInput(%struct.NumInput* %num21, i8* %arraydecay, %struct.UnitSettings* %unit), !dbg !22007
  %27 = load float, float* %time, align 4, !dbg !22008
  %cmp = fcmp oge float %27, 0.000000e+00, !dbg !22010
  br i1 %cmp, label %if.then23, label %if.else28, !dbg !22011

if.then23:                                        ; preds = %if.then20
  %arraydecay24 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !22012
  %arraydecay25 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !22013
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22014
  %proptext = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 19, !dbg !22015
  %arraydecay26 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext, i64 0, i64 0, !dbg !22014
  %call27 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay24, i64 256, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.145, i64 0, i64 0), i8* %arraydecay25, i8* %arraydecay26), !dbg !22016
  br label %if.end34, !dbg !22016

if.else28:                                        ; preds = %if.then20
  %arraydecay29 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !22017
  %arraydecay30 = getelementptr inbounds [64 x i8], [64 x i8]* %c, i64 0, i64 0, !dbg !22018
  %29 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22019
  %proptext31 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %29, i32 0, i32 19, !dbg !22020
  %arraydecay32 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext31, i64 0, i64 0, !dbg !22019
  %call33 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay29, i64 256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.146, i64 0, i64 0), i8* %arraydecay30, i8* %arraydecay32), !dbg !22021
  br label %if.end34

if.end34:                                         ; preds = %if.else28, %if.then23
  br label %if.end51, !dbg !22022

if.else35:                                        ; preds = %if.end
  %30 = load float, float* %time, align 4, !dbg !22023
  %cmp36 = fcmp oge float %30, 0.000000e+00, !dbg !22026
  br i1 %cmp36, label %if.then38, label %if.else44, !dbg !22027

if.then38:                                        ; preds = %if.else35
  %arraydecay39 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !22028
  %31 = load float, float* %time, align 4, !dbg !22029
  %conv40 = fpext float %31 to double, !dbg !22029
  %32 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22030
  %proptext41 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %32, i32 0, i32 19, !dbg !22031
  %arraydecay42 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext41, i64 0, i64 0, !dbg !22030
  %call43 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay39, i64 256, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.147, i64 0, i64 0), double %conv40, i8* %arraydecay42), !dbg !22032
  br label %if.end50, !dbg !22032

if.else44:                                        ; preds = %if.else35
  %arraydecay45 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !22033
  %33 = load float, float* %time, align 4, !dbg !22034
  %conv46 = fpext float %33 to double, !dbg !22034
  %34 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22035
  %proptext47 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %34, i32 0, i32 19, !dbg !22036
  %arraydecay48 = getelementptr inbounds [20 x i8], [20 x i8]* %proptext47, i64 0, i64 0, !dbg !22035
  %call49 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay45, i64 256, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.148, i64 0, i64 0), double %conv46, i8* %arraydecay48), !dbg !22037
  br label %if.end50

if.end50:                                         ; preds = %if.else44, %if.then38
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end34
  store i32 0, i32* %i, align 4, !dbg !22038
  br label %for.cond, !dbg !22040

for.cond:                                         ; preds = %for.inc, %if.end51
  %35 = load i32, i32* %i, align 4, !dbg !22041
  %36 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22043
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %36, i32 0, i32 9, !dbg !22044
  %37 = load i32, i32* %total, align 8, !dbg !22044
  %cmp52 = icmp slt i32 %35, %37, !dbg !22045
  br i1 %cmp52, label %for.body, label %for.end, !dbg !22046

for.body:                                         ; preds = %for.cond
  %38 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22047
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %38, i32 0, i32 16, !dbg !22050
  %39 = load i32, i32* %flag, align 8, !dbg !22050
  %and = and i32 %39, 4, !dbg !22051
  %tobool54 = icmp ne i32 %and, 0, !dbg !22051
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !22052

if.then55:                                        ; preds = %for.body
  br label %for.end, !dbg !22053

if.end56:                                         ; preds = %for.body
  %40 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22054
  %flag57 = getelementptr inbounds %struct.TransData, %struct.TransData* %40, i32 0, i32 16, !dbg !22056
  %41 = load i32, i32* %flag57, align 8, !dbg !22056
  %and58 = and i32 %41, 2048, !dbg !22057
  %tobool59 = icmp ne i32 %and58, 0, !dbg !22057
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !22058

if.then60:                                        ; preds = %if.end56
  br label %for.inc, !dbg !22059

if.end61:                                         ; preds = %if.end56
  %42 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22060
  %val = getelementptr inbounds %struct.TransData, %struct.TransData* %42, i32 0, i32 5, !dbg !22062
  %43 = load float*, float** %val, align 8, !dbg !22062
  %tobool62 = icmp ne float* %43, null, !dbg !22060
  br i1 %tobool62, label %if.then63, label %if.end91, !dbg !22063

if.then63:                                        ; preds = %if.end61
  %44 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22064
  %ival = getelementptr inbounds %struct.TransData, %struct.TransData* %44, i32 0, i32 6, !dbg !22066
  %45 = load float, float* %ival, align 8, !dbg !22066
  %46 = load float, float* %time, align 4, !dbg !22067
  %47 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22068
  %factor = getelementptr inbounds %struct.TransData, %struct.TransData* %47, i32 0, i32 2, !dbg !22069
  %48 = load float, float* %factor, align 8, !dbg !22069
  %mul64 = fmul float %46, %48, !dbg !22070
  %add65 = fadd float %45, %mul64, !dbg !22071
  %49 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22072
  %val66 = getelementptr inbounds %struct.TransData, %struct.TransData* %49, i32 0, i32 5, !dbg !22073
  %50 = load float*, float** %val66, align 8, !dbg !22073
  store float %add65, float* %50, align 4, !dbg !22074
  %51 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22075
  %ext = getelementptr inbounds %struct.TransData, %struct.TransData* %51, i32 0, i32 13, !dbg !22077
  %52 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext, align 8, !dbg !22077
  %size = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %52, i32 0, i32 11, !dbg !22078
  %53 = load float*, float** %size, align 8, !dbg !22078
  %tobool67 = icmp ne float* %53, null, !dbg !22075
  br i1 %tobool67, label %land.lhs.true, label %if.end77, !dbg !22079

land.lhs.true:                                    ; preds = %if.then63
  %54 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22080
  %val68 = getelementptr inbounds %struct.TransData, %struct.TransData* %54, i32 0, i32 5, !dbg !22081
  %55 = load float*, float** %val68, align 8, !dbg !22081
  %56 = load float, float* %55, align 4, !dbg !22082
  %57 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22083
  %ext69 = getelementptr inbounds %struct.TransData, %struct.TransData* %57, i32 0, i32 13, !dbg !22084
  %58 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext69, align 8, !dbg !22084
  %size70 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %58, i32 0, i32 11, !dbg !22085
  %59 = load float*, float** %size70, align 8, !dbg !22085
  %60 = load float, float* %59, align 4, !dbg !22086
  %cmp71 = fcmp olt float %56, %60, !dbg !22087
  br i1 %cmp71, label %if.then73, label %if.end77, !dbg !22088

if.then73:                                        ; preds = %land.lhs.true
  %61 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22089
  %ext74 = getelementptr inbounds %struct.TransData, %struct.TransData* %61, i32 0, i32 13, !dbg !22090
  %62 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext74, align 8, !dbg !22090
  %size75 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %62, i32 0, i32 11, !dbg !22091
  %63 = load float*, float** %size75, align 8, !dbg !22091
  %64 = load float, float* %63, align 4, !dbg !22092
  %65 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22093
  %val76 = getelementptr inbounds %struct.TransData, %struct.TransData* %65, i32 0, i32 5, !dbg !22094
  %66 = load float*, float** %val76, align 8, !dbg !22094
  store float %64, float* %66, align 4, !dbg !22095
  br label %if.end77, !dbg !22096

if.end77:                                         ; preds = %if.then73, %land.lhs.true, %if.then63
  %67 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22097
  %ext78 = getelementptr inbounds %struct.TransData, %struct.TransData* %67, i32 0, i32 13, !dbg !22099
  %68 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext78, align 8, !dbg !22099
  %quat = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %68, i32 0, i32 5, !dbg !22100
  %69 = load float*, float** %quat, align 8, !dbg !22100
  %tobool79 = icmp ne float* %69, null, !dbg !22097
  br i1 %tobool79, label %land.lhs.true80, label %if.end90, !dbg !22101

land.lhs.true80:                                  ; preds = %if.end77
  %70 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22102
  %val81 = getelementptr inbounds %struct.TransData, %struct.TransData* %70, i32 0, i32 5, !dbg !22103
  %71 = load float*, float** %val81, align 8, !dbg !22103
  %72 = load float, float* %71, align 4, !dbg !22104
  %73 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22105
  %ext82 = getelementptr inbounds %struct.TransData, %struct.TransData* %73, i32 0, i32 13, !dbg !22106
  %74 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext82, align 8, !dbg !22106
  %quat83 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %74, i32 0, i32 5, !dbg !22107
  %75 = load float*, float** %quat83, align 8, !dbg !22107
  %76 = load float, float* %75, align 4, !dbg !22108
  %cmp84 = fcmp ogt float %72, %76, !dbg !22109
  br i1 %cmp84, label %if.then86, label %if.end90, !dbg !22110

if.then86:                                        ; preds = %land.lhs.true80
  %77 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22111
  %ext87 = getelementptr inbounds %struct.TransData, %struct.TransData* %77, i32 0, i32 13, !dbg !22112
  %78 = load %struct.TransDataExtension*, %struct.TransDataExtension** %ext87, align 8, !dbg !22112
  %quat88 = getelementptr inbounds %struct.TransDataExtension, %struct.TransDataExtension* %78, i32 0, i32 5, !dbg !22113
  %79 = load float*, float** %quat88, align 8, !dbg !22113
  %80 = load float, float* %79, align 4, !dbg !22114
  %81 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22115
  %val89 = getelementptr inbounds %struct.TransData, %struct.TransData* %81, i32 0, i32 5, !dbg !22116
  %82 = load float*, float** %val89, align 8, !dbg !22116
  store float %80, float* %82, align 4, !dbg !22117
  br label %if.end90, !dbg !22118

if.end90:                                         ; preds = %if.then86, %land.lhs.true80, %if.end77
  br label %if.end91, !dbg !22119

if.end91:                                         ; preds = %if.end90, %if.end61
  br label %for.inc, !dbg !22120

for.inc:                                          ; preds = %if.end91, %if.then60
  %83 = load i32, i32* %i, align 4, !dbg !22121
  %inc = add nsw i32 %83, 1, !dbg !22121
  store i32 %inc, i32* %i, align 4, !dbg !22121
  %84 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22122
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %84, i32 1, !dbg !22122
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !22122
  br label %for.cond, !dbg !22123, !llvm.loop !22124

for.end:                                          ; preds = %if.then55, %for.cond
  %85 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22126
  call void @recalcData(%struct.TransInfo* %85), !dbg !22127
  %86 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22128
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %86, i32 0, i32 54, !dbg !22129
  %87 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !22129
  %arraydecay92 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !22130
  call void @ED_area_headerprint(%struct.ScrArea* %87, i8* %arraydecay92), !dbg !22131
  ret void, !dbg !22132
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyMirror(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !22133 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %td = alloca %struct.TransData*, align 8
  %size = alloca [3 x float], align 4
  %mat = alloca [3 x [3 x float]], align 16
  %i = alloca i32, align 4
  %str = alloca [256 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !22134, metadata !DIExpression()), !dbg !22135
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !22136, metadata !DIExpression()), !dbg !22137
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !22138, metadata !DIExpression()), !dbg !22139
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !22140, metadata !DIExpression()), !dbg !22141
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !22142, metadata !DIExpression()), !dbg !22143
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22144, metadata !DIExpression()), !dbg !22145
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !22146, metadata !DIExpression()), !dbg !22147
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22148
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 13, !dbg !22150
  %mode = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 7, !dbg !22151
  %1 = load i32, i32* %mode, align 4, !dbg !22151
  %and = and i32 %1, 1, !dbg !22152
  %tobool = icmp ne i32 %and, 0, !dbg !22152
  br i1 %tobool, label %if.then, label %if.else, !dbg !22153

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !22154
  store float -1.000000e+00, float* %arrayidx, align 4, !dbg !22156
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !22157
  store float -1.000000e+00, float* %arrayidx1, align 4, !dbg !22158
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !22159
  store float -1.000000e+00, float* %arrayidx2, align 4, !dbg !22160
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !22161
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !22162
  call void @size_to_mat3([3 x float]* %arraydecay, float* %arraydecay3), !dbg !22163
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22164
  %con4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 13, !dbg !22166
  %applySize = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con4, i32 0, i32 10, !dbg !22167
  %3 = load void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)*, void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)** %applySize, align 8, !dbg !22167
  %tobool5 = icmp ne void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)* %3, null, !dbg !22164
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !22168

if.then6:                                         ; preds = %if.then
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22169
  %con7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 13, !dbg !22171
  %applySize8 = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con7, i32 0, i32 10, !dbg !22172
  %5 = load void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)*, void (%struct.TransInfo*, %struct.TransData*, [3 x float]*)** %applySize8, align 8, !dbg !22172
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22173
  %arraydecay9 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !22174
  call void %5(%struct.TransInfo* %6, %struct.TransData* null, [3 x float]* %arraydecay9), !dbg !22169
  br label %if.end, !dbg !22175

if.end:                                           ; preds = %if.then6, %if.then
  %arraydecay10 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !22176
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22177
  %con11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 13, !dbg !22178
  %text = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con11, i32 0, i32 1, !dbg !22179
  %arraydecay12 = getelementptr inbounds [50 x i8], [50 x i8]* %text, i64 0, i64 0, !dbg !22177
  %call = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay10, i64 256, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.149, i64 0, i64 0), i8* %arraydecay12), !dbg !22180
  store i32 0, i32* %i, align 4, !dbg !22181
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22183
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 10, !dbg !22184
  %9 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !22184
  store %struct.TransData* %9, %struct.TransData** %td, align 8, !dbg !22185
  br label %for.cond, !dbg !22186

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !dbg !22187
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22189
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 9, !dbg !22190
  %12 = load i32, i32* %total, align 8, !dbg !22190
  %cmp = icmp slt i32 %10, %12, !dbg !22191
  br i1 %cmp, label %for.body, label %for.end, !dbg !22192

for.body:                                         ; preds = %for.cond
  %13 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22193
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %13, i32 0, i32 16, !dbg !22196
  %14 = load i32, i32* %flag, align 8, !dbg !22196
  %and13 = and i32 %14, 4, !dbg !22197
  %tobool14 = icmp ne i32 %and13, 0, !dbg !22197
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !22198

if.then15:                                        ; preds = %for.body
  br label %for.end, !dbg !22199

if.end16:                                         ; preds = %for.body
  %15 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22200
  %flag17 = getelementptr inbounds %struct.TransData, %struct.TransData* %15, i32 0, i32 16, !dbg !22202
  %16 = load i32, i32* %flag17, align 8, !dbg !22202
  %and18 = and i32 %16, 2048, !dbg !22203
  %tobool19 = icmp ne i32 %and18, 0, !dbg !22203
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !22204

if.then20:                                        ; preds = %if.end16
  br label %for.inc, !dbg !22205

if.end21:                                         ; preds = %if.end16
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22206
  %18 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22207
  %arraydecay22 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !22208
  call void @ElementResize(%struct.TransInfo* %17, %struct.TransData* %18, [3 x float]* %arraydecay22), !dbg !22209
  br label %for.inc, !dbg !22210

for.inc:                                          ; preds = %if.end21, %if.then20
  %19 = load i32, i32* %i, align 4, !dbg !22211
  %inc = add nsw i32 %19, 1, !dbg !22211
  store i32 %inc, i32* %i, align 4, !dbg !22211
  %20 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22212
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %20, i32 1, !dbg !22212
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !22212
  br label %for.cond, !dbg !22213, !llvm.loop !22214

for.end:                                          ; preds = %if.then15, %for.cond
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22216
  call void @recalcData(%struct.TransInfo* %21), !dbg !22217
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22218
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 54, !dbg !22219
  %23 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !22219
  %arraydecay23 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !22220
  call void @ED_area_headerprint(%struct.ScrArea* %23, i8* %arraydecay23), !dbg !22221
  br label %if.end57, !dbg !22222

if.else:                                          ; preds = %entry
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !22223
  store float 1.000000e+00, float* %arrayidx24, align 4, !dbg !22225
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !22226
  store float 1.000000e+00, float* %arrayidx25, align 4, !dbg !22227
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !22228
  store float 1.000000e+00, float* %arrayidx26, align 4, !dbg !22229
  %arraydecay27 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !22230
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !22231
  call void @size_to_mat3([3 x float]* %arraydecay27, float* %arraydecay28), !dbg !22232
  store i32 0, i32* %i, align 4, !dbg !22233
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22235
  %data29 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %24, i32 0, i32 10, !dbg !22236
  %25 = load %struct.TransData*, %struct.TransData** %data29, align 8, !dbg !22236
  store %struct.TransData* %25, %struct.TransData** %td, align 8, !dbg !22237
  br label %for.cond30, !dbg !22238

for.cond30:                                       ; preds = %for.inc45, %if.else
  %26 = load i32, i32* %i, align 4, !dbg !22239
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22241
  %total31 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %27, i32 0, i32 9, !dbg !22242
  %28 = load i32, i32* %total31, align 8, !dbg !22242
  %cmp32 = icmp slt i32 %26, %28, !dbg !22243
  br i1 %cmp32, label %for.body33, label %for.end48, !dbg !22244

for.body33:                                       ; preds = %for.cond30
  %29 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22245
  %flag34 = getelementptr inbounds %struct.TransData, %struct.TransData* %29, i32 0, i32 16, !dbg !22248
  %30 = load i32, i32* %flag34, align 8, !dbg !22248
  %and35 = and i32 %30, 4, !dbg !22249
  %tobool36 = icmp ne i32 %and35, 0, !dbg !22249
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !22250

if.then37:                                        ; preds = %for.body33
  br label %for.end48, !dbg !22251

if.end38:                                         ; preds = %for.body33
  %31 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22252
  %flag39 = getelementptr inbounds %struct.TransData, %struct.TransData* %31, i32 0, i32 16, !dbg !22254
  %32 = load i32, i32* %flag39, align 8, !dbg !22254
  %and40 = and i32 %32, 2048, !dbg !22255
  %tobool41 = icmp ne i32 %and40, 0, !dbg !22255
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !22256

if.then42:                                        ; preds = %if.end38
  br label %for.inc45, !dbg !22257

if.end43:                                         ; preds = %if.end38
  %33 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22258
  %34 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22259
  %arraydecay44 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !22260
  call void @ElementResize(%struct.TransInfo* %33, %struct.TransData* %34, [3 x float]* %arraydecay44), !dbg !22261
  br label %for.inc45, !dbg !22262

for.inc45:                                        ; preds = %if.end43, %if.then42
  %35 = load i32, i32* %i, align 4, !dbg !22263
  %inc46 = add nsw i32 %35, 1, !dbg !22263
  store i32 %inc46, i32* %i, align 4, !dbg !22263
  %36 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22264
  %incdec.ptr47 = getelementptr inbounds %struct.TransData, %struct.TransData* %36, i32 1, !dbg !22264
  store %struct.TransData* %incdec.ptr47, %struct.TransData** %td, align 8, !dbg !22264
  br label %for.cond30, !dbg !22265, !llvm.loop !22266

for.end48:                                        ; preds = %if.then37, %for.cond30
  %37 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22268
  call void @recalcData(%struct.TransInfo* %37), !dbg !22269
  %38 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22270
  %flag49 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %38, i32 0, i32 1, !dbg !22272
  %39 = load i32, i32* %flag49, align 4, !dbg !22272
  %and50 = and i32 %39, 32768, !dbg !22273
  %tobool51 = icmp ne i32 %and50, 0, !dbg !22273
  br i1 %tobool51, label %if.then52, label %if.else54, !dbg !22274

if.then52:                                        ; preds = %for.end48
  %40 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22275
  %sa53 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %40, i32 0, i32 54, !dbg !22276
  %41 = load %struct.ScrArea*, %struct.ScrArea** %sa53, align 8, !dbg !22276
  call void @ED_area_headerprint(%struct.ScrArea* %41, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.150, i64 0, i64 0)), !dbg !22277
  br label %if.end56, !dbg !22277

if.else54:                                        ; preds = %for.end48
  %42 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22278
  %sa55 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %42, i32 0, i32 54, !dbg !22279
  %43 = load %struct.ScrArea*, %struct.ScrArea** %sa55, align 8, !dbg !22279
  call void @ED_area_headerprint(%struct.ScrArea* %43, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.151, i64 0, i64 0)), !dbg !22280
  br label %if.end56

if.end56:                                         ; preds = %if.else54, %if.then52
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %for.end
  ret void, !dbg !22281
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyAlign(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !22282 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %td = alloca %struct.TransData*, align 8
  %center = alloca [3 x float], align 4
  %i = alloca i32, align 4
  %mat = alloca [3 x [3 x float]], align 16
  %invmat = alloca [3 x [3 x float]], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !22283, metadata !DIExpression()), !dbg !22284
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !22285, metadata !DIExpression()), !dbg !22286
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !22287, metadata !DIExpression()), !dbg !22288
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22289
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !22290
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !22290
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !22288
  call void @llvm.dbg.declare(metadata [3 x float]* %center, metadata !22291, metadata !DIExpression()), !dbg !22292
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22293, metadata !DIExpression()), !dbg !22294
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !22295
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22296
  %center1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 20, !dbg !22297
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %center1, i64 0, i64 0, !dbg !22296
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !22298
  store i32 0, i32* %i, align 4, !dbg !22299
  br label %for.cond, !dbg !22301

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !22302
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22304
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 9, !dbg !22305
  %5 = load i32, i32* %total, align 8, !dbg !22305
  %cmp = icmp slt i32 %3, %5, !dbg !22306
  br i1 %cmp, label %for.body, label %for.end, !dbg !22307

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !22308, metadata !DIExpression()), !dbg !22310
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %invmat, metadata !22311, metadata !DIExpression()), !dbg !22312
  %6 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22313
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %6, i32 0, i32 16, !dbg !22315
  %7 = load i32, i32* %flag, align 8, !dbg !22315
  %and = and i32 %7, 4, !dbg !22316
  %tobool = icmp ne i32 %and, 0, !dbg !22316
  br i1 %tobool, label %if.then, label %if.end, !dbg !22317

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !22318

if.end:                                           ; preds = %for.body
  %8 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22319
  %flag3 = getelementptr inbounds %struct.TransData, %struct.TransData* %8, i32 0, i32 16, !dbg !22321
  %9 = load i32, i32* %flag3, align 8, !dbg !22321
  %and4 = and i32 %9, 2048, !dbg !22322
  %tobool5 = icmp ne i32 %and4, 0, !dbg !22322
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !22323

if.then6:                                         ; preds = %if.end
  br label %for.inc, !dbg !22324

if.end7:                                          ; preds = %if.end
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22325
  %flag8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 1, !dbg !22327
  %11 = load i32, i32* %flag8, align 4, !dbg !22327
  %and9 = and i32 %11, 5, !dbg !22328
  %tobool10 = icmp ne i32 %and9, 0, !dbg !22328
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !22329

if.then11:                                        ; preds = %if.end7
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22330
  %center12 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 20, !dbg !22332
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %center12, i64 0, i64 0, !dbg !22330
  %13 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22333
  %center14 = getelementptr inbounds %struct.TransData, %struct.TransData* %13, i32 0, i32 7, !dbg !22334
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %center14, i64 0, i64 0, !dbg !22333
  call void @copy_v3_v3(float* %arraydecay13, float* %arraydecay15), !dbg !22335
  br label %if.end24, !dbg !22336

if.else:                                          ; preds = %if.end7
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22337
  %settings = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 57, !dbg !22340
  %15 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !22340
  %selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %15, i32 0, i32 8, !dbg !22341
  %16 = load i16, i16* %selectmode, align 2, !dbg !22341
  %conv = sext i16 %16 to i32, !dbg !22337
  %and16 = and i32 %conv, 4, !dbg !22342
  %tobool17 = icmp ne i32 %and16, 0, !dbg !22342
  br i1 %tobool17, label %if.then18, label %if.end23, !dbg !22343

if.then18:                                        ; preds = %if.else
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22344
  %center19 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 20, !dbg !22346
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %center19, i64 0, i64 0, !dbg !22344
  %18 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22347
  %center21 = getelementptr inbounds %struct.TransData, %struct.TransData* %18, i32 0, i32 7, !dbg !22348
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %center21, i64 0, i64 0, !dbg !22347
  call void @copy_v3_v3(float* %arraydecay20, float* %arraydecay22), !dbg !22349
  br label %if.end23, !dbg !22350

if.end23:                                         ; preds = %if.then18, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then11
  %arraydecay25 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %invmat, i64 0, i64 0, !dbg !22351
  %19 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22352
  %axismtx = getelementptr inbounds %struct.TransData, %struct.TransData* %19, i32 0, i32 10, !dbg !22353
  %arraydecay26 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %axismtx, i64 0, i64 0, !dbg !22352
  %call = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay25, [3 x float]* %arraydecay26), !dbg !22354
  %arraydecay27 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !22355
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22356
  %spacemtx = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 37, !dbg !22357
  %arraydecay28 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %spacemtx, i64 0, i64 0, !dbg !22356
  %arraydecay29 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %invmat, i64 0, i64 0, !dbg !22358
  call void @mul_m3_m3m3([3 x float]* %arraydecay27, [3 x float]* %arraydecay28, [3 x float]* %arraydecay29), !dbg !22359
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22360
  %22 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22361
  %arraydecay30 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !22362
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22363
  %around = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 32, !dbg !22364
  %24 = load i16, i16* %around, align 2, !dbg !22364
  call void @ElementRotation(%struct.TransInfo* %21, %struct.TransData* %22, [3 x float]* %arraydecay30, i16 signext %24), !dbg !22365
  br label %for.inc, !dbg !22366

for.inc:                                          ; preds = %if.end24, %if.then6
  %25 = load i32, i32* %i, align 4, !dbg !22367
  %inc = add nsw i32 %25, 1, !dbg !22367
  store i32 %inc, i32* %i, align 4, !dbg !22367
  %26 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22368
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %26, i32 1, !dbg !22368
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !22368
  br label %for.cond, !dbg !22369, !llvm.loop !22370

for.end:                                          ; preds = %if.then, %for.cond
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22372
  %center31 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %27, i32 0, i32 20, !dbg !22373
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %center31, i64 0, i64 0, !dbg !22372
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !22374
  call void @copy_v3_v3(float* %arraydecay32, float* %arraydecay33), !dbg !22375
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22376
  call void @recalcData(%struct.TransInfo* %28), !dbg !22377
  %29 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22378
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %29, i32 0, i32 54, !dbg !22379
  %30 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !22379
  call void @ED_area_headerprint(%struct.ScrArea* %30, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.152, i64 0, i64 0)), !dbg !22380
  ret void, !dbg !22381
}

; Function Attrs: noinline nounwind uwtable
define internal void @applySeqSlide(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !22382 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %str = alloca [256 x i8], align 16
  %pvec = alloca [3 x float], align 4
  %tvec = alloca [3 x float], align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !22383, metadata !DIExpression()), !dbg !22384
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !22385, metadata !DIExpression()), !dbg !22386
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !22387, metadata !DIExpression()), !dbg !22388
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22389
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 13, !dbg !22391
  %mode = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 7, !dbg !22392
  %1 = load i32, i32* %mode, align 4, !dbg !22392
  %and = and i32 %1, 1, !dbg !22393
  %tobool = icmp ne i32 %and, 0, !dbg !22393
  br i1 %tobool, label %if.then, label %if.else, !dbg !22394

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %pvec, metadata !22395, metadata !DIExpression()), !dbg !22397
  %2 = bitcast [3 x float]* %pvec to i8*, !dbg !22397
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 12, i1 false), !dbg !22397
  call void @llvm.dbg.declare(metadata [3 x float]* %tvec, metadata !22398, metadata !DIExpression()), !dbg !22399
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22400
  %con1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 13, !dbg !22401
  %applyVec = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con1, i32 0, i32 9, !dbg !22402
  %4 = load void (%struct.TransInfo*, %struct.TransData*, float*, float*, float*)*, void (%struct.TransInfo*, %struct.TransData*, float*, float*, float*)** %applyVec, align 8, !dbg !22402
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22403
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22404
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 47, !dbg !22405
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !22404
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !22406
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %pvec, i64 0, i64 0, !dbg !22407
  call void %4(%struct.TransInfo* %5, %struct.TransData* null, float* %arraydecay, float* %arraydecay2, float* %arraydecay3), !dbg !22400
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22408
  %values4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 47, !dbg !22409
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %values4, i64 0, i64 0, !dbg !22408
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !22410
  call void @copy_v3_v3(float* %arraydecay5, float* %arraydecay6), !dbg !22411
  br label %if.end, !dbg !22412

if.else:                                          ; preds = %entry
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22413
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22415
  %values7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 47, !dbg !22416
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %values7, i64 0, i64 0, !dbg !22415
  call void @snapGridIncrement(%struct.TransInfo* %8, float* %arraydecay8), !dbg !22417
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22418
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 15, !dbg !22419
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22420
  %values9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 47, !dbg !22421
  %arraydecay10 = getelementptr inbounds [4 x float], [4 x float]* %values9, i64 0, i64 0, !dbg !22420
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %arraydecay10), !dbg !22422
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22423
  %values11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 47, !dbg !22424
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values11, i64 0, i64 0, !dbg !22423
  %13 = load float, float* %arrayidx, align 4, !dbg !22423
  %add = fadd float %13, 5.000000e-01, !dbg !22425
  %conv = fpext float %add to double, !dbg !22423
  %14 = call double @llvm.floor.f64(double %conv), !dbg !22426
  %conv12 = fptrunc double %14 to float, !dbg !22426
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22427
  %values13 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 47, !dbg !22428
  %arrayidx14 = getelementptr inbounds [4 x float], [4 x float]* %values13, i64 0, i64 0, !dbg !22427
  store float %conv12, float* %arrayidx14, align 4, !dbg !22429
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22430
  %values15 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 47, !dbg !22431
  %arrayidx16 = getelementptr inbounds [4 x float], [4 x float]* %values15, i64 0, i64 1, !dbg !22430
  %17 = load float, float* %arrayidx16, align 4, !dbg !22430
  %add17 = fadd float %17, 5.000000e-01, !dbg !22432
  %conv18 = fpext float %add17 to double, !dbg !22430
  %18 = call double @llvm.floor.f64(double %conv18), !dbg !22433
  %conv19 = fptrunc double %18 to float, !dbg !22433
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22434
  %values20 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 47, !dbg !22435
  %arrayidx21 = getelementptr inbounds [4 x float], [4 x float]* %values20, i64 0, i64 1, !dbg !22434
  store float %conv19, float* %arrayidx21, align 4, !dbg !22436
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22437
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22438
  %values22 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 47, !dbg !22439
  %arraydecay23 = getelementptr inbounds [4 x float], [4 x float]* %values22, i64 0, i64 0, !dbg !22438
  %arraydecay24 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !22440
  call void @headerSeqSlide(%struct.TransInfo* %20, float* %arraydecay23, i8* %arraydecay24), !dbg !22441
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22442
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22443
  %values25 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 47, !dbg !22444
  %arraydecay26 = getelementptr inbounds [4 x float], [4 x float]* %values25, i64 0, i64 0, !dbg !22443
  call void @applySeqSlideValue(%struct.TransInfo* %22, float* %arraydecay26), !dbg !22445
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22446
  call void @recalcData(%struct.TransInfo* %24), !dbg !22447
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22448
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %25, i32 0, i32 54, !dbg !22449
  %26 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !22449
  %arraydecay27 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !22450
  call void @ED_area_headerprint(%struct.ScrArea* %26, i8* %arraydecay27), !dbg !22451
  ret void, !dbg !22452
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal void @headerSeqSlide(%struct.TransInfo* %t, float* %val, i8* %str) #0 !dbg !22453 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %val.addr = alloca float*, align 8
  %str.addr = alloca i8*, align 8
  %tvec = alloca [192 x i8], align 16
  %ofs = alloca i64, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !22454, metadata !DIExpression()), !dbg !22455
  store float* %val, float** %val.addr, align 8
  call void @llvm.dbg.declare(metadata float** %val.addr, metadata !22456, metadata !DIExpression()), !dbg !22457
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !22458, metadata !DIExpression()), !dbg !22459
  call void @llvm.dbg.declare(metadata [192 x i8]* %tvec, metadata !22460, metadata !DIExpression()), !dbg !22461
  call void @llvm.dbg.declare(metadata i64* %ofs, metadata !22462, metadata !DIExpression()), !dbg !22463
  store i64 0, i64* %ofs, align 8, !dbg !22463
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22464
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 15, !dbg !22466
  %call = call zeroext i8 @hasNumInput(%struct.NumInput* %num), !dbg !22467
  %tobool = icmp ne i8 %call, 0, !dbg !22467
  br i1 %tobool, label %if.then, label %if.else, !dbg !22468

if.then:                                          ; preds = %entry
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22469
  %num1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 15, !dbg !22471
  %arraydecay = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !22472
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22473
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 56, !dbg !22474
  %3 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !22474
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 38, !dbg !22475
  call void @outputNumInput(%struct.NumInput* %num1, i8* %arraydecay, %struct.UnitSettings* %unit), !dbg !22476
  br label %if.end, !dbg !22477

if.else:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !22478
  %4 = load float*, float** %val.addr, align 8, !dbg !22480
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !22480
  %5 = load float, float* %arrayidx2, align 4, !dbg !22480
  %conv = fpext float %5 to double, !dbg !22480
  %6 = load float*, float** %val.addr, align 8, !dbg !22481
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !22481
  %7 = load float, float* %arrayidx3, align 4, !dbg !22481
  %conv4 = fpext float %7 to double, !dbg !22481
  %call5 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arrayidx, i64 64, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.153, i64 0, i64 0), double %conv, double %conv4), !dbg !22482
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i8*, i8** %str.addr, align 8, !dbg !22483
  %9 = load i64, i64* %ofs, align 8, !dbg !22484
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %9, !dbg !22485
  %10 = load i64, i64* %ofs, align 8, !dbg !22486
  %sub = sub i64 256, %10, !dbg !22487
  %arrayidx6 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !22488
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22489
  %con = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 13, !dbg !22490
  %text = getelementptr inbounds %struct.TransCon, %struct.TransCon* %con, i32 0, i32 1, !dbg !22491
  %arraydecay7 = getelementptr inbounds [50 x i8], [50 x i8]* %text, i64 0, i64 0, !dbg !22489
  %call8 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr, i64 %sub, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.154, i64 0, i64 0), i8* %arrayidx6, i8* %arraydecay7), !dbg !22492
  %12 = load i64, i64* %ofs, align 8, !dbg !22493
  %add = add i64 %12, %call8, !dbg !22493
  store i64 %add, i64* %ofs, align 8, !dbg !22493
  %13 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22494
  %keymap = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %13, i32 0, i32 59, !dbg !22496
  %14 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !22496
  %tobool9 = icmp ne %struct.wmKeyMap* %14, null, !dbg !22494
  br i1 %tobool9, label %if.then10, label %if.end22, !dbg !22497

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !22498, metadata !DIExpression()), !dbg !22500
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22501
  %keymap11 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 59, !dbg !22502
  %16 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap11, align 8, !dbg !22502
  %call12 = call %struct.wmKeyMapItem* @WM_modalkeymap_find_propvalue(%struct.wmKeyMap* %16, i32 3), !dbg !22503
  store %struct.wmKeyMapItem* %call12, %struct.wmKeyMapItem** %kmi, align 8, !dbg !22500
  %17 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !22504
  %tobool13 = icmp ne %struct.wmKeyMapItem* %17, null, !dbg !22504
  br i1 %tobool13, label %if.then14, label %if.end21, !dbg !22506

if.then14:                                        ; preds = %if.then10
  %18 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !22507
  %19 = load i8*, i8** %str.addr, align 8, !dbg !22509
  %20 = load i64, i64* %ofs, align 8, !dbg !22510
  %add.ptr15 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !22511
  %21 = load i64, i64* %ofs, align 8, !dbg !22512
  %sub16 = sub i64 256, %21, !dbg !22513
  %conv17 = trunc i64 %sub16 to i32, !dbg !22514
  %call18 = call i32 @WM_keymap_item_to_string(%struct.wmKeyMapItem* %18, i8* %add.ptr15, i32 %conv17), !dbg !22515
  %conv19 = sext i32 %call18 to i64, !dbg !22515
  %22 = load i64, i64* %ofs, align 8, !dbg !22516
  %add20 = add i64 %22, %conv19, !dbg !22516
  store i64 %add20, i64* %ofs, align 8, !dbg !22516
  br label %if.end21, !dbg !22517

if.end21:                                         ; preds = %if.then14, %if.then10
  br label %if.end22, !dbg !22518

if.end22:                                         ; preds = %if.end21, %if.end
  %23 = load i8*, i8** %str.addr, align 8, !dbg !22519
  %24 = load i64, i64* %ofs, align 8, !dbg !22520
  %add.ptr23 = getelementptr inbounds i8, i8* %23, i64 %24, !dbg !22521
  %25 = load i64, i64* %ofs, align 8, !dbg !22522
  %sub24 = sub i64 256, %25, !dbg !22523
  %26 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22524
  %flag = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %26, i32 0, i32 1, !dbg !22525
  %27 = load i32, i32* %flag, align 4, !dbg !22525
  %and = and i32 %27, 16777216, !dbg !22526
  %cmp = icmp ne i32 %and, 0, !dbg !22527
  %conv25 = zext i1 %cmp to i32, !dbg !22527
  %conv26 = trunc i32 %conv25 to i8, !dbg !22528
  %call27 = call i8* @WM_bool_as_string(i8 zeroext %conv26), !dbg !22529
  %call28 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr23, i64 %sub24, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.155, i64 0, i64 0), i8* %call27), !dbg !22530
  %28 = load i64, i64* %ofs, align 8, !dbg !22531
  %add29 = add i64 %28, %call28, !dbg !22531
  store i64 %add29, i64* %ofs, align 8, !dbg !22531
  ret void, !dbg !22532
}

; Function Attrs: noinline nounwind uwtable
define internal void @applySeqSlideValue(%struct.TransInfo* %t, float* %val) #0 !dbg !22533 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %val.addr = alloca float*, align 8
  %td = alloca %struct.TransData*, align 8
  %i = alloca i32, align 4
  %tvec = alloca [2 x float], align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !22536, metadata !DIExpression()), !dbg !22537
  store float* %val, float** %val.addr, align 8
  call void @llvm.dbg.declare(metadata float** %val.addr, metadata !22538, metadata !DIExpression()), !dbg !22539
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !22540, metadata !DIExpression()), !dbg !22541
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22542
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !22543
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !22543
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !22541
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22544, metadata !DIExpression()), !dbg !22545
  store i32 0, i32* %i, align 4, !dbg !22546
  br label %for.cond, !dbg !22548

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !22549
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22551
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 9, !dbg !22552
  %4 = load i32, i32* %total, align 8, !dbg !22552
  %cmp = icmp slt i32 %2, %4, !dbg !22553
  br i1 %cmp, label %for.body, label %for.end, !dbg !22554

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [2 x float]* %tvec, metadata !22555, metadata !DIExpression()), !dbg !22557
  %5 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22558
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %5, i32 0, i32 16, !dbg !22560
  %6 = load i32, i32* %flag, align 8, !dbg !22560
  %and = and i32 %6, 4, !dbg !22561
  %tobool = icmp ne i32 %and, 0, !dbg !22561
  br i1 %tobool, label %if.then, label %if.end, !dbg !22562

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !22563

if.end:                                           ; preds = %for.body
  %7 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22564
  %flag1 = getelementptr inbounds %struct.TransData, %struct.TransData* %7, i32 0, i32 16, !dbg !22566
  %8 = load i32, i32* %flag1, align 8, !dbg !22566
  %and2 = and i32 %8, 2048, !dbg !22567
  %tobool3 = icmp ne i32 %and2, 0, !dbg !22567
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !22568

if.then4:                                         ; preds = %if.end
  br label %for.inc, !dbg !22569

if.end5:                                          ; preds = %if.end
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %tvec, i64 0, i64 0, !dbg !22570
  %9 = load float*, float** %val.addr, align 8, !dbg !22571
  call void @copy_v2_v2(float* %arraydecay, float* %9), !dbg !22572
  %arraydecay6 = getelementptr inbounds [2 x float], [2 x float]* %tvec, i64 0, i64 0, !dbg !22573
  %10 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22574
  %factor = getelementptr inbounds %struct.TransData, %struct.TransData* %10, i32 0, i32 2, !dbg !22575
  %11 = load float, float* %factor, align 8, !dbg !22575
  call void @mul_v2_fl(float* %arraydecay6, float %11), !dbg !22576
  %12 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22577
  %iloc = getelementptr inbounds %struct.TransData, %struct.TransData* %12, i32 0, i32 4, !dbg !22578
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %iloc, i64 0, i64 0, !dbg !22577
  %13 = load float, float* %arrayidx, align 8, !dbg !22577
  %arrayidx7 = getelementptr inbounds [2 x float], [2 x float]* %tvec, i64 0, i64 0, !dbg !22579
  %14 = load float, float* %arrayidx7, align 4, !dbg !22579
  %add = fadd float %13, %14, !dbg !22580
  %15 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22581
  %loc = getelementptr inbounds %struct.TransData, %struct.TransData* %15, i32 0, i32 3, !dbg !22582
  %16 = load float*, float** %loc, align 8, !dbg !22582
  %arrayidx8 = getelementptr inbounds float, float* %16, i64 0, !dbg !22581
  store float %add, float* %arrayidx8, align 4, !dbg !22583
  %17 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22584
  %iloc9 = getelementptr inbounds %struct.TransData, %struct.TransData* %17, i32 0, i32 4, !dbg !22585
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %iloc9, i64 0, i64 1, !dbg !22584
  %18 = load float, float* %arrayidx10, align 4, !dbg !22584
  %arrayidx11 = getelementptr inbounds [2 x float], [2 x float]* %tvec, i64 0, i64 1, !dbg !22586
  %19 = load float, float* %arrayidx11, align 4, !dbg !22586
  %add12 = fadd float %18, %19, !dbg !22587
  %20 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22588
  %loc13 = getelementptr inbounds %struct.TransData, %struct.TransData* %20, i32 0, i32 3, !dbg !22589
  %21 = load float*, float** %loc13, align 8, !dbg !22589
  %arrayidx14 = getelementptr inbounds float, float* %21, i64 1, !dbg !22588
  store float %add12, float* %arrayidx14, align 4, !dbg !22590
  br label %for.inc, !dbg !22591

for.inc:                                          ; preds = %if.end5, %if.then4
  %22 = load i32, i32* %i, align 4, !dbg !22592
  %inc = add nsw i32 %22, 1, !dbg !22592
  store i32 %inc, i32* %i, align 4, !dbg !22592
  %23 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22593
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %23, i32 1, !dbg !22593
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !22593
  br label %for.cond, !dbg !22594, !llvm.loop !22595

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !22597
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyTimeTranslate(%struct.TransInfo* %t, i32* %mval) #0 !dbg !22598 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %mval.addr = alloca i32*, align 8
  %v2d = alloca %struct.View2D*, align 8
  %cval = alloca [2 x float], align 4
  %sval = alloca [2 x float], align 4
  %str = alloca [256 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !22599, metadata !DIExpression()), !dbg !22600
  store i32* %mval, i32** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mval.addr, metadata !22601, metadata !DIExpression()), !dbg !22602
  call void @llvm.dbg.declare(metadata %struct.View2D** %v2d, metadata !22603, metadata !DIExpression()), !dbg !22604
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22605
  %view = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 52, !dbg !22606
  %1 = load i8*, i8** %view, align 8, !dbg !22606
  %2 = bitcast i8* %1 to %struct.View2D*, !dbg !22607
  store %struct.View2D* %2, %struct.View2D** %v2d, align 8, !dbg !22604
  call void @llvm.dbg.declare(metadata [2 x float]* %cval, metadata !22608, metadata !DIExpression()), !dbg !22609
  call void @llvm.dbg.declare(metadata [2 x float]* %sval, metadata !22610, metadata !DIExpression()), !dbg !22611
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !22612, metadata !DIExpression()), !dbg !22613
  %3 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !22614
  %4 = load i32*, i32** %mval.addr, align 8, !dbg !22615
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 0, !dbg !22615
  %5 = load i32, i32* %arrayidx, align 4, !dbg !22615
  %conv = sitofp i32 %5 to float, !dbg !22615
  %6 = load i32*, i32** %mval.addr, align 8, !dbg !22616
  %arrayidx1 = getelementptr inbounds i32, i32* %6, i64 0, !dbg !22616
  %7 = load i32, i32* %arrayidx1, align 4, !dbg !22616
  %conv2 = sitofp i32 %7 to float, !dbg !22616
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %cval, i64 0, i64 0, !dbg !22617
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %cval, i64 0, i64 1, !dbg !22618
  call void @UI_view2d_region_to_view(%struct.View2D* %3, float %conv, float %conv2, float* %arrayidx3, float* %arrayidx4), !dbg !22619
  %8 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !22620
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22621
  %imval = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 22, !dbg !22622
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %imval, i64 0, i64 0, !dbg !22621
  %10 = load i32, i32* %arrayidx5, align 8, !dbg !22621
  %conv6 = sitofp i32 %10 to float, !dbg !22621
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22623
  %imval7 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 22, !dbg !22624
  %arrayidx8 = getelementptr inbounds [2 x i32], [2 x i32]* %imval7, i64 0, i64 0, !dbg !22623
  %12 = load i32, i32* %arrayidx8, align 8, !dbg !22623
  %conv9 = sitofp i32 %12 to float, !dbg !22623
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %sval, i64 0, i64 0, !dbg !22625
  %arrayidx11 = getelementptr inbounds [2 x float], [2 x float]* %sval, i64 0, i64 1, !dbg !22626
  call void @UI_view2d_region_to_view(%struct.View2D* %8, float %conv6, float %conv9, float* %arrayidx10, float* %arrayidx11), !dbg !22627
  %arrayidx12 = getelementptr inbounds [2 x float], [2 x float]* %cval, i64 0, i64 0, !dbg !22628
  %13 = load float, float* %arrayidx12, align 4, !dbg !22628
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* %sval, i64 0, i64 0, !dbg !22629
  %14 = load float, float* %arrayidx13, align 4, !dbg !22629
  %sub = fsub float %13, %14, !dbg !22630
  %15 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22631
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %15, i32 0, i32 47, !dbg !22632
  %arrayidx14 = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !22631
  store float %sub, float* %arrayidx14, align 4, !dbg !22633
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22634
  %values15 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 47, !dbg !22635
  %arrayidx16 = getelementptr inbounds [4 x float], [4 x float]* %values15, i64 0, i64 0, !dbg !22634
  %17 = load float, float* %arrayidx16, align 4, !dbg !22634
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22636
  %vec = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 35, !dbg !22637
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !22636
  store float %17, float* %arrayidx17, align 4, !dbg !22638
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22639
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 15, !dbg !22640
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22641
  %vec18 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 35, !dbg !22642
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %vec18, i64 0, i64 0, !dbg !22641
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %arrayidx19), !dbg !22643
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22644
  %vec20 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 35, !dbg !22645
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %vec20, i64 0, i64 0, !dbg !22644
  %22 = load float, float* %arrayidx21, align 4, !dbg !22644
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22646
  %values22 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 47, !dbg !22647
  %arrayidx23 = getelementptr inbounds [4 x float], [4 x float]* %values22, i64 0, i64 0, !dbg !22646
  store float %22, float* %arrayidx23, align 4, !dbg !22648
  %24 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22649
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !22650
  call void @headerTimeTranslate(%struct.TransInfo* %24, i8* %arraydecay), !dbg !22651
  %25 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22652
  %arrayidx24 = getelementptr inbounds [2 x float], [2 x float]* %sval, i64 0, i64 0, !dbg !22653
  %26 = load float, float* %arrayidx24, align 4, !dbg !22653
  call void @applyTimeTranslateValue(%struct.TransInfo* %25, float %26), !dbg !22654
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22655
  call void @recalcData(%struct.TransInfo* %27), !dbg !22656
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22657
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 54, !dbg !22658
  %29 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !22658
  %arraydecay25 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !22659
  call void @ED_area_headerprint(%struct.ScrArea* %29, i8* %arraydecay25), !dbg !22660
  ret void, !dbg !22661
}

declare dso_local void @UI_view2d_region_to_view(%struct.View2D*, float, float, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @headerTimeTranslate(%struct.TransInfo* %t, i8* %str) #0 !dbg !22662 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %str.addr = alloca i8*, align 8
  %tvec = alloca [192 x i8], align 16
  %scene2 = alloca %struct.Scene*, align 8
  %autosnap = alloca i16, align 2
  %secf = alloca double, align 8
  %val = alloca float, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !22665, metadata !DIExpression()), !dbg !22666
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !22667, metadata !DIExpression()), !dbg !22668
  call void @llvm.dbg.declare(metadata [192 x i8]* %tvec, metadata !22669, metadata !DIExpression()), !dbg !22670
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22671
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 15, !dbg !22673
  %call = call zeroext i8 @hasNumInput(%struct.NumInput* %num), !dbg !22674
  %tobool = icmp ne i8 %call, 0, !dbg !22674
  br i1 %tobool, label %if.then, label %if.else, !dbg !22675

if.then:                                          ; preds = %entry
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22676
  %num1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 15, !dbg !22678
  %arraydecay = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !22679
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22680
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 56, !dbg !22681
  %3 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !22681
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 38, !dbg !22682
  call void @outputNumInput(%struct.NumInput* %num1, i8* %arraydecay, %struct.UnitSettings* %unit), !dbg !22683
  br label %if.end61, !dbg !22684

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene2, metadata !22685, metadata !DIExpression()), !dbg !22689
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22690
  %scene3 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 56, !dbg !22691
  %5 = load %struct.Scene*, %struct.Scene** %scene3, align 8, !dbg !22691
  store %struct.Scene* %5, %struct.Scene** %scene2, align 8, !dbg !22689
  call void @llvm.dbg.declare(metadata i16* %autosnap, metadata !22692, metadata !DIExpression()), !dbg !22694
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22695
  %call4 = call signext i16 @getAnimEdit_SnapMode(%struct.TransInfo* %6), !dbg !22696
  store i16 %call4, i16* %autosnap, align 2, !dbg !22694
  call void @llvm.dbg.declare(metadata double* %secf, metadata !22697, metadata !DIExpression()), !dbg !22699
  %7 = load %struct.Scene*, %struct.Scene** %scene2, align 8, !dbg !22700
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 22, !dbg !22700
  %frs_sec = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 55, !dbg !22700
  %8 = load i16, i16* %frs_sec, align 4, !dbg !22700
  %conv = sitofp i16 %8 to double, !dbg !22700
  %9 = load %struct.Scene*, %struct.Scene** %scene2, align 8, !dbg !22700
  %r5 = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 22, !dbg !22700
  %frs_sec_base = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r5, i32 0, i32 65, !dbg !22700
  %10 = load float, float* %frs_sec_base, align 4, !dbg !22700
  %conv6 = fpext float %10 to double, !dbg !22700
  %div = fdiv double %conv, %conv6, !dbg !22700
  store double %div, double* %secf, align 8, !dbg !22699
  call void @llvm.dbg.declare(metadata float* %val, metadata !22701, metadata !DIExpression()), !dbg !22702
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22703
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 47, !dbg !22704
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !22703
  %12 = load float, float* %arrayidx, align 4, !dbg !22703
  store float %12, float* %val, align 4, !dbg !22702
  %13 = load i16, i16* %autosnap, align 2, !dbg !22705
  %conv7 = sext i16 %13 to i32, !dbg !22705
  %cmp = icmp eq i32 %conv7, 1, !dbg !22707
  br i1 %cmp, label %if.then9, label %if.else10, !dbg !22708

if.then9:                                         ; preds = %if.else
  %14 = load float, float* %val, align 4, !dbg !22709
  %add = fadd float %14, 5.000000e-01, !dbg !22711
  %15 = call float @llvm.floor.f32(float %add), !dbg !22712
  store float %15, float* %val, align 4, !dbg !22713
  br label %if.end28, !dbg !22714

if.else10:                                        ; preds = %if.else
  %16 = load i16, i16* %autosnap, align 2, !dbg !22715
  %conv11 = sext i16 %16 to i32, !dbg !22715
  %cmp12 = icmp eq i32 %conv11, 5, !dbg !22717
  br i1 %cmp12, label %if.then14, label %if.else19, !dbg !22718

if.then14:                                        ; preds = %if.else10
  %17 = load float, float* %val, align 4, !dbg !22719
  %conv15 = fpext float %17 to double, !dbg !22721
  %18 = load double, double* %secf, align 8, !dbg !22722
  %div16 = fdiv double %conv15, %18, !dbg !22723
  %add17 = fadd double %div16, 5.000000e-01, !dbg !22724
  %conv18 = fptrunc double %add17 to float, !dbg !22721
  %19 = call float @llvm.floor.f32(float %conv18), !dbg !22725
  store float %19, float* %val, align 4, !dbg !22726
  br label %if.end27, !dbg !22727

if.else19:                                        ; preds = %if.else10
  %20 = load i16, i16* %autosnap, align 2, !dbg !22728
  %conv20 = sext i16 %20 to i32, !dbg !22728
  %cmp21 = icmp eq i32 %conv20, 4, !dbg !22730
  br i1 %cmp21, label %if.then23, label %if.end, !dbg !22731

if.then23:                                        ; preds = %if.else19
  %21 = load float, float* %val, align 4, !dbg !22732
  %conv24 = fpext float %21 to double, !dbg !22734
  %22 = load double, double* %secf, align 8, !dbg !22735
  %div25 = fdiv double %conv24, %22, !dbg !22736
  %conv26 = fptrunc double %div25 to float, !dbg !22737
  store float %conv26, float* %val, align 4, !dbg !22738
  br label %if.end, !dbg !22739

if.end:                                           ; preds = %if.then23, %if.else19
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then14
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then9
  %23 = load i16, i16* %autosnap, align 2, !dbg !22740
  %conv29 = sext i16 %23 to i32, !dbg !22740
  %cmp30 = icmp eq i32 %conv29, 2, !dbg !22742
  br i1 %cmp30, label %if.then32, label %if.else37, !dbg !22743

if.then32:                                        ; preds = %if.end28
  %arrayidx33 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !22744
  %24 = load float, float* %val, align 4, !dbg !22745
  %conv34 = fptosi float %24 to i32, !dbg !22746
  %25 = load float, float* %val, align 4, !dbg !22747
  %conv35 = fpext float %25 to double, !dbg !22747
  %call36 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arrayidx33, i64 64, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.156, i64 0, i64 0), i32 %conv34, double %conv35), !dbg !22748
  br label %if.end60, !dbg !22748

if.else37:                                        ; preds = %if.end28
  %26 = load i16, i16* %autosnap, align 2, !dbg !22749
  %conv38 = sext i16 %26 to i32, !dbg !22749
  %cmp39 = icmp eq i32 %conv38, 4, !dbg !22751
  br i1 %cmp39, label %if.then41, label %if.else46, !dbg !22752

if.then41:                                        ; preds = %if.else37
  %arrayidx42 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !22753
  %27 = load float, float* %val, align 4, !dbg !22754
  %conv43 = fptosi float %27 to i32, !dbg !22755
  %28 = load float, float* %val, align 4, !dbg !22756
  %conv44 = fpext float %28 to double, !dbg !22756
  %call45 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arrayidx42, i64 64, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.157, i64 0, i64 0), i32 %conv43, double %conv44), !dbg !22757
  br label %if.end59, !dbg !22757

if.else46:                                        ; preds = %if.else37
  %29 = load i16, i16* %autosnap, align 2, !dbg !22758
  %conv47 = sext i16 %29 to i32, !dbg !22758
  %cmp48 = icmp eq i32 %conv47, 5, !dbg !22760
  br i1 %cmp48, label %if.then50, label %if.else54, !dbg !22761

if.then50:                                        ; preds = %if.else46
  %arrayidx51 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !22762
  %30 = load float, float* %val, align 4, !dbg !22763
  %conv52 = fpext float %30 to double, !dbg !22763
  %call53 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arrayidx51, i64 64, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.158, i64 0, i64 0), double %conv52), !dbg !22764
  br label %if.end58, !dbg !22764

if.else54:                                        ; preds = %if.else46
  %arrayidx55 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !22765
  %31 = load float, float* %val, align 4, !dbg !22766
  %conv56 = fpext float %31 to double, !dbg !22766
  %call57 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arrayidx55, i64 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), double %conv56), !dbg !22767
  br label %if.end58

if.end58:                                         ; preds = %if.else54, %if.then50
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then41
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then32
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then
  %32 = load i8*, i8** %str.addr, align 8, !dbg !22768
  %arrayidx62 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !22769
  %call63 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %32, i64 256, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.159, i64 0, i64 0), i8* %arrayidx62), !dbg !22770
  ret void, !dbg !22771
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyTimeTranslateValue(%struct.TransInfo* %t, float %UNUSED_sval) #0 !dbg !22772 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_sval.addr = alloca float, align 4
  %td = alloca %struct.TransData*, align 8
  %td2d = alloca %struct.TransData2D*, align 8
  %scene = alloca %struct.Scene*, align 8
  %i = alloca i32, align 4
  %autosnap = alloca i16, align 2
  %secf = alloca double, align 8
  %deltax = alloca float, align 4
  %val = alloca float, align 4
  %adt = alloca %struct.AnimData*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !22775, metadata !DIExpression()), !dbg !22776
  store float %UNUSED_sval, float* %UNUSED_sval.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_sval.addr, metadata !22777, metadata !DIExpression()), !dbg !22778
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !22779, metadata !DIExpression()), !dbg !22780
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22781
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !22782
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !22782
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !22780
  call void @llvm.dbg.declare(metadata %struct.TransData2D** %td2d, metadata !22783, metadata !DIExpression()), !dbg !22784
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22785
  %data2d = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 12, !dbg !22786
  %3 = load %struct.TransData2D*, %struct.TransData2D** %data2d, align 8, !dbg !22786
  store %struct.TransData2D* %3, %struct.TransData2D** %td2d, align 8, !dbg !22784
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !22787, metadata !DIExpression()), !dbg !22788
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22789
  %scene1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 56, !dbg !22790
  %5 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !22790
  store %struct.Scene* %5, %struct.Scene** %scene, align 8, !dbg !22788
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22791, metadata !DIExpression()), !dbg !22792
  call void @llvm.dbg.declare(metadata i16* %autosnap, metadata !22793, metadata !DIExpression()), !dbg !22794
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22795
  %call = call signext i16 @getAnimEdit_SnapMode(%struct.TransInfo* %6), !dbg !22796
  store i16 %call, i16* %autosnap, align 2, !dbg !22794
  call void @llvm.dbg.declare(metadata double* %secf, metadata !22797, metadata !DIExpression()), !dbg !22798
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !22799
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 22, !dbg !22799
  %frs_sec = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 55, !dbg !22799
  %8 = load i16, i16* %frs_sec, align 4, !dbg !22799
  %conv = sitofp i16 %8 to double, !dbg !22799
  %9 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !22799
  %r2 = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 22, !dbg !22799
  %frs_sec_base = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r2, i32 0, i32 65, !dbg !22799
  %10 = load float, float* %frs_sec_base, align 4, !dbg !22799
  %conv3 = fpext float %10 to double, !dbg !22799
  %div = fdiv double %conv, %conv3, !dbg !22799
  store double %div, double* %secf, align 8, !dbg !22798
  call void @llvm.dbg.declare(metadata float* %deltax, metadata !22800, metadata !DIExpression()), !dbg !22801
  call void @llvm.dbg.declare(metadata float* %val, metadata !22802, metadata !DIExpression()), !dbg !22803
  store i32 0, i32* %i, align 4, !dbg !22804
  br label %for.cond, !dbg !22806

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load i32, i32* %i, align 4, !dbg !22807
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22809
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 9, !dbg !22810
  %13 = load i32, i32* %total, align 8, !dbg !22810
  %cmp = icmp slt i32 %11, %13, !dbg !22811
  br i1 %cmp, label %for.body, label %for.end, !dbg !22812

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !22813, metadata !DIExpression()), !dbg !22817
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22818
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 33, !dbg !22819
  %15 = load i8, i8* %spacetype, align 8, !dbg !22819
  %conv5 = zext i8 %15 to i32, !dbg !22818
  %cmp6 = icmp ne i32 %conv5, 13, !dbg !22820
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !22821

cond.true:                                        ; preds = %for.body
  %16 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22822
  %extra = getelementptr inbounds %struct.TransData, %struct.TransData* %16, i32 0, i32 15, !dbg !22823
  %17 = load i8*, i8** %extra, align 8, !dbg !22823
  br label %cond.end, !dbg !22821

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !22821

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %17, %cond.true ], [ null, %cond.false ], !dbg !22821
  %18 = bitcast i8* %cond to %struct.AnimData*, !dbg !22821
  store %struct.AnimData* %18, %struct.AnimData** %adt, align 8, !dbg !22817
  %19 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !22824
  %tobool = icmp ne %struct.AnimData* %19, null, !dbg !22824
  br i1 %tobool, label %land.lhs.true, label %if.else31, !dbg !22826

land.lhs.true:                                    ; preds = %cond.end
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22827
  %spacetype8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 33, !dbg !22828
  %21 = load i8, i8* %spacetype8, align 8, !dbg !22828
  %conv9 = zext i8 %21 to i32, !dbg !22827
  %cmp10 = icmp ne i32 %conv9, 8, !dbg !22829
  br i1 %cmp10, label %if.then, label %if.else31, !dbg !22830

if.then:                                          ; preds = %land.lhs.true
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22831
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 47, !dbg !22833
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !22831
  %23 = load float, float* %arrayidx, align 4, !dbg !22831
  store float %23, float* %deltax, align 4, !dbg !22834
  %24 = load i16, i16* %autosnap, align 2, !dbg !22835
  %conv12 = sext i16 %24 to i32, !dbg !22835
  %cmp13 = icmp eq i32 %conv12, 5, !dbg !22837
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !22838

if.then15:                                        ; preds = %if.then
  %25 = load float, float* %deltax, align 4, !dbg !22839
  %conv16 = fpext float %25 to double, !dbg !22841
  %26 = load double, double* %secf, align 8, !dbg !22842
  %div17 = fdiv double %conv16, %26, !dbg !22843
  %add = fadd double %div17, 5.000000e-01, !dbg !22844
  %27 = call double @llvm.floor.f64(double %add), !dbg !22845
  %28 = load double, double* %secf, align 8, !dbg !22846
  %mul = fmul double %27, %28, !dbg !22847
  %conv18 = fptrunc double %mul to float, !dbg !22848
  store float %conv18, float* %deltax, align 4, !dbg !22849
  br label %if.end26, !dbg !22850

if.else:                                          ; preds = %if.then
  %29 = load i16, i16* %autosnap, align 2, !dbg !22851
  %conv19 = sext i16 %29 to i32, !dbg !22851
  %cmp20 = icmp eq i32 %conv19, 1, !dbg !22853
  br i1 %cmp20, label %if.then22, label %if.end, !dbg !22854

if.then22:                                        ; preds = %if.else
  %30 = load float, float* %deltax, align 4, !dbg !22855
  %add23 = fadd float %30, 5.000000e-01, !dbg !22857
  %conv24 = fpext float %add23 to double, !dbg !22855
  %31 = call double @llvm.floor.f64(double %conv24), !dbg !22858
  %conv25 = fptrunc double %31 to float, !dbg !22859
  store float %conv25, float* %deltax, align 4, !dbg !22860
  br label %if.end, !dbg !22861

if.end:                                           ; preds = %if.then22, %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end, %if.then15
  %32 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !22862
  %33 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22863
  %ival = getelementptr inbounds %struct.TransData, %struct.TransData* %33, i32 0, i32 6, !dbg !22864
  %34 = load float, float* %ival, align 8, !dbg !22864
  %call27 = call float @BKE_nla_tweakedit_remap(%struct.AnimData* %32, float %34, i16 signext 2), !dbg !22865
  store float %call27, float* %val, align 4, !dbg !22866
  %35 = load float, float* %deltax, align 4, !dbg !22867
  %36 = load float, float* %val, align 4, !dbg !22868
  %add28 = fadd float %36, %35, !dbg !22868
  store float %add28, float* %val, align 4, !dbg !22868
  %37 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !22869
  %38 = load float, float* %val, align 4, !dbg !22870
  %call29 = call float @BKE_nla_tweakedit_remap(%struct.AnimData* %37, float %38, i16 signext 1), !dbg !22871
  %39 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22872
  %val30 = getelementptr inbounds %struct.TransData, %struct.TransData* %39, i32 0, i32 5, !dbg !22873
  %40 = load float*, float** %val30, align 8, !dbg !22873
  store float %call29, float* %40, align 4, !dbg !22874
  br label %if.end56, !dbg !22875

if.else31:                                        ; preds = %land.lhs.true, %cond.end
  %41 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22876
  %values32 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %41, i32 0, i32 47, !dbg !22878
  %arrayidx33 = getelementptr inbounds [4 x float], [4 x float]* %values32, i64 0, i64 0, !dbg !22876
  %42 = load float, float* %arrayidx33, align 4, !dbg !22876
  store float %42, float* %val, align 4, !dbg !22879
  store float %42, float* %deltax, align 4, !dbg !22880
  %43 = load i16, i16* %autosnap, align 2, !dbg !22881
  %conv34 = sext i16 %43 to i32, !dbg !22881
  %cmp35 = icmp eq i32 %conv34, 5, !dbg !22883
  br i1 %cmp35, label %if.then37, label %if.else43, !dbg !22884

if.then37:                                        ; preds = %if.else31
  %44 = load float, float* %deltax, align 4, !dbg !22885
  %conv38 = fpext float %44 to double, !dbg !22887
  %45 = load double, double* %secf, align 8, !dbg !22888
  %div39 = fdiv double %conv38, %45, !dbg !22889
  %add40 = fadd double %div39, 5.000000e-01, !dbg !22890
  %46 = call double @llvm.floor.f64(double %add40), !dbg !22891
  %47 = load double, double* %secf, align 8, !dbg !22892
  %mul41 = fmul double %46, %47, !dbg !22893
  %conv42 = fptrunc double %mul41 to float, !dbg !22894
  store float %conv42, float* %val, align 4, !dbg !22895
  br label %if.end52, !dbg !22896

if.else43:                                        ; preds = %if.else31
  %48 = load i16, i16* %autosnap, align 2, !dbg !22897
  %conv44 = sext i16 %48 to i32, !dbg !22897
  %cmp45 = icmp eq i32 %conv44, 1, !dbg !22899
  br i1 %cmp45, label %if.then47, label %if.end51, !dbg !22900

if.then47:                                        ; preds = %if.else43
  %49 = load float, float* %val, align 4, !dbg !22901
  %add48 = fadd float %49, 5.000000e-01, !dbg !22903
  %conv49 = fpext float %add48 to double, !dbg !22901
  %50 = call double @llvm.floor.f64(double %conv49), !dbg !22904
  %conv50 = fptrunc double %50 to float, !dbg !22905
  store float %conv50, float* %val, align 4, !dbg !22906
  br label %if.end51, !dbg !22907

if.end51:                                         ; preds = %if.then47, %if.else43
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then37
  %51 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22908
  %ival53 = getelementptr inbounds %struct.TransData, %struct.TransData* %51, i32 0, i32 6, !dbg !22909
  %52 = load float, float* %ival53, align 8, !dbg !22909
  %53 = load float, float* %val, align 4, !dbg !22910
  %add54 = fadd float %52, %53, !dbg !22911
  %54 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22912
  %val55 = getelementptr inbounds %struct.TransData, %struct.TransData* %54, i32 0, i32 5, !dbg !22913
  %55 = load float*, float** %val55, align 8, !dbg !22913
  store float %add54, float* %55, align 4, !dbg !22914
  br label %if.end56

if.end56:                                         ; preds = %if.end52, %if.end26
  %56 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22915
  %57 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22916
  %58 = load %struct.TransData2D*, %struct.TransData2D** %td2d, align 8, !dbg !22917
  %59 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !22918
  %60 = load i16, i16* %autosnap, align 2, !dbg !22919
  call void @doAnimEdit_SnapFrame(%struct.TransInfo* %56, %struct.TransData* %57, %struct.TransData2D* %58, %struct.AnimData* %59, i16 signext %60), !dbg !22920
  br label %for.inc, !dbg !22921

for.inc:                                          ; preds = %if.end56
  %61 = load i32, i32* %i, align 4, !dbg !22922
  %inc = add nsw i32 %61, 1, !dbg !22922
  store i32 %inc, i32* %i, align 4, !dbg !22922
  %62 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !22923
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %62, i32 1, !dbg !22923
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !22923
  %63 = load %struct.TransData2D*, %struct.TransData2D** %td2d, align 8, !dbg !22924
  %incdec.ptr57 = getelementptr inbounds %struct.TransData2D, %struct.TransData2D* %63, i32 1, !dbg !22924
  store %struct.TransData2D* %incdec.ptr57, %struct.TransData2D** %td2d, align 8, !dbg !22924
  br label %for.cond, !dbg !22925, !llvm.loop !22926

for.end:                                          ; preds = %for.cond
  ret void, !dbg !22928
}

; Function Attrs: noinline nounwind uwtable
define internal signext i16 @getAnimEdit_SnapMode(%struct.TransInfo* %t) #0 !dbg !22929 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %autosnap = alloca i16, align 2
  %saction = alloca %struct.SpaceAction*, align 8
  %sipo = alloca %struct.SpaceIpo*, align 8
  %snla = alloca %struct.SpaceNla*, align 8
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !22932, metadata !DIExpression()), !dbg !22933
  call void @llvm.dbg.declare(metadata i16* %autosnap, metadata !22934, metadata !DIExpression()), !dbg !22935
  store i16 0, i16* %autosnap, align 2, !dbg !22935
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22936
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 33, !dbg !22938
  %1 = load i8, i8* %spacetype, align 8, !dbg !22938
  %conv = zext i8 %1 to i32, !dbg !22936
  %cmp = icmp eq i32 %conv, 12, !dbg !22939
  br i1 %cmp, label %if.then, label %if.else, !dbg !22940

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SpaceAction** %saction, metadata !22941, metadata !DIExpression()), !dbg !22943
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22944
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 54, !dbg !22945
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !22945
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %3, i32 0, i32 19, !dbg !22946
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !22947
  %4 = load i8*, i8** %first, align 8, !dbg !22947
  %5 = bitcast i8* %4 to %struct.SpaceAction*, !dbg !22948
  store %struct.SpaceAction* %5, %struct.SpaceAction** %saction, align 8, !dbg !22943
  %6 = load %struct.SpaceAction*, %struct.SpaceAction** %saction, align 8, !dbg !22949
  %tobool = icmp ne %struct.SpaceAction* %6, null, !dbg !22949
  br i1 %tobool, label %if.then2, label %if.end, !dbg !22951

if.then2:                                         ; preds = %if.then
  %7 = load %struct.SpaceAction*, %struct.SpaceAction** %saction, align 8, !dbg !22952
  %autosnap3 = getelementptr inbounds %struct.SpaceAction, %struct.SpaceAction* %7, i32 0, i32 10, !dbg !22953
  %8 = load i8, i8* %autosnap3, align 1, !dbg !22953
  %conv4 = zext i8 %8 to i16, !dbg !22952
  store i16 %conv4, i16* %autosnap, align 2, !dbg !22954
  br label %if.end, !dbg !22955

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end33, !dbg !22956

if.else:                                          ; preds = %entry
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22957
  %spacetype5 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %9, i32 0, i32 33, !dbg !22959
  %10 = load i8, i8* %spacetype5, align 8, !dbg !22959
  %conv6 = zext i8 %10 to i32, !dbg !22957
  %cmp7 = icmp eq i32 %conv6, 2, !dbg !22960
  br i1 %cmp7, label %if.then9, label %if.else17, !dbg !22961

if.then9:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.SpaceIpo** %sipo, metadata !22962, metadata !DIExpression()), !dbg !22964
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22965
  %sa10 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 54, !dbg !22966
  %12 = load %struct.ScrArea*, %struct.ScrArea** %sa10, align 8, !dbg !22966
  %spacedata11 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %12, i32 0, i32 19, !dbg !22967
  %first12 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata11, i32 0, i32 0, !dbg !22968
  %13 = load i8*, i8** %first12, align 8, !dbg !22968
  %14 = bitcast i8* %13 to %struct.SpaceIpo*, !dbg !22969
  store %struct.SpaceIpo* %14, %struct.SpaceIpo** %sipo, align 8, !dbg !22964
  %15 = load %struct.SpaceIpo*, %struct.SpaceIpo** %sipo, align 8, !dbg !22970
  %tobool13 = icmp ne %struct.SpaceIpo* %15, null, !dbg !22970
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !22972

if.then14:                                        ; preds = %if.then9
  %16 = load %struct.SpaceIpo*, %struct.SpaceIpo** %sipo, align 8, !dbg !22973
  %autosnap15 = getelementptr inbounds %struct.SpaceIpo, %struct.SpaceIpo* %16, i32 0, i32 10, !dbg !22974
  %17 = load i16, i16* %autosnap15, align 2, !dbg !22974
  store i16 %17, i16* %autosnap, align 2, !dbg !22975
  br label %if.end16, !dbg !22976

if.end16:                                         ; preds = %if.then14, %if.then9
  br label %if.end32, !dbg !22977

if.else17:                                        ; preds = %if.else
  %18 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22978
  %spacetype18 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %18, i32 0, i32 33, !dbg !22980
  %19 = load i8, i8* %spacetype18, align 8, !dbg !22980
  %conv19 = zext i8 %19 to i32, !dbg !22978
  %cmp20 = icmp eq i32 %conv19, 13, !dbg !22981
  br i1 %cmp20, label %if.then22, label %if.else30, !dbg !22982

if.then22:                                        ; preds = %if.else17
  call void @llvm.dbg.declare(metadata %struct.SpaceNla** %snla, metadata !22983, metadata !DIExpression()), !dbg !22985
  %20 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !22986
  %sa23 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %20, i32 0, i32 54, !dbg !22987
  %21 = load %struct.ScrArea*, %struct.ScrArea** %sa23, align 8, !dbg !22987
  %spacedata24 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %21, i32 0, i32 19, !dbg !22988
  %first25 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata24, i32 0, i32 0, !dbg !22989
  %22 = load i8*, i8** %first25, align 8, !dbg !22989
  %23 = bitcast i8* %22 to %struct.SpaceNla*, !dbg !22990
  store %struct.SpaceNla* %23, %struct.SpaceNla** %snla, align 8, !dbg !22985
  %24 = load %struct.SpaceNla*, %struct.SpaceNla** %snla, align 8, !dbg !22991
  %tobool26 = icmp ne %struct.SpaceNla* %24, null, !dbg !22991
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !22993

if.then27:                                        ; preds = %if.then22
  %25 = load %struct.SpaceNla*, %struct.SpaceNla** %snla, align 8, !dbg !22994
  %autosnap28 = getelementptr inbounds %struct.SpaceNla, %struct.SpaceNla* %25, i32 0, i32 6, !dbg !22995
  %26 = load i16, i16* %autosnap28, align 8, !dbg !22995
  store i16 %26, i16* %autosnap, align 2, !dbg !22996
  br label %if.end29, !dbg !22997

if.end29:                                         ; preds = %if.then27, %if.then22
  br label %if.end31, !dbg !22998

if.else30:                                        ; preds = %if.else17
  store i16 0, i16* %autosnap, align 2, !dbg !22999
  br label %if.end31

if.end31:                                         ; preds = %if.else30, %if.end29
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.end16
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23001
  %modifiers = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %27, i32 0, i32 2, !dbg !23003
  %28 = load i32, i32* %modifiers, align 8, !dbg !23003
  %and = and i32 %28, 8, !dbg !23004
  %tobool34 = icmp ne i32 %and, 0, !dbg !23004
  br i1 %tobool34, label %if.then35, label %if.end40, !dbg !23005

if.then35:                                        ; preds = %if.end33
  %29 = load i16, i16* %autosnap, align 2, !dbg !23006
  %tobool36 = icmp ne i16 %29, 0, !dbg !23006
  br i1 %tobool36, label %if.then37, label %if.else38, !dbg !23009

if.then37:                                        ; preds = %if.then35
  store i16 0, i16* %autosnap, align 2, !dbg !23010
  br label %if.end39, !dbg !23011

if.else38:                                        ; preds = %if.then35
  store i16 2, i16* %autosnap, align 2, !dbg !23012
  br label %if.end39

if.end39:                                         ; preds = %if.else38, %if.then37
  br label %if.end40, !dbg !23013

if.end40:                                         ; preds = %if.end39, %if.end33
  %30 = load i16, i16* %autosnap, align 2, !dbg !23014
  ret i16 %30, !dbg !23015
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.floor.f32(float) #1

declare dso_local float @BKE_nla_tweakedit_remap(%struct.AnimData*, float, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @doAnimEdit_SnapFrame(%struct.TransInfo* %t, %struct.TransData* %td, %struct.TransData2D* %td2d, %struct.AnimData* %adt, i16 signext %autosnap) #0 !dbg !23016 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %td.addr = alloca %struct.TransData*, align 8
  %td2d.addr = alloca %struct.TransData2D*, align 8
  %adt.addr = alloca %struct.AnimData*, align 8
  %autosnap.addr = alloca i16, align 2
  %scene = alloca %struct.Scene*, align 8
  %secf = alloca double, align 8
  %val = alloca double, align 8
  %val45 = alloca float, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !23019, metadata !DIExpression()), !dbg !23020
  store %struct.TransData* %td, %struct.TransData** %td.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransData** %td.addr, metadata !23021, metadata !DIExpression()), !dbg !23022
  store %struct.TransData2D* %td2d, %struct.TransData2D** %td2d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransData2D** %td2d.addr, metadata !23023, metadata !DIExpression()), !dbg !23024
  store %struct.AnimData* %adt, %struct.AnimData** %adt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt.addr, metadata !23025, metadata !DIExpression()), !dbg !23026
  store i16 %autosnap, i16* %autosnap.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %autosnap.addr, metadata !23027, metadata !DIExpression()), !dbg !23028
  %0 = load i16, i16* %autosnap.addr, align 2, !dbg !23029
  %conv = sext i16 %0 to i32, !dbg !23029
  %cmp = icmp eq i32 %conv, 2, !dbg !23029
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !23029

lor.lhs.false:                                    ; preds = %entry
  %1 = load i16, i16* %autosnap.addr, align 2, !dbg !23029
  %conv2 = sext i16 %1 to i32, !dbg !23029
  %cmp3 = icmp eq i32 %conv2, 4, !dbg !23029
  br i1 %cmp3, label %if.then, label %if.else40, !dbg !23031

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !23032, metadata !DIExpression()), !dbg !23034
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23035
  %scene5 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 56, !dbg !23036
  %3 = load %struct.Scene*, %struct.Scene** %scene5, align 8, !dbg !23036
  store %struct.Scene* %3, %struct.Scene** %scene, align 8, !dbg !23034
  call void @llvm.dbg.declare(metadata double* %secf, metadata !23037, metadata !DIExpression()), !dbg !23038
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !23039
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 22, !dbg !23039
  %frs_sec = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 55, !dbg !23039
  %5 = load i16, i16* %frs_sec, align 4, !dbg !23039
  %conv6 = sitofp i16 %5 to double, !dbg !23039
  %6 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !23039
  %r7 = getelementptr inbounds %struct.Scene, %struct.Scene* %6, i32 0, i32 22, !dbg !23039
  %frs_sec_base = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r7, i32 0, i32 65, !dbg !23039
  %7 = load float, float* %frs_sec_base, align 4, !dbg !23039
  %conv8 = fpext float %7 to double, !dbg !23039
  %div = fdiv double %conv6, %conv8, !dbg !23039
  store double %div, double* %secf, align 8, !dbg !23038
  call void @llvm.dbg.declare(metadata double* %val, metadata !23040, metadata !DIExpression()), !dbg !23041
  %8 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !23042
  %tobool = icmp ne %struct.AnimData* %8, null, !dbg !23042
  br i1 %tobool, label %if.then9, label %if.else, !dbg !23044

if.then9:                                         ; preds = %if.then
  %9 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !23045
  %10 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !23046
  %val10 = getelementptr inbounds %struct.TransData, %struct.TransData* %10, i32 0, i32 5, !dbg !23047
  %11 = load float*, float** %val10, align 8, !dbg !23047
  %12 = load float, float* %11, align 4, !dbg !23048
  %call = call float @BKE_nla_tweakedit_remap(%struct.AnimData* %9, float %12, i16 signext 2), !dbg !23049
  %conv11 = fpext float %call to double, !dbg !23049
  store double %conv11, double* %val, align 8, !dbg !23050
  br label %if.end, !dbg !23051

if.else:                                          ; preds = %if.then
  %13 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !23052
  %val12 = getelementptr inbounds %struct.TransData, %struct.TransData* %13, i32 0, i32 5, !dbg !23053
  %14 = load float*, float** %val12, align 8, !dbg !23053
  %15 = load float, float* %14, align 4, !dbg !23054
  %conv13 = fpext float %15 to double, !dbg !23054
  store double %conv13, double* %val, align 8, !dbg !23055
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  %16 = load i16, i16* %autosnap.addr, align 2, !dbg !23056
  %conv14 = sext i16 %16 to i32, !dbg !23056
  %cmp15 = icmp eq i32 %conv14, 2, !dbg !23058
  br i1 %cmp15, label %if.then17, label %if.else20, !dbg !23059

if.then17:                                        ; preds = %if.end
  %17 = load double, double* %val, align 8, !dbg !23060
  %add = fadd double %17, 5.000000e-01, !dbg !23062
  %conv18 = fptrunc double %add to float, !dbg !23060
  %18 = call float @llvm.floor.f32(float %conv18), !dbg !23063
  %conv19 = fpext float %18 to double, !dbg !23063
  store double %conv19, double* %val, align 8, !dbg !23064
  br label %if.end30, !dbg !23065

if.else20:                                        ; preds = %if.end
  %19 = load i16, i16* %autosnap.addr, align 2, !dbg !23066
  %conv21 = sext i16 %19 to i32, !dbg !23066
  %cmp22 = icmp eq i32 %conv21, 4, !dbg !23068
  br i1 %cmp22, label %if.then24, label %if.end29, !dbg !23069

if.then24:                                        ; preds = %if.else20
  %20 = load double, double* %val, align 8, !dbg !23070
  %21 = load double, double* %secf, align 8, !dbg !23072
  %div25 = fdiv double %20, %21, !dbg !23073
  %add26 = fadd double %div25, 5.000000e-01, !dbg !23074
  %22 = call double @llvm.floor.f64(double %add26), !dbg !23075
  %23 = load double, double* %secf, align 8, !dbg !23076
  %mul = fmul double %22, %23, !dbg !23077
  %conv27 = fptrunc double %mul to float, !dbg !23078
  %conv28 = fpext float %conv27 to double, !dbg !23078
  store double %conv28, double* %val, align 8, !dbg !23079
  br label %if.end29, !dbg !23080

if.end29:                                         ; preds = %if.then24, %if.else20
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then17
  %24 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !23081
  %tobool31 = icmp ne %struct.AnimData* %24, null, !dbg !23081
  br i1 %tobool31, label %if.then32, label %if.else36, !dbg !23083

if.then32:                                        ; preds = %if.end30
  %25 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !23084
  %26 = load double, double* %val, align 8, !dbg !23085
  %conv33 = fptrunc double %26 to float, !dbg !23085
  %call34 = call float @BKE_nla_tweakedit_remap(%struct.AnimData* %25, float %conv33, i16 signext 1), !dbg !23086
  %27 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !23087
  %val35 = getelementptr inbounds %struct.TransData, %struct.TransData* %27, i32 0, i32 5, !dbg !23088
  %28 = load float*, float** %val35, align 8, !dbg !23088
  store float %call34, float* %28, align 4, !dbg !23089
  br label %if.end39, !dbg !23090

if.else36:                                        ; preds = %if.end30
  %29 = load double, double* %val, align 8, !dbg !23091
  %conv37 = fptrunc double %29 to float, !dbg !23091
  %30 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !23092
  %val38 = getelementptr inbounds %struct.TransData, %struct.TransData* %30, i32 0, i32 5, !dbg !23093
  %31 = load float*, float** %val38, align 8, !dbg !23093
  store float %conv37, float* %31, align 4, !dbg !23094
  br label %if.end39

if.end39:                                         ; preds = %if.else36, %if.then32
  br label %if.end64, !dbg !23095

if.else40:                                        ; preds = %lor.lhs.false
  %32 = load i16, i16* %autosnap.addr, align 2, !dbg !23096
  %conv41 = sext i16 %32 to i32, !dbg !23096
  %cmp42 = icmp eq i32 %conv41, 3, !dbg !23098
  br i1 %cmp42, label %if.then44, label %if.end63, !dbg !23099

if.then44:                                        ; preds = %if.else40
  call void @llvm.dbg.declare(metadata float* %val45, metadata !23100, metadata !DIExpression()), !dbg !23102
  %33 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !23103
  %tobool46 = icmp ne %struct.AnimData* %33, null, !dbg !23103
  br i1 %tobool46, label %if.then47, label %if.else50, !dbg !23105

if.then47:                                        ; preds = %if.then44
  %34 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !23106
  %35 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !23107
  %val48 = getelementptr inbounds %struct.TransData, %struct.TransData* %35, i32 0, i32 5, !dbg !23108
  %36 = load float*, float** %val48, align 8, !dbg !23108
  %37 = load float, float* %36, align 4, !dbg !23109
  %call49 = call float @BKE_nla_tweakedit_remap(%struct.AnimData* %34, float %37, i16 signext 2), !dbg !23110
  store float %call49, float* %val45, align 4, !dbg !23111
  br label %if.end52, !dbg !23112

if.else50:                                        ; preds = %if.then44
  %38 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !23113
  %val51 = getelementptr inbounds %struct.TransData, %struct.TransData* %38, i32 0, i32 5, !dbg !23114
  %39 = load float*, float** %val51, align 8, !dbg !23114
  %40 = load float, float* %39, align 4, !dbg !23115
  store float %40, float* %val45, align 4, !dbg !23116
  br label %if.end52

if.end52:                                         ; preds = %if.else50, %if.then47
  %41 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23117
  %scene53 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %41, i32 0, i32 56, !dbg !23118
  %42 = load %struct.Scene*, %struct.Scene** %scene53, align 8, !dbg !23118
  %markers = getelementptr inbounds %struct.Scene, %struct.Scene* %42, i32 0, i32 24, !dbg !23119
  %43 = load float, float* %val45, align 4, !dbg !23120
  %call54 = call i32 @ED_markers_find_nearest_marker_time(%struct.ListBase* %markers, float %43), !dbg !23121
  %conv55 = sitofp i32 %call54 to float, !dbg !23122
  store float %conv55, float* %val45, align 4, !dbg !23123
  %44 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !23124
  %tobool56 = icmp ne %struct.AnimData* %44, null, !dbg !23124
  br i1 %tobool56, label %if.then57, label %if.else60, !dbg !23126

if.then57:                                        ; preds = %if.end52
  %45 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !23127
  %46 = load float, float* %val45, align 4, !dbg !23128
  %call58 = call float @BKE_nla_tweakedit_remap(%struct.AnimData* %45, float %46, i16 signext 1), !dbg !23129
  %47 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !23130
  %val59 = getelementptr inbounds %struct.TransData, %struct.TransData* %47, i32 0, i32 5, !dbg !23131
  %48 = load float*, float** %val59, align 8, !dbg !23131
  store float %call58, float* %48, align 4, !dbg !23132
  br label %if.end62, !dbg !23133

if.else60:                                        ; preds = %if.end52
  %49 = load float, float* %val45, align 4, !dbg !23134
  %50 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !23135
  %val61 = getelementptr inbounds %struct.TransData, %struct.TransData* %50, i32 0, i32 5, !dbg !23136
  %51 = load float*, float** %val61, align 8, !dbg !23136
  store float %49, float* %51, align 4, !dbg !23137
  br label %if.end62

if.end62:                                         ; preds = %if.else60, %if.then57
  br label %if.end63, !dbg !23138

if.end63:                                         ; preds = %if.end62, %if.else40
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end39
  %52 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !23139
  %flag = getelementptr inbounds %struct.TransData, %struct.TransData* %52, i32 0, i32 16, !dbg !23141
  %53 = load i32, i32* %flag, align 8, !dbg !23141
  %and = and i32 %53, 131072, !dbg !23142
  %tobool65 = icmp ne i32 %and, 0, !dbg !23142
  br i1 %tobool65, label %land.lhs.true, label %if.end72, !dbg !23143

land.lhs.true:                                    ; preds = %if.end64
  %54 = load %struct.TransData2D*, %struct.TransData2D** %td2d.addr, align 8, !dbg !23144
  %h1 = getelementptr inbounds %struct.TransData2D, %struct.TransData2D* %54, i32 0, i32 2, !dbg !23145
  %55 = load float*, float** %h1, align 8, !dbg !23145
  %tobool66 = icmp ne float* %55, null, !dbg !23144
  br i1 %tobool66, label %if.then67, label %if.end72, !dbg !23146

if.then67:                                        ; preds = %land.lhs.true
  %56 = load %struct.TransData2D*, %struct.TransData2D** %td2d.addr, align 8, !dbg !23147
  %ih1 = getelementptr inbounds %struct.TransData2D, %struct.TransData2D* %56, i32 0, i32 4, !dbg !23149
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %ih1, i64 0, i64 0, !dbg !23147
  %57 = load float, float* %arrayidx, align 8, !dbg !23147
  %58 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !23150
  %val68 = getelementptr inbounds %struct.TransData, %struct.TransData* %58, i32 0, i32 5, !dbg !23151
  %59 = load float*, float** %val68, align 8, !dbg !23151
  %60 = load float, float* %59, align 4, !dbg !23152
  %add69 = fadd float %57, %60, !dbg !23153
  %61 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !23154
  %ival = getelementptr inbounds %struct.TransData, %struct.TransData* %61, i32 0, i32 6, !dbg !23155
  %62 = load float, float* %ival, align 8, !dbg !23155
  %sub = fsub float %add69, %62, !dbg !23156
  %63 = load %struct.TransData2D*, %struct.TransData2D** %td2d.addr, align 8, !dbg !23157
  %h170 = getelementptr inbounds %struct.TransData2D, %struct.TransData2D* %63, i32 0, i32 2, !dbg !23158
  %64 = load float*, float** %h170, align 8, !dbg !23158
  %arrayidx71 = getelementptr inbounds float, float* %64, i64 0, !dbg !23157
  store float %sub, float* %arrayidx71, align 4, !dbg !23159
  br label %if.end72, !dbg !23160

if.end72:                                         ; preds = %if.then67, %land.lhs.true, %if.end64
  %65 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !23161
  %flag73 = getelementptr inbounds %struct.TransData, %struct.TransData* %65, i32 0, i32 16, !dbg !23163
  %66 = load i32, i32* %flag73, align 8, !dbg !23163
  %and74 = and i32 %66, 262144, !dbg !23164
  %tobool75 = icmp ne i32 %and74, 0, !dbg !23164
  br i1 %tobool75, label %land.lhs.true76, label %if.end86, !dbg !23165

land.lhs.true76:                                  ; preds = %if.end72
  %67 = load %struct.TransData2D*, %struct.TransData2D** %td2d.addr, align 8, !dbg !23166
  %h2 = getelementptr inbounds %struct.TransData2D, %struct.TransData2D* %67, i32 0, i32 3, !dbg !23167
  %68 = load float*, float** %h2, align 8, !dbg !23167
  %tobool77 = icmp ne float* %68, null, !dbg !23166
  br i1 %tobool77, label %if.then78, label %if.end86, !dbg !23168

if.then78:                                        ; preds = %land.lhs.true76
  %69 = load %struct.TransData2D*, %struct.TransData2D** %td2d.addr, align 8, !dbg !23169
  %ih2 = getelementptr inbounds %struct.TransData2D, %struct.TransData2D* %69, i32 0, i32 5, !dbg !23171
  %arrayidx79 = getelementptr inbounds [2 x float], [2 x float]* %ih2, i64 0, i64 0, !dbg !23169
  %70 = load float, float* %arrayidx79, align 8, !dbg !23169
  %71 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !23172
  %val80 = getelementptr inbounds %struct.TransData, %struct.TransData* %71, i32 0, i32 5, !dbg !23173
  %72 = load float*, float** %val80, align 8, !dbg !23173
  %73 = load float, float* %72, align 4, !dbg !23174
  %add81 = fadd float %70, %73, !dbg !23175
  %74 = load %struct.TransData*, %struct.TransData** %td.addr, align 8, !dbg !23176
  %ival82 = getelementptr inbounds %struct.TransData, %struct.TransData* %74, i32 0, i32 6, !dbg !23177
  %75 = load float, float* %ival82, align 8, !dbg !23177
  %sub83 = fsub float %add81, %75, !dbg !23178
  %76 = load %struct.TransData2D*, %struct.TransData2D** %td2d.addr, align 8, !dbg !23179
  %h284 = getelementptr inbounds %struct.TransData2D, %struct.TransData2D* %76, i32 0, i32 3, !dbg !23180
  %77 = load float*, float** %h284, align 8, !dbg !23180
  %arrayidx85 = getelementptr inbounds float, float* %77, i64 0, !dbg !23179
  store float %sub83, float* %arrayidx85, align 4, !dbg !23181
  br label %if.end86, !dbg !23182

if.end86:                                         ; preds = %if.then78, %land.lhs.true76, %if.end72
  ret void, !dbg !23183
}

declare dso_local i32 @ED_markers_find_nearest_marker_time(%struct.ListBase*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @applyTimeSlide(%struct.TransInfo* %t, i32* %mval) #0 !dbg !23184 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %mval.addr = alloca i32*, align 8
  %v2d = alloca %struct.View2D*, align 8
  %cval = alloca [2 x float], align 4
  %sval = alloca [2 x float], align 4
  %minx = alloca float, align 4
  %maxx = alloca float, align 4
  %str = alloca [256 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !23185, metadata !DIExpression()), !dbg !23186
  store i32* %mval, i32** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mval.addr, metadata !23187, metadata !DIExpression()), !dbg !23188
  call void @llvm.dbg.declare(metadata %struct.View2D** %v2d, metadata !23189, metadata !DIExpression()), !dbg !23190
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23191
  %view = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 52, !dbg !23192
  %1 = load i8*, i8** %view, align 8, !dbg !23192
  %2 = bitcast i8* %1 to %struct.View2D*, !dbg !23193
  store %struct.View2D* %2, %struct.View2D** %v2d, align 8, !dbg !23190
  call void @llvm.dbg.declare(metadata [2 x float]* %cval, metadata !23194, metadata !DIExpression()), !dbg !23195
  call void @llvm.dbg.declare(metadata [2 x float]* %sval, metadata !23196, metadata !DIExpression()), !dbg !23197
  call void @llvm.dbg.declare(metadata float* %minx, metadata !23198, metadata !DIExpression()), !dbg !23199
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23200
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 40, !dbg !23201
  %4 = load i8*, i8** %customData, align 8, !dbg !23201
  %5 = bitcast i8* %4 to float*, !dbg !23202
  %6 = load float, float* %5, align 4, !dbg !23203
  store float %6, float* %minx, align 4, !dbg !23199
  call void @llvm.dbg.declare(metadata float* %maxx, metadata !23204, metadata !DIExpression()), !dbg !23205
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23206
  %customData1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 40, !dbg !23207
  %8 = load i8*, i8** %customData1, align 8, !dbg !23207
  %9 = bitcast i8* %8 to float*, !dbg !23208
  %add.ptr = getelementptr inbounds float, float* %9, i64 1, !dbg !23209
  %10 = load float, float* %add.ptr, align 4, !dbg !23210
  store float %10, float* %maxx, align 4, !dbg !23205
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !23211, metadata !DIExpression()), !dbg !23212
  %11 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !23213
  %12 = load i32*, i32** %mval.addr, align 8, !dbg !23214
  %arrayidx = getelementptr inbounds i32, i32* %12, i64 0, !dbg !23214
  %13 = load i32, i32* %arrayidx, align 4, !dbg !23214
  %conv = sitofp i32 %13 to float, !dbg !23214
  %14 = load i32*, i32** %mval.addr, align 8, !dbg !23215
  %arrayidx2 = getelementptr inbounds i32, i32* %14, i64 1, !dbg !23215
  %15 = load i32, i32* %arrayidx2, align 4, !dbg !23215
  %conv3 = sitofp i32 %15 to float, !dbg !23215
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %cval, i64 0, i64 0, !dbg !23216
  %arrayidx5 = getelementptr inbounds [2 x float], [2 x float]* %cval, i64 0, i64 1, !dbg !23217
  call void @UI_view2d_region_to_view(%struct.View2D* %11, float %conv, float %conv3, float* %arrayidx4, float* %arrayidx5), !dbg !23218
  %16 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !23219
  %17 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23220
  %imval = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %17, i32 0, i32 22, !dbg !23221
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %imval, i64 0, i64 0, !dbg !23220
  %18 = load i32, i32* %arrayidx6, align 8, !dbg !23220
  %conv7 = sitofp i32 %18 to float, !dbg !23220
  %19 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23222
  %imval8 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %19, i32 0, i32 22, !dbg !23223
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %imval8, i64 0, i64 1, !dbg !23222
  %20 = load i32, i32* %arrayidx9, align 4, !dbg !23222
  %conv10 = sitofp i32 %20 to float, !dbg !23222
  %arrayidx11 = getelementptr inbounds [2 x float], [2 x float]* %sval, i64 0, i64 0, !dbg !23224
  %arrayidx12 = getelementptr inbounds [2 x float], [2 x float]* %sval, i64 0, i64 1, !dbg !23225
  call void @UI_view2d_region_to_view(%struct.View2D* %16, float %conv7, float %conv10, float* %arrayidx11, float* %arrayidx12), !dbg !23226
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* %cval, i64 0, i64 0, !dbg !23227
  %21 = load float, float* %arrayidx13, align 4, !dbg !23227
  %22 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23228
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %22, i32 0, i32 47, !dbg !23229
  %arrayidx14 = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !23228
  store float %21, float* %arrayidx14, align 4, !dbg !23230
  %arrayidx15 = getelementptr inbounds [2 x float], [2 x float]* %cval, i64 0, i64 0, !dbg !23231
  %23 = load float, float* %arrayidx15, align 4, !dbg !23231
  %arrayidx16 = getelementptr inbounds [2 x float], [2 x float]* %sval, i64 0, i64 0, !dbg !23232
  %24 = load float, float* %arrayidx16, align 4, !dbg !23232
  %sub = fsub float %23, %24, !dbg !23233
  %mul = fmul float 2.000000e+00, %sub, !dbg !23234
  %25 = load float, float* %maxx, align 4, !dbg !23235
  %26 = load float, float* %minx, align 4, !dbg !23236
  %sub17 = fsub float %25, %26, !dbg !23237
  %div = fdiv float %mul, %sub17, !dbg !23238
  %27 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23239
  %vec = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %27, i32 0, i32 35, !dbg !23240
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !23239
  store float %div, float* %arrayidx18, align 4, !dbg !23241
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23242
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 15, !dbg !23243
  %29 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23244
  %vec19 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %29, i32 0, i32 35, !dbg !23245
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %vec19, i64 0, i64 0, !dbg !23244
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %arrayidx20), !dbg !23246
  %30 = load float, float* %maxx, align 4, !dbg !23247
  %31 = load float, float* %minx, align 4, !dbg !23248
  %sub21 = fsub float %30, %31, !dbg !23249
  %32 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23250
  %vec22 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %32, i32 0, i32 35, !dbg !23251
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %vec22, i64 0, i64 0, !dbg !23250
  %33 = load float, float* %arrayidx23, align 4, !dbg !23250
  %mul24 = fmul float %sub21, %33, !dbg !23252
  %div25 = fdiv float %mul24, 2.000000e+00, !dbg !23253
  %arrayidx26 = getelementptr inbounds [2 x float], [2 x float]* %sval, i64 0, i64 0, !dbg !23254
  %34 = load float, float* %arrayidx26, align 4, !dbg !23254
  %add = fadd float %div25, %34, !dbg !23255
  %35 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23256
  %values27 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %35, i32 0, i32 47, !dbg !23257
  %arrayidx28 = getelementptr inbounds [4 x float], [4 x float]* %values27, i64 0, i64 0, !dbg !23256
  store float %add, float* %arrayidx28, align 4, !dbg !23258
  %36 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23259
  %arrayidx29 = getelementptr inbounds [2 x float], [2 x float]* %sval, i64 0, i64 0, !dbg !23260
  %37 = load float, float* %arrayidx29, align 4, !dbg !23260
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !23261
  call void @headerTimeSlide(%struct.TransInfo* %36, float %37, i8* %arraydecay), !dbg !23262
  %38 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23263
  %arrayidx30 = getelementptr inbounds [2 x float], [2 x float]* %sval, i64 0, i64 0, !dbg !23264
  %39 = load float, float* %arrayidx30, align 4, !dbg !23264
  call void @applyTimeSlideValue(%struct.TransInfo* %38, float %39), !dbg !23265
  %40 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23266
  call void @recalcData(%struct.TransInfo* %40), !dbg !23267
  %41 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23268
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %41, i32 0, i32 54, !dbg !23269
  %42 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !23269
  %arraydecay31 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !23270
  call void @ED_area_headerprint(%struct.ScrArea* %42, i8* %arraydecay31), !dbg !23271
  ret void, !dbg !23272
}

; Function Attrs: noinline nounwind uwtable
define internal void @headerTimeSlide(%struct.TransInfo* %t, float %sval, i8* %str) #0 !dbg !23273 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %sval.addr = alloca float, align 4
  %str.addr = alloca i8*, align 8
  %tvec = alloca [192 x i8], align 16
  %minx = alloca float, align 4
  %maxx = alloca float, align 4
  %cval = alloca float, align 4
  %val = alloca float, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !23276, metadata !DIExpression()), !dbg !23277
  store float %sval, float* %sval.addr, align 4
  call void @llvm.dbg.declare(metadata float* %sval.addr, metadata !23278, metadata !DIExpression()), !dbg !23279
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !23280, metadata !DIExpression()), !dbg !23281
  call void @llvm.dbg.declare(metadata [192 x i8]* %tvec, metadata !23282, metadata !DIExpression()), !dbg !23283
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23284
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 15, !dbg !23286
  %call = call zeroext i8 @hasNumInput(%struct.NumInput* %num), !dbg !23287
  %tobool = icmp ne i8 %call, 0, !dbg !23287
  br i1 %tobool, label %if.then, label %if.else, !dbg !23288

if.then:                                          ; preds = %entry
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23289
  %num1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 15, !dbg !23291
  %arraydecay = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !23292
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23293
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 56, !dbg !23294
  %3 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !23294
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 38, !dbg !23295
  call void @outputNumInput(%struct.NumInput* %num1, i8* %arraydecay, %struct.UnitSettings* %unit), !dbg !23296
  br label %if.end11, !dbg !23297

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %minx, metadata !23298, metadata !DIExpression()), !dbg !23300
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23301
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 40, !dbg !23302
  %5 = load i8*, i8** %customData, align 8, !dbg !23302
  %6 = bitcast i8* %5 to float*, !dbg !23303
  %7 = load float, float* %6, align 4, !dbg !23304
  store float %7, float* %minx, align 4, !dbg !23300
  call void @llvm.dbg.declare(metadata float* %maxx, metadata !23305, metadata !DIExpression()), !dbg !23306
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23307
  %customData2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %8, i32 0, i32 40, !dbg !23308
  %9 = load i8*, i8** %customData2, align 8, !dbg !23308
  %10 = bitcast i8* %9 to float*, !dbg !23309
  %add.ptr = getelementptr inbounds float, float* %10, i64 1, !dbg !23310
  %11 = load float, float* %add.ptr, align 4, !dbg !23311
  store float %11, float* %maxx, align 4, !dbg !23306
  call void @llvm.dbg.declare(metadata float* %cval, metadata !23312, metadata !DIExpression()), !dbg !23313
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23314
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 47, !dbg !23315
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !23314
  %13 = load float, float* %arrayidx, align 4, !dbg !23314
  store float %13, float* %cval, align 4, !dbg !23313
  call void @llvm.dbg.declare(metadata float* %val, metadata !23316, metadata !DIExpression()), !dbg !23317
  %14 = load float, float* %cval, align 4, !dbg !23318
  %15 = load float, float* %sval.addr, align 4, !dbg !23319
  %sub = fsub float %14, %15, !dbg !23320
  %mul = fmul float 2.000000e+00, %sub, !dbg !23321
  %16 = load float, float* %maxx, align 4, !dbg !23322
  %17 = load float, float* %minx, align 4, !dbg !23323
  %sub3 = fsub float %16, %17, !dbg !23324
  %div = fdiv float %mul, %sub3, !dbg !23325
  store float %div, float* %val, align 4, !dbg !23326
  %18 = load float, float* %val, align 4, !dbg !23327
  %cmp = fcmp olt float %18, -1.000000e+00, !dbg !23327
  br i1 %cmp, label %if.then4, label %if.else5, !dbg !23330

if.then4:                                         ; preds = %if.else
  store float -1.000000e+00, float* %val, align 4, !dbg !23327
  br label %if.end8, !dbg !23327

if.else5:                                         ; preds = %if.else
  %19 = load float, float* %val, align 4, !dbg !23331
  %cmp6 = fcmp ogt float %19, 1.000000e+00, !dbg !23331
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !23327

if.then7:                                         ; preds = %if.else5
  store float 1.000000e+00, float* %val, align 4, !dbg !23331
  br label %if.end, !dbg !23331

if.end:                                           ; preds = %if.then7, %if.else5
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then4
  %arrayidx9 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !23333
  %20 = load float, float* %val, align 4, !dbg !23334
  %conv = fpext float %20 to double, !dbg !23334
  %call10 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arrayidx9, i64 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), double %conv), !dbg !23335
  br label %if.end11

if.end11:                                         ; preds = %if.end8, %if.then
  %21 = load i8*, i8** %str.addr, align 8, !dbg !23336
  %arrayidx12 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !23337
  %call13 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %21, i64 256, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.160, i64 0, i64 0), i8* %arrayidx12), !dbg !23338
  ret void, !dbg !23339
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyTimeSlideValue(%struct.TransInfo* %t, float %sval) #0 !dbg !23340 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %sval.addr = alloca float, align 4
  %td = alloca %struct.TransData*, align 8
  %i = alloca i32, align 4
  %minx = alloca float, align 4
  %maxx = alloca float, align 4
  %saction = alloca %struct.SpaceAction*, align 8
  %cvalf = alloca float, align 4
  %adt = alloca %struct.AnimData*, align 8
  %cval = alloca float, align 4
  %cvalc = alloca float, align 4
  %timefac = alloca float, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !23341, metadata !DIExpression()), !dbg !23342
  store float %sval, float* %sval.addr, align 4
  call void @llvm.dbg.declare(metadata float* %sval.addr, metadata !23343, metadata !DIExpression()), !dbg !23344
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !23345, metadata !DIExpression()), !dbg !23346
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23347
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 10, !dbg !23348
  %1 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !23348
  store %struct.TransData* %1, %struct.TransData** %td, align 8, !dbg !23346
  call void @llvm.dbg.declare(metadata i32* %i, metadata !23349, metadata !DIExpression()), !dbg !23350
  call void @llvm.dbg.declare(metadata float* %minx, metadata !23351, metadata !DIExpression()), !dbg !23352
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23353
  %customData = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 40, !dbg !23354
  %3 = load i8*, i8** %customData, align 8, !dbg !23354
  %4 = bitcast i8* %3 to float*, !dbg !23355
  %5 = load float, float* %4, align 4, !dbg !23356
  store float %5, float* %minx, align 4, !dbg !23352
  call void @llvm.dbg.declare(metadata float* %maxx, metadata !23357, metadata !DIExpression()), !dbg !23358
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23359
  %customData1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %6, i32 0, i32 40, !dbg !23360
  %7 = load i8*, i8** %customData1, align 8, !dbg !23360
  %8 = bitcast i8* %7 to float*, !dbg !23361
  %add.ptr = getelementptr inbounds float, float* %8, i64 1, !dbg !23362
  %9 = load float, float* %add.ptr, align 4, !dbg !23363
  store float %9, float* %maxx, align 4, !dbg !23358
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23364
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %10, i32 0, i32 33, !dbg !23366
  %11 = load i8, i8* %spacetype, align 8, !dbg !23366
  %conv = zext i8 %11 to i32, !dbg !23364
  %cmp = icmp eq i32 %conv, 12, !dbg !23367
  br i1 %cmp, label %if.then, label %if.end, !dbg !23368

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SpaceAction** %saction, metadata !23369, metadata !DIExpression()), !dbg !23371
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23372
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 54, !dbg !23373
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !23373
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %13, i32 0, i32 19, !dbg !23374
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !23375
  %14 = load i8*, i8** %first, align 8, !dbg !23375
  %15 = bitcast i8* %14 to %struct.SpaceAction*, !dbg !23376
  store %struct.SpaceAction* %15, %struct.SpaceAction** %saction, align 8, !dbg !23371
  call void @llvm.dbg.declare(metadata float* %cvalf, metadata !23377, metadata !DIExpression()), !dbg !23378
  %16 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23379
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %16, i32 0, i32 47, !dbg !23380
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !23379
  %17 = load float, float* %arrayidx, align 4, !dbg !23379
  store float %17, float* %cvalf, align 4, !dbg !23378
  %18 = load float, float* %cvalf, align 4, !dbg !23381
  %19 = load %struct.SpaceAction*, %struct.SpaceAction** %saction, align 8, !dbg !23382
  %timeslide = getelementptr inbounds %struct.SpaceAction, %struct.SpaceAction* %19, i32 0, i32 12, !dbg !23383
  store float %18, float* %timeslide, align 4, !dbg !23384
  br label %if.end, !dbg !23385

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !23386
  br label %for.cond, !dbg !23388

for.cond:                                         ; preds = %for.inc, %if.end
  %20 = load i32, i32* %i, align 4, !dbg !23389
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23391
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 9, !dbg !23392
  %22 = load i32, i32* %total, align 8, !dbg !23392
  %cmp3 = icmp slt i32 %20, %22, !dbg !23393
  br i1 %cmp3, label %for.body, label %for.end, !dbg !23394

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !23395, metadata !DIExpression()), !dbg !23397
  %23 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23398
  %spacetype5 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %23, i32 0, i32 33, !dbg !23399
  %24 = load i8, i8* %spacetype5, align 8, !dbg !23399
  %conv6 = zext i8 %24 to i32, !dbg !23398
  %cmp7 = icmp ne i32 %conv6, 13, !dbg !23400
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !23401

cond.true:                                        ; preds = %for.body
  %25 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !23402
  %extra = getelementptr inbounds %struct.TransData, %struct.TransData* %25, i32 0, i32 15, !dbg !23403
  %26 = load i8*, i8** %extra, align 8, !dbg !23403
  br label %cond.end, !dbg !23401

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !23401

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %26, %cond.true ], [ null, %cond.false ], !dbg !23401
  %27 = bitcast i8* %cond to %struct.AnimData*, !dbg !23401
  store %struct.AnimData* %27, %struct.AnimData** %adt, align 8, !dbg !23397
  call void @llvm.dbg.declare(metadata float* %cval, metadata !23404, metadata !DIExpression()), !dbg !23405
  %28 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23406
  %values9 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %28, i32 0, i32 47, !dbg !23407
  %arrayidx10 = getelementptr inbounds [4 x float], [4 x float]* %values9, i64 0, i64 0, !dbg !23406
  %29 = load float, float* %arrayidx10, align 4, !dbg !23406
  store float %29, float* %cval, align 4, !dbg !23405
  %30 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !23408
  %tobool = icmp ne %struct.AnimData* %30, null, !dbg !23408
  br i1 %tobool, label %if.then11, label %if.end12, !dbg !23410

if.then11:                                        ; preds = %cond.end
  %31 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !23411
  %32 = load float, float* %cval, align 4, !dbg !23412
  %call = call float @BKE_nla_tweakedit_remap(%struct.AnimData* %31, float %32, i16 signext 1), !dbg !23413
  store float %call, float* %cval, align 4, !dbg !23414
  br label %if.end12, !dbg !23415

if.end12:                                         ; preds = %if.then11, %cond.end
  %33 = load float, float* %sval.addr, align 4, !dbg !23416
  %34 = load float, float* %minx, align 4, !dbg !23418
  %cmp13 = fcmp ogt float %33, %34, !dbg !23419
  br i1 %cmp13, label %land.lhs.true, label %if.end45, !dbg !23420

land.lhs.true:                                    ; preds = %if.end12
  %35 = load float, float* %sval.addr, align 4, !dbg !23421
  %36 = load float, float* %maxx, align 4, !dbg !23422
  %cmp15 = fcmp olt float %35, %36, !dbg !23423
  br i1 %cmp15, label %if.then17, label %if.end45, !dbg !23424

if.then17:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %cvalc, metadata !23425, metadata !DIExpression()), !dbg !23427
  %37 = load float, float* %cval, align 4, !dbg !23428
  %38 = load float, float* %minx, align 4, !dbg !23428
  %cmp18 = fcmp olt float %37, %38, !dbg !23428
  br i1 %cmp18, label %cond.true20, label %cond.false21, !dbg !23428

cond.true20:                                      ; preds = %if.then17
  %39 = load float, float* %minx, align 4, !dbg !23428
  br label %cond.end28, !dbg !23428

cond.false21:                                     ; preds = %if.then17
  %40 = load float, float* %cval, align 4, !dbg !23428
  %41 = load float, float* %maxx, align 4, !dbg !23428
  %cmp22 = fcmp ogt float %40, %41, !dbg !23428
  br i1 %cmp22, label %cond.true24, label %cond.false25, !dbg !23428

cond.true24:                                      ; preds = %cond.false21
  %42 = load float, float* %maxx, align 4, !dbg !23428
  br label %cond.end26, !dbg !23428

cond.false25:                                     ; preds = %cond.false21
  %43 = load float, float* %cval, align 4, !dbg !23428
  br label %cond.end26, !dbg !23428

cond.end26:                                       ; preds = %cond.false25, %cond.true24
  %cond27 = phi float [ %42, %cond.true24 ], [ %43, %cond.false25 ], !dbg !23428
  br label %cond.end28, !dbg !23428

cond.end28:                                       ; preds = %cond.end26, %cond.true20
  %cond29 = phi float [ %39, %cond.true20 ], [ %cond27, %cond.end26 ], !dbg !23428
  store float %cond29, float* %cvalc, align 4, !dbg !23427
  call void @llvm.dbg.declare(metadata float* %timefac, metadata !23429, metadata !DIExpression()), !dbg !23430
  %44 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !23431
  %ival = getelementptr inbounds %struct.TransData, %struct.TransData* %44, i32 0, i32 6, !dbg !23433
  %45 = load float, float* %ival, align 8, !dbg !23433
  %46 = load float, float* %sval.addr, align 4, !dbg !23434
  %cmp30 = fcmp olt float %45, %46, !dbg !23435
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !23436

if.then32:                                        ; preds = %cond.end28
  %47 = load float, float* %sval.addr, align 4, !dbg !23437
  %48 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !23439
  %ival33 = getelementptr inbounds %struct.TransData, %struct.TransData* %48, i32 0, i32 6, !dbg !23440
  %49 = load float, float* %ival33, align 8, !dbg !23440
  %sub = fsub float %47, %49, !dbg !23441
  %50 = load float, float* %sval.addr, align 4, !dbg !23442
  %51 = load float, float* %minx, align 4, !dbg !23443
  %sub34 = fsub float %50, %51, !dbg !23444
  %div = fdiv float %sub, %sub34, !dbg !23445
  store float %div, float* %timefac, align 4, !dbg !23446
  %52 = load float, float* %cvalc, align 4, !dbg !23447
  %53 = load float, float* %timefac, align 4, !dbg !23448
  %54 = load float, float* %cvalc, align 4, !dbg !23449
  %55 = load float, float* %minx, align 4, !dbg !23450
  %sub35 = fsub float %54, %55, !dbg !23451
  %mul = fmul float %53, %sub35, !dbg !23452
  %sub36 = fsub float %52, %mul, !dbg !23453
  %56 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !23454
  %val = getelementptr inbounds %struct.TransData, %struct.TransData* %56, i32 0, i32 5, !dbg !23455
  %57 = load float*, float** %val, align 8, !dbg !23455
  store float %sub36, float* %57, align 4, !dbg !23456
  br label %if.end44, !dbg !23457

if.else:                                          ; preds = %cond.end28
  %58 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !23458
  %ival37 = getelementptr inbounds %struct.TransData, %struct.TransData* %58, i32 0, i32 6, !dbg !23460
  %59 = load float, float* %ival37, align 8, !dbg !23460
  %60 = load float, float* %sval.addr, align 4, !dbg !23461
  %sub38 = fsub float %59, %60, !dbg !23462
  %61 = load float, float* %maxx, align 4, !dbg !23463
  %62 = load float, float* %sval.addr, align 4, !dbg !23464
  %sub39 = fsub float %61, %62, !dbg !23465
  %div40 = fdiv float %sub38, %sub39, !dbg !23466
  store float %div40, float* %timefac, align 4, !dbg !23467
  %63 = load float, float* %cvalc, align 4, !dbg !23468
  %64 = load float, float* %timefac, align 4, !dbg !23469
  %65 = load float, float* %maxx, align 4, !dbg !23470
  %66 = load float, float* %cvalc, align 4, !dbg !23471
  %sub41 = fsub float %65, %66, !dbg !23472
  %mul42 = fmul float %64, %sub41, !dbg !23473
  %add = fadd float %63, %mul42, !dbg !23474
  %67 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !23475
  %val43 = getelementptr inbounds %struct.TransData, %struct.TransData* %67, i32 0, i32 5, !dbg !23476
  %68 = load float*, float** %val43, align 8, !dbg !23476
  store float %add, float* %68, align 4, !dbg !23477
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then32
  br label %if.end45, !dbg !23478

if.end45:                                         ; preds = %if.end44, %land.lhs.true, %if.end12
  br label %for.inc, !dbg !23479

for.inc:                                          ; preds = %if.end45
  %69 = load i32, i32* %i, align 4, !dbg !23480
  %inc = add nsw i32 %69, 1, !dbg !23480
  store i32 %inc, i32* %i, align 4, !dbg !23480
  %70 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !23481
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %70, i32 1, !dbg !23481
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !23481
  br label %for.cond, !dbg !23482, !llvm.loop !23483

for.end:                                          ; preds = %for.cond
  ret void, !dbg !23485
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyTimeScale(%struct.TransInfo* %t, i32* %UNUSED_mval) #0 !dbg !23486 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %UNUSED_mval.addr = alloca i32*, align 8
  %str = alloca [256 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !23487, metadata !DIExpression()), !dbg !23488
  store i32* %UNUSED_mval, i32** %UNUSED_mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %UNUSED_mval.addr, metadata !23489, metadata !DIExpression()), !dbg !23490
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !23491, metadata !DIExpression()), !dbg !23492
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23493
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 47, !dbg !23494
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !23493
  %1 = load float, float* %arrayidx, align 4, !dbg !23493
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23495
  %vec = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 35, !dbg !23496
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !23495
  store float %1, float* %arrayidx1, align 4, !dbg !23497
  %3 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23498
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %3, i32 0, i32 15, !dbg !23499
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23500
  %vec2 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 35, !dbg !23501
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !23500
  %call = call zeroext i8 @applyNumInput(%struct.NumInput* %num, float* %arrayidx3), !dbg !23502
  %5 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23503
  %vec4 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %5, i32 0, i32 35, !dbg !23504
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %vec4, i64 0, i64 0, !dbg !23503
  %6 = load float, float* %arrayidx5, align 4, !dbg !23503
  %7 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23505
  %values6 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %7, i32 0, i32 47, !dbg !23506
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %values6, i64 0, i64 0, !dbg !23505
  store float %6, float* %arrayidx7, align 4, !dbg !23507
  %8 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23508
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !23509
  call void @headerTimeScale(%struct.TransInfo* %8, i8* %arraydecay), !dbg !23510
  %9 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23511
  call void @applyTimeScaleValue(%struct.TransInfo* %9), !dbg !23512
  %10 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23513
  call void @recalcData(%struct.TransInfo* %10), !dbg !23514
  %11 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23515
  %sa = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %11, i32 0, i32 54, !dbg !23516
  %12 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !23516
  %arraydecay8 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i64 0, i64 0, !dbg !23517
  call void @ED_area_headerprint(%struct.ScrArea* %12, i8* %arraydecay8), !dbg !23518
  ret void, !dbg !23519
}

; Function Attrs: noinline nounwind uwtable
define internal void @headerTimeScale(%struct.TransInfo* %t, i8* %str) #0 !dbg !23520 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %str.addr = alloca i8*, align 8
  %tvec = alloca [192 x i8], align 16
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !23521, metadata !DIExpression()), !dbg !23522
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !23523, metadata !DIExpression()), !dbg !23524
  call void @llvm.dbg.declare(metadata [192 x i8]* %tvec, metadata !23525, metadata !DIExpression()), !dbg !23526
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23527
  %num = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 15, !dbg !23529
  %call = call zeroext i8 @hasNumInput(%struct.NumInput* %num), !dbg !23530
  %tobool = icmp ne i8 %call, 0, !dbg !23530
  br i1 %tobool, label %if.then, label %if.else, !dbg !23531

if.then:                                          ; preds = %entry
  %1 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23532
  %num1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %1, i32 0, i32 15, !dbg !23533
  %arraydecay = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !23534
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23535
  %scene = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 56, !dbg !23536
  %3 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !23536
  %unit = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 38, !dbg !23537
  call void @outputNumInput(%struct.NumInput* %num1, i8* %arraydecay, %struct.UnitSettings* %unit), !dbg !23538
  br label %if.end, !dbg !23538

if.else:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !23539
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23540
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 47, !dbg !23541
  %arrayidx2 = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !23540
  %5 = load float, float* %arrayidx2, align 4, !dbg !23540
  %conv = fpext float %5 to double, !dbg !23540
  %call3 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arrayidx, i64 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), double %conv), !dbg !23542
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i8*, i8** %str.addr, align 8, !dbg !23543
  %arrayidx4 = getelementptr inbounds [192 x i8], [192 x i8]* %tvec, i64 0, i64 0, !dbg !23544
  %call5 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %6, i64 256, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.161, i64 0, i64 0), i8* %arrayidx4), !dbg !23545
  ret void, !dbg !23546
}

; Function Attrs: noinline nounwind uwtable
define internal void @applyTimeScaleValue(%struct.TransInfo* %t) #0 !dbg !23547 {
entry:
  %t.addr = alloca %struct.TransInfo*, align 8
  %scene = alloca %struct.Scene*, align 8
  %td = alloca %struct.TransData*, align 8
  %td2d = alloca %struct.TransData2D*, align 8
  %i = alloca i32, align 4
  %autosnap = alloca i16, align 2
  %secf = alloca double, align 8
  %adt = alloca %struct.AnimData*, align 8
  %startx = alloca float, align 4
  %fac = alloca float, align 4
  store %struct.TransInfo* %t, %struct.TransInfo** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TransInfo** %t.addr, metadata !23548, metadata !DIExpression()), !dbg !23549
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !23550, metadata !DIExpression()), !dbg !23551
  %0 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23552
  %scene1 = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %0, i32 0, i32 56, !dbg !23553
  %1 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !23553
  store %struct.Scene* %1, %struct.Scene** %scene, align 8, !dbg !23551
  call void @llvm.dbg.declare(metadata %struct.TransData** %td, metadata !23554, metadata !DIExpression()), !dbg !23555
  %2 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23556
  %data = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %2, i32 0, i32 10, !dbg !23557
  %3 = load %struct.TransData*, %struct.TransData** %data, align 8, !dbg !23557
  store %struct.TransData* %3, %struct.TransData** %td, align 8, !dbg !23555
  call void @llvm.dbg.declare(metadata %struct.TransData2D** %td2d, metadata !23558, metadata !DIExpression()), !dbg !23559
  %4 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23560
  %data2d = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %4, i32 0, i32 12, !dbg !23561
  %5 = load %struct.TransData2D*, %struct.TransData2D** %data2d, align 8, !dbg !23561
  store %struct.TransData2D* %5, %struct.TransData2D** %td2d, align 8, !dbg !23559
  call void @llvm.dbg.declare(metadata i32* %i, metadata !23562, metadata !DIExpression()), !dbg !23563
  call void @llvm.dbg.declare(metadata i16* %autosnap, metadata !23564, metadata !DIExpression()), !dbg !23565
  %6 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23566
  %call = call signext i16 @getAnimEdit_SnapMode(%struct.TransInfo* %6), !dbg !23567
  store i16 %call, i16* %autosnap, align 2, !dbg !23565
  call void @llvm.dbg.declare(metadata double* %secf, metadata !23568, metadata !DIExpression()), !dbg !23569
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !23570
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 22, !dbg !23570
  %frs_sec = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 55, !dbg !23570
  %8 = load i16, i16* %frs_sec, align 4, !dbg !23570
  %conv = sitofp i16 %8 to double, !dbg !23570
  %9 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !23570
  %r2 = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 22, !dbg !23570
  %frs_sec_base = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r2, i32 0, i32 65, !dbg !23570
  %10 = load float, float* %frs_sec_base, align 4, !dbg !23570
  %conv3 = fpext float %10 to double, !dbg !23570
  %div = fdiv double %conv, %conv3, !dbg !23570
  store double %div, double* %secf, align 8, !dbg !23569
  store i32 0, i32* %i, align 4, !dbg !23571
  br label %for.cond, !dbg !23573

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load i32, i32* %i, align 4, !dbg !23574
  %12 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23576
  %total = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %12, i32 0, i32 9, !dbg !23577
  %13 = load i32, i32* %total, align 8, !dbg !23577
  %cmp = icmp slt i32 %11, %13, !dbg !23578
  br i1 %cmp, label %for.body, label %for.end, !dbg !23579

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !23580, metadata !DIExpression()), !dbg !23582
  %14 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23583
  %spacetype = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %14, i32 0, i32 33, !dbg !23584
  %15 = load i8, i8* %spacetype, align 8, !dbg !23584
  %conv5 = zext i8 %15 to i32, !dbg !23583
  %cmp6 = icmp ne i32 %conv5, 13, !dbg !23585
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !23586

cond.true:                                        ; preds = %for.body
  %16 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !23587
  %extra = getelementptr inbounds %struct.TransData, %struct.TransData* %16, i32 0, i32 15, !dbg !23588
  %17 = load i8*, i8** %extra, align 8, !dbg !23588
  br label %cond.end, !dbg !23586

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !23586

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %17, %cond.true ], [ null, %cond.false ], !dbg !23586
  %18 = bitcast i8* %cond to %struct.AnimData*, !dbg !23586
  store %struct.AnimData* %18, %struct.AnimData** %adt, align 8, !dbg !23582
  call void @llvm.dbg.declare(metadata float* %startx, metadata !23589, metadata !DIExpression()), !dbg !23590
  %19 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !23591
  %r8 = getelementptr inbounds %struct.Scene, %struct.Scene* %19, i32 0, i32 22, !dbg !23591
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r8, i32 0, i32 5, !dbg !23591
  %20 = load i32, i32* %cfra, align 8, !dbg !23591
  %conv9 = sitofp i32 %20 to float, !dbg !23591
  store float %conv9, float* %startx, align 4, !dbg !23590
  call void @llvm.dbg.declare(metadata float* %fac, metadata !23592, metadata !DIExpression()), !dbg !23593
  %21 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23594
  %values = getelementptr inbounds %struct.TransInfo, %struct.TransInfo* %21, i32 0, i32 47, !dbg !23595
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i64 0, i64 0, !dbg !23594
  %22 = load float, float* %arrayidx, align 4, !dbg !23594
  store float %22, float* %fac, align 4, !dbg !23593
  %23 = load i16, i16* %autosnap, align 2, !dbg !23596
  %conv10 = sext i16 %23 to i32, !dbg !23596
  %cmp11 = icmp eq i32 %conv10, 5, !dbg !23598
  br i1 %cmp11, label %if.then, label %if.else, !dbg !23599

if.then:                                          ; preds = %cond.end
  %24 = load float, float* %fac, align 4, !dbg !23600
  %conv13 = fpext float %24 to double, !dbg !23602
  %25 = load double, double* %secf, align 8, !dbg !23603
  %div14 = fdiv double %conv13, %25, !dbg !23604
  %add = fadd double %div14, 5.000000e-01, !dbg !23605
  %26 = call double @llvm.floor.f64(double %add), !dbg !23606
  %27 = load double, double* %secf, align 8, !dbg !23607
  %mul = fmul double %26, %27, !dbg !23608
  %conv15 = fptrunc double %mul to float, !dbg !23609
  store float %conv15, float* %fac, align 4, !dbg !23610
  br label %if.end23, !dbg !23611

if.else:                                          ; preds = %cond.end
  %28 = load i16, i16* %autosnap, align 2, !dbg !23612
  %conv16 = sext i16 %28 to i32, !dbg !23612
  %cmp17 = icmp eq i32 %conv16, 1, !dbg !23614
  br i1 %cmp17, label %if.then19, label %if.end, !dbg !23615

if.then19:                                        ; preds = %if.else
  %29 = load float, float* %fac, align 4, !dbg !23616
  %add20 = fadd float %29, 5.000000e-01, !dbg !23618
  %conv21 = fpext float %add20 to double, !dbg !23616
  %30 = call double @llvm.floor.f64(double %conv21), !dbg !23619
  %conv22 = fptrunc double %30 to float, !dbg !23620
  store float %conv22, float* %fac, align 4, !dbg !23621
  br label %if.end, !dbg !23622

if.end:                                           ; preds = %if.then19, %if.else
  br label %if.end23

if.end23:                                         ; preds = %if.end, %if.then
  %31 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !23623
  %tobool = icmp ne %struct.AnimData* %31, null, !dbg !23623
  br i1 %tobool, label %if.then24, label %if.end26, !dbg !23625

if.then24:                                        ; preds = %if.end23
  %32 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !23626
  %33 = load float, float* %startx, align 4, !dbg !23627
  %call25 = call float @BKE_nla_tweakedit_remap(%struct.AnimData* %32, float %33, i16 signext 1), !dbg !23628
  store float %call25, float* %startx, align 4, !dbg !23629
  br label %if.end26, !dbg !23630

if.end26:                                         ; preds = %if.then24, %if.end23
  %34 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !23631
  %ival = getelementptr inbounds %struct.TransData, %struct.TransData* %34, i32 0, i32 6, !dbg !23632
  %35 = load float, float* %ival, align 8, !dbg !23632
  %36 = load float, float* %startx, align 4, !dbg !23633
  %sub = fsub float %35, %36, !dbg !23634
  %37 = load float, float* %fac, align 4, !dbg !23635
  %mul27 = fmul float %sub, %37, !dbg !23636
  %38 = load float, float* %startx, align 4, !dbg !23637
  %add28 = fadd float %mul27, %38, !dbg !23638
  %39 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !23639
  %val = getelementptr inbounds %struct.TransData, %struct.TransData* %39, i32 0, i32 5, !dbg !23640
  %40 = load float*, float** %val, align 8, !dbg !23640
  store float %add28, float* %40, align 4, !dbg !23641
  %41 = load %struct.TransInfo*, %struct.TransInfo** %t.addr, align 8, !dbg !23642
  %42 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !23643
  %43 = load %struct.TransData2D*, %struct.TransData2D** %td2d, align 8, !dbg !23644
  %44 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !23645
  %45 = load i16, i16* %autosnap, align 2, !dbg !23646
  call void @doAnimEdit_SnapFrame(%struct.TransInfo* %41, %struct.TransData* %42, %struct.TransData2D* %43, %struct.AnimData* %44, i16 signext %45), !dbg !23647
  br label %for.inc, !dbg !23648

for.inc:                                          ; preds = %if.end26
  %46 = load i32, i32* %i, align 4, !dbg !23649
  %inc = add nsw i32 %46, 1, !dbg !23649
  store i32 %inc, i32* %i, align 4, !dbg !23649
  %47 = load %struct.TransData*, %struct.TransData** %td, align 8, !dbg !23650
  %incdec.ptr = getelementptr inbounds %struct.TransData, %struct.TransData* %47, i32 1, !dbg !23650
  store %struct.TransData* %incdec.ptr, %struct.TransData** %td, align 8, !dbg !23650
  %48 = load %struct.TransData2D*, %struct.TransData2D** %td2d, align 8, !dbg !23651
  %incdec.ptr29 = getelementptr inbounds %struct.TransData2D, %struct.TransData2D* %48, i32 1, !dbg !23651
  store %struct.TransData2D* %incdec.ptr29, %struct.TransData2D** %td2d, align 8, !dbg !23651
  br label %for.cond, !dbg !23652, !llvm.loop !23653

for.end:                                          ; preds = %for.cond
  ret void, !dbg !23655
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!52}
!llvm.module.flags = !{!4429, !4430, !4431}
!llvm.ident = !{!4432}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "modal_items", scope: !2, file: !3, line: 814, type: !4418, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "transform_modal_keymap", scope: !3, file: !3, line: 812, type: !4, scopeLine: 813, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!3 = !DIFile(filename: "blender/source/blender/editors/transform/transform.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !40}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !8, line: 281, size: 1088, elements: !9)
!8 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9 = !{!10, !11, !12, !20, !21, !26, !28, !29, !30, !31, !39}
!10 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7, file: !8, line: 282, baseType: !6, size: 64)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7, file: !8, line: 282, baseType: !6, size: 64, offset: 64)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !7, file: !8, line: 284, baseType: !13, size: 128, offset: 128)
!13 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !14, line: 71, baseType: !15)
!14 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!15 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !14, line: 69, size: 128, elements: !16)
!16 = !{!17, !19}
!17 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !15, file: !14, line: 70, baseType: !18, size: 64)
!18 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !15, file: !14, line: 70, baseType: !18, size: 64, offset: 64)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !7, file: !8, line: 285, baseType: !13, size: 128, offset: 256)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !7, file: !8, line: 287, baseType: !22, size: 512, offset: 384)
!22 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 512, elements: !24)
!23 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!24 = !{!25}
!25 = !DISubrange(count: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !7, file: !8, line: 288, baseType: !27, size: 16, offset: 896)
!27 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !7, file: !8, line: 289, baseType: !27, size: 16, offset: 912)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7, file: !8, line: 291, baseType: !27, size: 16, offset: 928)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !7, file: !8, line: 292, baseType: !27, size: 16, offset: 944)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !7, file: !8, line: 295, baseType: !32, size: 64, offset: 960)
!32 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64)
!33 = !DISubroutineType(types: !34)
!34 = !{!35, !36}
!35 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!36 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64)
!37 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !38, line: 44, flags: DIFlagFwdDecl)
!38 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!39 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !7, file: !8, line: 296, baseType: !18, size: 64, offset: 1024)
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyConfig", file: !8, line: 318, baseType: !42)
!42 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyConfig", file: !8, line: 310, size: 1344, elements: !43)
!43 = !{!44, !46, !47, !48, !49, !50, !51}
!44 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !42, file: !8, line: 311, baseType: !45, size: 64)
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !42, file: !8, line: 311, baseType: !45, size: 64, offset: 64)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !42, file: !8, line: 313, baseType: !22, size: 512, offset: 128)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !42, file: !8, line: 314, baseType: !22, size: 512, offset: 640)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "keymaps", scope: !42, file: !8, line: 316, baseType: !13, size: 128, offset: 1152)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "actkeymap", scope: !42, file: !8, line: 317, baseType: !35, size: 32, offset: 1280)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !42, file: !8, line: 317, baseType: !35, size: 32, offset: 1312)
!52 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !53, retainedTypes: !1726, globals: !4416, splitDebugInlining: false, nameTableKind: None)
!53 = !{!54, !61, !86, !97, !105, !113, !148, !169, !370, !384, !392, !400, !411, !417, !423, !431, !438, !455, !465, !661, !671, !1520, !1526, !1531, !1547, !1561, !1568, !1571, !1587, !1620, !1629, !1633, !1640, !1644, !1658, !1668, !1679, !1685, !1694, !1700, !1708, !1714}
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !55, line: 67, baseType: !56, size: 32, elements: !57)
!55 = !DIFile(filename: "blender/source/blender/editors/transform/transform.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!56 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!57 = !{!58, !59, !60}
!58 = !DIEnumerator(name: "TREDRAW_NOTHING", value: 0, isUnsigned: true)
!59 = !DIEnumerator(name: "TREDRAW_HARD", value: 1, isUnsigned: true)
!60 = !DIEnumerator(name: "TREDRAW_SOFT", value: 2, isUnsigned: true)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpace_Type", file: !62, line: 1163, baseType: !56, size: 32, elements: !63)
!62 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!63 = !{!64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85}
!64 = !DIEnumerator(name: "SPACE_EMPTY", value: 0, isUnsigned: true)
!65 = !DIEnumerator(name: "SPACE_VIEW3D", value: 1, isUnsigned: true)
!66 = !DIEnumerator(name: "SPACE_IPO", value: 2, isUnsigned: true)
!67 = !DIEnumerator(name: "SPACE_OUTLINER", value: 3, isUnsigned: true)
!68 = !DIEnumerator(name: "SPACE_BUTS", value: 4, isUnsigned: true)
!69 = !DIEnumerator(name: "SPACE_FILE", value: 5, isUnsigned: true)
!70 = !DIEnumerator(name: "SPACE_IMAGE", value: 6, isUnsigned: true)
!71 = !DIEnumerator(name: "SPACE_INFO", value: 7, isUnsigned: true)
!72 = !DIEnumerator(name: "SPACE_SEQ", value: 8, isUnsigned: true)
!73 = !DIEnumerator(name: "SPACE_TEXT", value: 9, isUnsigned: true)
!74 = !DIEnumerator(name: "SPACE_IMASEL", value: 10, isUnsigned: true)
!75 = !DIEnumerator(name: "SPACE_SOUND", value: 11, isUnsigned: true)
!76 = !DIEnumerator(name: "SPACE_ACTION", value: 12, isUnsigned: true)
!77 = !DIEnumerator(name: "SPACE_NLA", value: 13, isUnsigned: true)
!78 = !DIEnumerator(name: "SPACE_SCRIPT", value: 14, isUnsigned: true)
!79 = !DIEnumerator(name: "SPACE_TIME", value: 15, isUnsigned: true)
!80 = !DIEnumerator(name: "SPACE_NODE", value: 16, isUnsigned: true)
!81 = !DIEnumerator(name: "SPACE_LOGIC", value: 17, isUnsigned: true)
!82 = !DIEnumerator(name: "SPACE_CONSOLE", value: 18, isUnsigned: true)
!83 = !DIEnumerator(name: "SPACE_USERPREF", value: 19, isUnsigned: true)
!84 = !DIEnumerator(name: "SPACE_CLIP", value: 20, isUnsigned: true)
!85 = !DIEnumerator(name: "SPACEICONMAX", value: 20, isUnsigned: true)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !87, line: 361, baseType: !56, size: 32, elements: !88)
!87 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!88 = !{!89, !90, !91, !92, !93, !94, !95, !96}
!89 = !DIEnumerator(name: "RGN_TYPE_WINDOW", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RGN_TYPE_HEADER", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RGN_TYPE_CHANNELS", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RGN_TYPE_TEMPORARY", value: 3, isUnsigned: true)
!93 = !DIEnumerator(name: "RGN_TYPE_UI", value: 4, isUnsigned: true)
!94 = !DIEnumerator(name: "RGN_TYPE_TOOLS", value: 5, isUnsigned: true)
!95 = !DIEnumerator(name: "RGN_TYPE_TOOL_PROPS", value: 6, isUnsigned: true)
!96 = !DIEnumerator(name: "RGN_TYPE_PREVIEW", value: 7, isUnsigned: true)
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 119, baseType: !56, size: 32, elements: !99)
!98 = !DIFile(filename: "blender/source/blender/editors/include/ED_view3d.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!99 = !{!100, !101, !102, !103, !104}
!100 = !DIEnumerator(name: "V3D_PROJ_TEST_NOP", value: 0, isUnsigned: true)
!101 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_BB", value: 1, isUnsigned: true)
!102 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_WIN", value: 2, isUnsigned: true)
!103 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_NEAR", value: 4, isUnsigned: true)
!104 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_ZERO", value: 8, isUnsigned: true)
!105 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 109, baseType: !56, size: 32, elements: !106)
!106 = !{!107, !108, !109, !110, !111, !112}
!107 = !DIEnumerator(name: "V3D_PROJ_RET_OK", value: 0, isUnsigned: true)
!108 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_NEAR", value: 1, isUnsigned: true)
!109 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_ZERO", value: 2, isUnsigned: true)
!110 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_BB", value: 3, isUnsigned: true)
!111 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_WIN", value: 4, isUnsigned: true)
!112 = !DIEnumerator(name: "V3D_PROJ_RET_OVERFLOW", value: 5, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "TfmMode", file: !114, line: 56, baseType: !35, size: 32, elements: !115)
!114 = !DIFile(filename: "blender/source/blender/editors/include/ED_transform.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!115 = !{!116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147}
!116 = !DIEnumerator(name: "TFM_INIT", value: -1)
!117 = !DIEnumerator(name: "TFM_DUMMY", value: 0)
!118 = !DIEnumerator(name: "TFM_TRANSLATION", value: 1)
!119 = !DIEnumerator(name: "TFM_ROTATION", value: 2)
!120 = !DIEnumerator(name: "TFM_RESIZE", value: 3)
!121 = !DIEnumerator(name: "TFM_SKIN_RESIZE", value: 4)
!122 = !DIEnumerator(name: "TFM_TOSPHERE", value: 5)
!123 = !DIEnumerator(name: "TFM_SHEAR", value: 6)
!124 = !DIEnumerator(name: "TFM_BEND", value: 7)
!125 = !DIEnumerator(name: "TFM_SHRINKFATTEN", value: 8)
!126 = !DIEnumerator(name: "TFM_TILT", value: 9)
!127 = !DIEnumerator(name: "TFM_TRACKBALL", value: 10)
!128 = !DIEnumerator(name: "TFM_PUSHPULL", value: 11)
!129 = !DIEnumerator(name: "TFM_CREASE", value: 12)
!130 = !DIEnumerator(name: "TFM_MIRROR", value: 13)
!131 = !DIEnumerator(name: "TFM_BONESIZE", value: 14)
!132 = !DIEnumerator(name: "TFM_BONE_ENVELOPE", value: 15)
!133 = !DIEnumerator(name: "TFM_CURVE_SHRINKFATTEN", value: 16)
!134 = !DIEnumerator(name: "TFM_MASK_SHRINKFATTEN", value: 17)
!135 = !DIEnumerator(name: "TFM_BONE_ROLL", value: 18)
!136 = !DIEnumerator(name: "TFM_TIME_TRANSLATE", value: 19)
!137 = !DIEnumerator(name: "TFM_TIME_SLIDE", value: 20)
!138 = !DIEnumerator(name: "TFM_TIME_SCALE", value: 21)
!139 = !DIEnumerator(name: "TFM_TIME_EXTEND", value: 22)
!140 = !DIEnumerator(name: "TFM_TIME_DUPLICATE", value: 23)
!141 = !DIEnumerator(name: "TFM_BAKE_TIME", value: 24)
!142 = !DIEnumerator(name: "TFM_DEPRECATED", value: 25)
!143 = !DIEnumerator(name: "TFM_BWEIGHT", value: 26)
!144 = !DIEnumerator(name: "TFM_ALIGN", value: 27)
!145 = !DIEnumerator(name: "TFM_EDGE_SLIDE", value: 28)
!146 = !DIEnumerator(name: "TFM_VERT_SLIDE", value: 29)
!147 = !DIEnumerator(name: "TFM_SEQ_SLIDE", value: 30)
!148 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpaceImage_Flag", file: !62, line: 777, baseType: !56, size: 32, elements: !149)
!149 = !{!150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168}
!150 = !DIEnumerator(name: "SI_EDITTILE", value: 2, isUnsigned: true)
!151 = !DIEnumerator(name: "SI_CLIP_UV", value: 4, isUnsigned: true)
!152 = !DIEnumerator(name: "SI_NO_DRAWFACES", value: 16, isUnsigned: true)
!153 = !DIEnumerator(name: "SI_DRAWSHADOW", value: 32, isUnsigned: true)
!154 = !DIEnumerator(name: "SI_COORDFLOATS", value: 512, isUnsigned: true)
!155 = !DIEnumerator(name: "SI_PIXELSNAP", value: 1024, isUnsigned: true)
!156 = !DIEnumerator(name: "SI_LIVE_UNWRAP", value: 2048, isUnsigned: true)
!157 = !DIEnumerator(name: "SI_USE_ALPHA", value: 4096, isUnsigned: true)
!158 = !DIEnumerator(name: "SI_SHOW_ALPHA", value: 8192, isUnsigned: true)
!159 = !DIEnumerator(name: "SI_SHOW_ZBUF", value: 16384, isUnsigned: true)
!160 = !DIEnumerator(name: "SI_PREVSPACE", value: 32768, isUnsigned: true)
!161 = !DIEnumerator(name: "SI_FULLWINDOW", value: 65536, isUnsigned: true)
!162 = !DIEnumerator(name: "SI_DRAW_TILE", value: 524288, isUnsigned: true)
!163 = !DIEnumerator(name: "SI_SMOOTH_UV", value: 1048576, isUnsigned: true)
!164 = !DIEnumerator(name: "SI_DRAW_STRETCH", value: 2097152, isUnsigned: true)
!165 = !DIEnumerator(name: "SI_SHOW_GPENCIL", value: 4194304, isUnsigned: true)
!166 = !DIEnumerator(name: "SI_DRAW_OTHER", value: 8388608, isUnsigned: true)
!167 = !DIEnumerator(name: "SI_COLOR_CORRECTION", value: 16777216, isUnsigned: true)
!168 = !DIEnumerator(name: "SI_NO_DRAW_TEXPAINT", value: 33554432, isUnsigned: true)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !170, line: 54, baseType: !56, size: 32, elements: !171)
!170 = !DIFile(filename: "blender/source/blender/windowmanager/wm_event_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!171 = !{!172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369}
!172 = !DIEnumerator(name: "EVENT_NONE", value: 0, isUnsigned: true)
!173 = !DIEnumerator(name: "LEFTMOUSE", value: 1, isUnsigned: true)
!174 = !DIEnumerator(name: "MIDDLEMOUSE", value: 2, isUnsigned: true)
!175 = !DIEnumerator(name: "RIGHTMOUSE", value: 3, isUnsigned: true)
!176 = !DIEnumerator(name: "MOUSEMOVE", value: 4, isUnsigned: true)
!177 = !DIEnumerator(name: "ACTIONMOUSE", value: 5, isUnsigned: true)
!178 = !DIEnumerator(name: "SELECTMOUSE", value: 6, isUnsigned: true)
!179 = !DIEnumerator(name: "BUTTON4MOUSE", value: 7, isUnsigned: true)
!180 = !DIEnumerator(name: "BUTTON5MOUSE", value: 8, isUnsigned: true)
!181 = !DIEnumerator(name: "BUTTON6MOUSE", value: 18, isUnsigned: true)
!182 = !DIEnumerator(name: "BUTTON7MOUSE", value: 19, isUnsigned: true)
!183 = !DIEnumerator(name: "MOUSEPAN", value: 14, isUnsigned: true)
!184 = !DIEnumerator(name: "MOUSEZOOM", value: 15, isUnsigned: true)
!185 = !DIEnumerator(name: "MOUSEROTATE", value: 16, isUnsigned: true)
!186 = !DIEnumerator(name: "WHEELUPMOUSE", value: 10, isUnsigned: true)
!187 = !DIEnumerator(name: "WHEELDOWNMOUSE", value: 11, isUnsigned: true)
!188 = !DIEnumerator(name: "WHEELINMOUSE", value: 12, isUnsigned: true)
!189 = !DIEnumerator(name: "WHEELOUTMOUSE", value: 13, isUnsigned: true)
!190 = !DIEnumerator(name: "INBETWEEN_MOUSEMOVE", value: 17, isUnsigned: true)
!191 = !DIEnumerator(name: "AKEY", value: 97, isUnsigned: true)
!192 = !DIEnumerator(name: "BKEY", value: 98, isUnsigned: true)
!193 = !DIEnumerator(name: "CKEY", value: 99, isUnsigned: true)
!194 = !DIEnumerator(name: "DKEY", value: 100, isUnsigned: true)
!195 = !DIEnumerator(name: "EKEY", value: 101, isUnsigned: true)
!196 = !DIEnumerator(name: "FKEY", value: 102, isUnsigned: true)
!197 = !DIEnumerator(name: "GKEY", value: 103, isUnsigned: true)
!198 = !DIEnumerator(name: "HKEY", value: 104, isUnsigned: true)
!199 = !DIEnumerator(name: "IKEY", value: 105, isUnsigned: true)
!200 = !DIEnumerator(name: "JKEY", value: 106, isUnsigned: true)
!201 = !DIEnumerator(name: "KKEY", value: 107, isUnsigned: true)
!202 = !DIEnumerator(name: "LKEY", value: 108, isUnsigned: true)
!203 = !DIEnumerator(name: "MKEY", value: 109, isUnsigned: true)
!204 = !DIEnumerator(name: "NKEY", value: 110, isUnsigned: true)
!205 = !DIEnumerator(name: "OKEY", value: 111, isUnsigned: true)
!206 = !DIEnumerator(name: "PKEY", value: 112, isUnsigned: true)
!207 = !DIEnumerator(name: "QKEY", value: 113, isUnsigned: true)
!208 = !DIEnumerator(name: "RKEY", value: 114, isUnsigned: true)
!209 = !DIEnumerator(name: "SKEY", value: 115, isUnsigned: true)
!210 = !DIEnumerator(name: "TKEY", value: 116, isUnsigned: true)
!211 = !DIEnumerator(name: "UKEY", value: 117, isUnsigned: true)
!212 = !DIEnumerator(name: "VKEY", value: 118, isUnsigned: true)
!213 = !DIEnumerator(name: "WKEY", value: 119, isUnsigned: true)
!214 = !DIEnumerator(name: "XKEY", value: 120, isUnsigned: true)
!215 = !DIEnumerator(name: "YKEY", value: 121, isUnsigned: true)
!216 = !DIEnumerator(name: "ZKEY", value: 122, isUnsigned: true)
!217 = !DIEnumerator(name: "ZEROKEY", value: 48, isUnsigned: true)
!218 = !DIEnumerator(name: "ONEKEY", value: 49, isUnsigned: true)
!219 = !DIEnumerator(name: "TWOKEY", value: 50, isUnsigned: true)
!220 = !DIEnumerator(name: "THREEKEY", value: 51, isUnsigned: true)
!221 = !DIEnumerator(name: "FOURKEY", value: 52, isUnsigned: true)
!222 = !DIEnumerator(name: "FIVEKEY", value: 53, isUnsigned: true)
!223 = !DIEnumerator(name: "SIXKEY", value: 54, isUnsigned: true)
!224 = !DIEnumerator(name: "SEVENKEY", value: 55, isUnsigned: true)
!225 = !DIEnumerator(name: "EIGHTKEY", value: 56, isUnsigned: true)
!226 = !DIEnumerator(name: "NINEKEY", value: 57, isUnsigned: true)
!227 = !DIEnumerator(name: "CAPSLOCKKEY", value: 211, isUnsigned: true)
!228 = !DIEnumerator(name: "LEFTCTRLKEY", value: 212, isUnsigned: true)
!229 = !DIEnumerator(name: "LEFTALTKEY", value: 213, isUnsigned: true)
!230 = !DIEnumerator(name: "RIGHTALTKEY", value: 214, isUnsigned: true)
!231 = !DIEnumerator(name: "RIGHTCTRLKEY", value: 215, isUnsigned: true)
!232 = !DIEnumerator(name: "RIGHTSHIFTKEY", value: 216, isUnsigned: true)
!233 = !DIEnumerator(name: "LEFTSHIFTKEY", value: 217, isUnsigned: true)
!234 = !DIEnumerator(name: "ESCKEY", value: 218, isUnsigned: true)
!235 = !DIEnumerator(name: "TABKEY", value: 219, isUnsigned: true)
!236 = !DIEnumerator(name: "RETKEY", value: 220, isUnsigned: true)
!237 = !DIEnumerator(name: "SPACEKEY", value: 221, isUnsigned: true)
!238 = !DIEnumerator(name: "LINEFEEDKEY", value: 222, isUnsigned: true)
!239 = !DIEnumerator(name: "BACKSPACEKEY", value: 223, isUnsigned: true)
!240 = !DIEnumerator(name: "DELKEY", value: 224, isUnsigned: true)
!241 = !DIEnumerator(name: "SEMICOLONKEY", value: 225, isUnsigned: true)
!242 = !DIEnumerator(name: "PERIODKEY", value: 226, isUnsigned: true)
!243 = !DIEnumerator(name: "COMMAKEY", value: 227, isUnsigned: true)
!244 = !DIEnumerator(name: "QUOTEKEY", value: 228, isUnsigned: true)
!245 = !DIEnumerator(name: "ACCENTGRAVEKEY", value: 229, isUnsigned: true)
!246 = !DIEnumerator(name: "MINUSKEY", value: 230, isUnsigned: true)
!247 = !DIEnumerator(name: "SLASHKEY", value: 232, isUnsigned: true)
!248 = !DIEnumerator(name: "BACKSLASHKEY", value: 233, isUnsigned: true)
!249 = !DIEnumerator(name: "EQUALKEY", value: 234, isUnsigned: true)
!250 = !DIEnumerator(name: "LEFTBRACKETKEY", value: 235, isUnsigned: true)
!251 = !DIEnumerator(name: "RIGHTBRACKETKEY", value: 236, isUnsigned: true)
!252 = !DIEnumerator(name: "LEFTARROWKEY", value: 137, isUnsigned: true)
!253 = !DIEnumerator(name: "DOWNARROWKEY", value: 138, isUnsigned: true)
!254 = !DIEnumerator(name: "RIGHTARROWKEY", value: 139, isUnsigned: true)
!255 = !DIEnumerator(name: "UPARROWKEY", value: 140, isUnsigned: true)
!256 = !DIEnumerator(name: "PAD0", value: 150, isUnsigned: true)
!257 = !DIEnumerator(name: "PAD1", value: 151, isUnsigned: true)
!258 = !DIEnumerator(name: "PAD2", value: 152, isUnsigned: true)
!259 = !DIEnumerator(name: "PAD3", value: 153, isUnsigned: true)
!260 = !DIEnumerator(name: "PAD4", value: 154, isUnsigned: true)
!261 = !DIEnumerator(name: "PAD5", value: 155, isUnsigned: true)
!262 = !DIEnumerator(name: "PAD6", value: 156, isUnsigned: true)
!263 = !DIEnumerator(name: "PAD7", value: 157, isUnsigned: true)
!264 = !DIEnumerator(name: "PAD8", value: 158, isUnsigned: true)
!265 = !DIEnumerator(name: "PAD9", value: 159, isUnsigned: true)
!266 = !DIEnumerator(name: "PADPERIOD", value: 199, isUnsigned: true)
!267 = !DIEnumerator(name: "PADASTERKEY", value: 160, isUnsigned: true)
!268 = !DIEnumerator(name: "PADSLASHKEY", value: 161, isUnsigned: true)
!269 = !DIEnumerator(name: "PADMINUS", value: 162, isUnsigned: true)
!270 = !DIEnumerator(name: "PADENTER", value: 163, isUnsigned: true)
!271 = !DIEnumerator(name: "PADPLUSKEY", value: 164, isUnsigned: true)
!272 = !DIEnumerator(name: "PAUSEKEY", value: 165, isUnsigned: true)
!273 = !DIEnumerator(name: "INSERTKEY", value: 166, isUnsigned: true)
!274 = !DIEnumerator(name: "HOMEKEY", value: 167, isUnsigned: true)
!275 = !DIEnumerator(name: "PAGEUPKEY", value: 168, isUnsigned: true)
!276 = !DIEnumerator(name: "PAGEDOWNKEY", value: 169, isUnsigned: true)
!277 = !DIEnumerator(name: "ENDKEY", value: 170, isUnsigned: true)
!278 = !DIEnumerator(name: "UNKNOWNKEY", value: 171, isUnsigned: true)
!279 = !DIEnumerator(name: "OSKEY", value: 172, isUnsigned: true)
!280 = !DIEnumerator(name: "GRLESSKEY", value: 173, isUnsigned: true)
!281 = !DIEnumerator(name: "MEDIAPLAY", value: 174, isUnsigned: true)
!282 = !DIEnumerator(name: "MEDIASTOP", value: 175, isUnsigned: true)
!283 = !DIEnumerator(name: "MEDIAFIRST", value: 176, isUnsigned: true)
!284 = !DIEnumerator(name: "MEDIALAST", value: 177, isUnsigned: true)
!285 = !DIEnumerator(name: "F1KEY", value: 300, isUnsigned: true)
!286 = !DIEnumerator(name: "F2KEY", value: 301, isUnsigned: true)
!287 = !DIEnumerator(name: "F3KEY", value: 302, isUnsigned: true)
!288 = !DIEnumerator(name: "F4KEY", value: 303, isUnsigned: true)
!289 = !DIEnumerator(name: "F5KEY", value: 304, isUnsigned: true)
!290 = !DIEnumerator(name: "F6KEY", value: 305, isUnsigned: true)
!291 = !DIEnumerator(name: "F7KEY", value: 306, isUnsigned: true)
!292 = !DIEnumerator(name: "F8KEY", value: 307, isUnsigned: true)
!293 = !DIEnumerator(name: "F9KEY", value: 308, isUnsigned: true)
!294 = !DIEnumerator(name: "F10KEY", value: 309, isUnsigned: true)
!295 = !DIEnumerator(name: "F11KEY", value: 310, isUnsigned: true)
!296 = !DIEnumerator(name: "F12KEY", value: 311, isUnsigned: true)
!297 = !DIEnumerator(name: "F13KEY", value: 312, isUnsigned: true)
!298 = !DIEnumerator(name: "F14KEY", value: 313, isUnsigned: true)
!299 = !DIEnumerator(name: "F15KEY", value: 314, isUnsigned: true)
!300 = !DIEnumerator(name: "F16KEY", value: 315, isUnsigned: true)
!301 = !DIEnumerator(name: "F17KEY", value: 316, isUnsigned: true)
!302 = !DIEnumerator(name: "F18KEY", value: 317, isUnsigned: true)
!303 = !DIEnumerator(name: "F19KEY", value: 318, isUnsigned: true)
!304 = !DIEnumerator(name: "NDOF_MOTION", value: 400, isUnsigned: true)
!305 = !DIEnumerator(name: "NDOF_BUTTON_NONE", value: 400, isUnsigned: true)
!306 = !DIEnumerator(name: "NDOF_BUTTON_MENU", value: 401, isUnsigned: true)
!307 = !DIEnumerator(name: "NDOF_BUTTON_FIT", value: 402, isUnsigned: true)
!308 = !DIEnumerator(name: "NDOF_BUTTON_TOP", value: 403, isUnsigned: true)
!309 = !DIEnumerator(name: "NDOF_BUTTON_BOTTOM", value: 404, isUnsigned: true)
!310 = !DIEnumerator(name: "NDOF_BUTTON_LEFT", value: 405, isUnsigned: true)
!311 = !DIEnumerator(name: "NDOF_BUTTON_RIGHT", value: 406, isUnsigned: true)
!312 = !DIEnumerator(name: "NDOF_BUTTON_FRONT", value: 407, isUnsigned: true)
!313 = !DIEnumerator(name: "NDOF_BUTTON_BACK", value: 408, isUnsigned: true)
!314 = !DIEnumerator(name: "NDOF_BUTTON_ISO1", value: 409, isUnsigned: true)
!315 = !DIEnumerator(name: "NDOF_BUTTON_ISO2", value: 410, isUnsigned: true)
!316 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CW", value: 411, isUnsigned: true)
!317 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CCW", value: 412, isUnsigned: true)
!318 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CW", value: 413, isUnsigned: true)
!319 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CCW", value: 414, isUnsigned: true)
!320 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CW", value: 415, isUnsigned: true)
!321 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CCW", value: 416, isUnsigned: true)
!322 = !DIEnumerator(name: "NDOF_BUTTON_ROTATE", value: 417, isUnsigned: true)
!323 = !DIEnumerator(name: "NDOF_BUTTON_PANZOOM", value: 418, isUnsigned: true)
!324 = !DIEnumerator(name: "NDOF_BUTTON_DOMINANT", value: 419, isUnsigned: true)
!325 = !DIEnumerator(name: "NDOF_BUTTON_PLUS", value: 420, isUnsigned: true)
!326 = !DIEnumerator(name: "NDOF_BUTTON_MINUS", value: 421, isUnsigned: true)
!327 = !DIEnumerator(name: "NDOF_BUTTON_ESC", value: 422, isUnsigned: true)
!328 = !DIEnumerator(name: "NDOF_BUTTON_ALT", value: 423, isUnsigned: true)
!329 = !DIEnumerator(name: "NDOF_BUTTON_SHIFT", value: 424, isUnsigned: true)
!330 = !DIEnumerator(name: "NDOF_BUTTON_CTRL", value: 425, isUnsigned: true)
!331 = !DIEnumerator(name: "NDOF_BUTTON_1", value: 426, isUnsigned: true)
!332 = !DIEnumerator(name: "NDOF_BUTTON_2", value: 427, isUnsigned: true)
!333 = !DIEnumerator(name: "NDOF_BUTTON_3", value: 428, isUnsigned: true)
!334 = !DIEnumerator(name: "NDOF_BUTTON_4", value: 429, isUnsigned: true)
!335 = !DIEnumerator(name: "NDOF_BUTTON_5", value: 430, isUnsigned: true)
!336 = !DIEnumerator(name: "NDOF_BUTTON_6", value: 431, isUnsigned: true)
!337 = !DIEnumerator(name: "NDOF_BUTTON_7", value: 432, isUnsigned: true)
!338 = !DIEnumerator(name: "NDOF_BUTTON_8", value: 433, isUnsigned: true)
!339 = !DIEnumerator(name: "NDOF_BUTTON_9", value: 434, isUnsigned: true)
!340 = !DIEnumerator(name: "NDOF_BUTTON_10", value: 435, isUnsigned: true)
!341 = !DIEnumerator(name: "NDOF_BUTTON_A", value: 436, isUnsigned: true)
!342 = !DIEnumerator(name: "NDOF_BUTTON_B", value: 437, isUnsigned: true)
!343 = !DIEnumerator(name: "NDOF_BUTTON_C", value: 438, isUnsigned: true)
!344 = !DIEnumerator(name: "NDOF_LAST", value: 439, isUnsigned: true)
!345 = !DIEnumerator(name: "INPUTCHANGE", value: 259, isUnsigned: true)
!346 = !DIEnumerator(name: "WINDEACTIVATE", value: 260, isUnsigned: true)
!347 = !DIEnumerator(name: "TIMER", value: 272, isUnsigned: true)
!348 = !DIEnumerator(name: "TIMER0", value: 273, isUnsigned: true)
!349 = !DIEnumerator(name: "TIMER1", value: 274, isUnsigned: true)
!350 = !DIEnumerator(name: "TIMER2", value: 275, isUnsigned: true)
!351 = !DIEnumerator(name: "TIMERJOBS", value: 276, isUnsigned: true)
!352 = !DIEnumerator(name: "TIMERAUTOSAVE", value: 277, isUnsigned: true)
!353 = !DIEnumerator(name: "TIMERREPORT", value: 278, isUnsigned: true)
!354 = !DIEnumerator(name: "TIMERREGION", value: 279, isUnsigned: true)
!355 = !DIEnumerator(name: "TIMERF", value: 287, isUnsigned: true)
!356 = !DIEnumerator(name: "EVT_ACTIONZONE_AREA", value: 20480, isUnsigned: true)
!357 = !DIEnumerator(name: "EVT_ACTIONZONE_REGION", value: 20481, isUnsigned: true)
!358 = !DIEnumerator(name: "EVT_ACTIONZONE_FULLSCREEN", value: 20482, isUnsigned: true)
!359 = !DIEnumerator(name: "EVT_TWEAK_L", value: 20483, isUnsigned: true)
!360 = !DIEnumerator(name: "EVT_TWEAK_M", value: 20484, isUnsigned: true)
!361 = !DIEnumerator(name: "EVT_TWEAK_R", value: 20485, isUnsigned: true)
!362 = !DIEnumerator(name: "EVT_TWEAK_A", value: 20486, isUnsigned: true)
!363 = !DIEnumerator(name: "EVT_TWEAK_S", value: 20487, isUnsigned: true)
!364 = !DIEnumerator(name: "EVT_GESTURE", value: 20496, isUnsigned: true)
!365 = !DIEnumerator(name: "EVT_FILESELECT", value: 20512, isUnsigned: true)
!366 = !DIEnumerator(name: "EVT_BUT_OPEN", value: 20513, isUnsigned: true)
!367 = !DIEnumerator(name: "EVT_MODAL_MAP", value: 20514, isUnsigned: true)
!368 = !DIEnumerator(name: "EVT_DROP", value: 20515, isUnsigned: true)
!369 = !DIEnumerator(name: "EVT_BUT_CANCEL", value: 20516, isUnsigned: true)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !371, line: 339, baseType: !56, size: 32, elements: !372)
!371 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!372 = !{!373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383}
!373 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!374 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!375 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!376 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!377 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!378 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!379 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!380 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!381 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!382 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!383 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !8, line: 351, baseType: !56, size: 32, elements: !385)
!385 = !{!386, !387, !388, !389, !390, !391}
!386 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!387 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!388 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!389 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!390 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!391 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!392 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eArmature_Drawtype", file: !393, line: 137, baseType: !56, size: 32, elements: !394)
!393 = !DIFile(filename: "blender/source/blender/makesdna/DNA_armature_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!394 = !{!395, !396, !397, !398, !399}
!395 = !DIEnumerator(name: "ARM_OCTA", value: 0, isUnsigned: true)
!396 = !DIEnumerator(name: "ARM_LINE", value: 1, isUnsigned: true)
!397 = !DIEnumerator(name: "ARM_B_BONE", value: 2, isUnsigned: true)
!398 = !DIEnumerator(name: "ARM_ENVELOPE", value: 3, isUnsigned: true)
!399 = !DIEnumerator(name: "ARM_WIRE", value: 4, isUnsigned: true)
!400 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !401, line: 94, baseType: !56, size: 32, elements: !402)
!401 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!402 = !{!403, !404, !405, !406, !407, !408, !409, !410}
!403 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!404 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!405 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!406 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!407 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!408 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!409 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!410 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!411 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !401, line: 116, baseType: !56, size: 32, elements: !412)
!412 = !{!413, !414, !415, !416}
!413 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!414 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!415 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!416 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!417 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !401, line: 131, baseType: !56, size: 32, elements: !418)
!418 = !{!419, !420, !421, !422}
!419 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!420 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!421 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!422 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!423 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !401, line: 123, baseType: !56, size: 32, elements: !424)
!424 = !{!425, !426, !427, !428, !429, !430}
!425 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!426 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!427 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!428 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!429 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!430 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!431 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 182, baseType: !56, size: 32, elements: !432)
!432 = !{!433, !434, !435, !436, !437}
!433 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!434 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!435 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!436 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!437 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!438 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BMIterType", file: !439, line: 57, baseType: !56, size: 32, elements: !440)
!439 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!440 = !{!441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454}
!441 = !DIEnumerator(name: "BM_VERTS_OF_MESH", value: 1, isUnsigned: true)
!442 = !DIEnumerator(name: "BM_EDGES_OF_MESH", value: 2, isUnsigned: true)
!443 = !DIEnumerator(name: "BM_FACES_OF_MESH", value: 3, isUnsigned: true)
!444 = !DIEnumerator(name: "BM_EDGES_OF_VERT", value: 4, isUnsigned: true)
!445 = !DIEnumerator(name: "BM_FACES_OF_VERT", value: 5, isUnsigned: true)
!446 = !DIEnumerator(name: "BM_LOOPS_OF_VERT", value: 6, isUnsigned: true)
!447 = !DIEnumerator(name: "BM_VERTS_OF_EDGE", value: 7, isUnsigned: true)
!448 = !DIEnumerator(name: "BM_FACES_OF_EDGE", value: 8, isUnsigned: true)
!449 = !DIEnumerator(name: "BM_VERTS_OF_FACE", value: 9, isUnsigned: true)
!450 = !DIEnumerator(name: "BM_EDGES_OF_FACE", value: 10, isUnsigned: true)
!451 = !DIEnumerator(name: "BM_LOOPS_OF_FACE", value: 11, isUnsigned: true)
!452 = !DIEnumerator(name: "BM_ALL_LOOPS_OF_FACE", value: 12, isUnsigned: true)
!453 = !DIEnumerator(name: "BM_LOOPS_OF_LOOP", value: 13, isUnsigned: true)
!454 = !DIEnumerator(name: "BM_LOOPS_OF_EDGE", value: 14, isUnsigned: true)
!455 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !456, line: 260, baseType: !56, size: 32, elements: !457)
!456 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!457 = !{!458, !459, !460, !461, !462, !463, !464}
!458 = !DIEnumerator(name: "BM_ELEM_SELECT", value: 1, isUnsigned: true)
!459 = !DIEnumerator(name: "BM_ELEM_HIDDEN", value: 2, isUnsigned: true)
!460 = !DIEnumerator(name: "BM_ELEM_SEAM", value: 4, isUnsigned: true)
!461 = !DIEnumerator(name: "BM_ELEM_SMOOTH", value: 8, isUnsigned: true)
!462 = !DIEnumerator(name: "BM_ELEM_TAG", value: 16, isUnsigned: true)
!463 = !DIEnumerator(name: "BM_ELEM_DRAW", value: 32, isUnsigned: true)
!464 = !DIEnumerator(name: "BM_ELEM_INTERNAL_TAG", value: 128, isUnsigned: true)
!465 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !466, line: 54, baseType: !56, size: 32, elements: !467)
!466 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!467 = !{!468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660}
!468 = !DIEnumerator(name: "TH_REDALERT", value: 0, isUnsigned: true)
!469 = !DIEnumerator(name: "TH_THEMEUI", value: 1, isUnsigned: true)
!470 = !DIEnumerator(name: "TH_BACK", value: 2, isUnsigned: true)
!471 = !DIEnumerator(name: "TH_TEXT", value: 3, isUnsigned: true)
!472 = !DIEnumerator(name: "TH_TEXT_HI", value: 4, isUnsigned: true)
!473 = !DIEnumerator(name: "TH_TITLE", value: 5, isUnsigned: true)
!474 = !DIEnumerator(name: "TH_TAB_ACTIVE", value: 6, isUnsigned: true)
!475 = !DIEnumerator(name: "TH_TAB_INACTIVE", value: 7, isUnsigned: true)
!476 = !DIEnumerator(name: "TH_TAB_BACK", value: 8, isUnsigned: true)
!477 = !DIEnumerator(name: "TH_TAB_OUTLINE", value: 9, isUnsigned: true)
!478 = !DIEnumerator(name: "TH_HEADER", value: 10, isUnsigned: true)
!479 = !DIEnumerator(name: "TH_HEADERDESEL", value: 11, isUnsigned: true)
!480 = !DIEnumerator(name: "TH_HEADER_TEXT", value: 12, isUnsigned: true)
!481 = !DIEnumerator(name: "TH_HEADER_TEXT_HI", value: 13, isUnsigned: true)
!482 = !DIEnumerator(name: "TH_PANEL_HEADER", value: 14, isUnsigned: true)
!483 = !DIEnumerator(name: "TH_PANEL_BACK", value: 15, isUnsigned: true)
!484 = !DIEnumerator(name: "TH_PANEL_SHOW_HEADER", value: 16, isUnsigned: true)
!485 = !DIEnumerator(name: "TH_PANEL_SHOW_BACK", value: 17, isUnsigned: true)
!486 = !DIEnumerator(name: "TH_BUTBACK", value: 18, isUnsigned: true)
!487 = !DIEnumerator(name: "TH_BUTBACK_TEXT", value: 19, isUnsigned: true)
!488 = !DIEnumerator(name: "TH_BUTBACK_TEXT_HI", value: 20, isUnsigned: true)
!489 = !DIEnumerator(name: "TH_SHADE1", value: 21, isUnsigned: true)
!490 = !DIEnumerator(name: "TH_SHADE2", value: 22, isUnsigned: true)
!491 = !DIEnumerator(name: "TH_HILITE", value: 23, isUnsigned: true)
!492 = !DIEnumerator(name: "TH_GRID", value: 24, isUnsigned: true)
!493 = !DIEnumerator(name: "TH_WIRE", value: 25, isUnsigned: true)
!494 = !DIEnumerator(name: "TH_WIRE_INNER", value: 26, isUnsigned: true)
!495 = !DIEnumerator(name: "TH_WIRE_EDIT", value: 27, isUnsigned: true)
!496 = !DIEnumerator(name: "TH_SELECT", value: 28, isUnsigned: true)
!497 = !DIEnumerator(name: "TH_ACTIVE", value: 29, isUnsigned: true)
!498 = !DIEnumerator(name: "TH_GROUP", value: 30, isUnsigned: true)
!499 = !DIEnumerator(name: "TH_GROUP_ACTIVE", value: 31, isUnsigned: true)
!500 = !DIEnumerator(name: "TH_TRANSFORM", value: 32, isUnsigned: true)
!501 = !DIEnumerator(name: "TH_VERTEX", value: 33, isUnsigned: true)
!502 = !DIEnumerator(name: "TH_VERTEX_SELECT", value: 34, isUnsigned: true)
!503 = !DIEnumerator(name: "TH_VERTEX_UNREFERENCED", value: 35, isUnsigned: true)
!504 = !DIEnumerator(name: "TH_VERTEX_SIZE", value: 36, isUnsigned: true)
!505 = !DIEnumerator(name: "TH_OUTLINE_WIDTH", value: 37, isUnsigned: true)
!506 = !DIEnumerator(name: "TH_EDGE", value: 38, isUnsigned: true)
!507 = !DIEnumerator(name: "TH_EDGE_SELECT", value: 39, isUnsigned: true)
!508 = !DIEnumerator(name: "TH_EDGE_SEAM", value: 40, isUnsigned: true)
!509 = !DIEnumerator(name: "TH_EDGE_FACESEL", value: 41, isUnsigned: true)
!510 = !DIEnumerator(name: "TH_FACE", value: 42, isUnsigned: true)
!511 = !DIEnumerator(name: "TH_FACE_SELECT", value: 43, isUnsigned: true)
!512 = !DIEnumerator(name: "TH_NORMAL", value: 44, isUnsigned: true)
!513 = !DIEnumerator(name: "TH_VNORMAL", value: 45, isUnsigned: true)
!514 = !DIEnumerator(name: "TH_LNORMAL", value: 46, isUnsigned: true)
!515 = !DIEnumerator(name: "TH_FACE_DOT", value: 47, isUnsigned: true)
!516 = !DIEnumerator(name: "TH_FACEDOT_SIZE", value: 48, isUnsigned: true)
!517 = !DIEnumerator(name: "TH_CFRAME", value: 49, isUnsigned: true)
!518 = !DIEnumerator(name: "TH_NURB_ULINE", value: 50, isUnsigned: true)
!519 = !DIEnumerator(name: "TH_NURB_VLINE", value: 51, isUnsigned: true)
!520 = !DIEnumerator(name: "TH_NURB_SEL_ULINE", value: 52, isUnsigned: true)
!521 = !DIEnumerator(name: "TH_NURB_SEL_VLINE", value: 53, isUnsigned: true)
!522 = !DIEnumerator(name: "TH_HANDLE_FREE", value: 54, isUnsigned: true)
!523 = !DIEnumerator(name: "TH_HANDLE_AUTO", value: 55, isUnsigned: true)
!524 = !DIEnumerator(name: "TH_HANDLE_VECT", value: 56, isUnsigned: true)
!525 = !DIEnumerator(name: "TH_HANDLE_ALIGN", value: 57, isUnsigned: true)
!526 = !DIEnumerator(name: "TH_HANDLE_AUTOCLAMP", value: 58, isUnsigned: true)
!527 = !DIEnumerator(name: "TH_HANDLE_SEL_FREE", value: 59, isUnsigned: true)
!528 = !DIEnumerator(name: "TH_HANDLE_SEL_AUTO", value: 60, isUnsigned: true)
!529 = !DIEnumerator(name: "TH_HANDLE_SEL_VECT", value: 61, isUnsigned: true)
!530 = !DIEnumerator(name: "TH_HANDLE_SEL_ALIGN", value: 62, isUnsigned: true)
!531 = !DIEnumerator(name: "TH_HANDLE_SEL_AUTOCLAMP", value: 63, isUnsigned: true)
!532 = !DIEnumerator(name: "TH_ACTIVE_SPLINE", value: 64, isUnsigned: true)
!533 = !DIEnumerator(name: "TH_ACTIVE_VERT", value: 65, isUnsigned: true)
!534 = !DIEnumerator(name: "TH_SYNTAX_B", value: 66, isUnsigned: true)
!535 = !DIEnumerator(name: "TH_SYNTAX_V", value: 67, isUnsigned: true)
!536 = !DIEnumerator(name: "TH_SYNTAX_R", value: 68, isUnsigned: true)
!537 = !DIEnumerator(name: "TH_SYNTAX_C", value: 69, isUnsigned: true)
!538 = !DIEnumerator(name: "TH_SYNTAX_L", value: 70, isUnsigned: true)
!539 = !DIEnumerator(name: "TH_SYNTAX_D", value: 71, isUnsigned: true)
!540 = !DIEnumerator(name: "TH_SYNTAX_N", value: 72, isUnsigned: true)
!541 = !DIEnumerator(name: "TH_SYNTAX_S", value: 73, isUnsigned: true)
!542 = !DIEnumerator(name: "TH_BONE_SOLID", value: 74, isUnsigned: true)
!543 = !DIEnumerator(name: "TH_BONE_POSE", value: 75, isUnsigned: true)
!544 = !DIEnumerator(name: "TH_BONE_POSE_ACTIVE", value: 76, isUnsigned: true)
!545 = !DIEnumerator(name: "TH_STRIP", value: 77, isUnsigned: true)
!546 = !DIEnumerator(name: "TH_STRIP_SELECT", value: 78, isUnsigned: true)
!547 = !DIEnumerator(name: "TH_KEYTYPE_KEYFRAME", value: 79, isUnsigned: true)
!548 = !DIEnumerator(name: "TH_KEYTYPE_KEYFRAME_SELECT", value: 80, isUnsigned: true)
!549 = !DIEnumerator(name: "TH_KEYTYPE_EXTREME", value: 81, isUnsigned: true)
!550 = !DIEnumerator(name: "TH_KEYTYPE_EXTREME_SELECT", value: 82, isUnsigned: true)
!551 = !DIEnumerator(name: "TH_KEYTYPE_BREAKDOWN", value: 83, isUnsigned: true)
!552 = !DIEnumerator(name: "TH_KEYTYPE_BREAKDOWN_SELECT", value: 84, isUnsigned: true)
!553 = !DIEnumerator(name: "TH_KEYTYPE_JITTER", value: 85, isUnsigned: true)
!554 = !DIEnumerator(name: "TH_KEYTYPE_JITTER_SELECT", value: 86, isUnsigned: true)
!555 = !DIEnumerator(name: "TH_KEYBORDER", value: 87, isUnsigned: true)
!556 = !DIEnumerator(name: "TH_KEYBORDER_SELECT", value: 88, isUnsigned: true)
!557 = !DIEnumerator(name: "TH_LAMP", value: 89, isUnsigned: true)
!558 = !DIEnumerator(name: "TH_SPEAKER", value: 90, isUnsigned: true)
!559 = !DIEnumerator(name: "TH_CAMERA", value: 91, isUnsigned: true)
!560 = !DIEnumerator(name: "TH_EMPTY", value: 92, isUnsigned: true)
!561 = !DIEnumerator(name: "TH_NODE", value: 93, isUnsigned: true)
!562 = !DIEnumerator(name: "TH_NODE_INPUT", value: 94, isUnsigned: true)
!563 = !DIEnumerator(name: "TH_NODE_OUTPUT", value: 95, isUnsigned: true)
!564 = !DIEnumerator(name: "TH_NODE_COLOR", value: 96, isUnsigned: true)
!565 = !DIEnumerator(name: "TH_NODE_FILTER", value: 97, isUnsigned: true)
!566 = !DIEnumerator(name: "TH_NODE_VECTOR", value: 98, isUnsigned: true)
!567 = !DIEnumerator(name: "TH_NODE_TEXTURE", value: 99, isUnsigned: true)
!568 = !DIEnumerator(name: "TH_NODE_PATTERN", value: 100, isUnsigned: true)
!569 = !DIEnumerator(name: "TH_NODE_SCRIPT", value: 101, isUnsigned: true)
!570 = !DIEnumerator(name: "TH_NODE_LAYOUT", value: 102, isUnsigned: true)
!571 = !DIEnumerator(name: "TH_NODE_SHADER", value: 103, isUnsigned: true)
!572 = !DIEnumerator(name: "TH_NODE_INTERFACE", value: 104, isUnsigned: true)
!573 = !DIEnumerator(name: "TH_NODE_CONVERTOR", value: 105, isUnsigned: true)
!574 = !DIEnumerator(name: "TH_NODE_GROUP", value: 106, isUnsigned: true)
!575 = !DIEnumerator(name: "TH_NODE_FRAME", value: 107, isUnsigned: true)
!576 = !DIEnumerator(name: "TH_NODE_MATTE", value: 108, isUnsigned: true)
!577 = !DIEnumerator(name: "TH_NODE_DISTORT", value: 109, isUnsigned: true)
!578 = !DIEnumerator(name: "TH_CONSOLE_OUTPUT", value: 110, isUnsigned: true)
!579 = !DIEnumerator(name: "TH_CONSOLE_INPUT", value: 111, isUnsigned: true)
!580 = !DIEnumerator(name: "TH_CONSOLE_INFO", value: 112, isUnsigned: true)
!581 = !DIEnumerator(name: "TH_CONSOLE_ERROR", value: 113, isUnsigned: true)
!582 = !DIEnumerator(name: "TH_CONSOLE_CURSOR", value: 114, isUnsigned: true)
!583 = !DIEnumerator(name: "TH_CONSOLE_SELECT", value: 115, isUnsigned: true)
!584 = !DIEnumerator(name: "TH_SEQ_MOVIE", value: 116, isUnsigned: true)
!585 = !DIEnumerator(name: "TH_SEQ_MOVIECLIP", value: 117, isUnsigned: true)
!586 = !DIEnumerator(name: "TH_SEQ_MASK", value: 118, isUnsigned: true)
!587 = !DIEnumerator(name: "TH_SEQ_IMAGE", value: 119, isUnsigned: true)
!588 = !DIEnumerator(name: "TH_SEQ_SCENE", value: 120, isUnsigned: true)
!589 = !DIEnumerator(name: "TH_SEQ_AUDIO", value: 121, isUnsigned: true)
!590 = !DIEnumerator(name: "TH_SEQ_EFFECT", value: 122, isUnsigned: true)
!591 = !DIEnumerator(name: "TH_SEQ_TRANSITION", value: 123, isUnsigned: true)
!592 = !DIEnumerator(name: "TH_SEQ_META", value: 124, isUnsigned: true)
!593 = !DIEnumerator(name: "TH_SEQ_PREVIEW", value: 125, isUnsigned: true)
!594 = !DIEnumerator(name: "TH_EDGE_SHARP", value: 126, isUnsigned: true)
!595 = !DIEnumerator(name: "TH_EDITMESH_ACTIVE", value: 127, isUnsigned: true)
!596 = !DIEnumerator(name: "TH_HANDLE_VERTEX", value: 128, isUnsigned: true)
!597 = !DIEnumerator(name: "TH_HANDLE_VERTEX_SELECT", value: 129, isUnsigned: true)
!598 = !DIEnumerator(name: "TH_HANDLE_VERTEX_SIZE", value: 130, isUnsigned: true)
!599 = !DIEnumerator(name: "TH_DOPESHEET_CHANNELOB", value: 131, isUnsigned: true)
!600 = !DIEnumerator(name: "TH_DOPESHEET_CHANNELSUBOB", value: 132, isUnsigned: true)
!601 = !DIEnumerator(name: "TH_PREVIEW_BACK", value: 133, isUnsigned: true)
!602 = !DIEnumerator(name: "TH_EDGE_CREASE", value: 134, isUnsigned: true)
!603 = !DIEnumerator(name: "TH_DRAWEXTRA_EDGELEN", value: 135, isUnsigned: true)
!604 = !DIEnumerator(name: "TH_DRAWEXTRA_EDGEANG", value: 136, isUnsigned: true)
!605 = !DIEnumerator(name: "TH_DRAWEXTRA_FACEAREA", value: 137, isUnsigned: true)
!606 = !DIEnumerator(name: "TH_DRAWEXTRA_FACEANG", value: 138, isUnsigned: true)
!607 = !DIEnumerator(name: "TH_NODE_CURVING", value: 139, isUnsigned: true)
!608 = !DIEnumerator(name: "TH_MARKER_OUTLINE", value: 140, isUnsigned: true)
!609 = !DIEnumerator(name: "TH_MARKER", value: 141, isUnsigned: true)
!610 = !DIEnumerator(name: "TH_ACT_MARKER", value: 142, isUnsigned: true)
!611 = !DIEnumerator(name: "TH_SEL_MARKER", value: 143, isUnsigned: true)
!612 = !DIEnumerator(name: "TH_BUNDLE_SOLID", value: 144, isUnsigned: true)
!613 = !DIEnumerator(name: "TH_DIS_MARKER", value: 145, isUnsigned: true)
!614 = !DIEnumerator(name: "TH_PATH_BEFORE", value: 146, isUnsigned: true)
!615 = !DIEnumerator(name: "TH_PATH_AFTER", value: 147, isUnsigned: true)
!616 = !DIEnumerator(name: "TH_CAMERA_PATH", value: 148, isUnsigned: true)
!617 = !DIEnumerator(name: "TH_LOCK_MARKER", value: 149, isUnsigned: true)
!618 = !DIEnumerator(name: "TH_STITCH_PREVIEW_FACE", value: 150, isUnsigned: true)
!619 = !DIEnumerator(name: "TH_STITCH_PREVIEW_EDGE", value: 151, isUnsigned: true)
!620 = !DIEnumerator(name: "TH_STITCH_PREVIEW_VERT", value: 152, isUnsigned: true)
!621 = !DIEnumerator(name: "TH_STITCH_PREVIEW_STITCHABLE", value: 153, isUnsigned: true)
!622 = !DIEnumerator(name: "TH_STITCH_PREVIEW_UNSTITCHABLE", value: 154, isUnsigned: true)
!623 = !DIEnumerator(name: "TH_STITCH_PREVIEW_ACTIVE", value: 155, isUnsigned: true)
!624 = !DIEnumerator(name: "TH_PAINT_CURVE_HANDLE", value: 156, isUnsigned: true)
!625 = !DIEnumerator(name: "TH_PAINT_CURVE_PIVOT", value: 157, isUnsigned: true)
!626 = !DIEnumerator(name: "TH_UV_SHADOW", value: 158, isUnsigned: true)
!627 = !DIEnumerator(name: "TH_UV_OTHERS", value: 159, isUnsigned: true)
!628 = !DIEnumerator(name: "TH_FREESTYLE_EDGE_MARK", value: 160, isUnsigned: true)
!629 = !DIEnumerator(name: "TH_FREESTYLE_FACE_MARK", value: 161, isUnsigned: true)
!630 = !DIEnumerator(name: "TH_MATCH", value: 162, isUnsigned: true)
!631 = !DIEnumerator(name: "TH_SELECT_HIGHLIGHT", value: 163, isUnsigned: true)
!632 = !DIEnumerator(name: "TH_SKIN_ROOT", value: 164, isUnsigned: true)
!633 = !DIEnumerator(name: "TH_ANIM_ACTIVE", value: 165, isUnsigned: true)
!634 = !DIEnumerator(name: "TH_ANIM_INACTIVE", value: 166, isUnsigned: true)
!635 = !DIEnumerator(name: "TH_NLA_TWEAK", value: 167, isUnsigned: true)
!636 = !DIEnumerator(name: "TH_NLA_TWEAK_DUPLI", value: 168, isUnsigned: true)
!637 = !DIEnumerator(name: "TH_NLA_TRANSITION", value: 169, isUnsigned: true)
!638 = !DIEnumerator(name: "TH_NLA_TRANSITION_SEL", value: 170, isUnsigned: true)
!639 = !DIEnumerator(name: "TH_NLA_META", value: 171, isUnsigned: true)
!640 = !DIEnumerator(name: "TH_NLA_META_SEL", value: 172, isUnsigned: true)
!641 = !DIEnumerator(name: "TH_NLA_SOUND", value: 173, isUnsigned: true)
!642 = !DIEnumerator(name: "TH_NLA_SOUND_SEL", value: 174, isUnsigned: true)
!643 = !DIEnumerator(name: "TH_EMBOSS", value: 175, isUnsigned: true)
!644 = !DIEnumerator(name: "TH_AXIS_X", value: 176, isUnsigned: true)
!645 = !DIEnumerator(name: "TH_AXIS_Y", value: 177, isUnsigned: true)
!646 = !DIEnumerator(name: "TH_AXIS_Z", value: 178, isUnsigned: true)
!647 = !DIEnumerator(name: "TH_LOW_GRAD", value: 179, isUnsigned: true)
!648 = !DIEnumerator(name: "TH_HIGH_GRAD", value: 180, isUnsigned: true)
!649 = !DIEnumerator(name: "TH_SHOW_BACK_GRAD", value: 181, isUnsigned: true)
!650 = !DIEnumerator(name: "TH_INFO_SELECTED", value: 182, isUnsigned: true)
!651 = !DIEnumerator(name: "TH_INFO_SELECTED_TEXT", value: 183, isUnsigned: true)
!652 = !DIEnumerator(name: "TH_INFO_ERROR", value: 184, isUnsigned: true)
!653 = !DIEnumerator(name: "TH_INFO_ERROR_TEXT", value: 185, isUnsigned: true)
!654 = !DIEnumerator(name: "TH_INFO_WARNING", value: 186, isUnsigned: true)
!655 = !DIEnumerator(name: "TH_INFO_WARNING_TEXT", value: 187, isUnsigned: true)
!656 = !DIEnumerator(name: "TH_INFO_INFO", value: 188, isUnsigned: true)
!657 = !DIEnumerator(name: "TH_INFO_INFO_TEXT", value: 189, isUnsigned: true)
!658 = !DIEnumerator(name: "TH_INFO_DEBUG", value: 190, isUnsigned: true)
!659 = !DIEnumerator(name: "TH_INFO_DEBUG_TEXT", value: 191, isUnsigned: true)
!660 = !DIEnumerator(name: "TH_VIEW_OVERLAY", value: 192, isUnsigned: true)
!661 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAutokey_Flag", file: !662, line: 684, baseType: !56, size: 32, elements: !663)
!662 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!663 = !{!664, !665, !666, !667, !668, !669, !670}
!664 = !DIEnumerator(name: "AUTOKEY_FLAG_INSERTAVAIL", value: 1, isUnsigned: true)
!665 = !DIEnumerator(name: "AUTOKEY_FLAG_INSERTNEEDED", value: 2, isUnsigned: true)
!666 = !DIEnumerator(name: "AUTOKEY_FLAG_AUTOMATKEY", value: 4, isUnsigned: true)
!667 = !DIEnumerator(name: "AUTOKEY_FLAG_XYZ2RGB", value: 8, isUnsigned: true)
!668 = !DIEnumerator(name: "AUTOKEY_FLAG_ONLYKEYINGSET", value: 64, isUnsigned: true)
!669 = !DIEnumerator(name: "AUTOKEY_FLAG_NOWARNING", value: 128, isUnsigned: true)
!670 = !DIEnumerator(name: "ANIMRECORD_FLAG_WITHNLA", value: 1024, isUnsigned: true)
!671 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !466, line: 40, baseType: !56, size: 32, elements: !672)
!672 = !{!673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519}
!673 = !DIEnumerator(name: "ICON_NONE", value: 0, isUnsigned: true)
!674 = !DIEnumerator(name: "ICON_QUESTION", value: 1, isUnsigned: true)
!675 = !DIEnumerator(name: "ICON_ERROR", value: 2, isUnsigned: true)
!676 = !DIEnumerator(name: "ICON_CANCEL", value: 3, isUnsigned: true)
!677 = !DIEnumerator(name: "ICON_TRIA_RIGHT", value: 4, isUnsigned: true)
!678 = !DIEnumerator(name: "ICON_TRIA_DOWN", value: 5, isUnsigned: true)
!679 = !DIEnumerator(name: "ICON_TRIA_LEFT", value: 6, isUnsigned: true)
!680 = !DIEnumerator(name: "ICON_TRIA_UP", value: 7, isUnsigned: true)
!681 = !DIEnumerator(name: "ICON_ARROW_LEFTRIGHT", value: 8, isUnsigned: true)
!682 = !DIEnumerator(name: "ICON_PLUS", value: 9, isUnsigned: true)
!683 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_DOWN", value: 10, isUnsigned: true)
!684 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_RIGHT", value: 11, isUnsigned: true)
!685 = !DIEnumerator(name: "ICON_RADIOBUT_OFF", value: 12, isUnsigned: true)
!686 = !DIEnumerator(name: "ICON_RADIOBUT_ON", value: 13, isUnsigned: true)
!687 = !DIEnumerator(name: "ICON_MENU_PANEL", value: 14, isUnsigned: true)
!688 = !DIEnumerator(name: "ICON_BLENDER", value: 15, isUnsigned: true)
!689 = !DIEnumerator(name: "ICON_GRIP", value: 16, isUnsigned: true)
!690 = !DIEnumerator(name: "ICON_DOT", value: 17, isUnsigned: true)
!691 = !DIEnumerator(name: "ICON_COLLAPSEMENU", value: 18, isUnsigned: true)
!692 = !DIEnumerator(name: "ICON_X", value: 19, isUnsigned: true)
!693 = !DIEnumerator(name: "ICON_BLANK005", value: 20, isUnsigned: true)
!694 = !DIEnumerator(name: "ICON_GO_LEFT", value: 21, isUnsigned: true)
!695 = !DIEnumerator(name: "ICON_PLUG", value: 22, isUnsigned: true)
!696 = !DIEnumerator(name: "ICON_UI", value: 23, isUnsigned: true)
!697 = !DIEnumerator(name: "ICON_NODE", value: 24, isUnsigned: true)
!698 = !DIEnumerator(name: "ICON_NODE_SEL", value: 25, isUnsigned: true)
!699 = !DIEnumerator(name: "ICON_FULLSCREEN", value: 26, isUnsigned: true)
!700 = !DIEnumerator(name: "ICON_SPLITSCREEN", value: 27, isUnsigned: true)
!701 = !DIEnumerator(name: "ICON_RIGHTARROW_THIN", value: 28, isUnsigned: true)
!702 = !DIEnumerator(name: "ICON_BORDERMOVE", value: 29, isUnsigned: true)
!703 = !DIEnumerator(name: "ICON_VIEWZOOM", value: 30, isUnsigned: true)
!704 = !DIEnumerator(name: "ICON_ZOOMIN", value: 31, isUnsigned: true)
!705 = !DIEnumerator(name: "ICON_ZOOMOUT", value: 32, isUnsigned: true)
!706 = !DIEnumerator(name: "ICON_PANEL_CLOSE", value: 33, isUnsigned: true)
!707 = !DIEnumerator(name: "ICON_COPY_ID", value: 34, isUnsigned: true)
!708 = !DIEnumerator(name: "ICON_EYEDROPPER", value: 35, isUnsigned: true)
!709 = !DIEnumerator(name: "ICON_LINK_AREA", value: 36, isUnsigned: true)
!710 = !DIEnumerator(name: "ICON_AUTO", value: 37, isUnsigned: true)
!711 = !DIEnumerator(name: "ICON_CHECKBOX_DEHLT", value: 38, isUnsigned: true)
!712 = !DIEnumerator(name: "ICON_CHECKBOX_HLT", value: 39, isUnsigned: true)
!713 = !DIEnumerator(name: "ICON_UNLOCKED", value: 40, isUnsigned: true)
!714 = !DIEnumerator(name: "ICON_LOCKED", value: 41, isUnsigned: true)
!715 = !DIEnumerator(name: "ICON_UNPINNED", value: 42, isUnsigned: true)
!716 = !DIEnumerator(name: "ICON_PINNED", value: 43, isUnsigned: true)
!717 = !DIEnumerator(name: "ICON_SCREEN_BACK", value: 44, isUnsigned: true)
!718 = !DIEnumerator(name: "ICON_RIGHTARROW", value: 45, isUnsigned: true)
!719 = !DIEnumerator(name: "ICON_DOWNARROW_HLT", value: 46, isUnsigned: true)
!720 = !DIEnumerator(name: "ICON_DOTSUP", value: 47, isUnsigned: true)
!721 = !DIEnumerator(name: "ICON_DOTSDOWN", value: 48, isUnsigned: true)
!722 = !DIEnumerator(name: "ICON_LINK", value: 49, isUnsigned: true)
!723 = !DIEnumerator(name: "ICON_INLINK", value: 50, isUnsigned: true)
!724 = !DIEnumerator(name: "ICON_PLUGIN", value: 51, isUnsigned: true)
!725 = !DIEnumerator(name: "ICON_HELP", value: 52, isUnsigned: true)
!726 = !DIEnumerator(name: "ICON_GHOST_ENABLED", value: 53, isUnsigned: true)
!727 = !DIEnumerator(name: "ICON_COLOR", value: 54, isUnsigned: true)
!728 = !DIEnumerator(name: "ICON_LINKED", value: 55, isUnsigned: true)
!729 = !DIEnumerator(name: "ICON_UNLINKED", value: 56, isUnsigned: true)
!730 = !DIEnumerator(name: "ICON_HAND", value: 57, isUnsigned: true)
!731 = !DIEnumerator(name: "ICON_ZOOM_ALL", value: 58, isUnsigned: true)
!732 = !DIEnumerator(name: "ICON_ZOOM_SELECTED", value: 59, isUnsigned: true)
!733 = !DIEnumerator(name: "ICON_ZOOM_PREVIOUS", value: 60, isUnsigned: true)
!734 = !DIEnumerator(name: "ICON_ZOOM_IN", value: 61, isUnsigned: true)
!735 = !DIEnumerator(name: "ICON_ZOOM_OUT", value: 62, isUnsigned: true)
!736 = !DIEnumerator(name: "ICON_RENDER_REGION", value: 63, isUnsigned: true)
!737 = !DIEnumerator(name: "ICON_BORDER_RECT", value: 64, isUnsigned: true)
!738 = !DIEnumerator(name: "ICON_BORDER_LASSO", value: 65, isUnsigned: true)
!739 = !DIEnumerator(name: "ICON_FREEZE", value: 66, isUnsigned: true)
!740 = !DIEnumerator(name: "ICON_STYLUS_PRESSURE", value: 67, isUnsigned: true)
!741 = !DIEnumerator(name: "ICON_GHOST_DISABLED", value: 68, isUnsigned: true)
!742 = !DIEnumerator(name: "ICON_NEW", value: 69, isUnsigned: true)
!743 = !DIEnumerator(name: "ICON_FILE_TICK", value: 70, isUnsigned: true)
!744 = !DIEnumerator(name: "ICON_QUIT", value: 71, isUnsigned: true)
!745 = !DIEnumerator(name: "ICON_URL", value: 72, isUnsigned: true)
!746 = !DIEnumerator(name: "ICON_RECOVER_LAST", value: 73, isUnsigned: true)
!747 = !DIEnumerator(name: "ICON_BLANK038", value: 74, isUnsigned: true)
!748 = !DIEnumerator(name: "ICON_FULLSCREEN_ENTER", value: 75, isUnsigned: true)
!749 = !DIEnumerator(name: "ICON_FULLSCREEN_EXIT", value: 76, isUnsigned: true)
!750 = !DIEnumerator(name: "ICON_BLANK1", value: 77, isUnsigned: true)
!751 = !DIEnumerator(name: "ICON_LAMP", value: 78, isUnsigned: true)
!752 = !DIEnumerator(name: "ICON_MATERIAL", value: 79, isUnsigned: true)
!753 = !DIEnumerator(name: "ICON_TEXTURE", value: 80, isUnsigned: true)
!754 = !DIEnumerator(name: "ICON_ANIM", value: 81, isUnsigned: true)
!755 = !DIEnumerator(name: "ICON_WORLD", value: 82, isUnsigned: true)
!756 = !DIEnumerator(name: "ICON_SCENE", value: 83, isUnsigned: true)
!757 = !DIEnumerator(name: "ICON_EDIT", value: 84, isUnsigned: true)
!758 = !DIEnumerator(name: "ICON_GAME", value: 85, isUnsigned: true)
!759 = !DIEnumerator(name: "ICON_RADIO", value: 86, isUnsigned: true)
!760 = !DIEnumerator(name: "ICON_SCRIPT", value: 87, isUnsigned: true)
!761 = !DIEnumerator(name: "ICON_PARTICLES", value: 88, isUnsigned: true)
!762 = !DIEnumerator(name: "ICON_PHYSICS", value: 89, isUnsigned: true)
!763 = !DIEnumerator(name: "ICON_SPEAKER", value: 90, isUnsigned: true)
!764 = !DIEnumerator(name: "ICON_TEXTURE_SHADED", value: 91, isUnsigned: true)
!765 = !DIEnumerator(name: "ICON_BLANK042", value: 92, isUnsigned: true)
!766 = !DIEnumerator(name: "ICON_BLANK043", value: 93, isUnsigned: true)
!767 = !DIEnumerator(name: "ICON_BLANK044", value: 94, isUnsigned: true)
!768 = !DIEnumerator(name: "ICON_BLANK045", value: 95, isUnsigned: true)
!769 = !DIEnumerator(name: "ICON_BLANK046", value: 96, isUnsigned: true)
!770 = !DIEnumerator(name: "ICON_BLANK047", value: 97, isUnsigned: true)
!771 = !DIEnumerator(name: "ICON_BLANK048", value: 98, isUnsigned: true)
!772 = !DIEnumerator(name: "ICON_BLANK049", value: 99, isUnsigned: true)
!773 = !DIEnumerator(name: "ICON_BLANK050", value: 100, isUnsigned: true)
!774 = !DIEnumerator(name: "ICON_BLANK051", value: 101, isUnsigned: true)
!775 = !DIEnumerator(name: "ICON_BLANK052", value: 102, isUnsigned: true)
!776 = !DIEnumerator(name: "ICON_BLANK052b", value: 103, isUnsigned: true)
!777 = !DIEnumerator(name: "ICON_VIEW3D", value: 104, isUnsigned: true)
!778 = !DIEnumerator(name: "ICON_IPO", value: 105, isUnsigned: true)
!779 = !DIEnumerator(name: "ICON_OOPS", value: 106, isUnsigned: true)
!780 = !DIEnumerator(name: "ICON_BUTS", value: 107, isUnsigned: true)
!781 = !DIEnumerator(name: "ICON_FILESEL", value: 108, isUnsigned: true)
!782 = !DIEnumerator(name: "ICON_IMAGE_COL", value: 109, isUnsigned: true)
!783 = !DIEnumerator(name: "ICON_INFO", value: 110, isUnsigned: true)
!784 = !DIEnumerator(name: "ICON_SEQUENCE", value: 111, isUnsigned: true)
!785 = !DIEnumerator(name: "ICON_TEXT", value: 112, isUnsigned: true)
!786 = !DIEnumerator(name: "ICON_IMASEL", value: 113, isUnsigned: true)
!787 = !DIEnumerator(name: "ICON_SOUND", value: 114, isUnsigned: true)
!788 = !DIEnumerator(name: "ICON_ACTION", value: 115, isUnsigned: true)
!789 = !DIEnumerator(name: "ICON_NLA", value: 116, isUnsigned: true)
!790 = !DIEnumerator(name: "ICON_SCRIPTWIN", value: 117, isUnsigned: true)
!791 = !DIEnumerator(name: "ICON_TIME", value: 118, isUnsigned: true)
!792 = !DIEnumerator(name: "ICON_NODETREE", value: 119, isUnsigned: true)
!793 = !DIEnumerator(name: "ICON_LOGIC", value: 120, isUnsigned: true)
!794 = !DIEnumerator(name: "ICON_CONSOLE", value: 121, isUnsigned: true)
!795 = !DIEnumerator(name: "ICON_PREFERENCES", value: 122, isUnsigned: true)
!796 = !DIEnumerator(name: "ICON_CLIP", value: 123, isUnsigned: true)
!797 = !DIEnumerator(name: "ICON_ASSET_MANAGER", value: 124, isUnsigned: true)
!798 = !DIEnumerator(name: "ICON_BLANK057", value: 125, isUnsigned: true)
!799 = !DIEnumerator(name: "ICON_BLANK058", value: 126, isUnsigned: true)
!800 = !DIEnumerator(name: "ICON_BLANK059", value: 127, isUnsigned: true)
!801 = !DIEnumerator(name: "ICON_BLANK060", value: 128, isUnsigned: true)
!802 = !DIEnumerator(name: "ICON_BLANK061", value: 129, isUnsigned: true)
!803 = !DIEnumerator(name: "ICON_OBJECT_DATAMODE", value: 130, isUnsigned: true)
!804 = !DIEnumerator(name: "ICON_EDITMODE_HLT", value: 131, isUnsigned: true)
!805 = !DIEnumerator(name: "ICON_FACESEL_HLT", value: 132, isUnsigned: true)
!806 = !DIEnumerator(name: "ICON_VPAINT_HLT", value: 133, isUnsigned: true)
!807 = !DIEnumerator(name: "ICON_TPAINT_HLT", value: 134, isUnsigned: true)
!808 = !DIEnumerator(name: "ICON_WPAINT_HLT", value: 135, isUnsigned: true)
!809 = !DIEnumerator(name: "ICON_SCULPTMODE_HLT", value: 136, isUnsigned: true)
!810 = !DIEnumerator(name: "ICON_POSE_HLT", value: 137, isUnsigned: true)
!811 = !DIEnumerator(name: "ICON_PARTICLEMODE", value: 138, isUnsigned: true)
!812 = !DIEnumerator(name: "ICON_LIGHTPAINT", value: 139, isUnsigned: true)
!813 = !DIEnumerator(name: "ICON_BLANK063", value: 140, isUnsigned: true)
!814 = !DIEnumerator(name: "ICON_BLANK064", value: 141, isUnsigned: true)
!815 = !DIEnumerator(name: "ICON_BLANK065", value: 142, isUnsigned: true)
!816 = !DIEnumerator(name: "ICON_BLANK066", value: 143, isUnsigned: true)
!817 = !DIEnumerator(name: "ICON_BLANK067", value: 144, isUnsigned: true)
!818 = !DIEnumerator(name: "ICON_BLANK068", value: 145, isUnsigned: true)
!819 = !DIEnumerator(name: "ICON_BLANK069", value: 146, isUnsigned: true)
!820 = !DIEnumerator(name: "ICON_BLANK070", value: 147, isUnsigned: true)
!821 = !DIEnumerator(name: "ICON_BLANK071", value: 148, isUnsigned: true)
!822 = !DIEnumerator(name: "ICON_BLANK072", value: 149, isUnsigned: true)
!823 = !DIEnumerator(name: "ICON_BLANK073", value: 150, isUnsigned: true)
!824 = !DIEnumerator(name: "ICON_BLANK074", value: 151, isUnsigned: true)
!825 = !DIEnumerator(name: "ICON_BLANK075", value: 152, isUnsigned: true)
!826 = !DIEnumerator(name: "ICON_BLANK076", value: 153, isUnsigned: true)
!827 = !DIEnumerator(name: "ICON_BLANK077", value: 154, isUnsigned: true)
!828 = !DIEnumerator(name: "ICON_BLANK077b", value: 155, isUnsigned: true)
!829 = !DIEnumerator(name: "ICON_SCENE_DATA", value: 156, isUnsigned: true)
!830 = !DIEnumerator(name: "ICON_RENDERLAYERS", value: 157, isUnsigned: true)
!831 = !DIEnumerator(name: "ICON_WORLD_DATA", value: 158, isUnsigned: true)
!832 = !DIEnumerator(name: "ICON_OBJECT_DATA", value: 159, isUnsigned: true)
!833 = !DIEnumerator(name: "ICON_MESH_DATA", value: 160, isUnsigned: true)
!834 = !DIEnumerator(name: "ICON_CURVE_DATA", value: 161, isUnsigned: true)
!835 = !DIEnumerator(name: "ICON_META_DATA", value: 162, isUnsigned: true)
!836 = !DIEnumerator(name: "ICON_LATTICE_DATA", value: 163, isUnsigned: true)
!837 = !DIEnumerator(name: "ICON_LAMP_DATA", value: 164, isUnsigned: true)
!838 = !DIEnumerator(name: "ICON_MATERIAL_DATA", value: 165, isUnsigned: true)
!839 = !DIEnumerator(name: "ICON_TEXTURE_DATA", value: 166, isUnsigned: true)
!840 = !DIEnumerator(name: "ICON_ANIM_DATA", value: 167, isUnsigned: true)
!841 = !DIEnumerator(name: "ICON_CAMERA_DATA", value: 168, isUnsigned: true)
!842 = !DIEnumerator(name: "ICON_PARTICLE_DATA", value: 169, isUnsigned: true)
!843 = !DIEnumerator(name: "ICON_LIBRARY_DATA_DIRECT", value: 170, isUnsigned: true)
!844 = !DIEnumerator(name: "ICON_GROUP", value: 171, isUnsigned: true)
!845 = !DIEnumerator(name: "ICON_ARMATURE_DATA", value: 172, isUnsigned: true)
!846 = !DIEnumerator(name: "ICON_POSE_DATA", value: 173, isUnsigned: true)
!847 = !DIEnumerator(name: "ICON_BONE_DATA", value: 174, isUnsigned: true)
!848 = !DIEnumerator(name: "ICON_CONSTRAINT", value: 175, isUnsigned: true)
!849 = !DIEnumerator(name: "ICON_SHAPEKEY_DATA", value: 176, isUnsigned: true)
!850 = !DIEnumerator(name: "ICON_CONSTRAINT_BONE", value: 177, isUnsigned: true)
!851 = !DIEnumerator(name: "ICON_CAMERA_STEREO", value: 178, isUnsigned: true)
!852 = !DIEnumerator(name: "ICON_PACKAGE", value: 179, isUnsigned: true)
!853 = !DIEnumerator(name: "ICON_UGLYPACKAGE", value: 180, isUnsigned: true)
!854 = !DIEnumerator(name: "ICON_BLANK079b", value: 181, isUnsigned: true)
!855 = !DIEnumerator(name: "ICON_BRUSH_DATA", value: 182, isUnsigned: true)
!856 = !DIEnumerator(name: "ICON_IMAGE_DATA", value: 183, isUnsigned: true)
!857 = !DIEnumerator(name: "ICON_FILE", value: 184, isUnsigned: true)
!858 = !DIEnumerator(name: "ICON_FCURVE", value: 185, isUnsigned: true)
!859 = !DIEnumerator(name: "ICON_FONT_DATA", value: 186, isUnsigned: true)
!860 = !DIEnumerator(name: "ICON_RENDER_RESULT", value: 187, isUnsigned: true)
!861 = !DIEnumerator(name: "ICON_SURFACE_DATA", value: 188, isUnsigned: true)
!862 = !DIEnumerator(name: "ICON_EMPTY_DATA", value: 189, isUnsigned: true)
!863 = !DIEnumerator(name: "ICON_SETTINGS", value: 190, isUnsigned: true)
!864 = !DIEnumerator(name: "ICON_RENDER_ANIMATION", value: 191, isUnsigned: true)
!865 = !DIEnumerator(name: "ICON_RENDER_STILL", value: 192, isUnsigned: true)
!866 = !DIEnumerator(name: "ICON_BLANK080F", value: 193, isUnsigned: true)
!867 = !DIEnumerator(name: "ICON_BOIDS", value: 194, isUnsigned: true)
!868 = !DIEnumerator(name: "ICON_STRANDS", value: 195, isUnsigned: true)
!869 = !DIEnumerator(name: "ICON_LIBRARY_DATA_INDIRECT", value: 196, isUnsigned: true)
!870 = !DIEnumerator(name: "ICON_GREASEPENCIL", value: 197, isUnsigned: true)
!871 = !DIEnumerator(name: "ICON_LINE_DATA", value: 198, isUnsigned: true)
!872 = !DIEnumerator(name: "ICON_BLANK084", value: 199, isUnsigned: true)
!873 = !DIEnumerator(name: "ICON_GROUP_BONE", value: 200, isUnsigned: true)
!874 = !DIEnumerator(name: "ICON_GROUP_VERTEX", value: 201, isUnsigned: true)
!875 = !DIEnumerator(name: "ICON_GROUP_VCOL", value: 202, isUnsigned: true)
!876 = !DIEnumerator(name: "ICON_GROUP_UVS", value: 203, isUnsigned: true)
!877 = !DIEnumerator(name: "ICON_BLANK089", value: 204, isUnsigned: true)
!878 = !DIEnumerator(name: "ICON_BLANK090", value: 205, isUnsigned: true)
!879 = !DIEnumerator(name: "ICON_RNA", value: 206, isUnsigned: true)
!880 = !DIEnumerator(name: "ICON_RNA_ADD", value: 207, isUnsigned: true)
!881 = !DIEnumerator(name: "ICON_BLANK092", value: 208, isUnsigned: true)
!882 = !DIEnumerator(name: "ICON_BLANK093", value: 209, isUnsigned: true)
!883 = !DIEnumerator(name: "ICON_BLANK094", value: 210, isUnsigned: true)
!884 = !DIEnumerator(name: "ICON_BLANK095", value: 211, isUnsigned: true)
!885 = !DIEnumerator(name: "ICON_BLANK096", value: 212, isUnsigned: true)
!886 = !DIEnumerator(name: "ICON_BLANK097", value: 213, isUnsigned: true)
!887 = !DIEnumerator(name: "ICON_BLANK098", value: 214, isUnsigned: true)
!888 = !DIEnumerator(name: "ICON_BLANK099", value: 215, isUnsigned: true)
!889 = !DIEnumerator(name: "ICON_BLANK100", value: 216, isUnsigned: true)
!890 = !DIEnumerator(name: "ICON_BLANK101", value: 217, isUnsigned: true)
!891 = !DIEnumerator(name: "ICON_BLANK102", value: 218, isUnsigned: true)
!892 = !DIEnumerator(name: "ICON_BLANK103", value: 219, isUnsigned: true)
!893 = !DIEnumerator(name: "ICON_BLANK104", value: 220, isUnsigned: true)
!894 = !DIEnumerator(name: "ICON_BLANK105", value: 221, isUnsigned: true)
!895 = !DIEnumerator(name: "ICON_BLANK106", value: 222, isUnsigned: true)
!896 = !DIEnumerator(name: "ICON_BLANK107", value: 223, isUnsigned: true)
!897 = !DIEnumerator(name: "ICON_BLANK108", value: 224, isUnsigned: true)
!898 = !DIEnumerator(name: "ICON_BLANK109", value: 225, isUnsigned: true)
!899 = !DIEnumerator(name: "ICON_BLANK110", value: 226, isUnsigned: true)
!900 = !DIEnumerator(name: "ICON_BLANK111", value: 227, isUnsigned: true)
!901 = !DIEnumerator(name: "ICON_BLANK112", value: 228, isUnsigned: true)
!902 = !DIEnumerator(name: "ICON_BLANK113", value: 229, isUnsigned: true)
!903 = !DIEnumerator(name: "ICON_BLANK114", value: 230, isUnsigned: true)
!904 = !DIEnumerator(name: "ICON_BLANK115", value: 231, isUnsigned: true)
!905 = !DIEnumerator(name: "ICON_BLANK116", value: 232, isUnsigned: true)
!906 = !DIEnumerator(name: "ICON_BLANK116b", value: 233, isUnsigned: true)
!907 = !DIEnumerator(name: "ICON_OUTLINER_OB_EMPTY", value: 234, isUnsigned: true)
!908 = !DIEnumerator(name: "ICON_OUTLINER_OB_MESH", value: 235, isUnsigned: true)
!909 = !DIEnumerator(name: "ICON_OUTLINER_OB_CURVE", value: 236, isUnsigned: true)
!910 = !DIEnumerator(name: "ICON_OUTLINER_OB_LATTICE", value: 237, isUnsigned: true)
!911 = !DIEnumerator(name: "ICON_OUTLINER_OB_META", value: 238, isUnsigned: true)
!912 = !DIEnumerator(name: "ICON_OUTLINER_OB_LAMP", value: 239, isUnsigned: true)
!913 = !DIEnumerator(name: "ICON_OUTLINER_OB_CAMERA", value: 240, isUnsigned: true)
!914 = !DIEnumerator(name: "ICON_OUTLINER_OB_ARMATURE", value: 241, isUnsigned: true)
!915 = !DIEnumerator(name: "ICON_OUTLINER_OB_FONT", value: 242, isUnsigned: true)
!916 = !DIEnumerator(name: "ICON_OUTLINER_OB_SURFACE", value: 243, isUnsigned: true)
!917 = !DIEnumerator(name: "ICON_OUTLINER_OB_SPEAKER", value: 244, isUnsigned: true)
!918 = !DIEnumerator(name: "ICON_BLANK120", value: 245, isUnsigned: true)
!919 = !DIEnumerator(name: "ICON_BLANK121", value: 246, isUnsigned: true)
!920 = !DIEnumerator(name: "ICON_BLANK122", value: 247, isUnsigned: true)
!921 = !DIEnumerator(name: "ICON_BLANK123", value: 248, isUnsigned: true)
!922 = !DIEnumerator(name: "ICON_BLANK124", value: 249, isUnsigned: true)
!923 = !DIEnumerator(name: "ICON_BLANK125", value: 250, isUnsigned: true)
!924 = !DIEnumerator(name: "ICON_BLANK126", value: 251, isUnsigned: true)
!925 = !DIEnumerator(name: "ICON_BLANK127", value: 252, isUnsigned: true)
!926 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_OFF", value: 253, isUnsigned: true)
!927 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_ON", value: 254, isUnsigned: true)
!928 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_OFF", value: 255, isUnsigned: true)
!929 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_ON", value: 256, isUnsigned: true)
!930 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_OFF", value: 257, isUnsigned: true)
!931 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_ON", value: 258, isUnsigned: true)
!932 = !DIEnumerator(name: "ICON_BLANK127b", value: 259, isUnsigned: true)
!933 = !DIEnumerator(name: "ICON_OUTLINER_DATA_EMPTY", value: 260, isUnsigned: true)
!934 = !DIEnumerator(name: "ICON_OUTLINER_DATA_MESH", value: 261, isUnsigned: true)
!935 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CURVE", value: 262, isUnsigned: true)
!936 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LATTICE", value: 263, isUnsigned: true)
!937 = !DIEnumerator(name: "ICON_OUTLINER_DATA_META", value: 264, isUnsigned: true)
!938 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LAMP", value: 265, isUnsigned: true)
!939 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CAMERA", value: 266, isUnsigned: true)
!940 = !DIEnumerator(name: "ICON_OUTLINER_DATA_ARMATURE", value: 267, isUnsigned: true)
!941 = !DIEnumerator(name: "ICON_OUTLINER_DATA_FONT", value: 268, isUnsigned: true)
!942 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SURFACE", value: 269, isUnsigned: true)
!943 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SPEAKER", value: 270, isUnsigned: true)
!944 = !DIEnumerator(name: "ICON_OUTLINER_DATA_POSE", value: 271, isUnsigned: true)
!945 = !DIEnumerator(name: "ICON_BLANK130", value: 272, isUnsigned: true)
!946 = !DIEnumerator(name: "ICON_BLANK131", value: 273, isUnsigned: true)
!947 = !DIEnumerator(name: "ICON_BLANK132", value: 274, isUnsigned: true)
!948 = !DIEnumerator(name: "ICON_BLANK133", value: 275, isUnsigned: true)
!949 = !DIEnumerator(name: "ICON_BLANK134", value: 276, isUnsigned: true)
!950 = !DIEnumerator(name: "ICON_BLANK135", value: 277, isUnsigned: true)
!951 = !DIEnumerator(name: "ICON_BLANK136", value: 278, isUnsigned: true)
!952 = !DIEnumerator(name: "ICON_BLANK137", value: 279, isUnsigned: true)
!953 = !DIEnumerator(name: "ICON_BLANK138", value: 280, isUnsigned: true)
!954 = !DIEnumerator(name: "ICON_BLANK139", value: 281, isUnsigned: true)
!955 = !DIEnumerator(name: "ICON_BLANK140", value: 282, isUnsigned: true)
!956 = !DIEnumerator(name: "ICON_BLANK141", value: 283, isUnsigned: true)
!957 = !DIEnumerator(name: "ICON_BLANK142", value: 284, isUnsigned: true)
!958 = !DIEnumerator(name: "ICON_BLANK142b", value: 285, isUnsigned: true)
!959 = !DIEnumerator(name: "ICON_MESH_PLANE", value: 286, isUnsigned: true)
!960 = !DIEnumerator(name: "ICON_MESH_CUBE", value: 287, isUnsigned: true)
!961 = !DIEnumerator(name: "ICON_MESH_CIRCLE", value: 288, isUnsigned: true)
!962 = !DIEnumerator(name: "ICON_MESH_UVSPHERE", value: 289, isUnsigned: true)
!963 = !DIEnumerator(name: "ICON_MESH_ICOSPHERE", value: 290, isUnsigned: true)
!964 = !DIEnumerator(name: "ICON_MESH_GRID", value: 291, isUnsigned: true)
!965 = !DIEnumerator(name: "ICON_MESH_MONKEY", value: 292, isUnsigned: true)
!966 = !DIEnumerator(name: "ICON_MESH_CYLINDER", value: 293, isUnsigned: true)
!967 = !DIEnumerator(name: "ICON_MESH_TORUS", value: 294, isUnsigned: true)
!968 = !DIEnumerator(name: "ICON_MESH_CONE", value: 295, isUnsigned: true)
!969 = !DIEnumerator(name: "ICON_BLANK610", value: 296, isUnsigned: true)
!970 = !DIEnumerator(name: "ICON_BLANK611", value: 297, isUnsigned: true)
!971 = !DIEnumerator(name: "ICON_LAMP_POINT", value: 298, isUnsigned: true)
!972 = !DIEnumerator(name: "ICON_LAMP_SUN", value: 299, isUnsigned: true)
!973 = !DIEnumerator(name: "ICON_LAMP_SPOT", value: 300, isUnsigned: true)
!974 = !DIEnumerator(name: "ICON_LAMP_HEMI", value: 301, isUnsigned: true)
!975 = !DIEnumerator(name: "ICON_LAMP_AREA", value: 302, isUnsigned: true)
!976 = !DIEnumerator(name: "ICON_BLANK617", value: 303, isUnsigned: true)
!977 = !DIEnumerator(name: "ICON_BLANK618", value: 304, isUnsigned: true)
!978 = !DIEnumerator(name: "ICON_META_EMPTY", value: 305, isUnsigned: true)
!979 = !DIEnumerator(name: "ICON_META_PLANE", value: 306, isUnsigned: true)
!980 = !DIEnumerator(name: "ICON_META_CUBE", value: 307, isUnsigned: true)
!981 = !DIEnumerator(name: "ICON_META_BALL", value: 308, isUnsigned: true)
!982 = !DIEnumerator(name: "ICON_META_ELLIPSOID", value: 309, isUnsigned: true)
!983 = !DIEnumerator(name: "ICON_META_CAPSULE", value: 310, isUnsigned: true)
!984 = !DIEnumerator(name: "ICON_BLANK625", value: 311, isUnsigned: true)
!985 = !DIEnumerator(name: "ICON_SURFACE_NCURVE", value: 312, isUnsigned: true)
!986 = !DIEnumerator(name: "ICON_SURFACE_NCIRCLE", value: 313, isUnsigned: true)
!987 = !DIEnumerator(name: "ICON_SURFACE_NSURFACE", value: 314, isUnsigned: true)
!988 = !DIEnumerator(name: "ICON_SURFACE_NCYLINDER", value: 315, isUnsigned: true)
!989 = !DIEnumerator(name: "ICON_SURFACE_NSPHERE", value: 316, isUnsigned: true)
!990 = !DIEnumerator(name: "ICON_SURFACE_NTORUS", value: 317, isUnsigned: true)
!991 = !DIEnumerator(name: "ICON_BLANK636", value: 318, isUnsigned: true)
!992 = !DIEnumerator(name: "ICON_BLANK637", value: 319, isUnsigned: true)
!993 = !DIEnumerator(name: "ICON_BLANK638", value: 320, isUnsigned: true)
!994 = !DIEnumerator(name: "ICON_CURVE_BEZCURVE", value: 321, isUnsigned: true)
!995 = !DIEnumerator(name: "ICON_CURVE_BEZCIRCLE", value: 322, isUnsigned: true)
!996 = !DIEnumerator(name: "ICON_CURVE_NCURVE", value: 323, isUnsigned: true)
!997 = !DIEnumerator(name: "ICON_CURVE_NCIRCLE", value: 324, isUnsigned: true)
!998 = !DIEnumerator(name: "ICON_CURVE_PATH", value: 325, isUnsigned: true)
!999 = !DIEnumerator(name: "ICON_BLANK644", value: 326, isUnsigned: true)
!1000 = !DIEnumerator(name: "ICON_BLANK645", value: 327, isUnsigned: true)
!1001 = !DIEnumerator(name: "ICON_BLANK646", value: 328, isUnsigned: true)
!1002 = !DIEnumerator(name: "ICON_BLANK647", value: 329, isUnsigned: true)
!1003 = !DIEnumerator(name: "ICON_BLANK648", value: 330, isUnsigned: true)
!1004 = !DIEnumerator(name: "ICON_COLOR_RED", value: 331, isUnsigned: true)
!1005 = !DIEnumerator(name: "ICON_COLOR_GREEN", value: 332, isUnsigned: true)
!1006 = !DIEnumerator(name: "ICON_COLOR_BLUE", value: 333, isUnsigned: true)
!1007 = !DIEnumerator(name: "ICON_TRIA_RIGHT_BAR", value: 334, isUnsigned: true)
!1008 = !DIEnumerator(name: "ICON_TRIA_DOWN_BAR", value: 335, isUnsigned: true)
!1009 = !DIEnumerator(name: "ICON_TRIA_LEFT_BAR", value: 336, isUnsigned: true)
!1010 = !DIEnumerator(name: "ICON_TRIA_UP_BAR", value: 337, isUnsigned: true)
!1011 = !DIEnumerator(name: "ICON_FORCE_FORCE", value: 338, isUnsigned: true)
!1012 = !DIEnumerator(name: "ICON_FORCE_WIND", value: 339, isUnsigned: true)
!1013 = !DIEnumerator(name: "ICON_FORCE_VORTEX", value: 340, isUnsigned: true)
!1014 = !DIEnumerator(name: "ICON_FORCE_MAGNETIC", value: 341, isUnsigned: true)
!1015 = !DIEnumerator(name: "ICON_FORCE_HARMONIC", value: 342, isUnsigned: true)
!1016 = !DIEnumerator(name: "ICON_FORCE_CHARGE", value: 343, isUnsigned: true)
!1017 = !DIEnumerator(name: "ICON_FORCE_LENNARDJONES", value: 344, isUnsigned: true)
!1018 = !DIEnumerator(name: "ICON_FORCE_TEXTURE", value: 345, isUnsigned: true)
!1019 = !DIEnumerator(name: "ICON_FORCE_CURVE", value: 346, isUnsigned: true)
!1020 = !DIEnumerator(name: "ICON_FORCE_BOID", value: 347, isUnsigned: true)
!1021 = !DIEnumerator(name: "ICON_FORCE_TURBULENCE", value: 348, isUnsigned: true)
!1022 = !DIEnumerator(name: "ICON_FORCE_DRAG", value: 349, isUnsigned: true)
!1023 = !DIEnumerator(name: "ICON_FORCE_SMOKEFLOW", value: 350, isUnsigned: true)
!1024 = !DIEnumerator(name: "ICON_BLANK673", value: 351, isUnsigned: true)
!1025 = !DIEnumerator(name: "ICON_BLANK674", value: 352, isUnsigned: true)
!1026 = !DIEnumerator(name: "ICON_BLANK675", value: 353, isUnsigned: true)
!1027 = !DIEnumerator(name: "ICON_BLANK676", value: 354, isUnsigned: true)
!1028 = !DIEnumerator(name: "ICON_BLANK677", value: 355, isUnsigned: true)
!1029 = !DIEnumerator(name: "ICON_BLANK678", value: 356, isUnsigned: true)
!1030 = !DIEnumerator(name: "ICON_BLANK679", value: 357, isUnsigned: true)
!1031 = !DIEnumerator(name: "ICON_BLANK680", value: 358, isUnsigned: true)
!1032 = !DIEnumerator(name: "ICON_BLANK681", value: 359, isUnsigned: true)
!1033 = !DIEnumerator(name: "ICON_BLANK682", value: 360, isUnsigned: true)
!1034 = !DIEnumerator(name: "ICON_BLANK683", value: 361, isUnsigned: true)
!1035 = !DIEnumerator(name: "ICON_BLANK684", value: 362, isUnsigned: true)
!1036 = !DIEnumerator(name: "ICON_BLANK685", value: 363, isUnsigned: true)
!1037 = !DIEnumerator(name: "ICON_BLANK690", value: 364, isUnsigned: true)
!1038 = !DIEnumerator(name: "ICON_BLANK691", value: 365, isUnsigned: true)
!1039 = !DIEnumerator(name: "ICON_BLANK692", value: 366, isUnsigned: true)
!1040 = !DIEnumerator(name: "ICON_BLANK693", value: 367, isUnsigned: true)
!1041 = !DIEnumerator(name: "ICON_BLANK694", value: 368, isUnsigned: true)
!1042 = !DIEnumerator(name: "ICON_BLANK695", value: 369, isUnsigned: true)
!1043 = !DIEnumerator(name: "ICON_BLANK696", value: 370, isUnsigned: true)
!1044 = !DIEnumerator(name: "ICON_BLANK697", value: 371, isUnsigned: true)
!1045 = !DIEnumerator(name: "ICON_BLANK698", value: 372, isUnsigned: true)
!1046 = !DIEnumerator(name: "ICON_BLANK699", value: 373, isUnsigned: true)
!1047 = !DIEnumerator(name: "ICON_BLANK700", value: 374, isUnsigned: true)
!1048 = !DIEnumerator(name: "ICON_BLANK701", value: 375, isUnsigned: true)
!1049 = !DIEnumerator(name: "ICON_BLANK702", value: 376, isUnsigned: true)
!1050 = !DIEnumerator(name: "ICON_BLANK703", value: 377, isUnsigned: true)
!1051 = !DIEnumerator(name: "ICON_BLANK704", value: 378, isUnsigned: true)
!1052 = !DIEnumerator(name: "ICON_BLANK705", value: 379, isUnsigned: true)
!1053 = !DIEnumerator(name: "ICON_BLANK706", value: 380, isUnsigned: true)
!1054 = !DIEnumerator(name: "ICON_BLANK707", value: 381, isUnsigned: true)
!1055 = !DIEnumerator(name: "ICON_BLANK708", value: 382, isUnsigned: true)
!1056 = !DIEnumerator(name: "ICON_BLANK709", value: 383, isUnsigned: true)
!1057 = !DIEnumerator(name: "ICON_BLANK710", value: 384, isUnsigned: true)
!1058 = !DIEnumerator(name: "ICON_BLANK711", value: 385, isUnsigned: true)
!1059 = !DIEnumerator(name: "ICON_BLANK712", value: 386, isUnsigned: true)
!1060 = !DIEnumerator(name: "ICON_BLANK713", value: 387, isUnsigned: true)
!1061 = !DIEnumerator(name: "ICON_BLANK714", value: 388, isUnsigned: true)
!1062 = !DIEnumerator(name: "ICON_BLANK715", value: 389, isUnsigned: true)
!1063 = !DIEnumerator(name: "ICON_BLANK720", value: 390, isUnsigned: true)
!1064 = !DIEnumerator(name: "ICON_BLANK721", value: 391, isUnsigned: true)
!1065 = !DIEnumerator(name: "ICON_BLANK722", value: 392, isUnsigned: true)
!1066 = !DIEnumerator(name: "ICON_BLANK733", value: 393, isUnsigned: true)
!1067 = !DIEnumerator(name: "ICON_BLANK734", value: 394, isUnsigned: true)
!1068 = !DIEnumerator(name: "ICON_BLANK735", value: 395, isUnsigned: true)
!1069 = !DIEnumerator(name: "ICON_BLANK736", value: 396, isUnsigned: true)
!1070 = !DIEnumerator(name: "ICON_BLANK737", value: 397, isUnsigned: true)
!1071 = !DIEnumerator(name: "ICON_BLANK738", value: 398, isUnsigned: true)
!1072 = !DIEnumerator(name: "ICON_BLANK739", value: 399, isUnsigned: true)
!1073 = !DIEnumerator(name: "ICON_BLANK740", value: 400, isUnsigned: true)
!1074 = !DIEnumerator(name: "ICON_BLANK741", value: 401, isUnsigned: true)
!1075 = !DIEnumerator(name: "ICON_BLANK742", value: 402, isUnsigned: true)
!1076 = !DIEnumerator(name: "ICON_BLANK743", value: 403, isUnsigned: true)
!1077 = !DIEnumerator(name: "ICON_BLANK744", value: 404, isUnsigned: true)
!1078 = !DIEnumerator(name: "ICON_BLANK745", value: 405, isUnsigned: true)
!1079 = !DIEnumerator(name: "ICON_BLANK746", value: 406, isUnsigned: true)
!1080 = !DIEnumerator(name: "ICON_BLANK747", value: 407, isUnsigned: true)
!1081 = !DIEnumerator(name: "ICON_BLANK748", value: 408, isUnsigned: true)
!1082 = !DIEnumerator(name: "ICON_BLANK749", value: 409, isUnsigned: true)
!1083 = !DIEnumerator(name: "ICON_BLANK750", value: 410, isUnsigned: true)
!1084 = !DIEnumerator(name: "ICON_BLANK751", value: 411, isUnsigned: true)
!1085 = !DIEnumerator(name: "ICON_BLANK752", value: 412, isUnsigned: true)
!1086 = !DIEnumerator(name: "ICON_BLANK753", value: 413, isUnsigned: true)
!1087 = !DIEnumerator(name: "ICON_BLANK754", value: 414, isUnsigned: true)
!1088 = !DIEnumerator(name: "ICON_BLANK755", value: 415, isUnsigned: true)
!1089 = !DIEnumerator(name: "ICON_BLANK760", value: 416, isUnsigned: true)
!1090 = !DIEnumerator(name: "ICON_BLANK761", value: 417, isUnsigned: true)
!1091 = !DIEnumerator(name: "ICON_BLANK762", value: 418, isUnsigned: true)
!1092 = !DIEnumerator(name: "ICON_BLANK763", value: 419, isUnsigned: true)
!1093 = !DIEnumerator(name: "ICON_BLANK764", value: 420, isUnsigned: true)
!1094 = !DIEnumerator(name: "ICON_BLANK765", value: 421, isUnsigned: true)
!1095 = !DIEnumerator(name: "ICON_BLANK766", value: 422, isUnsigned: true)
!1096 = !DIEnumerator(name: "ICON_BLANK767", value: 423, isUnsigned: true)
!1097 = !DIEnumerator(name: "ICON_BLANK768", value: 424, isUnsigned: true)
!1098 = !DIEnumerator(name: "ICON_BLANK769", value: 425, isUnsigned: true)
!1099 = !DIEnumerator(name: "ICON_BLANK770", value: 426, isUnsigned: true)
!1100 = !DIEnumerator(name: "ICON_BLANK771", value: 427, isUnsigned: true)
!1101 = !DIEnumerator(name: "ICON_BLANK772", value: 428, isUnsigned: true)
!1102 = !DIEnumerator(name: "ICON_BLANK773", value: 429, isUnsigned: true)
!1103 = !DIEnumerator(name: "ICON_BLANK774", value: 430, isUnsigned: true)
!1104 = !DIEnumerator(name: "ICON_BLANK775", value: 431, isUnsigned: true)
!1105 = !DIEnumerator(name: "ICON_BLANK776", value: 432, isUnsigned: true)
!1106 = !DIEnumerator(name: "ICON_BLANK777", value: 433, isUnsigned: true)
!1107 = !DIEnumerator(name: "ICON_BLANK778", value: 434, isUnsigned: true)
!1108 = !DIEnumerator(name: "ICON_BLANK779", value: 435, isUnsigned: true)
!1109 = !DIEnumerator(name: "ICON_BLANK780", value: 436, isUnsigned: true)
!1110 = !DIEnumerator(name: "ICON_BLANK781", value: 437, isUnsigned: true)
!1111 = !DIEnumerator(name: "ICON_BLANK782", value: 438, isUnsigned: true)
!1112 = !DIEnumerator(name: "ICON_BLANK783", value: 439, isUnsigned: true)
!1113 = !DIEnumerator(name: "ICON_BLANK784", value: 440, isUnsigned: true)
!1114 = !DIEnumerator(name: "ICON_BLANK785", value: 441, isUnsigned: true)
!1115 = !DIEnumerator(name: "ICON_MODIFIER", value: 442, isUnsigned: true)
!1116 = !DIEnumerator(name: "ICON_MOD_WAVE", value: 443, isUnsigned: true)
!1117 = !DIEnumerator(name: "ICON_MOD_BUILD", value: 444, isUnsigned: true)
!1118 = !DIEnumerator(name: "ICON_MOD_DECIM", value: 445, isUnsigned: true)
!1119 = !DIEnumerator(name: "ICON_MOD_MIRROR", value: 446, isUnsigned: true)
!1120 = !DIEnumerator(name: "ICON_MOD_SOFT", value: 447, isUnsigned: true)
!1121 = !DIEnumerator(name: "ICON_MOD_SUBSURF", value: 448, isUnsigned: true)
!1122 = !DIEnumerator(name: "ICON_HOOK", value: 449, isUnsigned: true)
!1123 = !DIEnumerator(name: "ICON_MOD_PHYSICS", value: 450, isUnsigned: true)
!1124 = !DIEnumerator(name: "ICON_MOD_PARTICLES", value: 451, isUnsigned: true)
!1125 = !DIEnumerator(name: "ICON_MOD_BOOLEAN", value: 452, isUnsigned: true)
!1126 = !DIEnumerator(name: "ICON_MOD_EDGESPLIT", value: 453, isUnsigned: true)
!1127 = !DIEnumerator(name: "ICON_MOD_ARRAY", value: 454, isUnsigned: true)
!1128 = !DIEnumerator(name: "ICON_MOD_UVPROJECT", value: 455, isUnsigned: true)
!1129 = !DIEnumerator(name: "ICON_MOD_DISPLACE", value: 456, isUnsigned: true)
!1130 = !DIEnumerator(name: "ICON_MOD_CURVE", value: 457, isUnsigned: true)
!1131 = !DIEnumerator(name: "ICON_MOD_LATTICE", value: 458, isUnsigned: true)
!1132 = !DIEnumerator(name: "ICON_CONSTRAINT_DATA", value: 459, isUnsigned: true)
!1133 = !DIEnumerator(name: "ICON_MOD_ARMATURE", value: 460, isUnsigned: true)
!1134 = !DIEnumerator(name: "ICON_MOD_SHRINKWRAP", value: 461, isUnsigned: true)
!1135 = !DIEnumerator(name: "ICON_MOD_CAST", value: 462, isUnsigned: true)
!1136 = !DIEnumerator(name: "ICON_MOD_MESHDEFORM", value: 463, isUnsigned: true)
!1137 = !DIEnumerator(name: "ICON_MOD_BEVEL", value: 464, isUnsigned: true)
!1138 = !DIEnumerator(name: "ICON_MOD_SMOOTH", value: 465, isUnsigned: true)
!1139 = !DIEnumerator(name: "ICON_MOD_SIMPLEDEFORM", value: 466, isUnsigned: true)
!1140 = !DIEnumerator(name: "ICON_MOD_MASK", value: 467, isUnsigned: true)
!1141 = !DIEnumerator(name: "ICON_MOD_CLOTH", value: 468, isUnsigned: true)
!1142 = !DIEnumerator(name: "ICON_MOD_EXPLODE", value: 469, isUnsigned: true)
!1143 = !DIEnumerator(name: "ICON_MOD_FLUIDSIM", value: 470, isUnsigned: true)
!1144 = !DIEnumerator(name: "ICON_MOD_MULTIRES", value: 471, isUnsigned: true)
!1145 = !DIEnumerator(name: "ICON_MOD_SMOKE", value: 472, isUnsigned: true)
!1146 = !DIEnumerator(name: "ICON_MOD_SOLIDIFY", value: 473, isUnsigned: true)
!1147 = !DIEnumerator(name: "ICON_MOD_SCREW", value: 474, isUnsigned: true)
!1148 = !DIEnumerator(name: "ICON_MOD_VERTEX_WEIGHT", value: 475, isUnsigned: true)
!1149 = !DIEnumerator(name: "ICON_MOD_DYNAMICPAINT", value: 476, isUnsigned: true)
!1150 = !DIEnumerator(name: "ICON_MOD_REMESH", value: 477, isUnsigned: true)
!1151 = !DIEnumerator(name: "ICON_MOD_OCEAN", value: 478, isUnsigned: true)
!1152 = !DIEnumerator(name: "ICON_MOD_WARP", value: 479, isUnsigned: true)
!1153 = !DIEnumerator(name: "ICON_MOD_SKIN", value: 480, isUnsigned: true)
!1154 = !DIEnumerator(name: "ICON_MOD_TRIANGULATE", value: 481, isUnsigned: true)
!1155 = !DIEnumerator(name: "ICON_MOD_WIREFRAME", value: 482, isUnsigned: true)
!1156 = !DIEnumerator(name: "ICON_BLANK167", value: 483, isUnsigned: true)
!1157 = !DIEnumerator(name: "ICON_BLANK168", value: 484, isUnsigned: true)
!1158 = !DIEnumerator(name: "ICON_BLANK169", value: 485, isUnsigned: true)
!1159 = !DIEnumerator(name: "ICON_BLANK170", value: 486, isUnsigned: true)
!1160 = !DIEnumerator(name: "ICON_BLANK171", value: 487, isUnsigned: true)
!1161 = !DIEnumerator(name: "ICON_BLANK172", value: 488, isUnsigned: true)
!1162 = !DIEnumerator(name: "ICON_BLANK173", value: 489, isUnsigned: true)
!1163 = !DIEnumerator(name: "ICON_BLANK174", value: 490, isUnsigned: true)
!1164 = !DIEnumerator(name: "ICON_BLANK175", value: 491, isUnsigned: true)
!1165 = !DIEnumerator(name: "ICON_BLANK176", value: 492, isUnsigned: true)
!1166 = !DIEnumerator(name: "ICON_BLANK177", value: 493, isUnsigned: true)
!1167 = !DIEnumerator(name: "ICON_REC", value: 494, isUnsigned: true)
!1168 = !DIEnumerator(name: "ICON_PLAY", value: 495, isUnsigned: true)
!1169 = !DIEnumerator(name: "ICON_FF", value: 496, isUnsigned: true)
!1170 = !DIEnumerator(name: "ICON_REW", value: 497, isUnsigned: true)
!1171 = !DIEnumerator(name: "ICON_PAUSE", value: 498, isUnsigned: true)
!1172 = !DIEnumerator(name: "ICON_PREV_KEYFRAME", value: 499, isUnsigned: true)
!1173 = !DIEnumerator(name: "ICON_NEXT_KEYFRAME", value: 500, isUnsigned: true)
!1174 = !DIEnumerator(name: "ICON_PLAY_AUDIO", value: 501, isUnsigned: true)
!1175 = !DIEnumerator(name: "ICON_PLAY_REVERSE", value: 502, isUnsigned: true)
!1176 = !DIEnumerator(name: "ICON_PREVIEW_RANGE", value: 503, isUnsigned: true)
!1177 = !DIEnumerator(name: "ICON_ACTION_TWEAK", value: 504, isUnsigned: true)
!1178 = !DIEnumerator(name: "ICON_PMARKER_ACT", value: 505, isUnsigned: true)
!1179 = !DIEnumerator(name: "ICON_PMARKER_SEL", value: 506, isUnsigned: true)
!1180 = !DIEnumerator(name: "ICON_PMARKER", value: 507, isUnsigned: true)
!1181 = !DIEnumerator(name: "ICON_MARKER_HLT", value: 508, isUnsigned: true)
!1182 = !DIEnumerator(name: "ICON_MARKER", value: 509, isUnsigned: true)
!1183 = !DIEnumerator(name: "ICON_SPACE2", value: 510, isUnsigned: true)
!1184 = !DIEnumerator(name: "ICON_SPACE3", value: 511, isUnsigned: true)
!1185 = !DIEnumerator(name: "ICON_KEYINGSET", value: 512, isUnsigned: true)
!1186 = !DIEnumerator(name: "ICON_KEY_DEHLT", value: 513, isUnsigned: true)
!1187 = !DIEnumerator(name: "ICON_KEY_HLT", value: 514, isUnsigned: true)
!1188 = !DIEnumerator(name: "ICON_MUTE_IPO_OFF", value: 515, isUnsigned: true)
!1189 = !DIEnumerator(name: "ICON_MUTE_IPO_ON", value: 516, isUnsigned: true)
!1190 = !DIEnumerator(name: "ICON_VISIBLE_IPO_OFF", value: 517, isUnsigned: true)
!1191 = !DIEnumerator(name: "ICON_VISIBLE_IPO_ON", value: 518, isUnsigned: true)
!1192 = !DIEnumerator(name: "ICON_DRIVER", value: 519, isUnsigned: true)
!1193 = !DIEnumerator(name: "ICON_SOLO_OFF", value: 520, isUnsigned: true)
!1194 = !DIEnumerator(name: "ICON_SOLO_ON", value: 521, isUnsigned: true)
!1195 = !DIEnumerator(name: "ICON_FRAME_PREV", value: 522, isUnsigned: true)
!1196 = !DIEnumerator(name: "ICON_FRAME_NEXT", value: 523, isUnsigned: true)
!1197 = !DIEnumerator(name: "ICON_NLA_PUSHDOWN", value: 524, isUnsigned: true)
!1198 = !DIEnumerator(name: "ICON_IPO_CONSTANT", value: 525, isUnsigned: true)
!1199 = !DIEnumerator(name: "ICON_IPO_LINEAR", value: 526, isUnsigned: true)
!1200 = !DIEnumerator(name: "ICON_IPO_BEZIER", value: 527, isUnsigned: true)
!1201 = !DIEnumerator(name: "ICON_IPO_SINE", value: 528, isUnsigned: true)
!1202 = !DIEnumerator(name: "ICON_IPO_QUAD", value: 529, isUnsigned: true)
!1203 = !DIEnumerator(name: "ICON_IPO_CUBIC", value: 530, isUnsigned: true)
!1204 = !DIEnumerator(name: "ICON_IPO_QUART", value: 531, isUnsigned: true)
!1205 = !DIEnumerator(name: "ICON_IPO_QUINT", value: 532, isUnsigned: true)
!1206 = !DIEnumerator(name: "ICON_IPO_EXPO", value: 533, isUnsigned: true)
!1207 = !DIEnumerator(name: "ICON_IPO_CIRC", value: 534, isUnsigned: true)
!1208 = !DIEnumerator(name: "ICON_IPO_BOUNCE", value: 535, isUnsigned: true)
!1209 = !DIEnumerator(name: "ICON_IPO_ELASTIC", value: 536, isUnsigned: true)
!1210 = !DIEnumerator(name: "ICON_IPO_BACK", value: 537, isUnsigned: true)
!1211 = !DIEnumerator(name: "ICON_IPO_EASE_IN", value: 538, isUnsigned: true)
!1212 = !DIEnumerator(name: "ICON_IPO_EASE_OUT", value: 539, isUnsigned: true)
!1213 = !DIEnumerator(name: "ICON_IPO_EASE_IN_OUT", value: 540, isUnsigned: true)
!1214 = !DIEnumerator(name: "ICON_BLANK203", value: 541, isUnsigned: true)
!1215 = !DIEnumerator(name: "ICON_BLANK204", value: 542, isUnsigned: true)
!1216 = !DIEnumerator(name: "ICON_BLANK205", value: 543, isUnsigned: true)
!1217 = !DIEnumerator(name: "ICON_BLANK206", value: 544, isUnsigned: true)
!1218 = !DIEnumerator(name: "ICON_BLANK207", value: 545, isUnsigned: true)
!1219 = !DIEnumerator(name: "ICON_VERTEXSEL", value: 546, isUnsigned: true)
!1220 = !DIEnumerator(name: "ICON_EDGESEL", value: 547, isUnsigned: true)
!1221 = !DIEnumerator(name: "ICON_FACESEL", value: 548, isUnsigned: true)
!1222 = !DIEnumerator(name: "ICON_LOOPSEL", value: 549, isUnsigned: true)
!1223 = !DIEnumerator(name: "ICON_BLANK210", value: 550, isUnsigned: true)
!1224 = !DIEnumerator(name: "ICON_ROTATE", value: 551, isUnsigned: true)
!1225 = !DIEnumerator(name: "ICON_CURSOR", value: 552, isUnsigned: true)
!1226 = !DIEnumerator(name: "ICON_ROTATECOLLECTION", value: 553, isUnsigned: true)
!1227 = !DIEnumerator(name: "ICON_ROTATECENTER", value: 554, isUnsigned: true)
!1228 = !DIEnumerator(name: "ICON_ROTACTIVE", value: 555, isUnsigned: true)
!1229 = !DIEnumerator(name: "ICON_ALIGN", value: 556, isUnsigned: true)
!1230 = !DIEnumerator(name: "ICON_BLANK211", value: 557, isUnsigned: true)
!1231 = !DIEnumerator(name: "ICON_SMOOTHCURVE", value: 558, isUnsigned: true)
!1232 = !DIEnumerator(name: "ICON_SPHERECURVE", value: 559, isUnsigned: true)
!1233 = !DIEnumerator(name: "ICON_ROOTCURVE", value: 560, isUnsigned: true)
!1234 = !DIEnumerator(name: "ICON_SHARPCURVE", value: 561, isUnsigned: true)
!1235 = !DIEnumerator(name: "ICON_LINCURVE", value: 562, isUnsigned: true)
!1236 = !DIEnumerator(name: "ICON_NOCURVE", value: 563, isUnsigned: true)
!1237 = !DIEnumerator(name: "ICON_RNDCURVE", value: 564, isUnsigned: true)
!1238 = !DIEnumerator(name: "ICON_PROP_OFF", value: 565, isUnsigned: true)
!1239 = !DIEnumerator(name: "ICON_PROP_ON", value: 566, isUnsigned: true)
!1240 = !DIEnumerator(name: "ICON_PROP_CON", value: 567, isUnsigned: true)
!1241 = !DIEnumerator(name: "ICON_SCULPT_DYNTOPO", value: 568, isUnsigned: true)
!1242 = !DIEnumerator(name: "ICON_PARTICLE_POINT", value: 569, isUnsigned: true)
!1243 = !DIEnumerator(name: "ICON_PARTICLE_TIP", value: 570, isUnsigned: true)
!1244 = !DIEnumerator(name: "ICON_PARTICLE_PATH", value: 571, isUnsigned: true)
!1245 = !DIEnumerator(name: "ICON_MAN_TRANS", value: 572, isUnsigned: true)
!1246 = !DIEnumerator(name: "ICON_MAN_ROT", value: 573, isUnsigned: true)
!1247 = !DIEnumerator(name: "ICON_MAN_SCALE", value: 574, isUnsigned: true)
!1248 = !DIEnumerator(name: "ICON_MANIPUL", value: 575, isUnsigned: true)
!1249 = !DIEnumerator(name: "ICON_SNAP_OFF", value: 576, isUnsigned: true)
!1250 = !DIEnumerator(name: "ICON_SNAP_ON", value: 577, isUnsigned: true)
!1251 = !DIEnumerator(name: "ICON_SNAP_NORMAL", value: 578, isUnsigned: true)
!1252 = !DIEnumerator(name: "ICON_SNAP_INCREMENT", value: 579, isUnsigned: true)
!1253 = !DIEnumerator(name: "ICON_SNAP_VERTEX", value: 580, isUnsigned: true)
!1254 = !DIEnumerator(name: "ICON_SNAP_EDGE", value: 581, isUnsigned: true)
!1255 = !DIEnumerator(name: "ICON_SNAP_FACE", value: 582, isUnsigned: true)
!1256 = !DIEnumerator(name: "ICON_SNAP_VOLUME", value: 583, isUnsigned: true)
!1257 = !DIEnumerator(name: "ICON_BLANK220", value: 584, isUnsigned: true)
!1258 = !DIEnumerator(name: "ICON_STICKY_UVS_LOC", value: 585, isUnsigned: true)
!1259 = !DIEnumerator(name: "ICON_STICKY_UVS_DISABLE", value: 586, isUnsigned: true)
!1260 = !DIEnumerator(name: "ICON_STICKY_UVS_VERT", value: 587, isUnsigned: true)
!1261 = !DIEnumerator(name: "ICON_CLIPUV_DEHLT", value: 588, isUnsigned: true)
!1262 = !DIEnumerator(name: "ICON_CLIPUV_HLT", value: 589, isUnsigned: true)
!1263 = !DIEnumerator(name: "ICON_SNAP_PEEL_OBJECT", value: 590, isUnsigned: true)
!1264 = !DIEnumerator(name: "ICON_GRID", value: 591, isUnsigned: true)
!1265 = !DIEnumerator(name: "ICON_BLANK221", value: 592, isUnsigned: true)
!1266 = !DIEnumerator(name: "ICON_BLANK222", value: 593, isUnsigned: true)
!1267 = !DIEnumerator(name: "ICON_BLANK224", value: 594, isUnsigned: true)
!1268 = !DIEnumerator(name: "ICON_BLANK225", value: 595, isUnsigned: true)
!1269 = !DIEnumerator(name: "ICON_BLANK226", value: 596, isUnsigned: true)
!1270 = !DIEnumerator(name: "ICON_BLANK226b", value: 597, isUnsigned: true)
!1271 = !DIEnumerator(name: "ICON_PASTEDOWN", value: 598, isUnsigned: true)
!1272 = !DIEnumerator(name: "ICON_COPYDOWN", value: 599, isUnsigned: true)
!1273 = !DIEnumerator(name: "ICON_PASTEFLIPUP", value: 600, isUnsigned: true)
!1274 = !DIEnumerator(name: "ICON_PASTEFLIPDOWN", value: 601, isUnsigned: true)
!1275 = !DIEnumerator(name: "ICON_BLANK227", value: 602, isUnsigned: true)
!1276 = !DIEnumerator(name: "ICON_BLANK228", value: 603, isUnsigned: true)
!1277 = !DIEnumerator(name: "ICON_BLANK229", value: 604, isUnsigned: true)
!1278 = !DIEnumerator(name: "ICON_BLANK230", value: 605, isUnsigned: true)
!1279 = !DIEnumerator(name: "ICON_SNAP_SURFACE", value: 606, isUnsigned: true)
!1280 = !DIEnumerator(name: "ICON_AUTOMERGE_ON", value: 607, isUnsigned: true)
!1281 = !DIEnumerator(name: "ICON_AUTOMERGE_OFF", value: 608, isUnsigned: true)
!1282 = !DIEnumerator(name: "ICON_RETOPO", value: 609, isUnsigned: true)
!1283 = !DIEnumerator(name: "ICON_UV_VERTEXSEL", value: 610, isUnsigned: true)
!1284 = !DIEnumerator(name: "ICON_UV_EDGESEL", value: 611, isUnsigned: true)
!1285 = !DIEnumerator(name: "ICON_UV_FACESEL", value: 612, isUnsigned: true)
!1286 = !DIEnumerator(name: "ICON_UV_ISLANDSEL", value: 613, isUnsigned: true)
!1287 = !DIEnumerator(name: "ICON_UV_SYNC_SELECT", value: 614, isUnsigned: true)
!1288 = !DIEnumerator(name: "ICON_BLANK240", value: 615, isUnsigned: true)
!1289 = !DIEnumerator(name: "ICON_BLANK241", value: 616, isUnsigned: true)
!1290 = !DIEnumerator(name: "ICON_BLANK242", value: 617, isUnsigned: true)
!1291 = !DIEnumerator(name: "ICON_BLANK243", value: 618, isUnsigned: true)
!1292 = !DIEnumerator(name: "ICON_BLANK244", value: 619, isUnsigned: true)
!1293 = !DIEnumerator(name: "ICON_BLANK245", value: 620, isUnsigned: true)
!1294 = !DIEnumerator(name: "ICON_BLANK246", value: 621, isUnsigned: true)
!1295 = !DIEnumerator(name: "ICON_BLANK247", value: 622, isUnsigned: true)
!1296 = !DIEnumerator(name: "ICON_BLANK247b", value: 623, isUnsigned: true)
!1297 = !DIEnumerator(name: "ICON_BBOX", value: 624, isUnsigned: true)
!1298 = !DIEnumerator(name: "ICON_WIRE", value: 625, isUnsigned: true)
!1299 = !DIEnumerator(name: "ICON_SOLID", value: 626, isUnsigned: true)
!1300 = !DIEnumerator(name: "ICON_SMOOTH", value: 627, isUnsigned: true)
!1301 = !DIEnumerator(name: "ICON_POTATO", value: 628, isUnsigned: true)
!1302 = !DIEnumerator(name: "ICON_BLANK248", value: 629, isUnsigned: true)
!1303 = !DIEnumerator(name: "ICON_ORTHO", value: 630, isUnsigned: true)
!1304 = !DIEnumerator(name: "ICON_BLANK249", value: 631, isUnsigned: true)
!1305 = !DIEnumerator(name: "ICON_BLANK250", value: 632, isUnsigned: true)
!1306 = !DIEnumerator(name: "ICON_LOCKVIEW_OFF", value: 633, isUnsigned: true)
!1307 = !DIEnumerator(name: "ICON_LOCKVIEW_ON", value: 634, isUnsigned: true)
!1308 = !DIEnumerator(name: "ICON_BLANK251", value: 635, isUnsigned: true)
!1309 = !DIEnumerator(name: "ICON_AXIS_SIDE", value: 636, isUnsigned: true)
!1310 = !DIEnumerator(name: "ICON_AXIS_FRONT", value: 637, isUnsigned: true)
!1311 = !DIEnumerator(name: "ICON_AXIS_TOP", value: 638, isUnsigned: true)
!1312 = !DIEnumerator(name: "ICON_NDOF_DOM", value: 639, isUnsigned: true)
!1313 = !DIEnumerator(name: "ICON_NDOF_TURN", value: 640, isUnsigned: true)
!1314 = !DIEnumerator(name: "ICON_NDOF_FLY", value: 641, isUnsigned: true)
!1315 = !DIEnumerator(name: "ICON_NDOF_TRANS", value: 642, isUnsigned: true)
!1316 = !DIEnumerator(name: "ICON_LAYER_USED", value: 643, isUnsigned: true)
!1317 = !DIEnumerator(name: "ICON_LAYER_ACTIVE", value: 644, isUnsigned: true)
!1318 = !DIEnumerator(name: "ICON_BLANK254", value: 645, isUnsigned: true)
!1319 = !DIEnumerator(name: "ICON_BLANK255", value: 646, isUnsigned: true)
!1320 = !DIEnumerator(name: "ICON_BLANK256", value: 647, isUnsigned: true)
!1321 = !DIEnumerator(name: "ICON_BLANK257", value: 648, isUnsigned: true)
!1322 = !DIEnumerator(name: "ICON_BLANK257b", value: 649, isUnsigned: true)
!1323 = !DIEnumerator(name: "ICON_BLANK258", value: 650, isUnsigned: true)
!1324 = !DIEnumerator(name: "ICON_BLANK259", value: 651, isUnsigned: true)
!1325 = !DIEnumerator(name: "ICON_BLANK260", value: 652, isUnsigned: true)
!1326 = !DIEnumerator(name: "ICON_BLANK261", value: 653, isUnsigned: true)
!1327 = !DIEnumerator(name: "ICON_BLANK262", value: 654, isUnsigned: true)
!1328 = !DIEnumerator(name: "ICON_BLANK263", value: 655, isUnsigned: true)
!1329 = !DIEnumerator(name: "ICON_BLANK264", value: 656, isUnsigned: true)
!1330 = !DIEnumerator(name: "ICON_BLANK265", value: 657, isUnsigned: true)
!1331 = !DIEnumerator(name: "ICON_BLANK266", value: 658, isUnsigned: true)
!1332 = !DIEnumerator(name: "ICON_BLANK267", value: 659, isUnsigned: true)
!1333 = !DIEnumerator(name: "ICON_BLANK268", value: 660, isUnsigned: true)
!1334 = !DIEnumerator(name: "ICON_BLANK269", value: 661, isUnsigned: true)
!1335 = !DIEnumerator(name: "ICON_BLANK270", value: 662, isUnsigned: true)
!1336 = !DIEnumerator(name: "ICON_BLANK271", value: 663, isUnsigned: true)
!1337 = !DIEnumerator(name: "ICON_BLANK272", value: 664, isUnsigned: true)
!1338 = !DIEnumerator(name: "ICON_BLANK273", value: 665, isUnsigned: true)
!1339 = !DIEnumerator(name: "ICON_BLANK274", value: 666, isUnsigned: true)
!1340 = !DIEnumerator(name: "ICON_BLANK275", value: 667, isUnsigned: true)
!1341 = !DIEnumerator(name: "ICON_BLANK276", value: 668, isUnsigned: true)
!1342 = !DIEnumerator(name: "ICON_BLANK277", value: 669, isUnsigned: true)
!1343 = !DIEnumerator(name: "ICON_BLANK278", value: 670, isUnsigned: true)
!1344 = !DIEnumerator(name: "ICON_BLANK279", value: 671, isUnsigned: true)
!1345 = !DIEnumerator(name: "ICON_BLANK280", value: 672, isUnsigned: true)
!1346 = !DIEnumerator(name: "ICON_BLANK281", value: 673, isUnsigned: true)
!1347 = !DIEnumerator(name: "ICON_BLANK282", value: 674, isUnsigned: true)
!1348 = !DIEnumerator(name: "ICON_BLANK282b", value: 675, isUnsigned: true)
!1349 = !DIEnumerator(name: "ICON_SORTALPHA", value: 676, isUnsigned: true)
!1350 = !DIEnumerator(name: "ICON_SORTBYEXT", value: 677, isUnsigned: true)
!1351 = !DIEnumerator(name: "ICON_SORTTIME", value: 678, isUnsigned: true)
!1352 = !DIEnumerator(name: "ICON_SORTSIZE", value: 679, isUnsigned: true)
!1353 = !DIEnumerator(name: "ICON_LONGDISPLAY", value: 680, isUnsigned: true)
!1354 = !DIEnumerator(name: "ICON_SHORTDISPLAY", value: 681, isUnsigned: true)
!1355 = !DIEnumerator(name: "ICON_GHOST", value: 682, isUnsigned: true)
!1356 = !DIEnumerator(name: "ICON_IMGDISPLAY", value: 683, isUnsigned: true)
!1357 = !DIEnumerator(name: "ICON_SAVE_AS", value: 684, isUnsigned: true)
!1358 = !DIEnumerator(name: "ICON_SAVE_COPY", value: 685, isUnsigned: true)
!1359 = !DIEnumerator(name: "ICON_BOOKMARKS", value: 686, isUnsigned: true)
!1360 = !DIEnumerator(name: "ICON_FONTPREVIEW", value: 687, isUnsigned: true)
!1361 = !DIEnumerator(name: "ICON_FILTER", value: 688, isUnsigned: true)
!1362 = !DIEnumerator(name: "ICON_NEWFOLDER", value: 689, isUnsigned: true)
!1363 = !DIEnumerator(name: "ICON_OPEN_RECENT", value: 690, isUnsigned: true)
!1364 = !DIEnumerator(name: "ICON_FILE_PARENT", value: 691, isUnsigned: true)
!1365 = !DIEnumerator(name: "ICON_FILE_REFRESH", value: 692, isUnsigned: true)
!1366 = !DIEnumerator(name: "ICON_FILE_FOLDER", value: 693, isUnsigned: true)
!1367 = !DIEnumerator(name: "ICON_FILE_BLANK", value: 694, isUnsigned: true)
!1368 = !DIEnumerator(name: "ICON_FILE_BLEND", value: 695, isUnsigned: true)
!1369 = !DIEnumerator(name: "ICON_FILE_IMAGE", value: 696, isUnsigned: true)
!1370 = !DIEnumerator(name: "ICON_FILE_MOVIE", value: 697, isUnsigned: true)
!1371 = !DIEnumerator(name: "ICON_FILE_SCRIPT", value: 698, isUnsigned: true)
!1372 = !DIEnumerator(name: "ICON_FILE_SOUND", value: 699, isUnsigned: true)
!1373 = !DIEnumerator(name: "ICON_FILE_FONT", value: 700, isUnsigned: true)
!1374 = !DIEnumerator(name: "ICON_FILE_TEXT", value: 701, isUnsigned: true)
!1375 = !DIEnumerator(name: "ICON_RECOVER_AUTO", value: 702, isUnsigned: true)
!1376 = !DIEnumerator(name: "ICON_SAVE_PREFS", value: 703, isUnsigned: true)
!1377 = !DIEnumerator(name: "ICON_LINK_BLEND", value: 704, isUnsigned: true)
!1378 = !DIEnumerator(name: "ICON_APPEND_BLEND", value: 705, isUnsigned: true)
!1379 = !DIEnumerator(name: "ICON_IMPORT", value: 706, isUnsigned: true)
!1380 = !DIEnumerator(name: "ICON_EXPORT", value: 707, isUnsigned: true)
!1381 = !DIEnumerator(name: "ICON_EXTERNAL_DATA", value: 708, isUnsigned: true)
!1382 = !DIEnumerator(name: "ICON_LOAD_FACTORY", value: 709, isUnsigned: true)
!1383 = !DIEnumerator(name: "ICON_BLANK300", value: 710, isUnsigned: true)
!1384 = !DIEnumerator(name: "ICON_BLANK301", value: 711, isUnsigned: true)
!1385 = !DIEnumerator(name: "ICON_BLANK302", value: 712, isUnsigned: true)
!1386 = !DIEnumerator(name: "ICON_BLANK303", value: 713, isUnsigned: true)
!1387 = !DIEnumerator(name: "ICON_BLANK304", value: 714, isUnsigned: true)
!1388 = !DIEnumerator(name: "ICON_LOOP_BACK", value: 715, isUnsigned: true)
!1389 = !DIEnumerator(name: "ICON_LOOP_FORWARDS", value: 716, isUnsigned: true)
!1390 = !DIEnumerator(name: "ICON_BACK", value: 717, isUnsigned: true)
!1391 = !DIEnumerator(name: "ICON_FORWARD", value: 718, isUnsigned: true)
!1392 = !DIEnumerator(name: "ICON_BLANK309", value: 719, isUnsigned: true)
!1393 = !DIEnumerator(name: "ICON_BLANK310", value: 720, isUnsigned: true)
!1394 = !DIEnumerator(name: "ICON_BLANK311", value: 721, isUnsigned: true)
!1395 = !DIEnumerator(name: "ICON_BLANK312", value: 722, isUnsigned: true)
!1396 = !DIEnumerator(name: "ICON_BLANK313", value: 723, isUnsigned: true)
!1397 = !DIEnumerator(name: "ICON_BLANK314", value: 724, isUnsigned: true)
!1398 = !DIEnumerator(name: "ICON_BLANK315", value: 725, isUnsigned: true)
!1399 = !DIEnumerator(name: "ICON_FILE_BACKUP", value: 726, isUnsigned: true)
!1400 = !DIEnumerator(name: "ICON_DISK_DRIVE", value: 727, isUnsigned: true)
!1401 = !DIEnumerator(name: "ICON_MATPLANE", value: 728, isUnsigned: true)
!1402 = !DIEnumerator(name: "ICON_MATSPHERE", value: 729, isUnsigned: true)
!1403 = !DIEnumerator(name: "ICON_MATCUBE", value: 730, isUnsigned: true)
!1404 = !DIEnumerator(name: "ICON_MONKEY", value: 731, isUnsigned: true)
!1405 = !DIEnumerator(name: "ICON_HAIR", value: 732, isUnsigned: true)
!1406 = !DIEnumerator(name: "ICON_ALIASED", value: 733, isUnsigned: true)
!1407 = !DIEnumerator(name: "ICON_ANTIALIASED", value: 734, isUnsigned: true)
!1408 = !DIEnumerator(name: "ICON_MAT_SPHERE_SKY", value: 735, isUnsigned: true)
!1409 = !DIEnumerator(name: "ICON_BLANK319", value: 736, isUnsigned: true)
!1410 = !DIEnumerator(name: "ICON_BLANK320", value: 737, isUnsigned: true)
!1411 = !DIEnumerator(name: "ICON_BLANK321", value: 738, isUnsigned: true)
!1412 = !DIEnumerator(name: "ICON_BLANK322", value: 739, isUnsigned: true)
!1413 = !DIEnumerator(name: "ICON_WORDWRAP_OFF", value: 740, isUnsigned: true)
!1414 = !DIEnumerator(name: "ICON_WORDWRAP_ON", value: 741, isUnsigned: true)
!1415 = !DIEnumerator(name: "ICON_SYNTAX_OFF", value: 742, isUnsigned: true)
!1416 = !DIEnumerator(name: "ICON_SYNTAX_ON", value: 743, isUnsigned: true)
!1417 = !DIEnumerator(name: "ICON_LINENUMBERS_OFF", value: 744, isUnsigned: true)
!1418 = !DIEnumerator(name: "ICON_LINENUMBERS_ON", value: 745, isUnsigned: true)
!1419 = !DIEnumerator(name: "ICON_SCRIPTPLUGINS", value: 746, isUnsigned: true)
!1420 = !DIEnumerator(name: "ICON_BLANK323", value: 747, isUnsigned: true)
!1421 = !DIEnumerator(name: "ICON_BLANK324", value: 748, isUnsigned: true)
!1422 = !DIEnumerator(name: "ICON_BLANK325", value: 749, isUnsigned: true)
!1423 = !DIEnumerator(name: "ICON_BLANK326", value: 750, isUnsigned: true)
!1424 = !DIEnumerator(name: "ICON_BLANK327", value: 751, isUnsigned: true)
!1425 = !DIEnumerator(name: "ICON_BLANK328", value: 752, isUnsigned: true)
!1426 = !DIEnumerator(name: "ICON_BLANK328b", value: 753, isUnsigned: true)
!1427 = !DIEnumerator(name: "ICON_SEQ_SEQUENCER", value: 754, isUnsigned: true)
!1428 = !DIEnumerator(name: "ICON_SEQ_PREVIEW", value: 755, isUnsigned: true)
!1429 = !DIEnumerator(name: "ICON_SEQ_LUMA_WAVEFORM", value: 756, isUnsigned: true)
!1430 = !DIEnumerator(name: "ICON_SEQ_CHROMA_SCOPE", value: 757, isUnsigned: true)
!1431 = !DIEnumerator(name: "ICON_SEQ_HISTOGRAM", value: 758, isUnsigned: true)
!1432 = !DIEnumerator(name: "ICON_SEQ_SPLITVIEW", value: 759, isUnsigned: true)
!1433 = !DIEnumerator(name: "ICON_BLANK331", value: 760, isUnsigned: true)
!1434 = !DIEnumerator(name: "ICON_BLANK332", value: 761, isUnsigned: true)
!1435 = !DIEnumerator(name: "ICON_BLANK333", value: 762, isUnsigned: true)
!1436 = !DIEnumerator(name: "ICON_IMAGE_RGB", value: 763, isUnsigned: true)
!1437 = !DIEnumerator(name: "ICON_IMAGE_RGB_ALPHA", value: 764, isUnsigned: true)
!1438 = !DIEnumerator(name: "ICON_IMAGE_ALPHA", value: 765, isUnsigned: true)
!1439 = !DIEnumerator(name: "ICON_IMAGE_ZDEPTH", value: 766, isUnsigned: true)
!1440 = !DIEnumerator(name: "ICON_IMAGEFILE", value: 767, isUnsigned: true)
!1441 = !DIEnumerator(name: "ICON_BLANK336", value: 768, isUnsigned: true)
!1442 = !DIEnumerator(name: "ICON_BLANK337", value: 769, isUnsigned: true)
!1443 = !DIEnumerator(name: "ICON_BLANK338", value: 770, isUnsigned: true)
!1444 = !DIEnumerator(name: "ICON_BLANK339", value: 771, isUnsigned: true)
!1445 = !DIEnumerator(name: "ICON_BLANK340", value: 772, isUnsigned: true)
!1446 = !DIEnumerator(name: "ICON_BLANK341", value: 773, isUnsigned: true)
!1447 = !DIEnumerator(name: "ICON_BLANK342", value: 774, isUnsigned: true)
!1448 = !DIEnumerator(name: "ICON_BLANK343", value: 775, isUnsigned: true)
!1449 = !DIEnumerator(name: "ICON_BLANK344", value: 776, isUnsigned: true)
!1450 = !DIEnumerator(name: "ICON_BLANK345", value: 777, isUnsigned: true)
!1451 = !DIEnumerator(name: "ICON_BLANK346", value: 778, isUnsigned: true)
!1452 = !DIEnumerator(name: "ICON_BLANK346b", value: 779, isUnsigned: true)
!1453 = !DIEnumerator(name: "ICON_BRUSH_ADD", value: 780, isUnsigned: true)
!1454 = !DIEnumerator(name: "ICON_BRUSH_BLOB", value: 781, isUnsigned: true)
!1455 = !DIEnumerator(name: "ICON_BRUSH_BLUR", value: 782, isUnsigned: true)
!1456 = !DIEnumerator(name: "ICON_BRUSH_CLAY", value: 783, isUnsigned: true)
!1457 = !DIEnumerator(name: "ICON_BRUSH_CLAY_STRIPS", value: 784, isUnsigned: true)
!1458 = !DIEnumerator(name: "ICON_BRUSH_CLONE", value: 785, isUnsigned: true)
!1459 = !DIEnumerator(name: "ICON_BRUSH_CREASE", value: 786, isUnsigned: true)
!1460 = !DIEnumerator(name: "ICON_BRUSH_DARKEN", value: 787, isUnsigned: true)
!1461 = !DIEnumerator(name: "ICON_BRUSH_FILL", value: 788, isUnsigned: true)
!1462 = !DIEnumerator(name: "ICON_BRUSH_FLATTEN", value: 789, isUnsigned: true)
!1463 = !DIEnumerator(name: "ICON_BRUSH_GRAB", value: 790, isUnsigned: true)
!1464 = !DIEnumerator(name: "ICON_BRUSH_INFLATE", value: 791, isUnsigned: true)
!1465 = !DIEnumerator(name: "ICON_BRUSH_LAYER", value: 792, isUnsigned: true)
!1466 = !DIEnumerator(name: "ICON_BRUSH_LIGHTEN", value: 793, isUnsigned: true)
!1467 = !DIEnumerator(name: "ICON_BRUSH_MASK", value: 794, isUnsigned: true)
!1468 = !DIEnumerator(name: "ICON_BRUSH_MIX", value: 795, isUnsigned: true)
!1469 = !DIEnumerator(name: "ICON_BRUSH_MULTIPLY", value: 796, isUnsigned: true)
!1470 = !DIEnumerator(name: "ICON_BRUSH_NUDGE", value: 797, isUnsigned: true)
!1471 = !DIEnumerator(name: "ICON_BRUSH_PINCH", value: 798, isUnsigned: true)
!1472 = !DIEnumerator(name: "ICON_BRUSH_SCRAPE", value: 799, isUnsigned: true)
!1473 = !DIEnumerator(name: "ICON_BRUSH_SCULPT_DRAW", value: 800, isUnsigned: true)
!1474 = !DIEnumerator(name: "ICON_BRUSH_SMEAR", value: 801, isUnsigned: true)
!1475 = !DIEnumerator(name: "ICON_BRUSH_SMOOTH", value: 802, isUnsigned: true)
!1476 = !DIEnumerator(name: "ICON_BRUSH_SNAKE_HOOK", value: 803, isUnsigned: true)
!1477 = !DIEnumerator(name: "ICON_BRUSH_SOFTEN", value: 804, isUnsigned: true)
!1478 = !DIEnumerator(name: "ICON_BRUSH_SUBTRACT", value: 805, isUnsigned: true)
!1479 = !DIEnumerator(name: "ICON_BRUSH_TEXDRAW", value: 806, isUnsigned: true)
!1480 = !DIEnumerator(name: "ICON_BRUSH_TEXFILL", value: 807, isUnsigned: true)
!1481 = !DIEnumerator(name: "ICON_BRUSH_TEXMASK", value: 808, isUnsigned: true)
!1482 = !DIEnumerator(name: "ICON_BRUSH_THUMB", value: 809, isUnsigned: true)
!1483 = !DIEnumerator(name: "ICON_BRUSH_ROTATE", value: 810, isUnsigned: true)
!1484 = !DIEnumerator(name: "ICON_BRUSH_VERTEXDRAW", value: 811, isUnsigned: true)
!1485 = !DIEnumerator(name: "ICON_MATCAP_01", value: 812, isUnsigned: true)
!1486 = !DIEnumerator(name: "ICON_MATCAP_02", value: 813, isUnsigned: true)
!1487 = !DIEnumerator(name: "ICON_MATCAP_03", value: 814, isUnsigned: true)
!1488 = !DIEnumerator(name: "ICON_MATCAP_04", value: 815, isUnsigned: true)
!1489 = !DIEnumerator(name: "ICON_MATCAP_05", value: 816, isUnsigned: true)
!1490 = !DIEnumerator(name: "ICON_MATCAP_06", value: 817, isUnsigned: true)
!1491 = !DIEnumerator(name: "ICON_MATCAP_07", value: 818, isUnsigned: true)
!1492 = !DIEnumerator(name: "ICON_MATCAP_08", value: 819, isUnsigned: true)
!1493 = !DIEnumerator(name: "ICON_MATCAP_09", value: 820, isUnsigned: true)
!1494 = !DIEnumerator(name: "ICON_MATCAP_10", value: 821, isUnsigned: true)
!1495 = !DIEnumerator(name: "ICON_MATCAP_11", value: 822, isUnsigned: true)
!1496 = !DIEnumerator(name: "ICON_MATCAP_12", value: 823, isUnsigned: true)
!1497 = !DIEnumerator(name: "ICON_MATCAP_13", value: 824, isUnsigned: true)
!1498 = !DIEnumerator(name: "ICON_MATCAP_14", value: 825, isUnsigned: true)
!1499 = !DIEnumerator(name: "ICON_MATCAP_15", value: 826, isUnsigned: true)
!1500 = !DIEnumerator(name: "ICON_MATCAP_16", value: 827, isUnsigned: true)
!1501 = !DIEnumerator(name: "ICON_MATCAP_17", value: 828, isUnsigned: true)
!1502 = !DIEnumerator(name: "ICON_MATCAP_18", value: 829, isUnsigned: true)
!1503 = !DIEnumerator(name: "ICON_MATCAP_19", value: 830, isUnsigned: true)
!1504 = !DIEnumerator(name: "ICON_MATCAP_20", value: 831, isUnsigned: true)
!1505 = !DIEnumerator(name: "ICON_MATCAP_21", value: 832, isUnsigned: true)
!1506 = !DIEnumerator(name: "ICON_MATCAP_22", value: 833, isUnsigned: true)
!1507 = !DIEnumerator(name: "ICON_MATCAP_23", value: 834, isUnsigned: true)
!1508 = !DIEnumerator(name: "ICON_MATCAP_24", value: 835, isUnsigned: true)
!1509 = !DIEnumerator(name: "VICO_VIEW3D_VEC", value: 836, isUnsigned: true)
!1510 = !DIEnumerator(name: "VICO_EDIT_VEC", value: 837, isUnsigned: true)
!1511 = !DIEnumerator(name: "VICO_EDITMODE_VEC_DEHLT", value: 838, isUnsigned: true)
!1512 = !DIEnumerator(name: "VICO_EDITMODE_VEC_HLT", value: 839, isUnsigned: true)
!1513 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_RIGHT_VEC", value: 840, isUnsigned: true)
!1514 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_DOWN_VEC", value: 841, isUnsigned: true)
!1515 = !DIEnumerator(name: "VICO_MOVE_UP_VEC", value: 842, isUnsigned: true)
!1516 = !DIEnumerator(name: "VICO_MOVE_DOWN_VEC", value: 843, isUnsigned: true)
!1517 = !DIEnumerator(name: "VICO_X_VEC", value: 844, isUnsigned: true)
!1518 = !DIEnumerator(name: "VICO_SMALL_TRI_RIGHT_VEC", value: 845, isUnsigned: true)
!1519 = !DIEnumerator(name: "BIFICONID_LAST", value: 846, isUnsigned: true)
!1520 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 1564, baseType: !56, size: 32, elements: !1521)
!1521 = !{!1522, !1523, !1524, !1525}
!1522 = !DIEnumerator(name: "UP", value: 0, isUnsigned: true)
!1523 = !DIEnumerator(name: "DOWN", value: 1, isUnsigned: true)
!1524 = !DIEnumerator(name: "LEFT", value: 2, isUnsigned: true)
!1525 = !DIEnumerator(name: "RIGHT", value: 3, isUnsigned: true)
!1526 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAutokey_Mode", file: !662, line: 671, baseType: !56, size: 32, elements: !1527)
!1527 = !{!1528, !1529, !1530}
!1528 = !DIEnumerator(name: "AUTOKEY_ON", value: 1, isUnsigned: true)
!1529 = !DIEnumerator(name: "AUTOKEY_MODE_NORMAL", value: 3, isUnsigned: true)
!1530 = !DIEnumerator(name: "AUTOKEY_MODE_EDITKEYS", value: 5, isUnsigned: true)
!1531 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !55, line: 611, baseType: !56, size: 32, elements: !1532)
!1532 = !{!1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546}
!1533 = !DIEnumerator(name: "INPUT_NONE", value: 0, isUnsigned: true)
!1534 = !DIEnumerator(name: "INPUT_VECTOR", value: 1, isUnsigned: true)
!1535 = !DIEnumerator(name: "INPUT_SPRING", value: 2, isUnsigned: true)
!1536 = !DIEnumerator(name: "INPUT_SPRING_FLIP", value: 3, isUnsigned: true)
!1537 = !DIEnumerator(name: "INPUT_SPRING_DELTA", value: 4, isUnsigned: true)
!1538 = !DIEnumerator(name: "INPUT_ANGLE", value: 5, isUnsigned: true)
!1539 = !DIEnumerator(name: "INPUT_ANGLE_SPRING", value: 6, isUnsigned: true)
!1540 = !DIEnumerator(name: "INPUT_TRACKBALL", value: 7, isUnsigned: true)
!1541 = !DIEnumerator(name: "INPUT_HORIZONTAL_RATIO", value: 8, isUnsigned: true)
!1542 = !DIEnumerator(name: "INPUT_HORIZONTAL_ABSOLUTE", value: 9, isUnsigned: true)
!1543 = !DIEnumerator(name: "INPUT_VERTICAL_RATIO", value: 10, isUnsigned: true)
!1544 = !DIEnumerator(name: "INPUT_VERTICAL_ABSOLUTE", value: 11, isUnsigned: true)
!1545 = !DIEnumerator(name: "INPUT_CUSTOM_RATIO", value: 12, isUnsigned: true)
!1546 = !DIEnumerator(name: "INPUT_CUSTOM_RATIO_FLIP", value: 13, isUnsigned: true)
!1547 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1548, line: 64, baseType: !56, size: 32, elements: !1549)
!1548 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_unit.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1549 = !{!1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560}
!1550 = !DIEnumerator(name: "B_UNIT_NONE", value: 0, isUnsigned: true)
!1551 = !DIEnumerator(name: "B_UNIT_LENGTH", value: 1, isUnsigned: true)
!1552 = !DIEnumerator(name: "B_UNIT_AREA", value: 2, isUnsigned: true)
!1553 = !DIEnumerator(name: "B_UNIT_VOLUME", value: 3, isUnsigned: true)
!1554 = !DIEnumerator(name: "B_UNIT_MASS", value: 4, isUnsigned: true)
!1555 = !DIEnumerator(name: "B_UNIT_ROTATION", value: 5, isUnsigned: true)
!1556 = !DIEnumerator(name: "B_UNIT_TIME", value: 6, isUnsigned: true)
!1557 = !DIEnumerator(name: "B_UNIT_VELOCITY", value: 7, isUnsigned: true)
!1558 = !DIEnumerator(name: "B_UNIT_ACCELERATION", value: 8, isUnsigned: true)
!1559 = !DIEnumerator(name: "B_UNIT_CAMERA", value: 9, isUnsigned: true)
!1560 = !DIEnumerator(name: "B_UNIT_TYPE_TOT", value: 10, isUnsigned: true)
!1561 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1562, line: 58, baseType: !56, size: 32, elements: !1563)
!1562 = !DIFile(filename: "blender/source/blender/editors/include/ED_numinput.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1563 = !{!1564, !1565, !1566, !1567}
!1564 = !DIEnumerator(name: "NUM_NULL_ONE", value: 1, isUnsigned: true)
!1565 = !DIEnumerator(name: "NUM_NO_NEGATIVE", value: 2, isUnsigned: true)
!1566 = !DIEnumerator(name: "NUM_NO_ZERO", value: 4, isUnsigned: true)
!1567 = !DIEnumerator(name: "NUM_NO_FRACTION", value: 8, isUnsigned: true)
!1568 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1562, line: 52, baseType: !56, size: 32, elements: !1569)
!1569 = !{!1570}
!1570 = !DIEnumerator(name: "NUM_AFFECT_ALL", value: 1, isUnsigned: true)
!1571 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !371, line: 648, baseType: !56, size: 32, elements: !1572)
!1572 = !{!1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586}
!1573 = !DIEnumerator(name: "OB_LOCK_LOCX", value: 1, isUnsigned: true)
!1574 = !DIEnumerator(name: "OB_LOCK_LOCY", value: 2, isUnsigned: true)
!1575 = !DIEnumerator(name: "OB_LOCK_LOCZ", value: 4, isUnsigned: true)
!1576 = !DIEnumerator(name: "OB_LOCK_LOC", value: 7, isUnsigned: true)
!1577 = !DIEnumerator(name: "OB_LOCK_ROTX", value: 8, isUnsigned: true)
!1578 = !DIEnumerator(name: "OB_LOCK_ROTY", value: 16, isUnsigned: true)
!1579 = !DIEnumerator(name: "OB_LOCK_ROTZ", value: 32, isUnsigned: true)
!1580 = !DIEnumerator(name: "OB_LOCK_ROT", value: 56, isUnsigned: true)
!1581 = !DIEnumerator(name: "OB_LOCK_SCALEX", value: 64, isUnsigned: true)
!1582 = !DIEnumerator(name: "OB_LOCK_SCALEY", value: 128, isUnsigned: true)
!1583 = !DIEnumerator(name: "OB_LOCK_SCALEZ", value: 256, isUnsigned: true)
!1584 = !DIEnumerator(name: "OB_LOCK_SCALE", value: 448, isUnsigned: true)
!1585 = !DIEnumerator(name: "OB_LOCK_ROTW", value: 512, isUnsigned: true)
!1586 = !DIEnumerator(name: "OB_LOCK_ROT4D", value: 1024, isUnsigned: true)
!1587 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBConstraint_Types", file: !1588, line: 461, baseType: !56, size: 32, elements: !1589)
!1588 = !DIFile(filename: "blender/source/blender/makesdna/DNA_constraint_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1589 = !{!1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619}
!1590 = !DIEnumerator(name: "CONSTRAINT_TYPE_NULL", value: 0, isUnsigned: true)
!1591 = !DIEnumerator(name: "CONSTRAINT_TYPE_CHILDOF", value: 1, isUnsigned: true)
!1592 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRACKTO", value: 2, isUnsigned: true)
!1593 = !DIEnumerator(name: "CONSTRAINT_TYPE_KINEMATIC", value: 3, isUnsigned: true)
!1594 = !DIEnumerator(name: "CONSTRAINT_TYPE_FOLLOWPATH", value: 4, isUnsigned: true)
!1595 = !DIEnumerator(name: "CONSTRAINT_TYPE_ROTLIMIT", value: 5, isUnsigned: true)
!1596 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCLIMIT", value: 6, isUnsigned: true)
!1597 = !DIEnumerator(name: "CONSTRAINT_TYPE_SIZELIMIT", value: 7, isUnsigned: true)
!1598 = !DIEnumerator(name: "CONSTRAINT_TYPE_ROTLIKE", value: 8, isUnsigned: true)
!1599 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCLIKE", value: 9, isUnsigned: true)
!1600 = !DIEnumerator(name: "CONSTRAINT_TYPE_SIZELIKE", value: 10, isUnsigned: true)
!1601 = !DIEnumerator(name: "CONSTRAINT_TYPE_PYTHON", value: 11, isUnsigned: true)
!1602 = !DIEnumerator(name: "CONSTRAINT_TYPE_ACTION", value: 12, isUnsigned: true)
!1603 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCKTRACK", value: 13, isUnsigned: true)
!1604 = !DIEnumerator(name: "CONSTRAINT_TYPE_DISTLIMIT", value: 14, isUnsigned: true)
!1605 = !DIEnumerator(name: "CONSTRAINT_TYPE_STRETCHTO", value: 15, isUnsigned: true)
!1606 = !DIEnumerator(name: "CONSTRAINT_TYPE_MINMAX", value: 16, isUnsigned: true)
!1607 = !DIEnumerator(name: "CONSTRAINT_TYPE_RIGIDBODYJOINT", value: 17, isUnsigned: true)
!1608 = !DIEnumerator(name: "CONSTRAINT_TYPE_CLAMPTO", value: 18, isUnsigned: true)
!1609 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRANSFORM", value: 19, isUnsigned: true)
!1610 = !DIEnumerator(name: "CONSTRAINT_TYPE_SHRINKWRAP", value: 20, isUnsigned: true)
!1611 = !DIEnumerator(name: "CONSTRAINT_TYPE_DAMPTRACK", value: 21, isUnsigned: true)
!1612 = !DIEnumerator(name: "CONSTRAINT_TYPE_SPLINEIK", value: 22, isUnsigned: true)
!1613 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRANSLIKE", value: 23, isUnsigned: true)
!1614 = !DIEnumerator(name: "CONSTRAINT_TYPE_SAMEVOL", value: 24, isUnsigned: true)
!1615 = !DIEnumerator(name: "CONSTRAINT_TYPE_PIVOT", value: 25, isUnsigned: true)
!1616 = !DIEnumerator(name: "CONSTRAINT_TYPE_FOLLOWTRACK", value: 26, isUnsigned: true)
!1617 = !DIEnumerator(name: "CONSTRAINT_TYPE_CAMERASOLVER", value: 27, isUnsigned: true)
!1618 = !DIEnumerator(name: "CONSTRAINT_TYPE_OBJECTSOLVER", value: 28, isUnsigned: true)
!1619 = !DIEnumerator(name: "NUM_CONSTRAINT_TYPES", value: 29, isUnsigned: true)
!1620 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBConstraint_Flags", file: !1588, line: 499, baseType: !56, size: 32, elements: !1621)
!1621 = !{!1622, !1623, !1624, !1625, !1626, !1627, !1628}
!1622 = !DIEnumerator(name: "CONSTRAINT_EXPAND", value: 1, isUnsigned: true)
!1623 = !DIEnumerator(name: "CONSTRAINT_DISABLE", value: 4, isUnsigned: true)
!1624 = !DIEnumerator(name: "CONSTRAINT_ACTIVE", value: 16, isUnsigned: true)
!1625 = !DIEnumerator(name: "CONSTRAINT_SPACEONCE", value: 64, isUnsigned: true)
!1626 = !DIEnumerator(name: "CONSTRAINT_OWN_IPO", value: 128, isUnsigned: true)
!1627 = !DIEnumerator(name: "CONSTRAINT_PROXY_LOCAL", value: 256, isUnsigned: true)
!1628 = !DIEnumerator(name: "CONSTRAINT_OFF", value: 512, isUnsigned: true)
!1629 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eTransformLimits_Flags2", file: !1588, line: 712, baseType: !56, size: 32, elements: !1630)
!1630 = !{!1631, !1632}
!1631 = !DIEnumerator(name: "LIMIT_NOPARENT", value: 1, isUnsigned: true)
!1632 = !DIEnumerator(name: "LIMIT_TRANSFORM", value: 2, isUnsigned: true)
!1633 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBConstraint_SpaceTypes", file: !1588, line: 517, baseType: !56, size: 32, elements: !1634)
!1634 = !{!1635, !1636, !1637, !1638, !1639}
!1635 = !DIEnumerator(name: "CONSTRAINT_SPACE_WORLD", value: 0, isUnsigned: true)
!1636 = !DIEnumerator(name: "CONSTRAINT_SPACE_LOCAL", value: 1, isUnsigned: true)
!1637 = !DIEnumerator(name: "CONSTRAINT_SPACE_POSE", value: 2, isUnsigned: true)
!1638 = !DIEnumerator(name: "CONSTRAINT_SPACE_PARLOCAL", value: 3, isUnsigned: true)
!1639 = !DIEnumerator(name: "CONSTRAINT_SPACE_INVALID", value: 4, isUnsigned: true)
!1640 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eDistLimit_Flag", file: !1588, line: 738, baseType: !56, size: 32, elements: !1641)
!1641 = !{!1642, !1643}
!1642 = !DIEnumerator(name: "LIMITDIST_USESOFT", value: 1, isUnsigned: true)
!1643 = !DIEnumerator(name: "LIMITDIST_TRANSFORM", value: 2, isUnsigned: true)
!1644 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eRotationModes", file: !1645, line: 306, baseType: !35, size: 32, elements: !1646)
!1645 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1646 = !{!1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657}
!1647 = !DIEnumerator(name: "ROT_MODE_QUAT", value: 0)
!1648 = !DIEnumerator(name: "ROT_MODE_EUL", value: 1)
!1649 = !DIEnumerator(name: "ROT_MODE_XYZ", value: 1)
!1650 = !DIEnumerator(name: "ROT_MODE_XZY", value: 2)
!1651 = !DIEnumerator(name: "ROT_MODE_YXZ", value: 3)
!1652 = !DIEnumerator(name: "ROT_MODE_YZX", value: 4)
!1653 = !DIEnumerator(name: "ROT_MODE_ZXY", value: 5)
!1654 = !DIEnumerator(name: "ROT_MODE_ZYX", value: 6)
!1655 = !DIEnumerator(name: "ROT_MODE_AXISANGLE", value: -1)
!1656 = !DIEnumerator(name: "ROT_MODE_MIN", value: -1)
!1657 = !DIEnumerator(name: "ROT_MODE_MAX", value: 6)
!1658 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eEulerRotationOrders", file: !1659, line: 142, baseType: !56, size: 32, elements: !1660)
!1659 = !DIFile(filename: "blender/source/blender/blenlib/BLI_math_rotation.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1660 = !{!1661, !1662, !1663, !1664, !1665, !1666, !1667}
!1661 = !DIEnumerator(name: "EULER_ORDER_DEFAULT", value: 1, isUnsigned: true)
!1662 = !DIEnumerator(name: "EULER_ORDER_XYZ", value: 1, isUnsigned: true)
!1663 = !DIEnumerator(name: "EULER_ORDER_XZY", value: 2, isUnsigned: true)
!1664 = !DIEnumerator(name: "EULER_ORDER_YXZ", value: 3, isUnsigned: true)
!1665 = !DIEnumerator(name: "EULER_ORDER_YZX", value: 4, isUnsigned: true)
!1666 = !DIEnumerator(name: "EULER_ORDER_ZXY", value: 5, isUnsigned: true)
!1667 = !DIEnumerator(name: "EULER_ORDER_ZYX", value: 6, isUnsigned: true)
!1668 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !8, line: 67, baseType: !56, size: 32, elements: !1669)
!1669 = !{!1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678}
!1670 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!1671 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!1672 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!1673 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!1674 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!1675 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!1676 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!1677 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!1678 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!1679 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !456, line: 249, baseType: !56, size: 32, elements: !1680)
!1680 = !{!1681, !1682, !1683, !1684}
!1681 = !DIEnumerator(name: "BM_VERT", value: 1, isUnsigned: true)
!1682 = !DIEnumerator(name: "BM_EDGE", value: 2, isUnsigned: true)
!1683 = !DIEnumerator(name: "BM_LOOP", value: 4, isUnsigned: true)
!1684 = !DIEnumerator(name: "BM_FACE", value: 8, isUnsigned: true)
!1685 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !371, line: 432, baseType: !56, size: 32, elements: !1686)
!1686 = !{!1687, !1688, !1689, !1690, !1691, !1692, !1693}
!1687 = !DIEnumerator(name: "OB_BOUNDBOX", value: 1, isUnsigned: true)
!1688 = !DIEnumerator(name: "OB_WIRE", value: 2, isUnsigned: true)
!1689 = !DIEnumerator(name: "OB_SOLID", value: 3, isUnsigned: true)
!1690 = !DIEnumerator(name: "OB_MATERIAL", value: 4, isUnsigned: true)
!1691 = !DIEnumerator(name: "OB_TEXTURE", value: 5, isUnsigned: true)
!1692 = !DIEnumerator(name: "OB_RENDER", value: 6, isUnsigned: true)
!1693 = !DIEnumerator(name: "OB_PAINT", value: 100, isUnsigned: true)
!1694 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1695, line: 67, baseType: !56, size: 32, elements: !1696)
!1695 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh_bvh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1696 = !{!1697, !1698, !1699}
!1697 = !DIEnumerator(name: "BMBVH_RETURN_ORIG", value: 1, isUnsigned: true)
!1698 = !DIEnumerator(name: "BMBVH_RESPECT_SELECT", value: 2, isUnsigned: true)
!1699 = !DIEnumerator(name: "BMBVH_RESPECT_HIDDEN", value: 4, isUnsigned: true)
!1700 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnimEdit_AutoSnap", file: !1645, line: 650, baseType: !56, size: 32, elements: !1701)
!1701 = !{!1702, !1703, !1704, !1705, !1706, !1707}
!1702 = !DIEnumerator(name: "SACTSNAP_OFF", value: 0, isUnsigned: true)
!1703 = !DIEnumerator(name: "SACTSNAP_STEP", value: 1, isUnsigned: true)
!1704 = !DIEnumerator(name: "SACTSNAP_FRAME", value: 2, isUnsigned: true)
!1705 = !DIEnumerator(name: "SACTSNAP_MARKER", value: 3, isUnsigned: true)
!1706 = !DIEnumerator(name: "SACTSNAP_SECOND", value: 4, isUnsigned: true)
!1707 = !DIEnumerator(name: "SACTSNAP_TSTEP", value: 5, isUnsigned: true)
!1708 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eNlaTime_ConvertModes", file: !1709, line: 117, baseType: !56, size: 32, elements: !1710)
!1709 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_nla.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1710 = !{!1711, !1712, !1713}
!1711 = !DIEnumerator(name: "NLATIME_CONVERT_EVAL", value: 0, isUnsigned: true)
!1712 = !DIEnumerator(name: "NLATIME_CONVERT_UNMAP", value: 1, isUnsigned: true)
!1713 = !DIEnumerator(name: "NLATIME_CONVERT_MAP", value: 2, isUnsigned: true)
!1714 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSAction_Flag", file: !1645, line: 608, baseType: !56, size: 32, elements: !1715)
!1715 = !{!1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725}
!1716 = !DIEnumerator(name: "SACTION_MOVING", value: 1, isUnsigned: true)
!1717 = !DIEnumerator(name: "SACTION_SLIDERS", value: 2, isUnsigned: true)
!1718 = !DIEnumerator(name: "SACTION_DRAWTIME", value: 4, isUnsigned: true)
!1719 = !DIEnumerator(name: "SACTION_NOTRANSKEYCULL", value: 16, isUnsigned: true)
!1720 = !DIEnumerator(name: "SACTION_POSEMARKERS_SHOW", value: 64, isUnsigned: true)
!1721 = !DIEnumerator(name: "SACTION_NODRAWGCOLORS", value: 128, isUnsigned: true)
!1722 = !DIEnumerator(name: "SACTION_NODRAWCFRANUM", value: 256, isUnsigned: true)
!1723 = !DIEnumerator(name: "SACTION_TEMP_NEEDCHANSYNC", value: 512, isUnsigned: true)
!1724 = !DIEnumerator(name: "SACTION_NOREALTIMEUPDATES", value: 1024, isUnsigned: true)
!1725 = !DIEnumerator(name: "SACTION_MARKERS_MOVE", value: 2048, isUnsigned: true)
!1726 = !{!1727, !35, !1728, !3482, !18, !3574, !1773, !3817, !3841, !4208, !4211, !4292, !4345, !4348, !4349, !4350, !3678, !3682, !3686, !3625, !23, !3424, !4354, !4382, !4401}
!1727 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64)
!1729 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !1730, line: 71, baseType: !1731)
!1730 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !1730, line: 40, size: 1280, elements: !1732)
!1732 = !{!1733, !1742, !1743, !1751, !1752, !1753, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1774, !1775, !1776, !1779}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1731, file: !1730, line: 41, baseType: !1734, size: 128)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1735, line: 95, baseType: !1736)
!1735 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1735, line: 92, size: 128, elements: !1737)
!1737 = !{!1738, !1739, !1740, !1741}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1736, file: !1735, line: 93, baseType: !1727, size: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1736, file: !1735, line: 93, baseType: !1727, size: 32, offset: 32)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1736, file: !1735, line: 94, baseType: !1727, size: 32, offset: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1736, file: !1735, line: 94, baseType: !1727, size: 32, offset: 96)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1731, file: !1730, line: 41, baseType: !1734, size: 128, offset: 128)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !1731, file: !1730, line: 42, baseType: !1744, size: 128, offset: 256)
!1744 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1735, line: 89, baseType: !1745)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1735, line: 86, size: 128, elements: !1746)
!1746 = !{!1747, !1748, !1749, !1750}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1745, file: !1735, line: 87, baseType: !35, size: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1745, file: !1735, line: 87, baseType: !35, size: 32, offset: 32)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1745, file: !1735, line: 88, baseType: !35, size: 32, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1745, file: !1735, line: 88, baseType: !35, size: 32, offset: 96)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !1731, file: !1730, line: 42, baseType: !1744, size: 128, offset: 384)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1731, file: !1730, line: 43, baseType: !1744, size: 128, offset: 512)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1731, file: !1730, line: 45, baseType: !1754, size: 64, offset: 640)
!1754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1727, size: 64, elements: !1755)
!1755 = !{!1756}
!1756 = !DISubrange(count: 2)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1731, file: !1730, line: 45, baseType: !1754, size: 64, offset: 704)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !1731, file: !1730, line: 46, baseType: !1727, size: 32, offset: 768)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !1731, file: !1730, line: 46, baseType: !1727, size: 32, offset: 800)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !1731, file: !1730, line: 48, baseType: !27, size: 16, offset: 832)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !1731, file: !1730, line: 49, baseType: !27, size: 16, offset: 848)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !1731, file: !1730, line: 51, baseType: !27, size: 16, offset: 864)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !1731, file: !1730, line: 52, baseType: !27, size: 16, offset: 880)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !1731, file: !1730, line: 53, baseType: !27, size: 16, offset: 896)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1731, file: !1730, line: 55, baseType: !27, size: 16, offset: 912)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1731, file: !1730, line: 56, baseType: !27, size: 16, offset: 928)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1731, file: !1730, line: 58, baseType: !27, size: 16, offset: 944)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1731, file: !1730, line: 58, baseType: !27, size: 16, offset: 960)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !1731, file: !1730, line: 59, baseType: !27, size: 16, offset: 976)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !1731, file: !1730, line: 59, baseType: !27, size: 16, offset: 992)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !1731, file: !1730, line: 61, baseType: !27, size: 16, offset: 1008)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !1731, file: !1730, line: 63, baseType: !1773, size: 64, offset: 1024)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !1731, file: !1730, line: 64, baseType: !35, size: 32, offset: 1088)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !1731, file: !1730, line: 65, baseType: !35, size: 32, offset: 1120)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !1731, file: !1730, line: 68, baseType: !1777, size: 64, offset: 1152)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!1778 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !1730, line: 68, flags: DIFlagFwdDecl)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !1731, file: !1730, line: 69, baseType: !1780, size: 64, offset: 1216)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !1782, line: 490, size: 768, elements: !1783)
!1782 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1783 = !{!1784, !1785, !1786, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1781, file: !1782, line: 491, baseType: !1780, size: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1781, file: !1782, line: 491, baseType: !1780, size: 64, offset: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !1781, file: !1782, line: 493, baseType: !1787, size: 64, offset: 128)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !8, line: 169, size: 2048, elements: !1789)
!1789 = !{!1790, !1791, !1792, !1793, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3448, !3451, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1788, file: !8, line: 170, baseType: !1787, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1788, file: !8, line: 170, baseType: !1787, size: 64, offset: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !1788, file: !8, line: 172, baseType: !18, size: 64, offset: 128)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !1788, file: !8, line: 174, baseType: !1794, size: 64, offset: 192)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64)
!1795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !87, line: 49, size: 1984, elements: !1796)
!1796 = !{!1797, !1856, !1857, !1858, !1859, !1860, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1795, file: !87, line: 50, baseType: !1798, size: 960)
!1798 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !1799, line: 130, baseType: !1800)
!1799 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !1799, line: 117, size: 960, elements: !1801)
!1801 = !{!1802, !1803, !1804, !1806, !1825, !1829, !1830, !1831, !1832, !1833}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1800, file: !1799, line: 118, baseType: !18, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1800, file: !1799, line: 118, baseType: !18, size: 64, offset: 64)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !1800, file: !1799, line: 119, baseType: !1805, size: 64, offset: 128)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1800, file: !1799, line: 120, baseType: !1807, size: 64, offset: 192)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !1799, line: 136, size: 17600, elements: !1809)
!1809 = !{!1810, !1811, !1813, !1816, !1820, !1821, !1822}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1808, file: !1799, line: 137, baseType: !1798, size: 960)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !1808, file: !1799, line: 138, baseType: !1812, size: 64, offset: 960)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !1808, file: !1799, line: 139, baseType: !1814, size: 64, offset: 1024)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !1799, line: 43, flags: DIFlagFwdDecl)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1808, file: !1799, line: 140, baseType: !1817, size: 8192, offset: 1088)
!1817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 8192, elements: !1818)
!1818 = !{!1819}
!1819 = !DISubrange(count: 1024)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1808, file: !1799, line: 141, baseType: !1817, size: 8192, offset: 9280)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1808, file: !1799, line: 148, baseType: !1807, size: 64, offset: 17472)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1808, file: !1799, line: 150, baseType: !1823, size: 64, offset: 17536)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !1799, line: 45, flags: DIFlagFwdDecl)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1800, file: !1799, line: 121, baseType: !1826, size: 528, offset: 256)
!1826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 528, elements: !1827)
!1827 = !{!1828}
!1828 = !DISubrange(count: 66)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1800, file: !1799, line: 126, baseType: !27, size: 16, offset: 784)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1800, file: !1799, line: 127, baseType: !35, size: 32, offset: 800)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !1800, file: !1799, line: 128, baseType: !35, size: 32, offset: 832)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1800, file: !1799, line: 128, baseType: !35, size: 32, offset: 864)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1800, file: !1799, line: 129, baseType: !1834, size: 64, offset: 896)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !1799, line: 75, baseType: !1836)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !1799, line: 62, size: 1024, elements: !1837)
!1837 = !{!1838, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1854, !1855}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1836, file: !1799, line: 63, baseType: !1839, size: 64)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1836, file: !1799, line: 63, baseType: !1839, size: 64, offset: 64)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1836, file: !1799, line: 64, baseType: !23, size: 8, offset: 128)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1836, file: !1799, line: 64, baseType: !23, size: 8, offset: 136)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1836, file: !1799, line: 65, baseType: !27, size: 16, offset: 144)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1836, file: !1799, line: 66, baseType: !22, size: 512, offset: 160)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1836, file: !1799, line: 67, baseType: !35, size: 32, offset: 672)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1836, file: !1799, line: 69, baseType: !1847, size: 256, offset: 704)
!1847 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !1799, line: 60, baseType: !1848)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !1799, line: 48, size: 256, elements: !1849)
!1849 = !{!1850, !1851, !1852, !1853}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1848, file: !1799, line: 49, baseType: !18, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1848, file: !1799, line: 58, baseType: !13, size: 128, offset: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1848, file: !1799, line: 59, baseType: !35, size: 32, offset: 192)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !1848, file: !1799, line: 59, baseType: !35, size: 32, offset: 224)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1836, file: !1799, line: 70, baseType: !35, size: 32, offset: 960)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !1836, file: !1799, line: 74, baseType: !35, size: 32, offset: 992)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !1795, file: !87, line: 52, baseType: !13, size: 128, offset: 960)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !1795, file: !87, line: 53, baseType: !13, size: 128, offset: 1088)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !1795, file: !87, line: 54, baseType: !13, size: 128, offset: 1216)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1795, file: !87, line: 55, baseType: !13, size: 128, offset: 1344)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1795, file: !87, line: 57, baseType: !1861, size: 64, offset: 1472)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !1863, line: 1216, size: 39680, elements: !1864)
!1863 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1864 = !{!1865, !1866, !1935, !2214, !2217, !2218, !2219, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2245, !2310, !2747, !2962, !2965, !3246, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3268, !3269, !3270, !3271, !3272, !3280, !3347, !3354, !3355, !3362, !3363, !3364, !3365, !3366, !3367, !3368}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1862, file: !1863, line: 1217, baseType: !1798, size: 960)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1862, file: !1863, line: 1218, baseType: !1867, size: 64, offset: 960)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !1869, line: 838, size: 768, elements: !1870)
!1869 = !DIFile(filename: "blender/source/blender/makesdna/DNA_anim_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1870 = !{!1871, !1885, !1886, !1896, !1897, !1928, !1929, !1930, !1931, !1932, !1933, !1934}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1868, file: !1869, line: 840, baseType: !1872, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1873 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAction", file: !1645, line: 499, baseType: !1874)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !1645, line: 486, size: 1600, elements: !1875)
!1875 = !{!1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1874, file: !1645, line: 487, baseType: !1798, size: 960)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !1874, file: !1645, line: 489, baseType: !13, size: 128, offset: 960)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1874, file: !1645, line: 490, baseType: !13, size: 128, offset: 1088)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1874, file: !1645, line: 491, baseType: !13, size: 128, offset: 1216)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1874, file: !1645, line: 492, baseType: !13, size: 128, offset: 1344)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1874, file: !1645, line: 494, baseType: !35, size: 32, offset: 1472)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !1874, file: !1645, line: 495, baseType: !35, size: 32, offset: 1504)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !1874, file: !1645, line: 497, baseType: !35, size: 32, offset: 1536)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1874, file: !1645, line: 498, baseType: !35, size: 32, offset: 1568)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "tmpact", scope: !1868, file: !1869, line: 844, baseType: !1872, size: 64, offset: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !1868, file: !1869, line: 848, baseType: !1887, size: 64, offset: 128)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimMapper", file: !1869, line: 549, baseType: !1889)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimMapper", file: !1869, line: 544, size: 320, elements: !1890)
!1890 = !{!1891, !1893, !1894, !1895}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1889, file: !1869, line: 545, baseType: !1892, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1889, file: !1869, line: 545, baseType: !1892, size: 64, offset: 64)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !1889, file: !1869, line: 547, baseType: !1872, size: 64, offset: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "mappings", scope: !1889, file: !1869, line: 548, baseType: !13, size: 128, offset: 192)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tracks", scope: !1868, file: !1869, line: 851, baseType: !13, size: 128, offset: 192)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "actstrip", scope: !1868, file: !1869, line: 853, baseType: !1898, size: 64, offset: 320)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaStrip", file: !1869, line: 594, baseType: !1900)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaStrip", file: !1869, line: 561, size: 1664, elements: !1901)
!1901 = !{!1902, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1900, file: !1869, line: 562, baseType: !1903, size: 64)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1900, file: !1869, line: 562, baseType: !1903, size: 64, offset: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !1900, file: !1869, line: 564, baseType: !13, size: 128, offset: 128)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !1900, file: !1869, line: 565, baseType: !1872, size: 64, offset: 256)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !1900, file: !1869, line: 566, baseType: !1887, size: 64, offset: 320)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "fcurves", scope: !1900, file: !1869, line: 568, baseType: !13, size: 128, offset: 384)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1900, file: !1869, line: 569, baseType: !13, size: 128, offset: 512)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1900, file: !1869, line: 571, baseType: !22, size: 512, offset: 640)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !1900, file: !1869, line: 573, baseType: !1727, size: 32, offset: 1152)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "strip_time", scope: !1900, file: !1869, line: 574, baseType: !1727, size: 32, offset: 1184)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1900, file: !1869, line: 576, baseType: !1727, size: 32, offset: 1216)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1900, file: !1869, line: 576, baseType: !1727, size: 32, offset: 1248)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "actstart", scope: !1900, file: !1869, line: 577, baseType: !1727, size: 32, offset: 1280)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "actend", scope: !1900, file: !1869, line: 577, baseType: !1727, size: 32, offset: 1312)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !1900, file: !1869, line: 579, baseType: !1727, size: 32, offset: 1344)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1900, file: !1869, line: 580, baseType: !1727, size: 32, offset: 1376)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !1900, file: !1869, line: 582, baseType: !1727, size: 32, offset: 1408)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !1900, file: !1869, line: 582, baseType: !1727, size: 32, offset: 1440)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "blendmode", scope: !1900, file: !1869, line: 583, baseType: !27, size: 16, offset: 1472)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "extendmode", scope: !1900, file: !1869, line: 585, baseType: !27, size: 16, offset: 1488)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1900, file: !1869, line: 586, baseType: !27, size: 16, offset: 1504)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1900, file: !1869, line: 588, baseType: !27, size: 16, offset: 1520)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handle", scope: !1900, file: !1869, line: 590, baseType: !18, size: 64, offset: 1536)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1900, file: !1869, line: 592, baseType: !35, size: 32, offset: 1600)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1900, file: !1869, line: 593, baseType: !35, size: 32, offset: 1632)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "drivers", scope: !1868, file: !1869, line: 858, baseType: !13, size: 128, offset: 384)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "overrides", scope: !1868, file: !1869, line: 859, baseType: !13, size: 128, offset: 512)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1868, file: !1869, line: 862, baseType: !35, size: 32, offset: 640)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1868, file: !1869, line: 863, baseType: !35, size: 32, offset: 672)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "act_blendmode", scope: !1868, file: !1869, line: 866, baseType: !27, size: 16, offset: 704)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "act_extendmode", scope: !1868, file: !1869, line: 867, baseType: !27, size: 16, offset: 720)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "act_influence", scope: !1868, file: !1869, line: 868, baseType: !1727, size: 32, offset: 736)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1862, file: !1863, line: 1220, baseType: !1936, size: 64, offset: 1024)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !371, line: 115, size: 11392, elements: !1938)
!1938 = !{!1939, !1940, !1941, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1959, !1970, !1972, !1973, !2016, !2017, !2021, !2022, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2049, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2065, !2066, !2067, !2068, !2069, !2070, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2142, !2145, !2148, !2149, !2150, !2151, !2152, !2155, !2158, !2161, !2162, !2168, !2169, !2170, !2171, !2172, !2173, !2175, !2178, !2181, !2182, !2202, !2203}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1937, file: !371, line: 116, baseType: !1798, size: 960)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1937, file: !371, line: 117, baseType: !1867, size: 64, offset: 960)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1937, file: !371, line: 119, baseType: !1942, size: 64, offset: 1024)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !371, line: 57, flags: DIFlagFwdDecl)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1937, file: !371, line: 121, baseType: !27, size: 16, offset: 1088)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !1937, file: !371, line: 121, baseType: !27, size: 16, offset: 1104)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !1937, file: !371, line: 122, baseType: !35, size: 32, offset: 1120)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !1937, file: !371, line: 122, baseType: !35, size: 32, offset: 1152)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !1937, file: !371, line: 122, baseType: !35, size: 32, offset: 1184)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !1937, file: !371, line: 123, baseType: !22, size: 512, offset: 1216)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1937, file: !371, line: 124, baseType: !1936, size: 64, offset: 1728)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !1937, file: !371, line: 124, baseType: !1936, size: 64, offset: 1792)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1937, file: !371, line: 127, baseType: !1936, size: 64, offset: 1856)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !1937, file: !371, line: 127, baseType: !1936, size: 64, offset: 1920)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !1937, file: !371, line: 127, baseType: !1936, size: 64, offset: 1984)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1937, file: !371, line: 128, baseType: !1956, size: 64, offset: 2048)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!1957 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !1958, line: 46, flags: DIFlagFwdDecl)
!1958 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1937, file: !371, line: 130, baseType: !1960, size: 64, offset: 2112)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 64)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !371, line: 97, size: 832, elements: !1962)
!1962 = !{!1963, !1968, !1969}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1961, file: !371, line: 98, baseType: !1964, size: 768)
!1964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1727, size: 768, elements: !1965)
!1965 = !{!1966, !1967}
!1966 = !DISubrange(count: 8)
!1967 = !DISubrange(count: 3)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1961, file: !371, line: 99, baseType: !35, size: 32, offset: 768)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1961, file: !371, line: 99, baseType: !35, size: 32, offset: 800)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1937, file: !371, line: 131, baseType: !1971, size: 64, offset: 2176)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !1937, file: !371, line: 132, baseType: !1971, size: 64, offset: 2240)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !1937, file: !371, line: 133, baseType: !1974, size: 64, offset: 2304)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !1645, line: 334, size: 1728, elements: !1976)
!1976 = !{!1977, !1978, !1981, !1982, !1983, !1984, !1985, !1986, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !2015}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1975, file: !1645, line: 335, baseType: !13, size: 128)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !1975, file: !1645, line: 336, baseType: !1979, size: 64, offset: 128)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64)
!1980 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !1645, line: 47, flags: DIFlagFwdDecl)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1975, file: !1645, line: 338, baseType: !27, size: 16, offset: 192)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1975, file: !1645, line: 338, baseType: !27, size: 16, offset: 208)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !1975, file: !1645, line: 339, baseType: !56, size: 32, offset: 224)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1975, file: !1645, line: 340, baseType: !35, size: 32, offset: 256)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1975, file: !1645, line: 342, baseType: !1727, size: 32, offset: 288)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !1975, file: !1645, line: 343, baseType: !1987, size: 96, offset: 320)
!1987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1727, size: 96, elements: !1988)
!1988 = !{!1967}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !1975, file: !1645, line: 344, baseType: !1987, size: 96, offset: 416)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !1975, file: !1645, line: 347, baseType: !13, size: 128, offset: 512)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !1975, file: !1645, line: 349, baseType: !35, size: 32, offset: 640)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !1975, file: !1645, line: 350, baseType: !35, size: 32, offset: 672)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !1975, file: !1645, line: 351, baseType: !18, size: 64, offset: 704)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !1975, file: !1645, line: 352, baseType: !18, size: 64, offset: 768)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1975, file: !1645, line: 354, baseType: !1996, size: 384, offset: 832)
!1996 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !1645, line: 116, baseType: !1997)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !1645, line: 94, size: 384, elements: !1998)
!1998 = !{!1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !1997, file: !1645, line: 96, baseType: !35, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !1997, file: !1645, line: 96, baseType: !35, size: 32, offset: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !1997, file: !1645, line: 97, baseType: !35, size: 32, offset: 64)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !1997, file: !1645, line: 97, baseType: !35, size: 32, offset: 96)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !1997, file: !1645, line: 99, baseType: !27, size: 16, offset: 128)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !1997, file: !1645, line: 100, baseType: !27, size: 16, offset: 144)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !1997, file: !1645, line: 102, baseType: !27, size: 16, offset: 160)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1997, file: !1645, line: 105, baseType: !27, size: 16, offset: 176)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !1997, file: !1645, line: 108, baseType: !27, size: 16, offset: 192)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !1997, file: !1645, line: 109, baseType: !27, size: 16, offset: 208)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !1997, file: !1645, line: 111, baseType: !27, size: 16, offset: 224)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !1997, file: !1645, line: 112, baseType: !27, size: 16, offset: 240)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !1997, file: !1645, line: 114, baseType: !35, size: 32, offset: 256)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !1997, file: !1645, line: 114, baseType: !35, size: 32, offset: 288)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !1997, file: !1645, line: 115, baseType: !35, size: 32, offset: 320)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !1997, file: !1645, line: 115, baseType: !35, size: 32, offset: 352)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !1975, file: !1645, line: 355, baseType: !22, size: 512, offset: 1216)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1937, file: !371, line: 134, baseType: !18, size: 64, offset: 2368)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1937, file: !371, line: 136, baseType: !2018, size: 64, offset: 2432)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!2019 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !2020, line: 45, flags: DIFlagFwdDecl)
!2020 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1937, file: !371, line: 138, baseType: !1996, size: 384, offset: 2496)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !1937, file: !371, line: 139, baseType: !2023, size: 64, offset: 2880)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64)
!2024 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !1645, line: 80, baseType: !2025)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !1645, line: 72, size: 192, elements: !2026)
!2026 = !{!2027, !2034, !2035, !2036, !2037}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2025, file: !1645, line: 73, baseType: !2028, size: 64)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64)
!2029 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !1645, line: 59, baseType: !2030)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !1645, line: 56, size: 128, elements: !2031)
!2031 = !{!2032, !2033}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2030, file: !1645, line: 57, baseType: !1987, size: 96)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2030, file: !1645, line: 58, baseType: !35, size: 32, offset: 96)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2025, file: !1645, line: 74, baseType: !35, size: 32, offset: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2025, file: !1645, line: 76, baseType: !35, size: 32, offset: 96)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !2025, file: !1645, line: 77, baseType: !35, size: 32, offset: 128)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2025, file: !1645, line: 79, baseType: !35, size: 32, offset: 160)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !1937, file: !371, line: 141, baseType: !13, size: 128, offset: 2944)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !1937, file: !371, line: 142, baseType: !13, size: 128, offset: 3072)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !1937, file: !371, line: 143, baseType: !13, size: 128, offset: 3200)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1937, file: !371, line: 144, baseType: !13, size: 128, offset: 3328)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1937, file: !371, line: 146, baseType: !35, size: 32, offset: 3456)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !1937, file: !371, line: 147, baseType: !35, size: 32, offset: 3488)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1937, file: !371, line: 150, baseType: !2045, size: 64, offset: 3520)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2047 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !2048, line: 46, flags: DIFlagFwdDecl)
!2048 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !1937, file: !371, line: 151, baseType: !2050, size: 64, offset: 3584)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !1937, file: !371, line: 152, baseType: !35, size: 32, offset: 3648)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !1937, file: !371, line: 153, baseType: !35, size: 32, offset: 3680)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1937, file: !371, line: 156, baseType: !1987, size: 96, offset: 3712)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !1937, file: !371, line: 156, baseType: !1987, size: 96, offset: 3808)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !1937, file: !371, line: 156, baseType: !1987, size: 96, offset: 3904)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1937, file: !371, line: 157, baseType: !1987, size: 96, offset: 4000)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !1937, file: !371, line: 158, baseType: !1987, size: 96, offset: 4096)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !1937, file: !371, line: 159, baseType: !1987, size: 96, offset: 4192)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1937, file: !371, line: 160, baseType: !1987, size: 96, offset: 4288)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !1937, file: !371, line: 160, baseType: !1987, size: 96, offset: 4384)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !1937, file: !371, line: 161, baseType: !2062, size: 128, offset: 4480)
!2062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1727, size: 128, elements: !2063)
!2063 = !{!2064}
!2064 = !DISubrange(count: 4)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !1937, file: !371, line: 161, baseType: !2062, size: 128, offset: 4608)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !1937, file: !371, line: 162, baseType: !1987, size: 96, offset: 4736)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !1937, file: !371, line: 162, baseType: !1987, size: 96, offset: 4832)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !1937, file: !371, line: 163, baseType: !1727, size: 32, offset: 4928)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !1937, file: !371, line: 163, baseType: !1727, size: 32, offset: 4960)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !1937, file: !371, line: 164, baseType: !2071, size: 512, offset: 4992)
!2071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1727, size: 512, elements: !2072)
!2072 = !{!2064, !2064}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !1937, file: !371, line: 165, baseType: !2071, size: 512, offset: 5504)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !1937, file: !371, line: 166, baseType: !2071, size: 512, offset: 6016)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1937, file: !371, line: 167, baseType: !2071, size: 512, offset: 6528)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !1937, file: !371, line: 176, baseType: !2071, size: 512, offset: 7040)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1937, file: !371, line: 178, baseType: !56, size: 32, offset: 7552)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1937, file: !371, line: 180, baseType: !27, size: 16, offset: 7584)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !1937, file: !371, line: 181, baseType: !27, size: 16, offset: 7600)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !1937, file: !371, line: 183, baseType: !27, size: 16, offset: 7616)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !1937, file: !371, line: 183, baseType: !27, size: 16, offset: 7632)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !1937, file: !371, line: 184, baseType: !27, size: 16, offset: 7648)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !1937, file: !371, line: 184, baseType: !27, size: 16, offset: 7664)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !1937, file: !371, line: 185, baseType: !27, size: 16, offset: 7680)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !1937, file: !371, line: 186, baseType: !27, size: 16, offset: 7696)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !1937, file: !371, line: 187, baseType: !27, size: 16, offset: 7712)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !1937, file: !371, line: 188, baseType: !23, size: 8, offset: 7728)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !1937, file: !371, line: 189, baseType: !23, size: 8, offset: 7736)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !1937, file: !371, line: 192, baseType: !35, size: 32, offset: 7744)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !1937, file: !371, line: 192, baseType: !35, size: 32, offset: 7776)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !1937, file: !371, line: 192, baseType: !35, size: 32, offset: 7808)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !1937, file: !371, line: 192, baseType: !35, size: 32, offset: 7840)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1937, file: !371, line: 194, baseType: !35, size: 32, offset: 7872)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !1937, file: !371, line: 202, baseType: !1727, size: 32, offset: 7904)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !1937, file: !371, line: 202, baseType: !1727, size: 32, offset: 7936)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !1937, file: !371, line: 202, baseType: !1727, size: 32, offset: 7968)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !1937, file: !371, line: 211, baseType: !1727, size: 32, offset: 8000)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !1937, file: !371, line: 212, baseType: !1727, size: 32, offset: 8032)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1937, file: !371, line: 213, baseType: !1727, size: 32, offset: 8064)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !1937, file: !371, line: 214, baseType: !1727, size: 32, offset: 8096)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !1937, file: !371, line: 215, baseType: !1727, size: 32, offset: 8128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !1937, file: !371, line: 216, baseType: !1727, size: 32, offset: 8160)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !1937, file: !371, line: 219, baseType: !1727, size: 32, offset: 8192)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !1937, file: !371, line: 220, baseType: !1727, size: 32, offset: 8224)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !1937, file: !371, line: 221, baseType: !1727, size: 32, offset: 8256)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !1937, file: !371, line: 224, baseType: !2107, size: 16, offset: 8288)
!2107 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !1937, file: !371, line: 224, baseType: !2107, size: 16, offset: 8304)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !1937, file: !371, line: 226, baseType: !27, size: 16, offset: 8320)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !1937, file: !371, line: 228, baseType: !23, size: 8, offset: 8336)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !1937, file: !371, line: 229, baseType: !23, size: 8, offset: 8344)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !1937, file: !371, line: 231, baseType: !27, size: 16, offset: 8352)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !1937, file: !371, line: 232, baseType: !23, size: 8, offset: 8368)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !1937, file: !371, line: 233, baseType: !23, size: 8, offset: 8376)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !1937, file: !371, line: 234, baseType: !1727, size: 32, offset: 8384)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !1937, file: !371, line: 235, baseType: !1727, size: 32, offset: 8416)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1937, file: !371, line: 237, baseType: !13, size: 128, offset: 8448)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !1937, file: !371, line: 238, baseType: !13, size: 128, offset: 8576)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !1937, file: !371, line: 239, baseType: !13, size: 128, offset: 8704)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !1937, file: !371, line: 240, baseType: !13, size: 128, offset: 8832)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1937, file: !371, line: 242, baseType: !1727, size: 32, offset: 8960)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1937, file: !371, line: 244, baseType: !27, size: 16, offset: 8992)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !1937, file: !371, line: 245, baseType: !2107, size: 16, offset: 9008)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1937, file: !371, line: 246, baseType: !2062, size: 128, offset: 9024)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !1937, file: !371, line: 248, baseType: !35, size: 32, offset: 9152)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !1937, file: !371, line: 249, baseType: !35, size: 32, offset: 9184)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !1937, file: !371, line: 251, baseType: !2128, size: 64, offset: 9216)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 64)
!2129 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !371, line: 251, flags: DIFlagFwdDecl)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !1937, file: !371, line: 253, baseType: !23, size: 8, offset: 9280)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1937, file: !371, line: 254, baseType: !23, size: 8, offset: 9288)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !1937, file: !371, line: 255, baseType: !27, size: 16, offset: 9296)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !1937, file: !371, line: 256, baseType: !1987, size: 96, offset: 9312)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !1937, file: !371, line: 258, baseType: !13, size: 128, offset: 9408)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !1937, file: !371, line: 259, baseType: !13, size: 128, offset: 9536)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !1937, file: !371, line: 260, baseType: !13, size: 128, offset: 9664)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !1937, file: !371, line: 261, baseType: !13, size: 128, offset: 9792)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1937, file: !371, line: 263, baseType: !2139, size: 64, offset: 9920)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !2141, line: 244, flags: DIFlagFwdDecl)
!2141 = !DIFile(filename: "blender/source/blender/makesdna/DNA_particle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !1937, file: !371, line: 264, baseType: !2143, size: 64, offset: 9984)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !371, line: 53, flags: DIFlagFwdDecl)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !1937, file: !371, line: 265, baseType: !2146, size: 64, offset: 10048)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !1645, line: 46, flags: DIFlagFwdDecl)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !1937, file: !371, line: 267, baseType: !23, size: 8, offset: 10112)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !1937, file: !371, line: 268, baseType: !23, size: 8, offset: 10120)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !1937, file: !371, line: 269, baseType: !27, size: 16, offset: 10128)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !1937, file: !371, line: 270, baseType: !1727, size: 32, offset: 10144)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !1937, file: !371, line: 272, baseType: !2153, size: 64, offset: 10176)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!2154 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !371, line: 54, flags: DIFlagFwdDecl)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !1937, file: !371, line: 275, baseType: !2156, size: 64, offset: 10240)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2157 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !371, line: 275, flags: DIFlagFwdDecl)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !1937, file: !371, line: 277, baseType: !2159, size: 64, offset: 10304)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64)
!2160 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !2141, line: 272, flags: DIFlagFwdDecl)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !1937, file: !371, line: 277, baseType: !2159, size: 64, offset: 10368)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !1937, file: !371, line: 278, baseType: !2163, size: 64, offset: 10432)
!2163 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !2164, line: 27, baseType: !2165)
!2164 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !2166, line: 45, baseType: !2167)
!2166 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2167 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1937, file: !371, line: 279, baseType: !2163, size: 64, offset: 10496)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1937, file: !371, line: 280, baseType: !56, size: 32, offset: 10560)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !1937, file: !371, line: 281, baseType: !56, size: 32, offset: 10592)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !1937, file: !371, line: 283, baseType: !13, size: 128, offset: 10624)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !1937, file: !371, line: 284, baseType: !13, size: 128, offset: 10752)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !1937, file: !371, line: 285, baseType: !2174, size: 64, offset: 10880)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !1937, file: !371, line: 287, baseType: !2176, size: 64, offset: 10944)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 64)
!2177 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !371, line: 59, flags: DIFlagFwdDecl)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !1937, file: !371, line: 288, baseType: !2179, size: 64, offset: 11008)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 64)
!2180 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !371, line: 288, flags: DIFlagFwdDecl)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !1937, file: !371, line: 290, baseType: !1754, size: 64, offset: 11072)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1937, file: !371, line: 291, baseType: !2183, size: 64, offset: 11136)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2184 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !2185, line: 65, baseType: !2186)
!2185 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !2185, line: 50, size: 320, elements: !2187)
!2187 = !{!2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2186, file: !2185, line: 51, baseType: !1861, size: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2186, file: !2185, line: 53, baseType: !35, size: 32, offset: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2186, file: !2185, line: 54, baseType: !35, size: 32, offset: 96)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2186, file: !2185, line: 55, baseType: !35, size: 32, offset: 128)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2186, file: !2185, line: 55, baseType: !35, size: 32, offset: 160)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !2186, file: !2185, line: 56, baseType: !23, size: 8, offset: 192)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !2186, file: !2185, line: 56, baseType: !23, size: 8, offset: 200)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2186, file: !2185, line: 57, baseType: !23, size: 8, offset: 208)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2186, file: !2185, line: 57, baseType: !23, size: 8, offset: 216)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !2186, file: !2185, line: 59, baseType: !27, size: 16, offset: 224)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !2186, file: !2185, line: 59, baseType: !27, size: 16, offset: 240)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2186, file: !2185, line: 59, baseType: !27, size: 16, offset: 256)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2186, file: !2185, line: 61, baseType: !27, size: 16, offset: 272)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2186, file: !2185, line: 63, baseType: !35, size: 32, offset: 288)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !1937, file: !371, line: 293, baseType: !13, size: 128, offset: 11200)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !1937, file: !371, line: 294, baseType: !2204, size: 64, offset: 11328)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2205 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !371, line: 113, baseType: !2206)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !371, line: 108, size: 256, elements: !2207)
!2207 = !{!2208, !2210, !2211, !2212, !2213}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2206, file: !371, line: 109, baseType: !2209, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2206, file: !371, line: 109, baseType: !2209, size: 64, offset: 64)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2206, file: !371, line: 110, baseType: !1936, size: 64, offset: 128)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2206, file: !371, line: 111, baseType: !35, size: 32, offset: 192)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2206, file: !371, line: 112, baseType: !1727, size: 32, offset: 224)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1862, file: !1863, line: 1221, baseType: !2215, size: 64, offset: 1088)
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 64)
!2216 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1863, line: 52, flags: DIFlagFwdDecl)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1862, file: !1863, line: 1223, baseType: !1861, size: 64, offset: 1152)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1862, file: !1863, line: 1225, baseType: !13, size: 128, offset: 1216)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1862, file: !1863, line: 1226, baseType: !2220, size: 64, offset: 1344)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !1863, line: 69, size: 320, elements: !2222)
!2222 = !{!2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2221, file: !1863, line: 70, baseType: !2220, size: 64)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2221, file: !1863, line: 70, baseType: !2220, size: 64, offset: 64)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2221, file: !1863, line: 71, baseType: !56, size: 32, offset: 128)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !2221, file: !1863, line: 71, baseType: !56, size: 32, offset: 160)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2221, file: !1863, line: 72, baseType: !35, size: 32, offset: 192)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !2221, file: !1863, line: 73, baseType: !27, size: 16, offset: 224)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !2221, file: !1863, line: 73, baseType: !27, size: 16, offset: 240)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2221, file: !1863, line: 74, baseType: !1936, size: 64, offset: 256)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1862, file: !1863, line: 1227, baseType: !1936, size: 64, offset: 1408)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1862, file: !1863, line: 1229, baseType: !1987, size: 96, offset: 1472)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1862, file: !1863, line: 1230, baseType: !1987, size: 96, offset: 1568)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1862, file: !1863, line: 1231, baseType: !1987, size: 96, offset: 1664)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1862, file: !1863, line: 1231, baseType: !1987, size: 96, offset: 1760)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1862, file: !1863, line: 1233, baseType: !56, size: 32, offset: 1856)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1862, file: !1863, line: 1234, baseType: !35, size: 32, offset: 1888)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1862, file: !1863, line: 1235, baseType: !56, size: 32, offset: 1920)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1862, file: !1863, line: 1237, baseType: !27, size: 16, offset: 1952)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1862, file: !1863, line: 1239, baseType: !23, size: 8, offset: 1968)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1862, file: !1863, line: 1240, baseType: !2242, size: 8, offset: 1976)
!2242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 8, elements: !2243)
!2243 = !{!2244}
!2244 = !DISubrange(count: 1)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1862, file: !1863, line: 1242, baseType: !2246, size: 64, offset: 1984)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !2248, line: 328, size: 3456, elements: !2249)
!2248 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2249 = !{!2250, !2251, !2252, !2255, !2256, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2281, !2286, !2287, !2290, !2294, !2298, !2302, !2306, !2307, !2308, !2309}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2247, file: !2248, line: 329, baseType: !1798, size: 960)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2247, file: !2248, line: 330, baseType: !1867, size: 64, offset: 960)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !2247, file: !2248, line: 332, baseType: !2253, size: 64, offset: 1024)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 64)
!2254 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !2248, line: 332, flags: DIFlagFwdDecl)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !2247, file: !2248, line: 333, baseType: !22, size: 512, offset: 1088)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !2247, file: !2248, line: 335, baseType: !2257, size: 64, offset: 1600)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 64)
!2258 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !38, line: 41, flags: DIFlagFwdDecl)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2247, file: !2248, line: 337, baseType: !2018, size: 64, offset: 1664)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !2247, file: !2248, line: 338, baseType: !1754, size: 64, offset: 1728)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !2247, file: !2248, line: 340, baseType: !13, size: 128, offset: 1792)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !2247, file: !2248, line: 340, baseType: !13, size: 128, offset: 1920)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2247, file: !2248, line: 342, baseType: !35, size: 32, offset: 2048)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2247, file: !2248, line: 342, baseType: !35, size: 32, offset: 2080)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !2247, file: !2248, line: 343, baseType: !35, size: 32, offset: 2112)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2247, file: !2248, line: 345, baseType: !35, size: 32, offset: 2144)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !2247, file: !2248, line: 346, baseType: !35, size: 32, offset: 2176)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !2247, file: !2248, line: 347, baseType: !27, size: 16, offset: 2208)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2247, file: !2248, line: 348, baseType: !27, size: 16, offset: 2224)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2247, file: !2248, line: 349, baseType: !35, size: 32, offset: 2240)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !2247, file: !2248, line: 351, baseType: !35, size: 32, offset: 2272)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !2247, file: !2248, line: 353, baseType: !27, size: 16, offset: 2304)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !2247, file: !2248, line: 354, baseType: !27, size: 16, offset: 2320)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !2247, file: !2248, line: 355, baseType: !35, size: 32, offset: 2336)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !2247, file: !2248, line: 357, baseType: !1734, size: 128, offset: 2368)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !2247, file: !2248, line: 363, baseType: !13, size: 128, offset: 2496)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !2247, file: !2248, line: 363, baseType: !13, size: 128, offset: 2624)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !2247, file: !2248, line: 368, baseType: !2279, size: 64, offset: 2752)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 64)
!2280 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !2248, line: 48, flags: DIFlagFwdDecl)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !2247, file: !2248, line: 372, baseType: !2282, size: 32, offset: 2816)
!2282 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !2248, line: 274, baseType: !2283)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !2248, line: 271, size: 32, elements: !2284)
!2284 = !{!2285}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2283, file: !2248, line: 273, baseType: !56, size: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2247, file: !2248, line: 373, baseType: !35, size: 32, offset: 2848)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !2247, file: !2248, line: 382, baseType: !2288, size: 64, offset: 2880)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64)
!2289 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !2248, line: 46, flags: DIFlagFwdDecl)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !2247, file: !2248, line: 385, baseType: !2291, size: 64, offset: 2944)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64)
!2292 = !DISubroutineType(types: !2293)
!2293 = !{null, !18, !1727}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !2247, file: !2248, line: 386, baseType: !2295, size: 64, offset: 3008)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = !DISubroutineType(types: !2297)
!2297 = !{null, !18, !2050}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !2247, file: !2248, line: 387, baseType: !2299, size: 64, offset: 3072)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2300 = !DISubroutineType(types: !2301)
!2301 = !{!35, !18}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !2247, file: !2248, line: 388, baseType: !2303, size: 64, offset: 3136)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 64)
!2304 = !DISubroutineType(types: !2305)
!2305 = !{null, !18}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !2247, file: !2248, line: 389, baseType: !18, size: 64, offset: 3200)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !2247, file: !2248, line: 389, baseType: !18, size: 64, offset: 3264)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !2247, file: !2248, line: 389, baseType: !18, size: 64, offset: 3328)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !2247, file: !2248, line: 389, baseType: !18, size: 64, offset: 3392)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1862, file: !1863, line: 1244, baseType: !2311, size: 64, offset: 2048)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !2313, line: 200, size: 17024, elements: !2314)
!2313 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2314 = !{!2315, !2316, !2317, !2318, !2740, !2741, !2742, !2743, !2744, !2745, !2746}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !2312, file: !2313, line: 201, baseType: !2174, size: 64)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !2312, file: !2313, line: 202, baseType: !13, size: 128, offset: 64)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !2312, file: !2313, line: 203, baseType: !13, size: 128, offset: 192)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !2312, file: !2313, line: 206, baseType: !2319, size: 64, offset: 320)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!2320 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !2313, line: 190, baseType: !2321)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !2313, line: 126, size: 2816, elements: !2322)
!2322 = !{!2323, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2421, !2422, !2423, !2424, !2701, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2739}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2321, file: !2313, line: 127, baseType: !2324, size: 64)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2321, file: !2313, line: 127, baseType: !2324, size: 64, offset: 64)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !2321, file: !2313, line: 128, baseType: !18, size: 64, offset: 128)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !2321, file: !2313, line: 129, baseType: !18, size: 64, offset: 192)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2321, file: !2313, line: 130, baseType: !22, size: 512, offset: 256)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2321, file: !2313, line: 132, baseType: !35, size: 32, offset: 768)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2321, file: !2313, line: 132, baseType: !35, size: 32, offset: 800)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2321, file: !2313, line: 133, baseType: !35, size: 32, offset: 832)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2321, file: !2313, line: 134, baseType: !35, size: 32, offset: 864)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !2321, file: !2313, line: 134, baseType: !35, size: 32, offset: 896)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !2321, file: !2313, line: 134, baseType: !35, size: 32, offset: 928)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !2321, file: !2313, line: 135, baseType: !35, size: 32, offset: 960)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !2321, file: !2313, line: 135, baseType: !35, size: 32, offset: 992)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !2321, file: !2313, line: 136, baseType: !35, size: 32, offset: 1024)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2321, file: !2313, line: 136, baseType: !35, size: 32, offset: 1056)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !2321, file: !2313, line: 137, baseType: !35, size: 32, offset: 1088)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !2321, file: !2313, line: 137, baseType: !35, size: 32, offset: 1120)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !2321, file: !2313, line: 138, baseType: !1727, size: 32, offset: 1152)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !2321, file: !2313, line: 139, baseType: !1727, size: 32, offset: 1184)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !2321, file: !2313, line: 139, baseType: !1727, size: 32, offset: 1216)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !2321, file: !2313, line: 141, baseType: !27, size: 16, offset: 1248)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !2321, file: !2313, line: 142, baseType: !27, size: 16, offset: 1264)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !2321, file: !2313, line: 143, baseType: !35, size: 32, offset: 1280)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !2321, file: !2313, line: 144, baseType: !35, size: 32, offset: 1312)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !2321, file: !2313, line: 146, baseType: !2349, size: 64, offset: 1344)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 64)
!2350 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !2313, line: 114, baseType: !2351)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !2313, line: 99, size: 7232, elements: !2352)
!2352 = !{!2353, !2355, !2356, !2357, !2358, !2359, !2360, !2371, !2375, !2389, !2398, !2405, !2415}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2351, file: !2313, line: 100, baseType: !2354, size: 64)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2351, file: !2313, line: 100, baseType: !2354, size: 64, offset: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !2351, file: !2313, line: 101, baseType: !35, size: 32, offset: 128)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2351, file: !2313, line: 101, baseType: !35, size: 32, offset: 160)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !2351, file: !2313, line: 102, baseType: !35, size: 32, offset: 192)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !2351, file: !2313, line: 102, baseType: !35, size: 32, offset: 224)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !2351, file: !2313, line: 103, baseType: !2361, size: 64, offset: 256)
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 64)
!2362 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !2313, line: 59, baseType: !2363)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !2313, line: 56, size: 2112, elements: !2364)
!2364 = !{!2365, !2369, !2370}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2363, file: !2313, line: 57, baseType: !2366, size: 2048)
!2366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 2048, elements: !2367)
!2367 = !{!2368}
!2368 = !DISubrange(count: 256)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !2363, file: !2313, line: 58, baseType: !35, size: 32, offset: 2048)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !2363, file: !2313, line: 58, baseType: !35, size: 32, offset: 2080)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2351, file: !2313, line: 106, baseType: !2372, size: 6144, offset: 320)
!2372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 6144, elements: !2373)
!2373 = !{!2374}
!2374 = !DISubrange(count: 768)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !2351, file: !2313, line: 107, baseType: !2376, size: 64, offset: 6464)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !2313, line: 97, baseType: !2378)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !2313, line: 83, size: 8320, elements: !2379)
!2379 = !{!2380, !2381, !2382, !2385, !2386, !2387, !2388}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2378, file: !2313, line: 84, baseType: !2372, size: 6144)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2378, file: !2313, line: 87, baseType: !2366, size: 2048, offset: 6144)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2378, file: !2313, line: 88, baseType: !2383, size: 64, offset: 8192)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 64)
!2384 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !2185, line: 41, flags: DIFlagFwdDecl)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2378, file: !2313, line: 90, baseType: !27, size: 16, offset: 8256)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2378, file: !2313, line: 92, baseType: !27, size: 16, offset: 8272)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !2378, file: !2313, line: 93, baseType: !27, size: 16, offset: 8288)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !2378, file: !2313, line: 95, baseType: !27, size: 16, offset: 8304)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !2351, file: !2313, line: 108, baseType: !2390, size: 64, offset: 6528)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 64)
!2391 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !2313, line: 66, baseType: !2392)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !2313, line: 61, size: 128, elements: !2393)
!2393 = !{!2394, !2395, !2396, !2397}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !2392, file: !2313, line: 62, baseType: !35, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !2392, file: !2313, line: 63, baseType: !35, size: 32, offset: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !2392, file: !2313, line: 64, baseType: !35, size: 32, offset: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !2392, file: !2313, line: 65, baseType: !35, size: 32, offset: 96)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !2351, file: !2313, line: 109, baseType: !2399, size: 64, offset: 6592)
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 64)
!2400 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !2313, line: 71, baseType: !2401)
!2401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !2313, line: 68, size: 64, elements: !2402)
!2402 = !{!2403, !2404}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !2401, file: !2313, line: 69, baseType: !35, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !2401, file: !2313, line: 70, baseType: !35, size: 32, offset: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !2351, file: !2313, line: 110, baseType: !2406, size: 64, offset: 6656)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64)
!2407 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !2313, line: 81, baseType: !2408)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !2313, line: 73, size: 352, elements: !2409)
!2409 = !{!2410, !2411, !2412, !2413, !2414}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !2408, file: !2313, line: 74, baseType: !1987, size: 96)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2408, file: !2313, line: 75, baseType: !1987, size: 96, offset: 96)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !2408, file: !2313, line: 76, baseType: !1987, size: 96, offset: 192)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2408, file: !2313, line: 77, baseType: !35, size: 32, offset: 288)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2408, file: !2313, line: 78, baseType: !35, size: 32, offset: 320)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2351, file: !2313, line: 113, baseType: !2416, size: 512, offset: 6720)
!2416 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !2417, line: 182, baseType: !2418)
!2417 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !2417, line: 180, size: 512, elements: !2419)
!2419 = !{!2420}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2418, file: !2417, line: 181, baseType: !22, size: 512)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2321, file: !2313, line: 148, baseType: !1956, size: 64, offset: 1408)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2321, file: !2313, line: 151, baseType: !1861, size: 64, offset: 1472)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !2321, file: !2313, line: 152, baseType: !1936, size: 64, offset: 1536)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2321, file: !2313, line: 153, baseType: !2425, size: 64, offset: 1600)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 64)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !2427, line: 64, size: 19136, elements: !2428)
!2427 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2428 = !{!2429, !2430, !2431, !2432, !2433, !2434, !2436, !2437, !2438, !2439, !2442, !2443, !2687, !2688, !2696, !2697, !2698, !2699, !2700}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2426, file: !2427, line: 65, baseType: !1798, size: 960)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2426, file: !2427, line: 66, baseType: !1867, size: 64, offset: 960)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2426, file: !2427, line: 68, baseType: !1817, size: 8192, offset: 1024)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2426, file: !2427, line: 70, baseType: !35, size: 32, offset: 9216)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2426, file: !2427, line: 71, baseType: !35, size: 32, offset: 9248)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !2426, file: !2427, line: 72, baseType: !2435, size: 64, offset: 9280)
!2435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 64, elements: !1755)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !2426, file: !2427, line: 74, baseType: !1727, size: 32, offset: 9344)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !2426, file: !2427, line: 74, baseType: !1727, size: 32, offset: 9376)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2426, file: !2427, line: 76, baseType: !2383, size: 64, offset: 9408)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2426, file: !2427, line: 77, baseType: !2440, size: 64, offset: 9472)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64)
!2441 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !2427, line: 77, flags: DIFlagFwdDecl)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2426, file: !2427, line: 78, baseType: !2018, size: 64, offset: 9536)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !2426, file: !2427, line: 80, baseType: !2444, size: 2624, offset: 9600)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !2020, line: 340, size: 2624, elements: !2445)
!2445 = !{!2446, !2474, !2492, !2493, !2494, !2509, !2567, !2568, !2667, !2668, !2669, !2670, !2676}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !2444, file: !2020, line: 341, baseType: !2447, size: 576)
!2447 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !2020, line: 251, baseType: !2448)
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !2020, line: 207, size: 576, elements: !2449)
!2449 = !{!2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2448, file: !2020, line: 208, baseType: !35, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !2448, file: !2020, line: 211, baseType: !27, size: 16, offset: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !2448, file: !2020, line: 212, baseType: !27, size: 16, offset: 48)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !2448, file: !2020, line: 213, baseType: !1727, size: 32, offset: 64)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !2448, file: !2020, line: 214, baseType: !27, size: 16, offset: 96)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !2448, file: !2020, line: 215, baseType: !27, size: 16, offset: 112)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !2448, file: !2020, line: 216, baseType: !27, size: 16, offset: 128)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !2448, file: !2020, line: 217, baseType: !27, size: 16, offset: 144)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !2448, file: !2020, line: 218, baseType: !27, size: 16, offset: 160)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !2448, file: !2020, line: 219, baseType: !27, size: 16, offset: 176)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !2448, file: !2020, line: 220, baseType: !1727, size: 32, offset: 192)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !2448, file: !2020, line: 222, baseType: !27, size: 16, offset: 224)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !2448, file: !2020, line: 225, baseType: !27, size: 16, offset: 240)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !2448, file: !2020, line: 228, baseType: !35, size: 32, offset: 256)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !2448, file: !2020, line: 229, baseType: !35, size: 32, offset: 288)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !2448, file: !2020, line: 233, baseType: !35, size: 32, offset: 320)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !2448, file: !2020, line: 236, baseType: !27, size: 16, offset: 352)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2448, file: !2020, line: 236, baseType: !27, size: 16, offset: 368)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2448, file: !2020, line: 241, baseType: !1727, size: 32, offset: 384)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !2448, file: !2020, line: 244, baseType: !35, size: 32, offset: 416)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !2448, file: !2020, line: 244, baseType: !35, size: 32, offset: 448)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !2448, file: !2020, line: 245, baseType: !1727, size: 32, offset: 480)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !2448, file: !2020, line: 248, baseType: !1727, size: 32, offset: 512)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2448, file: !2020, line: 250, baseType: !35, size: 32, offset: 544)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2444, file: !2020, line: 342, baseType: !2475, size: 448, offset: 576)
!2475 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !2020, line: 79, baseType: !2476)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !2020, line: 61, size: 448, elements: !2477)
!2477 = !{!2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !2476, file: !2020, line: 62, baseType: !18, size: 64)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !2476, file: !2020, line: 64, baseType: !27, size: 16, offset: 64)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2476, file: !2020, line: 65, baseType: !27, size: 16, offset: 80)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !2476, file: !2020, line: 67, baseType: !1727, size: 32, offset: 96)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !2476, file: !2020, line: 68, baseType: !1727, size: 32, offset: 128)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !2476, file: !2020, line: 69, baseType: !1727, size: 32, offset: 160)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2476, file: !2020, line: 70, baseType: !27, size: 16, offset: 192)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2476, file: !2020, line: 71, baseType: !27, size: 16, offset: 208)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !2476, file: !2020, line: 72, baseType: !1754, size: 64, offset: 224)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !2476, file: !2020, line: 75, baseType: !1727, size: 32, offset: 288)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !2476, file: !2020, line: 75, baseType: !1727, size: 32, offset: 320)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !2476, file: !2020, line: 75, baseType: !1727, size: 32, offset: 352)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !2476, file: !2020, line: 78, baseType: !1727, size: 32, offset: 384)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !2476, file: !2020, line: 78, baseType: !1727, size: 32, offset: 416)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !2444, file: !2020, line: 343, baseType: !13, size: 128, offset: 1024)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !2444, file: !2020, line: 344, baseType: !13, size: 128, offset: 1152)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !2444, file: !2020, line: 345, baseType: !2495, size: 192, offset: 1280)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !2020, line: 278, baseType: !2496)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !2020, line: 270, size: 192, elements: !2497)
!2497 = !{!2498, !2499, !2500, !2501, !2502}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2496, file: !2020, line: 271, baseType: !35, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2496, file: !2020, line: 273, baseType: !1727, size: 32, offset: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !2496, file: !2020, line: 275, baseType: !35, size: 32, offset: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !2496, file: !2020, line: 276, baseType: !35, size: 32, offset: 96)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !2496, file: !2020, line: 277, baseType: !2503, size: 64, offset: 128)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 64)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !2020, line: 55, size: 576, elements: !2505)
!2505 = !{!2506, !2507, !2508}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2504, file: !2020, line: 56, baseType: !35, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2504, file: !2020, line: 57, baseType: !1727, size: 32, offset: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2504, file: !2020, line: 58, baseType: !2071, size: 512, offset: 64)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !2444, file: !2020, line: 346, baseType: !2510, size: 384, offset: 1472)
!2510 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !2020, line: 268, baseType: !2511)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !2020, line: 253, size: 384, elements: !2512)
!2512 = !{!2513, !2514, !2515, !2516, !2517, !2561, !2562, !2563, !2564, !2565, !2566}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2511, file: !2020, line: 254, baseType: !35, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !2511, file: !2020, line: 255, baseType: !35, size: 32, offset: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2511, file: !2020, line: 255, baseType: !35, size: 32, offset: 64)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !2511, file: !2020, line: 258, baseType: !1727, size: 32, offset: 96)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !2511, file: !2020, line: 259, baseType: !2518, size: 64, offset: 128)
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 64)
!2519 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !2020, line: 164, baseType: !2520)
!2520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !2020, line: 108, size: 1664, elements: !2521)
!2521 = !{!2522, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2520, file: !2020, line: 109, baseType: !2523, size: 64)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2520, file: !2020, line: 109, baseType: !2523, size: 64, offset: 64)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2520, file: !2020, line: 111, baseType: !22, size: 512, offset: 128)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !2520, file: !2020, line: 119, baseType: !1754, size: 64, offset: 640)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !2520, file: !2020, line: 119, baseType: !1754, size: 64, offset: 704)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2520, file: !2020, line: 125, baseType: !1754, size: 64, offset: 768)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2520, file: !2020, line: 125, baseType: !1754, size: 64, offset: 832)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2520, file: !2020, line: 127, baseType: !1754, size: 64, offset: 896)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2520, file: !2020, line: 130, baseType: !35, size: 32, offset: 960)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2520, file: !2020, line: 131, baseType: !35, size: 32, offset: 992)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2520, file: !2020, line: 132, baseType: !2534, size: 64, offset: 1024)
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 64)
!2535 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !2020, line: 106, baseType: !2536)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !2020, line: 81, size: 512, elements: !2537)
!2537 = !{!2538, !2539, !2542, !2543, !2544, !2545}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2536, file: !2020, line: 82, baseType: !1754, size: 64)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !2536, file: !2020, line: 97, baseType: !2540, size: 256, offset: 64)
!2540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1727, size: 256, elements: !2541)
!2541 = !{!2064, !1756}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2536, file: !2020, line: 102, baseType: !1754, size: 64, offset: 320)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2536, file: !2020, line: 102, baseType: !1754, size: 64, offset: 384)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2536, file: !2020, line: 104, baseType: !35, size: 32, offset: 448)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2536, file: !2020, line: 105, baseType: !35, size: 32, offset: 480)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !2520, file: !2020, line: 135, baseType: !1987, size: 96, offset: 1088)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2520, file: !2020, line: 136, baseType: !1727, size: 32, offset: 1184)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2520, file: !2020, line: 139, baseType: !35, size: 32, offset: 1216)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !2520, file: !2020, line: 139, baseType: !35, size: 32, offset: 1248)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !2520, file: !2020, line: 139, baseType: !35, size: 32, offset: 1280)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !2520, file: !2020, line: 140, baseType: !1987, size: 96, offset: 1312)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !2520, file: !2020, line: 143, baseType: !27, size: 16, offset: 1408)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2520, file: !2020, line: 144, baseType: !27, size: 16, offset: 1424)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !2520, file: !2020, line: 145, baseType: !27, size: 16, offset: 1440)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !2520, file: !2020, line: 148, baseType: !27, size: 16, offset: 1456)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !2520, file: !2020, line: 149, baseType: !35, size: 32, offset: 1472)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !2520, file: !2020, line: 150, baseType: !1727, size: 32, offset: 1504)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2520, file: !2020, line: 152, baseType: !2018, size: 64, offset: 1536)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2520, file: !2020, line: 163, baseType: !1727, size: 32, offset: 1600)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2520, file: !2020, line: 163, baseType: !1727, size: 32, offset: 1632)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !2511, file: !2020, line: 261, baseType: !1727, size: 32, offset: 192)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !2511, file: !2020, line: 261, baseType: !1727, size: 32, offset: 224)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !2511, file: !2020, line: 261, baseType: !1727, size: 32, offset: 256)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2511, file: !2020, line: 263, baseType: !35, size: 32, offset: 288)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2511, file: !2020, line: 266, baseType: !35, size: 32, offset: 320)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2511, file: !2020, line: 267, baseType: !1727, size: 32, offset: 352)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2444, file: !2020, line: 347, baseType: !2518, size: 64, offset: 1856)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !2444, file: !2020, line: 348, baseType: !2569, size: 64, offset: 1920)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2570, size: 64)
!2570 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !2020, line: 205, baseType: !2571)
!2571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !2020, line: 186, size: 1024, elements: !2572)
!2572 = !{!2573, !2575, !2576, !2577, !2579, !2580, !2581, !2589, !2590, !2591, !2665, !2666}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2571, file: !2020, line: 187, baseType: !2574, size: 64)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2571, file: !2020, line: 187, baseType: !2574, size: 64, offset: 64)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2571, file: !2020, line: 189, baseType: !22, size: 512, offset: 128)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !2571, file: !2020, line: 191, baseType: !2578, size: 64, offset: 640)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !2571, file: !2020, line: 193, baseType: !35, size: 32, offset: 704)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2571, file: !2020, line: 193, baseType: !35, size: 32, offset: 736)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2571, file: !2020, line: 195, baseType: !2582, size: 64, offset: 768)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 64)
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !2020, line: 184, baseType: !2584)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !2020, line: 166, size: 320, elements: !2585)
!2585 = !{!2586, !2587, !2588}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !2584, file: !2020, line: 180, baseType: !2540, size: 256)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2584, file: !2020, line: 182, baseType: !35, size: 32, offset: 256)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2584, file: !2020, line: 183, baseType: !35, size: 32, offset: 288)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2571, file: !2020, line: 196, baseType: !35, size: 32, offset: 832)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2571, file: !2020, line: 198, baseType: !35, size: 32, offset: 864)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2571, file: !2020, line: 200, baseType: !2592, size: 64, offset: 896)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !2185, line: 77, size: 15424, elements: !2594)
!2594 = !{!2595, !2596, !2597, !2600, !2603, !2604, !2607, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2626, !2627, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2659}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2593, file: !2185, line: 78, baseType: !1798, size: 960)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2593, file: !2185, line: 80, baseType: !1817, size: 8192, offset: 960)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2593, file: !2185, line: 82, baseType: !2598, size: 64, offset: 9152)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !2185, line: 43, flags: DIFlagFwdDecl)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !2593, file: !2185, line: 83, baseType: !2601, size: 64, offset: 9216)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64)
!2602 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !1799, line: 46, flags: DIFlagFwdDecl)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2593, file: !2185, line: 86, baseType: !2383, size: 64, offset: 9280)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !2593, file: !2185, line: 87, baseType: !2605, size: 64, offset: 9344)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 64)
!2606 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !2185, line: 44, flags: DIFlagFwdDecl)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !2593, file: !2185, line: 89, baseType: !2608, size: 512, offset: 9408)
!2608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2605, size: 512, elements: !2609)
!2609 = !{!1966}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !2593, file: !2185, line: 90, baseType: !27, size: 16, offset: 9920)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !2593, file: !2185, line: 90, baseType: !27, size: 16, offset: 9936)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2593, file: !2185, line: 92, baseType: !27, size: 16, offset: 9952)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2593, file: !2185, line: 92, baseType: !27, size: 16, offset: 9968)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2593, file: !2185, line: 93, baseType: !27, size: 16, offset: 9984)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2593, file: !2185, line: 93, baseType: !27, size: 16, offset: 10000)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2593, file: !2185, line: 94, baseType: !35, size: 32, offset: 10016)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !2593, file: !2185, line: 97, baseType: !27, size: 16, offset: 10048)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !2593, file: !2185, line: 97, baseType: !27, size: 16, offset: 10064)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !2593, file: !2185, line: 98, baseType: !27, size: 16, offset: 10080)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !2593, file: !2185, line: 98, baseType: !27, size: 16, offset: 10096)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !2593, file: !2185, line: 99, baseType: !27, size: 16, offset: 10112)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !2593, file: !2185, line: 99, baseType: !27, size: 16, offset: 10128)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !2593, file: !2185, line: 100, baseType: !56, size: 32, offset: 10144)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !2593, file: !2185, line: 101, baseType: !2625, size: 64, offset: 10176)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 64)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !2593, file: !2185, line: 103, baseType: !1823, size: 64, offset: 10240)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2593, file: !2185, line: 104, baseType: !2628, size: 64, offset: 10304)
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 64)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !1799, line: 159, size: 448, elements: !2630)
!2630 = !{!2631, !2633, !2634, !2636, !2637, !2639}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2629, file: !1799, line: 161, baseType: !2632, size: 64)
!2632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 64, elements: !1755)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2629, file: !1799, line: 162, baseType: !2632, size: 64, offset: 64)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2629, file: !1799, line: 163, baseType: !2635, size: 32, offset: 128)
!2635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 32, elements: !1755)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2629, file: !1799, line: 164, baseType: !2635, size: 32, offset: 160)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !2629, file: !1799, line: 165, baseType: !2638, size: 128, offset: 192)
!2638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2625, size: 128, elements: !1755)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !2629, file: !1799, line: 166, baseType: !2640, size: 128, offset: 320)
!2640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2601, size: 128, elements: !1755)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !2593, file: !2185, line: 107, baseType: !1727, size: 32, offset: 10368)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !2593, file: !2185, line: 108, baseType: !35, size: 32, offset: 10400)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !2593, file: !2185, line: 109, baseType: !27, size: 16, offset: 10432)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2593, file: !2185, line: 110, baseType: !27, size: 16, offset: 10448)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !2593, file: !2185, line: 113, baseType: !35, size: 32, offset: 10464)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !2593, file: !2185, line: 113, baseType: !35, size: 32, offset: 10496)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !2593, file: !2185, line: 114, baseType: !23, size: 8, offset: 10528)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !2593, file: !2185, line: 114, baseType: !23, size: 8, offset: 10536)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !2593, file: !2185, line: 115, baseType: !27, size: 16, offset: 10544)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !2593, file: !2185, line: 116, baseType: !2062, size: 128, offset: 10560)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !2593, file: !2185, line: 119, baseType: !1727, size: 32, offset: 10688)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !2593, file: !2185, line: 119, baseType: !1727, size: 32, offset: 10720)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2593, file: !2185, line: 122, baseType: !2416, size: 512, offset: 10752)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !2593, file: !2185, line: 123, baseType: !23, size: 8, offset: 11264)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2593, file: !2185, line: 125, baseType: !2656, size: 56, offset: 11272)
!2656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 56, elements: !2657)
!2657 = !{!2658}
!2658 = !DISubrange(count: 7)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !2593, file: !2185, line: 126, baseType: !2660, size: 4096, offset: 11328)
!2660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2661, size: 4096, elements: !2609)
!2661 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !2185, line: 69, baseType: !2662)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !2185, line: 67, size: 512, elements: !2663)
!2663 = !{!2664}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2662, file: !2185, line: 68, baseType: !22, size: 512)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !2571, file: !2020, line: 201, baseType: !1727, size: 32, offset: 960)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2571, file: !2020, line: 204, baseType: !35, size: 32, offset: 992)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2444, file: !2020, line: 350, baseType: !13, size: 128, offset: 1984)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !2444, file: !2020, line: 351, baseType: !35, size: 32, offset: 2112)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !2444, file: !2020, line: 351, baseType: !35, size: 32, offset: 2144)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2444, file: !2020, line: 353, baseType: !2671, size: 64, offset: 2176)
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 64)
!2672 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !2020, line: 297, baseType: !2673)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !2020, line: 295, size: 2048, elements: !2674)
!2674 = !{!2675}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !2673, file: !2020, line: 296, baseType: !2366, size: 2048)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !2444, file: !2020, line: 355, baseType: !2677, size: 384, offset: 2240)
!2677 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !2020, line: 338, baseType: !2678)
!2678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !2020, line: 322, size: 384, elements: !2679)
!2679 = !{!2680, !2681, !2682, !2683, !2684, !2685, !2686}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2678, file: !2020, line: 323, baseType: !35, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !2678, file: !2020, line: 325, baseType: !27, size: 16, offset: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2678, file: !2020, line: 326, baseType: !27, size: 16, offset: 48)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !2678, file: !2020, line: 331, baseType: !13, size: 128, offset: 64)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2678, file: !2020, line: 334, baseType: !13, size: 128, offset: 192)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !2678, file: !2020, line: 335, baseType: !35, size: 32, offset: 320)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2678, file: !2020, line: 337, baseType: !35, size: 32, offset: 352)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !2426, file: !2427, line: 81, baseType: !18, size: 64, offset: 12224)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !2426, file: !2427, line: 85, baseType: !2689, size: 6208, offset: 12288)
!2689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !2427, line: 55, size: 6208, elements: !2690)
!2690 = !{!2691, !2692, !2693, !2694, !2695}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2689, file: !2427, line: 56, baseType: !2372, size: 6144)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2689, file: !2427, line: 58, baseType: !27, size: 16, offset: 6144)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2689, file: !2427, line: 59, baseType: !27, size: 16, offset: 6160)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !2689, file: !2427, line: 60, baseType: !27, size: 16, offset: 6176)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !2689, file: !2427, line: 61, baseType: !27, size: 16, offset: 6192)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2426, file: !2427, line: 86, baseType: !35, size: 32, offset: 18496)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2426, file: !2427, line: 88, baseType: !35, size: 32, offset: 18528)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2426, file: !2427, line: 90, baseType: !35, size: 32, offset: 18560)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !2426, file: !2427, line: 94, baseType: !35, size: 32, offset: 18592)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2426, file: !2427, line: 100, baseType: !2416, size: 512, offset: 18624)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2321, file: !2313, line: 154, baseType: !2702, size: 64, offset: 1664)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64)
!2703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !2704, line: 46, size: 1344, elements: !2705)
!2704 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mask_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2705 = !{!2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2703, file: !2704, line: 47, baseType: !1798, size: 960)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2703, file: !2704, line: 48, baseType: !1867, size: 64, offset: 960)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "masklayers", scope: !2703, file: !2704, line: 49, baseType: !13, size: 128, offset: 1024)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "masklay_act", scope: !2703, file: !2704, line: 50, baseType: !35, size: 32, offset: 1152)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "masklay_tot", scope: !2703, file: !2704, line: 51, baseType: !35, size: 32, offset: 1184)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2703, file: !2704, line: 53, baseType: !35, size: 32, offset: 1216)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2703, file: !2704, line: 53, baseType: !35, size: 32, offset: 1248)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2703, file: !2704, line: 55, baseType: !35, size: 32, offset: 1280)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2703, file: !2704, line: 56, baseType: !35, size: 32, offset: 1312)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2321, file: !2313, line: 156, baseType: !2383, size: 64, offset: 1728)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !2321, file: !2313, line: 158, baseType: !1727, size: 32, offset: 1792)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !2321, file: !2313, line: 159, baseType: !1727, size: 32, offset: 1824)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !2321, file: !2313, line: 162, baseType: !2324, size: 64, offset: 1856)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !2321, file: !2313, line: 162, baseType: !2324, size: 64, offset: 1920)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !2321, file: !2313, line: 162, baseType: !2324, size: 64, offset: 1984)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !2321, file: !2313, line: 164, baseType: !13, size: 128, offset: 2048)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !2321, file: !2313, line: 166, baseType: !2723, size: 64, offset: 2176)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !2313, line: 51, flags: DIFlagFwdDecl)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !2321, file: !2313, line: 167, baseType: !18, size: 64, offset: 2240)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2321, file: !2313, line: 168, baseType: !1727, size: 32, offset: 2304)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !2321, file: !2313, line: 170, baseType: !1727, size: 32, offset: 2336)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !2321, file: !2313, line: 170, baseType: !1727, size: 32, offset: 2368)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !2321, file: !2313, line: 171, baseType: !1727, size: 32, offset: 2400)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !2321, file: !2313, line: 173, baseType: !18, size: 64, offset: 2432)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !2321, file: !2313, line: 175, baseType: !35, size: 32, offset: 2496)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !2321, file: !2313, line: 176, baseType: !35, size: 32, offset: 2528)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !2321, file: !2313, line: 179, baseType: !35, size: 32, offset: 2560)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !2321, file: !2313, line: 180, baseType: !1727, size: 32, offset: 2592)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2321, file: !2313, line: 183, baseType: !35, size: 32, offset: 2624)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !2321, file: !2313, line: 185, baseType: !23, size: 8, offset: 2656)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2321, file: !2313, line: 186, baseType: !2738, size: 24, offset: 2664)
!2738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 24, elements: !1988)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !2321, file: !2313, line: 189, baseType: !13, size: 128, offset: 2688)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !2312, file: !2313, line: 207, baseType: !1817, size: 8192, offset: 384)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !2312, file: !2313, line: 208, baseType: !1817, size: 8192, offset: 8576)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !2312, file: !2313, line: 210, baseType: !35, size: 32, offset: 16768)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !2312, file: !2313, line: 210, baseType: !35, size: 32, offset: 16800)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !2312, file: !2313, line: 211, baseType: !35, size: 32, offset: 16832)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2312, file: !2313, line: 211, baseType: !35, size: 32, offset: 16864)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !2312, file: !2313, line: 212, baseType: !1734, size: 128, offset: 16896)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1862, file: !1863, line: 1246, baseType: !2748, size: 64, offset: 2112)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64)
!2749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !1863, line: 1067, size: 5184, elements: !2750)
!2750 = !{!2751, !2781, !2782, !2797, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2819, !2835, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2945}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !2749, file: !1863, line: 1068, baseType: !2752, size: 64)
!2752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 64)
!2753 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !1863, line: 934, baseType: !2754)
!2754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !1863, line: 925, size: 576, elements: !2755)
!2755 = !{!2756, !2773, !2774, !2775, !2776, !2777, !2780}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2754, file: !1863, line: 926, baseType: !2757, size: 320)
!2757 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !1863, line: 830, baseType: !2758)
!2758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !1863, line: 813, size: 320, elements: !2759)
!2759 = !{!2760, !2763, !2766, !2767, !2770, !2771, !2772}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2758, file: !1863, line: 814, baseType: !2761, size: 64)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 64)
!2762 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1863, line: 51, flags: DIFlagFwdDecl)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !2758, file: !1863, line: 815, baseType: !2764, size: 64, offset: 64)
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 64)
!2765 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1863, line: 815, flags: DIFlagFwdDecl)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !2758, file: !1863, line: 818, baseType: !18, size: 64, offset: 128)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !2758, file: !1863, line: 819, baseType: !2768, size: 32, offset: 192)
!2768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2769, size: 32, elements: !2063)
!2769 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2758, file: !1863, line: 822, baseType: !35, size: 32, offset: 224)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !2758, file: !1863, line: 826, baseType: !35, size: 32, offset: 256)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !2758, file: !1863, line: 829, baseType: !35, size: 32, offset: 288)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2754, file: !1863, line: 928, baseType: !27, size: 16, offset: 320)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2754, file: !1863, line: 928, baseType: !27, size: 16, offset: 336)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2754, file: !1863, line: 929, baseType: !35, size: 32, offset: 352)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !2754, file: !1863, line: 930, baseType: !2625, size: 64, offset: 384)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !2754, file: !1863, line: 931, baseType: !2778, size: 64, offset: 448)
!2778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2779, size: 64)
!2779 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !1863, line: 931, flags: DIFlagFwdDecl)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2754, file: !1863, line: 933, baseType: !18, size: 64, offset: 512)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !2749, file: !1863, line: 1069, baseType: !2752, size: 64, offset: 64)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !2749, file: !1863, line: 1070, baseType: !2783, size: 64, offset: 128)
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 64)
!2784 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !1863, line: 916, baseType: !2785)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !1863, line: 891, size: 704, elements: !2786)
!2786 = !{!2787, !2788, !2789, !2791, !2792, !2793, !2794, !2795, !2796}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2785, file: !1863, line: 892, baseType: !2757, size: 320)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2785, file: !1863, line: 896, baseType: !35, size: 32, offset: 320)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !2785, file: !1863, line: 900, baseType: !2790, size: 96, offset: 352)
!2790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 96, elements: !1988)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !2785, file: !1863, line: 903, baseType: !1727, size: 32, offset: 448)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !2785, file: !1863, line: 906, baseType: !35, size: 32, offset: 480)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !2785, file: !1863, line: 909, baseType: !1727, size: 32, offset: 512)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !2785, file: !1863, line: 912, baseType: !1727, size: 32, offset: 544)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !2785, file: !1863, line: 914, baseType: !1936, size: 64, offset: 576)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2785, file: !1863, line: 915, baseType: !18, size: 64, offset: 640)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !2749, file: !1863, line: 1071, baseType: !2798, size: 64, offset: 192)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 64)
!2799 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !1863, line: 920, baseType: !2800)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !1863, line: 918, size: 320, elements: !2801)
!2801 = !{!2802}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2800, file: !1863, line: 919, baseType: !2757, size: 320)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !2749, file: !1863, line: 1075, baseType: !1727, size: 32, offset: 256)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !2749, file: !1863, line: 1077, baseType: !1727, size: 32, offset: 288)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !2749, file: !1863, line: 1078, baseType: !1727, size: 32, offset: 320)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !2749, file: !1863, line: 1079, baseType: !27, size: 16, offset: 352)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2749, file: !1863, line: 1082, baseType: !27, size: 16, offset: 368)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !2749, file: !1863, line: 1085, baseType: !23, size: 8, offset: 384)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !2749, file: !1863, line: 1086, baseType: !23, size: 8, offset: 392)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !2749, file: !1863, line: 1087, baseType: !23, size: 8, offset: 400)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !2749, file: !1863, line: 1088, baseType: !23, size: 8, offset: 408)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !2749, file: !1863, line: 1090, baseType: !1727, size: 32, offset: 416)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !2749, file: !1863, line: 1093, baseType: !27, size: 16, offset: 448)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !2749, file: !1863, line: 1096, baseType: !23, size: 8, offset: 464)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2749, file: !1863, line: 1098, baseType: !2816, size: 40, offset: 472)
!2816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 40, elements: !2817)
!2817 = !{!2818}
!2818 = !DISubrange(count: 5)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !2749, file: !1863, line: 1101, baseType: !2820, size: 832, offset: 512)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !1863, line: 836, size: 832, elements: !2821)
!2821 = !{!2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2820, file: !1863, line: 837, baseType: !2757, size: 320)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2820, file: !1863, line: 839, baseType: !27, size: 16, offset: 320)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2820, file: !1863, line: 839, baseType: !27, size: 16, offset: 336)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2820, file: !1863, line: 842, baseType: !27, size: 16, offset: 352)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2820, file: !1863, line: 842, baseType: !27, size: 16, offset: 368)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2820, file: !1863, line: 843, baseType: !2635, size: 32, offset: 384)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2820, file: !1863, line: 845, baseType: !35, size: 32, offset: 416)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2820, file: !1863, line: 847, baseType: !18, size: 64, offset: 448)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2820, file: !1863, line: 848, baseType: !2592, size: 64, offset: 512)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2820, file: !1863, line: 849, baseType: !2592, size: 64, offset: 576)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2820, file: !1863, line: 850, baseType: !2592, size: 64, offset: 640)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2820, file: !1863, line: 851, baseType: !1987, size: 96, offset: 704)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2820, file: !1863, line: 852, baseType: !1727, size: 32, offset: 800)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2749, file: !1863, line: 1104, baseType: !2836, size: 1344, offset: 1344)
!2836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !1863, line: 867, size: 1344, elements: !2837)
!2837 = !{!2838, !2839, !2840, !2841, !2842, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2836, file: !1863, line: 868, baseType: !27, size: 16)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2836, file: !1863, line: 869, baseType: !27, size: 16, offset: 16)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2836, file: !1863, line: 870, baseType: !27, size: 16, offset: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2836, file: !1863, line: 871, baseType: !27, size: 16, offset: 48)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2836, file: !1863, line: 873, baseType: !2843, size: 896, offset: 64)
!2843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2844, size: 896, elements: !2657)
!2844 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !1863, line: 864, baseType: !2845)
!2845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !1863, line: 859, size: 128, elements: !2846)
!2846 = !{!2847, !2848, !2849, !2850, !2851, !2852}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2845, file: !1863, line: 860, baseType: !27, size: 16)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2845, file: !1863, line: 861, baseType: !27, size: 16, offset: 16)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2845, file: !1863, line: 861, baseType: !27, size: 16, offset: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2845, file: !1863, line: 861, baseType: !27, size: 16, offset: 48)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2845, file: !1863, line: 862, baseType: !35, size: 32, offset: 64)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2845, file: !1863, line: 863, baseType: !1727, size: 32, offset: 96)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2836, file: !1863, line: 874, baseType: !18, size: 64, offset: 960)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2836, file: !1863, line: 876, baseType: !1727, size: 32, offset: 1024)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2836, file: !1863, line: 876, baseType: !1727, size: 32, offset: 1056)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2836, file: !1863, line: 878, baseType: !35, size: 32, offset: 1088)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2836, file: !1863, line: 879, baseType: !35, size: 32, offset: 1120)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2836, file: !1863, line: 881, baseType: !35, size: 32, offset: 1152)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2836, file: !1863, line: 881, baseType: !35, size: 32, offset: 1184)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2836, file: !1863, line: 883, baseType: !1861, size: 64, offset: 1216)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2836, file: !1863, line: 884, baseType: !1936, size: 64, offset: 1280)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !2749, file: !1863, line: 1107, baseType: !1727, size: 32, offset: 2688)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !2749, file: !1863, line: 1110, baseType: !1727, size: 32, offset: 2720)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !2749, file: !1863, line: 1113, baseType: !27, size: 16, offset: 2752)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !2749, file: !1863, line: 1113, baseType: !27, size: 16, offset: 2768)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !2749, file: !1863, line: 1116, baseType: !23, size: 8, offset: 2784)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2749, file: !1863, line: 1117, baseType: !2242, size: 8, offset: 2792)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !2749, file: !1863, line: 1120, baseType: !27, size: 16, offset: 2800)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !2749, file: !1863, line: 1121, baseType: !1727, size: 32, offset: 2816)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !2749, file: !1863, line: 1122, baseType: !1727, size: 32, offset: 2848)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !2749, file: !1863, line: 1123, baseType: !1727, size: 32, offset: 2880)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !2749, file: !1863, line: 1124, baseType: !1727, size: 32, offset: 2912)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !2749, file: !1863, line: 1125, baseType: !1727, size: 32, offset: 2944)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !2749, file: !1863, line: 1126, baseType: !1727, size: 32, offset: 2976)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !2749, file: !1863, line: 1127, baseType: !1727, size: 32, offset: 3008)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !2749, file: !1863, line: 1128, baseType: !1727, size: 32, offset: 3040)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !2749, file: !1863, line: 1129, baseType: !1727, size: 32, offset: 3072)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !2749, file: !1863, line: 1130, baseType: !1727, size: 32, offset: 3104)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !2749, file: !1863, line: 1131, baseType: !27, size: 16, offset: 3136)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !2749, file: !1863, line: 1132, baseType: !23, size: 8, offset: 3152)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !2749, file: !1863, line: 1133, baseType: !23, size: 8, offset: 3160)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !2749, file: !1863, line: 1134, baseType: !2738, size: 24, offset: 3168)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !2749, file: !1863, line: 1135, baseType: !23, size: 8, offset: 3192)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !2749, file: !1863, line: 1138, baseType: !1936, size: 64, offset: 3200)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !2749, file: !1863, line: 1139, baseType: !23, size: 8, offset: 3264)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !2749, file: !1863, line: 1140, baseType: !23, size: 8, offset: 3272)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !2749, file: !1863, line: 1141, baseType: !23, size: 8, offset: 3280)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !2749, file: !1863, line: 1142, baseType: !23, size: 8, offset: 3288)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !2749, file: !1863, line: 1143, baseType: !23, size: 8, offset: 3296)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !2749, file: !1863, line: 1144, baseType: !2891, size: 64, offset: 3304)
!2891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 64, elements: !2609)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !2749, file: !1863, line: 1145, baseType: !2891, size: 64, offset: 3368)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !2749, file: !1863, line: 1148, baseType: !23, size: 8, offset: 3432)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !2749, file: !1863, line: 1149, baseType: !23, size: 8, offset: 3440)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !2749, file: !1863, line: 1152, baseType: !23, size: 8, offset: 3448)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !2749, file: !1863, line: 1152, baseType: !23, size: 8, offset: 3456)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !2749, file: !1863, line: 1153, baseType: !23, size: 8, offset: 3464)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !2749, file: !1863, line: 1154, baseType: !27, size: 16, offset: 3472)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !2749, file: !1863, line: 1154, baseType: !27, size: 16, offset: 3488)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !2749, file: !1863, line: 1155, baseType: !27, size: 16, offset: 3504)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !2749, file: !1863, line: 1155, baseType: !27, size: 16, offset: 3520)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !2749, file: !1863, line: 1156, baseType: !23, size: 8, offset: 3536)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !2749, file: !1863, line: 1157, baseType: !23, size: 8, offset: 3544)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !2749, file: !1863, line: 1159, baseType: !23, size: 8, offset: 3552)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !2749, file: !1863, line: 1160, baseType: !23, size: 8, offset: 3560)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !2749, file: !1863, line: 1161, baseType: !23, size: 8, offset: 3568)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !2749, file: !1863, line: 1162, baseType: !23, size: 8, offset: 3576)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !2749, file: !1863, line: 1165, baseType: !35, size: 32, offset: 3584)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !2749, file: !1863, line: 1166, baseType: !35, size: 32, offset: 3616)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !2749, file: !1863, line: 1167, baseType: !35, size: 32, offset: 3648)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !2749, file: !1863, line: 1168, baseType: !35, size: 32, offset: 3680)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !2749, file: !1863, line: 1171, baseType: !27, size: 16, offset: 3712)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2749, file: !1863, line: 1171, baseType: !27, size: 16, offset: 3728)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !2749, file: !1863, line: 1172, baseType: !35, size: 32, offset: 3744)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !2749, file: !1863, line: 1173, baseType: !1727, size: 32, offset: 3776)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !2749, file: !1863, line: 1174, baseType: !1727, size: 32, offset: 3808)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !2749, file: !1863, line: 1177, baseType: !2918, size: 1024, offset: 3840)
!2918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !1863, line: 963, size: 1024, elements: !2919)
!2919 = !{!2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2943, !2944}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2918, file: !1863, line: 965, baseType: !35, size: 32)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2918, file: !1863, line: 968, baseType: !1727, size: 32, offset: 32)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2918, file: !1863, line: 971, baseType: !1727, size: 32, offset: 64)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2918, file: !1863, line: 974, baseType: !1727, size: 32, offset: 96)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2918, file: !1863, line: 977, baseType: !1987, size: 96, offset: 128)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2918, file: !1863, line: 979, baseType: !1987, size: 96, offset: 224)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2918, file: !1863, line: 982, baseType: !35, size: 32, offset: 320)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2918, file: !1863, line: 987, baseType: !1754, size: 64, offset: 352)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2918, file: !1863, line: 989, baseType: !1727, size: 32, offset: 416)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2918, file: !1863, line: 994, baseType: !35, size: 32, offset: 448)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2918, file: !1863, line: 995, baseType: !35, size: 32, offset: 480)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2918, file: !1863, line: 997, baseType: !23, size: 8, offset: 512)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2918, file: !1863, line: 998, baseType: !2656, size: 56, offset: 520)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2918, file: !1863, line: 1000, baseType: !1727, size: 32, offset: 576)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2918, file: !1863, line: 1003, baseType: !1754, size: 64, offset: 608)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2918, file: !1863, line: 1006, baseType: !35, size: 32, offset: 672)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2918, file: !1863, line: 1009, baseType: !1727, size: 32, offset: 704)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2918, file: !1863, line: 1012, baseType: !1754, size: 64, offset: 736)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2918, file: !1863, line: 1015, baseType: !1754, size: 64, offset: 800)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2918, file: !1863, line: 1018, baseType: !35, size: 32, offset: 864)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2918, file: !1863, line: 1019, baseType: !2941, size: 64, offset: 896)
!2941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2942, size: 64)
!2942 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1863, line: 63, flags: DIFlagFwdDecl)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2918, file: !1863, line: 1023, baseType: !1727, size: 32, offset: 960)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2918, file: !1863, line: 1024, baseType: !35, size: 32, offset: 992)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !2749, file: !1863, line: 1179, baseType: !2946, size: 320, offset: 4864)
!2946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !1863, line: 1043, size: 320, elements: !2947)
!2947 = !{!2948, !2949, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2946, file: !1863, line: 1044, baseType: !23, size: 8)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2946, file: !1863, line: 1045, baseType: !2950, size: 16, offset: 8)
!2950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 16, elements: !1755)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2946, file: !1863, line: 1048, baseType: !23, size: 8, offset: 24)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2946, file: !1863, line: 1049, baseType: !1727, size: 32, offset: 32)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2946, file: !1863, line: 1049, baseType: !1727, size: 32, offset: 64)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2946, file: !1863, line: 1052, baseType: !1727, size: 32, offset: 96)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2946, file: !1863, line: 1052, baseType: !1727, size: 32, offset: 128)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2946, file: !1863, line: 1053, baseType: !23, size: 8, offset: 160)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2946, file: !1863, line: 1054, baseType: !2738, size: 24, offset: 168)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2946, file: !1863, line: 1057, baseType: !1727, size: 32, offset: 192)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2946, file: !1863, line: 1057, baseType: !1727, size: 32, offset: 224)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2946, file: !1863, line: 1060, baseType: !1727, size: 32, offset: 256)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2946, file: !1863, line: 1060, baseType: !1727, size: 32, offset: 288)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1862, file: !1863, line: 1247, baseType: !2963, size: 64, offset: 2176)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !1863, line: 60, flags: DIFlagFwdDecl)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1862, file: !1863, line: 1251, baseType: !2966, size: 31872, offset: 2240)
!2966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !1863, line: 403, size: 31872, elements: !2967)
!2967 = !{!2968, !3043, !3063, !3072, !3092, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3222, !3223, !3224, !3228, !3244, !3245}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2966, file: !1863, line: 404, baseType: !2969, size: 1984)
!2969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !1863, line: 259, size: 1984, elements: !2970)
!2970 = !{!2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2988, !3038}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2969, file: !1863, line: 260, baseType: !23, size: 8)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2969, file: !1863, line: 263, baseType: !23, size: 8, offset: 8)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2969, file: !1863, line: 266, baseType: !23, size: 8, offset: 16)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2969, file: !1863, line: 267, baseType: !23, size: 8, offset: 24)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2969, file: !1863, line: 269, baseType: !23, size: 8, offset: 32)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2969, file: !1863, line: 270, baseType: !23, size: 8, offset: 40)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2969, file: !1863, line: 276, baseType: !23, size: 8, offset: 48)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2969, file: !1863, line: 279, baseType: !23, size: 8, offset: 56)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2969, file: !1863, line: 280, baseType: !27, size: 16, offset: 64)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2969, file: !1863, line: 280, baseType: !27, size: 16, offset: 80)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2969, file: !1863, line: 281, baseType: !1727, size: 32, offset: 96)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2969, file: !1863, line: 284, baseType: !23, size: 8, offset: 128)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2969, file: !1863, line: 285, baseType: !23, size: 8, offset: 136)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2969, file: !1863, line: 287, baseType: !2985, size: 48, offset: 144)
!2985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 48, elements: !2986)
!2986 = !{!2987}
!2987 = !DISubrange(count: 6)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2969, file: !1863, line: 290, baseType: !2989, size: 1280, offset: 192)
!2989 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !2417, line: 174, baseType: !2990)
!2990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !2417, line: 166, size: 1280, elements: !2991)
!2991 = !{!2992, !2993, !2994, !2995, !2996, !2997, !2998, !3037}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2990, file: !2417, line: 167, baseType: !35, size: 32)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2990, file: !2417, line: 167, baseType: !35, size: 32, offset: 32)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2990, file: !2417, line: 168, baseType: !22, size: 512, offset: 64)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2990, file: !2417, line: 169, baseType: !22, size: 512, offset: 576)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2990, file: !2417, line: 170, baseType: !1727, size: 32, offset: 1088)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2990, file: !2417, line: 171, baseType: !1727, size: 32, offset: 1120)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2990, file: !2417, line: 172, baseType: !2999, size: 64, offset: 1152)
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 64)
!3000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !2417, line: 72, size: 3072, elements: !3001)
!3001 = !{!3002, !3003, !3004, !3005, !3006, !3007, !3008, !3033, !3034, !3035, !3036}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3000, file: !2417, line: 73, baseType: !35, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !3000, file: !2417, line: 73, baseType: !35, size: 32, offset: 32)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !3000, file: !2417, line: 74, baseType: !35, size: 32, offset: 64)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !3000, file: !2417, line: 75, baseType: !35, size: 32, offset: 96)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !3000, file: !2417, line: 77, baseType: !1734, size: 128, offset: 128)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !3000, file: !2417, line: 77, baseType: !1734, size: 128, offset: 256)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !3000, file: !2417, line: 79, baseType: !3009, size: 2304, offset: 384)
!3009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3010, size: 2304, elements: !2063)
!3010 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !2417, line: 67, baseType: !3011)
!3011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !2417, line: 55, size: 576, elements: !3012)
!3012 = !{!3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3029, !3030, !3031, !3032}
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3011, file: !2417, line: 56, baseType: !27, size: 16)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3011, file: !2417, line: 56, baseType: !27, size: 16, offset: 16)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3011, file: !2417, line: 58, baseType: !1727, size: 32, offset: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !3011, file: !2417, line: 59, baseType: !1727, size: 32, offset: 64)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !3011, file: !2417, line: 59, baseType: !1727, size: 32, offset: 96)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !3011, file: !2417, line: 60, baseType: !1754, size: 64, offset: 128)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !3011, file: !2417, line: 60, baseType: !1754, size: 64, offset: 192)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !3011, file: !2417, line: 61, baseType: !3021, size: 64, offset: 256)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 64)
!3022 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !2417, line: 47, baseType: !3023)
!3023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !2417, line: 44, size: 96, elements: !3024)
!3024 = !{!3025, !3026, !3027, !3028}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3023, file: !2417, line: 45, baseType: !1727, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3023, file: !2417, line: 45, baseType: !1727, size: 32, offset: 32)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3023, file: !2417, line: 46, baseType: !27, size: 16, offset: 64)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !3023, file: !2417, line: 46, baseType: !27, size: 16, offset: 80)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !3011, file: !2417, line: 62, baseType: !3021, size: 64, offset: 320)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !3011, file: !2417, line: 64, baseType: !3021, size: 64, offset: 384)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !3011, file: !2417, line: 65, baseType: !1754, size: 64, offset: 448)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !3011, file: !2417, line: 66, baseType: !1754, size: 64, offset: 512)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !3000, file: !2417, line: 80, baseType: !1987, size: 96, offset: 2688)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !3000, file: !2417, line: 80, baseType: !1987, size: 96, offset: 2784)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !3000, file: !2417, line: 81, baseType: !1987, size: 96, offset: 2880)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !3000, file: !2417, line: 83, baseType: !1987, size: 96, offset: 2976)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2990, file: !2417, line: 173, baseType: !18, size: 64, offset: 1216)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2969, file: !1863, line: 291, baseType: !3039, size: 512, offset: 1472)
!3039 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !2417, line: 178, baseType: !3040)
!3040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !2417, line: 176, size: 512, elements: !3041)
!3041 = !{!3042}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !3040, file: !2417, line: 177, baseType: !22, size: 512)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2966, file: !1863, line: 406, baseType: !3044, size: 64, offset: 1984)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!3045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !1863, line: 80, size: 1472, elements: !3046)
!3046 = !{!3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !3045, file: !1863, line: 81, baseType: !18, size: 64)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !3045, file: !1863, line: 82, baseType: !18, size: 64, offset: 64)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !3045, file: !1863, line: 83, baseType: !56, size: 32, offset: 128)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !3045, file: !1863, line: 84, baseType: !56, size: 32, offset: 160)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !3045, file: !1863, line: 86, baseType: !56, size: 32, offset: 192)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !3045, file: !1863, line: 87, baseType: !56, size: 32, offset: 224)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !3045, file: !1863, line: 88, baseType: !56, size: 32, offset: 256)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !3045, file: !1863, line: 89, baseType: !56, size: 32, offset: 288)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !3045, file: !1863, line: 90, baseType: !56, size: 32, offset: 320)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !3045, file: !1863, line: 91, baseType: !56, size: 32, offset: 352)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !3045, file: !1863, line: 92, baseType: !56, size: 32, offset: 384)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3045, file: !1863, line: 93, baseType: !56, size: 32, offset: 416)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !3045, file: !1863, line: 95, baseType: !3060, size: 1024, offset: 448)
!3060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 1024, elements: !3061)
!3061 = !{!3062}
!3062 = !DISubrange(count: 128)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2966, file: !1863, line: 407, baseType: !3064, size: 64, offset: 2048)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 64)
!3065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !1863, line: 98, size: 1216, elements: !3066)
!3066 = !{!3067, !3068, !3069, !3070, !3071}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !3065, file: !1863, line: 100, baseType: !18, size: 64)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3065, file: !1863, line: 101, baseType: !18, size: 64, offset: 64)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !3065, file: !1863, line: 103, baseType: !56, size: 32, offset: 128)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3065, file: !1863, line: 104, baseType: !56, size: 32, offset: 160)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !3065, file: !1863, line: 106, baseType: !3060, size: 1024, offset: 192)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2966, file: !1863, line: 408, baseType: !3073, size: 512, offset: 2112)
!3073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !1863, line: 109, size: 512, elements: !3074)
!3074 = !{!3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !3073, file: !1863, line: 111, baseType: !35, size: 32)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !3073, file: !1863, line: 112, baseType: !35, size: 32, offset: 32)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !3073, file: !1863, line: 115, baseType: !35, size: 32, offset: 64)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !3073, file: !1863, line: 116, baseType: !35, size: 32, offset: 96)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !3073, file: !1863, line: 117, baseType: !35, size: 32, offset: 128)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !3073, file: !1863, line: 118, baseType: !35, size: 32, offset: 160)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !3073, file: !1863, line: 119, baseType: !35, size: 32, offset: 192)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !3073, file: !1863, line: 120, baseType: !35, size: 32, offset: 224)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !3073, file: !1863, line: 121, baseType: !35, size: 32, offset: 256)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !3073, file: !1863, line: 122, baseType: !35, size: 32, offset: 288)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !3073, file: !1863, line: 125, baseType: !35, size: 32, offset: 320)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !3073, file: !1863, line: 126, baseType: !35, size: 32, offset: 352)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !3073, file: !1863, line: 127, baseType: !27, size: 16, offset: 384)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !3073, file: !1863, line: 128, baseType: !27, size: 16, offset: 400)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !3073, file: !1863, line: 129, baseType: !35, size: 32, offset: 416)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !3073, file: !1863, line: 130, baseType: !35, size: 32, offset: 448)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3073, file: !1863, line: 131, baseType: !35, size: 32, offset: 480)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2966, file: !1863, line: 409, baseType: !3093, size: 576, offset: 2624)
!3093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !1863, line: 134, size: 576, elements: !3094)
!3094 = !{!3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3093, file: !1863, line: 135, baseType: !35, size: 32)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !3093, file: !1863, line: 136, baseType: !35, size: 32, offset: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !3093, file: !1863, line: 137, baseType: !35, size: 32, offset: 64)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !3093, file: !1863, line: 138, baseType: !35, size: 32, offset: 96)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !3093, file: !1863, line: 139, baseType: !35, size: 32, offset: 128)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !3093, file: !1863, line: 140, baseType: !35, size: 32, offset: 160)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !3093, file: !1863, line: 141, baseType: !35, size: 32, offset: 192)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !3093, file: !1863, line: 142, baseType: !35, size: 32, offset: 224)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !3093, file: !1863, line: 143, baseType: !1727, size: 32, offset: 256)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !3093, file: !1863, line: 144, baseType: !35, size: 32, offset: 288)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3093, file: !1863, line: 145, baseType: !35, size: 32, offset: 320)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !3093, file: !1863, line: 147, baseType: !35, size: 32, offset: 352)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !3093, file: !1863, line: 148, baseType: !35, size: 32, offset: 384)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !3093, file: !1863, line: 149, baseType: !35, size: 32, offset: 416)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !3093, file: !1863, line: 150, baseType: !35, size: 32, offset: 448)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !3093, file: !1863, line: 151, baseType: !35, size: 32, offset: 480)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3093, file: !1863, line: 152, baseType: !1834, size: 64, offset: 512)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2966, file: !1863, line: 411, baseType: !35, size: 32, offset: 3200)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2966, file: !1863, line: 411, baseType: !35, size: 32, offset: 3232)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2966, file: !1863, line: 411, baseType: !35, size: 32, offset: 3264)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2966, file: !1863, line: 412, baseType: !1727, size: 32, offset: 3296)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2966, file: !1863, line: 413, baseType: !35, size: 32, offset: 3328)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2966, file: !1863, line: 413, baseType: !35, size: 32, offset: 3360)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2966, file: !1863, line: 415, baseType: !35, size: 32, offset: 3392)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2966, file: !1863, line: 415, baseType: !35, size: 32, offset: 3424)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2966, file: !1863, line: 416, baseType: !27, size: 16, offset: 3456)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2966, file: !1863, line: 416, baseType: !27, size: 16, offset: 3472)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2966, file: !1863, line: 418, baseType: !1727, size: 32, offset: 3488)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2966, file: !1863, line: 418, baseType: !1727, size: 32, offset: 3520)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2966, file: !1863, line: 421, baseType: !1727, size: 32, offset: 3552)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2966, file: !1863, line: 421, baseType: !1727, size: 32, offset: 3584)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2966, file: !1863, line: 421, baseType: !1727, size: 32, offset: 3616)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2966, file: !1863, line: 425, baseType: !27, size: 16, offset: 3648)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2966, file: !1863, line: 425, baseType: !27, size: 16, offset: 3664)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2966, file: !1863, line: 425, baseType: !27, size: 16, offset: 3680)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2966, file: !1863, line: 426, baseType: !27, size: 16, offset: 3696)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2966, file: !1863, line: 428, baseType: !27, size: 16, offset: 3712)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2966, file: !1863, line: 428, baseType: !27, size: 16, offset: 3728)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2966, file: !1863, line: 431, baseType: !35, size: 32, offset: 3744)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2966, file: !1863, line: 433, baseType: !27, size: 16, offset: 3776)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2966, file: !1863, line: 435, baseType: !27, size: 16, offset: 3792)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2966, file: !1863, line: 437, baseType: !27, size: 16, offset: 3808)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2966, file: !1863, line: 439, baseType: !27, size: 16, offset: 3824)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2966, file: !1863, line: 441, baseType: !27, size: 16, offset: 3840)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2966, file: !1863, line: 443, baseType: !27, size: 16, offset: 3856)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2966, file: !1863, line: 449, baseType: !35, size: 32, offset: 3872)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2966, file: !1863, line: 453, baseType: !35, size: 32, offset: 3904)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2966, file: !1863, line: 458, baseType: !27, size: 16, offset: 3936)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2966, file: !1863, line: 462, baseType: !27, size: 16, offset: 3952)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2966, file: !1863, line: 467, baseType: !35, size: 32, offset: 3968)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2966, file: !1863, line: 467, baseType: !35, size: 32, offset: 4000)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2966, file: !1863, line: 469, baseType: !27, size: 16, offset: 4032)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2966, file: !1863, line: 469, baseType: !27, size: 16, offset: 4048)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2966, file: !1863, line: 469, baseType: !27, size: 16, offset: 4064)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2966, file: !1863, line: 469, baseType: !27, size: 16, offset: 4080)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2966, file: !1863, line: 474, baseType: !27, size: 16, offset: 4096)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2966, file: !1863, line: 475, baseType: !23, size: 8, offset: 4112)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2966, file: !1863, line: 476, baseType: !23, size: 8, offset: 4120)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2966, file: !1863, line: 481, baseType: !35, size: 32, offset: 4128)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2966, file: !1863, line: 486, baseType: !35, size: 32, offset: 4160)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2966, file: !1863, line: 491, baseType: !35, size: 32, offset: 4192)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2966, file: !1863, line: 496, baseType: !27, size: 16, offset: 4224)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2966, file: !1863, line: 498, baseType: !27, size: 16, offset: 4240)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2966, file: !1863, line: 501, baseType: !27, size: 16, offset: 4256)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2966, file: !1863, line: 502, baseType: !27, size: 16, offset: 4272)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2966, file: !1863, line: 508, baseType: !27, size: 16, offset: 4288)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2966, file: !1863, line: 513, baseType: !27, size: 16, offset: 4304)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2966, file: !1863, line: 515, baseType: !27, size: 16, offset: 4320)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2966, file: !1863, line: 515, baseType: !27, size: 16, offset: 4336)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2966, file: !1863, line: 519, baseType: !1734, size: 128, offset: 4352)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2966, file: !1863, line: 519, baseType: !1734, size: 128, offset: 4480)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2966, file: !1863, line: 520, baseType: !1744, size: 128, offset: 4608)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2966, file: !1863, line: 523, baseType: !13, size: 128, offset: 4736)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2966, file: !1863, line: 524, baseType: !27, size: 16, offset: 4864)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2966, file: !1863, line: 527, baseType: !27, size: 16, offset: 4880)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2966, file: !1863, line: 532, baseType: !1727, size: 32, offset: 4896)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2966, file: !1863, line: 532, baseType: !1727, size: 32, offset: 4928)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2966, file: !1863, line: 534, baseType: !1727, size: 32, offset: 4960)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2966, file: !1863, line: 538, baseType: !1727, size: 32, offset: 4992)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2966, file: !1863, line: 542, baseType: !35, size: 32, offset: 5024)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2966, file: !1863, line: 545, baseType: !1727, size: 32, offset: 5056)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2966, file: !1863, line: 545, baseType: !1727, size: 32, offset: 5088)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2966, file: !1863, line: 545, baseType: !1727, size: 32, offset: 5120)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2966, file: !1863, line: 548, baseType: !1727, size: 32, offset: 5152)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2966, file: !1863, line: 551, baseType: !27, size: 16, offset: 5184)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2966, file: !1863, line: 551, baseType: !27, size: 16, offset: 5200)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2966, file: !1863, line: 551, baseType: !27, size: 16, offset: 5216)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2966, file: !1863, line: 551, baseType: !27, size: 16, offset: 5232)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2966, file: !1863, line: 552, baseType: !27, size: 16, offset: 5248)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2966, file: !1863, line: 552, baseType: !27, size: 16, offset: 5264)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2966, file: !1863, line: 553, baseType: !1727, size: 32, offset: 5280)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2966, file: !1863, line: 553, baseType: !1727, size: 32, offset: 5312)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2966, file: !1863, line: 554, baseType: !27, size: 16, offset: 5344)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2966, file: !1863, line: 554, baseType: !27, size: 16, offset: 5360)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2966, file: !1863, line: 555, baseType: !1727, size: 32, offset: 5376)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2966, file: !1863, line: 555, baseType: !1727, size: 32, offset: 5408)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2966, file: !1863, line: 558, baseType: !1817, size: 8192, offset: 5440)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2966, file: !1863, line: 561, baseType: !35, size: 32, offset: 13632)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2966, file: !1863, line: 562, baseType: !27, size: 16, offset: 13664)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2966, file: !1863, line: 562, baseType: !27, size: 16, offset: 13680)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2966, file: !1863, line: 565, baseType: !2372, size: 6144, offset: 13696)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2966, file: !1863, line: 568, baseType: !2062, size: 128, offset: 19840)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2966, file: !1863, line: 569, baseType: !2062, size: 128, offset: 19968)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2966, file: !1863, line: 572, baseType: !23, size: 8, offset: 20096)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2966, file: !1863, line: 573, baseType: !23, size: 8, offset: 20104)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2966, file: !1863, line: 574, baseType: !23, size: 8, offset: 20112)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2966, file: !1863, line: 575, baseType: !2816, size: 40, offset: 20120)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2966, file: !1863, line: 578, baseType: !35, size: 32, offset: 20160)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2966, file: !1863, line: 579, baseType: !27, size: 16, offset: 20192)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2966, file: !1863, line: 580, baseType: !27, size: 16, offset: 20208)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2966, file: !1863, line: 581, baseType: !1727, size: 32, offset: 20224)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2966, file: !1863, line: 582, baseType: !1727, size: 32, offset: 20256)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2966, file: !1863, line: 585, baseType: !27, size: 16, offset: 20288)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2966, file: !1863, line: 585, baseType: !27, size: 16, offset: 20304)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2966, file: !1863, line: 586, baseType: !1727, size: 32, offset: 20320)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2966, file: !1863, line: 589, baseType: !27, size: 16, offset: 20352)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2966, file: !1863, line: 589, baseType: !27, size: 16, offset: 20368)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2966, file: !1863, line: 590, baseType: !35, size: 32, offset: 20384)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2966, file: !1863, line: 593, baseType: !27, size: 16, offset: 20416)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2966, file: !1863, line: 593, baseType: !27, size: 16, offset: 20432)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2966, file: !1863, line: 594, baseType: !27, size: 16, offset: 20448)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2966, file: !1863, line: 594, baseType: !27, size: 16, offset: 20464)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2966, file: !1863, line: 595, baseType: !1727, size: 32, offset: 20480)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2966, file: !1863, line: 596, baseType: !1727, size: 32, offset: 20512)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2966, file: !1863, line: 597, baseType: !3220, size: 64, offset: 20544)
!3220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 64)
!3221 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1869, line: 205, flags: DIFlagFwdDecl)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2966, file: !1863, line: 600, baseType: !35, size: 32, offset: 20608)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2966, file: !1863, line: 601, baseType: !1727, size: 32, offset: 20640)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2966, file: !1863, line: 604, baseType: !3225, size: 256, offset: 20672)
!3225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 256, elements: !3226)
!3226 = !{!3227}
!3227 = !DISubrange(count: 32)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2966, file: !1863, line: 607, baseType: !3229, size: 10880, offset: 20928)
!3229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !1863, line: 364, size: 10880, elements: !3230)
!3230 = !{!3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243}
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !3229, file: !1863, line: 365, baseType: !2969, size: 1984)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !3229, file: !1863, line: 367, baseType: !1817, size: 8192, offset: 1984)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !3229, file: !1863, line: 369, baseType: !27, size: 16, offset: 10176)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !3229, file: !1863, line: 369, baseType: !27, size: 16, offset: 10192)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !3229, file: !1863, line: 370, baseType: !27, size: 16, offset: 10208)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3229, file: !1863, line: 370, baseType: !27, size: 16, offset: 10224)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !3229, file: !1863, line: 372, baseType: !1727, size: 32, offset: 10240)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3229, file: !1863, line: 373, baseType: !1727, size: 32, offset: 10272)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !3229, file: !1863, line: 375, baseType: !2738, size: 24, offset: 10304)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !3229, file: !1863, line: 376, baseType: !23, size: 8, offset: 10328)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !3229, file: !1863, line: 378, baseType: !23, size: 8, offset: 10336)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3229, file: !1863, line: 379, baseType: !2738, size: 24, offset: 10344)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !3229, file: !1863, line: 381, baseType: !22, size: 512, offset: 10368)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2966, file: !1863, line: 609, baseType: !35, size: 32, offset: 31808)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2966, file: !1863, line: 610, baseType: !35, size: 32, offset: 31840)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1862, file: !1863, line: 1252, baseType: !3247, size: 256, offset: 34112)
!3247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !1863, line: 158, size: 256, elements: !3248)
!3248 = !{!3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !3247, file: !1863, line: 159, baseType: !35, size: 32)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !3247, file: !1863, line: 160, baseType: !1727, size: 32, offset: 32)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !3247, file: !1863, line: 161, baseType: !1727, size: 32, offset: 64)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !3247, file: !1863, line: 162, baseType: !1727, size: 32, offset: 96)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !3247, file: !1863, line: 163, baseType: !35, size: 32, offset: 128)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3247, file: !1863, line: 164, baseType: !27, size: 16, offset: 160)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3247, file: !1863, line: 165, baseType: !27, size: 16, offset: 176)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !3247, file: !1863, line: 166, baseType: !1727, size: 32, offset: 192)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3247, file: !1863, line: 167, baseType: !1727, size: 32, offset: 224)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1862, file: !1863, line: 1254, baseType: !13, size: 128, offset: 34368)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1862, file: !1863, line: 1255, baseType: !13, size: 128, offset: 34496)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1862, file: !1863, line: 1257, baseType: !18, size: 64, offset: 34624)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1862, file: !1863, line: 1258, baseType: !18, size: 64, offset: 34688)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1862, file: !1863, line: 1259, baseType: !18, size: 64, offset: 34752)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1862, file: !1863, line: 1260, baseType: !18, size: 64, offset: 34816)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1862, file: !1863, line: 1262, baseType: !18, size: 64, offset: 34880)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1862, file: !1863, line: 1265, baseType: !3266, size: 64, offset: 34944)
!3266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 64)
!3267 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !1863, line: 1265, flags: DIFlagFwdDecl)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1862, file: !1863, line: 1266, baseType: !27, size: 16, offset: 35008)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1862, file: !1863, line: 1267, baseType: !27, size: 16, offset: 35024)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1862, file: !1863, line: 1270, baseType: !35, size: 32, offset: 35040)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1862, file: !1863, line: 1271, baseType: !13, size: 128, offset: 35072)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1862, file: !1863, line: 1274, baseType: !3273, size: 128, offset: 35200)
!3273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !1863, line: 650, size: 128, elements: !3274)
!3274 = !{!3275, !3276, !3277, !3278, !3279}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3273, file: !1863, line: 651, baseType: !1987, size: 96)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3273, file: !1863, line: 652, baseType: !23, size: 8, offset: 96)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3273, file: !1863, line: 652, baseType: !23, size: 8, offset: 104)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3273, file: !1863, line: 652, baseType: !23, size: 8, offset: 112)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3273, file: !1863, line: 652, baseType: !23, size: 8, offset: 120)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1862, file: !1863, line: 1275, baseType: !3281, size: 1472, offset: 35328)
!3281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !1863, line: 676, size: 1472, elements: !3282)
!3282 = !{!3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3295, !3305, !3306, !3307, !3308, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !3281, file: !1863, line: 679, baseType: !3273, size: 128)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !3281, file: !1863, line: 680, baseType: !27, size: 16, offset: 128)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !3281, file: !1863, line: 680, baseType: !27, size: 16, offset: 144)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !3281, file: !1863, line: 680, baseType: !27, size: 16, offset: 160)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !3281, file: !1863, line: 680, baseType: !27, size: 16, offset: 176)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3281, file: !1863, line: 681, baseType: !27, size: 16, offset: 192)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !3281, file: !1863, line: 681, baseType: !27, size: 16, offset: 208)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !3281, file: !1863, line: 681, baseType: !27, size: 16, offset: 224)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !3281, file: !1863, line: 681, baseType: !27, size: 16, offset: 240)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !3281, file: !1863, line: 682, baseType: !27, size: 16, offset: 256)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !3281, file: !1863, line: 682, baseType: !3294, size: 48, offset: 272)
!3294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 48, elements: !1988)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !3281, file: !1863, line: 685, baseType: !3296, size: 192, offset: 320)
!3296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !1863, line: 633, size: 192, elements: !3297)
!3297 = !{!3298, !3299, !3300, !3301, !3302, !3303, !3304}
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !3296, file: !1863, line: 634, baseType: !27, size: 16)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3296, file: !1863, line: 634, baseType: !27, size: 16, offset: 16)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !3296, file: !1863, line: 635, baseType: !27, size: 16, offset: 32)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !3296, file: !1863, line: 635, baseType: !27, size: 16, offset: 48)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !3296, file: !1863, line: 636, baseType: !1727, size: 32, offset: 64)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3296, file: !1863, line: 636, baseType: !1727, size: 32, offset: 96)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !3296, file: !1863, line: 637, baseType: !3220, size: 64, offset: 128)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !3281, file: !1863, line: 686, baseType: !27, size: 16, offset: 512)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !3281, file: !1863, line: 686, baseType: !27, size: 16, offset: 528)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !3281, file: !1863, line: 687, baseType: !1727, size: 32, offset: 544)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !3281, file: !1863, line: 688, baseType: !3309, size: 448, offset: 576)
!3309 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !1863, line: 674, baseType: !3310)
!3310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !1863, line: 659, size: 448, elements: !3311)
!3311 = !{!3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326}
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !3310, file: !1863, line: 660, baseType: !1727, size: 32)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !3310, file: !1863, line: 661, baseType: !1727, size: 32, offset: 32)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !3310, file: !1863, line: 662, baseType: !1727, size: 32, offset: 64)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !3310, file: !1863, line: 663, baseType: !1727, size: 32, offset: 96)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !3310, file: !1863, line: 664, baseType: !1727, size: 32, offset: 128)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !3310, file: !1863, line: 665, baseType: !1727, size: 32, offset: 160)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !3310, file: !1863, line: 666, baseType: !1727, size: 32, offset: 192)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !3310, file: !1863, line: 667, baseType: !1727, size: 32, offset: 224)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !3310, file: !1863, line: 668, baseType: !1727, size: 32, offset: 256)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !3310, file: !1863, line: 669, baseType: !1727, size: 32, offset: 288)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !3310, file: !1863, line: 670, baseType: !35, size: 32, offset: 320)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !3310, file: !1863, line: 671, baseType: !1727, size: 32, offset: 352)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !3310, file: !1863, line: 672, baseType: !1727, size: 32, offset: 384)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3310, file: !1863, line: 673, baseType: !27, size: 16, offset: 416)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3310, file: !1863, line: 673, baseType: !27, size: 16, offset: 432)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3281, file: !1863, line: 692, baseType: !1727, size: 32, offset: 1024)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !3281, file: !1863, line: 697, baseType: !1727, size: 32, offset: 1056)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3281, file: !1863, line: 703, baseType: !35, size: 32, offset: 1088)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3281, file: !1863, line: 704, baseType: !27, size: 16, offset: 1120)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !3281, file: !1863, line: 704, baseType: !27, size: 16, offset: 1136)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !3281, file: !1863, line: 705, baseType: !27, size: 16, offset: 1152)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !3281, file: !1863, line: 706, baseType: !27, size: 16, offset: 1168)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !3281, file: !1863, line: 707, baseType: !27, size: 16, offset: 1184)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !3281, file: !1863, line: 708, baseType: !27, size: 16, offset: 1200)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !3281, file: !1863, line: 709, baseType: !27, size: 16, offset: 1216)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !3281, file: !1863, line: 709, baseType: !27, size: 16, offset: 1232)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !3281, file: !1863, line: 709, baseType: !27, size: 16, offset: 1248)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !3281, file: !1863, line: 709, baseType: !27, size: 16, offset: 1264)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !3281, file: !1863, line: 710, baseType: !27, size: 16, offset: 1280)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !3281, file: !1863, line: 711, baseType: !27, size: 16, offset: 1296)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !3281, file: !1863, line: 712, baseType: !1727, size: 32, offset: 1312)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !3281, file: !1863, line: 713, baseType: !1727, size: 32, offset: 1344)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !3281, file: !1863, line: 713, baseType: !1727, size: 32, offset: 1376)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !3281, file: !1863, line: 713, baseType: !1727, size: 32, offset: 1408)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3281, file: !1863, line: 713, baseType: !1727, size: 32, offset: 1440)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1862, file: !1863, line: 1278, baseType: !3348, size: 64, offset: 36800)
!3348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !1863, line: 1197, size: 64, elements: !3349)
!3349 = !{!3350, !3351, !3352, !3353}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !3348, file: !1863, line: 1199, baseType: !1727, size: 32)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !3348, file: !1863, line: 1200, baseType: !23, size: 8, offset: 32)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !3348, file: !1863, line: 1201, baseType: !23, size: 8, offset: 40)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3348, file: !1863, line: 1202, baseType: !27, size: 16, offset: 48)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1862, file: !1863, line: 1281, baseType: !2018, size: 64, offset: 36864)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1862, file: !1863, line: 1284, baseType: !3356, size: 192, offset: 36928)
!3356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !1863, line: 1208, size: 192, elements: !3357)
!3357 = !{!3358, !3359, !3360, !3361}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3356, file: !1863, line: 1209, baseType: !1987, size: 96)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3356, file: !1863, line: 1210, baseType: !35, size: 32, offset: 96)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !3356, file: !1863, line: 1210, baseType: !35, size: 32, offset: 128)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3356, file: !1863, line: 1210, baseType: !35, size: 32, offset: 160)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1862, file: !1863, line: 1287, baseType: !2425, size: 64, offset: 37120)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1862, file: !1863, line: 1289, baseType: !2163, size: 64, offset: 37184)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1862, file: !1863, line: 1290, baseType: !2163, size: 64, offset: 37248)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1862, file: !1863, line: 1293, baseType: !2989, size: 1280, offset: 37312)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1862, file: !1863, line: 1294, baseType: !3039, size: 512, offset: 38592)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1862, file: !1863, line: 1295, baseType: !2416, size: 512, offset: 39104)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1862, file: !1863, line: 1298, baseType: !3369, size: 64, offset: 39616)
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3370, size: 64)
!3370 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !1863, line: 1298, flags: DIFlagFwdDecl)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !1795, file: !87, line: 58, baseType: !1861, size: 64, offset: 1536)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !1795, file: !87, line: 60, baseType: !35, size: 32, offset: 1600)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1795, file: !87, line: 61, baseType: !35, size: 32, offset: 1632)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1795, file: !87, line: 63, baseType: !27, size: 16, offset: 1664)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1795, file: !87, line: 64, baseType: !27, size: 16, offset: 1680)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !1795, file: !87, line: 65, baseType: !27, size: 16, offset: 1696)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !1795, file: !87, line: 66, baseType: !27, size: 16, offset: 1712)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !1795, file: !87, line: 67, baseType: !27, size: 16, offset: 1728)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !1795, file: !87, line: 68, baseType: !27, size: 16, offset: 1744)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !1795, file: !87, line: 69, baseType: !27, size: 16, offset: 1760)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !1795, file: !87, line: 70, baseType: !27, size: 16, offset: 1776)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !1795, file: !87, line: 71, baseType: !27, size: 16, offset: 1792)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !1795, file: !87, line: 73, baseType: !27, size: 16, offset: 1808)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !1795, file: !87, line: 74, baseType: !27, size: 16, offset: 1824)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1795, file: !87, line: 76, baseType: !27, size: 16, offset: 1840)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !1795, file: !87, line: 78, baseType: !1780, size: 64, offset: 1856)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1795, file: !87, line: 79, baseType: !18, size: 64, offset: 1920)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !1788, file: !8, line: 175, baseType: !1794, size: 64, offset: 256)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !1788, file: !8, line: 176, baseType: !22, size: 512, offset: 320)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !1788, file: !8, line: 178, baseType: !27, size: 16, offset: 832)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !1788, file: !8, line: 178, baseType: !27, size: 16, offset: 848)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !1788, file: !8, line: 178, baseType: !27, size: 16, offset: 864)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !1788, file: !8, line: 178, baseType: !27, size: 16, offset: 880)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !1788, file: !8, line: 179, baseType: !27, size: 16, offset: 896)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !1788, file: !8, line: 180, baseType: !27, size: 16, offset: 912)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1788, file: !8, line: 181, baseType: !27, size: 16, offset: 928)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1788, file: !8, line: 182, baseType: !27, size: 16, offset: 944)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !1788, file: !8, line: 183, baseType: !27, size: 16, offset: 960)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !1788, file: !8, line: 184, baseType: !27, size: 16, offset: 976)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !1788, file: !8, line: 185, baseType: !27, size: 16, offset: 992)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !1788, file: !8, line: 186, baseType: !27, size: 16, offset: 1008)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !1788, file: !8, line: 188, baseType: !35, size: 32, offset: 1024)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !1788, file: !8, line: 190, baseType: !27, size: 16, offset: 1056)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !1788, file: !8, line: 191, baseType: !27, size: 16, offset: 1072)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !1788, file: !8, line: 194, baseType: !3406, size: 64, offset: 1088)
!3406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3407, size: 64)
!3407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !1782, line: 421, size: 960, elements: !3408)
!3408 = !{!3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3436, !3444, !3445, !3446, !3447}
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3407, file: !1782, line: 422, baseType: !3406, size: 64)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3407, file: !1782, line: 422, baseType: !3406, size: 64, offset: 64)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3407, file: !1782, line: 424, baseType: !27, size: 16, offset: 128)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3407, file: !1782, line: 425, baseType: !27, size: 16, offset: 144)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3407, file: !1782, line: 426, baseType: !35, size: 32, offset: 160)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3407, file: !1782, line: 426, baseType: !35, size: 32, offset: 192)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !3407, file: !1782, line: 427, baseType: !2435, size: 64, offset: 224)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !3407, file: !1782, line: 428, baseType: !2985, size: 48, offset: 288)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !3407, file: !1782, line: 431, baseType: !23, size: 8, offset: 336)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3407, file: !1782, line: 432, baseType: !23, size: 8, offset: 344)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !3407, file: !1782, line: 435, baseType: !27, size: 16, offset: 352)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !3407, file: !1782, line: 436, baseType: !27, size: 16, offset: 368)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !3407, file: !1782, line: 437, baseType: !35, size: 32, offset: 384)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !3407, file: !1782, line: 437, baseType: !35, size: 32, offset: 416)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !3407, file: !1782, line: 438, baseType: !3424, size: 64, offset: 448)
!3424 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !3407, file: !1782, line: 439, baseType: !35, size: 32, offset: 512)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !3407, file: !1782, line: 439, baseType: !35, size: 32, offset: 544)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !3407, file: !1782, line: 442, baseType: !27, size: 16, offset: 576)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !3407, file: !1782, line: 442, baseType: !27, size: 16, offset: 592)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !3407, file: !1782, line: 442, baseType: !27, size: 16, offset: 608)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !3407, file: !1782, line: 442, baseType: !27, size: 16, offset: 624)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !3407, file: !1782, line: 443, baseType: !27, size: 16, offset: 640)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !3407, file: !1782, line: 446, baseType: !27, size: 16, offset: 656)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !3407, file: !1782, line: 449, baseType: !3434, size: 64, offset: 704)
!3434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3435, size: 64)
!3435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !23)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !3407, file: !1782, line: 452, baseType: !3437, size: 64, offset: 768)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !1782, line: 463, size: 128, elements: !3439)
!3439 = !{!3440, !3441, !3442, !3443}
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !3438, file: !1782, line: 464, baseType: !35, size: 32)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !3438, file: !1782, line: 465, baseType: !1727, size: 32, offset: 32)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !3438, file: !1782, line: 466, baseType: !1727, size: 32, offset: 64)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !3438, file: !1782, line: 467, baseType: !1727, size: 32, offset: 96)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !3407, file: !1782, line: 455, baseType: !27, size: 16, offset: 832)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !3407, file: !1782, line: 456, baseType: !27, size: 16, offset: 848)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3407, file: !1782, line: 457, baseType: !35, size: 32, offset: 864)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3407, file: !1782, line: 458, baseType: !18, size: 64, offset: 896)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !1788, file: !8, line: 196, baseType: !3449, size: 64, offset: 1152)
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !8, line: 55, flags: DIFlagFwdDecl)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !1788, file: !8, line: 198, baseType: !3452, size: 64, offset: 1216)
!3452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3453, size: 64)
!3453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !1782, line: 398, size: 448, elements: !3454)
!3454 = !{!3455, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3463, !3464}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3453, file: !1782, line: 399, baseType: !3452, size: 64)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3453, file: !1782, line: 399, baseType: !3452, size: 64, offset: 64)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !3453, file: !1782, line: 400, baseType: !35, size: 32, offset: 128)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3453, file: !1782, line: 401, baseType: !35, size: 32, offset: 160)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3453, file: !1782, line: 402, baseType: !35, size: 32, offset: 192)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !3453, file: !1782, line: 403, baseType: !35, size: 32, offset: 224)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3453, file: !1782, line: 404, baseType: !35, size: 32, offset: 256)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3453, file: !1782, line: 405, baseType: !35, size: 32, offset: 288)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3453, file: !1782, line: 407, baseType: !18, size: 64, offset: 320)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !3453, file: !1782, line: 414, baseType: !18, size: 64, offset: 384)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !1788, file: !8, line: 200, baseType: !35, size: 32, offset: 1280)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !1788, file: !8, line: 200, baseType: !35, size: 32, offset: 1312)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !1788, file: !8, line: 201, baseType: !18, size: 64, offset: 1344)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1788, file: !8, line: 203, baseType: !13, size: 128, offset: 1408)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1788, file: !8, line: 204, baseType: !13, size: 128, offset: 1536)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !1788, file: !8, line: 205, baseType: !13, size: 128, offset: 1664)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !1788, file: !8, line: 207, baseType: !13, size: 128, offset: 1792)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !1788, file: !8, line: 208, baseType: !13, size: 128, offset: 1920)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !1781, file: !1782, line: 495, baseType: !3424, size: 64, offset: 192)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !1781, file: !1782, line: 496, baseType: !35, size: 32, offset: 256)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1781, file: !1782, line: 497, baseType: !18, size: 64, offset: 320)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1781, file: !1782, line: 499, baseType: !3424, size: 64, offset: 384)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1781, file: !1782, line: 500, baseType: !3424, size: 64, offset: 448)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !1781, file: !1782, line: 502, baseType: !3424, size: 64, offset: 512)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !1781, file: !1782, line: 503, baseType: !3424, size: 64, offset: 576)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1781, file: !1782, line: 504, baseType: !3424, size: 64, offset: 640)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !1781, file: !1782, line: 505, baseType: !35, size: 32, offset: 704)
!3482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3483, size: 64)
!3483 = !DIDerivedType(tag: DW_TAG_typedef, name: "View3D", file: !3484, line: 221, baseType: !3485)
!3484 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view3d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View3D", file: !3484, line: 151, size: 3008, elements: !3486)
!3486 = !{!3487, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3539, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573}
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3485, file: !3484, line: 152, baseType: !3488, size: 64)
!3488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3489, size: 64)
!3489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !62, line: 85, size: 448, elements: !3490)
!3490 = !{!3491, !3492, !3493, !3494, !3495, !3496}
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3489, file: !62, line: 86, baseType: !3488, size: 64)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3489, file: !62, line: 86, baseType: !3488, size: 64, offset: 64)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3489, file: !62, line: 87, baseType: !13, size: 128, offset: 128)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3489, file: !62, line: 88, baseType: !35, size: 32, offset: 256)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !3489, file: !62, line: 89, baseType: !1727, size: 32, offset: 288)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !3489, file: !62, line: 90, baseType: !3497, size: 128, offset: 320)
!3497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 128, elements: !2609)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3485, file: !3484, line: 152, baseType: !3488, size: 64, offset: 64)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3485, file: !3484, line: 153, baseType: !13, size: 128, offset: 128)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3485, file: !3484, line: 154, baseType: !35, size: 32, offset: 256)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !3485, file: !3484, line: 155, baseType: !1727, size: 32, offset: 288)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !3485, file: !3484, line: 156, baseType: !3497, size: 128, offset: 320)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !3485, file: !3484, line: 158, baseType: !2062, size: 128, offset: 448)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !3485, file: !3484, line: 159, baseType: !1727, size: 32, offset: 576)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_size", scope: !3485, file: !3484, line: 161, baseType: !1727, size: 32, offset: 608)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_drawtype", scope: !3485, file: !3484, line: 162, baseType: !23, size: 8, offset: 640)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3485, file: !3484, line: 163, baseType: !2738, size: 24, offset: 648)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "lay_prev", scope: !3485, file: !3484, line: 165, baseType: !56, size: 32, offset: 672)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "lay_used", scope: !3485, file: !3484, line: 166, baseType: !56, size: 32, offset: 704)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !3485, file: !3484, line: 168, baseType: !27, size: 16, offset: 736)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !3485, file: !3484, line: 169, baseType: !27, size: 16, offset: 752)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !3485, file: !3484, line: 171, baseType: !1936, size: 64, offset: 768)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre", scope: !3485, file: !3484, line: 171, baseType: !1936, size: 64, offset: 832)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "render_border", scope: !3485, file: !3484, line: 172, baseType: !1734, size: 128, offset: 896)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "bgpicbase", scope: !3485, file: !3484, line: 174, baseType: !15, size: 128, offset: 1024)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "bgpic", scope: !3485, file: !3484, line: 175, baseType: !3517, size: 64, offset: 1152)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BGpic", file: !3484, line: 70, size: 832, elements: !3519)
!3519 = !{!3520, !3521, !3522, !3523, !3524, !3525, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538}
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3518, file: !3484, line: 71, baseType: !3517, size: 64)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3518, file: !3484, line: 71, baseType: !3517, size: 64, offset: 64)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !3518, file: !3484, line: 73, baseType: !2592, size: 64, offset: 128)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !3518, file: !3484, line: 74, baseType: !2186, size: 320, offset: 192)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !3518, file: !3484, line: 75, baseType: !2425, size: 64, offset: 512)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "cuser", scope: !3518, file: !3484, line: 76, baseType: !3526, size: 64, offset: 576)
!3526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !2427, line: 50, size: 64, elements: !3527)
!3527 = !{!3528, !3529, !3530}
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !3526, file: !2427, line: 51, baseType: !35, size: 32)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !3526, file: !2427, line: 52, baseType: !27, size: 16, offset: 32)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !3526, file: !2427, line: 52, baseType: !27, size: 16, offset: 48)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !3518, file: !3484, line: 77, baseType: !1727, size: 32, offset: 640)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !3518, file: !3484, line: 77, baseType: !1727, size: 32, offset: 672)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3518, file: !3484, line: 77, baseType: !1727, size: 32, offset: 704)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !3518, file: !3484, line: 77, baseType: !1727, size: 32, offset: 736)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !3518, file: !3484, line: 78, baseType: !27, size: 16, offset: 768)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3518, file: !3484, line: 79, baseType: !27, size: 16, offset: 784)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !3518, file: !3484, line: 80, baseType: !27, size: 16, offset: 800)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3518, file: !3484, line: 80, baseType: !27, size: 16, offset: 816)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !3485, file: !3484, line: 177, baseType: !3540, size: 64, offset: 1216)
!3540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3485, size: 64)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_bone", scope: !3485, file: !3484, line: 179, baseType: !22, size: 512, offset: 1280)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3485, file: !3484, line: 181, baseType: !56, size: 32, offset: 1792)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !3485, file: !3484, line: 182, baseType: !35, size: 32, offset: 1824)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !3485, file: !3484, line: 187, baseType: !27, size: 16, offset: 1856)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_cursor", scope: !3485, file: !3484, line: 188, baseType: !27, size: 16, offset: 1872)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "scenelock", scope: !3485, file: !3484, line: 189, baseType: !27, size: 16, offset: 1888)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !3485, file: !3484, line: 189, baseType: !27, size: 16, offset: 1904)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3485, file: !3484, line: 190, baseType: !27, size: 16, offset: 1920)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !3485, file: !3484, line: 190, baseType: !27, size: 16, offset: 1936)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !3485, file: !3484, line: 192, baseType: !1727, size: 32, offset: 1952)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !3485, file: !3484, line: 192, baseType: !1727, size: 32, offset: 1984)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "near", scope: !3485, file: !3484, line: 193, baseType: !1727, size: 32, offset: 2016)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "far", scope: !3485, file: !3484, line: 193, baseType: !1727, size: 32, offset: 2048)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !3485, file: !3484, line: 194, baseType: !1987, size: 96, offset: 2080)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !3485, file: !3484, line: 195, baseType: !1987, size: 96, offset: 2176)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "matcap_icon", scope: !3485, file: !3484, line: 197, baseType: !27, size: 16, offset: 2272)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "gridlines", scope: !3485, file: !3484, line: 199, baseType: !27, size: 16, offset: 2288)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "gridsubdiv", scope: !3485, file: !3484, line: 200, baseType: !27, size: 16, offset: 2304)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "gridflag", scope: !3485, file: !3484, line: 201, baseType: !23, size: 8, offset: 2320)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "twtype", scope: !3485, file: !3484, line: 204, baseType: !23, size: 8, offset: 2328)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "twmode", scope: !3485, file: !3484, line: 204, baseType: !23, size: 8, offset: 2336)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "twflag", scope: !3485, file: !3484, line: 204, baseType: !23, size: 8, offset: 2344)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3485, file: !3484, line: 204, baseType: !2950, size: 16, offset: 2352)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_transp", scope: !3485, file: !3484, line: 207, baseType: !15, size: 128, offset: 2368)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xray", scope: !3485, file: !3484, line: 208, baseType: !15, size: 128, offset: 2496)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xraytransp", scope: !3485, file: !3484, line: 209, baseType: !15, size: 128, offset: 2624)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !3485, file: !3484, line: 212, baseType: !23, size: 8, offset: 2752)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !3485, file: !3484, line: 212, baseType: !23, size: 8, offset: 2760)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "xray", scope: !3485, file: !3484, line: 212, baseType: !23, size: 8, offset: 2768)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3485, file: !3484, line: 213, baseType: !2816, size: 40, offset: 2776)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "properties_storage", scope: !3485, file: !3484, line: 215, baseType: !18, size: 64, offset: 2816)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "defmaterial", scope: !3485, file: !3484, line: 216, baseType: !2046, size: 64, offset: 2880)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !3485, file: !3484, line: 219, baseType: !2018, size: 64, offset: 2944)
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3575, size: 64)
!3575 = !DIDerivedType(tag: DW_TAG_typedef, name: "EdgeSlideData", file: !55, line: 228, baseType: !3576)
!3576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeSlideData", file: !55, line: 209, size: 640, elements: !3577)
!3577 = !{!3578, !3648, !3649, !3650, !3651, !3652, !3811, !3812, !3813, !3814, !3815, !3816}
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "sv", scope: !3576, file: !55, line: 210, baseType: !3579, size: 64)
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DIDerivedType(tag: DW_TAG_typedef, name: "TransDataEdgeSlideVert", file: !55, line: 207, baseType: !3581)
!3581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TransDataEdgeSlideVert", file: !55, line: 196, size: 576, elements: !3582)
!3582 = !{!3583, !3641, !3642, !3643, !3644, !3645, !3646, !3647}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "v_a", scope: !3581, file: !55, line: 197, baseType: !3584, size: 64)
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3585, size: 64)
!3585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !456, line: 90, size: 448, elements: !3586)
!3586 = !{!3587, !3596, !3601, !3602, !3603}
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3585, file: !456, line: 91, baseType: !3588, size: 128)
!3588 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !456, line: 82, baseType: !3589)
!3589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !456, line: 64, size: 128, elements: !3590)
!3590 = !{!3591, !3592, !3593, !3594, !3595}
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3589, file: !456, line: 65, baseType: !18, size: 64)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3589, file: !456, line: 66, baseType: !35, size: 32, offset: 64)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !3589, file: !456, line: 73, baseType: !23, size: 8, offset: 96)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !3589, file: !456, line: 74, baseType: !23, size: 8, offset: 104)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !3589, file: !456, line: 80, baseType: !23, size: 8, offset: 112)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !3585, file: !456, line: 92, baseType: !3597, size: 64, offset: 128)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 64)
!3598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !456, line: 180, size: 16, elements: !3599)
!3599 = !{!3600}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3598, file: !456, line: 181, baseType: !27, size: 16)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3585, file: !456, line: 94, baseType: !1987, size: 96, offset: 192)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3585, file: !456, line: 95, baseType: !1987, size: 96, offset: 288)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !3585, file: !456, line: 102, baseType: !3604, size: 64, offset: 384)
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3605, size: 64)
!3605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !456, line: 110, size: 640, elements: !3606)
!3606 = !{!3607, !3608, !3609, !3610, !3611, !3634, !3640}
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3605, file: !456, line: 111, baseType: !3588, size: 128)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !3605, file: !456, line: 112, baseType: !3597, size: 64, offset: 128)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3605, file: !456, line: 114, baseType: !3584, size: 64, offset: 192)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3605, file: !456, line: 114, baseType: !3584, size: 64, offset: 256)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3605, file: !456, line: 118, baseType: !3612, size: 64, offset: 320)
!3612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3613, size: 64)
!3613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !456, line: 125, size: 576, elements: !3614)
!3614 = !{!3615, !3616, !3617, !3618, !3630, !3631, !3632, !3633}
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3613, file: !456, line: 126, baseType: !3588, size: 128)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !3613, file: !456, line: 129, baseType: !3584, size: 64, offset: 128)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !3613, file: !456, line: 130, baseType: !3604, size: 64, offset: 192)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3613, file: !456, line: 131, baseType: !3619, size: 64, offset: 256)
!3619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3620, size: 64)
!3620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !456, line: 164, size: 448, elements: !3621)
!3621 = !{!3622, !3623, !3624, !3627, !3628, !3629}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3620, file: !456, line: 165, baseType: !3588, size: 128)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !3620, file: !456, line: 166, baseType: !3597, size: 64, offset: 128)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3620, file: !456, line: 172, baseType: !3625, size: 64, offset: 192)
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3626, size: 64)
!3626 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !456, line: 140, baseType: !3613)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3620, file: !456, line: 174, baseType: !35, size: 32, offset: 256)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3620, file: !456, line: 175, baseType: !1987, size: 96, offset: 288)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3620, file: !456, line: 176, baseType: !27, size: 16, offset: 384)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !3613, file: !456, line: 135, baseType: !3612, size: 64, offset: 320)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !3613, file: !456, line: 135, baseType: !3612, size: 64, offset: 384)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3613, file: !456, line: 139, baseType: !3612, size: 64, offset: 448)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3613, file: !456, line: 139, baseType: !3612, size: 64, offset: 512)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !3605, file: !456, line: 122, baseType: !3635, size: 128, offset: 384)
!3635 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !456, line: 108, baseType: !3636)
!3636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !456, line: 106, size: 128, elements: !3637)
!3637 = !{!3638, !3639}
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3636, file: !456, line: 107, baseType: !3604, size: 64)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3636, file: !456, line: 107, baseType: !3604, size: 64, offset: 64)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !3605, file: !456, line: 122, baseType: !3635, size: 128, offset: 512)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "v_b", scope: !3581, file: !55, line: 197, baseType: !3584, size: 64, offset: 64)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !3581, file: !55, line: 198, baseType: !3584, size: 64, offset: 128)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "v_co_orig", scope: !3581, file: !55, line: 199, baseType: !1987, size: 96, offset: 192)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "edge_len", scope: !3581, file: !55, line: 201, baseType: !1727, size: 32, offset: 288)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "dir_a", scope: !3581, file: !55, line: 204, baseType: !1987, size: 96, offset: 320)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "dir_b", scope: !3581, file: !55, line: 204, baseType: !1987, size: 96, offset: 416)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nr", scope: !3581, file: !55, line: 206, baseType: !35, size: 32, offset: 512)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "totsv", scope: !3576, file: !55, line: 211, baseType: !35, size: 32, offset: 64)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "origfaces", scope: !3576, file: !55, line: 213, baseType: !1979, size: 64, offset: 128)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "mval_start", scope: !3576, file: !55, line: 215, baseType: !2435, size: 64, offset: 192)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "mval_end", scope: !3576, file: !55, line: 215, baseType: !2435, size: 64, offset: 256)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "em", scope: !3576, file: !55, line: 216, baseType: !3653, size: 64, offset: 320)
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3654, size: 64)
!3654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !3655, line: 54, size: 896, elements: !3656)
!3655 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3656 = !{!3657, !3791, !3792, !3793, !3796, !3797, !3798, !3799, !3802, !3804, !3805, !3806, !3807, !3808, !3809, !3810}
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !3654, file: !3655, line: 55, baseType: !3658, size: 64)
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 64)
!3659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !456, line: 186, size: 8064, elements: !3660)
!3660 = !{!3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3670, !3673, !3674, !3675, !3676, !3680, !3684, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3746, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790}
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3659, file: !456, line: 187, baseType: !35, size: 32)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !3659, file: !456, line: 187, baseType: !35, size: 32, offset: 32)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !3659, file: !456, line: 187, baseType: !35, size: 32, offset: 64)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !3659, file: !456, line: 187, baseType: !35, size: 32, offset: 96)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !3659, file: !456, line: 188, baseType: !35, size: 32, offset: 128)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !3659, file: !456, line: 188, baseType: !35, size: 32, offset: 160)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !3659, file: !456, line: 188, baseType: !35, size: 32, offset: 192)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !3659, file: !456, line: 193, baseType: !23, size: 8, offset: 224)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !3659, file: !456, line: 197, baseType: !23, size: 8, offset: 232)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !3659, file: !456, line: 201, baseType: !3671, size: 64, offset: 256)
!3671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 64)
!3672 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !62, line: 75, flags: DIFlagFwdDecl)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !3659, file: !456, line: 201, baseType: !3671, size: 64, offset: 320)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !3659, file: !456, line: 201, baseType: !3671, size: 64, offset: 384)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !3659, file: !456, line: 201, baseType: !3671, size: 64, offset: 448)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !3659, file: !456, line: 208, baseType: !3677, size: 64, offset: 512)
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 64)
!3678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3679, size: 64)
!3679 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !456, line: 103, baseType: !3585)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !3659, file: !456, line: 209, baseType: !3681, size: 64, offset: 576)
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3683, size: 64)
!3683 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !456, line: 123, baseType: !3605)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !3659, file: !456, line: 210, baseType: !3685, size: 64, offset: 640)
!3685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3686, size: 64)
!3686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3687, size: 64)
!3687 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !456, line: 178, baseType: !3620)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !3659, file: !456, line: 213, baseType: !35, size: 32, offset: 704)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !3659, file: !456, line: 214, baseType: !35, size: 32, offset: 736)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !3659, file: !456, line: 215, baseType: !35, size: 32, offset: 768)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !3659, file: !456, line: 218, baseType: !3671, size: 64, offset: 832)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !3659, file: !456, line: 218, baseType: !3671, size: 64, offset: 896)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !3659, file: !456, line: 218, baseType: !3671, size: 64, offset: 960)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !3659, file: !456, line: 220, baseType: !35, size: 32, offset: 1024)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !3659, file: !456, line: 221, baseType: !3696, size: 64, offset: 1088)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !401, line: 190, size: 10496, elements: !3698)
!3698 = !{!3699, !3732, !3733, !3739, !3742, !3743, !3745}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !3697, file: !401, line: 191, baseType: !3700, size: 5120)
!3700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3701, size: 5120, elements: !3730)
!3701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !401, line: 147, size: 320, elements: !3702)
!3702 = !{!3703, !3704, !3706, !3716, !3717}
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !3701, file: !401, line: 148, baseType: !3434, size: 64)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !3701, file: !401, line: 149, baseType: !3705, size: 32, offset: 64)
!3705 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !401, line: 112, baseType: !400)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !3701, file: !401, line: 150, baseType: !3707, size: 32, offset: 96)
!3707 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !401, line: 142, baseType: !3708)
!3708 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !401, line: 138, size: 32, elements: !3709)
!3709 = !{!3710, !3712, !3714}
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !3708, file: !401, line: 139, baseType: !3711, size: 32)
!3711 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !401, line: 122, baseType: !411)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3708, file: !401, line: 140, baseType: !3713, size: 32)
!3713 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !401, line: 136, baseType: !417)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3708, file: !401, line: 141, baseType: !3715, size: 32)
!3715 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !401, line: 130, baseType: !423)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3701, file: !401, line: 152, baseType: !35, size: 32, offset: 128)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3701, file: !401, line: 162, baseType: !3718, size: 128, offset: 192)
!3718 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3701, file: !401, line: 155, size: 128, elements: !3719)
!3719 = !{!3720, !3721, !3722, !3723, !3724, !3726}
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !3718, file: !401, line: 156, baseType: !35, size: 32)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3718, file: !401, line: 157, baseType: !1727, size: 32)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3718, file: !401, line: 158, baseType: !18, size: 64)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3718, file: !401, line: 159, baseType: !1987, size: 96)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3718, file: !401, line: 160, baseType: !3725, size: 64)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 64)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !3718, file: !401, line: 161, baseType: !3727, size: 64)
!3727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3728, size: 64)
!3728 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !3729, line: 48, baseType: !1980)
!3729 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3730 = !{!3731}
!3731 = !DISubrange(count: 16)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !3697, file: !401, line: 192, baseType: !3700, size: 5120, offset: 5120)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !3697, file: !401, line: 193, baseType: !3734, size: 64, offset: 10240)
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3735, size: 64)
!3735 = !DISubroutineType(types: !3736)
!3736 = !{null, !3737, !3696}
!3737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3738, size: 64)
!3738 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !456, line: 246, baseType: !3659)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !3697, file: !401, line: 194, baseType: !3740, size: 64, offset: 10304)
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3741 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !401, line: 194, flags: DIFlagFwdDecl)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3697, file: !401, line: 195, baseType: !35, size: 32, offset: 10368)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !3697, file: !401, line: 196, baseType: !3744, size: 32, offset: 10400)
!3744 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !401, line: 188, baseType: !431)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3697, file: !401, line: 197, baseType: !35, size: 32, offset: 10432)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3659, file: !456, line: 223, baseType: !3747, size: 1600, offset: 1152)
!3747 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !3748, line: 73, baseType: !3749)
!3748 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !3748, line: 64, size: 1600, elements: !3750)
!3750 = !{!3751, !3766, !3770, !3771, !3772, !3773, !3774}
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !3749, file: !3748, line: 65, baseType: !3752, size: 64)
!3752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3753, size: 64)
!3753 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !3748, line: 53, baseType: !3754)
!3754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !3748, line: 42, size: 832, elements: !3755)
!3755 = !{!3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765}
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3754, file: !3748, line: 43, baseType: !35, size: 32)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3754, file: !3748, line: 44, baseType: !35, size: 32, offset: 32)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3754, file: !3748, line: 45, baseType: !35, size: 32, offset: 64)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3754, file: !3748, line: 46, baseType: !35, size: 32, offset: 96)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !3754, file: !3748, line: 47, baseType: !35, size: 32, offset: 128)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !3754, file: !3748, line: 48, baseType: !35, size: 32, offset: 160)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !3754, file: !3748, line: 49, baseType: !35, size: 32, offset: 192)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3754, file: !3748, line: 50, baseType: !35, size: 32, offset: 224)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3754, file: !3748, line: 51, baseType: !22, size: 512, offset: 256)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3754, file: !3748, line: 52, baseType: !18, size: 64, offset: 768)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !3749, file: !3748, line: 66, baseType: !3767, size: 1312, offset: 64)
!3767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 1312, elements: !3768)
!3768 = !{!3769}
!3769 = !DISubrange(count: 41)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !3749, file: !3748, line: 69, baseType: !35, size: 32, offset: 1376)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !3749, file: !3748, line: 69, baseType: !35, size: 32, offset: 1408)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !3749, file: !3748, line: 70, baseType: !35, size: 32, offset: 1440)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3749, file: !3748, line: 71, baseType: !3671, size: 64, offset: 1472)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !3749, file: !3748, line: 72, baseType: !3775, size: 64, offset: 1536)
!3775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3776, size: 64)
!3776 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !3748, line: 59, baseType: !3777)
!3777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !3748, line: 57, size: 8192, elements: !3778)
!3778 = !{!3779}
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !3777, file: !3748, line: 58, baseType: !1817, size: 8192)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3659, file: !456, line: 223, baseType: !3747, size: 1600, offset: 2752)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !3659, file: !456, line: 223, baseType: !3747, size: 1600, offset: 4352)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3659, file: !456, line: 223, baseType: !3747, size: 1600, offset: 5952)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !3659, file: !456, line: 233, baseType: !27, size: 16, offset: 7552)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !3659, file: !456, line: 236, baseType: !35, size: 32, offset: 7584)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !3659, file: !456, line: 238, baseType: !35, size: 32, offset: 7616)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !3659, file: !456, line: 238, baseType: !35, size: 32, offset: 7648)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !3659, file: !456, line: 239, baseType: !13, size: 128, offset: 7680)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !3659, file: !456, line: 241, baseType: !3686, size: 64, offset: 7808)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !3659, file: !456, line: 243, baseType: !13, size: 128, offset: 7872)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !3659, file: !456, line: 245, baseType: !18, size: 64, offset: 8000)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "emcopy", scope: !3654, file: !3655, line: 58, baseType: !3653, size: 64, offset: 64)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "emcopyusers", scope: !3654, file: !3655, line: 59, baseType: !35, size: 32, offset: 128)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "looptris", scope: !3654, file: !3655, line: 63, baseType: !3794, size: 64, offset: 192)
!3794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3795, size: 64)
!3795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3612, size: 192, elements: !1988)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "tottri", scope: !3654, file: !3655, line: 64, baseType: !35, size: 32, offset: 256)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !3654, file: !3655, line: 67, baseType: !2159, size: 64, offset: 320)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "derivedCage", scope: !3654, file: !3655, line: 67, baseType: !2159, size: 64, offset: 384)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !3654, file: !3655, line: 68, baseType: !3800, size: 64, offset: 448)
!3800 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !3801, line: 48, baseType: !2163)
!3801 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColor", scope: !3654, file: !3655, line: 69, baseType: !3803, size: 64, offset: 512)
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColorLen", scope: !3654, file: !3655, line: 70, baseType: !35, size: 32, offset: 576)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColor", scope: !3654, file: !3655, line: 71, baseType: !3803, size: 64, offset: 640)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColorLen", scope: !3654, file: !3655, line: 72, baseType: !35, size: 32, offset: 704)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !3654, file: !3655, line: 75, baseType: !27, size: 16, offset: 736)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3654, file: !3655, line: 76, baseType: !27, size: 16, offset: 752)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3654, file: !3655, line: 79, baseType: !1936, size: 64, offset: 768)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cdlayer", scope: !3654, file: !3655, line: 82, baseType: !35, size: 32, offset: 832)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "use_origfaces", scope: !3576, file: !55, line: 219, baseType: !2769, size: 8, offset: 384)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "bm_origfaces", scope: !3576, file: !55, line: 220, baseType: !3658, size: 64, offset: 448)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "perc", scope: !3576, file: !55, line: 222, baseType: !1727, size: 32, offset: 512)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "is_proportional", scope: !3576, file: !55, line: 224, baseType: !2769, size: 8, offset: 544)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "flipped_vtx", scope: !3576, file: !55, line: 225, baseType: !2769, size: 8, offset: 552)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "curr_sv_index", scope: !3576, file: !55, line: 227, baseType: !35, size: 32, offset: 576)
!3817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3818, size: 64)
!3818 = !DIDerivedType(tag: DW_TAG_typedef, name: "VertSlideData", file: !55, line: 253, baseType: !3819)
!3819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertSlideData", file: !55, line: 241, size: 320, elements: !3820)
!3820 = !{!3821, !3835, !3836, !3837, !3838, !3839, !3840}
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "sv", scope: !3819, file: !55, line: 242, baseType: !3822, size: 64)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = !DIDerivedType(tag: DW_TAG_typedef, name: "TransDataVertSlideVert", file: !55, line: 239, baseType: !3824)
!3824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TransDataVertSlideVert", file: !55, line: 231, size: 448, elements: !3825)
!3825 = !{!3826, !3827, !3828, !3829, !3831, !3833, !3834}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !3824, file: !55, line: 232, baseType: !3678, size: 64)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "co_orig_3d", scope: !3824, file: !55, line: 233, baseType: !1987, size: 96, offset: 64)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "co_orig_2d", scope: !3824, file: !55, line: 234, baseType: !1754, size: 64, offset: 160)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "co_link_orig_3d", scope: !3824, file: !55, line: 235, baseType: !3830, size: 64, offset: 256)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 64)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "co_link_orig_2d", scope: !3824, file: !55, line: 236, baseType: !3832, size: 64, offset: 320)
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "co_link_tot", scope: !3824, file: !55, line: 237, baseType: !35, size: 32, offset: 384)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "co_link_curr", scope: !3824, file: !55, line: 238, baseType: !35, size: 32, offset: 416)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "totsv", scope: !3819, file: !55, line: 243, baseType: !35, size: 32, offset: 64)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "em", scope: !3819, file: !55, line: 245, baseType: !3653, size: 64, offset: 128)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "perc", scope: !3819, file: !55, line: 247, baseType: !1727, size: 32, offset: 192)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "is_proportional", scope: !3819, file: !55, line: 249, baseType: !2769, size: 8, offset: 224)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "flipped_vtx", scope: !3819, file: !55, line: 250, baseType: !2769, size: 8, offset: 232)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "curr_sv_index", scope: !3819, file: !55, line: 252, baseType: !35, size: 32, offset: 256)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DIDerivedType(tag: DW_TAG_typedef, name: "TransInfo", file: !55, line: 384, baseType: !3843)
!3843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TransInfo", file: !55, line: 299, size: 11136, elements: !3844)
!3844 = !{!3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3859, !3866, !3867, !3944, !3945, !3956, !3990, !4030, !4046, !4062, !4063, !4064, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4149, !4186, !4187, !4188, !4189, !4190, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207}
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3843, file: !55, line: 300, baseType: !35, size: 32)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3843, file: !55, line: 301, baseType: !35, size: 32, offset: 32)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !3843, file: !55, line: 302, baseType: !35, size: 32, offset: 64)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3843, file: !55, line: 303, baseType: !27, size: 16, offset: 96)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !3843, file: !55, line: 304, baseType: !35, size: 32, offset: 128)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3843, file: !55, line: 305, baseType: !1727, size: 32, offset: 160)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "fac", scope: !3843, file: !55, line: 306, baseType: !1727, size: 32, offset: 192)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !3843, file: !55, line: 307, baseType: !3853, size: 64, offset: 256)
!3853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 64)
!3854 = !DISubroutineType(types: !3855)
!3855 = !{null, !3856, !3857}
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3843, size: 64)
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3858, size: 64)
!3858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !35)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "handleEvent", scope: !3843, file: !55, line: 309, baseType: !3860, size: 64, offset: 320)
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3861 = !DISubroutineType(types: !3862)
!3862 = !{!3863, !3856, !3864}
!3863 = !DIDerivedType(tag: DW_TAG_typedef, name: "eRedrawFlag", file: !55, line: 71, baseType: !54)
!3864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3865, size: 64)
!3865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3407)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !3843, file: !55, line: 311, baseType: !35, size: 32, offset: 384)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3843, file: !55, line: 312, baseType: !3868, size: 64, offset: 448)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3869 = !DIDerivedType(tag: DW_TAG_typedef, name: "TransData", file: !55, line: 285, baseType: !3870)
!3870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TransData", file: !55, line: 266, size: 1792, elements: !3871)
!3871 = !{!3872, !3873, !3874, !3875, !3876, !3877, !3878, !3879, !3880, !3883, !3884, !3885, !3886, !3904, !3932, !3941, !3942, !3943}
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !3870, file: !55, line: 267, baseType: !1727, size: 32)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "rdist", scope: !3870, file: !55, line: 268, baseType: !1727, size: 32, offset: 32)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "factor", scope: !3870, file: !55, line: 269, baseType: !1727, size: 32, offset: 64)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3870, file: !55, line: 270, baseType: !1773, size: 64, offset: 128)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "iloc", scope: !3870, file: !55, line: 271, baseType: !1987, size: 96, offset: 192)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3870, file: !55, line: 272, baseType: !1773, size: 64, offset: 320)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "ival", scope: !3870, file: !55, line: 273, baseType: !1727, size: 32, offset: 384)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "center", scope: !3870, file: !55, line: 274, baseType: !1987, size: 96, offset: 416)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "mtx", scope: !3870, file: !55, line: 275, baseType: !3881, size: 288, offset: 512)
!3881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1727, size: 288, elements: !3882)
!3882 = !{!1967, !1967}
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "smtx", scope: !3870, file: !55, line: 276, baseType: !3881, size: 288, offset: 800)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "axismtx", scope: !3870, file: !55, line: 277, baseType: !3881, size: 288, offset: 1088)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3870, file: !55, line: 278, baseType: !1936, size: 64, offset: 1408)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "con", scope: !3870, file: !55, line: 279, baseType: !3887, size: 64, offset: 1472)
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3888, size: 64)
!3888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraint", file: !1588, line: 54, size: 960, elements: !3889)
!3889 = !{!3890, !3891, !3892, !3893, !3894, !3895, !3896, !3897, !3898, !3899, !3900, !3901, !3902, !3903}
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3888, file: !1588, line: 55, baseType: !3887, size: 64)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3888, file: !1588, line: 55, baseType: !3887, size: 64, offset: 64)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3888, file: !1588, line: 57, baseType: !18, size: 64, offset: 128)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3888, file: !1588, line: 58, baseType: !27, size: 16, offset: 192)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3888, file: !1588, line: 59, baseType: !27, size: 16, offset: 208)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "ownspace", scope: !3888, file: !1588, line: 61, baseType: !23, size: 8, offset: 224)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "tarspace", scope: !3888, file: !1588, line: 62, baseType: !23, size: 8, offset: 232)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3888, file: !1588, line: 64, baseType: !22, size: 512, offset: 240)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3888, file: !1588, line: 66, baseType: !27, size: 16, offset: 752)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "enforce", scope: !3888, file: !1588, line: 68, baseType: !1727, size: 32, offset: 768)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "headtail", scope: !3888, file: !1588, line: 69, baseType: !1727, size: 32, offset: 800)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3888, file: !1588, line: 71, baseType: !1956, size: 64, offset: 832)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "lin_error", scope: !3888, file: !1588, line: 74, baseType: !1727, size: 32, offset: 896)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "rot_error", scope: !3888, file: !1588, line: 75, baseType: !1727, size: 32, offset: 928)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !3870, file: !55, line: 280, baseType: !3905, size: 64, offset: 1536)
!3905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3906, size: 64)
!3906 = !DIDerivedType(tag: DW_TAG_typedef, name: "TransDataExtension", file: !55, line: 151, baseType: !3907)
!3907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TransDataExtension", file: !55, line: 127, size: 3072, elements: !3908)
!3908 = !{!3909, !3910, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929, !3930, !3931}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !3907, file: !55, line: 128, baseType: !1987, size: 96)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !3907, file: !55, line: 131, baseType: !2062, size: 128, offset: 96)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !3907, file: !55, line: 132, baseType: !1987, size: 96, offset: 224)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3907, file: !55, line: 133, baseType: !1773, size: 64, offset: 320)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "irot", scope: !3907, file: !55, line: 134, baseType: !1987, size: 96, offset: 384)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !3907, file: !55, line: 135, baseType: !1773, size: 64, offset: 512)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "iquat", scope: !3907, file: !55, line: 136, baseType: !2062, size: 128, offset: 576)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !3907, file: !55, line: 137, baseType: !1773, size: 64, offset: 704)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "irotAngle", scope: !3907, file: !55, line: 138, baseType: !1727, size: 32, offset: 768)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !3907, file: !55, line: 139, baseType: !1773, size: 64, offset: 832)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "irotAxis", scope: !3907, file: !55, line: 140, baseType: !2062, size: 128, offset: 896)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3907, file: !55, line: 141, baseType: !1773, size: 64, offset: 1024)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "isize", scope: !3907, file: !55, line: 142, baseType: !1987, size: 96, offset: 1088)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !3907, file: !55, line: 143, baseType: !2071, size: 512, offset: 1184)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "l_smtx", scope: !3907, file: !55, line: 144, baseType: !3881, size: 288, offset: 1696)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "r_mtx", scope: !3907, file: !55, line: 145, baseType: !3881, size: 288, offset: 1984)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "r_smtx", scope: !3907, file: !55, line: 148, baseType: !3881, size: 288, offset: 2272)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !3907, file: !55, line: 149, baseType: !35, size: 32, offset: 2560)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "oloc", scope: !3907, file: !55, line: 150, baseType: !1987, size: 96, offset: 2592)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "orot", scope: !3907, file: !55, line: 150, baseType: !1987, size: 96, offset: 2688)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "oquat", scope: !3907, file: !55, line: 150, baseType: !2062, size: 128, offset: 2784)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "orotAxis", scope: !3907, file: !55, line: 150, baseType: !1987, size: 96, offset: 2912)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "orotAngle", scope: !3907, file: !55, line: 150, baseType: !1727, size: 32, offset: 3008)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !3870, file: !55, line: 281, baseType: !3933, size: 64, offset: 1600)
!3933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3934, size: 64)
!3934 = !DIDerivedType(tag: DW_TAG_typedef, name: "TransDataCurveHandleFlags", file: !55, line: 165, baseType: !3935)
!3935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TransDataCurveHandleFlags", file: !55, line: 162, size: 192, elements: !3936)
!3936 = !{!3937, !3938, !3939, !3940}
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "ih1", scope: !3935, file: !55, line: 163, baseType: !23, size: 8)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "ih2", scope: !3935, file: !55, line: 163, baseType: !23, size: 8, offset: 8)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !3935, file: !55, line: 164, baseType: !2050, size: 64, offset: 64)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !3935, file: !55, line: 164, baseType: !2050, size: 64, offset: 128)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !3870, file: !55, line: 282, baseType: !18, size: 64, offset: 1664)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3870, file: !55, line: 283, baseType: !35, size: 32, offset: 1728)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !3870, file: !55, line: 284, baseType: !27, size: 16, offset: 1760)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !3843, file: !55, line: 313, baseType: !3905, size: 64, offset: 512)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "data2d", scope: !3843, file: !55, line: 314, baseType: !3946, size: 64, offset: 576)
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 64)
!3947 = !DIDerivedType(tag: DW_TAG_typedef, name: "TransData2D", file: !55, line: 159, baseType: !3948)
!3948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TransData2D", file: !55, line: 153, size: 448, elements: !3949)
!3949 = !{!3950, !3951, !3952, !3953, !3954, !3955}
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3948, file: !55, line: 154, baseType: !1987, size: 96)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "loc2d", scope: !3948, file: !55, line: 155, baseType: !1773, size: 64, offset: 128)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !3948, file: !55, line: 157, baseType: !1773, size: 64, offset: 192)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !3948, file: !55, line: 157, baseType: !1773, size: 64, offset: 256)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "ih1", scope: !3948, file: !55, line: 158, baseType: !1754, size: 64, offset: 320)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "ih2", scope: !3948, file: !55, line: 158, baseType: !1754, size: 64, offset: 384)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "con", scope: !3843, file: !55, line: 315, baseType: !3957, size: 1728, offset: 640)
!3957 = !DIDerivedType(tag: DW_TAG_typedef, name: "TransCon", file: !55, line: 125, baseType: !3958)
!3958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TransCon", file: !55, line: 104, size: 1728, elements: !3959)
!3959 = !{!3960, !3961, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3975, !3982, !3986}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !3958, file: !55, line: 105, baseType: !27, size: 16)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !3958, file: !55, line: 106, baseType: !3962, size: 400, offset: 16)
!3962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 400, elements: !3963)
!3963 = !{!3964}
!3964 = !DISubrange(count: 50)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "mtx", scope: !3958, file: !55, line: 107, baseType: !3881, size: 288, offset: 416)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "imtx", scope: !3958, file: !55, line: 108, baseType: !3881, size: 288, offset: 704)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "pmtx", scope: !3958, file: !55, line: 109, baseType: !3881, size: 288, offset: 992)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "center", scope: !3958, file: !55, line: 110, baseType: !1987, size: 96, offset: 1280)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "imval", scope: !3958, file: !55, line: 112, baseType: !2435, size: 64, offset: 1376)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3958, file: !55, line: 114, baseType: !35, size: 32, offset: 1440)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "drawExtra", scope: !3958, file: !55, line: 115, baseType: !3972, size: 64, offset: 1472)
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 64)
!3973 = !DISubroutineType(types: !3974)
!3974 = !{null, !3856}
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "applyVec", scope: !3958, file: !55, line: 118, baseType: !3976, size: 64, offset: 1536)
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64)
!3977 = !DISubroutineType(types: !3978)
!3978 = !{null, !3856, !3979, !3980, !1773, !1773}
!3979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3870, size: 64)
!3980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3981, size: 64)
!3981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1727)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "applySize", scope: !3958, file: !55, line: 121, baseType: !3983, size: 64, offset: 1600)
!3983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3984, size: 64)
!3984 = !DISubroutineType(types: !3985)
!3985 = !{null, !3856, !3979, !3830}
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "applyRot", scope: !3958, file: !55, line: 123, baseType: !3987, size: 64, offset: 1664)
!3987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3988, size: 64)
!3988 = !DISubroutineType(types: !3989)
!3989 = !{null, !3856, !3979, !1773, !1773}
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "tsnap", scope: !3843, file: !55, line: 316, baseType: !3991, size: 1152, offset: 2368)
!3991 = !DIDerivedType(tag: DW_TAG_typedef, name: "TransSnap", file: !55, line: 102, baseType: !3992)
!3992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TransSnap", file: !55, line: 78, size: 1152, elements: !3993)
!3993 = !{!3994, !3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4004, !4005, !4006, !4007, !4008, !4009, !4018, !4019, !4020, !4024, !4025, !4026}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3992, file: !55, line: 79, baseType: !27, size: 16)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !3992, file: !55, line: 80, baseType: !27, size: 16, offset: 16)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "modePoint", scope: !3992, file: !55, line: 81, baseType: !27, size: 16, offset: 32)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "modeSelect", scope: !3992, file: !55, line: 82, baseType: !27, size: 16, offset: 48)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3992, file: !55, line: 83, baseType: !2769, size: 8, offset: 64)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "project", scope: !3992, file: !55, line: 84, baseType: !2769, size: 8, offset: 72)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "snap_self", scope: !3992, file: !55, line: 85, baseType: !2769, size: 8, offset: 80)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "peel", scope: !3992, file: !55, line: 86, baseType: !2769, size: 8, offset: 88)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3992, file: !55, line: 87, baseType: !27, size: 16, offset: 96)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "snapPoint", scope: !3992, file: !55, line: 88, baseType: !1987, size: 96, offset: 128)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "snapTarget", scope: !3992, file: !55, line: 89, baseType: !1987, size: 96, offset: 224)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "snapNormal", scope: !3992, file: !55, line: 90, baseType: !1987, size: 96, offset: 320)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "snapTangent", scope: !3992, file: !55, line: 91, baseType: !1987, size: 96, offset: 416)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "snapNodeBorder", scope: !3992, file: !55, line: 92, baseType: !23, size: 8, offset: 512)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3992, file: !55, line: 93, baseType: !13, size: 128, offset: 576)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "selectedPoint", scope: !3992, file: !55, line: 94, baseType: !4010, size: 64, offset: 704)
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 64)
!4011 = !DIDerivedType(tag: DW_TAG_typedef, name: "TransSnapPoint", file: !55, line: 76, baseType: !4012)
!4012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TransSnapPoint", file: !55, line: 73, size: 256, elements: !4013)
!4013 = !{!4014, !4016, !4017}
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4012, file: !55, line: 74, baseType: !4015, size: 64)
!4015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4012, size: 64)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4012, file: !55, line: 74, baseType: !4015, size: 64, offset: 64)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !4012, file: !55, line: 75, baseType: !1987, size: 96, offset: 128)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !3992, file: !55, line: 95, baseType: !1727, size: 32, offset: 768)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !3992, file: !55, line: 96, baseType: !3424, size: 64, offset: 832)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "applySnap", scope: !3992, file: !55, line: 97, baseType: !4021, size: 64, offset: 896)
!4021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4022, size: 64)
!4022 = !DISubroutineType(types: !4023)
!4023 = !{null, !3856, !1773}
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "calcSnap", scope: !3992, file: !55, line: 98, baseType: !4021, size: 64, offset: 960)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "targetSnap", scope: !3992, file: !55, line: 99, baseType: !3972, size: 64, offset: 1024)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !3992, file: !55, line: 101, baseType: !4027, size: 64, offset: 1088)
!4027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4028, size: 64)
!4028 = !DISubroutineType(types: !4029)
!4029 = !{!1727, !3856, !3980, !3980}
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3843, file: !55, line: 317, baseType: !4031, size: 1120, offset: 3520)
!4031 = !DIDerivedType(tag: DW_TAG_typedef, name: "NumInput", file: !1562, line: 49, baseType: !4032)
!4032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NumInput", file: !1562, line: 33, size: 1120, elements: !4033)
!4033 = !{!4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042, !4043, !4044, !4045}
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "idx_max", scope: !4032, file: !1562, line: 34, baseType: !27, size: 16)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "unit_sys", scope: !4032, file: !1562, line: 35, baseType: !35, size: 32, offset: 32)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "unit_type", scope: !4032, file: !1562, line: 36, baseType: !2790, size: 96, offset: 64)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "unit_use_radians", scope: !4032, file: !1562, line: 37, baseType: !2769, size: 8, offset: 160)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4032, file: !1562, line: 39, baseType: !27, size: 16, offset: 176)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "val_flag", scope: !4032, file: !1562, line: 40, baseType: !3294, size: 48, offset: 192)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4032, file: !1562, line: 41, baseType: !1987, size: 96, offset: 256)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "val_org", scope: !4032, file: !1562, line: 42, baseType: !1987, size: 96, offset: 352)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "val_inc", scope: !4032, file: !1562, line: 43, baseType: !1987, size: 96, offset: 448)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !4032, file: !1562, line: 45, baseType: !27, size: 16, offset: 544)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4032, file: !1562, line: 46, baseType: !22, size: 512, offset: 560)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "str_cur", scope: !4032, file: !1562, line: 48, baseType: !35, size: 32, offset: 1088)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "mouse", scope: !3843, file: !55, line: 318, baseType: !4047, size: 448, offset: 4672)
!4047 = !DIDerivedType(tag: DW_TAG_typedef, name: "MouseInput", file: !55, line: 297, baseType: !4048)
!4048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MouseInput", file: !55, line: 287, size: 448, elements: !4049)
!4049 = !{!4050, !4055, !4056, !4057, !4058, !4059, !4060, !4061}
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "apply", scope: !4048, file: !55, line: 288, baseType: !4051, size: 64)
!4051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4052, size: 64)
!4052 = !DISubroutineType(types: !4053)
!4053 = !{null, !3856, !4054, !3857, !1773}
!4054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "post", scope: !4048, file: !55, line: 289, baseType: !4021, size: 64, offset: 64)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "imval", scope: !4048, file: !55, line: 291, baseType: !2435, size: 64, offset: 128)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !4048, file: !55, line: 292, baseType: !2769, size: 8, offset: 192)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "precision_mval", scope: !4048, file: !55, line: 293, baseType: !2435, size: 64, offset: 224)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "center", scope: !4048, file: !55, line: 294, baseType: !1754, size: 64, offset: 288)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "factor", scope: !4048, file: !55, line: 295, baseType: !1727, size: 32, offset: 352)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4048, file: !55, line: 296, baseType: !18, size: 64, offset: 384)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "redraw", scope: !3843, file: !55, line: 319, baseType: !3863, size: 32, offset: 5120)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "prop_size", scope: !3843, file: !55, line: 320, baseType: !1727, size: 32, offset: 5152)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "proptext", scope: !3843, file: !55, line: 321, baseType: !4065, size: 160, offset: 5184)
!4065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 160, elements: !4066)
!4066 = !{!4067}
!4067 = !DISubrange(count: 20)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "center", scope: !3843, file: !55, line: 322, baseType: !1987, size: 96, offset: 5344)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "center2d", scope: !3843, file: !55, line: 323, baseType: !1754, size: 64, offset: 5440)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "imval", scope: !3843, file: !55, line: 324, baseType: !2435, size: 64, offset: 5504)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !3843, file: !55, line: 325, baseType: !27, size: 16, offset: 5568)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "idx_max", scope: !3843, file: !55, line: 326, baseType: !27, size: 16, offset: 5584)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "snap", scope: !3843, file: !55, line: 327, baseType: !1987, size: 96, offset: 5600)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "frame_side", scope: !3843, file: !55, line: 328, baseType: !23, size: 8, offset: 5696)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !3843, file: !55, line: 330, baseType: !2071, size: 512, offset: 5728)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !3843, file: !55, line: 331, baseType: !2071, size: 512, offset: 6240)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !3843, file: !55, line: 332, baseType: !2071, size: 512, offset: 6752)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "persinv", scope: !3843, file: !55, line: 333, baseType: !2071, size: 512, offset: 7264)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !3843, file: !55, line: 334, baseType: !27, size: 16, offset: 7776)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !3843, file: !55, line: 335, baseType: !27, size: 16, offset: 7792)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3843, file: !55, line: 336, baseType: !23, size: 8, offset: 7808)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "helpline", scope: !3843, file: !55, line: 337, baseType: !23, size: 8, offset: 7816)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3843, file: !55, line: 339, baseType: !1987, size: 96, offset: 7840)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3843, file: !55, line: 340, baseType: !3881, size: 288, offset: 7936)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "spacemtx", scope: !3843, file: !55, line: 342, baseType: !3881, size: 288, offset: 8224)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "spacename", scope: !3843, file: !55, line: 343, baseType: !22, size: 512, offset: 8512)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "poseobj", scope: !3843, file: !55, line: 345, baseType: !1936, size: 64, offset: 9024)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "customData", scope: !3843, file: !55, line: 347, baseType: !18, size: 64, offset: 9088)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "customFree", scope: !3843, file: !55, line: 348, baseType: !3972, size: 64, offset: 9152)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "launch_event", scope: !3843, file: !55, line: 351, baseType: !27, size: 16, offset: 9216)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "current_orientation", scope: !3843, file: !55, line: 353, baseType: !27, size: 16, offset: 9232)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "twtype", scope: !3843, file: !55, line: 354, baseType: !27, size: 16, offset: 9248)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !3843, file: !55, line: 356, baseType: !27, size: 16, offset: 9264)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "mirror", scope: !3843, file: !55, line: 358, baseType: !27, size: 16, offset: 9280)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !3843, file: !55, line: 360, baseType: !2062, size: 128, offset: 9312)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "auto_values", scope: !3843, file: !55, line: 361, baseType: !2062, size: 128, offset: 9440)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "axis", scope: !3843, file: !55, line: 362, baseType: !1987, size: 96, offset: 9568)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "axis_orig", scope: !3843, file: !55, line: 363, baseType: !1987, size: 96, offset: 9664)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "remove_on_cancel", scope: !3843, file: !55, line: 365, baseType: !2769, size: 8, offset: 9760)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !3843, file: !55, line: 367, baseType: !18, size: 64, offset: 9792)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3843, file: !55, line: 368, baseType: !36, size: 64, offset: 9856)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3843, file: !55, line: 369, baseType: !4103, size: 64, offset: 9920)
!4103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4104, size: 64)
!4104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !87, line: 203, size: 1280, elements: !4105)
!4105 = !{!4106, !4107, !4108, !4125, !4126, !4127, !4128, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4141, !4142, !4145, !4146, !4147, !4148}
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4104, file: !87, line: 204, baseType: !4103, size: 64)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4104, file: !87, line: 204, baseType: !4103, size: 64, offset: 64)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4104, file: !87, line: 206, baseType: !4109, size: 64, offset: 128)
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4110 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !87, line: 87, baseType: !4111)
!4111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !87, line: 82, size: 256, elements: !4112)
!4112 = !{!4113, !4115, !4116, !4117, !4123, !4124}
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4111, file: !87, line: 83, baseType: !4114, size: 64)
!4114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4111, size: 64)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4111, file: !87, line: 83, baseType: !4114, size: 64, offset: 64)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !4111, file: !87, line: 83, baseType: !4114, size: 64, offset: 128)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4111, file: !87, line: 84, baseType: !4118, size: 32, offset: 192)
!4118 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !1735, line: 43, baseType: !4119)
!4119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !1735, line: 41, size: 32, elements: !4120)
!4120 = !{!4121, !4122}
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4119, file: !1735, line: 42, baseType: !27, size: 16)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4119, file: !1735, line: 42, baseType: !27, size: 16, offset: 16)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4111, file: !87, line: 86, baseType: !27, size: 16, offset: 224)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !4111, file: !87, line: 86, baseType: !27, size: 16, offset: 240)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4104, file: !87, line: 206, baseType: !4109, size: 64, offset: 192)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4104, file: !87, line: 206, baseType: !4109, size: 64, offset: 256)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4104, file: !87, line: 206, baseType: !4109, size: 64, offset: 320)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !4104, file: !87, line: 207, baseType: !4129, size: 64, offset: 384)
!4129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4130, size: 64)
!4130 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !87, line: 80, baseType: !1795)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !4104, file: !87, line: 209, baseType: !1744, size: 128, offset: 448)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4104, file: !87, line: 211, baseType: !23, size: 8, offset: 576)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !4104, file: !87, line: 211, baseType: !23, size: 8, offset: 584)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !4104, file: !87, line: 212, baseType: !27, size: 16, offset: 592)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !4104, file: !87, line: 212, baseType: !27, size: 16, offset: 608)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !4104, file: !87, line: 214, baseType: !27, size: 16, offset: 624)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !4104, file: !87, line: 215, baseType: !27, size: 16, offset: 640)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4104, file: !87, line: 216, baseType: !27, size: 16, offset: 656)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !4104, file: !87, line: 217, baseType: !27, size: 16, offset: 672)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !4104, file: !87, line: 219, baseType: !23, size: 8, offset: 688)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4104, file: !87, line: 219, baseType: !23, size: 8, offset: 696)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4104, file: !87, line: 221, baseType: !4143, size: 64, offset: 704)
!4143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4144, size: 64)
!4144 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !87, line: 39, flags: DIFlagFwdDecl)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !4104, file: !87, line: 223, baseType: !13, size: 128, offset: 768)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4104, file: !87, line: 224, baseType: !13, size: 128, offset: 896)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !4104, file: !87, line: 225, baseType: !13, size: 128, offset: 1024)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !4104, file: !87, line: 227, baseType: !13, size: 128, offset: 1152)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "ar", scope: !3843, file: !55, line: 370, baseType: !4150, size: 64, offset: 9984)
!4150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4151, size: 64)
!4151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !87, line: 230, size: 3072, elements: !4152)
!4152 = !{!4153, !4154, !4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183, !4184, !4185}
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4151, file: !87, line: 231, baseType: !4150, size: 64)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4151, file: !87, line: 231, baseType: !4150, size: 64, offset: 64)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !4151, file: !87, line: 233, baseType: !1729, size: 1280, offset: 128)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !4151, file: !87, line: 234, baseType: !1744, size: 128, offset: 1408)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !4151, file: !87, line: 235, baseType: !1744, size: 128, offset: 1536)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !4151, file: !87, line: 236, baseType: !27, size: 16, offset: 1664)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !4151, file: !87, line: 236, baseType: !27, size: 16, offset: 1680)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !4151, file: !87, line: 238, baseType: !27, size: 16, offset: 1696)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !4151, file: !87, line: 239, baseType: !27, size: 16, offset: 1712)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !4151, file: !87, line: 240, baseType: !27, size: 16, offset: 1728)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4151, file: !87, line: 241, baseType: !27, size: 16, offset: 1744)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !4151, file: !87, line: 243, baseType: !1727, size: 32, offset: 1760)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !4151, file: !87, line: 244, baseType: !27, size: 16, offset: 1792)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !4151, file: !87, line: 244, baseType: !27, size: 16, offset: 1808)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !4151, file: !87, line: 246, baseType: !27, size: 16, offset: 1824)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !4151, file: !87, line: 247, baseType: !27, size: 16, offset: 1840)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !4151, file: !87, line: 248, baseType: !27, size: 16, offset: 1856)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !4151, file: !87, line: 249, baseType: !27, size: 16, offset: 1872)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !4151, file: !87, line: 250, baseType: !27, size: 16, offset: 1888)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4151, file: !87, line: 251, baseType: !27, size: 16, offset: 1904)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4151, file: !87, line: 253, baseType: !4174, size: 64, offset: 1920)
!4174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4175, size: 64)
!4175 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !87, line: 42, flags: DIFlagFwdDecl)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !4151, file: !87, line: 255, baseType: !13, size: 128, offset: 1984)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !4151, file: !87, line: 256, baseType: !13, size: 128, offset: 2112)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !4151, file: !87, line: 257, baseType: !13, size: 128, offset: 2240)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !4151, file: !87, line: 258, baseType: !13, size: 128, offset: 2368)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !4151, file: !87, line: 259, baseType: !13, size: 128, offset: 2496)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !4151, file: !87, line: 260, baseType: !13, size: 128, offset: 2624)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !4151, file: !87, line: 261, baseType: !13, size: 128, offset: 2752)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !4151, file: !87, line: 263, baseType: !1780, size: 64, offset: 2880)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !4151, file: !87, line: 265, baseType: !2050, size: 64, offset: 2944)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !4151, file: !87, line: 266, baseType: !18, size: 64, offset: 3008)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3843, file: !55, line: 371, baseType: !1861, size: 64, offset: 10048)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !3843, file: !55, line: 372, baseType: !2748, size: 64, offset: 10112)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !3843, file: !55, line: 373, baseType: !1780, size: 64, offset: 10176)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !3843, file: !55, line: 374, baseType: !6, size: 64, offset: 10240)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !3843, file: !55, line: 375, baseType: !4191, size: 64, offset: 10304)
!4191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4192, size: 64)
!4192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !8, line: 106, size: 320, elements: !4193)
!4193 = !{!4194, !4195, !4196, !4197, !4198, !4199}
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4192, file: !8, line: 107, baseType: !13, size: 128)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !4192, file: !8, line: 108, baseType: !35, size: 32, offset: 128)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !4192, file: !8, line: 109, baseType: !35, size: 32, offset: 160)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4192, file: !8, line: 110, baseType: !35, size: 32, offset: 192)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4192, file: !8, line: 110, baseType: !35, size: 32, offset: 224)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !4192, file: !8, line: 111, baseType: !1780, size: 64, offset: 256)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !3843, file: !55, line: 376, baseType: !2435, size: 64, offset: 10368)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "zfac", scope: !3843, file: !55, line: 377, baseType: !1727, size: 32, offset: 10432)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !3843, file: !55, line: 378, baseType: !1936, size: 64, offset: 10496)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "obedit_mat", scope: !3843, file: !55, line: 379, baseType: !3881, size: 288, offset: 10560)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "draw_handle_apply", scope: !3843, file: !55, line: 380, baseType: !18, size: 64, offset: 10880)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "draw_handle_view", scope: !3843, file: !55, line: 381, baseType: !18, size: 64, offset: 10944)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "draw_handle_pixel", scope: !3843, file: !55, line: 382, baseType: !18, size: 64, offset: 11008)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "draw_handle_cursor", scope: !3843, file: !55, line: 383, baseType: !18, size: 64, offset: 11072)
!4208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4209, size: 64)
!4209 = !DIDerivedType(tag: DW_TAG_typedef, name: "GLubyte", file: !4210, line: 278, baseType: !2769)
!4210 = !DIFile(filename: "blender/extern/glew/include/GL/glew.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4212, size: 64)
!4212 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceImage", file: !62, line: 743, baseType: !4213)
!4213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceImage", file: !62, line: 710, size: 84672, elements: !4214)
!4214 = !{!4215, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4266, !4267, !4268, !4269, !4270, !4271, !4272, !4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4213, file: !62, line: 711, baseType: !4216, size: 64)
!4216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4217, size: 64)
!4217 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !62, line: 91, baseType: !3489)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4213, file: !62, line: 711, baseType: !4216, size: 64, offset: 64)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4213, file: !62, line: 712, baseType: !13, size: 128, offset: 128)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4213, file: !62, line: 713, baseType: !35, size: 32, offset: 256)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4213, file: !62, line: 715, baseType: !35, size: 32, offset: 288)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !4213, file: !62, line: 717, baseType: !2592, size: 64, offset: 320)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !4213, file: !62, line: 718, baseType: !2186, size: 320, offset: 384)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "cumap", scope: !4213, file: !62, line: 720, baseType: !2999, size: 64, offset: 704)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "scopes", scope: !4213, file: !62, line: 722, baseType: !4226, size: 42112, offset: 768)
!4226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scopes", file: !2417, line: 138, size: 42112, elements: !4227)
!4227 = !{!4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4241, !4260, !4261, !4262, !4263, !4264, !4265}
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !4226, file: !2417, line: 139, baseType: !35, size: 32)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "sample_full", scope: !4226, file: !2417, line: 140, baseType: !35, size: 32, offset: 32)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "sample_lines", scope: !4226, file: !2417, line: 141, baseType: !35, size: 32, offset: 64)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !4226, file: !2417, line: 142, baseType: !1727, size: 32, offset: 96)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_mode", scope: !4226, file: !2417, line: 143, baseType: !35, size: 32, offset: 128)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_alpha", scope: !4226, file: !2417, line: 144, baseType: !1727, size: 32, offset: 160)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_yfac", scope: !4226, file: !2417, line: 145, baseType: !1727, size: 32, offset: 192)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_height", scope: !4226, file: !2417, line: 146, baseType: !35, size: 32, offset: 224)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_alpha", scope: !4226, file: !2417, line: 147, baseType: !1727, size: 32, offset: 256)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_height", scope: !4226, file: !2417, line: 148, baseType: !35, size: 32, offset: 288)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "minmax", scope: !4226, file: !2417, line: 149, baseType: !4239, size: 192, offset: 320)
!4239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1727, size: 192, elements: !4240)
!4240 = !{!1967, !1756}
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "hist", scope: !4226, file: !2417, line: 150, baseType: !4242, size: 41280, offset: 512)
!4242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Histogram", file: !2417, line: 118, size: 41280, elements: !4243)
!4243 = !{!4244, !4245, !4246, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256, !4257}
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !4242, file: !2417, line: 119, baseType: !35, size: 32)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !4242, file: !2417, line: 120, baseType: !35, size: 32, offset: 32)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "data_luma", scope: !4242, file: !2417, line: 121, baseType: !4247, size: 8192, offset: 64)
!4247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1727, size: 8192, elements: !2367)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !4242, file: !2417, line: 122, baseType: !4247, size: 8192, offset: 8256)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !4242, file: !2417, line: 123, baseType: !4247, size: 8192, offset: 16448)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !4242, file: !2417, line: 124, baseType: !4247, size: 8192, offset: 24640)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "data_a", scope: !4242, file: !2417, line: 125, baseType: !4247, size: 8192, offset: 32832)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !4242, file: !2417, line: 126, baseType: !1727, size: 32, offset: 41024)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !4242, file: !2417, line: 126, baseType: !1727, size: 32, offset: 41056)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4242, file: !2417, line: 127, baseType: !27, size: 16, offset: 41088)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4242, file: !2417, line: 128, baseType: !27, size: 16, offset: 41104)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4242, file: !2417, line: 129, baseType: !35, size: 32, offset: 41120)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !4242, file: !2417, line: 133, baseType: !4258, size: 128, offset: 41152)
!4258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1727, size: 128, elements: !4259)
!4259 = !{!1756, !1756}
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_1", scope: !4226, file: !2417, line: 151, baseType: !1773, size: 64, offset: 41792)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_2", scope: !4226, file: !2417, line: 152, baseType: !1773, size: 64, offset: 41856)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_3", scope: !4226, file: !2417, line: 153, baseType: !1773, size: 64, offset: 41920)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope", scope: !4226, file: !2417, line: 154, baseType: !1773, size: 64, offset: 41984)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_tot", scope: !4226, file: !2417, line: 155, baseType: !35, size: 32, offset: 42048)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4226, file: !2417, line: 156, baseType: !35, size: 32, offset: 42080)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "sample_line_hist", scope: !4213, file: !62, line: 723, baseType: !4242, size: 41280, offset: 42880)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !4213, file: !62, line: 725, baseType: !2018, size: 64, offset: 84160)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !4213, file: !62, line: 727, baseType: !1754, size: 64, offset: 84224)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !4213, file: !62, line: 728, baseType: !1727, size: 32, offset: 84288)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !4213, file: !62, line: 728, baseType: !1727, size: 32, offset: 84320)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !4213, file: !62, line: 729, baseType: !1727, size: 32, offset: 84352)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "centx", scope: !4213, file: !62, line: 730, baseType: !1727, size: 32, offset: 84384)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "centy", scope: !4213, file: !62, line: 730, baseType: !1727, size: 32, offset: 84416)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4213, file: !62, line: 732, baseType: !23, size: 8, offset: 84448)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !4213, file: !62, line: 733, baseType: !23, size: 8, offset: 84456)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4213, file: !62, line: 734, baseType: !27, size: 16, offset: 84464)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "curtile", scope: !4213, file: !62, line: 735, baseType: !27, size: 16, offset: 84480)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4213, file: !62, line: 736, baseType: !27, size: 16, offset: 84496)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uv", scope: !4213, file: !62, line: 737, baseType: !23, size: 8, offset: 84512)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "sticky", scope: !4213, file: !62, line: 738, baseType: !23, size: 8, offset: 84520)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uvstretch", scope: !4213, file: !62, line: 739, baseType: !23, size: 8, offset: 84528)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !4213, file: !62, line: 740, baseType: !23, size: 8, offset: 84536)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "mask_info", scope: !4213, file: !62, line: 742, baseType: !4284, size: 128, offset: 84544)
!4284 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSpaceInfo", file: !62, line: 554, baseType: !4285)
!4285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSpaceInfo", file: !62, line: 545, size: 128, elements: !4286)
!4286 = !{!4287, !4288, !4289, !4290, !4291}
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4285, file: !62, line: 548, baseType: !2702, size: 64)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "draw_flag", scope: !4285, file: !62, line: 550, baseType: !23, size: 8, offset: 64)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "draw_type", scope: !4285, file: !62, line: 551, baseType: !23, size: 8, offset: 72)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_mode", scope: !4285, file: !62, line: 552, baseType: !23, size: 8, offset: 80)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !4285, file: !62, line: 553, baseType: !2816, size: 40, offset: 88)
!4292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4293, size: 64)
!4293 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceClip", file: !62, line: 1110, baseType: !4294)
!4294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceClip", file: !62, line: 1074, size: 3264, elements: !4295)
!4295 = !{!4296, !4297, !4298, !4299, !4300, !4301, !4302, !4303, !4304, !4305, !4306, !4307, !4328, !4329, !4330, !4331, !4332, !4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340, !4341, !4342, !4343, !4344}
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4294, file: !62, line: 1075, baseType: !4216, size: 64)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4294, file: !62, line: 1075, baseType: !4216, size: 64, offset: 64)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4294, file: !62, line: 1076, baseType: !13, size: 128, offset: 128)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4294, file: !62, line: 1077, baseType: !35, size: 32, offset: 256)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !4294, file: !62, line: 1079, baseType: !1727, size: 32, offset: 288)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !4294, file: !62, line: 1079, baseType: !1727, size: 32, offset: 320)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "xlockof", scope: !4294, file: !62, line: 1080, baseType: !1727, size: 32, offset: 352)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "ylockof", scope: !4294, file: !62, line: 1080, baseType: !1727, size: 32, offset: 384)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !4294, file: !62, line: 1081, baseType: !1727, size: 32, offset: 416)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !4294, file: !62, line: 1083, baseType: !3526, size: 64, offset: 448)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !4294, file: !62, line: 1084, baseType: !2425, size: 64, offset: 512)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "scopes", scope: !4294, file: !62, line: 1085, baseType: !4308, size: 1088, offset: 576)
!4308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipScopes", file: !2427, line: 103, size: 1088, elements: !4309)
!4309 = !{!4310, !4311, !4312, !4313, !4314, !4315, !4316, !4319, !4320, !4321, !4322, !4323, !4324, !4325, !4327}
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !4308, file: !2427, line: 104, baseType: !27, size: 16)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "use_track_mask", scope: !4308, file: !2427, line: 105, baseType: !27, size: 16, offset: 16)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "track_preview_height", scope: !4308, file: !2427, line: 106, baseType: !35, size: 32, offset: 32)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "frame_width", scope: !4308, file: !2427, line: 107, baseType: !35, size: 32, offset: 64)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "frame_height", scope: !4308, file: !2427, line: 107, baseType: !35, size: 32, offset: 96)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "undist_marker", scope: !4308, file: !2427, line: 108, baseType: !2536, size: 512, offset: 128)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "track_search", scope: !4308, file: !2427, line: 109, baseType: !4317, size: 64, offset: 640)
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4318, size: 64)
!4318 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !2417, line: 136, flags: DIFlagFwdDecl)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "track_preview", scope: !4308, file: !2427, line: 110, baseType: !4317, size: 64, offset: 704)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "track_pos", scope: !4308, file: !2427, line: 111, baseType: !1754, size: 64, offset: 768)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "track_disabled", scope: !4308, file: !2427, line: 112, baseType: !27, size: 16, offset: 832)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "track_locked", scope: !4308, file: !2427, line: 113, baseType: !27, size: 16, offset: 848)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !4308, file: !2427, line: 114, baseType: !35, size: 32, offset: 864)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !4308, file: !2427, line: 115, baseType: !2523, size: 64, offset: 896)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "marker", scope: !4308, file: !2427, line: 116, baseType: !4326, size: 64, offset: 960)
!4326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 64)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "slide_scale", scope: !4308, file: !2427, line: 117, baseType: !1754, size: 64, offset: 1024)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4294, file: !62, line: 1087, baseType: !35, size: 32, offset: 1664)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4294, file: !62, line: 1088, baseType: !27, size: 16, offset: 1696)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !4294, file: !62, line: 1089, baseType: !27, size: 16, offset: 1712)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "path_length", scope: !4294, file: !62, line: 1091, baseType: !35, size: 32, offset: 1728)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !4294, file: !62, line: 1094, baseType: !1754, size: 64, offset: 1760)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !4294, file: !62, line: 1094, baseType: !1727, size: 32, offset: 1824)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !4294, file: !62, line: 1094, baseType: !1727, size: 32, offset: 1856)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4294, file: !62, line: 1095, baseType: !35, size: 32, offset: 1888)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "stabmat", scope: !4294, file: !62, line: 1096, baseType: !2071, size: 512, offset: 1920)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "unistabmat", scope: !4294, file: !62, line: 1096, baseType: !2071, size: 512, offset: 2432)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "postproc_flag", scope: !4294, file: !62, line: 1100, baseType: !35, size: 32, offset: 2944)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_src", scope: !4294, file: !62, line: 1103, baseType: !27, size: 16, offset: 2976)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !4294, file: !62, line: 1103, baseType: !27, size: 16, offset: 2992)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !4294, file: !62, line: 1105, baseType: !35, size: 32, offset: 3008)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !4294, file: !62, line: 1105, baseType: !35, size: 32, offset: 3040)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !4294, file: !62, line: 1107, baseType: !1754, size: 64, offset: 3072)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "mask_info", scope: !4294, file: !62, line: 1109, baseType: !4284, size: 128, offset: 3136)
!4345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4346, size: 64)
!4346 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !4347, line: 69, baseType: !37)
!4347 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4348 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIterType", file: !439, line: 79, baseType: !438)
!4349 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__begin_cb", file: !439, line: 158, baseType: !2303)
!4350 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__step_cb", file: !439, line: 159, baseType: !4351)
!4351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4352, size: 64)
!4352 = !DISubroutineType(types: !4353)
!4353 = !{!18, !18}
!4354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4355, size: 64)
!4355 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceAction", file: !1645, line: 605, baseType: !4356)
!4356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceAction", file: !1645, line: 589, size: 2752, elements: !4357)
!4357 = !{!4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4378, !4379, !4380, !4381}
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4356, file: !1645, line: 590, baseType: !3488, size: 64)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4356, file: !1645, line: 590, baseType: !3488, size: 64, offset: 64)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4356, file: !1645, line: 591, baseType: !13, size: 128, offset: 128)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4356, file: !1645, line: 592, baseType: !35, size: 32, offset: 256)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !4356, file: !1645, line: 593, baseType: !1727, size: 32, offset: 288)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !4356, file: !1645, line: 595, baseType: !3497, size: 128, offset: 320)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !4356, file: !1645, line: 597, baseType: !1729, size: 1280, offset: 448)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4356, file: !1645, line: 599, baseType: !1872, size: 64, offset: 1728)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "ads", scope: !4356, file: !1645, line: 600, baseType: !4367, size: 896, offset: 1792)
!4367 = !DIDerivedType(tag: DW_TAG_typedef, name: "bDopeSheet", file: !1645, line: 531, baseType: !4368)
!4368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bDopeSheet", file: !1645, line: 519, size: 896, elements: !4369)
!4369 = !{!4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377}
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !4368, file: !1645, line: 520, baseType: !1812, size: 64)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !4368, file: !1645, line: 521, baseType: !13, size: 128, offset: 64)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "filter_grp", scope: !4368, file: !1645, line: 523, baseType: !2146, size: 64, offset: 192)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "searchstr", scope: !4368, file: !1645, line: 524, baseType: !22, size: 512, offset: 256)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "filterflag", scope: !4368, file: !1645, line: 526, baseType: !35, size: 32, offset: 768)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4368, file: !1645, line: 527, baseType: !35, size: 32, offset: 800)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "renameIndex", scope: !4368, file: !1645, line: 529, baseType: !35, size: 32, offset: 832)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4368, file: !1645, line: 530, baseType: !35, size: 32, offset: 864)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4356, file: !1645, line: 602, baseType: !23, size: 8, offset: 2688)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "autosnap", scope: !4356, file: !1645, line: 602, baseType: !23, size: 8, offset: 2696)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4356, file: !1645, line: 603, baseType: !27, size: 16, offset: 2704)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "timeslide", scope: !4356, file: !1645, line: 604, baseType: !1727, size: 32, offset: 2720)
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4383, size: 64)
!4383 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceIpo", file: !62, line: 334, baseType: !4384)
!4384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceIpo", file: !62, line: 315, size: 2048, elements: !4385)
!4385 = !{!4386, !4387, !4388, !4389, !4390, !4391, !4392, !4393, !4395, !4396, !4397, !4398, !4399, !4400}
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4384, file: !62, line: 316, baseType: !4216, size: 64)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4384, file: !62, line: 316, baseType: !4216, size: 64, offset: 64)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4384, file: !62, line: 317, baseType: !13, size: 128, offset: 128)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4384, file: !62, line: 318, baseType: !35, size: 32, offset: 256)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !4384, file: !62, line: 319, baseType: !1727, size: 32, offset: 288)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !4384, file: !62, line: 320, baseType: !3497, size: 128, offset: 320)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !4384, file: !62, line: 322, baseType: !1729, size: 1280, offset: 448)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "ads", scope: !4384, file: !62, line: 324, baseType: !4394, size: 64, offset: 1728)
!4394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4368, size: 64)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "ghostCurves", scope: !4384, file: !62, line: 326, baseType: !13, size: 128, offset: 1792)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4384, file: !62, line: 328, baseType: !27, size: 16, offset: 1920)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "autosnap", scope: !4384, file: !62, line: 329, baseType: !27, size: 16, offset: 1936)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4384, file: !62, line: 330, baseType: !35, size: 32, offset: 1952)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "cursorVal", scope: !4384, file: !62, line: 332, baseType: !1727, size: 32, offset: 1984)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !4384, file: !62, line: 333, baseType: !35, size: 32, offset: 2016)
!4401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4402, size: 64)
!4402 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceNla", file: !62, line: 399, baseType: !4403)
!4403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNla", file: !62, line: 386, size: 1856, elements: !4404)
!4404 = !{!4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414, !4415}
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4403, file: !62, line: 387, baseType: !3488, size: 64)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4403, file: !62, line: 387, baseType: !3488, size: 64, offset: 64)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4403, file: !62, line: 388, baseType: !13, size: 128, offset: 128)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4403, file: !62, line: 389, baseType: !35, size: 32, offset: 256)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !4403, file: !62, line: 390, baseType: !1727, size: 32, offset: 288)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !4403, file: !62, line: 391, baseType: !3497, size: 128, offset: 320)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "autosnap", scope: !4403, file: !62, line: 393, baseType: !27, size: 16, offset: 448)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4403, file: !62, line: 394, baseType: !27, size: 16, offset: 464)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4403, file: !62, line: 395, baseType: !35, size: 32, offset: 480)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "ads", scope: !4403, file: !62, line: 397, baseType: !4394, size: 64, offset: 512)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !4403, file: !62, line: 398, baseType: !1729, size: 1280, offset: 576)
!4416 = !{!0}
!4417 = !{}
!4418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4419, size: 8640, elements: !4427)
!4419 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !38, line: 308, baseType: !4420)
!4420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !38, line: 302, size: 320, elements: !4421)
!4421 = !{!4422, !4423, !4424, !4425, !4426}
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4420, file: !38, line: 303, baseType: !35, size: 32)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !4420, file: !38, line: 304, baseType: !3434, size: 64, offset: 64)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !4420, file: !38, line: 305, baseType: !35, size: 32, offset: 128)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4420, file: !38, line: 306, baseType: !3434, size: 64, offset: 192)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !4420, file: !38, line: 307, baseType: !3434, size: 64, offset: 256)
!4427 = !{!4428}
!4428 = !DISubrange(count: 27)
!4429 = !{i32 7, !"Dwarf Version", i32 4}
!4430 = !{i32 2, !"Debug Info Version", i32 3}
!4431 = !{i32 1, !"wchar_size", i32 4}
!4432 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!4433 = distinct !DISubprogram(name: "setTransformViewMatrices", scope: !3, file: !3, line: 205, type: !4434, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!4434 = !DISubroutineType(types: !4435)
!4435 = !{null, !3841}
!4436 = !DILocalVariable(name: "t", arg: 1, scope: !4433, file: !3, line: 205, type: !3841)
!4437 = !DILocation(line: 205, column: 42, scope: !4433)
!4438 = !DILocation(line: 207, column: 6, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4433, file: !3, line: 207, column: 6)
!4440 = !DILocation(line: 207, column: 9, scope: !4439)
!4441 = !DILocation(line: 207, column: 19, scope: !4439)
!4442 = !DILocation(line: 207, column: 35, scope: !4439)
!4443 = !DILocation(line: 207, column: 38, scope: !4439)
!4444 = !DILocation(line: 207, column: 41, scope: !4439)
!4445 = !DILocation(line: 207, column: 44, scope: !4439)
!4446 = !DILocation(line: 207, column: 47, scope: !4439)
!4447 = !DILocation(line: 207, column: 50, scope: !4439)
!4448 = !DILocation(line: 207, column: 54, scope: !4439)
!4449 = !DILocation(line: 207, column: 65, scope: !4439)
!4450 = !DILocation(line: 207, column: 6, scope: !4433)
!4451 = !DILocalVariable(name: "rv3d", scope: !4452, file: !3, line: 208, type: !4453)
!4452 = distinct !DILexicalBlock(scope: !4439, file: !3, line: 207, column: 85)
!4453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4454, size: 64)
!4454 = !DIDerivedType(tag: DW_TAG_typedef, name: "RegionView3D", file: !3484, line: 148, baseType: !4455)
!4455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RegionView3D", file: !3484, line: 85, size: 7040, elements: !4456)
!4456 = !{!4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4467, !4468, !4469, !4471, !4474, !4486, !4487, !4490, !4491, !4492, !4493, !4494, !4495, !4496, !4497, !4498, !4499, !4500, !4501, !4502, !4503, !4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !4455, file: !3484, line: 87, baseType: !2071, size: 512)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !4455, file: !3484, line: 88, baseType: !2071, size: 512, offset: 512)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !4455, file: !3484, line: 89, baseType: !2071, size: 512, offset: 1024)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !4455, file: !3484, line: 90, baseType: !2071, size: 512, offset: 1536)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "persinv", scope: !4455, file: !3484, line: 91, baseType: !2071, size: 512, offset: 2048)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "viewmatob", scope: !4455, file: !3484, line: 94, baseType: !2071, size: 512, offset: 2560)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "persmatob", scope: !4455, file: !3484, line: 95, baseType: !2071, size: 512, offset: 3072)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !4455, file: !3484, line: 99, baseType: !4465, size: 768, offset: 3584)
!4465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1727, size: 768, elements: !4466)
!4466 = !{!2987, !2064}
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "clip_local", scope: !4455, file: !3484, line: 100, baseType: !4465, size: 768, offset: 4352)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "clipbb", scope: !4455, file: !3484, line: 101, baseType: !1960, size: 64, offset: 5120)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !4455, file: !3484, line: 103, baseType: !4470, size: 64, offset: 5184)
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4455, size: 64)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "render_engine", scope: !4455, file: !3484, line: 104, baseType: !4472, size: 64, offset: 5248)
!4472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4473, size: 64)
!4473 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !3484, line: 44, flags: DIFlagFwdDecl)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !4455, file: !3484, line: 105, baseType: !4475, size: 64, offset: 5312)
!4475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4476, size: 64)
!4476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ViewDepths", file: !98, line: 77, size: 320, elements: !4477)
!4477 = !{!4478, !4479, !4480, !4481, !4482, !4483, !4485}
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !4476, file: !98, line: 78, baseType: !2107, size: 16)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !4476, file: !98, line: 78, baseType: !2107, size: 16, offset: 16)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4476, file: !98, line: 79, baseType: !27, size: 16, offset: 32)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4476, file: !98, line: 79, baseType: !27, size: 16, offset: 48)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !4476, file: !98, line: 80, baseType: !1773, size: 64, offset: 64)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "depth_range", scope: !4476, file: !98, line: 81, baseType: !4484, size: 128, offset: 128)
!4484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3424, size: 128, elements: !1755)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "damaged", scope: !4476, file: !98, line: 83, baseType: !2769, size: 8, offset: 256)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "gpuoffscreen", scope: !4455, file: !3484, line: 106, baseType: !18, size: 64, offset: 5376)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !4455, file: !3484, line: 109, baseType: !4488, size: 64, offset: 5440)
!4488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4489, size: 64)
!4489 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView3DStore", file: !3484, line: 46, flags: DIFlagFwdDecl)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !4455, file: !3484, line: 110, baseType: !1780, size: 64, offset: 5504)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "twmat", scope: !4455, file: !3484, line: 114, baseType: !2071, size: 512, offset: 5568)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !4455, file: !3484, line: 116, baseType: !2062, size: 128, offset: 6080)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !4455, file: !3484, line: 117, baseType: !1727, size: 32, offset: 6208)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "camdx", scope: !4455, file: !3484, line: 118, baseType: !1727, size: 32, offset: 6240)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "camdy", scope: !4455, file: !3484, line: 118, baseType: !1727, size: 32, offset: 6272)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !4455, file: !3484, line: 119, baseType: !1727, size: 32, offset: 6304)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !4455, file: !3484, line: 120, baseType: !1987, size: 96, offset: 6336)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "camzoom", scope: !4455, file: !3484, line: 122, baseType: !1727, size: 32, offset: 6432)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "is_persp", scope: !4455, file: !3484, line: 123, baseType: !23, size: 8, offset: 6464)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !4455, file: !3484, line: 125, baseType: !23, size: 8, offset: 6472)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !4455, file: !3484, line: 126, baseType: !23, size: 8, offset: 6480)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock", scope: !4455, file: !3484, line: 127, baseType: !23, size: 8, offset: 6488)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock_quad", scope: !4455, file: !3484, line: 128, baseType: !23, size: 8, offset: 6496)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4455, file: !3484, line: 129, baseType: !2738, size: 24, offset: 6504)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "ofs_lock", scope: !4455, file: !3484, line: 130, baseType: !1754, size: 64, offset: 6528)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "twdrawflag", scope: !4455, file: !3484, line: 132, baseType: !27, size: 16, offset: 6592)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !4455, file: !3484, line: 133, baseType: !27, size: 16, offset: 6608)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "lviewquat", scope: !4455, file: !3484, line: 137, baseType: !2062, size: 128, offset: 6624)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "lpersp", scope: !4455, file: !3484, line: 138, baseType: !27, size: 16, offset: 6752)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "lview", scope: !4455, file: !3484, line: 138, baseType: !27, size: 16, offset: 6768)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "gridview", scope: !4455, file: !3484, line: 140, baseType: !1727, size: 32, offset: 6784)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "tw_idot", scope: !4455, file: !3484, line: 141, baseType: !1987, size: 96, offset: 6816)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "rot_angle", scope: !4455, file: !3484, line: 145, baseType: !1727, size: 32, offset: 6912)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "rot_axis", scope: !4455, file: !3484, line: 146, baseType: !1987, size: 96, offset: 6944)
!4515 = !DILocation(line: 208, column: 17, scope: !4452)
!4516 = !DILocation(line: 208, column: 24, scope: !4452)
!4517 = !DILocation(line: 208, column: 27, scope: !4452)
!4518 = !DILocation(line: 208, column: 31, scope: !4452)
!4519 = !DILocation(line: 210, column: 14, scope: !4452)
!4520 = !DILocation(line: 210, column: 17, scope: !4452)
!4521 = !DILocation(line: 210, column: 26, scope: !4452)
!4522 = !DILocation(line: 210, column: 32, scope: !4452)
!4523 = !DILocation(line: 210, column: 3, scope: !4452)
!4524 = !DILocation(line: 211, column: 14, scope: !4452)
!4525 = !DILocation(line: 211, column: 17, scope: !4452)
!4526 = !DILocation(line: 211, column: 26, scope: !4452)
!4527 = !DILocation(line: 211, column: 32, scope: !4452)
!4528 = !DILocation(line: 211, column: 3, scope: !4452)
!4529 = !DILocation(line: 212, column: 14, scope: !4452)
!4530 = !DILocation(line: 212, column: 17, scope: !4452)
!4531 = !DILocation(line: 212, column: 26, scope: !4452)
!4532 = !DILocation(line: 212, column: 32, scope: !4452)
!4533 = !DILocation(line: 212, column: 3, scope: !4452)
!4534 = !DILocation(line: 213, column: 14, scope: !4452)
!4535 = !DILocation(line: 213, column: 17, scope: !4452)
!4536 = !DILocation(line: 213, column: 26, scope: !4452)
!4537 = !DILocation(line: 213, column: 32, scope: !4452)
!4538 = !DILocation(line: 213, column: 3, scope: !4452)
!4539 = !DILocation(line: 214, column: 14, scope: !4452)
!4540 = !DILocation(line: 214, column: 20, scope: !4452)
!4541 = !DILocation(line: 214, column: 3, scope: !4452)
!4542 = !DILocation(line: 214, column: 6, scope: !4452)
!4543 = !DILocation(line: 214, column: 12, scope: !4452)
!4544 = !DILocation(line: 215, column: 2, scope: !4452)
!4545 = !DILocation(line: 217, column: 11, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4439, file: !3, line: 216, column: 7)
!4547 = !DILocation(line: 217, column: 14, scope: !4546)
!4548 = !DILocation(line: 217, column: 3, scope: !4546)
!4549 = !DILocation(line: 218, column: 11, scope: !4546)
!4550 = !DILocation(line: 218, column: 14, scope: !4546)
!4551 = !DILocation(line: 218, column: 3, scope: !4546)
!4552 = !DILocation(line: 219, column: 11, scope: !4546)
!4553 = !DILocation(line: 219, column: 14, scope: !4546)
!4554 = !DILocation(line: 219, column: 3, scope: !4546)
!4555 = !DILocation(line: 220, column: 11, scope: !4546)
!4556 = !DILocation(line: 220, column: 14, scope: !4546)
!4557 = !DILocation(line: 220, column: 3, scope: !4546)
!4558 = !DILocation(line: 221, column: 3, scope: !4546)
!4559 = !DILocation(line: 221, column: 6, scope: !4546)
!4560 = !DILocation(line: 221, column: 12, scope: !4546)
!4561 = !DILocation(line: 224, column: 20, scope: !4433)
!4562 = !DILocation(line: 224, column: 2, scope: !4433)
!4563 = !DILocation(line: 225, column: 1, scope: !4433)
!4564 = distinct !DISubprogram(name: "convertViewVec", scope: !3, file: !3, line: 267, type: !4565, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!4565 = !DISubroutineType(types: !4566)
!4566 = !{null, !3841, !1773, !35, !35}
!4567 = !DILocalVariable(name: "t", arg: 1, scope: !4564, file: !3, line: 267, type: !3841)
!4568 = !DILocation(line: 267, column: 32, scope: !4564)
!4569 = !DILocalVariable(name: "r_vec", arg: 2, scope: !4564, file: !3, line: 267, type: !1773)
!4570 = !DILocation(line: 267, column: 41, scope: !4564)
!4571 = !DILocalVariable(name: "dx", arg: 3, scope: !4564, file: !3, line: 267, type: !35)
!4572 = !DILocation(line: 267, column: 55, scope: !4564)
!4573 = !DILocalVariable(name: "dy", arg: 4, scope: !4564, file: !3, line: 267, type: !35)
!4574 = !DILocation(line: 267, column: 63, scope: !4564)
!4575 = !DILocation(line: 269, column: 7, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 269, column: 6)
!4577 = !DILocation(line: 269, column: 10, scope: !4576)
!4578 = !DILocation(line: 269, column: 20, scope: !4576)
!4579 = !DILocation(line: 269, column: 37, scope: !4576)
!4580 = !DILocation(line: 269, column: 41, scope: !4576)
!4581 = !DILocation(line: 269, column: 44, scope: !4576)
!4582 = !DILocation(line: 269, column: 48, scope: !4576)
!4583 = !DILocation(line: 269, column: 59, scope: !4576)
!4584 = !DILocation(line: 269, column: 6, scope: !4564)
!4585 = !DILocation(line: 270, column: 7, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4587, file: !3, line: 270, column: 7)
!4587 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 269, column: 80)
!4588 = !DILocation(line: 270, column: 10, scope: !4586)
!4589 = !DILocation(line: 270, column: 18, scope: !4586)
!4590 = !DILocation(line: 270, column: 7, scope: !4587)
!4591 = !DILocation(line: 271, column: 15, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4586, file: !3, line: 270, column: 37)
!4593 = !DILocation(line: 271, column: 4, scope: !4592)
!4594 = !DILocation(line: 271, column: 13, scope: !4592)
!4595 = !DILocation(line: 272, column: 15, scope: !4592)
!4596 = !DILocation(line: 272, column: 4, scope: !4592)
!4597 = !DILocation(line: 272, column: 13, scope: !4592)
!4598 = !DILocation(line: 273, column: 3, scope: !4592)
!4599 = !DILocalVariable(name: "mval_f", scope: !4600, file: !3, line: 275, type: !4601)
!4600 = distinct !DILexicalBlock(scope: !4586, file: !3, line: 274, column: 8)
!4601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3981, size: 64, elements: !1755)
!4602 = !DILocation(line: 275, column: 16, scope: !4600)
!4603 = !DILocation(line: 275, column: 28, scope: !4600)
!4604 = !DILocation(line: 275, column: 36, scope: !4600)
!4605 = !DILocation(line: 275, column: 29, scope: !4600)
!4606 = !DILocation(line: 275, column: 47, scope: !4600)
!4607 = !DILocation(line: 275, column: 40, scope: !4600)
!4608 = !DILocation(line: 276, column: 27, scope: !4600)
!4609 = !DILocation(line: 276, column: 30, scope: !4600)
!4610 = !DILocation(line: 276, column: 34, scope: !4600)
!4611 = !DILocation(line: 276, column: 42, scope: !4600)
!4612 = !DILocation(line: 276, column: 49, scope: !4600)
!4613 = !DILocation(line: 276, column: 52, scope: !4600)
!4614 = !DILocation(line: 276, column: 4, scope: !4600)
!4615 = !DILocation(line: 278, column: 2, scope: !4587)
!4616 = !DILocation(line: 279, column: 11, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 279, column: 11)
!4618 = !DILocation(line: 279, column: 14, scope: !4617)
!4619 = !DILocation(line: 279, column: 24, scope: !4617)
!4620 = !DILocation(line: 279, column: 11, scope: !4576)
!4621 = !DILocalVariable(name: "aspx", scope: !4622, file: !3, line: 280, type: !1727)
!4622 = distinct !DILexicalBlock(scope: !4617, file: !3, line: 279, column: 40)
!4623 = !DILocation(line: 280, column: 9, scope: !4622)
!4624 = !DILocalVariable(name: "aspy", scope: !4622, file: !3, line: 280, type: !1727)
!4625 = !DILocation(line: 280, column: 15, scope: !4622)
!4626 = !DILocation(line: 282, column: 7, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4622, file: !3, line: 282, column: 7)
!4628 = !DILocation(line: 282, column: 10, scope: !4627)
!4629 = !DILocation(line: 282, column: 18, scope: !4627)
!4630 = !DILocation(line: 282, column: 7, scope: !4622)
!4631 = !DILocation(line: 283, column: 26, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4627, file: !3, line: 282, column: 30)
!4633 = !DILocation(line: 283, column: 29, scope: !4632)
!4634 = !DILocation(line: 283, column: 35, scope: !4632)
!4635 = !DILocation(line: 283, column: 42, scope: !4632)
!4636 = !DILocation(line: 283, column: 46, scope: !4632)
!4637 = !DILocation(line: 283, column: 4, scope: !4632)
!4638 = !DILocation(line: 284, column: 30, scope: !4632)
!4639 = !DILocation(line: 284, column: 33, scope: !4632)
!4640 = !DILocation(line: 284, column: 37, scope: !4632)
!4641 = !DILocation(line: 284, column: 47, scope: !4632)
!4642 = !DILocation(line: 284, column: 4, scope: !4632)
!4643 = !DILocation(line: 285, column: 3, scope: !4632)
!4644 = !DILocation(line: 286, column: 12, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4627, file: !3, line: 286, column: 12)
!4646 = !DILocation(line: 286, column: 15, scope: !4645)
!4647 = !DILocation(line: 286, column: 23, scope: !4645)
!4648 = !DILocation(line: 286, column: 12, scope: !4627)
!4649 = !DILocation(line: 287, column: 15, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 286, column: 42)
!4651 = !DILocation(line: 287, column: 4, scope: !4650)
!4652 = !DILocation(line: 287, column: 13, scope: !4650)
!4653 = !DILocation(line: 288, column: 15, scope: !4650)
!4654 = !DILocation(line: 288, column: 4, scope: !4650)
!4655 = !DILocation(line: 288, column: 13, scope: !4650)
!4656 = !DILocation(line: 290, column: 16, scope: !4650)
!4657 = !DILocation(line: 290, column: 9, scope: !4650)
!4658 = !DILocation(line: 291, column: 3, scope: !4650)
!4659 = !DILocation(line: 293, column: 21, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 292, column: 8)
!4661 = !DILocation(line: 293, column: 24, scope: !4660)
!4662 = !DILocation(line: 293, column: 30, scope: !4660)
!4663 = !DILocation(line: 293, column: 37, scope: !4660)
!4664 = !DILocation(line: 293, column: 41, scope: !4660)
!4665 = !DILocation(line: 293, column: 4, scope: !4660)
!4666 = !DILocation(line: 294, column: 33, scope: !4660)
!4667 = !DILocation(line: 294, column: 36, scope: !4660)
!4668 = !DILocation(line: 294, column: 40, scope: !4660)
!4669 = !DILocation(line: 294, column: 50, scope: !4660)
!4670 = !DILocation(line: 294, column: 4, scope: !4660)
!4671 = !DILocation(line: 297, column: 15, scope: !4622)
!4672 = !DILocation(line: 297, column: 3, scope: !4622)
!4673 = !DILocation(line: 297, column: 12, scope: !4622)
!4674 = !DILocation(line: 298, column: 15, scope: !4622)
!4675 = !DILocation(line: 298, column: 3, scope: !4622)
!4676 = !DILocation(line: 298, column: 12, scope: !4622)
!4677 = !DILocation(line: 299, column: 2, scope: !4622)
!4678 = !DILocation(line: 300, column: 11, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4617, file: !3, line: 300, column: 11)
!4680 = !DILocation(line: 300, column: 11, scope: !4617)
!4681 = !DILocation(line: 301, column: 20, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4679, file: !3, line: 300, column: 53)
!4683 = !DILocation(line: 301, column: 23, scope: !4682)
!4684 = !DILocation(line: 301, column: 29, scope: !4682)
!4685 = !DILocation(line: 301, column: 36, scope: !4682)
!4686 = !DILocation(line: 301, column: 40, scope: !4682)
!4687 = !DILocation(line: 301, column: 3, scope: !4682)
!4688 = !DILocation(line: 302, column: 2, scope: !4682)
!4689 = !DILocation(line: 303, column: 11, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4679, file: !3, line: 303, column: 11)
!4691 = !DILocation(line: 303, column: 11, scope: !4679)
!4692 = !DILocation(line: 304, column: 21, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 303, column: 54)
!4694 = !DILocation(line: 304, column: 24, scope: !4693)
!4695 = !DILocation(line: 304, column: 28, scope: !4693)
!4696 = !DILocation(line: 304, column: 33, scope: !4693)
!4697 = !DILocation(line: 304, column: 40, scope: !4693)
!4698 = !DILocation(line: 304, column: 44, scope: !4693)
!4699 = !DILocation(line: 304, column: 3, scope: !4693)
!4700 = !DILocation(line: 305, column: 2, scope: !4693)
!4701 = !DILocation(line: 306, column: 11, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 306, column: 11)
!4703 = !DILocation(line: 306, column: 14, scope: !4702)
!4704 = !DILocation(line: 306, column: 24, scope: !4702)
!4705 = !DILocation(line: 306, column: 11, scope: !4690)
!4706 = !DILocalVariable(name: "aspx", scope: !4707, file: !3, line: 307, type: !1727)
!4707 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 306, column: 39)
!4708 = !DILocation(line: 307, column: 9, scope: !4707)
!4709 = !DILocalVariable(name: "aspy", scope: !4707, file: !3, line: 307, type: !1727)
!4710 = !DILocation(line: 307, column: 15, scope: !4707)
!4711 = !DILocation(line: 309, column: 7, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4707, file: !3, line: 309, column: 7)
!4713 = !DILocation(line: 309, column: 10, scope: !4712)
!4714 = !DILocation(line: 309, column: 18, scope: !4712)
!4715 = !DILocation(line: 309, column: 7, scope: !4707)
!4716 = !DILocation(line: 310, column: 26, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4712, file: !3, line: 309, column: 30)
!4718 = !DILocation(line: 310, column: 29, scope: !4717)
!4719 = !DILocation(line: 310, column: 35, scope: !4717)
!4720 = !DILocation(line: 310, column: 42, scope: !4717)
!4721 = !DILocation(line: 310, column: 46, scope: !4717)
!4722 = !DILocation(line: 310, column: 4, scope: !4717)
!4723 = !DILocation(line: 311, column: 3, scope: !4717)
!4724 = !DILocation(line: 313, column: 21, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4712, file: !3, line: 312, column: 8)
!4726 = !DILocation(line: 313, column: 24, scope: !4725)
!4727 = !DILocation(line: 313, column: 30, scope: !4725)
!4728 = !DILocation(line: 313, column: 37, scope: !4725)
!4729 = !DILocation(line: 313, column: 41, scope: !4725)
!4730 = !DILocation(line: 313, column: 4, scope: !4725)
!4731 = !DILocation(line: 316, column: 7, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4707, file: !3, line: 316, column: 7)
!4733 = !DILocation(line: 316, column: 10, scope: !4732)
!4734 = !DILocation(line: 316, column: 18, scope: !4732)
!4735 = !DILocation(line: 316, column: 7, scope: !4707)
!4736 = !DILocation(line: 317, column: 45, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 316, column: 35)
!4738 = !DILocation(line: 317, column: 48, scope: !4737)
!4739 = !DILocation(line: 317, column: 52, scope: !4737)
!4740 = !DILocation(line: 317, column: 62, scope: !4737)
!4741 = !DILocation(line: 317, column: 4, scope: !4737)
!4742 = !DILocation(line: 318, column: 3, scope: !4737)
!4743 = !DILocation(line: 319, column: 12, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 319, column: 12)
!4745 = !DILocation(line: 319, column: 15, scope: !4744)
!4746 = !DILocation(line: 319, column: 23, scope: !4744)
!4747 = !DILocation(line: 319, column: 12, scope: !4732)
!4748 = !DILocation(line: 321, column: 29, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 319, column: 35)
!4750 = !DILocation(line: 321, column: 32, scope: !4749)
!4751 = !DILocation(line: 321, column: 36, scope: !4749)
!4752 = !DILocation(line: 321, column: 46, scope: !4749)
!4753 = !DILocation(line: 321, column: 4, scope: !4749)
!4754 = !DILocation(line: 322, column: 3, scope: !4749)
!4755 = !DILocation(line: 326, column: 16, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 323, column: 8)
!4757 = !DILocation(line: 326, column: 9, scope: !4756)
!4758 = !DILocation(line: 329, column: 15, scope: !4707)
!4759 = !DILocation(line: 329, column: 3, scope: !4707)
!4760 = !DILocation(line: 329, column: 12, scope: !4707)
!4761 = !DILocation(line: 330, column: 15, scope: !4707)
!4762 = !DILocation(line: 330, column: 3, scope: !4707)
!4763 = !DILocation(line: 330, column: 12, scope: !4707)
!4764 = !DILocation(line: 331, column: 2, scope: !4707)
!4765 = !DILocation(line: 333, column: 3, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 332, column: 7)
!4767 = !DILocation(line: 334, column: 11, scope: !4766)
!4768 = !DILocation(line: 334, column: 3, scope: !4766)
!4769 = !DILocation(line: 336, column: 1, scope: !4564)
!4770 = distinct !DISubprogram(name: "convertViewVec2D_mask", scope: !3, file: !3, line: 239, type: !4771, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!4771 = !DISubroutineType(types: !4772)
!4772 = !{null, !1728, !1773, !35, !35}
!4773 = !DILocalVariable(name: "v2d", arg: 1, scope: !4770, file: !3, line: 239, type: !1728)
!4774 = !DILocation(line: 239, column: 43, scope: !4770)
!4775 = !DILocalVariable(name: "r_vec", arg: 2, scope: !4770, file: !3, line: 239, type: !1773)
!4776 = !DILocation(line: 239, column: 54, scope: !4770)
!4777 = !DILocalVariable(name: "dx", arg: 3, scope: !4770, file: !3, line: 239, type: !35)
!4778 = !DILocation(line: 239, column: 68, scope: !4770)
!4779 = !DILocalVariable(name: "dy", arg: 4, scope: !4770, file: !3, line: 239, type: !35)
!4780 = !DILocation(line: 239, column: 76, scope: !4770)
!4781 = !DILocalVariable(name: "divx", scope: !4770, file: !3, line: 241, type: !1727)
!4782 = !DILocation(line: 241, column: 8, scope: !4770)
!4783 = !DILocalVariable(name: "divy", scope: !4770, file: !3, line: 241, type: !1727)
!4784 = !DILocation(line: 241, column: 14, scope: !4770)
!4785 = !DILocalVariable(name: "mulx", scope: !4770, file: !3, line: 242, type: !1727)
!4786 = !DILocation(line: 242, column: 8, scope: !4770)
!4787 = !DILocalVariable(name: "muly", scope: !4770, file: !3, line: 242, type: !1727)
!4788 = !DILocation(line: 242, column: 14, scope: !4770)
!4789 = !DILocation(line: 244, column: 26, scope: !4770)
!4790 = !DILocation(line: 244, column: 31, scope: !4770)
!4791 = !DILocation(line: 244, column: 9, scope: !4770)
!4792 = !DILocation(line: 244, column: 7, scope: !4770)
!4793 = !DILocation(line: 245, column: 26, scope: !4770)
!4794 = !DILocation(line: 245, column: 31, scope: !4770)
!4795 = !DILocation(line: 245, column: 9, scope: !4770)
!4796 = !DILocation(line: 245, column: 7, scope: !4770)
!4797 = !DILocation(line: 247, column: 26, scope: !4770)
!4798 = !DILocation(line: 247, column: 31, scope: !4770)
!4799 = !DILocation(line: 247, column: 9, scope: !4770)
!4800 = !DILocation(line: 247, column: 7, scope: !4770)
!4801 = !DILocation(line: 248, column: 26, scope: !4770)
!4802 = !DILocation(line: 248, column: 31, scope: !4770)
!4803 = !DILocation(line: 248, column: 9, scope: !4770)
!4804 = !DILocation(line: 248, column: 7, scope: !4770)
!4805 = !DILocation(line: 252, column: 6, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 252, column: 6)
!4807 = !DILocation(line: 252, column: 13, scope: !4806)
!4808 = !DILocation(line: 252, column: 11, scope: !4806)
!4809 = !DILocation(line: 252, column: 20, scope: !4806)
!4810 = !DILocation(line: 252, column: 27, scope: !4806)
!4811 = !DILocation(line: 252, column: 25, scope: !4806)
!4812 = !DILocation(line: 252, column: 18, scope: !4806)
!4813 = !DILocation(line: 252, column: 6, scope: !4770)
!4814 = !DILocation(line: 253, column: 10, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 252, column: 33)
!4816 = !DILocation(line: 253, column: 8, scope: !4815)
!4817 = !DILocation(line: 254, column: 10, scope: !4815)
!4818 = !DILocation(line: 254, column: 8, scope: !4815)
!4819 = !DILocation(line: 255, column: 2, scope: !4815)
!4820 = !DILocation(line: 257, column: 10, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 256, column: 7)
!4822 = !DILocation(line: 257, column: 8, scope: !4821)
!4823 = !DILocation(line: 258, column: 10, scope: !4821)
!4824 = !DILocation(line: 258, column: 8, scope: !4821)
!4825 = !DILocation(line: 262, column: 13, scope: !4770)
!4826 = !DILocation(line: 262, column: 20, scope: !4770)
!4827 = !DILocation(line: 262, column: 18, scope: !4770)
!4828 = !DILocation(line: 262, column: 25, scope: !4770)
!4829 = !DILocation(line: 262, column: 23, scope: !4770)
!4830 = !DILocation(line: 262, column: 2, scope: !4770)
!4831 = !DILocation(line: 262, column: 11, scope: !4770)
!4832 = !DILocation(line: 263, column: 13, scope: !4770)
!4833 = !DILocation(line: 263, column: 20, scope: !4770)
!4834 = !DILocation(line: 263, column: 18, scope: !4770)
!4835 = !DILocation(line: 263, column: 25, scope: !4770)
!4836 = !DILocation(line: 263, column: 23, scope: !4770)
!4837 = !DILocation(line: 263, column: 2, scope: !4770)
!4838 = !DILocation(line: 263, column: 11, scope: !4770)
!4839 = !DILocation(line: 264, column: 2, scope: !4770)
!4840 = !DILocation(line: 264, column: 11, scope: !4770)
!4841 = !DILocation(line: 265, column: 1, scope: !4770)
!4842 = distinct !DISubprogram(name: "convertViewVec2D", scope: !3, file: !3, line: 227, type: !4771, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!4843 = !DILocalVariable(name: "v2d", arg: 1, scope: !4842, file: !3, line: 227, type: !1728)
!4844 = !DILocation(line: 227, column: 38, scope: !4842)
!4845 = !DILocalVariable(name: "r_vec", arg: 2, scope: !4842, file: !3, line: 227, type: !1773)
!4846 = !DILocation(line: 227, column: 49, scope: !4842)
!4847 = !DILocalVariable(name: "dx", arg: 3, scope: !4842, file: !3, line: 227, type: !35)
!4848 = !DILocation(line: 227, column: 63, scope: !4842)
!4849 = !DILocalVariable(name: "dy", arg: 4, scope: !4842, file: !3, line: 227, type: !35)
!4850 = !DILocation(line: 227, column: 71, scope: !4842)
!4851 = !DILocalVariable(name: "divx", scope: !4842, file: !3, line: 229, type: !1727)
!4852 = !DILocation(line: 229, column: 8, scope: !4842)
!4853 = !DILocalVariable(name: "divy", scope: !4842, file: !3, line: 229, type: !1727)
!4854 = !DILocation(line: 229, column: 14, scope: !4842)
!4855 = !DILocation(line: 231, column: 26, scope: !4842)
!4856 = !DILocation(line: 231, column: 31, scope: !4842)
!4857 = !DILocation(line: 231, column: 9, scope: !4842)
!4858 = !DILocation(line: 231, column: 7, scope: !4842)
!4859 = !DILocation(line: 232, column: 26, scope: !4842)
!4860 = !DILocation(line: 232, column: 31, scope: !4842)
!4861 = !DILocation(line: 232, column: 9, scope: !4842)
!4862 = !DILocation(line: 232, column: 7, scope: !4842)
!4863 = !DILocation(line: 234, column: 30, scope: !4842)
!4864 = !DILocation(line: 234, column: 35, scope: !4842)
!4865 = !DILocation(line: 234, column: 13, scope: !4842)
!4866 = !DILocation(line: 234, column: 42, scope: !4842)
!4867 = !DILocation(line: 234, column: 40, scope: !4842)
!4868 = !DILocation(line: 234, column: 47, scope: !4842)
!4869 = !DILocation(line: 234, column: 45, scope: !4842)
!4870 = !DILocation(line: 234, column: 2, scope: !4842)
!4871 = !DILocation(line: 234, column: 11, scope: !4842)
!4872 = !DILocation(line: 235, column: 30, scope: !4842)
!4873 = !DILocation(line: 235, column: 35, scope: !4842)
!4874 = !DILocation(line: 235, column: 13, scope: !4842)
!4875 = !DILocation(line: 235, column: 42, scope: !4842)
!4876 = !DILocation(line: 235, column: 40, scope: !4842)
!4877 = !DILocation(line: 235, column: 47, scope: !4842)
!4878 = !DILocation(line: 235, column: 45, scope: !4842)
!4879 = !DILocation(line: 235, column: 2, scope: !4842)
!4880 = !DILocation(line: 235, column: 11, scope: !4842)
!4881 = !DILocation(line: 236, column: 2, scope: !4842)
!4882 = !DILocation(line: 236, column: 11, scope: !4842)
!4883 = !DILocation(line: 237, column: 1, scope: !4842)
!4884 = distinct !DISubprogram(name: "zero_v3", scope: !4885, file: !4885, line: 43, type: !4886, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!4885 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4886 = !DISubroutineType(types: !4887)
!4887 = !{null, !1773}
!4888 = !DILocalVariable(name: "r", arg: 1, scope: !4884, file: !4885, line: 43, type: !1773)
!4889 = !DILocation(line: 43, column: 28, scope: !4884)
!4890 = !DILocation(line: 45, column: 2, scope: !4884)
!4891 = !DILocation(line: 45, column: 7, scope: !4884)
!4892 = !DILocation(line: 46, column: 2, scope: !4884)
!4893 = !DILocation(line: 46, column: 7, scope: !4884)
!4894 = !DILocation(line: 47, column: 2, scope: !4884)
!4895 = !DILocation(line: 47, column: 7, scope: !4884)
!4896 = !DILocation(line: 48, column: 1, scope: !4884)
!4897 = distinct !DISubprogram(name: "projectIntViewEx", scope: !3, file: !3, line: 338, type: !4898, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{null, !3841, !3980, !4900, !4901}
!4900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 64)
!4901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4902)
!4902 = !DIDerivedType(tag: DW_TAG_typedef, name: "eV3DProjTest", file: !98, line: 125, baseType: !97)
!4903 = !DILocalVariable(name: "t", arg: 1, scope: !4897, file: !3, line: 338, type: !3841)
!4904 = !DILocation(line: 338, column: 34, scope: !4897)
!4905 = !DILocalVariable(name: "vec", arg: 2, scope: !4897, file: !3, line: 338, type: !3980)
!4906 = !DILocation(line: 338, column: 49, scope: !4897)
!4907 = !DILocalVariable(name: "adr", arg: 3, scope: !4897, file: !3, line: 338, type: !4900)
!4908 = !DILocation(line: 338, column: 61, scope: !4897)
!4909 = !DILocalVariable(name: "flag", arg: 4, scope: !4897, file: !3, line: 338, type: !4901)
!4910 = !DILocation(line: 338, column: 88, scope: !4897)
!4911 = !DILocation(line: 340, column: 6, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 340, column: 6)
!4913 = !DILocation(line: 340, column: 9, scope: !4912)
!4914 = !DILocation(line: 340, column: 19, scope: !4912)
!4915 = !DILocation(line: 340, column: 6, scope: !4897)
!4916 = !DILocation(line: 341, column: 7, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 341, column: 7)
!4918 = distinct !DILexicalBlock(scope: !4912, file: !3, line: 340, column: 36)
!4919 = !DILocation(line: 341, column: 10, scope: !4917)
!4920 = !DILocation(line: 341, column: 14, scope: !4917)
!4921 = !DILocation(line: 341, column: 25, scope: !4917)
!4922 = !DILocation(line: 341, column: 7, scope: !4918)
!4923 = !DILocation(line: 342, column: 37, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4925, file: !3, line: 342, column: 8)
!4925 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 341, column: 45)
!4926 = !DILocation(line: 342, column: 40, scope: !4924)
!4927 = !DILocation(line: 342, column: 44, scope: !4924)
!4928 = !DILocation(line: 342, column: 49, scope: !4924)
!4929 = !DILocation(line: 342, column: 54, scope: !4924)
!4930 = !DILocation(line: 342, column: 8, scope: !4924)
!4931 = !DILocation(line: 342, column: 60, scope: !4924)
!4932 = !DILocation(line: 342, column: 8, scope: !4925)
!4933 = !DILocation(line: 343, column: 5, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 342, column: 80)
!4935 = !DILocation(line: 343, column: 12, scope: !4934)
!4936 = !DILocation(line: 344, column: 5, scope: !4934)
!4937 = !DILocation(line: 344, column: 12, scope: !4934)
!4938 = !DILocation(line: 345, column: 4, scope: !4934)
!4939 = !DILocation(line: 346, column: 3, scope: !4925)
!4940 = !DILocation(line: 347, column: 2, scope: !4918)
!4941 = !DILocation(line: 348, column: 11, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4912, file: !3, line: 348, column: 11)
!4943 = !DILocation(line: 348, column: 14, scope: !4942)
!4944 = !DILocation(line: 348, column: 24, scope: !4942)
!4945 = !DILocation(line: 348, column: 11, scope: !4912)
!4946 = !DILocalVariable(name: "sima", scope: !4947, file: !3, line: 349, type: !4211)
!4947 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 348, column: 40)
!4948 = !DILocation(line: 349, column: 15, scope: !4947)
!4949 = !DILocation(line: 349, column: 22, scope: !4947)
!4950 = !DILocation(line: 349, column: 25, scope: !4947)
!4951 = !DILocation(line: 349, column: 29, scope: !4947)
!4952 = !DILocation(line: 349, column: 39, scope: !4947)
!4953 = !DILocation(line: 351, column: 7, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4947, file: !3, line: 351, column: 7)
!4955 = !DILocation(line: 351, column: 10, scope: !4954)
!4956 = !DILocation(line: 351, column: 18, scope: !4954)
!4957 = !DILocation(line: 351, column: 7, scope: !4947)
!4958 = !DILocalVariable(name: "aspx", scope: !4959, file: !3, line: 352, type: !1727)
!4959 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 351, column: 30)
!4960 = !DILocation(line: 352, column: 10, scope: !4959)
!4961 = !DILocalVariable(name: "aspy", scope: !4959, file: !3, line: 352, type: !1727)
!4962 = !DILocation(line: 352, column: 16, scope: !4959)
!4963 = !DILocalVariable(name: "v", scope: !4959, file: !3, line: 353, type: !1754)
!4964 = !DILocation(line: 353, column: 10, scope: !4959)
!4965 = !DILocation(line: 355, column: 30, scope: !4959)
!4966 = !DILocation(line: 355, column: 4, scope: !4959)
!4967 = !DILocation(line: 357, column: 15, scope: !4959)
!4968 = !DILocation(line: 357, column: 18, scope: !4959)
!4969 = !DILocation(line: 357, column: 4, scope: !4959)
!4970 = !DILocation(line: 359, column: 11, scope: !4959)
!4971 = !DILocation(line: 359, column: 18, scope: !4959)
!4972 = !DILocation(line: 359, column: 16, scope: !4959)
!4973 = !DILocation(line: 359, column: 4, scope: !4959)
!4974 = !DILocation(line: 359, column: 9, scope: !4959)
!4975 = !DILocation(line: 360, column: 11, scope: !4959)
!4976 = !DILocation(line: 360, column: 18, scope: !4959)
!4977 = !DILocation(line: 360, column: 16, scope: !4959)
!4978 = !DILocation(line: 360, column: 4, scope: !4959)
!4979 = !DILocation(line: 360, column: 9, scope: !4959)
!4980 = !DILocation(line: 362, column: 28, scope: !4959)
!4981 = !DILocation(line: 362, column: 34, scope: !4959)
!4982 = !DILocation(line: 362, column: 42, scope: !4959)
!4983 = !DILocation(line: 362, column: 48, scope: !4959)
!4984 = !DILocation(line: 362, column: 55, scope: !4959)
!4985 = !DILocation(line: 362, column: 58, scope: !4959)
!4986 = !DILocation(line: 362, column: 4, scope: !4959)
!4987 = !DILocation(line: 364, column: 32, scope: !4959)
!4988 = !DILocation(line: 364, column: 38, scope: !4959)
!4989 = !DILocation(line: 364, column: 41, scope: !4959)
!4990 = !DILocation(line: 364, column: 45, scope: !4959)
!4991 = !DILocation(line: 364, column: 48, scope: !4959)
!4992 = !DILocation(line: 364, column: 4, scope: !4959)
!4993 = !DILocation(line: 366, column: 13, scope: !4959)
!4994 = !DILocation(line: 366, column: 4, scope: !4959)
!4995 = !DILocation(line: 366, column: 11, scope: !4959)
!4996 = !DILocation(line: 367, column: 13, scope: !4959)
!4997 = !DILocation(line: 367, column: 4, scope: !4959)
!4998 = !DILocation(line: 367, column: 11, scope: !4959)
!4999 = !DILocation(line: 368, column: 3, scope: !4959)
!5000 = !DILocation(line: 369, column: 12, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 369, column: 12)
!5002 = !DILocation(line: 369, column: 15, scope: !5001)
!5003 = !DILocation(line: 369, column: 23, scope: !5001)
!5004 = !DILocation(line: 369, column: 12, scope: !4954)
!5005 = !DILocation(line: 370, column: 13, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 369, column: 42)
!5007 = !DILocation(line: 370, column: 4, scope: !5006)
!5008 = !DILocation(line: 370, column: 11, scope: !5006)
!5009 = !DILocation(line: 371, column: 13, scope: !5006)
!5010 = !DILocation(line: 371, column: 4, scope: !5006)
!5011 = !DILocation(line: 371, column: 11, scope: !5006)
!5012 = !DILocation(line: 372, column: 3, scope: !5006)
!5013 = !DILocalVariable(name: "aspx", scope: !5014, file: !3, line: 374, type: !1727)
!5014 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 373, column: 8)
!5015 = !DILocation(line: 374, column: 10, scope: !5014)
!5016 = !DILocalVariable(name: "aspy", scope: !5014, file: !3, line: 374, type: !1727)
!5017 = !DILocation(line: 374, column: 16, scope: !5014)
!5018 = !DILocalVariable(name: "v", scope: !5014, file: !3, line: 374, type: !1754)
!5019 = !DILocation(line: 374, column: 22, scope: !5014)
!5020 = !DILocation(line: 376, column: 33, scope: !5014)
!5021 = !DILocation(line: 376, column: 36, scope: !5014)
!5022 = !DILocation(line: 376, column: 40, scope: !5014)
!5023 = !DILocation(line: 376, column: 50, scope: !5014)
!5024 = !DILocation(line: 376, column: 4, scope: !5014)
!5025 = !DILocation(line: 377, column: 11, scope: !5014)
!5026 = !DILocation(line: 377, column: 20, scope: !5014)
!5027 = !DILocation(line: 377, column: 18, scope: !5014)
!5028 = !DILocation(line: 377, column: 4, scope: !5014)
!5029 = !DILocation(line: 377, column: 9, scope: !5014)
!5030 = !DILocation(line: 378, column: 11, scope: !5014)
!5031 = !DILocation(line: 378, column: 20, scope: !5014)
!5032 = !DILocation(line: 378, column: 18, scope: !5014)
!5033 = !DILocation(line: 378, column: 4, scope: !5014)
!5034 = !DILocation(line: 378, column: 9, scope: !5014)
!5035 = !DILocation(line: 380, column: 29, scope: !5014)
!5036 = !DILocation(line: 380, column: 32, scope: !5014)
!5037 = !DILocation(line: 380, column: 38, scope: !5014)
!5038 = !DILocation(line: 380, column: 44, scope: !5014)
!5039 = !DILocation(line: 380, column: 51, scope: !5014)
!5040 = !DILocation(line: 380, column: 60, scope: !5014)
!5041 = !DILocation(line: 380, column: 4, scope: !5014)
!5042 = !DILocation(line: 382, column: 2, scope: !4947)
!5043 = !DILocation(line: 383, column: 11, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 383, column: 11)
!5045 = !DILocation(line: 383, column: 14, scope: !5044)
!5046 = !DILocation(line: 383, column: 24, scope: !5044)
!5047 = !DILocation(line: 383, column: 11, scope: !4942)
!5048 = !DILocalVariable(name: "out", scope: !5049, file: !3, line: 384, type: !2435)
!5049 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 383, column: 41)
!5050 = !DILocation(line: 384, column: 7, scope: !5049)
!5051 = !DILocation(line: 396, column: 39, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5049, file: !3, line: 395, column: 3)
!5053 = !DILocation(line: 396, column: 42, scope: !5052)
!5054 = !DILocation(line: 396, column: 29, scope: !5052)
!5055 = !DILocation(line: 396, column: 48, scope: !5052)
!5056 = !DILocation(line: 396, column: 56, scope: !5052)
!5057 = !DILocation(line: 396, column: 65, scope: !5052)
!5058 = !DILocation(line: 396, column: 74, scope: !5052)
!5059 = !DILocation(line: 396, column: 4, scope: !5052)
!5060 = !DILocation(line: 399, column: 12, scope: !5049)
!5061 = !DILocation(line: 399, column: 3, scope: !5049)
!5062 = !DILocation(line: 399, column: 10, scope: !5049)
!5063 = !DILocation(line: 400, column: 12, scope: !5049)
!5064 = !DILocation(line: 400, column: 3, scope: !5049)
!5065 = !DILocation(line: 400, column: 10, scope: !5049)
!5066 = !DILocation(line: 401, column: 2, scope: !5049)
!5067 = !DILocation(line: 402, column: 11, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 402, column: 11)
!5069 = !DILocation(line: 402, column: 11, scope: !5044)
!5070 = !DILocalVariable(name: "out", scope: !5071, file: !3, line: 403, type: !2435)
!5071 = distinct !DILexicalBlock(scope: !5068, file: !3, line: 402, column: 53)
!5072 = !DILocation(line: 403, column: 7, scope: !5071)
!5073 = !DILocation(line: 405, column: 38, scope: !5071)
!5074 = !DILocation(line: 405, column: 41, scope: !5071)
!5075 = !DILocation(line: 405, column: 28, scope: !5071)
!5076 = !DILocation(line: 405, column: 47, scope: !5071)
!5077 = !DILocation(line: 405, column: 55, scope: !5071)
!5078 = !DILocation(line: 405, column: 64, scope: !5071)
!5079 = !DILocation(line: 405, column: 73, scope: !5071)
!5080 = !DILocation(line: 405, column: 3, scope: !5071)
!5081 = !DILocation(line: 406, column: 12, scope: !5071)
!5082 = !DILocation(line: 406, column: 3, scope: !5071)
!5083 = !DILocation(line: 406, column: 10, scope: !5071)
!5084 = !DILocation(line: 407, column: 12, scope: !5071)
!5085 = !DILocation(line: 407, column: 3, scope: !5071)
!5086 = !DILocation(line: 407, column: 10, scope: !5071)
!5087 = !DILocation(line: 408, column: 2, scope: !5071)
!5088 = !DILocation(line: 409, column: 11, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5068, file: !3, line: 409, column: 11)
!5090 = !DILocation(line: 409, column: 14, scope: !5089)
!5091 = !DILocation(line: 409, column: 24, scope: !5089)
!5092 = !DILocation(line: 409, column: 11, scope: !5068)
!5093 = !DILocalVariable(name: "out", scope: !5094, file: !3, line: 410, type: !2435)
!5094 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 409, column: 38)
!5095 = !DILocation(line: 410, column: 7, scope: !5094)
!5096 = !DILocation(line: 412, column: 38, scope: !5094)
!5097 = !DILocation(line: 412, column: 41, scope: !5094)
!5098 = !DILocation(line: 412, column: 28, scope: !5094)
!5099 = !DILocation(line: 412, column: 47, scope: !5094)
!5100 = !DILocation(line: 412, column: 55, scope: !5094)
!5101 = !DILocation(line: 412, column: 64, scope: !5094)
!5102 = !DILocation(line: 412, column: 73, scope: !5094)
!5103 = !DILocation(line: 412, column: 3, scope: !5094)
!5104 = !DILocation(line: 413, column: 12, scope: !5094)
!5105 = !DILocation(line: 413, column: 3, scope: !5094)
!5106 = !DILocation(line: 413, column: 10, scope: !5094)
!5107 = !DILocation(line: 414, column: 12, scope: !5094)
!5108 = !DILocation(line: 414, column: 3, scope: !5094)
!5109 = !DILocation(line: 414, column: 10, scope: !5094)
!5110 = !DILocation(line: 415, column: 2, scope: !5094)
!5111 = !DILocation(line: 416, column: 11, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 416, column: 11)
!5113 = !DILocation(line: 416, column: 14, scope: !5112)
!5114 = !DILocation(line: 416, column: 24, scope: !5112)
!5115 = !DILocation(line: 416, column: 11, scope: !5089)
!5116 = !DILocalVariable(name: "sc", scope: !5117, file: !3, line: 417, type: !4292)
!5117 = distinct !DILexicalBlock(scope: !5112, file: !3, line: 416, column: 39)
!5118 = !DILocation(line: 417, column: 14, scope: !5117)
!5119 = !DILocation(line: 417, column: 19, scope: !5117)
!5120 = !DILocation(line: 417, column: 22, scope: !5117)
!5121 = !DILocation(line: 417, column: 26, scope: !5117)
!5122 = !DILocation(line: 417, column: 36, scope: !5117)
!5123 = !DILocation(line: 419, column: 7, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 419, column: 7)
!5125 = !DILocation(line: 419, column: 10, scope: !5124)
!5126 = !DILocation(line: 419, column: 18, scope: !5124)
!5127 = !DILocation(line: 419, column: 7, scope: !5117)
!5128 = !DILocalVariable(name: "clip", scope: !5129, file: !3, line: 420, type: !5130)
!5129 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 419, column: 30)
!5130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5131, size: 64)
!5131 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieClip", file: !2427, line: 101, baseType: !2426)
!5132 = !DILocation(line: 420, column: 15, scope: !5129)
!5133 = !DILocation(line: 420, column: 45, scope: !5129)
!5134 = !DILocation(line: 420, column: 22, scope: !5129)
!5135 = !DILocation(line: 422, column: 8, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5129, file: !3, line: 422, column: 8)
!5137 = !DILocation(line: 422, column: 8, scope: !5129)
!5138 = !DILocalVariable(name: "aspx", scope: !5139, file: !3, line: 423, type: !1727)
!5139 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 422, column: 14)
!5140 = !DILocation(line: 423, column: 11, scope: !5139)
!5141 = !DILocalVariable(name: "aspy", scope: !5139, file: !3, line: 423, type: !1727)
!5142 = !DILocation(line: 423, column: 17, scope: !5139)
!5143 = !DILocalVariable(name: "v", scope: !5139, file: !3, line: 424, type: !1754)
!5144 = !DILocation(line: 424, column: 11, scope: !5139)
!5145 = !DILocation(line: 426, column: 30, scope: !5139)
!5146 = !DILocation(line: 426, column: 5, scope: !5139)
!5147 = !DILocation(line: 428, column: 16, scope: !5139)
!5148 = !DILocation(line: 428, column: 19, scope: !5139)
!5149 = !DILocation(line: 428, column: 5, scope: !5139)
!5150 = !DILocation(line: 430, column: 12, scope: !5139)
!5151 = !DILocation(line: 430, column: 19, scope: !5139)
!5152 = !DILocation(line: 430, column: 17, scope: !5139)
!5153 = !DILocation(line: 430, column: 5, scope: !5139)
!5154 = !DILocation(line: 430, column: 10, scope: !5139)
!5155 = !DILocation(line: 431, column: 12, scope: !5139)
!5156 = !DILocation(line: 431, column: 19, scope: !5139)
!5157 = !DILocation(line: 431, column: 17, scope: !5139)
!5158 = !DILocation(line: 431, column: 5, scope: !5139)
!5159 = !DILocation(line: 431, column: 10, scope: !5139)
!5160 = !DILocation(line: 433, column: 33, scope: !5139)
!5161 = !DILocation(line: 433, column: 37, scope: !5139)
!5162 = !DILocation(line: 433, column: 44, scope: !5139)
!5163 = !DILocation(line: 433, column: 48, scope: !5139)
!5164 = !DILocation(line: 433, column: 54, scope: !5139)
!5165 = !DILocation(line: 433, column: 57, scope: !5139)
!5166 = !DILocation(line: 433, column: 5, scope: !5139)
!5167 = !DILocation(line: 435, column: 39, scope: !5139)
!5168 = !DILocation(line: 435, column: 43, scope: !5139)
!5169 = !DILocation(line: 435, column: 46, scope: !5139)
!5170 = !DILocation(line: 435, column: 50, scope: !5139)
!5171 = !DILocation(line: 435, column: 53, scope: !5139)
!5172 = !DILocation(line: 435, column: 5, scope: !5139)
!5173 = !DILocation(line: 437, column: 14, scope: !5139)
!5174 = !DILocation(line: 437, column: 5, scope: !5139)
!5175 = !DILocation(line: 437, column: 12, scope: !5139)
!5176 = !DILocation(line: 438, column: 14, scope: !5139)
!5177 = !DILocation(line: 438, column: 5, scope: !5139)
!5178 = !DILocation(line: 438, column: 12, scope: !5139)
!5179 = !DILocation(line: 439, column: 4, scope: !5139)
!5180 = !DILocation(line: 441, column: 5, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 440, column: 9)
!5182 = !DILocation(line: 441, column: 12, scope: !5181)
!5183 = !DILocation(line: 442, column: 5, scope: !5181)
!5184 = !DILocation(line: 442, column: 12, scope: !5181)
!5185 = !DILocation(line: 444, column: 3, scope: !5129)
!5186 = !DILocation(line: 445, column: 12, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 445, column: 12)
!5188 = !DILocation(line: 445, column: 15, scope: !5187)
!5189 = !DILocation(line: 445, column: 23, scope: !5187)
!5190 = !DILocation(line: 445, column: 12, scope: !5124)
!5191 = !DILocalVariable(name: "v", scope: !5192, file: !3, line: 446, type: !1754)
!5192 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 445, column: 40)
!5193 = !DILocation(line: 446, column: 10, scope: !5192)
!5194 = !DILocalVariable(name: "aspx", scope: !5192, file: !3, line: 446, type: !1727)
!5195 = !DILocation(line: 446, column: 16, scope: !5192)
!5196 = !DILocalVariable(name: "aspy", scope: !5192, file: !3, line: 446, type: !1727)
!5197 = !DILocation(line: 446, column: 22, scope: !5192)
!5198 = !DILocation(line: 448, column: 15, scope: !5192)
!5199 = !DILocation(line: 448, column: 18, scope: !5192)
!5200 = !DILocation(line: 448, column: 4, scope: !5192)
!5201 = !DILocation(line: 449, column: 45, scope: !5192)
!5202 = !DILocation(line: 449, column: 48, scope: !5192)
!5203 = !DILocation(line: 449, column: 52, scope: !5192)
!5204 = !DILocation(line: 449, column: 62, scope: !5192)
!5205 = !DILocation(line: 449, column: 4, scope: !5192)
!5206 = !DILocation(line: 451, column: 12, scope: !5192)
!5207 = !DILocation(line: 451, column: 4, scope: !5192)
!5208 = !DILocation(line: 451, column: 9, scope: !5192)
!5209 = !DILocation(line: 452, column: 12, scope: !5192)
!5210 = !DILocation(line: 452, column: 4, scope: !5192)
!5211 = !DILocation(line: 452, column: 9, scope: !5192)
!5212 = !DILocation(line: 454, column: 29, scope: !5192)
!5213 = !DILocation(line: 454, column: 32, scope: !5192)
!5214 = !DILocation(line: 454, column: 38, scope: !5192)
!5215 = !DILocation(line: 454, column: 44, scope: !5192)
!5216 = !DILocation(line: 454, column: 51, scope: !5192)
!5217 = !DILocation(line: 454, column: 60, scope: !5192)
!5218 = !DILocation(line: 454, column: 4, scope: !5192)
!5219 = !DILocation(line: 455, column: 3, scope: !5192)
!5220 = !DILocation(line: 459, column: 2, scope: !5117)
!5221 = !DILocation(line: 460, column: 11, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5112, file: !3, line: 460, column: 11)
!5223 = !DILocation(line: 460, column: 14, scope: !5222)
!5224 = !DILocation(line: 460, column: 24, scope: !5222)
!5225 = !DILocation(line: 460, column: 11, scope: !5112)
!5226 = !DILocation(line: 461, column: 38, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5222, file: !3, line: 460, column: 39)
!5228 = !DILocation(line: 461, column: 41, scope: !5227)
!5229 = !DILocation(line: 461, column: 28, scope: !5227)
!5230 = !DILocation(line: 461, column: 47, scope: !5227)
!5231 = !DILocation(line: 461, column: 55, scope: !5227)
!5232 = !DILocation(line: 461, column: 64, scope: !5227)
!5233 = !DILocation(line: 461, column: 73, scope: !5227)
!5234 = !DILocation(line: 461, column: 3, scope: !5227)
!5235 = !DILocation(line: 462, column: 2, scope: !5227)
!5236 = !DILocation(line: 463, column: 1, scope: !4897)
!5237 = distinct !DISubprogram(name: "copy_v2_v2", scope: !4885, file: !4885, line: 58, type: !5238, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!5238 = !DISubroutineType(types: !5239)
!5239 = !{null, !1773, !3980}
!5240 = !DILocalVariable(name: "r", arg: 1, scope: !5237, file: !4885, line: 58, type: !1773)
!5241 = !DILocation(line: 58, column: 31, scope: !5237)
!5242 = !DILocalVariable(name: "a", arg: 2, scope: !5237, file: !4885, line: 58, type: !3980)
!5243 = !DILocation(line: 58, column: 49, scope: !5237)
!5244 = !DILocation(line: 60, column: 9, scope: !5237)
!5245 = !DILocation(line: 60, column: 2, scope: !5237)
!5246 = !DILocation(line: 60, column: 7, scope: !5237)
!5247 = !DILocation(line: 61, column: 9, scope: !5237)
!5248 = !DILocation(line: 61, column: 2, scope: !5237)
!5249 = !DILocation(line: 61, column: 7, scope: !5237)
!5250 = !DILocation(line: 62, column: 1, scope: !5237)
!5251 = distinct !DISubprogram(name: "projectIntView", scope: !3, file: !3, line: 464, type: !5252, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!5252 = !DISubroutineType(types: !5253)
!5253 = !{null, !3841, !3980, !4900}
!5254 = !DILocalVariable(name: "t", arg: 1, scope: !5251, file: !3, line: 464, type: !3841)
!5255 = !DILocation(line: 464, column: 32, scope: !5251)
!5256 = !DILocalVariable(name: "vec", arg: 2, scope: !5251, file: !3, line: 464, type: !3980)
!5257 = !DILocation(line: 464, column: 47, scope: !5251)
!5258 = !DILocalVariable(name: "adr", arg: 3, scope: !5251, file: !3, line: 464, type: !4900)
!5259 = !DILocation(line: 464, column: 59, scope: !5251)
!5260 = !DILocation(line: 466, column: 19, scope: !5251)
!5261 = !DILocation(line: 466, column: 22, scope: !5251)
!5262 = !DILocation(line: 466, column: 27, scope: !5251)
!5263 = !DILocation(line: 466, column: 2, scope: !5251)
!5264 = !DILocation(line: 467, column: 1, scope: !5251)
!5265 = distinct !DISubprogram(name: "projectFloatViewEx", scope: !3, file: !3, line: 469, type: !5266, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!5266 = !DISubroutineType(types: !5267)
!5267 = !{null, !3841, !3980, !1773, !4901}
!5268 = !DILocalVariable(name: "t", arg: 1, scope: !5265, file: !3, line: 469, type: !3841)
!5269 = !DILocation(line: 469, column: 36, scope: !5265)
!5270 = !DILocalVariable(name: "vec", arg: 2, scope: !5265, file: !3, line: 469, type: !3980)
!5271 = !DILocation(line: 469, column: 51, scope: !5265)
!5272 = !DILocalVariable(name: "adr", arg: 3, scope: !5265, file: !3, line: 469, type: !1773)
!5273 = !DILocation(line: 469, column: 65, scope: !5265)
!5274 = !DILocalVariable(name: "flag", arg: 4, scope: !5265, file: !3, line: 469, type: !4901)
!5275 = !DILocation(line: 469, column: 92, scope: !5265)
!5276 = !DILocation(line: 471, column: 10, scope: !5265)
!5277 = !DILocation(line: 471, column: 13, scope: !5265)
!5278 = !DILocation(line: 471, column: 2, scope: !5265)
!5279 = !DILocation(line: 474, column: 8, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 474, column: 8)
!5281 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 473, column: 3)
!5282 = distinct !DILexicalBlock(scope: !5265, file: !3, line: 471, column: 24)
!5283 = !DILocation(line: 474, column: 11, scope: !5280)
!5284 = !DILocation(line: 474, column: 19, scope: !5280)
!5285 = !DILocation(line: 474, column: 8, scope: !5281)
!5286 = !DILocation(line: 475, column: 14, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5280, file: !3, line: 474, column: 38)
!5288 = !DILocation(line: 475, column: 5, scope: !5287)
!5289 = !DILocation(line: 475, column: 12, scope: !5287)
!5290 = !DILocation(line: 476, column: 14, scope: !5287)
!5291 = !DILocation(line: 476, column: 5, scope: !5287)
!5292 = !DILocation(line: 476, column: 12, scope: !5287)
!5293 = !DILocation(line: 477, column: 4, scope: !5287)
!5294 = !DILocation(line: 478, column: 13, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5280, file: !3, line: 478, column: 13)
!5296 = !DILocation(line: 478, column: 16, scope: !5295)
!5297 = !DILocation(line: 478, column: 20, scope: !5295)
!5298 = !DILocation(line: 478, column: 31, scope: !5295)
!5299 = !DILocation(line: 478, column: 13, scope: !5280)
!5300 = !DILocation(line: 480, column: 40, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 480, column: 9)
!5302 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 478, column: 51)
!5303 = !DILocation(line: 480, column: 43, scope: !5301)
!5304 = !DILocation(line: 480, column: 47, scope: !5301)
!5305 = !DILocation(line: 480, column: 52, scope: !5301)
!5306 = !DILocation(line: 480, column: 57, scope: !5301)
!5307 = !DILocation(line: 480, column: 9, scope: !5301)
!5308 = !DILocation(line: 480, column: 63, scope: !5301)
!5309 = !DILocation(line: 480, column: 9, scope: !5302)
!5310 = !DILocation(line: 482, column: 15, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5301, file: !3, line: 480, column: 83)
!5312 = !DILocation(line: 482, column: 18, scope: !5311)
!5313 = !DILocation(line: 482, column: 22, scope: !5311)
!5314 = !DILocation(line: 482, column: 27, scope: !5311)
!5315 = !DILocation(line: 482, column: 6, scope: !5311)
!5316 = !DILocation(line: 482, column: 13, scope: !5311)
!5317 = !DILocation(line: 483, column: 15, scope: !5311)
!5318 = !DILocation(line: 483, column: 18, scope: !5311)
!5319 = !DILocation(line: 483, column: 22, scope: !5311)
!5320 = !DILocation(line: 483, column: 27, scope: !5311)
!5321 = !DILocation(line: 483, column: 6, scope: !5311)
!5322 = !DILocation(line: 483, column: 13, scope: !5311)
!5323 = !DILocation(line: 484, column: 5, scope: !5311)
!5324 = !DILocation(line: 485, column: 5, scope: !5302)
!5325 = !DILocation(line: 487, column: 4, scope: !5281)
!5326 = !DILocalVariable(name: "a", scope: !5327, file: !3, line: 491, type: !2435)
!5327 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 490, column: 3)
!5328 = !DILocation(line: 491, column: 8, scope: !5327)
!5329 = !DILocation(line: 492, column: 19, scope: !5327)
!5330 = !DILocation(line: 492, column: 22, scope: !5327)
!5331 = !DILocation(line: 492, column: 27, scope: !5327)
!5332 = !DILocation(line: 492, column: 4, scope: !5327)
!5333 = !DILocation(line: 493, column: 13, scope: !5327)
!5334 = !DILocation(line: 493, column: 4, scope: !5327)
!5335 = !DILocation(line: 493, column: 11, scope: !5327)
!5336 = !DILocation(line: 494, column: 13, scope: !5327)
!5337 = !DILocation(line: 494, column: 4, scope: !5327)
!5338 = !DILocation(line: 494, column: 11, scope: !5327)
!5339 = !DILocation(line: 495, column: 4, scope: !5327)
!5340 = !DILocation(line: 498, column: 1, scope: !5265)
!5341 = distinct !DISubprogram(name: "projectFloatView", scope: !3, file: !3, line: 499, type: !5342, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!5342 = !DISubroutineType(types: !5343)
!5343 = !{null, !3841, !3980, !1773}
!5344 = !DILocalVariable(name: "t", arg: 1, scope: !5341, file: !3, line: 499, type: !3841)
!5345 = !DILocation(line: 499, column: 34, scope: !5341)
!5346 = !DILocalVariable(name: "vec", arg: 2, scope: !5341, file: !3, line: 499, type: !3980)
!5347 = !DILocation(line: 499, column: 49, scope: !5341)
!5348 = !DILocalVariable(name: "adr", arg: 3, scope: !5341, file: !3, line: 499, type: !1773)
!5349 = !DILocation(line: 499, column: 63, scope: !5341)
!5350 = !DILocation(line: 501, column: 21, scope: !5341)
!5351 = !DILocation(line: 501, column: 24, scope: !5341)
!5352 = !DILocation(line: 501, column: 29, scope: !5341)
!5353 = !DILocation(line: 501, column: 2, scope: !5341)
!5354 = !DILocation(line: 502, column: 1, scope: !5341)
!5355 = distinct !DISubprogram(name: "applyAspectRatio", scope: !3, file: !3, line: 504, type: !5356, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!5356 = !DISubroutineType(types: !5357)
!5357 = !{null, !3841, !1773}
!5358 = !DILocalVariable(name: "t", arg: 1, scope: !5355, file: !3, line: 504, type: !3841)
!5359 = !DILocation(line: 504, column: 34, scope: !5355)
!5360 = !DILocalVariable(name: "vec", arg: 2, scope: !5355, file: !3, line: 504, type: !1773)
!5361 = !DILocation(line: 504, column: 43, scope: !5355)
!5362 = !DILocation(line: 506, column: 7, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 506, column: 6)
!5364 = !DILocation(line: 506, column: 10, scope: !5363)
!5365 = !DILocation(line: 506, column: 20, scope: !5363)
!5366 = !DILocation(line: 506, column: 36, scope: !5363)
!5367 = !DILocation(line: 506, column: 40, scope: !5363)
!5368 = !DILocation(line: 506, column: 43, scope: !5363)
!5369 = !DILocation(line: 506, column: 48, scope: !5363)
!5370 = !DILocation(line: 506, column: 68, scope: !5363)
!5371 = !DILocation(line: 506, column: 73, scope: !5363)
!5372 = !DILocation(line: 506, column: 76, scope: !5363)
!5373 = !DILocation(line: 506, column: 84, scope: !5363)
!5374 = !DILocation(line: 506, column: 6, scope: !5355)
!5375 = !DILocalVariable(name: "sima", scope: !5376, file: !3, line: 507, type: !4211)
!5376 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 506, column: 104)
!5377 = !DILocation(line: 507, column: 15, scope: !5376)
!5378 = !DILocation(line: 507, column: 22, scope: !5376)
!5379 = !DILocation(line: 507, column: 25, scope: !5376)
!5380 = !DILocation(line: 507, column: 29, scope: !5376)
!5381 = !DILocation(line: 507, column: 39, scope: !5376)
!5382 = !DILocalVariable(name: "aspx", scope: !5376, file: !3, line: 508, type: !1727)
!5383 = !DILocation(line: 508, column: 9, scope: !5376)
!5384 = !DILocalVariable(name: "aspy", scope: !5376, file: !3, line: 508, type: !1727)
!5385 = !DILocation(line: 508, column: 15, scope: !5376)
!5386 = !DILocation(line: 510, column: 8, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 510, column: 7)
!5388 = !DILocation(line: 510, column: 14, scope: !5387)
!5389 = !DILocation(line: 510, column: 19, scope: !5387)
!5390 = !DILocation(line: 510, column: 37, scope: !5387)
!5391 = !DILocation(line: 510, column: 7, scope: !5376)
!5392 = !DILocalVariable(name: "width", scope: !5393, file: !3, line: 511, type: !35)
!5393 = distinct !DILexicalBlock(scope: !5387, file: !3, line: 510, column: 43)
!5394 = !DILocation(line: 511, column: 8, scope: !5393)
!5395 = !DILocalVariable(name: "height", scope: !5393, file: !3, line: 511, type: !35)
!5396 = !DILocation(line: 511, column: 15, scope: !5393)
!5397 = !DILocation(line: 512, column: 28, scope: !5393)
!5398 = !DILocation(line: 512, column: 4, scope: !5393)
!5399 = !DILocation(line: 514, column: 14, scope: !5393)
!5400 = !DILocation(line: 514, column: 4, scope: !5393)
!5401 = !DILocation(line: 514, column: 11, scope: !5393)
!5402 = !DILocation(line: 515, column: 14, scope: !5393)
!5403 = !DILocation(line: 515, column: 4, scope: !5393)
!5404 = !DILocation(line: 515, column: 11, scope: !5393)
!5405 = !DILocation(line: 516, column: 3, scope: !5393)
!5406 = !DILocation(line: 518, column: 32, scope: !5376)
!5407 = !DILocation(line: 518, column: 3, scope: !5376)
!5408 = !DILocation(line: 519, column: 13, scope: !5376)
!5409 = !DILocation(line: 519, column: 3, scope: !5376)
!5410 = !DILocation(line: 519, column: 10, scope: !5376)
!5411 = !DILocation(line: 520, column: 13, scope: !5376)
!5412 = !DILocation(line: 520, column: 3, scope: !5376)
!5413 = !DILocation(line: 520, column: 10, scope: !5376)
!5414 = !DILocation(line: 521, column: 2, scope: !5376)
!5415 = !DILocation(line: 522, column: 12, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 522, column: 11)
!5417 = !DILocation(line: 522, column: 15, scope: !5416)
!5418 = !DILocation(line: 522, column: 25, scope: !5416)
!5419 = !DILocation(line: 522, column: 40, scope: !5416)
!5420 = !DILocation(line: 522, column: 44, scope: !5416)
!5421 = !DILocation(line: 522, column: 47, scope: !5416)
!5422 = !DILocation(line: 522, column: 52, scope: !5416)
!5423 = !DILocation(line: 522, column: 11, scope: !5363)
!5424 = !DILocation(line: 523, column: 7, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 523, column: 7)
!5426 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 522, column: 73)
!5427 = !DILocation(line: 523, column: 10, scope: !5425)
!5428 = !DILocation(line: 523, column: 18, scope: !5425)
!5429 = !DILocation(line: 523, column: 7, scope: !5426)
!5430 = !DILocalVariable(name: "sc", scope: !5431, file: !3, line: 524, type: !4292)
!5431 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 523, column: 48)
!5432 = !DILocation(line: 524, column: 15, scope: !5431)
!5433 = !DILocation(line: 524, column: 20, scope: !5431)
!5434 = !DILocation(line: 524, column: 23, scope: !5431)
!5435 = !DILocation(line: 524, column: 27, scope: !5431)
!5436 = !DILocation(line: 524, column: 37, scope: !5431)
!5437 = !DILocalVariable(name: "aspx", scope: !5431, file: !3, line: 525, type: !1727)
!5438 = !DILocation(line: 525, column: 10, scope: !5431)
!5439 = !DILocalVariable(name: "aspy", scope: !5431, file: !3, line: 525, type: !1727)
!5440 = !DILocation(line: 525, column: 16, scope: !5431)
!5441 = !DILocation(line: 528, column: 8, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 528, column: 8)
!5443 = !DILocation(line: 528, column: 11, scope: !5442)
!5444 = !DILocation(line: 528, column: 19, scope: !5442)
!5445 = !DILocation(line: 528, column: 8, scope: !5431)
!5446 = !DILocation(line: 529, column: 46, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5442, file: !3, line: 528, column: 36)
!5448 = !DILocation(line: 529, column: 5, scope: !5447)
!5449 = !DILocation(line: 531, column: 15, scope: !5447)
!5450 = !DILocation(line: 531, column: 5, scope: !5447)
!5451 = !DILocation(line: 531, column: 12, scope: !5447)
!5452 = !DILocation(line: 532, column: 15, scope: !5447)
!5453 = !DILocation(line: 532, column: 5, scope: !5447)
!5454 = !DILocation(line: 532, column: 12, scope: !5447)
!5455 = !DILocation(line: 533, column: 4, scope: !5447)
!5456 = !DILocation(line: 534, column: 13, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5442, file: !3, line: 534, column: 13)
!5458 = !DILocation(line: 534, column: 16, scope: !5457)
!5459 = !DILocation(line: 534, column: 24, scope: !5457)
!5460 = !DILocation(line: 534, column: 13, scope: !5442)
!5461 = !DILocation(line: 535, column: 30, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 534, column: 36)
!5463 = !DILocation(line: 535, column: 5, scope: !5462)
!5464 = !DILocation(line: 537, column: 15, scope: !5462)
!5465 = !DILocation(line: 537, column: 5, scope: !5462)
!5466 = !DILocation(line: 537, column: 12, scope: !5462)
!5467 = !DILocation(line: 538, column: 15, scope: !5462)
!5468 = !DILocation(line: 538, column: 5, scope: !5462)
!5469 = !DILocation(line: 538, column: 12, scope: !5462)
!5470 = !DILocation(line: 539, column: 4, scope: !5462)
!5471 = !DILocation(line: 540, column: 3, scope: !5431)
!5472 = !DILocation(line: 541, column: 2, scope: !5426)
!5473 = !DILocation(line: 542, column: 1, scope: !5355)
!5474 = distinct !DISubprogram(name: "removeAspectRatio", scope: !3, file: !3, line: 544, type: !5356, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!5475 = !DILocalVariable(name: "t", arg: 1, scope: !5474, file: !3, line: 544, type: !3841)
!5476 = !DILocation(line: 544, column: 35, scope: !5474)
!5477 = !DILocalVariable(name: "vec", arg: 2, scope: !5474, file: !3, line: 544, type: !1773)
!5478 = !DILocation(line: 544, column: 44, scope: !5474)
!5479 = !DILocation(line: 546, column: 7, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5474, file: !3, line: 546, column: 6)
!5481 = !DILocation(line: 546, column: 10, scope: !5480)
!5482 = !DILocation(line: 546, column: 20, scope: !5480)
!5483 = !DILocation(line: 546, column: 36, scope: !5480)
!5484 = !DILocation(line: 546, column: 40, scope: !5480)
!5485 = !DILocation(line: 546, column: 43, scope: !5480)
!5486 = !DILocation(line: 546, column: 48, scope: !5480)
!5487 = !DILocation(line: 546, column: 6, scope: !5474)
!5488 = !DILocalVariable(name: "sima", scope: !5489, file: !3, line: 547, type: !4211)
!5489 = distinct !DILexicalBlock(scope: !5480, file: !3, line: 546, column: 69)
!5490 = !DILocation(line: 547, column: 15, scope: !5489)
!5491 = !DILocation(line: 547, column: 22, scope: !5489)
!5492 = !DILocation(line: 547, column: 25, scope: !5489)
!5493 = !DILocation(line: 547, column: 29, scope: !5489)
!5494 = !DILocation(line: 547, column: 39, scope: !5489)
!5495 = !DILocalVariable(name: "aspx", scope: !5489, file: !3, line: 548, type: !1727)
!5496 = !DILocation(line: 548, column: 9, scope: !5489)
!5497 = !DILocalVariable(name: "aspy", scope: !5489, file: !3, line: 548, type: !1727)
!5498 = !DILocation(line: 548, column: 15, scope: !5489)
!5499 = !DILocation(line: 550, column: 8, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 550, column: 7)
!5501 = !DILocation(line: 550, column: 14, scope: !5500)
!5502 = !DILocation(line: 550, column: 19, scope: !5500)
!5503 = !DILocation(line: 550, column: 37, scope: !5500)
!5504 = !DILocation(line: 550, column: 7, scope: !5489)
!5505 = !DILocalVariable(name: "width", scope: !5506, file: !3, line: 551, type: !35)
!5506 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 550, column: 43)
!5507 = !DILocation(line: 551, column: 8, scope: !5506)
!5508 = !DILocalVariable(name: "height", scope: !5506, file: !3, line: 551, type: !35)
!5509 = !DILocation(line: 551, column: 15, scope: !5506)
!5510 = !DILocation(line: 552, column: 28, scope: !5506)
!5511 = !DILocation(line: 552, column: 4, scope: !5506)
!5512 = !DILocation(line: 554, column: 14, scope: !5506)
!5513 = !DILocation(line: 554, column: 4, scope: !5506)
!5514 = !DILocation(line: 554, column: 11, scope: !5506)
!5515 = !DILocation(line: 555, column: 14, scope: !5506)
!5516 = !DILocation(line: 555, column: 4, scope: !5506)
!5517 = !DILocation(line: 555, column: 11, scope: !5506)
!5518 = !DILocation(line: 556, column: 3, scope: !5506)
!5519 = !DILocation(line: 558, column: 32, scope: !5489)
!5520 = !DILocation(line: 558, column: 3, scope: !5489)
!5521 = !DILocation(line: 559, column: 13, scope: !5489)
!5522 = !DILocation(line: 559, column: 3, scope: !5489)
!5523 = !DILocation(line: 559, column: 10, scope: !5489)
!5524 = !DILocation(line: 560, column: 13, scope: !5489)
!5525 = !DILocation(line: 560, column: 3, scope: !5489)
!5526 = !DILocation(line: 560, column: 10, scope: !5489)
!5527 = !DILocation(line: 561, column: 2, scope: !5489)
!5528 = !DILocation(line: 562, column: 12, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5480, file: !3, line: 562, column: 11)
!5530 = !DILocation(line: 562, column: 15, scope: !5529)
!5531 = !DILocation(line: 562, column: 25, scope: !5529)
!5532 = !DILocation(line: 562, column: 40, scope: !5529)
!5533 = !DILocation(line: 562, column: 44, scope: !5529)
!5534 = !DILocation(line: 562, column: 47, scope: !5529)
!5535 = !DILocation(line: 562, column: 52, scope: !5529)
!5536 = !DILocation(line: 562, column: 11, scope: !5480)
!5537 = !DILocation(line: 563, column: 7, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 563, column: 7)
!5539 = distinct !DILexicalBlock(scope: !5529, file: !3, line: 562, column: 73)
!5540 = !DILocation(line: 563, column: 10, scope: !5538)
!5541 = !DILocation(line: 563, column: 18, scope: !5538)
!5542 = !DILocation(line: 563, column: 7, scope: !5539)
!5543 = !DILocalVariable(name: "sc", scope: !5544, file: !3, line: 564, type: !4292)
!5544 = distinct !DILexicalBlock(scope: !5538, file: !3, line: 563, column: 48)
!5545 = !DILocation(line: 564, column: 15, scope: !5544)
!5546 = !DILocation(line: 564, column: 20, scope: !5544)
!5547 = !DILocation(line: 564, column: 23, scope: !5544)
!5548 = !DILocation(line: 564, column: 27, scope: !5544)
!5549 = !DILocation(line: 564, column: 37, scope: !5544)
!5550 = !DILocalVariable(name: "aspx", scope: !5544, file: !3, line: 565, type: !1727)
!5551 = !DILocation(line: 565, column: 10, scope: !5544)
!5552 = !DILocalVariable(name: "aspy", scope: !5544, file: !3, line: 565, type: !1727)
!5553 = !DILocation(line: 565, column: 23, scope: !5544)
!5554 = !DILocation(line: 567, column: 8, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5544, file: !3, line: 567, column: 8)
!5556 = !DILocation(line: 567, column: 11, scope: !5555)
!5557 = !DILocation(line: 567, column: 19, scope: !5555)
!5558 = !DILocation(line: 567, column: 8, scope: !5544)
!5559 = !DILocation(line: 568, column: 46, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5555, file: !3, line: 567, column: 36)
!5561 = !DILocation(line: 568, column: 5, scope: !5560)
!5562 = !DILocation(line: 569, column: 4, scope: !5560)
!5563 = !DILocation(line: 570, column: 13, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5555, file: !3, line: 570, column: 13)
!5565 = !DILocation(line: 570, column: 16, scope: !5564)
!5566 = !DILocation(line: 570, column: 24, scope: !5564)
!5567 = !DILocation(line: 570, column: 13, scope: !5555)
!5568 = !DILocation(line: 571, column: 30, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 570, column: 36)
!5570 = !DILocation(line: 571, column: 5, scope: !5569)
!5571 = !DILocation(line: 572, column: 4, scope: !5569)
!5572 = !DILocation(line: 574, column: 14, scope: !5544)
!5573 = !DILocation(line: 574, column: 4, scope: !5544)
!5574 = !DILocation(line: 574, column: 11, scope: !5544)
!5575 = !DILocation(line: 575, column: 14, scope: !5544)
!5576 = !DILocation(line: 575, column: 4, scope: !5544)
!5577 = !DILocation(line: 575, column: 11, scope: !5544)
!5578 = !DILocation(line: 576, column: 3, scope: !5544)
!5579 = !DILocation(line: 577, column: 2, scope: !5539)
!5580 = !DILocation(line: 578, column: 1, scope: !5474)
!5581 = !DILocalVariable(name: "keyconf", arg: 1, scope: !2, file: !3, line: 812, type: !40)
!5582 = !DILocation(line: 812, column: 47, scope: !2)
!5583 = !DILocalVariable(name: "keymap", scope: !2, file: !3, line: 844, type: !5584)
!5584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5585, size: 64)
!5585 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMap", file: !8, line: 297, baseType: !7)
!5586 = !DILocation(line: 844, column: 12, scope: !2)
!5587 = !DILocation(line: 844, column: 40, scope: !2)
!5588 = !DILocation(line: 844, column: 21, scope: !2)
!5589 = !DILocation(line: 847, column: 6, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !2, file: !3, line: 847, column: 6)
!5591 = !DILocation(line: 847, column: 13, scope: !5590)
!5592 = !DILocation(line: 847, column: 16, scope: !5590)
!5593 = !DILocation(line: 847, column: 24, scope: !5590)
!5594 = !DILocation(line: 847, column: 6, scope: !2)
!5595 = !DILocation(line: 847, column: 37, scope: !5590)
!5596 = !DILocation(line: 849, column: 30, scope: !2)
!5597 = !DILocation(line: 849, column: 11, scope: !2)
!5598 = !DILocation(line: 849, column: 9, scope: !2)
!5599 = !DILocation(line: 852, column: 26, scope: !2)
!5600 = !DILocation(line: 852, column: 2, scope: !2)
!5601 = !DILocation(line: 853, column: 26, scope: !2)
!5602 = !DILocation(line: 853, column: 2, scope: !2)
!5603 = !DILocation(line: 854, column: 26, scope: !2)
!5604 = !DILocation(line: 854, column: 2, scope: !2)
!5605 = !DILocation(line: 855, column: 26, scope: !2)
!5606 = !DILocation(line: 855, column: 2, scope: !2)
!5607 = !DILocation(line: 857, column: 26, scope: !2)
!5608 = !DILocation(line: 857, column: 2, scope: !2)
!5609 = !DILocation(line: 858, column: 26, scope: !2)
!5610 = !DILocation(line: 858, column: 2, scope: !2)
!5611 = !DILocation(line: 859, column: 26, scope: !2)
!5612 = !DILocation(line: 859, column: 2, scope: !2)
!5613 = !DILocation(line: 861, column: 26, scope: !2)
!5614 = !DILocation(line: 861, column: 2, scope: !2)
!5615 = !DILocation(line: 863, column: 26, scope: !2)
!5616 = !DILocation(line: 863, column: 2, scope: !2)
!5617 = !DILocation(line: 864, column: 26, scope: !2)
!5618 = !DILocation(line: 864, column: 2, scope: !2)
!5619 = !DILocation(line: 866, column: 26, scope: !2)
!5620 = !DILocation(line: 866, column: 2, scope: !2)
!5621 = !DILocation(line: 867, column: 26, scope: !2)
!5622 = !DILocation(line: 867, column: 2, scope: !2)
!5623 = !DILocation(line: 869, column: 26, scope: !2)
!5624 = !DILocation(line: 869, column: 2, scope: !2)
!5625 = !DILocation(line: 870, column: 26, scope: !2)
!5626 = !DILocation(line: 870, column: 2, scope: !2)
!5627 = !DILocation(line: 872, column: 26, scope: !2)
!5628 = !DILocation(line: 872, column: 2, scope: !2)
!5629 = !DILocation(line: 873, column: 26, scope: !2)
!5630 = !DILocation(line: 873, column: 2, scope: !2)
!5631 = !DILocation(line: 874, column: 26, scope: !2)
!5632 = !DILocation(line: 874, column: 2, scope: !2)
!5633 = !DILocation(line: 875, column: 26, scope: !2)
!5634 = !DILocation(line: 875, column: 2, scope: !2)
!5635 = !DILocation(line: 876, column: 26, scope: !2)
!5636 = !DILocation(line: 876, column: 2, scope: !2)
!5637 = !DILocation(line: 878, column: 26, scope: !2)
!5638 = !DILocation(line: 878, column: 2, scope: !2)
!5639 = !DILocation(line: 879, column: 26, scope: !2)
!5640 = !DILocation(line: 879, column: 2, scope: !2)
!5641 = !DILocation(line: 881, column: 26, scope: !2)
!5642 = !DILocation(line: 881, column: 2, scope: !2)
!5643 = !DILocation(line: 882, column: 26, scope: !2)
!5644 = !DILocation(line: 882, column: 2, scope: !2)
!5645 = !DILocation(line: 883, column: 26, scope: !2)
!5646 = !DILocation(line: 883, column: 2, scope: !2)
!5647 = !DILocation(line: 884, column: 26, scope: !2)
!5648 = !DILocation(line: 884, column: 2, scope: !2)
!5649 = !DILocation(line: 886, column: 9, scope: !2)
!5650 = !DILocation(line: 886, column: 2, scope: !2)
!5651 = !DILocation(line: 887, column: 1, scope: !2)
!5652 = distinct !DISubprogram(name: "transformEvent", scope: !3, file: !3, line: 959, type: !5653, scopeLine: 960, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!5653 = !DISubroutineType(types: !5654)
!5654 = !{!35, !3841, !5655}
!5655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5656, size: 64)
!5656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5657)
!5657 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !1782, line: 460, baseType: !3407)
!5658 = !DILocalVariable(name: "t", arg: 1, scope: !5652, file: !3, line: 959, type: !3841)
!5659 = !DILocation(line: 959, column: 31, scope: !5652)
!5660 = !DILocalVariable(name: "event", arg: 2, scope: !5652, file: !3, line: 959, type: !5655)
!5661 = !DILocation(line: 959, column: 49, scope: !5652)
!5662 = !DILocalVariable(name: "cmode", scope: !5652, file: !3, line: 961, type: !23)
!5663 = !DILocation(line: 961, column: 7, scope: !5652)
!5664 = !DILocation(line: 961, column: 36, scope: !5652)
!5665 = !DILocation(line: 961, column: 15, scope: !5652)
!5666 = !DILocalVariable(name: "handled", scope: !5652, file: !3, line: 962, type: !2769)
!5667 = !DILocation(line: 962, column: 7, scope: !5652)
!5668 = !DILocation(line: 964, column: 32, scope: !5652)
!5669 = !DILocation(line: 964, column: 36, scope: !5652)
!5670 = !DILocation(line: 964, column: 39, scope: !5652)
!5671 = !DILocation(line: 964, column: 46, scope: !5652)
!5672 = !DILocation(line: 964, column: 15, scope: !5652)
!5673 = !DILocation(line: 964, column: 2, scope: !5652)
!5674 = !DILocation(line: 964, column: 5, scope: !5652)
!5675 = !DILocation(line: 964, column: 12, scope: !5652)
!5676 = !DILocation(line: 967, column: 8, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 967, column: 6)
!5678 = !DILocation(line: 967, column: 15, scope: !5677)
!5679 = !DILocation(line: 967, column: 19, scope: !5677)
!5680 = !DILocation(line: 967, column: 32, scope: !5677)
!5681 = !DILocation(line: 967, column: 36, scope: !5677)
!5682 = !DILocation(line: 967, column: 43, scope: !5677)
!5683 = !DILocation(line: 967, column: 48, scope: !5677)
!5684 = !DILocation(line: 967, column: 67, scope: !5677)
!5685 = !DILocation(line: 968, column: 19, scope: !5677)
!5686 = !DILocation(line: 968, column: 22, scope: !5677)
!5687 = !DILocation(line: 968, column: 6, scope: !5677)
!5688 = !DILocation(line: 968, column: 27, scope: !5677)
!5689 = !DILocation(line: 968, column: 45, scope: !5677)
!5690 = !DILocation(line: 968, column: 48, scope: !5677)
!5691 = !DILocation(line: 968, column: 59, scope: !5677)
!5692 = !DILocation(line: 968, column: 62, scope: !5677)
!5693 = !DILocation(line: 968, column: 68, scope: !5677)
!5694 = !DILocation(line: 968, column: 30, scope: !5677)
!5695 = !DILocation(line: 967, column: 6, scope: !5652)
!5696 = !DILocation(line: 970, column: 3, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 969, column: 2)
!5698 = !DILocation(line: 970, column: 6, scope: !5697)
!5699 = !DILocation(line: 970, column: 13, scope: !5697)
!5700 = !DILocation(line: 971, column: 11, scope: !5697)
!5701 = !DILocation(line: 972, column: 2, scope: !5697)
!5702 = !DILocation(line: 973, column: 11, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 973, column: 11)
!5704 = !DILocation(line: 973, column: 18, scope: !5703)
!5705 = !DILocation(line: 973, column: 23, scope: !5703)
!5706 = !DILocation(line: 973, column: 11, scope: !5677)
!5707 = !DILocation(line: 974, column: 7, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 974, column: 7)
!5709 = distinct !DILexicalBlock(scope: !5703, file: !3, line: 973, column: 37)
!5710 = !DILocation(line: 974, column: 10, scope: !5708)
!5711 = !DILocation(line: 974, column: 20, scope: !5708)
!5712 = !DILocation(line: 974, column: 7, scope: !5709)
!5713 = !DILocation(line: 975, column: 4, scope: !5708)
!5714 = !DILocation(line: 975, column: 7, scope: !5708)
!5715 = !DILocation(line: 975, column: 11, scope: !5708)
!5716 = !DILocation(line: 975, column: 16, scope: !5708)
!5717 = !DILocation(line: 977, column: 18, scope: !5709)
!5718 = !DILocation(line: 977, column: 21, scope: !5709)
!5719 = !DILocation(line: 977, column: 27, scope: !5709)
!5720 = !DILocation(line: 977, column: 34, scope: !5709)
!5721 = !DILocation(line: 977, column: 3, scope: !5709)
!5722 = !DILocation(line: 980, column: 3, scope: !5709)
!5723 = !DILocation(line: 980, column: 6, scope: !5709)
!5724 = !DILocation(line: 980, column: 13, scope: !5709)
!5725 = !DILocation(line: 982, column: 7, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 982, column: 7)
!5727 = !DILocation(line: 982, column: 10, scope: !5726)
!5728 = !DILocation(line: 982, column: 16, scope: !5726)
!5729 = !DILocation(line: 982, column: 7, scope: !5709)
!5730 = !DILocation(line: 983, column: 4, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5726, file: !3, line: 982, column: 35)
!5732 = !DILocation(line: 983, column: 7, scope: !5731)
!5733 = !DILocation(line: 983, column: 13, scope: !5731)
!5734 = !DILocation(line: 984, column: 3, scope: !5731)
!5735 = !DILocation(line: 986, column: 19, scope: !5709)
!5736 = !DILocation(line: 986, column: 23, scope: !5709)
!5737 = !DILocation(line: 986, column: 26, scope: !5709)
!5738 = !DILocation(line: 986, column: 33, scope: !5709)
!5739 = !DILocation(line: 986, column: 36, scope: !5709)
!5740 = !DILocation(line: 986, column: 42, scope: !5709)
!5741 = !DILocation(line: 986, column: 45, scope: !5709)
!5742 = !DILocation(line: 986, column: 3, scope: !5709)
!5743 = !DILocation(line: 989, column: 31, scope: !5709)
!5744 = !DILocation(line: 989, column: 34, scope: !5709)
!5745 = !DILocation(line: 989, column: 16, scope: !5709)
!5746 = !DILocation(line: 989, column: 3, scope: !5709)
!5747 = !DILocation(line: 989, column: 6, scope: !5709)
!5748 = !DILocation(line: 989, column: 13, scope: !5709)
!5749 = !DILocation(line: 990, column: 11, scope: !5709)
!5750 = !DILocation(line: 991, column: 2, scope: !5709)
!5751 = !DILocation(line: 993, column: 11, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5703, file: !3, line: 993, column: 11)
!5753 = !DILocation(line: 993, column: 18, scope: !5752)
!5754 = !DILocation(line: 993, column: 23, scope: !5752)
!5755 = !DILocation(line: 993, column: 11, scope: !5703)
!5756 = !DILocation(line: 994, column: 11, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 993, column: 41)
!5758 = !DILocation(line: 994, column: 18, scope: !5757)
!5759 = !DILocation(line: 994, column: 3, scope: !5757)
!5760 = !DILocation(line: 996, column: 5, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 994, column: 23)
!5762 = !DILocation(line: 996, column: 8, scope: !5761)
!5763 = !DILocation(line: 996, column: 14, scope: !5761)
!5764 = !DILocation(line: 997, column: 13, scope: !5761)
!5765 = !DILocation(line: 998, column: 5, scope: !5761)
!5766 = !DILocation(line: 1000, column: 5, scope: !5761)
!5767 = !DILocation(line: 1000, column: 8, scope: !5761)
!5768 = !DILocation(line: 1000, column: 14, scope: !5761)
!5769 = !DILocation(line: 1001, column: 13, scope: !5761)
!5770 = !DILocation(line: 1002, column: 5, scope: !5761)
!5771 = !DILocation(line: 1005, column: 9, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 1005, column: 9)
!5773 = !DILocation(line: 1005, column: 9, scope: !5761)
!5774 = !DILocation(line: 1006, column: 22, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 1005, column: 97)
!5776 = !DILocation(line: 1006, column: 6, scope: !5775)
!5777 = !DILocation(line: 1007, column: 29, scope: !5775)
!5778 = !DILocation(line: 1007, column: 6, scope: !5775)
!5779 = !DILocation(line: 1008, column: 26, scope: !5775)
!5780 = !DILocation(line: 1008, column: 6, scope: !5775)
!5781 = !DILocation(line: 1009, column: 22, scope: !5775)
!5782 = !DILocation(line: 1009, column: 6, scope: !5775)
!5783 = !DILocation(line: 1010, column: 19, scope: !5775)
!5784 = !DILocation(line: 1010, column: 6, scope: !5775)
!5785 = !DILocation(line: 1011, column: 6, scope: !5775)
!5786 = !DILocation(line: 1011, column: 9, scope: !5775)
!5787 = !DILocation(line: 1011, column: 16, scope: !5775)
!5788 = !DILocation(line: 1012, column: 29, scope: !5775)
!5789 = !DILocation(line: 1012, column: 32, scope: !5775)
!5790 = !DILocation(line: 1012, column: 6, scope: !5775)
!5791 = !DILocation(line: 1013, column: 14, scope: !5775)
!5792 = !DILocation(line: 1014, column: 5, scope: !5775)
!5793 = !DILocation(line: 1015, column: 14, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 1015, column: 14)
!5795 = !DILocation(line: 1015, column: 17, scope: !5794)
!5796 = !DILocation(line: 1015, column: 22, scope: !5794)
!5797 = !DILocation(line: 1015, column: 14, scope: !5772)
!5798 = !DILocation(line: 1016, column: 6, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5794, file: !3, line: 1015, column: 40)
!5800 = !DILocation(line: 1016, column: 9, scope: !5799)
!5801 = !DILocation(line: 1016, column: 14, scope: !5799)
!5802 = !DILocation(line: 1017, column: 6, scope: !5799)
!5803 = !DILocation(line: 1017, column: 9, scope: !5799)
!5804 = !DILocation(line: 1017, column: 16, scope: !5799)
!5805 = !DILocation(line: 1018, column: 14, scope: !5799)
!5806 = !DILocation(line: 1019, column: 5, scope: !5799)
!5807 = !DILocation(line: 1021, column: 10, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5809, file: !3, line: 1021, column: 10)
!5809 = distinct !DILexicalBlock(scope: !5794, file: !3, line: 1020, column: 10)
!5810 = !DILocation(line: 1021, column: 13, scope: !5808)
!5811 = !DILocation(line: 1021, column: 20, scope: !5808)
!5812 = !DILocation(line: 1021, column: 23, scope: !5808)
!5813 = !DILocation(line: 1021, column: 26, scope: !5808)
!5814 = !DILocation(line: 1021, column: 34, scope: !5808)
!5815 = !DILocation(line: 1021, column: 39, scope: !5808)
!5816 = !DILocation(line: 1021, column: 10, scope: !5809)
!5817 = !DILocation(line: 1022, column: 12, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 1022, column: 11)
!5819 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 1021, column: 51)
!5820 = !DILocation(line: 1022, column: 15, scope: !5818)
!5821 = !DILocation(line: 1022, column: 20, scope: !5818)
!5822 = !DILocation(line: 1022, column: 40, scope: !5818)
!5823 = !DILocation(line: 1022, column: 44, scope: !5818)
!5824 = !DILocation(line: 1022, column: 47, scope: !5818)
!5825 = !DILocation(line: 1022, column: 57, scope: !5818)
!5826 = !DILocation(line: 1022, column: 11, scope: !5819)
!5827 = !DILocation(line: 1023, column: 24, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 1022, column: 75)
!5829 = !DILocation(line: 1023, column: 8, scope: !5828)
!5830 = !DILocation(line: 1024, column: 31, scope: !5828)
!5831 = !DILocation(line: 1024, column: 8, scope: !5828)
!5832 = !DILocation(line: 1025, column: 28, scope: !5828)
!5833 = !DILocation(line: 1025, column: 8, scope: !5828)
!5834 = !DILocation(line: 1028, column: 22, scope: !5828)
!5835 = !DILocation(line: 1028, column: 8, scope: !5828)
!5836 = !DILocation(line: 1030, column: 12, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5828, file: !3, line: 1030, column: 12)
!5838 = !DILocation(line: 1030, column: 15, scope: !5837)
!5839 = !DILocation(line: 1030, column: 21, scope: !5837)
!5840 = !DILocation(line: 1030, column: 12, scope: !5828)
!5841 = !DILocation(line: 1031, column: 9, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5837, file: !3, line: 1030, column: 38)
!5843 = !DILocation(line: 1031, column: 12, scope: !5842)
!5844 = !DILocation(line: 1031, column: 18, scope: !5842)
!5845 = !DILocation(line: 1032, column: 23, scope: !5842)
!5846 = !DILocation(line: 1032, column: 9, scope: !5842)
!5847 = !DILocation(line: 1033, column: 8, scope: !5842)
!5848 = !DILocation(line: 1035, column: 12, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5828, file: !3, line: 1035, column: 12)
!5850 = !DILocation(line: 1035, column: 15, scope: !5849)
!5851 = !DILocation(line: 1035, column: 21, scope: !5849)
!5852 = !DILocation(line: 1035, column: 12, scope: !5828)
!5853 = !DILocation(line: 1036, column: 9, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 1035, column: 38)
!5855 = !DILocation(line: 1036, column: 12, scope: !5854)
!5856 = !DILocation(line: 1036, column: 18, scope: !5854)
!5857 = !DILocation(line: 1037, column: 32, scope: !5854)
!5858 = !DILocation(line: 1037, column: 9, scope: !5854)
!5859 = !DILocation(line: 1038, column: 29, scope: !5854)
!5860 = !DILocation(line: 1038, column: 9, scope: !5854)
!5861 = !DILocation(line: 1039, column: 25, scope: !5854)
!5862 = !DILocation(line: 1039, column: 9, scope: !5854)
!5863 = !DILocation(line: 1040, column: 8, scope: !5854)
!5864 = !DILocation(line: 1041, column: 21, scope: !5828)
!5865 = !DILocation(line: 1041, column: 8, scope: !5828)
!5866 = !DILocation(line: 1042, column: 8, scope: !5828)
!5867 = !DILocation(line: 1042, column: 11, scope: !5828)
!5868 = !DILocation(line: 1042, column: 18, scope: !5828)
!5869 = !DILocation(line: 1043, column: 16, scope: !5828)
!5870 = !DILocation(line: 1044, column: 31, scope: !5828)
!5871 = !DILocation(line: 1044, column: 34, scope: !5828)
!5872 = !DILocation(line: 1044, column: 8, scope: !5828)
!5873 = !DILocation(line: 1045, column: 7, scope: !5828)
!5874 = !DILocation(line: 1046, column: 6, scope: !5819)
!5875 = !DILocation(line: 1047, column: 15, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 1047, column: 15)
!5877 = !DILocation(line: 1047, column: 18, scope: !5876)
!5878 = !DILocation(line: 1047, column: 26, scope: !5876)
!5879 = !DILocation(line: 1047, column: 15, scope: !5808)
!5880 = !DILocation(line: 1048, column: 11, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 1048, column: 11)
!5882 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 1047, column: 56)
!5883 = !DILocation(line: 1048, column: 14, scope: !5881)
!5884 = !DILocation(line: 1048, column: 19, scope: !5881)
!5885 = !DILocation(line: 1048, column: 11, scope: !5882)
!5886 = !DILocation(line: 1049, column: 28, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 1048, column: 39)
!5888 = !DILocation(line: 1049, column: 8, scope: !5887)
!5889 = !DILocation(line: 1051, column: 8, scope: !5887)
!5890 = !DILocation(line: 1051, column: 11, scope: !5887)
!5891 = !DILocation(line: 1051, column: 16, scope: !5887)
!5892 = !DILocation(line: 1052, column: 8, scope: !5887)
!5893 = !DILocation(line: 1052, column: 11, scope: !5887)
!5894 = !DILocation(line: 1052, column: 18, scope: !5887)
!5895 = !DILocation(line: 1053, column: 16, scope: !5887)
!5896 = !DILocation(line: 1054, column: 7, scope: !5887)
!5897 = !DILocation(line: 1055, column: 6, scope: !5882)
!5898 = !DILocation(line: 1057, column: 5, scope: !5761)
!5899 = !DILocation(line: 1060, column: 11, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 1060, column: 9)
!5901 = !DILocation(line: 1060, column: 14, scope: !5900)
!5902 = !DILocation(line: 1060, column: 22, scope: !5900)
!5903 = !DILocation(line: 1060, column: 37, scope: !5900)
!5904 = !DILocation(line: 1060, column: 42, scope: !5900)
!5905 = !DILocation(line: 1060, column: 45, scope: !5900)
!5906 = !DILocation(line: 1060, column: 53, scope: !5900)
!5907 = !DILocation(line: 1060, column: 9, scope: !5761)
!5908 = !DILocation(line: 1061, column: 10, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5910, file: !3, line: 1061, column: 10)
!5910 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 1060, column: 84)
!5911 = !DILocation(line: 1061, column: 10, scope: !5910)
!5912 = !DILocation(line: 1062, column: 23, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5909, file: !3, line: 1061, column: 115)
!5914 = !DILocation(line: 1062, column: 7, scope: !5913)
!5915 = !DILocation(line: 1063, column: 30, scope: !5913)
!5916 = !DILocation(line: 1063, column: 7, scope: !5913)
!5917 = !DILocation(line: 1065, column: 11, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 1065, column: 11)
!5919 = !DILocation(line: 1065, column: 14, scope: !5918)
!5920 = !DILocation(line: 1065, column: 19, scope: !5918)
!5921 = !DILocation(line: 1065, column: 11, scope: !5913)
!5922 = !DILocation(line: 1066, column: 28, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 1065, column: 36)
!5924 = !DILocation(line: 1066, column: 8, scope: !5923)
!5925 = !DILocation(line: 1067, column: 22, scope: !5923)
!5926 = !DILocation(line: 1067, column: 8, scope: !5923)
!5927 = !DILocation(line: 1068, column: 7, scope: !5923)
!5928 = !DILocation(line: 1070, column: 28, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 1069, column: 12)
!5930 = !DILocation(line: 1070, column: 8, scope: !5929)
!5931 = !DILocation(line: 1071, column: 21, scope: !5929)
!5932 = !DILocation(line: 1071, column: 8, scope: !5929)
!5933 = !DILocation(line: 1073, column: 20, scope: !5913)
!5934 = !DILocation(line: 1073, column: 7, scope: !5913)
!5935 = !DILocation(line: 1074, column: 7, scope: !5913)
!5936 = !DILocation(line: 1074, column: 10, scope: !5913)
!5937 = !DILocation(line: 1074, column: 17, scope: !5913)
!5938 = !DILocation(line: 1075, column: 15, scope: !5913)
!5939 = !DILocation(line: 1076, column: 6, scope: !5913)
!5940 = !DILocation(line: 1077, column: 5, scope: !5910)
!5941 = !DILocation(line: 1078, column: 5, scope: !5761)
!5942 = !DILocation(line: 1081, column: 9, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 1081, column: 9)
!5944 = !DILocation(line: 1081, column: 9, scope: !5761)
!5945 = !DILocation(line: 1084, column: 11, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 1084, column: 10)
!5947 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 1081, column: 102)
!5948 = !DILocation(line: 1084, column: 14, scope: !5946)
!5949 = !DILocation(line: 1084, column: 18, scope: !5946)
!5950 = !DILocation(line: 1084, column: 23, scope: !5946)
!5951 = !DILocation(line: 1084, column: 36, scope: !5946)
!5952 = !DILocation(line: 1084, column: 40, scope: !5946)
!5953 = !DILocation(line: 1084, column: 43, scope: !5946)
!5954 = !DILocation(line: 1084, column: 47, scope: !5946)
!5955 = !DILocation(line: 1084, column: 59, scope: !5946)
!5956 = !DILocation(line: 1084, column: 10, scope: !5947)
!5957 = !DILocation(line: 1085, column: 22, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 1084, column: 81)
!5959 = !DILocation(line: 1085, column: 7, scope: !5958)
!5960 = !DILocation(line: 1086, column: 6, scope: !5958)
!5961 = !DILocation(line: 1088, column: 22, scope: !5947)
!5962 = !DILocation(line: 1088, column: 6, scope: !5947)
!5963 = !DILocation(line: 1089, column: 29, scope: !5947)
!5964 = !DILocation(line: 1089, column: 6, scope: !5947)
!5965 = !DILocation(line: 1090, column: 26, scope: !5947)
!5966 = !DILocation(line: 1090, column: 6, scope: !5947)
!5967 = !DILocation(line: 1091, column: 17, scope: !5947)
!5968 = !DILocation(line: 1091, column: 6, scope: !5947)
!5969 = !DILocation(line: 1092, column: 19, scope: !5947)
!5970 = !DILocation(line: 1092, column: 6, scope: !5947)
!5971 = !DILocation(line: 1093, column: 6, scope: !5947)
!5972 = !DILocation(line: 1093, column: 9, scope: !5947)
!5973 = !DILocation(line: 1093, column: 16, scope: !5947)
!5974 = !DILocation(line: 1094, column: 14, scope: !5947)
!5975 = !DILocation(line: 1095, column: 5, scope: !5947)
!5976 = !DILocation(line: 1096, column: 14, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 1096, column: 14)
!5978 = !DILocation(line: 1096, column: 17, scope: !5977)
!5979 = !DILocation(line: 1096, column: 22, scope: !5977)
!5980 = !DILocation(line: 1096, column: 14, scope: !5943)
!5981 = !DILocation(line: 1097, column: 6, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5977, file: !3, line: 1096, column: 43)
!5983 = !DILocation(line: 1097, column: 9, scope: !5982)
!5984 = !DILocation(line: 1097, column: 14, scope: !5982)
!5985 = !DILocation(line: 1098, column: 6, scope: !5982)
!5986 = !DILocation(line: 1098, column: 9, scope: !5982)
!5987 = !DILocation(line: 1098, column: 16, scope: !5982)
!5988 = !DILocation(line: 1099, column: 14, scope: !5982)
!5989 = !DILocation(line: 1100, column: 5, scope: !5982)
!5990 = !DILocation(line: 1101, column: 14, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5977, file: !3, line: 1101, column: 14)
!5992 = !DILocation(line: 1101, column: 17, scope: !5991)
!5993 = !DILocation(line: 1101, column: 22, scope: !5991)
!5994 = !DILocation(line: 1101, column: 14, scope: !5977)
!5995 = !DILocation(line: 1102, column: 10, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 1102, column: 10)
!5997 = distinct !DILexicalBlock(scope: !5991, file: !3, line: 1101, column: 37)
!5998 = !DILocation(line: 1102, column: 13, scope: !5996)
!5999 = !DILocation(line: 1102, column: 21, scope: !5996)
!6000 = !DILocation(line: 1102, column: 10, scope: !5997)
!6001 = !DILocation(line: 1103, column: 27, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 1102, column: 38)
!6003 = !DILocation(line: 1103, column: 7, scope: !6002)
!6004 = !DILocation(line: 1105, column: 7, scope: !6002)
!6005 = !DILocation(line: 1105, column: 10, scope: !6002)
!6006 = !DILocation(line: 1105, column: 15, scope: !6002)
!6007 = !DILocation(line: 1106, column: 7, scope: !6002)
!6008 = !DILocation(line: 1106, column: 10, scope: !6002)
!6009 = !DILocation(line: 1106, column: 17, scope: !6002)
!6010 = !DILocation(line: 1107, column: 15, scope: !6002)
!6011 = !DILocation(line: 1108, column: 6, scope: !6002)
!6012 = !DILocation(line: 1109, column: 5, scope: !5997)
!6013 = !DILocation(line: 1110, column: 5, scope: !5761)
!6014 = !DILocation(line: 1113, column: 5, scope: !5761)
!6015 = !DILocation(line: 1113, column: 8, scope: !5761)
!6016 = !DILocation(line: 1113, column: 18, scope: !5761)
!6017 = !DILocation(line: 1114, column: 5, scope: !5761)
!6018 = !DILocation(line: 1114, column: 8, scope: !5761)
!6019 = !DILocation(line: 1114, column: 15, scope: !5761)
!6020 = !DILocation(line: 1115, column: 13, scope: !5761)
!6021 = !DILocation(line: 1116, column: 5, scope: !5761)
!6022 = !DILocation(line: 1118, column: 5, scope: !5761)
!6023 = !DILocation(line: 1118, column: 8, scope: !5761)
!6024 = !DILocation(line: 1118, column: 18, scope: !5761)
!6025 = !DILocation(line: 1119, column: 5, scope: !5761)
!6026 = !DILocation(line: 1119, column: 8, scope: !5761)
!6027 = !DILocation(line: 1119, column: 15, scope: !5761)
!6028 = !DILocation(line: 1120, column: 13, scope: !5761)
!6029 = !DILocation(line: 1121, column: 5, scope: !5761)
!6030 = !DILocation(line: 1123, column: 5, scope: !5761)
!6031 = !DILocation(line: 1123, column: 8, scope: !5761)
!6032 = !DILocation(line: 1123, column: 18, scope: !5761)
!6033 = !DILocation(line: 1124, column: 5, scope: !5761)
!6034 = !DILocation(line: 1124, column: 8, scope: !5761)
!6035 = !DILocation(line: 1124, column: 15, scope: !5761)
!6036 = !DILocation(line: 1125, column: 13, scope: !5761)
!6037 = !DILocation(line: 1126, column: 5, scope: !5761)
!6038 = !DILocation(line: 1128, column: 11, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 1128, column: 9)
!6040 = !DILocation(line: 1128, column: 14, scope: !6039)
!6041 = !DILocation(line: 1128, column: 19, scope: !6039)
!6042 = !DILocation(line: 1128, column: 9, scope: !5761)
!6043 = !DILocation(line: 1129, column: 37, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1128, column: 39)
!6045 = !DILocation(line: 1129, column: 46, scope: !6044)
!6046 = !DILocation(line: 1129, column: 6, scope: !6044)
!6047 = !DILocation(line: 1130, column: 6, scope: !6044)
!6048 = !DILocation(line: 1130, column: 9, scope: !6044)
!6049 = !DILocation(line: 1130, column: 16, scope: !6044)
!6050 = !DILocation(line: 1131, column: 14, scope: !6044)
!6051 = !DILocation(line: 1132, column: 5, scope: !6044)
!6052 = !DILocation(line: 1133, column: 5, scope: !5761)
!6053 = !DILocation(line: 1135, column: 10, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 1135, column: 9)
!6055 = !DILocation(line: 1135, column: 13, scope: !6054)
!6056 = !DILocation(line: 1135, column: 18, scope: !6054)
!6057 = !DILocation(line: 1135, column: 37, scope: !6054)
!6058 = !DILocation(line: 1135, column: 9, scope: !5761)
!6059 = !DILocation(line: 1136, column: 37, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1135, column: 43)
!6061 = !DILocation(line: 1136, column: 46, scope: !6060)
!6062 = !DILocation(line: 1136, column: 6, scope: !6060)
!6063 = !DILocation(line: 1137, column: 6, scope: !6060)
!6064 = !DILocation(line: 1137, column: 9, scope: !6060)
!6065 = !DILocation(line: 1137, column: 16, scope: !6060)
!6066 = !DILocation(line: 1138, column: 14, scope: !6060)
!6067 = !DILocation(line: 1139, column: 5, scope: !6060)
!6068 = !DILocation(line: 1140, column: 5, scope: !5761)
!6069 = !DILocation(line: 1142, column: 10, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 1142, column: 9)
!6071 = !DILocation(line: 1142, column: 13, scope: !6070)
!6072 = !DILocation(line: 1142, column: 18, scope: !6070)
!6073 = !DILocation(line: 1142, column: 39, scope: !6070)
!6074 = !DILocation(line: 1142, column: 9, scope: !5761)
!6075 = !DILocation(line: 1143, column: 37, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 1142, column: 45)
!6077 = !DILocation(line: 1143, column: 46, scope: !6076)
!6078 = !DILocation(line: 1143, column: 6, scope: !6076)
!6079 = !DILocation(line: 1144, column: 6, scope: !6076)
!6080 = !DILocation(line: 1144, column: 9, scope: !6076)
!6081 = !DILocation(line: 1144, column: 16, scope: !6076)
!6082 = !DILocation(line: 1145, column: 14, scope: !6076)
!6083 = !DILocation(line: 1146, column: 5, scope: !6076)
!6084 = !DILocation(line: 1147, column: 5, scope: !5761)
!6085 = !DILocation(line: 1149, column: 10, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 1149, column: 9)
!6087 = !DILocation(line: 1149, column: 13, scope: !6086)
!6088 = !DILocation(line: 1149, column: 18, scope: !6086)
!6089 = !DILocation(line: 1149, column: 51, scope: !6086)
!6090 = !DILocation(line: 1149, column: 9, scope: !5761)
!6091 = !DILocation(line: 1150, column: 10, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 1150, column: 10)
!6093 = distinct !DILexicalBlock(scope: !6086, file: !3, line: 1149, column: 57)
!6094 = !DILocation(line: 1150, column: 16, scope: !6092)
!6095 = !DILocation(line: 1150, column: 10, scope: !6093)
!6096 = !DILocation(line: 1151, column: 22, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6092, file: !3, line: 1150, column: 24)
!6098 = !DILocation(line: 1151, column: 7, scope: !6097)
!6099 = !DILocation(line: 1152, column: 6, scope: !6097)
!6100 = !DILocation(line: 1154, column: 25, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6092, file: !3, line: 1153, column: 11)
!6102 = !DILocation(line: 1154, column: 28, scope: !6101)
!6103 = !DILocation(line: 1154, column: 31, scope: !6101)
!6104 = !DILocation(line: 1154, column: 7, scope: !6101)
!6105 = !DILocation(line: 1156, column: 6, scope: !6093)
!6106 = !DILocation(line: 1156, column: 9, scope: !6093)
!6107 = !DILocation(line: 1156, column: 16, scope: !6093)
!6108 = !DILocation(line: 1157, column: 14, scope: !6093)
!6109 = !DILocation(line: 1158, column: 5, scope: !6093)
!6110 = !DILocation(line: 1159, column: 5, scope: !5761)
!6111 = !DILocation(line: 1161, column: 10, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 1161, column: 9)
!6113 = !DILocation(line: 1161, column: 13, scope: !6112)
!6114 = !DILocation(line: 1161, column: 18, scope: !6112)
!6115 = !DILocation(line: 1161, column: 51, scope: !6112)
!6116 = !DILocation(line: 1161, column: 9, scope: !5761)
!6117 = !DILocation(line: 1162, column: 10, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6119, file: !3, line: 1162, column: 10)
!6119 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 1161, column: 57)
!6120 = !DILocation(line: 1162, column: 16, scope: !6118)
!6121 = !DILocation(line: 1162, column: 10, scope: !6119)
!6122 = !DILocation(line: 1163, column: 22, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 1162, column: 24)
!6124 = !DILocation(line: 1163, column: 7, scope: !6123)
!6125 = !DILocation(line: 1164, column: 6, scope: !6123)
!6126 = !DILocation(line: 1166, column: 25, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 1165, column: 11)
!6128 = !DILocation(line: 1166, column: 28, scope: !6127)
!6129 = !DILocation(line: 1166, column: 31, scope: !6127)
!6130 = !DILocation(line: 1166, column: 7, scope: !6127)
!6131 = !DILocation(line: 1168, column: 6, scope: !6119)
!6132 = !DILocation(line: 1168, column: 9, scope: !6119)
!6133 = !DILocation(line: 1168, column: 16, scope: !6119)
!6134 = !DILocation(line: 1169, column: 14, scope: !6119)
!6135 = !DILocation(line: 1170, column: 5, scope: !6119)
!6136 = !DILocation(line: 1171, column: 5, scope: !5761)
!6137 = !DILocation(line: 1173, column: 10, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 1173, column: 9)
!6139 = !DILocation(line: 1173, column: 13, scope: !6138)
!6140 = !DILocation(line: 1173, column: 18, scope: !6138)
!6141 = !DILocation(line: 1173, column: 51, scope: !6138)
!6142 = !DILocation(line: 1173, column: 9, scope: !5761)
!6143 = !DILocation(line: 1174, column: 10, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6145, file: !3, line: 1174, column: 10)
!6145 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 1173, column: 57)
!6146 = !DILocation(line: 1174, column: 16, scope: !6144)
!6147 = !DILocation(line: 1174, column: 10, scope: !6145)
!6148 = !DILocation(line: 1175, column: 22, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6144, file: !3, line: 1174, column: 24)
!6150 = !DILocation(line: 1175, column: 7, scope: !6149)
!6151 = !DILocation(line: 1176, column: 6, scope: !6149)
!6152 = !DILocation(line: 1178, column: 25, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6144, file: !3, line: 1177, column: 11)
!6154 = !DILocation(line: 1178, column: 28, scope: !6153)
!6155 = !DILocation(line: 1178, column: 31, scope: !6153)
!6156 = !DILocation(line: 1178, column: 7, scope: !6153)
!6157 = !DILocation(line: 1180, column: 6, scope: !6145)
!6158 = !DILocation(line: 1180, column: 9, scope: !6145)
!6159 = !DILocation(line: 1180, column: 16, scope: !6145)
!6160 = !DILocation(line: 1181, column: 14, scope: !6145)
!6161 = !DILocation(line: 1182, column: 5, scope: !6145)
!6162 = !DILocation(line: 1183, column: 5, scope: !5761)
!6163 = !DILocation(line: 1185, column: 10, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 1185, column: 9)
!6165 = !DILocation(line: 1185, column: 13, scope: !6164)
!6166 = !DILocation(line: 1185, column: 18, scope: !6164)
!6167 = !DILocation(line: 1185, column: 37, scope: !6164)
!6168 = !DILocation(line: 1185, column: 9, scope: !5761)
!6169 = !DILocation(line: 1186, column: 21, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6164, file: !3, line: 1185, column: 43)
!6171 = !DILocation(line: 1186, column: 6, scope: !6170)
!6172 = !DILocation(line: 1187, column: 6, scope: !6170)
!6173 = !DILocation(line: 1187, column: 9, scope: !6170)
!6174 = !DILocation(line: 1187, column: 16, scope: !6170)
!6175 = !DILocation(line: 1188, column: 14, scope: !6170)
!6176 = !DILocation(line: 1189, column: 5, scope: !6170)
!6177 = !DILocation(line: 1190, column: 5, scope: !5761)
!6178 = !DILocation(line: 1192, column: 18, scope: !5761)
!6179 = !DILocation(line: 1192, column: 5, scope: !5761)
!6180 = !DILocation(line: 1193, column: 5, scope: !5761)
!6181 = !DILocation(line: 1193, column: 8, scope: !5761)
!6182 = !DILocation(line: 1193, column: 15, scope: !5761)
!6183 = !DILocation(line: 1194, column: 13, scope: !5761)
!6184 = !DILocation(line: 1195, column: 5, scope: !5761)
!6185 = !DILocation(line: 1197, column: 21, scope: !5761)
!6186 = !DILocation(line: 1197, column: 5, scope: !5761)
!6187 = !DILocation(line: 1198, column: 5, scope: !5761)
!6188 = !DILocation(line: 1198, column: 8, scope: !5761)
!6189 = !DILocation(line: 1198, column: 15, scope: !5761)
!6190 = !DILocation(line: 1199, column: 13, scope: !5761)
!6191 = !DILocation(line: 1200, column: 5, scope: !5761)
!6192 = !DILocation(line: 1203, column: 9, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 1203, column: 9)
!6194 = !DILocation(line: 1203, column: 12, scope: !6193)
!6195 = !DILocation(line: 1203, column: 17, scope: !6193)
!6196 = !DILocation(line: 1203, column: 9, scope: !5761)
!6197 = !DILocalVariable(name: "fac", scope: !6198, file: !3, line: 1204, type: !1727)
!6198 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 1203, column: 32)
!6199 = !DILocation(line: 1204, column: 12, scope: !6198)
!6200 = !DILocation(line: 1204, column: 34, scope: !6198)
!6201 = !DILocation(line: 1204, column: 41, scope: !6198)
!6202 = !DILocation(line: 1204, column: 45, scope: !6198)
!6203 = !DILocation(line: 1204, column: 52, scope: !6198)
!6204 = !DILocation(line: 1204, column: 43, scope: !6198)
!6205 = !DILocation(line: 1204, column: 33, scope: !6198)
!6206 = !DILocation(line: 1204, column: 32, scope: !6198)
!6207 = !DILocation(line: 1204, column: 23, scope: !6198)
!6208 = !DILocation(line: 1205, column: 22, scope: !6198)
!6209 = !DILocation(line: 1205, column: 6, scope: !6198)
!6210 = !DILocation(line: 1205, column: 9, scope: !6198)
!6211 = !DILocation(line: 1205, column: 19, scope: !6198)
!6212 = !DILocation(line: 1206, column: 10, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 1206, column: 10)
!6214 = !DILocation(line: 1206, column: 13, scope: !6213)
!6215 = !DILocation(line: 1206, column: 23, scope: !6213)
!6216 = !DILocation(line: 1206, column: 39, scope: !6213)
!6217 = !DILocation(line: 1206, column: 42, scope: !6213)
!6218 = !DILocation(line: 1206, column: 45, scope: !6213)
!6219 = !DILocation(line: 1206, column: 51, scope: !6213)
!6220 = !DILocation(line: 1206, column: 10, scope: !6198)
!6221 = !DILocation(line: 1207, column: 29, scope: !6213)
!6222 = !DILocation(line: 1207, column: 32, scope: !6213)
!6223 = !DILocation(line: 1207, column: 54, scope: !6213)
!6224 = !DILocation(line: 1207, column: 57, scope: !6213)
!6225 = !DILocation(line: 1207, column: 44, scope: !6213)
!6226 = !DILocation(line: 1207, column: 64, scope: !6213)
!6227 = !DILocation(line: 1207, column: 22, scope: !6213)
!6228 = !DILocation(line: 1207, column: 7, scope: !6213)
!6229 = !DILocation(line: 1207, column: 10, scope: !6213)
!6230 = !DILocation(line: 1207, column: 20, scope: !6213)
!6231 = !DILocation(line: 1208, column: 25, scope: !6198)
!6232 = !DILocation(line: 1208, column: 6, scope: !6198)
!6233 = !DILocation(line: 1209, column: 6, scope: !6198)
!6234 = !DILocation(line: 1209, column: 9, scope: !6198)
!6235 = !DILocation(line: 1209, column: 16, scope: !6198)
!6236 = !DILocation(line: 1210, column: 14, scope: !6198)
!6237 = !DILocation(line: 1211, column: 5, scope: !6198)
!6238 = !DILocation(line: 1212, column: 5, scope: !5761)
!6239 = !DILocation(line: 1214, column: 9, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 1214, column: 9)
!6241 = !DILocation(line: 1214, column: 12, scope: !6240)
!6242 = !DILocation(line: 1214, column: 17, scope: !6240)
!6243 = !DILocation(line: 1214, column: 9, scope: !5761)
!6244 = !DILocation(line: 1215, column: 6, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 1214, column: 32)
!6246 = !DILocation(line: 1215, column: 9, scope: !6245)
!6247 = !DILocation(line: 1215, column: 19, scope: !6245)
!6248 = !DILocation(line: 1216, column: 10, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 1216, column: 10)
!6250 = !DILocation(line: 1216, column: 13, scope: !6249)
!6251 = !DILocation(line: 1216, column: 23, scope: !6249)
!6252 = !DILocation(line: 1216, column: 39, scope: !6249)
!6253 = !DILocation(line: 1216, column: 42, scope: !6249)
!6254 = !DILocation(line: 1216, column: 45, scope: !6249)
!6255 = !DILocation(line: 1216, column: 51, scope: !6249)
!6256 = !DILocation(line: 1216, column: 10, scope: !6245)
!6257 = !DILocation(line: 1217, column: 29, scope: !6249)
!6258 = !DILocation(line: 1217, column: 32, scope: !6249)
!6259 = !DILocation(line: 1217, column: 54, scope: !6249)
!6260 = !DILocation(line: 1217, column: 57, scope: !6249)
!6261 = !DILocation(line: 1217, column: 44, scope: !6249)
!6262 = !DILocation(line: 1217, column: 64, scope: !6249)
!6263 = !DILocation(line: 1217, column: 22, scope: !6249)
!6264 = !DILocation(line: 1217, column: 7, scope: !6249)
!6265 = !DILocation(line: 1217, column: 10, scope: !6249)
!6266 = !DILocation(line: 1217, column: 20, scope: !6249)
!6267 = !DILocation(line: 1218, column: 25, scope: !6245)
!6268 = !DILocation(line: 1218, column: 6, scope: !6245)
!6269 = !DILocation(line: 1219, column: 6, scope: !6245)
!6270 = !DILocation(line: 1219, column: 9, scope: !6245)
!6271 = !DILocation(line: 1219, column: 16, scope: !6245)
!6272 = !DILocation(line: 1220, column: 14, scope: !6245)
!6273 = !DILocation(line: 1221, column: 5, scope: !6245)
!6274 = !DILocation(line: 1222, column: 5, scope: !5761)
!6275 = !DILocation(line: 1224, column: 9, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 1224, column: 9)
!6277 = !DILocation(line: 1224, column: 12, scope: !6276)
!6278 = !DILocation(line: 1224, column: 17, scope: !6276)
!6279 = !DILocation(line: 1224, column: 9, scope: !5761)
!6280 = !DILocation(line: 1225, column: 6, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 1224, column: 32)
!6282 = !DILocation(line: 1225, column: 9, scope: !6281)
!6283 = !DILocation(line: 1225, column: 19, scope: !6281)
!6284 = !DILocation(line: 1226, column: 25, scope: !6281)
!6285 = !DILocation(line: 1226, column: 6, scope: !6281)
!6286 = !DILocation(line: 1227, column: 6, scope: !6281)
!6287 = !DILocation(line: 1227, column: 9, scope: !6281)
!6288 = !DILocation(line: 1227, column: 16, scope: !6281)
!6289 = !DILocation(line: 1228, column: 14, scope: !6281)
!6290 = !DILocation(line: 1229, column: 5, scope: !6281)
!6291 = !DILocation(line: 1230, column: 5, scope: !5761)
!6292 = !DILocation(line: 1233, column: 5, scope: !5761)
!6293 = !DILocation(line: 1233, column: 8, scope: !5761)
!6294 = !DILocation(line: 1233, column: 15, scope: !5761)
!6295 = !DILocation(line: 1234, column: 13, scope: !5761)
!6296 = !DILocation(line: 1235, column: 5, scope: !5761)
!6297 = !DILocation(line: 1237, column: 9, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 1237, column: 9)
!6299 = !DILocation(line: 1237, column: 12, scope: !6298)
!6300 = !DILocation(line: 1237, column: 17, scope: !6298)
!6301 = !DILocation(line: 1237, column: 9, scope: !5761)
!6302 = !DILocation(line: 1238, column: 30, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 1237, column: 29)
!6304 = !DILocation(line: 1238, column: 6, scope: !6303)
!6305 = !DILocation(line: 1239, column: 6, scope: !6303)
!6306 = !DILocation(line: 1239, column: 9, scope: !6303)
!6307 = !DILocation(line: 1239, column: 16, scope: !6303)
!6308 = !DILocation(line: 1240, column: 14, scope: !6303)
!6309 = !DILocation(line: 1241, column: 5, scope: !6303)
!6310 = !DILocation(line: 1242, column: 5, scope: !5761)
!6311 = !DILocation(line: 1244, column: 9, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 1244, column: 9)
!6313 = !DILocation(line: 1244, column: 12, scope: !6312)
!6314 = !DILocation(line: 1244, column: 17, scope: !6312)
!6315 = !DILocation(line: 1244, column: 9, scope: !5761)
!6316 = !DILocation(line: 1245, column: 30, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 1244, column: 29)
!6318 = !DILocation(line: 1245, column: 6, scope: !6317)
!6319 = !DILocation(line: 1246, column: 6, scope: !6317)
!6320 = !DILocation(line: 1246, column: 9, scope: !6317)
!6321 = !DILocation(line: 1246, column: 16, scope: !6317)
!6322 = !DILocation(line: 1247, column: 14, scope: !6317)
!6323 = !DILocation(line: 1248, column: 5, scope: !6317)
!6324 = !DILocation(line: 1249, column: 5, scope: !5761)
!6325 = !DILocation(line: 1251, column: 5, scope: !5761)
!6326 = !DILocation(line: 1253, column: 2, scope: !5757)
!6327 = !DILocation(line: 1255, column: 11, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 1255, column: 11)
!6329 = !DILocation(line: 1255, column: 18, scope: !6328)
!6330 = !DILocation(line: 1255, column: 22, scope: !6328)
!6331 = !DILocation(line: 1255, column: 11, scope: !5752)
!6332 = !DILocation(line: 1256, column: 11, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6328, file: !3, line: 1255, column: 35)
!6334 = !DILocation(line: 1256, column: 18, scope: !6333)
!6335 = !DILocation(line: 1256, column: 3, scope: !6333)
!6336 = !DILocation(line: 1258, column: 5, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 1256, column: 24)
!6338 = !DILocation(line: 1258, column: 8, scope: !6337)
!6339 = !DILocation(line: 1258, column: 14, scope: !6337)
!6340 = !DILocation(line: 1259, column: 13, scope: !6337)
!6341 = !DILocation(line: 1260, column: 5, scope: !6337)
!6342 = !DILocation(line: 1264, column: 5, scope: !6337)
!6343 = !DILocation(line: 1264, column: 8, scope: !6337)
!6344 = !DILocation(line: 1264, column: 18, scope: !6337)
!6345 = !DILocation(line: 1265, column: 5, scope: !6337)
!6346 = !DILocation(line: 1265, column: 8, scope: !6337)
!6347 = !DILocation(line: 1265, column: 15, scope: !6337)
!6348 = !DILocation(line: 1266, column: 13, scope: !6337)
!6349 = !DILocation(line: 1267, column: 5, scope: !6337)
!6350 = !DILocation(line: 1270, column: 5, scope: !6337)
!6351 = !DILocation(line: 1270, column: 8, scope: !6337)
!6352 = !DILocation(line: 1270, column: 14, scope: !6337)
!6353 = !DILocation(line: 1271, column: 13, scope: !6337)
!6354 = !DILocation(line: 1272, column: 5, scope: !6337)
!6355 = !DILocation(line: 1275, column: 10, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 1275, column: 9)
!6357 = !DILocation(line: 1275, column: 13, scope: !6356)
!6358 = !DILocation(line: 1275, column: 18, scope: !6356)
!6359 = !DILocation(line: 1275, column: 37, scope: !6356)
!6360 = !DILocation(line: 1275, column: 9, scope: !6337)
!6361 = !DILocation(line: 1277, column: 10, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 1277, column: 10)
!6363 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 1275, column: 43)
!6364 = !DILocation(line: 1277, column: 13, scope: !6362)
!6365 = !DILocation(line: 1277, column: 18, scope: !6362)
!6366 = !DILocation(line: 1277, column: 10, scope: !6363)
!6367 = !DILocation(line: 1278, column: 11, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6369, file: !3, line: 1278, column: 11)
!6369 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 1277, column: 30)
!6370 = !DILocation(line: 1278, column: 14, scope: !6368)
!6371 = !DILocation(line: 1278, column: 19, scope: !6368)
!6372 = !DILocation(line: 1278, column: 11, scope: !6369)
!6373 = !DILocation(line: 1279, column: 27, scope: !6368)
!6374 = !DILocation(line: 1279, column: 8, scope: !6368)
!6375 = !DILocation(line: 1280, column: 16, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6368, file: !3, line: 1280, column: 16)
!6377 = !DILocation(line: 1280, column: 19, scope: !6376)
!6378 = !DILocation(line: 1280, column: 24, scope: !6376)
!6379 = !DILocation(line: 1280, column: 16, scope: !6368)
!6380 = !DILocation(line: 1281, column: 28, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6376, file: !3, line: 1280, column: 41)
!6382 = !DILocation(line: 1281, column: 8, scope: !6381)
!6383 = !DILocation(line: 1282, column: 22, scope: !6381)
!6384 = !DILocation(line: 1282, column: 8, scope: !6381)
!6385 = !DILocation(line: 1283, column: 7, scope: !6381)
!6386 = !DILocation(line: 1284, column: 6, scope: !6369)
!6387 = !DILocation(line: 1286, column: 7, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 1285, column: 11)
!6389 = !DILocation(line: 1286, column: 10, scope: !6388)
!6390 = !DILocation(line: 1286, column: 20, scope: !6388)
!6391 = !DILocation(line: 1287, column: 11, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 1287, column: 11)
!6393 = !DILocation(line: 1287, column: 14, scope: !6392)
!6394 = !DILocation(line: 1287, column: 18, scope: !6392)
!6395 = !DILocation(line: 1287, column: 23, scope: !6392)
!6396 = !DILocation(line: 1287, column: 11, scope: !6388)
!6397 = !DILocation(line: 1288, column: 23, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 1287, column: 36)
!6399 = !DILocation(line: 1288, column: 8, scope: !6398)
!6400 = !DILocation(line: 1289, column: 7, scope: !6398)
!6401 = !DILocation(line: 1291, column: 12, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6403, file: !3, line: 1291, column: 12)
!6403 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 1290, column: 12)
!6404 = !DILocation(line: 1291, column: 19, scope: !6402)
!6405 = !DILocation(line: 1291, column: 12, scope: !6403)
!6406 = !DILocation(line: 1292, column: 30, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6402, file: !3, line: 1291, column: 26)
!6408 = !DILocation(line: 1292, column: 33, scope: !6407)
!6409 = !DILocation(line: 1292, column: 36, scope: !6407)
!6410 = !DILocation(line: 1292, column: 9, scope: !6407)
!6411 = !DILocation(line: 1293, column: 8, scope: !6407)
!6412 = !DILocalVariable(name: "mati", scope: !6413, file: !3, line: 1296, type: !3881)
!6413 = distinct !DILexicalBlock(scope: !6402, file: !3, line: 1294, column: 13)
!6414 = !DILocation(line: 1296, column: 15, scope: !6413)
!6415 = !DILocation(line: 1297, column: 16, scope: !6413)
!6416 = !DILocation(line: 1297, column: 19, scope: !6413)
!6417 = !DILocation(line: 1297, column: 9, scope: !6413)
!6418 = !DILocation(line: 1298, column: 17, scope: !6413)
!6419 = !DILocation(line: 1298, column: 9, scope: !6413)
!6420 = !DILocation(line: 1299, column: 30, scope: !6413)
!6421 = !DILocation(line: 1299, column: 33, scope: !6413)
!6422 = !DILocation(line: 1299, column: 9, scope: !6413)
!6423 = !DILocation(line: 1301, column: 29, scope: !6403)
!6424 = !DILocation(line: 1301, column: 8, scope: !6403)
!6425 = !DILocation(line: 1304, column: 6, scope: !6363)
!6426 = !DILocation(line: 1304, column: 9, scope: !6363)
!6427 = !DILocation(line: 1304, column: 16, scope: !6363)
!6428 = !DILocation(line: 1305, column: 14, scope: !6363)
!6429 = !DILocation(line: 1306, column: 5, scope: !6363)
!6430 = !DILocation(line: 1307, column: 5, scope: !6337)
!6431 = !DILocation(line: 1309, column: 5, scope: !6337)
!6432 = !DILocation(line: 1309, column: 8, scope: !6337)
!6433 = !DILocation(line: 1309, column: 14, scope: !6337)
!6434 = !DILocation(line: 1310, column: 13, scope: !6337)
!6435 = !DILocation(line: 1311, column: 5, scope: !6337)
!6436 = !DILocation(line: 1314, column: 5, scope: !6337)
!6437 = !DILocation(line: 1314, column: 8, scope: !6337)
!6438 = !DILocation(line: 1314, column: 14, scope: !6337)
!6439 = !DILocation(line: 1315, column: 13, scope: !6337)
!6440 = !DILocation(line: 1316, column: 5, scope: !6337)
!6441 = !DILocation(line: 1319, column: 9, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 1319, column: 9)
!6443 = !DILocation(line: 1319, column: 9, scope: !6337)
!6444 = !DILocation(line: 1320, column: 22, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6442, file: !3, line: 1319, column: 65)
!6446 = !DILocation(line: 1320, column: 6, scope: !6445)
!6447 = !DILocation(line: 1321, column: 29, scope: !6445)
!6448 = !DILocation(line: 1321, column: 6, scope: !6445)
!6449 = !DILocation(line: 1322, column: 26, scope: !6445)
!6450 = !DILocation(line: 1322, column: 6, scope: !6445)
!6451 = !DILocation(line: 1323, column: 22, scope: !6445)
!6452 = !DILocation(line: 1323, column: 6, scope: !6445)
!6453 = !DILocation(line: 1324, column: 19, scope: !6445)
!6454 = !DILocation(line: 1324, column: 6, scope: !6445)
!6455 = !DILocation(line: 1325, column: 6, scope: !6445)
!6456 = !DILocation(line: 1325, column: 9, scope: !6445)
!6457 = !DILocation(line: 1325, column: 16, scope: !6445)
!6458 = !DILocation(line: 1326, column: 14, scope: !6445)
!6459 = !DILocation(line: 1327, column: 5, scope: !6445)
!6460 = !DILocation(line: 1328, column: 5, scope: !6337)
!6461 = !DILocation(line: 1331, column: 9, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 1331, column: 9)
!6463 = !DILocation(line: 1331, column: 9, scope: !6337)
!6464 = !DILocation(line: 1332, column: 22, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6462, file: !3, line: 1331, column: 70)
!6466 = !DILocation(line: 1332, column: 6, scope: !6465)
!6467 = !DILocation(line: 1333, column: 29, scope: !6465)
!6468 = !DILocation(line: 1333, column: 6, scope: !6465)
!6469 = !DILocation(line: 1334, column: 26, scope: !6465)
!6470 = !DILocation(line: 1334, column: 6, scope: !6465)
!6471 = !DILocation(line: 1335, column: 17, scope: !6465)
!6472 = !DILocation(line: 1335, column: 6, scope: !6465)
!6473 = !DILocation(line: 1336, column: 19, scope: !6465)
!6474 = !DILocation(line: 1336, column: 6, scope: !6465)
!6475 = !DILocation(line: 1337, column: 6, scope: !6465)
!6476 = !DILocation(line: 1337, column: 9, scope: !6465)
!6477 = !DILocation(line: 1337, column: 16, scope: !6465)
!6478 = !DILocation(line: 1338, column: 14, scope: !6465)
!6479 = !DILocation(line: 1339, column: 5, scope: !6465)
!6480 = !DILocation(line: 1340, column: 5, scope: !6337)
!6481 = !DILocation(line: 1343, column: 11, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 1343, column: 9)
!6483 = !DILocation(line: 1343, column: 14, scope: !6482)
!6484 = !DILocation(line: 1343, column: 22, scope: !6482)
!6485 = !DILocation(line: 1343, column: 9, scope: !6337)
!6486 = !DILocation(line: 1344, column: 10, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 1344, column: 10)
!6488 = distinct !DILexicalBlock(scope: !6482, file: !3, line: 1343, column: 38)
!6489 = !DILocation(line: 1344, column: 10, scope: !6488)
!6490 = !DILocation(line: 1345, column: 23, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 1344, column: 83)
!6492 = !DILocation(line: 1345, column: 7, scope: !6491)
!6493 = !DILocation(line: 1346, column: 30, scope: !6491)
!6494 = !DILocation(line: 1346, column: 7, scope: !6491)
!6495 = !DILocation(line: 1348, column: 11, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 1348, column: 11)
!6497 = !DILocation(line: 1348, column: 14, scope: !6496)
!6498 = !DILocation(line: 1348, column: 19, scope: !6496)
!6499 = !DILocation(line: 1348, column: 11, scope: !6491)
!6500 = !DILocation(line: 1349, column: 28, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6496, file: !3, line: 1348, column: 36)
!6502 = !DILocation(line: 1349, column: 8, scope: !6501)
!6503 = !DILocation(line: 1350, column: 22, scope: !6501)
!6504 = !DILocation(line: 1350, column: 8, scope: !6501)
!6505 = !DILocation(line: 1351, column: 7, scope: !6501)
!6506 = !DILocation(line: 1353, column: 28, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6496, file: !3, line: 1352, column: 12)
!6508 = !DILocation(line: 1353, column: 8, scope: !6507)
!6509 = !DILocation(line: 1354, column: 21, scope: !6507)
!6510 = !DILocation(line: 1354, column: 8, scope: !6507)
!6511 = !DILocation(line: 1356, column: 20, scope: !6491)
!6512 = !DILocation(line: 1356, column: 7, scope: !6491)
!6513 = !DILocation(line: 1357, column: 7, scope: !6491)
!6514 = !DILocation(line: 1357, column: 10, scope: !6491)
!6515 = !DILocation(line: 1357, column: 17, scope: !6491)
!6516 = !DILocation(line: 1358, column: 15, scope: !6491)
!6517 = !DILocation(line: 1359, column: 6, scope: !6491)
!6518 = !DILocation(line: 1360, column: 5, scope: !6488)
!6519 = !DILocation(line: 1361, column: 5, scope: !6337)
!6520 = !DILocation(line: 1363, column: 9, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 1363, column: 9)
!6522 = !DILocation(line: 1363, column: 16, scope: !6521)
!6523 = !DILocation(line: 1363, column: 9, scope: !6337)
!6524 = !DILocation(line: 1364, column: 12, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6526, file: !3, line: 1364, column: 10)
!6526 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 1363, column: 21)
!6527 = !DILocation(line: 1364, column: 15, scope: !6525)
!6528 = !DILocation(line: 1364, column: 23, scope: !6525)
!6529 = !DILocation(line: 1364, column: 10, scope: !6526)
!6530 = !DILocation(line: 1365, column: 7, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 1364, column: 38)
!6532 = !DILocation(line: 1365, column: 10, scope: !6531)
!6533 = !DILocation(line: 1365, column: 15, scope: !6531)
!6534 = !DILocation(line: 1366, column: 28, scope: !6531)
!6535 = !DILocation(line: 1366, column: 7, scope: !6531)
!6536 = !DILocation(line: 1367, column: 26, scope: !6531)
!6537 = !DILocation(line: 1367, column: 7, scope: !6531)
!6538 = !DILocation(line: 1368, column: 7, scope: !6531)
!6539 = !DILocation(line: 1368, column: 10, scope: !6531)
!6540 = !DILocation(line: 1368, column: 17, scope: !6531)
!6541 = !DILocation(line: 1369, column: 15, scope: !6531)
!6542 = !DILocation(line: 1370, column: 6, scope: !6531)
!6543 = !DILocation(line: 1371, column: 5, scope: !6526)
!6544 = !DILocation(line: 1373, column: 12, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 1373, column: 10)
!6546 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 1372, column: 10)
!6547 = !DILocation(line: 1373, column: 15, scope: !6545)
!6548 = !DILocation(line: 1373, column: 20, scope: !6545)
!6549 = !DILocation(line: 1373, column: 10, scope: !6546)
!6550 = !DILocation(line: 1374, column: 22, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 1373, column: 40)
!6552 = !DILocation(line: 1374, column: 7, scope: !6551)
!6553 = !DILocation(line: 1375, column: 7, scope: !6551)
!6554 = !DILocation(line: 1375, column: 10, scope: !6551)
!6555 = !DILocation(line: 1375, column: 17, scope: !6551)
!6556 = !DILocation(line: 1376, column: 15, scope: !6551)
!6557 = !DILocation(line: 1377, column: 6, scope: !6551)
!6558 = !DILocation(line: 1379, column: 5, scope: !6337)
!6559 = !DILocation(line: 1383, column: 11, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 1383, column: 9)
!6561 = !DILocation(line: 1383, column: 14, scope: !6560)
!6562 = !DILocation(line: 1383, column: 19, scope: !6560)
!6563 = !DILocation(line: 1383, column: 9, scope: !6337)
!6564 = !DILocation(line: 1384, column: 37, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1383, column: 39)
!6566 = !DILocation(line: 1384, column: 40, scope: !6565)
!6567 = !DILocation(line: 1384, column: 47, scope: !6565)
!6568 = !DILocation(line: 1384, column: 53, scope: !6565)
!6569 = !DILocation(line: 1384, column: 6, scope: !6565)
!6570 = !DILocation(line: 1385, column: 14, scope: !6565)
!6571 = !DILocation(line: 1386, column: 5, scope: !6565)
!6572 = !DILocation(line: 1387, column: 5, scope: !6337)
!6573 = !DILocation(line: 1389, column: 9, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 1389, column: 9)
!6575 = !DILocation(line: 1389, column: 12, scope: !6574)
!6576 = !DILocation(line: 1389, column: 17, scope: !6574)
!6577 = !DILocation(line: 1389, column: 31, scope: !6574)
!6578 = !DILocation(line: 1389, column: 34, scope: !6574)
!6579 = !DILocation(line: 1389, column: 41, scope: !6574)
!6580 = !DILocation(line: 1389, column: 9, scope: !6337)
!6581 = !DILocation(line: 1390, column: 22, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1389, column: 48)
!6583 = !DILocation(line: 1390, column: 25, scope: !6582)
!6584 = !DILocation(line: 1390, column: 35, scope: !6582)
!6585 = !DILocation(line: 1390, column: 40, scope: !6582)
!6586 = !DILocation(line: 1390, column: 21, scope: !6582)
!6587 = !DILocation(line: 1390, column: 6, scope: !6582)
!6588 = !DILocation(line: 1390, column: 9, scope: !6582)
!6589 = !DILocation(line: 1390, column: 19, scope: !6582)
!6590 = !DILocation(line: 1391, column: 25, scope: !6582)
!6591 = !DILocation(line: 1391, column: 6, scope: !6582)
!6592 = !DILocation(line: 1392, column: 6, scope: !6582)
!6593 = !DILocation(line: 1392, column: 9, scope: !6582)
!6594 = !DILocation(line: 1392, column: 16, scope: !6582)
!6595 = !DILocation(line: 1393, column: 14, scope: !6582)
!6596 = !DILocation(line: 1394, column: 5, scope: !6582)
!6597 = !DILocation(line: 1395, column: 5, scope: !6337)
!6598 = !DILocation(line: 1397, column: 9, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 1397, column: 9)
!6600 = !DILocation(line: 1397, column: 16, scope: !6599)
!6601 = !DILocation(line: 1397, column: 20, scope: !6599)
!6602 = !DILocation(line: 1397, column: 23, scope: !6599)
!6603 = !DILocation(line: 1397, column: 26, scope: !6599)
!6604 = !DILocation(line: 1397, column: 31, scope: !6599)
!6605 = !DILocation(line: 1397, column: 9, scope: !6337)
!6606 = !DILocation(line: 1398, column: 6, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 1397, column: 46)
!6608 = !DILocation(line: 1398, column: 9, scope: !6607)
!6609 = !DILocation(line: 1398, column: 19, scope: !6607)
!6610 = !DILocation(line: 1399, column: 10, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 1399, column: 10)
!6612 = !DILocation(line: 1399, column: 13, scope: !6611)
!6613 = !DILocation(line: 1399, column: 23, scope: !6611)
!6614 = !DILocation(line: 1399, column: 39, scope: !6611)
!6615 = !DILocation(line: 1399, column: 42, scope: !6611)
!6616 = !DILocation(line: 1399, column: 45, scope: !6611)
!6617 = !DILocation(line: 1399, column: 51, scope: !6611)
!6618 = !DILocation(line: 1399, column: 10, scope: !6607)
!6619 = !DILocation(line: 1400, column: 29, scope: !6611)
!6620 = !DILocation(line: 1400, column: 32, scope: !6611)
!6621 = !DILocation(line: 1400, column: 54, scope: !6611)
!6622 = !DILocation(line: 1400, column: 57, scope: !6611)
!6623 = !DILocation(line: 1400, column: 44, scope: !6611)
!6624 = !DILocation(line: 1400, column: 64, scope: !6611)
!6625 = !DILocation(line: 1400, column: 22, scope: !6611)
!6626 = !DILocation(line: 1400, column: 7, scope: !6611)
!6627 = !DILocation(line: 1400, column: 10, scope: !6611)
!6628 = !DILocation(line: 1400, column: 20, scope: !6611)
!6629 = !DILocation(line: 1401, column: 25, scope: !6607)
!6630 = !DILocation(line: 1401, column: 6, scope: !6607)
!6631 = !DILocation(line: 1402, column: 6, scope: !6607)
!6632 = !DILocation(line: 1402, column: 9, scope: !6607)
!6633 = !DILocation(line: 1402, column: 16, scope: !6607)
!6634 = !DILocation(line: 1403, column: 14, scope: !6607)
!6635 = !DILocation(line: 1404, column: 5, scope: !6607)
!6636 = !DILocation(line: 1405, column: 5, scope: !6337)
!6637 = !DILocation(line: 1408, column: 9, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 1408, column: 9)
!6639 = !DILocation(line: 1408, column: 12, scope: !6638)
!6640 = !DILocation(line: 1408, column: 17, scope: !6638)
!6641 = !DILocation(line: 1408, column: 9, scope: !6337)
!6642 = !DILocation(line: 1409, column: 30, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6638, file: !3, line: 1408, column: 29)
!6644 = !DILocation(line: 1409, column: 6, scope: !6643)
!6645 = !DILocation(line: 1410, column: 5, scope: !6643)
!6646 = !DILocation(line: 1412, column: 20, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6638, file: !3, line: 1411, column: 10)
!6648 = !DILocation(line: 1412, column: 27, scope: !6647)
!6649 = !DILocation(line: 1412, column: 6, scope: !6647)
!6650 = !DILocation(line: 1414, column: 5, scope: !6337)
!6651 = !DILocation(line: 1414, column: 8, scope: !6337)
!6652 = !DILocation(line: 1414, column: 15, scope: !6337)
!6653 = !DILocation(line: 1415, column: 13, scope: !6337)
!6654 = !DILocation(line: 1416, column: 5, scope: !6337)
!6655 = !DILocation(line: 1418, column: 9, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 1418, column: 9)
!6657 = !DILocation(line: 1418, column: 16, scope: !6656)
!6658 = !DILocation(line: 1418, column: 20, scope: !6656)
!6659 = !DILocation(line: 1418, column: 23, scope: !6656)
!6660 = !DILocation(line: 1418, column: 26, scope: !6656)
!6661 = !DILocation(line: 1418, column: 31, scope: !6656)
!6662 = !DILocation(line: 1418, column: 9, scope: !6337)
!6663 = !DILocation(line: 1419, column: 6, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6656, file: !3, line: 1418, column: 46)
!6665 = !DILocation(line: 1419, column: 9, scope: !6664)
!6666 = !DILocation(line: 1419, column: 19, scope: !6664)
!6667 = !DILocation(line: 1420, column: 25, scope: !6664)
!6668 = !DILocation(line: 1420, column: 6, scope: !6664)
!6669 = !DILocation(line: 1421, column: 6, scope: !6664)
!6670 = !DILocation(line: 1421, column: 9, scope: !6664)
!6671 = !DILocation(line: 1421, column: 16, scope: !6664)
!6672 = !DILocation(line: 1422, column: 14, scope: !6664)
!6673 = !DILocation(line: 1423, column: 5, scope: !6664)
!6674 = !DILocation(line: 1424, column: 5, scope: !6337)
!6675 = !DILocation(line: 1427, column: 9, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 1427, column: 9)
!6677 = !DILocation(line: 1427, column: 12, scope: !6676)
!6678 = !DILocation(line: 1427, column: 17, scope: !6676)
!6679 = !DILocation(line: 1427, column: 9, scope: !6337)
!6680 = !DILocation(line: 1428, column: 30, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 1427, column: 29)
!6682 = !DILocation(line: 1428, column: 6, scope: !6681)
!6683 = !DILocation(line: 1429, column: 5, scope: !6681)
!6684 = !DILocation(line: 1431, column: 20, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 1430, column: 10)
!6686 = !DILocation(line: 1431, column: 27, scope: !6685)
!6687 = !DILocation(line: 1431, column: 6, scope: !6685)
!6688 = !DILocation(line: 1433, column: 5, scope: !6337)
!6689 = !DILocation(line: 1433, column: 8, scope: !6337)
!6690 = !DILocation(line: 1433, column: 15, scope: !6337)
!6691 = !DILocation(line: 1434, column: 13, scope: !6337)
!6692 = !DILocation(line: 1435, column: 5, scope: !6337)
!6693 = !DILocation(line: 1438, column: 9, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 1438, column: 9)
!6695 = !DILocation(line: 1438, column: 9, scope: !6337)
!6696 = !DILocation(line: 1439, column: 6, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 1438, column: 54)
!6698 = !DILocation(line: 1439, column: 9, scope: !6697)
!6699 = !DILocation(line: 1439, column: 14, scope: !6697)
!6700 = !DILocation(line: 1440, column: 6, scope: !6697)
!6701 = !DILocation(line: 1440, column: 9, scope: !6697)
!6702 = !DILocation(line: 1440, column: 16, scope: !6697)
!6703 = !DILocation(line: 1441, column: 14, scope: !6697)
!6704 = !DILocation(line: 1442, column: 5, scope: !6697)
!6705 = !DILocation(line: 1443, column: 5, scope: !6337)
!6706 = !DILocation(line: 1445, column: 5, scope: !6337)
!6707 = !DILocation(line: 1449, column: 31, scope: !6333)
!6708 = !DILocation(line: 1449, column: 34, scope: !6333)
!6709 = !DILocation(line: 1449, column: 16, scope: !6333)
!6710 = !DILocation(line: 1449, column: 3, scope: !6333)
!6711 = !DILocation(line: 1449, column: 6, scope: !6333)
!6712 = !DILocation(line: 1449, column: 13, scope: !6333)
!6713 = !DILocation(line: 1450, column: 2, scope: !6333)
!6714 = !DILocation(line: 1451, column: 11, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6328, file: !3, line: 1451, column: 11)
!6716 = !DILocation(line: 1451, column: 18, scope: !6715)
!6717 = !DILocation(line: 1451, column: 22, scope: !6715)
!6718 = !DILocation(line: 1451, column: 11, scope: !6328)
!6719 = !DILocation(line: 1452, column: 11, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6715, file: !3, line: 1451, column: 37)
!6721 = !DILocation(line: 1452, column: 18, scope: !6720)
!6722 = !DILocation(line: 1452, column: 3, scope: !6720)
!6723 = !DILocation(line: 1455, column: 5, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 1452, column: 24)
!6725 = !DILocation(line: 1455, column: 8, scope: !6724)
!6726 = !DILocation(line: 1455, column: 18, scope: !6724)
!6727 = !DILocation(line: 1456, column: 5, scope: !6724)
!6728 = !DILocation(line: 1456, column: 8, scope: !6724)
!6729 = !DILocation(line: 1456, column: 15, scope: !6724)
!6730 = !DILocation(line: 1457, column: 13, scope: !6724)
!6731 = !DILocation(line: 1458, column: 5, scope: !6724)
!6732 = !DILocation(line: 1461, column: 10, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 1461, column: 9)
!6734 = !DILocation(line: 1461, column: 13, scope: !6733)
!6735 = !DILocation(line: 1461, column: 18, scope: !6733)
!6736 = !DILocation(line: 1461, column: 37, scope: !6733)
!6737 = !DILocation(line: 1461, column: 9, scope: !6724)
!6738 = !DILocation(line: 1462, column: 6, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 1461, column: 43)
!6740 = !DILocation(line: 1462, column: 9, scope: !6739)
!6741 = !DILocation(line: 1462, column: 19, scope: !6739)
!6742 = !DILocation(line: 1463, column: 27, scope: !6739)
!6743 = !DILocation(line: 1463, column: 6, scope: !6739)
!6744 = !DILocation(line: 1464, column: 6, scope: !6739)
!6745 = !DILocation(line: 1464, column: 9, scope: !6739)
!6746 = !DILocation(line: 1464, column: 16, scope: !6739)
!6747 = !DILocation(line: 1465, column: 14, scope: !6739)
!6748 = !DILocation(line: 1466, column: 5, scope: !6739)
!6749 = !DILocation(line: 1467, column: 5, scope: !6724)
!6750 = !DILocation(line: 1470, column: 9, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 1470, column: 9)
!6752 = !DILocation(line: 1470, column: 9, scope: !6724)
!6753 = !DILocation(line: 1471, column: 6, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 1470, column: 54)
!6755 = !DILocation(line: 1471, column: 9, scope: !6754)
!6756 = !DILocation(line: 1471, column: 14, scope: !6754)
!6757 = !DILocation(line: 1472, column: 6, scope: !6754)
!6758 = !DILocation(line: 1472, column: 9, scope: !6754)
!6759 = !DILocation(line: 1472, column: 16, scope: !6754)
!6760 = !DILocation(line: 1473, column: 14, scope: !6754)
!6761 = !DILocation(line: 1474, column: 5, scope: !6754)
!6762 = !DILocation(line: 1475, column: 5, scope: !6724)
!6763 = !DILocation(line: 1477, column: 5, scope: !6724)
!6764 = !DILocation(line: 1481, column: 7, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 1481, column: 7)
!6766 = !DILocation(line: 1481, column: 10, scope: !6765)
!6767 = !DILocation(line: 1481, column: 15, scope: !6765)
!6768 = !DILocation(line: 1481, column: 7, scope: !6720)
!6769 = !DILocation(line: 1483, column: 8, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 1483, column: 8)
!6771 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 1481, column: 36)
!6772 = !DILocation(line: 1483, column: 15, scope: !6770)
!6773 = !DILocation(line: 1483, column: 23, scope: !6770)
!6774 = !DILocation(line: 1483, column: 26, scope: !6770)
!6775 = !DILocation(line: 1483, column: 20, scope: !6770)
!6776 = !DILocation(line: 1483, column: 39, scope: !6770)
!6777 = !DILocation(line: 1483, column: 43, scope: !6770)
!6778 = !DILocation(line: 1483, column: 46, scope: !6770)
!6779 = !DILocation(line: 1483, column: 59, scope: !6770)
!6780 = !DILocation(line: 1483, column: 72, scope: !6770)
!6781 = !DILocation(line: 1483, column: 75, scope: !6770)
!6782 = !DILocation(line: 1483, column: 78, scope: !6770)
!6783 = !DILocation(line: 1483, column: 91, scope: !6770)
!6784 = !DILocation(line: 1483, column: 8, scope: !6771)
!6785 = !DILocation(line: 1484, column: 5, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 1483, column: 107)
!6787 = !DILocation(line: 1484, column: 8, scope: !6786)
!6788 = !DILocation(line: 1484, column: 14, scope: !6786)
!6789 = !DILocation(line: 1485, column: 4, scope: !6786)
!6790 = !DILocation(line: 1486, column: 3, scope: !6771)
!6791 = !DILocation(line: 1487, column: 2, scope: !6720)
!6792 = !DILocation(line: 1490, column: 6, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 1490, column: 6)
!6794 = !DILocation(line: 1490, column: 9, scope: !6793)
!6795 = !DILocation(line: 1490, column: 21, scope: !6793)
!6796 = !DILocation(line: 1491, column: 8, scope: !6793)
!6797 = !DILocation(line: 1491, column: 16, scope: !6793)
!6798 = !DILocation(line: 1493, column: 8, scope: !6793)
!6799 = !DILocation(line: 1493, column: 15, scope: !6793)
!6800 = !DILocation(line: 1493, column: 20, scope: !6793)
!6801 = !DILocation(line: 1490, column: 6, scope: !5652)
!6802 = !DILocation(line: 1495, column: 16, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6793, file: !3, line: 1494, column: 2)
!6804 = !DILocation(line: 1495, column: 19, scope: !6803)
!6805 = !DILocation(line: 1495, column: 31, scope: !6803)
!6806 = !DILocation(line: 1495, column: 34, scope: !6803)
!6807 = !DILocation(line: 1495, column: 3, scope: !6803)
!6808 = !DILocation(line: 1495, column: 6, scope: !6803)
!6809 = !DILocation(line: 1495, column: 13, scope: !6803)
!6810 = !DILocation(line: 1496, column: 2, scope: !6803)
!6811 = !DILocation(line: 1499, column: 8, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 1499, column: 6)
!6813 = !DILocation(line: 1499, column: 16, scope: !6812)
!6814 = !DILocation(line: 1499, column: 19, scope: !6812)
!6815 = !DILocation(line: 1499, column: 22, scope: !6812)
!6816 = !DILocation(line: 1499, column: 30, scope: !6812)
!6817 = !DILocation(line: 1499, column: 35, scope: !6812)
!6818 = !DILocation(line: 1499, column: 42, scope: !6812)
!6819 = !DILocation(line: 1499, column: 46, scope: !6812)
!6820 = !DILocation(line: 1499, column: 59, scope: !6812)
!6821 = !DILocation(line: 1499, column: 63, scope: !6812)
!6822 = !DILocation(line: 1499, column: 70, scope: !6812)
!6823 = !DILocation(line: 1499, column: 75, scope: !6812)
!6824 = !DILocation(line: 1499, column: 94, scope: !6812)
!6825 = !DILocation(line: 1500, column: 21, scope: !6812)
!6826 = !DILocation(line: 1500, column: 24, scope: !6812)
!6827 = !DILocation(line: 1500, column: 35, scope: !6812)
!6828 = !DILocation(line: 1500, column: 38, scope: !6812)
!6829 = !DILocation(line: 1500, column: 44, scope: !6812)
!6830 = !DILocation(line: 1500, column: 6, scope: !6812)
!6831 = !DILocation(line: 1499, column: 6, scope: !5652)
!6832 = !DILocation(line: 1502, column: 3, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 1501, column: 2)
!6834 = !DILocation(line: 1502, column: 6, scope: !6833)
!6835 = !DILocation(line: 1502, column: 13, scope: !6833)
!6836 = !DILocation(line: 1503, column: 11, scope: !6833)
!6837 = !DILocation(line: 1504, column: 2, scope: !6833)
!6838 = !DILocation(line: 1506, column: 6, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 1506, column: 6)
!6840 = !DILocation(line: 1506, column: 14, scope: !6839)
!6841 = !DILocation(line: 1506, column: 17, scope: !6839)
!6842 = !DILocation(line: 1506, column: 20, scope: !6839)
!6843 = !DILocation(line: 1506, column: 6, scope: !5652)
!6844 = !DILocation(line: 1507, column: 3, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6839, file: !3, line: 1506, column: 28)
!6846 = !DILocation(line: 1510, column: 3, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6839, file: !3, line: 1509, column: 7)
!6848 = !DILocation(line: 1512, column: 1, scope: !5652)
!6849 = distinct !DISubprogram(name: "copy_v2_v2_int", scope: !4885, file: !4885, line: 152, type: !6850, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!6850 = !DISubroutineType(types: !6851)
!6851 = !{null, !4900, !3857}
!6852 = !DILocalVariable(name: "r", arg: 1, scope: !6849, file: !4885, line: 152, type: !4900)
!6853 = !DILocation(line: 152, column: 33, scope: !6849)
!6854 = !DILocalVariable(name: "a", arg: 2, scope: !6849, file: !4885, line: 152, type: !3857)
!6855 = !DILocation(line: 152, column: 49, scope: !6849)
!6856 = !DILocation(line: 154, column: 9, scope: !6849)
!6857 = !DILocation(line: 154, column: 2, scope: !6849)
!6858 = !DILocation(line: 154, column: 7, scope: !6849)
!6859 = !DILocation(line: 155, column: 9, scope: !6849)
!6860 = !DILocation(line: 155, column: 2, scope: !6849)
!6861 = !DILocation(line: 155, column: 7, scope: !6849)
!6862 = !DILocation(line: 156, column: 1, scope: !6849)
!6863 = distinct !DISubprogram(name: "initTranslation", scope: !3, file: !3, line: 4042, type: !4434, scopeLine: 4043, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!6864 = !DILocalVariable(name: "t", arg: 1, scope: !6863, file: !3, line: 4042, type: !3841)
!6865 = !DILocation(line: 4042, column: 40, scope: !6863)
!6866 = !DILocation(line: 4044, column: 6, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6863, file: !3, line: 4044, column: 6)
!6868 = !DILocation(line: 4044, column: 9, scope: !6867)
!6869 = !DILocation(line: 4044, column: 19, scope: !6867)
!6870 = !DILocation(line: 4044, column: 6, scope: !6863)
!6871 = !DILocation(line: 4046, column: 14, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6867, file: !3, line: 4044, column: 36)
!6873 = !DILocation(line: 4046, column: 17, scope: !6872)
!6874 = !DILocation(line: 4046, column: 3, scope: !6872)
!6875 = !DILocation(line: 4049, column: 3, scope: !6872)
!6876 = !DILocation(line: 4049, column: 6, scope: !6872)
!6877 = !DILocation(line: 4049, column: 12, scope: !6872)
!6878 = !DILocation(line: 4050, column: 2, scope: !6872)
!6879 = !DILocation(line: 4052, column: 2, scope: !6863)
!6880 = !DILocation(line: 4052, column: 5, scope: !6863)
!6881 = !DILocation(line: 4052, column: 10, scope: !6863)
!6882 = !DILocation(line: 4053, column: 2, scope: !6863)
!6883 = !DILocation(line: 4053, column: 5, scope: !6863)
!6884 = !DILocation(line: 4053, column: 15, scope: !6863)
!6885 = !DILocation(line: 4055, column: 21, scope: !6863)
!6886 = !DILocation(line: 4055, column: 25, scope: !6863)
!6887 = !DILocation(line: 4055, column: 28, scope: !6863)
!6888 = !DILocation(line: 4055, column: 2, scope: !6863)
!6889 = !DILocation(line: 4057, column: 16, scope: !6863)
!6890 = !DILocation(line: 4057, column: 19, scope: !6863)
!6891 = !DILocation(line: 4057, column: 24, scope: !6863)
!6892 = !DILocation(line: 4057, column: 15, scope: !6863)
!6893 = !DILocation(line: 4057, column: 2, scope: !6863)
!6894 = !DILocation(line: 4057, column: 5, scope: !6863)
!6895 = !DILocation(line: 4057, column: 13, scope: !6863)
!6896 = !DILocation(line: 4058, column: 2, scope: !6863)
!6897 = !DILocation(line: 4058, column: 5, scope: !6863)
!6898 = !DILocation(line: 4058, column: 9, scope: !6863)
!6899 = !DILocation(line: 4058, column: 14, scope: !6863)
!6900 = !DILocation(line: 4059, column: 19, scope: !6863)
!6901 = !DILocation(line: 4059, column: 22, scope: !6863)
!6902 = !DILocation(line: 4059, column: 2, scope: !6863)
!6903 = !DILocation(line: 4059, column: 5, scope: !6863)
!6904 = !DILocation(line: 4059, column: 9, scope: !6863)
!6905 = !DILocation(line: 4059, column: 17, scope: !6863)
!6906 = !DILocation(line: 4061, column: 6, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6863, file: !3, line: 4061, column: 6)
!6908 = !DILocation(line: 4061, column: 9, scope: !6907)
!6909 = !DILocation(line: 4061, column: 19, scope: !6907)
!6910 = !DILocation(line: 4061, column: 6, scope: !6863)
!6911 = !DILocalVariable(name: "rv3d", scope: !6912, file: !3, line: 4062, type: !4453)
!6912 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 4061, column: 36)
!6913 = !DILocation(line: 4062, column: 17, scope: !6912)
!6914 = !DILocation(line: 4062, column: 24, scope: !6912)
!6915 = !DILocation(line: 4062, column: 27, scope: !6912)
!6916 = !DILocation(line: 4062, column: 31, scope: !6912)
!6917 = !DILocation(line: 4064, column: 7, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6912, file: !3, line: 4064, column: 7)
!6919 = !DILocation(line: 4064, column: 7, scope: !6912)
!6920 = !DILocation(line: 4065, column: 4, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6918, file: !3, line: 4064, column: 13)
!6922 = !DILocation(line: 4065, column: 7, scope: !6921)
!6923 = !DILocation(line: 4065, column: 15, scope: !6921)
!6924 = !DILocation(line: 4066, column: 17, scope: !6921)
!6925 = !DILocation(line: 4066, column: 23, scope: !6921)
!6926 = !DILocation(line: 4066, column: 32, scope: !6921)
!6927 = !DILocation(line: 4066, column: 4, scope: !6921)
!6928 = !DILocation(line: 4066, column: 7, scope: !6921)
!6929 = !DILocation(line: 4066, column: 15, scope: !6921)
!6930 = !DILocation(line: 4067, column: 17, scope: !6921)
!6931 = !DILocation(line: 4067, column: 20, scope: !6921)
!6932 = !DILocation(line: 4067, column: 28, scope: !6921)
!6933 = !DILocation(line: 4067, column: 4, scope: !6921)
!6934 = !DILocation(line: 4067, column: 7, scope: !6921)
!6935 = !DILocation(line: 4067, column: 15, scope: !6921)
!6936 = !DILocation(line: 4068, column: 3, scope: !6921)
!6937 = !DILocation(line: 4069, column: 2, scope: !6912)
!6938 = !DILocation(line: 4070, column: 11, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 4070, column: 11)
!6940 = !DILocation(line: 4070, column: 11, scope: !6907)
!6941 = !DILocation(line: 4071, column: 3, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6939, file: !3, line: 4070, column: 56)
!6943 = !DILocation(line: 4071, column: 6, scope: !6942)
!6944 = !DILocation(line: 4071, column: 14, scope: !6942)
!6945 = !DILocation(line: 4072, column: 3, scope: !6942)
!6946 = !DILocation(line: 4072, column: 6, scope: !6942)
!6947 = !DILocation(line: 4072, column: 14, scope: !6942)
!6948 = !DILocation(line: 4073, column: 3, scope: !6942)
!6949 = !DILocation(line: 4073, column: 6, scope: !6942)
!6950 = !DILocation(line: 4073, column: 14, scope: !6942)
!6951 = !DILocation(line: 4074, column: 2, scope: !6942)
!6952 = !DILocation(line: 4075, column: 11, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6939, file: !3, line: 4075, column: 11)
!6954 = !DILocation(line: 4075, column: 14, scope: !6953)
!6955 = !DILocation(line: 4075, column: 24, scope: !6953)
!6956 = !DILocation(line: 4075, column: 11, scope: !6939)
!6957 = !DILocation(line: 4076, column: 3, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6953, file: !3, line: 4075, column: 39)
!6959 = !DILocation(line: 4076, column: 6, scope: !6958)
!6960 = !DILocation(line: 4076, column: 14, scope: !6958)
!6961 = !DILocation(line: 4077, column: 16, scope: !6958)
!6962 = !DILocation(line: 4077, column: 36, scope: !6958)
!6963 = !DILocation(line: 4077, column: 3, scope: !6958)
!6964 = !DILocation(line: 4077, column: 6, scope: !6958)
!6965 = !DILocation(line: 4077, column: 14, scope: !6958)
!6966 = !DILocation(line: 4078, column: 16, scope: !6958)
!6967 = !DILocation(line: 4078, column: 3, scope: !6958)
!6968 = !DILocation(line: 4078, column: 6, scope: !6958)
!6969 = !DILocation(line: 4078, column: 14, scope: !6958)
!6970 = !DILocation(line: 4079, column: 2, scope: !6958)
!6971 = !DILocation(line: 4081, column: 3, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6953, file: !3, line: 4080, column: 7)
!6973 = !DILocation(line: 4081, column: 6, scope: !6972)
!6974 = !DILocation(line: 4081, column: 14, scope: !6972)
!6975 = !DILocation(line: 4082, column: 16, scope: !6972)
!6976 = !DILocation(line: 4082, column: 19, scope: !6972)
!6977 = !DILocation(line: 4082, column: 27, scope: !6972)
!6978 = !DILocation(line: 4082, column: 3, scope: !6972)
!6979 = !DILocation(line: 4082, column: 6, scope: !6972)
!6980 = !DILocation(line: 4082, column: 14, scope: !6972)
!6981 = !DILocation(line: 4085, column: 13, scope: !6863)
!6982 = !DILocation(line: 4085, column: 16, scope: !6863)
!6983 = !DILocation(line: 4085, column: 20, scope: !6863)
!6984 = !DILocation(line: 4085, column: 29, scope: !6863)
!6985 = !DILocation(line: 4085, column: 32, scope: !6863)
!6986 = !DILocation(line: 4085, column: 2, scope: !6863)
!6987 = !DILocation(line: 4086, column: 20, scope: !6863)
!6988 = !DILocation(line: 4086, column: 23, scope: !6863)
!6989 = !DILocation(line: 4086, column: 30, scope: !6863)
!6990 = !DILocation(line: 4086, column: 35, scope: !6863)
!6991 = !DILocation(line: 4086, column: 2, scope: !6863)
!6992 = !DILocation(line: 4086, column: 5, scope: !6863)
!6993 = !DILocation(line: 4086, column: 9, scope: !6863)
!6994 = !DILocation(line: 4086, column: 18, scope: !6863)
!6995 = !DILocation(line: 4087, column: 6, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6863, file: !3, line: 4087, column: 6)
!6997 = !DILocation(line: 4087, column: 9, scope: !6996)
!6998 = !DILocation(line: 4087, column: 19, scope: !6996)
!6999 = !DILocation(line: 4087, column: 6, scope: !6863)
!7000 = !DILocation(line: 4089, column: 3, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 4087, column: 36)
!7002 = !DILocation(line: 4089, column: 6, scope: !7001)
!7003 = !DILocation(line: 4089, column: 10, scope: !7001)
!7004 = !DILocation(line: 4089, column: 23, scope: !7001)
!7005 = !DILocation(line: 4090, column: 3, scope: !7001)
!7006 = !DILocation(line: 4090, column: 6, scope: !7001)
!7007 = !DILocation(line: 4090, column: 10, scope: !7001)
!7008 = !DILocation(line: 4090, column: 23, scope: !7001)
!7009 = !DILocation(line: 4091, column: 3, scope: !7001)
!7010 = !DILocation(line: 4091, column: 6, scope: !7001)
!7011 = !DILocation(line: 4091, column: 10, scope: !7001)
!7012 = !DILocation(line: 4091, column: 23, scope: !7001)
!7013 = !DILocation(line: 4092, column: 2, scope: !7001)
!7014 = !DILocation(line: 4095, column: 3, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 4093, column: 7)
!7016 = !DILocation(line: 4095, column: 6, scope: !7015)
!7017 = !DILocation(line: 4095, column: 10, scope: !7015)
!7018 = !DILocation(line: 4095, column: 23, scope: !7015)
!7019 = !DILocation(line: 4096, column: 3, scope: !7015)
!7020 = !DILocation(line: 4096, column: 6, scope: !7015)
!7021 = !DILocation(line: 4096, column: 10, scope: !7015)
!7022 = !DILocation(line: 4096, column: 23, scope: !7015)
!7023 = !DILocation(line: 4097, column: 3, scope: !7015)
!7024 = !DILocation(line: 4097, column: 6, scope: !7015)
!7025 = !DILocation(line: 4097, column: 10, scope: !7015)
!7026 = !DILocation(line: 4097, column: 23, scope: !7015)
!7027 = !DILocation(line: 4099, column: 1, scope: !6863)
!7028 = distinct !DISubprogram(name: "initEdgeSlide", scope: !3, file: !3, line: 6013, type: !4434, scopeLine: 6014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!7029 = !DILocalVariable(name: "t", arg: 1, scope: !7028, file: !3, line: 6013, type: !3841)
!7030 = !DILocation(line: 6013, column: 38, scope: !7028)
!7031 = !DILocalVariable(name: "sld", scope: !7028, file: !3, line: 6015, type: !3574)
!7032 = !DILocation(line: 6015, column: 17, scope: !7028)
!7033 = !DILocation(line: 6017, column: 2, scope: !7028)
!7034 = !DILocation(line: 6017, column: 5, scope: !7028)
!7035 = !DILocation(line: 6017, column: 10, scope: !7028)
!7036 = !DILocation(line: 6018, column: 2, scope: !7028)
!7037 = !DILocation(line: 6018, column: 5, scope: !7028)
!7038 = !DILocation(line: 6018, column: 15, scope: !7028)
!7039 = !DILocation(line: 6019, column: 2, scope: !7028)
!7040 = !DILocation(line: 6019, column: 5, scope: !7028)
!7041 = !DILocation(line: 6019, column: 17, scope: !7028)
!7042 = !DILocation(line: 6021, column: 28, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 6021, column: 6)
!7044 = !DILocation(line: 6021, column: 7, scope: !7043)
!7045 = !DILocation(line: 6021, column: 6, scope: !7028)
!7046 = !DILocation(line: 6022, column: 3, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 6021, column: 32)
!7048 = !DILocation(line: 6022, column: 6, scope: !7047)
!7049 = !DILocation(line: 6022, column: 12, scope: !7047)
!7050 = !DILocation(line: 6023, column: 3, scope: !7047)
!7051 = !DILocation(line: 6026, column: 8, scope: !7028)
!7052 = !DILocation(line: 6026, column: 11, scope: !7028)
!7053 = !DILocation(line: 6026, column: 6, scope: !7028)
!7054 = !DILocation(line: 6028, column: 7, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 6028, column: 6)
!7056 = !DILocation(line: 6028, column: 6, scope: !7028)
!7057 = !DILocation(line: 6029, column: 3, scope: !7055)
!7058 = !DILocation(line: 6031, column: 2, scope: !7028)
!7059 = !DILocation(line: 6031, column: 5, scope: !7028)
!7060 = !DILocation(line: 6031, column: 16, scope: !7028)
!7061 = !DILocation(line: 6034, column: 18, scope: !7028)
!7062 = !DILocation(line: 6034, column: 22, scope: !7028)
!7063 = !DILocation(line: 6034, column: 25, scope: !7028)
!7064 = !DILocation(line: 6034, column: 32, scope: !7028)
!7065 = !DILocation(line: 6034, column: 37, scope: !7028)
!7066 = !DILocation(line: 6034, column: 47, scope: !7028)
!7067 = !DILocation(line: 6034, column: 52, scope: !7028)
!7068 = !DILocation(line: 6034, column: 2, scope: !7028)
!7069 = !DILocation(line: 6035, column: 21, scope: !7028)
!7070 = !DILocation(line: 6035, column: 25, scope: !7028)
!7071 = !DILocation(line: 6035, column: 28, scope: !7028)
!7072 = !DILocation(line: 6035, column: 2, scope: !7028)
!7073 = !DILocation(line: 6037, column: 2, scope: !7028)
!7074 = !DILocation(line: 6037, column: 5, scope: !7028)
!7075 = !DILocation(line: 6037, column: 13, scope: !7028)
!7076 = !DILocation(line: 6038, column: 2, scope: !7028)
!7077 = !DILocation(line: 6038, column: 5, scope: !7028)
!7078 = !DILocation(line: 6038, column: 9, scope: !7028)
!7079 = !DILocation(line: 6038, column: 17, scope: !7028)
!7080 = !DILocation(line: 6039, column: 2, scope: !7028)
!7081 = !DILocation(line: 6039, column: 5, scope: !7028)
!7082 = !DILocation(line: 6039, column: 13, scope: !7028)
!7083 = !DILocation(line: 6040, column: 2, scope: !7028)
!7084 = !DILocation(line: 6040, column: 5, scope: !7028)
!7085 = !DILocation(line: 6040, column: 13, scope: !7028)
!7086 = !DILocation(line: 6041, column: 15, scope: !7028)
!7087 = !DILocation(line: 6041, column: 18, scope: !7028)
!7088 = !DILocation(line: 6041, column: 26, scope: !7028)
!7089 = !DILocation(line: 6041, column: 2, scope: !7028)
!7090 = !DILocation(line: 6041, column: 5, scope: !7028)
!7091 = !DILocation(line: 6041, column: 13, scope: !7028)
!7092 = !DILocation(line: 6043, column: 13, scope: !7028)
!7093 = !DILocation(line: 6043, column: 16, scope: !7028)
!7094 = !DILocation(line: 6043, column: 20, scope: !7028)
!7095 = !DILocation(line: 6043, column: 29, scope: !7028)
!7096 = !DILocation(line: 6043, column: 32, scope: !7028)
!7097 = !DILocation(line: 6043, column: 2, scope: !7028)
!7098 = !DILocation(line: 6044, column: 20, scope: !7028)
!7099 = !DILocation(line: 6044, column: 23, scope: !7028)
!7100 = !DILocation(line: 6044, column: 30, scope: !7028)
!7101 = !DILocation(line: 6044, column: 35, scope: !7028)
!7102 = !DILocation(line: 6044, column: 2, scope: !7028)
!7103 = !DILocation(line: 6044, column: 5, scope: !7028)
!7104 = !DILocation(line: 6044, column: 9, scope: !7028)
!7105 = !DILocation(line: 6044, column: 18, scope: !7028)
!7106 = !DILocation(line: 6045, column: 2, scope: !7028)
!7107 = !DILocation(line: 6045, column: 5, scope: !7028)
!7108 = !DILocation(line: 6045, column: 9, scope: !7028)
!7109 = !DILocation(line: 6045, column: 22, scope: !7028)
!7110 = !DILocation(line: 6047, column: 2, scope: !7028)
!7111 = !DILocation(line: 6047, column: 5, scope: !7028)
!7112 = !DILocation(line: 6047, column: 10, scope: !7028)
!7113 = !DILocation(line: 6048, column: 1, scope: !7028)
!7114 = distinct !DISubprogram(name: "initVertSlide", scope: !3, file: !3, line: 6531, type: !4434, scopeLine: 6532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!7115 = !DILocalVariable(name: "t", arg: 1, scope: !7114, file: !3, line: 6531, type: !3841)
!7116 = !DILocation(line: 6531, column: 38, scope: !7114)
!7117 = !DILocalVariable(name: "sld", scope: !7114, file: !3, line: 6533, type: !3817)
!7118 = !DILocation(line: 6533, column: 17, scope: !7114)
!7119 = !DILocation(line: 6535, column: 2, scope: !7114)
!7120 = !DILocation(line: 6535, column: 5, scope: !7114)
!7121 = !DILocation(line: 6535, column: 10, scope: !7114)
!7122 = !DILocation(line: 6536, column: 2, scope: !7114)
!7123 = !DILocation(line: 6536, column: 5, scope: !7114)
!7124 = !DILocation(line: 6536, column: 15, scope: !7114)
!7125 = !DILocation(line: 6537, column: 2, scope: !7114)
!7126 = !DILocation(line: 6537, column: 5, scope: !7114)
!7127 = !DILocation(line: 6537, column: 17, scope: !7114)
!7128 = !DILocation(line: 6539, column: 28, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 6539, column: 6)
!7130 = !DILocation(line: 6539, column: 7, scope: !7129)
!7131 = !DILocation(line: 6539, column: 6, scope: !7114)
!7132 = !DILocation(line: 6540, column: 3, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 6539, column: 32)
!7134 = !DILocation(line: 6540, column: 6, scope: !7133)
!7135 = !DILocation(line: 6540, column: 12, scope: !7133)
!7136 = !DILocation(line: 6541, column: 3, scope: !7133)
!7137 = !DILocation(line: 6544, column: 8, scope: !7114)
!7138 = !DILocation(line: 6544, column: 11, scope: !7114)
!7139 = !DILocation(line: 6544, column: 6, scope: !7114)
!7140 = !DILocation(line: 6546, column: 7, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 6546, column: 6)
!7142 = !DILocation(line: 6546, column: 6, scope: !7114)
!7143 = !DILocation(line: 6547, column: 3, scope: !7141)
!7144 = !DILocation(line: 6549, column: 2, scope: !7114)
!7145 = !DILocation(line: 6549, column: 5, scope: !7114)
!7146 = !DILocation(line: 6549, column: 16, scope: !7114)
!7147 = !DILocation(line: 6552, column: 28, scope: !7114)
!7148 = !DILocation(line: 6552, column: 2, scope: !7114)
!7149 = !DILocation(line: 6553, column: 21, scope: !7114)
!7150 = !DILocation(line: 6553, column: 25, scope: !7114)
!7151 = !DILocation(line: 6553, column: 28, scope: !7114)
!7152 = !DILocation(line: 6553, column: 2, scope: !7114)
!7153 = !DILocation(line: 6555, column: 2, scope: !7114)
!7154 = !DILocation(line: 6555, column: 5, scope: !7114)
!7155 = !DILocation(line: 6555, column: 13, scope: !7114)
!7156 = !DILocation(line: 6556, column: 2, scope: !7114)
!7157 = !DILocation(line: 6556, column: 5, scope: !7114)
!7158 = !DILocation(line: 6556, column: 9, scope: !7114)
!7159 = !DILocation(line: 6556, column: 17, scope: !7114)
!7160 = !DILocation(line: 6557, column: 2, scope: !7114)
!7161 = !DILocation(line: 6557, column: 5, scope: !7114)
!7162 = !DILocation(line: 6557, column: 13, scope: !7114)
!7163 = !DILocation(line: 6558, column: 2, scope: !7114)
!7164 = !DILocation(line: 6558, column: 5, scope: !7114)
!7165 = !DILocation(line: 6558, column: 13, scope: !7114)
!7166 = !DILocation(line: 6559, column: 15, scope: !7114)
!7167 = !DILocation(line: 6559, column: 18, scope: !7114)
!7168 = !DILocation(line: 6559, column: 26, scope: !7114)
!7169 = !DILocation(line: 6559, column: 2, scope: !7114)
!7170 = !DILocation(line: 6559, column: 5, scope: !7114)
!7171 = !DILocation(line: 6559, column: 13, scope: !7114)
!7172 = !DILocation(line: 6561, column: 13, scope: !7114)
!7173 = !DILocation(line: 6561, column: 16, scope: !7114)
!7174 = !DILocation(line: 6561, column: 20, scope: !7114)
!7175 = !DILocation(line: 6561, column: 29, scope: !7114)
!7176 = !DILocation(line: 6561, column: 32, scope: !7114)
!7177 = !DILocation(line: 6561, column: 2, scope: !7114)
!7178 = !DILocation(line: 6562, column: 20, scope: !7114)
!7179 = !DILocation(line: 6562, column: 23, scope: !7114)
!7180 = !DILocation(line: 6562, column: 30, scope: !7114)
!7181 = !DILocation(line: 6562, column: 35, scope: !7114)
!7182 = !DILocation(line: 6562, column: 2, scope: !7114)
!7183 = !DILocation(line: 6562, column: 5, scope: !7114)
!7184 = !DILocation(line: 6562, column: 9, scope: !7114)
!7185 = !DILocation(line: 6562, column: 18, scope: !7114)
!7186 = !DILocation(line: 6563, column: 2, scope: !7114)
!7187 = !DILocation(line: 6563, column: 5, scope: !7114)
!7188 = !DILocation(line: 6563, column: 9, scope: !7114)
!7189 = !DILocation(line: 6563, column: 22, scope: !7114)
!7190 = !DILocation(line: 6565, column: 2, scope: !7114)
!7191 = !DILocation(line: 6565, column: 5, scope: !7114)
!7192 = !DILocation(line: 6565, column: 10, scope: !7114)
!7193 = !DILocation(line: 6566, column: 1, scope: !7114)
!7194 = distinct !DISubprogram(name: "initTrackball", scope: !3, file: !3, line: 3931, type: !4434, scopeLine: 3932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!7195 = !DILocalVariable(name: "t", arg: 1, scope: !7194, file: !3, line: 3931, type: !3841)
!7196 = !DILocation(line: 3931, column: 38, scope: !7194)
!7197 = !DILocation(line: 3933, column: 2, scope: !7194)
!7198 = !DILocation(line: 3933, column: 5, scope: !7194)
!7199 = !DILocation(line: 3933, column: 10, scope: !7194)
!7200 = !DILocation(line: 3934, column: 2, scope: !7194)
!7201 = !DILocation(line: 3934, column: 5, scope: !7194)
!7202 = !DILocation(line: 3934, column: 15, scope: !7194)
!7203 = !DILocation(line: 3936, column: 21, scope: !7194)
!7204 = !DILocation(line: 3936, column: 25, scope: !7194)
!7205 = !DILocation(line: 3936, column: 28, scope: !7194)
!7206 = !DILocation(line: 3936, column: 2, scope: !7194)
!7207 = !DILocation(line: 3938, column: 2, scope: !7194)
!7208 = !DILocation(line: 3938, column: 5, scope: !7194)
!7209 = !DILocation(line: 3938, column: 13, scope: !7194)
!7210 = !DILocation(line: 3939, column: 2, scope: !7194)
!7211 = !DILocation(line: 3939, column: 5, scope: !7194)
!7212 = !DILocation(line: 3939, column: 9, scope: !7194)
!7213 = !DILocation(line: 3939, column: 17, scope: !7194)
!7214 = !DILocation(line: 3940, column: 2, scope: !7194)
!7215 = !DILocation(line: 3940, column: 5, scope: !7194)
!7216 = !DILocation(line: 3940, column: 13, scope: !7194)
!7217 = !DILocation(line: 3941, column: 2, scope: !7194)
!7218 = !DILocation(line: 3941, column: 5, scope: !7194)
!7219 = !DILocation(line: 3941, column: 13, scope: !7194)
!7220 = !DILocation(line: 3942, column: 2, scope: !7194)
!7221 = !DILocation(line: 3942, column: 5, scope: !7194)
!7222 = !DILocation(line: 3942, column: 13, scope: !7194)
!7223 = !DILocation(line: 3944, column: 13, scope: !7194)
!7224 = !DILocation(line: 3944, column: 16, scope: !7194)
!7225 = !DILocation(line: 3944, column: 20, scope: !7194)
!7226 = !DILocation(line: 3944, column: 29, scope: !7194)
!7227 = !DILocation(line: 3944, column: 32, scope: !7194)
!7228 = !DILocation(line: 3944, column: 2, scope: !7194)
!7229 = !DILocation(line: 3945, column: 20, scope: !7194)
!7230 = !DILocation(line: 3945, column: 23, scope: !7194)
!7231 = !DILocation(line: 3945, column: 30, scope: !7194)
!7232 = !DILocation(line: 3945, column: 35, scope: !7194)
!7233 = !DILocation(line: 3945, column: 2, scope: !7194)
!7234 = !DILocation(line: 3945, column: 5, scope: !7194)
!7235 = !DILocation(line: 3945, column: 9, scope: !7194)
!7236 = !DILocation(line: 3945, column: 18, scope: !7194)
!7237 = !DILocation(line: 3946, column: 29, scope: !7194)
!7238 = !DILocation(line: 3946, column: 32, scope: !7194)
!7239 = !DILocation(line: 3946, column: 39, scope: !7194)
!7240 = !DILocation(line: 3946, column: 44, scope: !7194)
!7241 = !DILocation(line: 3946, column: 60, scope: !7194)
!7242 = !DILocation(line: 3946, column: 28, scope: !7194)
!7243 = !DILocation(line: 3946, column: 2, scope: !7194)
!7244 = !DILocation(line: 3946, column: 5, scope: !7194)
!7245 = !DILocation(line: 3946, column: 9, scope: !7194)
!7246 = !DILocation(line: 3946, column: 26, scope: !7194)
!7247 = !DILocation(line: 3947, column: 2, scope: !7194)
!7248 = !DILocation(line: 3947, column: 5, scope: !7194)
!7249 = !DILocation(line: 3947, column: 9, scope: !7194)
!7250 = !DILocation(line: 3947, column: 22, scope: !7194)
!7251 = !DILocation(line: 3948, column: 2, scope: !7194)
!7252 = !DILocation(line: 3948, column: 5, scope: !7194)
!7253 = !DILocation(line: 3948, column: 9, scope: !7194)
!7254 = !DILocation(line: 3948, column: 22, scope: !7194)
!7255 = !DILocation(line: 3950, column: 2, scope: !7194)
!7256 = !DILocation(line: 3950, column: 5, scope: !7194)
!7257 = !DILocation(line: 3950, column: 10, scope: !7194)
!7258 = !DILocation(line: 3951, column: 1, scope: !7194)
!7259 = distinct !DISubprogram(name: "initRotation", scope: !3, file: !3, line: 3587, type: !4434, scopeLine: 3588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!7260 = !DILocalVariable(name: "t", arg: 1, scope: !7259, file: !3, line: 3587, type: !3841)
!7261 = !DILocation(line: 3587, column: 37, scope: !7259)
!7262 = !DILocation(line: 3589, column: 2, scope: !7259)
!7263 = !DILocation(line: 3589, column: 5, scope: !7259)
!7264 = !DILocation(line: 3589, column: 10, scope: !7259)
!7265 = !DILocation(line: 3590, column: 2, scope: !7259)
!7266 = !DILocation(line: 3590, column: 5, scope: !7259)
!7267 = !DILocation(line: 3590, column: 15, scope: !7259)
!7268 = !DILocation(line: 3592, column: 19, scope: !7259)
!7269 = !DILocation(line: 3592, column: 22, scope: !7259)
!7270 = !DILocation(line: 3592, column: 2, scope: !7259)
!7271 = !DILocation(line: 3593, column: 21, scope: !7259)
!7272 = !DILocation(line: 3593, column: 25, scope: !7259)
!7273 = !DILocation(line: 3593, column: 28, scope: !7259)
!7274 = !DILocation(line: 3593, column: 2, scope: !7259)
!7275 = !DILocation(line: 3595, column: 2, scope: !7259)
!7276 = !DILocation(line: 3595, column: 5, scope: !7259)
!7277 = !DILocation(line: 3595, column: 13, scope: !7259)
!7278 = !DILocation(line: 3596, column: 2, scope: !7259)
!7279 = !DILocation(line: 3596, column: 5, scope: !7259)
!7280 = !DILocation(line: 3596, column: 9, scope: !7259)
!7281 = !DILocation(line: 3596, column: 17, scope: !7259)
!7282 = !DILocation(line: 3597, column: 2, scope: !7259)
!7283 = !DILocation(line: 3597, column: 5, scope: !7259)
!7284 = !DILocation(line: 3597, column: 13, scope: !7259)
!7285 = !DILocation(line: 3598, column: 2, scope: !7259)
!7286 = !DILocation(line: 3598, column: 5, scope: !7259)
!7287 = !DILocation(line: 3598, column: 13, scope: !7259)
!7288 = !DILocation(line: 3599, column: 2, scope: !7259)
!7289 = !DILocation(line: 3599, column: 5, scope: !7259)
!7290 = !DILocation(line: 3599, column: 13, scope: !7259)
!7291 = !DILocation(line: 3601, column: 13, scope: !7259)
!7292 = !DILocation(line: 3601, column: 16, scope: !7259)
!7293 = !DILocation(line: 3601, column: 20, scope: !7259)
!7294 = !DILocation(line: 3601, column: 29, scope: !7259)
!7295 = !DILocation(line: 3601, column: 32, scope: !7259)
!7296 = !DILocation(line: 3601, column: 2, scope: !7259)
!7297 = !DILocation(line: 3602, column: 20, scope: !7259)
!7298 = !DILocation(line: 3602, column: 23, scope: !7259)
!7299 = !DILocation(line: 3602, column: 30, scope: !7259)
!7300 = !DILocation(line: 3602, column: 35, scope: !7259)
!7301 = !DILocation(line: 3602, column: 2, scope: !7259)
!7302 = !DILocation(line: 3602, column: 5, scope: !7259)
!7303 = !DILocation(line: 3602, column: 9, scope: !7259)
!7304 = !DILocation(line: 3602, column: 18, scope: !7259)
!7305 = !DILocation(line: 3603, column: 29, scope: !7259)
!7306 = !DILocation(line: 3603, column: 32, scope: !7259)
!7307 = !DILocation(line: 3603, column: 39, scope: !7259)
!7308 = !DILocation(line: 3603, column: 44, scope: !7259)
!7309 = !DILocation(line: 3603, column: 60, scope: !7259)
!7310 = !DILocation(line: 3603, column: 28, scope: !7259)
!7311 = !DILocation(line: 3603, column: 2, scope: !7259)
!7312 = !DILocation(line: 3603, column: 5, scope: !7259)
!7313 = !DILocation(line: 3603, column: 9, scope: !7259)
!7314 = !DILocation(line: 3603, column: 26, scope: !7259)
!7315 = !DILocation(line: 3604, column: 2, scope: !7259)
!7316 = !DILocation(line: 3604, column: 5, scope: !7259)
!7317 = !DILocation(line: 3604, column: 9, scope: !7259)
!7318 = !DILocation(line: 3604, column: 22, scope: !7259)
!7319 = !DILocation(line: 3606, column: 6, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 3606, column: 6)
!7321 = !DILocation(line: 3606, column: 9, scope: !7320)
!7322 = !DILocation(line: 3606, column: 14, scope: !7320)
!7323 = !DILocation(line: 3606, column: 6, scope: !7259)
!7324 = !DILocation(line: 3607, column: 3, scope: !7320)
!7325 = !DILocation(line: 3607, column: 6, scope: !7320)
!7326 = !DILocation(line: 3607, column: 11, scope: !7320)
!7327 = !DILocation(line: 3609, column: 6, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 3609, column: 6)
!7329 = !DILocation(line: 3609, column: 9, scope: !7328)
!7330 = !DILocation(line: 3609, column: 17, scope: !7328)
!7331 = !DILocation(line: 3609, column: 6, scope: !7259)
!7332 = !DILocation(line: 3610, column: 3, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 3609, column: 36)
!7334 = !DILocation(line: 3610, column: 6, scope: !7333)
!7335 = !DILocation(line: 3610, column: 14, scope: !7333)
!7336 = !DILocation(line: 3611, column: 3, scope: !7333)
!7337 = !DILocation(line: 3611, column: 6, scope: !7333)
!7338 = !DILocation(line: 3611, column: 14, scope: !7333)
!7339 = !DILocation(line: 3612, column: 3, scope: !7333)
!7340 = !DILocation(line: 3612, column: 6, scope: !7333)
!7341 = !DILocation(line: 3612, column: 14, scope: !7333)
!7342 = !DILocation(line: 3613, column: 2, scope: !7333)
!7343 = !DILocation(line: 3615, column: 16, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 3614, column: 7)
!7345 = !DILocation(line: 3615, column: 19, scope: !7344)
!7346 = !DILocation(line: 3615, column: 25, scope: !7344)
!7347 = !DILocation(line: 3615, column: 28, scope: !7344)
!7348 = !DILocation(line: 3615, column: 3, scope: !7344)
!7349 = !DILocation(line: 3616, column: 16, scope: !7344)
!7350 = !DILocation(line: 3616, column: 19, scope: !7344)
!7351 = !DILocation(line: 3616, column: 3, scope: !7344)
!7352 = !DILocation(line: 3619, column: 13, scope: !7259)
!7353 = !DILocation(line: 3619, column: 16, scope: !7259)
!7354 = !DILocation(line: 3619, column: 27, scope: !7259)
!7355 = !DILocation(line: 3619, column: 30, scope: !7259)
!7356 = !DILocation(line: 3619, column: 2, scope: !7259)
!7357 = !DILocation(line: 3620, column: 1, scope: !7259)
!7358 = distinct !DISubprogram(name: "initResize", scope: !3, file: !3, line: 3084, type: !4434, scopeLine: 3085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!7359 = !DILocalVariable(name: "t", arg: 1, scope: !7358, file: !3, line: 3084, type: !3841)
!7360 = !DILocation(line: 3084, column: 35, scope: !7358)
!7361 = !DILocation(line: 3086, column: 2, scope: !7358)
!7362 = !DILocation(line: 3086, column: 5, scope: !7358)
!7363 = !DILocation(line: 3086, column: 10, scope: !7358)
!7364 = !DILocation(line: 3087, column: 2, scope: !7358)
!7365 = !DILocation(line: 3087, column: 5, scope: !7358)
!7366 = !DILocation(line: 3087, column: 15, scope: !7358)
!7367 = !DILocation(line: 3089, column: 21, scope: !7358)
!7368 = !DILocation(line: 3089, column: 25, scope: !7358)
!7369 = !DILocation(line: 3089, column: 28, scope: !7358)
!7370 = !DILocation(line: 3089, column: 2, scope: !7358)
!7371 = !DILocation(line: 3091, column: 2, scope: !7358)
!7372 = !DILocation(line: 3091, column: 5, scope: !7358)
!7373 = !DILocation(line: 3091, column: 10, scope: !7358)
!7374 = !DILocation(line: 3092, column: 2, scope: !7358)
!7375 = !DILocation(line: 3092, column: 5, scope: !7358)
!7376 = !DILocation(line: 3092, column: 9, scope: !7358)
!7377 = !DILocation(line: 3092, column: 21, scope: !7358)
!7378 = !DILocation(line: 3093, column: 2, scope: !7358)
!7379 = !DILocation(line: 3093, column: 5, scope: !7358)
!7380 = !DILocation(line: 3093, column: 9, scope: !7358)
!7381 = !DILocation(line: 3093, column: 21, scope: !7358)
!7382 = !DILocation(line: 3094, column: 2, scope: !7358)
!7383 = !DILocation(line: 3094, column: 5, scope: !7358)
!7384 = !DILocation(line: 3094, column: 9, scope: !7358)
!7385 = !DILocation(line: 3094, column: 21, scope: !7358)
!7386 = !DILocation(line: 3095, column: 2, scope: !7358)
!7387 = !DILocation(line: 3095, column: 5, scope: !7358)
!7388 = !DILocation(line: 3095, column: 9, scope: !7358)
!7389 = !DILocation(line: 3095, column: 14, scope: !7358)
!7390 = !DILocation(line: 3096, column: 7, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 3096, column: 6)
!7392 = !DILocation(line: 3096, column: 10, scope: !7391)
!7393 = !DILocation(line: 3096, column: 6, scope: !7358)
!7394 = !DILocation(line: 3097, column: 3, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7391, file: !3, line: 3096, column: 18)
!7396 = !DILocation(line: 3097, column: 6, scope: !7395)
!7397 = !DILocation(line: 3097, column: 11, scope: !7395)
!7398 = !DILocation(line: 3103, column: 2, scope: !7395)
!7399 = !DILocation(line: 3105, column: 2, scope: !7358)
!7400 = !DILocation(line: 3105, column: 5, scope: !7358)
!7401 = !DILocation(line: 3105, column: 13, scope: !7358)
!7402 = !DILocation(line: 3106, column: 2, scope: !7358)
!7403 = !DILocation(line: 3106, column: 5, scope: !7358)
!7404 = !DILocation(line: 3106, column: 9, scope: !7358)
!7405 = !DILocation(line: 3106, column: 17, scope: !7358)
!7406 = !DILocation(line: 3107, column: 2, scope: !7358)
!7407 = !DILocation(line: 3107, column: 5, scope: !7358)
!7408 = !DILocation(line: 3107, column: 13, scope: !7358)
!7409 = !DILocation(line: 3108, column: 2, scope: !7358)
!7410 = !DILocation(line: 3108, column: 5, scope: !7358)
!7411 = !DILocation(line: 3108, column: 13, scope: !7358)
!7412 = !DILocation(line: 3109, column: 15, scope: !7358)
!7413 = !DILocation(line: 3109, column: 18, scope: !7358)
!7414 = !DILocation(line: 3109, column: 26, scope: !7358)
!7415 = !DILocation(line: 3109, column: 2, scope: !7358)
!7416 = !DILocation(line: 3109, column: 5, scope: !7358)
!7417 = !DILocation(line: 3109, column: 13, scope: !7358)
!7418 = !DILocation(line: 3111, column: 13, scope: !7358)
!7419 = !DILocation(line: 3111, column: 16, scope: !7358)
!7420 = !DILocation(line: 3111, column: 20, scope: !7358)
!7421 = !DILocation(line: 3111, column: 29, scope: !7358)
!7422 = !DILocation(line: 3111, column: 32, scope: !7358)
!7423 = !DILocation(line: 3111, column: 2, scope: !7358)
!7424 = !DILocation(line: 3112, column: 20, scope: !7358)
!7425 = !DILocation(line: 3112, column: 23, scope: !7358)
!7426 = !DILocation(line: 3112, column: 30, scope: !7358)
!7427 = !DILocation(line: 3112, column: 35, scope: !7358)
!7428 = !DILocation(line: 3112, column: 2, scope: !7358)
!7429 = !DILocation(line: 3112, column: 5, scope: !7358)
!7430 = !DILocation(line: 3112, column: 9, scope: !7358)
!7431 = !DILocation(line: 3112, column: 18, scope: !7358)
!7432 = !DILocation(line: 3113, column: 2, scope: !7358)
!7433 = !DILocation(line: 3113, column: 5, scope: !7358)
!7434 = !DILocation(line: 3113, column: 9, scope: !7358)
!7435 = !DILocation(line: 3113, column: 22, scope: !7358)
!7436 = !DILocation(line: 3114, column: 2, scope: !7358)
!7437 = !DILocation(line: 3114, column: 5, scope: !7358)
!7438 = !DILocation(line: 3114, column: 9, scope: !7358)
!7439 = !DILocation(line: 3114, column: 22, scope: !7358)
!7440 = !DILocation(line: 3115, column: 2, scope: !7358)
!7441 = !DILocation(line: 3115, column: 5, scope: !7358)
!7442 = !DILocation(line: 3115, column: 9, scope: !7358)
!7443 = !DILocation(line: 3115, column: 22, scope: !7358)
!7444 = !DILocation(line: 3116, column: 1, scope: !7358)
!7445 = distinct !DISubprogram(name: "transform_event_xyz_constraint", scope: !3, file: !3, line: 889, type: !7446, scopeLine: 890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!7446 = !DISubroutineType(types: !7447)
!7447 = !{null, !3841, !27, !23}
!7448 = !DILocalVariable(name: "t", arg: 1, scope: !7445, file: !3, line: 889, type: !3841)
!7449 = !DILocation(line: 889, column: 55, scope: !7445)
!7450 = !DILocalVariable(name: "key_type", arg: 2, scope: !7445, file: !3, line: 889, type: !27)
!7451 = !DILocation(line: 889, column: 64, scope: !7445)
!7452 = !DILocalVariable(name: "cmode", arg: 3, scope: !7445, file: !3, line: 889, type: !23)
!7453 = !DILocation(line: 889, column: 79, scope: !7445)
!7454 = !DILocation(line: 891, column: 8, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 891, column: 6)
!7456 = !DILocation(line: 891, column: 11, scope: !7455)
!7457 = !DILocation(line: 891, column: 16, scope: !7455)
!7458 = !DILocation(line: 891, column: 6, scope: !7445)
!7459 = !DILocalVariable(name: "constraint_axis", scope: !7460, file: !3, line: 892, type: !35)
!7460 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 891, column: 36)
!7461 = !DILocation(line: 892, column: 7, scope: !7460)
!7462 = !DILocalVariable(name: "constraint_plane", scope: !7460, file: !3, line: 892, type: !35)
!7463 = !DILocation(line: 892, column: 24, scope: !7460)
!7464 = !DILocalVariable(name: "edit_2d", scope: !7460, file: !3, line: 893, type: !35)
!7465 = !DILocation(line: 893, column: 7, scope: !7460)
!7466 = !DILocation(line: 893, column: 18, scope: !7460)
!7467 = !DILocation(line: 893, column: 21, scope: !7460)
!7468 = !DILocation(line: 893, column: 26, scope: !7460)
!7469 = !DILocalVariable(name: "msg1", scope: !7460, file: !3, line: 894, type: !3434)
!7470 = !DILocation(line: 894, column: 15, scope: !7460)
!7471 = !DILocalVariable(name: "msg2", scope: !7460, file: !3, line: 894, type: !3434)
!7472 = !DILocation(line: 894, column: 27, scope: !7460)
!7473 = !DILocalVariable(name: "msg3", scope: !7460, file: !3, line: 894, type: !3434)
!7474 = !DILocation(line: 894, column: 39, scope: !7460)
!7475 = !DILocalVariable(name: "axis", scope: !7460, file: !3, line: 895, type: !23)
!7476 = !DILocation(line: 895, column: 8, scope: !7460)
!7477 = !DILocation(line: 898, column: 11, scope: !7460)
!7478 = !DILocation(line: 898, column: 3, scope: !7460)
!7479 = !DILocation(line: 900, column: 10, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7460, file: !3, line: 898, column: 21)
!7481 = !DILocation(line: 901, column: 10, scope: !7480)
!7482 = !DILocation(line: 902, column: 10, scope: !7480)
!7483 = !DILocation(line: 903, column: 10, scope: !7480)
!7484 = !DILocation(line: 904, column: 21, scope: !7480)
!7485 = !DILocation(line: 905, column: 5, scope: !7480)
!7486 = !DILocation(line: 907, column: 10, scope: !7480)
!7487 = !DILocation(line: 908, column: 10, scope: !7480)
!7488 = !DILocation(line: 909, column: 10, scope: !7480)
!7489 = !DILocation(line: 910, column: 10, scope: !7480)
!7490 = !DILocation(line: 911, column: 21, scope: !7480)
!7491 = !DILocation(line: 912, column: 5, scope: !7480)
!7492 = !DILocation(line: 914, column: 10, scope: !7480)
!7493 = !DILocation(line: 915, column: 10, scope: !7480)
!7494 = !DILocation(line: 916, column: 10, scope: !7480)
!7495 = !DILocation(line: 917, column: 10, scope: !7480)
!7496 = !DILocation(line: 918, column: 21, scope: !7480)
!7497 = !DILocation(line: 919, column: 5, scope: !7480)
!7498 = !DILocation(line: 922, column: 5, scope: !7480)
!7499 = !DILocation(line: 924, column: 63, scope: !7460)
!7500 = !DILocation(line: 924, column: 62, scope: !7460)
!7501 = !DILocation(line: 924, column: 59, scope: !7460)
!7502 = !DILocation(line: 924, column: 20, scope: !7460)
!7503 = !DILocation(line: 926, column: 7, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7460, file: !3, line: 926, column: 7)
!7505 = !DILocation(line: 926, column: 15, scope: !7504)
!7506 = !DILocation(line: 926, column: 19, scope: !7504)
!7507 = !DILocation(line: 926, column: 28, scope: !7504)
!7508 = !DILocation(line: 926, column: 7, scope: !7460)
!7509 = !DILocation(line: 927, column: 8, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7511, file: !3, line: 927, column: 8)
!7511 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 926, column: 38)
!7512 = !DILocation(line: 927, column: 17, scope: !7510)
!7513 = !DILocation(line: 927, column: 14, scope: !7510)
!7514 = !DILocation(line: 927, column: 8, scope: !7511)
!7515 = !DILocation(line: 928, column: 20, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7510, file: !3, line: 927, column: 23)
!7517 = !DILocation(line: 928, column: 5, scope: !7516)
!7518 = !DILocation(line: 929, column: 4, scope: !7516)
!7519 = !DILocation(line: 931, column: 23, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7510, file: !3, line: 930, column: 9)
!7521 = !DILocation(line: 931, column: 44, scope: !7520)
!7522 = !DILocation(line: 931, column: 61, scope: !7520)
!7523 = !DILocation(line: 931, column: 5, scope: !7520)
!7524 = !DILocation(line: 933, column: 3, scope: !7511)
!7525 = !DILocation(line: 934, column: 13, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 934, column: 12)
!7527 = !DILocation(line: 934, column: 12, scope: !7504)
!7528 = !DILocation(line: 935, column: 8, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7530, file: !3, line: 935, column: 8)
!7530 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 934, column: 22)
!7531 = !DILocation(line: 935, column: 17, scope: !7529)
!7532 = !DILocation(line: 935, column: 14, scope: !7529)
!7533 = !DILocation(line: 935, column: 8, scope: !7530)
!7534 = !DILocation(line: 936, column: 9, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 936, column: 9)
!7536 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 935, column: 23)
!7537 = !DILocation(line: 936, column: 12, scope: !7535)
!7538 = !DILocation(line: 936, column: 16, scope: !7535)
!7539 = !DILocation(line: 936, column: 28, scope: !7535)
!7540 = !DILocation(line: 936, column: 9, scope: !7536)
!7541 = !DILocation(line: 937, column: 21, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 936, column: 49)
!7543 = !DILocation(line: 937, column: 6, scope: !7542)
!7544 = !DILocation(line: 938, column: 5, scope: !7542)
!7545 = !DILocalVariable(name: "orientation", scope: !7546, file: !3, line: 940, type: !27)
!7546 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 939, column: 10)
!7547 = !DILocation(line: 940, column: 12, scope: !7546)
!7548 = !DILocation(line: 940, column: 27, scope: !7546)
!7549 = !DILocation(line: 940, column: 30, scope: !7546)
!7550 = !DILocation(line: 940, column: 50, scope: !7546)
!7551 = !DILocation(line: 941, column: 27, scope: !7546)
!7552 = !DILocation(line: 941, column: 30, scope: !7546)
!7553 = !DILocation(line: 940, column: 26, scope: !7546)
!7554 = !DILocation(line: 942, column: 12, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 942, column: 10)
!7556 = !DILocation(line: 942, column: 15, scope: !7555)
!7557 = !DILocation(line: 942, column: 25, scope: !7555)
!7558 = !DILocation(line: 942, column: 10, scope: !7546)
!7559 = !DILocation(line: 943, column: 25, scope: !7555)
!7560 = !DILocation(line: 943, column: 28, scope: !7555)
!7561 = !DILocation(line: 943, column: 41, scope: !7555)
!7562 = !DILocation(line: 943, column: 58, scope: !7555)
!7563 = !DILocation(line: 943, column: 7, scope: !7555)
!7564 = !DILocation(line: 944, column: 15, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7555, file: !3, line: 944, column: 15)
!7566 = !DILocation(line: 944, column: 18, scope: !7565)
!7567 = !DILocation(line: 944, column: 28, scope: !7565)
!7568 = !DILocation(line: 944, column: 15, scope: !7555)
!7569 = !DILocation(line: 945, column: 25, scope: !7565)
!7570 = !DILocation(line: 945, column: 28, scope: !7565)
!7571 = !DILocation(line: 945, column: 41, scope: !7565)
!7572 = !DILocation(line: 945, column: 59, scope: !7565)
!7573 = !DILocation(line: 945, column: 7, scope: !7565)
!7574 = !DILocation(line: 947, column: 4, scope: !7536)
!7575 = !DILocation(line: 949, column: 11, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7577, file: !3, line: 949, column: 9)
!7577 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 948, column: 9)
!7578 = !DILocation(line: 949, column: 14, scope: !7576)
!7579 = !DILocation(line: 949, column: 24, scope: !7576)
!7580 = !DILocation(line: 949, column: 9, scope: !7577)
!7581 = !DILocation(line: 950, column: 24, scope: !7576)
!7582 = !DILocation(line: 950, column: 45, scope: !7576)
!7583 = !DILocation(line: 950, column: 62, scope: !7576)
!7584 = !DILocation(line: 950, column: 6, scope: !7576)
!7585 = !DILocation(line: 951, column: 14, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7576, file: !3, line: 951, column: 14)
!7587 = !DILocation(line: 951, column: 17, scope: !7586)
!7588 = !DILocation(line: 951, column: 27, scope: !7586)
!7589 = !DILocation(line: 951, column: 14, scope: !7576)
!7590 = !DILocation(line: 952, column: 24, scope: !7586)
!7591 = !DILocation(line: 952, column: 45, scope: !7586)
!7592 = !DILocation(line: 952, column: 63, scope: !7586)
!7593 = !DILocation(line: 952, column: 6, scope: !7586)
!7594 = !DILocation(line: 954, column: 3, scope: !7530)
!7595 = !DILocation(line: 955, column: 3, scope: !7460)
!7596 = !DILocation(line: 955, column: 6, scope: !7460)
!7597 = !DILocation(line: 955, column: 13, scope: !7460)
!7598 = !DILocation(line: 956, column: 2, scope: !7460)
!7599 = !DILocation(line: 957, column: 1, scope: !7445)
!7600 = distinct !DISubprogram(name: "min_ff", scope: !7601, file: !7601, line: 202, type: !7602, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!7601 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7602 = !DISubroutineType(types: !7603)
!7603 = !{!1727, !1727, !1727}
!7604 = !DILocalVariable(name: "a", arg: 1, scope: !7600, file: !7601, line: 202, type: !1727)
!7605 = !DILocation(line: 202, column: 28, scope: !7600)
!7606 = !DILocalVariable(name: "b", arg: 2, scope: !7600, file: !7601, line: 202, type: !1727)
!7607 = !DILocation(line: 202, column: 37, scope: !7600)
!7608 = !DILocation(line: 204, column: 10, scope: !7600)
!7609 = !DILocation(line: 204, column: 14, scope: !7600)
!7610 = !DILocation(line: 204, column: 12, scope: !7600)
!7611 = !DILocation(line: 204, column: 9, scope: !7600)
!7612 = !DILocation(line: 204, column: 19, scope: !7600)
!7613 = !DILocation(line: 204, column: 23, scope: !7600)
!7614 = !DILocation(line: 204, column: 2, scope: !7600)
!7615 = distinct !DISubprogram(name: "view_editmove", scope: !3, file: !3, line: 697, type: !7616, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!7616 = !DISubroutineType(types: !7617)
!7617 = !{null, !2107}
!7618 = !DILocalVariable(name: "UNUSED_event", arg: 1, scope: !7615, file: !3, line: 697, type: !2107)
!7619 = !DILocation(line: 697, column: 42, scope: !7615)
!7620 = !DILocation(line: 776, column: 1, scope: !7615)
!7621 = distinct !DISubprogram(name: "calculateTransformCenter", scope: !3, file: !3, line: 1514, type: !7622, scopeLine: 1515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!7622 = !DISubroutineType(types: !7623)
!7623 = !{!2769, !4345, !35, !1773, !1773}
!7624 = !DILocalVariable(name: "C", arg: 1, scope: !7621, file: !3, line: 1514, type: !4345)
!7625 = !DILocation(line: 1514, column: 41, scope: !7621)
!7626 = !DILocalVariable(name: "centerMode", arg: 2, scope: !7621, file: !3, line: 1514, type: !35)
!7627 = !DILocation(line: 1514, column: 48, scope: !7621)
!7628 = !DILocalVariable(name: "cent3d", arg: 3, scope: !7621, file: !3, line: 1514, type: !1773)
!7629 = !DILocation(line: 1514, column: 66, scope: !7621)
!7630 = !DILocalVariable(name: "cent2d", arg: 4, scope: !7621, file: !3, line: 1514, type: !1773)
!7631 = !DILocation(line: 1514, column: 83, scope: !7621)
!7632 = !DILocalVariable(name: "t", scope: !7621, file: !3, line: 1516, type: !3841)
!7633 = !DILocation(line: 1516, column: 13, scope: !7621)
!7634 = !DILocation(line: 1516, column: 17, scope: !7621)
!7635 = !DILocalVariable(name: "success", scope: !7621, file: !3, line: 1517, type: !2769)
!7636 = !DILocation(line: 1517, column: 7, scope: !7621)
!7637 = !DILocation(line: 1519, column: 2, scope: !7621)
!7638 = !DILocation(line: 1519, column: 5, scope: !7621)
!7639 = !DILocation(line: 1519, column: 11, scope: !7621)
!7640 = !DILocation(line: 1522, column: 2, scope: !7621)
!7641 = !DILocation(line: 1522, column: 5, scope: !7621)
!7642 = !DILocation(line: 1522, column: 13, scope: !7621)
!7643 = !DILocation(line: 1524, column: 2, scope: !7621)
!7644 = !DILocation(line: 1524, column: 5, scope: !7621)
!7645 = !DILocation(line: 1524, column: 10, scope: !7621)
!7646 = !DILocation(line: 1526, column: 16, scope: !7621)
!7647 = !DILocation(line: 1526, column: 19, scope: !7621)
!7648 = !DILocation(line: 1526, column: 2, scope: !7621)
!7649 = !DILocation(line: 1529, column: 2, scope: !7621)
!7650 = !DILocation(line: 1529, column: 5, scope: !7621)
!7651 = !DILocation(line: 1529, column: 12, scope: !7621)
!7652 = !DILocation(line: 1531, column: 18, scope: !7621)
!7653 = !DILocation(line: 1531, column: 21, scope: !7621)
!7654 = !DILocation(line: 1531, column: 2, scope: !7621)
!7655 = !DILocation(line: 1533, column: 14, scope: !7621)
!7656 = !DILocation(line: 1533, column: 2, scope: !7621)
!7657 = !DILocation(line: 1533, column: 5, scope: !7621)
!7658 = !DILocation(line: 1533, column: 12, scope: !7621)
!7659 = !DILocation(line: 1535, column: 6, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7621, file: !3, line: 1535, column: 6)
!7661 = !DILocation(line: 1535, column: 9, scope: !7660)
!7662 = !DILocation(line: 1535, column: 15, scope: !7660)
!7663 = !DILocation(line: 1535, column: 6, scope: !7621)
!7664 = !DILocation(line: 1536, column: 11, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7660, file: !3, line: 1535, column: 21)
!7666 = !DILocation(line: 1537, column: 2, scope: !7665)
!7667 = !DILocation(line: 1539, column: 11, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7660, file: !3, line: 1538, column: 7)
!7669 = !DILocation(line: 1541, column: 19, scope: !7668)
!7670 = !DILocation(line: 1541, column: 3, scope: !7668)
!7671 = !DILocation(line: 1543, column: 7, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 1543, column: 7)
!7673 = !DILocation(line: 1543, column: 7, scope: !7668)
!7674 = !DILocation(line: 1544, column: 15, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7672, file: !3, line: 1543, column: 15)
!7676 = !DILocation(line: 1544, column: 23, scope: !7675)
!7677 = !DILocation(line: 1544, column: 26, scope: !7675)
!7678 = !DILocation(line: 1544, column: 4, scope: !7675)
!7679 = !DILocation(line: 1545, column: 3, scope: !7675)
!7680 = !DILocation(line: 1547, column: 7, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 1547, column: 7)
!7682 = !DILocation(line: 1547, column: 7, scope: !7668)
!7683 = !DILocation(line: 1549, column: 15, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 1547, column: 15)
!7685 = !DILocation(line: 1549, column: 23, scope: !7684)
!7686 = !DILocation(line: 1549, column: 26, scope: !7684)
!7687 = !DILocation(line: 1549, column: 30, scope: !7684)
!7688 = !DILocation(line: 1549, column: 4, scope: !7684)
!7689 = !DILocation(line: 1550, column: 3, scope: !7684)
!7690 = !DILocation(line: 1555, column: 28, scope: !7621)
!7691 = !DILocation(line: 1555, column: 31, scope: !7621)
!7692 = !DILocation(line: 1555, column: 2, scope: !7621)
!7693 = !DILocation(line: 1557, column: 12, scope: !7621)
!7694 = !DILocation(line: 1557, column: 15, scope: !7621)
!7695 = !DILocation(line: 1557, column: 2, scope: !7621)
!7696 = !DILocation(line: 1559, column: 2, scope: !7621)
!7697 = !DILocation(line: 1559, column: 12, scope: !7621)
!7698 = !DILocation(line: 1561, column: 9, scope: !7621)
!7699 = !DILocation(line: 1561, column: 2, scope: !7621)
!7700 = distinct !DISubprogram(name: "copy_v3_v3", scope: !4885, file: !4885, line: 64, type: !5238, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!7701 = !DILocalVariable(name: "r", arg: 1, scope: !7700, file: !4885, line: 64, type: !1773)
!7702 = !DILocation(line: 64, column: 31, scope: !7700)
!7703 = !DILocalVariable(name: "a", arg: 2, scope: !7700, file: !4885, line: 64, type: !3980)
!7704 = !DILocation(line: 64, column: 49, scope: !7700)
!7705 = !DILocation(line: 66, column: 9, scope: !7700)
!7706 = !DILocation(line: 66, column: 2, scope: !7700)
!7707 = !DILocation(line: 66, column: 7, scope: !7700)
!7708 = !DILocation(line: 67, column: 9, scope: !7700)
!7709 = !DILocation(line: 67, column: 2, scope: !7700)
!7710 = !DILocation(line: 67, column: 7, scope: !7700)
!7711 = !DILocation(line: 68, column: 9, scope: !7700)
!7712 = !DILocation(line: 68, column: 2, scope: !7700)
!7713 = !DILocation(line: 68, column: 7, scope: !7700)
!7714 = !DILocation(line: 69, column: 1, scope: !7700)
!7715 = distinct !DISubprogram(name: "saveTransform", scope: !3, file: !3, line: 1865, type: !7716, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!7716 = !DISubroutineType(types: !7717)
!7717 = !{null, !4345, !3841, !7718}
!7718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7719, size: 64)
!7719 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !8, line: 348, baseType: !7720)
!7720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !8, line: 328, size: 1344, elements: !7721)
!7721 = !{!7722, !7724, !7725, !7726, !7727, !7803, !7804, !7805, !7806, !7807, !7808, !7809, !7812, !7813}
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7720, file: !8, line: 329, baseType: !7723, size: 64)
!7723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7720, size: 64)
!7724 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7720, file: !8, line: 329, baseType: !7723, size: 64, offset: 64)
!7725 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !7720, file: !8, line: 332, baseType: !22, size: 512, offset: 128)
!7726 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !7720, file: !8, line: 333, baseType: !1834, size: 64, offset: 640)
!7727 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7720, file: !8, line: 336, baseType: !7728, size: 64, offset: 704)
!7728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7729, size: 64)
!7729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !1782, line: 508, size: 1536, elements: !7730)
!7730 = !{!7731, !7732, !7733, !7734, !7735, !7739, !7743, !7747, !7751, !7752, !7753, !7754, !7755, !7756, !7760, !7761, !7762, !7763, !7767, !7802}
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7729, file: !1782, line: 509, baseType: !3434, size: 64)
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !7729, file: !1782, line: 510, baseType: !3434, size: 64, offset: 64)
!7733 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !7729, file: !1782, line: 511, baseType: !3434, size: 64, offset: 128)
!7734 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !7729, file: !1782, line: 512, baseType: !3434, size: 64, offset: 192)
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !7729, file: !1782, line: 518, baseType: !7736, size: 64, offset: 256)
!7736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7737, size: 64)
!7737 = !DISubroutineType(types: !7738)
!7738 = !{!35, !36, !7723}
!7739 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !7729, file: !1782, line: 524, baseType: !7740, size: 64, offset: 320)
!7740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7741, size: 64)
!7741 = !DISubroutineType(types: !7742)
!7742 = !{!2769, !36, !7723}
!7743 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !7729, file: !1782, line: 530, baseType: !7744, size: 64, offset: 384)
!7744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7745, size: 64)
!7745 = !DISubroutineType(types: !7746)
!7746 = !{!35, !36, !7723, !3864}
!7747 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !7729, file: !1782, line: 531, baseType: !7748, size: 64, offset: 448)
!7748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7749, size: 64)
!7749 = !DISubroutineType(types: !7750)
!7750 = !{null, !36, !7723}
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !7729, file: !1782, line: 532, baseType: !7744, size: 64, offset: 512)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !7729, file: !1782, line: 536, baseType: !32, size: 64, offset: 576)
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !7729, file: !1782, line: 539, baseType: !7748, size: 64, offset: 640)
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !7729, file: !1782, line: 542, baseType: !2257, size: 64, offset: 704)
!7755 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !7729, file: !1782, line: 545, baseType: !1839, size: 64, offset: 768)
!7756 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !7729, file: !1782, line: 549, baseType: !7757, size: 64, offset: 832)
!7757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7758, size: 64)
!7758 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !38, line: 333, baseType: !7759)
!7759 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !38, line: 39, flags: DIFlagFwdDecl)
!7760 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !7729, file: !1782, line: 552, baseType: !13, size: 128, offset: 896)
!7761 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !7729, file: !1782, line: 555, baseType: !6, size: 64, offset: 1024)
!7762 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !7729, file: !1782, line: 559, baseType: !18, size: 64, offset: 1088)
!7763 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !7729, file: !1782, line: 560, baseType: !7764, size: 64, offset: 1152)
!7764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7765, size: 64)
!7765 = !DISubroutineType(types: !7766)
!7766 = !{!35, !36, !7728}
!7767 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !7729, file: !1782, line: 563, baseType: !7768, size: 256, offset: 1216)
!7768 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !38, line: 436, baseType: !7769)
!7769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !38, line: 430, size: 256, elements: !7770)
!7770 = !{!7771, !7772, !7775, !7800}
!7771 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7769, file: !38, line: 431, baseType: !18, size: 64)
!7772 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !7769, file: !38, line: 432, baseType: !7773, size: 64, offset: 64)
!7773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7774, size: 64)
!7774 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !38, line: 417, baseType: !2258)
!7775 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !7769, file: !38, line: 433, baseType: !7776, size: 64, offset: 128)
!7776 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !38, line: 408, baseType: !7777)
!7777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7778, size: 64)
!7778 = !DISubroutineType(types: !7779)
!7779 = !{!35, !36, !7780, !7789, !7791}
!7780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7781, size: 64)
!7781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !38, line: 55, size: 192, elements: !7782)
!7782 = !{!7783, !7787, !7788}
!7783 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7781, file: !38, line: 58, baseType: !7784, size: 64)
!7784 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7781, file: !38, line: 56, size: 64, elements: !7785)
!7785 = !{!7786}
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7784, file: !38, line: 57, baseType: !18, size: 64)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7781, file: !38, line: 60, baseType: !2257, size: 64, offset: 64)
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7781, file: !38, line: 61, baseType: !18, size: 64, offset: 128)
!7789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7790, size: 64)
!7790 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !38, line: 38, flags: DIFlagFwdDecl)
!7791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7792, size: 64)
!7792 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !38, line: 348, baseType: !7793)
!7793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !38, line: 337, size: 256, elements: !7794)
!7794 = !{!7795, !7796, !7797, !7798, !7799}
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7793, file: !38, line: 339, baseType: !18, size: 64)
!7796 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !7793, file: !38, line: 342, baseType: !7789, size: 64, offset: 64)
!7797 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !7793, file: !38, line: 345, baseType: !35, size: 32, offset: 128)
!7798 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !7793, file: !38, line: 347, baseType: !35, size: 32, offset: 160)
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !7793, file: !38, line: 347, baseType: !35, size: 32, offset: 192)
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !7769, file: !38, line: 434, baseType: !7801, size: 64, offset: 192)
!7801 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !38, line: 409, baseType: !2303)
!7802 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7729, file: !1782, line: 566, baseType: !27, size: 16, offset: 1472)
!7803 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !7720, file: !8, line: 337, baseType: !18, size: 64, offset: 768)
!7804 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !7720, file: !8, line: 338, baseType: !18, size: 64, offset: 832)
!7805 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !7720, file: !8, line: 340, baseType: !7780, size: 64, offset: 896)
!7806 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !7720, file: !8, line: 341, baseType: !4191, size: 64, offset: 960)
!7807 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !7720, file: !8, line: 343, baseType: !13, size: 128, offset: 1024)
!7808 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !7720, file: !8, line: 344, baseType: !7723, size: 64, offset: 1152)
!7809 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !7720, file: !8, line: 345, baseType: !7810, size: 64, offset: 1216)
!7810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7811, size: 64)
!7811 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !8, line: 61, flags: DIFlagFwdDecl)
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7720, file: !8, line: 346, baseType: !27, size: 16, offset: 1280)
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7720, file: !8, line: 346, baseType: !3294, size: 48, offset: 1296)
!7814 = !DILocalVariable(name: "C", arg: 1, scope: !7715, file: !3, line: 1865, type: !4345)
!7815 = !DILocation(line: 1865, column: 30, scope: !7715)
!7816 = !DILocalVariable(name: "t", arg: 2, scope: !7715, file: !3, line: 1865, type: !3841)
!7817 = !DILocation(line: 1865, column: 44, scope: !7715)
!7818 = !DILocalVariable(name: "op", arg: 3, scope: !7715, file: !3, line: 1865, type: !7718)
!7819 = !DILocation(line: 1865, column: 59, scope: !7715)
!7820 = !DILocalVariable(name: "ts", scope: !7715, file: !3, line: 1867, type: !7821)
!7821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7822, size: 64)
!7822 = !DIDerivedType(tag: DW_TAG_typedef, name: "ToolSettings", file: !1863, line: 1180, baseType: !2749)
!7823 = !DILocation(line: 1867, column: 16, scope: !7715)
!7824 = !DILocation(line: 1867, column: 44, scope: !7715)
!7825 = !DILocation(line: 1867, column: 21, scope: !7715)
!7826 = !DILocalVariable(name: "constraint_axis", scope: !7715, file: !3, line: 1868, type: !2790)
!7827 = !DILocation(line: 1868, column: 6, scope: !7715)
!7828 = !DILocalVariable(name: "proportional", scope: !7715, file: !3, line: 1869, type: !35)
!7829 = !DILocation(line: 1869, column: 6, scope: !7715)
!7830 = !DILocalVariable(name: "prop", scope: !7715, file: !3, line: 1870, type: !7757)
!7831 = !DILocation(line: 1870, column: 15, scope: !7715)
!7832 = !DILocation(line: 1873, column: 39, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1873, column: 6)
!7834 = !DILocation(line: 1873, column: 43, scope: !7833)
!7835 = !DILocation(line: 1873, column: 14, scope: !7833)
!7836 = !DILocation(line: 1873, column: 12, scope: !7833)
!7837 = !DILocation(line: 1873, column: 6, scope: !7715)
!7838 = !DILocation(line: 1874, column: 25, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7833, file: !3, line: 1873, column: 58)
!7840 = !DILocation(line: 1874, column: 29, scope: !7839)
!7841 = !DILocation(line: 1874, column: 34, scope: !7839)
!7842 = !DILocation(line: 1874, column: 40, scope: !7839)
!7843 = !DILocation(line: 1874, column: 43, scope: !7839)
!7844 = !DILocation(line: 1874, column: 3, scope: !7839)
!7845 = !DILocation(line: 1875, column: 2, scope: !7839)
!7846 = !DILocation(line: 1877, column: 39, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1877, column: 6)
!7848 = !DILocation(line: 1877, column: 43, scope: !7847)
!7849 = !DILocation(line: 1877, column: 14, scope: !7847)
!7850 = !DILocation(line: 1877, column: 12, scope: !7847)
!7851 = !DILocation(line: 1877, column: 6, scope: !7715)
!7852 = !DILocalVariable(name: "values", scope: !7853, file: !3, line: 1878, type: !3980)
!7853 = distinct !DILexicalBlock(scope: !7847, file: !3, line: 1877, column: 59)
!7854 = !DILocation(line: 1878, column: 16, scope: !7853)
!7855 = !DILocation(line: 1878, column: 26, scope: !7853)
!7856 = !DILocation(line: 1878, column: 29, scope: !7853)
!7857 = !DILocation(line: 1878, column: 34, scope: !7853)
!7858 = !DILocation(line: 1878, column: 25, scope: !7853)
!7859 = !DILocation(line: 1878, column: 52, scope: !7853)
!7860 = !DILocation(line: 1878, column: 55, scope: !7853)
!7861 = !DILocation(line: 1878, column: 69, scope: !7853)
!7862 = !DILocation(line: 1878, column: 72, scope: !7853)
!7863 = !DILocation(line: 1879, column: 32, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 1879, column: 7)
!7865 = !DILocation(line: 1879, column: 7, scope: !7864)
!7866 = !DILocation(line: 1879, column: 7, scope: !7853)
!7867 = !DILocation(line: 1880, column: 33, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 1879, column: 39)
!7869 = !DILocation(line: 1880, column: 37, scope: !7868)
!7870 = !DILocation(line: 1880, column: 42, scope: !7868)
!7871 = !DILocation(line: 1880, column: 48, scope: !7868)
!7872 = !DILocation(line: 1880, column: 4, scope: !7868)
!7873 = !DILocation(line: 1881, column: 3, scope: !7868)
!7874 = !DILocation(line: 1883, column: 27, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 1882, column: 8)
!7876 = !DILocation(line: 1883, column: 31, scope: !7875)
!7877 = !DILocation(line: 1883, column: 36, scope: !7875)
!7878 = !DILocation(line: 1883, column: 42, scope: !7875)
!7879 = !DILocation(line: 1883, column: 4, scope: !7875)
!7880 = !DILocation(line: 1885, column: 2, scope: !7853)
!7881 = !DILocation(line: 1888, column: 10, scope: !7715)
!7882 = !DILocation(line: 1888, column: 13, scope: !7715)
!7883 = !DILocation(line: 1888, column: 18, scope: !7715)
!7884 = !DILocation(line: 1888, column: 2, scope: !7715)
!7885 = !DILocation(line: 1890, column: 17, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1888, column: 37)
!7887 = !DILocation(line: 1891, column: 4, scope: !7886)
!7888 = !DILocation(line: 1893, column: 17, scope: !7886)
!7889 = !DILocation(line: 1894, column: 4, scope: !7886)
!7890 = !DILocation(line: 1896, column: 17, scope: !7886)
!7891 = !DILocation(line: 1897, column: 4, scope: !7886)
!7892 = !DILocation(line: 1899, column: 17, scope: !7886)
!7893 = !DILocation(line: 1900, column: 4, scope: !7886)
!7894 = !DILocation(line: 1904, column: 6, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1904, column: 6)
!7896 = !DILocation(line: 1904, column: 9, scope: !7895)
!7897 = !DILocation(line: 1904, column: 14, scope: !7895)
!7898 = !DILocation(line: 1904, column: 6, scope: !7715)
!7899 = !DILocation(line: 1908, column: 9, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 1908, column: 7)
!7901 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 1904, column: 25)
!7902 = !DILocation(line: 1908, column: 12, scope: !7900)
!7903 = !DILocation(line: 1908, column: 20, scope: !7900)
!7904 = !DILocation(line: 1908, column: 7, scope: !7901)
!7905 = !DILocation(line: 1909, column: 41, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7907, file: !3, line: 1909, column: 8)
!7907 = distinct !DILexicalBlock(scope: !7900, file: !3, line: 1908, column: 35)
!7908 = !DILocation(line: 1909, column: 45, scope: !7906)
!7909 = !DILocation(line: 1909, column: 16, scope: !7906)
!7910 = !DILocation(line: 1909, column: 14, scope: !7906)
!7911 = !DILocation(line: 1909, column: 67, scope: !7906)
!7912 = !DILocation(line: 1910, column: 29, scope: !7906)
!7913 = !DILocation(line: 1910, column: 33, scope: !7906)
!7914 = !DILocation(line: 1910, column: 38, scope: !7906)
!7915 = !DILocation(line: 1910, column: 9, scope: !7906)
!7916 = !DILocation(line: 1909, column: 8, scope: !7907)
!7917 = !DILocation(line: 1912, column: 9, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7919, file: !3, line: 1912, column: 9)
!7919 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 1911, column: 4)
!7920 = !DILocation(line: 1912, column: 12, scope: !7918)
!7921 = !DILocation(line: 1912, column: 9, scope: !7919)
!7922 = !DILocation(line: 1913, column: 25, scope: !7918)
!7923 = !DILocation(line: 1913, column: 6, scope: !7918)
!7924 = !DILocation(line: 1913, column: 10, scope: !7918)
!7925 = !DILocation(line: 1913, column: 23, scope: !7918)
!7926 = !DILocation(line: 1914, column: 14, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 1914, column: 14)
!7928 = !DILocation(line: 1914, column: 17, scope: !7927)
!7929 = !DILocation(line: 1914, column: 25, scope: !7927)
!7930 = !DILocation(line: 1914, column: 14, scope: !7918)
!7931 = !DILocation(line: 1915, column: 31, scope: !7927)
!7932 = !DILocation(line: 1915, column: 44, scope: !7927)
!7933 = !DILocation(line: 1915, column: 30, scope: !7927)
!7934 = !DILocation(line: 1915, column: 6, scope: !7927)
!7935 = !DILocation(line: 1915, column: 10, scope: !7927)
!7936 = !DILocation(line: 1915, column: 28, scope: !7927)
!7937 = !DILocation(line: 1917, column: 34, scope: !7927)
!7938 = !DILocation(line: 1917, column: 47, scope: !7927)
!7939 = !DILocation(line: 1917, column: 33, scope: !7927)
!7940 = !DILocation(line: 1917, column: 6, scope: !7927)
!7941 = !DILocation(line: 1917, column: 10, scope: !7927)
!7942 = !DILocation(line: 1917, column: 31, scope: !7927)
!7943 = !DILocation(line: 1918, column: 4, scope: !7919)
!7944 = !DILocation(line: 1920, column: 41, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7907, file: !3, line: 1920, column: 8)
!7946 = !DILocation(line: 1920, column: 45, scope: !7945)
!7947 = !DILocation(line: 1920, column: 16, scope: !7945)
!7948 = !DILocation(line: 1920, column: 14, scope: !7945)
!7949 = !DILocation(line: 1920, column: 72, scope: !7945)
!7950 = !DILocation(line: 1921, column: 29, scope: !7945)
!7951 = !DILocation(line: 1921, column: 33, scope: !7945)
!7952 = !DILocation(line: 1921, column: 38, scope: !7945)
!7953 = !DILocation(line: 1921, column: 9, scope: !7945)
!7954 = !DILocation(line: 1920, column: 8, scope: !7907)
!7955 = !DILocation(line: 1923, column: 29, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7945, file: !3, line: 1922, column: 4)
!7957 = !DILocation(line: 1923, column: 32, scope: !7956)
!7958 = !DILocation(line: 1923, column: 5, scope: !7956)
!7959 = !DILocation(line: 1923, column: 9, scope: !7956)
!7960 = !DILocation(line: 1923, column: 27, scope: !7956)
!7961 = !DILocation(line: 1924, column: 4, scope: !7956)
!7962 = !DILocation(line: 1926, column: 41, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7907, file: !3, line: 1926, column: 8)
!7964 = !DILocation(line: 1926, column: 45, scope: !7963)
!7965 = !DILocation(line: 1926, column: 16, scope: !7963)
!7966 = !DILocation(line: 1926, column: 14, scope: !7963)
!7967 = !DILocation(line: 1926, column: 80, scope: !7963)
!7968 = !DILocation(line: 1927, column: 29, scope: !7963)
!7969 = !DILocation(line: 1927, column: 33, scope: !7963)
!7970 = !DILocation(line: 1927, column: 38, scope: !7963)
!7971 = !DILocation(line: 1927, column: 9, scope: !7963)
!7972 = !DILocation(line: 1926, column: 8, scope: !7907)
!7973 = !DILocation(line: 1929, column: 21, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 1928, column: 4)
!7975 = !DILocation(line: 1929, column: 24, scope: !7974)
!7976 = !DILocation(line: 1929, column: 5, scope: !7974)
!7977 = !DILocation(line: 1929, column: 9, scope: !7974)
!7978 = !DILocation(line: 1929, column: 19, scope: !7974)
!7979 = !DILocation(line: 1930, column: 4, scope: !7974)
!7980 = !DILocation(line: 1931, column: 3, scope: !7907)
!7981 = !DILocation(line: 1934, column: 7, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 1934, column: 7)
!7983 = !DILocation(line: 1934, column: 10, scope: !7982)
!7984 = !DILocation(line: 1934, column: 20, scope: !7982)
!7985 = !DILocation(line: 1934, column: 7, scope: !7901)
!7986 = !DILocation(line: 1935, column: 4, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7982, file: !3, line: 1934, column: 32)
!7988 = !DILocation(line: 1935, column: 8, scope: !7987)
!7989 = !DILocation(line: 1935, column: 18, scope: !7987)
!7990 = !DILocation(line: 1936, column: 3, scope: !7987)
!7991 = !DILocation(line: 1938, column: 4, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7982, file: !3, line: 1937, column: 8)
!7993 = !DILocation(line: 1938, column: 8, scope: !7992)
!7994 = !DILocation(line: 1938, column: 18, scope: !7992)
!7995 = !DILocation(line: 1941, column: 7, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 1941, column: 7)
!7997 = !DILocation(line: 1941, column: 10, scope: !7996)
!7998 = !DILocation(line: 1941, column: 20, scope: !7996)
!7999 = !DILocation(line: 1941, column: 7, scope: !7901)
!8000 = !DILocation(line: 1942, column: 41, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 1942, column: 8)
!8002 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 1941, column: 37)
!8003 = !DILocation(line: 1942, column: 45, scope: !8001)
!8004 = !DILocation(line: 1942, column: 16, scope: !8001)
!8005 = !DILocation(line: 1942, column: 14, scope: !8001)
!8006 = !DILocation(line: 1942, column: 77, scope: !8001)
!8007 = !DILocation(line: 1943, column: 29, scope: !8001)
!8008 = !DILocation(line: 1943, column: 33, scope: !8001)
!8009 = !DILocation(line: 1943, column: 38, scope: !8001)
!8010 = !DILocation(line: 1943, column: 9, scope: !8001)
!8011 = !DILocation(line: 1942, column: 8, scope: !8002)
!8012 = !DILocalVariable(name: "v3d", scope: !8013, file: !3, line: 1945, type: !3482)
!8013 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 1944, column: 4)
!8014 = !DILocation(line: 1945, column: 13, scope: !8013)
!8015 = !DILocation(line: 1945, column: 19, scope: !8013)
!8016 = !DILocation(line: 1945, column: 22, scope: !8013)
!8017 = !DILocation(line: 1947, column: 19, scope: !8013)
!8018 = !DILocation(line: 1947, column: 22, scope: !8013)
!8019 = !DILocation(line: 1947, column: 5, scope: !8013)
!8020 = !DILocation(line: 1947, column: 10, scope: !8013)
!8021 = !DILocation(line: 1947, column: 17, scope: !8013)
!8022 = !DILocation(line: 1948, column: 4, scope: !8013)
!8023 = !DILocation(line: 1949, column: 3, scope: !8002)
!8024 = !DILocation(line: 1950, column: 2, scope: !7901)
!8025 = !DILocation(line: 1952, column: 31, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1952, column: 6)
!8027 = !DILocation(line: 1952, column: 35, scope: !8026)
!8028 = !DILocation(line: 1952, column: 6, scope: !8026)
!8029 = !DILocation(line: 1952, column: 6, scope: !7715)
!8030 = !DILocation(line: 1953, column: 16, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8026, file: !3, line: 1952, column: 57)
!8032 = !DILocation(line: 1953, column: 20, scope: !8031)
!8033 = !DILocation(line: 1953, column: 41, scope: !8031)
!8034 = !DILocation(line: 1953, column: 3, scope: !8031)
!8035 = !DILocation(line: 1954, column: 16, scope: !8031)
!8036 = !DILocation(line: 1954, column: 20, scope: !8031)
!8037 = !DILocation(line: 1954, column: 54, scope: !8031)
!8038 = !DILocation(line: 1954, column: 57, scope: !8031)
!8039 = !DILocation(line: 1954, column: 3, scope: !8031)
!8040 = !DILocation(line: 1955, column: 17, scope: !8031)
!8041 = !DILocation(line: 1955, column: 21, scope: !8031)
!8042 = !DILocation(line: 1955, column: 47, scope: !8031)
!8043 = !DILocation(line: 1955, column: 50, scope: !8031)
!8044 = !DILocation(line: 1955, column: 3, scope: !8031)
!8045 = !DILocation(line: 1956, column: 2, scope: !8031)
!8046 = !DILocation(line: 1958, column: 39, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1958, column: 6)
!8048 = !DILocation(line: 1958, column: 43, scope: !8047)
!8049 = !DILocation(line: 1958, column: 14, scope: !8047)
!8050 = !DILocation(line: 1958, column: 12, scope: !8047)
!8051 = !DILocation(line: 1958, column: 6, scope: !7715)
!8052 = !DILocation(line: 1959, column: 32, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 1958, column: 58)
!8054 = !DILocation(line: 1959, column: 36, scope: !8053)
!8055 = !DILocation(line: 1959, column: 41, scope: !8053)
!8056 = !DILocation(line: 1959, column: 47, scope: !8053)
!8057 = !DILocation(line: 1959, column: 50, scope: !8053)
!8058 = !DILocation(line: 1959, column: 3, scope: !8053)
!8059 = !DILocation(line: 1960, column: 2, scope: !8053)
!8060 = !DILocation(line: 1962, column: 39, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1962, column: 6)
!8062 = !DILocation(line: 1962, column: 43, scope: !8061)
!8063 = !DILocation(line: 1962, column: 14, scope: !8061)
!8064 = !DILocation(line: 1962, column: 12, scope: !8061)
!8065 = !DILocation(line: 1962, column: 6, scope: !7715)
!8066 = !DILocation(line: 1963, column: 28, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8061, file: !3, line: 1962, column: 60)
!8068 = !DILocation(line: 1963, column: 32, scope: !8067)
!8069 = !DILocation(line: 1963, column: 37, scope: !8067)
!8070 = !DILocation(line: 1963, column: 43, scope: !8067)
!8071 = !DILocation(line: 1963, column: 46, scope: !8067)
!8072 = !DILocation(line: 1963, column: 51, scope: !8067)
!8073 = !DILocation(line: 1963, column: 3, scope: !8067)
!8074 = !DILocation(line: 1964, column: 2, scope: !8067)
!8075 = !DILocation(line: 1966, column: 39, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1966, column: 6)
!8077 = !DILocation(line: 1966, column: 43, scope: !8076)
!8078 = !DILocation(line: 1966, column: 14, scope: !8076)
!8079 = !DILocation(line: 1966, column: 12, scope: !8076)
!8080 = !DILocation(line: 1966, column: 6, scope: !7715)
!8081 = !DILocation(line: 1970, column: 7, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 1970, column: 7)
!8083 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 1966, column: 69)
!8084 = !DILocation(line: 1970, column: 10, scope: !8082)
!8085 = !DILocation(line: 1970, column: 14, scope: !8082)
!8086 = !DILocation(line: 1970, column: 19, scope: !8082)
!8087 = !DILocation(line: 1970, column: 7, scope: !8083)
!8088 = !DILocation(line: 1971, column: 17, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 1970, column: 32)
!8090 = !DILocation(line: 1971, column: 21, scope: !8089)
!8091 = !DILocation(line: 1971, column: 52, scope: !8089)
!8092 = !DILocation(line: 1971, column: 55, scope: !8089)
!8093 = !DILocation(line: 1971, column: 59, scope: !8089)
!8094 = !DILocation(line: 1971, column: 4, scope: !8089)
!8095 = !DILocation(line: 1972, column: 3, scope: !8089)
!8096 = !DILocation(line: 1974, column: 17, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 1973, column: 8)
!8098 = !DILocation(line: 1974, column: 21, scope: !8097)
!8099 = !DILocation(line: 1974, column: 52, scope: !8097)
!8100 = !DILocation(line: 1974, column: 55, scope: !8097)
!8101 = !DILocation(line: 1974, column: 4, scope: !8097)
!8102 = !DILocation(line: 1977, column: 7, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 1977, column: 7)
!8104 = !DILocation(line: 1977, column: 10, scope: !8103)
!8105 = !DILocation(line: 1977, column: 14, scope: !8103)
!8106 = !DILocation(line: 1977, column: 19, scope: !8103)
!8107 = !DILocation(line: 1977, column: 7, scope: !8083)
!8108 = !DILocation(line: 1978, column: 8, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 1978, column: 8)
!8110 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 1977, column: 32)
!8111 = !DILocation(line: 1978, column: 11, scope: !8109)
!8112 = !DILocation(line: 1978, column: 15, scope: !8109)
!8113 = !DILocation(line: 1978, column: 20, scope: !8109)
!8114 = !DILocation(line: 1978, column: 8, scope: !8110)
!8115 = !DILocation(line: 1979, column: 5, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8109, file: !3, line: 1978, column: 33)
!8117 = !DILocation(line: 1979, column: 24, scope: !8116)
!8118 = !DILocation(line: 1980, column: 4, scope: !8116)
!8119 = !DILocation(line: 1981, column: 8, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 1981, column: 8)
!8121 = !DILocation(line: 1981, column: 11, scope: !8120)
!8122 = !DILocation(line: 1981, column: 15, scope: !8120)
!8123 = !DILocation(line: 1981, column: 20, scope: !8120)
!8124 = !DILocation(line: 1981, column: 8, scope: !8110)
!8125 = !DILocation(line: 1982, column: 5, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8120, file: !3, line: 1981, column: 33)
!8127 = !DILocation(line: 1982, column: 24, scope: !8126)
!8128 = !DILocation(line: 1983, column: 4, scope: !8126)
!8129 = !DILocation(line: 1984, column: 8, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 1984, column: 8)
!8131 = !DILocation(line: 1984, column: 11, scope: !8130)
!8132 = !DILocation(line: 1984, column: 15, scope: !8130)
!8133 = !DILocation(line: 1984, column: 20, scope: !8130)
!8134 = !DILocation(line: 1984, column: 8, scope: !8110)
!8135 = !DILocation(line: 1985, column: 5, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 1984, column: 33)
!8137 = !DILocation(line: 1985, column: 24, scope: !8136)
!8138 = !DILocation(line: 1986, column: 4, scope: !8136)
!8139 = !DILocation(line: 1987, column: 3, scope: !8110)
!8140 = !DILocation(line: 1989, column: 34, scope: !8083)
!8141 = !DILocation(line: 1989, column: 38, scope: !8083)
!8142 = !DILocation(line: 1989, column: 43, scope: !8083)
!8143 = !DILocation(line: 1989, column: 49, scope: !8083)
!8144 = !DILocation(line: 1989, column: 3, scope: !8083)
!8145 = !DILocation(line: 1990, column: 2, scope: !8083)
!8146 = !DILocation(line: 1991, column: 1, scope: !7715)
!8147 = distinct !DISubprogram(name: "initTransform", scope: !3, file: !3, line: 1994, type: !8148, scopeLine: 1995, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!8148 = !DISubroutineType(types: !8149)
!8149 = !{!2769, !4345, !3841, !7718, !5655, !35}
!8150 = !DILocalVariable(name: "C", arg: 1, scope: !8147, file: !3, line: 1994, type: !4345)
!8151 = !DILocation(line: 1994, column: 30, scope: !8147)
!8152 = !DILocalVariable(name: "t", arg: 2, scope: !8147, file: !3, line: 1994, type: !3841)
!8153 = !DILocation(line: 1994, column: 44, scope: !8147)
!8154 = !DILocalVariable(name: "op", arg: 3, scope: !8147, file: !3, line: 1994, type: !7718)
!8155 = !DILocation(line: 1994, column: 59, scope: !8147)
!8156 = !DILocalVariable(name: "event", arg: 4, scope: !8147, file: !3, line: 1994, type: !5655)
!8157 = !DILocation(line: 1994, column: 78, scope: !8147)
!8158 = !DILocalVariable(name: "mode", arg: 5, scope: !8147, file: !3, line: 1994, type: !35)
!8159 = !DILocation(line: 1994, column: 89, scope: !8147)
!8160 = !DILocalVariable(name: "options", scope: !8147, file: !3, line: 1996, type: !35)
!8161 = !DILocation(line: 1996, column: 6, scope: !8147)
!8162 = !DILocalVariable(name: "prop", scope: !8147, file: !3, line: 1997, type: !7757)
!8163 = !DILocation(line: 1997, column: 15, scope: !8147)
!8164 = !DILocation(line: 1999, column: 15, scope: !8147)
!8165 = !DILocation(line: 1999, column: 2, scope: !8147)
!8166 = !DILocation(line: 1999, column: 5, scope: !8147)
!8167 = !DILocation(line: 1999, column: 13, scope: !8147)
!8168 = !DILocation(line: 2003, column: 2, scope: !8147)
!8169 = !DILocation(line: 2003, column: 5, scope: !8147)
!8170 = !DILocation(line: 2003, column: 11, scope: !8147)
!8171 = !DILocation(line: 2005, column: 39, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 2005, column: 6)
!8173 = !DILocation(line: 2005, column: 43, scope: !8172)
!8174 = !DILocation(line: 2005, column: 14, scope: !8172)
!8175 = !DILocation(line: 2005, column: 12, scope: !8172)
!8176 = !DILocation(line: 2005, column: 66, scope: !8172)
!8177 = !DILocation(line: 2005, column: 89, scope: !8172)
!8178 = !DILocation(line: 2005, column: 93, scope: !8172)
!8179 = !DILocation(line: 2005, column: 98, scope: !8172)
!8180 = !DILocation(line: 2005, column: 69, scope: !8172)
!8181 = !DILocation(line: 2005, column: 6, scope: !8147)
!8182 = !DILocation(line: 2006, column: 32, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8184, file: !3, line: 2006, column: 7)
!8184 = distinct !DILexicalBlock(scope: !8172, file: !3, line: 2005, column: 105)
!8185 = !DILocation(line: 2006, column: 36, scope: !8183)
!8186 = !DILocation(line: 2006, column: 41, scope: !8183)
!8187 = !DILocation(line: 2006, column: 7, scope: !8183)
!8188 = !DILocation(line: 2006, column: 7, scope: !8184)
!8189 = !DILocation(line: 2007, column: 12, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8183, file: !3, line: 2006, column: 48)
!8191 = !DILocation(line: 2008, column: 3, scope: !8190)
!8192 = !DILocation(line: 2009, column: 2, scope: !8184)
!8193 = !DILocation(line: 2011, column: 15, scope: !8147)
!8194 = !DILocation(line: 2011, column: 2, scope: !8147)
!8195 = !DILocation(line: 2011, column: 5, scope: !8147)
!8196 = !DILocation(line: 2011, column: 13, scope: !8147)
!8197 = !DILocation(line: 2013, column: 12, scope: !8147)
!8198 = !DILocation(line: 2013, column: 2, scope: !8147)
!8199 = !DILocation(line: 2013, column: 5, scope: !8147)
!8200 = !DILocation(line: 2013, column: 10, scope: !8147)
!8201 = !DILocation(line: 2015, column: 20, scope: !8147)
!8202 = !DILocation(line: 2015, column: 28, scope: !8147)
!8203 = !DILocation(line: 2015, column: 35, scope: !8147)
!8204 = !DILocation(line: 2015, column: 2, scope: !8147)
!8205 = !DILocation(line: 2015, column: 5, scope: !8147)
!8206 = !DILocation(line: 2015, column: 18, scope: !8147)
!8207 = !DILocation(line: 2017, column: 6, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 2017, column: 6)
!8209 = !DILocation(line: 2017, column: 9, scope: !8208)
!8210 = !DILocation(line: 2017, column: 22, scope: !8208)
!8211 = !DILocation(line: 2017, column: 6, scope: !8147)
!8212 = !DILocation(line: 2018, column: 3, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8208, file: !3, line: 2017, column: 38)
!8214 = !DILocation(line: 2018, column: 6, scope: !8213)
!8215 = !DILocation(line: 2018, column: 19, scope: !8213)
!8216 = !DILocation(line: 2019, column: 2, scope: !8213)
!8217 = !DILocation(line: 2020, column: 11, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8208, file: !3, line: 2020, column: 11)
!8219 = !DILocation(line: 2020, column: 14, scope: !8218)
!8220 = !DILocation(line: 2020, column: 27, scope: !8218)
!8221 = !DILocation(line: 2020, column: 11, scope: !8208)
!8222 = !DILocation(line: 2021, column: 3, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8218, file: !3, line: 2020, column: 43)
!8224 = !DILocation(line: 2021, column: 6, scope: !8223)
!8225 = !DILocation(line: 2021, column: 19, scope: !8223)
!8226 = !DILocation(line: 2022, column: 2, scope: !8223)
!8227 = !DILocation(line: 2026, column: 6, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 2026, column: 6)
!8229 = !DILocation(line: 2026, column: 9, scope: !8228)
!8230 = !DILocation(line: 2026, column: 22, scope: !8228)
!8231 = !DILocation(line: 2026, column: 6, scope: !8147)
!8232 = !DILocation(line: 2027, column: 3, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8228, file: !3, line: 2026, column: 28)
!8234 = !DILocation(line: 2027, column: 6, scope: !8233)
!8235 = !DILocation(line: 2027, column: 19, scope: !8233)
!8236 = !DILocation(line: 2028, column: 2, scope: !8233)
!8237 = !DILocation(line: 2030, column: 16, scope: !8147)
!8238 = !DILocation(line: 2030, column: 19, scope: !8147)
!8239 = !DILocation(line: 2030, column: 22, scope: !8147)
!8240 = !DILocation(line: 2030, column: 26, scope: !8147)
!8241 = !DILocation(line: 2030, column: 2, scope: !8147)
!8242 = !DILocation(line: 2032, column: 6, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 2032, column: 6)
!8244 = !DILocation(line: 2032, column: 9, scope: !8243)
!8245 = !DILocation(line: 2032, column: 19, scope: !8243)
!8246 = !DILocation(line: 2032, column: 6, scope: !8147)
!8247 = !DILocation(line: 2033, column: 28, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8243, file: !3, line: 2032, column: 36)
!8249 = !DILocation(line: 2033, column: 31, scope: !8248)
!8250 = !DILocation(line: 2033, column: 3, scope: !8248)
!8251 = !DILocation(line: 2035, column: 53, scope: !8248)
!8252 = !DILocation(line: 2035, column: 56, scope: !8248)
!8253 = !DILocation(line: 2035, column: 60, scope: !8248)
!8254 = !DILocation(line: 2035, column: 86, scope: !8248)
!8255 = !DILocation(line: 2035, column: 26, scope: !8248)
!8256 = !DILocation(line: 2035, column: 3, scope: !8248)
!8257 = !DILocation(line: 2035, column: 6, scope: !8248)
!8258 = !DILocation(line: 2035, column: 24, scope: !8248)
!8259 = !DILocation(line: 2036, column: 52, scope: !8248)
!8260 = !DILocation(line: 2036, column: 55, scope: !8248)
!8261 = !DILocation(line: 2036, column: 59, scope: !8248)
!8262 = !DILocation(line: 2036, column: 84, scope: !8248)
!8263 = !DILocation(line: 2036, column: 25, scope: !8248)
!8264 = !DILocation(line: 2036, column: 3, scope: !8248)
!8265 = !DILocation(line: 2036, column: 6, scope: !8248)
!8266 = !DILocation(line: 2036, column: 23, scope: !8248)
!8267 = !DILocation(line: 2037, column: 53, scope: !8248)
!8268 = !DILocation(line: 2037, column: 56, scope: !8248)
!8269 = !DILocation(line: 2037, column: 60, scope: !8248)
!8270 = !DILocation(line: 2037, column: 86, scope: !8248)
!8271 = !DILocation(line: 2037, column: 26, scope: !8248)
!8272 = !DILocation(line: 2037, column: 3, scope: !8248)
!8273 = !DILocation(line: 2037, column: 6, scope: !8248)
!8274 = !DILocation(line: 2037, column: 24, scope: !8248)
!8275 = !DILocation(line: 2038, column: 67, scope: !8248)
!8276 = !DILocation(line: 2038, column: 52, scope: !8248)
!8277 = !DILocation(line: 2038, column: 100, scope: !8248)
!8278 = !DILocation(line: 2038, column: 27, scope: !8248)
!8279 = !DILocation(line: 2038, column: 3, scope: !8248)
!8280 = !DILocation(line: 2038, column: 6, scope: !8248)
!8281 = !DILocation(line: 2038, column: 25, scope: !8248)
!8282 = !DILocation(line: 2039, column: 2, scope: !8248)
!8283 = !DILocation(line: 2040, column: 11, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8243, file: !3, line: 2040, column: 11)
!8285 = !DILocation(line: 2040, column: 14, scope: !8284)
!8286 = !DILocation(line: 2040, column: 24, scope: !8284)
!8287 = !DILocation(line: 2040, column: 11, scope: !8243)
!8288 = !DILocation(line: 2041, column: 11, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 2040, column: 40)
!8290 = !DILocation(line: 2041, column: 14, scope: !8289)
!8291 = !DILocation(line: 2041, column: 3, scope: !8289)
!8292 = !DILocation(line: 2042, column: 52, scope: !8289)
!8293 = !DILocation(line: 2042, column: 55, scope: !8289)
!8294 = !DILocation(line: 2042, column: 59, scope: !8289)
!8295 = !DILocation(line: 2042, column: 84, scope: !8289)
!8296 = !DILocation(line: 2042, column: 25, scope: !8289)
!8297 = !DILocation(line: 2042, column: 3, scope: !8289)
!8298 = !DILocation(line: 2042, column: 6, scope: !8289)
!8299 = !DILocation(line: 2042, column: 23, scope: !8289)
!8300 = !DILocation(line: 2044, column: 67, scope: !8289)
!8301 = !DILocation(line: 2044, column: 52, scope: !8289)
!8302 = !DILocation(line: 2044, column: 100, scope: !8289)
!8303 = !DILocation(line: 2044, column: 27, scope: !8289)
!8304 = !DILocation(line: 2044, column: 3, scope: !8289)
!8305 = !DILocation(line: 2044, column: 6, scope: !8289)
!8306 = !DILocation(line: 2044, column: 25, scope: !8289)
!8307 = !DILocation(line: 2045, column: 2, scope: !8289)
!8308 = !DILocation(line: 2046, column: 11, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 2046, column: 11)
!8310 = !DILocation(line: 2046, column: 14, scope: !8309)
!8311 = !DILocation(line: 2046, column: 24, scope: !8309)
!8312 = !DILocation(line: 2046, column: 11, scope: !8284)
!8313 = !DILocation(line: 2047, column: 11, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 2046, column: 39)
!8315 = !DILocation(line: 2047, column: 14, scope: !8314)
!8316 = !DILocation(line: 2047, column: 3, scope: !8314)
!8317 = !DILocation(line: 2048, column: 52, scope: !8314)
!8318 = !DILocation(line: 2048, column: 55, scope: !8314)
!8319 = !DILocation(line: 2048, column: 59, scope: !8314)
!8320 = !DILocation(line: 2048, column: 84, scope: !8314)
!8321 = !DILocation(line: 2048, column: 25, scope: !8314)
!8322 = !DILocation(line: 2048, column: 3, scope: !8314)
!8323 = !DILocation(line: 2048, column: 6, scope: !8314)
!8324 = !DILocation(line: 2048, column: 23, scope: !8314)
!8325 = !DILocation(line: 2049, column: 67, scope: !8314)
!8326 = !DILocation(line: 2049, column: 52, scope: !8314)
!8327 = !DILocation(line: 2049, column: 100, scope: !8314)
!8328 = !DILocation(line: 2049, column: 27, scope: !8314)
!8329 = !DILocation(line: 2049, column: 3, scope: !8314)
!8330 = !DILocation(line: 2049, column: 6, scope: !8314)
!8331 = !DILocation(line: 2049, column: 25, scope: !8314)
!8332 = !DILocation(line: 2050, column: 2, scope: !8314)
!8333 = !DILocation(line: 2051, column: 11, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 2051, column: 11)
!8335 = !DILocation(line: 2051, column: 14, scope: !8334)
!8336 = !DILocation(line: 2051, column: 24, scope: !8334)
!8337 = !DILocation(line: 2051, column: 11, scope: !8309)
!8338 = !DILocation(line: 2052, column: 11, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8334, file: !3, line: 2051, column: 39)
!8340 = !DILocation(line: 2052, column: 14, scope: !8339)
!8341 = !DILocation(line: 2052, column: 3, scope: !8339)
!8342 = !DILocation(line: 2054, column: 52, scope: !8339)
!8343 = !DILocation(line: 2054, column: 55, scope: !8339)
!8344 = !DILocation(line: 2054, column: 59, scope: !8339)
!8345 = !DILocation(line: 2054, column: 84, scope: !8339)
!8346 = !DILocation(line: 2054, column: 25, scope: !8339)
!8347 = !DILocation(line: 2054, column: 3, scope: !8339)
!8348 = !DILocation(line: 2054, column: 6, scope: !8339)
!8349 = !DILocation(line: 2054, column: 23, scope: !8339)
!8350 = !DILocation(line: 2055, column: 67, scope: !8339)
!8351 = !DILocation(line: 2055, column: 52, scope: !8339)
!8352 = !DILocation(line: 2055, column: 100, scope: !8339)
!8353 = !DILocation(line: 2055, column: 27, scope: !8339)
!8354 = !DILocation(line: 2055, column: 3, scope: !8339)
!8355 = !DILocation(line: 2055, column: 6, scope: !8339)
!8356 = !DILocation(line: 2055, column: 25, scope: !8339)
!8357 = !DILocation(line: 2056, column: 2, scope: !8339)
!8358 = !DILocation(line: 2058, column: 11, scope: !8334)
!8359 = !DILocation(line: 2058, column: 14, scope: !8334)
!8360 = !DILocation(line: 2058, column: 3, scope: !8334)
!8361 = !DILocation(line: 2060, column: 18, scope: !8147)
!8362 = !DILocation(line: 2060, column: 21, scope: !8147)
!8363 = !DILocation(line: 2060, column: 2, scope: !8147)
!8364 = !DILocation(line: 2062, column: 6, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 2062, column: 6)
!8366 = !DILocation(line: 2062, column: 9, scope: !8365)
!8367 = !DILocation(line: 2062, column: 15, scope: !8365)
!8368 = !DILocation(line: 2062, column: 6, scope: !8147)
!8369 = !DILocation(line: 2063, column: 13, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8365, file: !3, line: 2062, column: 21)
!8371 = !DILocation(line: 2063, column: 16, scope: !8370)
!8372 = !DILocation(line: 2063, column: 3, scope: !8370)
!8373 = !DILocation(line: 2064, column: 3, scope: !8370)
!8374 = !DILocation(line: 2067, column: 6, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 2067, column: 6)
!8376 = !DILocation(line: 2067, column: 6, scope: !8147)
!8377 = !DILocation(line: 2069, column: 47, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8375, file: !3, line: 2067, column: 13)
!8379 = !DILocation(line: 2069, column: 32, scope: !8378)
!8380 = !DILocation(line: 2069, column: 51, scope: !8378)
!8381 = !DILocation(line: 2069, column: 55, scope: !8378)
!8382 = !DILocation(line: 2069, column: 61, scope: !8378)
!8383 = !DILocation(line: 2069, column: 15, scope: !8378)
!8384 = !DILocation(line: 2069, column: 3, scope: !8378)
!8385 = !DILocation(line: 2069, column: 6, scope: !8378)
!8386 = !DILocation(line: 2069, column: 13, scope: !8378)
!8387 = !DILocation(line: 2077, column: 7, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8378, file: !3, line: 2077, column: 7)
!8389 = !DILocation(line: 2077, column: 7, scope: !8378)
!8390 = !DILocalVariable(name: "kmi", scope: !8391, file: !3, line: 2078, type: !8392)
!8391 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 2077, column: 62)
!8392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8393, size: 64)
!8393 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMapItem", file: !8, line: 252, baseType: !8394)
!8394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMapItem", file: !8, line: 227, size: 1472, elements: !8395)
!8395 = !{!8396, !8398, !8399, !8400, !8401, !8402, !8403, !8404, !8405, !8406, !8407, !8408, !8409, !8410, !8411, !8412, !8413, !8414}
!8396 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8394, file: !8, line: 228, baseType: !8397, size: 64)
!8397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8394, size: 64)
!8398 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8394, file: !8, line: 228, baseType: !8397, size: 64, offset: 64)
!8399 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !8394, file: !8, line: 231, baseType: !22, size: 512, offset: 128)
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !8394, file: !8, line: 232, baseType: !1834, size: 64, offset: 640)
!8401 = !DIDerivedType(tag: DW_TAG_member, name: "propvalue_str", scope: !8394, file: !8, line: 235, baseType: !22, size: 512, offset: 704)
!8402 = !DIDerivedType(tag: DW_TAG_member, name: "propvalue", scope: !8394, file: !8, line: 236, baseType: !27, size: 16, offset: 1216)
!8403 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8394, file: !8, line: 239, baseType: !27, size: 16, offset: 1232)
!8404 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !8394, file: !8, line: 240, baseType: !27, size: 16, offset: 1248)
!8405 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !8394, file: !8, line: 241, baseType: !27, size: 16, offset: 1264)
!8406 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !8394, file: !8, line: 241, baseType: !27, size: 16, offset: 1280)
!8407 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !8394, file: !8, line: 241, baseType: !27, size: 16, offset: 1296)
!8408 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !8394, file: !8, line: 241, baseType: !27, size: 16, offset: 1312)
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !8394, file: !8, line: 242, baseType: !27, size: 16, offset: 1328)
!8410 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8394, file: !8, line: 245, baseType: !27, size: 16, offset: 1344)
!8411 = !DIDerivedType(tag: DW_TAG_member, name: "maptype", scope: !8394, file: !8, line: 248, baseType: !27, size: 16, offset: 1360)
!8412 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8394, file: !8, line: 249, baseType: !27, size: 16, offset: 1376)
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8394, file: !8, line: 250, baseType: !27, size: 16, offset: 1392)
!8414 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !8394, file: !8, line: 251, baseType: !7780, size: 64, offset: 1408)
!8415 = !DILocation(line: 2078, column: 18, scope: !8391)
!8416 = !DILocation(line: 2080, column: 15, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 2080, column: 4)
!8418 = !DILocation(line: 2080, column: 18, scope: !8417)
!8419 = !DILocation(line: 2080, column: 26, scope: !8417)
!8420 = !DILocation(line: 2080, column: 32, scope: !8417)
!8421 = !DILocation(line: 2080, column: 13, scope: !8417)
!8422 = !DILocation(line: 2080, column: 9, scope: !8417)
!8423 = !DILocation(line: 2080, column: 39, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8417, file: !3, line: 2080, column: 4)
!8425 = !DILocation(line: 2080, column: 4, scope: !8417)
!8426 = !DILocation(line: 2081, column: 9, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8428, file: !3, line: 2081, column: 9)
!8428 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 2080, column: 61)
!8429 = !DILocation(line: 2081, column: 14, scope: !8427)
!8430 = !DILocation(line: 2081, column: 24, scope: !8427)
!8431 = !DILocation(line: 2081, column: 49, scope: !8427)
!8432 = !DILocation(line: 2081, column: 52, scope: !8427)
!8433 = !DILocation(line: 2081, column: 57, scope: !8427)
!8434 = !DILocation(line: 2081, column: 61, scope: !8427)
!8435 = !DILocation(line: 2081, column: 9, scope: !8428)
!8436 = !DILocation(line: 2082, column: 11, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8438, file: !3, line: 2082, column: 10)
!8438 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 2081, column: 74)
!8439 = !DILocation(line: 2082, column: 54, scope: !8437)
!8440 = !DILocation(line: 2082, column: 59, scope: !8437)
!8441 = !DILocation(line: 2082, column: 66, scope: !8437)
!8442 = !DILocation(line: 2082, column: 73, scope: !8437)
!8443 = !DILocation(line: 2083, column: 11, scope: !8437)
!8444 = !DILocation(line: 2083, column: 56, scope: !8437)
!8445 = !DILocation(line: 2083, column: 59, scope: !8437)
!8446 = !DILocation(line: 2083, column: 66, scope: !8437)
!8447 = !DILocation(line: 2083, column: 73, scope: !8437)
!8448 = !DILocation(line: 2084, column: 11, scope: !8437)
!8449 = !DILocation(line: 2084, column: 52, scope: !8437)
!8450 = !DILocation(line: 2084, column: 59, scope: !8437)
!8451 = !DILocation(line: 2084, column: 66, scope: !8437)
!8452 = !DILocation(line: 2084, column: 73, scope: !8437)
!8453 = !DILocation(line: 2085, column: 12, scope: !8437)
!8454 = !DILocation(line: 2085, column: 17, scope: !8437)
!8455 = !DILocation(line: 2085, column: 22, scope: !8437)
!8456 = !DILocation(line: 2085, column: 32, scope: !8437)
!8457 = !DILocation(line: 2085, column: 59, scope: !8437)
!8458 = !DILocation(line: 2085, column: 66, scope: !8437)
!8459 = !DILocation(line: 2082, column: 10, scope: !8438)
!8460 = !DILocation(line: 2087, column: 7, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8437, file: !3, line: 2086, column: 6)
!8462 = !DILocation(line: 2087, column: 10, scope: !8461)
!8463 = !DILocation(line: 2087, column: 20, scope: !8461)
!8464 = !DILocation(line: 2088, column: 6, scope: !8461)
!8465 = !DILocation(line: 2089, column: 6, scope: !8438)
!8466 = !DILocation(line: 2091, column: 4, scope: !8428)
!8467 = !DILocation(line: 2080, column: 50, scope: !8424)
!8468 = !DILocation(line: 2080, column: 55, scope: !8424)
!8469 = !DILocation(line: 2080, column: 48, scope: !8424)
!8470 = !DILocation(line: 2080, column: 4, scope: !8424)
!8471 = distinct !{!8471, !8425, !8472}
!8472 = !DILocation(line: 2091, column: 4, scope: !8417)
!8473 = !DILocation(line: 2092, column: 3, scope: !8391)
!8474 = !DILocation(line: 2093, column: 2, scope: !8378)
!8475 = !DILocation(line: 2095, column: 15, scope: !8147)
!8476 = !DILocation(line: 2095, column: 18, scope: !8147)
!8477 = !DILocation(line: 2095, column: 2, scope: !8147)
!8478 = !DILocation(line: 2100, column: 9, scope: !8147)
!8479 = !DILocation(line: 2100, column: 12, scope: !8147)
!8480 = !DILocation(line: 2100, column: 7, scope: !8147)
!8481 = !DILocation(line: 2102, column: 21, scope: !8147)
!8482 = !DILocation(line: 2102, column: 2, scope: !8147)
!8483 = !DILocation(line: 2103, column: 18, scope: !8147)
!8484 = !DILocation(line: 2103, column: 2, scope: !8147)
!8485 = !DILocation(line: 2105, column: 17, scope: !8147)
!8486 = !DILocation(line: 2105, column: 21, scope: !8147)
!8487 = !DILocation(line: 2105, column: 24, scope: !8147)
!8488 = !DILocation(line: 2105, column: 31, scope: !8147)
!8489 = !DILocation(line: 2105, column: 34, scope: !8147)
!8490 = !DILocation(line: 2105, column: 44, scope: !8147)
!8491 = !DILocation(line: 2105, column: 47, scope: !8147)
!8492 = !DILocation(line: 2105, column: 2, scope: !8147)
!8493 = !DILocation(line: 2107, column: 10, scope: !8147)
!8494 = !DILocation(line: 2107, column: 2, scope: !8147)
!8495 = !DILocation(line: 2109, column: 20, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 2107, column: 16)
!8497 = !DILocation(line: 2109, column: 4, scope: !8496)
!8498 = !DILocation(line: 2110, column: 4, scope: !8496)
!8499 = !DILocation(line: 2112, column: 17, scope: !8496)
!8500 = !DILocation(line: 2112, column: 4, scope: !8496)
!8501 = !DILocation(line: 2113, column: 4, scope: !8496)
!8502 = !DILocation(line: 2115, column: 15, scope: !8496)
!8503 = !DILocation(line: 2115, column: 4, scope: !8496)
!8504 = !DILocation(line: 2116, column: 4, scope: !8496)
!8505 = !DILocation(line: 2118, column: 19, scope: !8496)
!8506 = !DILocation(line: 2118, column: 4, scope: !8496)
!8507 = !DILocation(line: 2119, column: 4, scope: !8496)
!8508 = !DILocation(line: 2121, column: 17, scope: !8496)
!8509 = !DILocation(line: 2121, column: 4, scope: !8496)
!8510 = !DILocation(line: 2122, column: 4, scope: !8496)
!8511 = !DILocation(line: 2124, column: 14, scope: !8496)
!8512 = !DILocation(line: 2124, column: 4, scope: !8496)
!8513 = !DILocation(line: 2125, column: 4, scope: !8496)
!8514 = !DILocation(line: 2127, column: 13, scope: !8496)
!8515 = !DILocation(line: 2127, column: 4, scope: !8496)
!8516 = !DILocation(line: 2128, column: 4, scope: !8496)
!8517 = !DILocation(line: 2130, column: 21, scope: !8496)
!8518 = !DILocation(line: 2130, column: 4, scope: !8496)
!8519 = !DILocation(line: 2131, column: 4, scope: !8496)
!8520 = !DILocation(line: 2133, column: 13, scope: !8496)
!8521 = !DILocation(line: 2133, column: 4, scope: !8496)
!8522 = !DILocation(line: 2134, column: 4, scope: !8496)
!8523 = !DILocation(line: 2136, column: 26, scope: !8496)
!8524 = !DILocation(line: 2136, column: 4, scope: !8496)
!8525 = !DILocation(line: 2137, column: 4, scope: !8496)
!8526 = !DILocation(line: 2139, column: 25, scope: !8496)
!8527 = !DILocation(line: 2139, column: 4, scope: !8496)
!8528 = !DILocation(line: 2140, column: 4, scope: !8496)
!8529 = !DILocation(line: 2142, column: 18, scope: !8496)
!8530 = !DILocation(line: 2142, column: 4, scope: !8496)
!8531 = !DILocation(line: 2143, column: 4, scope: !8496)
!8532 = !DILocation(line: 2145, column: 17, scope: !8496)
!8533 = !DILocation(line: 2145, column: 4, scope: !8496)
!8534 = !DILocation(line: 2146, column: 4, scope: !8496)
!8535 = !DILocation(line: 2148, column: 15, scope: !8496)
!8536 = !DILocation(line: 2148, column: 4, scope: !8496)
!8537 = !DILocation(line: 2149, column: 4, scope: !8496)
!8538 = !DILocalVariable(name: "arm", scope: !8539, file: !3, line: 2152, type: !8540)
!8539 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 2151, column: 3)
!8540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8541, size: 64)
!8541 = !DIDerivedType(tag: DW_TAG_typedef, name: "bArmature", file: !393, line: 114, baseType: !8542)
!8542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bArmature", file: !393, line: 78, size: 2048, elements: !8543)
!8543 = !{!8544, !8545, !8546, !8547, !8548, !8549, !8584, !8587, !8588, !8589, !8590, !8591, !8592, !8593, !8594, !8595, !8596, !8597, !8598, !8599, !8600, !8601, !8602, !8603, !8604, !8605, !8606}
!8544 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8542, file: !393, line: 79, baseType: !1798, size: 960)
!8545 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !8542, file: !393, line: 80, baseType: !1867, size: 64, offset: 960)
!8546 = !DIDerivedType(tag: DW_TAG_member, name: "bonebase", scope: !8542, file: !393, line: 82, baseType: !13, size: 128, offset: 1024)
!8547 = !DIDerivedType(tag: DW_TAG_member, name: "chainbase", scope: !8542, file: !393, line: 83, baseType: !13, size: 128, offset: 1152)
!8548 = !DIDerivedType(tag: DW_TAG_member, name: "edbo", scope: !8542, file: !393, line: 84, baseType: !2174, size: 64, offset: 1280)
!8549 = !DIDerivedType(tag: DW_TAG_member, name: "act_bone", scope: !8542, file: !393, line: 92, baseType: !8550, size: 64, offset: 1344)
!8550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8551, size: 64)
!8551 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bone", file: !393, line: 76, baseType: !8552)
!8552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Bone", file: !393, line: 48, size: 2624, elements: !8553)
!8553 = !{!8554, !8556, !8557, !8558, !8559, !8560, !8561, !8562, !8563, !8564, !8565, !8566, !8567, !8568, !8569, !8570, !8571, !8572, !8573, !8574, !8575, !8576, !8577, !8578, !8579, !8580, !8581, !8582}
!8554 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8552, file: !393, line: 49, baseType: !8555, size: 64)
!8555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8552, size: 64)
!8556 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8552, file: !393, line: 49, baseType: !8555, size: 64, offset: 64)
!8557 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !8552, file: !393, line: 50, baseType: !1834, size: 64, offset: 128)
!8558 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !8552, file: !393, line: 51, baseType: !8555, size: 64, offset: 192)
!8559 = !DIDerivedType(tag: DW_TAG_member, name: "childbase", scope: !8552, file: !393, line: 52, baseType: !13, size: 128, offset: 256)
!8560 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8552, file: !393, line: 53, baseType: !22, size: 512, offset: 384)
!8561 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !8552, file: !393, line: 55, baseType: !1727, size: 32, offset: 896)
!8562 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8552, file: !393, line: 56, baseType: !1987, size: 96, offset: 928)
!8563 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8552, file: !393, line: 57, baseType: !1987, size: 96, offset: 1024)
!8564 = !DIDerivedType(tag: DW_TAG_member, name: "bone_mat", scope: !8552, file: !393, line: 58, baseType: !3881, size: 288, offset: 1120)
!8565 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8552, file: !393, line: 60, baseType: !35, size: 32, offset: 1408)
!8566 = !DIDerivedType(tag: DW_TAG_member, name: "arm_head", scope: !8552, file: !393, line: 62, baseType: !1987, size: 96, offset: 1440)
!8567 = !DIDerivedType(tag: DW_TAG_member, name: "arm_tail", scope: !8552, file: !393, line: 63, baseType: !1987, size: 96, offset: 1536)
!8568 = !DIDerivedType(tag: DW_TAG_member, name: "arm_mat", scope: !8552, file: !393, line: 64, baseType: !2071, size: 512, offset: 1632)
!8569 = !DIDerivedType(tag: DW_TAG_member, name: "arm_roll", scope: !8552, file: !393, line: 65, baseType: !1727, size: 32, offset: 2144)
!8570 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !8552, file: !393, line: 67, baseType: !1727, size: 32, offset: 2176)
!8571 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !8552, file: !393, line: 67, baseType: !1727, size: 32, offset: 2208)
!8572 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !8552, file: !393, line: 68, baseType: !1727, size: 32, offset: 2240)
!8573 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8552, file: !393, line: 68, baseType: !1727, size: 32, offset: 2272)
!8574 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !8552, file: !393, line: 68, baseType: !1727, size: 32, offset: 2304)
!8575 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !8552, file: !393, line: 69, baseType: !1727, size: 32, offset: 2336)
!8576 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !8552, file: !393, line: 69, baseType: !1727, size: 32, offset: 2368)
!8577 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !8552, file: !393, line: 70, baseType: !1727, size: 32, offset: 2400)
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !8552, file: !393, line: 70, baseType: !1727, size: 32, offset: 2432)
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8552, file: !393, line: 72, baseType: !1987, size: 96, offset: 2464)
!8580 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !8552, file: !393, line: 73, baseType: !35, size: 32, offset: 2560)
!8581 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !8552, file: !393, line: 74, baseType: !27, size: 16, offset: 2592)
!8582 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8552, file: !393, line: 75, baseType: !8583, size: 16, offset: 2608)
!8583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 16, elements: !2243)
!8584 = !DIDerivedType(tag: DW_TAG_member, name: "act_edbone", scope: !8542, file: !393, line: 93, baseType: !8585, size: 64, offset: 1408)
!8585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8586, size: 64)
!8586 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditBone", file: !393, line: 93, flags: DIFlagFwdDecl)
!8587 = !DIDerivedType(tag: DW_TAG_member, name: "sketch", scope: !8542, file: !393, line: 95, baseType: !18, size: 64, offset: 1472)
!8588 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8542, file: !393, line: 97, baseType: !35, size: 32, offset: 1536)
!8589 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !8542, file: !393, line: 98, baseType: !35, size: 32, offset: 1568)
!8590 = !DIDerivedType(tag: DW_TAG_member, name: "gevertdeformer", scope: !8542, file: !393, line: 99, baseType: !35, size: 32, offset: 1600)
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8542, file: !393, line: 100, baseType: !35, size: 32, offset: 1632)
!8592 = !DIDerivedType(tag: DW_TAG_member, name: "deformflag", scope: !8542, file: !393, line: 101, baseType: !27, size: 16, offset: 1664)
!8593 = !DIDerivedType(tag: DW_TAG_member, name: "pathflag", scope: !8542, file: !393, line: 102, baseType: !27, size: 16, offset: 1680)
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "layer_used", scope: !8542, file: !393, line: 104, baseType: !56, size: 32, offset: 1696)
!8595 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !8542, file: !393, line: 105, baseType: !56, size: 32, offset: 1728)
!8596 = !DIDerivedType(tag: DW_TAG_member, name: "layer_protected", scope: !8542, file: !393, line: 105, baseType: !56, size: 32, offset: 1760)
!8597 = !DIDerivedType(tag: DW_TAG_member, name: "ghostep", scope: !8542, file: !393, line: 108, baseType: !27, size: 16, offset: 1792)
!8598 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsize", scope: !8542, file: !393, line: 108, baseType: !27, size: 16, offset: 1808)
!8599 = !DIDerivedType(tag: DW_TAG_member, name: "ghosttype", scope: !8542, file: !393, line: 109, baseType: !27, size: 16, offset: 1824)
!8600 = !DIDerivedType(tag: DW_TAG_member, name: "pathsize", scope: !8542, file: !393, line: 109, baseType: !27, size: 16, offset: 1840)
!8601 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsf", scope: !8542, file: !393, line: 110, baseType: !35, size: 32, offset: 1856)
!8602 = !DIDerivedType(tag: DW_TAG_member, name: "ghostef", scope: !8542, file: !393, line: 110, baseType: !35, size: 32, offset: 1888)
!8603 = !DIDerivedType(tag: DW_TAG_member, name: "pathsf", scope: !8542, file: !393, line: 111, baseType: !35, size: 32, offset: 1920)
!8604 = !DIDerivedType(tag: DW_TAG_member, name: "pathef", scope: !8542, file: !393, line: 111, baseType: !35, size: 32, offset: 1952)
!8605 = !DIDerivedType(tag: DW_TAG_member, name: "pathbc", scope: !8542, file: !393, line: 112, baseType: !35, size: 32, offset: 1984)
!8606 = !DIDerivedType(tag: DW_TAG_member, name: "pathac", scope: !8542, file: !393, line: 112, baseType: !35, size: 32, offset: 2016)
!8607 = !DILocation(line: 2152, column: 15, scope: !8539)
!8608 = !DILocation(line: 2152, column: 21, scope: !8539)
!8609 = !DILocation(line: 2152, column: 24, scope: !8539)
!8610 = !DILocation(line: 2152, column: 33, scope: !8539)
!8611 = !DILocation(line: 2153, column: 8, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8539, file: !3, line: 2153, column: 8)
!8613 = !DILocation(line: 2153, column: 13, scope: !8612)
!8614 = !DILocation(line: 2153, column: 22, scope: !8612)
!8615 = !DILocation(line: 2153, column: 8, scope: !8539)
!8616 = !DILocation(line: 2154, column: 22, scope: !8612)
!8617 = !DILocation(line: 2154, column: 5, scope: !8612)
!8618 = !DILocation(line: 2156, column: 18, scope: !8612)
!8619 = !DILocation(line: 2156, column: 5, scope: !8612)
!8620 = !DILocation(line: 2157, column: 4, scope: !8539)
!8621 = !DILocation(line: 2160, column: 21, scope: !8496)
!8622 = !DILocation(line: 2160, column: 4, scope: !8496)
!8623 = !DILocation(line: 2161, column: 4, scope: !8496)
!8624 = !DILocation(line: 2163, column: 18, scope: !8496)
!8625 = !DILocation(line: 2163, column: 4, scope: !8496)
!8626 = !DILocation(line: 2164, column: 4, scope: !8496)
!8627 = !DILocation(line: 2166, column: 18, scope: !8496)
!8628 = !DILocation(line: 2166, column: 4, scope: !8496)
!8629 = !DILocation(line: 2167, column: 4, scope: !8496)
!8630 = !DILocation(line: 2169, column: 17, scope: !8496)
!8631 = !DILocation(line: 2169, column: 4, scope: !8496)
!8632 = !DILocation(line: 2170, column: 4, scope: !8496)
!8633 = !DILocation(line: 2172, column: 22, scope: !8496)
!8634 = !DILocation(line: 2172, column: 4, scope: !8496)
!8635 = !DILocation(line: 2173, column: 4, scope: !8496)
!8636 = !DILocation(line: 2175, column: 18, scope: !8496)
!8637 = !DILocation(line: 2175, column: 4, scope: !8496)
!8638 = !DILocation(line: 2176, column: 4, scope: !8496)
!8639 = !DILocation(line: 2178, column: 18, scope: !8496)
!8640 = !DILocation(line: 2178, column: 4, scope: !8496)
!8641 = !DILocation(line: 2179, column: 4, scope: !8496)
!8642 = !DILocation(line: 2184, column: 8, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 2184, column: 8)
!8644 = !DILocation(line: 2184, column: 8, scope: !8496)
!8645 = !DILocation(line: 2185, column: 21, scope: !8643)
!8646 = !DILocation(line: 2185, column: 5, scope: !8643)
!8647 = !DILocation(line: 2187, column: 23, scope: !8643)
!8648 = !DILocation(line: 2187, column: 5, scope: !8643)
!8649 = !DILocation(line: 2188, column: 14, scope: !8496)
!8650 = !DILocation(line: 2188, column: 4, scope: !8496)
!8651 = !DILocation(line: 2188, column: 7, scope: !8496)
!8652 = !DILocation(line: 2188, column: 12, scope: !8496)
!8653 = !DILocation(line: 2189, column: 4, scope: !8496)
!8654 = !DILocation(line: 2196, column: 8, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 2196, column: 8)
!8656 = !DILocation(line: 2196, column: 8, scope: !8496)
!8657 = !DILocation(line: 2197, column: 21, scope: !8655)
!8658 = !DILocation(line: 2197, column: 5, scope: !8655)
!8659 = !DILocation(line: 2199, column: 23, scope: !8655)
!8660 = !DILocation(line: 2199, column: 5, scope: !8655)
!8661 = !DILocation(line: 2200, column: 4, scope: !8496)
!8662 = !DILocation(line: 2202, column: 17, scope: !8496)
!8663 = !DILocation(line: 2202, column: 4, scope: !8496)
!8664 = !DILocation(line: 2203, column: 4, scope: !8496)
!8665 = !DILocation(line: 2205, column: 15, scope: !8496)
!8666 = !DILocation(line: 2205, column: 4, scope: !8496)
!8667 = !DILocation(line: 2206, column: 4, scope: !8496)
!8668 = !DILocation(line: 2208, column: 20, scope: !8496)
!8669 = !DILocation(line: 2208, column: 4, scope: !8496)
!8670 = !DILocation(line: 2209, column: 4, scope: !8496)
!8671 = !DILocation(line: 2211, column: 14, scope: !8496)
!8672 = !DILocation(line: 2211, column: 4, scope: !8496)
!8673 = !DILocation(line: 2212, column: 4, scope: !8496)
!8674 = !DILocation(line: 2214, column: 17, scope: !8496)
!8675 = !DILocation(line: 2214, column: 4, scope: !8496)
!8676 = !DILocation(line: 2215, column: 4, scope: !8496)
!8677 = !DILocation(line: 2218, column: 6, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 2218, column: 6)
!8679 = !DILocation(line: 2218, column: 9, scope: !8678)
!8680 = !DILocation(line: 2218, column: 15, scope: !8678)
!8681 = !DILocation(line: 2218, column: 6, scope: !8147)
!8682 = !DILocation(line: 2219, column: 13, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8678, file: !3, line: 2218, column: 32)
!8684 = !DILocation(line: 2219, column: 16, scope: !8683)
!8685 = !DILocation(line: 2219, column: 3, scope: !8683)
!8686 = !DILocation(line: 2220, column: 3, scope: !8683)
!8687 = !DILocation(line: 2225, column: 39, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 2225, column: 6)
!8689 = !DILocation(line: 2225, column: 43, scope: !8688)
!8690 = !DILocation(line: 2225, column: 14, scope: !8688)
!8691 = !DILocation(line: 2225, column: 12, scope: !8688)
!8692 = !DILocation(line: 2225, column: 58, scope: !8688)
!8693 = !DILocation(line: 2225, column: 81, scope: !8688)
!8694 = !DILocation(line: 2225, column: 85, scope: !8688)
!8695 = !DILocation(line: 2225, column: 90, scope: !8688)
!8696 = !DILocation(line: 2225, column: 61, scope: !8688)
!8697 = !DILocation(line: 2225, column: 6, scope: !8147)
!8698 = !DILocalVariable(name: "values", scope: !8699, file: !3, line: 2226, type: !2062)
!8699 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 2225, column: 97)
!8700 = !DILocation(line: 2226, column: 9, scope: !8699)
!8701 = !DILocation(line: 2228, column: 32, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8699, file: !3, line: 2228, column: 7)
!8703 = !DILocation(line: 2228, column: 7, scope: !8702)
!8704 = !DILocation(line: 2228, column: 7, scope: !8699)
!8705 = !DILocation(line: 2229, column: 24, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 2228, column: 39)
!8707 = !DILocation(line: 2229, column: 28, scope: !8706)
!8708 = !DILocation(line: 2229, column: 42, scope: !8706)
!8709 = !DILocation(line: 2229, column: 4, scope: !8706)
!8710 = !DILocation(line: 2230, column: 3, scope: !8706)
!8711 = !DILocation(line: 2232, column: 30, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 2231, column: 8)
!8713 = !DILocation(line: 2232, column: 34, scope: !8712)
!8714 = !DILocation(line: 2232, column: 16, scope: !8712)
!8715 = !DILocation(line: 2232, column: 4, scope: !8712)
!8716 = !DILocation(line: 2232, column: 14, scope: !8712)
!8717 = !DILocation(line: 2235, column: 14, scope: !8699)
!8718 = !DILocation(line: 2235, column: 17, scope: !8699)
!8719 = !DILocation(line: 2235, column: 25, scope: !8699)
!8720 = !DILocation(line: 2235, column: 3, scope: !8699)
!8721 = !DILocation(line: 2236, column: 14, scope: !8699)
!8722 = !DILocation(line: 2236, column: 17, scope: !8699)
!8723 = !DILocation(line: 2236, column: 30, scope: !8699)
!8724 = !DILocation(line: 2236, column: 3, scope: !8699)
!8725 = !DILocation(line: 2237, column: 3, scope: !8699)
!8726 = !DILocation(line: 2237, column: 6, scope: !8699)
!8727 = !DILocation(line: 2237, column: 11, scope: !8699)
!8728 = !DILocation(line: 2238, column: 2, scope: !8699)
!8729 = !DILocation(line: 2241, column: 39, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 2241, column: 6)
!8731 = !DILocation(line: 2241, column: 43, scope: !8730)
!8732 = !DILocation(line: 2241, column: 14, scope: !8730)
!8733 = !DILocation(line: 2241, column: 12, scope: !8730)
!8734 = !DILocation(line: 2241, column: 57, scope: !8730)
!8735 = !DILocation(line: 2241, column: 80, scope: !8730)
!8736 = !DILocation(line: 2241, column: 84, scope: !8730)
!8737 = !DILocation(line: 2241, column: 89, scope: !8730)
!8738 = !DILocation(line: 2241, column: 60, scope: !8730)
!8739 = !DILocation(line: 2241, column: 6, scope: !8147)
!8740 = !DILocation(line: 2242, column: 32, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 2241, column: 96)
!8742 = !DILocation(line: 2242, column: 36, scope: !8741)
!8743 = !DILocation(line: 2242, column: 41, scope: !8741)
!8744 = !DILocation(line: 2242, column: 47, scope: !8741)
!8745 = !DILocation(line: 2242, column: 50, scope: !8741)
!8746 = !DILocation(line: 2242, column: 3, scope: !8741)
!8747 = !DILocation(line: 2243, column: 16, scope: !8741)
!8748 = !DILocation(line: 2243, column: 19, scope: !8741)
!8749 = !DILocation(line: 2243, column: 3, scope: !8741)
!8750 = !DILocation(line: 2244, column: 14, scope: !8741)
!8751 = !DILocation(line: 2244, column: 17, scope: !8741)
!8752 = !DILocation(line: 2244, column: 28, scope: !8741)
!8753 = !DILocation(line: 2244, column: 31, scope: !8741)
!8754 = !DILocation(line: 2244, column: 3, scope: !8741)
!8755 = !DILocation(line: 2245, column: 2, scope: !8741)
!8756 = !DILocation(line: 2248, column: 39, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 2248, column: 6)
!8758 = !DILocation(line: 2248, column: 43, scope: !8757)
!8759 = !DILocation(line: 2248, column: 14, scope: !8757)
!8760 = !DILocation(line: 2248, column: 12, scope: !8757)
!8761 = !DILocation(line: 2248, column: 68, scope: !8757)
!8762 = !DILocation(line: 2248, column: 91, scope: !8757)
!8763 = !DILocation(line: 2248, column: 95, scope: !8757)
!8764 = !DILocation(line: 2248, column: 100, scope: !8757)
!8765 = !DILocation(line: 2248, column: 71, scope: !8757)
!8766 = !DILocation(line: 2248, column: 6, scope: !8147)
!8767 = !DILocalVariable(name: "constraint_axis", scope: !8768, file: !3, line: 2249, type: !2790)
!8768 = distinct !DILexicalBlock(scope: !8757, file: !3, line: 2248, column: 107)
!8769 = !DILocation(line: 2249, column: 7, scope: !8768)
!8770 = !DILocation(line: 2251, column: 34, scope: !8768)
!8771 = !DILocation(line: 2251, column: 38, scope: !8768)
!8772 = !DILocation(line: 2251, column: 43, scope: !8768)
!8773 = !DILocation(line: 2251, column: 49, scope: !8768)
!8774 = !DILocation(line: 2251, column: 3, scope: !8768)
!8775 = !DILocation(line: 2253, column: 7, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 2253, column: 7)
!8777 = !DILocation(line: 2253, column: 26, scope: !8776)
!8778 = !DILocation(line: 2253, column: 29, scope: !8776)
!8779 = !DILocation(line: 2253, column: 48, scope: !8776)
!8780 = !DILocation(line: 2253, column: 51, scope: !8776)
!8781 = !DILocation(line: 2253, column: 7, scope: !8768)
!8782 = !DILocation(line: 2254, column: 4, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8776, file: !3, line: 2253, column: 71)
!8784 = !DILocation(line: 2254, column: 7, scope: !8783)
!8785 = !DILocation(line: 2254, column: 11, scope: !8783)
!8786 = !DILocation(line: 2254, column: 16, scope: !8783)
!8787 = !DILocation(line: 2256, column: 8, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 2256, column: 8)
!8789 = !DILocation(line: 2256, column: 8, scope: !8783)
!8790 = !DILocation(line: 2257, column: 5, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8788, file: !3, line: 2256, column: 28)
!8792 = !DILocation(line: 2257, column: 8, scope: !8791)
!8793 = !DILocation(line: 2257, column: 12, scope: !8791)
!8794 = !DILocation(line: 2257, column: 17, scope: !8791)
!8795 = !DILocation(line: 2258, column: 4, scope: !8791)
!8796 = !DILocation(line: 2259, column: 8, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 2259, column: 8)
!8798 = !DILocation(line: 2259, column: 8, scope: !8783)
!8799 = !DILocation(line: 2260, column: 5, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8797, file: !3, line: 2259, column: 28)
!8801 = !DILocation(line: 2260, column: 8, scope: !8800)
!8802 = !DILocation(line: 2260, column: 12, scope: !8800)
!8803 = !DILocation(line: 2260, column: 17, scope: !8800)
!8804 = !DILocation(line: 2261, column: 4, scope: !8800)
!8805 = !DILocation(line: 2262, column: 8, scope: !8806)
!8806 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 2262, column: 8)
!8807 = !DILocation(line: 2262, column: 8, scope: !8783)
!8808 = !DILocation(line: 2263, column: 5, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8806, file: !3, line: 2262, column: 28)
!8810 = !DILocation(line: 2263, column: 8, scope: !8809)
!8811 = !DILocation(line: 2263, column: 12, scope: !8809)
!8812 = !DILocation(line: 2263, column: 17, scope: !8809)
!8813 = !DILocation(line: 2264, column: 4, scope: !8809)
!8814 = !DILocation(line: 2266, column: 22, scope: !8783)
!8815 = !DILocation(line: 2266, column: 25, scope: !8783)
!8816 = !DILocation(line: 2266, column: 28, scope: !8783)
!8817 = !DILocation(line: 2266, column: 49, scope: !8783)
!8818 = !DILocation(line: 2266, column: 52, scope: !8783)
!8819 = !DILocation(line: 2266, column: 56, scope: !8783)
!8820 = !DILocation(line: 2266, column: 4, scope: !8783)
!8821 = !DILocation(line: 2267, column: 3, scope: !8783)
!8822 = !DILocation(line: 2268, column: 2, scope: !8768)
!8823 = !DILocation(line: 2270, column: 2, scope: !8147)
!8824 = !DILocation(line: 2270, column: 5, scope: !8147)
!8825 = !DILocation(line: 2270, column: 13, scope: !8147)
!8826 = !DILocation(line: 2272, column: 2, scope: !8147)
!8827 = !DILocation(line: 2273, column: 1, scope: !8147)
!8828 = distinct !DISubprogram(name: "drawTransformApply", scope: !3, file: !3, line: 2299, type: !8829, scopeLine: 2300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!8829 = !DISubroutineType(types: !8830)
!8830 = !{null, !8831, !8833, !18}
!8831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8832, size: 64)
!8832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4346)
!8833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8834, size: 64)
!8834 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !87, line: 267, baseType: !4151)
!8835 = !DILocalVariable(name: "C", arg: 1, scope: !8828, file: !3, line: 2299, type: !8831)
!8836 = !DILocation(line: 2299, column: 48, scope: !8828)
!8837 = !DILocalVariable(name: "UNUSED_ar", arg: 2, scope: !8828, file: !3, line: 2299, type: !8833)
!8838 = !DILocation(line: 2299, column: 60, scope: !8828)
!8839 = !DILocalVariable(name: "arg", arg: 3, scope: !8828, file: !3, line: 2299, type: !18)
!8840 = !DILocation(line: 2299, column: 78, scope: !8828)
!8841 = !DILocalVariable(name: "t", scope: !8828, file: !3, line: 2301, type: !3841)
!8842 = !DILocation(line: 2301, column: 13, scope: !8828)
!8843 = !DILocation(line: 2301, column: 17, scope: !8828)
!8844 = !DILocation(line: 2303, column: 6, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 2303, column: 6)
!8846 = !DILocation(line: 2303, column: 9, scope: !8845)
!8847 = !DILocation(line: 2303, column: 16, scope: !8845)
!8848 = !DILocation(line: 2303, column: 6, scope: !8828)
!8849 = !DILocation(line: 2304, column: 3, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8845, file: !3, line: 2303, column: 32)
!8851 = !DILocation(line: 2304, column: 6, scope: !8850)
!8852 = !DILocation(line: 2304, column: 13, scope: !8850)
!8853 = !DILocation(line: 2305, column: 30, scope: !8850)
!8854 = !DILocation(line: 2305, column: 33, scope: !8850)
!8855 = !DILocation(line: 2305, column: 3, scope: !8850)
!8856 = !DILocation(line: 2306, column: 2, scope: !8850)
!8857 = !DILocation(line: 2307, column: 1, scope: !8828)
!8858 = distinct !DISubprogram(name: "drawTransformView", scope: !3, file: !3, line: 1793, type: !8859, scopeLine: 1794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!8859 = !DISubroutineType(types: !8860)
!8860 = !{null, !8861, !8833, !18}
!8861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8862, size: 64)
!8862 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !37)
!8863 = !DILocalVariable(name: "C", arg: 1, scope: !8858, file: !3, line: 1793, type: !8861)
!8864 = !DILocation(line: 1793, column: 54, scope: !8858)
!8865 = !DILocalVariable(name: "UNUSED_ar", arg: 2, scope: !8858, file: !3, line: 1793, type: !8833)
!8866 = !DILocation(line: 1793, column: 66, scope: !8858)
!8867 = !DILocalVariable(name: "arg", arg: 3, scope: !8858, file: !3, line: 1793, type: !18)
!8868 = !DILocation(line: 1793, column: 84, scope: !8858)
!8869 = !DILocalVariable(name: "t", scope: !8858, file: !3, line: 1795, type: !3841)
!8870 = !DILocation(line: 1795, column: 13, scope: !8858)
!8871 = !DILocation(line: 1795, column: 17, scope: !8858)
!8872 = !DILocation(line: 1797, column: 17, scope: !8858)
!8873 = !DILocation(line: 1797, column: 2, scope: !8858)
!8874 = !DILocation(line: 1798, column: 17, scope: !8858)
!8875 = !DILocation(line: 1798, column: 20, scope: !8858)
!8876 = !DILocation(line: 1798, column: 2, scope: !8858)
!8877 = !DILocation(line: 1799, column: 15, scope: !8858)
!8878 = !DILocation(line: 1799, column: 18, scope: !8858)
!8879 = !DILocation(line: 1799, column: 2, scope: !8858)
!8880 = !DILocation(line: 1802, column: 16, scope: !8858)
!8881 = !DILocation(line: 1802, column: 19, scope: !8858)
!8882 = !DILocation(line: 1802, column: 2, scope: !8858)
!8883 = !DILocation(line: 1803, column: 16, scope: !8858)
!8884 = !DILocation(line: 1803, column: 19, scope: !8858)
!8885 = !DILocation(line: 1803, column: 2, scope: !8858)
!8886 = !DILocation(line: 1804, column: 1, scope: !8858)
!8887 = distinct !DISubprogram(name: "drawTransformPixel", scope: !3, file: !3, line: 1843, type: !8859, scopeLine: 1844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!8888 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !8887, file: !3, line: 1843, type: !8861)
!8889 = !DILocation(line: 1843, column: 55, scope: !8887)
!8890 = !DILocalVariable(name: "ar", arg: 2, scope: !8887, file: !3, line: 1843, type: !8833)
!8891 = !DILocation(line: 1843, column: 75, scope: !8887)
!8892 = !DILocalVariable(name: "arg", arg: 3, scope: !8887, file: !3, line: 1843, type: !18)
!8893 = !DILocation(line: 1843, column: 85, scope: !8887)
!8894 = !DILocalVariable(name: "t", scope: !8887, file: !3, line: 1845, type: !3841)
!8895 = !DILocation(line: 1845, column: 13, scope: !8887)
!8896 = !DILocation(line: 1845, column: 17, scope: !8887)
!8897 = !DILocalVariable(name: "scene", scope: !8887, file: !3, line: 1846, type: !8898)
!8898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8899, size: 64)
!8899 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !1863, line: 1299, baseType: !1862)
!8900 = !DILocation(line: 1846, column: 9, scope: !8887)
!8901 = !DILocation(line: 1846, column: 17, scope: !8887)
!8902 = !DILocation(line: 1846, column: 20, scope: !8887)
!8903 = !DILocalVariable(name: "ob", scope: !8887, file: !3, line: 1847, type: !8904)
!8904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8905, size: 64)
!8905 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !371, line: 295, baseType: !1937)
!8906 = !DILocation(line: 1847, column: 10, scope: !8887)
!8907 = !DILocation(line: 1847, column: 15, scope: !8887)
!8908 = !DILocation(line: 1854, column: 9, scope: !8909)
!8909 = distinct !DILexicalBlock(scope: !8887, file: !3, line: 1854, column: 6)
!8910 = !DILocation(line: 1854, column: 7, scope: !8909)
!8911 = !DILocation(line: 1854, column: 22, scope: !8909)
!8912 = !DILocation(line: 1854, column: 48, scope: !8909)
!8913 = !DILocation(line: 1854, column: 6, scope: !8887)
!8914 = !DILocation(line: 1855, column: 7, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8916, file: !3, line: 1855, column: 7)
!8916 = distinct !DILexicalBlock(scope: !8909, file: !3, line: 1854, column: 54)
!8917 = !DILocation(line: 1855, column: 13, scope: !8915)
!8918 = !DILocation(line: 1855, column: 16, scope: !8915)
!8919 = !DILocation(line: 1855, column: 10, scope: !8915)
!8920 = !DILocation(line: 1855, column: 7, scope: !8916)
!8921 = !DILocation(line: 1856, column: 8, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8923, file: !3, line: 1856, column: 8)
!8923 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 1855, column: 20)
!8924 = !DILocation(line: 1856, column: 11, scope: !8922)
!8925 = !DILocation(line: 1856, column: 16, scope: !8922)
!8926 = !DILocation(line: 1856, column: 8, scope: !8923)
!8927 = !DILocation(line: 1857, column: 9, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8929, file: !3, line: 1857, column: 9)
!8929 = distinct !DILexicalBlock(scope: !8922, file: !3, line: 1856, column: 39)
!8930 = !DILocation(line: 1857, column: 12, scope: !8928)
!8931 = !DILocation(line: 1857, column: 41, scope: !8928)
!8932 = !DILocation(line: 1857, column: 49, scope: !8928)
!8933 = !DILocation(line: 1857, column: 53, scope: !8928)
!8934 = !DILocation(line: 1857, column: 15, scope: !8928)
!8935 = !DILocation(line: 1857, column: 9, scope: !8929)
!8936 = !DILocation(line: 1858, column: 25, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8928, file: !3, line: 1857, column: 58)
!8938 = !DILocation(line: 1858, column: 28, scope: !8937)
!8939 = !DILocation(line: 1858, column: 6, scope: !8937)
!8940 = !DILocation(line: 1859, column: 5, scope: !8937)
!8941 = !DILocation(line: 1860, column: 4, scope: !8929)
!8942 = !DILocation(line: 1861, column: 3, scope: !8923)
!8943 = !DILocation(line: 1862, column: 2, scope: !8916)
!8944 = !DILocation(line: 1863, column: 1, scope: !8887)
!8945 = distinct !DISubprogram(name: "helpline_poll", scope: !3, file: !3, line: 1652, type: !8946, scopeLine: 1653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!8946 = !DISubroutineType(types: !8947)
!8947 = !{!35, !4345}
!8948 = !DILocalVariable(name: "C", arg: 1, scope: !8945, file: !3, line: 1652, type: !4345)
!8949 = !DILocation(line: 1652, column: 36, scope: !8945)
!8950 = !DILocalVariable(name: "ar", scope: !8945, file: !3, line: 1654, type: !8833)
!8951 = !DILocation(line: 1654, column: 11, scope: !8945)
!8952 = !DILocation(line: 1654, column: 30, scope: !8945)
!8953 = !DILocation(line: 1654, column: 16, scope: !8945)
!8954 = !DILocation(line: 1656, column: 6, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8945, file: !3, line: 1656, column: 6)
!8956 = !DILocation(line: 1656, column: 9, scope: !8955)
!8957 = !DILocation(line: 1656, column: 12, scope: !8955)
!8958 = !DILocation(line: 1656, column: 16, scope: !8955)
!8959 = !DILocation(line: 1656, column: 27, scope: !8955)
!8960 = !DILocation(line: 1656, column: 6, scope: !8945)
!8961 = !DILocation(line: 1657, column: 3, scope: !8955)
!8962 = !DILocation(line: 1658, column: 2, scope: !8945)
!8963 = !DILocation(line: 1659, column: 1, scope: !8945)
!8964 = distinct !DISubprogram(name: "drawHelpline", scope: !3, file: !3, line: 1661, type: !8965, scopeLine: 1662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!8965 = !DISubroutineType(types: !8966)
!8966 = !{null, !4345, !35, !35, !18}
!8967 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !8964, file: !3, line: 1661, type: !4345)
!8968 = !DILocation(line: 1661, column: 36, scope: !8964)
!8969 = !DILocalVariable(name: "x", arg: 2, scope: !8964, file: !3, line: 1661, type: !35)
!8970 = !DILocation(line: 1661, column: 51, scope: !8964)
!8971 = !DILocalVariable(name: "y", arg: 3, scope: !8964, file: !3, line: 1661, type: !35)
!8972 = !DILocation(line: 1661, column: 58, scope: !8964)
!8973 = !DILocalVariable(name: "customdata", arg: 4, scope: !8964, file: !3, line: 1661, type: !18)
!8974 = !DILocation(line: 1661, column: 67, scope: !8964)
!8975 = !DILocalVariable(name: "t", scope: !8964, file: !3, line: 1663, type: !3841)
!8976 = !DILocation(line: 1663, column: 13, scope: !8964)
!8977 = !DILocation(line: 1663, column: 30, scope: !8964)
!8978 = !DILocation(line: 1663, column: 17, scope: !8964)
!8979 = !DILocation(line: 1665, column: 6, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8964, file: !3, line: 1665, column: 6)
!8981 = !DILocation(line: 1665, column: 9, scope: !8980)
!8982 = !DILocation(line: 1665, column: 18, scope: !8980)
!8983 = !DILocation(line: 1665, column: 30, scope: !8980)
!8984 = !DILocation(line: 1665, column: 35, scope: !8980)
!8985 = !DILocation(line: 1665, column: 38, scope: !8980)
!8986 = !DILocation(line: 1665, column: 43, scope: !8980)
!8987 = !DILocation(line: 1665, column: 6, scope: !8964)
!8988 = !DILocalVariable(name: "vecrot", scope: !8989, file: !3, line: 1666, type: !1987)
!8989 = distinct !DILexicalBlock(scope: !8980, file: !3, line: 1665, column: 66)
!8990 = !DILocation(line: 1666, column: 9, scope: !8989)
!8991 = !DILocalVariable(name: "cent", scope: !8989, file: !3, line: 1666, type: !1754)
!8992 = !DILocation(line: 1666, column: 20, scope: !8989)
!8993 = !DILocalVariable(name: "mval", scope: !8989, file: !3, line: 1667, type: !2435)
!8994 = !DILocation(line: 1667, column: 7, scope: !8989)
!8995 = !DILocation(line: 1669, column: 13, scope: !8989)
!8996 = !DILocation(line: 1669, column: 3, scope: !8989)
!8997 = !DILocation(line: 1669, column: 11, scope: !8989)
!8998 = !DILocation(line: 1670, column: 13, scope: !8989)
!8999 = !DILocation(line: 1670, column: 3, scope: !8989)
!9000 = !DILocation(line: 1670, column: 11, scope: !8989)
!9001 = !DILocation(line: 1672, column: 14, scope: !8989)
!9002 = !DILocation(line: 1672, column: 22, scope: !8989)
!9003 = !DILocation(line: 1672, column: 25, scope: !8989)
!9004 = !DILocation(line: 1672, column: 3, scope: !8989)
!9005 = !DILocation(line: 1673, column: 7, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !8989, file: !3, line: 1673, column: 7)
!9007 = !DILocation(line: 1673, column: 10, scope: !9006)
!9008 = !DILocation(line: 1673, column: 15, scope: !9006)
!9009 = !DILocation(line: 1673, column: 7, scope: !8989)
!9010 = !DILocalVariable(name: "ob", scope: !9011, file: !3, line: 1674, type: !8904)
!9011 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 1673, column: 25)
!9012 = !DILocation(line: 1674, column: 12, scope: !9011)
!9013 = !DILocation(line: 1674, column: 17, scope: !9011)
!9014 = !DILocation(line: 1674, column: 20, scope: !9011)
!9015 = !DILocation(line: 1675, column: 8, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9011, file: !3, line: 1675, column: 8)
!9017 = !DILocation(line: 1675, column: 8, scope: !9011)
!9018 = !DILocation(line: 1675, column: 22, scope: !9016)
!9019 = !DILocation(line: 1675, column: 26, scope: !9016)
!9020 = !DILocation(line: 1675, column: 33, scope: !9016)
!9021 = !DILocation(line: 1675, column: 12, scope: !9016)
!9022 = !DILocation(line: 1676, column: 3, scope: !9011)
!9023 = !DILocation(line: 1677, column: 12, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 1677, column: 12)
!9025 = !DILocation(line: 1677, column: 15, scope: !9024)
!9026 = !DILocation(line: 1677, column: 20, scope: !9024)
!9027 = !DILocation(line: 1677, column: 12, scope: !9006)
!9028 = !DILocalVariable(name: "ob", scope: !9029, file: !3, line: 1678, type: !8904)
!9029 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 1677, column: 30)
!9030 = !DILocation(line: 1678, column: 12, scope: !9029)
!9031 = !DILocation(line: 1678, column: 17, scope: !9029)
!9032 = !DILocation(line: 1678, column: 20, scope: !9029)
!9033 = !DILocation(line: 1679, column: 8, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 1679, column: 8)
!9035 = !DILocation(line: 1679, column: 8, scope: !9029)
!9036 = !DILocation(line: 1679, column: 22, scope: !9034)
!9037 = !DILocation(line: 1679, column: 26, scope: !9034)
!9038 = !DILocation(line: 1679, column: 33, scope: !9034)
!9039 = !DILocation(line: 1679, column: 12, scope: !9034)
!9040 = !DILocation(line: 1680, column: 3, scope: !9029)
!9041 = !DILocation(line: 1682, column: 22, scope: !8989)
!9042 = !DILocation(line: 1682, column: 25, scope: !8989)
!9043 = !DILocation(line: 1682, column: 33, scope: !8989)
!9044 = !DILocation(line: 1682, column: 3, scope: !8989)
!9045 = !DILocation(line: 1684, column: 3, scope: !8989)
!9046 = !DILocation(line: 1686, column: 11, scope: !8989)
!9047 = !DILocation(line: 1686, column: 14, scope: !8989)
!9048 = !DILocation(line: 1686, column: 3, scope: !8989)
!9049 = !DILocation(line: 1688, column: 5, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !8989, file: !3, line: 1686, column: 24)
!9051 = !DILocation(line: 1690, column: 5, scope: !9050)
!9052 = !DILocation(line: 1691, column: 5, scope: !9050)
!9053 = !DILocation(line: 1692, column: 17, scope: !9050)
!9054 = !DILocation(line: 1692, column: 20, scope: !9050)
!9055 = !DILocation(line: 1692, column: 5, scope: !9050)
!9056 = !DILocation(line: 1693, column: 17, scope: !9050)
!9057 = !DILocation(line: 1693, column: 5, scope: !9050)
!9058 = !DILocation(line: 1694, column: 5, scope: !9050)
!9059 = !DILocation(line: 1696, column: 18, scope: !9050)
!9060 = !DILocation(line: 1696, column: 27, scope: !9050)
!9061 = !DILocation(line: 1696, column: 5, scope: !9050)
!9062 = !DILocation(line: 1697, column: 16, scope: !9050)
!9063 = !DILocation(line: 1697, column: 15, scope: !9050)
!9064 = !DILocation(line: 1697, column: 5, scope: !9050)
!9065 = !DILocation(line: 1699, column: 5, scope: !9050)
!9066 = !DILocation(line: 1700, column: 5, scope: !9050)
!9067 = !DILocation(line: 1701, column: 5, scope: !9050)
!9068 = !DILocation(line: 1702, column: 5, scope: !9050)
!9069 = !DILocation(line: 1703, column: 5, scope: !9050)
!9070 = !DILocation(line: 1704, column: 5, scope: !9050)
!9071 = !DILocation(line: 1706, column: 5, scope: !9050)
!9072 = !DILocation(line: 1708, column: 18, scope: !9050)
!9073 = !DILocation(line: 1708, column: 27, scope: !9050)
!9074 = !DILocation(line: 1708, column: 5, scope: !9050)
!9075 = !DILocation(line: 1710, column: 5, scope: !9050)
!9076 = !DILocation(line: 1711, column: 5, scope: !9050)
!9077 = !DILocation(line: 1712, column: 5, scope: !9050)
!9078 = !DILocation(line: 1713, column: 5, scope: !9050)
!9079 = !DILocation(line: 1714, column: 5, scope: !9050)
!9080 = !DILocation(line: 1716, column: 5, scope: !9050)
!9081 = !DILocation(line: 1718, column: 18, scope: !9050)
!9082 = !DILocation(line: 1718, column: 27, scope: !9050)
!9083 = !DILocation(line: 1718, column: 5, scope: !9050)
!9084 = !DILocation(line: 1720, column: 5, scope: !9050)
!9085 = !DILocation(line: 1721, column: 5, scope: !9050)
!9086 = !DILocation(line: 1722, column: 5, scope: !9050)
!9087 = !DILocation(line: 1723, column: 5, scope: !9050)
!9088 = !DILocation(line: 1724, column: 5, scope: !9050)
!9089 = !DILocalVariable(name: "dx", scope: !9090, file: !3, line: 1727, type: !1727)
!9090 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1726, column: 4)
!9091 = !DILocation(line: 1727, column: 11, scope: !9090)
!9092 = !DILocation(line: 1727, column: 16, scope: !9090)
!9093 = !DILocation(line: 1727, column: 19, scope: !9090)
!9094 = !DILocation(line: 1727, column: 29, scope: !9090)
!9095 = !DILocation(line: 1727, column: 27, scope: !9090)
!9096 = !DILocalVariable(name: "dy", scope: !9090, file: !3, line: 1727, type: !1727)
!9097 = !DILocation(line: 1727, column: 38, scope: !9090)
!9098 = !DILocation(line: 1727, column: 43, scope: !9090)
!9099 = !DILocation(line: 1727, column: 46, scope: !9090)
!9100 = !DILocation(line: 1727, column: 56, scope: !9090)
!9101 = !DILocation(line: 1727, column: 54, scope: !9090)
!9102 = !DILocalVariable(name: "angle", scope: !9090, file: !3, line: 1728, type: !1727)
!9103 = !DILocation(line: 1728, column: 11, scope: !9090)
!9104 = !DILocation(line: 1728, column: 26, scope: !9090)
!9105 = !DILocation(line: 1728, column: 30, scope: !9090)
!9106 = !DILocation(line: 1728, column: 19, scope: !9090)
!9107 = !DILocalVariable(name: "dist", scope: !9090, file: !3, line: 1729, type: !1727)
!9108 = !DILocation(line: 1729, column: 11, scope: !9090)
!9109 = !DILocation(line: 1729, column: 25, scope: !9090)
!9110 = !DILocation(line: 1729, column: 29, scope: !9090)
!9111 = !DILocation(line: 1729, column: 18, scope: !9090)
!9112 = !DILocalVariable(name: "delta_angle", scope: !9090, file: !3, line: 1730, type: !1727)
!9113 = !DILocation(line: 1730, column: 11, scope: !9090)
!9114 = !DILocation(line: 1730, column: 40, scope: !9090)
!9115 = !DILocation(line: 1730, column: 38, scope: !9090)
!9116 = !DILocation(line: 1730, column: 25, scope: !9090)
!9117 = !DILocalVariable(name: "spacing_angle", scope: !9090, file: !3, line: 1731, type: !1727)
!9118 = !DILocation(line: 1731, column: 11, scope: !9090)
!9119 = !DILocation(line: 1731, column: 41, scope: !9090)
!9120 = !DILocation(line: 1731, column: 39, scope: !9090)
!9121 = !DILocation(line: 1731, column: 27, scope: !9090)
!9122 = !DILocation(line: 1732, column: 5, scope: !9090)
!9123 = !DILocation(line: 1734, column: 5, scope: !9090)
!9124 = !DILocation(line: 1735, column: 5, scope: !9090)
!9125 = !DILocation(line: 1736, column: 17, scope: !9090)
!9126 = !DILocation(line: 1736, column: 20, scope: !9090)
!9127 = !DILocation(line: 1736, column: 5, scope: !9090)
!9128 = !DILocation(line: 1737, column: 17, scope: !9090)
!9129 = !DILocation(line: 1737, column: 5, scope: !9090)
!9130 = !DILocation(line: 1738, column: 5, scope: !9090)
!9131 = !DILocation(line: 1740, column: 18, scope: !9090)
!9132 = !DILocation(line: 1740, column: 28, scope: !9090)
!9133 = !DILocation(line: 1740, column: 31, scope: !9090)
!9134 = !DILocation(line: 1740, column: 26, scope: !9090)
!9135 = !DILocation(line: 1740, column: 41, scope: !9090)
!9136 = !DILocation(line: 1740, column: 39, scope: !9090)
!9137 = !DILocation(line: 1740, column: 50, scope: !9090)
!9138 = !DILocation(line: 1740, column: 60, scope: !9090)
!9139 = !DILocation(line: 1740, column: 63, scope: !9090)
!9140 = !DILocation(line: 1740, column: 58, scope: !9090)
!9141 = !DILocation(line: 1740, column: 73, scope: !9090)
!9142 = !DILocation(line: 1740, column: 71, scope: !9090)
!9143 = !DILocation(line: 1740, column: 5, scope: !9090)
!9144 = !DILocation(line: 1742, column: 5, scope: !9090)
!9145 = !DILocation(line: 1743, column: 5, scope: !9090)
!9146 = !DILocation(line: 1744, column: 13, scope: !9090)
!9147 = !DILocation(line: 1744, column: 19, scope: !9090)
!9148 = !DILocation(line: 1744, column: 27, scope: !9090)
!9149 = !DILocation(line: 1744, column: 25, scope: !9090)
!9150 = !DILocation(line: 1744, column: 40, scope: !9090)
!9151 = !DILocation(line: 1744, column: 48, scope: !9090)
!9152 = !DILocation(line: 1744, column: 46, scope: !9090)
!9153 = !DILocation(line: 1744, column: 5, scope: !9090)
!9154 = !DILocation(line: 1745, column: 13, scope: !9090)
!9155 = !DILocation(line: 1745, column: 19, scope: !9090)
!9156 = !DILocation(line: 1745, column: 27, scope: !9090)
!9157 = !DILocation(line: 1745, column: 25, scope: !9090)
!9158 = !DILocation(line: 1745, column: 42, scope: !9090)
!9159 = !DILocation(line: 1745, column: 50, scope: !9090)
!9160 = !DILocation(line: 1745, column: 48, scope: !9090)
!9161 = !DILocation(line: 1745, column: 5, scope: !9090)
!9162 = !DILocation(line: 1747, column: 5, scope: !9090)
!9163 = !DILocation(line: 1749, column: 23, scope: !9090)
!9164 = !DILocation(line: 1749, column: 31, scope: !9090)
!9165 = !DILocation(line: 1749, column: 29, scope: !9090)
!9166 = !DILocation(line: 1749, column: 18, scope: !9090)
!9167 = !DILocation(line: 1749, column: 46, scope: !9090)
!9168 = !DILocation(line: 1749, column: 44, scope: !9090)
!9169 = !DILocation(line: 1749, column: 57, scope: !9090)
!9170 = !DILocation(line: 1749, column: 65, scope: !9090)
!9171 = !DILocation(line: 1749, column: 63, scope: !9090)
!9172 = !DILocation(line: 1749, column: 52, scope: !9090)
!9173 = !DILocation(line: 1749, column: 80, scope: !9090)
!9174 = !DILocation(line: 1749, column: 78, scope: !9090)
!9175 = !DILocation(line: 1749, column: 5, scope: !9090)
!9176 = !DILocation(line: 1750, column: 15, scope: !9090)
!9177 = !DILocation(line: 1750, column: 5, scope: !9090)
!9178 = !DILocation(line: 1752, column: 5, scope: !9090)
!9179 = !DILocation(line: 1754, column: 5, scope: !9090)
!9180 = !DILocation(line: 1756, column: 23, scope: !9090)
!9181 = !DILocation(line: 1756, column: 31, scope: !9090)
!9182 = !DILocation(line: 1756, column: 29, scope: !9090)
!9183 = !DILocation(line: 1756, column: 18, scope: !9090)
!9184 = !DILocation(line: 1756, column: 46, scope: !9090)
!9185 = !DILocation(line: 1756, column: 44, scope: !9090)
!9186 = !DILocation(line: 1756, column: 57, scope: !9090)
!9187 = !DILocation(line: 1756, column: 65, scope: !9090)
!9188 = !DILocation(line: 1756, column: 63, scope: !9090)
!9189 = !DILocation(line: 1756, column: 52, scope: !9090)
!9190 = !DILocation(line: 1756, column: 80, scope: !9090)
!9191 = !DILocation(line: 1756, column: 78, scope: !9090)
!9192 = !DILocation(line: 1756, column: 5, scope: !9090)
!9193 = !DILocation(line: 1757, column: 15, scope: !9090)
!9194 = !DILocation(line: 1757, column: 5, scope: !9090)
!9195 = !DILocation(line: 1759, column: 5, scope: !9090)
!9196 = !DILocation(line: 1761, column: 5, scope: !9090)
!9197 = !DILocation(line: 1762, column: 5, scope: !9090)
!9198 = !DILocalVariable(name: "col", scope: !9199, file: !3, line: 1766, type: !9200)
!9199 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1765, column: 4)
!9200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2769, size: 24, elements: !1988)
!9201 = !DILocation(line: 1766, column: 19, scope: !9199)
!9202 = !DILocalVariable(name: "col2", scope: !9199, file: !3, line: 1766, type: !9200)
!9203 = !DILocation(line: 1766, column: 27, scope: !9199)
!9204 = !DILocation(line: 1767, column: 35, scope: !9199)
!9205 = !DILocation(line: 1767, column: 5, scope: !9199)
!9206 = !DILocation(line: 1769, column: 18, scope: !9199)
!9207 = !DILocation(line: 1769, column: 27, scope: !9199)
!9208 = !DILocation(line: 1769, column: 5, scope: !9199)
!9209 = !DILocation(line: 1771, column: 5, scope: !9199)
!9210 = !DILocation(line: 1773, column: 24, scope: !9199)
!9211 = !DILocation(line: 1773, column: 29, scope: !9199)
!9212 = !DILocation(line: 1773, column: 5, scope: !9199)
!9213 = !DILocation(line: 1774, column: 28, scope: !9199)
!9214 = !DILocation(line: 1774, column: 5, scope: !9199)
!9215 = !DILocation(line: 1776, column: 5, scope: !9199)
!9216 = !DILocation(line: 1777, column: 5, scope: !9199)
!9217 = !DILocation(line: 1779, column: 24, scope: !9199)
!9218 = !DILocation(line: 1779, column: 29, scope: !9199)
!9219 = !DILocation(line: 1779, column: 5, scope: !9199)
!9220 = !DILocation(line: 1780, column: 28, scope: !9199)
!9221 = !DILocation(line: 1780, column: 5, scope: !9199)
!9222 = !DILocation(line: 1782, column: 5, scope: !9199)
!9223 = !DILocation(line: 1783, column: 5, scope: !9199)
!9224 = !DILocation(line: 1784, column: 5, scope: !9199)
!9225 = !DILocation(line: 1785, column: 5, scope: !9199)
!9226 = !DILocation(line: 1789, column: 3, scope: !8989)
!9227 = !DILocation(line: 1790, column: 2, scope: !8989)
!9228 = !DILocation(line: 1791, column: 1, scope: !8964)
!9229 = distinct !DISubprogram(name: "initSkinResize", scope: !3, file: !3, line: 3378, type: !4434, scopeLine: 3379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!9230 = !DILocalVariable(name: "t", arg: 1, scope: !9229, file: !3, line: 3378, type: !3841)
!9231 = !DILocation(line: 3378, column: 39, scope: !9229)
!9232 = !DILocation(line: 3380, column: 2, scope: !9229)
!9233 = !DILocation(line: 3380, column: 5, scope: !9229)
!9234 = !DILocation(line: 3380, column: 10, scope: !9229)
!9235 = !DILocation(line: 3381, column: 2, scope: !9229)
!9236 = !DILocation(line: 3381, column: 5, scope: !9229)
!9237 = !DILocation(line: 3381, column: 15, scope: !9229)
!9238 = !DILocation(line: 3383, column: 21, scope: !9229)
!9239 = !DILocation(line: 3383, column: 25, scope: !9229)
!9240 = !DILocation(line: 3383, column: 28, scope: !9229)
!9241 = !DILocation(line: 3383, column: 2, scope: !9229)
!9242 = !DILocation(line: 3385, column: 2, scope: !9229)
!9243 = !DILocation(line: 3385, column: 5, scope: !9229)
!9244 = !DILocation(line: 3385, column: 10, scope: !9229)
!9245 = !DILocation(line: 3386, column: 2, scope: !9229)
!9246 = !DILocation(line: 3386, column: 5, scope: !9229)
!9247 = !DILocation(line: 3386, column: 9, scope: !9229)
!9248 = !DILocation(line: 3386, column: 21, scope: !9229)
!9249 = !DILocation(line: 3387, column: 2, scope: !9229)
!9250 = !DILocation(line: 3387, column: 5, scope: !9229)
!9251 = !DILocation(line: 3387, column: 9, scope: !9229)
!9252 = !DILocation(line: 3387, column: 21, scope: !9229)
!9253 = !DILocation(line: 3388, column: 2, scope: !9229)
!9254 = !DILocation(line: 3388, column: 5, scope: !9229)
!9255 = !DILocation(line: 3388, column: 9, scope: !9229)
!9256 = !DILocation(line: 3388, column: 21, scope: !9229)
!9257 = !DILocation(line: 3389, column: 2, scope: !9229)
!9258 = !DILocation(line: 3389, column: 5, scope: !9229)
!9259 = !DILocation(line: 3389, column: 9, scope: !9229)
!9260 = !DILocation(line: 3389, column: 14, scope: !9229)
!9261 = !DILocation(line: 3390, column: 7, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 3390, column: 6)
!9263 = !DILocation(line: 3390, column: 10, scope: !9262)
!9264 = !DILocation(line: 3390, column: 6, scope: !9229)
!9265 = !DILocation(line: 3391, column: 3, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9262, file: !3, line: 3390, column: 18)
!9267 = !DILocation(line: 3391, column: 6, scope: !9266)
!9268 = !DILocation(line: 3391, column: 11, scope: !9266)
!9269 = !DILocation(line: 3397, column: 2, scope: !9266)
!9270 = !DILocation(line: 3399, column: 2, scope: !9229)
!9271 = !DILocation(line: 3399, column: 5, scope: !9229)
!9272 = !DILocation(line: 3399, column: 13, scope: !9229)
!9273 = !DILocation(line: 3400, column: 2, scope: !9229)
!9274 = !DILocation(line: 3400, column: 5, scope: !9229)
!9275 = !DILocation(line: 3400, column: 9, scope: !9229)
!9276 = !DILocation(line: 3400, column: 17, scope: !9229)
!9277 = !DILocation(line: 3401, column: 2, scope: !9229)
!9278 = !DILocation(line: 3401, column: 5, scope: !9229)
!9279 = !DILocation(line: 3401, column: 13, scope: !9229)
!9280 = !DILocation(line: 3402, column: 2, scope: !9229)
!9281 = !DILocation(line: 3402, column: 5, scope: !9229)
!9282 = !DILocation(line: 3402, column: 13, scope: !9229)
!9283 = !DILocation(line: 3403, column: 15, scope: !9229)
!9284 = !DILocation(line: 3403, column: 18, scope: !9229)
!9285 = !DILocation(line: 3403, column: 26, scope: !9229)
!9286 = !DILocation(line: 3403, column: 2, scope: !9229)
!9287 = !DILocation(line: 3403, column: 5, scope: !9229)
!9288 = !DILocation(line: 3403, column: 13, scope: !9229)
!9289 = !DILocation(line: 3405, column: 13, scope: !9229)
!9290 = !DILocation(line: 3405, column: 16, scope: !9229)
!9291 = !DILocation(line: 3405, column: 20, scope: !9229)
!9292 = !DILocation(line: 3405, column: 29, scope: !9229)
!9293 = !DILocation(line: 3405, column: 32, scope: !9229)
!9294 = !DILocation(line: 3405, column: 2, scope: !9229)
!9295 = !DILocation(line: 3406, column: 20, scope: !9229)
!9296 = !DILocation(line: 3406, column: 23, scope: !9229)
!9297 = !DILocation(line: 3406, column: 30, scope: !9229)
!9298 = !DILocation(line: 3406, column: 35, scope: !9229)
!9299 = !DILocation(line: 3406, column: 2, scope: !9229)
!9300 = !DILocation(line: 3406, column: 5, scope: !9229)
!9301 = !DILocation(line: 3406, column: 9, scope: !9229)
!9302 = !DILocation(line: 3406, column: 18, scope: !9229)
!9303 = !DILocation(line: 3407, column: 2, scope: !9229)
!9304 = !DILocation(line: 3407, column: 5, scope: !9229)
!9305 = !DILocation(line: 3407, column: 9, scope: !9229)
!9306 = !DILocation(line: 3407, column: 22, scope: !9229)
!9307 = !DILocation(line: 3408, column: 2, scope: !9229)
!9308 = !DILocation(line: 3408, column: 5, scope: !9229)
!9309 = !DILocation(line: 3408, column: 9, scope: !9229)
!9310 = !DILocation(line: 3408, column: 22, scope: !9229)
!9311 = !DILocation(line: 3409, column: 2, scope: !9229)
!9312 = !DILocation(line: 3409, column: 5, scope: !9229)
!9313 = !DILocation(line: 3409, column: 9, scope: !9229)
!9314 = !DILocation(line: 3409, column: 22, scope: !9229)
!9315 = !DILocation(line: 3410, column: 1, scope: !9229)
!9316 = distinct !DISubprogram(name: "initToSphere", scope: !3, file: !3, line: 3481, type: !4434, scopeLine: 3482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!9317 = !DILocalVariable(name: "t", arg: 1, scope: !9316, file: !3, line: 3481, type: !3841)
!9318 = !DILocation(line: 3481, column: 37, scope: !9316)
!9319 = !DILocalVariable(name: "td", scope: !9316, file: !3, line: 3483, type: !3868)
!9320 = !DILocation(line: 3483, column: 13, scope: !9316)
!9321 = !DILocation(line: 3483, column: 18, scope: !9316)
!9322 = !DILocation(line: 3483, column: 21, scope: !9316)
!9323 = !DILocalVariable(name: "i", scope: !9316, file: !3, line: 3484, type: !35)
!9324 = !DILocation(line: 3484, column: 6, scope: !9316)
!9325 = !DILocation(line: 3486, column: 2, scope: !9316)
!9326 = !DILocation(line: 3486, column: 5, scope: !9316)
!9327 = !DILocation(line: 3486, column: 10, scope: !9316)
!9328 = !DILocation(line: 3487, column: 2, scope: !9316)
!9329 = !DILocation(line: 3487, column: 5, scope: !9316)
!9330 = !DILocation(line: 3487, column: 15, scope: !9316)
!9331 = !DILocation(line: 3489, column: 21, scope: !9316)
!9332 = !DILocation(line: 3489, column: 25, scope: !9316)
!9333 = !DILocation(line: 3489, column: 28, scope: !9316)
!9334 = !DILocation(line: 3489, column: 2, scope: !9316)
!9335 = !DILocation(line: 3491, column: 2, scope: !9316)
!9336 = !DILocation(line: 3491, column: 5, scope: !9316)
!9337 = !DILocation(line: 3491, column: 13, scope: !9316)
!9338 = !DILocation(line: 3492, column: 2, scope: !9316)
!9339 = !DILocation(line: 3492, column: 5, scope: !9316)
!9340 = !DILocation(line: 3492, column: 9, scope: !9316)
!9341 = !DILocation(line: 3492, column: 17, scope: !9316)
!9342 = !DILocation(line: 3493, column: 2, scope: !9316)
!9343 = !DILocation(line: 3493, column: 5, scope: !9316)
!9344 = !DILocation(line: 3493, column: 13, scope: !9316)
!9345 = !DILocation(line: 3494, column: 2, scope: !9316)
!9346 = !DILocation(line: 3494, column: 5, scope: !9316)
!9347 = !DILocation(line: 3494, column: 13, scope: !9316)
!9348 = !DILocation(line: 3495, column: 15, scope: !9316)
!9349 = !DILocation(line: 3495, column: 18, scope: !9316)
!9350 = !DILocation(line: 3495, column: 26, scope: !9316)
!9351 = !DILocation(line: 3495, column: 2, scope: !9316)
!9352 = !DILocation(line: 3495, column: 5, scope: !9316)
!9353 = !DILocation(line: 3495, column: 13, scope: !9316)
!9354 = !DILocation(line: 3497, column: 13, scope: !9316)
!9355 = !DILocation(line: 3497, column: 16, scope: !9316)
!9356 = !DILocation(line: 3497, column: 20, scope: !9316)
!9357 = !DILocation(line: 3497, column: 29, scope: !9316)
!9358 = !DILocation(line: 3497, column: 32, scope: !9316)
!9359 = !DILocation(line: 3497, column: 2, scope: !9316)
!9360 = !DILocation(line: 3498, column: 20, scope: !9316)
!9361 = !DILocation(line: 3498, column: 23, scope: !9316)
!9362 = !DILocation(line: 3498, column: 30, scope: !9316)
!9363 = !DILocation(line: 3498, column: 35, scope: !9316)
!9364 = !DILocation(line: 3498, column: 2, scope: !9316)
!9365 = !DILocation(line: 3498, column: 5, scope: !9316)
!9366 = !DILocation(line: 3498, column: 9, scope: !9316)
!9367 = !DILocation(line: 3498, column: 18, scope: !9316)
!9368 = !DILocation(line: 3499, column: 2, scope: !9316)
!9369 = !DILocation(line: 3499, column: 5, scope: !9316)
!9370 = !DILocation(line: 3499, column: 9, scope: !9316)
!9371 = !DILocation(line: 3499, column: 22, scope: !9316)
!9372 = !DILocation(line: 3501, column: 2, scope: !9316)
!9373 = !DILocation(line: 3501, column: 5, scope: !9316)
!9374 = !DILocation(line: 3501, column: 9, scope: !9316)
!9375 = !DILocation(line: 3501, column: 21, scope: !9316)
!9376 = !DILocation(line: 3502, column: 2, scope: !9316)
!9377 = !DILocation(line: 3502, column: 5, scope: !9316)
!9378 = !DILocation(line: 3502, column: 10, scope: !9316)
!9379 = !DILocation(line: 3505, column: 9, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 3505, column: 2)
!9381 = !DILocation(line: 3505, column: 7, scope: !9380)
!9382 = !DILocation(line: 3505, column: 14, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9380, file: !3, line: 3505, column: 2)
!9384 = !DILocation(line: 3505, column: 18, scope: !9383)
!9385 = !DILocation(line: 3505, column: 21, scope: !9383)
!9386 = !DILocation(line: 3505, column: 16, scope: !9383)
!9387 = !DILocation(line: 3505, column: 2, scope: !9380)
!9388 = !DILocation(line: 3506, column: 22, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9383, file: !3, line: 3505, column: 39)
!9390 = !DILocation(line: 3506, column: 25, scope: !9389)
!9391 = !DILocation(line: 3506, column: 33, scope: !9389)
!9392 = !DILocation(line: 3506, column: 37, scope: !9389)
!9393 = !DILocation(line: 3506, column: 13, scope: !9389)
!9394 = !DILocation(line: 3506, column: 3, scope: !9389)
!9395 = !DILocation(line: 3506, column: 6, scope: !9389)
!9396 = !DILocation(line: 3506, column: 10, scope: !9389)
!9397 = !DILocation(line: 3507, column: 2, scope: !9389)
!9398 = !DILocation(line: 3505, column: 29, scope: !9383)
!9399 = !DILocation(line: 3505, column: 35, scope: !9383)
!9400 = !DILocation(line: 3505, column: 2, scope: !9383)
!9401 = distinct !{!9401, !9387, !9402}
!9402 = !DILocation(line: 3507, column: 2, scope: !9380)
!9403 = !DILocation(line: 3509, column: 19, scope: !9316)
!9404 = !DILocation(line: 3509, column: 22, scope: !9316)
!9405 = !DILocation(line: 3509, column: 12, scope: !9316)
!9406 = !DILocation(line: 3509, column: 2, scope: !9316)
!9407 = !DILocation(line: 3509, column: 5, scope: !9316)
!9408 = !DILocation(line: 3509, column: 9, scope: !9316)
!9409 = !DILocation(line: 3510, column: 1, scope: !9316)
!9410 = distinct !DISubprogram(name: "initShear", scope: !3, file: !3, line: 2944, type: !4434, scopeLine: 2945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!9411 = !DILocalVariable(name: "t", arg: 1, scope: !9410, file: !3, line: 2944, type: !3841)
!9412 = !DILocation(line: 2944, column: 34, scope: !9410)
!9413 = !DILocation(line: 2946, column: 2, scope: !9410)
!9414 = !DILocation(line: 2946, column: 5, scope: !9410)
!9415 = !DILocation(line: 2946, column: 10, scope: !9410)
!9416 = !DILocation(line: 2947, column: 2, scope: !9410)
!9417 = !DILocation(line: 2947, column: 5, scope: !9410)
!9418 = !DILocation(line: 2947, column: 15, scope: !9410)
!9419 = !DILocation(line: 2948, column: 2, scope: !9410)
!9420 = !DILocation(line: 2948, column: 5, scope: !9410)
!9421 = !DILocation(line: 2948, column: 17, scope: !9410)
!9422 = !DILocation(line: 2950, column: 19, scope: !9410)
!9423 = !DILocation(line: 2950, column: 22, scope: !9410)
!9424 = !DILocation(line: 2950, column: 2, scope: !9410)
!9425 = !DILocation(line: 2951, column: 21, scope: !9410)
!9426 = !DILocation(line: 2951, column: 25, scope: !9410)
!9427 = !DILocation(line: 2951, column: 28, scope: !9410)
!9428 = !DILocation(line: 2951, column: 2, scope: !9410)
!9429 = !DILocation(line: 2953, column: 2, scope: !9410)
!9430 = !DILocation(line: 2953, column: 5, scope: !9410)
!9431 = !DILocation(line: 2953, column: 13, scope: !9410)
!9432 = !DILocation(line: 2954, column: 2, scope: !9410)
!9433 = !DILocation(line: 2954, column: 5, scope: !9410)
!9434 = !DILocation(line: 2954, column: 9, scope: !9410)
!9435 = !DILocation(line: 2954, column: 17, scope: !9410)
!9436 = !DILocation(line: 2955, column: 2, scope: !9410)
!9437 = !DILocation(line: 2955, column: 5, scope: !9410)
!9438 = !DILocation(line: 2955, column: 13, scope: !9410)
!9439 = !DILocation(line: 2956, column: 2, scope: !9410)
!9440 = !DILocation(line: 2956, column: 5, scope: !9410)
!9441 = !DILocation(line: 2956, column: 13, scope: !9410)
!9442 = !DILocation(line: 2957, column: 15, scope: !9410)
!9443 = !DILocation(line: 2957, column: 18, scope: !9410)
!9444 = !DILocation(line: 2957, column: 26, scope: !9410)
!9445 = !DILocation(line: 2957, column: 2, scope: !9410)
!9446 = !DILocation(line: 2957, column: 5, scope: !9410)
!9447 = !DILocation(line: 2957, column: 13, scope: !9410)
!9448 = !DILocation(line: 2959, column: 13, scope: !9410)
!9449 = !DILocation(line: 2959, column: 16, scope: !9410)
!9450 = !DILocation(line: 2959, column: 20, scope: !9410)
!9451 = !DILocation(line: 2959, column: 29, scope: !9410)
!9452 = !DILocation(line: 2959, column: 32, scope: !9410)
!9453 = !DILocation(line: 2959, column: 2, scope: !9410)
!9454 = !DILocation(line: 2960, column: 20, scope: !9410)
!9455 = !DILocation(line: 2960, column: 23, scope: !9410)
!9456 = !DILocation(line: 2960, column: 30, scope: !9410)
!9457 = !DILocation(line: 2960, column: 35, scope: !9410)
!9458 = !DILocation(line: 2960, column: 2, scope: !9410)
!9459 = !DILocation(line: 2960, column: 5, scope: !9410)
!9460 = !DILocation(line: 2960, column: 9, scope: !9410)
!9461 = !DILocation(line: 2960, column: 18, scope: !9410)
!9462 = !DILocation(line: 2961, column: 2, scope: !9410)
!9463 = !DILocation(line: 2961, column: 5, scope: !9410)
!9464 = !DILocation(line: 2961, column: 9, scope: !9410)
!9465 = !DILocation(line: 2961, column: 22, scope: !9410)
!9466 = !DILocation(line: 2963, column: 2, scope: !9410)
!9467 = !DILocation(line: 2963, column: 5, scope: !9410)
!9468 = !DILocation(line: 2963, column: 10, scope: !9410)
!9469 = !DILocation(line: 2964, column: 1, scope: !9410)
!9470 = distinct !DISubprogram(name: "initBend", scope: !3, file: !3, line: 2745, type: !4434, scopeLine: 2746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!9471 = !DILocalVariable(name: "t", arg: 1, scope: !9470, file: !3, line: 2745, type: !3841)
!9472 = !DILocation(line: 2745, column: 33, scope: !9470)
!9473 = !DILocalVariable(name: "mval_fl", scope: !9470, file: !3, line: 2747, type: !4601)
!9474 = !DILocation(line: 2747, column: 14, scope: !9470)
!9475 = !DILocation(line: 2747, column: 27, scope: !9470)
!9476 = !DILocation(line: 2747, column: 28, scope: !9470)
!9477 = !DILocalVariable(name: "curs", scope: !9470, file: !3, line: 2748, type: !3980)
!9478 = !DILocation(line: 2748, column: 15, scope: !9470)
!9479 = !DILocalVariable(name: "tvec", scope: !9470, file: !3, line: 2749, type: !1987)
!9480 = !DILocation(line: 2749, column: 8, scope: !9470)
!9481 = !DILocalVariable(name: "data", scope: !9470, file: !3, line: 2750, type: !9482)
!9482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9483, size: 64)
!9483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BendCustomData", file: !3, line: 2734, size: 416, elements: !9484)
!9484 = !{!9485, !9486, !9487, !9488, !9489}
!9485 = !DIDerivedType(tag: DW_TAG_member, name: "warp_sta", scope: !9483, file: !3, line: 2735, baseType: !1987, size: 96)
!9486 = !DIDerivedType(tag: DW_TAG_member, name: "warp_end", scope: !9483, file: !3, line: 2736, baseType: !1987, size: 96, offset: 96)
!9487 = !DIDerivedType(tag: DW_TAG_member, name: "warp_nor", scope: !9483, file: !3, line: 2738, baseType: !1987, size: 96, offset: 192)
!9488 = !DIDerivedType(tag: DW_TAG_member, name: "warp_tan", scope: !9483, file: !3, line: 2739, baseType: !1987, size: 96, offset: 288)
!9489 = !DIDerivedType(tag: DW_TAG_member, name: "warp_init_dist", scope: !9483, file: !3, line: 2742, baseType: !1727, size: 32, offset: 384)
!9490 = !DILocation(line: 2750, column: 25, scope: !9470)
!9491 = !DILocation(line: 2752, column: 2, scope: !9470)
!9492 = !DILocation(line: 2752, column: 5, scope: !9470)
!9493 = !DILocation(line: 2752, column: 10, scope: !9470)
!9494 = !DILocation(line: 2753, column: 2, scope: !9470)
!9495 = !DILocation(line: 2753, column: 5, scope: !9470)
!9496 = !DILocation(line: 2753, column: 15, scope: !9470)
!9497 = !DILocation(line: 2754, column: 2, scope: !9470)
!9498 = !DILocation(line: 2754, column: 5, scope: !9470)
!9499 = !DILocation(line: 2754, column: 17, scope: !9470)
!9500 = !DILocation(line: 2756, column: 19, scope: !9470)
!9501 = !DILocation(line: 2756, column: 22, scope: !9470)
!9502 = !DILocation(line: 2756, column: 2, scope: !9470)
!9503 = !DILocation(line: 2757, column: 21, scope: !9470)
!9504 = !DILocation(line: 2757, column: 25, scope: !9470)
!9505 = !DILocation(line: 2757, column: 28, scope: !9470)
!9506 = !DILocation(line: 2757, column: 2, scope: !9470)
!9507 = !DILocation(line: 2759, column: 2, scope: !9470)
!9508 = !DILocation(line: 2759, column: 5, scope: !9470)
!9509 = !DILocation(line: 2759, column: 13, scope: !9470)
!9510 = !DILocation(line: 2760, column: 2, scope: !9470)
!9511 = !DILocation(line: 2760, column: 5, scope: !9470)
!9512 = !DILocation(line: 2760, column: 9, scope: !9470)
!9513 = !DILocation(line: 2760, column: 17, scope: !9470)
!9514 = !DILocation(line: 2761, column: 2, scope: !9470)
!9515 = !DILocation(line: 2761, column: 5, scope: !9470)
!9516 = !DILocation(line: 2761, column: 13, scope: !9470)
!9517 = !DILocation(line: 2762, column: 2, scope: !9470)
!9518 = !DILocation(line: 2762, column: 5, scope: !9470)
!9519 = !DILocation(line: 2762, column: 13, scope: !9470)
!9520 = !DILocation(line: 2763, column: 2, scope: !9470)
!9521 = !DILocation(line: 2763, column: 5, scope: !9470)
!9522 = !DILocation(line: 2763, column: 13, scope: !9470)
!9523 = !DILocation(line: 2765, column: 13, scope: !9470)
!9524 = !DILocation(line: 2765, column: 16, scope: !9470)
!9525 = !DILocation(line: 2765, column: 20, scope: !9470)
!9526 = !DILocation(line: 2765, column: 29, scope: !9470)
!9527 = !DILocation(line: 2765, column: 32, scope: !9470)
!9528 = !DILocation(line: 2765, column: 2, scope: !9470)
!9529 = !DILocation(line: 2766, column: 20, scope: !9470)
!9530 = !DILocation(line: 2766, column: 23, scope: !9470)
!9531 = !DILocation(line: 2766, column: 30, scope: !9470)
!9532 = !DILocation(line: 2766, column: 35, scope: !9470)
!9533 = !DILocation(line: 2766, column: 2, scope: !9470)
!9534 = !DILocation(line: 2766, column: 5, scope: !9470)
!9535 = !DILocation(line: 2766, column: 9, scope: !9470)
!9536 = !DILocation(line: 2766, column: 18, scope: !9470)
!9537 = !DILocation(line: 2767, column: 29, scope: !9470)
!9538 = !DILocation(line: 2767, column: 32, scope: !9470)
!9539 = !DILocation(line: 2767, column: 39, scope: !9470)
!9540 = !DILocation(line: 2767, column: 44, scope: !9470)
!9541 = !DILocation(line: 2767, column: 60, scope: !9470)
!9542 = !DILocation(line: 2767, column: 28, scope: !9470)
!9543 = !DILocation(line: 2767, column: 2, scope: !9470)
!9544 = !DILocation(line: 2767, column: 5, scope: !9470)
!9545 = !DILocation(line: 2767, column: 9, scope: !9470)
!9546 = !DILocation(line: 2767, column: 26, scope: !9470)
!9547 = !DILocation(line: 2768, column: 2, scope: !9470)
!9548 = !DILocation(line: 2768, column: 5, scope: !9470)
!9549 = !DILocation(line: 2768, column: 9, scope: !9470)
!9550 = !DILocation(line: 2768, column: 22, scope: !9470)
!9551 = !DILocation(line: 2769, column: 2, scope: !9470)
!9552 = !DILocation(line: 2769, column: 5, scope: !9470)
!9553 = !DILocation(line: 2769, column: 9, scope: !9470)
!9554 = !DILocation(line: 2769, column: 22, scope: !9470)
!9555 = !DILocation(line: 2771, column: 2, scope: !9470)
!9556 = !DILocation(line: 2771, column: 5, scope: !9470)
!9557 = !DILocation(line: 2771, column: 10, scope: !9470)
!9558 = !DILocation(line: 2774, column: 24, scope: !9470)
!9559 = !DILocation(line: 2774, column: 27, scope: !9470)
!9560 = !DILocation(line: 2774, column: 30, scope: !9470)
!9561 = !DILocation(line: 2774, column: 2, scope: !9470)
!9562 = !DILocation(line: 2776, column: 2, scope: !9470)
!9563 = !DILocation(line: 2776, column: 5, scope: !9470)
!9564 = !DILocation(line: 2776, column: 9, scope: !9470)
!9565 = !DILocation(line: 2778, column: 9, scope: !9470)
!9566 = !DILocation(line: 2778, column: 7, scope: !9470)
!9567 = !DILocation(line: 2780, column: 32, scope: !9470)
!9568 = !DILocation(line: 2780, column: 35, scope: !9470)
!9569 = !DILocation(line: 2780, column: 42, scope: !9470)
!9570 = !DILocation(line: 2780, column: 45, scope: !9470)
!9571 = !DILocation(line: 2780, column: 9, scope: !9470)
!9572 = !DILocation(line: 2780, column: 7, scope: !9470)
!9573 = !DILocation(line: 2781, column: 13, scope: !9470)
!9574 = !DILocation(line: 2781, column: 19, scope: !9470)
!9575 = !DILocation(line: 2781, column: 29, scope: !9470)
!9576 = !DILocation(line: 2781, column: 2, scope: !9470)
!9577 = !DILocation(line: 2782, column: 22, scope: !9470)
!9578 = !DILocation(line: 2782, column: 25, scope: !9470)
!9579 = !DILocation(line: 2782, column: 29, scope: !9470)
!9580 = !DILocation(line: 2782, column: 35, scope: !9470)
!9581 = !DILocation(line: 2782, column: 44, scope: !9470)
!9582 = !DILocation(line: 2782, column: 50, scope: !9470)
!9583 = !DILocation(line: 2782, column: 2, scope: !9470)
!9584 = !DILocation(line: 2784, column: 13, scope: !9470)
!9585 = !DILocation(line: 2784, column: 19, scope: !9470)
!9586 = !DILocation(line: 2784, column: 29, scope: !9470)
!9587 = !DILocation(line: 2784, column: 32, scope: !9470)
!9588 = !DILocation(line: 2784, column: 2, scope: !9470)
!9589 = !DILocation(line: 2785, column: 6, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 2785, column: 6)
!9591 = !DILocation(line: 2785, column: 9, scope: !9590)
!9592 = !DILocation(line: 2785, column: 14, scope: !9590)
!9593 = !DILocation(line: 2785, column: 6, scope: !9470)
!9594 = !DILocation(line: 2786, column: 13, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9590, file: !3, line: 2785, column: 24)
!9596 = !DILocation(line: 2786, column: 19, scope: !9595)
!9597 = !DILocation(line: 2786, column: 29, scope: !9595)
!9598 = !DILocation(line: 2786, column: 32, scope: !9595)
!9599 = !DILocation(line: 2786, column: 40, scope: !9595)
!9600 = !DILocation(line: 2786, column: 3, scope: !9595)
!9601 = !DILocation(line: 2787, column: 13, scope: !9595)
!9602 = !DILocation(line: 2787, column: 19, scope: !9595)
!9603 = !DILocation(line: 2787, column: 29, scope: !9595)
!9604 = !DILocation(line: 2787, column: 32, scope: !9595)
!9605 = !DILocation(line: 2787, column: 40, scope: !9595)
!9606 = !DILocation(line: 2787, column: 3, scope: !9595)
!9607 = !DILocation(line: 2788, column: 2, scope: !9595)
!9608 = !DILocation(line: 2789, column: 15, scope: !9470)
!9609 = !DILocation(line: 2789, column: 21, scope: !9470)
!9610 = !DILocation(line: 2789, column: 2, scope: !9470)
!9611 = !DILocation(line: 2792, column: 14, scope: !9470)
!9612 = !DILocation(line: 2792, column: 20, scope: !9470)
!9613 = !DILocation(line: 2792, column: 26, scope: !9470)
!9614 = !DILocation(line: 2792, column: 36, scope: !9470)
!9615 = !DILocation(line: 2792, column: 42, scope: !9470)
!9616 = !DILocation(line: 2792, column: 2, scope: !9470)
!9617 = !DILocation(line: 2793, column: 16, scope: !9470)
!9618 = !DILocation(line: 2793, column: 22, scope: !9470)
!9619 = !DILocation(line: 2793, column: 32, scope: !9470)
!9620 = !DILocation(line: 2793, column: 38, scope: !9470)
!9621 = !DILocation(line: 2793, column: 44, scope: !9470)
!9622 = !DILocation(line: 2793, column: 2, scope: !9470)
!9623 = !DILocation(line: 2794, column: 15, scope: !9470)
!9624 = !DILocation(line: 2794, column: 21, scope: !9470)
!9625 = !DILocation(line: 2794, column: 2, scope: !9470)
!9626 = !DILocation(line: 2796, column: 34, scope: !9470)
!9627 = !DILocation(line: 2796, column: 40, scope: !9470)
!9628 = !DILocation(line: 2796, column: 50, scope: !9470)
!9629 = !DILocation(line: 2796, column: 56, scope: !9470)
!9630 = !DILocation(line: 2796, column: 25, scope: !9470)
!9631 = !DILocation(line: 2796, column: 2, scope: !9470)
!9632 = !DILocation(line: 2796, column: 8, scope: !9470)
!9633 = !DILocation(line: 2796, column: 23, scope: !9470)
!9634 = !DILocation(line: 2798, column: 18, scope: !9470)
!9635 = !DILocation(line: 2798, column: 2, scope: !9470)
!9636 = !DILocation(line: 2798, column: 5, scope: !9470)
!9637 = !DILocation(line: 2798, column: 16, scope: !9470)
!9638 = !DILocation(line: 2799, column: 1, scope: !9470)
!9639 = distinct !DISubprogram(name: "initShrinkFatten", scope: !3, file: !3, line: 4313, type: !4434, scopeLine: 4314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!9640 = !DILocalVariable(name: "t", arg: 1, scope: !9639, file: !3, line: 4313, type: !3841)
!9641 = !DILocation(line: 4313, column: 41, scope: !9639)
!9642 = !DILocation(line: 4316, column: 6, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 4316, column: 6)
!9644 = !DILocation(line: 4316, column: 9, scope: !9643)
!9645 = !DILocation(line: 4316, column: 16, scope: !9643)
!9646 = !DILocation(line: 4316, column: 24, scope: !9643)
!9647 = !DILocation(line: 4316, column: 27, scope: !9643)
!9648 = !DILocation(line: 4316, column: 30, scope: !9643)
!9649 = !DILocation(line: 4316, column: 38, scope: !9643)
!9650 = !DILocation(line: 4316, column: 43, scope: !9643)
!9651 = !DILocation(line: 4316, column: 6, scope: !9639)
!9652 = !DILocation(line: 4317, column: 14, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9643, file: !3, line: 4316, column: 55)
!9654 = !DILocation(line: 4317, column: 3, scope: !9653)
!9655 = !DILocation(line: 4318, column: 2, scope: !9653)
!9656 = !DILocation(line: 4320, column: 3, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9643, file: !3, line: 4319, column: 7)
!9658 = !DILocation(line: 4320, column: 6, scope: !9657)
!9659 = !DILocation(line: 4320, column: 11, scope: !9657)
!9660 = !DILocation(line: 4321, column: 3, scope: !9657)
!9661 = !DILocation(line: 4321, column: 6, scope: !9657)
!9662 = !DILocation(line: 4321, column: 16, scope: !9657)
!9663 = !DILocation(line: 4323, column: 22, scope: !9657)
!9664 = !DILocation(line: 4323, column: 26, scope: !9657)
!9665 = !DILocation(line: 4323, column: 29, scope: !9657)
!9666 = !DILocation(line: 4323, column: 3, scope: !9657)
!9667 = !DILocation(line: 4325, column: 3, scope: !9657)
!9668 = !DILocation(line: 4325, column: 6, scope: !9657)
!9669 = !DILocation(line: 4325, column: 14, scope: !9657)
!9670 = !DILocation(line: 4326, column: 3, scope: !9657)
!9671 = !DILocation(line: 4326, column: 6, scope: !9657)
!9672 = !DILocation(line: 4326, column: 10, scope: !9657)
!9673 = !DILocation(line: 4326, column: 18, scope: !9657)
!9674 = !DILocation(line: 4327, column: 3, scope: !9657)
!9675 = !DILocation(line: 4327, column: 6, scope: !9657)
!9676 = !DILocation(line: 4327, column: 14, scope: !9657)
!9677 = !DILocation(line: 4328, column: 3, scope: !9657)
!9678 = !DILocation(line: 4328, column: 6, scope: !9657)
!9679 = !DILocation(line: 4328, column: 14, scope: !9657)
!9680 = !DILocation(line: 4329, column: 16, scope: !9657)
!9681 = !DILocation(line: 4329, column: 19, scope: !9657)
!9682 = !DILocation(line: 4329, column: 27, scope: !9657)
!9683 = !DILocation(line: 4329, column: 3, scope: !9657)
!9684 = !DILocation(line: 4329, column: 6, scope: !9657)
!9685 = !DILocation(line: 4329, column: 14, scope: !9657)
!9686 = !DILocation(line: 4331, column: 14, scope: !9657)
!9687 = !DILocation(line: 4331, column: 17, scope: !9657)
!9688 = !DILocation(line: 4331, column: 21, scope: !9657)
!9689 = !DILocation(line: 4331, column: 30, scope: !9657)
!9690 = !DILocation(line: 4331, column: 33, scope: !9657)
!9691 = !DILocation(line: 4331, column: 3, scope: !9657)
!9692 = !DILocation(line: 4332, column: 21, scope: !9657)
!9693 = !DILocation(line: 4332, column: 24, scope: !9657)
!9694 = !DILocation(line: 4332, column: 31, scope: !9657)
!9695 = !DILocation(line: 4332, column: 36, scope: !9657)
!9696 = !DILocation(line: 4332, column: 3, scope: !9657)
!9697 = !DILocation(line: 4332, column: 6, scope: !9657)
!9698 = !DILocation(line: 4332, column: 10, scope: !9657)
!9699 = !DILocation(line: 4332, column: 19, scope: !9657)
!9700 = !DILocation(line: 4333, column: 3, scope: !9657)
!9701 = !DILocation(line: 4333, column: 6, scope: !9657)
!9702 = !DILocation(line: 4333, column: 10, scope: !9657)
!9703 = !DILocation(line: 4333, column: 23, scope: !9657)
!9704 = !DILocation(line: 4335, column: 3, scope: !9657)
!9705 = !DILocation(line: 4335, column: 6, scope: !9657)
!9706 = !DILocation(line: 4335, column: 11, scope: !9657)
!9707 = !DILocation(line: 4337, column: 1, scope: !9639)
!9708 = distinct !DISubprogram(name: "initTilt", scope: !3, file: !3, line: 4414, type: !4434, scopeLine: 4415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!9709 = !DILocalVariable(name: "t", arg: 1, scope: !9708, file: !3, line: 4414, type: !3841)
!9710 = !DILocation(line: 4414, column: 33, scope: !9708)
!9711 = !DILocation(line: 4416, column: 2, scope: !9708)
!9712 = !DILocation(line: 4416, column: 5, scope: !9708)
!9713 = !DILocation(line: 4416, column: 10, scope: !9708)
!9714 = !DILocation(line: 4417, column: 2, scope: !9708)
!9715 = !DILocation(line: 4417, column: 5, scope: !9708)
!9716 = !DILocation(line: 4417, column: 15, scope: !9708)
!9717 = !DILocation(line: 4419, column: 21, scope: !9708)
!9718 = !DILocation(line: 4419, column: 25, scope: !9708)
!9719 = !DILocation(line: 4419, column: 28, scope: !9708)
!9720 = !DILocation(line: 4419, column: 2, scope: !9708)
!9721 = !DILocation(line: 4421, column: 2, scope: !9708)
!9722 = !DILocation(line: 4421, column: 5, scope: !9708)
!9723 = !DILocation(line: 4421, column: 13, scope: !9708)
!9724 = !DILocation(line: 4422, column: 2, scope: !9708)
!9725 = !DILocation(line: 4422, column: 5, scope: !9708)
!9726 = !DILocation(line: 4422, column: 9, scope: !9708)
!9727 = !DILocation(line: 4422, column: 17, scope: !9708)
!9728 = !DILocation(line: 4423, column: 2, scope: !9708)
!9729 = !DILocation(line: 4423, column: 5, scope: !9708)
!9730 = !DILocation(line: 4423, column: 13, scope: !9708)
!9731 = !DILocation(line: 4424, column: 2, scope: !9708)
!9732 = !DILocation(line: 4424, column: 5, scope: !9708)
!9733 = !DILocation(line: 4424, column: 13, scope: !9708)
!9734 = !DILocation(line: 4425, column: 2, scope: !9708)
!9735 = !DILocation(line: 4425, column: 5, scope: !9708)
!9736 = !DILocation(line: 4425, column: 13, scope: !9708)
!9737 = !DILocation(line: 4427, column: 13, scope: !9708)
!9738 = !DILocation(line: 4427, column: 16, scope: !9708)
!9739 = !DILocation(line: 4427, column: 20, scope: !9708)
!9740 = !DILocation(line: 4427, column: 29, scope: !9708)
!9741 = !DILocation(line: 4427, column: 32, scope: !9708)
!9742 = !DILocation(line: 4427, column: 2, scope: !9708)
!9743 = !DILocation(line: 4428, column: 20, scope: !9708)
!9744 = !DILocation(line: 4428, column: 23, scope: !9708)
!9745 = !DILocation(line: 4428, column: 30, scope: !9708)
!9746 = !DILocation(line: 4428, column: 35, scope: !9708)
!9747 = !DILocation(line: 4428, column: 2, scope: !9708)
!9748 = !DILocation(line: 4428, column: 5, scope: !9708)
!9749 = !DILocation(line: 4428, column: 9, scope: !9708)
!9750 = !DILocation(line: 4428, column: 18, scope: !9708)
!9751 = !DILocation(line: 4429, column: 29, scope: !9708)
!9752 = !DILocation(line: 4429, column: 32, scope: !9708)
!9753 = !DILocation(line: 4429, column: 39, scope: !9708)
!9754 = !DILocation(line: 4429, column: 44, scope: !9708)
!9755 = !DILocation(line: 4429, column: 60, scope: !9708)
!9756 = !DILocation(line: 4429, column: 28, scope: !9708)
!9757 = !DILocation(line: 4429, column: 2, scope: !9708)
!9758 = !DILocation(line: 4429, column: 5, scope: !9708)
!9759 = !DILocation(line: 4429, column: 9, scope: !9708)
!9760 = !DILocation(line: 4429, column: 26, scope: !9708)
!9761 = !DILocation(line: 4430, column: 2, scope: !9708)
!9762 = !DILocation(line: 4430, column: 5, scope: !9708)
!9763 = !DILocation(line: 4430, column: 9, scope: !9708)
!9764 = !DILocation(line: 4430, column: 22, scope: !9708)
!9765 = !DILocation(line: 4432, column: 2, scope: !9708)
!9766 = !DILocation(line: 4432, column: 5, scope: !9708)
!9767 = !DILocation(line: 4432, column: 10, scope: !9708)
!9768 = !DILocation(line: 4433, column: 1, scope: !9708)
!9769 = distinct !DISubprogram(name: "initCurveShrinkFatten", scope: !3, file: !3, line: 4489, type: !4434, scopeLine: 4490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!9770 = !DILocalVariable(name: "t", arg: 1, scope: !9769, file: !3, line: 4489, type: !3841)
!9771 = !DILocation(line: 4489, column: 46, scope: !9769)
!9772 = !DILocation(line: 4491, column: 2, scope: !9769)
!9773 = !DILocation(line: 4491, column: 5, scope: !9769)
!9774 = !DILocation(line: 4491, column: 10, scope: !9769)
!9775 = !DILocation(line: 4492, column: 2, scope: !9769)
!9776 = !DILocation(line: 4492, column: 5, scope: !9769)
!9777 = !DILocation(line: 4492, column: 15, scope: !9769)
!9778 = !DILocation(line: 4494, column: 21, scope: !9769)
!9779 = !DILocation(line: 4494, column: 25, scope: !9769)
!9780 = !DILocation(line: 4494, column: 28, scope: !9769)
!9781 = !DILocation(line: 4494, column: 2, scope: !9769)
!9782 = !DILocation(line: 4496, column: 2, scope: !9769)
!9783 = !DILocation(line: 4496, column: 5, scope: !9769)
!9784 = !DILocation(line: 4496, column: 13, scope: !9769)
!9785 = !DILocation(line: 4497, column: 2, scope: !9769)
!9786 = !DILocation(line: 4497, column: 5, scope: !9769)
!9787 = !DILocation(line: 4497, column: 9, scope: !9769)
!9788 = !DILocation(line: 4497, column: 17, scope: !9769)
!9789 = !DILocation(line: 4498, column: 2, scope: !9769)
!9790 = !DILocation(line: 4498, column: 5, scope: !9769)
!9791 = !DILocation(line: 4498, column: 13, scope: !9769)
!9792 = !DILocation(line: 4499, column: 2, scope: !9769)
!9793 = !DILocation(line: 4499, column: 5, scope: !9769)
!9794 = !DILocation(line: 4499, column: 13, scope: !9769)
!9795 = !DILocation(line: 4500, column: 15, scope: !9769)
!9796 = !DILocation(line: 4500, column: 18, scope: !9769)
!9797 = !DILocation(line: 4500, column: 26, scope: !9769)
!9798 = !DILocation(line: 4500, column: 2, scope: !9769)
!9799 = !DILocation(line: 4500, column: 5, scope: !9769)
!9800 = !DILocation(line: 4500, column: 13, scope: !9769)
!9801 = !DILocation(line: 4502, column: 13, scope: !9769)
!9802 = !DILocation(line: 4502, column: 16, scope: !9769)
!9803 = !DILocation(line: 4502, column: 20, scope: !9769)
!9804 = !DILocation(line: 4502, column: 29, scope: !9769)
!9805 = !DILocation(line: 4502, column: 32, scope: !9769)
!9806 = !DILocation(line: 4502, column: 2, scope: !9769)
!9807 = !DILocation(line: 4503, column: 20, scope: !9769)
!9808 = !DILocation(line: 4503, column: 23, scope: !9769)
!9809 = !DILocation(line: 4503, column: 30, scope: !9769)
!9810 = !DILocation(line: 4503, column: 35, scope: !9769)
!9811 = !DILocation(line: 4503, column: 2, scope: !9769)
!9812 = !DILocation(line: 4503, column: 5, scope: !9769)
!9813 = !DILocation(line: 4503, column: 9, scope: !9769)
!9814 = !DILocation(line: 4503, column: 18, scope: !9769)
!9815 = !DILocation(line: 4504, column: 2, scope: !9769)
!9816 = !DILocation(line: 4504, column: 5, scope: !9769)
!9817 = !DILocation(line: 4504, column: 9, scope: !9769)
!9818 = !DILocation(line: 4504, column: 22, scope: !9769)
!9819 = !DILocation(line: 4506, column: 2, scope: !9769)
!9820 = !DILocation(line: 4506, column: 5, scope: !9769)
!9821 = !DILocation(line: 4506, column: 10, scope: !9769)
!9822 = !DILocation(line: 4511, column: 2, scope: !9769)
!9823 = !DILocation(line: 4511, column: 5, scope: !9769)
!9824 = !DILocation(line: 4511, column: 10, scope: !9769)
!9825 = !DILocation(line: 4512, column: 1, scope: !9769)
!9826 = distinct !DISubprogram(name: "initMaskShrinkFatten", scope: !3, file: !3, line: 4566, type: !4434, scopeLine: 4567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!9827 = !DILocalVariable(name: "t", arg: 1, scope: !9826, file: !3, line: 4566, type: !3841)
!9828 = !DILocation(line: 4566, column: 45, scope: !9826)
!9829 = !DILocation(line: 4568, column: 2, scope: !9826)
!9830 = !DILocation(line: 4568, column: 5, scope: !9826)
!9831 = !DILocation(line: 4568, column: 10, scope: !9826)
!9832 = !DILocation(line: 4569, column: 2, scope: !9826)
!9833 = !DILocation(line: 4569, column: 5, scope: !9826)
!9834 = !DILocation(line: 4569, column: 15, scope: !9826)
!9835 = !DILocation(line: 4571, column: 21, scope: !9826)
!9836 = !DILocation(line: 4571, column: 25, scope: !9826)
!9837 = !DILocation(line: 4571, column: 28, scope: !9826)
!9838 = !DILocation(line: 4571, column: 2, scope: !9826)
!9839 = !DILocation(line: 4573, column: 2, scope: !9826)
!9840 = !DILocation(line: 4573, column: 5, scope: !9826)
!9841 = !DILocation(line: 4573, column: 13, scope: !9826)
!9842 = !DILocation(line: 4574, column: 2, scope: !9826)
!9843 = !DILocation(line: 4574, column: 5, scope: !9826)
!9844 = !DILocation(line: 4574, column: 9, scope: !9826)
!9845 = !DILocation(line: 4574, column: 17, scope: !9826)
!9846 = !DILocation(line: 4575, column: 2, scope: !9826)
!9847 = !DILocation(line: 4575, column: 5, scope: !9826)
!9848 = !DILocation(line: 4575, column: 13, scope: !9826)
!9849 = !DILocation(line: 4576, column: 2, scope: !9826)
!9850 = !DILocation(line: 4576, column: 5, scope: !9826)
!9851 = !DILocation(line: 4576, column: 13, scope: !9826)
!9852 = !DILocation(line: 4577, column: 15, scope: !9826)
!9853 = !DILocation(line: 4577, column: 18, scope: !9826)
!9854 = !DILocation(line: 4577, column: 26, scope: !9826)
!9855 = !DILocation(line: 4577, column: 2, scope: !9826)
!9856 = !DILocation(line: 4577, column: 5, scope: !9826)
!9857 = !DILocation(line: 4577, column: 13, scope: !9826)
!9858 = !DILocation(line: 4579, column: 13, scope: !9826)
!9859 = !DILocation(line: 4579, column: 16, scope: !9826)
!9860 = !DILocation(line: 4579, column: 20, scope: !9826)
!9861 = !DILocation(line: 4579, column: 29, scope: !9826)
!9862 = !DILocation(line: 4579, column: 32, scope: !9826)
!9863 = !DILocation(line: 4579, column: 2, scope: !9826)
!9864 = !DILocation(line: 4580, column: 20, scope: !9826)
!9865 = !DILocation(line: 4580, column: 23, scope: !9826)
!9866 = !DILocation(line: 4580, column: 30, scope: !9826)
!9867 = !DILocation(line: 4580, column: 35, scope: !9826)
!9868 = !DILocation(line: 4580, column: 2, scope: !9826)
!9869 = !DILocation(line: 4580, column: 5, scope: !9826)
!9870 = !DILocation(line: 4580, column: 9, scope: !9826)
!9871 = !DILocation(line: 4580, column: 18, scope: !9826)
!9872 = !DILocation(line: 4581, column: 2, scope: !9826)
!9873 = !DILocation(line: 4581, column: 5, scope: !9826)
!9874 = !DILocation(line: 4581, column: 9, scope: !9826)
!9875 = !DILocation(line: 4581, column: 22, scope: !9826)
!9876 = !DILocation(line: 4583, column: 2, scope: !9826)
!9877 = !DILocation(line: 4583, column: 5, scope: !9826)
!9878 = !DILocation(line: 4583, column: 10, scope: !9826)
!9879 = !DILocation(line: 4588, column: 2, scope: !9826)
!9880 = !DILocation(line: 4588, column: 5, scope: !9826)
!9881 = !DILocation(line: 4588, column: 10, scope: !9826)
!9882 = !DILocation(line: 4589, column: 1, scope: !9826)
!9883 = distinct !DISubprogram(name: "initPushPull", scope: !3, file: !3, line: 4665, type: !4434, scopeLine: 4666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!9884 = !DILocalVariable(name: "t", arg: 1, scope: !9883, file: !3, line: 4665, type: !3841)
!9885 = !DILocation(line: 4665, column: 37, scope: !9883)
!9886 = !DILocation(line: 4667, column: 2, scope: !9883)
!9887 = !DILocation(line: 4667, column: 5, scope: !9883)
!9888 = !DILocation(line: 4667, column: 10, scope: !9883)
!9889 = !DILocation(line: 4668, column: 2, scope: !9883)
!9890 = !DILocation(line: 4668, column: 5, scope: !9883)
!9891 = !DILocation(line: 4668, column: 15, scope: !9883)
!9892 = !DILocation(line: 4670, column: 21, scope: !9883)
!9893 = !DILocation(line: 4670, column: 25, scope: !9883)
!9894 = !DILocation(line: 4670, column: 28, scope: !9883)
!9895 = !DILocation(line: 4670, column: 2, scope: !9883)
!9896 = !DILocation(line: 4672, column: 2, scope: !9883)
!9897 = !DILocation(line: 4672, column: 5, scope: !9883)
!9898 = !DILocation(line: 4672, column: 13, scope: !9883)
!9899 = !DILocation(line: 4673, column: 2, scope: !9883)
!9900 = !DILocation(line: 4673, column: 5, scope: !9883)
!9901 = !DILocation(line: 4673, column: 9, scope: !9883)
!9902 = !DILocation(line: 4673, column: 17, scope: !9883)
!9903 = !DILocation(line: 4674, column: 2, scope: !9883)
!9904 = !DILocation(line: 4674, column: 5, scope: !9883)
!9905 = !DILocation(line: 4674, column: 13, scope: !9883)
!9906 = !DILocation(line: 4675, column: 2, scope: !9883)
!9907 = !DILocation(line: 4675, column: 5, scope: !9883)
!9908 = !DILocation(line: 4675, column: 13, scope: !9883)
!9909 = !DILocation(line: 4676, column: 15, scope: !9883)
!9910 = !DILocation(line: 4676, column: 18, scope: !9883)
!9911 = !DILocation(line: 4676, column: 26, scope: !9883)
!9912 = !DILocation(line: 4676, column: 2, scope: !9883)
!9913 = !DILocation(line: 4676, column: 5, scope: !9883)
!9914 = !DILocation(line: 4676, column: 13, scope: !9883)
!9915 = !DILocation(line: 4678, column: 13, scope: !9883)
!9916 = !DILocation(line: 4678, column: 16, scope: !9883)
!9917 = !DILocation(line: 4678, column: 20, scope: !9883)
!9918 = !DILocation(line: 4678, column: 29, scope: !9883)
!9919 = !DILocation(line: 4678, column: 32, scope: !9883)
!9920 = !DILocation(line: 4678, column: 2, scope: !9883)
!9921 = !DILocation(line: 4679, column: 20, scope: !9883)
!9922 = !DILocation(line: 4679, column: 23, scope: !9883)
!9923 = !DILocation(line: 4679, column: 30, scope: !9883)
!9924 = !DILocation(line: 4679, column: 35, scope: !9883)
!9925 = !DILocation(line: 4679, column: 2, scope: !9883)
!9926 = !DILocation(line: 4679, column: 5, scope: !9883)
!9927 = !DILocation(line: 4679, column: 9, scope: !9883)
!9928 = !DILocation(line: 4679, column: 18, scope: !9883)
!9929 = !DILocation(line: 4680, column: 2, scope: !9883)
!9930 = !DILocation(line: 4680, column: 5, scope: !9883)
!9931 = !DILocation(line: 4680, column: 9, scope: !9883)
!9932 = !DILocation(line: 4680, column: 22, scope: !9883)
!9933 = !DILocation(line: 4681, column: 1, scope: !9883)
!9934 = distinct !DISubprogram(name: "initCrease", scope: !3, file: !3, line: 4834, type: !4434, scopeLine: 4835, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!9935 = !DILocalVariable(name: "t", arg: 1, scope: !9934, file: !3, line: 4834, type: !3841)
!9936 = !DILocation(line: 4834, column: 35, scope: !9934)
!9937 = !DILocation(line: 4836, column: 2, scope: !9934)
!9938 = !DILocation(line: 4836, column: 5, scope: !9934)
!9939 = !DILocation(line: 4836, column: 10, scope: !9934)
!9940 = !DILocation(line: 4837, column: 2, scope: !9934)
!9941 = !DILocation(line: 4837, column: 5, scope: !9934)
!9942 = !DILocation(line: 4837, column: 15, scope: !9934)
!9943 = !DILocation(line: 4839, column: 21, scope: !9934)
!9944 = !DILocation(line: 4839, column: 25, scope: !9934)
!9945 = !DILocation(line: 4839, column: 28, scope: !9934)
!9946 = !DILocation(line: 4839, column: 2, scope: !9934)
!9947 = !DILocation(line: 4841, column: 2, scope: !9934)
!9948 = !DILocation(line: 4841, column: 5, scope: !9934)
!9949 = !DILocation(line: 4841, column: 13, scope: !9934)
!9950 = !DILocation(line: 4842, column: 2, scope: !9934)
!9951 = !DILocation(line: 4842, column: 5, scope: !9934)
!9952 = !DILocation(line: 4842, column: 9, scope: !9934)
!9953 = !DILocation(line: 4842, column: 17, scope: !9934)
!9954 = !DILocation(line: 4843, column: 2, scope: !9934)
!9955 = !DILocation(line: 4843, column: 5, scope: !9934)
!9956 = !DILocation(line: 4843, column: 13, scope: !9934)
!9957 = !DILocation(line: 4844, column: 2, scope: !9934)
!9958 = !DILocation(line: 4844, column: 5, scope: !9934)
!9959 = !DILocation(line: 4844, column: 13, scope: !9934)
!9960 = !DILocation(line: 4845, column: 15, scope: !9934)
!9961 = !DILocation(line: 4845, column: 18, scope: !9934)
!9962 = !DILocation(line: 4845, column: 26, scope: !9934)
!9963 = !DILocation(line: 4845, column: 2, scope: !9934)
!9964 = !DILocation(line: 4845, column: 5, scope: !9934)
!9965 = !DILocation(line: 4845, column: 13, scope: !9934)
!9966 = !DILocation(line: 4847, column: 13, scope: !9934)
!9967 = !DILocation(line: 4847, column: 16, scope: !9934)
!9968 = !DILocation(line: 4847, column: 20, scope: !9934)
!9969 = !DILocation(line: 4847, column: 29, scope: !9934)
!9970 = !DILocation(line: 4847, column: 32, scope: !9934)
!9971 = !DILocation(line: 4847, column: 2, scope: !9934)
!9972 = !DILocation(line: 4848, column: 20, scope: !9934)
!9973 = !DILocation(line: 4848, column: 23, scope: !9934)
!9974 = !DILocation(line: 4848, column: 30, scope: !9934)
!9975 = !DILocation(line: 4848, column: 35, scope: !9934)
!9976 = !DILocation(line: 4848, column: 2, scope: !9934)
!9977 = !DILocation(line: 4848, column: 5, scope: !9934)
!9978 = !DILocation(line: 4848, column: 9, scope: !9934)
!9979 = !DILocation(line: 4848, column: 18, scope: !9934)
!9980 = !DILocation(line: 4849, column: 2, scope: !9934)
!9981 = !DILocation(line: 4849, column: 5, scope: !9934)
!9982 = !DILocation(line: 4849, column: 9, scope: !9934)
!9983 = !DILocation(line: 4849, column: 22, scope: !9934)
!9984 = !DILocation(line: 4851, column: 2, scope: !9934)
!9985 = !DILocation(line: 4851, column: 5, scope: !9934)
!9986 = !DILocation(line: 4851, column: 10, scope: !9934)
!9987 = !DILocation(line: 4852, column: 1, scope: !9934)
!9988 = distinct !DISubprogram(name: "initBoneEnvelope", scope: !3, file: !3, line: 5043, type: !4434, scopeLine: 5044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!9989 = !DILocalVariable(name: "t", arg: 1, scope: !9988, file: !3, line: 5043, type: !3841)
!9990 = !DILocation(line: 5043, column: 41, scope: !9988)
!9991 = !DILocation(line: 5045, column: 2, scope: !9988)
!9992 = !DILocation(line: 5045, column: 5, scope: !9988)
!9993 = !DILocation(line: 5045, column: 10, scope: !9988)
!9994 = !DILocation(line: 5046, column: 2, scope: !9988)
!9995 = !DILocation(line: 5046, column: 5, scope: !9988)
!9996 = !DILocation(line: 5046, column: 15, scope: !9988)
!9997 = !DILocation(line: 5048, column: 21, scope: !9988)
!9998 = !DILocation(line: 5048, column: 25, scope: !9988)
!9999 = !DILocation(line: 5048, column: 28, scope: !9988)
!10000 = !DILocation(line: 5048, column: 2, scope: !9988)
!10001 = !DILocation(line: 5050, column: 2, scope: !9988)
!10002 = !DILocation(line: 5050, column: 5, scope: !9988)
!10003 = !DILocation(line: 5050, column: 13, scope: !9988)
!10004 = !DILocation(line: 5051, column: 2, scope: !9988)
!10005 = !DILocation(line: 5051, column: 5, scope: !9988)
!10006 = !DILocation(line: 5051, column: 9, scope: !9988)
!10007 = !DILocation(line: 5051, column: 17, scope: !9988)
!10008 = !DILocation(line: 5052, column: 2, scope: !9988)
!10009 = !DILocation(line: 5052, column: 5, scope: !9988)
!10010 = !DILocation(line: 5052, column: 13, scope: !9988)
!10011 = !DILocation(line: 5053, column: 2, scope: !9988)
!10012 = !DILocation(line: 5053, column: 5, scope: !9988)
!10013 = !DILocation(line: 5053, column: 13, scope: !9988)
!10014 = !DILocation(line: 5054, column: 15, scope: !9988)
!10015 = !DILocation(line: 5054, column: 18, scope: !9988)
!10016 = !DILocation(line: 5054, column: 26, scope: !9988)
!10017 = !DILocation(line: 5054, column: 2, scope: !9988)
!10018 = !DILocation(line: 5054, column: 5, scope: !9988)
!10019 = !DILocation(line: 5054, column: 13, scope: !9988)
!10020 = !DILocation(line: 5056, column: 13, scope: !9988)
!10021 = !DILocation(line: 5056, column: 16, scope: !9988)
!10022 = !DILocation(line: 5056, column: 20, scope: !9988)
!10023 = !DILocation(line: 5056, column: 29, scope: !9988)
!10024 = !DILocation(line: 5056, column: 32, scope: !9988)
!10025 = !DILocation(line: 5056, column: 2, scope: !9988)
!10026 = !DILocation(line: 5057, column: 20, scope: !9988)
!10027 = !DILocation(line: 5057, column: 23, scope: !9988)
!10028 = !DILocation(line: 5057, column: 30, scope: !9988)
!10029 = !DILocation(line: 5057, column: 35, scope: !9988)
!10030 = !DILocation(line: 5057, column: 2, scope: !9988)
!10031 = !DILocation(line: 5057, column: 5, scope: !9988)
!10032 = !DILocation(line: 5057, column: 9, scope: !9988)
!10033 = !DILocation(line: 5057, column: 18, scope: !9988)
!10034 = !DILocation(line: 5058, column: 2, scope: !9988)
!10035 = !DILocation(line: 5058, column: 5, scope: !9988)
!10036 = !DILocation(line: 5058, column: 9, scope: !9988)
!10037 = !DILocation(line: 5058, column: 22, scope: !9988)
!10038 = !DILocation(line: 5060, column: 2, scope: !9988)
!10039 = !DILocation(line: 5060, column: 5, scope: !9988)
!10040 = !DILocation(line: 5060, column: 10, scope: !9988)
!10041 = !DILocation(line: 5061, column: 1, scope: !9988)
!10042 = distinct !DISubprogram(name: "initBoneSize", scope: !3, file: !3, line: 4915, type: !4434, scopeLine: 4916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!10043 = !DILocalVariable(name: "t", arg: 1, scope: !10042, file: !3, line: 4915, type: !3841)
!10044 = !DILocation(line: 4915, column: 37, scope: !10042)
!10045 = !DILocation(line: 4917, column: 2, scope: !10042)
!10046 = !DILocation(line: 4917, column: 5, scope: !10042)
!10047 = !DILocation(line: 4917, column: 10, scope: !10042)
!10048 = !DILocation(line: 4918, column: 2, scope: !10042)
!10049 = !DILocation(line: 4918, column: 5, scope: !10042)
!10050 = !DILocation(line: 4918, column: 15, scope: !10042)
!10051 = !DILocation(line: 4920, column: 21, scope: !10042)
!10052 = !DILocation(line: 4920, column: 25, scope: !10042)
!10053 = !DILocation(line: 4920, column: 28, scope: !10042)
!10054 = !DILocation(line: 4920, column: 2, scope: !10042)
!10055 = !DILocation(line: 4922, column: 2, scope: !10042)
!10056 = !DILocation(line: 4922, column: 5, scope: !10042)
!10057 = !DILocation(line: 4922, column: 13, scope: !10042)
!10058 = !DILocation(line: 4923, column: 2, scope: !10042)
!10059 = !DILocation(line: 4923, column: 5, scope: !10042)
!10060 = !DILocation(line: 4923, column: 9, scope: !10042)
!10061 = !DILocation(line: 4923, column: 17, scope: !10042)
!10062 = !DILocation(line: 4924, column: 2, scope: !10042)
!10063 = !DILocation(line: 4924, column: 5, scope: !10042)
!10064 = !DILocation(line: 4924, column: 9, scope: !10042)
!10065 = !DILocation(line: 4924, column: 21, scope: !10042)
!10066 = !DILocation(line: 4925, column: 2, scope: !10042)
!10067 = !DILocation(line: 4925, column: 5, scope: !10042)
!10068 = !DILocation(line: 4925, column: 9, scope: !10042)
!10069 = !DILocation(line: 4925, column: 21, scope: !10042)
!10070 = !DILocation(line: 4926, column: 2, scope: !10042)
!10071 = !DILocation(line: 4926, column: 5, scope: !10042)
!10072 = !DILocation(line: 4926, column: 9, scope: !10042)
!10073 = !DILocation(line: 4926, column: 21, scope: !10042)
!10074 = !DILocation(line: 4927, column: 2, scope: !10042)
!10075 = !DILocation(line: 4927, column: 5, scope: !10042)
!10076 = !DILocation(line: 4927, column: 9, scope: !10042)
!10077 = !DILocation(line: 4927, column: 14, scope: !10042)
!10078 = !DILocation(line: 4928, column: 2, scope: !10042)
!10079 = !DILocation(line: 4928, column: 5, scope: !10042)
!10080 = !DILocation(line: 4928, column: 13, scope: !10042)
!10081 = !DILocation(line: 4929, column: 2, scope: !10042)
!10082 = !DILocation(line: 4929, column: 5, scope: !10042)
!10083 = !DILocation(line: 4929, column: 13, scope: !10042)
!10084 = !DILocation(line: 4930, column: 15, scope: !10042)
!10085 = !DILocation(line: 4930, column: 18, scope: !10042)
!10086 = !DILocation(line: 4930, column: 26, scope: !10042)
!10087 = !DILocation(line: 4930, column: 2, scope: !10042)
!10088 = !DILocation(line: 4930, column: 5, scope: !10042)
!10089 = !DILocation(line: 4930, column: 13, scope: !10042)
!10090 = !DILocation(line: 4932, column: 13, scope: !10042)
!10091 = !DILocation(line: 4932, column: 16, scope: !10042)
!10092 = !DILocation(line: 4932, column: 20, scope: !10042)
!10093 = !DILocation(line: 4932, column: 29, scope: !10042)
!10094 = !DILocation(line: 4932, column: 32, scope: !10042)
!10095 = !DILocation(line: 4932, column: 2, scope: !10042)
!10096 = !DILocation(line: 4933, column: 20, scope: !10042)
!10097 = !DILocation(line: 4933, column: 23, scope: !10042)
!10098 = !DILocation(line: 4933, column: 30, scope: !10042)
!10099 = !DILocation(line: 4933, column: 35, scope: !10042)
!10100 = !DILocation(line: 4933, column: 2, scope: !10042)
!10101 = !DILocation(line: 4933, column: 5, scope: !10042)
!10102 = !DILocation(line: 4933, column: 9, scope: !10042)
!10103 = !DILocation(line: 4933, column: 18, scope: !10042)
!10104 = !DILocation(line: 4934, column: 2, scope: !10042)
!10105 = !DILocation(line: 4934, column: 5, scope: !10042)
!10106 = !DILocation(line: 4934, column: 9, scope: !10042)
!10107 = !DILocation(line: 4934, column: 22, scope: !10042)
!10108 = !DILocation(line: 4935, column: 2, scope: !10042)
!10109 = !DILocation(line: 4935, column: 5, scope: !10042)
!10110 = !DILocation(line: 4935, column: 9, scope: !10042)
!10111 = !DILocation(line: 4935, column: 22, scope: !10042)
!10112 = !DILocation(line: 4936, column: 2, scope: !10042)
!10113 = !DILocation(line: 4936, column: 5, scope: !10042)
!10114 = !DILocation(line: 4936, column: 9, scope: !10042)
!10115 = !DILocation(line: 4936, column: 22, scope: !10042)
!10116 = !DILocation(line: 4937, column: 1, scope: !10042)
!10117 = distinct !DISubprogram(name: "initBoneRoll", scope: !3, file: !3, line: 6807, type: !4434, scopeLine: 6808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!10118 = !DILocalVariable(name: "t", arg: 1, scope: !10117, file: !3, line: 6807, type: !3841)
!10119 = !DILocation(line: 6807, column: 37, scope: !10117)
!10120 = !DILocation(line: 6809, column: 2, scope: !10117)
!10121 = !DILocation(line: 6809, column: 5, scope: !10117)
!10122 = !DILocation(line: 6809, column: 10, scope: !10117)
!10123 = !DILocation(line: 6810, column: 2, scope: !10117)
!10124 = !DILocation(line: 6810, column: 5, scope: !10117)
!10125 = !DILocation(line: 6810, column: 15, scope: !10117)
!10126 = !DILocation(line: 6812, column: 21, scope: !10117)
!10127 = !DILocation(line: 6812, column: 25, scope: !10117)
!10128 = !DILocation(line: 6812, column: 28, scope: !10117)
!10129 = !DILocation(line: 6812, column: 2, scope: !10117)
!10130 = !DILocation(line: 6814, column: 2, scope: !10117)
!10131 = !DILocation(line: 6814, column: 5, scope: !10117)
!10132 = !DILocation(line: 6814, column: 13, scope: !10117)
!10133 = !DILocation(line: 6815, column: 2, scope: !10117)
!10134 = !DILocation(line: 6815, column: 5, scope: !10117)
!10135 = !DILocation(line: 6815, column: 9, scope: !10117)
!10136 = !DILocation(line: 6815, column: 17, scope: !10117)
!10137 = !DILocation(line: 6816, column: 2, scope: !10117)
!10138 = !DILocation(line: 6816, column: 5, scope: !10117)
!10139 = !DILocation(line: 6816, column: 13, scope: !10117)
!10140 = !DILocation(line: 6817, column: 2, scope: !10117)
!10141 = !DILocation(line: 6817, column: 5, scope: !10117)
!10142 = !DILocation(line: 6817, column: 13, scope: !10117)
!10143 = !DILocation(line: 6818, column: 2, scope: !10117)
!10144 = !DILocation(line: 6818, column: 5, scope: !10117)
!10145 = !DILocation(line: 6818, column: 13, scope: !10117)
!10146 = !DILocation(line: 6820, column: 13, scope: !10117)
!10147 = !DILocation(line: 6820, column: 16, scope: !10117)
!10148 = !DILocation(line: 6820, column: 20, scope: !10117)
!10149 = !DILocation(line: 6820, column: 29, scope: !10117)
!10150 = !DILocation(line: 6820, column: 32, scope: !10117)
!10151 = !DILocation(line: 6820, column: 2, scope: !10117)
!10152 = !DILocation(line: 6821, column: 20, scope: !10117)
!10153 = !DILocation(line: 6821, column: 23, scope: !10117)
!10154 = !DILocation(line: 6821, column: 30, scope: !10117)
!10155 = !DILocation(line: 6821, column: 35, scope: !10117)
!10156 = !DILocation(line: 6821, column: 2, scope: !10117)
!10157 = !DILocation(line: 6821, column: 5, scope: !10117)
!10158 = !DILocation(line: 6821, column: 9, scope: !10117)
!10159 = !DILocation(line: 6821, column: 18, scope: !10117)
!10160 = !DILocation(line: 6822, column: 29, scope: !10117)
!10161 = !DILocation(line: 6822, column: 32, scope: !10117)
!10162 = !DILocation(line: 6822, column: 39, scope: !10117)
!10163 = !DILocation(line: 6822, column: 44, scope: !10117)
!10164 = !DILocation(line: 6822, column: 60, scope: !10117)
!10165 = !DILocation(line: 6822, column: 28, scope: !10117)
!10166 = !DILocation(line: 6822, column: 2, scope: !10117)
!10167 = !DILocation(line: 6822, column: 5, scope: !10117)
!10168 = !DILocation(line: 6822, column: 9, scope: !10117)
!10169 = !DILocation(line: 6822, column: 26, scope: !10117)
!10170 = !DILocation(line: 6823, column: 2, scope: !10117)
!10171 = !DILocation(line: 6823, column: 5, scope: !10117)
!10172 = !DILocation(line: 6823, column: 9, scope: !10117)
!10173 = !DILocation(line: 6823, column: 22, scope: !10117)
!10174 = !DILocation(line: 6825, column: 2, scope: !10117)
!10175 = !DILocation(line: 6825, column: 5, scope: !10117)
!10176 = !DILocation(line: 6825, column: 10, scope: !10117)
!10177 = !DILocation(line: 6826, column: 1, scope: !10117)
!10178 = distinct !DISubprogram(name: "initTimeTranslate", scope: !3, file: !3, line: 7323, type: !4434, scopeLine: 7324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!10179 = !DILocalVariable(name: "t", arg: 1, scope: !10178, file: !3, line: 7323, type: !3841)
!10180 = !DILocation(line: 7323, column: 42, scope: !10178)
!10181 = !DILocation(line: 7326, column: 7, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10178, file: !3, line: 7326, column: 6)
!10183 = !DILocation(line: 7326, column: 6, scope: !10178)
!10184 = !DILocation(line: 7327, column: 3, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10182, file: !3, line: 7326, column: 52)
!10186 = !DILocation(line: 7327, column: 6, scope: !10185)
!10187 = !DILocation(line: 7327, column: 12, scope: !10185)
!10188 = !DILocation(line: 7328, column: 2, scope: !10185)
!10189 = !DILocation(line: 7330, column: 2, scope: !10178)
!10190 = !DILocation(line: 7330, column: 5, scope: !10178)
!10191 = !DILocation(line: 7330, column: 10, scope: !10178)
!10192 = !DILocation(line: 7331, column: 2, scope: !10178)
!10193 = !DILocation(line: 7331, column: 5, scope: !10178)
!10194 = !DILocation(line: 7331, column: 15, scope: !10178)
!10195 = !DILocation(line: 7333, column: 21, scope: !10178)
!10196 = !DILocation(line: 7333, column: 25, scope: !10178)
!10197 = !DILocation(line: 7333, column: 28, scope: !10178)
!10198 = !DILocation(line: 7333, column: 2, scope: !10178)
!10199 = !DILocation(line: 7336, column: 2, scope: !10178)
!10200 = !DILocation(line: 7336, column: 5, scope: !10178)
!10201 = !DILocation(line: 7336, column: 13, scope: !10178)
!10202 = !DILocation(line: 7337, column: 2, scope: !10178)
!10203 = !DILocation(line: 7337, column: 5, scope: !10178)
!10204 = !DILocation(line: 7337, column: 9, scope: !10178)
!10205 = !DILocation(line: 7337, column: 14, scope: !10178)
!10206 = !DILocation(line: 7338, column: 19, scope: !10178)
!10207 = !DILocation(line: 7338, column: 22, scope: !10178)
!10208 = !DILocation(line: 7338, column: 2, scope: !10178)
!10209 = !DILocation(line: 7338, column: 5, scope: !10178)
!10210 = !DILocation(line: 7338, column: 9, scope: !10178)
!10211 = !DILocation(line: 7338, column: 17, scope: !10178)
!10212 = !DILocation(line: 7341, column: 2, scope: !10178)
!10213 = !DILocation(line: 7341, column: 5, scope: !10178)
!10214 = !DILocation(line: 7341, column: 13, scope: !10178)
!10215 = !DILocation(line: 7342, column: 15, scope: !10178)
!10216 = !DILocation(line: 7342, column: 18, scope: !10178)
!10217 = !DILocation(line: 7342, column: 26, scope: !10178)
!10218 = !DILocation(line: 7342, column: 2, scope: !10178)
!10219 = !DILocation(line: 7342, column: 5, scope: !10178)
!10220 = !DILocation(line: 7342, column: 13, scope: !10178)
!10221 = !DILocation(line: 7344, column: 13, scope: !10178)
!10222 = !DILocation(line: 7344, column: 16, scope: !10178)
!10223 = !DILocation(line: 7344, column: 20, scope: !10178)
!10224 = !DILocation(line: 7344, column: 29, scope: !10178)
!10225 = !DILocation(line: 7344, column: 32, scope: !10178)
!10226 = !DILocation(line: 7344, column: 2, scope: !10178)
!10227 = !DILocation(line: 7345, column: 20, scope: !10178)
!10228 = !DILocation(line: 7345, column: 23, scope: !10178)
!10229 = !DILocation(line: 7345, column: 30, scope: !10178)
!10230 = !DILocation(line: 7345, column: 35, scope: !10178)
!10231 = !DILocation(line: 7345, column: 2, scope: !10178)
!10232 = !DILocation(line: 7345, column: 5, scope: !10178)
!10233 = !DILocation(line: 7345, column: 9, scope: !10178)
!10234 = !DILocation(line: 7345, column: 18, scope: !10178)
!10235 = !DILocation(line: 7347, column: 2, scope: !10178)
!10236 = !DILocation(line: 7347, column: 5, scope: !10178)
!10237 = !DILocation(line: 7347, column: 9, scope: !10178)
!10238 = !DILocation(line: 7347, column: 22, scope: !10178)
!10239 = !DILocation(line: 7348, column: 1, scope: !10178)
!10240 = distinct !DISubprogram(name: "initTimeSlide", scope: !3, file: !3, line: 7480, type: !4434, scopeLine: 7481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!10241 = !DILocalVariable(name: "t", arg: 1, scope: !10240, file: !3, line: 7480, type: !3841)
!10242 = !DILocation(line: 7480, column: 38, scope: !10240)
!10243 = !DILocation(line: 7483, column: 6, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 7483, column: 6)
!10245 = !DILocation(line: 7483, column: 9, scope: !10244)
!10246 = !DILocation(line: 7483, column: 19, scope: !10244)
!10247 = !DILocation(line: 7483, column: 6, scope: !10240)
!10248 = !DILocalVariable(name: "saction", scope: !10249, file: !3, line: 7484, type: !4354)
!10249 = distinct !DILexicalBlock(scope: !10244, file: !3, line: 7483, column: 36)
!10250 = !DILocation(line: 7484, column: 16, scope: !10249)
!10251 = !DILocation(line: 7484, column: 41, scope: !10249)
!10252 = !DILocation(line: 7484, column: 44, scope: !10249)
!10253 = !DILocation(line: 7484, column: 48, scope: !10249)
!10254 = !DILocation(line: 7484, column: 58, scope: !10249)
!10255 = !DILocation(line: 7484, column: 26, scope: !10249)
!10256 = !DILocation(line: 7487, column: 3, scope: !10249)
!10257 = !DILocation(line: 7487, column: 12, scope: !10249)
!10258 = !DILocation(line: 7487, column: 17, scope: !10249)
!10259 = !DILocation(line: 7488, column: 2, scope: !10249)
!10260 = !DILocation(line: 7490, column: 3, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10244, file: !3, line: 7489, column: 7)
!10262 = !DILocation(line: 7490, column: 6, scope: !10261)
!10263 = !DILocation(line: 7490, column: 12, scope: !10261)
!10264 = !DILocation(line: 7494, column: 2, scope: !10240)
!10265 = !DILocation(line: 7494, column: 5, scope: !10240)
!10266 = !DILocation(line: 7494, column: 10, scope: !10240)
!10267 = !DILocation(line: 7495, column: 2, scope: !10240)
!10268 = !DILocation(line: 7495, column: 5, scope: !10240)
!10269 = !DILocation(line: 7495, column: 15, scope: !10240)
!10270 = !DILocation(line: 7496, column: 2, scope: !10240)
!10271 = !DILocation(line: 7496, column: 5, scope: !10240)
!10272 = !DILocation(line: 7496, column: 10, scope: !10240)
!10273 = !DILocation(line: 7498, column: 21, scope: !10240)
!10274 = !DILocation(line: 7498, column: 25, scope: !10240)
!10275 = !DILocation(line: 7498, column: 28, scope: !10240)
!10276 = !DILocation(line: 7498, column: 2, scope: !10240)
!10277 = !DILocation(line: 7501, column: 2, scope: !10240)
!10278 = !DILocation(line: 7501, column: 5, scope: !10240)
!10279 = !DILocation(line: 7501, column: 13, scope: !10240)
!10280 = !DILocation(line: 7502, column: 2, scope: !10240)
!10281 = !DILocation(line: 7502, column: 5, scope: !10240)
!10282 = !DILocation(line: 7502, column: 9, scope: !10240)
!10283 = !DILocation(line: 7502, column: 14, scope: !10240)
!10284 = !DILocation(line: 7503, column: 19, scope: !10240)
!10285 = !DILocation(line: 7503, column: 22, scope: !10240)
!10286 = !DILocation(line: 7503, column: 2, scope: !10240)
!10287 = !DILocation(line: 7503, column: 5, scope: !10240)
!10288 = !DILocation(line: 7503, column: 9, scope: !10240)
!10289 = !DILocation(line: 7503, column: 17, scope: !10240)
!10290 = !DILocation(line: 7506, column: 2, scope: !10240)
!10291 = !DILocation(line: 7506, column: 5, scope: !10240)
!10292 = !DILocation(line: 7506, column: 13, scope: !10240)
!10293 = !DILocation(line: 7507, column: 15, scope: !10240)
!10294 = !DILocation(line: 7507, column: 18, scope: !10240)
!10295 = !DILocation(line: 7507, column: 26, scope: !10240)
!10296 = !DILocation(line: 7507, column: 2, scope: !10240)
!10297 = !DILocation(line: 7507, column: 5, scope: !10240)
!10298 = !DILocation(line: 7507, column: 13, scope: !10240)
!10299 = !DILocation(line: 7509, column: 13, scope: !10240)
!10300 = !DILocation(line: 7509, column: 16, scope: !10240)
!10301 = !DILocation(line: 7509, column: 20, scope: !10240)
!10302 = !DILocation(line: 7509, column: 29, scope: !10240)
!10303 = !DILocation(line: 7509, column: 32, scope: !10240)
!10304 = !DILocation(line: 7509, column: 2, scope: !10240)
!10305 = !DILocation(line: 7510, column: 20, scope: !10240)
!10306 = !DILocation(line: 7510, column: 23, scope: !10240)
!10307 = !DILocation(line: 7510, column: 30, scope: !10240)
!10308 = !DILocation(line: 7510, column: 35, scope: !10240)
!10309 = !DILocation(line: 7510, column: 2, scope: !10240)
!10310 = !DILocation(line: 7510, column: 5, scope: !10240)
!10311 = !DILocation(line: 7510, column: 9, scope: !10240)
!10312 = !DILocation(line: 7510, column: 18, scope: !10240)
!10313 = !DILocation(line: 7512, column: 2, scope: !10240)
!10314 = !DILocation(line: 7512, column: 5, scope: !10240)
!10315 = !DILocation(line: 7512, column: 9, scope: !10240)
!10316 = !DILocation(line: 7512, column: 22, scope: !10240)
!10317 = !DILocation(line: 7513, column: 1, scope: !10240)
!10318 = distinct !DISubprogram(name: "initTimeScale", scope: !3, file: !3, line: 7621, type: !4434, scopeLine: 7622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!10319 = !DILocalVariable(name: "t", arg: 1, scope: !10318, file: !3, line: 7621, type: !3841)
!10320 = !DILocation(line: 7621, column: 38, scope: !10318)
!10321 = !DILocalVariable(name: "center", scope: !10318, file: !3, line: 7623, type: !1754)
!10322 = !DILocation(line: 7623, column: 8, scope: !10318)
!10323 = !DILocation(line: 7628, column: 6, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 7628, column: 6)
!10325 = !DILocation(line: 7628, column: 50, scope: !10324)
!10326 = !DILocation(line: 7628, column: 6, scope: !10318)
!10327 = !DILocation(line: 7629, column: 3, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 7628, column: 56)
!10329 = !DILocation(line: 7629, column: 6, scope: !10328)
!10330 = !DILocation(line: 7629, column: 12, scope: !10328)
!10331 = !DILocation(line: 7630, column: 2, scope: !10328)
!10332 = !DILocation(line: 7632, column: 2, scope: !10318)
!10333 = !DILocation(line: 7632, column: 5, scope: !10318)
!10334 = !DILocation(line: 7632, column: 10, scope: !10318)
!10335 = !DILocation(line: 7633, column: 2, scope: !10318)
!10336 = !DILocation(line: 7633, column: 5, scope: !10318)
!10337 = !DILocation(line: 7633, column: 15, scope: !10318)
!10338 = !DILocation(line: 7637, column: 17, scope: !10318)
!10339 = !DILocation(line: 7637, column: 20, scope: !10318)
!10340 = !DILocation(line: 7637, column: 27, scope: !10318)
!10341 = !DILocation(line: 7637, column: 29, scope: !10318)
!10342 = !DILocation(line: 7637, column: 2, scope: !10318)
!10343 = !DILocation(line: 7637, column: 5, scope: !10318)
!10344 = !DILocation(line: 7637, column: 15, scope: !10318)
!10345 = !DILocation(line: 7638, column: 19, scope: !10318)
!10346 = !DILocation(line: 7638, column: 22, scope: !10318)
!10347 = !DILocation(line: 7638, column: 25, scope: !10318)
!10348 = !DILocation(line: 7638, column: 33, scope: !10318)
!10349 = !DILocation(line: 7638, column: 2, scope: !10318)
!10350 = !DILocation(line: 7639, column: 14, scope: !10318)
!10351 = !DILocation(line: 7639, column: 17, scope: !10318)
!10352 = !DILocation(line: 7639, column: 2, scope: !10318)
!10353 = !DILocation(line: 7639, column: 12, scope: !10318)
!10354 = !DILocation(line: 7642, column: 17, scope: !10318)
!10355 = !DILocation(line: 7642, column: 21, scope: !10318)
!10356 = !DILocation(line: 7642, column: 24, scope: !10318)
!10357 = !DILocation(line: 7642, column: 31, scope: !10318)
!10358 = !DILocation(line: 7642, column: 39, scope: !10318)
!10359 = !DILocation(line: 7642, column: 42, scope: !10318)
!10360 = !DILocation(line: 7642, column: 2, scope: !10318)
!10361 = !DILocation(line: 7644, column: 21, scope: !10318)
!10362 = !DILocation(line: 7644, column: 25, scope: !10318)
!10363 = !DILocation(line: 7644, column: 28, scope: !10318)
!10364 = !DILocation(line: 7644, column: 2, scope: !10318)
!10365 = !DILocation(line: 7646, column: 2, scope: !10318)
!10366 = !DILocation(line: 7646, column: 5, scope: !10318)
!10367 = !DILocation(line: 7646, column: 10, scope: !10318)
!10368 = !DILocation(line: 7647, column: 2, scope: !10318)
!10369 = !DILocation(line: 7647, column: 5, scope: !10318)
!10370 = !DILocation(line: 7647, column: 9, scope: !10318)
!10371 = !DILocation(line: 7647, column: 21, scope: !10318)
!10372 = !DILocation(line: 7650, column: 2, scope: !10318)
!10373 = !DILocation(line: 7650, column: 5, scope: !10318)
!10374 = !DILocation(line: 7650, column: 13, scope: !10318)
!10375 = !DILocation(line: 7651, column: 2, scope: !10318)
!10376 = !DILocation(line: 7651, column: 5, scope: !10318)
!10377 = !DILocation(line: 7651, column: 9, scope: !10318)
!10378 = !DILocation(line: 7651, column: 14, scope: !10318)
!10379 = !DILocation(line: 7652, column: 19, scope: !10318)
!10380 = !DILocation(line: 7652, column: 22, scope: !10318)
!10381 = !DILocation(line: 7652, column: 2, scope: !10318)
!10382 = !DILocation(line: 7652, column: 5, scope: !10318)
!10383 = !DILocation(line: 7652, column: 9, scope: !10318)
!10384 = !DILocation(line: 7652, column: 17, scope: !10318)
!10385 = !DILocation(line: 7655, column: 2, scope: !10318)
!10386 = !DILocation(line: 7655, column: 5, scope: !10318)
!10387 = !DILocation(line: 7655, column: 13, scope: !10318)
!10388 = !DILocation(line: 7656, column: 15, scope: !10318)
!10389 = !DILocation(line: 7656, column: 18, scope: !10318)
!10390 = !DILocation(line: 7656, column: 26, scope: !10318)
!10391 = !DILocation(line: 7656, column: 2, scope: !10318)
!10392 = !DILocation(line: 7656, column: 5, scope: !10318)
!10393 = !DILocation(line: 7656, column: 13, scope: !10318)
!10394 = !DILocation(line: 7658, column: 13, scope: !10318)
!10395 = !DILocation(line: 7658, column: 16, scope: !10318)
!10396 = !DILocation(line: 7658, column: 20, scope: !10318)
!10397 = !DILocation(line: 7658, column: 29, scope: !10318)
!10398 = !DILocation(line: 7658, column: 32, scope: !10318)
!10399 = !DILocation(line: 7658, column: 2, scope: !10318)
!10400 = !DILocation(line: 7659, column: 20, scope: !10318)
!10401 = !DILocation(line: 7659, column: 23, scope: !10318)
!10402 = !DILocation(line: 7659, column: 30, scope: !10318)
!10403 = !DILocation(line: 7659, column: 35, scope: !10318)
!10404 = !DILocation(line: 7659, column: 2, scope: !10318)
!10405 = !DILocation(line: 7659, column: 5, scope: !10318)
!10406 = !DILocation(line: 7659, column: 9, scope: !10318)
!10407 = !DILocation(line: 7659, column: 18, scope: !10318)
!10408 = !DILocation(line: 7660, column: 2, scope: !10318)
!10409 = !DILocation(line: 7660, column: 5, scope: !10318)
!10410 = !DILocation(line: 7660, column: 9, scope: !10318)
!10411 = !DILocation(line: 7660, column: 22, scope: !10318)
!10412 = !DILocation(line: 7661, column: 1, scope: !10318)
!10413 = distinct !DISubprogram(name: "initBakeTime", scope: !3, file: !3, line: 6877, type: !4434, scopeLine: 6878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!10414 = !DILocalVariable(name: "t", arg: 1, scope: !10413, file: !3, line: 6877, type: !3841)
!10415 = !DILocation(line: 6877, column: 37, scope: !10413)
!10416 = !DILocation(line: 6879, column: 2, scope: !10413)
!10417 = !DILocation(line: 6879, column: 5, scope: !10413)
!10418 = !DILocation(line: 6879, column: 15, scope: !10413)
!10419 = !DILocation(line: 6880, column: 21, scope: !10413)
!10420 = !DILocation(line: 6880, column: 25, scope: !10413)
!10421 = !DILocation(line: 6880, column: 28, scope: !10413)
!10422 = !DILocation(line: 6880, column: 2, scope: !10413)
!10423 = !DILocation(line: 6882, column: 2, scope: !10413)
!10424 = !DILocation(line: 6882, column: 5, scope: !10413)
!10425 = !DILocation(line: 6882, column: 13, scope: !10413)
!10426 = !DILocation(line: 6883, column: 2, scope: !10413)
!10427 = !DILocation(line: 6883, column: 5, scope: !10413)
!10428 = !DILocation(line: 6883, column: 9, scope: !10413)
!10429 = !DILocation(line: 6883, column: 17, scope: !10413)
!10430 = !DILocation(line: 6884, column: 2, scope: !10413)
!10431 = !DILocation(line: 6884, column: 5, scope: !10413)
!10432 = !DILocation(line: 6884, column: 13, scope: !10413)
!10433 = !DILocation(line: 6885, column: 2, scope: !10413)
!10434 = !DILocation(line: 6885, column: 5, scope: !10413)
!10435 = !DILocation(line: 6885, column: 13, scope: !10413)
!10436 = !DILocation(line: 6886, column: 15, scope: !10413)
!10437 = !DILocation(line: 6886, column: 18, scope: !10413)
!10438 = !DILocation(line: 6886, column: 26, scope: !10413)
!10439 = !DILocation(line: 6886, column: 2, scope: !10413)
!10440 = !DILocation(line: 6886, column: 5, scope: !10413)
!10441 = !DILocation(line: 6886, column: 13, scope: !10413)
!10442 = !DILocation(line: 6888, column: 13, scope: !10413)
!10443 = !DILocation(line: 6888, column: 16, scope: !10413)
!10444 = !DILocation(line: 6888, column: 20, scope: !10413)
!10445 = !DILocation(line: 6888, column: 29, scope: !10413)
!10446 = !DILocation(line: 6888, column: 32, scope: !10413)
!10447 = !DILocation(line: 6888, column: 2, scope: !10413)
!10448 = !DILocation(line: 6889, column: 20, scope: !10413)
!10449 = !DILocation(line: 6889, column: 23, scope: !10413)
!10450 = !DILocation(line: 6889, column: 30, scope: !10413)
!10451 = !DILocation(line: 6889, column: 35, scope: !10413)
!10452 = !DILocation(line: 6889, column: 2, scope: !10413)
!10453 = !DILocation(line: 6889, column: 5, scope: !10413)
!10454 = !DILocation(line: 6889, column: 9, scope: !10413)
!10455 = !DILocation(line: 6889, column: 18, scope: !10413)
!10456 = !DILocation(line: 6890, column: 2, scope: !10413)
!10457 = !DILocation(line: 6890, column: 5, scope: !10413)
!10458 = !DILocation(line: 6890, column: 9, scope: !10413)
!10459 = !DILocation(line: 6890, column: 22, scope: !10413)
!10460 = !DILocation(line: 6891, column: 1, scope: !10413)
!10461 = distinct !DISubprogram(name: "initMirror", scope: !3, file: !3, line: 6961, type: !4434, scopeLine: 6962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!10462 = !DILocalVariable(name: "t", arg: 1, scope: !10461, file: !3, line: 6961, type: !3841)
!10463 = !DILocation(line: 6961, column: 35, scope: !10461)
!10464 = !DILocation(line: 6963, column: 2, scope: !10461)
!10465 = !DILocation(line: 6963, column: 5, scope: !10461)
!10466 = !DILocation(line: 6963, column: 15, scope: !10461)
!10467 = !DILocation(line: 6964, column: 21, scope: !10461)
!10468 = !DILocation(line: 6964, column: 25, scope: !10461)
!10469 = !DILocation(line: 6964, column: 28, scope: !10461)
!10470 = !DILocation(line: 6964, column: 2, scope: !10461)
!10471 = !DILocation(line: 6966, column: 2, scope: !10461)
!10472 = !DILocation(line: 6966, column: 5, scope: !10461)
!10473 = !DILocation(line: 6966, column: 10, scope: !10461)
!10474 = !DILocation(line: 6967, column: 7, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 6967, column: 6)
!10476 = !DILocation(line: 6967, column: 10, scope: !10475)
!10477 = !DILocation(line: 6967, column: 6, scope: !10461)
!10478 = !DILocation(line: 6968, column: 3, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10475, file: !3, line: 6967, column: 18)
!10480 = !DILocation(line: 6968, column: 6, scope: !10479)
!10481 = !DILocation(line: 6968, column: 11, scope: !10479)
!10482 = !DILocation(line: 6969, column: 2, scope: !10479)
!10483 = !DILocation(line: 6970, column: 1, scope: !10461)
!10484 = distinct !DISubprogram(name: "initBevelWeight", scope: !3, file: !3, line: 4756, type: !4434, scopeLine: 4757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!10485 = !DILocalVariable(name: "t", arg: 1, scope: !10484, file: !3, line: 4756, type: !3841)
!10486 = !DILocation(line: 4756, column: 40, scope: !10484)
!10487 = !DILocation(line: 4758, column: 2, scope: !10484)
!10488 = !DILocation(line: 4758, column: 5, scope: !10484)
!10489 = !DILocation(line: 4758, column: 10, scope: !10484)
!10490 = !DILocation(line: 4759, column: 2, scope: !10484)
!10491 = !DILocation(line: 4759, column: 5, scope: !10484)
!10492 = !DILocation(line: 4759, column: 15, scope: !10484)
!10493 = !DILocation(line: 4761, column: 21, scope: !10484)
!10494 = !DILocation(line: 4761, column: 25, scope: !10484)
!10495 = !DILocation(line: 4761, column: 28, scope: !10484)
!10496 = !DILocation(line: 4761, column: 2, scope: !10484)
!10497 = !DILocation(line: 4763, column: 2, scope: !10484)
!10498 = !DILocation(line: 4763, column: 5, scope: !10484)
!10499 = !DILocation(line: 4763, column: 13, scope: !10484)
!10500 = !DILocation(line: 4764, column: 2, scope: !10484)
!10501 = !DILocation(line: 4764, column: 5, scope: !10484)
!10502 = !DILocation(line: 4764, column: 9, scope: !10484)
!10503 = !DILocation(line: 4764, column: 17, scope: !10484)
!10504 = !DILocation(line: 4765, column: 2, scope: !10484)
!10505 = !DILocation(line: 4765, column: 5, scope: !10484)
!10506 = !DILocation(line: 4765, column: 13, scope: !10484)
!10507 = !DILocation(line: 4766, column: 2, scope: !10484)
!10508 = !DILocation(line: 4766, column: 5, scope: !10484)
!10509 = !DILocation(line: 4766, column: 13, scope: !10484)
!10510 = !DILocation(line: 4767, column: 15, scope: !10484)
!10511 = !DILocation(line: 4767, column: 18, scope: !10484)
!10512 = !DILocation(line: 4767, column: 26, scope: !10484)
!10513 = !DILocation(line: 4767, column: 2, scope: !10484)
!10514 = !DILocation(line: 4767, column: 5, scope: !10484)
!10515 = !DILocation(line: 4767, column: 13, scope: !10484)
!10516 = !DILocation(line: 4769, column: 13, scope: !10484)
!10517 = !DILocation(line: 4769, column: 16, scope: !10484)
!10518 = !DILocation(line: 4769, column: 20, scope: !10484)
!10519 = !DILocation(line: 4769, column: 29, scope: !10484)
!10520 = !DILocation(line: 4769, column: 32, scope: !10484)
!10521 = !DILocation(line: 4769, column: 2, scope: !10484)
!10522 = !DILocation(line: 4770, column: 20, scope: !10484)
!10523 = !DILocation(line: 4770, column: 23, scope: !10484)
!10524 = !DILocation(line: 4770, column: 30, scope: !10484)
!10525 = !DILocation(line: 4770, column: 35, scope: !10484)
!10526 = !DILocation(line: 4770, column: 2, scope: !10484)
!10527 = !DILocation(line: 4770, column: 5, scope: !10484)
!10528 = !DILocation(line: 4770, column: 9, scope: !10484)
!10529 = !DILocation(line: 4770, column: 18, scope: !10484)
!10530 = !DILocation(line: 4771, column: 2, scope: !10484)
!10531 = !DILocation(line: 4771, column: 5, scope: !10484)
!10532 = !DILocation(line: 4771, column: 9, scope: !10484)
!10533 = !DILocation(line: 4771, column: 22, scope: !10484)
!10534 = !DILocation(line: 4773, column: 2, scope: !10484)
!10535 = !DILocation(line: 4773, column: 5, scope: !10484)
!10536 = !DILocation(line: 4773, column: 10, scope: !10484)
!10537 = !DILocation(line: 4774, column: 1, scope: !10484)
!10538 = distinct !DISubprogram(name: "initAlign", scope: !3, file: !3, line: 7043, type: !4434, scopeLine: 7044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!10539 = !DILocalVariable(name: "t", arg: 1, scope: !10538, file: !3, line: 7043, type: !3841)
!10540 = !DILocation(line: 7043, column: 34, scope: !10538)
!10541 = !DILocation(line: 7045, column: 2, scope: !10538)
!10542 = !DILocation(line: 7045, column: 5, scope: !10538)
!10543 = !DILocation(line: 7045, column: 10, scope: !10538)
!10544 = !DILocation(line: 7047, column: 2, scope: !10538)
!10545 = !DILocation(line: 7047, column: 5, scope: !10538)
!10546 = !DILocation(line: 7047, column: 15, scope: !10538)
!10547 = !DILocation(line: 7049, column: 21, scope: !10538)
!10548 = !DILocation(line: 7049, column: 25, scope: !10538)
!10549 = !DILocation(line: 7049, column: 28, scope: !10538)
!10550 = !DILocation(line: 7049, column: 2, scope: !10538)
!10551 = !DILocation(line: 7050, column: 1, scope: !10538)
!10552 = distinct !DISubprogram(name: "initSeqSlide", scope: !3, file: !3, line: 7103, type: !4434, scopeLine: 7104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!10553 = !DILocalVariable(name: "t", arg: 1, scope: !10552, file: !3, line: 7103, type: !3841)
!10554 = !DILocation(line: 7103, column: 37, scope: !10552)
!10555 = !DILocation(line: 7105, column: 2, scope: !10552)
!10556 = !DILocation(line: 7105, column: 5, scope: !10552)
!10557 = !DILocation(line: 7105, column: 15, scope: !10552)
!10558 = !DILocation(line: 7107, column: 21, scope: !10552)
!10559 = !DILocation(line: 7107, column: 25, scope: !10552)
!10560 = !DILocation(line: 7107, column: 28, scope: !10552)
!10561 = !DILocation(line: 7107, column: 2, scope: !10552)
!10562 = !DILocation(line: 7109, column: 2, scope: !10552)
!10563 = !DILocation(line: 7109, column: 5, scope: !10552)
!10564 = !DILocation(line: 7109, column: 13, scope: !10552)
!10565 = !DILocation(line: 7110, column: 2, scope: !10552)
!10566 = !DILocation(line: 7110, column: 5, scope: !10552)
!10567 = !DILocation(line: 7110, column: 9, scope: !10552)
!10568 = !DILocation(line: 7110, column: 14, scope: !10552)
!10569 = !DILocation(line: 7111, column: 19, scope: !10552)
!10570 = !DILocation(line: 7111, column: 22, scope: !10552)
!10571 = !DILocation(line: 7111, column: 2, scope: !10552)
!10572 = !DILocation(line: 7111, column: 5, scope: !10552)
!10573 = !DILocation(line: 7111, column: 9, scope: !10552)
!10574 = !DILocation(line: 7111, column: 17, scope: !10552)
!10575 = !DILocation(line: 7113, column: 2, scope: !10552)
!10576 = !DILocation(line: 7113, column: 5, scope: !10552)
!10577 = !DILocation(line: 7113, column: 13, scope: !10552)
!10578 = !DILocation(line: 7114, column: 21, scope: !10552)
!10579 = !DILocation(line: 7114, column: 24, scope: !10552)
!10580 = !DILocation(line: 7114, column: 31, scope: !10552)
!10581 = !DILocation(line: 7114, column: 33, scope: !10552)
!10582 = !DILocation(line: 7114, column: 43, scope: !10552)
!10583 = !DILocation(line: 7114, column: 46, scope: !10552)
!10584 = !DILocation(line: 7114, column: 53, scope: !10552)
!10585 = !DILocation(line: 7114, column: 55, scope: !10552)
!10586 = !DILocation(line: 7114, column: 41, scope: !10552)
!10587 = !DILocation(line: 7114, column: 15, scope: !10552)
!10588 = !DILocation(line: 7114, column: 2, scope: !10552)
!10589 = !DILocation(line: 7114, column: 5, scope: !10552)
!10590 = !DILocation(line: 7114, column: 13, scope: !10552)
!10591 = !DILocation(line: 7115, column: 2, scope: !10552)
!10592 = !DILocation(line: 7115, column: 5, scope: !10552)
!10593 = !DILocation(line: 7115, column: 13, scope: !10552)
!10594 = !DILocation(line: 7117, column: 13, scope: !10552)
!10595 = !DILocation(line: 7117, column: 16, scope: !10552)
!10596 = !DILocation(line: 7117, column: 20, scope: !10552)
!10597 = !DILocation(line: 7117, column: 29, scope: !10552)
!10598 = !DILocation(line: 7117, column: 32, scope: !10552)
!10599 = !DILocation(line: 7117, column: 2, scope: !10552)
!10600 = !DILocation(line: 7118, column: 20, scope: !10552)
!10601 = !DILocation(line: 7118, column: 23, scope: !10552)
!10602 = !DILocation(line: 7118, column: 30, scope: !10552)
!10603 = !DILocation(line: 7118, column: 35, scope: !10552)
!10604 = !DILocation(line: 7118, column: 2, scope: !10552)
!10605 = !DILocation(line: 7118, column: 5, scope: !10552)
!10606 = !DILocation(line: 7118, column: 9, scope: !10552)
!10607 = !DILocation(line: 7118, column: 18, scope: !10552)
!10608 = !DILocation(line: 7120, column: 2, scope: !10552)
!10609 = !DILocation(line: 7120, column: 5, scope: !10552)
!10610 = !DILocation(line: 7120, column: 9, scope: !10552)
!10611 = !DILocation(line: 7120, column: 22, scope: !10552)
!10612 = !DILocation(line: 7121, column: 2, scope: !10552)
!10613 = !DILocation(line: 7121, column: 5, scope: !10552)
!10614 = !DILocation(line: 7121, column: 9, scope: !10552)
!10615 = !DILocation(line: 7121, column: 22, scope: !10552)
!10616 = !DILocation(line: 7122, column: 1, scope: !10552)
!10617 = distinct !DISubprogram(name: "copy_v4_v4", scope: !4885, file: !4885, line: 71, type: !5238, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!10618 = !DILocalVariable(name: "r", arg: 1, scope: !10617, file: !4885, line: 71, type: !1773)
!10619 = !DILocation(line: 71, column: 31, scope: !10617)
!10620 = !DILocalVariable(name: "a", arg: 2, scope: !10617, file: !4885, line: 71, type: !3980)
!10621 = !DILocation(line: 71, column: 49, scope: !10617)
!10622 = !DILocation(line: 73, column: 9, scope: !10617)
!10623 = !DILocation(line: 73, column: 2, scope: !10617)
!10624 = !DILocation(line: 73, column: 7, scope: !10617)
!10625 = !DILocation(line: 74, column: 9, scope: !10617)
!10626 = !DILocation(line: 74, column: 2, scope: !10617)
!10627 = !DILocation(line: 74, column: 7, scope: !10617)
!10628 = !DILocation(line: 75, column: 9, scope: !10617)
!10629 = !DILocation(line: 75, column: 2, scope: !10617)
!10630 = !DILocation(line: 75, column: 7, scope: !10617)
!10631 = !DILocation(line: 76, column: 9, scope: !10617)
!10632 = !DILocation(line: 76, column: 2, scope: !10617)
!10633 = !DILocation(line: 76, column: 7, scope: !10617)
!10634 = !DILocation(line: 77, column: 1, scope: !10617)
!10635 = distinct !DISubprogram(name: "normalize_v3", scope: !4885, file: !4885, line: 830, type: !10636, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!10636 = !DISubroutineType(types: !10637)
!10637 = !{!1727, !1773}
!10638 = !DILocalVariable(name: "n", arg: 1, scope: !10635, file: !4885, line: 830, type: !1773)
!10639 = !DILocation(line: 830, column: 34, scope: !10635)
!10640 = !DILocation(line: 832, column: 25, scope: !10635)
!10641 = !DILocation(line: 832, column: 28, scope: !10635)
!10642 = !DILocation(line: 832, column: 9, scope: !10635)
!10643 = !DILocation(line: 832, column: 2, scope: !10635)
!10644 = distinct !DISubprogram(name: "transformApply", scope: !3, file: !3, line: 2275, type: !10645, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!10645 = !DISubroutineType(types: !10646)
!10646 = !{null, !4345, !3841}
!10647 = !DILocalVariable(name: "C", arg: 1, scope: !10644, file: !3, line: 2275, type: !4345)
!10648 = !DILocation(line: 2275, column: 31, scope: !10644)
!10649 = !DILocalVariable(name: "t", arg: 2, scope: !10644, file: !3, line: 2275, type: !3841)
!10650 = !DILocation(line: 2275, column: 45, scope: !10644)
!10651 = !DILocation(line: 2277, column: 15, scope: !10644)
!10652 = !DILocation(line: 2277, column: 2, scope: !10644)
!10653 = !DILocation(line: 2277, column: 5, scope: !10644)
!10654 = !DILocation(line: 2277, column: 13, scope: !10644)
!10655 = !DILocation(line: 2279, column: 7, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10644, file: !3, line: 2279, column: 6)
!10657 = !DILocation(line: 2279, column: 10, scope: !10656)
!10658 = !DILocation(line: 2279, column: 17, scope: !10656)
!10659 = !DILocation(line: 2279, column: 33, scope: !10656)
!10660 = !DILocation(line: 2279, column: 37, scope: !10656)
!10661 = !DILocation(line: 2279, column: 40, scope: !10656)
!10662 = !DILocation(line: 2279, column: 58, scope: !10656)
!10663 = !DILocation(line: 2279, column: 66, scope: !10656)
!10664 = !DILocation(line: 2279, column: 70, scope: !10656)
!10665 = !DILocation(line: 2279, column: 73, scope: !10656)
!10666 = !DILocation(line: 2279, column: 80, scope: !10656)
!10667 = !DILocation(line: 2279, column: 6, scope: !10644)
!10668 = !DILocation(line: 2280, column: 20, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10656, file: !3, line: 2279, column: 98)
!10670 = !DILocation(line: 2280, column: 3, scope: !10669)
!10671 = !DILocation(line: 2281, column: 7, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 2281, column: 7)
!10673 = !DILocation(line: 2281, column: 10, scope: !10672)
!10674 = !DILocation(line: 2281, column: 7, scope: !10669)
!10675 = !DILocation(line: 2282, column: 4, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10672, file: !3, line: 2281, column: 21)
!10677 = !DILocation(line: 2282, column: 7, scope: !10676)
!10678 = !DILocation(line: 2282, column: 17, scope: !10676)
!10679 = !DILocation(line: 2282, column: 20, scope: !10676)
!10680 = !DILocation(line: 2282, column: 23, scope: !10676)
!10681 = !DILocation(line: 2283, column: 20, scope: !10676)
!10682 = !DILocation(line: 2283, column: 23, scope: !10676)
!10683 = !DILocation(line: 2283, column: 4, scope: !10676)
!10684 = !DILocation(line: 2284, column: 3, scope: !10676)
!10685 = !DILocation(line: 2285, column: 3, scope: !10669)
!10686 = !DILocation(line: 2285, column: 6, scope: !10669)
!10687 = !DILocation(line: 2285, column: 13, scope: !10669)
!10688 = !DILocation(line: 2286, column: 2, scope: !10669)
!10689 = !DILocation(line: 2287, column: 11, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10656, file: !3, line: 2287, column: 11)
!10691 = !DILocation(line: 2287, column: 14, scope: !10690)
!10692 = !DILocation(line: 2287, column: 21, scope: !10690)
!10693 = !DILocation(line: 2287, column: 11, scope: !10656)
!10694 = !DILocation(line: 2288, column: 19, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10690, file: !3, line: 2287, column: 37)
!10696 = !DILocation(line: 2288, column: 22, scope: !10695)
!10697 = !DILocation(line: 2288, column: 3, scope: !10695)
!10698 = !DILocation(line: 2289, column: 2, scope: !10695)
!10699 = !DILocation(line: 2292, column: 6, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10644, file: !3, line: 2292, column: 6)
!10701 = !DILocation(line: 2292, column: 9, scope: !10700)
!10702 = !DILocation(line: 2292, column: 17, scope: !10700)
!10703 = !DILocation(line: 2292, column: 6, scope: !10644)
!10704 = !DILocation(line: 2293, column: 3, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10700, file: !3, line: 2292, column: 36)
!10706 = !DILocation(line: 2293, column: 6, scope: !10705)
!10707 = !DILocation(line: 2293, column: 12, scope: !10705)
!10708 = !DILocation(line: 2294, column: 2, scope: !10705)
!10709 = !DILocation(line: 2296, column: 2, scope: !10644)
!10710 = !DILocation(line: 2296, column: 5, scope: !10644)
!10711 = !DILocation(line: 2296, column: 13, scope: !10644)
!10712 = !DILocation(line: 2297, column: 1, scope: !10644)
!10713 = distinct !DISubprogram(name: "viewRedrawForce", scope: !3, file: !3, line: 580, type: !10714, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!10714 = !DISubroutineType(types: !10715)
!10715 = !{null, !8831, !3841}
!10716 = !DILocalVariable(name: "C", arg: 1, scope: !10713, file: !3, line: 580, type: !8831)
!10717 = !DILocation(line: 580, column: 45, scope: !10713)
!10718 = !DILocalVariable(name: "t", arg: 2, scope: !10713, file: !3, line: 580, type: !3841)
!10719 = !DILocation(line: 580, column: 59, scope: !10713)
!10720 = !DILocation(line: 582, column: 6, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 582, column: 6)
!10722 = !DILocation(line: 582, column: 9, scope: !10721)
!10723 = !DILocation(line: 582, column: 19, scope: !10721)
!10724 = !DILocation(line: 582, column: 6, scope: !10713)
!10725 = !DILocation(line: 583, column: 7, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10727, file: !3, line: 583, column: 7)
!10727 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 582, column: 36)
!10728 = !DILocation(line: 583, column: 10, scope: !10726)
!10729 = !DILocation(line: 583, column: 18, scope: !10726)
!10730 = !DILocation(line: 583, column: 7, scope: !10727)
!10731 = !DILocalVariable(name: "window", scope: !10732, file: !3, line: 584, type: !10733)
!10732 = distinct !DILexicalBlock(scope: !10726, file: !3, line: 583, column: 37)
!10733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10734, size: 64)
!10734 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindow", file: !8, line: 209, baseType: !1788)
!10735 = !DILocation(line: 584, column: 14, scope: !10732)
!10736 = !DILocation(line: 584, column: 37, scope: !10732)
!10737 = !DILocation(line: 584, column: 23, scope: !10732)
!10738 = !DILocation(line: 585, column: 31, scope: !10732)
!10739 = !DILocation(line: 585, column: 39, scope: !10732)
!10740 = !DILocation(line: 585, column: 42, scope: !10732)
!10741 = !DILocation(line: 585, column: 4, scope: !10732)
!10742 = !DILocation(line: 586, column: 3, scope: !10732)
!10743 = !DILocation(line: 589, column: 8, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10745, file: !3, line: 589, column: 8)
!10745 = distinct !DILexicalBlock(scope: !10726, file: !3, line: 587, column: 8)
!10746 = !DILocation(line: 589, column: 11, scope: !10744)
!10747 = !DILocation(line: 589, column: 16, scope: !10744)
!10748 = !DILocation(line: 589, column: 8, scope: !10745)
!10749 = !DILocation(line: 590, column: 27, scope: !10744)
!10750 = !DILocation(line: 590, column: 5, scope: !10744)
!10751 = !DILocation(line: 592, column: 27, scope: !10744)
!10752 = !DILocation(line: 592, column: 5, scope: !10744)
!10753 = !DILocation(line: 596, column: 9, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10745, file: !3, line: 596, column: 8)
!10755 = !DILocation(line: 596, column: 12, scope: !10754)
!10756 = !DILocation(line: 596, column: 8, scope: !10754)
!10757 = !DILocation(line: 596, column: 23, scope: !10754)
!10758 = !DILocation(line: 596, column: 26, scope: !10754)
!10759 = !DILocation(line: 596, column: 8, scope: !10745)
!10760 = !DILocation(line: 597, column: 27, scope: !10754)
!10761 = !DILocation(line: 597, column: 5, scope: !10754)
!10762 = !DILocation(line: 600, column: 2, scope: !10727)
!10763 = !DILocation(line: 601, column: 11, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 601, column: 11)
!10765 = !DILocation(line: 601, column: 14, scope: !10764)
!10766 = !DILocation(line: 601, column: 24, scope: !10764)
!10767 = !DILocation(line: 601, column: 11, scope: !10721)
!10768 = !DILocation(line: 603, column: 25, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10764, file: !3, line: 601, column: 41)
!10770 = !DILocation(line: 603, column: 3, scope: !10769)
!10771 = !DILocation(line: 604, column: 2, scope: !10769)
!10772 = !DILocation(line: 605, column: 11, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10764, file: !3, line: 605, column: 11)
!10774 = !DILocation(line: 605, column: 14, scope: !10773)
!10775 = !DILocation(line: 605, column: 24, scope: !10773)
!10776 = !DILocation(line: 605, column: 11, scope: !10764)
!10777 = !DILocation(line: 607, column: 25, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10773, file: !3, line: 605, column: 38)
!10779 = !DILocation(line: 607, column: 3, scope: !10778)
!10780 = !DILocation(line: 608, column: 2, scope: !10778)
!10781 = !DILocation(line: 609, column: 11, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10773, file: !3, line: 609, column: 11)
!10783 = !DILocation(line: 609, column: 14, scope: !10782)
!10784 = !DILocation(line: 609, column: 24, scope: !10782)
!10785 = !DILocation(line: 609, column: 11, scope: !10773)
!10786 = !DILocation(line: 610, column: 25, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10782, file: !3, line: 609, column: 38)
!10788 = !DILocation(line: 610, column: 3, scope: !10787)
!10789 = !DILocation(line: 611, column: 2, scope: !10787)
!10790 = !DILocation(line: 612, column: 11, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10782, file: !3, line: 612, column: 11)
!10792 = !DILocation(line: 612, column: 14, scope: !10791)
!10793 = !DILocation(line: 612, column: 24, scope: !10791)
!10794 = !DILocation(line: 612, column: 11, scope: !10782)
!10795 = !DILocation(line: 614, column: 25, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10791, file: !3, line: 612, column: 39)
!10797 = !DILocation(line: 614, column: 3, scope: !10796)
!10798 = !DILocation(line: 615, column: 2, scope: !10796)
!10799 = !DILocation(line: 616, column: 11, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10791, file: !3, line: 616, column: 11)
!10801 = !DILocation(line: 616, column: 14, scope: !10800)
!10802 = !DILocation(line: 616, column: 24, scope: !10800)
!10803 = !DILocation(line: 616, column: 11, scope: !10791)
!10804 = !DILocation(line: 617, column: 25, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10800, file: !3, line: 616, column: 38)
!10806 = !DILocation(line: 617, column: 3, scope: !10805)
!10807 = !DILocation(line: 618, column: 2, scope: !10805)
!10808 = !DILocation(line: 619, column: 11, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10800, file: !3, line: 619, column: 11)
!10810 = !DILocation(line: 619, column: 14, scope: !10809)
!10811 = !DILocation(line: 619, column: 24, scope: !10809)
!10812 = !DILocation(line: 619, column: 11, scope: !10800)
!10813 = !DILocation(line: 620, column: 7, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10815, file: !3, line: 620, column: 7)
!10815 = distinct !DILexicalBlock(scope: !10809, file: !3, line: 619, column: 40)
!10816 = !DILocation(line: 620, column: 10, scope: !10814)
!10817 = !DILocation(line: 620, column: 18, scope: !10814)
!10818 = !DILocation(line: 620, column: 7, scope: !10815)
!10819 = !DILocalVariable(name: "mask", scope: !10820, file: !3, line: 621, type: !10821)
!10820 = distinct !DILexicalBlock(scope: !10814, file: !3, line: 620, column: 30)
!10821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10822, size: 64)
!10822 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mask", file: !2704, line: 57, baseType: !2703)
!10823 = !DILocation(line: 621, column: 10, scope: !10820)
!10824 = !DILocation(line: 621, column: 36, scope: !10820)
!10825 = !DILocation(line: 621, column: 17, scope: !10820)
!10826 = !DILocation(line: 623, column: 26, scope: !10820)
!10827 = !DILocation(line: 623, column: 50, scope: !10820)
!10828 = !DILocation(line: 623, column: 4, scope: !10820)
!10829 = !DILocation(line: 624, column: 3, scope: !10820)
!10830 = !DILocation(line: 625, column: 12, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10814, file: !3, line: 625, column: 12)
!10832 = !DILocation(line: 625, column: 15, scope: !10831)
!10833 = !DILocation(line: 625, column: 23, scope: !10831)
!10834 = !DILocation(line: 625, column: 12, scope: !10814)
!10835 = !DILocalVariable(name: "window", scope: !10836, file: !3, line: 626, type: !10733)
!10836 = distinct !DILexicalBlock(scope: !10831, file: !3, line: 625, column: 42)
!10837 = !DILocation(line: 626, column: 14, scope: !10836)
!10838 = !DILocation(line: 626, column: 37, scope: !10836)
!10839 = !DILocation(line: 626, column: 23, scope: !10836)
!10840 = !DILocation(line: 627, column: 31, scope: !10836)
!10841 = !DILocation(line: 627, column: 39, scope: !10836)
!10842 = !DILocation(line: 627, column: 42, scope: !10836)
!10843 = !DILocation(line: 627, column: 4, scope: !10836)
!10844 = !DILocation(line: 628, column: 3, scope: !10836)
!10845 = !DILocalVariable(name: "sima", scope: !10846, file: !3, line: 631, type: !4211)
!10846 = distinct !DILexicalBlock(scope: !10831, file: !3, line: 629, column: 8)
!10847 = !DILocation(line: 631, column: 16, scope: !10846)
!10848 = !DILocation(line: 631, column: 37, scope: !10846)
!10849 = !DILocation(line: 631, column: 40, scope: !10846)
!10850 = !DILocation(line: 631, column: 44, scope: !10846)
!10851 = !DILocation(line: 631, column: 54, scope: !10846)
!10852 = !DILocation(line: 631, column: 23, scope: !10846)
!10853 = !DILocation(line: 632, column: 8, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10846, file: !3, line: 632, column: 8)
!10855 = !DILocation(line: 632, column: 14, scope: !10854)
!10856 = !DILocation(line: 632, column: 8, scope: !10846)
!10857 = !DILocation(line: 632, column: 42, scope: !10854)
!10858 = !DILocation(line: 632, column: 64, scope: !10854)
!10859 = !DILocation(line: 632, column: 67, scope: !10854)
!10860 = !DILocation(line: 632, column: 75, scope: !10854)
!10861 = !DILocation(line: 632, column: 20, scope: !10854)
!10862 = !DILocation(line: 633, column: 28, scope: !10854)
!10863 = !DILocation(line: 633, column: 31, scope: !10854)
!10864 = !DILocation(line: 633, column: 9, scope: !10854)
!10865 = !DILocation(line: 635, column: 2, scope: !10815)
!10866 = !DILocation(line: 636, column: 11, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10809, file: !3, line: 636, column: 11)
!10868 = !DILocation(line: 636, column: 14, scope: !10867)
!10869 = !DILocation(line: 636, column: 24, scope: !10867)
!10870 = !DILocation(line: 636, column: 11, scope: !10809)
!10871 = !DILocalVariable(name: "sc", scope: !10872, file: !3, line: 637, type: !4292)
!10872 = distinct !DILexicalBlock(scope: !10867, file: !3, line: 636, column: 39)
!10873 = !DILocation(line: 637, column: 14, scope: !10872)
!10874 = !DILocation(line: 637, column: 32, scope: !10872)
!10875 = !DILocation(line: 637, column: 35, scope: !10872)
!10876 = !DILocation(line: 637, column: 39, scope: !10872)
!10877 = !DILocation(line: 637, column: 49, scope: !10872)
!10878 = !DILocation(line: 637, column: 19, scope: !10872)
!10879 = !DILocation(line: 639, column: 42, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10872, file: !3, line: 639, column: 7)
!10881 = !DILocation(line: 639, column: 7, scope: !10880)
!10882 = !DILocation(line: 639, column: 7, scope: !10872)
!10883 = !DILocalVariable(name: "clip", scope: !10884, file: !3, line: 640, type: !5130)
!10884 = distinct !DILexicalBlock(scope: !10880, file: !3, line: 639, column: 47)
!10885 = !DILocation(line: 640, column: 15, scope: !10884)
!10886 = !DILocation(line: 640, column: 45, scope: !10884)
!10887 = !DILocation(line: 640, column: 22, scope: !10884)
!10888 = !DILocation(line: 643, column: 26, scope: !10884)
!10889 = !DILocation(line: 643, column: 4, scope: !10884)
!10890 = !DILocation(line: 645, column: 26, scope: !10884)
!10891 = !DILocation(line: 645, column: 55, scope: !10884)
!10892 = !DILocation(line: 645, column: 4, scope: !10884)
!10893 = !DILocation(line: 646, column: 3, scope: !10884)
!10894 = !DILocation(line: 647, column: 46, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10880, file: !3, line: 647, column: 12)
!10896 = !DILocation(line: 647, column: 12, scope: !10895)
!10897 = !DILocation(line: 647, column: 12, scope: !10880)
!10898 = !DILocalVariable(name: "mask", scope: !10899, file: !3, line: 648, type: !10821)
!10899 = distinct !DILexicalBlock(scope: !10895, file: !3, line: 647, column: 51)
!10900 = !DILocation(line: 648, column: 10, scope: !10899)
!10901 = !DILocation(line: 648, column: 36, scope: !10899)
!10902 = !DILocation(line: 648, column: 17, scope: !10899)
!10903 = !DILocation(line: 650, column: 26, scope: !10899)
!10904 = !DILocation(line: 650, column: 50, scope: !10899)
!10905 = !DILocation(line: 650, column: 4, scope: !10899)
!10906 = !DILocation(line: 651, column: 3, scope: !10899)
!10907 = !DILocation(line: 652, column: 2, scope: !10872)
!10908 = !DILocation(line: 653, column: 1, scope: !10713)
!10909 = distinct !DISubprogram(name: "transformEnd", scope: !3, file: !3, line: 2309, type: !10910, scopeLine: 2310, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!10910 = !DISubroutineType(types: !10911)
!10911 = !{!35, !4345, !3841}
!10912 = !DILocalVariable(name: "C", arg: 1, scope: !10909, file: !3, line: 2309, type: !4345)
!10913 = !DILocation(line: 2309, column: 28, scope: !10909)
!10914 = !DILocalVariable(name: "t", arg: 2, scope: !10909, file: !3, line: 2309, type: !3841)
!10915 = !DILocation(line: 2309, column: 42, scope: !10909)
!10916 = !DILocalVariable(name: "exit_code", scope: !10909, file: !3, line: 2311, type: !35)
!10917 = !DILocation(line: 2311, column: 6, scope: !10909)
!10918 = !DILocation(line: 2313, column: 15, scope: !10909)
!10919 = !DILocation(line: 2313, column: 2, scope: !10909)
!10920 = !DILocation(line: 2313, column: 5, scope: !10909)
!10921 = !DILocation(line: 2313, column: 13, scope: !10909)
!10922 = !DILocation(line: 2315, column: 6, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10909, file: !3, line: 2315, column: 6)
!10924 = !DILocation(line: 2315, column: 9, scope: !10923)
!10925 = !DILocation(line: 2315, column: 15, scope: !10923)
!10926 = !DILocation(line: 2315, column: 33, scope: !10923)
!10927 = !DILocation(line: 2315, column: 36, scope: !10923)
!10928 = !DILocation(line: 2315, column: 39, scope: !10923)
!10929 = !DILocation(line: 2315, column: 45, scope: !10923)
!10930 = !DILocation(line: 2315, column: 6, scope: !10909)
!10931 = !DILocation(line: 2317, column: 7, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10933, file: !3, line: 2317, column: 7)
!10933 = distinct !DILexicalBlock(scope: !10923, file: !3, line: 2315, column: 63)
!10934 = !DILocation(line: 2317, column: 10, scope: !10932)
!10935 = !DILocation(line: 2317, column: 16, scope: !10932)
!10936 = !DILocation(line: 2317, column: 7, scope: !10933)
!10937 = !DILocation(line: 2319, column: 8, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10939, file: !3, line: 2319, column: 8)
!10939 = distinct !DILexicalBlock(scope: !10932, file: !3, line: 2317, column: 33)
!10940 = !DILocation(line: 2319, column: 11, scope: !10938)
!10941 = !DILocation(line: 2319, column: 16, scope: !10938)
!10942 = !DILocation(line: 2319, column: 8, scope: !10939)
!10943 = !DILocation(line: 2320, column: 17, scope: !10938)
!10944 = !DILocation(line: 2320, column: 5, scope: !10938)
!10945 = !DILocation(line: 2322, column: 14, scope: !10939)
!10946 = !DILocation(line: 2323, column: 24, scope: !10939)
!10947 = !DILocation(line: 2323, column: 4, scope: !10939)
!10948 = !DILocation(line: 2324, column: 3, scope: !10939)
!10949 = !DILocation(line: 2326, column: 14, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10932, file: !3, line: 2325, column: 8)
!10951 = !DILocation(line: 2330, column: 29, scope: !10933)
!10952 = !DILocation(line: 2330, column: 32, scope: !10933)
!10953 = !DILocation(line: 2330, column: 3, scope: !10933)
!10954 = !DILocation(line: 2333, column: 13, scope: !10933)
!10955 = !DILocation(line: 2333, column: 16, scope: !10933)
!10956 = !DILocation(line: 2333, column: 3, scope: !10933)
!10957 = !DILocation(line: 2336, column: 18, scope: !10933)
!10958 = !DILocation(line: 2336, column: 21, scope: !10933)
!10959 = !DILocation(line: 2336, column: 3, scope: !10933)
!10960 = !DILocation(line: 2338, column: 19, scope: !10933)
!10961 = !DILocation(line: 2338, column: 22, scope: !10933)
!10962 = !DILocation(line: 2338, column: 3, scope: !10933)
!10963 = !DILocation(line: 2339, column: 2, scope: !10933)
!10964 = !DILocation(line: 2341, column: 2, scope: !10909)
!10965 = !DILocation(line: 2341, column: 5, scope: !10909)
!10966 = !DILocation(line: 2341, column: 13, scope: !10909)
!10967 = !DILocation(line: 2343, column: 9, scope: !10909)
!10968 = !DILocation(line: 2343, column: 2, scope: !10909)
!10969 = distinct !DISubprogram(name: "doEdgeSlide", scope: !3, file: !3, line: 6174, type: !10970, scopeLine: 6175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!10970 = !DISubroutineType(types: !10971)
!10971 = !{!35, !3841, !1727}
!10972 = !DILocalVariable(name: "t", arg: 1, scope: !10969, file: !3, line: 6174, type: !3841)
!10973 = !DILocation(line: 6174, column: 35, scope: !10969)
!10974 = !DILocalVariable(name: "perc", arg: 2, scope: !10969, file: !3, line: 6174, type: !1727)
!10975 = !DILocation(line: 6174, column: 44, scope: !10969)
!10976 = !DILocalVariable(name: "sld", scope: !10969, file: !3, line: 6176, type: !3574)
!10977 = !DILocation(line: 6176, column: 17, scope: !10969)
!10978 = !DILocation(line: 6176, column: 23, scope: !10969)
!10979 = !DILocation(line: 6176, column: 26, scope: !10969)
!10980 = !DILocalVariable(name: "svlist", scope: !10969, file: !3, line: 6177, type: !3579)
!10981 = !DILocation(line: 6177, column: 26, scope: !10969)
!10982 = !DILocation(line: 6177, column: 35, scope: !10969)
!10983 = !DILocation(line: 6177, column: 40, scope: !10969)
!10984 = !DILocalVariable(name: "sv", scope: !10969, file: !3, line: 6177, type: !3579)
!10985 = !DILocation(line: 6177, column: 45, scope: !10969)
!10986 = !DILocalVariable(name: "i", scope: !10969, file: !3, line: 6178, type: !35)
!10987 = !DILocation(line: 6178, column: 6, scope: !10969)
!10988 = !DILocation(line: 6180, column: 14, scope: !10969)
!10989 = !DILocation(line: 6180, column: 2, scope: !10969)
!10990 = !DILocation(line: 6180, column: 7, scope: !10969)
!10991 = !DILocation(line: 6180, column: 12, scope: !10969)
!10992 = !DILocation(line: 6181, column: 7, scope: !10969)
!10993 = !DILocation(line: 6181, column: 5, scope: !10969)
!10994 = !DILocation(line: 6183, column: 6, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10969, file: !3, line: 6183, column: 6)
!10996 = !DILocation(line: 6183, column: 11, scope: !10995)
!10997 = !DILocation(line: 6183, column: 27, scope: !10995)
!10998 = !DILocation(line: 6183, column: 6, scope: !10969)
!10999 = !DILocation(line: 6184, column: 10, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !11001, file: !3, line: 6184, column: 3)
!11001 = distinct !DILexicalBlock(scope: !10995, file: !3, line: 6183, column: 36)
!11002 = !DILocation(line: 6184, column: 8, scope: !11000)
!11003 = !DILocation(line: 6184, column: 15, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !11000, file: !3, line: 6184, column: 3)
!11005 = !DILocation(line: 6184, column: 19, scope: !11004)
!11006 = !DILocation(line: 6184, column: 24, scope: !11004)
!11007 = !DILocation(line: 6184, column: 17, scope: !11004)
!11008 = !DILocation(line: 6184, column: 3, scope: !11000)
!11009 = !DILocalVariable(name: "vec", scope: !11010, file: !3, line: 6185, type: !1987)
!11010 = distinct !DILexicalBlock(scope: !11004, file: !3, line: 6184, column: 42)
!11011 = !DILocation(line: 6185, column: 10, scope: !11010)
!11012 = !DILocation(line: 6186, column: 8, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !11010, file: !3, line: 6186, column: 8)
!11014 = !DILocation(line: 6186, column: 13, scope: !11013)
!11015 = !DILocation(line: 6186, column: 8, scope: !11010)
!11016 = !DILocation(line: 6187, column: 16, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 6186, column: 21)
!11018 = !DILocation(line: 6187, column: 21, scope: !11017)
!11019 = !DILocation(line: 6187, column: 25, scope: !11017)
!11020 = !DILocation(line: 6187, column: 5, scope: !11017)
!11021 = !DILocation(line: 6188, column: 15, scope: !11017)
!11022 = !DILocation(line: 6188, column: 20, scope: !11017)
!11023 = !DILocation(line: 6188, column: 5, scope: !11017)
!11024 = !DILocation(line: 6189, column: 17, scope: !11017)
!11025 = !DILocation(line: 6189, column: 21, scope: !11017)
!11026 = !DILocation(line: 6189, column: 24, scope: !11017)
!11027 = !DILocation(line: 6189, column: 28, scope: !11017)
!11028 = !DILocation(line: 6189, column: 32, scope: !11017)
!11029 = !DILocation(line: 6189, column: 43, scope: !11017)
!11030 = !DILocation(line: 6189, column: 5, scope: !11017)
!11031 = !DILocation(line: 6190, column: 4, scope: !11017)
!11032 = !DILocation(line: 6192, column: 16, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 6191, column: 9)
!11034 = !DILocation(line: 6192, column: 21, scope: !11033)
!11035 = !DILocation(line: 6192, column: 25, scope: !11033)
!11036 = !DILocation(line: 6192, column: 5, scope: !11033)
!11037 = !DILocation(line: 6193, column: 15, scope: !11033)
!11038 = !DILocation(line: 6193, column: 21, scope: !11033)
!11039 = !DILocation(line: 6193, column: 20, scope: !11033)
!11040 = !DILocation(line: 6193, column: 5, scope: !11033)
!11041 = !DILocation(line: 6194, column: 17, scope: !11033)
!11042 = !DILocation(line: 6194, column: 21, scope: !11033)
!11043 = !DILocation(line: 6194, column: 24, scope: !11033)
!11044 = !DILocation(line: 6194, column: 28, scope: !11033)
!11045 = !DILocation(line: 6194, column: 32, scope: !11033)
!11046 = !DILocation(line: 6194, column: 43, scope: !11033)
!11047 = !DILocation(line: 6194, column: 5, scope: !11033)
!11048 = !DILocation(line: 6196, column: 3, scope: !11010)
!11049 = !DILocation(line: 6184, column: 32, scope: !11004)
!11050 = !DILocation(line: 6184, column: 38, scope: !11004)
!11051 = !DILocation(line: 6184, column: 3, scope: !11004)
!11052 = distinct !{!11052, !11008, !11053}
!11053 = !DILocation(line: 6196, column: 3, scope: !11000)
!11054 = !DILocation(line: 6197, column: 2, scope: !11001)
!11055 = !DILocalVariable(name: "curr_sv", scope: !11056, file: !3, line: 6207, type: !3579)
!11056 = distinct !DILexicalBlock(scope: !10995, file: !3, line: 6198, column: 7)
!11057 = !DILocation(line: 6207, column: 27, scope: !11056)
!11058 = !DILocation(line: 6207, column: 38, scope: !11056)
!11059 = !DILocation(line: 6207, column: 43, scope: !11056)
!11060 = !DILocation(line: 6207, column: 46, scope: !11056)
!11061 = !DILocation(line: 6207, column: 51, scope: !11056)
!11062 = !DILocalVariable(name: "curr_length_perc", scope: !11056, file: !3, line: 6208, type: !3981)
!11063 = !DILocation(line: 6208, column: 15, scope: !11056)
!11064 = !DILocation(line: 6208, column: 34, scope: !11056)
!11065 = !DILocation(line: 6208, column: 43, scope: !11056)
!11066 = !DILocation(line: 6208, column: 57, scope: !11056)
!11067 = !DILocation(line: 6208, column: 62, scope: !11056)
!11068 = !DILocation(line: 6208, column: 76, scope: !11056)
!11069 = !DILocation(line: 6208, column: 84, scope: !11056)
!11070 = !DILocation(line: 6208, column: 83, scope: !11056)
!11071 = !DILocation(line: 6208, column: 90, scope: !11056)
!11072 = !DILocation(line: 6208, column: 98, scope: !11056)
!11073 = !DILocation(line: 6208, column: 52, scope: !11056)
!11074 = !DILocalVariable(name: "co_a", scope: !11056, file: !3, line: 6210, type: !1987)
!11075 = !DILocation(line: 6210, column: 9, scope: !11056)
!11076 = !DILocalVariable(name: "co_b", scope: !11056, file: !3, line: 6211, type: !1987)
!11077 = !DILocation(line: 6211, column: 9, scope: !11056)
!11078 = !DILocation(line: 6213, column: 10, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11056, file: !3, line: 6213, column: 3)
!11080 = !DILocation(line: 6213, column: 8, scope: !11079)
!11081 = !DILocation(line: 6213, column: 15, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11079, file: !3, line: 6213, column: 3)
!11083 = !DILocation(line: 6213, column: 19, scope: !11082)
!11084 = !DILocation(line: 6213, column: 24, scope: !11082)
!11085 = !DILocation(line: 6213, column: 17, scope: !11082)
!11086 = !DILocation(line: 6213, column: 3, scope: !11079)
!11087 = !DILocation(line: 6214, column: 8, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11089, file: !3, line: 6214, column: 8)
!11089 = distinct !DILexicalBlock(scope: !11082, file: !3, line: 6213, column: 42)
!11090 = !DILocation(line: 6214, column: 12, scope: !11088)
!11091 = !DILocation(line: 6214, column: 21, scope: !11088)
!11092 = !DILocation(line: 6214, column: 8, scope: !11089)
!11093 = !DILocalVariable(name: "fac", scope: !11094, file: !3, line: 6215, type: !3981)
!11094 = distinct !DILexicalBlock(scope: !11088, file: !3, line: 6214, column: 36)
!11095 = !DILocation(line: 6215, column: 17, scope: !11094)
!11096 = !DILocation(line: 6215, column: 30, scope: !11094)
!11097 = !DILocation(line: 6215, column: 34, scope: !11094)
!11098 = !DILocation(line: 6215, column: 44, scope: !11094)
!11099 = !DILocation(line: 6215, column: 23, scope: !11094)
!11100 = !DILocation(line: 6215, column: 64, scope: !11094)
!11101 = !DILocation(line: 6215, column: 68, scope: !11094)
!11102 = !DILocation(line: 6215, column: 62, scope: !11094)
!11103 = !DILocation(line: 6217, column: 17, scope: !11094)
!11104 = !DILocation(line: 6217, column: 23, scope: !11094)
!11105 = !DILocation(line: 6217, column: 27, scope: !11094)
!11106 = !DILocation(line: 6217, column: 38, scope: !11094)
!11107 = !DILocation(line: 6217, column: 42, scope: !11094)
!11108 = !DILocation(line: 6217, column: 5, scope: !11094)
!11109 = !DILocation(line: 6218, column: 17, scope: !11094)
!11110 = !DILocation(line: 6218, column: 23, scope: !11094)
!11111 = !DILocation(line: 6218, column: 27, scope: !11094)
!11112 = !DILocation(line: 6218, column: 38, scope: !11094)
!11113 = !DILocation(line: 6218, column: 42, scope: !11094)
!11114 = !DILocation(line: 6218, column: 5, scope: !11094)
!11115 = !DILocation(line: 6220, column: 9, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11094, file: !3, line: 6220, column: 9)
!11117 = !DILocation(line: 6220, column: 14, scope: !11116)
!11118 = !DILocation(line: 6220, column: 9, scope: !11094)
!11119 = !DILocation(line: 6221, column: 28, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11116, file: !3, line: 6220, column: 27)
!11121 = !DILocation(line: 6221, column: 32, scope: !11120)
!11122 = !DILocation(line: 6221, column: 35, scope: !11120)
!11123 = !DILocation(line: 6221, column: 39, scope: !11120)
!11124 = !DILocation(line: 6221, column: 45, scope: !11120)
!11125 = !DILocation(line: 6221, column: 49, scope: !11120)
!11126 = !DILocation(line: 6221, column: 60, scope: !11120)
!11127 = !DILocation(line: 6221, column: 66, scope: !11120)
!11128 = !DILocation(line: 6221, column: 6, scope: !11120)
!11129 = !DILocation(line: 6222, column: 5, scope: !11120)
!11130 = !DILocation(line: 6224, column: 28, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11116, file: !3, line: 6223, column: 10)
!11132 = !DILocation(line: 6224, column: 32, scope: !11131)
!11133 = !DILocation(line: 6224, column: 35, scope: !11131)
!11134 = !DILocation(line: 6224, column: 39, scope: !11131)
!11135 = !DILocation(line: 6224, column: 45, scope: !11131)
!11136 = !DILocation(line: 6224, column: 49, scope: !11131)
!11137 = !DILocation(line: 6224, column: 60, scope: !11131)
!11138 = !DILocation(line: 6224, column: 66, scope: !11131)
!11139 = !DILocation(line: 6224, column: 6, scope: !11131)
!11140 = !DILocation(line: 6226, column: 4, scope: !11094)
!11141 = !DILocation(line: 6227, column: 3, scope: !11089)
!11142 = !DILocation(line: 6213, column: 32, scope: !11082)
!11143 = !DILocation(line: 6213, column: 38, scope: !11082)
!11144 = !DILocation(line: 6213, column: 3, scope: !11082)
!11145 = distinct !{!11145, !11086, !11146}
!11146 = !DILocation(line: 6227, column: 3, scope: !11079)
!11147 = !DILocation(line: 6230, column: 23, scope: !10969)
!11148 = !DILocation(line: 6230, column: 2, scope: !10969)
!11149 = !DILocation(line: 6232, column: 2, scope: !10969)
!11150 = distinct !DISubprogram(name: "viewRedrawPost", scope: !3, file: !3, line: 655, type: !10645, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!11151 = !DILocalVariable(name: "C", arg: 1, scope: !11150, file: !3, line: 655, type: !4345)
!11152 = !DILocation(line: 655, column: 38, scope: !11150)
!11153 = !DILocalVariable(name: "t", arg: 2, scope: !11150, file: !3, line: 655, type: !3841)
!11154 = !DILocation(line: 655, column: 52, scope: !11150)
!11155 = !DILocation(line: 657, column: 22, scope: !11150)
!11156 = !DILocation(line: 657, column: 25, scope: !11150)
!11157 = !DILocation(line: 657, column: 2, scope: !11150)
!11158 = !DILocation(line: 659, column: 6, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11150, file: !3, line: 659, column: 6)
!11160 = !DILocation(line: 659, column: 9, scope: !11159)
!11161 = !DILocation(line: 659, column: 19, scope: !11159)
!11162 = !DILocation(line: 659, column: 6, scope: !11150)
!11163 = !DILocation(line: 661, column: 7, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11165, file: !3, line: 661, column: 7)
!11165 = distinct !DILexicalBlock(scope: !11159, file: !3, line: 659, column: 36)
!11166 = !DILocation(line: 661, column: 7, scope: !11165)
!11167 = !DILocation(line: 662, column: 4, scope: !11164)
!11168 = !DILocation(line: 665, column: 7, scope: !11169)
!11169 = distinct !DILexicalBlock(scope: !11165, file: !3, line: 665, column: 7)
!11170 = !DILocation(line: 665, column: 10, scope: !11169)
!11171 = !DILocation(line: 665, column: 15, scope: !11169)
!11172 = !DILocation(line: 665, column: 33, scope: !11169)
!11173 = !DILocation(line: 665, column: 37, scope: !11169)
!11174 = !DILocation(line: 665, column: 40, scope: !11169)
!11175 = !DILocation(line: 665, column: 50, scope: !11169)
!11176 = !DILocation(line: 665, column: 62, scope: !11169)
!11177 = !DILocation(line: 665, column: 7, scope: !11165)
!11178 = !DILocation(line: 666, column: 26, scope: !11169)
!11179 = !DILocation(line: 666, column: 4, scope: !11169)
!11180 = !DILocation(line: 669, column: 25, scope: !11165)
!11181 = !DILocation(line: 669, column: 73, scope: !11165)
!11182 = !DILocation(line: 669, column: 58, scope: !11165)
!11183 = !DILocation(line: 669, column: 3, scope: !11165)
!11184 = !DILocation(line: 671, column: 2, scope: !11165)
!11185 = !DILocation(line: 693, column: 1, scope: !11150)
!11186 = distinct !DISubprogram(name: "projectEdgeSlideData", scope: !3, file: !3, line: 5832, type: !11187, scopeLine: 5833, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!11187 = !DISubroutineType(types: !11188)
!11188 = !{null, !3841, !2769}
!11189 = !DILocalVariable(name: "t", arg: 1, scope: !11186, file: !3, line: 5832, type: !3841)
!11190 = !DILocation(line: 5832, column: 38, scope: !11186)
!11191 = !DILocalVariable(name: "is_final", arg: 2, scope: !11186, file: !3, line: 5832, type: !2769)
!11192 = !DILocation(line: 5832, column: 46, scope: !11186)
!11193 = !DILocalVariable(name: "sld", scope: !11186, file: !3, line: 5834, type: !3574)
!11194 = !DILocation(line: 5834, column: 17, scope: !11186)
!11195 = !DILocation(line: 5834, column: 23, scope: !11186)
!11196 = !DILocation(line: 5834, column: 26, scope: !11186)
!11197 = !DILocalVariable(name: "sv", scope: !11186, file: !3, line: 5835, type: !3579)
!11198 = !DILocation(line: 5835, column: 26, scope: !11186)
!11199 = !DILocalVariable(name: "em", scope: !11186, file: !3, line: 5836, type: !11200)
!11200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11201, size: 64)
!11201 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEditMesh", file: !3655, line: 83, baseType: !3654)
!11202 = !DILocation(line: 5836, column: 14, scope: !11186)
!11203 = !DILocation(line: 5836, column: 19, scope: !11186)
!11204 = !DILocation(line: 5836, column: 24, scope: !11186)
!11205 = !DILocalVariable(name: "i", scope: !11186, file: !3, line: 5837, type: !35)
!11206 = !DILocation(line: 5837, column: 6, scope: !11186)
!11207 = !DILocation(line: 5839, column: 6, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11186, file: !3, line: 5839, column: 6)
!11209 = !DILocation(line: 5839, column: 11, scope: !11208)
!11210 = !DILocation(line: 5839, column: 25, scope: !11208)
!11211 = !DILocation(line: 5839, column: 6, scope: !11186)
!11212 = !DILocation(line: 5840, column: 3, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11208, file: !3, line: 5839, column: 35)
!11214 = !DILocation(line: 5843, column: 9, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11186, file: !3, line: 5843, column: 2)
!11216 = !DILocation(line: 5843, column: 19, scope: !11215)
!11217 = !DILocation(line: 5843, column: 24, scope: !11215)
!11218 = !DILocation(line: 5843, column: 17, scope: !11215)
!11219 = !DILocation(line: 5843, column: 7, scope: !11215)
!11220 = !DILocation(line: 5843, column: 28, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11215, file: !3, line: 5843, column: 2)
!11222 = !DILocation(line: 5843, column: 32, scope: !11221)
!11223 = !DILocation(line: 5843, column: 37, scope: !11221)
!11224 = !DILocation(line: 5843, column: 30, scope: !11221)
!11225 = !DILocation(line: 5843, column: 2, scope: !11215)
!11226 = !DILocalVariable(name: "fiter", scope: !11227, file: !3, line: 5844, type: !11228)
!11227 = distinct !DILexicalBlock(scope: !11221, file: !3, line: 5843, column: 55)
!11228 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter", file: !439, line: 186, baseType: !11229)
!11229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter", file: !439, line: 164, size: 512, elements: !11230)
!11230 = !{!11231, !11311, !11312, !11313, !11314}
!11231 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11229, file: !439, line: 179, baseType: !11232, size: 320)
!11232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11229, file: !439, line: 166, size: 320, elements: !11233)
!11233 = !{!11234, !11249, !11255, !11263, !11271, !11277, !11283, !11289, !11293, !11299, !11305}
!11234 = !DIDerivedType(tag: DW_TAG_member, name: "elem_of_mesh", scope: !11232, file: !439, line: 167, baseType: !11235, size: 192)
!11235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__elem_of_mesh", file: !439, line: 113, size: 192, elements: !11236)
!11236 = !{!11237}
!11237 = !DIDerivedType(tag: DW_TAG_member, name: "pooliter", scope: !11235, file: !439, line: 114, baseType: !11238, size: 192)
!11238 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool_iter", file: !11239, line: 80, baseType: !11240)
!11239 = !DIFile(filename: "blender/source/blender/blenlib/BLI_mempool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_iter", file: !11239, line: 76, size: 192, elements: !11241)
!11241 = !{!11242, !11245, !11248}
!11242 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !11240, file: !11239, line: 77, baseType: !11243, size: 64)
!11243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11244, size: 64)
!11244 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool", file: !11239, line: 47, baseType: !3672)
!11245 = !DIDerivedType(tag: DW_TAG_member, name: "curchunk", scope: !11240, file: !11239, line: 78, baseType: !11246, size: 64, offset: 64)
!11246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11247, size: 64)
!11247 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_chunk", file: !11239, line: 45, flags: DIFlagFwdDecl)
!11248 = !DIDerivedType(tag: DW_TAG_member, name: "curindex", scope: !11240, file: !11239, line: 79, baseType: !56, size: 32, offset: 128)
!11249 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_vert", scope: !11232, file: !439, line: 169, baseType: !11250, size: 192)
!11250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_vert", file: !439, line: 116, size: 192, elements: !11251)
!11251 = !{!11252, !11253, !11254}
!11252 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !11250, file: !439, line: 117, baseType: !3678, size: 64)
!11253 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !11250, file: !439, line: 118, baseType: !3682, size: 64, offset: 64)
!11254 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !11250, file: !439, line: 118, baseType: !3682, size: 64, offset: 128)
!11255 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_vert", scope: !11232, file: !439, line: 170, baseType: !11256, size: 320)
!11256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_vert", file: !439, line: 120, size: 320, elements: !11257)
!11257 = !{!11258, !11259, !11260, !11261, !11262}
!11258 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !11256, file: !439, line: 121, baseType: !3678, size: 64)
!11259 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !11256, file: !439, line: 122, baseType: !3625, size: 64, offset: 64)
!11260 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !11256, file: !439, line: 122, baseType: !3625, size: 64, offset: 128)
!11261 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !11256, file: !439, line: 123, baseType: !3682, size: 64, offset: 192)
!11262 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !11256, file: !439, line: 123, baseType: !3682, size: 64, offset: 256)
!11263 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_vert", scope: !11232, file: !439, line: 171, baseType: !11264, size: 320)
!11264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_vert", file: !439, line: 125, size: 320, elements: !11265)
!11265 = !{!11266, !11267, !11268, !11269, !11270}
!11266 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !11264, file: !439, line: 126, baseType: !3678, size: 64)
!11267 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !11264, file: !439, line: 127, baseType: !3625, size: 64, offset: 64)
!11268 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !11264, file: !439, line: 127, baseType: !3625, size: 64, offset: 128)
!11269 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !11264, file: !439, line: 128, baseType: !3682, size: 64, offset: 192)
!11270 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !11264, file: !439, line: 128, baseType: !3682, size: 64, offset: 256)
!11271 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_edge", scope: !11232, file: !439, line: 172, baseType: !11272, size: 192)
!11272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_edge", file: !439, line: 130, size: 192, elements: !11273)
!11273 = !{!11274, !11275, !11276}
!11274 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !11272, file: !439, line: 131, baseType: !3682, size: 64)
!11275 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !11272, file: !439, line: 132, baseType: !3625, size: 64, offset: 64)
!11276 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !11272, file: !439, line: 132, baseType: !3625, size: 64, offset: 128)
!11277 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_loop", scope: !11232, file: !439, line: 173, baseType: !11278, size: 192)
!11278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_loop", file: !439, line: 134, size: 192, elements: !11279)
!11279 = !{!11280, !11281, !11282}
!11280 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !11278, file: !439, line: 135, baseType: !3625, size: 64)
!11281 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !11278, file: !439, line: 136, baseType: !3625, size: 64, offset: 64)
!11282 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !11278, file: !439, line: 136, baseType: !3625, size: 64, offset: 128)
!11283 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_edge", scope: !11232, file: !439, line: 174, baseType: !11284, size: 192)
!11284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_edge", file: !439, line: 138, size: 192, elements: !11285)
!11285 = !{!11286, !11287, !11288}
!11286 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !11284, file: !439, line: 139, baseType: !3682, size: 64)
!11287 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !11284, file: !439, line: 140, baseType: !3625, size: 64, offset: 64)
!11288 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !11284, file: !439, line: 140, baseType: !3625, size: 64, offset: 128)
!11289 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_edge", scope: !11232, file: !439, line: 175, baseType: !11290, size: 64)
!11290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_edge", file: !439, line: 142, size: 64, elements: !11291)
!11291 = !{!11292}
!11292 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !11290, file: !439, line: 143, baseType: !3682, size: 64)
!11293 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_face", scope: !11232, file: !439, line: 176, baseType: !11294, size: 192)
!11294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_face", file: !439, line: 145, size: 192, elements: !11295)
!11295 = !{!11296, !11297, !11298}
!11296 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !11294, file: !439, line: 146, baseType: !3686, size: 64)
!11297 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !11294, file: !439, line: 147, baseType: !3625, size: 64, offset: 64)
!11298 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !11294, file: !439, line: 147, baseType: !3625, size: 64, offset: 128)
!11299 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_face", scope: !11232, file: !439, line: 177, baseType: !11300, size: 192)
!11300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_face", file: !439, line: 149, size: 192, elements: !11301)
!11301 = !{!11302, !11303, !11304}
!11302 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !11300, file: !439, line: 150, baseType: !3686, size: 64)
!11303 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !11300, file: !439, line: 151, baseType: !3625, size: 64, offset: 64)
!11304 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !11300, file: !439, line: 151, baseType: !3625, size: 64, offset: 128)
!11305 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_face", scope: !11232, file: !439, line: 178, baseType: !11306, size: 192)
!11306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_face", file: !439, line: 153, size: 192, elements: !11307)
!11307 = !{!11308, !11309, !11310}
!11308 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !11306, file: !439, line: 154, baseType: !3686, size: 64)
!11309 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !11306, file: !439, line: 155, baseType: !3625, size: 64, offset: 64)
!11310 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !11306, file: !439, line: 155, baseType: !3625, size: 64, offset: 128)
!11311 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !11229, file: !439, line: 181, baseType: !4349, size: 64, offset: 320)
!11312 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !11229, file: !439, line: 182, baseType: !4350, size: 64, offset: 384)
!11313 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !11229, file: !439, line: 184, baseType: !35, size: 32, offset: 448)
!11314 = !DIDerivedType(tag: DW_TAG_member, name: "itype", scope: !11229, file: !439, line: 185, baseType: !23, size: 8, offset: 480)
!11315 = !DILocation(line: 5844, column: 10, scope: !11227)
!11316 = !DILocalVariable(name: "l", scope: !11227, file: !3, line: 5845, type: !3625)
!11317 = !DILocation(line: 5845, column: 11, scope: !11227)
!11318 = !DILocation(line: 5847, column: 3, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11227, file: !3, line: 5847, column: 3)
!11320 = !DILocation(line: 5847, column: 3, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11319, file: !3, line: 5847, column: 3)
!11322 = !DILocalVariable(name: "f_copy", scope: !11323, file: !3, line: 5848, type: !3686)
!11323 = distinct !DILexicalBlock(scope: !11321, file: !3, line: 5847, column: 53)
!11324 = !DILocation(line: 5848, column: 12, scope: !11323)
!11325 = !DILocalVariable(name: "f_copy_flip", scope: !11323, file: !3, line: 5849, type: !3686)
!11326 = !DILocation(line: 5849, column: 12, scope: !11323)
!11327 = !DILocation(line: 5851, column: 30, scope: !11323)
!11328 = !DILocation(line: 5851, column: 35, scope: !11323)
!11329 = !DILocation(line: 5851, column: 46, scope: !11323)
!11330 = !DILocation(line: 5851, column: 49, scope: !11323)
!11331 = !DILocation(line: 5851, column: 13, scope: !11323)
!11332 = !DILocation(line: 5851, column: 11, scope: !11323)
!11333 = !DILocation(line: 5854, column: 18, scope: !11323)
!11334 = !DILocation(line: 5854, column: 16, scope: !11323)
!11335 = !DILocation(line: 5856, column: 8, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11323, file: !3, line: 5856, column: 8)
!11337 = !DILocation(line: 5856, column: 48, scope: !11336)
!11338 = !DILocation(line: 5856, column: 51, scope: !11336)
!11339 = !DILocation(line: 5856, column: 8, scope: !11323)
!11340 = !DILocalVariable(name: "l_ed_sel", scope: !11341, file: !3, line: 5858, type: !3625)
!11341 = distinct !DILexicalBlock(scope: !11336, file: !3, line: 5856, column: 98)
!11342 = !DILocation(line: 5858, column: 13, scope: !11341)
!11343 = !DILocation(line: 5858, column: 24, scope: !11341)
!11344 = !DILocation(line: 5860, column: 10, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11341, file: !3, line: 5860, column: 9)
!11346 = !DILocation(line: 5860, column: 9, scope: !11341)
!11347 = !DILocation(line: 5861, column: 17, scope: !11345)
!11348 = !DILocation(line: 5861, column: 27, scope: !11345)
!11349 = !DILocation(line: 5861, column: 15, scope: !11345)
!11350 = !DILocation(line: 5861, column: 6, scope: !11345)
!11351 = !DILocation(line: 5863, column: 9, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11341, file: !3, line: 5863, column: 9)
!11353 = !DILocation(line: 5863, column: 14, scope: !11352)
!11354 = !DILocation(line: 5863, column: 19, scope: !11352)
!11355 = !DILocation(line: 5863, column: 9, scope: !11341)
!11356 = !DILocation(line: 5864, column: 26, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11358, file: !3, line: 5864, column: 10)
!11358 = distinct !DILexicalBlock(scope: !11352, file: !3, line: 5863, column: 27)
!11359 = !DILocation(line: 5864, column: 36, scope: !11357)
!11360 = !DILocation(line: 5864, column: 49, scope: !11357)
!11361 = !DILocation(line: 5864, column: 52, scope: !11357)
!11362 = !DILocation(line: 5864, column: 56, scope: !11357)
!11363 = !DILocation(line: 5864, column: 10, scope: !11357)
!11364 = !DILocation(line: 5864, column: 10, scope: !11358)
!11365 = !DILocation(line: 5865, column: 38, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11357, file: !3, line: 5864, column: 62)
!11367 = !DILocation(line: 5865, column: 43, scope: !11366)
!11368 = !DILocation(line: 5865, column: 54, scope: !11366)
!11369 = !DILocation(line: 5865, column: 64, scope: !11366)
!11370 = !DILocation(line: 5865, column: 77, scope: !11366)
!11371 = !DILocation(line: 5865, column: 21, scope: !11366)
!11372 = !DILocation(line: 5865, column: 19, scope: !11366)
!11373 = !DILocation(line: 5866, column: 6, scope: !11366)
!11374 = !DILocation(line: 5867, column: 5, scope: !11358)
!11375 = !DILocation(line: 5868, column: 14, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11352, file: !3, line: 5868, column: 14)
!11377 = !DILocation(line: 5868, column: 19, scope: !11376)
!11378 = !DILocation(line: 5868, column: 24, scope: !11376)
!11379 = !DILocation(line: 5868, column: 14, scope: !11352)
!11380 = !DILocation(line: 5869, column: 26, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11382, file: !3, line: 5869, column: 10)
!11382 = distinct !DILexicalBlock(scope: !11376, file: !3, line: 5868, column: 32)
!11383 = !DILocation(line: 5869, column: 36, scope: !11381)
!11384 = !DILocation(line: 5869, column: 49, scope: !11381)
!11385 = !DILocation(line: 5869, column: 52, scope: !11381)
!11386 = !DILocation(line: 5869, column: 56, scope: !11381)
!11387 = !DILocation(line: 5869, column: 10, scope: !11381)
!11388 = !DILocation(line: 5869, column: 10, scope: !11382)
!11389 = !DILocation(line: 5870, column: 38, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11381, file: !3, line: 5869, column: 62)
!11391 = !DILocation(line: 5870, column: 43, scope: !11390)
!11392 = !DILocation(line: 5870, column: 54, scope: !11390)
!11393 = !DILocation(line: 5870, column: 64, scope: !11390)
!11394 = !DILocation(line: 5870, column: 77, scope: !11390)
!11395 = !DILocation(line: 5870, column: 21, scope: !11390)
!11396 = !DILocation(line: 5870, column: 19, scope: !11390)
!11397 = !DILocation(line: 5871, column: 6, scope: !11390)
!11398 = !DILocation(line: 5872, column: 5, scope: !11382)
!11399 = !DILocation(line: 5875, column: 10, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11341, file: !3, line: 5875, column: 9)
!11401 = !DILocation(line: 5875, column: 9, scope: !11341)
!11402 = !DILocation(line: 5876, column: 6, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 5875, column: 23)
!11404 = !DILocation(line: 5878, column: 4, scope: !11341)
!11405 = !DILocalVariable(name: "eiter", scope: !11406, file: !3, line: 5883, type: !11228)
!11406 = distinct !DILexicalBlock(scope: !11336, file: !3, line: 5879, column: 9)
!11407 = !DILocation(line: 5883, column: 12, scope: !11406)
!11408 = !DILocalVariable(name: "e_sel", scope: !11406, file: !3, line: 5884, type: !3682)
!11409 = !DILocation(line: 5884, column: 13, scope: !11406)
!11410 = !DILocation(line: 5887, column: 5, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11406, file: !3, line: 5887, column: 5)
!11412 = !DILocation(line: 5887, column: 5, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 5887, column: 5)
!11414 = !DILocation(line: 5888, column: 10, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11416, file: !3, line: 5888, column: 10)
!11416 = distinct !DILexicalBlock(scope: !11413, file: !3, line: 5887, column: 59)
!11417 = !DILocation(line: 5888, column: 10, scope: !11416)
!11418 = !DILocation(line: 5889, column: 7, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11415, file: !3, line: 5888, column: 52)
!11420 = !DILocation(line: 5891, column: 5, scope: !11416)
!11421 = distinct !{!11421, !11410, !11422}
!11422 = !DILocation(line: 5891, column: 5, scope: !11411)
!11423 = !DILocation(line: 5893, column: 9, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11406, file: !3, line: 5893, column: 9)
!11425 = !DILocation(line: 5893, column: 9, scope: !11406)
!11426 = !DILocalVariable(name: "l_adj", scope: !11427, file: !3, line: 5927, type: !3625)
!11427 = distinct !DILexicalBlock(scope: !11424, file: !3, line: 5893, column: 16)
!11428 = !DILocation(line: 5927, column: 14, scope: !11427)
!11429 = !DILocation(line: 5928, column: 10, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11427, file: !3, line: 5928, column: 10)
!11431 = !DILocation(line: 5928, column: 15, scope: !11430)
!11432 = !DILocation(line: 5928, column: 20, scope: !11430)
!11433 = !DILocation(line: 5928, column: 10, scope: !11427)
!11434 = !DILocation(line: 5929, column: 27, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11436, file: !3, line: 5929, column: 11)
!11436 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 5928, column: 28)
!11437 = !DILocation(line: 5929, column: 34, scope: !11435)
!11438 = !DILocation(line: 5929, column: 37, scope: !11435)
!11439 = !DILocation(line: 5929, column: 40, scope: !11435)
!11440 = !DILocation(line: 5929, column: 44, scope: !11435)
!11441 = !DILocation(line: 5929, column: 11, scope: !11435)
!11442 = !DILocation(line: 5929, column: 11, scope: !11436)
!11443 = !DILocation(line: 5930, column: 16, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11435, file: !3, line: 5929, column: 50)
!11445 = !DILocation(line: 5930, column: 23, scope: !11444)
!11446 = !DILocation(line: 5930, column: 14, scope: !11444)
!11447 = !DILocation(line: 5931, column: 7, scope: !11444)
!11448 = !DILocation(line: 5932, column: 32, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11435, file: !3, line: 5932, column: 16)
!11450 = !DILocation(line: 5932, column: 39, scope: !11449)
!11451 = !DILocation(line: 5932, column: 42, scope: !11449)
!11452 = !DILocation(line: 5932, column: 55, scope: !11449)
!11453 = !DILocation(line: 5932, column: 58, scope: !11449)
!11454 = !DILocation(line: 5932, column: 62, scope: !11449)
!11455 = !DILocation(line: 5932, column: 16, scope: !11449)
!11456 = !DILocation(line: 5932, column: 16, scope: !11435)
!11457 = !DILocation(line: 5933, column: 16, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11449, file: !3, line: 5932, column: 68)
!11459 = !DILocation(line: 5933, column: 23, scope: !11458)
!11460 = !DILocation(line: 5933, column: 26, scope: !11458)
!11461 = !DILocation(line: 5933, column: 14, scope: !11458)
!11462 = !DILocation(line: 5934, column: 7, scope: !11458)
!11463 = !DILocation(line: 5935, column: 6, scope: !11436)
!11464 = !DILocation(line: 5936, column: 15, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 5936, column: 15)
!11466 = !DILocation(line: 5936, column: 20, scope: !11465)
!11467 = !DILocation(line: 5936, column: 25, scope: !11465)
!11468 = !DILocation(line: 5936, column: 15, scope: !11430)
!11469 = !DILocation(line: 5937, column: 27, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11471, file: !3, line: 5937, column: 11)
!11471 = distinct !DILexicalBlock(scope: !11465, file: !3, line: 5936, column: 33)
!11472 = !DILocation(line: 5937, column: 34, scope: !11470)
!11473 = !DILocation(line: 5937, column: 37, scope: !11470)
!11474 = !DILocation(line: 5937, column: 40, scope: !11470)
!11475 = !DILocation(line: 5937, column: 44, scope: !11470)
!11476 = !DILocation(line: 5937, column: 11, scope: !11470)
!11477 = !DILocation(line: 5937, column: 11, scope: !11471)
!11478 = !DILocation(line: 5938, column: 16, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 5937, column: 50)
!11480 = !DILocation(line: 5938, column: 23, scope: !11479)
!11481 = !DILocation(line: 5938, column: 14, scope: !11479)
!11482 = !DILocation(line: 5939, column: 7, scope: !11479)
!11483 = !DILocation(line: 5940, column: 32, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 5940, column: 16)
!11485 = !DILocation(line: 5940, column: 39, scope: !11484)
!11486 = !DILocation(line: 5940, column: 42, scope: !11484)
!11487 = !DILocation(line: 5940, column: 55, scope: !11484)
!11488 = !DILocation(line: 5940, column: 58, scope: !11484)
!11489 = !DILocation(line: 5940, column: 62, scope: !11484)
!11490 = !DILocation(line: 5940, column: 16, scope: !11484)
!11491 = !DILocation(line: 5940, column: 16, scope: !11470)
!11492 = !DILocation(line: 5941, column: 16, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11484, file: !3, line: 5940, column: 68)
!11494 = !DILocation(line: 5941, column: 23, scope: !11493)
!11495 = !DILocation(line: 5941, column: 26, scope: !11493)
!11496 = !DILocation(line: 5941, column: 14, scope: !11493)
!11497 = !DILocation(line: 5942, column: 7, scope: !11493)
!11498 = !DILocation(line: 5943, column: 6, scope: !11471)
!11499 = !DILocation(line: 5946, column: 10, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11427, file: !3, line: 5946, column: 10)
!11501 = !DILocation(line: 5946, column: 10, scope: !11427)
!11502 = !DILocation(line: 5947, column: 39, scope: !11503)
!11503 = distinct !DILexicalBlock(scope: !11500, file: !3, line: 5946, column: 17)
!11504 = !DILocation(line: 5947, column: 46, scope: !11503)
!11505 = !DILocation(line: 5947, column: 50, scope: !11503)
!11506 = !DILocation(line: 5947, column: 15, scope: !11503)
!11507 = !DILocation(line: 5947, column: 13, scope: !11503)
!11508 = !DILocation(line: 5948, column: 32, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11503, file: !3, line: 5948, column: 11)
!11510 = !DILocation(line: 5948, column: 39, scope: !11509)
!11511 = !DILocation(line: 5948, column: 12, scope: !11509)
!11512 = !DILocation(line: 5948, column: 11, scope: !11503)
!11513 = !DILocation(line: 5949, column: 16, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11509, file: !3, line: 5948, column: 43)
!11515 = !DILocation(line: 5949, column: 23, scope: !11514)
!11516 = !DILocation(line: 5949, column: 14, scope: !11514)
!11517 = !DILocation(line: 5950, column: 7, scope: !11514)
!11518 = !DILocation(line: 5953, column: 16, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11509, file: !3, line: 5951, column: 12)
!11520 = !DILocation(line: 5953, column: 14, scope: !11519)
!11521 = !DILocation(line: 5956, column: 38, scope: !11503)
!11522 = !DILocation(line: 5956, column: 43, scope: !11503)
!11523 = !DILocation(line: 5956, column: 54, scope: !11503)
!11524 = !DILocation(line: 5956, column: 61, scope: !11503)
!11525 = !DILocation(line: 5956, column: 21, scope: !11503)
!11526 = !DILocation(line: 5956, column: 19, scope: !11503)
!11527 = !DILocation(line: 5957, column: 6, scope: !11503)
!11528 = !DILocation(line: 5958, column: 5, scope: !11427)
!11529 = !DILocation(line: 5963, column: 29, scope: !11323)
!11530 = !DILocation(line: 5963, column: 33, scope: !11323)
!11531 = !DILocation(line: 5963, column: 37, scope: !11323)
!11532 = !DILocation(line: 5963, column: 40, scope: !11323)
!11533 = !DILocation(line: 5963, column: 4, scope: !11323)
!11534 = !DILocation(line: 5965, column: 8, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11323, file: !3, line: 5965, column: 8)
!11536 = !DILocation(line: 5965, column: 8, scope: !11323)
!11537 = !DILocation(line: 5966, column: 29, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 5965, column: 18)
!11539 = !DILocation(line: 5966, column: 33, scope: !11538)
!11540 = !DILocation(line: 5966, column: 37, scope: !11538)
!11541 = !DILocation(line: 5966, column: 40, scope: !11538)
!11542 = !DILocation(line: 5966, column: 5, scope: !11538)
!11543 = !DILocation(line: 5967, column: 9, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 5967, column: 9)
!11545 = !DILocation(line: 5967, column: 19, scope: !11544)
!11546 = !DILocation(line: 5967, column: 16, scope: !11544)
!11547 = !DILocation(line: 5967, column: 9, scope: !11538)
!11548 = !DILocation(line: 5968, column: 30, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11544, file: !3, line: 5967, column: 32)
!11550 = !DILocation(line: 5968, column: 34, scope: !11549)
!11551 = !DILocation(line: 5968, column: 38, scope: !11549)
!11552 = !DILocation(line: 5968, column: 41, scope: !11549)
!11553 = !DILocation(line: 5968, column: 6, scope: !11549)
!11554 = !DILocation(line: 5969, column: 5, scope: !11549)
!11555 = !DILocation(line: 5970, column: 4, scope: !11538)
!11556 = !DILocation(line: 5973, column: 23, scope: !11323)
!11557 = !DILocation(line: 5973, column: 28, scope: !11323)
!11558 = !DILocation(line: 5973, column: 42, scope: !11323)
!11559 = !DILocation(line: 5973, column: 46, scope: !11323)
!11560 = !DILocation(line: 5973, column: 50, scope: !11323)
!11561 = !DILocation(line: 5973, column: 58, scope: !11323)
!11562 = !DILocation(line: 5973, column: 61, scope: !11323)
!11563 = !DILocation(line: 5973, column: 4, scope: !11323)
!11564 = !DILocation(line: 5974, column: 3, scope: !11323)
!11565 = distinct !{!11565, !11318, !11566}
!11566 = !DILocation(line: 5974, column: 3, scope: !11319)
!11567 = !DILocation(line: 5975, column: 2, scope: !11227)
!11568 = !DILocation(line: 5843, column: 46, scope: !11221)
!11569 = !DILocation(line: 5843, column: 51, scope: !11221)
!11570 = !DILocation(line: 5843, column: 2, scope: !11221)
!11571 = distinct !{!11571, !11225, !11572}
!11572 = !DILocation(line: 5975, column: 2, scope: !11215)
!11573 = !DILocation(line: 5976, column: 1, scope: !11186)
!11574 = distinct !DISubprogram(name: "BM_iter_new", scope: !11575, file: !11575, line: 172, type: !11576, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!11575 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11576 = !DISubroutineType(types: !11577)
!11577 = !{!18, !11578, !3737, !3435, !18}
!11578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11228, size: 64)
!11579 = !DILocalVariable(name: "iter", arg: 1, scope: !11574, file: !11575, line: 172, type: !11578)
!11580 = !DILocation(line: 172, column: 38, scope: !11574)
!11581 = !DILocalVariable(name: "bm", arg: 2, scope: !11574, file: !11575, line: 172, type: !3737)
!11582 = !DILocation(line: 172, column: 51, scope: !11574)
!11583 = !DILocalVariable(name: "itype", arg: 3, scope: !11574, file: !11575, line: 172, type: !3435)
!11584 = !DILocation(line: 172, column: 66, scope: !11574)
!11585 = !DILocalVariable(name: "data", arg: 4, scope: !11574, file: !11575, line: 172, type: !18)
!11586 = !DILocation(line: 172, column: 79, scope: !11574)
!11587 = !DILocation(line: 174, column: 6, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11574, file: !11575, line: 174, column: 6)
!11589 = !DILocation(line: 174, column: 6, scope: !11574)
!11590 = !DILocation(line: 175, column: 23, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11588, file: !11575, line: 174, column: 51)
!11592 = !DILocation(line: 175, column: 10, scope: !11591)
!11593 = !DILocation(line: 175, column: 3, scope: !11591)
!11594 = !DILocation(line: 178, column: 3, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11588, file: !11575, line: 177, column: 7)
!11596 = !DILocation(line: 180, column: 1, scope: !11574)
!11597 = distinct !DISubprogram(name: "_bm_elem_flag_test", scope: !11598, file: !11598, line: 42, type: !11599, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!11598 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11599 = !DISubroutineType(types: !11600)
!11600 = !{!23, !11601, !3435}
!11601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11602, size: 64)
!11602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3588)
!11603 = !DILocalVariable(name: "head", arg: 1, scope: !11597, file: !11598, line: 42, type: !11601)
!11604 = !DILocation(line: 42, column: 52, scope: !11597)
!11605 = !DILocalVariable(name: "hflag", arg: 2, scope: !11597, file: !11598, line: 42, type: !3435)
!11606 = !DILocation(line: 42, column: 69, scope: !11597)
!11607 = !DILocation(line: 44, column: 9, scope: !11597)
!11608 = !DILocation(line: 44, column: 15, scope: !11597)
!11609 = !DILocation(line: 44, column: 23, scope: !11597)
!11610 = !DILocation(line: 44, column: 21, scope: !11597)
!11611 = !DILocation(line: 44, column: 2, scope: !11597)
!11612 = distinct !DISubprogram(name: "BM_iter_step", scope: !11575, file: !11575, line: 40, type: !11613, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!11613 = !DISubroutineType(types: !11614)
!11614 = !{!18, !11578}
!11615 = !DILocalVariable(name: "iter", arg: 1, scope: !11612, file: !11575, line: 40, type: !11578)
!11616 = !DILocation(line: 40, column: 39, scope: !11612)
!11617 = !DILocation(line: 42, column: 9, scope: !11612)
!11618 = !DILocation(line: 42, column: 15, scope: !11612)
!11619 = !DILocation(line: 42, column: 20, scope: !11612)
!11620 = !DILocation(line: 42, column: 2, scope: !11612)
!11621 = distinct !DISubprogram(name: "BM_edge_is_boundary", scope: !11622, file: !11622, line: 118, type: !11623, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!11622 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_queries_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11623 = !DISubroutineType(types: !11624)
!11624 = !{!2769, !11625}
!11625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11626, size: 64)
!11626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3683)
!11627 = !DILocalVariable(name: "e", arg: 1, scope: !11621, file: !11622, line: 118, type: !11625)
!11628 = !DILocation(line: 118, column: 51, scope: !11621)
!11629 = !DILocalVariable(name: "l", scope: !11621, file: !11622, line: 120, type: !11630)
!11630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11631, size: 64)
!11631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3626)
!11632 = !DILocation(line: 120, column: 16, scope: !11621)
!11633 = !DILocation(line: 120, column: 20, scope: !11621)
!11634 = !DILocation(line: 120, column: 23, scope: !11621)
!11635 = !DILocation(line: 121, column: 10, scope: !11621)
!11636 = !DILocation(line: 121, column: 12, scope: !11621)
!11637 = !DILocation(line: 121, column: 16, scope: !11621)
!11638 = !DILocation(line: 121, column: 19, scope: !11621)
!11639 = !DILocation(line: 121, column: 34, scope: !11621)
!11640 = !DILocation(line: 121, column: 31, scope: !11621)
!11641 = !DILocation(line: 0, scope: !11621)
!11642 = !DILocation(line: 121, column: 9, scope: !11621)
!11643 = !DILocation(line: 121, column: 2, scope: !11621)
!11644 = distinct !DISubprogram(name: "freeEdgeSlideTempFaces", scope: !3, file: !3, line: 5978, type: !11645, scopeLine: 5979, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!11645 = !DISubroutineType(types: !11646)
!11646 = !{null, !3574}
!11647 = !DILocalVariable(name: "sld", arg: 1, scope: !11644, file: !3, line: 5978, type: !3574)
!11648 = !DILocation(line: 5978, column: 44, scope: !11644)
!11649 = !DILocation(line: 5980, column: 6, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11644, file: !3, line: 5980, column: 6)
!11651 = !DILocation(line: 5980, column: 11, scope: !11650)
!11652 = !DILocation(line: 5980, column: 6, scope: !11644)
!11653 = !DILocation(line: 5981, column: 7, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11655, file: !3, line: 5981, column: 7)
!11655 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 5980, column: 26)
!11656 = !DILocation(line: 5981, column: 12, scope: !11654)
!11657 = !DILocation(line: 5981, column: 7, scope: !11655)
!11658 = !DILocation(line: 5982, column: 17, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11654, file: !3, line: 5981, column: 26)
!11660 = !DILocation(line: 5982, column: 22, scope: !11659)
!11661 = !DILocation(line: 5982, column: 4, scope: !11659)
!11662 = !DILocation(line: 5983, column: 4, scope: !11659)
!11663 = !DILocation(line: 5983, column: 9, scope: !11659)
!11664 = !DILocation(line: 5983, column: 22, scope: !11659)
!11665 = !DILocation(line: 5984, column: 3, scope: !11659)
!11666 = !DILocation(line: 5986, column: 7, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11655, file: !3, line: 5986, column: 7)
!11668 = !DILocation(line: 5986, column: 12, scope: !11667)
!11669 = !DILocation(line: 5986, column: 7, scope: !11655)
!11670 = !DILocation(line: 5987, column: 19, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11667, file: !3, line: 5986, column: 23)
!11672 = !DILocation(line: 5987, column: 24, scope: !11671)
!11673 = !DILocation(line: 5987, column: 4, scope: !11671)
!11674 = !DILocation(line: 5988, column: 4, scope: !11671)
!11675 = !DILocation(line: 5988, column: 9, scope: !11671)
!11676 = !DILocation(line: 5988, column: 19, scope: !11671)
!11677 = !DILocation(line: 5989, column: 3, scope: !11671)
!11678 = !DILocation(line: 5990, column: 2, scope: !11655)
!11679 = !DILocation(line: 5991, column: 1, scope: !11644)
!11680 = distinct !DISubprogram(name: "freeEdgeSlideVerts", scope: !3, file: !3, line: 5994, type: !4434, scopeLine: 5995, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!11681 = !DILocalVariable(name: "t", arg: 1, scope: !11680, file: !3, line: 5994, type: !3841)
!11682 = !DILocation(line: 5994, column: 36, scope: !11680)
!11683 = !DILocalVariable(name: "sld", scope: !11680, file: !3, line: 5996, type: !3574)
!11684 = !DILocation(line: 5996, column: 17, scope: !11680)
!11685 = !DILocation(line: 5996, column: 23, scope: !11680)
!11686 = !DILocation(line: 5996, column: 26, scope: !11680)
!11687 = !DILocation(line: 5998, column: 7, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11680, file: !3, line: 5998, column: 6)
!11689 = !DILocation(line: 5998, column: 6, scope: !11680)
!11690 = !DILocation(line: 5999, column: 3, scope: !11688)
!11691 = !DILocation(line: 6001, column: 25, scope: !11680)
!11692 = !DILocation(line: 6001, column: 2, scope: !11680)
!11693 = !DILocation(line: 6003, column: 17, scope: !11680)
!11694 = !DILocation(line: 6003, column: 22, scope: !11680)
!11695 = !DILocation(line: 6003, column: 26, scope: !11680)
!11696 = !DILocation(line: 6003, column: 2, scope: !11680)
!11697 = !DILocation(line: 6005, column: 2, scope: !11680)
!11698 = !DILocation(line: 6005, column: 12, scope: !11680)
!11699 = !DILocation(line: 6005, column: 17, scope: !11680)
!11700 = !DILocation(line: 6006, column: 2, scope: !11680)
!11701 = !DILocation(line: 6006, column: 12, scope: !11680)
!11702 = !DILocation(line: 6008, column: 2, scope: !11680)
!11703 = !DILocation(line: 6008, column: 5, scope: !11680)
!11704 = !DILocation(line: 6008, column: 16, scope: !11680)
!11705 = !DILocation(line: 6010, column: 13, scope: !11680)
!11706 = !DILocation(line: 6010, column: 2, scope: !11680)
!11707 = !DILocation(line: 6011, column: 1, scope: !11680)
!11708 = distinct !DISubprogram(name: "freeVertSlideVerts", scope: !3, file: !3, line: 6506, type: !4434, scopeLine: 6507, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!11709 = !DILocalVariable(name: "t", arg: 1, scope: !11708, file: !3, line: 6506, type: !3841)
!11710 = !DILocation(line: 6506, column: 36, scope: !11708)
!11711 = !DILocalVariable(name: "sld", scope: !11708, file: !3, line: 6508, type: !3817)
!11712 = !DILocation(line: 6508, column: 17, scope: !11708)
!11713 = !DILocation(line: 6508, column: 23, scope: !11708)
!11714 = !DILocation(line: 6508, column: 26, scope: !11708)
!11715 = !DILocation(line: 6510, column: 7, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11708, file: !3, line: 6510, column: 6)
!11717 = !DILocation(line: 6510, column: 6, scope: !11708)
!11718 = !DILocation(line: 6511, column: 3, scope: !11716)
!11719 = !DILocation(line: 6514, column: 6, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11708, file: !3, line: 6514, column: 6)
!11721 = !DILocation(line: 6514, column: 11, scope: !11720)
!11722 = !DILocation(line: 6514, column: 17, scope: !11720)
!11723 = !DILocation(line: 6514, column: 6, scope: !11708)
!11724 = !DILocalVariable(name: "sv", scope: !11725, file: !3, line: 6515, type: !3822)
!11725 = distinct !DILexicalBlock(scope: !11720, file: !3, line: 6514, column: 22)
!11726 = !DILocation(line: 6515, column: 27, scope: !11725)
!11727 = !DILocation(line: 6515, column: 32, scope: !11725)
!11728 = !DILocation(line: 6515, column: 37, scope: !11725)
!11729 = !DILocalVariable(name: "i", scope: !11725, file: !3, line: 6516, type: !35)
!11730 = !DILocation(line: 6516, column: 7, scope: !11725)
!11731 = !DILocation(line: 6517, column: 10, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11725, file: !3, line: 6517, column: 3)
!11733 = !DILocation(line: 6517, column: 8, scope: !11732)
!11734 = !DILocation(line: 6517, column: 15, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11732, file: !3, line: 6517, column: 3)
!11736 = !DILocation(line: 6517, column: 19, scope: !11735)
!11737 = !DILocation(line: 6517, column: 24, scope: !11735)
!11738 = !DILocation(line: 6517, column: 17, scope: !11735)
!11739 = !DILocation(line: 6517, column: 3, scope: !11732)
!11740 = !DILocation(line: 6518, column: 4, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 6517, column: 42)
!11742 = !DILocation(line: 6518, column: 14, scope: !11741)
!11743 = !DILocation(line: 6518, column: 18, scope: !11741)
!11744 = !DILocation(line: 6519, column: 4, scope: !11741)
!11745 = !DILocation(line: 6519, column: 14, scope: !11741)
!11746 = !DILocation(line: 6519, column: 18, scope: !11741)
!11747 = !DILocation(line: 6520, column: 3, scope: !11741)
!11748 = !DILocation(line: 6517, column: 32, scope: !11735)
!11749 = !DILocation(line: 6517, column: 38, scope: !11735)
!11750 = !DILocation(line: 6517, column: 3, scope: !11735)
!11751 = distinct !{!11751, !11739, !11752}
!11752 = !DILocation(line: 6520, column: 3, scope: !11732)
!11753 = !DILocation(line: 6521, column: 2, scope: !11725)
!11754 = !DILocation(line: 6523, column: 2, scope: !11708)
!11755 = !DILocation(line: 6523, column: 12, scope: !11708)
!11756 = !DILocation(line: 6523, column: 17, scope: !11708)
!11757 = !DILocation(line: 6524, column: 2, scope: !11708)
!11758 = !DILocation(line: 6524, column: 12, scope: !11708)
!11759 = !DILocation(line: 6526, column: 2, scope: !11708)
!11760 = !DILocation(line: 6526, column: 5, scope: !11708)
!11761 = !DILocation(line: 6526, column: 16, scope: !11708)
!11762 = !DILocation(line: 6528, column: 13, scope: !11708)
!11763 = !DILocation(line: 6528, column: 2, scope: !11708)
!11764 = !DILocation(line: 6529, column: 1, scope: !11708)
!11765 = distinct !DISubprogram(name: "checkUseAxisMatrix", scope: !3, file: !3, line: 7734, type: !11766, scopeLine: 7735, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!11766 = !DISubroutineType(types: !11767)
!11767 = !{!2769, !3841}
!11768 = !DILocalVariable(name: "t", arg: 1, scope: !11765, file: !3, line: 7734, type: !3841)
!11769 = !DILocation(line: 7734, column: 36, scope: !11765)
!11770 = !DILocation(line: 7737, column: 6, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11765, file: !3, line: 7737, column: 6)
!11772 = !DILocation(line: 7737, column: 9, scope: !11771)
!11773 = !DILocation(line: 7737, column: 14, scope: !11771)
!11774 = !DILocation(line: 7737, column: 6, scope: !11765)
!11775 = !DILocation(line: 7738, column: 8, scope: !11776)
!11776 = distinct !DILexicalBlock(scope: !11777, file: !3, line: 7738, column: 7)
!11777 = distinct !DILexicalBlock(scope: !11771, file: !3, line: 7737, column: 24)
!11778 = !DILocation(line: 7738, column: 11, scope: !11776)
!11779 = !DILocation(line: 7738, column: 18, scope: !11776)
!11780 = !DILocation(line: 7738, column: 32, scope: !11776)
!11781 = !DILocation(line: 7738, column: 36, scope: !11776)
!11782 = !DILocation(line: 7738, column: 7, scope: !11777)
!11783 = !DILocation(line: 7740, column: 4, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11776, file: !3, line: 7738, column: 102)
!11785 = !DILocation(line: 7742, column: 2, scope: !11777)
!11786 = !DILocation(line: 7744, column: 2, scope: !11765)
!11787 = !DILocation(line: 7745, column: 1, scope: !11765)
!11788 = distinct !DISubprogram(name: "BLI_rcti_size_x", scope: !11789, file: !11789, line: 105, type: !11790, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!11789 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11790 = !DISubroutineType(types: !11791)
!11791 = !{!35, !11792}
!11792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11793, size: 64)
!11793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1745)
!11794 = !DILocalVariable(name: "rct", arg: 1, scope: !11788, file: !11789, line: 105, type: !11792)
!11795 = !DILocation(line: 105, column: 53, scope: !11788)
!11796 = !DILocation(line: 105, column: 68, scope: !11788)
!11797 = !DILocation(line: 105, column: 73, scope: !11788)
!11798 = !DILocation(line: 105, column: 80, scope: !11788)
!11799 = !DILocation(line: 105, column: 85, scope: !11788)
!11800 = !DILocation(line: 105, column: 78, scope: !11788)
!11801 = !DILocation(line: 105, column: 60, scope: !11788)
!11802 = distinct !DISubprogram(name: "BLI_rcti_size_y", scope: !11789, file: !11789, line: 106, type: !11790, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!11803 = !DILocalVariable(name: "rct", arg: 1, scope: !11802, file: !11789, line: 106, type: !11792)
!11804 = !DILocation(line: 106, column: 53, scope: !11802)
!11805 = !DILocation(line: 106, column: 68, scope: !11802)
!11806 = !DILocation(line: 106, column: 73, scope: !11802)
!11807 = !DILocation(line: 106, column: 80, scope: !11802)
!11808 = !DILocation(line: 106, column: 85, scope: !11802)
!11809 = !DILocation(line: 106, column: 78, scope: !11802)
!11810 = !DILocation(line: 106, column: 60, scope: !11802)
!11811 = distinct !DISubprogram(name: "BLI_rctf_size_x", scope: !11789, file: !11789, line: 107, type: !11812, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!11812 = !DISubroutineType(types: !11813)
!11813 = !{!1727, !11814}
!11814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11815, size: 64)
!11815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1736)
!11816 = !DILocalVariable(name: "rct", arg: 1, scope: !11811, file: !11789, line: 107, type: !11814)
!11817 = !DILocation(line: 107, column: 53, scope: !11811)
!11818 = !DILocation(line: 107, column: 68, scope: !11811)
!11819 = !DILocation(line: 107, column: 73, scope: !11811)
!11820 = !DILocation(line: 107, column: 80, scope: !11811)
!11821 = !DILocation(line: 107, column: 85, scope: !11811)
!11822 = !DILocation(line: 107, column: 78, scope: !11811)
!11823 = !DILocation(line: 107, column: 60, scope: !11811)
!11824 = distinct !DISubprogram(name: "BLI_rctf_size_y", scope: !11789, file: !11789, line: 108, type: !11812, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!11825 = !DILocalVariable(name: "rct", arg: 1, scope: !11824, file: !11789, line: 108, type: !11814)
!11826 = !DILocation(line: 108, column: 53, scope: !11824)
!11827 = !DILocation(line: 108, column: 68, scope: !11824)
!11828 = !DILocation(line: 108, column: 73, scope: !11824)
!11829 = !DILocation(line: 108, column: 80, scope: !11824)
!11830 = !DILocation(line: 108, column: 85, scope: !11824)
!11831 = !DILocation(line: 108, column: 78, scope: !11824)
!11832 = !DILocation(line: 108, column: 60, scope: !11824)
!11833 = distinct !DISubprogram(name: "drawEdgeSlide", scope: !3, file: !3, line: 6097, type: !11834, scopeLine: 6098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!11834 = !DISubroutineType(types: !11835)
!11835 = !{null, !8861, !3841}
!11836 = !DILocalVariable(name: "C", arg: 1, scope: !11833, file: !3, line: 6097, type: !8861)
!11837 = !DILocation(line: 6097, column: 50, scope: !11833)
!11838 = !DILocalVariable(name: "t", arg: 2, scope: !11833, file: !3, line: 6097, type: !3841)
!11839 = !DILocation(line: 6097, column: 64, scope: !11833)
!11840 = !DILocation(line: 6099, column: 6, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11833, file: !3, line: 6099, column: 6)
!11842 = !DILocation(line: 6099, column: 9, scope: !11841)
!11843 = !DILocation(line: 6099, column: 14, scope: !11841)
!11844 = !DILocation(line: 6099, column: 6, scope: !11833)
!11845 = !DILocalVariable(name: "sld", scope: !11846, file: !3, line: 6100, type: !3574)
!11846 = distinct !DILexicalBlock(scope: !11841, file: !3, line: 6099, column: 33)
!11847 = !DILocation(line: 6100, column: 18, scope: !11846)
!11848 = !DILocation(line: 6100, column: 41, scope: !11846)
!11849 = !DILocation(line: 6100, column: 44, scope: !11846)
!11850 = !DILocation(line: 6100, column: 24, scope: !11846)
!11851 = !DILocation(line: 6102, column: 7, scope: !11852)
!11852 = distinct !DILexicalBlock(scope: !11846, file: !3, line: 6102, column: 7)
!11853 = !DILocation(line: 6102, column: 11, scope: !11852)
!11854 = !DILocation(line: 6102, column: 14, scope: !11852)
!11855 = !DILocation(line: 6102, column: 19, scope: !11852)
!11856 = !DILocation(line: 6102, column: 35, scope: !11852)
!11857 = !DILocation(line: 6102, column: 7, scope: !11846)
!11858 = !DILocalVariable(name: "v3d", scope: !11859, file: !3, line: 6103, type: !3482)
!11859 = distinct !DILexicalBlock(scope: !11852, file: !3, line: 6102, column: 45)
!11860 = !DILocation(line: 6103, column: 12, scope: !11859)
!11861 = !DILocation(line: 6103, column: 32, scope: !11859)
!11862 = !DILocation(line: 6103, column: 18, scope: !11859)
!11863 = !DILocalVariable(name: "co_a", scope: !11859, file: !3, line: 6104, type: !1987)
!11864 = !DILocation(line: 6104, column: 10, scope: !11859)
!11865 = !DILocalVariable(name: "co_b", scope: !11859, file: !3, line: 6104, type: !1987)
!11866 = !DILocation(line: 6104, column: 19, scope: !11859)
!11867 = !DILocalVariable(name: "co_mark", scope: !11859, file: !3, line: 6104, type: !1987)
!11868 = !DILocation(line: 6104, column: 28, scope: !11859)
!11869 = !DILocalVariable(name: "curr_sv", scope: !11859, file: !3, line: 6105, type: !3579)
!11870 = !DILocation(line: 6105, column: 28, scope: !11859)
!11871 = !DILocation(line: 6105, column: 39, scope: !11859)
!11872 = !DILocation(line: 6105, column: 44, scope: !11859)
!11873 = !DILocation(line: 6105, column: 47, scope: !11859)
!11874 = !DILocation(line: 6105, column: 52, scope: !11859)
!11875 = !DILocalVariable(name: "fac", scope: !11859, file: !3, line: 6106, type: !3981)
!11876 = !DILocation(line: 6106, column: 16, scope: !11859)
!11877 = !DILocation(line: 6106, column: 23, scope: !11859)
!11878 = !DILocation(line: 6106, column: 28, scope: !11859)
!11879 = !DILocation(line: 6106, column: 33, scope: !11859)
!11880 = !DILocation(line: 6106, column: 41, scope: !11859)
!11881 = !DILocalVariable(name: "ctrl_size", scope: !11859, file: !3, line: 6107, type: !3981)
!11882 = !DILocation(line: 6107, column: 16, scope: !11859)
!11883 = !DILocation(line: 6107, column: 28, scope: !11859)
!11884 = !DILocation(line: 6107, column: 63, scope: !11859)
!11885 = !DILocalVariable(name: "guide_size", scope: !11859, file: !3, line: 6108, type: !3981)
!11886 = !DILocation(line: 6108, column: 16, scope: !11859)
!11887 = !DILocation(line: 6108, column: 29, scope: !11859)
!11888 = !DILocation(line: 6108, column: 39, scope: !11859)
!11889 = !DILocalVariable(name: "line_size", scope: !11859, file: !3, line: 6109, type: !3981)
!11890 = !DILocation(line: 6109, column: 16, scope: !11859)
!11891 = !DILocation(line: 6109, column: 28, scope: !11859)
!11892 = !DILocation(line: 6109, column: 64, scope: !11859)
!11893 = !DILocalVariable(name: "alpha_shade", scope: !11859, file: !3, line: 6110, type: !3858)
!11894 = !DILocation(line: 6110, column: 14, scope: !11859)
!11895 = !DILocation(line: 6112, column: 16, scope: !11859)
!11896 = !DILocation(line: 6112, column: 22, scope: !11859)
!11897 = !DILocation(line: 6112, column: 31, scope: !11859)
!11898 = !DILocation(line: 6112, column: 42, scope: !11859)
!11899 = !DILocation(line: 6112, column: 51, scope: !11859)
!11900 = !DILocation(line: 6112, column: 4, scope: !11859)
!11901 = !DILocation(line: 6113, column: 16, scope: !11859)
!11902 = !DILocation(line: 6113, column: 22, scope: !11859)
!11903 = !DILocation(line: 6113, column: 31, scope: !11859)
!11904 = !DILocation(line: 6113, column: 42, scope: !11859)
!11905 = !DILocation(line: 6113, column: 51, scope: !11859)
!11906 = !DILocation(line: 6113, column: 4, scope: !11859)
!11907 = !DILocation(line: 6115, column: 8, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11859, file: !3, line: 6115, column: 8)
!11909 = !DILocation(line: 6115, column: 12, scope: !11908)
!11910 = !DILocation(line: 6115, column: 15, scope: !11908)
!11911 = !DILocation(line: 6115, column: 20, scope: !11908)
!11912 = !DILocation(line: 6115, column: 8, scope: !11859)
!11913 = !DILocation(line: 6116, column: 5, scope: !11908)
!11914 = !DILocation(line: 6118, column: 4, scope: !11859)
!11915 = !DILocation(line: 6119, column: 4, scope: !11859)
!11916 = !DILocation(line: 6121, column: 4, scope: !11859)
!11917 = !DILocation(line: 6122, column: 4, scope: !11859)
!11918 = !DILocation(line: 6124, column: 4, scope: !11859)
!11919 = !DILocation(line: 6126, column: 4, scope: !11859)
!11920 = !DILocation(line: 6127, column: 4, scope: !11859)
!11921 = !DILocation(line: 6128, column: 4, scope: !11859)
!11922 = !DILocation(line: 6129, column: 8, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11859, file: !3, line: 6129, column: 8)
!11924 = !DILocation(line: 6129, column: 17, scope: !11923)
!11925 = !DILocation(line: 6129, column: 8, scope: !11859)
!11926 = !DILocation(line: 6130, column: 17, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11923, file: !3, line: 6129, column: 22)
!11928 = !DILocation(line: 6130, column: 26, scope: !11927)
!11929 = !DILocation(line: 6130, column: 31, scope: !11927)
!11930 = !DILocation(line: 6130, column: 5, scope: !11927)
!11931 = !DILocation(line: 6131, column: 17, scope: !11927)
!11932 = !DILocation(line: 6131, column: 26, scope: !11927)
!11933 = !DILocation(line: 6131, column: 5, scope: !11927)
!11934 = !DILocation(line: 6132, column: 4, scope: !11927)
!11935 = !DILocation(line: 6133, column: 8, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11859, file: !3, line: 6133, column: 8)
!11937 = !DILocation(line: 6133, column: 17, scope: !11936)
!11938 = !DILocation(line: 6133, column: 8, scope: !11859)
!11939 = !DILocation(line: 6134, column: 17, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11936, file: !3, line: 6133, column: 22)
!11941 = !DILocation(line: 6134, column: 26, scope: !11940)
!11942 = !DILocation(line: 6134, column: 31, scope: !11940)
!11943 = !DILocation(line: 6134, column: 5, scope: !11940)
!11944 = !DILocation(line: 6135, column: 17, scope: !11940)
!11945 = !DILocation(line: 6135, column: 26, scope: !11940)
!11946 = !DILocation(line: 6135, column: 5, scope: !11940)
!11947 = !DILocation(line: 6136, column: 4, scope: !11940)
!11948 = !DILocation(line: 6137, column: 4, scope: !11859)
!11949 = !DILocation(line: 6140, column: 4, scope: !11859)
!11950 = !DILocation(line: 6141, column: 4, scope: !11859)
!11951 = !DILocation(line: 6142, column: 4, scope: !11859)
!11952 = !DILocation(line: 6143, column: 8, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11859, file: !3, line: 6143, column: 8)
!11954 = !DILocation(line: 6143, column: 13, scope: !11953)
!11955 = !DILocation(line: 6143, column: 8, scope: !11859)
!11956 = !DILocation(line: 6144, column: 9, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11958, file: !3, line: 6144, column: 9)
!11958 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 6143, column: 26)
!11959 = !DILocation(line: 6144, column: 18, scope: !11957)
!11960 = !DILocation(line: 6144, column: 9, scope: !11958)
!11961 = !DILocation(line: 6144, column: 36, scope: !11957)
!11962 = !DILocation(line: 6144, column: 45, scope: !11957)
!11963 = !DILocation(line: 6144, column: 50, scope: !11957)
!11964 = !DILocation(line: 6144, column: 23, scope: !11957)
!11965 = !DILocation(line: 6145, column: 4, scope: !11958)
!11966 = !DILocation(line: 6147, column: 9, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11968, file: !3, line: 6147, column: 9)
!11968 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 6146, column: 9)
!11969 = !DILocation(line: 6147, column: 18, scope: !11967)
!11970 = !DILocation(line: 6147, column: 9, scope: !11968)
!11971 = !DILocation(line: 6147, column: 36, scope: !11967)
!11972 = !DILocation(line: 6147, column: 45, scope: !11967)
!11973 = !DILocation(line: 6147, column: 50, scope: !11967)
!11974 = !DILocation(line: 6147, column: 23, scope: !11967)
!11975 = !DILocation(line: 6149, column: 4, scope: !11859)
!11976 = !DILocation(line: 6151, column: 4, scope: !11859)
!11977 = !DILocation(line: 6152, column: 4, scope: !11859)
!11978 = !DILocation(line: 6153, column: 4, scope: !11859)
!11979 = !DILocation(line: 6158, column: 26, scope: !11859)
!11980 = !DILocation(line: 6158, column: 35, scope: !11859)
!11981 = !DILocation(line: 6158, column: 41, scope: !11859)
!11982 = !DILocation(line: 6158, column: 50, scope: !11859)
!11983 = !DILocation(line: 6158, column: 61, scope: !11859)
!11984 = !DILocation(line: 6158, column: 67, scope: !11859)
!11985 = !DILocation(line: 6158, column: 4, scope: !11859)
!11986 = !DILocation(line: 6159, column: 17, scope: !11859)
!11987 = !DILocation(line: 6159, column: 4, scope: !11859)
!11988 = !DILocation(line: 6160, column: 4, scope: !11859)
!11989 = !DILocation(line: 6163, column: 4, scope: !11859)
!11990 = !DILocation(line: 6164, column: 4, scope: !11859)
!11991 = !DILocation(line: 6166, column: 4, scope: !11859)
!11992 = !DILocation(line: 6168, column: 8, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11859, file: !3, line: 6168, column: 8)
!11994 = !DILocation(line: 6168, column: 12, scope: !11993)
!11995 = !DILocation(line: 6168, column: 15, scope: !11993)
!11996 = !DILocation(line: 6168, column: 20, scope: !11993)
!11997 = !DILocation(line: 6168, column: 8, scope: !11859)
!11998 = !DILocation(line: 6169, column: 5, scope: !11993)
!11999 = !DILocation(line: 6170, column: 3, scope: !11859)
!12000 = !DILocation(line: 6171, column: 2, scope: !11846)
!12001 = !DILocation(line: 6172, column: 1, scope: !11833)
!12002 = distinct !DISubprogram(name: "drawVertSlide", scope: !3, file: !3, line: 6638, type: !11834, scopeLine: 6639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!12003 = !DILocalVariable(name: "C", arg: 1, scope: !12002, file: !3, line: 6638, type: !8861)
!12004 = !DILocation(line: 6638, column: 50, scope: !12002)
!12005 = !DILocalVariable(name: "t", arg: 2, scope: !12002, file: !3, line: 6638, type: !3841)
!12006 = !DILocation(line: 6638, column: 64, scope: !12002)
!12007 = !DILocation(line: 6640, column: 6, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !12002, file: !3, line: 6640, column: 6)
!12009 = !DILocation(line: 6640, column: 9, scope: !12008)
!12010 = !DILocation(line: 6640, column: 14, scope: !12008)
!12011 = !DILocation(line: 6640, column: 6, scope: !12002)
!12012 = !DILocalVariable(name: "sld", scope: !12013, file: !3, line: 6641, type: !3817)
!12013 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 6640, column: 33)
!12014 = !DILocation(line: 6641, column: 18, scope: !12013)
!12015 = !DILocation(line: 6641, column: 41, scope: !12013)
!12016 = !DILocation(line: 6641, column: 44, scope: !12013)
!12017 = !DILocation(line: 6641, column: 24, scope: !12013)
!12018 = !DILocation(line: 6643, column: 7, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !12013, file: !3, line: 6643, column: 7)
!12020 = !DILocation(line: 6643, column: 7, scope: !12013)
!12021 = !DILocalVariable(name: "v3d", scope: !12022, file: !3, line: 6644, type: !3482)
!12022 = distinct !DILexicalBlock(scope: !12019, file: !3, line: 6643, column: 12)
!12023 = !DILocation(line: 6644, column: 12, scope: !12022)
!12024 = !DILocation(line: 6644, column: 32, scope: !12022)
!12025 = !DILocation(line: 6644, column: 18, scope: !12022)
!12026 = !DILocalVariable(name: "curr_sv", scope: !12022, file: !3, line: 6645, type: !3822)
!12027 = !DILocation(line: 6645, column: 28, scope: !12022)
!12028 = !DILocation(line: 6645, column: 39, scope: !12022)
!12029 = !DILocation(line: 6645, column: 44, scope: !12022)
!12030 = !DILocation(line: 6645, column: 47, scope: !12022)
!12031 = !DILocation(line: 6645, column: 52, scope: !12022)
!12032 = !DILocalVariable(name: "sv", scope: !12022, file: !3, line: 6646, type: !3822)
!12033 = !DILocation(line: 6646, column: 28, scope: !12022)
!12034 = !DILocalVariable(name: "ctrl_size", scope: !12022, file: !3, line: 6647, type: !3981)
!12035 = !DILocation(line: 6647, column: 16, scope: !12022)
!12036 = !DILocation(line: 6647, column: 28, scope: !12022)
!12037 = !DILocation(line: 6647, column: 63, scope: !12022)
!12038 = !DILocalVariable(name: "line_size", scope: !12022, file: !3, line: 6648, type: !3981)
!12039 = !DILocation(line: 6648, column: 16, scope: !12022)
!12040 = !DILocation(line: 6648, column: 28, scope: !12022)
!12041 = !DILocation(line: 6648, column: 64, scope: !12022)
!12042 = !DILocalVariable(name: "alpha_shade", scope: !12022, file: !3, line: 6649, type: !3858)
!12043 = !DILocation(line: 6649, column: 14, scope: !12022)
!12044 = !DILocalVariable(name: "is_clamp", scope: !12022, file: !3, line: 6650, type: !12045)
!12045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2769)
!12046 = !DILocation(line: 6650, column: 15, scope: !12022)
!12047 = !DILocation(line: 6650, column: 28, scope: !12022)
!12048 = !DILocation(line: 6650, column: 31, scope: !12022)
!12049 = !DILocation(line: 6650, column: 36, scope: !12022)
!12050 = !DILocation(line: 6650, column: 26, scope: !12022)
!12051 = !DILocalVariable(name: "i", scope: !12022, file: !3, line: 6651, type: !35)
!12052 = !DILocation(line: 6651, column: 8, scope: !12022)
!12053 = !DILocation(line: 6653, column: 8, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12022, file: !3, line: 6653, column: 8)
!12055 = !DILocation(line: 6653, column: 12, scope: !12054)
!12056 = !DILocation(line: 6653, column: 15, scope: !12054)
!12057 = !DILocation(line: 6653, column: 20, scope: !12054)
!12058 = !DILocation(line: 6653, column: 8, scope: !12022)
!12059 = !DILocation(line: 6654, column: 5, scope: !12054)
!12060 = !DILocation(line: 6656, column: 4, scope: !12022)
!12061 = !DILocation(line: 6657, column: 4, scope: !12022)
!12062 = !DILocation(line: 6659, column: 4, scope: !12022)
!12063 = !DILocation(line: 6660, column: 4, scope: !12022)
!12064 = !DILocation(line: 6662, column: 4, scope: !12022)
!12065 = !DILocation(line: 6664, column: 4, scope: !12022)
!12066 = !DILocation(line: 6665, column: 4, scope: !12022)
!12067 = !DILocation(line: 6666, column: 4, scope: !12022)
!12068 = !DILocation(line: 6667, column: 8, scope: !12069)
!12069 = distinct !DILexicalBlock(scope: !12022, file: !3, line: 6667, column: 8)
!12070 = !DILocation(line: 6667, column: 8, scope: !12022)
!12071 = !DILocation(line: 6668, column: 10, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 6667, column: 18)
!12073 = !DILocation(line: 6668, column: 15, scope: !12072)
!12074 = !DILocation(line: 6668, column: 8, scope: !12072)
!12075 = !DILocation(line: 6669, column: 12, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12072, file: !3, line: 6669, column: 5)
!12077 = !DILocation(line: 6669, column: 10, scope: !12076)
!12078 = !DILocation(line: 6669, column: 17, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12076, file: !3, line: 6669, column: 5)
!12080 = !DILocation(line: 6669, column: 21, scope: !12079)
!12081 = !DILocation(line: 6669, column: 26, scope: !12079)
!12082 = !DILocation(line: 6669, column: 19, scope: !12079)
!12083 = !DILocation(line: 6669, column: 5, scope: !12076)
!12084 = !DILocation(line: 6670, column: 18, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12079, file: !3, line: 6669, column: 44)
!12086 = !DILocation(line: 6670, column: 22, scope: !12085)
!12087 = !DILocation(line: 6670, column: 6, scope: !12085)
!12088 = !DILocation(line: 6671, column: 18, scope: !12085)
!12089 = !DILocation(line: 6671, column: 22, scope: !12085)
!12090 = !DILocation(line: 6671, column: 38, scope: !12085)
!12091 = !DILocation(line: 6671, column: 42, scope: !12085)
!12092 = !DILocation(line: 6671, column: 6, scope: !12085)
!12093 = !DILocation(line: 6672, column: 5, scope: !12085)
!12094 = !DILocation(line: 6669, column: 34, scope: !12079)
!12095 = !DILocation(line: 6669, column: 40, scope: !12079)
!12096 = !DILocation(line: 6669, column: 5, scope: !12079)
!12097 = distinct !{!12097, !12083, !12098}
!12098 = !DILocation(line: 6672, column: 5, scope: !12076)
!12099 = !DILocation(line: 6673, column: 4, scope: !12072)
!12100 = !DILocation(line: 6675, column: 10, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 6674, column: 9)
!12102 = !DILocation(line: 6675, column: 15, scope: !12101)
!12103 = !DILocation(line: 6675, column: 8, scope: !12101)
!12104 = !DILocation(line: 6676, column: 12, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12101, file: !3, line: 6676, column: 5)
!12106 = !DILocation(line: 6676, column: 10, scope: !12105)
!12107 = !DILocation(line: 6676, column: 17, scope: !12108)
!12108 = distinct !DILexicalBlock(scope: !12105, file: !3, line: 6676, column: 5)
!12109 = !DILocation(line: 6676, column: 21, scope: !12108)
!12110 = !DILocation(line: 6676, column: 26, scope: !12108)
!12111 = !DILocation(line: 6676, column: 19, scope: !12108)
!12112 = !DILocation(line: 6676, column: 5, scope: !12105)
!12113 = !DILocalVariable(name: "a", scope: !12114, file: !3, line: 6677, type: !1987)
!12114 = distinct !DILexicalBlock(scope: !12108, file: !3, line: 6676, column: 44)
!12115 = !DILocation(line: 6677, column: 12, scope: !12114)
!12116 = !DILocalVariable(name: "b", scope: !12114, file: !3, line: 6677, type: !1987)
!12117 = !DILocation(line: 6677, column: 18, scope: !12114)
!12118 = !DILocation(line: 6678, column: 18, scope: !12114)
!12119 = !DILocation(line: 6678, column: 21, scope: !12114)
!12120 = !DILocation(line: 6678, column: 25, scope: !12114)
!12121 = !DILocation(line: 6678, column: 41, scope: !12114)
!12122 = !DILocation(line: 6678, column: 45, scope: !12114)
!12123 = !DILocation(line: 6678, column: 60, scope: !12114)
!12124 = !DILocation(line: 6678, column: 64, scope: !12114)
!12125 = !DILocation(line: 6678, column: 6, scope: !12114)
!12126 = !DILocation(line: 6679, column: 16, scope: !12114)
!12127 = !DILocation(line: 6679, column: 6, scope: !12114)
!12128 = !DILocation(line: 6680, column: 19, scope: !12114)
!12129 = !DILocation(line: 6680, column: 22, scope: !12114)
!12130 = !DILocation(line: 6680, column: 6, scope: !12114)
!12131 = !DILocation(line: 6681, column: 16, scope: !12114)
!12132 = !DILocation(line: 6681, column: 19, scope: !12114)
!12133 = !DILocation(line: 6681, column: 23, scope: !12114)
!12134 = !DILocation(line: 6681, column: 6, scope: !12114)
!12135 = !DILocation(line: 6682, column: 16, scope: !12114)
!12136 = !DILocation(line: 6682, column: 19, scope: !12114)
!12137 = !DILocation(line: 6682, column: 23, scope: !12114)
!12138 = !DILocation(line: 6682, column: 6, scope: !12114)
!12139 = !DILocation(line: 6684, column: 18, scope: !12114)
!12140 = !DILocation(line: 6684, column: 6, scope: !12114)
!12141 = !DILocation(line: 6685, column: 18, scope: !12114)
!12142 = !DILocation(line: 6685, column: 6, scope: !12114)
!12143 = !DILocation(line: 6686, column: 5, scope: !12114)
!12144 = !DILocation(line: 6676, column: 34, scope: !12108)
!12145 = !DILocation(line: 6676, column: 40, scope: !12108)
!12146 = !DILocation(line: 6676, column: 5, scope: !12108)
!12147 = distinct !{!12147, !12112, !12148}
!12148 = !DILocation(line: 6686, column: 5, scope: !12105)
!12149 = !DILocation(line: 6688, column: 4, scope: !12022)
!12150 = !DILocation(line: 6690, column: 4, scope: !12022)
!12151 = !DILocation(line: 6692, column: 4, scope: !12022)
!12152 = !DILocation(line: 6693, column: 18, scope: !12022)
!12153 = !DILocation(line: 6693, column: 23, scope: !12022)
!12154 = !DILocation(line: 6693, column: 35, scope: !12022)
!12155 = !DILocation(line: 6693, column: 38, scope: !12022)
!12156 = !DILocation(line: 6693, column: 43, scope: !12022)
!12157 = !DILocation(line: 6693, column: 59, scope: !12022)
!12158 = !DILocation(line: 6693, column: 17, scope: !12022)
!12159 = !DILocation(line: 6694, column: 17, scope: !12022)
!12160 = !DILocation(line: 6694, column: 26, scope: !12022)
!12161 = !DILocation(line: 6694, column: 42, scope: !12022)
!12162 = !DILocation(line: 6694, column: 51, scope: !12022)
!12163 = !DILocation(line: 6695, column: 17, scope: !12022)
!12164 = !DILocation(line: 6695, column: 26, scope: !12022)
!12165 = !DILocation(line: 6693, column: 4, scope: !12022)
!12166 = !DILocation(line: 6696, column: 4, scope: !12022)
!12167 = !DILocation(line: 6698, column: 4, scope: !12022)
!12168 = !DILocation(line: 6699, column: 4, scope: !12022)
!12169 = !DILocation(line: 6701, column: 4, scope: !12022)
!12170 = !DILocation(line: 6703, column: 8, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !12022, file: !3, line: 6703, column: 8)
!12172 = !DILocation(line: 6703, column: 12, scope: !12171)
!12173 = !DILocation(line: 6703, column: 15, scope: !12171)
!12174 = !DILocation(line: 6703, column: 20, scope: !12171)
!12175 = !DILocation(line: 6703, column: 8, scope: !12022)
!12176 = !DILocation(line: 6704, column: 5, scope: !12171)
!12177 = !DILocation(line: 6705, column: 3, scope: !12022)
!12178 = !DILocation(line: 6706, column: 2, scope: !12013)
!12179 = !DILocation(line: 6707, column: 1, scope: !12002)
!12180 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !4885, file: !4885, line: 309, type: !12181, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!12181 = !DISubroutineType(types: !12182)
!12182 = !{null, !1773, !3980, !3980}
!12183 = !DILocalVariable(name: "r", arg: 1, scope: !12180, file: !4885, line: 309, type: !1773)
!12184 = !DILocation(line: 309, column: 32, scope: !12180)
!12185 = !DILocalVariable(name: "a", arg: 2, scope: !12180, file: !4885, line: 309, type: !3980)
!12186 = !DILocation(line: 309, column: 50, scope: !12180)
!12187 = !DILocalVariable(name: "b", arg: 3, scope: !12180, file: !4885, line: 309, type: !3980)
!12188 = !DILocation(line: 309, column: 68, scope: !12180)
!12189 = !DILocation(line: 311, column: 9, scope: !12180)
!12190 = !DILocation(line: 311, column: 16, scope: !12180)
!12191 = !DILocation(line: 311, column: 14, scope: !12180)
!12192 = !DILocation(line: 311, column: 2, scope: !12180)
!12193 = !DILocation(line: 311, column: 7, scope: !12180)
!12194 = !DILocation(line: 312, column: 9, scope: !12180)
!12195 = !DILocation(line: 312, column: 16, scope: !12180)
!12196 = !DILocation(line: 312, column: 14, scope: !12180)
!12197 = !DILocation(line: 312, column: 2, scope: !12180)
!12198 = !DILocation(line: 312, column: 7, scope: !12180)
!12199 = !DILocation(line: 313, column: 9, scope: !12180)
!12200 = !DILocation(line: 313, column: 16, scope: !12180)
!12201 = !DILocation(line: 313, column: 14, scope: !12180)
!12202 = !DILocation(line: 313, column: 2, scope: !12180)
!12203 = !DILocation(line: 313, column: 7, scope: !12180)
!12204 = !DILocation(line: 314, column: 1, scope: !12180)
!12205 = distinct !DISubprogram(name: "interp_line_v3_v3v3v3", scope: !3, file: !3, line: 5131, type: !12206, scopeLine: 5132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!12206 = !DISubroutineType(types: !12207)
!12207 = !{null, !1773, !3980, !3980, !3980, !3981}
!12208 = !DILocalVariable(name: "p", arg: 1, scope: !12205, file: !3, line: 5131, type: !1773)
!12209 = !DILocation(line: 5131, column: 41, scope: !12205)
!12210 = !DILocalVariable(name: "v1", arg: 2, scope: !12205, file: !3, line: 5131, type: !3980)
!12211 = !DILocation(line: 5131, column: 59, scope: !12205)
!12212 = !DILocalVariable(name: "v2", arg: 3, scope: !12205, file: !3, line: 5131, type: !3980)
!12213 = !DILocation(line: 5131, column: 78, scope: !12205)
!12214 = !DILocalVariable(name: "v3", arg: 4, scope: !12205, file: !3, line: 5131, type: !3980)
!12215 = !DILocation(line: 5131, column: 97, scope: !12205)
!12216 = !DILocalVariable(name: "t", arg: 5, scope: !12205, file: !3, line: 5131, type: !3981)
!12217 = !DILocation(line: 5131, column: 116, scope: !12205)
!12218 = !DILocalVariable(name: "t_mid", scope: !12205, file: !3, line: 5133, type: !1727)
!12219 = !DILocation(line: 5133, column: 8, scope: !12205)
!12220 = !DILocalVariable(name: "t_delta", scope: !12205, file: !3, line: 5133, type: !1727)
!12221 = !DILocation(line: 5133, column: 15, scope: !12205)
!12222 = !DILocation(line: 5136, column: 31, scope: !12205)
!12223 = !DILocation(line: 5136, column: 35, scope: !12205)
!12224 = !DILocation(line: 5136, column: 39, scope: !12205)
!12225 = !DILocation(line: 5136, column: 10, scope: !12205)
!12226 = !DILocation(line: 5136, column: 8, scope: !12205)
!12227 = !DILocation(line: 5138, column: 12, scope: !12205)
!12228 = !DILocation(line: 5138, column: 16, scope: !12205)
!12229 = !DILocation(line: 5138, column: 14, scope: !12205)
!12230 = !DILocation(line: 5138, column: 10, scope: !12205)
!12231 = !DILocation(line: 5139, column: 12, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12205, file: !3, line: 5139, column: 6)
!12233 = !DILocation(line: 5139, column: 6, scope: !12232)
!12234 = !DILocation(line: 5139, column: 21, scope: !12232)
!12235 = !DILocation(line: 5139, column: 6, scope: !12205)
!12236 = !DILocation(line: 5140, column: 14, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12232, file: !3, line: 5139, column: 36)
!12238 = !DILocation(line: 5140, column: 17, scope: !12237)
!12239 = !DILocation(line: 5140, column: 3, scope: !12237)
!12240 = !DILocation(line: 5141, column: 2, scope: !12237)
!12241 = !DILocation(line: 5142, column: 11, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12232, file: !3, line: 5142, column: 11)
!12243 = !DILocation(line: 5142, column: 19, scope: !12242)
!12244 = !DILocation(line: 5142, column: 11, scope: !12232)
!12245 = !DILocation(line: 5143, column: 18, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12242, file: !3, line: 5142, column: 27)
!12247 = !DILocation(line: 5143, column: 21, scope: !12246)
!12248 = !DILocation(line: 5143, column: 25, scope: !12246)
!12249 = !DILocation(line: 5143, column: 29, scope: !12246)
!12250 = !DILocation(line: 5143, column: 33, scope: !12246)
!12251 = !DILocation(line: 5143, column: 31, scope: !12246)
!12252 = !DILocation(line: 5143, column: 3, scope: !12246)
!12253 = !DILocation(line: 5144, column: 2, scope: !12246)
!12254 = !DILocation(line: 5146, column: 18, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12242, file: !3, line: 5145, column: 7)
!12256 = !DILocation(line: 5146, column: 21, scope: !12255)
!12257 = !DILocation(line: 5146, column: 25, scope: !12255)
!12258 = !DILocation(line: 5146, column: 30, scope: !12255)
!12259 = !DILocation(line: 5146, column: 34, scope: !12255)
!12260 = !DILocation(line: 5146, column: 32, scope: !12255)
!12261 = !DILocation(line: 5146, column: 51, scope: !12255)
!12262 = !DILocation(line: 5146, column: 49, scope: !12255)
!12263 = !DILocation(line: 5146, column: 41, scope: !12255)
!12264 = !DILocation(line: 5146, column: 3, scope: !12255)
!12265 = !DILocation(line: 5148, column: 1, scope: !12205)
!12266 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !4885, file: !4885, line: 357, type: !12181, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!12267 = !DILocalVariable(name: "r", arg: 1, scope: !12266, file: !4885, line: 357, type: !1773)
!12268 = !DILocation(line: 357, column: 32, scope: !12266)
!12269 = !DILocalVariable(name: "a", arg: 2, scope: !12266, file: !4885, line: 357, type: !3980)
!12270 = !DILocation(line: 357, column: 50, scope: !12266)
!12271 = !DILocalVariable(name: "b", arg: 3, scope: !12266, file: !4885, line: 357, type: !3980)
!12272 = !DILocation(line: 357, column: 68, scope: !12266)
!12273 = !DILocation(line: 359, column: 9, scope: !12266)
!12274 = !DILocation(line: 359, column: 16, scope: !12266)
!12275 = !DILocation(line: 359, column: 14, scope: !12266)
!12276 = !DILocation(line: 359, column: 2, scope: !12266)
!12277 = !DILocation(line: 359, column: 7, scope: !12266)
!12278 = !DILocation(line: 360, column: 9, scope: !12266)
!12279 = !DILocation(line: 360, column: 16, scope: !12266)
!12280 = !DILocation(line: 360, column: 14, scope: !12266)
!12281 = !DILocation(line: 360, column: 2, scope: !12266)
!12282 = !DILocation(line: 360, column: 7, scope: !12266)
!12283 = !DILocation(line: 361, column: 9, scope: !12266)
!12284 = !DILocation(line: 361, column: 16, scope: !12266)
!12285 = !DILocation(line: 361, column: 14, scope: !12266)
!12286 = !DILocation(line: 361, column: 2, scope: !12266)
!12287 = !DILocation(line: 361, column: 7, scope: !12266)
!12288 = !DILocation(line: 362, column: 1, scope: !12266)
!12289 = distinct !DISubprogram(name: "mul_v3_fl", scope: !4885, file: !4885, line: 392, type: !12290, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!12290 = !DISubroutineType(types: !12291)
!12291 = !{null, !1773, !1727}
!12292 = !DILocalVariable(name: "r", arg: 1, scope: !12289, file: !4885, line: 392, type: !1773)
!12293 = !DILocation(line: 392, column: 30, scope: !12289)
!12294 = !DILocalVariable(name: "f", arg: 2, scope: !12289, file: !4885, line: 392, type: !1727)
!12295 = !DILocation(line: 392, column: 42, scope: !12289)
!12296 = !DILocation(line: 394, column: 10, scope: !12289)
!12297 = !DILocation(line: 394, column: 2, scope: !12289)
!12298 = !DILocation(line: 394, column: 7, scope: !12289)
!12299 = !DILocation(line: 395, column: 10, scope: !12289)
!12300 = !DILocation(line: 395, column: 2, scope: !12289)
!12301 = !DILocation(line: 395, column: 7, scope: !12289)
!12302 = !DILocation(line: 396, column: 10, scope: !12289)
!12303 = !DILocation(line: 396, column: 2, scope: !12289)
!12304 = !DILocation(line: 396, column: 7, scope: !12289)
!12305 = !DILocation(line: 397, column: 1, scope: !12289)
!12306 = distinct !DISubprogram(name: "negate_v3_v3", scope: !4885, file: !4885, line: 583, type: !5238, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!12307 = !DILocalVariable(name: "r", arg: 1, scope: !12306, file: !4885, line: 583, type: !1773)
!12308 = !DILocation(line: 583, column: 33, scope: !12306)
!12309 = !DILocalVariable(name: "a", arg: 2, scope: !12306, file: !4885, line: 583, type: !3980)
!12310 = !DILocation(line: 583, column: 51, scope: !12306)
!12311 = !DILocation(line: 585, column: 10, scope: !12306)
!12312 = !DILocation(line: 585, column: 9, scope: !12306)
!12313 = !DILocation(line: 585, column: 2, scope: !12306)
!12314 = !DILocation(line: 585, column: 7, scope: !12306)
!12315 = !DILocation(line: 586, column: 10, scope: !12306)
!12316 = !DILocation(line: 586, column: 9, scope: !12306)
!12317 = !DILocation(line: 586, column: 2, scope: !12306)
!12318 = !DILocation(line: 586, column: 7, scope: !12306)
!12319 = !DILocation(line: 587, column: 10, scope: !12306)
!12320 = !DILocation(line: 587, column: 9, scope: !12306)
!12321 = !DILocation(line: 587, column: 2, scope: !12306)
!12322 = !DILocation(line: 587, column: 7, scope: !12306)
!12323 = !DILocation(line: 588, column: 1, scope: !12306)
!12324 = distinct !DISubprogram(name: "add_v3_v3", scope: !4885, file: !4885, line: 302, type: !5238, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!12325 = !DILocalVariable(name: "r", arg: 1, scope: !12324, file: !4885, line: 302, type: !1773)
!12326 = !DILocation(line: 302, column: 30, scope: !12324)
!12327 = !DILocalVariable(name: "a", arg: 2, scope: !12324, file: !4885, line: 302, type: !3980)
!12328 = !DILocation(line: 302, column: 48, scope: !12324)
!12329 = !DILocation(line: 304, column: 10, scope: !12324)
!12330 = !DILocation(line: 304, column: 2, scope: !12324)
!12331 = !DILocation(line: 304, column: 7, scope: !12324)
!12332 = !DILocation(line: 305, column: 10, scope: !12324)
!12333 = !DILocation(line: 305, column: 2, scope: !12324)
!12334 = !DILocation(line: 305, column: 7, scope: !12324)
!12335 = !DILocation(line: 306, column: 10, scope: !12324)
!12336 = !DILocation(line: 306, column: 2, scope: !12324)
!12337 = !DILocation(line: 306, column: 7, scope: !12324)
!12338 = !DILocation(line: 307, column: 1, scope: !12324)
!12339 = distinct !DISubprogram(name: "drawAutoKeyWarning", scope: !3, file: !3, line: 1807, type: !12340, scopeLine: 1808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!12340 = !DISubroutineType(types: !12341)
!12341 = !{null, !3841, !8833}
!12342 = !DILocalVariable(name: "UNUSED_t", arg: 1, scope: !12339, file: !3, line: 1807, type: !3841)
!12343 = !DILocation(line: 1807, column: 43, scope: !12339)
!12344 = !DILocalVariable(name: "ar", arg: 2, scope: !12339, file: !3, line: 1807, type: !8833)
!12345 = !DILocation(line: 1807, column: 63, scope: !12339)
!12346 = !DILocalVariable(name: "rect", scope: !12339, file: !3, line: 1809, type: !1744)
!12347 = !DILocation(line: 1809, column: 7, scope: !12339)
!12348 = !DILocalVariable(name: "printable", scope: !12339, file: !3, line: 1810, type: !3434)
!12349 = !DILocation(line: 1810, column: 14, scope: !12339)
!12350 = !DILocalVariable(name: "printable_size", scope: !12339, file: !3, line: 1811, type: !1754)
!12351 = !DILocation(line: 1811, column: 13, scope: !12339)
!12352 = !DILocalVariable(name: "xco", scope: !12339, file: !3, line: 1812, type: !35)
!12353 = !DILocation(line: 1812, column: 6, scope: !12339)
!12354 = !DILocalVariable(name: "yco", scope: !12339, file: !3, line: 1812, type: !35)
!12355 = !DILocation(line: 1812, column: 11, scope: !12339)
!12356 = !DILocation(line: 1814, column: 25, scope: !12339)
!12357 = !DILocation(line: 1814, column: 2, scope: !12339)
!12358 = !DILocation(line: 1816, column: 31, scope: !12339)
!12359 = !DILocation(line: 1816, column: 67, scope: !12339)
!12360 = !DILocation(line: 1816, column: 87, scope: !12339)
!12361 = !DILocation(line: 1816, column: 2, scope: !12339)
!12362 = !DILocation(line: 1818, column: 14, scope: !12339)
!12363 = !DILocation(line: 1818, column: 23, scope: !12339)
!12364 = !DILocation(line: 1818, column: 21, scope: !12339)
!12365 = !DILocation(line: 1818, column: 19, scope: !12339)
!12366 = !DILocation(line: 1818, column: 43, scope: !12339)
!12367 = !DILocation(line: 1818, column: 38, scope: !12339)
!12368 = !DILocation(line: 1818, column: 36, scope: !12339)
!12369 = !DILocation(line: 1818, column: 6, scope: !12339)
!12370 = !DILocation(line: 1819, column: 14, scope: !12339)
!12371 = !DILocation(line: 1819, column: 23, scope: !12339)
!12372 = !DILocation(line: 1819, column: 21, scope: !12339)
!12373 = !DILocation(line: 1819, column: 19, scope: !12339)
!12374 = !DILocation(line: 1819, column: 6, scope: !12339)
!12375 = !DILocation(line: 1824, column: 2, scope: !12339)
!12376 = !DILocation(line: 1828, column: 25, scope: !12339)
!12377 = !DILocation(line: 1828, column: 30, scope: !12339)
!12378 = !DILocation(line: 1828, column: 41, scope: !12339)
!12379 = !DILocation(line: 1828, column: 2, scope: !12339)
!12380 = !DILocation(line: 1832, column: 2, scope: !12339)
!12381 = !DILocation(line: 1833, column: 2, scope: !12339)
!12382 = !DILocation(line: 1835, column: 11, scope: !12339)
!12383 = !DILocation(line: 1835, column: 9, scope: !12339)
!12384 = !DILocation(line: 1835, column: 6, scope: !12339)
!12385 = !DILocation(line: 1836, column: 14, scope: !12339)
!12386 = !DILocation(line: 1836, column: 9, scope: !12339)
!12387 = !DILocation(line: 1836, column: 32, scope: !12339)
!12388 = !DILocation(line: 1836, column: 6, scope: !12339)
!12389 = !DILocation(line: 1838, column: 15, scope: !12339)
!12390 = !DILocation(line: 1838, column: 20, scope: !12339)
!12391 = !DILocation(line: 1838, column: 2, scope: !12339)
!12392 = !DILocation(line: 1840, column: 2, scope: !12339)
!12393 = !DILocation(line: 1841, column: 1, scope: !12339)
!12394 = distinct !DISubprogram(name: "drawArrow", scope: !3, file: !3, line: 1570, type: !12395, scopeLine: 1571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!12395 = !DISubroutineType(types: !12396)
!12396 = !{null, !12397, !27, !27, !27}
!12397 = !DIDerivedType(tag: DW_TAG_typedef, name: "ArrowDirection", file: !3, line: 1569, baseType: !1520)
!12398 = !DILocalVariable(name: "d", arg: 1, scope: !12394, file: !3, line: 1570, type: !12397)
!12399 = !DILocation(line: 1570, column: 38, scope: !12394)
!12400 = !DILocalVariable(name: "offset", arg: 2, scope: !12394, file: !3, line: 1570, type: !27)
!12401 = !DILocation(line: 1570, column: 47, scope: !12394)
!12402 = !DILocalVariable(name: "length", arg: 3, scope: !12394, file: !3, line: 1570, type: !27)
!12403 = !DILocation(line: 1570, column: 61, scope: !12394)
!12404 = !DILocalVariable(name: "size", arg: 4, scope: !12394, file: !3, line: 1570, type: !27)
!12405 = !DILocation(line: 1570, column: 75, scope: !12394)
!12406 = !DILocation(line: 1572, column: 10, scope: !12394)
!12407 = !DILocation(line: 1572, column: 2, scope: !12394)
!12408 = !DILocation(line: 1574, column: 14, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12394, file: !3, line: 1572, column: 13)
!12410 = !DILocation(line: 1574, column: 13, scope: !12409)
!12411 = !DILocation(line: 1574, column: 11, scope: !12409)
!12412 = !DILocation(line: 1575, column: 14, scope: !12409)
!12413 = !DILocation(line: 1575, column: 13, scope: !12409)
!12414 = !DILocation(line: 1575, column: 11, scope: !12409)
!12415 = !DILocation(line: 1576, column: 12, scope: !12409)
!12416 = !DILocation(line: 1576, column: 11, scope: !12409)
!12417 = !DILocation(line: 1576, column: 9, scope: !12409)
!12418 = !DILocation(line: 1576, column: 4, scope: !12409)
!12419 = !DILocation(line: 1579, column: 4, scope: !12409)
!12420 = !DILocation(line: 1580, column: 15, scope: !12409)
!12421 = !DILocation(line: 1580, column: 4, scope: !12409)
!12422 = !DILocation(line: 1581, column: 15, scope: !12409)
!12423 = !DILocation(line: 1581, column: 24, scope: !12409)
!12424 = !DILocation(line: 1581, column: 22, scope: !12409)
!12425 = !DILocation(line: 1581, column: 4, scope: !12409)
!12426 = !DILocation(line: 1582, column: 15, scope: !12409)
!12427 = !DILocation(line: 1582, column: 24, scope: !12409)
!12428 = !DILocation(line: 1582, column: 22, scope: !12409)
!12429 = !DILocation(line: 1582, column: 4, scope: !12409)
!12430 = !DILocation(line: 1583, column: 15, scope: !12409)
!12431 = !DILocation(line: 1583, column: 24, scope: !12409)
!12432 = !DILocation(line: 1583, column: 22, scope: !12409)
!12433 = !DILocation(line: 1583, column: 33, scope: !12409)
!12434 = !DILocation(line: 1583, column: 31, scope: !12409)
!12435 = !DILocation(line: 1583, column: 40, scope: !12409)
!12436 = !DILocation(line: 1583, column: 39, scope: !12409)
!12437 = !DILocation(line: 1583, column: 4, scope: !12409)
!12438 = !DILocation(line: 1584, column: 15, scope: !12409)
!12439 = !DILocation(line: 1584, column: 24, scope: !12409)
!12440 = !DILocation(line: 1584, column: 22, scope: !12409)
!12441 = !DILocation(line: 1584, column: 4, scope: !12409)
!12442 = !DILocation(line: 1585, column: 15, scope: !12409)
!12443 = !DILocation(line: 1585, column: 24, scope: !12409)
!12444 = !DILocation(line: 1585, column: 22, scope: !12409)
!12445 = !DILocation(line: 1585, column: 33, scope: !12409)
!12446 = !DILocation(line: 1585, column: 31, scope: !12409)
!12447 = !DILocation(line: 1585, column: 40, scope: !12409)
!12448 = !DILocation(line: 1585, column: 4, scope: !12409)
!12449 = !DILocation(line: 1586, column: 4, scope: !12409)
!12450 = !DILocation(line: 1587, column: 4, scope: !12409)
!12451 = !DILocation(line: 1590, column: 14, scope: !12409)
!12452 = !DILocation(line: 1590, column: 13, scope: !12409)
!12453 = !DILocation(line: 1590, column: 11, scope: !12409)
!12454 = !DILocation(line: 1591, column: 14, scope: !12409)
!12455 = !DILocation(line: 1591, column: 13, scope: !12409)
!12456 = !DILocation(line: 1591, column: 11, scope: !12409)
!12457 = !DILocation(line: 1592, column: 12, scope: !12409)
!12458 = !DILocation(line: 1592, column: 11, scope: !12409)
!12459 = !DILocation(line: 1592, column: 9, scope: !12409)
!12460 = !DILocation(line: 1592, column: 4, scope: !12409)
!12461 = !DILocation(line: 1595, column: 4, scope: !12409)
!12462 = !DILocation(line: 1596, column: 18, scope: !12409)
!12463 = !DILocation(line: 1596, column: 4, scope: !12409)
!12464 = !DILocation(line: 1597, column: 18, scope: !12409)
!12465 = !DILocation(line: 1597, column: 27, scope: !12409)
!12466 = !DILocation(line: 1597, column: 25, scope: !12409)
!12467 = !DILocation(line: 1597, column: 4, scope: !12409)
!12468 = !DILocation(line: 1598, column: 18, scope: !12409)
!12469 = !DILocation(line: 1598, column: 27, scope: !12409)
!12470 = !DILocation(line: 1598, column: 25, scope: !12409)
!12471 = !DILocation(line: 1598, column: 4, scope: !12409)
!12472 = !DILocation(line: 1599, column: 16, scope: !12409)
!12473 = !DILocation(line: 1599, column: 15, scope: !12409)
!12474 = !DILocation(line: 1599, column: 22, scope: !12409)
!12475 = !DILocation(line: 1599, column: 31, scope: !12409)
!12476 = !DILocation(line: 1599, column: 29, scope: !12409)
!12477 = !DILocation(line: 1599, column: 40, scope: !12409)
!12478 = !DILocation(line: 1599, column: 38, scope: !12409)
!12479 = !DILocation(line: 1599, column: 4, scope: !12409)
!12480 = !DILocation(line: 1600, column: 18, scope: !12409)
!12481 = !DILocation(line: 1600, column: 27, scope: !12409)
!12482 = !DILocation(line: 1600, column: 25, scope: !12409)
!12483 = !DILocation(line: 1600, column: 4, scope: !12409)
!12484 = !DILocation(line: 1601, column: 15, scope: !12409)
!12485 = !DILocation(line: 1601, column: 21, scope: !12409)
!12486 = !DILocation(line: 1601, column: 30, scope: !12409)
!12487 = !DILocation(line: 1601, column: 28, scope: !12409)
!12488 = !DILocation(line: 1601, column: 39, scope: !12409)
!12489 = !DILocation(line: 1601, column: 37, scope: !12409)
!12490 = !DILocation(line: 1601, column: 4, scope: !12409)
!12491 = !DILocation(line: 1602, column: 4, scope: !12409)
!12492 = !DILocation(line: 1603, column: 4, scope: !12409)
!12493 = !DILocation(line: 1605, column: 1, scope: !12394)
!12494 = distinct !DISubprogram(name: "drawArc", scope: !3, file: !3, line: 1636, type: !12495, scopeLine: 1637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!12495 = !DISubroutineType(types: !12496)
!12496 = !{null, !1727, !1727, !1727, !35}
!12497 = !DILocalVariable(name: "size", arg: 1, scope: !12494, file: !3, line: 1636, type: !1727)
!12498 = !DILocation(line: 1636, column: 27, scope: !12494)
!12499 = !DILocalVariable(name: "angle_start", arg: 2, scope: !12494, file: !3, line: 1636, type: !1727)
!12500 = !DILocation(line: 1636, column: 39, scope: !12494)
!12501 = !DILocalVariable(name: "angle_end", arg: 3, scope: !12494, file: !3, line: 1636, type: !1727)
!12502 = !DILocation(line: 1636, column: 58, scope: !12494)
!12503 = !DILocalVariable(name: "segments", arg: 4, scope: !12494, file: !3, line: 1636, type: !35)
!12504 = !DILocation(line: 1636, column: 73, scope: !12494)
!12505 = !DILocalVariable(name: "delta", scope: !12494, file: !3, line: 1638, type: !1727)
!12506 = !DILocation(line: 1638, column: 8, scope: !12494)
!12507 = !DILocation(line: 1638, column: 17, scope: !12494)
!12508 = !DILocation(line: 1638, column: 29, scope: !12494)
!12509 = !DILocation(line: 1638, column: 27, scope: !12494)
!12510 = !DILocation(line: 1638, column: 44, scope: !12494)
!12511 = !DILocation(line: 1638, column: 42, scope: !12494)
!12512 = !DILocalVariable(name: "angle", scope: !12494, file: !3, line: 1639, type: !1727)
!12513 = !DILocation(line: 1639, column: 8, scope: !12494)
!12514 = !DILocalVariable(name: "a", scope: !12494, file: !3, line: 1640, type: !35)
!12515 = !DILocation(line: 1640, column: 6, scope: !12494)
!12516 = !DILocation(line: 1642, column: 2, scope: !12494)
!12517 = !DILocation(line: 1644, column: 15, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12494, file: !3, line: 1644, column: 2)
!12519 = !DILocation(line: 1644, column: 13, scope: !12518)
!12520 = !DILocation(line: 1644, column: 30, scope: !12518)
!12521 = !DILocation(line: 1644, column: 7, scope: !12518)
!12522 = !DILocation(line: 1644, column: 35, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12518, file: !3, line: 1644, column: 2)
!12524 = !DILocation(line: 1644, column: 39, scope: !12523)
!12525 = !DILocation(line: 1644, column: 37, scope: !12523)
!12526 = !DILocation(line: 1644, column: 2, scope: !12518)
!12527 = !DILocation(line: 1645, column: 19, scope: !12528)
!12528 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 1644, column: 70)
!12529 = !DILocation(line: 1645, column: 14, scope: !12528)
!12530 = !DILocation(line: 1645, column: 28, scope: !12528)
!12531 = !DILocation(line: 1645, column: 26, scope: !12528)
!12532 = !DILocation(line: 1645, column: 39, scope: !12528)
!12533 = !DILocation(line: 1645, column: 34, scope: !12528)
!12534 = !DILocation(line: 1645, column: 48, scope: !12528)
!12535 = !DILocation(line: 1645, column: 46, scope: !12528)
!12536 = !DILocation(line: 1645, column: 3, scope: !12528)
!12537 = !DILocation(line: 1646, column: 2, scope: !12528)
!12538 = !DILocation(line: 1644, column: 58, scope: !12523)
!12539 = !DILocation(line: 1644, column: 55, scope: !12523)
!12540 = !DILocation(line: 1644, column: 66, scope: !12523)
!12541 = !DILocation(line: 1644, column: 2, scope: !12523)
!12542 = distinct !{!12542, !12526, !12543}
!12543 = !DILocation(line: 1646, column: 2, scope: !12518)
!12544 = !DILocation(line: 1647, column: 18, scope: !12494)
!12545 = !DILocation(line: 1647, column: 13, scope: !12494)
!12546 = !DILocation(line: 1647, column: 31, scope: !12494)
!12547 = !DILocation(line: 1647, column: 29, scope: !12494)
!12548 = !DILocation(line: 1647, column: 42, scope: !12494)
!12549 = !DILocation(line: 1647, column: 37, scope: !12494)
!12550 = !DILocation(line: 1647, column: 55, scope: !12494)
!12551 = !DILocation(line: 1647, column: 53, scope: !12494)
!12552 = !DILocation(line: 1647, column: 2, scope: !12494)
!12553 = !DILocation(line: 1649, column: 2, scope: !12494)
!12554 = !DILocation(line: 1650, column: 1, scope: !12494)
!12555 = distinct !DISubprogram(name: "drawArrowHead", scope: !3, file: !3, line: 1607, type: !12556, scopeLine: 1608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!12556 = !DISubroutineType(types: !12557)
!12557 = !{null, !12397, !27}
!12558 = !DILocalVariable(name: "d", arg: 1, scope: !12555, file: !3, line: 1607, type: !12397)
!12559 = !DILocation(line: 1607, column: 42, scope: !12555)
!12560 = !DILocalVariable(name: "size", arg: 2, scope: !12555, file: !3, line: 1607, type: !27)
!12561 = !DILocation(line: 1607, column: 51, scope: !12555)
!12562 = !DILocation(line: 1609, column: 10, scope: !12555)
!12563 = !DILocation(line: 1609, column: 2, scope: !12555)
!12564 = !DILocation(line: 1611, column: 12, scope: !12565)
!12565 = distinct !DILexicalBlock(scope: !12555, file: !3, line: 1609, column: 13)
!12566 = !DILocation(line: 1611, column: 11, scope: !12565)
!12567 = !DILocation(line: 1611, column: 9, scope: !12565)
!12568 = !DILocation(line: 1611, column: 4, scope: !12565)
!12569 = !DILocation(line: 1614, column: 4, scope: !12565)
!12570 = !DILocation(line: 1615, column: 4, scope: !12565)
!12571 = !DILocation(line: 1616, column: 16, scope: !12565)
!12572 = !DILocation(line: 1616, column: 15, scope: !12565)
!12573 = !DILocation(line: 1616, column: 23, scope: !12565)
!12574 = !DILocation(line: 1616, column: 22, scope: !12565)
!12575 = !DILocation(line: 1616, column: 4, scope: !12565)
!12576 = !DILocation(line: 1617, column: 4, scope: !12565)
!12577 = !DILocation(line: 1618, column: 16, scope: !12565)
!12578 = !DILocation(line: 1618, column: 15, scope: !12565)
!12579 = !DILocation(line: 1618, column: 23, scope: !12565)
!12580 = !DILocation(line: 1618, column: 4, scope: !12565)
!12581 = !DILocation(line: 1619, column: 4, scope: !12565)
!12582 = !DILocation(line: 1620, column: 4, scope: !12565)
!12583 = !DILocation(line: 1623, column: 12, scope: !12565)
!12584 = !DILocation(line: 1623, column: 11, scope: !12565)
!12585 = !DILocation(line: 1623, column: 9, scope: !12565)
!12586 = !DILocation(line: 1623, column: 4, scope: !12565)
!12587 = !DILocation(line: 1626, column: 4, scope: !12565)
!12588 = !DILocation(line: 1627, column: 4, scope: !12565)
!12589 = !DILocation(line: 1628, column: 16, scope: !12565)
!12590 = !DILocation(line: 1628, column: 15, scope: !12565)
!12591 = !DILocation(line: 1628, column: 23, scope: !12565)
!12592 = !DILocation(line: 1628, column: 22, scope: !12565)
!12593 = !DILocation(line: 1628, column: 4, scope: !12565)
!12594 = !DILocation(line: 1629, column: 4, scope: !12565)
!12595 = !DILocation(line: 1630, column: 15, scope: !12565)
!12596 = !DILocation(line: 1630, column: 22, scope: !12565)
!12597 = !DILocation(line: 1630, column: 21, scope: !12565)
!12598 = !DILocation(line: 1630, column: 4, scope: !12565)
!12599 = !DILocation(line: 1631, column: 4, scope: !12565)
!12600 = !DILocation(line: 1632, column: 4, scope: !12565)
!12601 = !DILocation(line: 1634, column: 1, scope: !12555)
!12602 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !4885, file: !4885, line: 788, type: !12603, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!12603 = !DISubroutineType(types: !12604)
!12604 = !{!1727, !1773, !3980}
!12605 = !DILocalVariable(name: "r", arg: 1, scope: !12602, file: !4885, line: 788, type: !1773)
!12606 = !DILocation(line: 788, column: 37, scope: !12602)
!12607 = !DILocalVariable(name: "a", arg: 2, scope: !12602, file: !4885, line: 788, type: !3980)
!12608 = !DILocation(line: 788, column: 55, scope: !12602)
!12609 = !DILocalVariable(name: "d", scope: !12602, file: !4885, line: 790, type: !1727)
!12610 = !DILocation(line: 790, column: 8, scope: !12602)
!12611 = !DILocation(line: 790, column: 21, scope: !12602)
!12612 = !DILocation(line: 790, column: 24, scope: !12602)
!12613 = !DILocation(line: 790, column: 12, scope: !12602)
!12614 = !DILocation(line: 794, column: 6, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12602, file: !4885, line: 794, column: 6)
!12616 = !DILocation(line: 794, column: 8, scope: !12615)
!12617 = !DILocation(line: 794, column: 6, scope: !12602)
!12618 = !DILocation(line: 795, column: 13, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12615, file: !4885, line: 794, column: 20)
!12620 = !DILocation(line: 795, column: 7, scope: !12619)
!12621 = !DILocation(line: 795, column: 5, scope: !12619)
!12622 = !DILocation(line: 796, column: 15, scope: !12619)
!12623 = !DILocation(line: 796, column: 18, scope: !12619)
!12624 = !DILocation(line: 796, column: 28, scope: !12619)
!12625 = !DILocation(line: 796, column: 26, scope: !12619)
!12626 = !DILocation(line: 796, column: 3, scope: !12619)
!12627 = !DILocation(line: 797, column: 2, scope: !12619)
!12628 = !DILocation(line: 799, column: 11, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12615, file: !4885, line: 798, column: 7)
!12630 = !DILocation(line: 799, column: 3, scope: !12629)
!12631 = !DILocation(line: 800, column: 5, scope: !12629)
!12632 = !DILocation(line: 803, column: 9, scope: !12602)
!12633 = !DILocation(line: 803, column: 2, scope: !12602)
!12634 = distinct !DISubprogram(name: "dot_v3v3", scope: !4885, file: !4885, line: 619, type: !12635, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!12635 = !DISubroutineType(types: !12636)
!12636 = !{!1727, !3980, !3980}
!12637 = !DILocalVariable(name: "a", arg: 1, scope: !12634, file: !4885, line: 619, type: !3980)
!12638 = !DILocation(line: 619, column: 36, scope: !12634)
!12639 = !DILocalVariable(name: "b", arg: 2, scope: !12634, file: !4885, line: 619, type: !3980)
!12640 = !DILocation(line: 619, column: 54, scope: !12634)
!12641 = !DILocation(line: 621, column: 9, scope: !12634)
!12642 = !DILocation(line: 621, column: 16, scope: !12634)
!12643 = !DILocation(line: 621, column: 14, scope: !12634)
!12644 = !DILocation(line: 621, column: 23, scope: !12634)
!12645 = !DILocation(line: 621, column: 30, scope: !12634)
!12646 = !DILocation(line: 621, column: 28, scope: !12634)
!12647 = !DILocation(line: 621, column: 21, scope: !12634)
!12648 = !DILocation(line: 621, column: 37, scope: !12634)
!12649 = !DILocation(line: 621, column: 44, scope: !12634)
!12650 = !DILocation(line: 621, column: 42, scope: !12634)
!12651 = !DILocation(line: 621, column: 35, scope: !12634)
!12652 = !DILocation(line: 621, column: 2, scope: !12634)
!12653 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !4885, file: !4885, line: 399, type: !12654, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!12654 = !DISubroutineType(types: !12655)
!12655 = !{null, !1773, !3980, !1727}
!12656 = !DILocalVariable(name: "r", arg: 1, scope: !12653, file: !4885, line: 399, type: !1773)
!12657 = !DILocation(line: 399, column: 32, scope: !12653)
!12658 = !DILocalVariable(name: "a", arg: 2, scope: !12653, file: !4885, line: 399, type: !3980)
!12659 = !DILocation(line: 399, column: 50, scope: !12653)
!12660 = !DILocalVariable(name: "f", arg: 3, scope: !12653, file: !4885, line: 399, type: !1727)
!12661 = !DILocation(line: 399, column: 62, scope: !12653)
!12662 = !DILocation(line: 401, column: 9, scope: !12653)
!12663 = !DILocation(line: 401, column: 16, scope: !12653)
!12664 = !DILocation(line: 401, column: 14, scope: !12653)
!12665 = !DILocation(line: 401, column: 2, scope: !12653)
!12666 = !DILocation(line: 401, column: 7, scope: !12653)
!12667 = !DILocation(line: 402, column: 9, scope: !12653)
!12668 = !DILocation(line: 402, column: 16, scope: !12653)
!12669 = !DILocation(line: 402, column: 14, scope: !12653)
!12670 = !DILocation(line: 402, column: 2, scope: !12653)
!12671 = !DILocation(line: 402, column: 7, scope: !12653)
!12672 = !DILocation(line: 403, column: 9, scope: !12653)
!12673 = !DILocation(line: 403, column: 16, scope: !12653)
!12674 = !DILocation(line: 403, column: 14, scope: !12653)
!12675 = !DILocation(line: 403, column: 2, scope: !12653)
!12676 = !DILocation(line: 403, column: 7, scope: !12653)
!12677 = !DILocation(line: 404, column: 1, scope: !12653)
!12678 = distinct !DISubprogram(name: "Bend", scope: !3, file: !3, line: 2812, type: !12679, scopeLine: 2813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!12679 = !DISubroutineType(types: !12680)
!12680 = !{null, !3841, !3857}
!12681 = !DILocalVariable(name: "t", arg: 1, scope: !12678, file: !3, line: 2812, type: !3841)
!12682 = !DILocation(line: 2812, column: 29, scope: !12678)
!12683 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !12678, file: !3, line: 2812, type: !3857)
!12684 = !DILocation(line: 2812, column: 42, scope: !12678)
!12685 = !DILocalVariable(name: "td", scope: !12678, file: !3, line: 2814, type: !3868)
!12686 = !DILocation(line: 2814, column: 13, scope: !12678)
!12687 = !DILocation(line: 2814, column: 18, scope: !12678)
!12688 = !DILocation(line: 2814, column: 21, scope: !12678)
!12689 = !DILocalVariable(name: "vec", scope: !12678, file: !3, line: 2815, type: !1987)
!12690 = !DILocation(line: 2815, column: 8, scope: !12678)
!12691 = !DILocalVariable(name: "pivot", scope: !12678, file: !3, line: 2816, type: !1987)
!12692 = !DILocation(line: 2816, column: 8, scope: !12678)
!12693 = !DILocalVariable(name: "warp_end_radius", scope: !12678, file: !3, line: 2817, type: !1987)
!12694 = !DILocation(line: 2817, column: 8, scope: !12678)
!12695 = !DILocalVariable(name: "i", scope: !12678, file: !3, line: 2818, type: !35)
!12696 = !DILocation(line: 2818, column: 6, scope: !12678)
!12697 = !DILocalVariable(name: "str", scope: !12678, file: !3, line: 2819, type: !2366)
!12698 = !DILocation(line: 2819, column: 7, scope: !12678)
!12699 = !DILocalVariable(name: "data", scope: !12678, file: !3, line: 2820, type: !12700)
!12700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12701, size: 64)
!12701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9483)
!12702 = !DILocation(line: 2820, column: 31, scope: !12678)
!12703 = !DILocation(line: 2820, column: 38, scope: !12678)
!12704 = !DILocation(line: 2820, column: 41, scope: !12678)
!12705 = !DILocalVariable(name: "is_clamp", scope: !12678, file: !3, line: 2821, type: !12045)
!12706 = !DILocation(line: 2821, column: 13, scope: !12678)
!12707 = !DILocation(line: 2821, column: 25, scope: !12678)
!12708 = !DILocation(line: 2821, column: 28, scope: !12678)
!12709 = !DILocation(line: 2821, column: 33, scope: !12678)
!12710 = !DILocation(line: 2821, column: 52, scope: !12678)
!12711 = !DILocation(line: 2821, column: 24, scope: !12678)
!12712 = !DILocalVariable(name: "values", scope: !12678, file: !3, line: 2827, type: !12713)
!12713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12678, file: !3, line: 2824, size: 64, elements: !12714)
!12714 = !{!12715, !12720}
!12715 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12713, file: !3, line: 2825, baseType: !12716, size: 64)
!12716 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12713, file: !3, line: 2825, size: 64, elements: !12717)
!12717 = !{!12718, !12719}
!12718 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !12716, file: !3, line: 2825, baseType: !1727, size: 32)
!12719 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !12716, file: !3, line: 2825, baseType: !1727, size: 32, offset: 32)
!12720 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !12713, file: !3, line: 2826, baseType: !1754, size: 64)
!12721 = !DILocation(line: 2827, column: 4, scope: !12678)
!12722 = !DILocation(line: 2830, column: 20, scope: !12678)
!12723 = !DILocation(line: 2830, column: 13, scope: !12678)
!12724 = !DILocation(line: 2830, column: 28, scope: !12678)
!12725 = !DILocation(line: 2830, column: 31, scope: !12678)
!12726 = !DILocation(line: 2830, column: 2, scope: !12678)
!12727 = !DILocation(line: 2837, column: 6, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12678, file: !3, line: 2837, column: 6)
!12729 = !DILocation(line: 2837, column: 9, scope: !12728)
!12730 = !DILocation(line: 2837, column: 15, scope: !12728)
!12731 = !DILocation(line: 2837, column: 20, scope: !12728)
!12732 = !DILocation(line: 2837, column: 6, scope: !12678)
!12733 = !DILocalVariable(name: "radius_snap", scope: !12734, file: !3, line: 2838, type: !3981)
!12734 = distinct !DILexicalBlock(scope: !12728, file: !3, line: 2837, column: 48)
!12735 = !DILocation(line: 2838, column: 15, scope: !12734)
!12736 = !DILocalVariable(name: "snap_hack", scope: !12734, file: !3, line: 2839, type: !3981)
!12737 = !DILocation(line: 2839, column: 15, scope: !12734)
!12738 = !DILocation(line: 2839, column: 28, scope: !12734)
!12739 = !DILocation(line: 2839, column: 31, scope: !12734)
!12740 = !DILocation(line: 2839, column: 41, scope: !12734)
!12741 = !DILocation(line: 2839, column: 47, scope: !12734)
!12742 = !DILocation(line: 2839, column: 39, scope: !12734)
!12743 = !DILocation(line: 2839, column: 63, scope: !12734)
!12744 = !DILocation(line: 2840, column: 24, scope: !12734)
!12745 = !DILocation(line: 2840, column: 10, scope: !12734)
!12746 = !DILocation(line: 2840, column: 15, scope: !12734)
!12747 = !DILocation(line: 2840, column: 21, scope: !12734)
!12748 = !DILocation(line: 2841, column: 21, scope: !12734)
!12749 = !DILocation(line: 2841, column: 31, scope: !12734)
!12750 = !DILocation(line: 2841, column: 24, scope: !12734)
!12751 = !DILocation(line: 2841, column: 3, scope: !12734)
!12752 = !DILocation(line: 2842, column: 24, scope: !12734)
!12753 = !DILocation(line: 2842, column: 10, scope: !12734)
!12754 = !DILocation(line: 2842, column: 15, scope: !12734)
!12755 = !DILocation(line: 2842, column: 21, scope: !12734)
!12756 = !DILocation(line: 2843, column: 2, scope: !12734)
!12757 = !DILocation(line: 2846, column: 21, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12678, file: !3, line: 2846, column: 6)
!12759 = !DILocation(line: 2846, column: 24, scope: !12758)
!12760 = !DILocation(line: 2846, column: 36, scope: !12758)
!12761 = !DILocation(line: 2846, column: 29, scope: !12758)
!12762 = !DILocation(line: 2846, column: 6, scope: !12758)
!12763 = !DILocation(line: 2846, column: 6, scope: !12678)
!12764 = !DILocation(line: 2847, column: 30, scope: !12765)
!12765 = distinct !DILexicalBlock(scope: !12758, file: !3, line: 2846, column: 45)
!12766 = !DILocation(line: 2847, column: 35, scope: !12765)
!12767 = !DILocation(line: 2847, column: 43, scope: !12765)
!12768 = !DILocation(line: 2847, column: 49, scope: !12765)
!12769 = !DILocation(line: 2847, column: 41, scope: !12765)
!12770 = !DILocation(line: 2847, column: 10, scope: !12765)
!12771 = !DILocation(line: 2847, column: 15, scope: !12765)
!12772 = !DILocation(line: 2847, column: 21, scope: !12765)
!12773 = !DILocation(line: 2848, column: 2, scope: !12765)
!12774 = !DILocation(line: 2851, column: 19, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12678, file: !3, line: 2851, column: 6)
!12776 = !DILocation(line: 2851, column: 22, scope: !12775)
!12777 = !DILocation(line: 2851, column: 6, scope: !12775)
!12778 = !DILocation(line: 2851, column: 6, scope: !12678)
!12779 = !DILocalVariable(name: "c", scope: !12780, file: !3, line: 2852, type: !3060)
!12780 = distinct !DILexicalBlock(scope: !12775, file: !3, line: 2851, column: 28)
!12781 = !DILocation(line: 2852, column: 8, scope: !12780)
!12782 = !DILocation(line: 2854, column: 20, scope: !12780)
!12783 = !DILocation(line: 2854, column: 23, scope: !12780)
!12784 = !DILocation(line: 2854, column: 29, scope: !12780)
!12785 = !DILocation(line: 2854, column: 33, scope: !12780)
!12786 = !DILocation(line: 2854, column: 36, scope: !12780)
!12787 = !DILocation(line: 2854, column: 43, scope: !12780)
!12788 = !DILocation(line: 2854, column: 3, scope: !12780)
!12789 = !DILocation(line: 2856, column: 16, scope: !12780)
!12790 = !DILocation(line: 2857, column: 17, scope: !12780)
!12791 = !DILocation(line: 2857, column: 24, scope: !12780)
!12792 = !DILocation(line: 2858, column: 34, scope: !12780)
!12793 = !DILocation(line: 2858, column: 16, scope: !12780)
!12794 = !DILocation(line: 2856, column: 3, scope: !12780)
!12795 = !DILocation(line: 2859, column: 2, scope: !12780)
!12796 = !DILocation(line: 2862, column: 16, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12775, file: !3, line: 2860, column: 7)
!12798 = !DILocation(line: 2863, column: 16, scope: !12797)
!12799 = !DILocation(line: 2863, column: 52, scope: !12797)
!12800 = !DILocation(line: 2863, column: 57, scope: !12797)
!12801 = !DILocation(line: 2863, column: 65, scope: !12797)
!12802 = !DILocation(line: 2863, column: 71, scope: !12797)
!12803 = !DILocation(line: 2863, column: 63, scope: !12797)
!12804 = !DILocation(line: 2863, column: 45, scope: !12797)
!12805 = !DILocation(line: 2864, column: 34, scope: !12797)
!12806 = !DILocation(line: 2864, column: 16, scope: !12797)
!12807 = !DILocation(line: 2862, column: 3, scope: !12797)
!12808 = !DILocation(line: 2867, column: 13, scope: !12678)
!12809 = !DILocation(line: 2867, column: 16, scope: !12678)
!12810 = !DILocation(line: 2867, column: 31, scope: !12678)
!12811 = !DILocation(line: 2867, column: 24, scope: !12678)
!12812 = !DILocation(line: 2867, column: 2, scope: !12678)
!12813 = !DILocation(line: 2869, column: 9, scope: !12678)
!12814 = !DILocation(line: 2869, column: 14, scope: !12678)
!12815 = !DILocation(line: 2869, column: 20, scope: !12678)
!12816 = !DILocation(line: 2870, column: 23, scope: !12678)
!12817 = !DILocation(line: 2870, column: 29, scope: !12678)
!12818 = !DILocation(line: 2870, column: 9, scope: !12678)
!12819 = !DILocation(line: 2870, column: 14, scope: !12678)
!12820 = !DILocation(line: 2870, column: 20, scope: !12678)
!12821 = !DILocation(line: 2873, column: 13, scope: !12678)
!12822 = !DILocation(line: 2873, column: 30, scope: !12678)
!12823 = !DILocation(line: 2873, column: 36, scope: !12678)
!12824 = !DILocation(line: 2873, column: 2, scope: !12678)
!12825 = !DILocation(line: 2874, column: 22, scope: !12678)
!12826 = !DILocation(line: 2874, column: 39, scope: !12678)
!12827 = !DILocation(line: 2874, column: 45, scope: !12678)
!12828 = !DILocation(line: 2874, column: 62, scope: !12678)
!12829 = !DILocation(line: 2874, column: 67, scope: !12678)
!12830 = !DILocation(line: 2874, column: 2, scope: !12678)
!12831 = !DILocation(line: 2878, column: 13, scope: !12678)
!12832 = !DILocation(line: 2878, column: 20, scope: !12678)
!12833 = !DILocation(line: 2878, column: 26, scope: !12678)
!12834 = !DILocation(line: 2878, column: 2, scope: !12678)
!12835 = !DILocation(line: 2879, column: 13, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12678, file: !3, line: 2879, column: 6)
!12837 = !DILocation(line: 2879, column: 18, scope: !12836)
!12838 = !DILocation(line: 2879, column: 24, scope: !12836)
!12839 = !DILocation(line: 2879, column: 6, scope: !12678)
!12840 = !DILocation(line: 2880, column: 16, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12836, file: !3, line: 2879, column: 32)
!12842 = !DILocation(line: 2880, column: 23, scope: !12841)
!12843 = !DILocation(line: 2880, column: 29, scope: !12841)
!12844 = !DILocation(line: 2880, column: 47, scope: !12841)
!12845 = !DILocation(line: 2880, column: 52, scope: !12841)
!12846 = !DILocation(line: 2880, column: 39, scope: !12841)
!12847 = !DILocation(line: 2880, column: 103, scope: !12841)
!12848 = !DILocation(line: 2880, column: 108, scope: !12841)
!12849 = !DILocation(line: 2880, column: 94, scope: !12841)
!12850 = !DILocation(line: 2880, column: 60, scope: !12841)
!12851 = !DILocation(line: 2880, column: 58, scope: !12841)
!12852 = !DILocation(line: 2880, column: 3, scope: !12841)
!12853 = !DILocation(line: 2881, column: 2, scope: !12841)
!12854 = !DILocation(line: 2883, column: 16, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12836, file: !3, line: 2882, column: 7)
!12856 = !DILocation(line: 2883, column: 23, scope: !12855)
!12857 = !DILocation(line: 2883, column: 29, scope: !12855)
!12858 = !DILocation(line: 2883, column: 47, scope: !12855)
!12859 = !DILocation(line: 2883, column: 52, scope: !12855)
!12860 = !DILocation(line: 2883, column: 103, scope: !12855)
!12861 = !DILocation(line: 2883, column: 108, scope: !12855)
!12862 = !DILocation(line: 2883, column: 94, scope: !12855)
!12863 = !DILocation(line: 2883, column: 60, scope: !12855)
!12864 = !DILocation(line: 2883, column: 58, scope: !12855)
!12865 = !DILocation(line: 2883, column: 3, scope: !12855)
!12866 = !DILocation(line: 2886, column: 9, scope: !12867)
!12867 = distinct !DILexicalBlock(scope: !12678, file: !3, line: 2886, column: 2)
!12868 = !DILocation(line: 2886, column: 7, scope: !12867)
!12869 = !DILocation(line: 2886, column: 14, scope: !12870)
!12870 = distinct !DILexicalBlock(scope: !12867, file: !3, line: 2886, column: 2)
!12871 = !DILocation(line: 2886, column: 18, scope: !12870)
!12872 = !DILocation(line: 2886, column: 21, scope: !12870)
!12873 = !DILocation(line: 2886, column: 16, scope: !12870)
!12874 = !DILocation(line: 2886, column: 2, scope: !12867)
!12875 = !DILocalVariable(name: "mat", scope: !12876, file: !3, line: 2887, type: !3881)
!12876 = distinct !DILexicalBlock(scope: !12870, file: !3, line: 2886, column: 39)
!12877 = !DILocation(line: 2887, column: 9, scope: !12876)
!12878 = !DILocalVariable(name: "delta", scope: !12876, file: !3, line: 2888, type: !1987)
!12879 = !DILocation(line: 2888, column: 9, scope: !12876)
!12880 = !DILocalVariable(name: "fac", scope: !12876, file: !3, line: 2889, type: !1727)
!12881 = !DILocation(line: 2889, column: 9, scope: !12876)
!12882 = !DILocalVariable(name: "fac_scaled", scope: !12876, file: !3, line: 2889, type: !1727)
!12883 = !DILocation(line: 2889, column: 14, scope: !12876)
!12884 = !DILocation(line: 2891, column: 7, scope: !12885)
!12885 = distinct !DILexicalBlock(scope: !12876, file: !3, line: 2891, column: 7)
!12886 = !DILocation(line: 2891, column: 11, scope: !12885)
!12887 = !DILocation(line: 2891, column: 16, scope: !12885)
!12888 = !DILocation(line: 2891, column: 7, scope: !12876)
!12889 = !DILocation(line: 2892, column: 4, scope: !12885)
!12890 = !DILocation(line: 2894, column: 7, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12876, file: !3, line: 2894, column: 7)
!12892 = !DILocation(line: 2894, column: 11, scope: !12891)
!12893 = !DILocation(line: 2894, column: 16, scope: !12891)
!12894 = !DILocation(line: 2894, column: 7, scope: !12876)
!12895 = !DILocation(line: 2895, column: 4, scope: !12891)
!12896 = !DILocation(line: 2897, column: 7, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12876, file: !3, line: 2897, column: 7)
!12898 = !DILocation(line: 2897, column: 7, scope: !12876)
!12899 = !DILocation(line: 2898, column: 15, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12897, file: !3, line: 2897, column: 44)
!12901 = !DILocation(line: 2898, column: 19, scope: !12900)
!12902 = !DILocation(line: 2898, column: 24, scope: !12900)
!12903 = !DILocation(line: 2898, column: 28, scope: !12900)
!12904 = !DILocation(line: 2898, column: 4, scope: !12900)
!12905 = !DILocation(line: 2899, column: 4, scope: !12900)
!12906 = !DILocation(line: 2902, column: 14, scope: !12876)
!12907 = !DILocation(line: 2902, column: 19, scope: !12876)
!12908 = !DILocation(line: 2902, column: 23, scope: !12876)
!12909 = !DILocation(line: 2902, column: 3, scope: !12876)
!12910 = !DILocation(line: 2903, column: 13, scope: !12876)
!12911 = !DILocation(line: 2903, column: 17, scope: !12876)
!12912 = !DILocation(line: 2903, column: 22, scope: !12876)
!12913 = !DILocation(line: 2903, column: 3, scope: !12876)
!12914 = !DILocation(line: 2905, column: 30, scope: !12876)
!12915 = !DILocation(line: 2905, column: 35, scope: !12876)
!12916 = !DILocation(line: 2905, column: 41, scope: !12876)
!12917 = !DILocation(line: 2905, column: 51, scope: !12876)
!12918 = !DILocation(line: 2905, column: 9, scope: !12876)
!12919 = !DILocation(line: 2905, column: 7, scope: !12876)
!12920 = !DILocation(line: 2906, column: 7, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12876, file: !3, line: 2906, column: 7)
!12922 = !DILocation(line: 2906, column: 7, scope: !12876)
!12923 = !DILocation(line: 2907, column: 4, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12925, file: !3, line: 2907, column: 4)
!12925 = distinct !DILexicalBlock(scope: !12926, file: !3, line: 2907, column: 4)
!12926 = distinct !DILexicalBlock(scope: !12921, file: !3, line: 2906, column: 17)
!12927 = !DILocation(line: 2907, column: 4, scope: !12925)
!12928 = !DILocation(line: 2907, column: 4, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12924, file: !3, line: 2907, column: 4)
!12930 = !DILocation(line: 2908, column: 3, scope: !12926)
!12931 = !DILocation(line: 2910, column: 16, scope: !12876)
!12932 = !DILocation(line: 2910, column: 22, scope: !12876)
!12933 = !DILocation(line: 2910, column: 26, scope: !12876)
!12934 = !DILocation(line: 2910, column: 20, scope: !12876)
!12935 = !DILocation(line: 2910, column: 14, scope: !12876)
!12936 = !DILocation(line: 2911, column: 33, scope: !12876)
!12937 = !DILocation(line: 2911, column: 38, scope: !12876)
!12938 = !DILocation(line: 2911, column: 44, scope: !12876)
!12939 = !DILocation(line: 2911, column: 61, scope: !12876)
!12940 = !DILocation(line: 2911, column: 66, scope: !12876)
!12941 = !DILocation(line: 2911, column: 74, scope: !12876)
!12942 = !DILocation(line: 2911, column: 72, scope: !12876)
!12943 = !DILocation(line: 2911, column: 3, scope: !12876)
!12944 = !DILocation(line: 2912, column: 18, scope: !12876)
!12945 = !DILocation(line: 2912, column: 25, scope: !12876)
!12946 = !DILocation(line: 2912, column: 31, scope: !12876)
!12947 = !DILocation(line: 2912, column: 41, scope: !12876)
!12948 = !DILocation(line: 2912, column: 58, scope: !12876)
!12949 = !DILocation(line: 2912, column: 3, scope: !12876)
!12950 = !DILocation(line: 2913, column: 13, scope: !12876)
!12951 = !DILocation(line: 2913, column: 20, scope: !12876)
!12952 = !DILocation(line: 2913, column: 26, scope: !12876)
!12953 = !DILocation(line: 2913, column: 3, scope: !12876)
!12954 = !DILocation(line: 2916, column: 13, scope: !12876)
!12955 = !DILocation(line: 2916, column: 18, scope: !12876)
!12956 = !DILocation(line: 2916, column: 3, scope: !12876)
!12957 = !DILocation(line: 2918, column: 13, scope: !12876)
!12958 = !DILocation(line: 2918, column: 18, scope: !12876)
!12959 = !DILocation(line: 2918, column: 3, scope: !12876)
!12960 = !DILocation(line: 2919, column: 13, scope: !12876)
!12961 = !DILocation(line: 2919, column: 18, scope: !12876)
!12962 = !DILocation(line: 2919, column: 3, scope: !12876)
!12963 = !DILocation(line: 2920, column: 13, scope: !12876)
!12964 = !DILocation(line: 2920, column: 18, scope: !12876)
!12965 = !DILocation(line: 2920, column: 3, scope: !12876)
!12966 = !DILocation(line: 2922, column: 13, scope: !12876)
!12967 = !DILocation(line: 2922, column: 17, scope: !12876)
!12968 = !DILocation(line: 2922, column: 23, scope: !12876)
!12969 = !DILocation(line: 2922, column: 3, scope: !12876)
!12970 = !DILocation(line: 2923, column: 14, scope: !12876)
!12971 = !DILocation(line: 2923, column: 18, scope: !12876)
!12972 = !DILocation(line: 2923, column: 23, scope: !12876)
!12973 = !DILocation(line: 2923, column: 3, scope: !12876)
!12974 = !DILocation(line: 2924, column: 2, scope: !12876)
!12975 = !DILocation(line: 2886, column: 29, scope: !12870)
!12976 = !DILocation(line: 2886, column: 35, scope: !12870)
!12977 = !DILocation(line: 2886, column: 2, scope: !12870)
!12978 = distinct !{!12978, !12874, !12979}
!12979 = !DILocation(line: 2924, column: 2, scope: !12867)
!12980 = !DILocation(line: 2926, column: 13, scope: !12678)
!12981 = !DILocation(line: 2926, column: 2, scope: !12678)
!12982 = !DILocation(line: 2928, column: 22, scope: !12678)
!12983 = !DILocation(line: 2928, column: 25, scope: !12678)
!12984 = !DILocation(line: 2928, column: 29, scope: !12678)
!12985 = !DILocation(line: 2928, column: 2, scope: !12678)
!12986 = !DILocation(line: 2929, column: 1, scope: !12678)
!12987 = distinct !DISubprogram(name: "handleEventBend", scope: !3, file: !3, line: 2801, type: !12988, scopeLine: 2802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!12988 = !DISubroutineType(types: !12989)
!12989 = !{!3863, !3841, !5655}
!12990 = !DILocalVariable(name: "UNUSED_t", arg: 1, scope: !12987, file: !3, line: 2801, type: !3841)
!12991 = !DILocation(line: 2801, column: 47, scope: !12987)
!12992 = !DILocalVariable(name: "event", arg: 2, scope: !12987, file: !3, line: 2801, type: !5655)
!12993 = !DILocation(line: 2801, column: 73, scope: !12987)
!12994 = !DILocalVariable(name: "status", scope: !12987, file: !3, line: 2803, type: !3863)
!12995 = !DILocation(line: 2803, column: 14, scope: !12987)
!12996 = !DILocation(line: 2805, column: 6, scope: !12997)
!12997 = distinct !DILexicalBlock(scope: !12987, file: !3, line: 2805, column: 6)
!12998 = !DILocation(line: 2805, column: 13, scope: !12997)
!12999 = !DILocation(line: 2805, column: 18, scope: !12997)
!13000 = !DILocation(line: 2805, column: 33, scope: !12997)
!13001 = !DILocation(line: 2805, column: 36, scope: !12997)
!13002 = !DILocation(line: 2805, column: 43, scope: !12997)
!13003 = !DILocation(line: 2805, column: 47, scope: !12997)
!13004 = !DILocation(line: 2805, column: 6, scope: !12987)
!13005 = !DILocation(line: 2806, column: 10, scope: !13006)
!13006 = distinct !DILexicalBlock(scope: !12997, file: !3, line: 2805, column: 60)
!13007 = !DILocation(line: 2807, column: 2, scope: !13006)
!13008 = !DILocation(line: 2809, column: 9, scope: !12987)
!13009 = !DILocation(line: 2809, column: 2, scope: !12987)
!13010 = distinct !DISubprogram(name: "postInputRotation", scope: !3, file: !3, line: 3580, type: !5356, scopeLine: 3581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!13011 = !DILocalVariable(name: "t", arg: 1, scope: !13010, file: !3, line: 3580, type: !3841)
!13012 = !DILocation(line: 3580, column: 42, scope: !13010)
!13013 = !DILocalVariable(name: "values", arg: 2, scope: !13010, file: !3, line: 3580, type: !1773)
!13014 = !DILocation(line: 3580, column: 51, scope: !13010)
!13015 = !DILocation(line: 3582, column: 7, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !13010, file: !3, line: 3582, column: 6)
!13017 = !DILocation(line: 3582, column: 10, scope: !13016)
!13018 = !DILocation(line: 3582, column: 14, scope: !13016)
!13019 = !DILocation(line: 3582, column: 19, scope: !13016)
!13020 = !DILocation(line: 3582, column: 32, scope: !13016)
!13021 = !DILocation(line: 3582, column: 35, scope: !13016)
!13022 = !DILocation(line: 3582, column: 38, scope: !13016)
!13023 = !DILocation(line: 3582, column: 42, scope: !13016)
!13024 = !DILocation(line: 3582, column: 6, scope: !13010)
!13025 = !DILocation(line: 3583, column: 3, scope: !13026)
!13026 = distinct !DILexicalBlock(scope: !13016, file: !3, line: 3582, column: 52)
!13027 = !DILocation(line: 3583, column: 6, scope: !13026)
!13028 = !DILocation(line: 3583, column: 10, scope: !13026)
!13029 = !DILocation(line: 3583, column: 19, scope: !13026)
!13030 = !DILocation(line: 3583, column: 28, scope: !13026)
!13031 = !DILocation(line: 3583, column: 31, scope: !13026)
!13032 = !DILocation(line: 3583, column: 37, scope: !13026)
!13033 = !DILocation(line: 3584, column: 2, scope: !13026)
!13034 = !DILocation(line: 3585, column: 1, scope: !13010)
!13035 = distinct !DISubprogram(name: "copy_v3_fl", scope: !4885, file: !4885, line: 85, type: !12290, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!13036 = !DILocalVariable(name: "r", arg: 1, scope: !13035, file: !4885, line: 85, type: !1773)
!13037 = !DILocation(line: 85, column: 31, scope: !13035)
!13038 = !DILocalVariable(name: "f", arg: 2, scope: !13035, file: !4885, line: 85, type: !1727)
!13039 = !DILocation(line: 85, column: 43, scope: !13035)
!13040 = !DILocation(line: 87, column: 9, scope: !13035)
!13041 = !DILocation(line: 87, column: 2, scope: !13035)
!13042 = !DILocation(line: 87, column: 7, scope: !13035)
!13043 = !DILocation(line: 88, column: 9, scope: !13035)
!13044 = !DILocation(line: 88, column: 2, scope: !13035)
!13045 = !DILocation(line: 88, column: 7, scope: !13035)
!13046 = !DILocation(line: 89, column: 9, scope: !13035)
!13047 = !DILocation(line: 89, column: 2, scope: !13035)
!13048 = !DILocation(line: 89, column: 7, scope: !13035)
!13049 = !DILocation(line: 90, column: 1, scope: !13035)
!13050 = distinct !DISubprogram(name: "sub_v3_v3", scope: !4885, file: !4885, line: 350, type: !5238, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!13051 = !DILocalVariable(name: "r", arg: 1, scope: !13050, file: !4885, line: 350, type: !1773)
!13052 = !DILocation(line: 350, column: 30, scope: !13050)
!13053 = !DILocalVariable(name: "a", arg: 2, scope: !13050, file: !4885, line: 350, type: !3980)
!13054 = !DILocation(line: 350, column: 48, scope: !13050)
!13055 = !DILocation(line: 352, column: 10, scope: !13050)
!13056 = !DILocation(line: 352, column: 2, scope: !13050)
!13057 = !DILocation(line: 352, column: 7, scope: !13050)
!13058 = !DILocation(line: 353, column: 10, scope: !13050)
!13059 = !DILocation(line: 353, column: 2, scope: !13050)
!13060 = !DILocation(line: 353, column: 7, scope: !13050)
!13061 = !DILocation(line: 354, column: 10, scope: !13050)
!13062 = !DILocation(line: 354, column: 2, scope: !13050)
!13063 = !DILocation(line: 354, column: 7, scope: !13050)
!13064 = !DILocation(line: 355, column: 1, scope: !13050)
!13065 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !4885, file: !4885, line: 634, type: !12181, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!13066 = !DILocalVariable(name: "r", arg: 1, scope: !13065, file: !4885, line: 634, type: !1773)
!13067 = !DILocation(line: 634, column: 34, scope: !13065)
!13068 = !DILocalVariable(name: "a", arg: 2, scope: !13065, file: !4885, line: 634, type: !3980)
!13069 = !DILocation(line: 634, column: 52, scope: !13065)
!13070 = !DILocalVariable(name: "b", arg: 3, scope: !13065, file: !4885, line: 634, type: !3980)
!13071 = !DILocation(line: 634, column: 70, scope: !13065)
!13072 = !DILocation(line: 637, column: 9, scope: !13065)
!13073 = !DILocation(line: 637, column: 16, scope: !13065)
!13074 = !DILocation(line: 637, column: 14, scope: !13065)
!13075 = !DILocation(line: 637, column: 23, scope: !13065)
!13076 = !DILocation(line: 637, column: 30, scope: !13065)
!13077 = !DILocation(line: 637, column: 28, scope: !13065)
!13078 = !DILocation(line: 637, column: 21, scope: !13065)
!13079 = !DILocation(line: 637, column: 2, scope: !13065)
!13080 = !DILocation(line: 637, column: 7, scope: !13065)
!13081 = !DILocation(line: 638, column: 9, scope: !13065)
!13082 = !DILocation(line: 638, column: 16, scope: !13065)
!13083 = !DILocation(line: 638, column: 14, scope: !13065)
!13084 = !DILocation(line: 638, column: 23, scope: !13065)
!13085 = !DILocation(line: 638, column: 30, scope: !13065)
!13086 = !DILocation(line: 638, column: 28, scope: !13065)
!13087 = !DILocation(line: 638, column: 21, scope: !13065)
!13088 = !DILocation(line: 638, column: 2, scope: !13065)
!13089 = !DILocation(line: 638, column: 7, scope: !13065)
!13090 = !DILocation(line: 639, column: 9, scope: !13065)
!13091 = !DILocation(line: 639, column: 16, scope: !13065)
!13092 = !DILocation(line: 639, column: 14, scope: !13065)
!13093 = !DILocation(line: 639, column: 23, scope: !13065)
!13094 = !DILocation(line: 639, column: 30, scope: !13065)
!13095 = !DILocation(line: 639, column: 28, scope: !13065)
!13096 = !DILocation(line: 639, column: 21, scope: !13065)
!13097 = !DILocation(line: 639, column: 2, scope: !13065)
!13098 = !DILocation(line: 639, column: 7, scope: !13065)
!13099 = !DILocation(line: 640, column: 1, scope: !13065)
!13100 = distinct !DISubprogram(name: "len_v3v3", scope: !4885, file: !4885, line: 759, type: !12635, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!13101 = !DILocalVariable(name: "a", arg: 1, scope: !13100, file: !4885, line: 759, type: !3980)
!13102 = !DILocation(line: 759, column: 36, scope: !13100)
!13103 = !DILocalVariable(name: "b", arg: 2, scope: !13100, file: !4885, line: 759, type: !3980)
!13104 = !DILocation(line: 759, column: 54, scope: !13100)
!13105 = !DILocalVariable(name: "d", scope: !13100, file: !4885, line: 761, type: !1987)
!13106 = !DILocation(line: 761, column: 8, scope: !13100)
!13107 = !DILocation(line: 763, column: 14, scope: !13100)
!13108 = !DILocation(line: 763, column: 17, scope: !13100)
!13109 = !DILocation(line: 763, column: 20, scope: !13100)
!13110 = !DILocation(line: 763, column: 2, scope: !13100)
!13111 = !DILocation(line: 764, column: 16, scope: !13100)
!13112 = !DILocation(line: 764, column: 9, scope: !13100)
!13113 = !DILocation(line: 764, column: 2, scope: !13100)
!13114 = distinct !DISubprogram(name: "madd_v3_v3fl", scope: !4885, file: !4885, line: 507, type: !12654, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!13115 = !DILocalVariable(name: "r", arg: 1, scope: !13114, file: !4885, line: 507, type: !1773)
!13116 = !DILocation(line: 507, column: 33, scope: !13114)
!13117 = !DILocalVariable(name: "a", arg: 2, scope: !13114, file: !4885, line: 507, type: !3980)
!13118 = !DILocation(line: 507, column: 51, scope: !13114)
!13119 = !DILocalVariable(name: "f", arg: 3, scope: !13114, file: !4885, line: 507, type: !1727)
!13120 = !DILocation(line: 507, column: 63, scope: !13114)
!13121 = !DILocation(line: 509, column: 10, scope: !13114)
!13122 = !DILocation(line: 509, column: 17, scope: !13114)
!13123 = !DILocation(line: 509, column: 15, scope: !13114)
!13124 = !DILocation(line: 509, column: 2, scope: !13114)
!13125 = !DILocation(line: 509, column: 7, scope: !13114)
!13126 = !DILocation(line: 510, column: 10, scope: !13114)
!13127 = !DILocation(line: 510, column: 17, scope: !13114)
!13128 = !DILocation(line: 510, column: 15, scope: !13114)
!13129 = !DILocation(line: 510, column: 2, scope: !13114)
!13130 = !DILocation(line: 510, column: 7, scope: !13114)
!13131 = !DILocation(line: 511, column: 10, scope: !13114)
!13132 = !DILocation(line: 511, column: 17, scope: !13114)
!13133 = !DILocation(line: 511, column: 15, scope: !13114)
!13134 = !DILocation(line: 511, column: 2, scope: !13114)
!13135 = !DILocation(line: 511, column: 7, scope: !13114)
!13136 = !DILocation(line: 512, column: 1, scope: !13114)
!13137 = distinct !DISubprogram(name: "shell_angle_to_dist", scope: !13138, file: !13138, line: 237, type: !13139, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!13138 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_geom_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!13139 = !DISubroutineType(types: !13140)
!13140 = !{!1727, !3981}
!13141 = !DILocalVariable(name: "angle", arg: 1, scope: !13137, file: !13138, line: 237, type: !3981)
!13142 = !DILocation(line: 237, column: 47, scope: !13137)
!13143 = !DILocation(line: 239, column: 10, scope: !13137)
!13144 = !DILocation(line: 239, column: 9, scope: !13137)
!13145 = !DILocation(line: 239, column: 69, scope: !13137)
!13146 = !DILocation(line: 239, column: 64, scope: !13137)
!13147 = !DILocation(line: 239, column: 62, scope: !13137)
!13148 = !DILocation(line: 239, column: 51, scope: !13137)
!13149 = !DILocation(line: 239, column: 2, scope: !13137)
!13150 = distinct !DISubprogram(name: "len_v3", scope: !4885, file: !4885, line: 714, type: !13151, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!13151 = !DISubroutineType(types: !13152)
!13152 = !{!1727, !3980}
!13153 = !DILocalVariable(name: "a", arg: 1, scope: !13150, file: !4885, line: 714, type: !3980)
!13154 = !DILocation(line: 714, column: 34, scope: !13150)
!13155 = !DILocation(line: 716, column: 24, scope: !13150)
!13156 = !DILocation(line: 716, column: 27, scope: !13150)
!13157 = !DILocation(line: 716, column: 15, scope: !13150)
!13158 = !DILocation(line: 716, column: 9, scope: !13150)
!13159 = !DILocation(line: 716, column: 2, scope: !13150)
!13160 = distinct !DISubprogram(name: "applyShear", scope: !3, file: !3, line: 3000, type: !12679, scopeLine: 3001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!13161 = !DILocalVariable(name: "t", arg: 1, scope: !13160, file: !3, line: 3000, type: !3841)
!13162 = !DILocation(line: 3000, column: 35, scope: !13160)
!13163 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !13160, file: !3, line: 3000, type: !3857)
!13164 = !DILocation(line: 3000, column: 48, scope: !13160)
!13165 = !DILocalVariable(name: "td", scope: !13160, file: !3, line: 3002, type: !3868)
!13166 = !DILocation(line: 3002, column: 13, scope: !13160)
!13167 = !DILocation(line: 3002, column: 18, scope: !13160)
!13168 = !DILocation(line: 3002, column: 21, scope: !13160)
!13169 = !DILocalVariable(name: "vec", scope: !13160, file: !3, line: 3003, type: !1987)
!13170 = !DILocation(line: 3003, column: 8, scope: !13160)
!13171 = !DILocalVariable(name: "smat", scope: !13160, file: !3, line: 3004, type: !3881)
!13172 = !DILocation(line: 3004, column: 8, scope: !13160)
!13173 = !DILocalVariable(name: "tmat", scope: !13160, file: !3, line: 3004, type: !3881)
!13174 = !DILocation(line: 3004, column: 20, scope: !13160)
!13175 = !DILocalVariable(name: "totmat", scope: !13160, file: !3, line: 3004, type: !3881)
!13176 = !DILocation(line: 3004, column: 32, scope: !13160)
!13177 = !DILocalVariable(name: "persmat", scope: !13160, file: !3, line: 3004, type: !3881)
!13178 = !DILocation(line: 3004, column: 46, scope: !13160)
!13179 = !DILocalVariable(name: "persinv", scope: !13160, file: !3, line: 3004, type: !3881)
!13180 = !DILocation(line: 3004, column: 61, scope: !13160)
!13181 = !DILocalVariable(name: "value", scope: !13160, file: !3, line: 3005, type: !1727)
!13182 = !DILocation(line: 3005, column: 8, scope: !13160)
!13183 = !DILocalVariable(name: "i", scope: !13160, file: !3, line: 3006, type: !35)
!13184 = !DILocation(line: 3006, column: 6, scope: !13160)
!13185 = !DILocalVariable(name: "str", scope: !13160, file: !3, line: 3007, type: !2366)
!13186 = !DILocation(line: 3007, column: 7, scope: !13160)
!13187 = !DILocation(line: 3009, column: 13, scope: !13160)
!13188 = !DILocation(line: 3009, column: 22, scope: !13160)
!13189 = !DILocation(line: 3009, column: 25, scope: !13160)
!13190 = !DILocation(line: 3009, column: 2, scope: !13160)
!13191 = !DILocation(line: 3010, column: 15, scope: !13160)
!13192 = !DILocation(line: 3010, column: 24, scope: !13160)
!13193 = !DILocation(line: 3010, column: 2, scope: !13160)
!13194 = !DILocation(line: 3012, column: 10, scope: !13160)
!13195 = !DILocation(line: 3012, column: 13, scope: !13160)
!13196 = !DILocation(line: 3012, column: 8, scope: !13160)
!13197 = !DILocation(line: 3014, column: 20, scope: !13160)
!13198 = !DILocation(line: 3014, column: 2, scope: !13160)
!13199 = !DILocation(line: 3016, column: 17, scope: !13160)
!13200 = !DILocation(line: 3016, column: 20, scope: !13160)
!13201 = !DILocation(line: 3016, column: 2, scope: !13160)
!13202 = !DILocation(line: 3019, column: 19, scope: !13203)
!13203 = distinct !DILexicalBlock(scope: !13160, file: !3, line: 3019, column: 6)
!13204 = !DILocation(line: 3019, column: 22, scope: !13203)
!13205 = !DILocation(line: 3019, column: 6, scope: !13203)
!13206 = !DILocation(line: 3019, column: 6, scope: !13160)
!13207 = !DILocalVariable(name: "c", scope: !13208, file: !3, line: 3020, type: !22)
!13208 = distinct !DILexicalBlock(scope: !13203, file: !3, line: 3019, column: 28)
!13209 = !DILocation(line: 3020, column: 8, scope: !13208)
!13210 = !DILocation(line: 3022, column: 20, scope: !13208)
!13211 = !DILocation(line: 3022, column: 23, scope: !13208)
!13212 = !DILocation(line: 3022, column: 29, scope: !13208)
!13213 = !DILocation(line: 3022, column: 33, scope: !13208)
!13214 = !DILocation(line: 3022, column: 36, scope: !13208)
!13215 = !DILocation(line: 3022, column: 43, scope: !13208)
!13216 = !DILocation(line: 3022, column: 3, scope: !13208)
!13217 = !DILocation(line: 3024, column: 16, scope: !13208)
!13218 = !DILocation(line: 3024, column: 59, scope: !13208)
!13219 = !DILocation(line: 3024, column: 62, scope: !13208)
!13220 = !DILocation(line: 3024, column: 65, scope: !13208)
!13221 = !DILocation(line: 3024, column: 3, scope: !13208)
!13222 = !DILocation(line: 3025, column: 2, scope: !13208)
!13223 = !DILocation(line: 3028, column: 16, scope: !13224)
!13224 = distinct !DILexicalBlock(scope: !13203, file: !3, line: 3026, column: 7)
!13225 = !DILocation(line: 3028, column: 94, scope: !13224)
!13226 = !DILocation(line: 3028, column: 101, scope: !13224)
!13227 = !DILocation(line: 3028, column: 104, scope: !13224)
!13228 = !DILocation(line: 3028, column: 3, scope: !13224)
!13229 = !DILocation(line: 3031, column: 17, scope: !13160)
!13230 = !DILocation(line: 3031, column: 2, scope: !13160)
!13231 = !DILocation(line: 3031, column: 5, scope: !13160)
!13232 = !DILocation(line: 3031, column: 15, scope: !13160)
!13233 = !DILocation(line: 3033, column: 10, scope: !13160)
!13234 = !DILocation(line: 3033, column: 2, scope: !13160)
!13235 = !DILocation(line: 3036, column: 6, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13160, file: !3, line: 3036, column: 6)
!13237 = !DILocation(line: 3036, column: 9, scope: !13236)
!13238 = !DILocation(line: 3036, column: 20, scope: !13236)
!13239 = !DILocation(line: 3036, column: 6, scope: !13160)
!13240 = !DILocation(line: 3037, column: 16, scope: !13236)
!13241 = !DILocation(line: 3037, column: 3, scope: !13236)
!13242 = !DILocation(line: 3037, column: 14, scope: !13236)
!13243 = !DILocation(line: 3039, column: 16, scope: !13236)
!13244 = !DILocation(line: 3039, column: 3, scope: !13236)
!13245 = !DILocation(line: 3039, column: 14, scope: !13236)
!13246 = !DILocation(line: 3041, column: 14, scope: !13160)
!13247 = !DILocation(line: 3041, column: 20, scope: !13160)
!13248 = !DILocation(line: 3041, column: 26, scope: !13160)
!13249 = !DILocation(line: 3041, column: 2, scope: !13160)
!13250 = !DILocation(line: 3042, column: 14, scope: !13160)
!13251 = !DILocation(line: 3042, column: 22, scope: !13160)
!13252 = !DILocation(line: 3042, column: 31, scope: !13160)
!13253 = !DILocation(line: 3042, column: 2, scope: !13160)
!13254 = !DILocation(line: 3044, column: 9, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13160, file: !3, line: 3044, column: 2)
!13256 = !DILocation(line: 3044, column: 7, scope: !13255)
!13257 = !DILocation(line: 3044, column: 14, scope: !13258)
!13258 = distinct !DILexicalBlock(scope: !13255, file: !3, line: 3044, column: 2)
!13259 = !DILocation(line: 3044, column: 18, scope: !13258)
!13260 = !DILocation(line: 3044, column: 21, scope: !13258)
!13261 = !DILocation(line: 3044, column: 16, scope: !13258)
!13262 = !DILocation(line: 3044, column: 2, scope: !13255)
!13263 = !DILocation(line: 3045, column: 7, scope: !13264)
!13264 = distinct !DILexicalBlock(scope: !13265, file: !3, line: 3045, column: 7)
!13265 = distinct !DILexicalBlock(scope: !13258, file: !3, line: 3044, column: 39)
!13266 = !DILocation(line: 3045, column: 11, scope: !13264)
!13267 = !DILocation(line: 3045, column: 16, scope: !13264)
!13268 = !DILocation(line: 3045, column: 7, scope: !13265)
!13269 = !DILocation(line: 3046, column: 4, scope: !13264)
!13270 = !DILocation(line: 3048, column: 7, scope: !13271)
!13271 = distinct !DILexicalBlock(scope: !13265, file: !3, line: 3048, column: 7)
!13272 = !DILocation(line: 3048, column: 11, scope: !13271)
!13273 = !DILocation(line: 3048, column: 16, scope: !13271)
!13274 = !DILocation(line: 3048, column: 7, scope: !13265)
!13275 = !DILocation(line: 3049, column: 4, scope: !13271)
!13276 = !DILocation(line: 3051, column: 7, scope: !13277)
!13277 = distinct !DILexicalBlock(scope: !13265, file: !3, line: 3051, column: 7)
!13278 = !DILocation(line: 3051, column: 10, scope: !13277)
!13279 = !DILocation(line: 3051, column: 7, scope: !13265)
!13280 = !DILocalVariable(name: "mat3", scope: !13281, file: !3, line: 3052, type: !3881)
!13281 = distinct !DILexicalBlock(scope: !13277, file: !3, line: 3051, column: 18)
!13282 = !DILocation(line: 3052, column: 10, scope: !13281)
!13283 = !DILocation(line: 3053, column: 16, scope: !13281)
!13284 = !DILocation(line: 3053, column: 22, scope: !13281)
!13285 = !DILocation(line: 3053, column: 30, scope: !13281)
!13286 = !DILocation(line: 3053, column: 34, scope: !13281)
!13287 = !DILocation(line: 3053, column: 4, scope: !13281)
!13288 = !DILocation(line: 3054, column: 16, scope: !13281)
!13289 = !DILocation(line: 3054, column: 22, scope: !13281)
!13290 = !DILocation(line: 3054, column: 26, scope: !13281)
!13291 = !DILocation(line: 3054, column: 32, scope: !13281)
!13292 = !DILocation(line: 3054, column: 4, scope: !13281)
!13293 = !DILocation(line: 3055, column: 3, scope: !13281)
!13294 = !DILocation(line: 3057, column: 15, scope: !13295)
!13295 = distinct !DILexicalBlock(scope: !13277, file: !3, line: 3056, column: 8)
!13296 = !DILocation(line: 3057, column: 21, scope: !13295)
!13297 = !DILocation(line: 3057, column: 4, scope: !13295)
!13298 = !DILocation(line: 3059, column: 15, scope: !13265)
!13299 = !DILocation(line: 3059, column: 20, scope: !13265)
!13300 = !DILocation(line: 3059, column: 24, scope: !13265)
!13301 = !DILocation(line: 3059, column: 32, scope: !13265)
!13302 = !DILocation(line: 3059, column: 35, scope: !13265)
!13303 = !DILocation(line: 3059, column: 3, scope: !13265)
!13304 = !DILocation(line: 3061, column: 13, scope: !13265)
!13305 = !DILocation(line: 3061, column: 19, scope: !13265)
!13306 = !DILocation(line: 3061, column: 3, scope: !13265)
!13307 = !DILocation(line: 3063, column: 13, scope: !13265)
!13308 = !DILocation(line: 3063, column: 18, scope: !13265)
!13309 = !DILocation(line: 3063, column: 21, scope: !13265)
!13310 = !DILocation(line: 3063, column: 3, scope: !13265)
!13311 = !DILocation(line: 3064, column: 13, scope: !13265)
!13312 = !DILocation(line: 3064, column: 18, scope: !13265)
!13313 = !DILocation(line: 3064, column: 22, scope: !13265)
!13314 = !DILocation(line: 3064, column: 3, scope: !13265)
!13315 = !DILocation(line: 3066, column: 13, scope: !13265)
!13316 = !DILocation(line: 3066, column: 18, scope: !13265)
!13317 = !DILocation(line: 3066, column: 22, scope: !13265)
!13318 = !DILocation(line: 3066, column: 3, scope: !13265)
!13319 = !DILocation(line: 3068, column: 15, scope: !13265)
!13320 = !DILocation(line: 3068, column: 19, scope: !13265)
!13321 = !DILocation(line: 3068, column: 24, scope: !13265)
!13322 = !DILocation(line: 3068, column: 28, scope: !13265)
!13323 = !DILocation(line: 3068, column: 34, scope: !13265)
!13324 = !DILocation(line: 3068, column: 3, scope: !13265)
!13325 = !DILocation(line: 3069, column: 2, scope: !13265)
!13326 = !DILocation(line: 3044, column: 29, scope: !13258)
!13327 = !DILocation(line: 3044, column: 35, scope: !13258)
!13328 = !DILocation(line: 3044, column: 2, scope: !13258)
!13329 = distinct !{!13329, !13262, !13330}
!13330 = !DILocation(line: 3069, column: 2, scope: !13255)
!13331 = !DILocation(line: 3071, column: 13, scope: !13160)
!13332 = !DILocation(line: 3071, column: 2, scope: !13160)
!13333 = !DILocation(line: 3073, column: 22, scope: !13160)
!13334 = !DILocation(line: 3073, column: 25, scope: !13160)
!13335 = !DILocation(line: 3073, column: 29, scope: !13160)
!13336 = !DILocation(line: 3073, column: 2, scope: !13160)
!13337 = !DILocation(line: 3074, column: 1, scope: !13160)
!13338 = distinct !DISubprogram(name: "handleEventShear", scope: !3, file: !3, line: 2966, type: !12988, scopeLine: 2967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!13339 = !DILocalVariable(name: "t", arg: 1, scope: !13338, file: !3, line: 2966, type: !3841)
!13340 = !DILocation(line: 2966, column: 48, scope: !13338)
!13341 = !DILocalVariable(name: "event", arg: 2, scope: !13338, file: !3, line: 2966, type: !5655)
!13342 = !DILocation(line: 2966, column: 66, scope: !13338)
!13343 = !DILocalVariable(name: "status", scope: !13338, file: !3, line: 2968, type: !3863)
!13344 = !DILocation(line: 2968, column: 14, scope: !13338)
!13345 = !DILocation(line: 2970, column: 6, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13338, file: !3, line: 2970, column: 6)
!13347 = !DILocation(line: 2970, column: 13, scope: !13346)
!13348 = !DILocation(line: 2970, column: 18, scope: !13346)
!13349 = !DILocation(line: 2970, column: 33, scope: !13346)
!13350 = !DILocation(line: 2970, column: 36, scope: !13346)
!13351 = !DILocation(line: 2970, column: 43, scope: !13346)
!13352 = !DILocation(line: 2970, column: 47, scope: !13346)
!13353 = !DILocation(line: 2970, column: 6, scope: !13338)
!13354 = !DILocation(line: 2972, column: 7, scope: !13355)
!13355 = distinct !DILexicalBlock(scope: !13356, file: !3, line: 2972, column: 7)
!13356 = distinct !DILexicalBlock(scope: !13346, file: !3, line: 2970, column: 60)
!13357 = !DILocation(line: 2972, column: 10, scope: !13355)
!13358 = !DILocation(line: 2972, column: 21, scope: !13355)
!13359 = !DILocation(line: 2972, column: 7, scope: !13356)
!13360 = !DILocation(line: 2973, column: 23, scope: !13361)
!13361 = distinct !DILexicalBlock(scope: !13355, file: !3, line: 2972, column: 30)
!13362 = !DILocation(line: 2973, column: 27, scope: !13361)
!13363 = !DILocation(line: 2973, column: 30, scope: !13361)
!13364 = !DILocation(line: 2973, column: 4, scope: !13361)
!13365 = !DILocation(line: 2974, column: 4, scope: !13361)
!13366 = !DILocation(line: 2974, column: 7, scope: !13361)
!13367 = !DILocation(line: 2974, column: 18, scope: !13361)
!13368 = !DILocation(line: 2975, column: 3, scope: !13361)
!13369 = !DILocation(line: 2977, column: 23, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13355, file: !3, line: 2976, column: 8)
!13371 = !DILocation(line: 2977, column: 27, scope: !13370)
!13372 = !DILocation(line: 2977, column: 30, scope: !13370)
!13373 = !DILocation(line: 2977, column: 4, scope: !13370)
!13374 = !DILocation(line: 2978, column: 4, scope: !13370)
!13375 = !DILocation(line: 2978, column: 7, scope: !13370)
!13376 = !DILocation(line: 2978, column: 18, scope: !13370)
!13377 = !DILocation(line: 2981, column: 10, scope: !13356)
!13378 = !DILocation(line: 2982, column: 2, scope: !13356)
!13379 = !DILocation(line: 2983, column: 11, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13346, file: !3, line: 2983, column: 11)
!13381 = !DILocation(line: 2983, column: 18, scope: !13380)
!13382 = !DILocation(line: 2983, column: 23, scope: !13380)
!13383 = !DILocation(line: 2983, column: 31, scope: !13380)
!13384 = !DILocation(line: 2983, column: 34, scope: !13380)
!13385 = !DILocation(line: 2983, column: 41, scope: !13380)
!13386 = !DILocation(line: 2983, column: 45, scope: !13380)
!13387 = !DILocation(line: 2983, column: 11, scope: !13346)
!13388 = !DILocation(line: 2984, column: 22, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13380, file: !3, line: 2983, column: 58)
!13390 = !DILocation(line: 2984, column: 26, scope: !13389)
!13391 = !DILocation(line: 2984, column: 29, scope: !13389)
!13392 = !DILocation(line: 2984, column: 3, scope: !13389)
!13393 = !DILocation(line: 2985, column: 3, scope: !13389)
!13394 = !DILocation(line: 2985, column: 6, scope: !13389)
!13395 = !DILocation(line: 2985, column: 17, scope: !13389)
!13396 = !DILocation(line: 2987, column: 10, scope: !13389)
!13397 = !DILocation(line: 2988, column: 2, scope: !13389)
!13398 = !DILocation(line: 2989, column: 11, scope: !13399)
!13399 = distinct !DILexicalBlock(scope: !13380, file: !3, line: 2989, column: 11)
!13400 = !DILocation(line: 2989, column: 18, scope: !13399)
!13401 = !DILocation(line: 2989, column: 23, scope: !13399)
!13402 = !DILocation(line: 2989, column: 31, scope: !13399)
!13403 = !DILocation(line: 2989, column: 34, scope: !13399)
!13404 = !DILocation(line: 2989, column: 41, scope: !13399)
!13405 = !DILocation(line: 2989, column: 45, scope: !13399)
!13406 = !DILocation(line: 2989, column: 11, scope: !13380)
!13407 = !DILocation(line: 2990, column: 22, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13399, file: !3, line: 2989, column: 58)
!13409 = !DILocation(line: 2990, column: 26, scope: !13408)
!13410 = !DILocation(line: 2990, column: 29, scope: !13408)
!13411 = !DILocation(line: 2990, column: 3, scope: !13408)
!13412 = !DILocation(line: 2991, column: 3, scope: !13408)
!13413 = !DILocation(line: 2991, column: 6, scope: !13408)
!13414 = !DILocation(line: 2991, column: 17, scope: !13408)
!13415 = !DILocation(line: 2993, column: 10, scope: !13408)
!13416 = !DILocation(line: 2994, column: 2, scope: !13408)
!13417 = !DILocation(line: 2996, column: 9, scope: !13338)
!13418 = !DILocation(line: 2996, column: 2, scope: !13338)
!13419 = distinct !DISubprogram(name: "postInputShear", scope: !3, file: !3, line: 2939, type: !5356, scopeLine: 2940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!13420 = !DILocalVariable(name: "UNUSED_t", arg: 1, scope: !13419, file: !3, line: 2939, type: !3841)
!13421 = !DILocation(line: 2939, column: 39, scope: !13419)
!13422 = !DILocalVariable(name: "values", arg: 2, scope: !13419, file: !3, line: 2939, type: !1773)
!13423 = !DILocation(line: 2939, column: 56, scope: !13419)
!13424 = !DILocation(line: 2941, column: 12, scope: !13419)
!13425 = !DILocation(line: 2941, column: 2, scope: !13419)
!13426 = !DILocation(line: 2942, column: 1, scope: !13419)
!13427 = distinct !DISubprogram(name: "applyResize", scope: !3, file: !3, line: 3294, type: !12679, scopeLine: 3295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!13428 = !DILocalVariable(name: "t", arg: 1, scope: !13427, file: !3, line: 3294, type: !3841)
!13429 = !DILocation(line: 3294, column: 36, scope: !13427)
!13430 = !DILocalVariable(name: "mval", arg: 2, scope: !13427, file: !3, line: 3294, type: !3857)
!13431 = !DILocation(line: 3294, column: 49, scope: !13427)
!13432 = !DILocalVariable(name: "td", scope: !13427, file: !3, line: 3296, type: !3868)
!13433 = !DILocation(line: 3296, column: 13, scope: !13427)
!13434 = !DILocalVariable(name: "size", scope: !13427, file: !3, line: 3297, type: !1987)
!13435 = !DILocation(line: 3297, column: 8, scope: !13427)
!13436 = !DILocalVariable(name: "mat", scope: !13427, file: !3, line: 3297, type: !3881)
!13437 = !DILocation(line: 3297, column: 17, scope: !13427)
!13438 = !DILocalVariable(name: "ratio", scope: !13427, file: !3, line: 3298, type: !1727)
!13439 = !DILocation(line: 3298, column: 8, scope: !13427)
!13440 = !DILocalVariable(name: "i", scope: !13427, file: !3, line: 3299, type: !35)
!13441 = !DILocation(line: 3299, column: 6, scope: !13427)
!13442 = !DILocalVariable(name: "str", scope: !13427, file: !3, line: 3300, type: !2366)
!13443 = !DILocation(line: 3300, column: 7, scope: !13427)
!13444 = !DILocation(line: 3303, column: 7, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13427, file: !3, line: 3303, column: 6)
!13446 = !DILocation(line: 3303, column: 10, scope: !13445)
!13447 = !DILocation(line: 3303, column: 15, scope: !13445)
!13448 = !DILocation(line: 3303, column: 37, scope: !13445)
!13449 = !DILocation(line: 3303, column: 40, scope: !13445)
!13450 = !DILocation(line: 3303, column: 43, scope: !13445)
!13451 = !DILocation(line: 3303, column: 47, scope: !13445)
!13452 = !DILocation(line: 3303, column: 52, scope: !13445)
!13453 = !DILocation(line: 3303, column: 6, scope: !13427)
!13454 = !DILocation(line: 3304, column: 20, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13445, file: !3, line: 3303, column: 58)
!13456 = !DILocation(line: 3304, column: 23, scope: !13455)
!13457 = !DILocation(line: 3304, column: 34, scope: !13455)
!13458 = !DILocation(line: 3304, column: 32, scope: !13455)
!13459 = !DILocation(line: 3304, column: 46, scope: !13455)
!13460 = !DILocation(line: 3304, column: 49, scope: !13455)
!13461 = !DILocation(line: 3304, column: 60, scope: !13455)
!13462 = !DILocation(line: 3304, column: 58, scope: !13455)
!13463 = !DILocation(line: 3304, column: 43, scope: !13455)
!13464 = !DILocation(line: 3304, column: 18, scope: !13455)
!13465 = !DILocation(line: 3304, column: 70, scope: !13455)
!13466 = !DILocation(line: 3304, column: 16, scope: !13455)
!13467 = !DILocation(line: 3304, column: 9, scope: !13455)
!13468 = !DILocation(line: 3305, column: 2, scope: !13455)
!13469 = !DILocation(line: 3307, column: 11, scope: !13470)
!13470 = distinct !DILexicalBlock(scope: !13445, file: !3, line: 3306, column: 7)
!13471 = !DILocation(line: 3307, column: 14, scope: !13470)
!13472 = !DILocation(line: 3307, column: 9, scope: !13470)
!13473 = !DILocation(line: 3310, column: 32, scope: !13427)
!13474 = !DILocation(line: 3310, column: 22, scope: !13427)
!13475 = !DILocation(line: 3310, column: 30, scope: !13427)
!13476 = !DILocation(line: 3310, column: 12, scope: !13427)
!13477 = !DILocation(line: 3310, column: 20, scope: !13427)
!13478 = !DILocation(line: 3310, column: 2, scope: !13427)
!13479 = !DILocation(line: 3310, column: 10, scope: !13427)
!13480 = !DILocation(line: 3312, column: 20, scope: !13427)
!13481 = !DILocation(line: 3312, column: 23, scope: !13427)
!13482 = !DILocation(line: 3312, column: 2, scope: !13427)
!13483 = !DILocation(line: 3314, column: 21, scope: !13484)
!13484 = distinct !DILexicalBlock(scope: !13427, file: !3, line: 3314, column: 6)
!13485 = !DILocation(line: 3314, column: 24, scope: !13484)
!13486 = !DILocation(line: 3314, column: 29, scope: !13484)
!13487 = !DILocation(line: 3314, column: 6, scope: !13484)
!13488 = !DILocation(line: 3314, column: 6, scope: !13427)
!13489 = !DILocation(line: 3315, column: 22, scope: !13490)
!13490 = distinct !DILexicalBlock(scope: !13484, file: !3, line: 3314, column: 36)
!13491 = !DILocation(line: 3315, column: 25, scope: !13490)
!13492 = !DILocation(line: 3315, column: 3, scope: !13490)
!13493 = !DILocation(line: 3316, column: 2, scope: !13490)
!13494 = !DILocation(line: 3318, column: 16, scope: !13427)
!13495 = !DILocation(line: 3318, column: 19, scope: !13427)
!13496 = !DILocation(line: 3318, column: 2, scope: !13427)
!13497 = !DILocation(line: 3320, column: 6, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13427, file: !3, line: 3320, column: 6)
!13499 = !DILocation(line: 3320, column: 9, scope: !13498)
!13500 = !DILocation(line: 3320, column: 14, scope: !13498)
!13501 = !DILocation(line: 3320, column: 6, scope: !13427)
!13502 = !DILocation(line: 3321, column: 14, scope: !13503)
!13503 = distinct !DILexicalBlock(scope: !13498, file: !3, line: 3320, column: 30)
!13504 = !DILocation(line: 3321, column: 20, scope: !13503)
!13505 = !DILocation(line: 3321, column: 23, scope: !13503)
!13506 = !DILocation(line: 3321, column: 3, scope: !13503)
!13507 = !DILocation(line: 3322, column: 2, scope: !13503)
!13508 = !DILocation(line: 3324, column: 13, scope: !13427)
!13509 = !DILocation(line: 3324, column: 16, scope: !13427)
!13510 = !DILocation(line: 3324, column: 24, scope: !13427)
!13511 = !DILocation(line: 3324, column: 2, scope: !13427)
!13512 = !DILocation(line: 3326, column: 15, scope: !13427)
!13513 = !DILocation(line: 3326, column: 20, scope: !13427)
!13514 = !DILocation(line: 3326, column: 2, scope: !13427)
!13515 = !DILocation(line: 3328, column: 6, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13427, file: !3, line: 3328, column: 6)
!13517 = !DILocation(line: 3328, column: 9, scope: !13516)
!13518 = !DILocation(line: 3328, column: 13, scope: !13516)
!13519 = !DILocation(line: 3328, column: 6, scope: !13427)
!13520 = !DILocation(line: 3329, column: 3, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 3328, column: 24)
!13522 = !DILocation(line: 3329, column: 6, scope: !13521)
!13523 = !DILocation(line: 3329, column: 10, scope: !13521)
!13524 = !DILocation(line: 3329, column: 20, scope: !13521)
!13525 = !DILocation(line: 3329, column: 29, scope: !13521)
!13526 = !DILocation(line: 3330, column: 2, scope: !13521)
!13527 = !DILocation(line: 3332, column: 13, scope: !13427)
!13528 = !DILocation(line: 3332, column: 16, scope: !13427)
!13529 = !DILocation(line: 3332, column: 21, scope: !13427)
!13530 = !DILocation(line: 3332, column: 2, scope: !13427)
!13531 = !DILocation(line: 3334, column: 15, scope: !13427)
!13532 = !DILocation(line: 3334, column: 18, scope: !13427)
!13533 = !DILocation(line: 3334, column: 24, scope: !13427)
!13534 = !DILocation(line: 3334, column: 2, scope: !13427)
!13535 = !DILocation(line: 3336, column: 9, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13427, file: !3, line: 3336, column: 2)
!13537 = !DILocation(line: 3336, column: 19, scope: !13536)
!13538 = !DILocation(line: 3336, column: 22, scope: !13536)
!13539 = !DILocation(line: 3336, column: 17, scope: !13536)
!13540 = !DILocation(line: 3336, column: 7, scope: !13536)
!13541 = !DILocation(line: 3336, column: 28, scope: !13542)
!13542 = distinct !DILexicalBlock(scope: !13536, file: !3, line: 3336, column: 2)
!13543 = !DILocation(line: 3336, column: 32, scope: !13542)
!13544 = !DILocation(line: 3336, column: 35, scope: !13542)
!13545 = !DILocation(line: 3336, column: 30, scope: !13542)
!13546 = !DILocation(line: 3336, column: 2, scope: !13536)
!13547 = !DILocation(line: 3337, column: 7, scope: !13548)
!13548 = distinct !DILexicalBlock(scope: !13549, file: !3, line: 3337, column: 7)
!13549 = distinct !DILexicalBlock(scope: !13542, file: !3, line: 3336, column: 53)
!13550 = !DILocation(line: 3337, column: 11, scope: !13548)
!13551 = !DILocation(line: 3337, column: 16, scope: !13548)
!13552 = !DILocation(line: 3337, column: 7, scope: !13549)
!13553 = !DILocation(line: 3338, column: 4, scope: !13548)
!13554 = !DILocation(line: 3340, column: 7, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13549, file: !3, line: 3340, column: 7)
!13556 = !DILocation(line: 3340, column: 11, scope: !13555)
!13557 = !DILocation(line: 3340, column: 16, scope: !13555)
!13558 = !DILocation(line: 3340, column: 7, scope: !13549)
!13559 = !DILocation(line: 3341, column: 4, scope: !13555)
!13560 = !DILocation(line: 3343, column: 17, scope: !13549)
!13561 = !DILocation(line: 3343, column: 20, scope: !13549)
!13562 = !DILocation(line: 3343, column: 24, scope: !13549)
!13563 = !DILocation(line: 3343, column: 3, scope: !13549)
!13564 = !DILocation(line: 3344, column: 2, scope: !13549)
!13565 = !DILocation(line: 3336, column: 43, scope: !13542)
!13566 = !DILocation(line: 3336, column: 49, scope: !13542)
!13567 = !DILocation(line: 3336, column: 2, scope: !13542)
!13568 = distinct !{!13568, !13546, !13569}
!13569 = !DILocation(line: 3344, column: 2, scope: !13536)
!13570 = !DILocation(line: 3347, column: 6, scope: !13571)
!13571 = distinct !DILexicalBlock(scope: !13427, file: !3, line: 3347, column: 6)
!13572 = !DILocation(line: 3347, column: 9, scope: !13571)
!13573 = !DILocation(line: 3347, column: 14, scope: !13571)
!13574 = !DILocation(line: 3347, column: 26, scope: !13571)
!13575 = !DILocation(line: 3347, column: 45, scope: !13571)
!13576 = !DILocation(line: 3347, column: 48, scope: !13571)
!13577 = !DILocation(line: 3347, column: 29, scope: !13571)
!13578 = !DILocation(line: 3347, column: 6, scope: !13427)
!13579 = !DILocation(line: 3348, column: 16, scope: !13580)
!13580 = distinct !DILexicalBlock(scope: !13571, file: !3, line: 3347, column: 58)
!13581 = !DILocation(line: 3348, column: 21, scope: !13580)
!13582 = !DILocation(line: 3348, column: 3, scope: !13580)
!13583 = !DILocation(line: 3350, column: 7, scope: !13584)
!13584 = distinct !DILexicalBlock(scope: !13580, file: !3, line: 3350, column: 7)
!13585 = !DILocation(line: 3350, column: 10, scope: !13584)
!13586 = !DILocation(line: 3350, column: 14, scope: !13584)
!13587 = !DILocation(line: 3350, column: 7, scope: !13580)
!13588 = !DILocation(line: 3351, column: 4, scope: !13584)
!13589 = !DILocation(line: 3351, column: 7, scope: !13584)
!13590 = !DILocation(line: 3351, column: 11, scope: !13584)
!13591 = !DILocation(line: 3351, column: 21, scope: !13584)
!13592 = !DILocation(line: 3351, column: 30, scope: !13584)
!13593 = !DILocation(line: 3353, column: 10, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13580, file: !3, line: 3353, column: 3)
!13595 = !DILocation(line: 3353, column: 20, scope: !13594)
!13596 = !DILocation(line: 3353, column: 23, scope: !13594)
!13597 = !DILocation(line: 3353, column: 18, scope: !13594)
!13598 = !DILocation(line: 3353, column: 8, scope: !13594)
!13599 = !DILocation(line: 3353, column: 29, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13594, file: !3, line: 3353, column: 3)
!13601 = !DILocation(line: 3353, column: 33, scope: !13600)
!13602 = !DILocation(line: 3353, column: 36, scope: !13600)
!13603 = !DILocation(line: 3353, column: 31, scope: !13600)
!13604 = !DILocation(line: 3353, column: 3, scope: !13594)
!13605 = !DILocation(line: 3354, column: 18, scope: !13600)
!13606 = !DILocation(line: 3354, column: 21, scope: !13600)
!13607 = !DILocation(line: 3354, column: 25, scope: !13600)
!13608 = !DILocation(line: 3354, column: 4, scope: !13600)
!13609 = !DILocation(line: 3353, column: 44, scope: !13600)
!13610 = !DILocation(line: 3353, column: 50, scope: !13600)
!13611 = !DILocation(line: 3353, column: 3, scope: !13600)
!13612 = distinct !{!13612, !13604, !13613}
!13613 = !DILocation(line: 3354, column: 28, scope: !13594)
!13614 = !DILocation(line: 3360, column: 7, scope: !13615)
!13615 = distinct !DILexicalBlock(scope: !13580, file: !3, line: 3360, column: 7)
!13616 = !DILocation(line: 3360, column: 10, scope: !13615)
!13617 = !DILocation(line: 3360, column: 15, scope: !13615)
!13618 = !DILocation(line: 3360, column: 7, scope: !13580)
!13619 = !DILocation(line: 3361, column: 15, scope: !13620)
!13620 = distinct !DILexicalBlock(scope: !13615, file: !3, line: 3360, column: 34)
!13621 = !DILocation(line: 3361, column: 4, scope: !13620)
!13622 = !DILocation(line: 3362, column: 3, scope: !13620)
!13623 = !DILocation(line: 3363, column: 2, scope: !13580)
!13624 = !DILocation(line: 3365, column: 13, scope: !13427)
!13625 = !DILocation(line: 3365, column: 2, scope: !13427)
!13626 = !DILocation(line: 3367, column: 22, scope: !13427)
!13627 = !DILocation(line: 3367, column: 25, scope: !13427)
!13628 = !DILocation(line: 3367, column: 29, scope: !13427)
!13629 = !DILocation(line: 3367, column: 2, scope: !13427)
!13630 = !DILocation(line: 3368, column: 1, scope: !13427)
!13631 = distinct !DISubprogram(name: "headerResize", scope: !3, file: !3, line: 3118, type: !13632, scopeLine: 3119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!13632 = !DISubroutineType(types: !13633)
!13633 = !{null, !3841, !1773, !2050}
!13634 = !DILocalVariable(name: "t", arg: 1, scope: !13631, file: !3, line: 3118, type: !3841)
!13635 = !DILocation(line: 3118, column: 37, scope: !13631)
!13636 = !DILocalVariable(name: "vec", arg: 2, scope: !13631, file: !3, line: 3118, type: !1773)
!13637 = !DILocation(line: 3118, column: 46, scope: !13631)
!13638 = !DILocalVariable(name: "str", arg: 3, scope: !13631, file: !3, line: 3118, type: !2050)
!13639 = !DILocation(line: 3118, column: 59, scope: !13631)
!13640 = !DILocalVariable(name: "tvec", scope: !13631, file: !3, line: 3120, type: !13641)
!13641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 1536, elements: !13642)
!13642 = !{!13643}
!13643 = !DISubrange(count: 192)
!13644 = !DILocation(line: 3120, column: 7, scope: !13631)
!13645 = !DILocalVariable(name: "ofs", scope: !13631, file: !3, line: 3121, type: !13646)
!13646 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !13647, line: 46, baseType: !2167)
!13647 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!13648 = !DILocation(line: 3121, column: 9, scope: !13631)
!13649 = !DILocation(line: 3122, column: 19, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !13631, file: !3, line: 3122, column: 6)
!13651 = !DILocation(line: 3122, column: 22, scope: !13650)
!13652 = !DILocation(line: 3122, column: 6, scope: !13650)
!13653 = !DILocation(line: 3122, column: 6, scope: !13631)
!13654 = !DILocation(line: 3123, column: 20, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13650, file: !3, line: 3122, column: 28)
!13656 = !DILocation(line: 3123, column: 23, scope: !13655)
!13657 = !DILocation(line: 3123, column: 29, scope: !13655)
!13658 = !DILocation(line: 3123, column: 36, scope: !13655)
!13659 = !DILocation(line: 3123, column: 39, scope: !13655)
!13660 = !DILocation(line: 3123, column: 46, scope: !13655)
!13661 = !DILocation(line: 3123, column: 3, scope: !13655)
!13662 = !DILocation(line: 3124, column: 2, scope: !13655)
!13663 = !DILocation(line: 3126, column: 17, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !13650, file: !3, line: 3125, column: 7)
!13665 = !DILocation(line: 3126, column: 51, scope: !13664)
!13666 = !DILocation(line: 3126, column: 3, scope: !13664)
!13667 = !DILocation(line: 3127, column: 17, scope: !13664)
!13668 = !DILocation(line: 3127, column: 65, scope: !13664)
!13669 = !DILocation(line: 3127, column: 3, scope: !13664)
!13670 = !DILocation(line: 3128, column: 17, scope: !13664)
!13671 = !DILocation(line: 3128, column: 69, scope: !13664)
!13672 = !DILocation(line: 3128, column: 3, scope: !13664)
!13673 = !DILocation(line: 3131, column: 6, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13631, file: !3, line: 3131, column: 6)
!13675 = !DILocation(line: 3131, column: 9, scope: !13674)
!13676 = !DILocation(line: 3131, column: 13, scope: !13674)
!13677 = !DILocation(line: 3131, column: 18, scope: !13674)
!13678 = !DILocation(line: 3131, column: 6, scope: !13631)
!13679 = !DILocation(line: 3132, column: 11, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13674, file: !3, line: 3131, column: 31)
!13681 = !DILocation(line: 3132, column: 14, scope: !13680)
!13682 = !DILocation(line: 3132, column: 18, scope: !13680)
!13683 = !DILocation(line: 3132, column: 3, scope: !13680)
!13684 = !DILocation(line: 3134, column: 25, scope: !13685)
!13685 = distinct !DILexicalBlock(scope: !13680, file: !3, line: 3132, column: 27)
!13686 = !DILocation(line: 3134, column: 31, scope: !13685)
!13687 = !DILocation(line: 3134, column: 29, scope: !13685)
!13688 = !DILocation(line: 3134, column: 51, scope: !13685)
!13689 = !DILocation(line: 3134, column: 49, scope: !13685)
!13690 = !DILocation(line: 3135, column: 26, scope: !13685)
!13691 = !DILocation(line: 3135, column: 35, scope: !13685)
!13692 = !DILocation(line: 3135, column: 38, scope: !13685)
!13693 = !DILocation(line: 3135, column: 42, scope: !13685)
!13694 = !DILocation(line: 3135, column: 48, scope: !13685)
!13695 = !DILocation(line: 3135, column: 51, scope: !13685)
!13696 = !DILocation(line: 3134, column: 12, scope: !13685)
!13697 = !DILocation(line: 3134, column: 9, scope: !13685)
!13698 = !DILocation(line: 3136, column: 5, scope: !13685)
!13699 = !DILocation(line: 3138, column: 25, scope: !13685)
!13700 = !DILocation(line: 3138, column: 31, scope: !13685)
!13701 = !DILocation(line: 3138, column: 29, scope: !13685)
!13702 = !DILocation(line: 3138, column: 51, scope: !13685)
!13703 = !DILocation(line: 3138, column: 49, scope: !13685)
!13704 = !DILocation(line: 3139, column: 26, scope: !13685)
!13705 = !DILocation(line: 3139, column: 36, scope: !13685)
!13706 = !DILocation(line: 3139, column: 59, scope: !13685)
!13707 = !DILocation(line: 3139, column: 62, scope: !13685)
!13708 = !DILocation(line: 3139, column: 66, scope: !13685)
!13709 = !DILocation(line: 3139, column: 72, scope: !13685)
!13710 = !DILocation(line: 3139, column: 75, scope: !13685)
!13711 = !DILocation(line: 3138, column: 12, scope: !13685)
!13712 = !DILocation(line: 3138, column: 9, scope: !13685)
!13713 = !DILocation(line: 3140, column: 5, scope: !13685)
!13714 = !DILocation(line: 3142, column: 25, scope: !13685)
!13715 = !DILocation(line: 3142, column: 31, scope: !13685)
!13716 = !DILocation(line: 3142, column: 29, scope: !13685)
!13717 = !DILocation(line: 3142, column: 51, scope: !13685)
!13718 = !DILocation(line: 3142, column: 49, scope: !13685)
!13719 = !DILocation(line: 3142, column: 93, scope: !13685)
!13720 = !DILocation(line: 3143, column: 26, scope: !13685)
!13721 = !DILocation(line: 3143, column: 50, scope: !13685)
!13722 = !DILocation(line: 3143, column: 77, scope: !13685)
!13723 = !DILocation(line: 3143, column: 80, scope: !13685)
!13724 = !DILocation(line: 3143, column: 84, scope: !13685)
!13725 = !DILocation(line: 3143, column: 90, scope: !13685)
!13726 = !DILocation(line: 3143, column: 93, scope: !13685)
!13727 = !DILocation(line: 3142, column: 12, scope: !13685)
!13728 = !DILocation(line: 3142, column: 9, scope: !13685)
!13729 = !DILocation(line: 3144, column: 5, scope: !13685)
!13730 = !DILocation(line: 3146, column: 2, scope: !13680)
!13731 = !DILocation(line: 3148, column: 7, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !13733, file: !3, line: 3148, column: 7)
!13733 = distinct !DILexicalBlock(scope: !13674, file: !3, line: 3147, column: 7)
!13734 = !DILocation(line: 3148, column: 10, scope: !13732)
!13735 = !DILocation(line: 3148, column: 15, scope: !13732)
!13736 = !DILocation(line: 3148, column: 7, scope: !13733)
!13737 = !DILocation(line: 3149, column: 24, scope: !13738)
!13738 = distinct !DILexicalBlock(scope: !13732, file: !3, line: 3148, column: 28)
!13739 = !DILocation(line: 3149, column: 30, scope: !13738)
!13740 = !DILocation(line: 3149, column: 28, scope: !13738)
!13741 = !DILocation(line: 3149, column: 50, scope: !13738)
!13742 = !DILocation(line: 3149, column: 48, scope: !13738)
!13743 = !DILocation(line: 3150, column: 25, scope: !13738)
!13744 = !DILocation(line: 3150, column: 35, scope: !13738)
!13745 = !DILocation(line: 3150, column: 58, scope: !13738)
!13746 = !DILocation(line: 3150, column: 61, scope: !13738)
!13747 = !DILocation(line: 3150, column: 65, scope: !13738)
!13748 = !DILocation(line: 3150, column: 71, scope: !13738)
!13749 = !DILocation(line: 3150, column: 74, scope: !13738)
!13750 = !DILocation(line: 3149, column: 11, scope: !13738)
!13751 = !DILocation(line: 3149, column: 8, scope: !13738)
!13752 = !DILocation(line: 3151, column: 3, scope: !13738)
!13753 = !DILocation(line: 3153, column: 24, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13732, file: !3, line: 3152, column: 8)
!13755 = !DILocation(line: 3153, column: 30, scope: !13754)
!13756 = !DILocation(line: 3153, column: 28, scope: !13754)
!13757 = !DILocation(line: 3153, column: 50, scope: !13754)
!13758 = !DILocation(line: 3153, column: 48, scope: !13754)
!13759 = !DILocation(line: 3154, column: 25, scope: !13754)
!13760 = !DILocation(line: 3154, column: 35, scope: !13754)
!13761 = !DILocation(line: 3154, column: 59, scope: !13754)
!13762 = !DILocation(line: 3154, column: 86, scope: !13754)
!13763 = !DILocation(line: 3154, column: 89, scope: !13754)
!13764 = !DILocation(line: 3154, column: 93, scope: !13754)
!13765 = !DILocation(line: 3154, column: 99, scope: !13754)
!13766 = !DILocation(line: 3154, column: 102, scope: !13754)
!13767 = !DILocation(line: 3153, column: 11, scope: !13754)
!13768 = !DILocation(line: 3153, column: 8, scope: !13754)
!13769 = !DILocation(line: 3158, column: 6, scope: !13770)
!13770 = distinct !DILexicalBlock(scope: !13631, file: !3, line: 3158, column: 6)
!13771 = !DILocation(line: 3158, column: 9, scope: !13770)
!13772 = !DILocation(line: 3158, column: 14, scope: !13770)
!13773 = !DILocation(line: 3158, column: 6, scope: !13631)
!13774 = !DILocation(line: 3159, column: 23, scope: !13775)
!13775 = distinct !DILexicalBlock(scope: !13770, file: !3, line: 3158, column: 33)
!13776 = !DILocation(line: 3159, column: 29, scope: !13775)
!13777 = !DILocation(line: 3159, column: 27, scope: !13775)
!13778 = !DILocation(line: 3159, column: 49, scope: !13775)
!13779 = !DILocation(line: 3159, column: 47, scope: !13775)
!13780 = !DILocation(line: 3159, column: 90, scope: !13775)
!13781 = !DILocation(line: 3159, column: 93, scope: !13775)
!13782 = !DILocation(line: 3159, column: 10, scope: !13775)
!13783 = !DILocation(line: 3159, column: 7, scope: !13775)
!13784 = !DILocation(line: 3160, column: 2, scope: !13775)
!13785 = !DILocation(line: 3161, column: 1, scope: !13631)
!13786 = distinct !DISubprogram(name: "ElementResize", scope: !3, file: !3, line: 3195, type: !13787, scopeLine: 3196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!13787 = !DISubroutineType(types: !13788)
!13788 = !{null, !3841, !3868, !3830}
!13789 = !DILocalVariable(name: "t", arg: 1, scope: !13786, file: !3, line: 3195, type: !3841)
!13790 = !DILocation(line: 3195, column: 38, scope: !13786)
!13791 = !DILocalVariable(name: "td", arg: 2, scope: !13786, file: !3, line: 3195, type: !3868)
!13792 = !DILocation(line: 3195, column: 52, scope: !13786)
!13793 = !DILocalVariable(name: "mat", arg: 3, scope: !13786, file: !3, line: 3195, type: !3830)
!13794 = !DILocation(line: 3195, column: 62, scope: !13786)
!13795 = !DILocalVariable(name: "tmat", scope: !13786, file: !3, line: 3197, type: !3881)
!13796 = !DILocation(line: 3197, column: 8, scope: !13786)
!13797 = !DILocalVariable(name: "smat", scope: !13786, file: !3, line: 3197, type: !3881)
!13798 = !DILocation(line: 3197, column: 20, scope: !13786)
!13799 = !DILocalVariable(name: "center", scope: !13786, file: !3, line: 3197, type: !1987)
!13800 = !DILocation(line: 3197, column: 32, scope: !13786)
!13801 = !DILocalVariable(name: "vec", scope: !13786, file: !3, line: 3198, type: !1987)
!13802 = !DILocation(line: 3198, column: 8, scope: !13786)
!13803 = !DILocation(line: 3200, column: 6, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13786, file: !3, line: 3200, column: 6)
!13805 = !DILocation(line: 3200, column: 9, scope: !13804)
!13806 = !DILocation(line: 3200, column: 14, scope: !13804)
!13807 = !DILocation(line: 3200, column: 6, scope: !13786)
!13808 = !DILocation(line: 3201, column: 15, scope: !13809)
!13809 = distinct !DILexicalBlock(scope: !13804, file: !3, line: 3200, column: 24)
!13810 = !DILocation(line: 3201, column: 21, scope: !13809)
!13811 = !DILocation(line: 3201, column: 26, scope: !13809)
!13812 = !DILocation(line: 3201, column: 30, scope: !13809)
!13813 = !DILocation(line: 3201, column: 3, scope: !13809)
!13814 = !DILocation(line: 3202, column: 15, scope: !13809)
!13815 = !DILocation(line: 3202, column: 21, scope: !13809)
!13816 = !DILocation(line: 3202, column: 25, scope: !13809)
!13817 = !DILocation(line: 3202, column: 31, scope: !13809)
!13818 = !DILocation(line: 3202, column: 3, scope: !13809)
!13819 = !DILocation(line: 3203, column: 2, scope: !13809)
!13820 = !DILocation(line: 3205, column: 14, scope: !13821)
!13821 = distinct !DILexicalBlock(scope: !13804, file: !3, line: 3204, column: 7)
!13822 = !DILocation(line: 3205, column: 20, scope: !13821)
!13823 = !DILocation(line: 3205, column: 3, scope: !13821)
!13824 = !DILocation(line: 3208, column: 6, scope: !13825)
!13825 = distinct !DILexicalBlock(scope: !13786, file: !3, line: 3208, column: 6)
!13826 = !DILocation(line: 3208, column: 9, scope: !13825)
!13827 = !DILocation(line: 3208, column: 13, scope: !13825)
!13828 = !DILocation(line: 3208, column: 6, scope: !13786)
!13829 = !DILocation(line: 3209, column: 3, scope: !13830)
!13830 = distinct !DILexicalBlock(scope: !13825, file: !3, line: 3208, column: 24)
!13831 = !DILocation(line: 3209, column: 6, scope: !13830)
!13832 = !DILocation(line: 3209, column: 10, scope: !13830)
!13833 = !DILocation(line: 3209, column: 20, scope: !13830)
!13834 = !DILocation(line: 3209, column: 23, scope: !13830)
!13835 = !DILocation(line: 3209, column: 27, scope: !13830)
!13836 = !DILocation(line: 3210, column: 2, scope: !13830)
!13837 = !DILocation(line: 3213, column: 35, scope: !13838)
!13838 = distinct !DILexicalBlock(scope: !13786, file: !3, line: 3213, column: 6)
!13839 = !DILocation(line: 3213, column: 38, scope: !13838)
!13840 = !DILocation(line: 3213, column: 41, scope: !13838)
!13841 = !DILocation(line: 3213, column: 6, scope: !13838)
!13842 = !DILocation(line: 3213, column: 6, scope: !13786)
!13843 = !DILocation(line: 3214, column: 14, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13838, file: !3, line: 3213, column: 50)
!13845 = !DILocation(line: 3214, column: 22, scope: !13844)
!13846 = !DILocation(line: 3214, column: 26, scope: !13844)
!13847 = !DILocation(line: 3214, column: 3, scope: !13844)
!13848 = !DILocation(line: 3215, column: 2, scope: !13844)
!13849 = !DILocation(line: 3216, column: 11, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13838, file: !3, line: 3216, column: 11)
!13851 = !DILocation(line: 3216, column: 14, scope: !13850)
!13852 = !DILocation(line: 3216, column: 22, scope: !13850)
!13853 = !DILocation(line: 3216, column: 11, scope: !13838)
!13854 = !DILocation(line: 3217, column: 7, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13856, file: !3, line: 3217, column: 7)
!13856 = distinct !DILexicalBlock(scope: !13850, file: !3, line: 3216, column: 39)
!13857 = !DILocation(line: 3217, column: 11, scope: !13855)
!13858 = !DILocation(line: 3217, column: 16, scope: !13855)
!13859 = !DILocation(line: 3217, column: 7, scope: !13856)
!13860 = !DILocation(line: 3218, column: 15, scope: !13861)
!13861 = distinct !DILexicalBlock(scope: !13855, file: !3, line: 3217, column: 39)
!13862 = !DILocation(line: 3218, column: 23, scope: !13861)
!13863 = !DILocation(line: 3218, column: 27, scope: !13861)
!13864 = !DILocation(line: 3218, column: 4, scope: !13861)
!13865 = !DILocation(line: 3219, column: 3, scope: !13861)
!13866 = !DILocation(line: 3221, column: 15, scope: !13867)
!13867 = distinct !DILexicalBlock(scope: !13855, file: !3, line: 3220, column: 8)
!13868 = !DILocation(line: 3221, column: 23, scope: !13867)
!13869 = !DILocation(line: 3221, column: 26, scope: !13867)
!13870 = !DILocation(line: 3221, column: 4, scope: !13867)
!13871 = !DILocation(line: 3223, column: 2, scope: !13856)
!13872 = !DILocation(line: 3225, column: 14, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !13850, file: !3, line: 3224, column: 7)
!13874 = !DILocation(line: 3225, column: 22, scope: !13873)
!13875 = !DILocation(line: 3225, column: 25, scope: !13873)
!13876 = !DILocation(line: 3225, column: 3, scope: !13873)
!13877 = !DILocation(line: 3228, column: 6, scope: !13878)
!13878 = distinct !DILexicalBlock(scope: !13786, file: !3, line: 3228, column: 6)
!13879 = !DILocation(line: 3228, column: 10, scope: !13878)
!13880 = !DILocation(line: 3228, column: 6, scope: !13786)
!13881 = !DILocalVariable(name: "fsize", scope: !13882, file: !3, line: 3229, type: !1987)
!13882 = distinct !DILexicalBlock(scope: !13878, file: !3, line: 3228, column: 15)
!13883 = !DILocation(line: 3229, column: 9, scope: !13882)
!13884 = !DILocation(line: 3231, column: 7, scope: !13885)
!13885 = distinct !DILexicalBlock(scope: !13882, file: !3, line: 3231, column: 7)
!13886 = !DILocation(line: 3231, column: 10, scope: !13885)
!13887 = !DILocation(line: 3231, column: 15, scope: !13885)
!13888 = !DILocation(line: 3231, column: 7, scope: !13882)
!13889 = !DILocalVariable(name: "obsizemat", scope: !13890, file: !3, line: 3232, type: !3881)
!13890 = distinct !DILexicalBlock(scope: !13885, file: !3, line: 3231, column: 50)
!13891 = !DILocation(line: 3232, column: 10, scope: !13890)
!13892 = !DILocation(line: 3234, column: 16, scope: !13890)
!13893 = !DILocation(line: 3234, column: 27, scope: !13890)
!13894 = !DILocation(line: 3234, column: 33, scope: !13890)
!13895 = !DILocation(line: 3234, column: 37, scope: !13890)
!13896 = !DILocation(line: 3234, column: 4, scope: !13890)
!13897 = !DILocation(line: 3236, column: 20, scope: !13890)
!13898 = !DILocation(line: 3236, column: 31, scope: !13890)
!13899 = !DILocation(line: 3236, column: 35, scope: !13890)
!13900 = !DILocation(line: 3236, column: 44, scope: !13890)
!13901 = !DILocation(line: 3236, column: 4, scope: !13890)
!13902 = !DILocation(line: 3238, column: 3, scope: !13890)
!13903 = !DILocation(line: 3240, column: 17, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13885, file: !3, line: 3239, column: 8)
!13905 = !DILocation(line: 3240, column: 24, scope: !13904)
!13906 = !DILocation(line: 3240, column: 4, scope: !13904)
!13907 = !DILocation(line: 3243, column: 21, scope: !13882)
!13908 = !DILocation(line: 3243, column: 25, scope: !13882)
!13909 = !DILocation(line: 3243, column: 38, scope: !13882)
!13910 = !DILocation(line: 3243, column: 3, scope: !13882)
!13911 = !DILocation(line: 3245, column: 8, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !13882, file: !3, line: 3245, column: 7)
!13913 = !DILocation(line: 3245, column: 11, scope: !13912)
!13914 = !DILocation(line: 3245, column: 16, scope: !13912)
!13915 = !DILocation(line: 3245, column: 31, scope: !13912)
!13916 = !DILocation(line: 3245, column: 7, scope: !13882)
!13917 = !DILocation(line: 3246, column: 9, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13919, file: !3, line: 3246, column: 8)
!13919 = distinct !DILexicalBlock(scope: !13912, file: !3, line: 3245, column: 37)
!13920 = !DILocation(line: 3246, column: 13, scope: !13918)
!13921 = !DILocation(line: 3246, column: 18, scope: !13918)
!13922 = !DILocation(line: 3246, column: 35, scope: !13918)
!13923 = !DILocation(line: 3246, column: 40, scope: !13918)
!13924 = !DILocation(line: 3246, column: 43, scope: !13918)
!13925 = !DILocation(line: 3246, column: 47, scope: !13918)
!13926 = !DILocation(line: 3246, column: 52, scope: !13918)
!13927 = !DILocation(line: 3246, column: 8, scope: !13919)
!13928 = !DILocation(line: 3248, column: 16, scope: !13929)
!13929 = distinct !DILexicalBlock(scope: !13918, file: !3, line: 3246, column: 66)
!13930 = !DILocation(line: 3248, column: 20, scope: !13929)
!13931 = !DILocation(line: 3248, column: 33, scope: !13929)
!13932 = !DILocation(line: 3248, column: 42, scope: !13929)
!13933 = !DILocation(line: 3248, column: 49, scope: !13929)
!13934 = !DILocation(line: 3248, column: 53, scope: !13929)
!13935 = !DILocation(line: 3248, column: 47, scope: !13929)
!13936 = !DILocation(line: 3248, column: 30, scope: !13929)
!13937 = !DILocation(line: 3248, column: 25, scope: !13929)
!13938 = !DILocation(line: 3248, column: 6, scope: !13929)
!13939 = !DILocation(line: 3248, column: 10, scope: !13929)
!13940 = !DILocation(line: 3248, column: 14, scope: !13929)
!13941 = !DILocation(line: 3250, column: 24, scope: !13929)
!13942 = !DILocation(line: 3250, column: 28, scope: !13929)
!13943 = !DILocation(line: 3250, column: 33, scope: !13929)
!13944 = !DILocation(line: 3250, column: 5, scope: !13929)
!13945 = !DILocation(line: 3250, column: 9, scope: !13929)
!13946 = !DILocation(line: 3250, column: 14, scope: !13929)
!13947 = !DILocation(line: 3250, column: 22, scope: !13929)
!13948 = !DILocation(line: 3251, column: 24, scope: !13929)
!13949 = !DILocation(line: 3251, column: 28, scope: !13929)
!13950 = !DILocation(line: 3251, column: 33, scope: !13929)
!13951 = !DILocation(line: 3251, column: 5, scope: !13929)
!13952 = !DILocation(line: 3251, column: 9, scope: !13929)
!13953 = !DILocation(line: 3251, column: 14, scope: !13929)
!13954 = !DILocation(line: 3251, column: 22, scope: !13929)
!13955 = !DILocation(line: 3252, column: 24, scope: !13929)
!13956 = !DILocation(line: 3252, column: 28, scope: !13929)
!13957 = !DILocation(line: 3252, column: 33, scope: !13929)
!13958 = !DILocation(line: 3252, column: 5, scope: !13929)
!13959 = !DILocation(line: 3252, column: 9, scope: !13929)
!13960 = !DILocation(line: 3252, column: 14, scope: !13929)
!13961 = !DILocation(line: 3252, column: 22, scope: !13929)
!13962 = !DILocation(line: 3253, column: 4, scope: !13929)
!13963 = !DILocation(line: 3256, column: 9, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13965, file: !3, line: 3256, column: 9)
!13965 = distinct !DILexicalBlock(scope: !13918, file: !3, line: 3254, column: 9)
!13966 = !DILocation(line: 3256, column: 13, scope: !13964)
!13967 = !DILocation(line: 3256, column: 18, scope: !13964)
!13968 = !DILocation(line: 3256, column: 9, scope: !13965)
!13969 = !DILocation(line: 3257, column: 17, scope: !13964)
!13970 = !DILocation(line: 3257, column: 21, scope: !13964)
!13971 = !DILocation(line: 3257, column: 7, scope: !13964)
!13972 = !DILocation(line: 3257, column: 11, scope: !13964)
!13973 = !DILocation(line: 3257, column: 15, scope: !13964)
!13974 = !DILocation(line: 3257, column: 6, scope: !13964)
!13975 = !DILocation(line: 3259, column: 24, scope: !13965)
!13976 = !DILocation(line: 3259, column: 28, scope: !13965)
!13977 = !DILocation(line: 3259, column: 33, scope: !13965)
!13978 = !DILocation(line: 3259, column: 50, scope: !13965)
!13979 = !DILocation(line: 3259, column: 59, scope: !13965)
!13980 = !DILocation(line: 3259, column: 66, scope: !13965)
!13981 = !DILocation(line: 3259, column: 70, scope: !13965)
!13982 = !DILocation(line: 3259, column: 64, scope: !13965)
!13983 = !DILocation(line: 3259, column: 47, scope: !13965)
!13984 = !DILocation(line: 3259, column: 42, scope: !13965)
!13985 = !DILocation(line: 3259, column: 5, scope: !13965)
!13986 = !DILocation(line: 3259, column: 9, scope: !13965)
!13987 = !DILocation(line: 3259, column: 14, scope: !13965)
!13988 = !DILocation(line: 3259, column: 22, scope: !13965)
!13989 = !DILocation(line: 3260, column: 24, scope: !13965)
!13990 = !DILocation(line: 3260, column: 28, scope: !13965)
!13991 = !DILocation(line: 3260, column: 33, scope: !13965)
!13992 = !DILocation(line: 3260, column: 50, scope: !13965)
!13993 = !DILocation(line: 3260, column: 59, scope: !13965)
!13994 = !DILocation(line: 3260, column: 66, scope: !13965)
!13995 = !DILocation(line: 3260, column: 70, scope: !13965)
!13996 = !DILocation(line: 3260, column: 64, scope: !13965)
!13997 = !DILocation(line: 3260, column: 47, scope: !13965)
!13998 = !DILocation(line: 3260, column: 42, scope: !13965)
!13999 = !DILocation(line: 3260, column: 5, scope: !13965)
!14000 = !DILocation(line: 3260, column: 9, scope: !13965)
!14001 = !DILocation(line: 3260, column: 14, scope: !13965)
!14002 = !DILocation(line: 3260, column: 22, scope: !13965)
!14003 = !DILocation(line: 3261, column: 24, scope: !13965)
!14004 = !DILocation(line: 3261, column: 28, scope: !13965)
!14005 = !DILocation(line: 3261, column: 33, scope: !13965)
!14006 = !DILocation(line: 3261, column: 50, scope: !13965)
!14007 = !DILocation(line: 3261, column: 59, scope: !13965)
!14008 = !DILocation(line: 3261, column: 66, scope: !13965)
!14009 = !DILocation(line: 3261, column: 70, scope: !13965)
!14010 = !DILocation(line: 3261, column: 64, scope: !13965)
!14011 = !DILocation(line: 3261, column: 47, scope: !13965)
!14012 = !DILocation(line: 3261, column: 42, scope: !13965)
!14013 = !DILocation(line: 3261, column: 5, scope: !13965)
!14014 = !DILocation(line: 3261, column: 9, scope: !13965)
!14015 = !DILocation(line: 3261, column: 14, scope: !13965)
!14016 = !DILocation(line: 3261, column: 22, scope: !13965)
!14017 = !DILocation(line: 3263, column: 3, scope: !13919)
!14018 = !DILocation(line: 3265, column: 21, scope: !13882)
!14019 = !DILocation(line: 3265, column: 24, scope: !13882)
!14020 = !DILocation(line: 3265, column: 3, scope: !13882)
!14021 = !DILocation(line: 3266, column: 2, scope: !13882)
!14022 = !DILocation(line: 3269, column: 6, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !13786, file: !3, line: 3269, column: 6)
!14024 = !DILocation(line: 3269, column: 9, scope: !14023)
!14025 = !DILocation(line: 3269, column: 14, scope: !14023)
!14026 = !DILocation(line: 3269, column: 6, scope: !13786)
!14027 = !DILocation(line: 3270, column: 15, scope: !14023)
!14028 = !DILocation(line: 3270, column: 20, scope: !14023)
!14029 = !DILocation(line: 3270, column: 24, scope: !14023)
!14030 = !DILocation(line: 3270, column: 30, scope: !14023)
!14031 = !DILocation(line: 3270, column: 3, scope: !14023)
!14032 = !DILocation(line: 3272, column: 15, scope: !14023)
!14033 = !DILocation(line: 3272, column: 20, scope: !14023)
!14034 = !DILocation(line: 3272, column: 24, scope: !14023)
!14035 = !DILocation(line: 3272, column: 32, scope: !14023)
!14036 = !DILocation(line: 3272, column: 3, scope: !14023)
!14037 = !DILocation(line: 3274, column: 12, scope: !13786)
!14038 = !DILocation(line: 3274, column: 18, scope: !13786)
!14039 = !DILocation(line: 3274, column: 2, scope: !13786)
!14040 = !DILocation(line: 3276, column: 12, scope: !13786)
!14041 = !DILocation(line: 3276, column: 17, scope: !13786)
!14042 = !DILocation(line: 3276, column: 2, scope: !13786)
!14043 = !DILocation(line: 3277, column: 6, scope: !14044)
!14044 = distinct !DILexicalBlock(scope: !13786, file: !3, line: 3277, column: 6)
!14045 = !DILocation(line: 3277, column: 9, scope: !14044)
!14046 = !DILocation(line: 3277, column: 14, scope: !14044)
!14047 = !DILocation(line: 3277, column: 6, scope: !13786)
!14048 = !DILocation(line: 3278, column: 13, scope: !14044)
!14049 = !DILocation(line: 3278, column: 18, scope: !14044)
!14050 = !DILocation(line: 3278, column: 22, scope: !14044)
!14051 = !DILocation(line: 3278, column: 3, scope: !14044)
!14052 = !DILocation(line: 3280, column: 13, scope: !14044)
!14053 = !DILocation(line: 3280, column: 18, scope: !14044)
!14054 = !DILocation(line: 3280, column: 22, scope: !14044)
!14055 = !DILocation(line: 3280, column: 3, scope: !14044)
!14056 = !DILocation(line: 3282, column: 12, scope: !13786)
!14057 = !DILocation(line: 3282, column: 17, scope: !13786)
!14058 = !DILocation(line: 3282, column: 21, scope: !13786)
!14059 = !DILocation(line: 3282, column: 2, scope: !13786)
!14060 = !DILocation(line: 3284, column: 6, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !13786, file: !3, line: 3284, column: 6)
!14062 = !DILocation(line: 3284, column: 9, scope: !14061)
!14063 = !DILocation(line: 3284, column: 14, scope: !14061)
!14064 = !DILocation(line: 3284, column: 6, scope: !13786)
!14065 = !DILocation(line: 3285, column: 13, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14061, file: !3, line: 3284, column: 37)
!14067 = !DILocation(line: 3285, column: 17, scope: !14066)
!14068 = !DILocation(line: 3285, column: 23, scope: !14066)
!14069 = !DILocation(line: 3285, column: 3, scope: !14066)
!14070 = !DILocation(line: 3286, column: 2, scope: !14066)
!14071 = !DILocation(line: 3288, column: 21, scope: !13786)
!14072 = !DILocation(line: 3288, column: 25, scope: !13786)
!14073 = !DILocation(line: 3288, column: 38, scope: !13786)
!14074 = !DILocation(line: 3288, column: 2, scope: !13786)
!14075 = !DILocation(line: 3289, column: 14, scope: !13786)
!14076 = !DILocation(line: 3289, column: 18, scope: !13786)
!14077 = !DILocation(line: 3289, column: 23, scope: !13786)
!14078 = !DILocation(line: 3289, column: 27, scope: !13786)
!14079 = !DILocation(line: 3289, column: 33, scope: !13786)
!14080 = !DILocation(line: 3289, column: 2, scope: !13786)
!14081 = !DILocation(line: 3291, column: 21, scope: !13786)
!14082 = !DILocation(line: 3291, column: 24, scope: !13786)
!14083 = !DILocation(line: 3291, column: 2, scope: !13786)
!14084 = !DILocation(line: 3292, column: 1, scope: !13786)
!14085 = distinct !DISubprogram(name: "transdata_check_local_center", scope: !3, file: !3, line: 193, type: !14086, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!14086 = !DISubroutineType(types: !14087)
!14087 = !{!2769, !3841, !27}
!14088 = !DILocalVariable(name: "t", arg: 1, scope: !14085, file: !3, line: 193, type: !3841)
!14089 = !DILocation(line: 193, column: 53, scope: !14085)
!14090 = !DILocalVariable(name: "around", arg: 2, scope: !14085, file: !3, line: 193, type: !27)
!14091 = !DILocation(line: 193, column: 62, scope: !14085)
!14092 = !DILocation(line: 195, column: 11, scope: !14085)
!14093 = !DILocation(line: 195, column: 18, scope: !14085)
!14094 = !DILocation(line: 195, column: 32, scope: !14085)
!14095 = !DILocation(line: 196, column: 15, scope: !14085)
!14096 = !DILocation(line: 196, column: 18, scope: !14085)
!14097 = !DILocation(line: 196, column: 23, scope: !14085)
!14098 = !DILocation(line: 196, column: 46, scope: !14085)
!14099 = !DILocation(line: 197, column: 15, scope: !14085)
!14100 = !DILocation(line: 197, column: 18, scope: !14085)
!14101 = !DILocation(line: 197, column: 25, scope: !14085)
!14102 = !DILocation(line: 197, column: 28, scope: !14085)
!14103 = !DILocation(line: 197, column: 93, scope: !14085)
!14104 = !DILocation(line: 198, column: 15, scope: !14085)
!14105 = !DILocation(line: 198, column: 18, scope: !14085)
!14106 = !DILocation(line: 198, column: 28, scope: !14085)
!14107 = !DILocation(line: 198, column: 42, scope: !14085)
!14108 = !DILocation(line: 199, column: 15, scope: !14085)
!14109 = !DILocation(line: 199, column: 18, scope: !14085)
!14110 = !DILocation(line: 199, column: 26, scope: !14085)
!14111 = !DILocation(line: 0, scope: !14085)
!14112 = !DILocation(line: 195, column: 9, scope: !14085)
!14113 = !DILocation(line: 195, column: 2, scope: !14085)
!14114 = distinct !DISubprogram(name: "TransMat3ToSize", scope: !3, file: !3, line: 3177, type: !14115, scopeLine: 3178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!14115 = !DISubroutineType(types: !14116)
!14116 = !{null, !3830, !3830, !1773}
!14117 = !DILocalVariable(name: "mat", arg: 1, scope: !14114, file: !3, line: 3177, type: !3830)
!14118 = !DILocation(line: 3177, column: 35, scope: !14114)
!14119 = !DILocalVariable(name: "smat", arg: 2, scope: !14114, file: !3, line: 3177, type: !3830)
!14120 = !DILocation(line: 3177, column: 52, scope: !14114)
!14121 = !DILocalVariable(name: "size", arg: 3, scope: !14114, file: !3, line: 3177, type: !1773)
!14122 = !DILocation(line: 3177, column: 70, scope: !14114)
!14123 = !DILocalVariable(name: "vec", scope: !14114, file: !3, line: 3179, type: !1987)
!14124 = !DILocation(line: 3179, column: 8, scope: !14114)
!14125 = !DILocation(line: 3181, column: 13, scope: !14114)
!14126 = !DILocation(line: 3181, column: 18, scope: !14114)
!14127 = !DILocation(line: 3181, column: 2, scope: !14114)
!14128 = !DILocation(line: 3182, column: 25, scope: !14114)
!14129 = !DILocation(line: 3182, column: 12, scope: !14114)
!14130 = !DILocation(line: 3182, column: 2, scope: !14114)
!14131 = !DILocation(line: 3182, column: 10, scope: !14114)
!14132 = !DILocation(line: 3183, column: 13, scope: !14114)
!14133 = !DILocation(line: 3183, column: 18, scope: !14114)
!14134 = !DILocation(line: 3183, column: 2, scope: !14114)
!14135 = !DILocation(line: 3184, column: 25, scope: !14114)
!14136 = !DILocation(line: 3184, column: 12, scope: !14114)
!14137 = !DILocation(line: 3184, column: 2, scope: !14114)
!14138 = !DILocation(line: 3184, column: 10, scope: !14114)
!14139 = !DILocation(line: 3185, column: 13, scope: !14114)
!14140 = !DILocation(line: 3185, column: 18, scope: !14114)
!14141 = !DILocation(line: 3185, column: 2, scope: !14114)
!14142 = !DILocation(line: 3186, column: 25, scope: !14114)
!14143 = !DILocation(line: 3186, column: 12, scope: !14114)
!14144 = !DILocation(line: 3186, column: 2, scope: !14114)
!14145 = !DILocation(line: 3186, column: 10, scope: !14114)
!14146 = !DILocation(line: 3189, column: 23, scope: !14147)
!14147 = distinct !DILexicalBlock(scope: !14114, file: !3, line: 3189, column: 6)
!14148 = !DILocation(line: 3189, column: 31, scope: !14147)
!14149 = !DILocation(line: 3189, column: 6, scope: !14147)
!14150 = !DILocation(line: 3189, column: 6, scope: !14114)
!14151 = !DILocation(line: 3189, column: 53, scope: !14147)
!14152 = !DILocation(line: 3189, column: 52, scope: !14147)
!14153 = !DILocation(line: 3189, column: 42, scope: !14147)
!14154 = !DILocation(line: 3189, column: 50, scope: !14147)
!14155 = !DILocation(line: 3190, column: 23, scope: !14156)
!14156 = distinct !DILexicalBlock(scope: !14114, file: !3, line: 3190, column: 6)
!14157 = !DILocation(line: 3190, column: 31, scope: !14156)
!14158 = !DILocation(line: 3190, column: 6, scope: !14156)
!14159 = !DILocation(line: 3190, column: 6, scope: !14114)
!14160 = !DILocation(line: 3190, column: 53, scope: !14156)
!14161 = !DILocation(line: 3190, column: 52, scope: !14156)
!14162 = !DILocation(line: 3190, column: 42, scope: !14156)
!14163 = !DILocation(line: 3190, column: 50, scope: !14156)
!14164 = !DILocation(line: 3191, column: 23, scope: !14165)
!14165 = distinct !DILexicalBlock(scope: !14114, file: !3, line: 3191, column: 6)
!14166 = !DILocation(line: 3191, column: 31, scope: !14165)
!14167 = !DILocation(line: 3191, column: 6, scope: !14165)
!14168 = !DILocation(line: 3191, column: 6, scope: !14114)
!14169 = !DILocation(line: 3191, column: 53, scope: !14165)
!14170 = !DILocation(line: 3191, column: 52, scope: !14165)
!14171 = !DILocation(line: 3191, column: 42, scope: !14165)
!14172 = !DILocation(line: 3191, column: 50, scope: !14165)
!14173 = !DILocation(line: 3192, column: 1, scope: !14114)
!14174 = distinct !DISubprogram(name: "protectedSizeBits", scope: !3, file: !3, line: 2358, type: !14175, scopeLine: 2359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!14175 = !DISubroutineType(types: !14176)
!14176 = !{null, !27, !1773}
!14177 = !DILocalVariable(name: "protectflag", arg: 1, scope: !14174, file: !3, line: 2358, type: !27)
!14178 = !DILocation(line: 2358, column: 37, scope: !14174)
!14179 = !DILocalVariable(name: "size", arg: 2, scope: !14174, file: !3, line: 2358, type: !1773)
!14180 = !DILocation(line: 2358, column: 56, scope: !14174)
!14181 = !DILocation(line: 2360, column: 6, scope: !14182)
!14182 = distinct !DILexicalBlock(scope: !14174, file: !3, line: 2360, column: 6)
!14183 = !DILocation(line: 2360, column: 18, scope: !14182)
!14184 = !DILocation(line: 2360, column: 6, scope: !14174)
!14185 = !DILocation(line: 2361, column: 3, scope: !14182)
!14186 = !DILocation(line: 2361, column: 11, scope: !14182)
!14187 = !DILocation(line: 2362, column: 6, scope: !14188)
!14188 = distinct !DILexicalBlock(scope: !14174, file: !3, line: 2362, column: 6)
!14189 = !DILocation(line: 2362, column: 18, scope: !14188)
!14190 = !DILocation(line: 2362, column: 6, scope: !14174)
!14191 = !DILocation(line: 2363, column: 3, scope: !14188)
!14192 = !DILocation(line: 2363, column: 11, scope: !14188)
!14193 = !DILocation(line: 2364, column: 6, scope: !14194)
!14194 = distinct !DILexicalBlock(scope: !14174, file: !3, line: 2364, column: 6)
!14195 = !DILocation(line: 2364, column: 18, scope: !14194)
!14196 = !DILocation(line: 2364, column: 6, scope: !14174)
!14197 = !DILocation(line: 2365, column: 3, scope: !14194)
!14198 = !DILocation(line: 2365, column: 11, scope: !14194)
!14199 = !DILocation(line: 2366, column: 1, scope: !14174)
!14200 = distinct !DISubprogram(name: "constraintSizeLim", scope: !3, file: !3, line: 2644, type: !14201, scopeLine: 2645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!14201 = !DISubroutineType(types: !14202)
!14202 = !{null, !3841, !3868}
!14203 = !DILocalVariable(name: "t", arg: 1, scope: !14200, file: !3, line: 2644, type: !3841)
!14204 = !DILocation(line: 2644, column: 42, scope: !14200)
!14205 = !DILocalVariable(name: "td", arg: 2, scope: !14200, file: !3, line: 2644, type: !3868)
!14206 = !DILocation(line: 2644, column: 56, scope: !14200)
!14207 = !DILocation(line: 2646, column: 6, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14200, file: !3, line: 2646, column: 6)
!14209 = !DILocation(line: 2646, column: 10, scope: !14208)
!14210 = !DILocation(line: 2646, column: 14, scope: !14208)
!14211 = !DILocation(line: 2646, column: 17, scope: !14208)
!14212 = !DILocation(line: 2646, column: 21, scope: !14208)
!14213 = !DILocation(line: 2646, column: 6, scope: !14200)
!14214 = !DILocalVariable(name: "cti", scope: !14215, file: !3, line: 2647, type: !14216)
!14215 = distinct !DILexicalBlock(scope: !14208, file: !3, line: 2646, column: 26)
!14216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14217, size: 64)
!14217 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintTypeInfo", file: !14218, line: 108, baseType: !14219)
!14218 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_constraint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!14219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintTypeInfo", file: !14218, line: 80, size: 1088, elements: !14220)
!14220 = !{!14221, !14222, !14223, !14224, !14225, !14229, !14238, !14242, !14243, !14248, !14252, !14321}
!14221 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !14219, file: !14218, line: 82, baseType: !27, size: 16)
!14222 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14219, file: !14218, line: 83, baseType: !27, size: 16, offset: 16)
!14223 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14219, file: !14218, line: 84, baseType: !3225, size: 256, offset: 32)
!14224 = !DIDerivedType(tag: DW_TAG_member, name: "structName", scope: !14219, file: !14218, line: 85, baseType: !3225, size: 256, offset: 288)
!14225 = !DIDerivedType(tag: DW_TAG_member, name: "free_data", scope: !14219, file: !14218, line: 89, baseType: !14226, size: 64, offset: 576)
!14226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14227, size: 64)
!14227 = !DISubroutineType(types: !14228)
!14228 = !{null, !3887}
!14229 = !DIDerivedType(tag: DW_TAG_member, name: "id_looper", scope: !14219, file: !14218, line: 91, baseType: !14230, size: 64, offset: 640)
!14230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14231, size: 64)
!14231 = !DISubroutineType(types: !14232)
!14232 = !{null, !3887, !14233, !18}
!14233 = !DIDerivedType(tag: DW_TAG_typedef, name: "ConstraintIDFunc", file: !14218, line: 65, baseType: !14234)
!14234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14235, size: 64)
!14235 = !DISubroutineType(types: !14236)
!14236 = !{null, !3887, !14237, !2769, !18}
!14237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!14238 = !DIDerivedType(tag: DW_TAG_member, name: "copy_data", scope: !14219, file: !14218, line: 93, baseType: !14239, size: 64, offset: 704)
!14239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14240, size: 64)
!14240 = !DISubroutineType(types: !14241)
!14241 = !{null, !3887, !3887}
!14242 = !DIDerivedType(tag: DW_TAG_member, name: "new_data", scope: !14219, file: !14218, line: 95, baseType: !2303, size: 64, offset: 768)
!14243 = !DIDerivedType(tag: DW_TAG_member, name: "get_constraint_targets", scope: !14219, file: !14218, line: 99, baseType: !14244, size: 64, offset: 832)
!14244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14245, size: 64)
!14245 = !DISubroutineType(types: !14246)
!14246 = !{!35, !3887, !14247}
!14247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!14248 = !DIDerivedType(tag: DW_TAG_member, name: "flush_constraint_targets", scope: !14219, file: !14218, line: 101, baseType: !14249, size: 64, offset: 896)
!14249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14250, size: 64)
!14250 = !DISubroutineType(types: !14251)
!14251 = !{null, !3887, !14247, !2769}
!14252 = !DIDerivedType(tag: DW_TAG_member, name: "get_target_matrix", scope: !14219, file: !14218, line: 105, baseType: !14253, size: 64, offset: 960)
!14253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14254, size: 64)
!14254 = !DISubroutineType(types: !14255)
!14255 = !{null, !3887, !14256, !14309, !1727}
!14256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14257, size: 64)
!14257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintOb", file: !14218, line: 50, size: 1280, elements: !14258)
!14258 = !{!14259, !14260, !14261, !14305, !14306, !14307, !14308}
!14259 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !14257, file: !14218, line: 51, baseType: !1861, size: 64)
!14260 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !14257, file: !14218, line: 52, baseType: !1936, size: 64, offset: 64)
!14261 = !DIDerivedType(tag: DW_TAG_member, name: "pchan", scope: !14257, file: !14218, line: 53, baseType: !14262, size: 64, offset: 128)
!14262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14263, size: 64)
!14263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPoseChannel", file: !1645, line: 187, size: 4352, elements: !14264)
!14264 = !{!14265, !14266, !14267, !14268, !14269, !14270, !14271, !14272, !14273, !14274, !14275, !14276, !14277, !14278, !14279, !14280, !14281, !14282, !14283, !14284, !14285, !14286, !14287, !14288, !14289, !14290, !14291, !14292, !14293, !14294, !14295, !14296, !14297, !14298, !14299, !14300, !14301, !14302, !14303, !14304}
!14265 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14263, file: !1645, line: 188, baseType: !14262, size: 64)
!14266 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14263, file: !1645, line: 188, baseType: !14262, size: 64, offset: 64)
!14267 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !14263, file: !1645, line: 190, baseType: !1834, size: 64, offset: 128)
!14268 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !14263, file: !1645, line: 192, baseType: !13, size: 128, offset: 192)
!14269 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14263, file: !1645, line: 193, baseType: !22, size: 512, offset: 320)
!14270 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !14263, file: !1645, line: 195, baseType: !27, size: 16, offset: 832)
!14271 = !DIDerivedType(tag: DW_TAG_member, name: "ikflag", scope: !14263, file: !1645, line: 196, baseType: !27, size: 16, offset: 848)
!14272 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !14263, file: !1645, line: 197, baseType: !27, size: 16, offset: 864)
!14273 = !DIDerivedType(tag: DW_TAG_member, name: "agrp_index", scope: !14263, file: !1645, line: 198, baseType: !27, size: 16, offset: 880)
!14274 = !DIDerivedType(tag: DW_TAG_member, name: "constflag", scope: !14263, file: !1645, line: 199, baseType: !23, size: 8, offset: 896)
!14275 = !DIDerivedType(tag: DW_TAG_member, name: "selectflag", scope: !14263, file: !1645, line: 200, baseType: !23, size: 8, offset: 904)
!14276 = !DIDerivedType(tag: DW_TAG_member, name: "pad0", scope: !14263, file: !1645, line: 201, baseType: !2985, size: 48, offset: 912)
!14277 = !DIDerivedType(tag: DW_TAG_member, name: "bone", scope: !14263, file: !1645, line: 203, baseType: !8555, size: 64, offset: 960)
!14278 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !14263, file: !1645, line: 204, baseType: !14262, size: 64, offset: 1024)
!14279 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !14263, file: !1645, line: 205, baseType: !14262, size: 64, offset: 1088)
!14280 = !DIDerivedType(tag: DW_TAG_member, name: "iktree", scope: !14263, file: !1645, line: 207, baseType: !15, size: 128, offset: 1152)
!14281 = !DIDerivedType(tag: DW_TAG_member, name: "siktree", scope: !14263, file: !1645, line: 208, baseType: !15, size: 128, offset: 1280)
!14282 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !14263, file: !1645, line: 210, baseType: !2023, size: 64, offset: 1408)
!14283 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !14263, file: !1645, line: 211, baseType: !1936, size: 64, offset: 1472)
!14284 = !DIDerivedType(tag: DW_TAG_member, name: "custom_tx", scope: !14263, file: !1645, line: 212, baseType: !14262, size: 64, offset: 1536)
!14285 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !14263, file: !1645, line: 217, baseType: !1987, size: 96, offset: 1600)
!14286 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14263, file: !1645, line: 218, baseType: !1987, size: 96, offset: 1696)
!14287 = !DIDerivedType(tag: DW_TAG_member, name: "eul", scope: !14263, file: !1645, line: 221, baseType: !1987, size: 96, offset: 1792)
!14288 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !14263, file: !1645, line: 222, baseType: !2062, size: 128, offset: 1888)
!14289 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !14263, file: !1645, line: 223, baseType: !1987, size: 96, offset: 2016)
!14290 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !14263, file: !1645, line: 223, baseType: !1727, size: 32, offset: 2112)
!14291 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !14263, file: !1645, line: 224, baseType: !27, size: 16, offset: 2144)
!14292 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !14263, file: !1645, line: 225, baseType: !27, size: 16, offset: 2160)
!14293 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mat", scope: !14263, file: !1645, line: 227, baseType: !2071, size: 512, offset: 2176)
!14294 = !DIDerivedType(tag: DW_TAG_member, name: "pose_mat", scope: !14263, file: !1645, line: 228, baseType: !2071, size: 512, offset: 2688)
!14295 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !14263, file: !1645, line: 230, baseType: !2071, size: 512, offset: 3200)
!14296 = !DIDerivedType(tag: DW_TAG_member, name: "pose_head", scope: !14263, file: !1645, line: 233, baseType: !1987, size: 96, offset: 3712)
!14297 = !DIDerivedType(tag: DW_TAG_member, name: "pose_tail", scope: !14263, file: !1645, line: 234, baseType: !1987, size: 96, offset: 3808)
!14298 = !DIDerivedType(tag: DW_TAG_member, name: "limitmin", scope: !14263, file: !1645, line: 236, baseType: !1987, size: 96, offset: 3904)
!14299 = !DIDerivedType(tag: DW_TAG_member, name: "limitmax", scope: !14263, file: !1645, line: 236, baseType: !1987, size: 96, offset: 4000)
!14300 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness", scope: !14263, file: !1645, line: 237, baseType: !1987, size: 96, offset: 4096)
!14301 = !DIDerivedType(tag: DW_TAG_member, name: "ikstretch", scope: !14263, file: !1645, line: 238, baseType: !1727, size: 32, offset: 4192)
!14302 = !DIDerivedType(tag: DW_TAG_member, name: "ikrotweight", scope: !14263, file: !1645, line: 239, baseType: !1727, size: 32, offset: 4224)
!14303 = !DIDerivedType(tag: DW_TAG_member, name: "iklinweight", scope: !14263, file: !1645, line: 240, baseType: !1727, size: 32, offset: 4256)
!14304 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !14263, file: !1645, line: 242, baseType: !18, size: 64, offset: 4288)
!14305 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !14257, file: !14218, line: 55, baseType: !2071, size: 512, offset: 192)
!14306 = !DIDerivedType(tag: DW_TAG_member, name: "startmat", scope: !14257, file: !14218, line: 56, baseType: !2071, size: 512, offset: 704)
!14307 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !14257, file: !14218, line: 58, baseType: !27, size: 16, offset: 1216)
!14308 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !14257, file: !14218, line: 59, baseType: !27, size: 16, offset: 1232)
!14309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14310, size: 64)
!14310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintTarget", file: !1588, line: 85, size: 1280, elements: !14311)
!14311 = !{!14312, !14313, !14314, !14315, !14316, !14317, !14318, !14319, !14320}
!14312 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14310, file: !1588, line: 86, baseType: !14309, size: 64)
!14313 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14310, file: !1588, line: 86, baseType: !14309, size: 64, offset: 64)
!14314 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !14310, file: !1588, line: 88, baseType: !1936, size: 64, offset: 128)
!14315 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !14310, file: !1588, line: 89, baseType: !22, size: 512, offset: 192)
!14316 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !14310, file: !1588, line: 91, baseType: !2071, size: 512, offset: 704)
!14317 = !DIDerivedType(tag: DW_TAG_member, name: "space", scope: !14310, file: !1588, line: 93, baseType: !27, size: 16, offset: 1216)
!14318 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !14310, file: !1588, line: 94, baseType: !27, size: 16, offset: 1232)
!14319 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !14310, file: !1588, line: 95, baseType: !27, size: 16, offset: 1248)
!14320 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !14310, file: !1588, line: 96, baseType: !27, size: 16, offset: 1264)
!14321 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_constraint", scope: !14219, file: !14218, line: 107, baseType: !14322, size: 64, offset: 1024)
!14322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14323, size: 64)
!14323 = !DISubroutineType(types: !14324)
!14324 = !{null, !3887, !14256, !14247}
!14325 = !DILocation(line: 2647, column: 24, scope: !14215)
!14326 = !DILocation(line: 2647, column: 30, scope: !14215)
!14327 = !DILocalVariable(name: "cob", scope: !14215, file: !3, line: 2648, type: !14328)
!14328 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintOb", file: !14218, line: 60, baseType: !14257)
!14329 = !DILocation(line: 2648, column: 17, scope: !14215)
!14330 = !DILocalVariable(name: "con", scope: !14215, file: !3, line: 2649, type: !14331)
!14331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14332, size: 64)
!14332 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraint", file: !1588, line: 76, baseType: !3888)
!14333 = !DILocation(line: 2649, column: 16, scope: !14215)
!14334 = !DILocalVariable(name: "size_sign", scope: !14215, file: !3, line: 2650, type: !1987)
!14335 = !DILocation(line: 2650, column: 9, scope: !14215)
!14336 = !DILocalVariable(name: "size_abs", scope: !14215, file: !3, line: 2650, type: !1987)
!14337 = !DILocation(line: 2650, column: 23, scope: !14215)
!14338 = !DILocalVariable(name: "i", scope: !14215, file: !3, line: 2651, type: !35)
!14339 = !DILocation(line: 2651, column: 7, scope: !14215)
!14340 = !DILocation(line: 2657, column: 8, scope: !14341)
!14341 = distinct !DILexicalBlock(scope: !14215, file: !3, line: 2657, column: 7)
!14342 = !DILocation(line: 2657, column: 12, scope: !14341)
!14343 = !DILocation(line: 2657, column: 17, scope: !14341)
!14344 = !DILocation(line: 2657, column: 34, scope: !14341)
!14345 = !DILocation(line: 2657, column: 39, scope: !14341)
!14346 = !DILocation(line: 2657, column: 42, scope: !14341)
!14347 = !DILocation(line: 2657, column: 46, scope: !14341)
!14348 = !DILocation(line: 2657, column: 51, scope: !14341)
!14349 = !DILocation(line: 2657, column: 7, scope: !14215)
!14350 = !DILocation(line: 2659, column: 4, scope: !14351)
!14351 = distinct !DILexicalBlock(scope: !14341, file: !3, line: 2657, column: 65)
!14352 = !DILocation(line: 2663, column: 8, scope: !14353)
!14353 = distinct !DILexicalBlock(scope: !14354, file: !3, line: 2663, column: 8)
!14354 = distinct !DILexicalBlock(scope: !14341, file: !3, line: 2661, column: 8)
!14355 = !DILocation(line: 2663, column: 12, scope: !14353)
!14356 = !DILocation(line: 2663, column: 17, scope: !14353)
!14357 = !DILocation(line: 2663, column: 8, scope: !14354)
!14358 = !DILocation(line: 2664, column: 5, scope: !14353)
!14359 = !DILocation(line: 2667, column: 11, scope: !14360)
!14360 = distinct !DILexicalBlock(scope: !14354, file: !3, line: 2667, column: 4)
!14361 = !DILocation(line: 2667, column: 9, scope: !14360)
!14362 = !DILocation(line: 2667, column: 16, scope: !14363)
!14363 = distinct !DILexicalBlock(scope: !14360, file: !3, line: 2667, column: 4)
!14364 = !DILocation(line: 2667, column: 18, scope: !14363)
!14365 = !DILocation(line: 2667, column: 4, scope: !14360)
!14366 = !DILocation(line: 2668, column: 26, scope: !14367)
!14367 = distinct !DILexicalBlock(scope: !14363, file: !3, line: 2667, column: 28)
!14368 = !DILocation(line: 2668, column: 30, scope: !14367)
!14369 = !DILocation(line: 2668, column: 35, scope: !14367)
!14370 = !DILocation(line: 2668, column: 40, scope: !14367)
!14371 = !DILocation(line: 2668, column: 20, scope: !14367)
!14372 = !DILocation(line: 2668, column: 15, scope: !14367)
!14373 = !DILocation(line: 2668, column: 5, scope: !14367)
!14374 = !DILocation(line: 2668, column: 18, scope: !14367)
!14375 = !DILocation(line: 2669, column: 25, scope: !14367)
!14376 = !DILocation(line: 2669, column: 29, scope: !14367)
!14377 = !DILocation(line: 2669, column: 34, scope: !14367)
!14378 = !DILocation(line: 2669, column: 39, scope: !14367)
!14379 = !DILocation(line: 2669, column: 19, scope: !14367)
!14380 = !DILocation(line: 2669, column: 14, scope: !14367)
!14381 = !DILocation(line: 2669, column: 5, scope: !14367)
!14382 = !DILocation(line: 2669, column: 17, scope: !14367)
!14383 = !DILocation(line: 2670, column: 4, scope: !14367)
!14384 = !DILocation(line: 2667, column: 24, scope: !14363)
!14385 = !DILocation(line: 2667, column: 4, scope: !14363)
!14386 = distinct !{!14386, !14365, !14387}
!14387 = !DILocation(line: 2670, column: 4, scope: !14360)
!14388 = !DILocation(line: 2672, column: 21, scope: !14354)
!14389 = !DILocation(line: 2672, column: 17, scope: !14354)
!14390 = !DILocation(line: 2672, column: 29, scope: !14354)
!14391 = !DILocation(line: 2672, column: 4, scope: !14354)
!14392 = !DILocation(line: 2676, column: 14, scope: !14393)
!14393 = distinct !DILexicalBlock(scope: !14215, file: !3, line: 2676, column: 3)
!14394 = !DILocation(line: 2676, column: 18, scope: !14393)
!14395 = !DILocation(line: 2676, column: 12, scope: !14393)
!14396 = !DILocation(line: 2676, column: 8, scope: !14393)
!14397 = !DILocation(line: 2676, column: 23, scope: !14398)
!14398 = distinct !DILexicalBlock(scope: !14393, file: !3, line: 2676, column: 3)
!14399 = !DILocation(line: 2676, column: 3, scope: !14393)
!14400 = !DILocation(line: 2678, column: 8, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14402, file: !3, line: 2678, column: 8)
!14402 = distinct !DILexicalBlock(scope: !14398, file: !3, line: 2676, column: 45)
!14403 = !DILocation(line: 2678, column: 13, scope: !14401)
!14404 = !DILocation(line: 2678, column: 18, scope: !14401)
!14405 = !DILocation(line: 2678, column: 8, scope: !14402)
!14406 = !DILocation(line: 2678, column: 59, scope: !14401)
!14407 = !DILocation(line: 2679, column: 8, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14402, file: !3, line: 2679, column: 8)
!14409 = !DILocation(line: 2679, column: 13, scope: !14408)
!14410 = !DILocation(line: 2679, column: 21, scope: !14408)
!14411 = !DILocation(line: 2679, column: 8, scope: !14402)
!14412 = !DILocation(line: 2679, column: 30, scope: !14408)
!14413 = !DILocation(line: 2682, column: 8, scope: !14414)
!14414 = distinct !DILexicalBlock(scope: !14402, file: !3, line: 2682, column: 8)
!14415 = !DILocation(line: 2682, column: 13, scope: !14414)
!14416 = !DILocation(line: 2682, column: 18, scope: !14414)
!14417 = !DILocation(line: 2682, column: 8, scope: !14402)
!14418 = !DILocalVariable(name: "data", scope: !14419, file: !3, line: 2683, type: !14420)
!14419 = distinct !DILexicalBlock(scope: !14414, file: !3, line: 2682, column: 48)
!14420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14421, size: 64)
!14421 = !DIDerivedType(tag: DW_TAG_typedef, name: "bSizeLimitConstraint", file: !1588, line: 403, baseType: !14422)
!14422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bSizeLimitConstraint", file: !1588, line: 397, size: 224, elements: !14423)
!14423 = !{!14424, !14425, !14426, !14427, !14428, !14429, !14430, !14431}
!14424 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !14422, file: !1588, line: 398, baseType: !1727, size: 32)
!14425 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !14422, file: !1588, line: 398, baseType: !1727, size: 32, offset: 32)
!14426 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !14422, file: !1588, line: 399, baseType: !1727, size: 32, offset: 64)
!14427 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !14422, file: !1588, line: 399, baseType: !1727, size: 32, offset: 96)
!14428 = !DIDerivedType(tag: DW_TAG_member, name: "zmin", scope: !14422, file: !1588, line: 400, baseType: !1727, size: 32, offset: 128)
!14429 = !DIDerivedType(tag: DW_TAG_member, name: "zmax", scope: !14422, file: !1588, line: 400, baseType: !1727, size: 32, offset: 160)
!14430 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !14422, file: !1588, line: 401, baseType: !27, size: 16, offset: 192)
!14431 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !14422, file: !1588, line: 402, baseType: !27, size: 16, offset: 208)
!14432 = !DILocation(line: 2683, column: 27, scope: !14419)
!14433 = !DILocation(line: 2683, column: 34, scope: !14419)
!14434 = !DILocation(line: 2683, column: 39, scope: !14419)
!14435 = !DILocation(line: 2686, column: 10, scope: !14436)
!14436 = distinct !DILexicalBlock(scope: !14419, file: !3, line: 2686, column: 9)
!14437 = !DILocation(line: 2686, column: 16, scope: !14436)
!14438 = !DILocation(line: 2686, column: 22, scope: !14436)
!14439 = !DILocation(line: 2686, column: 41, scope: !14436)
!14440 = !DILocation(line: 2686, column: 9, scope: !14419)
!14441 = !DILocation(line: 2687, column: 6, scope: !14436)
!14442 = !DILocation(line: 2690, column: 9, scope: !14443)
!14443 = distinct !DILexicalBlock(scope: !14419, file: !3, line: 2690, column: 9)
!14444 = !DILocation(line: 2690, column: 14, scope: !14443)
!14445 = !DILocation(line: 2690, column: 23, scope: !14443)
!14446 = !DILocation(line: 2690, column: 9, scope: !14419)
!14447 = !DILocation(line: 2692, column: 22, scope: !14448)
!14448 = distinct !DILexicalBlock(scope: !14443, file: !3, line: 2690, column: 50)
!14449 = !DILocation(line: 2692, column: 18, scope: !14448)
!14450 = !DILocation(line: 2692, column: 30, scope: !14448)
!14451 = !DILocation(line: 2692, column: 34, scope: !14448)
!14452 = !DILocation(line: 2692, column: 43, scope: !14448)
!14453 = !DILocation(line: 2692, column: 39, scope: !14448)
!14454 = !DILocation(line: 2692, column: 6, scope: !14448)
!14455 = !DILocation(line: 2693, column: 5, scope: !14448)
!14456 = !DILocation(line: 2694, column: 14, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14443, file: !3, line: 2694, column: 14)
!14458 = !DILocation(line: 2694, column: 19, scope: !14457)
!14459 = !DILocation(line: 2694, column: 28, scope: !14457)
!14460 = !DILocation(line: 2694, column: 14, scope: !14443)
!14461 = !DILocation(line: 2696, column: 6, scope: !14462)
!14462 = distinct !DILexicalBlock(scope: !14457, file: !3, line: 2694, column: 55)
!14463 = !DILocation(line: 2700, column: 5, scope: !14419)
!14464 = !DILocation(line: 2700, column: 10, scope: !14419)
!14465 = !DILocation(line: 2700, column: 30, scope: !14419)
!14466 = !DILocation(line: 2703, column: 9, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14419, file: !3, line: 2703, column: 9)
!14468 = !DILocation(line: 2703, column: 14, scope: !14467)
!14469 = !DILocation(line: 2703, column: 23, scope: !14467)
!14470 = !DILocation(line: 2703, column: 9, scope: !14419)
!14471 = !DILocation(line: 2705, column: 22, scope: !14472)
!14472 = distinct !DILexicalBlock(scope: !14467, file: !3, line: 2703, column: 50)
!14473 = !DILocation(line: 2705, column: 18, scope: !14472)
!14474 = !DILocation(line: 2705, column: 30, scope: !14472)
!14475 = !DILocation(line: 2705, column: 34, scope: !14472)
!14476 = !DILocation(line: 2705, column: 44, scope: !14472)
!14477 = !DILocation(line: 2705, column: 40, scope: !14472)
!14478 = !DILocation(line: 2705, column: 6, scope: !14472)
!14479 = !DILocation(line: 2706, column: 5, scope: !14472)
!14480 = !DILocation(line: 2707, column: 4, scope: !14419)
!14481 = !DILocation(line: 2708, column: 3, scope: !14402)
!14482 = !DILocation(line: 2676, column: 34, scope: !14398)
!14483 = !DILocation(line: 2676, column: 39, scope: !14398)
!14484 = !DILocation(line: 2676, column: 32, scope: !14398)
!14485 = !DILocation(line: 2676, column: 3, scope: !14398)
!14486 = distinct !{!14486, !14399, !14487}
!14487 = !DILocation(line: 2708, column: 3, scope: !14393)
!14488 = !DILocation(line: 2711, column: 8, scope: !14489)
!14489 = distinct !DILexicalBlock(scope: !14215, file: !3, line: 2711, column: 7)
!14490 = !DILocation(line: 2711, column: 12, scope: !14489)
!14491 = !DILocation(line: 2711, column: 17, scope: !14489)
!14492 = !DILocation(line: 2711, column: 34, scope: !14489)
!14493 = !DILocation(line: 2711, column: 39, scope: !14489)
!14494 = !DILocation(line: 2711, column: 42, scope: !14489)
!14495 = !DILocation(line: 2711, column: 46, scope: !14489)
!14496 = !DILocation(line: 2711, column: 51, scope: !14489)
!14497 = !DILocation(line: 2711, column: 7, scope: !14215)
!14498 = !DILocation(line: 2713, column: 4, scope: !14499)
!14499 = distinct !DILexicalBlock(scope: !14489, file: !3, line: 2711, column: 65)
!14500 = !DILocation(line: 2717, column: 8, scope: !14501)
!14501 = distinct !DILexicalBlock(scope: !14502, file: !3, line: 2717, column: 8)
!14502 = distinct !DILexicalBlock(scope: !14489, file: !3, line: 2715, column: 8)
!14503 = !DILocation(line: 2717, column: 12, scope: !14501)
!14504 = !DILocation(line: 2717, column: 17, scope: !14501)
!14505 = !DILocation(line: 2717, column: 8, scope: !14502)
!14506 = !DILocation(line: 2718, column: 5, scope: !14501)
!14507 = !DILocation(line: 2721, column: 17, scope: !14502)
!14508 = !DILocation(line: 2721, column: 21, scope: !14502)
!14509 = !DILocation(line: 2721, column: 26, scope: !14502)
!14510 = !DILocation(line: 2721, column: 36, scope: !14502)
!14511 = !DILocation(line: 2721, column: 32, scope: !14502)
!14512 = !DILocation(line: 2721, column: 4, scope: !14502)
!14513 = !DILocation(line: 2722, column: 14, scope: !14502)
!14514 = !DILocation(line: 2722, column: 18, scope: !14502)
!14515 = !DILocation(line: 2722, column: 23, scope: !14502)
!14516 = !DILocation(line: 2722, column: 29, scope: !14502)
!14517 = !DILocation(line: 2722, column: 4, scope: !14502)
!14518 = !DILocation(line: 2724, column: 2, scope: !14215)
!14519 = !DILocation(line: 2725, column: 1, scope: !14200)
!14520 = distinct !DISubprogram(name: "protectedTransBits", scope: !3, file: !3, line: 2348, type: !14175, scopeLine: 2349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!14521 = !DILocalVariable(name: "protectflag", arg: 1, scope: !14520, file: !3, line: 2348, type: !27)
!14522 = !DILocation(line: 2348, column: 38, scope: !14520)
!14523 = !DILocalVariable(name: "vec", arg: 2, scope: !14520, file: !3, line: 2348, type: !1773)
!14524 = !DILocation(line: 2348, column: 57, scope: !14520)
!14525 = !DILocation(line: 2350, column: 6, scope: !14526)
!14526 = distinct !DILexicalBlock(scope: !14520, file: !3, line: 2350, column: 6)
!14527 = !DILocation(line: 2350, column: 18, scope: !14526)
!14528 = !DILocation(line: 2350, column: 6, scope: !14520)
!14529 = !DILocation(line: 2351, column: 3, scope: !14526)
!14530 = !DILocation(line: 2351, column: 10, scope: !14526)
!14531 = !DILocation(line: 2352, column: 6, scope: !14532)
!14532 = distinct !DILexicalBlock(scope: !14520, file: !3, line: 2352, column: 6)
!14533 = !DILocation(line: 2352, column: 18, scope: !14532)
!14534 = !DILocation(line: 2352, column: 6, scope: !14520)
!14535 = !DILocation(line: 2353, column: 3, scope: !14532)
!14536 = !DILocation(line: 2353, column: 10, scope: !14532)
!14537 = !DILocation(line: 2354, column: 6, scope: !14538)
!14538 = distinct !DILexicalBlock(scope: !14520, file: !3, line: 2354, column: 6)
!14539 = !DILocation(line: 2354, column: 18, scope: !14538)
!14540 = !DILocation(line: 2354, column: 6, scope: !14520)
!14541 = !DILocation(line: 2355, column: 3, scope: !14538)
!14542 = !DILocation(line: 2355, column: 10, scope: !14538)
!14543 = !DILocation(line: 2356, column: 1, scope: !14520)
!14544 = distinct !DISubprogram(name: "constraintTransLim", scope: !3, file: !3, line: 2474, type: !14201, scopeLine: 2475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!14545 = !DILocalVariable(name: "t", arg: 1, scope: !14544, file: !3, line: 2474, type: !3841)
!14546 = !DILocation(line: 2474, column: 43, scope: !14544)
!14547 = !DILocalVariable(name: "td", arg: 2, scope: !14544, file: !3, line: 2474, type: !3868)
!14548 = !DILocation(line: 2474, column: 57, scope: !14544)
!14549 = !DILocation(line: 2476, column: 6, scope: !14550)
!14550 = distinct !DILexicalBlock(scope: !14544, file: !3, line: 2476, column: 6)
!14551 = !DILocation(line: 2476, column: 10, scope: !14550)
!14552 = !DILocation(line: 2476, column: 6, scope: !14544)
!14553 = !DILocalVariable(name: "ctiLoc", scope: !14554, file: !3, line: 2477, type: !14216)
!14554 = distinct !DILexicalBlock(scope: !14550, file: !3, line: 2476, column: 15)
!14555 = !DILocation(line: 2477, column: 24, scope: !14554)
!14556 = !DILocation(line: 2477, column: 33, scope: !14554)
!14557 = !DILocalVariable(name: "ctiDist", scope: !14554, file: !3, line: 2478, type: !14216)
!14558 = !DILocation(line: 2478, column: 24, scope: !14554)
!14559 = !DILocation(line: 2478, column: 34, scope: !14554)
!14560 = !DILocalVariable(name: "cob", scope: !14554, file: !3, line: 2480, type: !14328)
!14561 = !DILocation(line: 2480, column: 17, scope: !14554)
!14562 = !DILocalVariable(name: "con", scope: !14554, file: !3, line: 2481, type: !14331)
!14563 = !DILocation(line: 2481, column: 16, scope: !14554)
!14564 = !DILocalVariable(name: "ctime", scope: !14554, file: !3, line: 2482, type: !1727)
!14565 = !DILocation(line: 2482, column: 9, scope: !14554)
!14566 = !DILocation(line: 2482, column: 25, scope: !14554)
!14567 = !DILocation(line: 2482, column: 28, scope: !14554)
!14568 = !DILocation(line: 2482, column: 35, scope: !14554)
!14569 = !DILocation(line: 2482, column: 37, scope: !14554)
!14570 = !DILocation(line: 2482, column: 17, scope: !14554)
!14571 = !DILocation(line: 2488, column: 15, scope: !14554)
!14572 = !DILocation(line: 2488, column: 11, scope: !14554)
!14573 = !DILocation(line: 2488, column: 3, scope: !14554)
!14574 = !DILocation(line: 2489, column: 18, scope: !14554)
!14575 = !DILocation(line: 2489, column: 14, scope: !14554)
!14576 = !DILocation(line: 2489, column: 29, scope: !14554)
!14577 = !DILocation(line: 2489, column: 33, scope: !14554)
!14578 = !DILocation(line: 2489, column: 3, scope: !14554)
!14579 = !DILocation(line: 2492, column: 14, scope: !14580)
!14580 = distinct !DILexicalBlock(scope: !14554, file: !3, line: 2492, column: 3)
!14581 = !DILocation(line: 2492, column: 18, scope: !14580)
!14582 = !DILocation(line: 2492, column: 12, scope: !14580)
!14583 = !DILocation(line: 2492, column: 8, scope: !14580)
!14584 = !DILocation(line: 2492, column: 23, scope: !14585)
!14585 = distinct !DILexicalBlock(scope: !14580, file: !3, line: 2492, column: 3)
!14586 = !DILocation(line: 2492, column: 3, scope: !14580)
!14587 = !DILocalVariable(name: "cti", scope: !14588, file: !3, line: 2493, type: !14216)
!14588 = distinct !DILexicalBlock(scope: !14585, file: !3, line: 2492, column: 45)
!14589 = !DILocation(line: 2493, column: 25, scope: !14588)
!14590 = !DILocalVariable(name: "targets", scope: !14588, file: !3, line: 2494, type: !13)
!14591 = !DILocation(line: 2494, column: 13, scope: !14588)
!14592 = !DILocation(line: 2497, column: 8, scope: !14593)
!14593 = distinct !DILexicalBlock(scope: !14588, file: !3, line: 2497, column: 8)
!14594 = !DILocation(line: 2497, column: 13, scope: !14593)
!14595 = !DILocation(line: 2497, column: 18, scope: !14593)
!14596 = !DILocation(line: 2497, column: 8, scope: !14588)
!14597 = !DILocation(line: 2497, column: 59, scope: !14593)
!14598 = !DILocation(line: 2498, column: 8, scope: !14599)
!14599 = distinct !DILexicalBlock(scope: !14588, file: !3, line: 2498, column: 8)
!14600 = !DILocation(line: 2498, column: 13, scope: !14599)
!14601 = !DILocation(line: 2498, column: 21, scope: !14599)
!14602 = !DILocation(line: 2498, column: 8, scope: !14588)
!14603 = !DILocation(line: 2498, column: 30, scope: !14599)
!14604 = !DILocation(line: 2501, column: 8, scope: !14605)
!14605 = distinct !DILexicalBlock(scope: !14588, file: !3, line: 2501, column: 8)
!14606 = !DILocation(line: 2501, column: 13, scope: !14605)
!14607 = !DILocation(line: 2501, column: 18, scope: !14605)
!14608 = !DILocation(line: 2501, column: 8, scope: !14588)
!14609 = !DILocalVariable(name: "data", scope: !14610, file: !3, line: 2502, type: !14611)
!14610 = distinct !DILexicalBlock(scope: !14605, file: !3, line: 2501, column: 47)
!14611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14612, size: 64)
!14612 = !DIDerivedType(tag: DW_TAG_typedef, name: "bLocLimitConstraint", file: !1588, line: 385, baseType: !14613)
!14613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bLocLimitConstraint", file: !1588, line: 379, size: 224, elements: !14614)
!14614 = !{!14615, !14616, !14617, !14618, !14619, !14620, !14621, !14622}
!14615 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !14613, file: !1588, line: 380, baseType: !1727, size: 32)
!14616 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !14613, file: !1588, line: 380, baseType: !1727, size: 32, offset: 32)
!14617 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !14613, file: !1588, line: 381, baseType: !1727, size: 32, offset: 64)
!14618 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !14613, file: !1588, line: 381, baseType: !1727, size: 32, offset: 96)
!14619 = !DIDerivedType(tag: DW_TAG_member, name: "zmin", scope: !14613, file: !1588, line: 382, baseType: !1727, size: 32, offset: 128)
!14620 = !DIDerivedType(tag: DW_TAG_member, name: "zmax", scope: !14613, file: !1588, line: 382, baseType: !1727, size: 32, offset: 160)
!14621 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !14613, file: !1588, line: 383, baseType: !27, size: 16, offset: 192)
!14622 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !14613, file: !1588, line: 384, baseType: !27, size: 16, offset: 208)
!14623 = !DILocation(line: 2502, column: 26, scope: !14610)
!14624 = !DILocation(line: 2502, column: 33, scope: !14610)
!14625 = !DILocation(line: 2502, column: 38, scope: !14610)
!14626 = !DILocation(line: 2504, column: 10, scope: !14627)
!14627 = distinct !DILexicalBlock(scope: !14610, file: !3, line: 2504, column: 9)
!14628 = !DILocation(line: 2504, column: 16, scope: !14627)
!14629 = !DILocation(line: 2504, column: 22, scope: !14627)
!14630 = !DILocation(line: 2504, column: 41, scope: !14627)
!14631 = !DILocation(line: 2504, column: 9, scope: !14610)
!14632 = !DILocation(line: 2505, column: 6, scope: !14627)
!14633 = !DILocation(line: 2506, column: 11, scope: !14610)
!14634 = !DILocation(line: 2506, column: 9, scope: !14610)
!14635 = !DILocation(line: 2507, column: 4, scope: !14610)
!14636 = !DILocation(line: 2508, column: 13, scope: !14637)
!14637 = distinct !DILexicalBlock(scope: !14605, file: !3, line: 2508, column: 13)
!14638 = !DILocation(line: 2508, column: 18, scope: !14637)
!14639 = !DILocation(line: 2508, column: 23, scope: !14637)
!14640 = !DILocation(line: 2508, column: 13, scope: !14605)
!14641 = !DILocalVariable(name: "data", scope: !14642, file: !3, line: 2509, type: !14643)
!14642 = distinct !DILexicalBlock(scope: !14637, file: !3, line: 2508, column: 53)
!14643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14644, size: 64)
!14644 = !DIDerivedType(tag: DW_TAG_typedef, name: "bDistLimitConstraint", file: !1588, line: 416, baseType: !14645)
!14645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bDistLimitConstraint", file: !1588, line: 406, size: 704, elements: !14646)
!14646 = !{!14647, !14648, !14649, !14650, !14651, !14652, !14653}
!14647 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !14645, file: !1588, line: 407, baseType: !1936, size: 64)
!14648 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !14645, file: !1588, line: 408, baseType: !22, size: 512, offset: 64)
!14649 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !14645, file: !1588, line: 410, baseType: !1727, size: 32, offset: 576)
!14650 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !14645, file: !1588, line: 411, baseType: !1727, size: 32, offset: 608)
!14651 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !14645, file: !1588, line: 413, baseType: !27, size: 16, offset: 640)
!14652 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !14645, file: !1588, line: 414, baseType: !27, size: 16, offset: 656)
!14653 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !14645, file: !1588, line: 415, baseType: !35, size: 32, offset: 672)
!14654 = !DILocation(line: 2509, column: 27, scope: !14642)
!14655 = !DILocation(line: 2509, column: 34, scope: !14642)
!14656 = !DILocation(line: 2509, column: 39, scope: !14642)
!14657 = !DILocation(line: 2511, column: 10, scope: !14658)
!14658 = distinct !DILexicalBlock(scope: !14642, file: !3, line: 2511, column: 9)
!14659 = !DILocation(line: 2511, column: 16, scope: !14658)
!14660 = !DILocation(line: 2511, column: 21, scope: !14658)
!14661 = !DILocation(line: 2511, column: 44, scope: !14658)
!14662 = !DILocation(line: 2511, column: 9, scope: !14642)
!14663 = !DILocation(line: 2512, column: 6, scope: !14658)
!14664 = !DILocation(line: 2513, column: 11, scope: !14642)
!14665 = !DILocation(line: 2513, column: 9, scope: !14642)
!14666 = !DILocation(line: 2514, column: 4, scope: !14642)
!14667 = !DILocation(line: 2516, column: 8, scope: !14668)
!14668 = distinct !DILexicalBlock(scope: !14588, file: !3, line: 2516, column: 8)
!14669 = !DILocation(line: 2516, column: 8, scope: !14588)
!14670 = !DILocation(line: 2518, column: 9, scope: !14671)
!14671 = distinct !DILexicalBlock(scope: !14672, file: !3, line: 2518, column: 9)
!14672 = distinct !DILexicalBlock(scope: !14668, file: !3, line: 2516, column: 13)
!14673 = !DILocation(line: 2518, column: 14, scope: !14671)
!14674 = !DILocation(line: 2518, column: 23, scope: !14671)
!14675 = !DILocation(line: 2518, column: 9, scope: !14672)
!14676 = !DILocation(line: 2520, column: 22, scope: !14677)
!14677 = distinct !DILexicalBlock(scope: !14671, file: !3, line: 2518, column: 50)
!14678 = !DILocation(line: 2520, column: 18, scope: !14677)
!14679 = !DILocation(line: 2520, column: 30, scope: !14677)
!14680 = !DILocation(line: 2520, column: 34, scope: !14677)
!14681 = !DILocation(line: 2520, column: 43, scope: !14677)
!14682 = !DILocation(line: 2520, column: 39, scope: !14677)
!14683 = !DILocation(line: 2520, column: 6, scope: !14677)
!14684 = !DILocation(line: 2521, column: 5, scope: !14677)
!14685 = !DILocation(line: 2522, column: 14, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14671, file: !3, line: 2522, column: 14)
!14687 = !DILocation(line: 2522, column: 19, scope: !14686)
!14688 = !DILocation(line: 2522, column: 28, scope: !14686)
!14689 = !DILocation(line: 2522, column: 14, scope: !14671)
!14690 = !DILocation(line: 2524, column: 6, scope: !14691)
!14691 = distinct !DILexicalBlock(scope: !14686, file: !3, line: 2522, column: 55)
!14692 = !DILocation(line: 2528, column: 44, scope: !14672)
!14693 = !DILocation(line: 2528, column: 65, scope: !14672)
!14694 = !DILocation(line: 2528, column: 5, scope: !14672)
!14695 = !DILocation(line: 2531, column: 5, scope: !14672)
!14696 = !DILocation(line: 2531, column: 10, scope: !14672)
!14697 = !DILocation(line: 2531, column: 30, scope: !14672)
!14698 = !DILocation(line: 2534, column: 9, scope: !14699)
!14699 = distinct !DILexicalBlock(scope: !14672, file: !3, line: 2534, column: 9)
!14700 = !DILocation(line: 2534, column: 14, scope: !14699)
!14701 = !DILocation(line: 2534, column: 23, scope: !14699)
!14702 = !DILocation(line: 2534, column: 9, scope: !14672)
!14703 = !DILocation(line: 2536, column: 22, scope: !14704)
!14704 = distinct !DILexicalBlock(scope: !14699, file: !3, line: 2534, column: 50)
!14705 = !DILocation(line: 2536, column: 18, scope: !14704)
!14706 = !DILocation(line: 2536, column: 30, scope: !14704)
!14707 = !DILocation(line: 2536, column: 34, scope: !14704)
!14708 = !DILocation(line: 2536, column: 44, scope: !14704)
!14709 = !DILocation(line: 2536, column: 40, scope: !14704)
!14710 = !DILocation(line: 2536, column: 6, scope: !14704)
!14711 = !DILocation(line: 2537, column: 5, scope: !14704)
!14712 = !DILocation(line: 2540, column: 5, scope: !14672)
!14713 = !DILocation(line: 2541, column: 4, scope: !14672)
!14714 = !DILocation(line: 2542, column: 3, scope: !14588)
!14715 = !DILocation(line: 2492, column: 34, scope: !14585)
!14716 = !DILocation(line: 2492, column: 39, scope: !14585)
!14717 = !DILocation(line: 2492, column: 32, scope: !14585)
!14718 = !DILocation(line: 2492, column: 3, scope: !14585)
!14719 = distinct !{!14719, !14586, !14720}
!14720 = !DILocation(line: 2542, column: 3, scope: !14580)
!14721 = !DILocation(line: 2545, column: 14, scope: !14554)
!14722 = !DILocation(line: 2545, column: 18, scope: !14554)
!14723 = !DILocation(line: 2545, column: 27, scope: !14554)
!14724 = !DILocation(line: 2545, column: 23, scope: !14554)
!14725 = !DILocation(line: 2545, column: 3, scope: !14554)
!14726 = !DILocation(line: 2546, column: 2, scope: !14554)
!14727 = !DILocation(line: 2547, column: 1, scope: !14544)
!14728 = distinct !DISubprogram(name: "tx_vec_sign_flip", scope: !3, file: !3, line: 3169, type: !14729, scopeLine: 3170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!14729 = !DISubroutineType(types: !14730)
!14730 = !{!35, !3980, !3980}
!14731 = !DILocalVariable(name: "a", arg: 1, scope: !14728, file: !3, line: 3169, type: !3980)
!14732 = !DILocation(line: 3169, column: 45, scope: !14728)
!14733 = !DILocalVariable(name: "b", arg: 2, scope: !14728, file: !3, line: 3169, type: !3980)
!14734 = !DILocation(line: 3169, column: 63, scope: !14728)
!14735 = !DILocation(line: 3171, column: 19, scope: !14728)
!14736 = !DILocation(line: 3171, column: 11, scope: !14728)
!14737 = !DILocation(line: 3171, column: 35, scope: !14728)
!14738 = !DILocation(line: 3171, column: 27, scope: !14728)
!14739 = !DILocation(line: 3171, column: 25, scope: !14728)
!14740 = !DILocation(line: 3171, column: 42, scope: !14728)
!14741 = !DILocation(line: 3171, column: 47, scope: !14728)
!14742 = !DILocation(line: 3172, column: 19, scope: !14728)
!14743 = !DILocation(line: 3172, column: 11, scope: !14728)
!14744 = !DILocation(line: 3172, column: 35, scope: !14728)
!14745 = !DILocation(line: 3172, column: 27, scope: !14728)
!14746 = !DILocation(line: 3172, column: 25, scope: !14728)
!14747 = !DILocation(line: 3172, column: 42, scope: !14728)
!14748 = !DILocation(line: 3172, column: 47, scope: !14728)
!14749 = !DILocation(line: 3173, column: 19, scope: !14728)
!14750 = !DILocation(line: 3173, column: 11, scope: !14728)
!14751 = !DILocation(line: 3173, column: 35, scope: !14728)
!14752 = !DILocation(line: 3173, column: 27, scope: !14728)
!14753 = !DILocation(line: 3173, column: 25, scope: !14728)
!14754 = !DILocation(line: 3173, column: 42, scope: !14728)
!14755 = !DILocation(line: 3171, column: 2, scope: !14728)
!14756 = distinct !DISubprogram(name: "tx_sign", scope: !3, file: !3, line: 3165, type: !14757, scopeLine: 3166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!14757 = !DISubroutineType(types: !14758)
!14758 = !{!35, !3981}
!14759 = !DILocalVariable(name: "a", arg: 1, scope: !14756, file: !3, line: 3165, type: !3981)
!14760 = !DILocation(line: 3165, column: 36, scope: !14756)
!14761 = !DILocation(line: 3167, column: 10, scope: !14756)
!14762 = !DILocation(line: 3167, column: 12, scope: !14756)
!14763 = !DILocation(line: 3167, column: 33, scope: !14756)
!14764 = !DILocation(line: 3167, column: 35, scope: !14756)
!14765 = !DILocation(line: 3167, column: 2, scope: !14756)
!14766 = distinct !DISubprogram(name: "signf", scope: !7601, file: !7601, line: 256, type: !14767, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!14767 = !DISubroutineType(types: !14768)
!14768 = !{!1727, !1727}
!14769 = !DILocalVariable(name: "f", arg: 1, scope: !14766, file: !7601, line: 256, type: !1727)
!14770 = !DILocation(line: 256, column: 27, scope: !14766)
!14771 = !DILocation(line: 258, column: 10, scope: !14766)
!14772 = !DILocation(line: 258, column: 12, scope: !14766)
!14773 = !DILocation(line: 258, column: 9, scope: !14766)
!14774 = !DILocation(line: 258, column: 2, scope: !14766)
!14775 = distinct !DISubprogram(name: "mul_v3_v3", scope: !4885, file: !4885, line: 412, type: !5238, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!14776 = !DILocalVariable(name: "r", arg: 1, scope: !14775, file: !4885, line: 412, type: !1773)
!14777 = !DILocation(line: 412, column: 30, scope: !14775)
!14778 = !DILocalVariable(name: "a", arg: 2, scope: !14775, file: !4885, line: 412, type: !3980)
!14779 = !DILocation(line: 412, column: 48, scope: !14775)
!14780 = !DILocation(line: 414, column: 10, scope: !14775)
!14781 = !DILocation(line: 414, column: 2, scope: !14775)
!14782 = !DILocation(line: 414, column: 7, scope: !14775)
!14783 = !DILocation(line: 415, column: 10, scope: !14775)
!14784 = !DILocation(line: 415, column: 2, scope: !14775)
!14785 = !DILocation(line: 415, column: 7, scope: !14775)
!14786 = !DILocation(line: 416, column: 10, scope: !14775)
!14787 = !DILocation(line: 416, column: 2, scope: !14775)
!14788 = !DILocation(line: 416, column: 7, scope: !14775)
!14789 = !DILocation(line: 417, column: 1, scope: !14775)
!14790 = distinct !DISubprogram(name: "applySkinResize", scope: !3, file: !3, line: 3412, type: !12679, scopeLine: 3413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!14791 = !DILocalVariable(name: "t", arg: 1, scope: !14790, file: !3, line: 3412, type: !3841)
!14792 = !DILocation(line: 3412, column: 40, scope: !14790)
!14793 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !14790, file: !3, line: 3412, type: !3857)
!14794 = !DILocation(line: 3412, column: 53, scope: !14790)
!14795 = !DILocalVariable(name: "td", scope: !14790, file: !3, line: 3414, type: !3868)
!14796 = !DILocation(line: 3414, column: 13, scope: !14790)
!14797 = !DILocalVariable(name: "size", scope: !14790, file: !3, line: 3415, type: !1987)
!14798 = !DILocation(line: 3415, column: 8, scope: !14790)
!14799 = !DILocalVariable(name: "mat", scope: !14790, file: !3, line: 3415, type: !3881)
!14800 = !DILocation(line: 3415, column: 17, scope: !14790)
!14801 = !DILocalVariable(name: "ratio", scope: !14790, file: !3, line: 3416, type: !1727)
!14802 = !DILocation(line: 3416, column: 8, scope: !14790)
!14803 = !DILocalVariable(name: "i", scope: !14790, file: !3, line: 3417, type: !35)
!14804 = !DILocation(line: 3417, column: 6, scope: !14790)
!14805 = !DILocalVariable(name: "str", scope: !14790, file: !3, line: 3418, type: !2366)
!14806 = !DILocation(line: 3418, column: 7, scope: !14790)
!14807 = !DILocation(line: 3420, column: 10, scope: !14790)
!14808 = !DILocation(line: 3420, column: 13, scope: !14790)
!14809 = !DILocation(line: 3420, column: 8, scope: !14790)
!14810 = !DILocation(line: 3421, column: 32, scope: !14790)
!14811 = !DILocation(line: 3421, column: 22, scope: !14790)
!14812 = !DILocation(line: 3421, column: 30, scope: !14790)
!14813 = !DILocation(line: 3421, column: 12, scope: !14790)
!14814 = !DILocation(line: 3421, column: 20, scope: !14790)
!14815 = !DILocation(line: 3421, column: 2, scope: !14790)
!14816 = !DILocation(line: 3421, column: 10, scope: !14790)
!14817 = !DILocation(line: 3423, column: 20, scope: !14790)
!14818 = !DILocation(line: 3423, column: 23, scope: !14790)
!14819 = !DILocation(line: 3423, column: 2, scope: !14790)
!14820 = !DILocation(line: 3425, column: 21, scope: !14821)
!14821 = distinct !DILexicalBlock(scope: !14790, file: !3, line: 3425, column: 6)
!14822 = !DILocation(line: 3425, column: 24, scope: !14821)
!14823 = !DILocation(line: 3425, column: 29, scope: !14821)
!14824 = !DILocation(line: 3425, column: 6, scope: !14821)
!14825 = !DILocation(line: 3425, column: 6, scope: !14790)
!14826 = !DILocation(line: 3426, column: 22, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14821, file: !3, line: 3425, column: 36)
!14828 = !DILocation(line: 3426, column: 25, scope: !14827)
!14829 = !DILocation(line: 3426, column: 3, scope: !14827)
!14830 = !DILocation(line: 3427, column: 2, scope: !14827)
!14831 = !DILocation(line: 3429, column: 16, scope: !14790)
!14832 = !DILocation(line: 3429, column: 19, scope: !14790)
!14833 = !DILocation(line: 3429, column: 2, scope: !14790)
!14834 = !DILocation(line: 3431, column: 6, scope: !14835)
!14835 = distinct !DILexicalBlock(scope: !14790, file: !3, line: 3431, column: 6)
!14836 = !DILocation(line: 3431, column: 9, scope: !14835)
!14837 = !DILocation(line: 3431, column: 14, scope: !14835)
!14838 = !DILocation(line: 3431, column: 6, scope: !14790)
!14839 = !DILocation(line: 3432, column: 14, scope: !14840)
!14840 = distinct !DILexicalBlock(scope: !14835, file: !3, line: 3431, column: 30)
!14841 = !DILocation(line: 3432, column: 20, scope: !14840)
!14842 = !DILocation(line: 3432, column: 23, scope: !14840)
!14843 = !DILocation(line: 3432, column: 3, scope: !14840)
!14844 = !DILocation(line: 3433, column: 2, scope: !14840)
!14845 = !DILocation(line: 3435, column: 13, scope: !14790)
!14846 = !DILocation(line: 3435, column: 16, scope: !14790)
!14847 = !DILocation(line: 3435, column: 24, scope: !14790)
!14848 = !DILocation(line: 3435, column: 2, scope: !14790)
!14849 = !DILocation(line: 3437, column: 15, scope: !14790)
!14850 = !DILocation(line: 3437, column: 20, scope: !14790)
!14851 = !DILocation(line: 3437, column: 2, scope: !14790)
!14852 = !DILocation(line: 3439, column: 15, scope: !14790)
!14853 = !DILocation(line: 3439, column: 18, scope: !14790)
!14854 = !DILocation(line: 3439, column: 24, scope: !14790)
!14855 = !DILocation(line: 3439, column: 2, scope: !14790)
!14856 = !DILocation(line: 3441, column: 9, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14790, file: !3, line: 3441, column: 2)
!14858 = !DILocation(line: 3441, column: 19, scope: !14857)
!14859 = !DILocation(line: 3441, column: 22, scope: !14857)
!14860 = !DILocation(line: 3441, column: 17, scope: !14857)
!14861 = !DILocation(line: 3441, column: 7, scope: !14857)
!14862 = !DILocation(line: 3441, column: 28, scope: !14863)
!14863 = distinct !DILexicalBlock(scope: !14857, file: !3, line: 3441, column: 2)
!14864 = !DILocation(line: 3441, column: 32, scope: !14863)
!14865 = !DILocation(line: 3441, column: 35, scope: !14863)
!14866 = !DILocation(line: 3441, column: 30, scope: !14863)
!14867 = !DILocation(line: 3441, column: 2, scope: !14857)
!14868 = !DILocalVariable(name: "tmat", scope: !14869, file: !3, line: 3442, type: !3881)
!14869 = distinct !DILexicalBlock(scope: !14863, file: !3, line: 3441, column: 53)
!14870 = !DILocation(line: 3442, column: 9, scope: !14869)
!14871 = !DILocalVariable(name: "smat", scope: !14869, file: !3, line: 3442, type: !3881)
!14872 = !DILocation(line: 3442, column: 21, scope: !14869)
!14873 = !DILocalVariable(name: "fsize", scope: !14869, file: !3, line: 3443, type: !1987)
!14874 = !DILocation(line: 3443, column: 9, scope: !14869)
!14875 = !DILocation(line: 3445, column: 7, scope: !14876)
!14876 = distinct !DILexicalBlock(scope: !14869, file: !3, line: 3445, column: 7)
!14877 = !DILocation(line: 3445, column: 11, scope: !14876)
!14878 = !DILocation(line: 3445, column: 16, scope: !14876)
!14879 = !DILocation(line: 3445, column: 7, scope: !14869)
!14880 = !DILocation(line: 3446, column: 4, scope: !14876)
!14881 = !DILocation(line: 3448, column: 7, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14869, file: !3, line: 3448, column: 7)
!14883 = !DILocation(line: 3448, column: 11, scope: !14882)
!14884 = !DILocation(line: 3448, column: 16, scope: !14882)
!14885 = !DILocation(line: 3448, column: 7, scope: !14869)
!14886 = !DILocation(line: 3449, column: 4, scope: !14882)
!14887 = !DILocation(line: 3451, column: 7, scope: !14888)
!14888 = distinct !DILexicalBlock(scope: !14869, file: !3, line: 3451, column: 7)
!14889 = !DILocation(line: 3451, column: 10, scope: !14888)
!14890 = !DILocation(line: 3451, column: 15, scope: !14888)
!14891 = !DILocation(line: 3451, column: 7, scope: !14869)
!14892 = !DILocation(line: 3452, column: 16, scope: !14893)
!14893 = distinct !DILexicalBlock(scope: !14888, file: !3, line: 3451, column: 25)
!14894 = !DILocation(line: 3452, column: 22, scope: !14893)
!14895 = !DILocation(line: 3452, column: 27, scope: !14893)
!14896 = !DILocation(line: 3452, column: 31, scope: !14893)
!14897 = !DILocation(line: 3452, column: 4, scope: !14893)
!14898 = !DILocation(line: 3453, column: 16, scope: !14893)
!14899 = !DILocation(line: 3453, column: 22, scope: !14893)
!14900 = !DILocation(line: 3453, column: 26, scope: !14893)
!14901 = !DILocation(line: 3453, column: 32, scope: !14893)
!14902 = !DILocation(line: 3453, column: 4, scope: !14893)
!14903 = !DILocation(line: 3454, column: 3, scope: !14893)
!14904 = !DILocation(line: 3456, column: 15, scope: !14905)
!14905 = distinct !DILexicalBlock(scope: !14888, file: !3, line: 3455, column: 8)
!14906 = !DILocation(line: 3456, column: 21, scope: !14905)
!14907 = !DILocation(line: 3456, column: 4, scope: !14905)
!14908 = !DILocation(line: 3459, column: 7, scope: !14909)
!14909 = distinct !DILexicalBlock(scope: !14869, file: !3, line: 3459, column: 7)
!14910 = !DILocation(line: 3459, column: 10, scope: !14909)
!14911 = !DILocation(line: 3459, column: 14, scope: !14909)
!14912 = !DILocation(line: 3459, column: 7, scope: !14869)
!14913 = !DILocation(line: 3460, column: 4, scope: !14914)
!14914 = distinct !DILexicalBlock(scope: !14909, file: !3, line: 3459, column: 25)
!14915 = !DILocation(line: 3460, column: 7, scope: !14914)
!14916 = !DILocation(line: 3460, column: 11, scope: !14914)
!14917 = !DILocation(line: 3460, column: 21, scope: !14914)
!14918 = !DILocation(line: 3460, column: 30, scope: !14914)
!14919 = !DILocation(line: 3461, column: 3, scope: !14914)
!14920 = !DILocation(line: 3463, column: 16, scope: !14869)
!14921 = !DILocation(line: 3463, column: 23, scope: !14869)
!14922 = !DILocation(line: 3463, column: 3, scope: !14869)
!14923 = !DILocation(line: 3464, column: 16, scope: !14869)
!14924 = !DILocation(line: 3464, column: 20, scope: !14869)
!14925 = !DILocation(line: 3464, column: 25, scope: !14869)
!14926 = !DILocation(line: 3464, column: 42, scope: !14869)
!14927 = !DILocation(line: 3464, column: 51, scope: !14869)
!14928 = !DILocation(line: 3464, column: 58, scope: !14869)
!14929 = !DILocation(line: 3464, column: 62, scope: !14869)
!14930 = !DILocation(line: 3464, column: 56, scope: !14869)
!14931 = !DILocation(line: 3464, column: 39, scope: !14869)
!14932 = !DILocation(line: 3464, column: 34, scope: !14869)
!14933 = !DILocation(line: 3464, column: 3, scope: !14869)
!14934 = !DILocation(line: 3464, column: 7, scope: !14869)
!14935 = !DILocation(line: 3464, column: 14, scope: !14869)
!14936 = !DILocation(line: 3465, column: 16, scope: !14869)
!14937 = !DILocation(line: 3465, column: 20, scope: !14869)
!14938 = !DILocation(line: 3465, column: 25, scope: !14869)
!14939 = !DILocation(line: 3465, column: 42, scope: !14869)
!14940 = !DILocation(line: 3465, column: 51, scope: !14869)
!14941 = !DILocation(line: 3465, column: 58, scope: !14869)
!14942 = !DILocation(line: 3465, column: 62, scope: !14869)
!14943 = !DILocation(line: 3465, column: 56, scope: !14869)
!14944 = !DILocation(line: 3465, column: 39, scope: !14869)
!14945 = !DILocation(line: 3465, column: 34, scope: !14869)
!14946 = !DILocation(line: 3465, column: 3, scope: !14869)
!14947 = !DILocation(line: 3465, column: 7, scope: !14869)
!14948 = !DILocation(line: 3465, column: 14, scope: !14869)
!14949 = !DILocation(line: 3466, column: 2, scope: !14869)
!14950 = !DILocation(line: 3441, column: 43, scope: !14863)
!14951 = !DILocation(line: 3441, column: 49, scope: !14863)
!14952 = !DILocation(line: 3441, column: 2, scope: !14863)
!14953 = distinct !{!14953, !14867, !14954}
!14954 = !DILocation(line: 3466, column: 2, scope: !14857)
!14955 = !DILocation(line: 3468, column: 13, scope: !14790)
!14956 = !DILocation(line: 3468, column: 2, scope: !14790)
!14957 = !DILocation(line: 3470, column: 22, scope: !14790)
!14958 = !DILocation(line: 3470, column: 25, scope: !14790)
!14959 = !DILocation(line: 3470, column: 29, scope: !14790)
!14960 = !DILocation(line: 3470, column: 2, scope: !14790)
!14961 = !DILocation(line: 3471, column: 1, scope: !14790)
!14962 = distinct !DISubprogram(name: "applyToSphere", scope: !3, file: !3, line: 3512, type: !12679, scopeLine: 3513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!14963 = !DILocalVariable(name: "t", arg: 1, scope: !14962, file: !3, line: 3512, type: !3841)
!14964 = !DILocation(line: 3512, column: 38, scope: !14962)
!14965 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !14962, file: !3, line: 3512, type: !3857)
!14966 = !DILocation(line: 3512, column: 51, scope: !14962)
!14967 = !DILocalVariable(name: "vec", scope: !14962, file: !3, line: 3514, type: !1987)
!14968 = !DILocation(line: 3514, column: 8, scope: !14962)
!14969 = !DILocalVariable(name: "ratio", scope: !14962, file: !3, line: 3515, type: !1727)
!14970 = !DILocation(line: 3515, column: 8, scope: !14962)
!14971 = !DILocalVariable(name: "radius", scope: !14962, file: !3, line: 3515, type: !1727)
!14972 = !DILocation(line: 3515, column: 15, scope: !14962)
!14973 = !DILocalVariable(name: "i", scope: !14962, file: !3, line: 3516, type: !35)
!14974 = !DILocation(line: 3516, column: 6, scope: !14962)
!14975 = !DILocalVariable(name: "str", scope: !14962, file: !3, line: 3517, type: !2366)
!14976 = !DILocation(line: 3517, column: 7, scope: !14962)
!14977 = !DILocalVariable(name: "td", scope: !14962, file: !3, line: 3518, type: !3868)
!14978 = !DILocation(line: 3518, column: 13, scope: !14962)
!14979 = !DILocation(line: 3518, column: 18, scope: !14962)
!14980 = !DILocation(line: 3518, column: 21, scope: !14962)
!14981 = !DILocation(line: 3520, column: 10, scope: !14962)
!14982 = !DILocation(line: 3520, column: 13, scope: !14962)
!14983 = !DILocation(line: 3520, column: 8, scope: !14962)
!14984 = !DILocation(line: 3522, column: 20, scope: !14962)
!14985 = !DILocation(line: 3522, column: 2, scope: !14962)
!14986 = !DILocation(line: 3524, column: 17, scope: !14962)
!14987 = !DILocation(line: 3524, column: 20, scope: !14962)
!14988 = !DILocation(line: 3524, column: 2, scope: !14962)
!14989 = !DILocation(line: 3526, column: 6, scope: !14990)
!14990 = distinct !DILexicalBlock(scope: !14962, file: !3, line: 3526, column: 6)
!14991 = !DILocation(line: 3526, column: 12, scope: !14990)
!14992 = !DILocation(line: 3526, column: 6, scope: !14962)
!14993 = !DILocation(line: 3527, column: 9, scope: !14990)
!14994 = !DILocation(line: 3527, column: 3, scope: !14990)
!14995 = !DILocation(line: 3528, column: 11, scope: !14996)
!14996 = distinct !DILexicalBlock(scope: !14990, file: !3, line: 3528, column: 11)
!14997 = !DILocation(line: 3528, column: 17, scope: !14996)
!14998 = !DILocation(line: 3528, column: 11, scope: !14990)
!14999 = !DILocation(line: 3529, column: 9, scope: !14996)
!15000 = !DILocation(line: 3529, column: 3, scope: !14996)
!15001 = !DILocation(line: 3531, column: 17, scope: !14962)
!15002 = !DILocation(line: 3531, column: 2, scope: !14962)
!15003 = !DILocation(line: 3531, column: 5, scope: !14962)
!15004 = !DILocation(line: 3531, column: 15, scope: !14962)
!15005 = !DILocation(line: 3534, column: 19, scope: !15006)
!15006 = distinct !DILexicalBlock(scope: !14962, file: !3, line: 3534, column: 6)
!15007 = !DILocation(line: 3534, column: 22, scope: !15006)
!15008 = !DILocation(line: 3534, column: 6, scope: !15006)
!15009 = !DILocation(line: 3534, column: 6, scope: !14962)
!15010 = !DILocalVariable(name: "c", scope: !15011, file: !3, line: 3535, type: !22)
!15011 = distinct !DILexicalBlock(scope: !15006, file: !3, line: 3534, column: 28)
!15012 = !DILocation(line: 3535, column: 8, scope: !15011)
!15013 = !DILocation(line: 3537, column: 20, scope: !15011)
!15014 = !DILocation(line: 3537, column: 23, scope: !15011)
!15015 = !DILocation(line: 3537, column: 29, scope: !15011)
!15016 = !DILocation(line: 3537, column: 33, scope: !15011)
!15017 = !DILocation(line: 3537, column: 36, scope: !15011)
!15018 = !DILocation(line: 3537, column: 43, scope: !15011)
!15019 = !DILocation(line: 3537, column: 3, scope: !15011)
!15020 = !DILocation(line: 3539, column: 16, scope: !15011)
!15021 = !DILocation(line: 3539, column: 63, scope: !15011)
!15022 = !DILocation(line: 3539, column: 66, scope: !15011)
!15023 = !DILocation(line: 3539, column: 69, scope: !15011)
!15024 = !DILocation(line: 3539, column: 3, scope: !15011)
!15025 = !DILocation(line: 3540, column: 2, scope: !15011)
!15026 = !DILocation(line: 3543, column: 16, scope: !15027)
!15027 = distinct !DILexicalBlock(scope: !15006, file: !3, line: 3541, column: 7)
!15028 = !DILocation(line: 3543, column: 65, scope: !15027)
!15029 = !DILocation(line: 3543, column: 72, scope: !15027)
!15030 = !DILocation(line: 3543, column: 75, scope: !15027)
!15031 = !DILocation(line: 3543, column: 3, scope: !15027)
!15032 = !DILocation(line: 3547, column: 9, scope: !15033)
!15033 = distinct !DILexicalBlock(scope: !14962, file: !3, line: 3547, column: 2)
!15034 = !DILocation(line: 3547, column: 7, scope: !15033)
!15035 = !DILocation(line: 3547, column: 14, scope: !15036)
!15036 = distinct !DILexicalBlock(scope: !15033, file: !3, line: 3547, column: 2)
!15037 = !DILocation(line: 3547, column: 18, scope: !15036)
!15038 = !DILocation(line: 3547, column: 21, scope: !15036)
!15039 = !DILocation(line: 3547, column: 16, scope: !15036)
!15040 = !DILocation(line: 3547, column: 2, scope: !15033)
!15041 = !DILocalVariable(name: "tratio", scope: !15042, file: !3, line: 3548, type: !1727)
!15042 = distinct !DILexicalBlock(scope: !15036, file: !3, line: 3547, column: 39)
!15043 = !DILocation(line: 3548, column: 9, scope: !15042)
!15044 = !DILocation(line: 3549, column: 7, scope: !15045)
!15045 = distinct !DILexicalBlock(scope: !15042, file: !3, line: 3549, column: 7)
!15046 = !DILocation(line: 3549, column: 11, scope: !15045)
!15047 = !DILocation(line: 3549, column: 16, scope: !15045)
!15048 = !DILocation(line: 3549, column: 7, scope: !15042)
!15049 = !DILocation(line: 3550, column: 4, scope: !15045)
!15050 = !DILocation(line: 3552, column: 7, scope: !15051)
!15051 = distinct !DILexicalBlock(scope: !15042, file: !3, line: 3552, column: 7)
!15052 = !DILocation(line: 3552, column: 11, scope: !15051)
!15053 = !DILocation(line: 3552, column: 16, scope: !15051)
!15054 = !DILocation(line: 3552, column: 7, scope: !15042)
!15055 = !DILocation(line: 3553, column: 4, scope: !15051)
!15056 = !DILocation(line: 3555, column: 15, scope: !15042)
!15057 = !DILocation(line: 3555, column: 20, scope: !15042)
!15058 = !DILocation(line: 3555, column: 24, scope: !15042)
!15059 = !DILocation(line: 3555, column: 30, scope: !15042)
!15060 = !DILocation(line: 3555, column: 33, scope: !15042)
!15061 = !DILocation(line: 3555, column: 3, scope: !15042)
!15062 = !DILocation(line: 3557, column: 25, scope: !15042)
!15063 = !DILocation(line: 3557, column: 12, scope: !15042)
!15064 = !DILocation(line: 3557, column: 10, scope: !15042)
!15065 = !DILocation(line: 3559, column: 12, scope: !15042)
!15066 = !DILocation(line: 3559, column: 20, scope: !15042)
!15067 = !DILocation(line: 3559, column: 24, scope: !15042)
!15068 = !DILocation(line: 3559, column: 18, scope: !15042)
!15069 = !DILocation(line: 3559, column: 10, scope: !15042)
!15070 = !DILocation(line: 3561, column: 13, scope: !15042)
!15071 = !DILocation(line: 3561, column: 18, scope: !15042)
!15072 = !DILocation(line: 3561, column: 35, scope: !15042)
!15073 = !DILocation(line: 3561, column: 33, scope: !15042)
!15074 = !DILocation(line: 3561, column: 25, scope: !15042)
!15075 = !DILocation(line: 3561, column: 45, scope: !15042)
!15076 = !DILocation(line: 3561, column: 48, scope: !15042)
!15077 = !DILocation(line: 3561, column: 54, scope: !15042)
!15078 = !DILocation(line: 3561, column: 52, scope: !15042)
!15079 = !DILocation(line: 3561, column: 43, scope: !15042)
!15080 = !DILocation(line: 3561, column: 3, scope: !15042)
!15081 = !DILocation(line: 3563, column: 15, scope: !15042)
!15082 = !DILocation(line: 3563, column: 19, scope: !15042)
!15083 = !DILocation(line: 3563, column: 24, scope: !15042)
!15084 = !DILocation(line: 3563, column: 27, scope: !15042)
!15085 = !DILocation(line: 3563, column: 35, scope: !15042)
!15086 = !DILocation(line: 3563, column: 3, scope: !15042)
!15087 = !DILocation(line: 3564, column: 2, scope: !15042)
!15088 = !DILocation(line: 3547, column: 29, scope: !15036)
!15089 = !DILocation(line: 3547, column: 35, scope: !15036)
!15090 = !DILocation(line: 3547, column: 2, scope: !15036)
!15091 = distinct !{!15091, !15040, !15092}
!15092 = !DILocation(line: 3564, column: 2, scope: !15033)
!15093 = !DILocation(line: 3567, column: 13, scope: !14962)
!15094 = !DILocation(line: 3567, column: 2, scope: !14962)
!15095 = !DILocation(line: 3569, column: 22, scope: !14962)
!15096 = !DILocation(line: 3569, column: 25, scope: !14962)
!15097 = !DILocation(line: 3569, column: 29, scope: !14962)
!15098 = !DILocation(line: 3569, column: 2, scope: !14962)
!15099 = !DILocation(line: 3570, column: 1, scope: !14962)
!15100 = distinct !DISubprogram(name: "applyRotation", scope: !3, file: !3, line: 3872, type: !12679, scopeLine: 3873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!15101 = !DILocalVariable(name: "t", arg: 1, scope: !15100, file: !3, line: 3872, type: !3841)
!15102 = !DILocation(line: 3872, column: 38, scope: !15100)
!15103 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !15100, file: !3, line: 3872, type: !3857)
!15104 = !DILocation(line: 3872, column: 51, scope: !15100)
!15105 = !DILocalVariable(name: "str", scope: !15100, file: !3, line: 3874, type: !2366)
!15106 = !DILocation(line: 3874, column: 7, scope: !15100)
!15107 = !DILocalVariable(name: "ofs", scope: !15100, file: !3, line: 3875, type: !13646)
!15108 = !DILocation(line: 3875, column: 9, scope: !15100)
!15109 = !DILocalVariable(name: "final", scope: !15100, file: !3, line: 3877, type: !1727)
!15110 = !DILocation(line: 3877, column: 8, scope: !15100)
!15111 = !DILocation(line: 3879, column: 10, scope: !15100)
!15112 = !DILocation(line: 3879, column: 13, scope: !15100)
!15113 = !DILocation(line: 3879, column: 8, scope: !15100)
!15114 = !DILocation(line: 3881, column: 20, scope: !15100)
!15115 = !DILocation(line: 3881, column: 2, scope: !15100)
!15116 = !DILocation(line: 3883, column: 7, scope: !15117)
!15117 = distinct !DILexicalBlock(scope: !15100, file: !3, line: 3883, column: 6)
!15118 = !DILocation(line: 3883, column: 10, scope: !15117)
!15119 = !DILocation(line: 3883, column: 14, scope: !15117)
!15120 = !DILocation(line: 3883, column: 19, scope: !15117)
!15121 = !DILocation(line: 3883, column: 32, scope: !15117)
!15122 = !DILocation(line: 3883, column: 35, scope: !15117)
!15123 = !DILocation(line: 3883, column: 38, scope: !15117)
!15124 = !DILocation(line: 3883, column: 42, scope: !15117)
!15125 = !DILocation(line: 3883, column: 6, scope: !15100)
!15126 = !DILocation(line: 3884, column: 3, scope: !15127)
!15127 = distinct !DILexicalBlock(scope: !15117, file: !3, line: 3883, column: 52)
!15128 = !DILocation(line: 3884, column: 6, scope: !15127)
!15129 = !DILocation(line: 3884, column: 10, scope: !15127)
!15130 = !DILocation(line: 3884, column: 19, scope: !15127)
!15131 = !DILocation(line: 3884, column: 28, scope: !15127)
!15132 = !DILocation(line: 3884, column: 31, scope: !15127)
!15133 = !DILocation(line: 3885, column: 2, scope: !15127)
!15134 = !DILocation(line: 3888, column: 14, scope: !15135)
!15135 = distinct !DILexicalBlock(scope: !15117, file: !3, line: 3886, column: 7)
!15136 = !DILocation(line: 3888, column: 17, scope: !15135)
!15137 = !DILocation(line: 3888, column: 23, scope: !15135)
!15138 = !DILocation(line: 3888, column: 26, scope: !15135)
!15139 = !DILocation(line: 3888, column: 3, scope: !15135)
!15140 = !DILocation(line: 3891, column: 16, scope: !15100)
!15141 = !DILocation(line: 3891, column: 2, scope: !15100)
!15142 = !DILocation(line: 3893, column: 21, scope: !15143)
!15143 = distinct !DILexicalBlock(scope: !15100, file: !3, line: 3893, column: 6)
!15144 = !DILocation(line: 3893, column: 24, scope: !15143)
!15145 = !DILocation(line: 3893, column: 6, scope: !15143)
!15146 = !DILocation(line: 3893, column: 6, scope: !15100)
!15147 = !DILocation(line: 3895, column: 26, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15143, file: !3, line: 3893, column: 38)
!15149 = !DILocation(line: 3895, column: 11, scope: !15148)
!15150 = !DILocation(line: 3895, column: 9, scope: !15148)
!15151 = !DILocation(line: 3896, column: 2, scope: !15148)
!15152 = !DILocation(line: 3898, column: 19, scope: !15153)
!15153 = distinct !DILexicalBlock(scope: !15100, file: !3, line: 3898, column: 6)
!15154 = !DILocation(line: 3898, column: 22, scope: !15153)
!15155 = !DILocation(line: 3898, column: 6, scope: !15153)
!15156 = !DILocation(line: 3898, column: 6, scope: !15100)
!15157 = !DILocalVariable(name: "c", scope: !15158, file: !3, line: 3899, type: !22)
!15158 = distinct !DILexicalBlock(scope: !15153, file: !3, line: 3898, column: 28)
!15159 = !DILocation(line: 3899, column: 8, scope: !15158)
!15160 = !DILocation(line: 3901, column: 20, scope: !15158)
!15161 = !DILocation(line: 3901, column: 23, scope: !15158)
!15162 = !DILocation(line: 3901, column: 29, scope: !15158)
!15163 = !DILocation(line: 3901, column: 33, scope: !15158)
!15164 = !DILocation(line: 3901, column: 36, scope: !15158)
!15165 = !DILocation(line: 3901, column: 43, scope: !15158)
!15166 = !DILocation(line: 3901, column: 3, scope: !15158)
!15167 = !DILocation(line: 3903, column: 23, scope: !15158)
!15168 = !DILocation(line: 3903, column: 29, scope: !15158)
!15169 = !DILocation(line: 3903, column: 27, scope: !15158)
!15170 = !DILocation(line: 3903, column: 49, scope: !15158)
!15171 = !DILocation(line: 3903, column: 47, scope: !15158)
!15172 = !DILocation(line: 3903, column: 80, scope: !15158)
!15173 = !DILocation(line: 3903, column: 86, scope: !15158)
!15174 = !DILocation(line: 3903, column: 89, scope: !15158)
!15175 = !DILocation(line: 3903, column: 93, scope: !15158)
!15176 = !DILocation(line: 3903, column: 99, scope: !15158)
!15177 = !DILocation(line: 3903, column: 102, scope: !15158)
!15178 = !DILocation(line: 3903, column: 10, scope: !15158)
!15179 = !DILocation(line: 3903, column: 7, scope: !15158)
!15180 = !DILocation(line: 3904, column: 2, scope: !15158)
!15181 = !DILocation(line: 3906, column: 23, scope: !15182)
!15182 = distinct !DILexicalBlock(scope: !15153, file: !3, line: 3905, column: 7)
!15183 = !DILocation(line: 3906, column: 29, scope: !15182)
!15184 = !DILocation(line: 3906, column: 27, scope: !15182)
!15185 = !DILocation(line: 3906, column: 49, scope: !15182)
!15186 = !DILocation(line: 3906, column: 47, scope: !15182)
!15187 = !DILocation(line: 3907, column: 23, scope: !15182)
!15188 = !DILocation(line: 3907, column: 40, scope: !15182)
!15189 = !DILocation(line: 3907, column: 43, scope: !15182)
!15190 = !DILocation(line: 3907, column: 47, scope: !15182)
!15191 = !DILocation(line: 3907, column: 53, scope: !15182)
!15192 = !DILocation(line: 3907, column: 56, scope: !15182)
!15193 = !DILocation(line: 3906, column: 10, scope: !15182)
!15194 = !DILocation(line: 3906, column: 7, scope: !15182)
!15195 = !DILocation(line: 3910, column: 6, scope: !15196)
!15196 = distinct !DILexicalBlock(scope: !15100, file: !3, line: 3910, column: 6)
!15197 = !DILocation(line: 3910, column: 9, scope: !15196)
!15198 = !DILocation(line: 3910, column: 14, scope: !15196)
!15199 = !DILocation(line: 3910, column: 6, scope: !15100)
!15200 = !DILocation(line: 3911, column: 23, scope: !15201)
!15201 = distinct !DILexicalBlock(scope: !15196, file: !3, line: 3910, column: 33)
!15202 = !DILocation(line: 3911, column: 29, scope: !15201)
!15203 = !DILocation(line: 3911, column: 27, scope: !15201)
!15204 = !DILocation(line: 3911, column: 49, scope: !15201)
!15205 = !DILocation(line: 3911, column: 47, scope: !15201)
!15206 = !DILocation(line: 3911, column: 90, scope: !15201)
!15207 = !DILocation(line: 3911, column: 93, scope: !15201)
!15208 = !DILocation(line: 3911, column: 10, scope: !15201)
!15209 = !DILocation(line: 3911, column: 7, scope: !15201)
!15210 = !DILocation(line: 3912, column: 2, scope: !15201)
!15211 = !DILocation(line: 3914, column: 17, scope: !15100)
!15212 = !DILocation(line: 3914, column: 2, scope: !15100)
!15213 = !DILocation(line: 3914, column: 5, scope: !15100)
!15214 = !DILocation(line: 3914, column: 15, scope: !15100)
!15215 = !DILocation(line: 3916, column: 21, scope: !15100)
!15216 = !DILocation(line: 3916, column: 24, scope: !15100)
!15217 = !DILocation(line: 3916, column: 31, scope: !15100)
!15218 = !DILocation(line: 3916, column: 34, scope: !15100)
!15219 = !DILocation(line: 3916, column: 2, scope: !15100)
!15220 = !DILocation(line: 3918, column: 13, scope: !15100)
!15221 = !DILocation(line: 3918, column: 2, scope: !15100)
!15222 = !DILocation(line: 3920, column: 22, scope: !15100)
!15223 = !DILocation(line: 3920, column: 25, scope: !15100)
!15224 = !DILocation(line: 3920, column: 29, scope: !15100)
!15225 = !DILocation(line: 3920, column: 2, scope: !15100)
!15226 = !DILocation(line: 3921, column: 1, scope: !15100)
!15227 = distinct !DISubprogram(name: "applyRotationValue", scope: !3, file: !3, line: 3844, type: !15228, scopeLine: 3845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!15228 = !DISubroutineType(types: !15229)
!15229 = !{null, !3841, !1727, !1773}
!15230 = !DILocalVariable(name: "t", arg: 1, scope: !15227, file: !3, line: 3844, type: !3841)
!15231 = !DILocation(line: 3844, column: 43, scope: !15227)
!15232 = !DILocalVariable(name: "angle", arg: 2, scope: !15227, file: !3, line: 3844, type: !1727)
!15233 = !DILocation(line: 3844, column: 52, scope: !15227)
!15234 = !DILocalVariable(name: "axis", arg: 3, scope: !15227, file: !3, line: 3844, type: !1773)
!15235 = !DILocation(line: 3844, column: 65, scope: !15227)
!15236 = !DILocalVariable(name: "td", scope: !15227, file: !3, line: 3846, type: !3868)
!15237 = !DILocation(line: 3846, column: 13, scope: !15227)
!15238 = !DILocation(line: 3846, column: 18, scope: !15227)
!15239 = !DILocation(line: 3846, column: 21, scope: !15227)
!15240 = !DILocalVariable(name: "mat", scope: !15227, file: !3, line: 3847, type: !3881)
!15241 = !DILocation(line: 3847, column: 8, scope: !15227)
!15242 = !DILocalVariable(name: "i", scope: !15227, file: !3, line: 3848, type: !35)
!15243 = !DILocation(line: 3848, column: 6, scope: !15227)
!15244 = !DILocation(line: 3850, column: 32, scope: !15227)
!15245 = !DILocation(line: 3850, column: 37, scope: !15227)
!15246 = !DILocation(line: 3850, column: 43, scope: !15227)
!15247 = !DILocation(line: 3850, column: 2, scope: !15227)
!15248 = !DILocation(line: 3852, column: 9, scope: !15249)
!15249 = distinct !DILexicalBlock(scope: !15227, file: !3, line: 3852, column: 2)
!15250 = !DILocation(line: 3852, column: 7, scope: !15249)
!15251 = !DILocation(line: 3852, column: 14, scope: !15252)
!15252 = distinct !DILexicalBlock(scope: !15249, file: !3, line: 3852, column: 2)
!15253 = !DILocation(line: 3852, column: 18, scope: !15252)
!15254 = !DILocation(line: 3852, column: 21, scope: !15252)
!15255 = !DILocation(line: 3852, column: 16, scope: !15252)
!15256 = !DILocation(line: 3852, column: 2, scope: !15249)
!15257 = !DILocation(line: 3854, column: 7, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !15259, file: !3, line: 3854, column: 7)
!15259 = distinct !DILexicalBlock(scope: !15252, file: !3, line: 3852, column: 39)
!15260 = !DILocation(line: 3854, column: 11, scope: !15258)
!15261 = !DILocation(line: 3854, column: 16, scope: !15258)
!15262 = !DILocation(line: 3854, column: 7, scope: !15259)
!15263 = !DILocation(line: 3855, column: 4, scope: !15258)
!15264 = !DILocation(line: 3857, column: 7, scope: !15265)
!15265 = distinct !DILexicalBlock(scope: !15259, file: !3, line: 3857, column: 7)
!15266 = !DILocation(line: 3857, column: 11, scope: !15265)
!15267 = !DILocation(line: 3857, column: 16, scope: !15265)
!15268 = !DILocation(line: 3857, column: 7, scope: !15259)
!15269 = !DILocation(line: 3858, column: 4, scope: !15265)
!15270 = !DILocation(line: 3860, column: 7, scope: !15271)
!15271 = distinct !DILexicalBlock(scope: !15259, file: !3, line: 3860, column: 7)
!15272 = !DILocation(line: 3860, column: 10, scope: !15271)
!15273 = !DILocation(line: 3860, column: 14, scope: !15271)
!15274 = !DILocation(line: 3860, column: 7, scope: !15259)
!15275 = !DILocation(line: 3861, column: 4, scope: !15276)
!15276 = distinct !DILexicalBlock(scope: !15271, file: !3, line: 3860, column: 24)
!15277 = !DILocation(line: 3861, column: 7, scope: !15276)
!15278 = !DILocation(line: 3861, column: 11, scope: !15276)
!15279 = !DILocation(line: 3861, column: 20, scope: !15276)
!15280 = !DILocation(line: 3861, column: 23, scope: !15276)
!15281 = !DILocation(line: 3861, column: 27, scope: !15276)
!15282 = !DILocation(line: 3862, column: 34, scope: !15276)
!15283 = !DILocation(line: 3862, column: 39, scope: !15276)
!15284 = !DILocation(line: 3862, column: 45, scope: !15276)
!15285 = !DILocation(line: 3862, column: 53, scope: !15276)
!15286 = !DILocation(line: 3862, column: 57, scope: !15276)
!15287 = !DILocation(line: 3862, column: 51, scope: !15276)
!15288 = !DILocation(line: 3862, column: 4, scope: !15276)
!15289 = !DILocation(line: 3863, column: 3, scope: !15276)
!15290 = !DILocation(line: 3864, column: 12, scope: !15291)
!15291 = distinct !DILexicalBlock(scope: !15271, file: !3, line: 3864, column: 12)
!15292 = !DILocation(line: 3864, column: 15, scope: !15291)
!15293 = !DILocation(line: 3864, column: 20, scope: !15291)
!15294 = !DILocation(line: 3864, column: 12, scope: !15271)
!15295 = !DILocation(line: 3865, column: 34, scope: !15296)
!15296 = distinct !DILexicalBlock(scope: !15291, file: !3, line: 3864, column: 35)
!15297 = !DILocation(line: 3865, column: 39, scope: !15296)
!15298 = !DILocation(line: 3865, column: 45, scope: !15296)
!15299 = !DILocation(line: 3865, column: 53, scope: !15296)
!15300 = !DILocation(line: 3865, column: 57, scope: !15296)
!15301 = !DILocation(line: 3865, column: 51, scope: !15296)
!15302 = !DILocation(line: 3865, column: 4, scope: !15296)
!15303 = !DILocation(line: 3866, column: 3, scope: !15296)
!15304 = !DILocation(line: 3868, column: 19, scope: !15259)
!15305 = !DILocation(line: 3868, column: 22, scope: !15259)
!15306 = !DILocation(line: 3868, column: 26, scope: !15259)
!15307 = !DILocation(line: 3868, column: 31, scope: !15259)
!15308 = !DILocation(line: 3868, column: 34, scope: !15259)
!15309 = !DILocation(line: 3868, column: 3, scope: !15259)
!15310 = !DILocation(line: 3869, column: 2, scope: !15259)
!15311 = !DILocation(line: 3852, column: 29, scope: !15252)
!15312 = !DILocation(line: 3852, column: 35, scope: !15252)
!15313 = !DILocation(line: 3852, column: 2, scope: !15252)
!15314 = distinct !{!15314, !15256, !15315}
!15315 = !DILocation(line: 3869, column: 2, scope: !15249)
!15316 = !DILocation(line: 3870, column: 1, scope: !15227)
!15317 = distinct !DISubprogram(name: "ElementRotation", scope: !3, file: !3, line: 3622, type: !15318, scopeLine: 3623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!15318 = !DISubroutineType(types: !15319)
!15319 = !{null, !3841, !3868, !3830, !27}
!15320 = !DILocalVariable(name: "t", arg: 1, scope: !15317, file: !3, line: 3622, type: !3841)
!15321 = !DILocation(line: 3622, column: 40, scope: !15317)
!15322 = !DILocalVariable(name: "td", arg: 2, scope: !15317, file: !3, line: 3622, type: !3868)
!15323 = !DILocation(line: 3622, column: 54, scope: !15317)
!15324 = !DILocalVariable(name: "mat", arg: 3, scope: !15317, file: !3, line: 3622, type: !3830)
!15325 = !DILocation(line: 3622, column: 64, scope: !15317)
!15326 = !DILocalVariable(name: "around", arg: 4, scope: !15317, file: !3, line: 3622, type: !27)
!15327 = !DILocation(line: 3622, column: 81, scope: !15317)
!15328 = !DILocalVariable(name: "vec", scope: !15317, file: !3, line: 3624, type: !1987)
!15329 = !DILocation(line: 3624, column: 8, scope: !15317)
!15330 = !DILocalVariable(name: "totmat", scope: !15317, file: !3, line: 3624, type: !3881)
!15331 = !DILocation(line: 3624, column: 16, scope: !15317)
!15332 = !DILocalVariable(name: "smat", scope: !15317, file: !3, line: 3624, type: !3881)
!15333 = !DILocation(line: 3624, column: 30, scope: !15317)
!15334 = !DILocalVariable(name: "eul", scope: !15317, file: !3, line: 3625, type: !1987)
!15335 = !DILocation(line: 3625, column: 8, scope: !15317)
!15336 = !DILocalVariable(name: "fmat", scope: !15317, file: !3, line: 3625, type: !3881)
!15337 = !DILocation(line: 3625, column: 16, scope: !15317)
!15338 = !DILocalVariable(name: "quat", scope: !15317, file: !3, line: 3625, type: !2062)
!15339 = !DILocation(line: 3625, column: 28, scope: !15317)
!15340 = !DILocalVariable(name: "center", scope: !15317, file: !3, line: 3626, type: !3980)
!15341 = !DILocation(line: 3626, column: 15, scope: !15317)
!15342 = !DILocation(line: 3629, column: 35, scope: !15343)
!15343 = distinct !DILexicalBlock(scope: !15317, file: !3, line: 3629, column: 6)
!15344 = !DILocation(line: 3629, column: 38, scope: !15343)
!15345 = !DILocation(line: 3629, column: 6, scope: !15343)
!15346 = !DILocation(line: 3629, column: 6, scope: !15317)
!15347 = !DILocation(line: 3630, column: 12, scope: !15348)
!15348 = distinct !DILexicalBlock(scope: !15343, file: !3, line: 3629, column: 47)
!15349 = !DILocation(line: 3630, column: 16, scope: !15348)
!15350 = !DILocation(line: 3630, column: 10, scope: !15348)
!15351 = !DILocation(line: 3631, column: 2, scope: !15348)
!15352 = !DILocation(line: 3633, column: 12, scope: !15353)
!15353 = distinct !DILexicalBlock(scope: !15343, file: !3, line: 3632, column: 7)
!15354 = !DILocation(line: 3633, column: 15, scope: !15353)
!15355 = !DILocation(line: 3633, column: 10, scope: !15353)
!15356 = !DILocation(line: 3636, column: 6, scope: !15357)
!15357 = distinct !DILexicalBlock(scope: !15317, file: !3, line: 3636, column: 6)
!15358 = !DILocation(line: 3636, column: 9, scope: !15357)
!15359 = !DILocation(line: 3636, column: 14, scope: !15357)
!15360 = !DILocation(line: 3636, column: 6, scope: !15317)
!15361 = !DILocation(line: 3637, column: 15, scope: !15362)
!15362 = distinct !DILexicalBlock(scope: !15357, file: !3, line: 3636, column: 26)
!15363 = !DILocation(line: 3637, column: 23, scope: !15362)
!15364 = !DILocation(line: 3637, column: 28, scope: !15362)
!15365 = !DILocation(line: 3637, column: 32, scope: !15362)
!15366 = !DILocation(line: 3637, column: 3, scope: !15362)
!15367 = !DILocation(line: 3638, column: 15, scope: !15362)
!15368 = !DILocation(line: 3638, column: 21, scope: !15362)
!15369 = !DILocation(line: 3638, column: 25, scope: !15362)
!15370 = !DILocation(line: 3638, column: 31, scope: !15362)
!15371 = !DILocation(line: 3638, column: 3, scope: !15362)
!15372 = !DILocation(line: 3640, column: 15, scope: !15362)
!15373 = !DILocation(line: 3640, column: 20, scope: !15362)
!15374 = !DILocation(line: 3640, column: 24, scope: !15362)
!15375 = !DILocation(line: 3640, column: 30, scope: !15362)
!15376 = !DILocation(line: 3640, column: 3, scope: !15362)
!15377 = !DILocation(line: 3641, column: 13, scope: !15362)
!15378 = !DILocation(line: 3641, column: 19, scope: !15362)
!15379 = !DILocation(line: 3641, column: 3, scope: !15362)
!15380 = !DILocation(line: 3643, column: 15, scope: !15362)
!15381 = !DILocation(line: 3643, column: 19, scope: !15362)
!15382 = !DILocation(line: 3643, column: 24, scope: !15362)
!15383 = !DILocation(line: 3643, column: 29, scope: !15362)
!15384 = !DILocation(line: 3643, column: 3, scope: !15362)
!15385 = !DILocation(line: 3645, column: 15, scope: !15362)
!15386 = !DILocation(line: 3645, column: 20, scope: !15362)
!15387 = !DILocation(line: 3645, column: 24, scope: !15362)
!15388 = !DILocation(line: 3645, column: 29, scope: !15362)
!15389 = !DILocation(line: 3645, column: 33, scope: !15362)
!15390 = !DILocation(line: 3645, column: 3, scope: !15362)
!15391 = !DILocation(line: 3646, column: 22, scope: !15362)
!15392 = !DILocation(line: 3646, column: 26, scope: !15362)
!15393 = !DILocation(line: 3646, column: 39, scope: !15362)
!15394 = !DILocation(line: 3646, column: 3, scope: !15362)
!15395 = !DILocation(line: 3647, column: 15, scope: !15362)
!15396 = !DILocation(line: 3647, column: 19, scope: !15362)
!15397 = !DILocation(line: 3647, column: 24, scope: !15362)
!15398 = !DILocation(line: 3647, column: 28, scope: !15362)
!15399 = !DILocation(line: 3647, column: 34, scope: !15362)
!15400 = !DILocation(line: 3647, column: 3, scope: !15362)
!15401 = !DILocation(line: 3650, column: 7, scope: !15402)
!15402 = distinct !DILexicalBlock(scope: !15362, file: !3, line: 3650, column: 7)
!15403 = !DILocation(line: 3650, column: 11, scope: !15402)
!15404 = !DILocation(line: 3650, column: 16, scope: !15402)
!15405 = !DILocation(line: 3650, column: 7, scope: !15362)
!15406 = !DILocation(line: 3651, column: 4, scope: !15407)
!15407 = distinct !DILexicalBlock(scope: !15402, file: !3, line: 3650, column: 30)
!15408 = !DILocation(line: 3652, column: 17, scope: !15407)
!15409 = !DILocation(line: 3652, column: 23, scope: !15407)
!15410 = !DILocation(line: 3652, column: 4, scope: !15407)
!15411 = !DILocation(line: 3654, column: 8, scope: !15412)
!15412 = distinct !DILexicalBlock(scope: !15407, file: !3, line: 3654, column: 8)
!15413 = !DILocation(line: 3654, column: 12, scope: !15412)
!15414 = !DILocation(line: 3654, column: 17, scope: !15412)
!15415 = !DILocation(line: 3654, column: 8, scope: !15407)
!15416 = !DILocation(line: 3655, column: 17, scope: !15417)
!15417 = distinct !DILexicalBlock(scope: !15412, file: !3, line: 3654, column: 23)
!15418 = !DILocation(line: 3655, column: 21, scope: !15417)
!15419 = !DILocation(line: 3655, column: 26, scope: !15417)
!15420 = !DILocation(line: 3655, column: 32, scope: !15417)
!15421 = !DILocation(line: 3655, column: 38, scope: !15417)
!15422 = !DILocation(line: 3655, column: 42, scope: !15417)
!15423 = !DILocation(line: 3655, column: 47, scope: !15417)
!15424 = !DILocation(line: 3655, column: 5, scope: !15417)
!15425 = !DILocation(line: 3658, column: 29, scope: !15417)
!15426 = !DILocation(line: 3658, column: 33, scope: !15417)
!15427 = !DILocation(line: 3658, column: 46, scope: !15417)
!15428 = !DILocation(line: 3658, column: 50, scope: !15417)
!15429 = !DILocation(line: 3658, column: 55, scope: !15417)
!15430 = !DILocation(line: 3658, column: 61, scope: !15417)
!15431 = !DILocation(line: 3658, column: 65, scope: !15417)
!15432 = !DILocation(line: 3658, column: 70, scope: !15417)
!15433 = !DILocation(line: 3658, column: 5, scope: !15417)
!15434 = !DILocation(line: 3659, column: 4, scope: !15417)
!15435 = !DILocation(line: 3660, column: 3, scope: !15407)
!15436 = !DILocation(line: 3661, column: 2, scope: !15362)
!15437 = !DILocation(line: 3674, column: 11, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15357, file: !3, line: 3674, column: 11)
!15439 = !DILocation(line: 3674, column: 14, scope: !15438)
!15440 = !DILocation(line: 3674, column: 19, scope: !15438)
!15441 = !DILocation(line: 3674, column: 11, scope: !15357)
!15442 = !DILocalVariable(name: "pmtx", scope: !15443, file: !3, line: 3675, type: !3881)
!15443 = distinct !DILexicalBlock(scope: !15438, file: !3, line: 3674, column: 29)
!15444 = !DILocation(line: 3675, column: 9, scope: !15443)
!15445 = !DILocalVariable(name: "imtx", scope: !15443, file: !3, line: 3675, type: !3881)
!15446 = !DILocation(line: 3675, column: 21, scope: !15443)
!15447 = !DILocation(line: 3678, column: 14, scope: !15443)
!15448 = !DILocation(line: 3678, column: 20, scope: !15443)
!15449 = !DILocation(line: 3678, column: 23, scope: !15443)
!15450 = !DILocation(line: 3678, column: 32, scope: !15443)
!15451 = !DILocation(line: 3678, column: 3, scope: !15443)
!15452 = !DILocation(line: 3679, column: 16, scope: !15443)
!15453 = !DILocation(line: 3679, column: 22, scope: !15443)
!15454 = !DILocation(line: 3679, column: 3, scope: !15443)
!15455 = !DILocation(line: 3681, column: 8, scope: !15456)
!15456 = distinct !DILexicalBlock(scope: !15443, file: !3, line: 3681, column: 7)
!15457 = !DILocation(line: 3681, column: 12, scope: !15456)
!15458 = !DILocation(line: 3681, column: 17, scope: !15456)
!15459 = !DILocation(line: 3681, column: 30, scope: !15456)
!15460 = !DILocation(line: 3681, column: 7, scope: !15443)
!15461 = !DILocation(line: 3682, column: 16, scope: !15462)
!15462 = distinct !DILexicalBlock(scope: !15456, file: !3, line: 3681, column: 36)
!15463 = !DILocation(line: 3682, column: 21, scope: !15462)
!15464 = !DILocation(line: 3682, column: 25, scope: !15462)
!15465 = !DILocation(line: 3682, column: 33, scope: !15462)
!15466 = !DILocation(line: 3682, column: 4, scope: !15462)
!15467 = !DILocation(line: 3684, column: 14, scope: !15462)
!15468 = !DILocation(line: 3684, column: 20, scope: !15462)
!15469 = !DILocation(line: 3684, column: 4, scope: !15462)
!15470 = !DILocation(line: 3685, column: 14, scope: !15462)
!15471 = !DILocation(line: 3685, column: 19, scope: !15462)
!15472 = !DILocation(line: 3685, column: 4, scope: !15462)
!15473 = !DILocation(line: 3686, column: 14, scope: !15462)
!15474 = !DILocation(line: 3686, column: 20, scope: !15462)
!15475 = !DILocation(line: 3686, column: 4, scope: !15462)
!15476 = !DILocation(line: 3688, column: 14, scope: !15462)
!15477 = !DILocation(line: 3688, column: 19, scope: !15462)
!15478 = !DILocation(line: 3688, column: 4, scope: !15462)
!15479 = !DILocation(line: 3691, column: 16, scope: !15462)
!15480 = !DILocation(line: 3691, column: 21, scope: !15462)
!15481 = !DILocation(line: 3691, column: 26, scope: !15462)
!15482 = !DILocation(line: 3691, column: 30, scope: !15462)
!15483 = !DILocation(line: 3691, column: 4, scope: !15462)
!15484 = !DILocation(line: 3694, column: 8, scope: !15485)
!15485 = distinct !DILexicalBlock(scope: !15462, file: !3, line: 3694, column: 8)
!15486 = !DILocation(line: 3694, column: 12, scope: !15485)
!15487 = !DILocation(line: 3694, column: 17, scope: !15485)
!15488 = !DILocation(line: 3694, column: 8, scope: !15462)
!15489 = !DILocation(line: 3696, column: 4, scope: !15490)
!15490 = distinct !DILexicalBlock(scope: !15485, file: !3, line: 3694, column: 41)
!15491 = !DILocation(line: 3697, column: 13, scope: !15492)
!15492 = distinct !DILexicalBlock(scope: !15485, file: !3, line: 3697, column: 13)
!15493 = !DILocation(line: 3697, column: 17, scope: !15492)
!15494 = !DILocation(line: 3697, column: 22, scope: !15492)
!15495 = !DILocation(line: 3697, column: 13, scope: !15485)
!15496 = !DILocation(line: 3698, column: 15, scope: !15497)
!15497 = distinct !DILexicalBlock(scope: !15492, file: !3, line: 3697, column: 46)
!15498 = !DILocation(line: 3698, column: 21, scope: !15497)
!15499 = !DILocation(line: 3698, column: 5, scope: !15497)
!15500 = !DILocation(line: 3699, column: 15, scope: !15497)
!15501 = !DILocation(line: 3699, column: 19, scope: !15497)
!15502 = !DILocation(line: 3699, column: 24, scope: !15497)
!15503 = !DILocation(line: 3699, column: 32, scope: !15497)
!15504 = !DILocation(line: 3699, column: 5, scope: !15497)
!15505 = !DILocation(line: 3700, column: 4, scope: !15497)
!15506 = !DILocation(line: 3702, column: 15, scope: !15507)
!15507 = distinct !DILexicalBlock(scope: !15492, file: !3, line: 3701, column: 9)
!15508 = !DILocation(line: 3702, column: 21, scope: !15507)
!15509 = !DILocation(line: 3702, column: 5, scope: !15507)
!15510 = !DILocation(line: 3703, column: 15, scope: !15507)
!15511 = !DILocation(line: 3703, column: 19, scope: !15507)
!15512 = !DILocation(line: 3703, column: 25, scope: !15507)
!15513 = !DILocation(line: 3703, column: 5, scope: !15507)
!15514 = !DILocation(line: 3706, column: 23, scope: !15462)
!15515 = !DILocation(line: 3706, column: 27, scope: !15462)
!15516 = !DILocation(line: 3706, column: 40, scope: !15462)
!15517 = !DILocation(line: 3706, column: 4, scope: !15462)
!15518 = !DILocation(line: 3708, column: 16, scope: !15462)
!15519 = !DILocation(line: 3708, column: 20, scope: !15462)
!15520 = !DILocation(line: 3708, column: 25, scope: !15462)
!15521 = !DILocation(line: 3708, column: 29, scope: !15462)
!15522 = !DILocation(line: 3708, column: 35, scope: !15462)
!15523 = !DILocation(line: 3708, column: 4, scope: !15462)
!15524 = !DILocation(line: 3710, column: 23, scope: !15462)
!15525 = !DILocation(line: 3710, column: 26, scope: !15462)
!15526 = !DILocation(line: 3710, column: 4, scope: !15462)
!15527 = !DILocation(line: 3711, column: 3, scope: !15462)
!15528 = !DILocation(line: 3718, column: 8, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15443, file: !3, line: 3718, column: 7)
!15530 = !DILocation(line: 3718, column: 11, scope: !15529)
!15531 = !DILocation(line: 3718, column: 16, scope: !15529)
!15532 = !DILocation(line: 3718, column: 31, scope: !15529)
!15533 = !DILocation(line: 3718, column: 7, scope: !15443)
!15534 = !DILocation(line: 3720, column: 8, scope: !15535)
!15535 = distinct !DILexicalBlock(scope: !15536, file: !3, line: 3720, column: 8)
!15536 = distinct !DILexicalBlock(scope: !15529, file: !3, line: 3718, column: 37)
!15537 = !DILocation(line: 3720, column: 12, scope: !15535)
!15538 = !DILocation(line: 3720, column: 17, scope: !15535)
!15539 = !DILocation(line: 3720, column: 26, scope: !15535)
!15540 = !DILocation(line: 3720, column: 8, scope: !15536)
!15541 = !DILocation(line: 3721, column: 5, scope: !15542)
!15542 = distinct !DILexicalBlock(scope: !15535, file: !3, line: 3720, column: 44)
!15543 = !DILocation(line: 3723, column: 18, scope: !15542)
!15544 = !DILocation(line: 3723, column: 24, scope: !15542)
!15545 = !DILocation(line: 3723, column: 5, scope: !15542)
!15546 = !DILocation(line: 3725, column: 17, scope: !15542)
!15547 = !DILocation(line: 3725, column: 21, scope: !15542)
!15548 = !DILocation(line: 3725, column: 26, scope: !15542)
!15549 = !DILocation(line: 3725, column: 32, scope: !15542)
!15550 = !DILocation(line: 3725, column: 38, scope: !15542)
!15551 = !DILocation(line: 3725, column: 42, scope: !15542)
!15552 = !DILocation(line: 3725, column: 47, scope: !15542)
!15553 = !DILocation(line: 3725, column: 5, scope: !15542)
!15554 = !DILocation(line: 3727, column: 29, scope: !15542)
!15555 = !DILocation(line: 3727, column: 33, scope: !15542)
!15556 = !DILocation(line: 3727, column: 46, scope: !15542)
!15557 = !DILocation(line: 3727, column: 50, scope: !15542)
!15558 = !DILocation(line: 3727, column: 55, scope: !15542)
!15559 = !DILocation(line: 3727, column: 61, scope: !15542)
!15560 = !DILocation(line: 3727, column: 65, scope: !15542)
!15561 = !DILocation(line: 3727, column: 70, scope: !15542)
!15562 = !DILocation(line: 3727, column: 5, scope: !15542)
!15563 = !DILocation(line: 3729, column: 4, scope: !15542)
!15564 = !DILocation(line: 3730, column: 13, scope: !15565)
!15565 = distinct !DILexicalBlock(scope: !15535, file: !3, line: 3730, column: 13)
!15566 = !DILocation(line: 3730, column: 17, scope: !15565)
!15567 = !DILocation(line: 3730, column: 22, scope: !15565)
!15568 = !DILocation(line: 3730, column: 31, scope: !15565)
!15569 = !DILocation(line: 3730, column: 13, scope: !15535)
!15570 = !DILocalVariable(name: "iquat", scope: !15571, file: !3, line: 3732, type: !2062)
!15571 = distinct !DILexicalBlock(scope: !15565, file: !3, line: 3730, column: 54)
!15572 = !DILocation(line: 3732, column: 11, scope: !15571)
!15573 = !DILocalVariable(name: "tquat", scope: !15571, file: !3, line: 3732, type: !2062)
!15574 = !DILocation(line: 3732, column: 21, scope: !15571)
!15575 = !DILocation(line: 3734, column: 24, scope: !15571)
!15576 = !DILocation(line: 3734, column: 31, scope: !15571)
!15577 = !DILocation(line: 3734, column: 35, scope: !15571)
!15578 = !DILocation(line: 3734, column: 40, scope: !15571)
!15579 = !DILocation(line: 3734, column: 50, scope: !15571)
!15580 = !DILocation(line: 3734, column: 54, scope: !15571)
!15581 = !DILocation(line: 3734, column: 59, scope: !15571)
!15582 = !DILocation(line: 3734, column: 5, scope: !15571)
!15583 = !DILocation(line: 3736, column: 5, scope: !15571)
!15584 = !DILocation(line: 3737, column: 18, scope: !15571)
!15585 = !DILocation(line: 3737, column: 24, scope: !15571)
!15586 = !DILocation(line: 3737, column: 5, scope: !15571)
!15587 = !DILocation(line: 3738, column: 17, scope: !15571)
!15588 = !DILocation(line: 3738, column: 24, scope: !15571)
!15589 = !DILocation(line: 3738, column: 30, scope: !15571)
!15590 = !DILocation(line: 3738, column: 5, scope: !15571)
!15591 = !DILocation(line: 3740, column: 24, scope: !15571)
!15592 = !DILocation(line: 3740, column: 28, scope: !15571)
!15593 = !DILocation(line: 3740, column: 33, scope: !15571)
!15594 = !DILocation(line: 3740, column: 42, scope: !15571)
!15595 = !DILocation(line: 3740, column: 46, scope: !15571)
!15596 = !DILocation(line: 3740, column: 51, scope: !15571)
!15597 = !DILocation(line: 3740, column: 61, scope: !15571)
!15598 = !DILocation(line: 3740, column: 5, scope: !15571)
!15599 = !DILocation(line: 3743, column: 28, scope: !15571)
!15600 = !DILocation(line: 3743, column: 32, scope: !15571)
!15601 = !DILocation(line: 3743, column: 45, scope: !15571)
!15602 = !DILocation(line: 3743, column: 49, scope: !15571)
!15603 = !DILocation(line: 3743, column: 54, scope: !15571)
!15604 = !DILocation(line: 3743, column: 63, scope: !15571)
!15605 = !DILocation(line: 3743, column: 67, scope: !15571)
!15606 = !DILocation(line: 3743, column: 72, scope: !15571)
!15607 = !DILocation(line: 3743, column: 82, scope: !15571)
!15608 = !DILocation(line: 3743, column: 86, scope: !15571)
!15609 = !DILocation(line: 3743, column: 91, scope: !15571)
!15610 = !DILocation(line: 3744, column: 28, scope: !15571)
!15611 = !DILocation(line: 3744, column: 32, scope: !15571)
!15612 = !DILocation(line: 3744, column: 37, scope: !15571)
!15613 = !DILocation(line: 3743, column: 5, scope: !15571)
!15614 = !DILocation(line: 3745, column: 4, scope: !15571)
!15615 = !DILocalVariable(name: "eulmat", scope: !15616, file: !3, line: 3747, type: !3881)
!15616 = distinct !DILexicalBlock(scope: !15565, file: !3, line: 3746, column: 9)
!15617 = !DILocation(line: 3747, column: 11, scope: !15616)
!15618 = !DILocation(line: 3749, column: 17, scope: !15616)
!15619 = !DILocation(line: 3749, column: 25, scope: !15616)
!15620 = !DILocation(line: 3749, column: 30, scope: !15616)
!15621 = !DILocation(line: 3749, column: 34, scope: !15616)
!15622 = !DILocation(line: 3749, column: 39, scope: !15616)
!15623 = !DILocation(line: 3749, column: 5, scope: !15616)
!15624 = !DILocation(line: 3750, column: 17, scope: !15616)
!15625 = !DILocation(line: 3750, column: 23, scope: !15616)
!15626 = !DILocation(line: 3750, column: 27, scope: !15616)
!15627 = !DILocation(line: 3750, column: 32, scope: !15616)
!15628 = !DILocation(line: 3750, column: 40, scope: !15616)
!15629 = !DILocation(line: 3750, column: 5, scope: !15616)
!15630 = !DILocation(line: 3753, column: 16, scope: !15616)
!15631 = !DILocation(line: 3753, column: 21, scope: !15616)
!15632 = !DILocation(line: 3753, column: 25, scope: !15616)
!15633 = !DILocation(line: 3753, column: 30, scope: !15616)
!15634 = !DILocation(line: 3753, column: 5, scope: !15616)
!15635 = !DILocation(line: 3754, column: 18, scope: !15616)
!15636 = !DILocation(line: 3754, column: 26, scope: !15616)
!15637 = !DILocation(line: 3754, column: 31, scope: !15616)
!15638 = !DILocation(line: 3754, column: 35, scope: !15616)
!15639 = !DILocation(line: 3754, column: 40, scope: !15616)
!15640 = !DILocation(line: 3754, column: 5, scope: !15616)
!15641 = !DILocation(line: 3757, column: 17, scope: !15616)
!15642 = !DILocation(line: 3757, column: 23, scope: !15616)
!15643 = !DILocation(line: 3757, column: 29, scope: !15616)
!15644 = !DILocation(line: 3757, column: 5, scope: !15616)
!15645 = !DILocation(line: 3759, column: 29, scope: !15616)
!15646 = !DILocation(line: 3759, column: 34, scope: !15616)
!15647 = !DILocation(line: 3759, column: 38, scope: !15616)
!15648 = !DILocation(line: 3759, column: 43, scope: !15616)
!15649 = !DILocation(line: 3759, column: 48, scope: !15616)
!15650 = !DILocation(line: 3759, column: 52, scope: !15616)
!15651 = !DILocation(line: 3759, column: 57, scope: !15616)
!15652 = !DILocation(line: 3759, column: 67, scope: !15616)
!15653 = !DILocation(line: 3759, column: 5, scope: !15616)
!15654 = !DILocation(line: 3762, column: 25, scope: !15616)
!15655 = !DILocation(line: 3762, column: 29, scope: !15616)
!15656 = !DILocation(line: 3762, column: 42, scope: !15616)
!15657 = !DILocation(line: 3762, column: 47, scope: !15616)
!15658 = !DILocation(line: 3762, column: 51, scope: !15616)
!15659 = !DILocation(line: 3762, column: 56, scope: !15616)
!15660 = !DILocation(line: 3762, column: 5, scope: !15616)
!15661 = !DILocation(line: 3763, column: 16, scope: !15616)
!15662 = !DILocation(line: 3763, column: 20, scope: !15616)
!15663 = !DILocation(line: 3763, column: 25, scope: !15616)
!15664 = !DILocation(line: 3763, column: 30, scope: !15616)
!15665 = !DILocation(line: 3763, column: 5, scope: !15616)
!15666 = !DILocation(line: 3766, column: 21, scope: !15536)
!15667 = !DILocation(line: 3766, column: 24, scope: !15536)
!15668 = !DILocation(line: 3766, column: 4, scope: !15536)
!15669 = !DILocation(line: 3767, column: 3, scope: !15536)
!15670 = !DILocation(line: 3768, column: 2, scope: !15443)
!15671 = !DILocation(line: 3770, column: 8, scope: !15672)
!15672 = distinct !DILexicalBlock(scope: !15673, file: !3, line: 3770, column: 7)
!15673 = distinct !DILexicalBlock(scope: !15438, file: !3, line: 3769, column: 7)
!15674 = !DILocation(line: 3770, column: 12, scope: !15672)
!15675 = !DILocation(line: 3770, column: 17, scope: !15672)
!15676 = !DILocation(line: 3770, column: 30, scope: !15672)
!15677 = !DILocation(line: 3770, column: 7, scope: !15673)
!15678 = !DILocation(line: 3772, column: 16, scope: !15679)
!15679 = distinct !DILexicalBlock(scope: !15672, file: !3, line: 3770, column: 36)
!15680 = !DILocation(line: 3772, column: 21, scope: !15679)
!15681 = !DILocation(line: 3772, column: 25, scope: !15679)
!15682 = !DILocation(line: 3772, column: 33, scope: !15679)
!15683 = !DILocation(line: 3772, column: 4, scope: !15679)
!15684 = !DILocation(line: 3773, column: 14, scope: !15679)
!15685 = !DILocation(line: 3773, column: 19, scope: !15679)
!15686 = !DILocation(line: 3773, column: 4, scope: !15679)
!15687 = !DILocation(line: 3774, column: 14, scope: !15679)
!15688 = !DILocation(line: 3774, column: 19, scope: !15679)
!15689 = !DILocation(line: 3774, column: 4, scope: !15679)
!15690 = !DILocation(line: 3776, column: 14, scope: !15679)
!15691 = !DILocation(line: 3776, column: 19, scope: !15679)
!15692 = !DILocation(line: 3776, column: 23, scope: !15679)
!15693 = !DILocation(line: 3776, column: 4, scope: !15679)
!15694 = !DILocation(line: 3777, column: 14, scope: !15679)
!15695 = !DILocation(line: 3777, column: 18, scope: !15679)
!15696 = !DILocation(line: 3777, column: 24, scope: !15679)
!15697 = !DILocation(line: 3777, column: 4, scope: !15679)
!15698 = !DILocation(line: 3779, column: 23, scope: !15679)
!15699 = !DILocation(line: 3779, column: 27, scope: !15679)
!15700 = !DILocation(line: 3779, column: 40, scope: !15679)
!15701 = !DILocation(line: 3779, column: 4, scope: !15679)
!15702 = !DILocation(line: 3781, column: 16, scope: !15679)
!15703 = !DILocation(line: 3781, column: 20, scope: !15679)
!15704 = !DILocation(line: 3781, column: 25, scope: !15679)
!15705 = !DILocation(line: 3781, column: 29, scope: !15679)
!15706 = !DILocation(line: 3781, column: 35, scope: !15679)
!15707 = !DILocation(line: 3781, column: 4, scope: !15679)
!15708 = !DILocation(line: 3782, column: 3, scope: !15679)
!15709 = !DILocation(line: 3785, column: 22, scope: !15673)
!15710 = !DILocation(line: 3785, column: 25, scope: !15673)
!15711 = !DILocation(line: 3785, column: 3, scope: !15673)
!15712 = !DILocation(line: 3788, column: 8, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15673, file: !3, line: 3788, column: 7)
!15714 = !DILocation(line: 3788, column: 11, scope: !15713)
!15715 = !DILocation(line: 3788, column: 16, scope: !15713)
!15716 = !DILocation(line: 3788, column: 31, scope: !15713)
!15717 = !DILocation(line: 3788, column: 7, scope: !15673)
!15718 = !DILocation(line: 3790, column: 9, scope: !15719)
!15719 = distinct !DILexicalBlock(scope: !15720, file: !3, line: 3790, column: 8)
!15720 = distinct !DILexicalBlock(scope: !15713, file: !3, line: 3788, column: 37)
!15721 = !DILocation(line: 3790, column: 13, scope: !15719)
!15722 = !DILocation(line: 3790, column: 18, scope: !15719)
!15723 = !DILocation(line: 3790, column: 27, scope: !15719)
!15724 = !DILocation(line: 3790, column: 45, scope: !15719)
!15725 = !DILocation(line: 3790, column: 49, scope: !15719)
!15726 = !DILocation(line: 3790, column: 53, scope: !15719)
!15727 = !DILocation(line: 3790, column: 58, scope: !15719)
!15728 = !DILocation(line: 3790, column: 8, scope: !15720)
!15729 = !DILocation(line: 3792, column: 9, scope: !15730)
!15730 = distinct !DILexicalBlock(scope: !15731, file: !3, line: 3792, column: 9)
!15731 = distinct !DILexicalBlock(scope: !15719, file: !3, line: 3790, column: 73)
!15732 = !DILocation(line: 3792, column: 13, scope: !15730)
!15733 = !DILocation(line: 3792, column: 18, scope: !15730)
!15734 = !DILocation(line: 3792, column: 9, scope: !15731)
!15735 = !DILocation(line: 3793, column: 6, scope: !15736)
!15736 = distinct !DILexicalBlock(scope: !15730, file: !3, line: 3792, column: 24)
!15737 = !DILocation(line: 3794, column: 19, scope: !15736)
!15738 = !DILocation(line: 3794, column: 25, scope: !15736)
!15739 = !DILocation(line: 3794, column: 6, scope: !15736)
!15740 = !DILocation(line: 3796, column: 18, scope: !15736)
!15741 = !DILocation(line: 3796, column: 22, scope: !15736)
!15742 = !DILocation(line: 3796, column: 27, scope: !15736)
!15743 = !DILocation(line: 3796, column: 33, scope: !15736)
!15744 = !DILocation(line: 3796, column: 39, scope: !15736)
!15745 = !DILocation(line: 3796, column: 43, scope: !15736)
!15746 = !DILocation(line: 3796, column: 48, scope: !15736)
!15747 = !DILocation(line: 3796, column: 6, scope: !15736)
!15748 = !DILocation(line: 3798, column: 30, scope: !15736)
!15749 = !DILocation(line: 3798, column: 34, scope: !15736)
!15750 = !DILocation(line: 3798, column: 47, scope: !15736)
!15751 = !DILocation(line: 3798, column: 51, scope: !15736)
!15752 = !DILocation(line: 3798, column: 56, scope: !15736)
!15753 = !DILocation(line: 3798, column: 62, scope: !15736)
!15754 = !DILocation(line: 3798, column: 66, scope: !15736)
!15755 = !DILocation(line: 3798, column: 71, scope: !15736)
!15756 = !DILocation(line: 3798, column: 6, scope: !15736)
!15757 = !DILocation(line: 3799, column: 5, scope: !15736)
!15758 = !DILocation(line: 3800, column: 4, scope: !15731)
!15759 = !DILocation(line: 3801, column: 13, scope: !15760)
!15760 = distinct !DILexicalBlock(scope: !15719, file: !3, line: 3801, column: 13)
!15761 = !DILocation(line: 3801, column: 17, scope: !15760)
!15762 = !DILocation(line: 3801, column: 22, scope: !15760)
!15763 = !DILocation(line: 3801, column: 31, scope: !15760)
!15764 = !DILocation(line: 3801, column: 13, scope: !15719)
!15765 = !DILocalVariable(name: "iquat", scope: !15766, file: !3, line: 3803, type: !2062)
!15766 = distinct !DILexicalBlock(scope: !15760, file: !3, line: 3801, column: 54)
!15767 = !DILocation(line: 3803, column: 11, scope: !15766)
!15768 = !DILocalVariable(name: "tquat", scope: !15766, file: !3, line: 3803, type: !2062)
!15769 = !DILocation(line: 3803, column: 21, scope: !15766)
!15770 = !DILocation(line: 3805, column: 24, scope: !15766)
!15771 = !DILocation(line: 3805, column: 31, scope: !15766)
!15772 = !DILocation(line: 3805, column: 35, scope: !15766)
!15773 = !DILocation(line: 3805, column: 40, scope: !15766)
!15774 = !DILocation(line: 3805, column: 50, scope: !15766)
!15775 = !DILocation(line: 3805, column: 54, scope: !15766)
!15776 = !DILocation(line: 3805, column: 59, scope: !15766)
!15777 = !DILocation(line: 3805, column: 5, scope: !15766)
!15778 = !DILocation(line: 3807, column: 5, scope: !15766)
!15779 = !DILocation(line: 3808, column: 18, scope: !15766)
!15780 = !DILocation(line: 3808, column: 24, scope: !15766)
!15781 = !DILocation(line: 3808, column: 5, scope: !15766)
!15782 = !DILocation(line: 3809, column: 17, scope: !15766)
!15783 = !DILocation(line: 3809, column: 24, scope: !15766)
!15784 = !DILocation(line: 3809, column: 30, scope: !15766)
!15785 = !DILocation(line: 3809, column: 5, scope: !15766)
!15786 = !DILocation(line: 3811, column: 24, scope: !15766)
!15787 = !DILocation(line: 3811, column: 28, scope: !15766)
!15788 = !DILocation(line: 3811, column: 33, scope: !15766)
!15789 = !DILocation(line: 3811, column: 42, scope: !15766)
!15790 = !DILocation(line: 3811, column: 46, scope: !15766)
!15791 = !DILocation(line: 3811, column: 51, scope: !15766)
!15792 = !DILocation(line: 3811, column: 61, scope: !15766)
!15793 = !DILocation(line: 3811, column: 5, scope: !15766)
!15794 = !DILocation(line: 3814, column: 28, scope: !15766)
!15795 = !DILocation(line: 3814, column: 32, scope: !15766)
!15796 = !DILocation(line: 3814, column: 45, scope: !15766)
!15797 = !DILocation(line: 3814, column: 49, scope: !15766)
!15798 = !DILocation(line: 3814, column: 54, scope: !15766)
!15799 = !DILocation(line: 3814, column: 63, scope: !15766)
!15800 = !DILocation(line: 3814, column: 67, scope: !15766)
!15801 = !DILocation(line: 3814, column: 72, scope: !15766)
!15802 = !DILocation(line: 3814, column: 82, scope: !15766)
!15803 = !DILocation(line: 3814, column: 86, scope: !15766)
!15804 = !DILocation(line: 3814, column: 91, scope: !15766)
!15805 = !DILocation(line: 3815, column: 28, scope: !15766)
!15806 = !DILocation(line: 3815, column: 32, scope: !15766)
!15807 = !DILocation(line: 3815, column: 37, scope: !15766)
!15808 = !DILocation(line: 3814, column: 5, scope: !15766)
!15809 = !DILocation(line: 3816, column: 4, scope: !15766)
!15810 = !DILocalVariable(name: "obmat", scope: !15811, file: !3, line: 3818, type: !3881)
!15811 = distinct !DILexicalBlock(scope: !15760, file: !3, line: 3817, column: 9)
!15812 = !DILocation(line: 3818, column: 11, scope: !15811)
!15813 = !DILocation(line: 3820, column: 17, scope: !15811)
!15814 = !DILocation(line: 3820, column: 25, scope: !15811)
!15815 = !DILocation(line: 3820, column: 30, scope: !15811)
!15816 = !DILocation(line: 3820, column: 34, scope: !15811)
!15817 = !DILocation(line: 3820, column: 5, scope: !15811)
!15818 = !DILocation(line: 3821, column: 17, scope: !15811)
!15819 = !DILocation(line: 3821, column: 23, scope: !15811)
!15820 = !DILocation(line: 3821, column: 27, scope: !15811)
!15821 = !DILocation(line: 3821, column: 33, scope: !15811)
!15822 = !DILocation(line: 3821, column: 5, scope: !15811)
!15823 = !DILocation(line: 3824, column: 17, scope: !15811)
!15824 = !DILocation(line: 3824, column: 22, scope: !15811)
!15825 = !DILocation(line: 3824, column: 26, scope: !15811)
!15826 = !DILocation(line: 3824, column: 31, scope: !15811)
!15827 = !DILocation(line: 3824, column: 37, scope: !15811)
!15828 = !DILocation(line: 3824, column: 41, scope: !15811)
!15829 = !DILocation(line: 3824, column: 46, scope: !15811)
!15830 = !DILocation(line: 3824, column: 5, scope: !15811)
!15831 = !DILocation(line: 3825, column: 18, scope: !15811)
!15832 = !DILocation(line: 3825, column: 25, scope: !15811)
!15833 = !DILocation(line: 3825, column: 30, scope: !15811)
!15834 = !DILocation(line: 3825, column: 34, scope: !15811)
!15835 = !DILocation(line: 3825, column: 39, scope: !15811)
!15836 = !DILocation(line: 3825, column: 5, scope: !15811)
!15837 = !DILocation(line: 3827, column: 17, scope: !15811)
!15838 = !DILocation(line: 3827, column: 23, scope: !15811)
!15839 = !DILocation(line: 3827, column: 29, scope: !15811)
!15840 = !DILocation(line: 3827, column: 5, scope: !15811)
!15841 = !DILocation(line: 3829, column: 29, scope: !15811)
!15842 = !DILocation(line: 3829, column: 34, scope: !15811)
!15843 = !DILocation(line: 3829, column: 38, scope: !15811)
!15844 = !DILocation(line: 3829, column: 43, scope: !15811)
!15845 = !DILocation(line: 3829, column: 48, scope: !15811)
!15846 = !DILocation(line: 3829, column: 52, scope: !15811)
!15847 = !DILocation(line: 3829, column: 57, scope: !15811)
!15848 = !DILocation(line: 3829, column: 67, scope: !15811)
!15849 = !DILocation(line: 3829, column: 5, scope: !15811)
!15850 = !DILocation(line: 3832, column: 17, scope: !15811)
!15851 = !DILocation(line: 3832, column: 22, scope: !15811)
!15852 = !DILocation(line: 3832, column: 27, scope: !15811)
!15853 = !DILocation(line: 3832, column: 31, scope: !15811)
!15854 = !DILocation(line: 3832, column: 36, scope: !15811)
!15855 = !DILocation(line: 3832, column: 5, scope: !15811)
!15856 = !DILocation(line: 3835, column: 25, scope: !15811)
!15857 = !DILocation(line: 3835, column: 29, scope: !15811)
!15858 = !DILocation(line: 3835, column: 42, scope: !15811)
!15859 = !DILocation(line: 3835, column: 47, scope: !15811)
!15860 = !DILocation(line: 3835, column: 51, scope: !15811)
!15861 = !DILocation(line: 3835, column: 56, scope: !15811)
!15862 = !DILocation(line: 3835, column: 5, scope: !15811)
!15863 = !DILocation(line: 3836, column: 16, scope: !15811)
!15864 = !DILocation(line: 3836, column: 20, scope: !15811)
!15865 = !DILocation(line: 3836, column: 25, scope: !15811)
!15866 = !DILocation(line: 3836, column: 30, scope: !15811)
!15867 = !DILocation(line: 3836, column: 5, scope: !15811)
!15868 = !DILocation(line: 3839, column: 21, scope: !15720)
!15869 = !DILocation(line: 3839, column: 24, scope: !15720)
!15870 = !DILocation(line: 3839, column: 4, scope: !15720)
!15871 = !DILocation(line: 3840, column: 3, scope: !15720)
!15872 = !DILocation(line: 3842, column: 1, scope: !15317)
!15873 = distinct !DISubprogram(name: "protectedQuaternionBits", scope: !3, file: !3, line: 2423, type: !15874, scopeLine: 2424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!15874 = !DISubroutineType(types: !15875)
!15875 = !{null, !27, !1773, !3980}
!15876 = !DILocalVariable(name: "protectflag", arg: 1, scope: !15873, file: !3, line: 2423, type: !27)
!15877 = !DILocation(line: 2423, column: 43, scope: !15873)
!15878 = !DILocalVariable(name: "quat", arg: 2, scope: !15873, file: !3, line: 2423, type: !1773)
!15879 = !DILocation(line: 2423, column: 62, scope: !15873)
!15880 = !DILocalVariable(name: "oldquat", arg: 3, scope: !15873, file: !3, line: 2423, type: !3980)
!15881 = !DILocation(line: 2423, column: 83, scope: !15873)
!15882 = !DILocation(line: 2426, column: 7, scope: !15883)
!15883 = distinct !DILexicalBlock(scope: !15873, file: !3, line: 2426, column: 6)
!15884 = !DILocation(line: 2426, column: 19, scope: !15883)
!15885 = !DILocation(line: 2426, column: 82, scope: !15883)
!15886 = !DILocation(line: 2426, column: 6, scope: !15873)
!15887 = !DILocation(line: 2427, column: 3, scope: !15883)
!15888 = !DILocation(line: 2429, column: 6, scope: !15889)
!15889 = distinct !DILexicalBlock(scope: !15873, file: !3, line: 2429, column: 6)
!15890 = !DILocation(line: 2429, column: 18, scope: !15889)
!15891 = !DILocation(line: 2429, column: 6, scope: !15873)
!15892 = !DILocation(line: 2431, column: 7, scope: !15893)
!15893 = distinct !DILexicalBlock(scope: !15894, file: !3, line: 2431, column: 7)
!15894 = distinct !DILexicalBlock(scope: !15889, file: !3, line: 2429, column: 35)
!15895 = !DILocation(line: 2431, column: 19, scope: !15893)
!15896 = !DILocation(line: 2431, column: 7, scope: !15894)
!15897 = !DILocation(line: 2432, column: 14, scope: !15893)
!15898 = !DILocation(line: 2432, column: 4, scope: !15893)
!15899 = !DILocation(line: 2432, column: 12, scope: !15893)
!15900 = !DILocation(line: 2433, column: 7, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15894, file: !3, line: 2433, column: 7)
!15902 = !DILocation(line: 2433, column: 19, scope: !15901)
!15903 = !DILocation(line: 2433, column: 7, scope: !15894)
!15904 = !DILocation(line: 2434, column: 14, scope: !15901)
!15905 = !DILocation(line: 2434, column: 4, scope: !15901)
!15906 = !DILocation(line: 2434, column: 12, scope: !15901)
!15907 = !DILocation(line: 2435, column: 7, scope: !15908)
!15908 = distinct !DILexicalBlock(scope: !15894, file: !3, line: 2435, column: 7)
!15909 = !DILocation(line: 2435, column: 19, scope: !15908)
!15910 = !DILocation(line: 2435, column: 7, scope: !15894)
!15911 = !DILocation(line: 2436, column: 14, scope: !15908)
!15912 = !DILocation(line: 2436, column: 4, scope: !15908)
!15913 = !DILocation(line: 2436, column: 12, scope: !15908)
!15914 = !DILocation(line: 2437, column: 7, scope: !15915)
!15915 = distinct !DILexicalBlock(scope: !15894, file: !3, line: 2437, column: 7)
!15916 = !DILocation(line: 2437, column: 19, scope: !15915)
!15917 = !DILocation(line: 2437, column: 7, scope: !15894)
!15918 = !DILocation(line: 2438, column: 14, scope: !15915)
!15919 = !DILocation(line: 2438, column: 4, scope: !15915)
!15920 = !DILocation(line: 2438, column: 12, scope: !15915)
!15921 = !DILocation(line: 2439, column: 2, scope: !15894)
!15922 = !DILocalVariable(name: "eul", scope: !15923, file: !3, line: 2442, type: !1987)
!15923 = distinct !DILexicalBlock(scope: !15889, file: !3, line: 2440, column: 7)
!15924 = !DILocation(line: 2442, column: 9, scope: !15923)
!15925 = !DILocalVariable(name: "oldeul", scope: !15923, file: !3, line: 2442, type: !1987)
!15926 = !DILocation(line: 2442, column: 17, scope: !15923)
!15927 = !DILocalVariable(name: "nquat", scope: !15923, file: !3, line: 2442, type: !2062)
!15928 = !DILocation(line: 2442, column: 28, scope: !15923)
!15929 = !DILocalVariable(name: "noldquat", scope: !15923, file: !3, line: 2442, type: !2062)
!15930 = !DILocation(line: 2442, column: 38, scope: !15923)
!15931 = !DILocalVariable(name: "qlen", scope: !15923, file: !3, line: 2443, type: !1727)
!15932 = !DILocation(line: 2443, column: 9, scope: !15923)
!15933 = !DILocation(line: 2445, column: 26, scope: !15923)
!15934 = !DILocation(line: 2445, column: 33, scope: !15923)
!15935 = !DILocation(line: 2445, column: 10, scope: !15923)
!15936 = !DILocation(line: 2445, column: 8, scope: !15923)
!15937 = !DILocation(line: 2446, column: 19, scope: !15923)
!15938 = !DILocation(line: 2446, column: 29, scope: !15923)
!15939 = !DILocation(line: 2446, column: 3, scope: !15923)
!15940 = !DILocation(line: 2448, column: 15, scope: !15923)
!15941 = !DILocation(line: 2448, column: 20, scope: !15923)
!15942 = !DILocation(line: 2448, column: 3, scope: !15923)
!15943 = !DILocation(line: 2449, column: 15, scope: !15923)
!15944 = !DILocation(line: 2449, column: 23, scope: !15923)
!15945 = !DILocation(line: 2449, column: 3, scope: !15923)
!15946 = !DILocation(line: 2451, column: 7, scope: !15947)
!15947 = distinct !DILexicalBlock(scope: !15923, file: !3, line: 2451, column: 7)
!15948 = !DILocation(line: 2451, column: 19, scope: !15947)
!15949 = !DILocation(line: 2451, column: 7, scope: !15923)
!15950 = !DILocation(line: 2452, column: 13, scope: !15947)
!15951 = !DILocation(line: 2452, column: 4, scope: !15947)
!15952 = !DILocation(line: 2452, column: 11, scope: !15947)
!15953 = !DILocation(line: 2453, column: 7, scope: !15954)
!15954 = distinct !DILexicalBlock(scope: !15923, file: !3, line: 2453, column: 7)
!15955 = !DILocation(line: 2453, column: 19, scope: !15954)
!15956 = !DILocation(line: 2453, column: 7, scope: !15923)
!15957 = !DILocation(line: 2454, column: 13, scope: !15954)
!15958 = !DILocation(line: 2454, column: 4, scope: !15954)
!15959 = !DILocation(line: 2454, column: 11, scope: !15954)
!15960 = !DILocation(line: 2455, column: 7, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15923, file: !3, line: 2455, column: 7)
!15962 = !DILocation(line: 2455, column: 19, scope: !15961)
!15963 = !DILocation(line: 2455, column: 7, scope: !15923)
!15964 = !DILocation(line: 2456, column: 13, scope: !15961)
!15965 = !DILocation(line: 2456, column: 4, scope: !15961)
!15966 = !DILocation(line: 2456, column: 11, scope: !15961)
!15967 = !DILocation(line: 2458, column: 15, scope: !15923)
!15968 = !DILocation(line: 2458, column: 21, scope: !15923)
!15969 = !DILocation(line: 2458, column: 3, scope: !15923)
!15970 = !DILocation(line: 2461, column: 13, scope: !15923)
!15971 = !DILocation(line: 2461, column: 19, scope: !15923)
!15972 = !DILocation(line: 2461, column: 3, scope: !15923)
!15973 = !DILocation(line: 2464, column: 8, scope: !15974)
!15974 = distinct !DILexicalBlock(scope: !15923, file: !3, line: 2464, column: 7)
!15975 = !DILocation(line: 2464, column: 17, scope: !15974)
!15976 = !DILocation(line: 2464, column: 24, scope: !15974)
!15977 = !DILocation(line: 2464, column: 27, scope: !15974)
!15978 = !DILocation(line: 2464, column: 35, scope: !15974)
!15979 = !DILocation(line: 2464, column: 43, scope: !15974)
!15980 = !DILocation(line: 2465, column: 8, scope: !15974)
!15981 = !DILocation(line: 2465, column: 17, scope: !15974)
!15982 = !DILocation(line: 2465, column: 24, scope: !15974)
!15983 = !DILocation(line: 2465, column: 27, scope: !15974)
!15984 = !DILocation(line: 2465, column: 35, scope: !15974)
!15985 = !DILocation(line: 2464, column: 7, scope: !15923)
!15986 = !DILocation(line: 2467, column: 14, scope: !15987)
!15987 = distinct !DILexicalBlock(scope: !15974, file: !3, line: 2466, column: 3)
!15988 = !DILocation(line: 2467, column: 4, scope: !15987)
!15989 = !DILocation(line: 2468, column: 3, scope: !15987)
!15990 = !DILocation(line: 2470, column: 1, scope: !15873)
!15991 = distinct !DISubprogram(name: "protectedAxisAngleBits", scope: !3, file: !3, line: 2381, type: !15992, scopeLine: 2382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!15992 = !DISubroutineType(types: !15993)
!15993 = !{null, !27, !1773, !1773, !1773, !1727}
!15994 = !DILocalVariable(name: "protectflag", arg: 1, scope: !15991, file: !3, line: 2381, type: !27)
!15995 = !DILocation(line: 2381, column: 42, scope: !15991)
!15996 = !DILocalVariable(name: "axis", arg: 2, scope: !15991, file: !3, line: 2381, type: !1773)
!15997 = !DILocation(line: 2381, column: 61, scope: !15991)
!15998 = !DILocalVariable(name: "angle", arg: 3, scope: !15991, file: !3, line: 2381, type: !1773)
!15999 = !DILocation(line: 2381, column: 77, scope: !15991)
!16000 = !DILocalVariable(name: "oldAxis", arg: 4, scope: !15991, file: !3, line: 2381, type: !1773)
!16001 = !DILocation(line: 2381, column: 90, scope: !15991)
!16002 = !DILocalVariable(name: "oldAngle", arg: 5, scope: !15991, file: !3, line: 2381, type: !1727)
!16003 = !DILocation(line: 2381, column: 108, scope: !15991)
!16004 = !DILocation(line: 2384, column: 7, scope: !16005)
!16005 = distinct !DILexicalBlock(scope: !15991, file: !3, line: 2384, column: 6)
!16006 = !DILocation(line: 2384, column: 19, scope: !16005)
!16007 = !DILocation(line: 2384, column: 82, scope: !16005)
!16008 = !DILocation(line: 2384, column: 6, scope: !15991)
!16009 = !DILocation(line: 2385, column: 3, scope: !16005)
!16010 = !DILocation(line: 2387, column: 6, scope: !16011)
!16011 = distinct !DILexicalBlock(scope: !15991, file: !3, line: 2387, column: 6)
!16012 = !DILocation(line: 2387, column: 18, scope: !16011)
!16013 = !DILocation(line: 2387, column: 6, scope: !15991)
!16014 = !DILocation(line: 2389, column: 7, scope: !16015)
!16015 = distinct !DILexicalBlock(scope: !16016, file: !3, line: 2389, column: 7)
!16016 = distinct !DILexicalBlock(scope: !16011, file: !3, line: 2387, column: 35)
!16017 = !DILocation(line: 2389, column: 19, scope: !16015)
!16018 = !DILocation(line: 2389, column: 7, scope: !16016)
!16019 = !DILocation(line: 2390, column: 13, scope: !16015)
!16020 = !DILocation(line: 2390, column: 5, scope: !16015)
!16021 = !DILocation(line: 2390, column: 11, scope: !16015)
!16022 = !DILocation(line: 2390, column: 4, scope: !16015)
!16023 = !DILocation(line: 2391, column: 7, scope: !16024)
!16024 = distinct !DILexicalBlock(scope: !16016, file: !3, line: 2391, column: 7)
!16025 = !DILocation(line: 2391, column: 19, scope: !16024)
!16026 = !DILocation(line: 2391, column: 7, scope: !16016)
!16027 = !DILocation(line: 2392, column: 14, scope: !16024)
!16028 = !DILocation(line: 2392, column: 4, scope: !16024)
!16029 = !DILocation(line: 2392, column: 12, scope: !16024)
!16030 = !DILocation(line: 2393, column: 7, scope: !16031)
!16031 = distinct !DILexicalBlock(scope: !16016, file: !3, line: 2393, column: 7)
!16032 = !DILocation(line: 2393, column: 19, scope: !16031)
!16033 = !DILocation(line: 2393, column: 7, scope: !16016)
!16034 = !DILocation(line: 2394, column: 14, scope: !16031)
!16035 = !DILocation(line: 2394, column: 4, scope: !16031)
!16036 = !DILocation(line: 2394, column: 12, scope: !16031)
!16037 = !DILocation(line: 2395, column: 7, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !16016, file: !3, line: 2395, column: 7)
!16039 = !DILocation(line: 2395, column: 19, scope: !16038)
!16040 = !DILocation(line: 2395, column: 7, scope: !16016)
!16041 = !DILocation(line: 2396, column: 14, scope: !16038)
!16042 = !DILocation(line: 2396, column: 4, scope: !16038)
!16043 = !DILocation(line: 2396, column: 12, scope: !16038)
!16044 = !DILocation(line: 2397, column: 2, scope: !16016)
!16045 = !DILocalVariable(name: "eul", scope: !16046, file: !3, line: 2400, type: !1987)
!16046 = distinct !DILexicalBlock(scope: !16011, file: !3, line: 2398, column: 7)
!16047 = !DILocation(line: 2400, column: 9, scope: !16046)
!16048 = !DILocalVariable(name: "oldeul", scope: !16046, file: !3, line: 2400, type: !1987)
!16049 = !DILocation(line: 2400, column: 17, scope: !16046)
!16050 = !DILocation(line: 2402, column: 22, scope: !16046)
!16051 = !DILocation(line: 2402, column: 48, scope: !16046)
!16052 = !DILocation(line: 2402, column: 55, scope: !16046)
!16053 = !DILocation(line: 2402, column: 54, scope: !16046)
!16054 = !DILocation(line: 2402, column: 3, scope: !16046)
!16055 = !DILocation(line: 2403, column: 22, scope: !16046)
!16056 = !DILocation(line: 2403, column: 51, scope: !16046)
!16057 = !DILocation(line: 2403, column: 60, scope: !16046)
!16058 = !DILocation(line: 2403, column: 3, scope: !16046)
!16059 = !DILocation(line: 2405, column: 7, scope: !16060)
!16060 = distinct !DILexicalBlock(scope: !16046, file: !3, line: 2405, column: 7)
!16061 = !DILocation(line: 2405, column: 19, scope: !16060)
!16062 = !DILocation(line: 2405, column: 7, scope: !16046)
!16063 = !DILocation(line: 2406, column: 13, scope: !16060)
!16064 = !DILocation(line: 2406, column: 4, scope: !16060)
!16065 = !DILocation(line: 2406, column: 11, scope: !16060)
!16066 = !DILocation(line: 2407, column: 7, scope: !16067)
!16067 = distinct !DILexicalBlock(scope: !16046, file: !3, line: 2407, column: 7)
!16068 = !DILocation(line: 2407, column: 19, scope: !16067)
!16069 = !DILocation(line: 2407, column: 7, scope: !16046)
!16070 = !DILocation(line: 2408, column: 13, scope: !16067)
!16071 = !DILocation(line: 2408, column: 4, scope: !16067)
!16072 = !DILocation(line: 2408, column: 11, scope: !16067)
!16073 = !DILocation(line: 2409, column: 7, scope: !16074)
!16074 = distinct !DILexicalBlock(scope: !16046, file: !3, line: 2409, column: 7)
!16075 = !DILocation(line: 2409, column: 19, scope: !16074)
!16076 = !DILocation(line: 2409, column: 7, scope: !16046)
!16077 = !DILocation(line: 2410, column: 13, scope: !16074)
!16078 = !DILocation(line: 2410, column: 4, scope: !16074)
!16079 = !DILocation(line: 2410, column: 11, scope: !16074)
!16080 = !DILocation(line: 2412, column: 22, scope: !16046)
!16081 = !DILocation(line: 2412, column: 28, scope: !16046)
!16082 = !DILocation(line: 2412, column: 35, scope: !16046)
!16083 = !DILocation(line: 2412, column: 3, scope: !16046)
!16084 = !DILocation(line: 2415, column: 7, scope: !16085)
!16085 = distinct !DILexicalBlock(scope: !16046, file: !3, line: 2415, column: 7)
!16086 = !DILocation(line: 2415, column: 32, scope: !16085)
!16087 = !DILocation(line: 2415, column: 35, scope: !16085)
!16088 = !DILocation(line: 2415, column: 7, scope: !16046)
!16089 = !DILocation(line: 2417, column: 4, scope: !16090)
!16090 = distinct !DILexicalBlock(scope: !16085, file: !3, line: 2415, column: 61)
!16091 = !DILocation(line: 2417, column: 12, scope: !16090)
!16092 = !DILocation(line: 2418, column: 3, scope: !16090)
!16093 = !DILocation(line: 2420, column: 1, scope: !15991)
!16094 = distinct !DISubprogram(name: "protectedRotateBits", scope: !3, file: !3, line: 2368, type: !15874, scopeLine: 2369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!16095 = !DILocalVariable(name: "protectflag", arg: 1, scope: !16094, file: !3, line: 2368, type: !27)
!16096 = !DILocation(line: 2368, column: 39, scope: !16094)
!16097 = !DILocalVariable(name: "eul", arg: 2, scope: !16094, file: !3, line: 2368, type: !1773)
!16098 = !DILocation(line: 2368, column: 58, scope: !16094)
!16099 = !DILocalVariable(name: "oldeul", arg: 3, scope: !16094, file: !3, line: 2368, type: !3980)
!16100 = !DILocation(line: 2368, column: 78, scope: !16094)
!16101 = !DILocation(line: 2370, column: 6, scope: !16102)
!16102 = distinct !DILexicalBlock(scope: !16094, file: !3, line: 2370, column: 6)
!16103 = !DILocation(line: 2370, column: 18, scope: !16102)
!16104 = !DILocation(line: 2370, column: 6, scope: !16094)
!16105 = !DILocation(line: 2371, column: 12, scope: !16102)
!16106 = !DILocation(line: 2371, column: 3, scope: !16102)
!16107 = !DILocation(line: 2371, column: 10, scope: !16102)
!16108 = !DILocation(line: 2372, column: 6, scope: !16109)
!16109 = distinct !DILexicalBlock(scope: !16094, file: !3, line: 2372, column: 6)
!16110 = !DILocation(line: 2372, column: 18, scope: !16109)
!16111 = !DILocation(line: 2372, column: 6, scope: !16094)
!16112 = !DILocation(line: 2373, column: 12, scope: !16109)
!16113 = !DILocation(line: 2373, column: 3, scope: !16109)
!16114 = !DILocation(line: 2373, column: 10, scope: !16109)
!16115 = !DILocation(line: 2374, column: 6, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16094, file: !3, line: 2374, column: 6)
!16117 = !DILocation(line: 2374, column: 18, scope: !16116)
!16118 = !DILocation(line: 2374, column: 6, scope: !16094)
!16119 = !DILocation(line: 2375, column: 12, scope: !16116)
!16120 = !DILocation(line: 2375, column: 3, scope: !16116)
!16121 = !DILocation(line: 2375, column: 10, scope: !16116)
!16122 = !DILocation(line: 2376, column: 1, scope: !16094)
!16123 = distinct !DISubprogram(name: "constraintRotLim", scope: !3, file: !3, line: 2577, type: !14201, scopeLine: 2578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!16124 = !DILocalVariable(name: "UNUSED_t", arg: 1, scope: !16123, file: !3, line: 2577, type: !3841)
!16125 = !DILocation(line: 2577, column: 41, scope: !16123)
!16126 = !DILocalVariable(name: "td", arg: 2, scope: !16123, file: !3, line: 2577, type: !3868)
!16127 = !DILocation(line: 2577, column: 63, scope: !16123)
!16128 = !DILocation(line: 2579, column: 6, scope: !16129)
!16129 = distinct !DILexicalBlock(scope: !16123, file: !3, line: 2579, column: 6)
!16130 = !DILocation(line: 2579, column: 10, scope: !16129)
!16131 = !DILocation(line: 2579, column: 6, scope: !16123)
!16132 = !DILocalVariable(name: "cti", scope: !16133, file: !3, line: 2580, type: !14216)
!16133 = distinct !DILexicalBlock(scope: !16129, file: !3, line: 2579, column: 15)
!16134 = !DILocation(line: 2580, column: 24, scope: !16133)
!16135 = !DILocation(line: 2580, column: 30, scope: !16133)
!16136 = !DILocalVariable(name: "cob", scope: !16133, file: !3, line: 2581, type: !14328)
!16137 = !DILocation(line: 2581, column: 17, scope: !16133)
!16138 = !DILocalVariable(name: "con", scope: !16133, file: !3, line: 2582, type: !14331)
!16139 = !DILocation(line: 2582, column: 16, scope: !16133)
!16140 = !DILocalVariable(name: "do_limit", scope: !16133, file: !3, line: 2583, type: !2769)
!16141 = !DILocation(line: 2583, column: 8, scope: !16133)
!16142 = !DILocation(line: 2586, column: 14, scope: !16143)
!16143 = distinct !DILexicalBlock(scope: !16133, file: !3, line: 2586, column: 3)
!16144 = !DILocation(line: 2586, column: 18, scope: !16143)
!16145 = !DILocation(line: 2586, column: 12, scope: !16143)
!16146 = !DILocation(line: 2586, column: 8, scope: !16143)
!16147 = !DILocation(line: 2586, column: 23, scope: !16148)
!16148 = distinct !DILexicalBlock(scope: !16143, file: !3, line: 2586, column: 3)
!16149 = !DILocation(line: 2586, column: 3, scope: !16143)
!16150 = !DILocation(line: 2588, column: 8, scope: !16151)
!16151 = distinct !DILexicalBlock(scope: !16152, file: !3, line: 2588, column: 8)
!16152 = distinct !DILexicalBlock(scope: !16148, file: !3, line: 2586, column: 45)
!16153 = !DILocation(line: 2588, column: 13, scope: !16151)
!16154 = !DILocation(line: 2588, column: 18, scope: !16151)
!16155 = !DILocation(line: 2588, column: 8, scope: !16152)
!16156 = !DILocation(line: 2588, column: 59, scope: !16151)
!16157 = !DILocation(line: 2589, column: 8, scope: !16158)
!16158 = distinct !DILexicalBlock(scope: !16152, file: !3, line: 2589, column: 8)
!16159 = !DILocation(line: 2589, column: 13, scope: !16158)
!16160 = !DILocation(line: 2589, column: 21, scope: !16158)
!16161 = !DILocation(line: 2589, column: 8, scope: !16152)
!16162 = !DILocation(line: 2589, column: 30, scope: !16158)
!16163 = !DILocation(line: 2592, column: 8, scope: !16164)
!16164 = distinct !DILexicalBlock(scope: !16152, file: !3, line: 2592, column: 8)
!16165 = !DILocation(line: 2592, column: 13, scope: !16164)
!16166 = !DILocation(line: 2592, column: 18, scope: !16164)
!16167 = !DILocation(line: 2592, column: 8, scope: !16152)
!16168 = !DILocalVariable(name: "data", scope: !16169, file: !3, line: 2593, type: !16170)
!16169 = distinct !DILexicalBlock(scope: !16164, file: !3, line: 2592, column: 47)
!16170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16171, size: 64)
!16171 = !DIDerivedType(tag: DW_TAG_typedef, name: "bRotLimitConstraint", file: !1588, line: 394, baseType: !16172)
!16172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bRotLimitConstraint", file: !1588, line: 388, size: 224, elements: !16173)
!16173 = !{!16174, !16175, !16176, !16177, !16178, !16179, !16180, !16181}
!16174 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !16172, file: !1588, line: 389, baseType: !1727, size: 32)
!16175 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !16172, file: !1588, line: 389, baseType: !1727, size: 32, offset: 32)
!16176 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !16172, file: !1588, line: 390, baseType: !1727, size: 32, offset: 64)
!16177 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !16172, file: !1588, line: 390, baseType: !1727, size: 32, offset: 96)
!16178 = !DIDerivedType(tag: DW_TAG_member, name: "zmin", scope: !16172, file: !1588, line: 391, baseType: !1727, size: 32, offset: 128)
!16179 = !DIDerivedType(tag: DW_TAG_member, name: "zmax", scope: !16172, file: !1588, line: 391, baseType: !1727, size: 32, offset: 160)
!16180 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !16172, file: !1588, line: 392, baseType: !27, size: 16, offset: 192)
!16181 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !16172, file: !1588, line: 393, baseType: !27, size: 16, offset: 208)
!16182 = !DILocation(line: 2593, column: 26, scope: !16169)
!16183 = !DILocation(line: 2593, column: 33, scope: !16169)
!16184 = !DILocation(line: 2593, column: 38, scope: !16169)
!16185 = !DILocation(line: 2596, column: 10, scope: !16186)
!16186 = distinct !DILexicalBlock(scope: !16169, file: !3, line: 2596, column: 9)
!16187 = !DILocation(line: 2596, column: 16, scope: !16186)
!16188 = !DILocation(line: 2596, column: 22, scope: !16186)
!16189 = !DILocation(line: 2596, column: 41, scope: !16186)
!16190 = !DILocation(line: 2596, column: 9, scope: !16169)
!16191 = !DILocation(line: 2597, column: 6, scope: !16186)
!16192 = !DILocation(line: 2600, column: 10, scope: !16193)
!16193 = distinct !DILexicalBlock(scope: !16169, file: !3, line: 2600, column: 9)
!16194 = !DILocation(line: 2600, column: 9, scope: !16169)
!16195 = !DILocation(line: 2601, column: 6, scope: !16193)
!16196 = !DILocation(line: 2604, column: 9, scope: !16197)
!16197 = distinct !DILexicalBlock(scope: !16169, file: !3, line: 2604, column: 9)
!16198 = !DILocation(line: 2604, column: 18, scope: !16197)
!16199 = !DILocation(line: 2604, column: 9, scope: !16169)
!16200 = !DILocation(line: 2605, column: 40, scope: !16201)
!16201 = distinct !DILexicalBlock(scope: !16197, file: !3, line: 2604, column: 28)
!16202 = !DILocation(line: 2605, column: 6, scope: !16201)
!16203 = !DILocation(line: 2606, column: 15, scope: !16201)
!16204 = !DILocation(line: 2607, column: 5, scope: !16201)
!16205 = !DILocation(line: 2610, column: 9, scope: !16206)
!16206 = distinct !DILexicalBlock(scope: !16169, file: !3, line: 2610, column: 9)
!16207 = !DILocation(line: 2610, column: 14, scope: !16206)
!16208 = !DILocation(line: 2610, column: 23, scope: !16206)
!16209 = !DILocation(line: 2610, column: 9, scope: !16169)
!16210 = !DILocation(line: 2612, column: 22, scope: !16211)
!16211 = distinct !DILexicalBlock(scope: !16206, file: !3, line: 2610, column: 50)
!16212 = !DILocation(line: 2612, column: 18, scope: !16211)
!16213 = !DILocation(line: 2612, column: 30, scope: !16211)
!16214 = !DILocation(line: 2612, column: 34, scope: !16211)
!16215 = !DILocation(line: 2612, column: 43, scope: !16211)
!16216 = !DILocation(line: 2612, column: 39, scope: !16211)
!16217 = !DILocation(line: 2612, column: 6, scope: !16211)
!16218 = !DILocation(line: 2613, column: 5, scope: !16211)
!16219 = !DILocation(line: 2616, column: 5, scope: !16169)
!16220 = !DILocation(line: 2616, column: 10, scope: !16169)
!16221 = !DILocation(line: 2616, column: 30, scope: !16169)
!16222 = !DILocation(line: 2619, column: 9, scope: !16223)
!16223 = distinct !DILexicalBlock(scope: !16169, file: !3, line: 2619, column: 9)
!16224 = !DILocation(line: 2619, column: 14, scope: !16223)
!16225 = !DILocation(line: 2619, column: 23, scope: !16223)
!16226 = !DILocation(line: 2619, column: 9, scope: !16169)
!16227 = !DILocation(line: 2621, column: 22, scope: !16228)
!16228 = distinct !DILexicalBlock(scope: !16223, file: !3, line: 2619, column: 50)
!16229 = !DILocation(line: 2621, column: 18, scope: !16228)
!16230 = !DILocation(line: 2621, column: 30, scope: !16228)
!16231 = !DILocation(line: 2621, column: 34, scope: !16228)
!16232 = !DILocation(line: 2621, column: 44, scope: !16228)
!16233 = !DILocation(line: 2621, column: 40, scope: !16228)
!16234 = !DILocation(line: 2621, column: 6, scope: !16228)
!16235 = !DILocation(line: 2622, column: 5, scope: !16228)
!16236 = !DILocation(line: 2623, column: 4, scope: !16169)
!16237 = !DILocation(line: 2624, column: 3, scope: !16152)
!16238 = !DILocation(line: 2586, column: 34, scope: !16148)
!16239 = !DILocation(line: 2586, column: 39, scope: !16148)
!16240 = !DILocation(line: 2586, column: 32, scope: !16148)
!16241 = !DILocation(line: 2586, column: 3, scope: !16148)
!16242 = distinct !{!16242, !16149, !16243}
!16243 = !DILocation(line: 2624, column: 3, scope: !16143)
!16244 = !DILocation(line: 2626, column: 7, scope: !16245)
!16245 = distinct !DILexicalBlock(scope: !16133, file: !3, line: 2626, column: 7)
!16246 = !DILocation(line: 2626, column: 7, scope: !16133)
!16247 = !DILocation(line: 2628, column: 8, scope: !16248)
!16248 = distinct !DILexicalBlock(scope: !16249, file: !3, line: 2628, column: 8)
!16249 = distinct !DILexicalBlock(scope: !16245, file: !3, line: 2626, column: 17)
!16250 = !DILocation(line: 2628, column: 12, scope: !16248)
!16251 = !DILocation(line: 2628, column: 17, scope: !16248)
!16252 = !DILocation(line: 2628, column: 26, scope: !16248)
!16253 = !DILocation(line: 2628, column: 8, scope: !16249)
!16254 = !DILocation(line: 2630, column: 18, scope: !16255)
!16255 = distinct !DILexicalBlock(scope: !16248, file: !3, line: 2628, column: 44)
!16256 = !DILocation(line: 2630, column: 22, scope: !16255)
!16257 = !DILocation(line: 2630, column: 27, scope: !16255)
!16258 = !DILocation(line: 2630, column: 37, scope: !16255)
!16259 = !DILocation(line: 2630, column: 33, scope: !16255)
!16260 = !DILocation(line: 2630, column: 5, scope: !16255)
!16261 = !DILocation(line: 2631, column: 4, scope: !16255)
!16262 = !DILocation(line: 2632, column: 13, scope: !16263)
!16263 = distinct !DILexicalBlock(scope: !16248, file: !3, line: 2632, column: 13)
!16264 = !DILocation(line: 2632, column: 17, scope: !16263)
!16265 = !DILocation(line: 2632, column: 22, scope: !16263)
!16266 = !DILocation(line: 2632, column: 31, scope: !16263)
!16267 = !DILocation(line: 2632, column: 13, scope: !16248)
!16268 = !DILocation(line: 2634, column: 25, scope: !16269)
!16269 = distinct !DILexicalBlock(scope: !16263, file: !3, line: 2632, column: 54)
!16270 = !DILocation(line: 2634, column: 29, scope: !16269)
!16271 = !DILocation(line: 2634, column: 34, scope: !16269)
!16272 = !DILocation(line: 2634, column: 44, scope: !16269)
!16273 = !DILocation(line: 2634, column: 48, scope: !16269)
!16274 = !DILocation(line: 2634, column: 53, scope: !16269)
!16275 = !DILocation(line: 2634, column: 66, scope: !16269)
!16276 = !DILocation(line: 2634, column: 62, scope: !16269)
!16277 = !DILocation(line: 2634, column: 5, scope: !16269)
!16278 = !DILocation(line: 2635, column: 4, scope: !16269)
!16279 = !DILocation(line: 2638, column: 18, scope: !16280)
!16280 = distinct !DILexicalBlock(scope: !16263, file: !3, line: 2636, column: 9)
!16281 = !DILocation(line: 2638, column: 22, scope: !16280)
!16282 = !DILocation(line: 2638, column: 27, scope: !16280)
!16283 = !DILocation(line: 2638, column: 32, scope: !16280)
!16284 = !DILocation(line: 2638, column: 36, scope: !16280)
!16285 = !DILocation(line: 2638, column: 41, scope: !16280)
!16286 = !DILocation(line: 2638, column: 55, scope: !16280)
!16287 = !DILocation(line: 2638, column: 51, scope: !16280)
!16288 = !DILocation(line: 2638, column: 5, scope: !16280)
!16289 = !DILocation(line: 2640, column: 3, scope: !16249)
!16290 = !DILocation(line: 2641, column: 2, scope: !16133)
!16291 = !DILocation(line: 2642, column: 1, scope: !16123)
!16292 = distinct !DISubprogram(name: "constraintob_from_transdata", scope: !3, file: !3, line: 2549, type: !16293, scopeLine: 2550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!16293 = !DISubroutineType(types: !16294)
!16294 = !{null, !16295, !3868}
!16295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14328, size: 64)
!16296 = !DILocalVariable(name: "cob", arg: 1, scope: !16292, file: !3, line: 2549, type: !16295)
!16297 = !DILocation(line: 2549, column: 56, scope: !16292)
!16298 = !DILocalVariable(name: "td", arg: 2, scope: !16292, file: !3, line: 2549, type: !3868)
!16299 = !DILocation(line: 2549, column: 72, scope: !16292)
!16300 = !DILocation(line: 2555, column: 9, scope: !16292)
!16301 = !DILocation(line: 2555, column: 2, scope: !16292)
!16302 = !DILocation(line: 2556, column: 6, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16292, file: !3, line: 2556, column: 6)
!16304 = !DILocation(line: 2556, column: 10, scope: !16303)
!16305 = !DILocation(line: 2556, column: 6, scope: !16292)
!16306 = !DILocation(line: 2557, column: 7, scope: !16307)
!16307 = distinct !DILexicalBlock(scope: !16308, file: !3, line: 2557, column: 7)
!16308 = distinct !DILexicalBlock(scope: !16303, file: !3, line: 2556, column: 15)
!16309 = !DILocation(line: 2557, column: 11, scope: !16307)
!16310 = !DILocation(line: 2557, column: 16, scope: !16307)
!16311 = !DILocation(line: 2557, column: 25, scope: !16307)
!16312 = !DILocation(line: 2557, column: 7, scope: !16308)
!16313 = !DILocalVariable(name: "quat", scope: !16314, file: !3, line: 2562, type: !2062)
!16314 = distinct !DILexicalBlock(scope: !16307, file: !3, line: 2557, column: 43)
!16315 = !DILocation(line: 2562, column: 10, scope: !16314)
!16316 = !DILocation(line: 2563, column: 20, scope: !16314)
!16317 = !DILocation(line: 2563, column: 26, scope: !16314)
!16318 = !DILocation(line: 2563, column: 30, scope: !16314)
!16319 = !DILocation(line: 2563, column: 35, scope: !16314)
!16320 = !DILocation(line: 2563, column: 4, scope: !16314)
!16321 = !DILocation(line: 2564, column: 17, scope: !16314)
!16322 = !DILocation(line: 2564, column: 22, scope: !16314)
!16323 = !DILocation(line: 2564, column: 30, scope: !16314)
!16324 = !DILocation(line: 2564, column: 4, scope: !16314)
!16325 = !DILocation(line: 2565, column: 3, scope: !16314)
!16326 = !DILocation(line: 2566, column: 12, scope: !16327)
!16327 = distinct !DILexicalBlock(scope: !16307, file: !3, line: 2566, column: 12)
!16328 = !DILocation(line: 2566, column: 16, scope: !16327)
!16329 = !DILocation(line: 2566, column: 21, scope: !16327)
!16330 = !DILocation(line: 2566, column: 30, scope: !16327)
!16331 = !DILocation(line: 2566, column: 12, scope: !16307)
!16332 = !DILocation(line: 2568, column: 23, scope: !16333)
!16333 = distinct !DILexicalBlock(scope: !16327, file: !3, line: 2566, column: 53)
!16334 = !DILocation(line: 2568, column: 28, scope: !16333)
!16335 = !DILocation(line: 2568, column: 37, scope: !16333)
!16336 = !DILocation(line: 2568, column: 41, scope: !16333)
!16337 = !DILocation(line: 2568, column: 46, scope: !16333)
!16338 = !DILocation(line: 2568, column: 55, scope: !16333)
!16339 = !DILocation(line: 2568, column: 59, scope: !16333)
!16340 = !DILocation(line: 2568, column: 64, scope: !16333)
!16341 = !DILocation(line: 2568, column: 4, scope: !16333)
!16342 = !DILocation(line: 2569, column: 3, scope: !16333)
!16343 = !DILocation(line: 2572, column: 17, scope: !16344)
!16344 = distinct !DILexicalBlock(scope: !16327, file: !3, line: 2570, column: 8)
!16345 = !DILocation(line: 2572, column: 22, scope: !16344)
!16346 = !DILocation(line: 2572, column: 30, scope: !16344)
!16347 = !DILocation(line: 2572, column: 34, scope: !16344)
!16348 = !DILocation(line: 2572, column: 39, scope: !16344)
!16349 = !DILocation(line: 2572, column: 44, scope: !16344)
!16350 = !DILocation(line: 2572, column: 48, scope: !16344)
!16351 = !DILocation(line: 2572, column: 53, scope: !16344)
!16352 = !DILocation(line: 2572, column: 4, scope: !16344)
!16353 = !DILocation(line: 2574, column: 2, scope: !16308)
!16354 = !DILocation(line: 2575, column: 1, scope: !16292)
!16355 = distinct !DISubprogram(name: "applyTrackball", scope: !3, file: !3, line: 3982, type: !12679, scopeLine: 3983, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!16356 = !DILocalVariable(name: "t", arg: 1, scope: !16355, file: !3, line: 3982, type: !3841)
!16357 = !DILocation(line: 3982, column: 39, scope: !16355)
!16358 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !16355, file: !3, line: 3982, type: !3857)
!16359 = !DILocation(line: 3982, column: 52, scope: !16355)
!16360 = !DILocalVariable(name: "str", scope: !16355, file: !3, line: 3984, type: !2366)
!16361 = !DILocation(line: 3984, column: 7, scope: !16355)
!16362 = !DILocalVariable(name: "ofs", scope: !16355, file: !3, line: 3985, type: !13646)
!16363 = !DILocation(line: 3985, column: 9, scope: !16355)
!16364 = !DILocalVariable(name: "axis1", scope: !16355, file: !3, line: 3986, type: !1987)
!16365 = !DILocation(line: 3986, column: 8, scope: !16355)
!16366 = !DILocalVariable(name: "axis2", scope: !16355, file: !3, line: 3986, type: !1987)
!16367 = !DILocation(line: 3986, column: 18, scope: !16355)
!16368 = !DILocalVariable(name: "mat", scope: !16355, file: !3, line: 3987, type: !3881)
!16369 = !DILocation(line: 3987, column: 8, scope: !16355)
!16370 = !DILocalVariable(name: "totmat", scope: !16355, file: !3, line: 3987, type: !3881)
!16371 = !DILocation(line: 3987, column: 19, scope: !16355)
!16372 = !DILocalVariable(name: "smat", scope: !16355, file: !3, line: 3987, type: !3881)
!16373 = !DILocation(line: 3987, column: 33, scope: !16355)
!16374 = !DILocalVariable(name: "phi", scope: !16355, file: !3, line: 3988, type: !1754)
!16375 = !DILocation(line: 3988, column: 8, scope: !16355)
!16376 = !DILocation(line: 3990, column: 13, scope: !16355)
!16377 = !DILocation(line: 3990, column: 20, scope: !16355)
!16378 = !DILocation(line: 3990, column: 23, scope: !16355)
!16379 = !DILocation(line: 3990, column: 2, scope: !16355)
!16380 = !DILocation(line: 3991, column: 13, scope: !16355)
!16381 = !DILocation(line: 3991, column: 20, scope: !16355)
!16382 = !DILocation(line: 3991, column: 23, scope: !16355)
!16383 = !DILocation(line: 3991, column: 2, scope: !16355)
!16384 = !DILocation(line: 3992, column: 15, scope: !16355)
!16385 = !DILocation(line: 3992, column: 2, scope: !16355)
!16386 = !DILocation(line: 3993, column: 15, scope: !16355)
!16387 = !DILocation(line: 3993, column: 2, scope: !16355)
!16388 = !DILocation(line: 3995, column: 11, scope: !16355)
!16389 = !DILocation(line: 3995, column: 14, scope: !16355)
!16390 = !DILocation(line: 3995, column: 2, scope: !16355)
!16391 = !DILocation(line: 3995, column: 9, scope: !16355)
!16392 = !DILocation(line: 3996, column: 11, scope: !16355)
!16393 = !DILocation(line: 3996, column: 14, scope: !16355)
!16394 = !DILocation(line: 3996, column: 2, scope: !16355)
!16395 = !DILocation(line: 3996, column: 9, scope: !16355)
!16396 = !DILocation(line: 3998, column: 20, scope: !16355)
!16397 = !DILocation(line: 3998, column: 23, scope: !16355)
!16398 = !DILocation(line: 3998, column: 2, scope: !16355)
!16399 = !DILocation(line: 4000, column: 17, scope: !16355)
!16400 = !DILocation(line: 4000, column: 20, scope: !16355)
!16401 = !DILocation(line: 4000, column: 25, scope: !16355)
!16402 = !DILocation(line: 4000, column: 2, scope: !16355)
!16403 = !DILocation(line: 4002, column: 19, scope: !16404)
!16404 = distinct !DILexicalBlock(scope: !16355, file: !3, line: 4002, column: 6)
!16405 = !DILocation(line: 4002, column: 22, scope: !16404)
!16406 = !DILocation(line: 4002, column: 6, scope: !16404)
!16407 = !DILocation(line: 4002, column: 6, scope: !16355)
!16408 = !DILocalVariable(name: "c", scope: !16409, file: !3, line: 4003, type: !3060)
!16409 = distinct !DILexicalBlock(scope: !16404, file: !3, line: 4002, column: 28)
!16410 = !DILocation(line: 4003, column: 8, scope: !16409)
!16411 = !DILocation(line: 4005, column: 20, scope: !16409)
!16412 = !DILocation(line: 4005, column: 23, scope: !16409)
!16413 = !DILocation(line: 4005, column: 29, scope: !16409)
!16414 = !DILocation(line: 4005, column: 33, scope: !16409)
!16415 = !DILocation(line: 4005, column: 36, scope: !16409)
!16416 = !DILocation(line: 4005, column: 43, scope: !16409)
!16417 = !DILocation(line: 4005, column: 3, scope: !16409)
!16418 = !DILocation(line: 4007, column: 23, scope: !16409)
!16419 = !DILocation(line: 4007, column: 29, scope: !16409)
!16420 = !DILocation(line: 4007, column: 27, scope: !16409)
!16421 = !DILocation(line: 4007, column: 49, scope: !16409)
!16422 = !DILocation(line: 4007, column: 47, scope: !16409)
!16423 = !DILocation(line: 4008, column: 24, scope: !16409)
!16424 = !DILocation(line: 4008, column: 31, scope: !16409)
!16425 = !DILocation(line: 4008, column: 51, scope: !16409)
!16426 = !DILocation(line: 4008, column: 54, scope: !16409)
!16427 = !DILocation(line: 4007, column: 10, scope: !16409)
!16428 = !DILocation(line: 4007, column: 7, scope: !16409)
!16429 = !DILocation(line: 4009, column: 2, scope: !16409)
!16430 = !DILocation(line: 4011, column: 23, scope: !16431)
!16431 = distinct !DILexicalBlock(scope: !16404, file: !3, line: 4010, column: 7)
!16432 = !DILocation(line: 4011, column: 29, scope: !16431)
!16433 = !DILocation(line: 4011, column: 27, scope: !16431)
!16434 = !DILocation(line: 4011, column: 49, scope: !16431)
!16435 = !DILocation(line: 4011, column: 47, scope: !16431)
!16436 = !DILocation(line: 4012, column: 23, scope: !16431)
!16437 = !DILocation(line: 4012, column: 41, scope: !16431)
!16438 = !DILocation(line: 4012, column: 59, scope: !16431)
!16439 = !DILocation(line: 4012, column: 62, scope: !16431)
!16440 = !DILocation(line: 4011, column: 10, scope: !16431)
!16441 = !DILocation(line: 4011, column: 7, scope: !16431)
!16442 = !DILocation(line: 4015, column: 6, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16355, file: !3, line: 4015, column: 6)
!16444 = !DILocation(line: 4015, column: 9, scope: !16443)
!16445 = !DILocation(line: 4015, column: 14, scope: !16443)
!16446 = !DILocation(line: 4015, column: 6, scope: !16355)
!16447 = !DILocation(line: 4016, column: 23, scope: !16448)
!16448 = distinct !DILexicalBlock(scope: !16443, file: !3, line: 4015, column: 33)
!16449 = !DILocation(line: 4016, column: 29, scope: !16448)
!16450 = !DILocation(line: 4016, column: 27, scope: !16448)
!16451 = !DILocation(line: 4016, column: 49, scope: !16448)
!16452 = !DILocation(line: 4016, column: 47, scope: !16448)
!16453 = !DILocation(line: 4016, column: 90, scope: !16448)
!16454 = !DILocation(line: 4016, column: 93, scope: !16448)
!16455 = !DILocation(line: 4016, column: 10, scope: !16448)
!16456 = !DILocation(line: 4016, column: 7, scope: !16448)
!16457 = !DILocation(line: 4017, column: 2, scope: !16448)
!16458 = !DILocation(line: 4019, column: 32, scope: !16355)
!16459 = !DILocation(line: 4019, column: 38, scope: !16355)
!16460 = !DILocation(line: 4019, column: 45, scope: !16355)
!16461 = !DILocation(line: 4019, column: 2, scope: !16355)
!16462 = !DILocation(line: 4020, column: 32, scope: !16355)
!16463 = !DILocation(line: 4020, column: 40, scope: !16355)
!16464 = !DILocation(line: 4020, column: 47, scope: !16355)
!16465 = !DILocation(line: 4020, column: 2, scope: !16355)
!16466 = !DILocation(line: 4022, column: 14, scope: !16355)
!16467 = !DILocation(line: 4022, column: 19, scope: !16355)
!16468 = !DILocation(line: 4022, column: 25, scope: !16355)
!16469 = !DILocation(line: 4022, column: 2, scope: !16355)
!16470 = !DILocation(line: 4027, column: 22, scope: !16355)
!16471 = !DILocation(line: 4027, column: 25, scope: !16355)
!16472 = !DILocation(line: 4027, column: 32, scope: !16355)
!16473 = !DILocation(line: 4027, column: 39, scope: !16355)
!16474 = !DILocation(line: 4027, column: 2, scope: !16355)
!16475 = !DILocation(line: 4029, column: 13, scope: !16355)
!16476 = !DILocation(line: 4029, column: 2, scope: !16355)
!16477 = !DILocation(line: 4031, column: 22, scope: !16355)
!16478 = !DILocation(line: 4031, column: 25, scope: !16355)
!16479 = !DILocation(line: 4031, column: 29, scope: !16355)
!16480 = !DILocation(line: 4031, column: 2, scope: !16355)
!16481 = !DILocation(line: 4032, column: 1, scope: !16355)
!16482 = distinct !DISubprogram(name: "applyTrackballValue", scope: !3, file: !3, line: 3953, type: !16483, scopeLine: 3954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!16483 = !DISubroutineType(types: !16484)
!16484 = !{null, !3841, !3980, !3980, !1773}
!16485 = !DILocalVariable(name: "t", arg: 1, scope: !16482, file: !3, line: 3953, type: !3841)
!16486 = !DILocation(line: 3953, column: 44, scope: !16482)
!16487 = !DILocalVariable(name: "axis1", arg: 2, scope: !16482, file: !3, line: 3953, type: !3980)
!16488 = !DILocation(line: 3953, column: 59, scope: !16482)
!16489 = !DILocalVariable(name: "axis2", arg: 3, scope: !16482, file: !3, line: 3953, type: !3980)
!16490 = !DILocation(line: 3953, column: 81, scope: !16482)
!16491 = !DILocalVariable(name: "angles", arg: 4, scope: !16482, file: !3, line: 3953, type: !1773)
!16492 = !DILocation(line: 3953, column: 97, scope: !16482)
!16493 = !DILocalVariable(name: "td", scope: !16482, file: !3, line: 3955, type: !3868)
!16494 = !DILocation(line: 3955, column: 13, scope: !16482)
!16495 = !DILocation(line: 3955, column: 18, scope: !16482)
!16496 = !DILocation(line: 3955, column: 21, scope: !16482)
!16497 = !DILocalVariable(name: "mat", scope: !16482, file: !3, line: 3956, type: !3881)
!16498 = !DILocation(line: 3956, column: 8, scope: !16482)
!16499 = !DILocalVariable(name: "smat", scope: !16482, file: !3, line: 3956, type: !3881)
!16500 = !DILocation(line: 3956, column: 19, scope: !16482)
!16501 = !DILocalVariable(name: "totmat", scope: !16482, file: !3, line: 3956, type: !3881)
!16502 = !DILocation(line: 3956, column: 31, scope: !16482)
!16503 = !DILocalVariable(name: "i", scope: !16482, file: !3, line: 3957, type: !35)
!16504 = !DILocation(line: 3957, column: 6, scope: !16482)
!16505 = !DILocation(line: 3959, column: 32, scope: !16482)
!16506 = !DILocation(line: 3959, column: 38, scope: !16482)
!16507 = !DILocation(line: 3959, column: 45, scope: !16482)
!16508 = !DILocation(line: 3959, column: 2, scope: !16482)
!16509 = !DILocation(line: 3960, column: 32, scope: !16482)
!16510 = !DILocation(line: 3960, column: 40, scope: !16482)
!16511 = !DILocation(line: 3960, column: 47, scope: !16482)
!16512 = !DILocation(line: 3960, column: 2, scope: !16482)
!16513 = !DILocation(line: 3962, column: 14, scope: !16482)
!16514 = !DILocation(line: 3962, column: 19, scope: !16482)
!16515 = !DILocation(line: 3962, column: 25, scope: !16482)
!16516 = !DILocation(line: 3962, column: 2, scope: !16482)
!16517 = !DILocation(line: 3964, column: 9, scope: !16518)
!16518 = distinct !DILexicalBlock(scope: !16482, file: !3, line: 3964, column: 2)
!16519 = !DILocation(line: 3964, column: 7, scope: !16518)
!16520 = !DILocation(line: 3964, column: 14, scope: !16521)
!16521 = distinct !DILexicalBlock(scope: !16518, file: !3, line: 3964, column: 2)
!16522 = !DILocation(line: 3964, column: 18, scope: !16521)
!16523 = !DILocation(line: 3964, column: 21, scope: !16521)
!16524 = !DILocation(line: 3964, column: 16, scope: !16521)
!16525 = !DILocation(line: 3964, column: 2, scope: !16518)
!16526 = !DILocation(line: 3965, column: 7, scope: !16527)
!16527 = distinct !DILexicalBlock(scope: !16528, file: !3, line: 3965, column: 7)
!16528 = distinct !DILexicalBlock(scope: !16521, file: !3, line: 3964, column: 39)
!16529 = !DILocation(line: 3965, column: 11, scope: !16527)
!16530 = !DILocation(line: 3965, column: 16, scope: !16527)
!16531 = !DILocation(line: 3965, column: 7, scope: !16528)
!16532 = !DILocation(line: 3966, column: 4, scope: !16527)
!16533 = !DILocation(line: 3968, column: 7, scope: !16534)
!16534 = distinct !DILexicalBlock(scope: !16528, file: !3, line: 3968, column: 7)
!16535 = !DILocation(line: 3968, column: 11, scope: !16534)
!16536 = !DILocation(line: 3968, column: 16, scope: !16534)
!16537 = !DILocation(line: 3968, column: 7, scope: !16528)
!16538 = !DILocation(line: 3969, column: 4, scope: !16534)
!16539 = !DILocation(line: 3971, column: 7, scope: !16540)
!16540 = distinct !DILexicalBlock(scope: !16528, file: !3, line: 3971, column: 7)
!16541 = !DILocation(line: 3971, column: 10, scope: !16540)
!16542 = !DILocation(line: 3971, column: 15, scope: !16540)
!16543 = !DILocation(line: 3971, column: 7, scope: !16528)
!16544 = !DILocation(line: 3972, column: 34, scope: !16545)
!16545 = distinct !DILexicalBlock(scope: !16540, file: !3, line: 3971, column: 30)
!16546 = !DILocation(line: 3972, column: 40, scope: !16545)
!16547 = !DILocation(line: 3972, column: 47, scope: !16545)
!16548 = !DILocation(line: 3972, column: 51, scope: !16545)
!16549 = !DILocation(line: 3972, column: 60, scope: !16545)
!16550 = !DILocation(line: 3972, column: 58, scope: !16545)
!16551 = !DILocation(line: 3972, column: 4, scope: !16545)
!16552 = !DILocation(line: 3973, column: 34, scope: !16545)
!16553 = !DILocation(line: 3973, column: 42, scope: !16545)
!16554 = !DILocation(line: 3973, column: 49, scope: !16545)
!16555 = !DILocation(line: 3973, column: 53, scope: !16545)
!16556 = !DILocation(line: 3973, column: 62, scope: !16545)
!16557 = !DILocation(line: 3973, column: 60, scope: !16545)
!16558 = !DILocation(line: 3973, column: 4, scope: !16545)
!16559 = !DILocation(line: 3975, column: 16, scope: !16545)
!16560 = !DILocation(line: 3975, column: 21, scope: !16545)
!16561 = !DILocation(line: 3975, column: 27, scope: !16545)
!16562 = !DILocation(line: 3975, column: 4, scope: !16545)
!16563 = !DILocation(line: 3976, column: 3, scope: !16545)
!16564 = !DILocation(line: 3978, column: 19, scope: !16528)
!16565 = !DILocation(line: 3978, column: 22, scope: !16528)
!16566 = !DILocation(line: 3978, column: 26, scope: !16528)
!16567 = !DILocation(line: 3978, column: 31, scope: !16528)
!16568 = !DILocation(line: 3978, column: 34, scope: !16528)
!16569 = !DILocation(line: 3978, column: 3, scope: !16528)
!16570 = !DILocation(line: 3979, column: 2, scope: !16528)
!16571 = !DILocation(line: 3964, column: 29, scope: !16521)
!16572 = !DILocation(line: 3964, column: 35, scope: !16521)
!16573 = !DILocation(line: 3964, column: 2, scope: !16521)
!16574 = distinct !{!16574, !16525, !16575}
!16575 = !DILocation(line: 3979, column: 2, scope: !16518)
!16576 = !DILocation(line: 3980, column: 1, scope: !16482)
!16577 = distinct !DISubprogram(name: "applyTranslation", scope: !3, file: !3, line: 4261, type: !12679, scopeLine: 4262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!16578 = !DILocalVariable(name: "t", arg: 1, scope: !16577, file: !3, line: 4261, type: !3841)
!16579 = !DILocation(line: 4261, column: 41, scope: !16577)
!16580 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !16577, file: !3, line: 4261, type: !3857)
!16581 = !DILocation(line: 4261, column: 54, scope: !16577)
!16582 = !DILocalVariable(name: "str", scope: !16577, file: !3, line: 4263, type: !2366)
!16583 = !DILocation(line: 4263, column: 7, scope: !16577)
!16584 = !DILocation(line: 4265, column: 6, scope: !16585)
!16585 = distinct !DILexicalBlock(scope: !16577, file: !3, line: 4265, column: 6)
!16586 = !DILocation(line: 4265, column: 9, scope: !16585)
!16587 = !DILocation(line: 4265, column: 13, scope: !16585)
!16588 = !DILocation(line: 4265, column: 18, scope: !16585)
!16589 = !DILocation(line: 4265, column: 6, scope: !16577)
!16590 = !DILocalVariable(name: "pvec", scope: !16591, file: !3, line: 4266, type: !1987)
!16591 = distinct !DILexicalBlock(scope: !16585, file: !3, line: 4265, column: 31)
!16592 = !DILocation(line: 4266, column: 9, scope: !16591)
!16593 = !DILocalVariable(name: "tvec", scope: !16591, file: !3, line: 4267, type: !1987)
!16594 = !DILocation(line: 4267, column: 9, scope: !16591)
!16595 = !DILocation(line: 4268, column: 22, scope: !16596)
!16596 = distinct !DILexicalBlock(scope: !16591, file: !3, line: 4268, column: 7)
!16597 = !DILocation(line: 4268, column: 25, scope: !16596)
!16598 = !DILocation(line: 4268, column: 30, scope: !16596)
!16599 = !DILocation(line: 4268, column: 33, scope: !16596)
!16600 = !DILocation(line: 4268, column: 7, scope: !16596)
!16601 = !DILocation(line: 4268, column: 7, scope: !16591)
!16602 = !DILocation(line: 4269, column: 22, scope: !16603)
!16603 = distinct !DILexicalBlock(scope: !16596, file: !3, line: 4268, column: 42)
!16604 = !DILocation(line: 4269, column: 25, scope: !16603)
!16605 = !DILocation(line: 4269, column: 28, scope: !16603)
!16606 = !DILocation(line: 4269, column: 4, scope: !16603)
!16607 = !DILocation(line: 4270, column: 3, scope: !16603)
!16608 = !DILocation(line: 4271, column: 17, scope: !16591)
!16609 = !DILocation(line: 4271, column: 20, scope: !16591)
!16610 = !DILocation(line: 4271, column: 23, scope: !16591)
!16611 = !DILocation(line: 4271, column: 3, scope: !16591)
!16612 = !DILocation(line: 4272, column: 3, scope: !16591)
!16613 = !DILocation(line: 4272, column: 6, scope: !16591)
!16614 = !DILocation(line: 4272, column: 10, scope: !16591)
!16615 = !DILocation(line: 4272, column: 19, scope: !16591)
!16616 = !DILocation(line: 4272, column: 28, scope: !16591)
!16617 = !DILocation(line: 4272, column: 31, scope: !16591)
!16618 = !DILocation(line: 4272, column: 39, scope: !16591)
!16619 = !DILocation(line: 4272, column: 45, scope: !16591)
!16620 = !DILocation(line: 4273, column: 14, scope: !16591)
!16621 = !DILocation(line: 4273, column: 17, scope: !16591)
!16622 = !DILocation(line: 4273, column: 25, scope: !16591)
!16623 = !DILocation(line: 4273, column: 3, scope: !16591)
!16624 = !DILocation(line: 4274, column: 21, scope: !16591)
!16625 = !DILocation(line: 4274, column: 24, scope: !16591)
!16626 = !DILocation(line: 4274, column: 30, scope: !16591)
!16627 = !DILocation(line: 4274, column: 3, scope: !16591)
!16628 = !DILocation(line: 4275, column: 2, scope: !16591)
!16629 = !DILocation(line: 4277, column: 21, scope: !16630)
!16630 = distinct !DILexicalBlock(scope: !16585, file: !3, line: 4276, column: 7)
!16631 = !DILocation(line: 4277, column: 24, scope: !16630)
!16632 = !DILocation(line: 4277, column: 27, scope: !16630)
!16633 = !DILocation(line: 4277, column: 3, scope: !16630)
!16634 = !DILocation(line: 4278, column: 22, scope: !16635)
!16635 = distinct !DILexicalBlock(scope: !16630, file: !3, line: 4278, column: 7)
!16636 = !DILocation(line: 4278, column: 25, scope: !16635)
!16637 = !DILocation(line: 4278, column: 30, scope: !16635)
!16638 = !DILocation(line: 4278, column: 33, scope: !16635)
!16639 = !DILocation(line: 4278, column: 7, scope: !16635)
!16640 = !DILocation(line: 4278, column: 7, scope: !16630)
!16641 = !DILocation(line: 4279, column: 22, scope: !16642)
!16642 = distinct !DILexicalBlock(scope: !16635, file: !3, line: 4278, column: 42)
!16643 = !DILocation(line: 4279, column: 25, scope: !16642)
!16644 = !DILocation(line: 4279, column: 28, scope: !16642)
!16645 = !DILocation(line: 4279, column: 4, scope: !16642)
!16646 = !DILocation(line: 4280, column: 3, scope: !16642)
!16647 = !DILocation(line: 4281, column: 17, scope: !16630)
!16648 = !DILocation(line: 4281, column: 20, scope: !16630)
!16649 = !DILocation(line: 4281, column: 23, scope: !16630)
!16650 = !DILocation(line: 4281, column: 3, scope: !16630)
!16651 = !DILocation(line: 4282, column: 21, scope: !16630)
!16652 = !DILocation(line: 4282, column: 24, scope: !16630)
!16653 = !DILocation(line: 4282, column: 27, scope: !16630)
!16654 = !DILocation(line: 4282, column: 35, scope: !16630)
!16655 = !DILocation(line: 4282, column: 3, scope: !16630)
!16656 = !DILocation(line: 4285, column: 24, scope: !16577)
!16657 = !DILocation(line: 4285, column: 27, scope: !16577)
!16658 = !DILocation(line: 4285, column: 30, scope: !16577)
!16659 = !DILocation(line: 4285, column: 2, scope: !16577)
!16660 = !DILocation(line: 4288, column: 6, scope: !16661)
!16661 = distinct !DILexicalBlock(scope: !16577, file: !3, line: 4288, column: 6)
!16662 = !DILocation(line: 4288, column: 9, scope: !16661)
!16663 = !DILocation(line: 4288, column: 14, scope: !16661)
!16664 = !DILocation(line: 4288, column: 26, scope: !16661)
!16665 = !DILocation(line: 4288, column: 45, scope: !16661)
!16666 = !DILocation(line: 4288, column: 48, scope: !16661)
!16667 = !DILocation(line: 4288, column: 51, scope: !16661)
!16668 = !DILocation(line: 4288, column: 29, scope: !16661)
!16669 = !DILocation(line: 4288, column: 6, scope: !16577)
!16670 = !DILocation(line: 4289, column: 25, scope: !16671)
!16671 = distinct !DILexicalBlock(scope: !16661, file: !3, line: 4288, column: 63)
!16672 = !DILocation(line: 4289, column: 28, scope: !16671)
!16673 = !DILocation(line: 4289, column: 31, scope: !16671)
!16674 = !DILocation(line: 4289, column: 3, scope: !16671)
!16675 = !DILocation(line: 4295, column: 7, scope: !16676)
!16676 = distinct !DILexicalBlock(scope: !16671, file: !3, line: 4295, column: 7)
!16677 = !DILocation(line: 4295, column: 10, scope: !16676)
!16678 = !DILocation(line: 4295, column: 15, scope: !16676)
!16679 = !DILocation(line: 4295, column: 7, scope: !16671)
!16680 = !DILocation(line: 4296, column: 15, scope: !16681)
!16681 = distinct !DILexicalBlock(scope: !16676, file: !3, line: 4295, column: 34)
!16682 = !DILocation(line: 4296, column: 4, scope: !16681)
!16683 = !DILocation(line: 4297, column: 3, scope: !16681)
!16684 = !DILocation(line: 4298, column: 2, scope: !16671)
!16685 = !DILocation(line: 4300, column: 13, scope: !16577)
!16686 = !DILocation(line: 4300, column: 2, scope: !16577)
!16687 = !DILocation(line: 4302, column: 22, scope: !16577)
!16688 = !DILocation(line: 4302, column: 25, scope: !16577)
!16689 = !DILocation(line: 4302, column: 29, scope: !16577)
!16690 = !DILocation(line: 4302, column: 2, scope: !16577)
!16691 = !DILocation(line: 4303, column: 1, scope: !16577)
!16692 = distinct !DISubprogram(name: "headerTranslation", scope: !3, file: !3, line: 4101, type: !13632, scopeLine: 4102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!16693 = !DILocalVariable(name: "t", arg: 1, scope: !16692, file: !3, line: 4101, type: !3841)
!16694 = !DILocation(line: 4101, column: 42, scope: !16692)
!16695 = !DILocalVariable(name: "vec", arg: 2, scope: !16692, file: !3, line: 4101, type: !1773)
!16696 = !DILocation(line: 4101, column: 51, scope: !16692)
!16697 = !DILocalVariable(name: "str", arg: 3, scope: !16692, file: !3, line: 4101, type: !2050)
!16698 = !DILocation(line: 4101, column: 64, scope: !16692)
!16699 = !DILocalVariable(name: "ofs", scope: !16692, file: !3, line: 4103, type: !13646)
!16700 = !DILocation(line: 4103, column: 9, scope: !16692)
!16701 = !DILocalVariable(name: "tvec", scope: !16692, file: !3, line: 4104, type: !13641)
!16702 = !DILocation(line: 4104, column: 7, scope: !16692)
!16703 = !DILocalVariable(name: "distvec", scope: !16692, file: !3, line: 4105, type: !22)
!16704 = !DILocation(line: 4105, column: 7, scope: !16692)
!16705 = !DILocalVariable(name: "autoik", scope: !16692, file: !3, line: 4106, type: !22)
!16706 = !DILocation(line: 4106, column: 7, scope: !16692)
!16707 = !DILocalVariable(name: "dist", scope: !16692, file: !3, line: 4107, type: !1727)
!16708 = !DILocation(line: 4107, column: 8, scope: !16692)
!16709 = !DILocation(line: 4109, column: 19, scope: !16710)
!16710 = distinct !DILexicalBlock(scope: !16692, file: !3, line: 4109, column: 6)
!16711 = !DILocation(line: 4109, column: 22, scope: !16710)
!16712 = !DILocation(line: 4109, column: 6, scope: !16710)
!16713 = !DILocation(line: 4109, column: 6, scope: !16692)
!16714 = !DILocation(line: 4110, column: 20, scope: !16715)
!16715 = distinct !DILexicalBlock(scope: !16710, file: !3, line: 4109, column: 28)
!16716 = !DILocation(line: 4110, column: 23, scope: !16715)
!16717 = !DILocation(line: 4110, column: 29, scope: !16715)
!16718 = !DILocation(line: 4110, column: 36, scope: !16715)
!16719 = !DILocation(line: 4110, column: 39, scope: !16715)
!16720 = !DILocation(line: 4110, column: 46, scope: !16715)
!16721 = !DILocation(line: 4110, column: 3, scope: !16715)
!16722 = !DILocation(line: 4111, column: 17, scope: !16715)
!16723 = !DILocation(line: 4111, column: 20, scope: !16715)
!16724 = !DILocation(line: 4111, column: 24, scope: !16715)
!16725 = !DILocation(line: 4111, column: 10, scope: !16715)
!16726 = !DILocation(line: 4111, column: 8, scope: !16715)
!16727 = !DILocation(line: 4112, column: 2, scope: !16715)
!16728 = !DILocalVariable(name: "dvec", scope: !16729, file: !3, line: 4114, type: !1987)
!16729 = distinct !DILexicalBlock(scope: !16710, file: !3, line: 4113, column: 7)
!16730 = !DILocation(line: 4114, column: 9, scope: !16729)
!16731 = !DILocation(line: 4116, column: 14, scope: !16729)
!16732 = !DILocation(line: 4116, column: 20, scope: !16729)
!16733 = !DILocation(line: 4116, column: 3, scope: !16729)
!16734 = !DILocation(line: 4117, column: 20, scope: !16729)
!16735 = !DILocation(line: 4117, column: 23, scope: !16729)
!16736 = !DILocation(line: 4117, column: 3, scope: !16729)
!16737 = !DILocation(line: 4119, column: 17, scope: !16729)
!16738 = !DILocation(line: 4119, column: 10, scope: !16729)
!16739 = !DILocation(line: 4119, column: 8, scope: !16729)
!16740 = !DILocation(line: 4120, column: 9, scope: !16741)
!16741 = distinct !DILexicalBlock(scope: !16729, file: !3, line: 4120, column: 7)
!16742 = !DILocation(line: 4120, column: 12, scope: !16741)
!16743 = !DILocation(line: 4120, column: 17, scope: !16741)
!16744 = !DILocation(line: 4120, column: 30, scope: !16741)
!16745 = !DILocation(line: 4120, column: 33, scope: !16741)
!16746 = !DILocation(line: 4120, column: 36, scope: !16741)
!16747 = !DILocation(line: 4120, column: 43, scope: !16741)
!16748 = !DILocation(line: 4120, column: 48, scope: !16741)
!16749 = !DILocation(line: 4120, column: 7, scope: !16729)
!16750 = !DILocalVariable(name: "do_split", scope: !16751, file: !3, line: 4121, type: !12045)
!16751 = distinct !DILexicalBlock(scope: !16741, file: !3, line: 4120, column: 56)
!16752 = !DILocation(line: 4121, column: 15, scope: !16751)
!16753 = !DILocation(line: 4121, column: 27, scope: !16751)
!16754 = !DILocation(line: 4121, column: 30, scope: !16751)
!16755 = !DILocation(line: 4121, column: 37, scope: !16751)
!16756 = !DILocation(line: 4121, column: 42, scope: !16751)
!16757 = !DILocation(line: 4121, column: 47, scope: !16751)
!16758 = !DILocation(line: 4121, column: 70, scope: !16751)
!16759 = !DILocation(line: 4121, column: 26, scope: !16751)
!16760 = !DILocalVariable(name: "i", scope: !16751, file: !3, line: 4122, type: !35)
!16761 = !DILocation(line: 4122, column: 8, scope: !16751)
!16762 = !DILocation(line: 4124, column: 11, scope: !16763)
!16763 = distinct !DILexicalBlock(scope: !16751, file: !3, line: 4124, column: 4)
!16764 = !DILocation(line: 4124, column: 9, scope: !16763)
!16765 = !DILocation(line: 4124, column: 16, scope: !16766)
!16766 = distinct !DILexicalBlock(scope: !16763, file: !3, line: 4124, column: 4)
!16767 = !DILocation(line: 4124, column: 18, scope: !16766)
!16768 = !DILocation(line: 4124, column: 4, scope: !16763)
!16769 = !DILocation(line: 4125, column: 44, scope: !16770)
!16770 = distinct !DILexicalBlock(scope: !16766, file: !3, line: 4124, column: 28)
!16771 = !DILocation(line: 4125, column: 42, scope: !16770)
!16772 = !DILocation(line: 4125, column: 21, scope: !16770)
!16773 = !DILocation(line: 4125, column: 70, scope: !16770)
!16774 = !DILocation(line: 4125, column: 65, scope: !16770)
!16775 = !DILocation(line: 4125, column: 75, scope: !16770)
!16776 = !DILocation(line: 4125, column: 78, scope: !16770)
!16777 = !DILocation(line: 4125, column: 85, scope: !16770)
!16778 = !DILocation(line: 4125, column: 90, scope: !16770)
!16779 = !DILocation(line: 4125, column: 73, scope: !16770)
!16780 = !DILocation(line: 4126, column: 23, scope: !16770)
!16781 = !DILocation(line: 4126, column: 26, scope: !16770)
!16782 = !DILocation(line: 4126, column: 33, scope: !16770)
!16783 = !DILocation(line: 4126, column: 38, scope: !16770)
!16784 = !DILocation(line: 4126, column: 61, scope: !16770)
!16785 = !DILocation(line: 4125, column: 5, scope: !16770)
!16786 = !DILocation(line: 4127, column: 4, scope: !16770)
!16787 = !DILocation(line: 4124, column: 24, scope: !16766)
!16788 = !DILocation(line: 4124, column: 4, scope: !16766)
!16789 = distinct !{!16789, !16768, !16790}
!16790 = !DILocation(line: 4127, column: 4, scope: !16763)
!16791 = !DILocation(line: 4128, column: 3, scope: !16751)
!16792 = !DILocation(line: 4130, column: 18, scope: !16793)
!16793 = distinct !DILexicalBlock(scope: !16741, file: !3, line: 4129, column: 8)
!16794 = !DILocation(line: 4130, column: 52, scope: !16793)
!16795 = !DILocation(line: 4130, column: 4, scope: !16793)
!16796 = !DILocation(line: 4131, column: 18, scope: !16793)
!16797 = !DILocation(line: 4131, column: 66, scope: !16793)
!16798 = !DILocation(line: 4131, column: 4, scope: !16793)
!16799 = !DILocation(line: 4132, column: 18, scope: !16793)
!16800 = !DILocation(line: 4132, column: 70, scope: !16793)
!16801 = !DILocation(line: 4132, column: 4, scope: !16793)
!16802 = !DILocation(line: 4136, column: 8, scope: !16803)
!16803 = distinct !DILexicalBlock(scope: !16692, file: !3, line: 4136, column: 6)
!16804 = !DILocation(line: 4136, column: 11, scope: !16803)
!16805 = !DILocation(line: 4136, column: 16, scope: !16803)
!16806 = !DILocation(line: 4136, column: 29, scope: !16803)
!16807 = !DILocation(line: 4136, column: 32, scope: !16803)
!16808 = !DILocation(line: 4136, column: 35, scope: !16803)
!16809 = !DILocation(line: 4136, column: 42, scope: !16803)
!16810 = !DILocation(line: 4136, column: 47, scope: !16803)
!16811 = !DILocation(line: 4136, column: 6, scope: !16692)
!16812 = !DILocalVariable(name: "do_split", scope: !16813, file: !3, line: 4137, type: !12045)
!16813 = distinct !DILexicalBlock(scope: !16803, file: !3, line: 4136, column: 55)
!16814 = !DILocation(line: 4137, column: 14, scope: !16813)
!16815 = !DILocation(line: 4137, column: 26, scope: !16813)
!16816 = !DILocation(line: 4137, column: 29, scope: !16813)
!16817 = !DILocation(line: 4137, column: 36, scope: !16813)
!16818 = !DILocation(line: 4137, column: 41, scope: !16813)
!16819 = !DILocation(line: 4137, column: 46, scope: !16813)
!16820 = !DILocation(line: 4137, column: 69, scope: !16813)
!16821 = !DILocation(line: 4137, column: 25, scope: !16813)
!16822 = !DILocation(line: 4138, column: 18, scope: !16813)
!16823 = !DILocation(line: 4138, column: 44, scope: !16813)
!16824 = !DILocation(line: 4138, column: 51, scope: !16813)
!16825 = !DILocation(line: 4138, column: 54, scope: !16813)
!16826 = !DILocation(line: 4138, column: 61, scope: !16813)
!16827 = !DILocation(line: 4138, column: 66, scope: !16813)
!16828 = !DILocation(line: 4138, column: 49, scope: !16813)
!16829 = !DILocation(line: 4138, column: 83, scope: !16813)
!16830 = !DILocation(line: 4138, column: 86, scope: !16813)
!16831 = !DILocation(line: 4138, column: 93, scope: !16813)
!16832 = !DILocation(line: 4138, column: 98, scope: !16813)
!16833 = !DILocation(line: 4139, column: 33, scope: !16813)
!16834 = !DILocation(line: 4138, column: 3, scope: !16813)
!16835 = !DILocation(line: 4140, column: 2, scope: !16813)
!16836 = !DILocation(line: 4141, column: 11, scope: !16837)
!16837 = distinct !DILexicalBlock(scope: !16803, file: !3, line: 4141, column: 11)
!16838 = !DILocation(line: 4141, column: 16, scope: !16837)
!16839 = !DILocation(line: 4141, column: 24, scope: !16837)
!16840 = !DILocation(line: 4141, column: 27, scope: !16837)
!16841 = !DILocation(line: 4141, column: 32, scope: !16837)
!16842 = !DILocation(line: 4141, column: 11, scope: !16803)
!16843 = !DILocation(line: 4143, column: 16, scope: !16844)
!16844 = distinct !DILexicalBlock(scope: !16837, file: !3, line: 4141, column: 43)
!16845 = !DILocation(line: 4143, column: 50, scope: !16844)
!16846 = !DILocation(line: 4143, column: 3, scope: !16844)
!16847 = !DILocation(line: 4144, column: 2, scope: !16844)
!16848 = !DILocation(line: 4146, column: 16, scope: !16849)
!16849 = distinct !DILexicalBlock(scope: !16837, file: !3, line: 4145, column: 7)
!16850 = !DILocation(line: 4146, column: 50, scope: !16849)
!16851 = !DILocation(line: 4146, column: 3, scope: !16849)
!16852 = !DILocation(line: 4149, column: 6, scope: !16853)
!16853 = distinct !DILexicalBlock(scope: !16692, file: !3, line: 4149, column: 6)
!16854 = !DILocation(line: 4149, column: 9, scope: !16853)
!16855 = !DILocation(line: 4149, column: 14, scope: !16853)
!16856 = !DILocation(line: 4149, column: 6, scope: !16692)
!16857 = !DILocalVariable(name: "chainlen", scope: !16858, file: !3, line: 4150, type: !27)
!16858 = distinct !DILexicalBlock(scope: !16853, file: !3, line: 4149, column: 26)
!16859 = !DILocation(line: 4150, column: 9, scope: !16858)
!16860 = !DILocation(line: 4150, column: 20, scope: !16858)
!16861 = !DILocation(line: 4150, column: 23, scope: !16858)
!16862 = !DILocation(line: 4150, column: 33, scope: !16858)
!16863 = !DILocation(line: 4152, column: 7, scope: !16864)
!16864 = distinct !DILexicalBlock(scope: !16858, file: !3, line: 4152, column: 7)
!16865 = !DILocation(line: 4152, column: 7, scope: !16858)
!16866 = !DILocation(line: 4153, column: 17, scope: !16864)
!16867 = !DILocation(line: 4153, column: 68, scope: !16864)
!16868 = !DILocation(line: 4153, column: 4, scope: !16864)
!16869 = !DILocation(line: 4155, column: 4, scope: !16864)
!16870 = !DILocation(line: 4155, column: 14, scope: !16864)
!16871 = !DILocation(line: 4156, column: 2, scope: !16858)
!16872 = !DILocation(line: 4158, column: 3, scope: !16853)
!16873 = !DILocation(line: 4158, column: 13, scope: !16853)
!16874 = !DILocation(line: 4160, column: 6, scope: !16875)
!16875 = distinct !DILexicalBlock(scope: !16692, file: !3, line: 4160, column: 6)
!16876 = !DILocation(line: 4160, column: 9, scope: !16875)
!16877 = !DILocation(line: 4160, column: 13, scope: !16875)
!16878 = !DILocation(line: 4160, column: 18, scope: !16875)
!16879 = !DILocation(line: 4160, column: 6, scope: !16692)
!16880 = !DILocation(line: 4161, column: 11, scope: !16881)
!16881 = distinct !DILexicalBlock(scope: !16875, file: !3, line: 4160, column: 31)
!16882 = !DILocation(line: 4161, column: 14, scope: !16881)
!16883 = !DILocation(line: 4161, column: 18, scope: !16881)
!16884 = !DILocation(line: 4161, column: 3, scope: !16881)
!16885 = !DILocation(line: 4163, column: 25, scope: !16886)
!16886 = distinct !DILexicalBlock(scope: !16881, file: !3, line: 4161, column: 27)
!16887 = !DILocation(line: 4163, column: 31, scope: !16886)
!16888 = !DILocation(line: 4163, column: 29, scope: !16886)
!16889 = !DILocation(line: 4163, column: 51, scope: !16886)
!16890 = !DILocation(line: 4163, column: 49, scope: !16886)
!16891 = !DILocation(line: 4164, column: 21, scope: !16886)
!16892 = !DILocation(line: 4164, column: 30, scope: !16886)
!16893 = !DILocation(line: 4164, column: 39, scope: !16886)
!16894 = !DILocation(line: 4164, column: 42, scope: !16886)
!16895 = !DILocation(line: 4164, column: 46, scope: !16886)
!16896 = !DILocation(line: 4164, column: 52, scope: !16886)
!16897 = !DILocation(line: 4164, column: 55, scope: !16886)
!16898 = !DILocation(line: 4164, column: 65, scope: !16886)
!16899 = !DILocation(line: 4163, column: 12, scope: !16886)
!16900 = !DILocation(line: 4163, column: 9, scope: !16886)
!16901 = !DILocation(line: 4165, column: 5, scope: !16886)
!16902 = !DILocation(line: 4167, column: 25, scope: !16886)
!16903 = !DILocation(line: 4167, column: 31, scope: !16886)
!16904 = !DILocation(line: 4167, column: 29, scope: !16886)
!16905 = !DILocation(line: 4167, column: 51, scope: !16886)
!16906 = !DILocation(line: 4167, column: 49, scope: !16886)
!16907 = !DILocation(line: 4168, column: 26, scope: !16886)
!16908 = !DILocation(line: 4168, column: 36, scope: !16886)
!16909 = !DILocation(line: 4168, column: 59, scope: !16886)
!16910 = !DILocation(line: 4168, column: 68, scope: !16886)
!16911 = !DILocation(line: 4168, column: 71, scope: !16886)
!16912 = !DILocation(line: 4168, column: 75, scope: !16886)
!16913 = !DILocation(line: 4168, column: 81, scope: !16886)
!16914 = !DILocation(line: 4168, column: 84, scope: !16886)
!16915 = !DILocation(line: 4168, column: 94, scope: !16886)
!16916 = !DILocation(line: 4167, column: 12, scope: !16886)
!16917 = !DILocation(line: 4167, column: 9, scope: !16886)
!16918 = !DILocation(line: 4169, column: 5, scope: !16886)
!16919 = !DILocation(line: 4171, column: 25, scope: !16886)
!16920 = !DILocation(line: 4171, column: 31, scope: !16886)
!16921 = !DILocation(line: 4171, column: 29, scope: !16886)
!16922 = !DILocation(line: 4171, column: 51, scope: !16886)
!16923 = !DILocation(line: 4171, column: 49, scope: !16886)
!16924 = !DILocation(line: 4172, column: 26, scope: !16886)
!16925 = !DILocation(line: 4172, column: 36, scope: !16886)
!16926 = !DILocation(line: 4172, column: 60, scope: !16886)
!16927 = !DILocation(line: 4172, column: 87, scope: !16886)
!16928 = !DILocation(line: 4173, column: 25, scope: !16886)
!16929 = !DILocation(line: 4173, column: 28, scope: !16886)
!16930 = !DILocation(line: 4173, column: 32, scope: !16886)
!16931 = !DILocation(line: 4173, column: 38, scope: !16886)
!16932 = !DILocation(line: 4173, column: 41, scope: !16886)
!16933 = !DILocation(line: 4173, column: 51, scope: !16886)
!16934 = !DILocation(line: 4171, column: 12, scope: !16886)
!16935 = !DILocation(line: 4171, column: 9, scope: !16886)
!16936 = !DILocation(line: 4174, column: 5, scope: !16886)
!16937 = !DILocation(line: 4176, column: 2, scope: !16881)
!16938 = !DILocation(line: 4178, column: 7, scope: !16939)
!16939 = distinct !DILexicalBlock(scope: !16940, file: !3, line: 4178, column: 7)
!16940 = distinct !DILexicalBlock(scope: !16875, file: !3, line: 4177, column: 7)
!16941 = !DILocation(line: 4178, column: 10, scope: !16939)
!16942 = !DILocation(line: 4178, column: 15, scope: !16939)
!16943 = !DILocation(line: 4178, column: 7, scope: !16940)
!16944 = !DILocation(line: 4179, column: 24, scope: !16945)
!16945 = distinct !DILexicalBlock(scope: !16939, file: !3, line: 4178, column: 28)
!16946 = !DILocation(line: 4179, column: 30, scope: !16945)
!16947 = !DILocation(line: 4179, column: 28, scope: !16945)
!16948 = !DILocation(line: 4179, column: 50, scope: !16945)
!16949 = !DILocation(line: 4179, column: 48, scope: !16945)
!16950 = !DILocation(line: 4180, column: 25, scope: !16945)
!16951 = !DILocation(line: 4180, column: 35, scope: !16945)
!16952 = !DILocation(line: 4180, column: 58, scope: !16945)
!16953 = !DILocation(line: 4180, column: 67, scope: !16945)
!16954 = !DILocation(line: 4180, column: 70, scope: !16945)
!16955 = !DILocation(line: 4180, column: 74, scope: !16945)
!16956 = !DILocation(line: 4180, column: 80, scope: !16945)
!16957 = !DILocation(line: 4180, column: 83, scope: !16945)
!16958 = !DILocation(line: 4179, column: 11, scope: !16945)
!16959 = !DILocation(line: 4179, column: 8, scope: !16945)
!16960 = !DILocation(line: 4181, column: 3, scope: !16945)
!16961 = !DILocation(line: 4183, column: 24, scope: !16962)
!16962 = distinct !DILexicalBlock(scope: !16939, file: !3, line: 4182, column: 8)
!16963 = !DILocation(line: 4183, column: 30, scope: !16962)
!16964 = !DILocation(line: 4183, column: 28, scope: !16962)
!16965 = !DILocation(line: 4183, column: 50, scope: !16962)
!16966 = !DILocation(line: 4183, column: 48, scope: !16962)
!16967 = !DILocation(line: 4184, column: 25, scope: !16962)
!16968 = !DILocation(line: 4184, column: 35, scope: !16962)
!16969 = !DILocation(line: 4184, column: 59, scope: !16962)
!16970 = !DILocation(line: 4184, column: 86, scope: !16962)
!16971 = !DILocation(line: 4184, column: 95, scope: !16962)
!16972 = !DILocation(line: 4184, column: 98, scope: !16962)
!16973 = !DILocation(line: 4184, column: 102, scope: !16962)
!16974 = !DILocation(line: 4185, column: 24, scope: !16962)
!16975 = !DILocation(line: 4185, column: 27, scope: !16962)
!16976 = !DILocation(line: 4185, column: 37, scope: !16962)
!16977 = !DILocation(line: 4183, column: 11, scope: !16962)
!16978 = !DILocation(line: 4183, column: 8, scope: !16962)
!16979 = !DILocation(line: 4189, column: 6, scope: !16980)
!16980 = distinct !DILexicalBlock(scope: !16692, file: !3, line: 4189, column: 6)
!16981 = !DILocation(line: 4189, column: 9, scope: !16980)
!16982 = !DILocation(line: 4189, column: 14, scope: !16980)
!16983 = !DILocation(line: 4189, column: 6, scope: !16692)
!16984 = !DILocation(line: 4190, column: 23, scope: !16985)
!16985 = distinct !DILexicalBlock(scope: !16980, file: !3, line: 4189, column: 33)
!16986 = !DILocation(line: 4190, column: 29, scope: !16985)
!16987 = !DILocation(line: 4190, column: 27, scope: !16985)
!16988 = !DILocation(line: 4190, column: 49, scope: !16985)
!16989 = !DILocation(line: 4190, column: 47, scope: !16985)
!16990 = !DILocation(line: 4190, column: 90, scope: !16985)
!16991 = !DILocation(line: 4190, column: 93, scope: !16985)
!16992 = !DILocation(line: 4190, column: 10, scope: !16985)
!16993 = !DILocation(line: 4190, column: 7, scope: !16985)
!16994 = !DILocation(line: 4191, column: 2, scope: !16985)
!16995 = !DILocation(line: 4192, column: 1, scope: !16692)
!16996 = distinct !DISubprogram(name: "applyTranslationValue", scope: !3, file: !3, line: 4194, type: !5356, scopeLine: 4195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!16997 = !DILocalVariable(name: "t", arg: 1, scope: !16996, file: !3, line: 4194, type: !3841)
!16998 = !DILocation(line: 4194, column: 46, scope: !16996)
!16999 = !DILocalVariable(name: "vec", arg: 2, scope: !16996, file: !3, line: 4194, type: !1773)
!17000 = !DILocation(line: 4194, column: 55, scope: !16996)
!17001 = !DILocalVariable(name: "td", scope: !16996, file: !3, line: 4196, type: !3868)
!17002 = !DILocation(line: 4196, column: 13, scope: !16996)
!17003 = !DILocation(line: 4196, column: 18, scope: !16996)
!17004 = !DILocation(line: 4196, column: 21, scope: !16996)
!17005 = !DILocalVariable(name: "tvec", scope: !16996, file: !3, line: 4197, type: !1987)
!17006 = !DILocation(line: 4197, column: 8, scope: !16996)
!17007 = !DILocalVariable(name: "i", scope: !16996, file: !3, line: 4198, type: !35)
!17008 = !DILocation(line: 4198, column: 6, scope: !16996)
!17009 = !DILocation(line: 4200, column: 9, scope: !17010)
!17010 = distinct !DILexicalBlock(scope: !16996, file: !3, line: 4200, column: 2)
!17011 = !DILocation(line: 4200, column: 7, scope: !17010)
!17012 = !DILocation(line: 4200, column: 14, scope: !17013)
!17013 = distinct !DILexicalBlock(scope: !17010, file: !3, line: 4200, column: 2)
!17014 = !DILocation(line: 4200, column: 18, scope: !17013)
!17015 = !DILocation(line: 4200, column: 21, scope: !17013)
!17016 = !DILocation(line: 4200, column: 16, scope: !17013)
!17017 = !DILocation(line: 4200, column: 2, scope: !17010)
!17018 = !DILocation(line: 4201, column: 7, scope: !17019)
!17019 = distinct !DILexicalBlock(scope: !17020, file: !3, line: 4201, column: 7)
!17020 = distinct !DILexicalBlock(scope: !17013, file: !3, line: 4200, column: 39)
!17021 = !DILocation(line: 4201, column: 11, scope: !17019)
!17022 = !DILocation(line: 4201, column: 16, scope: !17019)
!17023 = !DILocation(line: 4201, column: 7, scope: !17020)
!17024 = !DILocation(line: 4202, column: 4, scope: !17019)
!17025 = !DILocation(line: 4204, column: 7, scope: !17026)
!17026 = distinct !DILexicalBlock(scope: !17020, file: !3, line: 4204, column: 7)
!17027 = !DILocation(line: 4204, column: 11, scope: !17026)
!17028 = !DILocation(line: 4204, column: 16, scope: !17026)
!17029 = !DILocation(line: 4204, column: 7, scope: !17020)
!17030 = !DILocation(line: 4205, column: 4, scope: !17026)
!17031 = !DILocation(line: 4208, column: 27, scope: !17032)
!17032 = distinct !DILexicalBlock(scope: !17020, file: !3, line: 4208, column: 7)
!17033 = !DILocation(line: 4208, column: 7, scope: !17032)
!17034 = !DILocation(line: 4208, column: 7, scope: !17020)
!17035 = !DILocation(line: 4209, column: 28, scope: !17036)
!17036 = distinct !DILexicalBlock(scope: !17037, file: !3, line: 4209, column: 8)
!17037 = distinct !DILexicalBlock(scope: !17032, file: !3, line: 4208, column: 31)
!17038 = !DILocation(line: 4209, column: 8, scope: !17036)
!17039 = !DILocation(line: 4209, column: 8, scope: !17037)
!17040 = !DILocalVariable(name: "original_normal", scope: !17041, file: !3, line: 4210, type: !3980)
!17041 = distinct !DILexicalBlock(scope: !17036, file: !3, line: 4209, column: 32)
!17042 = !DILocation(line: 4210, column: 18, scope: !17041)
!17043 = !DILocalVariable(name: "axis", scope: !17041, file: !3, line: 4211, type: !1987)
!17044 = !DILocation(line: 4211, column: 11, scope: !17041)
!17045 = !DILocalVariable(name: "quat", scope: !17041, file: !3, line: 4212, type: !2062)
!17046 = !DILocation(line: 4212, column: 11, scope: !17041)
!17047 = !DILocalVariable(name: "mat", scope: !17041, file: !3, line: 4213, type: !3881)
!17048 = !DILocation(line: 4213, column: 11, scope: !17041)
!17049 = !DILocalVariable(name: "angle", scope: !17041, file: !3, line: 4214, type: !1727)
!17050 = !DILocation(line: 4214, column: 11, scope: !17041)
!17051 = !DILocation(line: 4217, column: 9, scope: !17052)
!17052 = distinct !DILexicalBlock(scope: !17041, file: !3, line: 4217, column: 9)
!17053 = !DILocation(line: 4217, column: 12, scope: !17052)
!17054 = !DILocation(line: 4217, column: 17, scope: !17052)
!17055 = !DILocation(line: 4217, column: 9, scope: !17041)
!17056 = !DILocation(line: 4218, column: 24, scope: !17052)
!17057 = !DILocation(line: 4218, column: 28, scope: !17052)
!17058 = !DILocation(line: 4218, column: 22, scope: !17052)
!17059 = !DILocation(line: 4218, column: 6, scope: !17052)
!17060 = !DILocation(line: 4220, column: 24, scope: !17052)
!17061 = !DILocation(line: 4220, column: 28, scope: !17052)
!17062 = !DILocation(line: 4220, column: 22, scope: !17052)
!17063 = !DILocation(line: 4222, column: 19, scope: !17041)
!17064 = !DILocation(line: 4222, column: 25, scope: !17041)
!17065 = !DILocation(line: 4222, column: 42, scope: !17041)
!17066 = !DILocation(line: 4222, column: 45, scope: !17041)
!17067 = !DILocation(line: 4222, column: 51, scope: !17041)
!17068 = !DILocation(line: 4222, column: 5, scope: !17041)
!17069 = !DILocation(line: 4223, column: 29, scope: !17041)
!17070 = !DILocation(line: 4223, column: 46, scope: !17041)
!17071 = !DILocation(line: 4223, column: 49, scope: !17041)
!17072 = !DILocation(line: 4223, column: 55, scope: !17041)
!17073 = !DILocation(line: 4223, column: 20, scope: !17041)
!17074 = !DILocation(line: 4223, column: 13, scope: !17041)
!17075 = !DILocation(line: 4223, column: 11, scope: !17041)
!17076 = !DILocation(line: 4225, column: 24, scope: !17041)
!17077 = !DILocation(line: 4225, column: 30, scope: !17041)
!17078 = !DILocation(line: 4225, column: 36, scope: !17041)
!17079 = !DILocation(line: 4225, column: 5, scope: !17041)
!17080 = !DILocation(line: 4227, column: 18, scope: !17041)
!17081 = !DILocation(line: 4227, column: 23, scope: !17041)
!17082 = !DILocation(line: 4227, column: 5, scope: !17041)
!17083 = !DILocation(line: 4229, column: 21, scope: !17041)
!17084 = !DILocation(line: 4229, column: 24, scope: !17041)
!17085 = !DILocation(line: 4229, column: 28, scope: !17041)
!17086 = !DILocation(line: 4229, column: 5, scope: !17041)
!17087 = !DILocation(line: 4230, column: 4, scope: !17041)
!17088 = !DILocalVariable(name: "mat", scope: !17089, file: !3, line: 4232, type: !3881)
!17089 = distinct !DILexicalBlock(scope: !17036, file: !3, line: 4231, column: 9)
!17090 = !DILocation(line: 4232, column: 11, scope: !17089)
!17091 = !DILocation(line: 4234, column: 13, scope: !17089)
!17092 = !DILocation(line: 4234, column: 5, scope: !17089)
!17093 = !DILocation(line: 4236, column: 21, scope: !17089)
!17094 = !DILocation(line: 4236, column: 24, scope: !17089)
!17095 = !DILocation(line: 4236, column: 28, scope: !17089)
!17096 = !DILocation(line: 4236, column: 5, scope: !17089)
!17097 = !DILocation(line: 4238, column: 3, scope: !17037)
!17098 = !DILocation(line: 4240, column: 7, scope: !17099)
!17099 = distinct !DILexicalBlock(scope: !17020, file: !3, line: 4240, column: 7)
!17100 = !DILocation(line: 4240, column: 10, scope: !17099)
!17101 = !DILocation(line: 4240, column: 14, scope: !17099)
!17102 = !DILocation(line: 4240, column: 7, scope: !17020)
!17103 = !DILocalVariable(name: "pvec", scope: !17104, file: !3, line: 4241, type: !1987)
!17104 = distinct !DILexicalBlock(scope: !17099, file: !3, line: 4240, column: 24)
!17105 = !DILocation(line: 4241, column: 10, scope: !17104)
!17106 = !DILocation(line: 4242, column: 4, scope: !17104)
!17107 = !DILocation(line: 4242, column: 7, scope: !17104)
!17108 = !DILocation(line: 4242, column: 11, scope: !17104)
!17109 = !DILocation(line: 4242, column: 20, scope: !17104)
!17110 = !DILocation(line: 4242, column: 23, scope: !17104)
!17111 = !DILocation(line: 4242, column: 27, scope: !17104)
!17112 = !DILocation(line: 4242, column: 32, scope: !17104)
!17113 = !DILocation(line: 4242, column: 38, scope: !17104)
!17114 = !DILocation(line: 4243, column: 3, scope: !17104)
!17115 = !DILocation(line: 4245, column: 15, scope: !17116)
!17116 = distinct !DILexicalBlock(scope: !17099, file: !3, line: 4244, column: 8)
!17117 = !DILocation(line: 4245, column: 21, scope: !17116)
!17118 = !DILocation(line: 4245, column: 4, scope: !17116)
!17119 = !DILocation(line: 4248, column: 13, scope: !17020)
!17120 = !DILocation(line: 4248, column: 17, scope: !17020)
!17121 = !DILocation(line: 4248, column: 23, scope: !17020)
!17122 = !DILocation(line: 4248, column: 3, scope: !17020)
!17123 = !DILocation(line: 4249, column: 13, scope: !17020)
!17124 = !DILocation(line: 4249, column: 19, scope: !17020)
!17125 = !DILocation(line: 4249, column: 23, scope: !17020)
!17126 = !DILocation(line: 4249, column: 3, scope: !17020)
!17127 = !DILocation(line: 4251, column: 22, scope: !17020)
!17128 = !DILocation(line: 4251, column: 26, scope: !17020)
!17129 = !DILocation(line: 4251, column: 39, scope: !17020)
!17130 = !DILocation(line: 4251, column: 3, scope: !17020)
!17131 = !DILocation(line: 4253, column: 7, scope: !17132)
!17132 = distinct !DILexicalBlock(scope: !17020, file: !3, line: 4253, column: 7)
!17133 = !DILocation(line: 4253, column: 11, scope: !17132)
!17134 = !DILocation(line: 4253, column: 7, scope: !17020)
!17135 = !DILocation(line: 4254, column: 16, scope: !17132)
!17136 = !DILocation(line: 4254, column: 20, scope: !17132)
!17137 = !DILocation(line: 4254, column: 25, scope: !17132)
!17138 = !DILocation(line: 4254, column: 29, scope: !17132)
!17139 = !DILocation(line: 4254, column: 35, scope: !17132)
!17140 = !DILocation(line: 4254, column: 4, scope: !17132)
!17141 = !DILocation(line: 4256, column: 22, scope: !17020)
!17142 = !DILocation(line: 4256, column: 25, scope: !17020)
!17143 = !DILocation(line: 4256, column: 3, scope: !17020)
!17144 = !DILocation(line: 4257, column: 2, scope: !17020)
!17145 = !DILocation(line: 4200, column: 29, scope: !17013)
!17146 = !DILocation(line: 4200, column: 35, scope: !17013)
!17147 = !DILocation(line: 4200, column: 2, scope: !17013)
!17148 = distinct !{!17148, !17017, !17149}
!17149 = !DILocation(line: 4257, column: 2, scope: !17010)
!17150 = !DILocation(line: 4258, column: 1, scope: !16996)
!17151 = distinct !DISubprogram(name: "saacos", scope: !7601, file: !7601, line: 66, type: !14767, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!17152 = !DILocalVariable(name: "fac", arg: 1, scope: !17151, file: !7601, line: 66, type: !1727)
!17153 = !DILocation(line: 66, column: 28, scope: !17151)
!17154 = !DILocation(line: 68, column: 11, scope: !17155)
!17155 = distinct !DILexicalBlock(scope: !17151, file: !7601, line: 68, column: 11)
!17156 = !DILocation(line: 68, column: 11, scope: !17151)
!17157 = !DILocation(line: 68, column: 35, scope: !17155)
!17158 = !DILocation(line: 69, column: 11, scope: !17159)
!17159 = distinct !DILexicalBlock(scope: !17155, file: !7601, line: 69, column: 11)
!17160 = !DILocation(line: 69, column: 11, scope: !17155)
!17161 = !DILocation(line: 69, column: 35, scope: !17159)
!17162 = !DILocation(line: 70, column: 48, scope: !17159)
!17163 = !DILocation(line: 70, column: 42, scope: !17159)
!17164 = !DILocation(line: 70, column: 35, scope: !17159)
!17165 = !DILocation(line: 71, column: 1, scope: !17151)
!17166 = distinct !DISubprogram(name: "applyShrinkFatten", scope: !3, file: !3, line: 4340, type: !12679, scopeLine: 4341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!17167 = !DILocalVariable(name: "t", arg: 1, scope: !17166, file: !3, line: 4340, type: !3841)
!17168 = !DILocation(line: 4340, column: 42, scope: !17166)
!17169 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !17166, file: !3, line: 4340, type: !3857)
!17170 = !DILocation(line: 4340, column: 55, scope: !17166)
!17171 = !DILocalVariable(name: "distance", scope: !17166, file: !3, line: 4342, type: !1727)
!17172 = !DILocation(line: 4342, column: 8, scope: !17166)
!17173 = !DILocalVariable(name: "i", scope: !17166, file: !3, line: 4343, type: !35)
!17174 = !DILocation(line: 4343, column: 6, scope: !17166)
!17175 = !DILocalVariable(name: "str", scope: !17166, file: !3, line: 4344, type: !2366)
!17176 = !DILocation(line: 4344, column: 7, scope: !17166)
!17177 = !DILocalVariable(name: "ofs", scope: !17166, file: !3, line: 4345, type: !13646)
!17178 = !DILocation(line: 4345, column: 9, scope: !17166)
!17179 = !DILocalVariable(name: "td", scope: !17166, file: !3, line: 4346, type: !3868)
!17180 = !DILocation(line: 4346, column: 13, scope: !17166)
!17181 = !DILocation(line: 4346, column: 18, scope: !17166)
!17182 = !DILocation(line: 4346, column: 21, scope: !17166)
!17183 = !DILocation(line: 4348, column: 14, scope: !17166)
!17184 = !DILocation(line: 4348, column: 17, scope: !17166)
!17185 = !DILocation(line: 4348, column: 13, scope: !17166)
!17186 = !DILocation(line: 4348, column: 11, scope: !17166)
!17187 = !DILocation(line: 4350, column: 20, scope: !17166)
!17188 = !DILocation(line: 4350, column: 2, scope: !17166)
!17189 = !DILocation(line: 4352, column: 17, scope: !17166)
!17190 = !DILocation(line: 4352, column: 20, scope: !17166)
!17191 = !DILocation(line: 4352, column: 2, scope: !17166)
!17192 = !DILocation(line: 4355, column: 26, scope: !17166)
!17193 = !DILocation(line: 4355, column: 32, scope: !17166)
!17194 = !DILocation(line: 4355, column: 30, scope: !17166)
!17195 = !DILocation(line: 4355, column: 78, scope: !17166)
!17196 = !DILocation(line: 4355, column: 76, scope: !17166)
!17197 = !DILocation(line: 4355, column: 9, scope: !17166)
!17198 = !DILocation(line: 4355, column: 6, scope: !17166)
!17199 = !DILocation(line: 4356, column: 19, scope: !17200)
!17200 = distinct !DILexicalBlock(scope: !17166, file: !3, line: 4356, column: 6)
!17201 = !DILocation(line: 4356, column: 22, scope: !17200)
!17202 = !DILocation(line: 4356, column: 6, scope: !17200)
!17203 = !DILocation(line: 4356, column: 6, scope: !17166)
!17204 = !DILocalVariable(name: "c", scope: !17205, file: !3, line: 4357, type: !22)
!17205 = distinct !DILexicalBlock(scope: !17200, file: !3, line: 4356, column: 28)
!17206 = !DILocation(line: 4357, column: 8, scope: !17205)
!17207 = !DILocation(line: 4358, column: 20, scope: !17205)
!17208 = !DILocation(line: 4358, column: 23, scope: !17205)
!17209 = !DILocation(line: 4358, column: 29, scope: !17205)
!17210 = !DILocation(line: 4358, column: 33, scope: !17205)
!17211 = !DILocation(line: 4358, column: 36, scope: !17205)
!17212 = !DILocation(line: 4358, column: 43, scope: !17205)
!17213 = !DILocation(line: 4358, column: 3, scope: !17205)
!17214 = !DILocation(line: 4359, column: 23, scope: !17205)
!17215 = !DILocation(line: 4359, column: 29, scope: !17205)
!17216 = !DILocation(line: 4359, column: 27, scope: !17205)
!17217 = !DILocation(line: 4359, column: 49, scope: !17205)
!17218 = !DILocation(line: 4359, column: 47, scope: !17205)
!17219 = !DILocation(line: 4359, column: 61, scope: !17205)
!17220 = !DILocation(line: 4359, column: 10, scope: !17205)
!17221 = !DILocation(line: 4359, column: 7, scope: !17205)
!17222 = !DILocation(line: 4360, column: 2, scope: !17205)
!17223 = !DILocation(line: 4363, column: 23, scope: !17224)
!17224 = distinct !DILexicalBlock(scope: !17200, file: !3, line: 4361, column: 7)
!17225 = !DILocation(line: 4363, column: 29, scope: !17224)
!17226 = !DILocation(line: 4363, column: 27, scope: !17224)
!17227 = !DILocation(line: 4363, column: 49, scope: !17224)
!17228 = !DILocation(line: 4363, column: 47, scope: !17224)
!17229 = !DILocation(line: 4363, column: 63, scope: !17224)
!17230 = !DILocation(line: 4363, column: 10, scope: !17224)
!17231 = !DILocation(line: 4363, column: 7, scope: !17224)
!17232 = !DILocation(line: 4366, column: 6, scope: !17233)
!17233 = distinct !DILexicalBlock(scope: !17166, file: !3, line: 4366, column: 6)
!17234 = !DILocation(line: 4366, column: 9, scope: !17233)
!17235 = !DILocation(line: 4366, column: 6, scope: !17166)
!17236 = !DILocation(line: 4367, column: 23, scope: !17237)
!17237 = distinct !DILexicalBlock(scope: !17233, file: !3, line: 4366, column: 22)
!17238 = !DILocation(line: 4367, column: 29, scope: !17237)
!17239 = !DILocation(line: 4367, column: 27, scope: !17237)
!17240 = !DILocation(line: 4367, column: 49, scope: !17237)
!17241 = !DILocation(line: 4367, column: 47, scope: !17237)
!17242 = !DILocation(line: 4367, column: 61, scope: !17237)
!17243 = !DILocation(line: 4367, column: 64, scope: !17237)
!17244 = !DILocation(line: 4367, column: 10, scope: !17237)
!17245 = !DILocation(line: 4367, column: 7, scope: !17237)
!17246 = !DILocation(line: 4368, column: 2, scope: !17237)
!17247 = !DILocation(line: 4369, column: 22, scope: !17166)
!17248 = !DILocation(line: 4369, column: 28, scope: !17166)
!17249 = !DILocation(line: 4369, column: 26, scope: !17166)
!17250 = !DILocation(line: 4369, column: 48, scope: !17166)
!17251 = !DILocation(line: 4369, column: 46, scope: !17166)
!17252 = !DILocation(line: 4369, column: 9, scope: !17166)
!17253 = !DILocation(line: 4369, column: 6, scope: !17166)
!17254 = !DILocation(line: 4371, column: 6, scope: !17255)
!17255 = distinct !DILexicalBlock(scope: !17166, file: !3, line: 4371, column: 6)
!17256 = !DILocation(line: 4371, column: 9, scope: !17255)
!17257 = !DILocation(line: 4371, column: 6, scope: !17166)
!17258 = !DILocalVariable(name: "kmi", scope: !17259, file: !3, line: 4372, type: !8392)
!17259 = distinct !DILexicalBlock(scope: !17255, file: !3, line: 4371, column: 17)
!17260 = !DILocation(line: 4372, column: 17, scope: !17259)
!17261 = !DILocation(line: 4372, column: 53, scope: !17259)
!17262 = !DILocation(line: 4372, column: 56, scope: !17259)
!17263 = !DILocation(line: 4372, column: 23, scope: !17259)
!17264 = !DILocation(line: 4373, column: 7, scope: !17265)
!17265 = distinct !DILexicalBlock(scope: !17259, file: !3, line: 4373, column: 7)
!17266 = !DILocation(line: 4373, column: 7, scope: !17259)
!17267 = !DILocation(line: 4374, column: 36, scope: !17268)
!17268 = distinct !DILexicalBlock(scope: !17265, file: !3, line: 4373, column: 12)
!17269 = !DILocation(line: 4374, column: 41, scope: !17268)
!17270 = !DILocation(line: 4374, column: 47, scope: !17268)
!17271 = !DILocation(line: 4374, column: 45, scope: !17268)
!17272 = !DILocation(line: 4374, column: 67, scope: !17268)
!17273 = !DILocation(line: 4374, column: 65, scope: !17268)
!17274 = !DILocation(line: 4374, column: 52, scope: !17268)
!17275 = !DILocation(line: 4374, column: 11, scope: !17268)
!17276 = !DILocation(line: 4374, column: 8, scope: !17268)
!17277 = !DILocation(line: 4375, column: 3, scope: !17268)
!17278 = !DILocation(line: 4376, column: 2, scope: !17259)
!17279 = !DILocation(line: 4377, column: 15, scope: !17166)
!17280 = !DILocation(line: 4377, column: 21, scope: !17166)
!17281 = !DILocation(line: 4377, column: 19, scope: !17166)
!17282 = !DILocation(line: 4377, column: 41, scope: !17166)
!17283 = !DILocation(line: 4377, column: 39, scope: !17166)
!17284 = !DILocation(line: 4378, column: 34, scope: !17166)
!17285 = !DILocation(line: 4378, column: 37, scope: !17166)
!17286 = !DILocation(line: 4378, column: 42, scope: !17166)
!17287 = !DILocation(line: 4378, column: 61, scope: !17166)
!17288 = !DILocation(line: 4378, column: 33, scope: !17166)
!17289 = !DILocation(line: 4378, column: 15, scope: !17166)
!17290 = !DILocation(line: 4377, column: 2, scope: !17166)
!17291 = !DILocation(line: 4382, column: 18, scope: !17166)
!17292 = !DILocation(line: 4382, column: 17, scope: !17166)
!17293 = !DILocation(line: 4382, column: 2, scope: !17166)
!17294 = !DILocation(line: 4382, column: 5, scope: !17166)
!17295 = !DILocation(line: 4382, column: 15, scope: !17166)
!17296 = !DILocation(line: 4384, column: 9, scope: !17297)
!17297 = distinct !DILexicalBlock(scope: !17166, file: !3, line: 4384, column: 2)
!17298 = !DILocation(line: 4384, column: 7, scope: !17297)
!17299 = !DILocation(line: 4384, column: 14, scope: !17300)
!17300 = distinct !DILexicalBlock(scope: !17297, file: !3, line: 4384, column: 2)
!17301 = !DILocation(line: 4384, column: 18, scope: !17300)
!17302 = !DILocation(line: 4384, column: 21, scope: !17300)
!17303 = !DILocation(line: 4384, column: 16, scope: !17300)
!17304 = !DILocation(line: 4384, column: 2, scope: !17297)
!17305 = !DILocalVariable(name: "tdistance", scope: !17306, file: !3, line: 4385, type: !1727)
!17306 = distinct !DILexicalBlock(scope: !17300, file: !3, line: 4384, column: 39)
!17307 = !DILocation(line: 4385, column: 9, scope: !17306)
!17308 = !DILocation(line: 4386, column: 7, scope: !17309)
!17309 = distinct !DILexicalBlock(scope: !17306, file: !3, line: 4386, column: 7)
!17310 = !DILocation(line: 4386, column: 11, scope: !17309)
!17311 = !DILocation(line: 4386, column: 16, scope: !17309)
!17312 = !DILocation(line: 4386, column: 7, scope: !17306)
!17313 = !DILocation(line: 4387, column: 4, scope: !17309)
!17314 = !DILocation(line: 4389, column: 7, scope: !17315)
!17315 = distinct !DILexicalBlock(scope: !17306, file: !3, line: 4389, column: 7)
!17316 = !DILocation(line: 4389, column: 11, scope: !17315)
!17317 = !DILocation(line: 4389, column: 16, scope: !17315)
!17318 = !DILocation(line: 4389, column: 7, scope: !17306)
!17319 = !DILocation(line: 4390, column: 4, scope: !17315)
!17320 = !DILocation(line: 4393, column: 15, scope: !17306)
!17321 = !DILocation(line: 4393, column: 26, scope: !17306)
!17322 = !DILocation(line: 4393, column: 30, scope: !17306)
!17323 = !DILocation(line: 4393, column: 24, scope: !17306)
!17324 = !DILocation(line: 4393, column: 13, scope: !17306)
!17325 = !DILocation(line: 4394, column: 7, scope: !17326)
!17326 = distinct !DILexicalBlock(scope: !17306, file: !3, line: 4394, column: 7)
!17327 = !DILocation(line: 4394, column: 11, scope: !17326)
!17328 = !DILocation(line: 4394, column: 15, scope: !17326)
!17329 = !DILocation(line: 4394, column: 19, scope: !17326)
!17330 = !DILocation(line: 4394, column: 22, scope: !17326)
!17331 = !DILocation(line: 4394, column: 27, scope: !17326)
!17332 = !DILocation(line: 4394, column: 7, scope: !17306)
!17333 = !DILocation(line: 4395, column: 17, scope: !17334)
!17334 = distinct !DILexicalBlock(scope: !17326, file: !3, line: 4394, column: 47)
!17335 = !DILocation(line: 4395, column: 21, scope: !17334)
!17336 = !DILocation(line: 4395, column: 26, scope: !17334)
!17337 = !DILocation(line: 4395, column: 14, scope: !17334)
!17338 = !DILocation(line: 4396, column: 3, scope: !17334)
!17339 = !DILocation(line: 4398, column: 18, scope: !17306)
!17340 = !DILocation(line: 4398, column: 22, scope: !17306)
!17341 = !DILocation(line: 4398, column: 27, scope: !17306)
!17342 = !DILocation(line: 4398, column: 31, scope: !17306)
!17343 = !DILocation(line: 4398, column: 37, scope: !17306)
!17344 = !DILocation(line: 4398, column: 41, scope: !17306)
!17345 = !DILocation(line: 4398, column: 53, scope: !17306)
!17346 = !DILocation(line: 4398, column: 3, scope: !17306)
!17347 = !DILocation(line: 4399, column: 2, scope: !17306)
!17348 = !DILocation(line: 4384, column: 29, scope: !17300)
!17349 = !DILocation(line: 4384, column: 35, scope: !17300)
!17350 = !DILocation(line: 4384, column: 2, scope: !17300)
!17351 = distinct !{!17351, !17304, !17352}
!17352 = !DILocation(line: 4399, column: 2, scope: !17297)
!17353 = !DILocation(line: 4401, column: 13, scope: !17166)
!17354 = !DILocation(line: 4401, column: 2, scope: !17166)
!17355 = !DILocation(line: 4403, column: 22, scope: !17166)
!17356 = !DILocation(line: 4403, column: 25, scope: !17166)
!17357 = !DILocation(line: 4403, column: 29, scope: !17166)
!17358 = !DILocation(line: 4403, column: 2, scope: !17166)
!17359 = !DILocation(line: 4404, column: 1, scope: !17166)
!17360 = distinct !DISubprogram(name: "madd_v3_v3v3fl", scope: !4885, file: !4885, line: 527, type: !17361, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!17361 = !DISubroutineType(types: !17362)
!17362 = !{null, !1773, !3980, !3980, !1727}
!17363 = !DILocalVariable(name: "r", arg: 1, scope: !17360, file: !4885, line: 527, type: !1773)
!17364 = !DILocation(line: 527, column: 35, scope: !17360)
!17365 = !DILocalVariable(name: "a", arg: 2, scope: !17360, file: !4885, line: 527, type: !3980)
!17366 = !DILocation(line: 527, column: 53, scope: !17360)
!17367 = !DILocalVariable(name: "b", arg: 3, scope: !17360, file: !4885, line: 527, type: !3980)
!17368 = !DILocation(line: 527, column: 71, scope: !17360)
!17369 = !DILocalVariable(name: "f", arg: 4, scope: !17360, file: !4885, line: 527, type: !1727)
!17370 = !DILocation(line: 527, column: 83, scope: !17360)
!17371 = !DILocation(line: 529, column: 9, scope: !17360)
!17372 = !DILocation(line: 529, column: 16, scope: !17360)
!17373 = !DILocation(line: 529, column: 23, scope: !17360)
!17374 = !DILocation(line: 529, column: 21, scope: !17360)
!17375 = !DILocation(line: 529, column: 14, scope: !17360)
!17376 = !DILocation(line: 529, column: 2, scope: !17360)
!17377 = !DILocation(line: 529, column: 7, scope: !17360)
!17378 = !DILocation(line: 530, column: 9, scope: !17360)
!17379 = !DILocation(line: 530, column: 16, scope: !17360)
!17380 = !DILocation(line: 530, column: 23, scope: !17360)
!17381 = !DILocation(line: 530, column: 21, scope: !17360)
!17382 = !DILocation(line: 530, column: 14, scope: !17360)
!17383 = !DILocation(line: 530, column: 2, scope: !17360)
!17384 = !DILocation(line: 530, column: 7, scope: !17360)
!17385 = !DILocation(line: 531, column: 9, scope: !17360)
!17386 = !DILocation(line: 531, column: 16, scope: !17360)
!17387 = !DILocation(line: 531, column: 23, scope: !17360)
!17388 = !DILocation(line: 531, column: 21, scope: !17360)
!17389 = !DILocation(line: 531, column: 14, scope: !17360)
!17390 = !DILocation(line: 531, column: 2, scope: !17360)
!17391 = !DILocation(line: 531, column: 7, scope: !17360)
!17392 = !DILocation(line: 532, column: 1, scope: !17360)
!17393 = distinct !DISubprogram(name: "applyTilt", scope: !3, file: !3, line: 4436, type: !12679, scopeLine: 4437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!17394 = !DILocalVariable(name: "t", arg: 1, scope: !17393, file: !3, line: 4436, type: !3841)
!17395 = !DILocation(line: 4436, column: 34, scope: !17393)
!17396 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !17393, file: !3, line: 4436, type: !3857)
!17397 = !DILocation(line: 4436, column: 47, scope: !17393)
!17398 = !DILocalVariable(name: "td", scope: !17393, file: !3, line: 4438, type: !3868)
!17399 = !DILocation(line: 4438, column: 13, scope: !17393)
!17400 = !DILocation(line: 4438, column: 18, scope: !17393)
!17401 = !DILocation(line: 4438, column: 21, scope: !17393)
!17402 = !DILocalVariable(name: "i", scope: !17393, file: !3, line: 4439, type: !35)
!17403 = !DILocation(line: 4439, column: 6, scope: !17393)
!17404 = !DILocalVariable(name: "str", scope: !17393, file: !3, line: 4440, type: !2366)
!17405 = !DILocation(line: 4440, column: 7, scope: !17393)
!17406 = !DILocalVariable(name: "final", scope: !17393, file: !3, line: 4442, type: !1727)
!17407 = !DILocation(line: 4442, column: 8, scope: !17393)
!17408 = !DILocation(line: 4444, column: 10, scope: !17393)
!17409 = !DILocation(line: 4444, column: 13, scope: !17393)
!17410 = !DILocation(line: 4444, column: 8, scope: !17393)
!17411 = !DILocation(line: 4446, column: 20, scope: !17393)
!17412 = !DILocation(line: 4446, column: 2, scope: !17393)
!17413 = !DILocation(line: 4448, column: 17, scope: !17393)
!17414 = !DILocation(line: 4448, column: 20, scope: !17393)
!17415 = !DILocation(line: 4448, column: 2, scope: !17393)
!17416 = !DILocation(line: 4450, column: 19, scope: !17417)
!17417 = distinct !DILexicalBlock(scope: !17393, file: !3, line: 4450, column: 6)
!17418 = !DILocation(line: 4450, column: 22, scope: !17417)
!17419 = !DILocation(line: 4450, column: 6, scope: !17417)
!17420 = !DILocation(line: 4450, column: 6, scope: !17393)
!17421 = !DILocalVariable(name: "c", scope: !17422, file: !3, line: 4451, type: !22)
!17422 = distinct !DILexicalBlock(scope: !17417, file: !3, line: 4450, column: 28)
!17423 = !DILocation(line: 4451, column: 8, scope: !17422)
!17424 = !DILocation(line: 4453, column: 20, scope: !17422)
!17425 = !DILocation(line: 4453, column: 23, scope: !17422)
!17426 = !DILocation(line: 4453, column: 29, scope: !17422)
!17427 = !DILocation(line: 4453, column: 33, scope: !17422)
!17428 = !DILocation(line: 4453, column: 36, scope: !17422)
!17429 = !DILocation(line: 4453, column: 43, scope: !17422)
!17430 = !DILocation(line: 4453, column: 3, scope: !17422)
!17431 = !DILocation(line: 4455, column: 16, scope: !17422)
!17432 = !DILocation(line: 4455, column: 61, scope: !17422)
!17433 = !DILocation(line: 4455, column: 67, scope: !17422)
!17434 = !DILocation(line: 4455, column: 70, scope: !17422)
!17435 = !DILocation(line: 4455, column: 3, scope: !17422)
!17436 = !DILocation(line: 4458, column: 18, scope: !17422)
!17437 = !DILocation(line: 4458, column: 3, scope: !17422)
!17438 = !DILocation(line: 4458, column: 6, scope: !17422)
!17439 = !DILocation(line: 4458, column: 16, scope: !17422)
!17440 = !DILocation(line: 4459, column: 2, scope: !17422)
!17441 = !DILocation(line: 4461, column: 16, scope: !17442)
!17442 = distinct !DILexicalBlock(scope: !17417, file: !3, line: 4460, column: 7)
!17443 = !DILocation(line: 4461, column: 62, scope: !17442)
!17444 = !DILocation(line: 4461, column: 79, scope: !17442)
!17445 = !DILocation(line: 4461, column: 82, scope: !17442)
!17446 = !DILocation(line: 4461, column: 3, scope: !17442)
!17447 = !DILocation(line: 4464, column: 9, scope: !17448)
!17448 = distinct !DILexicalBlock(scope: !17393, file: !3, line: 4464, column: 2)
!17449 = !DILocation(line: 4464, column: 7, scope: !17448)
!17450 = !DILocation(line: 4464, column: 14, scope: !17451)
!17451 = distinct !DILexicalBlock(scope: !17448, file: !3, line: 4464, column: 2)
!17452 = !DILocation(line: 4464, column: 18, scope: !17451)
!17453 = !DILocation(line: 4464, column: 21, scope: !17451)
!17454 = !DILocation(line: 4464, column: 16, scope: !17451)
!17455 = !DILocation(line: 4464, column: 2, scope: !17448)
!17456 = !DILocation(line: 4465, column: 7, scope: !17457)
!17457 = distinct !DILexicalBlock(scope: !17458, file: !3, line: 4465, column: 7)
!17458 = distinct !DILexicalBlock(scope: !17451, file: !3, line: 4464, column: 39)
!17459 = !DILocation(line: 4465, column: 11, scope: !17457)
!17460 = !DILocation(line: 4465, column: 16, scope: !17457)
!17461 = !DILocation(line: 4465, column: 7, scope: !17458)
!17462 = !DILocation(line: 4466, column: 4, scope: !17457)
!17463 = !DILocation(line: 4468, column: 7, scope: !17464)
!17464 = distinct !DILexicalBlock(scope: !17458, file: !3, line: 4468, column: 7)
!17465 = !DILocation(line: 4468, column: 11, scope: !17464)
!17466 = !DILocation(line: 4468, column: 16, scope: !17464)
!17467 = !DILocation(line: 4468, column: 7, scope: !17458)
!17468 = !DILocation(line: 4469, column: 4, scope: !17464)
!17469 = !DILocation(line: 4471, column: 7, scope: !17470)
!17470 = distinct !DILexicalBlock(scope: !17458, file: !3, line: 4471, column: 7)
!17471 = !DILocation(line: 4471, column: 11, scope: !17470)
!17472 = !DILocation(line: 4471, column: 7, scope: !17458)
!17473 = !DILocation(line: 4472, column: 15, scope: !17474)
!17474 = distinct !DILexicalBlock(scope: !17470, file: !3, line: 4471, column: 16)
!17475 = !DILocation(line: 4472, column: 19, scope: !17474)
!17476 = !DILocation(line: 4472, column: 26, scope: !17474)
!17477 = !DILocation(line: 4472, column: 34, scope: !17474)
!17478 = !DILocation(line: 4472, column: 38, scope: !17474)
!17479 = !DILocation(line: 4472, column: 32, scope: !17474)
!17480 = !DILocation(line: 4472, column: 24, scope: !17474)
!17481 = !DILocation(line: 4472, column: 5, scope: !17474)
!17482 = !DILocation(line: 4472, column: 9, scope: !17474)
!17483 = !DILocation(line: 4472, column: 13, scope: !17474)
!17484 = !DILocation(line: 4473, column: 3, scope: !17474)
!17485 = !DILocation(line: 4474, column: 2, scope: !17458)
!17486 = !DILocation(line: 4464, column: 29, scope: !17451)
!17487 = !DILocation(line: 4464, column: 35, scope: !17451)
!17488 = !DILocation(line: 4464, column: 2, scope: !17451)
!17489 = distinct !{!17489, !17455, !17490}
!17490 = !DILocation(line: 4474, column: 2, scope: !17448)
!17491 = !DILocation(line: 4476, column: 13, scope: !17393)
!17492 = !DILocation(line: 4476, column: 2, scope: !17393)
!17493 = !DILocation(line: 4478, column: 22, scope: !17393)
!17494 = !DILocation(line: 4478, column: 25, scope: !17393)
!17495 = !DILocation(line: 4478, column: 29, scope: !17393)
!17496 = !DILocation(line: 4478, column: 2, scope: !17393)
!17497 = !DILocation(line: 4479, column: 1, scope: !17393)
!17498 = distinct !DISubprogram(name: "applyCurveShrinkFatten", scope: !3, file: !3, line: 4514, type: !12679, scopeLine: 4515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!17499 = !DILocalVariable(name: "t", arg: 1, scope: !17498, file: !3, line: 4514, type: !3841)
!17500 = !DILocation(line: 4514, column: 47, scope: !17498)
!17501 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !17498, file: !3, line: 4514, type: !3857)
!17502 = !DILocation(line: 4514, column: 60, scope: !17498)
!17503 = !DILocalVariable(name: "td", scope: !17498, file: !3, line: 4516, type: !3868)
!17504 = !DILocation(line: 4516, column: 13, scope: !17498)
!17505 = !DILocation(line: 4516, column: 18, scope: !17498)
!17506 = !DILocation(line: 4516, column: 21, scope: !17498)
!17507 = !DILocalVariable(name: "ratio", scope: !17498, file: !3, line: 4517, type: !1727)
!17508 = !DILocation(line: 4517, column: 8, scope: !17498)
!17509 = !DILocalVariable(name: "i", scope: !17498, file: !3, line: 4518, type: !35)
!17510 = !DILocation(line: 4518, column: 6, scope: !17498)
!17511 = !DILocalVariable(name: "str", scope: !17498, file: !3, line: 4519, type: !2366)
!17512 = !DILocation(line: 4519, column: 7, scope: !17498)
!17513 = !DILocation(line: 4521, column: 10, scope: !17498)
!17514 = !DILocation(line: 4521, column: 13, scope: !17498)
!17515 = !DILocation(line: 4521, column: 8, scope: !17498)
!17516 = !DILocation(line: 4523, column: 20, scope: !17498)
!17517 = !DILocation(line: 4523, column: 2, scope: !17498)
!17518 = !DILocation(line: 4525, column: 17, scope: !17498)
!17519 = !DILocation(line: 4525, column: 20, scope: !17498)
!17520 = !DILocation(line: 4525, column: 2, scope: !17498)
!17521 = !DILocation(line: 4528, column: 19, scope: !17522)
!17522 = distinct !DILexicalBlock(scope: !17498, file: !3, line: 4528, column: 6)
!17523 = !DILocation(line: 4528, column: 22, scope: !17522)
!17524 = !DILocation(line: 4528, column: 6, scope: !17522)
!17525 = !DILocation(line: 4528, column: 6, scope: !17498)
!17526 = !DILocalVariable(name: "c", scope: !17527, file: !3, line: 4529, type: !22)
!17527 = distinct !DILexicalBlock(scope: !17522, file: !3, line: 4528, column: 28)
!17528 = !DILocation(line: 4529, column: 8, scope: !17527)
!17529 = !DILocation(line: 4531, column: 20, scope: !17527)
!17530 = !DILocation(line: 4531, column: 23, scope: !17527)
!17531 = !DILocation(line: 4531, column: 29, scope: !17527)
!17532 = !DILocation(line: 4531, column: 33, scope: !17527)
!17533 = !DILocation(line: 4531, column: 36, scope: !17527)
!17534 = !DILocation(line: 4531, column: 43, scope: !17527)
!17535 = !DILocation(line: 4531, column: 3, scope: !17527)
!17536 = !DILocation(line: 4532, column: 16, scope: !17527)
!17537 = !DILocation(line: 4532, column: 64, scope: !17527)
!17538 = !DILocation(line: 4532, column: 3, scope: !17527)
!17539 = !DILocation(line: 4533, column: 2, scope: !17527)
!17540 = !DILocation(line: 4535, column: 16, scope: !17541)
!17541 = distinct !DILexicalBlock(scope: !17522, file: !3, line: 4534, column: 7)
!17542 = !DILocation(line: 4535, column: 65, scope: !17541)
!17543 = !DILocation(line: 4535, column: 3, scope: !17541)
!17544 = !DILocation(line: 4538, column: 9, scope: !17545)
!17545 = distinct !DILexicalBlock(scope: !17498, file: !3, line: 4538, column: 2)
!17546 = !DILocation(line: 4538, column: 7, scope: !17545)
!17547 = !DILocation(line: 4538, column: 14, scope: !17548)
!17548 = distinct !DILexicalBlock(scope: !17545, file: !3, line: 4538, column: 2)
!17549 = !DILocation(line: 4538, column: 18, scope: !17548)
!17550 = !DILocation(line: 4538, column: 21, scope: !17548)
!17551 = !DILocation(line: 4538, column: 16, scope: !17548)
!17552 = !DILocation(line: 4538, column: 2, scope: !17545)
!17553 = !DILocation(line: 4539, column: 7, scope: !17554)
!17554 = distinct !DILexicalBlock(scope: !17555, file: !3, line: 4539, column: 7)
!17555 = distinct !DILexicalBlock(scope: !17548, file: !3, line: 4538, column: 39)
!17556 = !DILocation(line: 4539, column: 11, scope: !17554)
!17557 = !DILocation(line: 4539, column: 16, scope: !17554)
!17558 = !DILocation(line: 4539, column: 7, scope: !17555)
!17559 = !DILocation(line: 4540, column: 4, scope: !17554)
!17560 = !DILocation(line: 4542, column: 7, scope: !17561)
!17561 = distinct !DILexicalBlock(scope: !17555, file: !3, line: 4542, column: 7)
!17562 = !DILocation(line: 4542, column: 11, scope: !17561)
!17563 = !DILocation(line: 4542, column: 16, scope: !17561)
!17564 = !DILocation(line: 4542, column: 7, scope: !17555)
!17565 = !DILocation(line: 4543, column: 4, scope: !17561)
!17566 = !DILocation(line: 4545, column: 7, scope: !17567)
!17567 = distinct !DILexicalBlock(scope: !17555, file: !3, line: 4545, column: 7)
!17568 = !DILocation(line: 4545, column: 11, scope: !17567)
!17569 = !DILocation(line: 4545, column: 7, scope: !17555)
!17570 = !DILocation(line: 4546, column: 15, scope: !17571)
!17571 = distinct !DILexicalBlock(scope: !17567, file: !3, line: 4545, column: 16)
!17572 = !DILocation(line: 4546, column: 19, scope: !17571)
!17573 = !DILocation(line: 4546, column: 26, scope: !17571)
!17574 = !DILocation(line: 4546, column: 24, scope: !17571)
!17575 = !DILocation(line: 4546, column: 5, scope: !17571)
!17576 = !DILocation(line: 4546, column: 9, scope: !17571)
!17577 = !DILocation(line: 4546, column: 13, scope: !17571)
!17578 = !DILocation(line: 4548, column: 17, scope: !17571)
!17579 = !DILocation(line: 4548, column: 21, scope: !17571)
!17580 = !DILocation(line: 4548, column: 16, scope: !17571)
!17581 = !DILocation(line: 4548, column: 27, scope: !17571)
!17582 = !DILocation(line: 4548, column: 31, scope: !17571)
!17583 = !DILocation(line: 4548, column: 25, scope: !17571)
!17584 = !DILocation(line: 4548, column: 50, scope: !17571)
!17585 = !DILocation(line: 4548, column: 54, scope: !17571)
!17586 = !DILocation(line: 4548, column: 48, scope: !17571)
!17587 = !DILocation(line: 4548, column: 64, scope: !17571)
!17588 = !DILocation(line: 4548, column: 68, scope: !17571)
!17589 = !DILocation(line: 4548, column: 62, scope: !17571)
!17590 = !DILocation(line: 4548, column: 39, scope: !17571)
!17591 = !DILocation(line: 4548, column: 5, scope: !17571)
!17592 = !DILocation(line: 4548, column: 9, scope: !17571)
!17593 = !DILocation(line: 4548, column: 13, scope: !17571)
!17594 = !DILocation(line: 4549, column: 9, scope: !17595)
!17595 = distinct !DILexicalBlock(scope: !17571, file: !3, line: 4549, column: 8)
!17596 = !DILocation(line: 4549, column: 13, scope: !17595)
!17597 = !DILocation(line: 4549, column: 8, scope: !17595)
!17598 = !DILocation(line: 4549, column: 17, scope: !17595)
!17599 = !DILocation(line: 4549, column: 8, scope: !17571)
!17600 = !DILocation(line: 4549, column: 27, scope: !17595)
!17601 = !DILocation(line: 4549, column: 31, scope: !17595)
!17602 = !DILocation(line: 4549, column: 35, scope: !17595)
!17603 = !DILocation(line: 4549, column: 26, scope: !17595)
!17604 = !DILocation(line: 4550, column: 3, scope: !17571)
!17605 = !DILocation(line: 4551, column: 2, scope: !17555)
!17606 = !DILocation(line: 4538, column: 29, scope: !17548)
!17607 = !DILocation(line: 4538, column: 35, scope: !17548)
!17608 = !DILocation(line: 4538, column: 2, scope: !17548)
!17609 = distinct !{!17609, !17552, !17610}
!17610 = !DILocation(line: 4551, column: 2, scope: !17545)
!17611 = !DILocation(line: 4553, column: 13, scope: !17498)
!17612 = !DILocation(line: 4553, column: 2, scope: !17498)
!17613 = !DILocation(line: 4555, column: 22, scope: !17498)
!17614 = !DILocation(line: 4555, column: 25, scope: !17498)
!17615 = !DILocation(line: 4555, column: 29, scope: !17498)
!17616 = !DILocation(line: 4555, column: 2, scope: !17498)
!17617 = !DILocation(line: 4556, column: 1, scope: !17498)
!17618 = distinct !DISubprogram(name: "applyMaskShrinkFatten", scope: !3, file: !3, line: 4591, type: !12679, scopeLine: 4592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!17619 = !DILocalVariable(name: "t", arg: 1, scope: !17618, file: !3, line: 4591, type: !3841)
!17620 = !DILocation(line: 4591, column: 46, scope: !17618)
!17621 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !17618, file: !3, line: 4591, type: !3857)
!17622 = !DILocation(line: 4591, column: 59, scope: !17618)
!17623 = !DILocalVariable(name: "td", scope: !17618, file: !3, line: 4593, type: !3868)
!17624 = !DILocation(line: 4593, column: 13, scope: !17618)
!17625 = !DILocalVariable(name: "ratio", scope: !17618, file: !3, line: 4594, type: !1727)
!17626 = !DILocation(line: 4594, column: 8, scope: !17618)
!17627 = !DILocalVariable(name: "i", scope: !17618, file: !3, line: 4595, type: !35)
!17628 = !DILocation(line: 4595, column: 6, scope: !17618)
!17629 = !DILocalVariable(name: "initial_feather", scope: !17618, file: !3, line: 4596, type: !2769)
!17630 = !DILocation(line: 4596, column: 7, scope: !17618)
!17631 = !DILocalVariable(name: "str", scope: !17618, file: !3, line: 4597, type: !2366)
!17632 = !DILocation(line: 4597, column: 7, scope: !17618)
!17633 = !DILocation(line: 4599, column: 10, scope: !17618)
!17634 = !DILocation(line: 4599, column: 13, scope: !17618)
!17635 = !DILocation(line: 4599, column: 8, scope: !17618)
!17636 = !DILocation(line: 4601, column: 20, scope: !17618)
!17637 = !DILocation(line: 4601, column: 2, scope: !17618)
!17638 = !DILocation(line: 4603, column: 17, scope: !17618)
!17639 = !DILocation(line: 4603, column: 20, scope: !17618)
!17640 = !DILocation(line: 4603, column: 2, scope: !17618)
!17641 = !DILocation(line: 4606, column: 19, scope: !17642)
!17642 = distinct !DILexicalBlock(scope: !17618, file: !3, line: 4606, column: 6)
!17643 = !DILocation(line: 4606, column: 22, scope: !17642)
!17644 = !DILocation(line: 4606, column: 6, scope: !17642)
!17645 = !DILocation(line: 4606, column: 6, scope: !17618)
!17646 = !DILocalVariable(name: "c", scope: !17647, file: !3, line: 4607, type: !22)
!17647 = distinct !DILexicalBlock(scope: !17642, file: !3, line: 4606, column: 28)
!17648 = !DILocation(line: 4607, column: 8, scope: !17647)
!17649 = !DILocation(line: 4609, column: 20, scope: !17647)
!17650 = !DILocation(line: 4609, column: 23, scope: !17647)
!17651 = !DILocation(line: 4609, column: 29, scope: !17647)
!17652 = !DILocation(line: 4609, column: 33, scope: !17647)
!17653 = !DILocation(line: 4609, column: 36, scope: !17647)
!17654 = !DILocation(line: 4609, column: 43, scope: !17647)
!17655 = !DILocation(line: 4609, column: 3, scope: !17647)
!17656 = !DILocation(line: 4610, column: 16, scope: !17647)
!17657 = !DILocation(line: 4610, column: 72, scope: !17647)
!17658 = !DILocation(line: 4610, column: 3, scope: !17647)
!17659 = !DILocation(line: 4611, column: 2, scope: !17647)
!17660 = !DILocation(line: 4613, column: 16, scope: !17661)
!17661 = distinct !DILexicalBlock(scope: !17642, file: !3, line: 4612, column: 7)
!17662 = !DILocation(line: 4613, column: 73, scope: !17661)
!17663 = !DILocation(line: 4613, column: 3, scope: !17661)
!17664 = !DILocation(line: 4617, column: 6, scope: !17665)
!17665 = distinct !DILexicalBlock(scope: !17618, file: !3, line: 4617, column: 6)
!17666 = !DILocation(line: 4617, column: 12, scope: !17665)
!17667 = !DILocation(line: 4617, column: 6, scope: !17618)
!17668 = !DILocation(line: 4618, column: 19, scope: !17669)
!17669 = distinct !DILexicalBlock(scope: !17665, file: !3, line: 4617, column: 20)
!17670 = !DILocation(line: 4620, column: 13, scope: !17671)
!17671 = distinct !DILexicalBlock(scope: !17669, file: !3, line: 4620, column: 3)
!17672 = !DILocation(line: 4620, column: 16, scope: !17671)
!17673 = !DILocation(line: 4620, column: 11, scope: !17671)
!17674 = !DILocation(line: 4620, column: 24, scope: !17671)
!17675 = !DILocation(line: 4620, column: 8, scope: !17671)
!17676 = !DILocation(line: 4620, column: 29, scope: !17677)
!17677 = distinct !DILexicalBlock(scope: !17671, file: !3, line: 4620, column: 3)
!17678 = !DILocation(line: 4620, column: 33, scope: !17677)
!17679 = !DILocation(line: 4620, column: 36, scope: !17677)
!17680 = !DILocation(line: 4620, column: 31, scope: !17677)
!17681 = !DILocation(line: 4620, column: 3, scope: !17671)
!17682 = !DILocation(line: 4621, column: 8, scope: !17683)
!17683 = distinct !DILexicalBlock(scope: !17684, file: !3, line: 4621, column: 8)
!17684 = distinct !DILexicalBlock(scope: !17677, file: !3, line: 4620, column: 54)
!17685 = !DILocation(line: 4621, column: 12, scope: !17683)
!17686 = !DILocation(line: 4621, column: 17, scope: !17683)
!17687 = !DILocation(line: 4621, column: 8, scope: !17684)
!17688 = !DILocation(line: 4622, column: 5, scope: !17683)
!17689 = !DILocation(line: 4624, column: 8, scope: !17690)
!17690 = distinct !DILexicalBlock(scope: !17684, file: !3, line: 4624, column: 8)
!17691 = !DILocation(line: 4624, column: 12, scope: !17690)
!17692 = !DILocation(line: 4624, column: 17, scope: !17690)
!17693 = !DILocation(line: 4624, column: 8, scope: !17684)
!17694 = !DILocation(line: 4625, column: 5, scope: !17690)
!17695 = !DILocation(line: 4627, column: 8, scope: !17696)
!17696 = distinct !DILexicalBlock(scope: !17684, file: !3, line: 4627, column: 8)
!17697 = !DILocation(line: 4627, column: 12, scope: !17696)
!17698 = !DILocation(line: 4627, column: 17, scope: !17696)
!17699 = !DILocation(line: 4627, column: 8, scope: !17684)
!17700 = !DILocation(line: 4628, column: 21, scope: !17696)
!17701 = !DILocation(line: 4628, column: 5, scope: !17696)
!17702 = !DILocation(line: 4629, column: 3, scope: !17684)
!17703 = !DILocation(line: 4620, column: 44, scope: !17677)
!17704 = !DILocation(line: 4620, column: 50, scope: !17677)
!17705 = !DILocation(line: 4620, column: 3, scope: !17677)
!17706 = distinct !{!17706, !17681, !17707}
!17707 = !DILocation(line: 4629, column: 3, scope: !17671)
!17708 = !DILocation(line: 4630, column: 2, scope: !17669)
!17709 = !DILocation(line: 4633, column: 12, scope: !17710)
!17710 = distinct !DILexicalBlock(scope: !17618, file: !3, line: 4633, column: 2)
!17711 = !DILocation(line: 4633, column: 15, scope: !17710)
!17712 = !DILocation(line: 4633, column: 10, scope: !17710)
!17713 = !DILocation(line: 4633, column: 23, scope: !17710)
!17714 = !DILocation(line: 4633, column: 7, scope: !17710)
!17715 = !DILocation(line: 4633, column: 28, scope: !17716)
!17716 = distinct !DILexicalBlock(scope: !17710, file: !3, line: 4633, column: 2)
!17717 = !DILocation(line: 4633, column: 32, scope: !17716)
!17718 = !DILocation(line: 4633, column: 35, scope: !17716)
!17719 = !DILocation(line: 4633, column: 30, scope: !17716)
!17720 = !DILocation(line: 4633, column: 2, scope: !17710)
!17721 = !DILocation(line: 4634, column: 7, scope: !17722)
!17722 = distinct !DILexicalBlock(scope: !17723, file: !3, line: 4634, column: 7)
!17723 = distinct !DILexicalBlock(scope: !17716, file: !3, line: 4633, column: 53)
!17724 = !DILocation(line: 4634, column: 11, scope: !17722)
!17725 = !DILocation(line: 4634, column: 16, scope: !17722)
!17726 = !DILocation(line: 4634, column: 7, scope: !17723)
!17727 = !DILocation(line: 4635, column: 4, scope: !17722)
!17728 = !DILocation(line: 4637, column: 7, scope: !17729)
!17729 = distinct !DILexicalBlock(scope: !17723, file: !3, line: 4637, column: 7)
!17730 = !DILocation(line: 4637, column: 11, scope: !17729)
!17731 = !DILocation(line: 4637, column: 16, scope: !17729)
!17732 = !DILocation(line: 4637, column: 7, scope: !17723)
!17733 = !DILocation(line: 4638, column: 4, scope: !17729)
!17734 = !DILocation(line: 4640, column: 7, scope: !17735)
!17735 = distinct !DILexicalBlock(scope: !17723, file: !3, line: 4640, column: 7)
!17736 = !DILocation(line: 4640, column: 11, scope: !17735)
!17737 = !DILocation(line: 4640, column: 7, scope: !17723)
!17738 = !DILocation(line: 4641, column: 8, scope: !17739)
!17739 = distinct !DILexicalBlock(scope: !17740, file: !3, line: 4641, column: 8)
!17740 = distinct !DILexicalBlock(scope: !17735, file: !3, line: 4640, column: 16)
!17741 = !DILocation(line: 4641, column: 8, scope: !17740)
!17742 = !DILocation(line: 4642, column: 16, scope: !17739)
!17743 = !DILocation(line: 4642, column: 20, scope: !17739)
!17744 = !DILocation(line: 4642, column: 28, scope: !17739)
!17745 = !DILocation(line: 4642, column: 34, scope: !17739)
!17746 = !DILocation(line: 4642, column: 42, scope: !17739)
!17747 = !DILocation(line: 4642, column: 25, scope: !17739)
!17748 = !DILocation(line: 4642, column: 6, scope: !17739)
!17749 = !DILocation(line: 4642, column: 10, scope: !17739)
!17750 = !DILocation(line: 4642, column: 14, scope: !17739)
!17751 = !DILocation(line: 4642, column: 5, scope: !17739)
!17752 = !DILocation(line: 4644, column: 16, scope: !17739)
!17753 = !DILocation(line: 4644, column: 20, scope: !17739)
!17754 = !DILocation(line: 4644, column: 27, scope: !17739)
!17755 = !DILocation(line: 4644, column: 25, scope: !17739)
!17756 = !DILocation(line: 4644, column: 6, scope: !17739)
!17757 = !DILocation(line: 4644, column: 10, scope: !17739)
!17758 = !DILocation(line: 4644, column: 14, scope: !17739)
!17759 = !DILocation(line: 4647, column: 17, scope: !17740)
!17760 = !DILocation(line: 4647, column: 21, scope: !17740)
!17761 = !DILocation(line: 4647, column: 16, scope: !17740)
!17762 = !DILocation(line: 4647, column: 27, scope: !17740)
!17763 = !DILocation(line: 4647, column: 31, scope: !17740)
!17764 = !DILocation(line: 4647, column: 25, scope: !17740)
!17765 = !DILocation(line: 4647, column: 50, scope: !17740)
!17766 = !DILocation(line: 4647, column: 54, scope: !17740)
!17767 = !DILocation(line: 4647, column: 48, scope: !17740)
!17768 = !DILocation(line: 4647, column: 64, scope: !17740)
!17769 = !DILocation(line: 4647, column: 68, scope: !17740)
!17770 = !DILocation(line: 4647, column: 62, scope: !17740)
!17771 = !DILocation(line: 4647, column: 39, scope: !17740)
!17772 = !DILocation(line: 4647, column: 5, scope: !17740)
!17773 = !DILocation(line: 4647, column: 9, scope: !17740)
!17774 = !DILocation(line: 4647, column: 13, scope: !17740)
!17775 = !DILocation(line: 4648, column: 9, scope: !17776)
!17776 = distinct !DILexicalBlock(scope: !17740, file: !3, line: 4648, column: 8)
!17777 = !DILocation(line: 4648, column: 13, scope: !17776)
!17778 = !DILocation(line: 4648, column: 8, scope: !17776)
!17779 = !DILocation(line: 4648, column: 17, scope: !17776)
!17780 = !DILocation(line: 4648, column: 8, scope: !17740)
!17781 = !DILocation(line: 4648, column: 27, scope: !17776)
!17782 = !DILocation(line: 4648, column: 31, scope: !17776)
!17783 = !DILocation(line: 4648, column: 35, scope: !17776)
!17784 = !DILocation(line: 4648, column: 26, scope: !17776)
!17785 = !DILocation(line: 4649, column: 3, scope: !17740)
!17786 = !DILocation(line: 4650, column: 2, scope: !17723)
!17787 = !DILocation(line: 4633, column: 43, scope: !17716)
!17788 = !DILocation(line: 4633, column: 49, scope: !17716)
!17789 = !DILocation(line: 4633, column: 2, scope: !17716)
!17790 = distinct !{!17790, !17720, !17791}
!17791 = !DILocation(line: 4650, column: 2, scope: !17710)
!17792 = !DILocation(line: 4652, column: 13, scope: !17618)
!17793 = !DILocation(line: 4652, column: 2, scope: !17618)
!17794 = !DILocation(line: 4654, column: 22, scope: !17618)
!17795 = !DILocation(line: 4654, column: 25, scope: !17618)
!17796 = !DILocation(line: 4654, column: 29, scope: !17618)
!17797 = !DILocation(line: 4654, column: 2, scope: !17618)
!17798 = !DILocation(line: 4655, column: 1, scope: !17618)
!17799 = distinct !DISubprogram(name: "applyPushPull", scope: !3, file: !3, line: 4684, type: !12679, scopeLine: 4685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!17800 = !DILocalVariable(name: "t", arg: 1, scope: !17799, file: !3, line: 4684, type: !3841)
!17801 = !DILocation(line: 4684, column: 38, scope: !17799)
!17802 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !17799, file: !3, line: 4684, type: !3857)
!17803 = !DILocation(line: 4684, column: 51, scope: !17799)
!17804 = !DILocalVariable(name: "vec", scope: !17799, file: !3, line: 4686, type: !1987)
!17805 = !DILocation(line: 4686, column: 8, scope: !17799)
!17806 = !DILocalVariable(name: "axis", scope: !17799, file: !3, line: 4686, type: !1987)
!17807 = !DILocation(line: 4686, column: 16, scope: !17799)
!17808 = !DILocalVariable(name: "distance", scope: !17799, file: !3, line: 4687, type: !1727)
!17809 = !DILocation(line: 4687, column: 8, scope: !17799)
!17810 = !DILocalVariable(name: "i", scope: !17799, file: !3, line: 4688, type: !35)
!17811 = !DILocation(line: 4688, column: 6, scope: !17799)
!17812 = !DILocalVariable(name: "str", scope: !17799, file: !3, line: 4689, type: !2366)
!17813 = !DILocation(line: 4689, column: 7, scope: !17799)
!17814 = !DILocalVariable(name: "td", scope: !17799, file: !3, line: 4690, type: !3868)
!17815 = !DILocation(line: 4690, column: 13, scope: !17799)
!17816 = !DILocation(line: 4690, column: 18, scope: !17799)
!17817 = !DILocation(line: 4690, column: 21, scope: !17799)
!17818 = !DILocation(line: 4692, column: 13, scope: !17799)
!17819 = !DILocation(line: 4692, column: 16, scope: !17799)
!17820 = !DILocation(line: 4692, column: 11, scope: !17799)
!17821 = !DILocation(line: 4694, column: 20, scope: !17799)
!17822 = !DILocation(line: 4694, column: 2, scope: !17799)
!17823 = !DILocation(line: 4696, column: 17, scope: !17799)
!17824 = !DILocation(line: 4696, column: 20, scope: !17799)
!17825 = !DILocation(line: 4696, column: 2, scope: !17799)
!17826 = !DILocation(line: 4699, column: 19, scope: !17827)
!17827 = distinct !DILexicalBlock(scope: !17799, file: !3, line: 4699, column: 6)
!17828 = !DILocation(line: 4699, column: 22, scope: !17827)
!17829 = !DILocation(line: 4699, column: 6, scope: !17827)
!17830 = !DILocation(line: 4699, column: 6, scope: !17799)
!17831 = !DILocalVariable(name: "c", scope: !17832, file: !3, line: 4700, type: !22)
!17832 = distinct !DILexicalBlock(scope: !17827, file: !3, line: 4699, column: 28)
!17833 = !DILocation(line: 4700, column: 8, scope: !17832)
!17834 = !DILocation(line: 4702, column: 20, scope: !17832)
!17835 = !DILocation(line: 4702, column: 23, scope: !17832)
!17836 = !DILocation(line: 4702, column: 29, scope: !17832)
!17837 = !DILocation(line: 4702, column: 33, scope: !17832)
!17838 = !DILocation(line: 4702, column: 36, scope: !17832)
!17839 = !DILocation(line: 4702, column: 43, scope: !17832)
!17840 = !DILocation(line: 4702, column: 3, scope: !17832)
!17841 = !DILocation(line: 4704, column: 16, scope: !17832)
!17842 = !DILocation(line: 4704, column: 65, scope: !17832)
!17843 = !DILocation(line: 4704, column: 68, scope: !17832)
!17844 = !DILocation(line: 4704, column: 71, scope: !17832)
!17845 = !DILocation(line: 4704, column: 75, scope: !17832)
!17846 = !DILocation(line: 4704, column: 81, scope: !17832)
!17847 = !DILocation(line: 4704, column: 84, scope: !17832)
!17848 = !DILocation(line: 4704, column: 3, scope: !17832)
!17849 = !DILocation(line: 4705, column: 2, scope: !17832)
!17850 = !DILocation(line: 4708, column: 16, scope: !17851)
!17851 = distinct !DILexicalBlock(scope: !17827, file: !3, line: 4706, column: 7)
!17852 = !DILocation(line: 4708, column: 67, scope: !17851)
!17853 = !DILocation(line: 4708, column: 77, scope: !17851)
!17854 = !DILocation(line: 4708, column: 80, scope: !17851)
!17855 = !DILocation(line: 4708, column: 84, scope: !17851)
!17856 = !DILocation(line: 4708, column: 90, scope: !17851)
!17857 = !DILocation(line: 4708, column: 93, scope: !17851)
!17858 = !DILocation(line: 4708, column: 3, scope: !17851)
!17859 = !DILocation(line: 4711, column: 17, scope: !17799)
!17860 = !DILocation(line: 4711, column: 2, scope: !17799)
!17861 = !DILocation(line: 4711, column: 5, scope: !17799)
!17862 = !DILocation(line: 4711, column: 15, scope: !17799)
!17863 = !DILocation(line: 4713, column: 6, scope: !17864)
!17864 = distinct !DILexicalBlock(scope: !17799, file: !3, line: 4713, column: 6)
!17865 = !DILocation(line: 4713, column: 9, scope: !17864)
!17866 = !DILocation(line: 4713, column: 13, scope: !17864)
!17867 = !DILocation(line: 4713, column: 22, scope: !17864)
!17868 = !DILocation(line: 4713, column: 25, scope: !17864)
!17869 = !DILocation(line: 4713, column: 28, scope: !17864)
!17870 = !DILocation(line: 4713, column: 32, scope: !17864)
!17871 = !DILocation(line: 4713, column: 37, scope: !17864)
!17872 = !DILocation(line: 4713, column: 6, scope: !17799)
!17873 = !DILocation(line: 4714, column: 3, scope: !17874)
!17874 = distinct !DILexicalBlock(scope: !17864, file: !3, line: 4713, column: 50)
!17875 = !DILocation(line: 4714, column: 6, scope: !17874)
!17876 = !DILocation(line: 4714, column: 10, scope: !17874)
!17877 = !DILocation(line: 4714, column: 19, scope: !17874)
!17878 = !DILocation(line: 4714, column: 28, scope: !17874)
!17879 = !DILocation(line: 4715, column: 2, scope: !17874)
!17880 = !DILocation(line: 4717, column: 9, scope: !17881)
!17881 = distinct !DILexicalBlock(scope: !17799, file: !3, line: 4717, column: 2)
!17882 = !DILocation(line: 4717, column: 7, scope: !17881)
!17883 = !DILocation(line: 4717, column: 14, scope: !17884)
!17884 = distinct !DILexicalBlock(scope: !17881, file: !3, line: 4717, column: 2)
!17885 = !DILocation(line: 4717, column: 18, scope: !17884)
!17886 = !DILocation(line: 4717, column: 21, scope: !17884)
!17887 = !DILocation(line: 4717, column: 16, scope: !17884)
!17888 = !DILocation(line: 4717, column: 2, scope: !17881)
!17889 = !DILocation(line: 4718, column: 7, scope: !17890)
!17890 = distinct !DILexicalBlock(scope: !17891, file: !3, line: 4718, column: 7)
!17891 = distinct !DILexicalBlock(scope: !17884, file: !3, line: 4717, column: 39)
!17892 = !DILocation(line: 4718, column: 11, scope: !17890)
!17893 = !DILocation(line: 4718, column: 16, scope: !17890)
!17894 = !DILocation(line: 4718, column: 7, scope: !17891)
!17895 = !DILocation(line: 4719, column: 4, scope: !17890)
!17896 = !DILocation(line: 4721, column: 7, scope: !17897)
!17897 = distinct !DILexicalBlock(scope: !17891, file: !3, line: 4721, column: 7)
!17898 = !DILocation(line: 4721, column: 11, scope: !17897)
!17899 = !DILocation(line: 4721, column: 16, scope: !17897)
!17900 = !DILocation(line: 4721, column: 7, scope: !17891)
!17901 = !DILocation(line: 4722, column: 4, scope: !17897)
!17902 = !DILocation(line: 4724, column: 15, scope: !17891)
!17903 = !DILocation(line: 4724, column: 20, scope: !17891)
!17904 = !DILocation(line: 4724, column: 23, scope: !17891)
!17905 = !DILocation(line: 4724, column: 31, scope: !17891)
!17906 = !DILocation(line: 4724, column: 35, scope: !17891)
!17907 = !DILocation(line: 4724, column: 3, scope: !17891)
!17908 = !DILocation(line: 4725, column: 7, scope: !17909)
!17909 = distinct !DILexicalBlock(scope: !17891, file: !3, line: 4725, column: 7)
!17910 = !DILocation(line: 4725, column: 10, scope: !17909)
!17911 = !DILocation(line: 4725, column: 14, scope: !17909)
!17912 = !DILocation(line: 4725, column: 23, scope: !17909)
!17913 = !DILocation(line: 4725, column: 26, scope: !17909)
!17914 = !DILocation(line: 4725, column: 29, scope: !17909)
!17915 = !DILocation(line: 4725, column: 33, scope: !17909)
!17916 = !DILocation(line: 4725, column: 38, scope: !17909)
!17917 = !DILocation(line: 4725, column: 7, scope: !17891)
!17918 = !DILocation(line: 4726, column: 4, scope: !17919)
!17919 = distinct !DILexicalBlock(scope: !17909, file: !3, line: 4725, column: 51)
!17920 = !DILocation(line: 4726, column: 7, scope: !17919)
!17921 = !DILocation(line: 4726, column: 11, scope: !17919)
!17922 = !DILocation(line: 4726, column: 20, scope: !17919)
!17923 = !DILocation(line: 4726, column: 23, scope: !17919)
!17924 = !DILocation(line: 4726, column: 27, scope: !17919)
!17925 = !DILocation(line: 4727, column: 25, scope: !17926)
!17926 = distinct !DILexicalBlock(scope: !17919, file: !3, line: 4727, column: 8)
!17927 = !DILocation(line: 4727, column: 8, scope: !17926)
!17928 = !DILocation(line: 4727, column: 8, scope: !17919)
!17929 = !DILocalVariable(name: "dvec", scope: !17930, file: !3, line: 4728, type: !1987)
!17930 = distinct !DILexicalBlock(scope: !17926, file: !3, line: 4727, column: 29)
!17931 = !DILocation(line: 4728, column: 11, scope: !17930)
!17932 = !DILocation(line: 4729, column: 21, scope: !17930)
!17933 = !DILocation(line: 4729, column: 27, scope: !17930)
!17934 = !DILocation(line: 4729, column: 32, scope: !17930)
!17935 = !DILocation(line: 4729, column: 5, scope: !17930)
!17936 = !DILocation(line: 4730, column: 15, scope: !17930)
!17937 = !DILocation(line: 4730, column: 20, scope: !17930)
!17938 = !DILocation(line: 4730, column: 5, scope: !17930)
!17939 = !DILocation(line: 4731, column: 4, scope: !17930)
!17940 = !DILocation(line: 4733, column: 21, scope: !17941)
!17941 = distinct !DILexicalBlock(scope: !17926, file: !3, line: 4732, column: 9)
!17942 = !DILocation(line: 4733, column: 26, scope: !17941)
!17943 = !DILocation(line: 4733, column: 31, scope: !17941)
!17944 = !DILocation(line: 4733, column: 5, scope: !17941)
!17945 = !DILocation(line: 4735, column: 3, scope: !17919)
!17946 = !DILocation(line: 4736, column: 16, scope: !17891)
!17947 = !DILocation(line: 4736, column: 3, scope: !17891)
!17948 = !DILocation(line: 4737, column: 13, scope: !17891)
!17949 = !DILocation(line: 4737, column: 18, scope: !17891)
!17950 = !DILocation(line: 4737, column: 3, scope: !17891)
!17951 = !DILocation(line: 4738, column: 13, scope: !17891)
!17952 = !DILocation(line: 4738, column: 18, scope: !17891)
!17953 = !DILocation(line: 4738, column: 22, scope: !17891)
!17954 = !DILocation(line: 4738, column: 3, scope: !17891)
!17955 = !DILocation(line: 4740, column: 15, scope: !17891)
!17956 = !DILocation(line: 4740, column: 19, scope: !17891)
!17957 = !DILocation(line: 4740, column: 24, scope: !17891)
!17958 = !DILocation(line: 4740, column: 28, scope: !17891)
!17959 = !DILocation(line: 4740, column: 34, scope: !17891)
!17960 = !DILocation(line: 4740, column: 3, scope: !17891)
!17961 = !DILocation(line: 4741, column: 2, scope: !17891)
!17962 = !DILocation(line: 4717, column: 29, scope: !17884)
!17963 = !DILocation(line: 4717, column: 35, scope: !17884)
!17964 = !DILocation(line: 4717, column: 2, scope: !17884)
!17965 = distinct !{!17965, !17888, !17966}
!17966 = !DILocation(line: 4741, column: 2, scope: !17881)
!17967 = !DILocation(line: 4743, column: 13, scope: !17799)
!17968 = !DILocation(line: 4743, column: 2, scope: !17799)
!17969 = !DILocation(line: 4745, column: 22, scope: !17799)
!17970 = !DILocation(line: 4745, column: 25, scope: !17799)
!17971 = !DILocation(line: 4745, column: 29, scope: !17799)
!17972 = !DILocation(line: 4745, column: 2, scope: !17799)
!17973 = !DILocation(line: 4746, column: 1, scope: !17799)
!17974 = distinct !DISubprogram(name: "applyBevelWeight", scope: !3, file: !3, line: 4776, type: !12679, scopeLine: 4777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!17975 = !DILocalVariable(name: "t", arg: 1, scope: !17974, file: !3, line: 4776, type: !3841)
!17976 = !DILocation(line: 4776, column: 41, scope: !17974)
!17977 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !17974, file: !3, line: 4776, type: !3857)
!17978 = !DILocation(line: 4776, column: 54, scope: !17974)
!17979 = !DILocalVariable(name: "td", scope: !17974, file: !3, line: 4778, type: !3868)
!17980 = !DILocation(line: 4778, column: 13, scope: !17974)
!17981 = !DILocation(line: 4778, column: 18, scope: !17974)
!17982 = !DILocation(line: 4778, column: 21, scope: !17974)
!17983 = !DILocalVariable(name: "weight", scope: !17974, file: !3, line: 4779, type: !1727)
!17984 = !DILocation(line: 4779, column: 8, scope: !17974)
!17985 = !DILocalVariable(name: "i", scope: !17974, file: !3, line: 4780, type: !35)
!17986 = !DILocation(line: 4780, column: 6, scope: !17974)
!17987 = !DILocalVariable(name: "str", scope: !17974, file: !3, line: 4781, type: !2366)
!17988 = !DILocation(line: 4781, column: 7, scope: !17974)
!17989 = !DILocation(line: 4783, column: 11, scope: !17974)
!17990 = !DILocation(line: 4783, column: 14, scope: !17974)
!17991 = !DILocation(line: 4783, column: 9, scope: !17974)
!17992 = !DILocation(line: 4785, column: 6, scope: !17993)
!17993 = distinct !DILexicalBlock(scope: !17974, file: !3, line: 4785, column: 6)
!17994 = !DILocation(line: 4785, column: 13, scope: !17993)
!17995 = !DILocation(line: 4785, column: 6, scope: !17974)
!17996 = !DILocation(line: 4785, column: 28, scope: !17993)
!17997 = !DILocation(line: 4785, column: 21, scope: !17993)
!17998 = !DILocation(line: 4787, column: 20, scope: !17974)
!17999 = !DILocation(line: 4787, column: 2, scope: !17974)
!18000 = !DILocation(line: 4789, column: 17, scope: !17974)
!18001 = !DILocation(line: 4789, column: 20, scope: !17974)
!18002 = !DILocation(line: 4789, column: 2, scope: !17974)
!18003 = !DILocation(line: 4792, column: 19, scope: !18004)
!18004 = distinct !DILexicalBlock(scope: !17974, file: !3, line: 4792, column: 6)
!18005 = !DILocation(line: 4792, column: 22, scope: !18004)
!18006 = !DILocation(line: 4792, column: 6, scope: !18004)
!18007 = !DILocation(line: 4792, column: 6, scope: !17974)
!18008 = !DILocalVariable(name: "c", scope: !18009, file: !3, line: 4793, type: !22)
!18009 = distinct !DILexicalBlock(scope: !18004, file: !3, line: 4792, column: 28)
!18010 = !DILocation(line: 4793, column: 8, scope: !18009)
!18011 = !DILocation(line: 4795, column: 20, scope: !18009)
!18012 = !DILocation(line: 4795, column: 23, scope: !18009)
!18013 = !DILocation(line: 4795, column: 29, scope: !18009)
!18014 = !DILocation(line: 4795, column: 33, scope: !18009)
!18015 = !DILocation(line: 4795, column: 36, scope: !18009)
!18016 = !DILocation(line: 4795, column: 43, scope: !18009)
!18017 = !DILocation(line: 4795, column: 3, scope: !18009)
!18018 = !DILocation(line: 4797, column: 7, scope: !18019)
!18019 = distinct !DILexicalBlock(scope: !18009, file: !3, line: 4797, column: 7)
!18020 = !DILocation(line: 4797, column: 14, scope: !18019)
!18021 = !DILocation(line: 4797, column: 7, scope: !18009)
!18022 = !DILocation(line: 4798, column: 17, scope: !18019)
!18023 = !DILocation(line: 4798, column: 68, scope: !18019)
!18024 = !DILocation(line: 4798, column: 71, scope: !18019)
!18025 = !DILocation(line: 4798, column: 74, scope: !18019)
!18026 = !DILocation(line: 4798, column: 4, scope: !18019)
!18027 = !DILocation(line: 4800, column: 17, scope: !18019)
!18028 = !DILocation(line: 4800, column: 67, scope: !18019)
!18029 = !DILocation(line: 4800, column: 70, scope: !18019)
!18030 = !DILocation(line: 4800, column: 73, scope: !18019)
!18031 = !DILocation(line: 4800, column: 4, scope: !18019)
!18032 = !DILocation(line: 4801, column: 2, scope: !18009)
!18033 = !DILocation(line: 4804, column: 7, scope: !18034)
!18034 = distinct !DILexicalBlock(scope: !18035, file: !3, line: 4804, column: 7)
!18035 = distinct !DILexicalBlock(scope: !18004, file: !3, line: 4802, column: 7)
!18036 = !DILocation(line: 4804, column: 14, scope: !18034)
!18037 = !DILocation(line: 4804, column: 7, scope: !18035)
!18038 = !DILocation(line: 4805, column: 17, scope: !18034)
!18039 = !DILocation(line: 4805, column: 70, scope: !18034)
!18040 = !DILocation(line: 4805, column: 78, scope: !18034)
!18041 = !DILocation(line: 4805, column: 81, scope: !18034)
!18042 = !DILocation(line: 4805, column: 4, scope: !18034)
!18043 = !DILocation(line: 4807, column: 17, scope: !18034)
!18044 = !DILocation(line: 4807, column: 69, scope: !18034)
!18045 = !DILocation(line: 4807, column: 77, scope: !18034)
!18046 = !DILocation(line: 4807, column: 80, scope: !18034)
!18047 = !DILocation(line: 4807, column: 4, scope: !18034)
!18048 = !DILocation(line: 4810, column: 9, scope: !18049)
!18049 = distinct !DILexicalBlock(scope: !17974, file: !3, line: 4810, column: 2)
!18050 = !DILocation(line: 4810, column: 7, scope: !18049)
!18051 = !DILocation(line: 4810, column: 14, scope: !18052)
!18052 = distinct !DILexicalBlock(scope: !18049, file: !3, line: 4810, column: 2)
!18053 = !DILocation(line: 4810, column: 18, scope: !18052)
!18054 = !DILocation(line: 4810, column: 21, scope: !18052)
!18055 = !DILocation(line: 4810, column: 16, scope: !18052)
!18056 = !DILocation(line: 4810, column: 2, scope: !18049)
!18057 = !DILocation(line: 4811, column: 7, scope: !18058)
!18058 = distinct !DILexicalBlock(scope: !18059, file: !3, line: 4811, column: 7)
!18059 = distinct !DILexicalBlock(scope: !18052, file: !3, line: 4810, column: 39)
!18060 = !DILocation(line: 4811, column: 11, scope: !18058)
!18061 = !DILocation(line: 4811, column: 16, scope: !18058)
!18062 = !DILocation(line: 4811, column: 7, scope: !18059)
!18063 = !DILocation(line: 4812, column: 4, scope: !18058)
!18064 = !DILocation(line: 4814, column: 7, scope: !18065)
!18065 = distinct !DILexicalBlock(scope: !18059, file: !3, line: 4814, column: 7)
!18066 = !DILocation(line: 4814, column: 11, scope: !18065)
!18067 = !DILocation(line: 4814, column: 7, scope: !18059)
!18068 = !DILocation(line: 4815, column: 15, scope: !18069)
!18069 = distinct !DILexicalBlock(scope: !18065, file: !3, line: 4814, column: 16)
!18070 = !DILocation(line: 4815, column: 19, scope: !18069)
!18071 = !DILocation(line: 4815, column: 26, scope: !18069)
!18072 = !DILocation(line: 4815, column: 35, scope: !18069)
!18073 = !DILocation(line: 4815, column: 39, scope: !18069)
!18074 = !DILocation(line: 4815, column: 33, scope: !18069)
!18075 = !DILocation(line: 4815, column: 24, scope: !18069)
!18076 = !DILocation(line: 4815, column: 5, scope: !18069)
!18077 = !DILocation(line: 4815, column: 9, scope: !18069)
!18078 = !DILocation(line: 4815, column: 13, scope: !18069)
!18079 = !DILocation(line: 4816, column: 9, scope: !18080)
!18080 = distinct !DILexicalBlock(scope: !18069, file: !3, line: 4816, column: 8)
!18081 = !DILocation(line: 4816, column: 13, scope: !18080)
!18082 = !DILocation(line: 4816, column: 8, scope: !18080)
!18083 = !DILocation(line: 4816, column: 17, scope: !18080)
!18084 = !DILocation(line: 4816, column: 8, scope: !18069)
!18085 = !DILocation(line: 4816, column: 26, scope: !18080)
!18086 = !DILocation(line: 4816, column: 30, scope: !18080)
!18087 = !DILocation(line: 4816, column: 34, scope: !18080)
!18088 = !DILocation(line: 4816, column: 25, scope: !18080)
!18089 = !DILocation(line: 4817, column: 9, scope: !18090)
!18090 = distinct !DILexicalBlock(scope: !18069, file: !3, line: 4817, column: 8)
!18091 = !DILocation(line: 4817, column: 13, scope: !18090)
!18092 = !DILocation(line: 4817, column: 8, scope: !18090)
!18093 = !DILocation(line: 4817, column: 17, scope: !18090)
!18094 = !DILocation(line: 4817, column: 8, scope: !18069)
!18095 = !DILocation(line: 4817, column: 26, scope: !18090)
!18096 = !DILocation(line: 4817, column: 30, scope: !18090)
!18097 = !DILocation(line: 4817, column: 34, scope: !18090)
!18098 = !DILocation(line: 4817, column: 25, scope: !18090)
!18099 = !DILocation(line: 4818, column: 3, scope: !18069)
!18100 = !DILocation(line: 4819, column: 2, scope: !18059)
!18101 = !DILocation(line: 4810, column: 29, scope: !18052)
!18102 = !DILocation(line: 4810, column: 35, scope: !18052)
!18103 = !DILocation(line: 4810, column: 2, scope: !18052)
!18104 = distinct !{!18104, !18056, !18105}
!18105 = !DILocation(line: 4819, column: 2, scope: !18049)
!18106 = !DILocation(line: 4821, column: 13, scope: !17974)
!18107 = !DILocation(line: 4821, column: 2, scope: !17974)
!18108 = !DILocation(line: 4823, column: 22, scope: !17974)
!18109 = !DILocation(line: 4823, column: 25, scope: !17974)
!18110 = !DILocation(line: 4823, column: 29, scope: !17974)
!18111 = !DILocation(line: 4823, column: 2, scope: !17974)
!18112 = !DILocation(line: 4824, column: 1, scope: !17974)
!18113 = distinct !DISubprogram(name: "applyCrease", scope: !3, file: !3, line: 4854, type: !12679, scopeLine: 4855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!18114 = !DILocalVariable(name: "t", arg: 1, scope: !18113, file: !3, line: 4854, type: !3841)
!18115 = !DILocation(line: 4854, column: 36, scope: !18113)
!18116 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !18113, file: !3, line: 4854, type: !3857)
!18117 = !DILocation(line: 4854, column: 49, scope: !18113)
!18118 = !DILocalVariable(name: "td", scope: !18113, file: !3, line: 4856, type: !3868)
!18119 = !DILocation(line: 4856, column: 13, scope: !18113)
!18120 = !DILocation(line: 4856, column: 18, scope: !18113)
!18121 = !DILocation(line: 4856, column: 21, scope: !18113)
!18122 = !DILocalVariable(name: "crease", scope: !18113, file: !3, line: 4857, type: !1727)
!18123 = !DILocation(line: 4857, column: 8, scope: !18113)
!18124 = !DILocalVariable(name: "i", scope: !18113, file: !3, line: 4858, type: !35)
!18125 = !DILocation(line: 4858, column: 6, scope: !18113)
!18126 = !DILocalVariable(name: "str", scope: !18113, file: !3, line: 4859, type: !2366)
!18127 = !DILocation(line: 4859, column: 7, scope: !18113)
!18128 = !DILocation(line: 4861, column: 11, scope: !18113)
!18129 = !DILocation(line: 4861, column: 14, scope: !18113)
!18130 = !DILocation(line: 4861, column: 9, scope: !18113)
!18131 = !DILocation(line: 4863, column: 6, scope: !18132)
!18132 = distinct !DILexicalBlock(scope: !18113, file: !3, line: 4863, column: 6)
!18133 = !DILocation(line: 4863, column: 13, scope: !18132)
!18134 = !DILocation(line: 4863, column: 6, scope: !18113)
!18135 = !DILocation(line: 4863, column: 28, scope: !18132)
!18136 = !DILocation(line: 4863, column: 21, scope: !18132)
!18137 = !DILocation(line: 4865, column: 20, scope: !18113)
!18138 = !DILocation(line: 4865, column: 2, scope: !18113)
!18139 = !DILocation(line: 4867, column: 17, scope: !18113)
!18140 = !DILocation(line: 4867, column: 20, scope: !18113)
!18141 = !DILocation(line: 4867, column: 2, scope: !18113)
!18142 = !DILocation(line: 4870, column: 19, scope: !18143)
!18143 = distinct !DILexicalBlock(scope: !18113, file: !3, line: 4870, column: 6)
!18144 = !DILocation(line: 4870, column: 22, scope: !18143)
!18145 = !DILocation(line: 4870, column: 6, scope: !18143)
!18146 = !DILocation(line: 4870, column: 6, scope: !18113)
!18147 = !DILocalVariable(name: "c", scope: !18148, file: !3, line: 4871, type: !22)
!18148 = distinct !DILexicalBlock(scope: !18143, file: !3, line: 4870, column: 28)
!18149 = !DILocation(line: 4871, column: 8, scope: !18148)
!18150 = !DILocation(line: 4873, column: 20, scope: !18148)
!18151 = !DILocation(line: 4873, column: 23, scope: !18148)
!18152 = !DILocation(line: 4873, column: 29, scope: !18148)
!18153 = !DILocation(line: 4873, column: 33, scope: !18148)
!18154 = !DILocation(line: 4873, column: 36, scope: !18148)
!18155 = !DILocation(line: 4873, column: 43, scope: !18148)
!18156 = !DILocation(line: 4873, column: 3, scope: !18148)
!18157 = !DILocation(line: 4875, column: 7, scope: !18158)
!18158 = distinct !DILexicalBlock(scope: !18148, file: !3, line: 4875, column: 7)
!18159 = !DILocation(line: 4875, column: 14, scope: !18158)
!18160 = !DILocation(line: 4875, column: 7, scope: !18148)
!18161 = !DILocation(line: 4876, column: 17, scope: !18158)
!18162 = !DILocation(line: 4876, column: 62, scope: !18158)
!18163 = !DILocation(line: 4876, column: 65, scope: !18158)
!18164 = !DILocation(line: 4876, column: 68, scope: !18158)
!18165 = !DILocation(line: 4876, column: 4, scope: !18158)
!18166 = !DILocation(line: 4878, column: 17, scope: !18158)
!18167 = !DILocation(line: 4878, column: 61, scope: !18158)
!18168 = !DILocation(line: 4878, column: 64, scope: !18158)
!18169 = !DILocation(line: 4878, column: 67, scope: !18158)
!18170 = !DILocation(line: 4878, column: 4, scope: !18158)
!18171 = !DILocation(line: 4879, column: 2, scope: !18148)
!18172 = !DILocation(line: 4882, column: 7, scope: !18173)
!18173 = distinct !DILexicalBlock(scope: !18174, file: !3, line: 4882, column: 7)
!18174 = distinct !DILexicalBlock(scope: !18143, file: !3, line: 4880, column: 7)
!18175 = !DILocation(line: 4882, column: 14, scope: !18173)
!18176 = !DILocation(line: 4882, column: 7, scope: !18174)
!18177 = !DILocation(line: 4883, column: 17, scope: !18173)
!18178 = !DILocation(line: 4883, column: 64, scope: !18173)
!18179 = !DILocation(line: 4883, column: 72, scope: !18173)
!18180 = !DILocation(line: 4883, column: 75, scope: !18173)
!18181 = !DILocation(line: 4883, column: 4, scope: !18173)
!18182 = !DILocation(line: 4885, column: 17, scope: !18173)
!18183 = !DILocation(line: 4885, column: 63, scope: !18173)
!18184 = !DILocation(line: 4885, column: 71, scope: !18173)
!18185 = !DILocation(line: 4885, column: 74, scope: !18173)
!18186 = !DILocation(line: 4885, column: 4, scope: !18173)
!18187 = !DILocation(line: 4888, column: 9, scope: !18188)
!18188 = distinct !DILexicalBlock(scope: !18113, file: !3, line: 4888, column: 2)
!18189 = !DILocation(line: 4888, column: 7, scope: !18188)
!18190 = !DILocation(line: 4888, column: 14, scope: !18191)
!18191 = distinct !DILexicalBlock(scope: !18188, file: !3, line: 4888, column: 2)
!18192 = !DILocation(line: 4888, column: 18, scope: !18191)
!18193 = !DILocation(line: 4888, column: 21, scope: !18191)
!18194 = !DILocation(line: 4888, column: 16, scope: !18191)
!18195 = !DILocation(line: 4888, column: 2, scope: !18188)
!18196 = !DILocation(line: 4889, column: 7, scope: !18197)
!18197 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 4889, column: 7)
!18198 = distinct !DILexicalBlock(scope: !18191, file: !3, line: 4888, column: 39)
!18199 = !DILocation(line: 4889, column: 11, scope: !18197)
!18200 = !DILocation(line: 4889, column: 16, scope: !18197)
!18201 = !DILocation(line: 4889, column: 7, scope: !18198)
!18202 = !DILocation(line: 4890, column: 4, scope: !18197)
!18203 = !DILocation(line: 4892, column: 7, scope: !18204)
!18204 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 4892, column: 7)
!18205 = !DILocation(line: 4892, column: 11, scope: !18204)
!18206 = !DILocation(line: 4892, column: 16, scope: !18204)
!18207 = !DILocation(line: 4892, column: 7, scope: !18198)
!18208 = !DILocation(line: 4893, column: 4, scope: !18204)
!18209 = !DILocation(line: 4895, column: 7, scope: !18210)
!18210 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 4895, column: 7)
!18211 = !DILocation(line: 4895, column: 11, scope: !18210)
!18212 = !DILocation(line: 4895, column: 7, scope: !18198)
!18213 = !DILocation(line: 4896, column: 15, scope: !18214)
!18214 = distinct !DILexicalBlock(scope: !18210, file: !3, line: 4895, column: 16)
!18215 = !DILocation(line: 4896, column: 19, scope: !18214)
!18216 = !DILocation(line: 4896, column: 26, scope: !18214)
!18217 = !DILocation(line: 4896, column: 35, scope: !18214)
!18218 = !DILocation(line: 4896, column: 39, scope: !18214)
!18219 = !DILocation(line: 4896, column: 33, scope: !18214)
!18220 = !DILocation(line: 4896, column: 24, scope: !18214)
!18221 = !DILocation(line: 4896, column: 5, scope: !18214)
!18222 = !DILocation(line: 4896, column: 9, scope: !18214)
!18223 = !DILocation(line: 4896, column: 13, scope: !18214)
!18224 = !DILocation(line: 4897, column: 9, scope: !18225)
!18225 = distinct !DILexicalBlock(scope: !18214, file: !3, line: 4897, column: 8)
!18226 = !DILocation(line: 4897, column: 13, scope: !18225)
!18227 = !DILocation(line: 4897, column: 8, scope: !18225)
!18228 = !DILocation(line: 4897, column: 17, scope: !18225)
!18229 = !DILocation(line: 4897, column: 8, scope: !18214)
!18230 = !DILocation(line: 4897, column: 26, scope: !18225)
!18231 = !DILocation(line: 4897, column: 30, scope: !18225)
!18232 = !DILocation(line: 4897, column: 34, scope: !18225)
!18233 = !DILocation(line: 4897, column: 25, scope: !18225)
!18234 = !DILocation(line: 4898, column: 9, scope: !18235)
!18235 = distinct !DILexicalBlock(scope: !18214, file: !3, line: 4898, column: 8)
!18236 = !DILocation(line: 4898, column: 13, scope: !18235)
!18237 = !DILocation(line: 4898, column: 8, scope: !18235)
!18238 = !DILocation(line: 4898, column: 17, scope: !18235)
!18239 = !DILocation(line: 4898, column: 8, scope: !18214)
!18240 = !DILocation(line: 4898, column: 26, scope: !18235)
!18241 = !DILocation(line: 4898, column: 30, scope: !18235)
!18242 = !DILocation(line: 4898, column: 34, scope: !18235)
!18243 = !DILocation(line: 4898, column: 25, scope: !18235)
!18244 = !DILocation(line: 4899, column: 3, scope: !18214)
!18245 = !DILocation(line: 4900, column: 2, scope: !18198)
!18246 = !DILocation(line: 4888, column: 29, scope: !18191)
!18247 = !DILocation(line: 4888, column: 35, scope: !18191)
!18248 = !DILocation(line: 4888, column: 2, scope: !18191)
!18249 = distinct !{!18249, !18195, !18250}
!18250 = !DILocation(line: 4900, column: 2, scope: !18188)
!18251 = !DILocation(line: 4902, column: 13, scope: !18113)
!18252 = !DILocation(line: 4902, column: 2, scope: !18113)
!18253 = !DILocation(line: 4904, column: 22, scope: !18113)
!18254 = !DILocation(line: 4904, column: 25, scope: !18113)
!18255 = !DILocation(line: 4904, column: 29, scope: !18113)
!18256 = !DILocation(line: 4904, column: 2, scope: !18113)
!18257 = !DILocation(line: 4905, column: 1, scope: !18113)
!18258 = distinct !DISubprogram(name: "applyBoneSize", scope: !3, file: !3, line: 4985, type: !12679, scopeLine: 4986, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!18259 = !DILocalVariable(name: "t", arg: 1, scope: !18258, file: !3, line: 4985, type: !3841)
!18260 = !DILocation(line: 4985, column: 38, scope: !18258)
!18261 = !DILocalVariable(name: "mval", arg: 2, scope: !18258, file: !3, line: 4985, type: !3857)
!18262 = !DILocation(line: 4985, column: 51, scope: !18258)
!18263 = !DILocalVariable(name: "td", scope: !18258, file: !3, line: 4987, type: !3868)
!18264 = !DILocation(line: 4987, column: 13, scope: !18258)
!18265 = !DILocation(line: 4987, column: 18, scope: !18258)
!18266 = !DILocation(line: 4987, column: 21, scope: !18258)
!18267 = !DILocalVariable(name: "size", scope: !18258, file: !3, line: 4988, type: !1987)
!18268 = !DILocation(line: 4988, column: 8, scope: !18258)
!18269 = !DILocalVariable(name: "mat", scope: !18258, file: !3, line: 4988, type: !3881)
!18270 = !DILocation(line: 4988, column: 17, scope: !18258)
!18271 = !DILocalVariable(name: "ratio", scope: !18258, file: !3, line: 4989, type: !1727)
!18272 = !DILocation(line: 4989, column: 8, scope: !18258)
!18273 = !DILocalVariable(name: "i", scope: !18258, file: !3, line: 4990, type: !35)
!18274 = !DILocation(line: 4990, column: 6, scope: !18258)
!18275 = !DILocalVariable(name: "str", scope: !18258, file: !3, line: 4991, type: !2366)
!18276 = !DILocation(line: 4991, column: 7, scope: !18258)
!18277 = !DILocation(line: 4995, column: 7, scope: !18278)
!18278 = distinct !DILexicalBlock(scope: !18258, file: !3, line: 4995, column: 6)
!18279 = !DILocation(line: 4995, column: 10, scope: !18278)
!18280 = !DILocation(line: 4995, column: 15, scope: !18278)
!18281 = !DILocation(line: 4995, column: 37, scope: !18278)
!18282 = !DILocation(line: 4995, column: 40, scope: !18278)
!18283 = !DILocation(line: 4995, column: 43, scope: !18278)
!18284 = !DILocation(line: 4995, column: 47, scope: !18278)
!18285 = !DILocation(line: 4995, column: 52, scope: !18278)
!18286 = !DILocation(line: 4995, column: 6, scope: !18258)
!18287 = !DILocation(line: 4996, column: 20, scope: !18288)
!18288 = distinct !DILexicalBlock(scope: !18278, file: !3, line: 4995, column: 58)
!18289 = !DILocation(line: 4996, column: 23, scope: !18288)
!18290 = !DILocation(line: 4996, column: 34, scope: !18288)
!18291 = !DILocation(line: 4996, column: 32, scope: !18288)
!18292 = !DILocation(line: 4996, column: 46, scope: !18288)
!18293 = !DILocation(line: 4996, column: 49, scope: !18288)
!18294 = !DILocation(line: 4996, column: 60, scope: !18288)
!18295 = !DILocation(line: 4996, column: 58, scope: !18288)
!18296 = !DILocation(line: 4996, column: 43, scope: !18288)
!18297 = !DILocation(line: 4996, column: 18, scope: !18288)
!18298 = !DILocation(line: 4996, column: 70, scope: !18288)
!18299 = !DILocation(line: 4996, column: 16, scope: !18288)
!18300 = !DILocation(line: 4996, column: 9, scope: !18288)
!18301 = !DILocation(line: 4997, column: 2, scope: !18288)
!18302 = !DILocation(line: 4999, column: 11, scope: !18303)
!18303 = distinct !DILexicalBlock(scope: !18278, file: !3, line: 4998, column: 7)
!18304 = !DILocation(line: 4999, column: 14, scope: !18303)
!18305 = !DILocation(line: 4999, column: 9, scope: !18303)
!18306 = !DILocation(line: 5002, column: 32, scope: !18258)
!18307 = !DILocation(line: 5002, column: 22, scope: !18258)
!18308 = !DILocation(line: 5002, column: 30, scope: !18258)
!18309 = !DILocation(line: 5002, column: 12, scope: !18258)
!18310 = !DILocation(line: 5002, column: 20, scope: !18258)
!18311 = !DILocation(line: 5002, column: 2, scope: !18258)
!18312 = !DILocation(line: 5002, column: 10, scope: !18258)
!18313 = !DILocation(line: 5004, column: 20, scope: !18258)
!18314 = !DILocation(line: 5004, column: 23, scope: !18258)
!18315 = !DILocation(line: 5004, column: 2, scope: !18258)
!18316 = !DILocation(line: 5006, column: 21, scope: !18317)
!18317 = distinct !DILexicalBlock(scope: !18258, file: !3, line: 5006, column: 6)
!18318 = !DILocation(line: 5006, column: 24, scope: !18317)
!18319 = !DILocation(line: 5006, column: 29, scope: !18317)
!18320 = !DILocation(line: 5006, column: 6, scope: !18317)
!18321 = !DILocation(line: 5006, column: 6, scope: !18258)
!18322 = !DILocation(line: 5007, column: 22, scope: !18323)
!18323 = distinct !DILexicalBlock(scope: !18317, file: !3, line: 5006, column: 36)
!18324 = !DILocation(line: 5007, column: 25, scope: !18323)
!18325 = !DILocation(line: 5007, column: 3, scope: !18323)
!18326 = !DILocation(line: 5008, column: 2, scope: !18323)
!18327 = !DILocation(line: 5010, column: 15, scope: !18258)
!18328 = !DILocation(line: 5010, column: 20, scope: !18258)
!18329 = !DILocation(line: 5010, column: 2, scope: !18258)
!18330 = !DILocation(line: 5012, column: 6, scope: !18331)
!18331 = distinct !DILexicalBlock(scope: !18258, file: !3, line: 5012, column: 6)
!18332 = !DILocation(line: 5012, column: 9, scope: !18331)
!18333 = !DILocation(line: 5012, column: 13, scope: !18331)
!18334 = !DILocation(line: 5012, column: 6, scope: !18258)
!18335 = !DILocation(line: 5013, column: 3, scope: !18336)
!18336 = distinct !DILexicalBlock(scope: !18331, file: !3, line: 5012, column: 24)
!18337 = !DILocation(line: 5013, column: 6, scope: !18336)
!18338 = !DILocation(line: 5013, column: 10, scope: !18336)
!18339 = !DILocation(line: 5013, column: 20, scope: !18336)
!18340 = !DILocation(line: 5013, column: 29, scope: !18336)
!18341 = !DILocation(line: 5014, column: 2, scope: !18336)
!18342 = !DILocation(line: 5016, column: 13, scope: !18258)
!18343 = !DILocation(line: 5016, column: 16, scope: !18258)
!18344 = !DILocation(line: 5016, column: 21, scope: !18258)
!18345 = !DILocation(line: 5016, column: 2, scope: !18258)
!18346 = !DILocation(line: 5018, column: 17, scope: !18258)
!18347 = !DILocation(line: 5018, column: 20, scope: !18258)
!18348 = !DILocation(line: 5018, column: 26, scope: !18258)
!18349 = !DILocation(line: 5018, column: 2, scope: !18258)
!18350 = !DILocation(line: 5020, column: 9, scope: !18351)
!18351 = distinct !DILexicalBlock(scope: !18258, file: !3, line: 5020, column: 2)
!18352 = !DILocation(line: 5020, column: 7, scope: !18351)
!18353 = !DILocation(line: 5020, column: 14, scope: !18354)
!18354 = distinct !DILexicalBlock(scope: !18351, file: !3, line: 5020, column: 2)
!18355 = !DILocation(line: 5020, column: 18, scope: !18354)
!18356 = !DILocation(line: 5020, column: 21, scope: !18354)
!18357 = !DILocation(line: 5020, column: 16, scope: !18354)
!18358 = !DILocation(line: 5020, column: 2, scope: !18351)
!18359 = !DILocation(line: 5021, column: 7, scope: !18360)
!18360 = distinct !DILexicalBlock(scope: !18361, file: !3, line: 5021, column: 7)
!18361 = distinct !DILexicalBlock(scope: !18354, file: !3, line: 5020, column: 39)
!18362 = !DILocation(line: 5021, column: 11, scope: !18360)
!18363 = !DILocation(line: 5021, column: 16, scope: !18360)
!18364 = !DILocation(line: 5021, column: 7, scope: !18361)
!18365 = !DILocation(line: 5022, column: 4, scope: !18360)
!18366 = !DILocation(line: 5024, column: 7, scope: !18367)
!18367 = distinct !DILexicalBlock(scope: !18361, file: !3, line: 5024, column: 7)
!18368 = !DILocation(line: 5024, column: 11, scope: !18367)
!18369 = !DILocation(line: 5024, column: 16, scope: !18367)
!18370 = !DILocation(line: 5024, column: 7, scope: !18361)
!18371 = !DILocation(line: 5025, column: 4, scope: !18367)
!18372 = !DILocation(line: 5027, column: 19, scope: !18361)
!18373 = !DILocation(line: 5027, column: 22, scope: !18361)
!18374 = !DILocation(line: 5027, column: 26, scope: !18361)
!18375 = !DILocation(line: 5027, column: 3, scope: !18361)
!18376 = !DILocation(line: 5028, column: 2, scope: !18361)
!18377 = !DILocation(line: 5020, column: 29, scope: !18354)
!18378 = !DILocation(line: 5020, column: 35, scope: !18354)
!18379 = !DILocation(line: 5020, column: 2, scope: !18354)
!18380 = distinct !{!18380, !18358, !18381}
!18381 = !DILocation(line: 5028, column: 2, scope: !18351)
!18382 = !DILocation(line: 5030, column: 13, scope: !18258)
!18383 = !DILocation(line: 5030, column: 2, scope: !18258)
!18384 = !DILocation(line: 5032, column: 22, scope: !18258)
!18385 = !DILocation(line: 5032, column: 25, scope: !18258)
!18386 = !DILocation(line: 5032, column: 29, scope: !18258)
!18387 = !DILocation(line: 5032, column: 2, scope: !18258)
!18388 = !DILocation(line: 5033, column: 1, scope: !18258)
!18389 = distinct !DISubprogram(name: "headerBoneSize", scope: !3, file: !3, line: 4939, type: !13632, scopeLine: 4940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!18390 = !DILocalVariable(name: "t", arg: 1, scope: !18389, file: !3, line: 4939, type: !3841)
!18391 = !DILocation(line: 4939, column: 39, scope: !18389)
!18392 = !DILocalVariable(name: "vec", arg: 2, scope: !18389, file: !3, line: 4939, type: !1773)
!18393 = !DILocation(line: 4939, column: 48, scope: !18389)
!18394 = !DILocalVariable(name: "str", arg: 3, scope: !18389, file: !3, line: 4939, type: !2050)
!18395 = !DILocation(line: 4939, column: 61, scope: !18389)
!18396 = !DILocalVariable(name: "tvec", scope: !18389, file: !3, line: 4941, type: !13641)
!18397 = !DILocation(line: 4941, column: 7, scope: !18389)
!18398 = !DILocation(line: 4942, column: 19, scope: !18399)
!18399 = distinct !DILexicalBlock(scope: !18389, file: !3, line: 4942, column: 6)
!18400 = !DILocation(line: 4942, column: 22, scope: !18399)
!18401 = !DILocation(line: 4942, column: 6, scope: !18399)
!18402 = !DILocation(line: 4942, column: 6, scope: !18389)
!18403 = !DILocation(line: 4943, column: 20, scope: !18404)
!18404 = distinct !DILexicalBlock(scope: !18399, file: !3, line: 4942, column: 28)
!18405 = !DILocation(line: 4943, column: 23, scope: !18404)
!18406 = !DILocation(line: 4943, column: 29, scope: !18404)
!18407 = !DILocation(line: 4943, column: 36, scope: !18404)
!18408 = !DILocation(line: 4943, column: 39, scope: !18404)
!18409 = !DILocation(line: 4943, column: 46, scope: !18404)
!18410 = !DILocation(line: 4943, column: 3, scope: !18404)
!18411 = !DILocation(line: 4944, column: 2, scope: !18404)
!18412 = !DILocation(line: 4946, column: 17, scope: !18413)
!18413 = distinct !DILexicalBlock(scope: !18399, file: !3, line: 4945, column: 7)
!18414 = !DILocation(line: 4946, column: 51, scope: !18413)
!18415 = !DILocation(line: 4946, column: 3, scope: !18413)
!18416 = !DILocation(line: 4947, column: 17, scope: !18413)
!18417 = !DILocation(line: 4947, column: 65, scope: !18413)
!18418 = !DILocation(line: 4947, column: 3, scope: !18413)
!18419 = !DILocation(line: 4948, column: 17, scope: !18413)
!18420 = !DILocation(line: 4948, column: 69, scope: !18413)
!18421 = !DILocation(line: 4948, column: 3, scope: !18413)
!18422 = !DILocation(line: 4952, column: 6, scope: !18423)
!18423 = distinct !DILexicalBlock(scope: !18389, file: !3, line: 4952, column: 6)
!18424 = !DILocation(line: 4952, column: 9, scope: !18423)
!18425 = !DILocation(line: 4952, column: 13, scope: !18423)
!18426 = !DILocation(line: 4952, column: 18, scope: !18423)
!18427 = !DILocation(line: 4952, column: 6, scope: !18389)
!18428 = !DILocation(line: 4953, column: 7, scope: !18429)
!18429 = distinct !DILexicalBlock(scope: !18430, file: !3, line: 4953, column: 7)
!18430 = distinct !DILexicalBlock(scope: !18423, file: !3, line: 4952, column: 31)
!18431 = !DILocation(line: 4953, column: 10, scope: !18429)
!18432 = !DILocation(line: 4953, column: 14, scope: !18429)
!18433 = !DILocation(line: 4953, column: 22, scope: !18429)
!18434 = !DILocation(line: 4953, column: 7, scope: !18430)
!18435 = !DILocation(line: 4954, column: 17, scope: !18429)
!18436 = !DILocation(line: 4954, column: 64, scope: !18429)
!18437 = !DILocation(line: 4954, column: 73, scope: !18429)
!18438 = !DILocation(line: 4954, column: 76, scope: !18429)
!18439 = !DILocation(line: 4954, column: 80, scope: !18429)
!18440 = !DILocation(line: 4954, column: 86, scope: !18429)
!18441 = !DILocation(line: 4954, column: 89, scope: !18429)
!18442 = !DILocation(line: 4954, column: 4, scope: !18429)
!18443 = !DILocation(line: 4956, column: 17, scope: !18429)
!18444 = !DILocation(line: 4957, column: 18, scope: !18429)
!18445 = !DILocation(line: 4957, column: 28, scope: !18429)
!18446 = !DILocation(line: 4957, column: 52, scope: !18429)
!18447 = !DILocation(line: 4957, column: 79, scope: !18429)
!18448 = !DILocation(line: 4957, column: 82, scope: !18429)
!18449 = !DILocation(line: 4957, column: 86, scope: !18429)
!18450 = !DILocation(line: 4957, column: 92, scope: !18429)
!18451 = !DILocation(line: 4957, column: 95, scope: !18429)
!18452 = !DILocation(line: 4956, column: 4, scope: !18429)
!18453 = !DILocation(line: 4958, column: 2, scope: !18430)
!18454 = !DILocation(line: 4960, column: 16, scope: !18455)
!18455 = distinct !DILexicalBlock(scope: !18423, file: !3, line: 4959, column: 7)
!18456 = !DILocation(line: 4961, column: 17, scope: !18455)
!18457 = !DILocation(line: 4961, column: 27, scope: !18455)
!18458 = !DILocation(line: 4961, column: 51, scope: !18455)
!18459 = !DILocation(line: 4961, column: 78, scope: !18455)
!18460 = !DILocation(line: 4961, column: 81, scope: !18455)
!18461 = !DILocation(line: 4961, column: 85, scope: !18455)
!18462 = !DILocation(line: 4961, column: 91, scope: !18455)
!18463 = !DILocation(line: 4961, column: 94, scope: !18455)
!18464 = !DILocation(line: 4960, column: 3, scope: !18455)
!18465 = !DILocation(line: 4963, column: 1, scope: !18389)
!18466 = distinct !DISubprogram(name: "ElementBoneSize", scope: !3, file: !3, line: 4965, type: !13787, scopeLine: 4966, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!18467 = !DILocalVariable(name: "t", arg: 1, scope: !18466, file: !3, line: 4965, type: !3841)
!18468 = !DILocation(line: 4965, column: 40, scope: !18466)
!18469 = !DILocalVariable(name: "td", arg: 2, scope: !18466, file: !3, line: 4965, type: !3868)
!18470 = !DILocation(line: 4965, column: 54, scope: !18466)
!18471 = !DILocalVariable(name: "mat", arg: 3, scope: !18466, file: !3, line: 4965, type: !3830)
!18472 = !DILocation(line: 4965, column: 64, scope: !18466)
!18473 = !DILocalVariable(name: "tmat", scope: !18466, file: !3, line: 4967, type: !3881)
!18474 = !DILocation(line: 4967, column: 8, scope: !18466)
!18475 = !DILocalVariable(name: "smat", scope: !18466, file: !3, line: 4967, type: !3881)
!18476 = !DILocation(line: 4967, column: 20, scope: !18466)
!18477 = !DILocalVariable(name: "oldy", scope: !18466, file: !3, line: 4967, type: !1727)
!18478 = !DILocation(line: 4967, column: 32, scope: !18466)
!18479 = !DILocalVariable(name: "sizemat", scope: !18466, file: !3, line: 4968, type: !3881)
!18480 = !DILocation(line: 4968, column: 8, scope: !18466)
!18481 = !DILocation(line: 4970, column: 14, scope: !18466)
!18482 = !DILocation(line: 4970, column: 20, scope: !18466)
!18483 = !DILocation(line: 4970, column: 25, scope: !18466)
!18484 = !DILocation(line: 4970, column: 29, scope: !18466)
!18485 = !DILocation(line: 4970, column: 2, scope: !18466)
!18486 = !DILocation(line: 4971, column: 14, scope: !18466)
!18487 = !DILocation(line: 4971, column: 20, scope: !18466)
!18488 = !DILocation(line: 4971, column: 24, scope: !18466)
!18489 = !DILocation(line: 4971, column: 30, scope: !18466)
!18490 = !DILocation(line: 4971, column: 2, scope: !18466)
!18491 = !DILocation(line: 4973, column: 6, scope: !18492)
!18492 = distinct !DILexicalBlock(scope: !18466, file: !3, line: 4973, column: 6)
!18493 = !DILocation(line: 4973, column: 9, scope: !18492)
!18494 = !DILocation(line: 4973, column: 13, scope: !18492)
!18495 = !DILocation(line: 4973, column: 6, scope: !18466)
!18496 = !DILocation(line: 4974, column: 3, scope: !18497)
!18497 = distinct !DILexicalBlock(scope: !18492, file: !3, line: 4973, column: 24)
!18498 = !DILocation(line: 4974, column: 6, scope: !18497)
!18499 = !DILocation(line: 4974, column: 10, scope: !18497)
!18500 = !DILocation(line: 4974, column: 20, scope: !18497)
!18501 = !DILocation(line: 4974, column: 23, scope: !18497)
!18502 = !DILocation(line: 4974, column: 27, scope: !18497)
!18503 = !DILocation(line: 4975, column: 2, scope: !18497)
!18504 = !DILocation(line: 4978, column: 9, scope: !18466)
!18505 = !DILocation(line: 4978, column: 13, scope: !18466)
!18506 = !DILocation(line: 4978, column: 7, scope: !18466)
!18507 = !DILocation(line: 4979, column: 15, scope: !18466)
!18508 = !DILocation(line: 4979, column: 24, scope: !18466)
!18509 = !DILocation(line: 4979, column: 28, scope: !18466)
!18510 = !DILocation(line: 4979, column: 2, scope: !18466)
!18511 = !DILocation(line: 4980, column: 14, scope: !18466)
!18512 = !DILocation(line: 4980, column: 20, scope: !18466)
!18513 = !DILocation(line: 4980, column: 26, scope: !18466)
!18514 = !DILocation(line: 4980, column: 2, scope: !18466)
!18515 = !DILocation(line: 4981, column: 15, scope: !18466)
!18516 = !DILocation(line: 4981, column: 19, scope: !18466)
!18517 = !DILocation(line: 4981, column: 24, scope: !18466)
!18518 = !DILocation(line: 4981, column: 2, scope: !18466)
!18519 = !DILocation(line: 4982, column: 15, scope: !18466)
!18520 = !DILocation(line: 4982, column: 2, scope: !18466)
!18521 = !DILocation(line: 4982, column: 6, scope: !18466)
!18522 = !DILocation(line: 4982, column: 13, scope: !18466)
!18523 = !DILocation(line: 4983, column: 1, scope: !18466)
!18524 = distinct !DISubprogram(name: "applyBoneEnvelope", scope: !3, file: !3, line: 5063, type: !12679, scopeLine: 5064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!18525 = !DILocalVariable(name: "t", arg: 1, scope: !18524, file: !3, line: 5063, type: !3841)
!18526 = !DILocation(line: 5063, column: 42, scope: !18524)
!18527 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !18524, file: !3, line: 5063, type: !3857)
!18528 = !DILocation(line: 5063, column: 55, scope: !18524)
!18529 = !DILocalVariable(name: "td", scope: !18524, file: !3, line: 5065, type: !3868)
!18530 = !DILocation(line: 5065, column: 13, scope: !18524)
!18531 = !DILocation(line: 5065, column: 18, scope: !18524)
!18532 = !DILocation(line: 5065, column: 21, scope: !18524)
!18533 = !DILocalVariable(name: "ratio", scope: !18524, file: !3, line: 5066, type: !1727)
!18534 = !DILocation(line: 5066, column: 8, scope: !18524)
!18535 = !DILocalVariable(name: "i", scope: !18524, file: !3, line: 5067, type: !35)
!18536 = !DILocation(line: 5067, column: 6, scope: !18524)
!18537 = !DILocalVariable(name: "str", scope: !18524, file: !3, line: 5068, type: !2366)
!18538 = !DILocation(line: 5068, column: 7, scope: !18524)
!18539 = !DILocation(line: 5070, column: 10, scope: !18524)
!18540 = !DILocation(line: 5070, column: 13, scope: !18524)
!18541 = !DILocation(line: 5070, column: 8, scope: !18524)
!18542 = !DILocation(line: 5072, column: 20, scope: !18524)
!18543 = !DILocation(line: 5072, column: 2, scope: !18524)
!18544 = !DILocation(line: 5074, column: 17, scope: !18524)
!18545 = !DILocation(line: 5074, column: 20, scope: !18524)
!18546 = !DILocation(line: 5074, column: 2, scope: !18524)
!18547 = !DILocation(line: 5077, column: 19, scope: !18548)
!18548 = distinct !DILexicalBlock(scope: !18524, file: !3, line: 5077, column: 6)
!18549 = !DILocation(line: 5077, column: 22, scope: !18548)
!18550 = !DILocation(line: 5077, column: 6, scope: !18548)
!18551 = !DILocation(line: 5077, column: 6, scope: !18524)
!18552 = !DILocalVariable(name: "c", scope: !18553, file: !3, line: 5078, type: !22)
!18553 = distinct !DILexicalBlock(scope: !18548, file: !3, line: 5077, column: 28)
!18554 = !DILocation(line: 5078, column: 8, scope: !18553)
!18555 = !DILocation(line: 5080, column: 20, scope: !18553)
!18556 = !DILocation(line: 5080, column: 23, scope: !18553)
!18557 = !DILocation(line: 5080, column: 29, scope: !18553)
!18558 = !DILocation(line: 5080, column: 33, scope: !18553)
!18559 = !DILocation(line: 5080, column: 36, scope: !18553)
!18560 = !DILocation(line: 5080, column: 43, scope: !18553)
!18561 = !DILocation(line: 5080, column: 3, scope: !18553)
!18562 = !DILocation(line: 5081, column: 16, scope: !18553)
!18563 = !DILocation(line: 5081, column: 59, scope: !18553)
!18564 = !DILocation(line: 5081, column: 3, scope: !18553)
!18565 = !DILocation(line: 5082, column: 2, scope: !18553)
!18566 = !DILocation(line: 5084, column: 16, scope: !18567)
!18567 = distinct !DILexicalBlock(scope: !18548, file: !3, line: 5083, column: 7)
!18568 = !DILocation(line: 5084, column: 60, scope: !18567)
!18569 = !DILocation(line: 5084, column: 3, scope: !18567)
!18570 = !DILocation(line: 5087, column: 9, scope: !18571)
!18571 = distinct !DILexicalBlock(scope: !18524, file: !3, line: 5087, column: 2)
!18572 = !DILocation(line: 5087, column: 7, scope: !18571)
!18573 = !DILocation(line: 5087, column: 14, scope: !18574)
!18574 = distinct !DILexicalBlock(scope: !18571, file: !3, line: 5087, column: 2)
!18575 = !DILocation(line: 5087, column: 18, scope: !18574)
!18576 = !DILocation(line: 5087, column: 21, scope: !18574)
!18577 = !DILocation(line: 5087, column: 16, scope: !18574)
!18578 = !DILocation(line: 5087, column: 2, scope: !18571)
!18579 = !DILocation(line: 5088, column: 7, scope: !18580)
!18580 = distinct !DILexicalBlock(scope: !18581, file: !3, line: 5088, column: 7)
!18581 = distinct !DILexicalBlock(scope: !18574, file: !3, line: 5087, column: 39)
!18582 = !DILocation(line: 5088, column: 11, scope: !18580)
!18583 = !DILocation(line: 5088, column: 16, scope: !18580)
!18584 = !DILocation(line: 5088, column: 7, scope: !18581)
!18585 = !DILocation(line: 5089, column: 4, scope: !18580)
!18586 = !DILocation(line: 5091, column: 7, scope: !18587)
!18587 = distinct !DILexicalBlock(scope: !18581, file: !3, line: 5091, column: 7)
!18588 = !DILocation(line: 5091, column: 11, scope: !18587)
!18589 = !DILocation(line: 5091, column: 16, scope: !18587)
!18590 = !DILocation(line: 5091, column: 7, scope: !18581)
!18591 = !DILocation(line: 5092, column: 4, scope: !18587)
!18592 = !DILocation(line: 5094, column: 7, scope: !18593)
!18593 = distinct !DILexicalBlock(scope: !18581, file: !3, line: 5094, column: 7)
!18594 = !DILocation(line: 5094, column: 11, scope: !18593)
!18595 = !DILocation(line: 5094, column: 7, scope: !18581)
!18596 = !DILocation(line: 5096, column: 8, scope: !18597)
!18597 = distinct !DILexicalBlock(scope: !18598, file: !3, line: 5096, column: 8)
!18598 = distinct !DILexicalBlock(scope: !18593, file: !3, line: 5094, column: 16)
!18599 = !DILocation(line: 5096, column: 12, scope: !18597)
!18600 = !DILocation(line: 5096, column: 8, scope: !18598)
!18601 = !DILocation(line: 5097, column: 16, scope: !18597)
!18602 = !DILocation(line: 5097, column: 20, scope: !18597)
!18603 = !DILocation(line: 5097, column: 27, scope: !18597)
!18604 = !DILocation(line: 5097, column: 25, scope: !18597)
!18605 = !DILocation(line: 5097, column: 6, scope: !18597)
!18606 = !DILocation(line: 5097, column: 10, scope: !18597)
!18607 = !DILocation(line: 5097, column: 14, scope: !18597)
!18608 = !DILocation(line: 5097, column: 5, scope: !18597)
!18609 = !DILocation(line: 5099, column: 16, scope: !18597)
!18610 = !DILocation(line: 5099, column: 6, scope: !18597)
!18611 = !DILocation(line: 5099, column: 10, scope: !18597)
!18612 = !DILocation(line: 5099, column: 14, scope: !18597)
!18613 = !DILocation(line: 5100, column: 3, scope: !18598)
!18614 = !DILocation(line: 5101, column: 2, scope: !18581)
!18615 = !DILocation(line: 5087, column: 29, scope: !18574)
!18616 = !DILocation(line: 5087, column: 35, scope: !18574)
!18617 = !DILocation(line: 5087, column: 2, scope: !18574)
!18618 = distinct !{!18618, !18578, !18619}
!18619 = !DILocation(line: 5101, column: 2, scope: !18571)
!18620 = !DILocation(line: 5103, column: 13, scope: !18524)
!18621 = !DILocation(line: 5103, column: 2, scope: !18524)
!18622 = !DILocation(line: 5105, column: 22, scope: !18524)
!18623 = !DILocation(line: 5105, column: 25, scope: !18524)
!18624 = !DILocation(line: 5105, column: 29, scope: !18524)
!18625 = !DILocation(line: 5105, column: 2, scope: !18524)
!18626 = !DILocation(line: 5106, column: 1, scope: !18524)
!18627 = distinct !DISubprogram(name: "BM_iter_init", scope: !11575, file: !11575, line: 53, type: !18628, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!18628 = !DISubroutineType(types: !18629)
!18629 = !{!2769, !11578, !3737, !3435, !18}
!18630 = !DILocalVariable(name: "iter", arg: 1, scope: !18627, file: !11575, line: 53, type: !11578)
!18631 = !DILocation(line: 53, column: 38, scope: !18627)
!18632 = !DILocalVariable(name: "bm", arg: 2, scope: !18627, file: !11575, line: 53, type: !3737)
!18633 = !DILocation(line: 53, column: 51, scope: !18627)
!18634 = !DILocalVariable(name: "itype", arg: 3, scope: !18627, file: !11575, line: 53, type: !3435)
!18635 = !DILocation(line: 53, column: 66, scope: !18627)
!18636 = !DILocalVariable(name: "data", arg: 4, scope: !18627, file: !11575, line: 53, type: !18)
!18637 = !DILocation(line: 53, column: 79, scope: !18627)
!18638 = !DILocation(line: 56, column: 16, scope: !18627)
!18639 = !DILocation(line: 56, column: 2, scope: !18627)
!18640 = !DILocation(line: 56, column: 8, scope: !18627)
!18641 = !DILocation(line: 56, column: 14, scope: !18627)
!18642 = !DILocation(line: 59, column: 22, scope: !18627)
!18643 = !DILocation(line: 59, column: 10, scope: !18627)
!18644 = !DILocation(line: 59, column: 2, scope: !18627)
!18645 = !DILocation(line: 63, column: 4, scope: !18646)
!18646 = distinct !DILexicalBlock(scope: !18627, file: !11575, line: 59, column: 29)
!18647 = !DILocation(line: 63, column: 10, scope: !18646)
!18648 = !DILocation(line: 63, column: 16, scope: !18646)
!18649 = !DILocation(line: 64, column: 4, scope: !18646)
!18650 = !DILocation(line: 64, column: 10, scope: !18646)
!18651 = !DILocation(line: 64, column: 16, scope: !18646)
!18652 = !DILocation(line: 65, column: 44, scope: !18646)
!18653 = !DILocation(line: 65, column: 48, scope: !18646)
!18654 = !DILocation(line: 65, column: 4, scope: !18646)
!18655 = !DILocation(line: 65, column: 10, scope: !18646)
!18656 = !DILocation(line: 65, column: 15, scope: !18646)
!18657 = !DILocation(line: 65, column: 28, scope: !18646)
!18658 = !DILocation(line: 65, column: 37, scope: !18646)
!18659 = !DILocation(line: 65, column: 42, scope: !18646)
!18660 = !DILocation(line: 66, column: 4, scope: !18646)
!18661 = !DILocation(line: 70, column: 4, scope: !18646)
!18662 = !DILocation(line: 70, column: 10, scope: !18646)
!18663 = !DILocation(line: 70, column: 16, scope: !18646)
!18664 = !DILocation(line: 71, column: 4, scope: !18646)
!18665 = !DILocation(line: 71, column: 10, scope: !18646)
!18666 = !DILocation(line: 71, column: 16, scope: !18646)
!18667 = !DILocation(line: 72, column: 44, scope: !18646)
!18668 = !DILocation(line: 72, column: 48, scope: !18646)
!18669 = !DILocation(line: 72, column: 4, scope: !18646)
!18670 = !DILocation(line: 72, column: 10, scope: !18646)
!18671 = !DILocation(line: 72, column: 15, scope: !18646)
!18672 = !DILocation(line: 72, column: 28, scope: !18646)
!18673 = !DILocation(line: 72, column: 37, scope: !18646)
!18674 = !DILocation(line: 72, column: 42, scope: !18646)
!18675 = !DILocation(line: 73, column: 4, scope: !18646)
!18676 = !DILocation(line: 77, column: 4, scope: !18646)
!18677 = !DILocation(line: 77, column: 10, scope: !18646)
!18678 = !DILocation(line: 77, column: 16, scope: !18646)
!18679 = !DILocation(line: 78, column: 4, scope: !18646)
!18680 = !DILocation(line: 78, column: 10, scope: !18646)
!18681 = !DILocation(line: 78, column: 16, scope: !18646)
!18682 = !DILocation(line: 79, column: 44, scope: !18646)
!18683 = !DILocation(line: 79, column: 48, scope: !18646)
!18684 = !DILocation(line: 79, column: 4, scope: !18646)
!18685 = !DILocation(line: 79, column: 10, scope: !18646)
!18686 = !DILocation(line: 79, column: 15, scope: !18646)
!18687 = !DILocation(line: 79, column: 28, scope: !18646)
!18688 = !DILocation(line: 79, column: 37, scope: !18646)
!18689 = !DILocation(line: 79, column: 42, scope: !18646)
!18690 = !DILocation(line: 80, column: 4, scope: !18646)
!18691 = !DILocation(line: 84, column: 4, scope: !18646)
!18692 = !DILocation(line: 84, column: 10, scope: !18646)
!18693 = !DILocation(line: 84, column: 16, scope: !18646)
!18694 = !DILocation(line: 85, column: 4, scope: !18646)
!18695 = !DILocation(line: 85, column: 10, scope: !18646)
!18696 = !DILocation(line: 85, column: 16, scope: !18646)
!18697 = !DILocation(line: 86, column: 46, scope: !18646)
!18698 = !DILocation(line: 86, column: 36, scope: !18646)
!18699 = !DILocation(line: 86, column: 4, scope: !18646)
!18700 = !DILocation(line: 86, column: 10, scope: !18646)
!18701 = !DILocation(line: 86, column: 15, scope: !18646)
!18702 = !DILocation(line: 86, column: 28, scope: !18646)
!18703 = !DILocation(line: 86, column: 34, scope: !18646)
!18704 = !DILocation(line: 87, column: 4, scope: !18646)
!18705 = !DILocation(line: 91, column: 4, scope: !18646)
!18706 = !DILocation(line: 91, column: 10, scope: !18646)
!18707 = !DILocation(line: 91, column: 16, scope: !18646)
!18708 = !DILocation(line: 92, column: 4, scope: !18646)
!18709 = !DILocation(line: 92, column: 10, scope: !18646)
!18710 = !DILocation(line: 92, column: 16, scope: !18646)
!18711 = !DILocation(line: 93, column: 46, scope: !18646)
!18712 = !DILocation(line: 93, column: 36, scope: !18646)
!18713 = !DILocation(line: 93, column: 4, scope: !18646)
!18714 = !DILocation(line: 93, column: 10, scope: !18646)
!18715 = !DILocation(line: 93, column: 15, scope: !18646)
!18716 = !DILocation(line: 93, column: 28, scope: !18646)
!18717 = !DILocation(line: 93, column: 34, scope: !18646)
!18718 = !DILocation(line: 94, column: 4, scope: !18646)
!18719 = !DILocation(line: 98, column: 4, scope: !18646)
!18720 = !DILocation(line: 98, column: 10, scope: !18646)
!18721 = !DILocation(line: 98, column: 16, scope: !18646)
!18722 = !DILocation(line: 99, column: 4, scope: !18646)
!18723 = !DILocation(line: 99, column: 10, scope: !18646)
!18724 = !DILocation(line: 99, column: 16, scope: !18646)
!18725 = !DILocation(line: 100, column: 46, scope: !18646)
!18726 = !DILocation(line: 100, column: 36, scope: !18646)
!18727 = !DILocation(line: 100, column: 4, scope: !18646)
!18728 = !DILocation(line: 100, column: 10, scope: !18646)
!18729 = !DILocation(line: 100, column: 15, scope: !18646)
!18730 = !DILocation(line: 100, column: 28, scope: !18646)
!18731 = !DILocation(line: 100, column: 34, scope: !18646)
!18732 = !DILocation(line: 101, column: 4, scope: !18646)
!18733 = !DILocation(line: 105, column: 4, scope: !18646)
!18734 = !DILocation(line: 105, column: 10, scope: !18646)
!18735 = !DILocation(line: 105, column: 16, scope: !18646)
!18736 = !DILocation(line: 106, column: 4, scope: !18646)
!18737 = !DILocation(line: 106, column: 10, scope: !18646)
!18738 = !DILocation(line: 106, column: 16, scope: !18646)
!18739 = !DILocation(line: 107, column: 46, scope: !18646)
!18740 = !DILocation(line: 107, column: 36, scope: !18646)
!18741 = !DILocation(line: 107, column: 4, scope: !18646)
!18742 = !DILocation(line: 107, column: 10, scope: !18646)
!18743 = !DILocation(line: 107, column: 15, scope: !18646)
!18744 = !DILocation(line: 107, column: 28, scope: !18646)
!18745 = !DILocation(line: 107, column: 34, scope: !18646)
!18746 = !DILocation(line: 108, column: 4, scope: !18646)
!18747 = !DILocation(line: 112, column: 4, scope: !18646)
!18748 = !DILocation(line: 112, column: 10, scope: !18646)
!18749 = !DILocation(line: 112, column: 16, scope: !18646)
!18750 = !DILocation(line: 113, column: 4, scope: !18646)
!18751 = !DILocation(line: 113, column: 10, scope: !18646)
!18752 = !DILocation(line: 113, column: 16, scope: !18646)
!18753 = !DILocation(line: 114, column: 46, scope: !18646)
!18754 = !DILocation(line: 114, column: 36, scope: !18646)
!18755 = !DILocation(line: 114, column: 4, scope: !18646)
!18756 = !DILocation(line: 114, column: 10, scope: !18646)
!18757 = !DILocation(line: 114, column: 15, scope: !18646)
!18758 = !DILocation(line: 114, column: 28, scope: !18646)
!18759 = !DILocation(line: 114, column: 34, scope: !18646)
!18760 = !DILocation(line: 115, column: 4, scope: !18646)
!18761 = !DILocation(line: 119, column: 4, scope: !18646)
!18762 = !DILocation(line: 119, column: 10, scope: !18646)
!18763 = !DILocation(line: 119, column: 16, scope: !18646)
!18764 = !DILocation(line: 120, column: 4, scope: !18646)
!18765 = !DILocation(line: 120, column: 10, scope: !18646)
!18766 = !DILocation(line: 120, column: 16, scope: !18646)
!18767 = !DILocation(line: 121, column: 46, scope: !18646)
!18768 = !DILocation(line: 121, column: 36, scope: !18646)
!18769 = !DILocation(line: 121, column: 4, scope: !18646)
!18770 = !DILocation(line: 121, column: 10, scope: !18646)
!18771 = !DILocation(line: 121, column: 15, scope: !18646)
!18772 = !DILocation(line: 121, column: 28, scope: !18646)
!18773 = !DILocation(line: 121, column: 34, scope: !18646)
!18774 = !DILocation(line: 122, column: 4, scope: !18646)
!18775 = !DILocation(line: 126, column: 4, scope: !18646)
!18776 = !DILocation(line: 126, column: 10, scope: !18646)
!18777 = !DILocation(line: 126, column: 16, scope: !18646)
!18778 = !DILocation(line: 127, column: 4, scope: !18646)
!18779 = !DILocation(line: 127, column: 10, scope: !18646)
!18780 = !DILocation(line: 127, column: 16, scope: !18646)
!18781 = !DILocation(line: 128, column: 46, scope: !18646)
!18782 = !DILocation(line: 128, column: 36, scope: !18646)
!18783 = !DILocation(line: 128, column: 4, scope: !18646)
!18784 = !DILocation(line: 128, column: 10, scope: !18646)
!18785 = !DILocation(line: 128, column: 15, scope: !18646)
!18786 = !DILocation(line: 128, column: 28, scope: !18646)
!18787 = !DILocation(line: 128, column: 34, scope: !18646)
!18788 = !DILocation(line: 129, column: 4, scope: !18646)
!18789 = !DILocation(line: 133, column: 4, scope: !18646)
!18790 = !DILocation(line: 133, column: 10, scope: !18646)
!18791 = !DILocation(line: 133, column: 16, scope: !18646)
!18792 = !DILocation(line: 134, column: 4, scope: !18646)
!18793 = !DILocation(line: 134, column: 10, scope: !18646)
!18794 = !DILocation(line: 134, column: 16, scope: !18646)
!18795 = !DILocation(line: 135, column: 46, scope: !18646)
!18796 = !DILocation(line: 135, column: 36, scope: !18646)
!18797 = !DILocation(line: 135, column: 4, scope: !18646)
!18798 = !DILocation(line: 135, column: 10, scope: !18646)
!18799 = !DILocation(line: 135, column: 15, scope: !18646)
!18800 = !DILocation(line: 135, column: 28, scope: !18646)
!18801 = !DILocation(line: 135, column: 34, scope: !18646)
!18802 = !DILocation(line: 136, column: 4, scope: !18646)
!18803 = !DILocation(line: 140, column: 4, scope: !18646)
!18804 = !DILocation(line: 140, column: 10, scope: !18646)
!18805 = !DILocation(line: 140, column: 16, scope: !18646)
!18806 = !DILocation(line: 141, column: 4, scope: !18646)
!18807 = !DILocation(line: 141, column: 10, scope: !18646)
!18808 = !DILocation(line: 141, column: 16, scope: !18646)
!18809 = !DILocation(line: 142, column: 46, scope: !18646)
!18810 = !DILocation(line: 142, column: 36, scope: !18646)
!18811 = !DILocation(line: 142, column: 4, scope: !18646)
!18812 = !DILocation(line: 142, column: 10, scope: !18646)
!18813 = !DILocation(line: 142, column: 15, scope: !18646)
!18814 = !DILocation(line: 142, column: 28, scope: !18646)
!18815 = !DILocation(line: 142, column: 34, scope: !18646)
!18816 = !DILocation(line: 143, column: 4, scope: !18646)
!18817 = !DILocation(line: 147, column: 4, scope: !18646)
!18818 = !DILocation(line: 147, column: 10, scope: !18646)
!18819 = !DILocation(line: 147, column: 16, scope: !18646)
!18820 = !DILocation(line: 148, column: 4, scope: !18646)
!18821 = !DILocation(line: 148, column: 10, scope: !18646)
!18822 = !DILocation(line: 148, column: 16, scope: !18646)
!18823 = !DILocation(line: 149, column: 46, scope: !18646)
!18824 = !DILocation(line: 149, column: 36, scope: !18646)
!18825 = !DILocation(line: 149, column: 4, scope: !18646)
!18826 = !DILocation(line: 149, column: 10, scope: !18646)
!18827 = !DILocation(line: 149, column: 15, scope: !18646)
!18828 = !DILocation(line: 149, column: 28, scope: !18646)
!18829 = !DILocation(line: 149, column: 34, scope: !18646)
!18830 = !DILocation(line: 150, column: 4, scope: !18646)
!18831 = !DILocation(line: 154, column: 4, scope: !18646)
!18832 = !DILocation(line: 158, column: 2, scope: !18627)
!18833 = !DILocation(line: 158, column: 8, scope: !18627)
!18834 = !DILocation(line: 158, column: 14, scope: !18627)
!18835 = !DILocation(line: 160, column: 2, scope: !18627)
!18836 = !DILocation(line: 161, column: 1, scope: !18627)
!18837 = distinct !DISubprogram(name: "applyEdgeSlide", scope: !3, file: !3, line: 6235, type: !12679, scopeLine: 6236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!18838 = !DILocalVariable(name: "t", arg: 1, scope: !18837, file: !3, line: 6235, type: !3841)
!18839 = !DILocation(line: 6235, column: 39, scope: !18837)
!18840 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !18837, file: !3, line: 6235, type: !3857)
!18841 = !DILocation(line: 6235, column: 52, scope: !18837)
!18842 = !DILocalVariable(name: "str", scope: !18837, file: !3, line: 6237, type: !2366)
!18843 = !DILocation(line: 6237, column: 7, scope: !18837)
!18844 = !DILocalVariable(name: "final", scope: !18837, file: !3, line: 6238, type: !1727)
!18845 = !DILocation(line: 6238, column: 8, scope: !18837)
!18846 = !DILocalVariable(name: "sld", scope: !18837, file: !3, line: 6239, type: !3574)
!18847 = !DILocation(line: 6239, column: 17, scope: !18837)
!18848 = !DILocation(line: 6239, column: 24, scope: !18837)
!18849 = !DILocation(line: 6239, column: 27, scope: !18837)
!18850 = !DILocalVariable(name: "flipped", scope: !18837, file: !3, line: 6240, type: !2769)
!18851 = !DILocation(line: 6240, column: 7, scope: !18837)
!18852 = !DILocation(line: 6240, column: 17, scope: !18837)
!18853 = !DILocation(line: 6240, column: 22, scope: !18837)
!18854 = !DILocalVariable(name: "is_proportional", scope: !18837, file: !3, line: 6241, type: !2769)
!18855 = !DILocation(line: 6241, column: 7, scope: !18837)
!18856 = !DILocation(line: 6241, column: 25, scope: !18837)
!18857 = !DILocation(line: 6241, column: 30, scope: !18837)
!18858 = !DILocation(line: 6243, column: 10, scope: !18837)
!18859 = !DILocation(line: 6243, column: 13, scope: !18837)
!18860 = !DILocation(line: 6243, column: 8, scope: !18837)
!18861 = !DILocation(line: 6245, column: 20, scope: !18837)
!18862 = !DILocation(line: 6245, column: 2, scope: !18837)
!18863 = !DILocation(line: 6248, column: 2, scope: !18864)
!18864 = distinct !DILexicalBlock(scope: !18865, file: !3, line: 6248, column: 2)
!18865 = distinct !DILexicalBlock(scope: !18837, file: !3, line: 6248, column: 2)
!18866 = !DILocation(line: 6248, column: 2, scope: !18865)
!18867 = !DILocation(line: 6248, column: 2, scope: !18868)
!18868 = distinct !DILexicalBlock(scope: !18864, file: !3, line: 6248, column: 2)
!18869 = !DILocation(line: 6250, column: 17, scope: !18837)
!18870 = !DILocation(line: 6250, column: 20, scope: !18837)
!18871 = !DILocation(line: 6250, column: 2, scope: !18837)
!18872 = !DILocation(line: 6252, column: 19, scope: !18873)
!18873 = distinct !DILexicalBlock(scope: !18837, file: !3, line: 6252, column: 6)
!18874 = !DILocation(line: 6252, column: 22, scope: !18873)
!18875 = !DILocation(line: 6252, column: 6, scope: !18873)
!18876 = !DILocation(line: 6252, column: 6, scope: !18837)
!18877 = !DILocalVariable(name: "c", scope: !18878, file: !3, line: 6253, type: !22)
!18878 = distinct !DILexicalBlock(scope: !18873, file: !3, line: 6252, column: 28)
!18879 = !DILocation(line: 6253, column: 8, scope: !18878)
!18880 = !DILocation(line: 6255, column: 20, scope: !18878)
!18881 = !DILocation(line: 6255, column: 23, scope: !18878)
!18882 = !DILocation(line: 6255, column: 29, scope: !18878)
!18883 = !DILocation(line: 6255, column: 33, scope: !18878)
!18884 = !DILocation(line: 6255, column: 36, scope: !18878)
!18885 = !DILocation(line: 6255, column: 43, scope: !18878)
!18886 = !DILocation(line: 6255, column: 3, scope: !18878)
!18887 = !DILocation(line: 6257, column: 7, scope: !18888)
!18888 = distinct !DILexicalBlock(scope: !18878, file: !3, line: 6257, column: 7)
!18889 = !DILocation(line: 6257, column: 7, scope: !18878)
!18890 = !DILocation(line: 6258, column: 17, scope: !18891)
!18891 = distinct !DILexicalBlock(scope: !18888, file: !3, line: 6257, column: 24)
!18892 = !DILocation(line: 6259, column: 18, scope: !18891)
!18893 = !DILocation(line: 6259, column: 43, scope: !18891)
!18894 = !DILocation(line: 6259, column: 42, scope: !18891)
!18895 = !DILocation(line: 6259, column: 24, scope: !18891)
!18896 = !DILocation(line: 6258, column: 4, scope: !18891)
!18897 = !DILocation(line: 6260, column: 3, scope: !18891)
!18898 = !DILocation(line: 6262, column: 17, scope: !18899)
!18899 = distinct !DILexicalBlock(scope: !18888, file: !3, line: 6261, column: 8)
!18900 = !DILocation(line: 6263, column: 18, scope: !18899)
!18901 = !DILocation(line: 6263, column: 43, scope: !18899)
!18902 = !DILocation(line: 6263, column: 42, scope: !18899)
!18903 = !DILocation(line: 6263, column: 24, scope: !18899)
!18904 = !DILocation(line: 6263, column: 79, scope: !18899)
!18905 = !DILocation(line: 6263, column: 61, scope: !18899)
!18906 = !DILocation(line: 6262, column: 4, scope: !18899)
!18907 = !DILocation(line: 6265, column: 2, scope: !18878)
!18908 = !DILocation(line: 6266, column: 11, scope: !18909)
!18909 = distinct !DILexicalBlock(scope: !18873, file: !3, line: 6266, column: 11)
!18910 = !DILocation(line: 6266, column: 11, scope: !18873)
!18911 = !DILocation(line: 6267, column: 16, scope: !18912)
!18912 = distinct !DILexicalBlock(scope: !18909, file: !3, line: 6266, column: 28)
!18913 = !DILocation(line: 6268, column: 16, scope: !18912)
!18914 = !DILocation(line: 6268, column: 42, scope: !18912)
!18915 = !DILocation(line: 6268, column: 41, scope: !18912)
!18916 = !DILocation(line: 6268, column: 23, scope: !18912)
!18917 = !DILocation(line: 6267, column: 3, scope: !18912)
!18918 = !DILocation(line: 6269, column: 2, scope: !18912)
!18919 = !DILocation(line: 6271, column: 16, scope: !18920)
!18920 = distinct !DILexicalBlock(scope: !18909, file: !3, line: 6270, column: 7)
!18921 = !DILocation(line: 6272, column: 16, scope: !18920)
!18922 = !DILocation(line: 6272, column: 42, scope: !18920)
!18923 = !DILocation(line: 6272, column: 41, scope: !18920)
!18924 = !DILocation(line: 6272, column: 23, scope: !18920)
!18925 = !DILocation(line: 6272, column: 78, scope: !18920)
!18926 = !DILocation(line: 6272, column: 60, scope: !18920)
!18927 = !DILocation(line: 6271, column: 3, scope: !18920)
!18928 = !DILocation(line: 6275, column: 2, scope: !18929)
!18929 = distinct !DILexicalBlock(scope: !18930, file: !3, line: 6275, column: 2)
!18930 = distinct !DILexicalBlock(scope: !18837, file: !3, line: 6275, column: 2)
!18931 = !DILocation(line: 6275, column: 2, scope: !18930)
!18932 = !DILocation(line: 6275, column: 2, scope: !18933)
!18933 = distinct !DILexicalBlock(scope: !18929, file: !3, line: 6275, column: 2)
!18934 = !DILocation(line: 6277, column: 17, scope: !18837)
!18935 = !DILocation(line: 6277, column: 2, scope: !18837)
!18936 = !DILocation(line: 6277, column: 5, scope: !18837)
!18937 = !DILocation(line: 6277, column: 15, scope: !18837)
!18938 = !DILocation(line: 6280, column: 14, scope: !18837)
!18939 = !DILocation(line: 6280, column: 17, scope: !18837)
!18940 = !DILocation(line: 6280, column: 2, scope: !18837)
!18941 = !DILocation(line: 6282, column: 13, scope: !18837)
!18942 = !DILocation(line: 6282, column: 2, scope: !18837)
!18943 = !DILocation(line: 6284, column: 22, scope: !18837)
!18944 = !DILocation(line: 6284, column: 25, scope: !18837)
!18945 = !DILocation(line: 6284, column: 29, scope: !18837)
!18946 = !DILocation(line: 6284, column: 2, scope: !18837)
!18947 = !DILocation(line: 6285, column: 1, scope: !18837)
!18948 = distinct !DISubprogram(name: "handleEventEdgeSlide", scope: !3, file: !3, line: 6050, type: !3861, scopeLine: 6051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!18949 = !DILocalVariable(name: "t", arg: 1, scope: !18948, file: !3, line: 6050, type: !3856)
!18950 = !DILocation(line: 6050, column: 59, scope: !18948)
!18951 = !DILocalVariable(name: "event", arg: 2, scope: !18948, file: !3, line: 6050, type: !3864)
!18952 = !DILocation(line: 6050, column: 84, scope: !18948)
!18953 = !DILocation(line: 6052, column: 6, scope: !18954)
!18954 = distinct !DILexicalBlock(scope: !18948, file: !3, line: 6052, column: 6)
!18955 = !DILocation(line: 6052, column: 9, scope: !18954)
!18956 = !DILocation(line: 6052, column: 14, scope: !18954)
!18957 = !DILocation(line: 6052, column: 6, scope: !18948)
!18958 = !DILocalVariable(name: "sld", scope: !18959, file: !3, line: 6053, type: !3574)
!18959 = distinct !DILexicalBlock(scope: !18954, file: !3, line: 6052, column: 33)
!18960 = !DILocation(line: 6053, column: 18, scope: !18959)
!18961 = !DILocation(line: 6053, column: 24, scope: !18959)
!18962 = !DILocation(line: 6053, column: 27, scope: !18959)
!18963 = !DILocation(line: 6055, column: 7, scope: !18964)
!18964 = distinct !DILexicalBlock(scope: !18959, file: !3, line: 6055, column: 7)
!18965 = !DILocation(line: 6055, column: 7, scope: !18959)
!18966 = !DILocation(line: 6056, column: 12, scope: !18967)
!18967 = distinct !DILexicalBlock(scope: !18964, file: !3, line: 6055, column: 12)
!18968 = !DILocation(line: 6056, column: 19, scope: !18967)
!18969 = !DILocation(line: 6056, column: 4, scope: !18967)
!18970 = !DILocation(line: 6058, column: 10, scope: !18971)
!18971 = distinct !DILexicalBlock(scope: !18972, file: !3, line: 6058, column: 10)
!18972 = distinct !DILexicalBlock(scope: !18967, file: !3, line: 6056, column: 25)
!18973 = !DILocation(line: 6058, column: 17, scope: !18971)
!18974 = !DILocation(line: 6058, column: 21, scope: !18971)
!18975 = !DILocation(line: 6058, column: 10, scope: !18972)
!18976 = !DILocation(line: 6059, column: 31, scope: !18977)
!18977 = distinct !DILexicalBlock(scope: !18971, file: !3, line: 6058, column: 34)
!18978 = !DILocation(line: 6059, column: 36, scope: !18977)
!18979 = !DILocation(line: 6059, column: 30, scope: !18977)
!18980 = !DILocation(line: 6059, column: 7, scope: !18977)
!18981 = !DILocation(line: 6059, column: 12, scope: !18977)
!18982 = !DILocation(line: 6059, column: 28, scope: !18977)
!18983 = !DILocation(line: 6060, column: 7, scope: !18977)
!18984 = !DILocation(line: 6062, column: 6, scope: !18972)
!18985 = !DILocation(line: 6065, column: 10, scope: !18986)
!18986 = distinct !DILexicalBlock(scope: !18987, file: !3, line: 6065, column: 10)
!18987 = distinct !DILexicalBlock(scope: !18972, file: !3, line: 6064, column: 5)
!18988 = !DILocation(line: 6065, column: 17, scope: !18986)
!18989 = !DILocation(line: 6065, column: 21, scope: !18986)
!18990 = !DILocation(line: 6065, column: 10, scope: !18987)
!18991 = !DILocation(line: 6066, column: 11, scope: !18992)
!18992 = distinct !DILexicalBlock(scope: !18993, file: !3, line: 6066, column: 11)
!18993 = distinct !DILexicalBlock(scope: !18986, file: !3, line: 6065, column: 34)
!18994 = !DILocation(line: 6066, column: 16, scope: !18992)
!18995 = !DILocation(line: 6066, column: 32, scope: !18992)
!18996 = !DILocation(line: 6066, column: 11, scope: !18993)
!18997 = !DILocation(line: 6067, column: 28, scope: !18998)
!18998 = distinct !DILexicalBlock(scope: !18992, file: !3, line: 6066, column: 42)
!18999 = !DILocation(line: 6067, column: 33, scope: !18998)
!19000 = !DILocation(line: 6067, column: 27, scope: !18998)
!19001 = !DILocation(line: 6067, column: 8, scope: !18998)
!19002 = !DILocation(line: 6067, column: 13, scope: !18998)
!19003 = !DILocation(line: 6067, column: 25, scope: !18998)
!19004 = !DILocation(line: 6068, column: 7, scope: !18998)
!19005 = !DILocation(line: 6069, column: 7, scope: !18993)
!19006 = !DILocation(line: 6071, column: 6, scope: !18987)
!19007 = !DILocation(line: 6075, column: 14, scope: !19008)
!19008 = distinct !DILexicalBlock(scope: !18972, file: !3, line: 6074, column: 5)
!19009 = !DILocation(line: 6075, column: 21, scope: !19008)
!19010 = !DILocation(line: 6075, column: 6, scope: !19008)
!19011 = !DILocation(line: 6078, column: 31, scope: !19012)
!19012 = distinct !DILexicalBlock(scope: !19013, file: !3, line: 6077, column: 7)
!19013 = distinct !DILexicalBlock(scope: !19008, file: !3, line: 6075, column: 26)
!19014 = !DILocation(line: 6078, column: 36, scope: !19012)
!19015 = !DILocation(line: 6078, column: 50, scope: !19012)
!19016 = !DILocation(line: 6078, column: 57, scope: !19012)
!19017 = !DILocation(line: 6078, column: 62, scope: !19012)
!19018 = !DILocation(line: 6078, column: 55, scope: !19012)
!19019 = !DILocation(line: 6078, column: 71, scope: !19012)
!19020 = !DILocation(line: 6078, column: 76, scope: !19012)
!19021 = !DILocation(line: 6078, column: 69, scope: !19012)
!19022 = !DILocation(line: 6078, column: 8, scope: !19012)
!19023 = !DILocation(line: 6078, column: 13, scope: !19012)
!19024 = !DILocation(line: 6078, column: 27, scope: !19012)
!19025 = !DILocation(line: 6079, column: 8, scope: !19012)
!19026 = !DILocation(line: 6083, column: 30, scope: !19027)
!19027 = distinct !DILexicalBlock(scope: !19013, file: !3, line: 6082, column: 7)
!19028 = !DILocation(line: 6083, column: 35, scope: !19027)
!19029 = !DILocation(line: 6083, column: 49, scope: !19027)
!19030 = !DILocation(line: 6083, column: 56, scope: !19027)
!19031 = !DILocation(line: 6083, column: 61, scope: !19027)
!19032 = !DILocation(line: 6083, column: 54, scope: !19027)
!19033 = !DILocation(line: 6083, column: 8, scope: !19027)
!19034 = !DILocation(line: 6083, column: 13, scope: !19027)
!19035 = !DILocation(line: 6083, column: 27, scope: !19027)
!19036 = !DILocation(line: 6084, column: 8, scope: !19027)
!19037 = !DILocation(line: 6087, column: 6, scope: !19008)
!19038 = !DILocation(line: 6090, column: 6, scope: !18972)
!19039 = !DILocation(line: 6092, column: 3, scope: !18967)
!19040 = !DILocation(line: 6093, column: 2, scope: !18959)
!19041 = !DILocation(line: 6094, column: 2, scope: !18948)
!19042 = !DILocation(line: 6095, column: 1, scope: !18948)
!19043 = distinct !DISubprogram(name: "createEdgeSlideVerts", scope: !3, file: !3, line: 5339, type: !11766, scopeLine: 5340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!19044 = !DILocalVariable(name: "t", arg: 1, scope: !19043, file: !3, line: 5339, type: !3841)
!19045 = !DILocation(line: 5339, column: 45, scope: !19043)
!19046 = !DILocalVariable(name: "em", scope: !19043, file: !3, line: 5341, type: !11200)
!19047 = !DILocation(line: 5341, column: 14, scope: !19043)
!19048 = !DILocation(line: 5341, column: 44, scope: !19043)
!19049 = !DILocation(line: 5341, column: 47, scope: !19043)
!19050 = !DILocation(line: 5341, column: 19, scope: !19043)
!19051 = !DILocalVariable(name: "bm", scope: !19043, file: !3, line: 5342, type: !3737)
!19052 = !DILocation(line: 5342, column: 9, scope: !19043)
!19053 = !DILocation(line: 5342, column: 14, scope: !19043)
!19054 = !DILocation(line: 5342, column: 18, scope: !19043)
!19055 = !DILocalVariable(name: "iter", scope: !19043, file: !3, line: 5343, type: !11228)
!19056 = !DILocation(line: 5343, column: 9, scope: !19043)
!19057 = !DILocalVariable(name: "e", scope: !19043, file: !3, line: 5344, type: !3682)
!19058 = !DILocation(line: 5344, column: 10, scope: !19043)
!19059 = !DILocalVariable(name: "v", scope: !19043, file: !3, line: 5345, type: !3678)
!19060 = !DILocation(line: 5345, column: 10, scope: !19043)
!19061 = !DILocalVariable(name: "sv_array", scope: !19043, file: !3, line: 5346, type: !3579)
!19062 = !DILocation(line: 5346, column: 26, scope: !19043)
!19063 = !DILocalVariable(name: "sv_tot", scope: !19043, file: !3, line: 5347, type: !35)
!19064 = !DILocation(line: 5347, column: 6, scope: !19043)
!19065 = !DILocalVariable(name: "btree", scope: !19043, file: !3, line: 5348, type: !19066)
!19066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19067, size: 64)
!19067 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMBVHTree", file: !1695, line: 44, baseType: !19068)
!19068 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMBVHTree", file: !1695, line: 40, flags: DIFlagFwdDecl)
!19069 = !DILocation(line: 5348, column: 13, scope: !19043)
!19070 = !DILocalVariable(name: "sv_table", scope: !19043, file: !3, line: 5349, type: !4900)
!19071 = !DILocation(line: 5349, column: 7, scope: !19043)
!19072 = !DILocalVariable(name: "sld", scope: !19043, file: !3, line: 5350, type: !3574)
!19073 = !DILocation(line: 5350, column: 17, scope: !19043)
!19074 = !DILocation(line: 5350, column: 23, scope: !19043)
!19075 = !DILocalVariable(name: "v3d", scope: !19043, file: !3, line: 5351, type: !3482)
!19076 = !DILocation(line: 5351, column: 10, scope: !19043)
!19077 = !DILocalVariable(name: "rv3d", scope: !19043, file: !3, line: 5352, type: !4453)
!19078 = !DILocation(line: 5352, column: 16, scope: !19043)
!19079 = !DILocalVariable(name: "ar", scope: !19043, file: !3, line: 5353, type: !8833)
!19080 = !DILocation(line: 5353, column: 11, scope: !19043)
!19081 = !DILocation(line: 5353, column: 16, scope: !19043)
!19082 = !DILocation(line: 5353, column: 19, scope: !19043)
!19083 = !DILocalVariable(name: "projectMat", scope: !19043, file: !3, line: 5354, type: !2071)
!19084 = !DILocation(line: 5354, column: 8, scope: !19043)
!19085 = !DILocalVariable(name: "mval", scope: !19043, file: !3, line: 5355, type: !1754)
!19086 = !DILocation(line: 5355, column: 8, scope: !19043)
!19087 = !DILocation(line: 5355, column: 18, scope: !19043)
!19088 = !DILocation(line: 5355, column: 26, scope: !19043)
!19089 = !DILocation(line: 5355, column: 29, scope: !19043)
!19090 = !DILocation(line: 5355, column: 19, scope: !19043)
!19091 = !DILocation(line: 5355, column: 45, scope: !19043)
!19092 = !DILocation(line: 5355, column: 48, scope: !19043)
!19093 = !DILocation(line: 5355, column: 38, scope: !19043)
!19094 = !DILocalVariable(name: "mval_start", scope: !19043, file: !3, line: 5356, type: !1754)
!19095 = !DILocation(line: 5356, column: 8, scope: !19043)
!19096 = !DILocalVariable(name: "mval_end", scope: !19043, file: !3, line: 5356, type: !1754)
!19097 = !DILocation(line: 5356, column: 23, scope: !19043)
!19098 = !DILocalVariable(name: "mval_dir", scope: !19043, file: !3, line: 5357, type: !1987)
!19099 = !DILocation(line: 5357, column: 8, scope: !19043)
!19100 = !DILocalVariable(name: "maxdist", scope: !19043, file: !3, line: 5357, type: !1727)
!19101 = !DILocation(line: 5357, column: 21, scope: !19043)
!19102 = !DILocalVariable(name: "loop_dir", scope: !19043, file: !3, line: 5357, type: !3830)
!19103 = !DILocation(line: 5357, column: 32, scope: !19043)
!19104 = !DILocalVariable(name: "loop_maxdist", scope: !19043, file: !3, line: 5357, type: !1773)
!19105 = !DILocation(line: 5357, column: 47, scope: !19043)
!19106 = !DILocalVariable(name: "numsel", scope: !19043, file: !3, line: 5358, type: !35)
!19107 = !DILocation(line: 5358, column: 6, scope: !19043)
!19108 = !DILocalVariable(name: "i", scope: !19043, file: !3, line: 5358, type: !35)
!19109 = !DILocation(line: 5358, column: 14, scope: !19043)
!19110 = !DILocalVariable(name: "j", scope: !19043, file: !3, line: 5358, type: !35)
!19111 = !DILocation(line: 5358, column: 17, scope: !19043)
!19112 = !DILocalVariable(name: "loop_nr", scope: !19043, file: !3, line: 5358, type: !35)
!19113 = !DILocation(line: 5358, column: 20, scope: !19043)
!19114 = !DILocalVariable(name: "l_nr", scope: !19043, file: !3, line: 5358, type: !35)
!19115 = !DILocation(line: 5358, column: 29, scope: !19043)
!19116 = !DILocalVariable(name: "use_btree_disp", scope: !19043, file: !3, line: 5359, type: !35)
!19117 = !DILocation(line: 5359, column: 6, scope: !19043)
!19118 = !DILocation(line: 5361, column: 6, scope: !19119)
!19119 = distinct !DILexicalBlock(scope: !19043, file: !3, line: 5361, column: 6)
!19120 = !DILocation(line: 5361, column: 9, scope: !19119)
!19121 = !DILocation(line: 5361, column: 19, scope: !19119)
!19122 = !DILocation(line: 5361, column: 6, scope: !19043)
!19123 = !DILocation(line: 5363, column: 9, scope: !19124)
!19124 = distinct !DILexicalBlock(scope: !19119, file: !3, line: 5361, column: 36)
!19125 = !DILocation(line: 5363, column: 12, scope: !19124)
!19126 = !DILocation(line: 5363, column: 17, scope: !19124)
!19127 = !DILocation(line: 5363, column: 20, scope: !19124)
!19128 = !DILocation(line: 5363, column: 24, scope: !19124)
!19129 = !DILocation(line: 5363, column: 34, scope: !19124)
!19130 = !DILocation(line: 5363, column: 7, scope: !19124)
!19131 = !DILocation(line: 5364, column: 10, scope: !19124)
!19132 = !DILocation(line: 5364, column: 13, scope: !19124)
!19133 = !DILocation(line: 5364, column: 18, scope: !19124)
!19134 = !DILocation(line: 5364, column: 21, scope: !19124)
!19135 = !DILocation(line: 5364, column: 25, scope: !19124)
!19136 = !DILocation(line: 5364, column: 8, scope: !19124)
!19137 = !DILocation(line: 5365, column: 2, scope: !19124)
!19138 = !DILocation(line: 5367, column: 7, scope: !19139)
!19139 = distinct !DILexicalBlock(scope: !19043, file: !3, line: 5367, column: 6)
!19140 = !DILocation(line: 5367, column: 10, scope: !19139)
!19141 = !DILocation(line: 5367, column: 20, scope: !19139)
!19142 = !DILocation(line: 5367, column: 32, scope: !19139)
!19143 = !DILocation(line: 5367, column: 60, scope: !19139)
!19144 = !DILocation(line: 5370, column: 7, scope: !19139)
!19145 = !DILocation(line: 5370, column: 11, scope: !19139)
!19146 = !DILocation(line: 5370, column: 19, scope: !19139)
!19147 = !DILocation(line: 5367, column: 6, scope: !19043)
!19148 = !DILocation(line: 5372, column: 3, scope: !19149)
!19149 = distinct !DILexicalBlock(scope: !19139, file: !3, line: 5371, column: 2)
!19150 = !DILocation(line: 5372, column: 8, scope: !19149)
!19151 = !DILocation(line: 5372, column: 22, scope: !19149)
!19152 = !DILocation(line: 5373, column: 2, scope: !19149)
!19153 = !DILocation(line: 5375, column: 3, scope: !19154)
!19154 = distinct !DILexicalBlock(scope: !19139, file: !3, line: 5374, column: 7)
!19155 = !DILocation(line: 5375, column: 8, scope: !19154)
!19156 = !DILocation(line: 5375, column: 22, scope: !19154)
!19157 = !DILocation(line: 5378, column: 2, scope: !19043)
!19158 = !DILocation(line: 5378, column: 7, scope: !19043)
!19159 = !DILocation(line: 5378, column: 23, scope: !19043)
!19160 = !DILocation(line: 5379, column: 2, scope: !19043)
!19161 = !DILocation(line: 5379, column: 7, scope: !19043)
!19162 = !DILocation(line: 5379, column: 21, scope: !19043)
!19163 = !DILocation(line: 5380, column: 2, scope: !19043)
!19164 = !DILocation(line: 5380, column: 7, scope: !19043)
!19165 = !DILocation(line: 5380, column: 19, scope: !19043)
!19166 = !DILocation(line: 5382, column: 7, scope: !19167)
!19167 = distinct !DILexicalBlock(scope: !19043, file: !3, line: 5382, column: 6)
!19168 = !DILocation(line: 5382, column: 6, scope: !19043)
!19169 = !DILocation(line: 5384, column: 11, scope: !19170)
!19170 = distinct !DILexicalBlock(scope: !19167, file: !3, line: 5382, column: 13)
!19171 = !DILocation(line: 5384, column: 3, scope: !19170)
!19172 = !DILocation(line: 5385, column: 2, scope: !19170)
!19173 = !DILocation(line: 5387, column: 32, scope: !19174)
!19174 = distinct !DILexicalBlock(scope: !19167, file: !3, line: 5386, column: 7)
!19175 = !DILocation(line: 5387, column: 38, scope: !19174)
!19176 = !DILocation(line: 5387, column: 41, scope: !19174)
!19177 = !DILocation(line: 5387, column: 49, scope: !19174)
!19178 = !DILocation(line: 5387, column: 3, scope: !19174)
!19179 = !DILocation(line: 5391, column: 2, scope: !19180)
!19180 = distinct !DILexicalBlock(scope: !19043, file: !3, line: 5391, column: 2)
!19181 = !DILocation(line: 5391, column: 2, scope: !19182)
!19182 = distinct !DILexicalBlock(scope: !19180, file: !3, line: 5391, column: 2)
!19183 = !DILocation(line: 5392, column: 7, scope: !19184)
!19184 = distinct !DILexicalBlock(scope: !19185, file: !3, line: 5392, column: 7)
!19185 = distinct !DILexicalBlock(scope: !19182, file: !3, line: 5391, column: 48)
!19186 = !DILocation(line: 5392, column: 7, scope: !19185)
!19187 = !DILocalVariable(name: "iter2", scope: !19188, file: !3, line: 5393, type: !11228)
!19188 = distinct !DILexicalBlock(scope: !19184, file: !3, line: 5392, column: 45)
!19189 = !DILocation(line: 5393, column: 11, scope: !19188)
!19190 = !DILocation(line: 5394, column: 11, scope: !19188)
!19191 = !DILocation(line: 5395, column: 4, scope: !19192)
!19192 = distinct !DILexicalBlock(scope: !19188, file: !3, line: 5395, column: 4)
!19193 = !DILocation(line: 5395, column: 4, scope: !19194)
!19194 = distinct !DILexicalBlock(scope: !19192, file: !3, line: 5395, column: 4)
!19195 = !DILocation(line: 5396, column: 9, scope: !19196)
!19196 = distinct !DILexicalBlock(scope: !19197, file: !3, line: 5396, column: 9)
!19197 = distinct !DILexicalBlock(scope: !19194, file: !3, line: 5395, column: 50)
!19198 = !DILocation(line: 5396, column: 9, scope: !19197)
!19199 = !DILocation(line: 5399, column: 13, scope: !19200)
!19200 = distinct !DILexicalBlock(scope: !19196, file: !3, line: 5396, column: 47)
!19201 = !DILocation(line: 5399, column: 6, scope: !19200)
!19202 = !DILocation(line: 5399, column: 9, scope: !19200)
!19203 = !DILocation(line: 5399, column: 11, scope: !19200)
!19204 = !DILocation(line: 5401, column: 12, scope: !19200)
!19205 = !DILocation(line: 5402, column: 5, scope: !19200)
!19206 = !DILocation(line: 5403, column: 4, scope: !19197)
!19207 = distinct !{!19207, !19191, !19208}
!19208 = !DILocation(line: 5403, column: 4, scope: !19192)
!19209 = !DILocation(line: 5405, column: 8, scope: !19210)
!19210 = distinct !DILexicalBlock(scope: !19188, file: !3, line: 5405, column: 8)
!19211 = !DILocation(line: 5405, column: 15, scope: !19210)
!19212 = !DILocation(line: 5405, column: 20, scope: !19210)
!19213 = !DILocation(line: 5405, column: 23, scope: !19210)
!19214 = !DILocation(line: 5405, column: 30, scope: !19210)
!19215 = !DILocation(line: 5405, column: 8, scope: !19188)
!19216 = !DILocation(line: 5406, column: 5, scope: !19217)
!19217 = distinct !DILexicalBlock(scope: !19210, file: !3, line: 5405, column: 35)
!19218 = !DILocation(line: 5406, column: 15, scope: !19217)
!19219 = !DILocation(line: 5407, column: 5, scope: !19217)
!19220 = !DILocation(line: 5409, column: 3, scope: !19188)
!19221 = !DILocation(line: 5410, column: 2, scope: !19185)
!19222 = distinct !{!19222, !19179, !19223}
!19223 = !DILocation(line: 5410, column: 2, scope: !19180)
!19224 = !DILocation(line: 5412, column: 2, scope: !19225)
!19225 = distinct !DILexicalBlock(scope: !19043, file: !3, line: 5412, column: 2)
!19226 = !DILocation(line: 5412, column: 2, scope: !19227)
!19227 = distinct !DILexicalBlock(scope: !19225, file: !3, line: 5412, column: 2)
!19228 = !DILocation(line: 5413, column: 7, scope: !19229)
!19229 = distinct !DILexicalBlock(scope: !19230, file: !3, line: 5413, column: 7)
!19230 = distinct !DILexicalBlock(scope: !19227, file: !3, line: 5412, column: 48)
!19231 = !DILocation(line: 5413, column: 7, scope: !19230)
!19232 = !DILocation(line: 5415, column: 29, scope: !19233)
!19233 = distinct !DILexicalBlock(scope: !19234, file: !3, line: 5415, column: 8)
!19234 = distinct !DILexicalBlock(scope: !19229, file: !3, line: 5413, column: 45)
!19235 = !DILocation(line: 5415, column: 9, scope: !19233)
!19236 = !DILocation(line: 5415, column: 32, scope: !19233)
!19237 = !DILocation(line: 5415, column: 56, scope: !19233)
!19238 = !DILocation(line: 5415, column: 36, scope: !19233)
!19239 = !DILocation(line: 5415, column: 8, scope: !19234)
!19240 = !DILocation(line: 5417, column: 5, scope: !19241)
!19241 = distinct !DILexicalBlock(scope: !19233, file: !3, line: 5415, column: 60)
!19242 = !DILocation(line: 5417, column: 15, scope: !19241)
!19243 = !DILocation(line: 5418, column: 5, scope: !19241)
!19244 = !DILocation(line: 5420, column: 3, scope: !19234)
!19245 = !DILocation(line: 5421, column: 2, scope: !19230)
!19246 = distinct !{!19246, !19224, !19247}
!19247 = !DILocation(line: 5421, column: 2, scope: !19225)
!19248 = !DILocation(line: 5423, column: 13, scope: !19043)
!19249 = !DILocation(line: 5423, column: 45, scope: !19043)
!19250 = !DILocation(line: 5423, column: 49, scope: !19043)
!19251 = !DILocation(line: 5423, column: 43, scope: !19043)
!19252 = !DILocation(line: 5423, column: 11, scope: !19043)
!19253 = !DILocation(line: 5425, column: 4, scope: !19043)
!19254 = !DILocation(line: 5426, column: 2, scope: !19255)
!19255 = distinct !DILexicalBlock(scope: !19043, file: !3, line: 5426, column: 2)
!19256 = !DILocation(line: 5426, column: 2, scope: !19257)
!19257 = distinct !DILexicalBlock(scope: !19255, file: !3, line: 5426, column: 2)
!19258 = !DILocation(line: 5427, column: 7, scope: !19259)
!19259 = distinct !DILexicalBlock(scope: !19260, file: !3, line: 5427, column: 7)
!19260 = distinct !DILexicalBlock(scope: !19257, file: !3, line: 5426, column: 57)
!19261 = !DILocation(line: 5427, column: 7, scope: !19260)
!19262 = !DILocation(line: 5428, column: 4, scope: !19263)
!19263 = distinct !DILexicalBlock(scope: !19259, file: !3, line: 5427, column: 45)
!19264 = !DILocation(line: 5429, column: 18, scope: !19263)
!19265 = !DILocation(line: 5429, column: 4, scope: !19263)
!19266 = !DILocation(line: 5429, column: 13, scope: !19263)
!19267 = !DILocation(line: 5429, column: 16, scope: !19263)
!19268 = !DILocation(line: 5430, column: 6, scope: !19263)
!19269 = !DILocation(line: 5431, column: 3, scope: !19263)
!19270 = !DILocation(line: 5433, column: 4, scope: !19271)
!19271 = distinct !DILexicalBlock(scope: !19259, file: !3, line: 5432, column: 8)
!19272 = !DILocation(line: 5434, column: 4, scope: !19271)
!19273 = !DILocation(line: 5434, column: 13, scope: !19271)
!19274 = !DILocation(line: 5434, column: 16, scope: !19271)
!19275 = !DILocation(line: 5436, column: 3, scope: !19260)
!19276 = !DILocation(line: 5437, column: 2, scope: !19260)
!19277 = distinct !{!19277, !19254, !19278}
!19278 = !DILocation(line: 5437, column: 2, scope: !19255)
!19279 = !DILocation(line: 5438, column: 2, scope: !19043)
!19280 = !DILocation(line: 5438, column: 6, scope: !19043)
!19281 = !DILocation(line: 5438, column: 23, scope: !19043)
!19282 = !DILocation(line: 5440, column: 7, scope: !19283)
!19283 = distinct !DILexicalBlock(scope: !19043, file: !3, line: 5440, column: 6)
!19284 = !DILocation(line: 5440, column: 6, scope: !19043)
!19285 = !DILocation(line: 5441, column: 3, scope: !19286)
!19286 = distinct !DILexicalBlock(scope: !19283, file: !3, line: 5440, column: 10)
!19287 = !DILocation(line: 5441, column: 13, scope: !19286)
!19288 = !DILocation(line: 5442, column: 3, scope: !19286)
!19289 = !DILocation(line: 5442, column: 13, scope: !19286)
!19290 = !DILocation(line: 5443, column: 3, scope: !19286)
!19291 = !DILocation(line: 5446, column: 11, scope: !19043)
!19292 = !DILocation(line: 5446, column: 9, scope: !19043)
!19293 = !DILocation(line: 5447, column: 13, scope: !19043)
!19294 = !DILocation(line: 5447, column: 58, scope: !19043)
!19295 = !DILocation(line: 5447, column: 56, scope: !19043)
!19296 = !DILocation(line: 5447, column: 11, scope: !19043)
!19297 = !DILocation(line: 5448, column: 10, scope: !19043)
!19298 = !DILocation(line: 5450, column: 2, scope: !19043)
!19299 = !DILocalVariable(name: "vec_a", scope: !19300, file: !3, line: 5451, type: !1987)
!19300 = distinct !DILexicalBlock(scope: !19043, file: !3, line: 5450, column: 12)
!19301 = !DILocation(line: 5451, column: 9, scope: !19300)
!19302 = !DILocalVariable(name: "vec_b", scope: !19300, file: !3, line: 5451, type: !1987)
!19303 = !DILocation(line: 5451, column: 19, scope: !19300)
!19304 = !DILocalVariable(name: "l_a", scope: !19300, file: !3, line: 5452, type: !3625)
!19305 = !DILocation(line: 5452, column: 11, scope: !19300)
!19306 = !DILocalVariable(name: "l_b", scope: !19300, file: !3, line: 5452, type: !3625)
!19307 = !DILocation(line: 5452, column: 17, scope: !19300)
!19308 = !DILocalVariable(name: "l_a_prev", scope: !19300, file: !3, line: 5453, type: !3625)
!19309 = !DILocation(line: 5453, column: 11, scope: !19300)
!19310 = !DILocalVariable(name: "l_b_prev", scope: !19300, file: !3, line: 5453, type: !3625)
!19311 = !DILocation(line: 5453, column: 22, scope: !19300)
!19312 = !DILocalVariable(name: "v_first", scope: !19300, file: !3, line: 5454, type: !3678)
!19313 = !DILocation(line: 5454, column: 11, scope: !19300)
!19314 = !DILocation(line: 5465, column: 5, scope: !19300)
!19315 = !DILocation(line: 5466, column: 3, scope: !19316)
!19316 = distinct !DILexicalBlock(scope: !19300, file: !3, line: 5466, column: 3)
!19317 = !DILocation(line: 5466, column: 3, scope: !19318)
!19318 = distinct !DILexicalBlock(scope: !19316, file: !3, line: 5466, column: 3)
!19319 = !DILocation(line: 5467, column: 8, scope: !19320)
!19320 = distinct !DILexicalBlock(scope: !19321, file: !3, line: 5467, column: 8)
!19321 = distinct !DILexicalBlock(scope: !19318, file: !3, line: 5466, column: 49)
!19322 = !DILocation(line: 5467, column: 8, scope: !19321)
!19323 = !DILocation(line: 5468, column: 5, scope: !19320)
!19324 = !DILocation(line: 5470, column: 3, scope: !19321)
!19325 = distinct !{!19325, !19315, !19326}
!19326 = !DILocation(line: 5470, column: 3, scope: !19316)
!19327 = !DILocation(line: 5472, column: 8, scope: !19328)
!19328 = distinct !DILexicalBlock(scope: !19300, file: !3, line: 5472, column: 7)
!19329 = !DILocation(line: 5472, column: 7, scope: !19300)
!19330 = !DILocation(line: 5473, column: 4, scope: !19328)
!19331 = !DILocation(line: 5475, column: 8, scope: !19332)
!19332 = distinct !DILexicalBlock(scope: !19300, file: !3, line: 5475, column: 7)
!19333 = !DILocation(line: 5475, column: 11, scope: !19332)
!19334 = !DILocation(line: 5475, column: 7, scope: !19300)
!19335 = !DILocation(line: 5476, column: 4, scope: !19332)
!19336 = distinct !{!19336, !19298, !19337}
!19337 = !DILocation(line: 5672, column: 2, scope: !19043)
!19338 = !DILocation(line: 5478, column: 13, scope: !19300)
!19339 = !DILocation(line: 5478, column: 11, scope: !19300)
!19340 = !DILocation(line: 5481, column: 7, scope: !19300)
!19341 = !DILocation(line: 5481, column: 10, scope: !19300)
!19342 = !DILocation(line: 5481, column: 5, scope: !19300)
!19343 = !DILocation(line: 5484, column: 3, scope: !19300)
!19344 = !DILocation(line: 5485, column: 23, scope: !19345)
!19345 = distinct !DILexicalBlock(scope: !19300, file: !3, line: 5484, column: 6)
!19346 = !DILocation(line: 5485, column: 26, scope: !19345)
!19347 = !DILocation(line: 5485, column: 8, scope: !19345)
!19348 = !DILocation(line: 5485, column: 6, scope: !19345)
!19349 = !DILocation(line: 5486, column: 9, scope: !19350)
!19350 = distinct !DILexicalBlock(scope: !19345, file: !3, line: 5486, column: 8)
!19351 = !DILocation(line: 5486, column: 8, scope: !19345)
!19352 = !DILocation(line: 5487, column: 9, scope: !19353)
!19353 = distinct !DILexicalBlock(scope: !19350, file: !3, line: 5486, column: 12)
!19354 = !DILocation(line: 5487, column: 12, scope: !19353)
!19355 = !DILocation(line: 5487, column: 7, scope: !19353)
!19356 = !DILocation(line: 5488, column: 5, scope: !19353)
!19357 = !DILocation(line: 5491, column: 9, scope: !19358)
!19358 = distinct !DILexicalBlock(scope: !19345, file: !3, line: 5491, column: 8)
!19359 = !DILocation(line: 5491, column: 8, scope: !19345)
!19360 = !DILocation(line: 5492, column: 5, scope: !19358)
!19361 = !DILocation(line: 5494, column: 27, scope: !19345)
!19362 = !DILocation(line: 5494, column: 30, scope: !19345)
!19363 = !DILocation(line: 5494, column: 8, scope: !19345)
!19364 = !DILocation(line: 5494, column: 6, scope: !19345)
!19365 = !DILocation(line: 5495, column: 3, scope: !19345)
!19366 = !DILocation(line: 5495, column: 12, scope: !19300)
!19367 = !DILocation(line: 5495, column: 17, scope: !19300)
!19368 = !DILocation(line: 5495, column: 26, scope: !19300)
!19369 = !DILocation(line: 5495, column: 14, scope: !19300)
!19370 = distinct !{!19370, !19343, !19371}
!19371 = !DILocation(line: 5495, column: 27, scope: !19300)
!19372 = !DILocation(line: 5497, column: 3, scope: !19300)
!19373 = !DILocation(line: 5499, column: 9, scope: !19300)
!19374 = !DILocation(line: 5499, column: 12, scope: !19300)
!19375 = !DILocation(line: 5499, column: 7, scope: !19300)
!19376 = !DILocation(line: 5500, column: 9, scope: !19300)
!19377 = !DILocation(line: 5500, column: 12, scope: !19300)
!19378 = !DILocation(line: 5500, column: 15, scope: !19300)
!19379 = !DILocation(line: 5500, column: 7, scope: !19300)
!19380 = !DILocalVariable(name: "e_next", scope: !19381, file: !3, line: 5504, type: !3682)
!19381 = distinct !DILexicalBlock(scope: !19300, file: !3, line: 5503, column: 3)
!19382 = !DILocation(line: 5504, column: 12, scope: !19381)
!19383 = !DILocation(line: 5504, column: 36, scope: !19381)
!19384 = !DILocation(line: 5504, column: 39, scope: !19381)
!19385 = !DILocation(line: 5504, column: 21, scope: !19381)
!19386 = !DILocation(line: 5505, column: 8, scope: !19387)
!19387 = distinct !DILexicalBlock(scope: !19381, file: !3, line: 5505, column: 8)
!19388 = !DILocation(line: 5505, column: 8, scope: !19381)
!19389 = !DILocation(line: 5506, column: 19, scope: !19390)
!19390 = distinct !DILexicalBlock(scope: !19387, file: !3, line: 5505, column: 16)
!19391 = !DILocation(line: 5506, column: 22, scope: !19390)
!19392 = !DILocation(line: 5506, column: 27, scope: !19390)
!19393 = !DILocation(line: 5506, column: 30, scope: !19390)
!19394 = !DILocation(line: 5506, column: 38, scope: !19390)
!19395 = !DILocation(line: 5506, column: 5, scope: !19390)
!19396 = !DILocation(line: 5507, column: 4, scope: !19390)
!19397 = !DILocalVariable(name: "l_tmp", scope: !19398, file: !3, line: 5509, type: !3625)
!19398 = distinct !DILexicalBlock(scope: !19387, file: !3, line: 5508, column: 9)
!19399 = !DILocation(line: 5509, column: 13, scope: !19398)
!19400 = !DILocation(line: 5509, column: 45, scope: !19398)
!19401 = !DILocation(line: 5509, column: 50, scope: !19398)
!19402 = !DILocation(line: 5509, column: 21, scope: !19398)
!19403 = !DILocation(line: 5510, column: 9, scope: !19404)
!19404 = distinct !DILexicalBlock(scope: !19398, file: !3, line: 5510, column: 9)
!19405 = !DILocation(line: 5510, column: 9, scope: !19398)
!19406 = !DILocation(line: 5511, column: 20, scope: !19407)
!19407 = distinct !DILexicalBlock(scope: !19404, file: !3, line: 5510, column: 47)
!19408 = !DILocation(line: 5511, column: 23, scope: !19407)
!19409 = !DILocation(line: 5511, column: 28, scope: !19407)
!19410 = !DILocation(line: 5511, column: 31, scope: !19407)
!19411 = !DILocation(line: 5511, column: 38, scope: !19407)
!19412 = !DILocation(line: 5511, column: 41, scope: !19407)
!19413 = !DILocation(line: 5511, column: 6, scope: !19407)
!19414 = !DILocation(line: 5512, column: 5, scope: !19407)
!19415 = !DILocation(line: 5514, column: 18, scope: !19416)
!19416 = distinct !DILexicalBlock(scope: !19404, file: !3, line: 5513, column: 10)
!19417 = !DILocation(line: 5514, column: 44, scope: !19416)
!19418 = !DILocation(line: 5514, column: 51, scope: !19416)
!19419 = !DILocation(line: 5514, column: 54, scope: !19416)
!19420 = !DILocation(line: 5514, column: 25, scope: !19416)
!19421 = !DILocation(line: 5514, column: 58, scope: !19416)
!19422 = !DILocation(line: 5514, column: 62, scope: !19416)
!19423 = !DILocation(line: 5514, column: 65, scope: !19416)
!19424 = !DILocation(line: 5514, column: 6, scope: !19416)
!19425 = !DILocation(line: 5520, column: 7, scope: !19426)
!19426 = distinct !DILexicalBlock(scope: !19300, file: !3, line: 5520, column: 7)
!19427 = !DILocation(line: 5520, column: 14, scope: !19426)
!19428 = !DILocation(line: 5520, column: 11, scope: !19426)
!19429 = !DILocation(line: 5520, column: 7, scope: !19300)
!19430 = !DILocalVariable(name: "e_next", scope: !19431, file: !3, line: 5521, type: !3682)
!19431 = distinct !DILexicalBlock(scope: !19426, file: !3, line: 5520, column: 19)
!19432 = !DILocation(line: 5521, column: 12, scope: !19431)
!19433 = !DILocation(line: 5521, column: 36, scope: !19431)
!19434 = !DILocation(line: 5521, column: 39, scope: !19431)
!19435 = !DILocation(line: 5521, column: 21, scope: !19431)
!19436 = !DILocation(line: 5522, column: 8, scope: !19437)
!19437 = distinct !DILexicalBlock(scope: !19431, file: !3, line: 5522, column: 8)
!19438 = !DILocation(line: 5522, column: 8, scope: !19431)
!19439 = !DILocation(line: 5523, column: 19, scope: !19440)
!19440 = distinct !DILexicalBlock(scope: !19437, file: !3, line: 5522, column: 16)
!19441 = !DILocation(line: 5523, column: 22, scope: !19440)
!19442 = !DILocation(line: 5523, column: 27, scope: !19440)
!19443 = !DILocation(line: 5523, column: 30, scope: !19440)
!19444 = !DILocation(line: 5523, column: 38, scope: !19440)
!19445 = !DILocation(line: 5523, column: 5, scope: !19440)
!19446 = !DILocation(line: 5524, column: 4, scope: !19440)
!19447 = !DILocalVariable(name: "l_tmp", scope: !19448, file: !3, line: 5526, type: !3625)
!19448 = distinct !DILexicalBlock(scope: !19437, file: !3, line: 5525, column: 9)
!19449 = !DILocation(line: 5526, column: 13, scope: !19448)
!19450 = !DILocation(line: 5526, column: 45, scope: !19448)
!19451 = !DILocation(line: 5526, column: 50, scope: !19448)
!19452 = !DILocation(line: 5526, column: 21, scope: !19448)
!19453 = !DILocation(line: 5527, column: 9, scope: !19454)
!19454 = distinct !DILexicalBlock(scope: !19448, file: !3, line: 5527, column: 9)
!19455 = !DILocation(line: 5527, column: 9, scope: !19448)
!19456 = !DILocation(line: 5528, column: 20, scope: !19457)
!19457 = distinct !DILexicalBlock(scope: !19454, file: !3, line: 5527, column: 47)
!19458 = !DILocation(line: 5528, column: 23, scope: !19457)
!19459 = !DILocation(line: 5528, column: 28, scope: !19457)
!19460 = !DILocation(line: 5528, column: 31, scope: !19457)
!19461 = !DILocation(line: 5528, column: 38, scope: !19457)
!19462 = !DILocation(line: 5528, column: 41, scope: !19457)
!19463 = !DILocation(line: 5528, column: 6, scope: !19457)
!19464 = !DILocation(line: 5529, column: 5, scope: !19457)
!19465 = !DILocation(line: 5531, column: 18, scope: !19466)
!19466 = distinct !DILexicalBlock(scope: !19454, file: !3, line: 5530, column: 10)
!19467 = !DILocation(line: 5531, column: 44, scope: !19466)
!19468 = !DILocation(line: 5531, column: 51, scope: !19466)
!19469 = !DILocation(line: 5531, column: 54, scope: !19466)
!19470 = !DILocation(line: 5531, column: 25, scope: !19466)
!19471 = !DILocation(line: 5531, column: 58, scope: !19466)
!19472 = !DILocation(line: 5531, column: 62, scope: !19466)
!19473 = !DILocation(line: 5531, column: 65, scope: !19466)
!19474 = !DILocation(line: 5531, column: 6, scope: !19466)
!19475 = !DILocation(line: 5534, column: 3, scope: !19431)
!19476 = !DILocation(line: 5536, column: 8, scope: !19477)
!19477 = distinct !DILexicalBlock(scope: !19426, file: !3, line: 5535, column: 8)
!19478 = !DILocation(line: 5539, column: 12, scope: !19300)
!19479 = !DILocation(line: 5540, column: 12, scope: !19300)
!19480 = !DILocation(line: 5543, column: 13, scope: !19300)
!19481 = !DILocation(line: 5543, column: 11, scope: !19300)
!19482 = !DILocation(line: 5544, column: 3, scope: !19300)
!19483 = !DILocalVariable(name: "l_a_ok_prev", scope: !19484, file: !3, line: 5545, type: !2769)
!19484 = distinct !DILexicalBlock(scope: !19300, file: !3, line: 5544, column: 6)
!19485 = !DILocation(line: 5545, column: 9, scope: !19484)
!19486 = !DILocalVariable(name: "l_b_ok_prev", scope: !19484, file: !3, line: 5546, type: !2769)
!19487 = !DILocation(line: 5546, column: 9, scope: !19484)
!19488 = !DILocalVariable(name: "sv", scope: !19484, file: !3, line: 5547, type: !3579)
!19489 = !DILocation(line: 5547, column: 28, scope: !19484)
!19490 = !DILocalVariable(name: "v_prev", scope: !19484, file: !3, line: 5548, type: !3678)
!19491 = !DILocation(line: 5548, column: 12, scope: !19484)
!19492 = !DILocalVariable(name: "e_prev", scope: !19484, file: !3, line: 5549, type: !3682)
!19493 = !DILocation(line: 5549, column: 12, scope: !19484)
!19494 = !DILocation(line: 5554, column: 10, scope: !19484)
!19495 = !DILocation(line: 5554, column: 19, scope: !19484)
!19496 = !DILocation(line: 5554, column: 28, scope: !19484)
!19497 = !DILocation(line: 5554, column: 7, scope: !19484)
!19498 = !DILocation(line: 5555, column: 12, scope: !19484)
!19499 = !DILocation(line: 5555, column: 4, scope: !19484)
!19500 = !DILocation(line: 5555, column: 8, scope: !19484)
!19501 = !DILocation(line: 5555, column: 10, scope: !19484)
!19502 = !DILocation(line: 5556, column: 15, scope: !19484)
!19503 = !DILocation(line: 5556, column: 19, scope: !19484)
!19504 = !DILocation(line: 5556, column: 30, scope: !19484)
!19505 = !DILocation(line: 5556, column: 33, scope: !19484)
!19506 = !DILocation(line: 5556, column: 4, scope: !19484)
!19507 = !DILocation(line: 5557, column: 18, scope: !19484)
!19508 = !DILocation(line: 5557, column: 4, scope: !19484)
!19509 = !DILocation(line: 5557, column: 8, scope: !19484)
!19510 = !DILocation(line: 5557, column: 16, scope: !19484)
!19511 = !DILocation(line: 5559, column: 8, scope: !19512)
!19512 = distinct !DILexicalBlock(scope: !19484, file: !3, line: 5559, column: 8)
!19513 = !DILocation(line: 5559, column: 12, scope: !19512)
!19514 = !DILocation(line: 5559, column: 15, scope: !19512)
!19515 = !DILocation(line: 5559, column: 8, scope: !19484)
!19516 = !DILocalVariable(name: "l_tmp", scope: !19517, file: !3, line: 5560, type: !3625)
!19517 = distinct !DILexicalBlock(scope: !19512, file: !3, line: 5559, column: 25)
!19518 = !DILocation(line: 5560, column: 13, scope: !19517)
!19519 = !DILocation(line: 5560, column: 45, scope: !19517)
!19520 = !DILocation(line: 5560, column: 51, scope: !19517)
!19521 = !DILocation(line: 5560, column: 57, scope: !19517)
!19522 = !DILocation(line: 5560, column: 67, scope: !19517)
!19523 = !DILocation(line: 5560, column: 21, scope: !19517)
!19524 = !DILocation(line: 5561, column: 34, scope: !19517)
!19525 = !DILocation(line: 5561, column: 41, scope: !19517)
!19526 = !DILocation(line: 5561, column: 44, scope: !19517)
!19527 = !DILocation(line: 5561, column: 15, scope: !19517)
!19528 = !DILocation(line: 5561, column: 5, scope: !19517)
!19529 = !DILocation(line: 5561, column: 9, scope: !19517)
!19530 = !DILocation(line: 5561, column: 13, scope: !19517)
!19531 = !DILocation(line: 5562, column: 16, scope: !19517)
!19532 = !DILocation(line: 5562, column: 20, scope: !19517)
!19533 = !DILocation(line: 5562, column: 27, scope: !19517)
!19534 = !DILocation(line: 5562, column: 5, scope: !19517)
!19535 = !DILocation(line: 5563, column: 4, scope: !19517)
!19536 = !DILocation(line: 5565, column: 8, scope: !19537)
!19537 = distinct !DILexicalBlock(scope: !19484, file: !3, line: 5565, column: 8)
!19538 = !DILocation(line: 5565, column: 12, scope: !19537)
!19539 = !DILocation(line: 5565, column: 15, scope: !19537)
!19540 = !DILocation(line: 5565, column: 8, scope: !19484)
!19541 = !DILocalVariable(name: "l_tmp", scope: !19542, file: !3, line: 5566, type: !3625)
!19542 = distinct !DILexicalBlock(scope: !19537, file: !3, line: 5565, column: 25)
!19543 = !DILocation(line: 5566, column: 13, scope: !19542)
!19544 = !DILocation(line: 5566, column: 45, scope: !19542)
!19545 = !DILocation(line: 5566, column: 51, scope: !19542)
!19546 = !DILocation(line: 5566, column: 57, scope: !19542)
!19547 = !DILocation(line: 5566, column: 67, scope: !19542)
!19548 = !DILocation(line: 5566, column: 21, scope: !19542)
!19549 = !DILocation(line: 5567, column: 34, scope: !19542)
!19550 = !DILocation(line: 5567, column: 41, scope: !19542)
!19551 = !DILocation(line: 5567, column: 44, scope: !19542)
!19552 = !DILocation(line: 5567, column: 15, scope: !19542)
!19553 = !DILocation(line: 5567, column: 5, scope: !19542)
!19554 = !DILocation(line: 5567, column: 9, scope: !19542)
!19555 = !DILocation(line: 5567, column: 13, scope: !19542)
!19556 = !DILocation(line: 5568, column: 16, scope: !19542)
!19557 = !DILocation(line: 5568, column: 20, scope: !19542)
!19558 = !DILocation(line: 5568, column: 27, scope: !19542)
!19559 = !DILocation(line: 5568, column: 5, scope: !19542)
!19560 = !DILocation(line: 5569, column: 4, scope: !19542)
!19561 = !DILocation(line: 5571, column: 13, scope: !19484)
!19562 = !DILocation(line: 5571, column: 11, scope: !19484)
!19563 = !DILocation(line: 5572, column: 27, scope: !19484)
!19564 = !DILocation(line: 5572, column: 30, scope: !19484)
!19565 = !DILocation(line: 5572, column: 8, scope: !19484)
!19566 = !DILocation(line: 5572, column: 6, scope: !19484)
!19567 = !DILocation(line: 5574, column: 13, scope: !19484)
!19568 = !DILocation(line: 5574, column: 11, scope: !19484)
!19569 = !DILocation(line: 5575, column: 23, scope: !19484)
!19570 = !DILocation(line: 5575, column: 26, scope: !19484)
!19571 = !DILocation(line: 5575, column: 8, scope: !19484)
!19572 = !DILocation(line: 5575, column: 6, scope: !19484)
!19573 = !DILocation(line: 5577, column: 9, scope: !19574)
!19574 = distinct !DILexicalBlock(scope: !19484, file: !3, line: 5577, column: 8)
!19575 = !DILocation(line: 5577, column: 8, scope: !19484)
!19576 = !DILocation(line: 5580, column: 11, scope: !19577)
!19577 = distinct !DILexicalBlock(scope: !19574, file: !3, line: 5577, column: 12)
!19578 = !DILocation(line: 5580, column: 20, scope: !19577)
!19579 = !DILocation(line: 5580, column: 29, scope: !19577)
!19580 = !DILocation(line: 5580, column: 8, scope: !19577)
!19581 = !DILocation(line: 5581, column: 13, scope: !19577)
!19582 = !DILocation(line: 5581, column: 5, scope: !19577)
!19583 = !DILocation(line: 5581, column: 9, scope: !19577)
!19584 = !DILocation(line: 5581, column: 11, scope: !19577)
!19585 = !DILocation(line: 5582, column: 16, scope: !19577)
!19586 = !DILocation(line: 5582, column: 20, scope: !19577)
!19587 = !DILocation(line: 5582, column: 31, scope: !19577)
!19588 = !DILocation(line: 5582, column: 34, scope: !19577)
!19589 = !DILocation(line: 5582, column: 5, scope: !19577)
!19590 = !DILocation(line: 5583, column: 19, scope: !19577)
!19591 = !DILocation(line: 5583, column: 5, scope: !19577)
!19592 = !DILocation(line: 5583, column: 9, scope: !19577)
!19593 = !DILocation(line: 5583, column: 17, scope: !19577)
!19594 = !DILocation(line: 5585, column: 9, scope: !19595)
!19595 = distinct !DILexicalBlock(scope: !19577, file: !3, line: 5585, column: 9)
!19596 = !DILocation(line: 5585, column: 9, scope: !19577)
!19597 = !DILocalVariable(name: "l_tmp", scope: !19598, file: !3, line: 5586, type: !3625)
!19598 = distinct !DILexicalBlock(scope: !19595, file: !3, line: 5585, column: 14)
!19599 = !DILocation(line: 5586, column: 14, scope: !19598)
!19600 = !DILocation(line: 5586, column: 46, scope: !19598)
!19601 = !DILocation(line: 5586, column: 51, scope: !19598)
!19602 = !DILocation(line: 5586, column: 22, scope: !19598)
!19603 = !DILocation(line: 5587, column: 35, scope: !19598)
!19604 = !DILocation(line: 5587, column: 42, scope: !19598)
!19605 = !DILocation(line: 5587, column: 45, scope: !19598)
!19606 = !DILocation(line: 5587, column: 16, scope: !19598)
!19607 = !DILocation(line: 5587, column: 6, scope: !19598)
!19608 = !DILocation(line: 5587, column: 10, scope: !19598)
!19609 = !DILocation(line: 5587, column: 14, scope: !19598)
!19610 = !DILocation(line: 5588, column: 10, scope: !19611)
!19611 = distinct !DILexicalBlock(scope: !19598, file: !3, line: 5588, column: 10)
!19612 = !DILocation(line: 5588, column: 10, scope: !19598)
!19613 = !DILocation(line: 5589, column: 21, scope: !19614)
!19614 = distinct !DILexicalBlock(scope: !19611, file: !3, line: 5588, column: 48)
!19615 = !DILocation(line: 5589, column: 24, scope: !19614)
!19616 = !DILocation(line: 5589, column: 29, scope: !19614)
!19617 = !DILocation(line: 5589, column: 37, scope: !19614)
!19618 = !DILocation(line: 5589, column: 44, scope: !19614)
!19619 = !DILocation(line: 5589, column: 47, scope: !19614)
!19620 = !DILocation(line: 5589, column: 51, scope: !19614)
!19621 = !DILocation(line: 5589, column: 7, scope: !19614)
!19622 = !DILocation(line: 5590, column: 6, scope: !19614)
!19623 = !DILocation(line: 5592, column: 19, scope: !19624)
!19624 = distinct !DILexicalBlock(scope: !19611, file: !3, line: 5591, column: 11)
!19625 = !DILocation(line: 5592, column: 23, scope: !19624)
!19626 = !DILocation(line: 5592, column: 49, scope: !19624)
!19627 = !DILocation(line: 5592, column: 56, scope: !19624)
!19628 = !DILocation(line: 5592, column: 59, scope: !19624)
!19629 = !DILocation(line: 5592, column: 30, scope: !19624)
!19630 = !DILocation(line: 5592, column: 63, scope: !19624)
!19631 = !DILocation(line: 5592, column: 67, scope: !19624)
!19632 = !DILocation(line: 5592, column: 70, scope: !19624)
!19633 = !DILocation(line: 5592, column: 7, scope: !19624)
!19634 = !DILocation(line: 5594, column: 5, scope: !19598)
!19635 = !DILocation(line: 5596, column: 9, scope: !19636)
!19636 = distinct !DILexicalBlock(scope: !19577, file: !3, line: 5596, column: 9)
!19637 = !DILocation(line: 5596, column: 9, scope: !19577)
!19638 = !DILocalVariable(name: "l_tmp", scope: !19639, file: !3, line: 5597, type: !3625)
!19639 = distinct !DILexicalBlock(scope: !19636, file: !3, line: 5596, column: 14)
!19640 = !DILocation(line: 5597, column: 14, scope: !19639)
!19641 = !DILocation(line: 5597, column: 46, scope: !19639)
!19642 = !DILocation(line: 5597, column: 51, scope: !19639)
!19643 = !DILocation(line: 5597, column: 22, scope: !19639)
!19644 = !DILocation(line: 5598, column: 35, scope: !19639)
!19645 = !DILocation(line: 5598, column: 42, scope: !19639)
!19646 = !DILocation(line: 5598, column: 45, scope: !19639)
!19647 = !DILocation(line: 5598, column: 16, scope: !19639)
!19648 = !DILocation(line: 5598, column: 6, scope: !19639)
!19649 = !DILocation(line: 5598, column: 10, scope: !19639)
!19650 = !DILocation(line: 5598, column: 14, scope: !19639)
!19651 = !DILocation(line: 5599, column: 10, scope: !19652)
!19652 = distinct !DILexicalBlock(scope: !19639, file: !3, line: 5599, column: 10)
!19653 = !DILocation(line: 5599, column: 10, scope: !19639)
!19654 = !DILocation(line: 5600, column: 21, scope: !19655)
!19655 = distinct !DILexicalBlock(scope: !19652, file: !3, line: 5599, column: 48)
!19656 = !DILocation(line: 5600, column: 24, scope: !19655)
!19657 = !DILocation(line: 5600, column: 29, scope: !19655)
!19658 = !DILocation(line: 5600, column: 37, scope: !19655)
!19659 = !DILocation(line: 5600, column: 44, scope: !19655)
!19660 = !DILocation(line: 5600, column: 47, scope: !19655)
!19661 = !DILocation(line: 5600, column: 51, scope: !19655)
!19662 = !DILocation(line: 5600, column: 7, scope: !19655)
!19663 = !DILocation(line: 5601, column: 6, scope: !19655)
!19664 = !DILocation(line: 5603, column: 19, scope: !19665)
!19665 = distinct !DILexicalBlock(scope: !19652, file: !3, line: 5602, column: 11)
!19666 = !DILocation(line: 5603, column: 23, scope: !19665)
!19667 = !DILocation(line: 5603, column: 49, scope: !19665)
!19668 = !DILocation(line: 5603, column: 56, scope: !19665)
!19669 = !DILocation(line: 5603, column: 59, scope: !19665)
!19670 = !DILocation(line: 5603, column: 30, scope: !19665)
!19671 = !DILocation(line: 5603, column: 63, scope: !19665)
!19672 = !DILocation(line: 5603, column: 67, scope: !19665)
!19673 = !DILocation(line: 5603, column: 70, scope: !19665)
!19674 = !DILocation(line: 5603, column: 7, scope: !19665)
!19675 = !DILocation(line: 5605, column: 5, scope: !19639)
!19676 = !DILocation(line: 5607, column: 5, scope: !19577)
!19677 = !DILocation(line: 5608, column: 5, scope: !19577)
!19678 = !DILocation(line: 5610, column: 5, scope: !19577)
!19679 = !DILocation(line: 5612, column: 19, scope: !19484)
!19680 = !DILocation(line: 5612, column: 23, scope: !19484)
!19681 = !DILocation(line: 5612, column: 18, scope: !19484)
!19682 = !DILocation(line: 5612, column: 16, scope: !19484)
!19683 = !DILocation(line: 5613, column: 19, scope: !19484)
!19684 = !DILocation(line: 5613, column: 23, scope: !19484)
!19685 = !DILocation(line: 5613, column: 18, scope: !19484)
!19686 = !DILocation(line: 5613, column: 16, scope: !19484)
!19687 = !DILocation(line: 5615, column: 15, scope: !19484)
!19688 = !DILocation(line: 5615, column: 13, scope: !19484)
!19689 = !DILocation(line: 5616, column: 15, scope: !19484)
!19690 = !DILocation(line: 5616, column: 13, scope: !19484)
!19691 = !DILocation(line: 5618, column: 8, scope: !19692)
!19692 = distinct !DILexicalBlock(scope: !19484, file: !3, line: 5618, column: 8)
!19693 = !DILocation(line: 5618, column: 8, scope: !19484)
!19694 = !DILocation(line: 5619, column: 25, scope: !19695)
!19695 = distinct !DILexicalBlock(scope: !19692, file: !3, line: 5618, column: 13)
!19696 = !DILocation(line: 5619, column: 28, scope: !19695)
!19697 = !DILocation(line: 5619, column: 33, scope: !19695)
!19698 = !DILocation(line: 5619, column: 41, scope: !19695)
!19699 = !DILocation(line: 5619, column: 44, scope: !19695)
!19700 = !DILocation(line: 5619, column: 11, scope: !19695)
!19701 = !DILocation(line: 5619, column: 9, scope: !19695)
!19702 = !DILocation(line: 5620, column: 4, scope: !19695)
!19703 = !DILocation(line: 5622, column: 13, scope: !19704)
!19704 = distinct !DILexicalBlock(scope: !19692, file: !3, line: 5621, column: 9)
!19705 = !DILocation(line: 5622, column: 5, scope: !19704)
!19706 = !DILocation(line: 5625, column: 8, scope: !19707)
!19707 = distinct !DILexicalBlock(scope: !19484, file: !3, line: 5625, column: 8)
!19708 = !DILocation(line: 5625, column: 8, scope: !19484)
!19709 = !DILocation(line: 5626, column: 25, scope: !19710)
!19710 = distinct !DILexicalBlock(scope: !19707, file: !3, line: 5625, column: 13)
!19711 = !DILocation(line: 5626, column: 28, scope: !19710)
!19712 = !DILocation(line: 5626, column: 33, scope: !19710)
!19713 = !DILocation(line: 5626, column: 41, scope: !19710)
!19714 = !DILocation(line: 5626, column: 44, scope: !19710)
!19715 = !DILocation(line: 5626, column: 11, scope: !19710)
!19716 = !DILocation(line: 5626, column: 9, scope: !19710)
!19717 = !DILocation(line: 5627, column: 4, scope: !19710)
!19718 = !DILocation(line: 5629, column: 13, scope: !19719)
!19719 = distinct !DILexicalBlock(scope: !19707, file: !3, line: 5628, column: 9)
!19720 = !DILocation(line: 5629, column: 5, scope: !19719)
!19721 = !DILocation(line: 5633, column: 8, scope: !19722)
!19722 = distinct !DILexicalBlock(scope: !19484, file: !3, line: 5633, column: 8)
!19723 = !DILocation(line: 5633, column: 12, scope: !19722)
!19724 = !DILocation(line: 5633, column: 15, scope: !19722)
!19725 = !DILocation(line: 5633, column: 8, scope: !19484)
!19726 = !DILocation(line: 5635, column: 4, scope: !19727)
!19727 = distinct !DILexicalBlock(scope: !19722, file: !3, line: 5633, column: 20)
!19728 = !DILocation(line: 5637, column: 9, scope: !19729)
!19729 = distinct !DILexicalBlock(scope: !19730, file: !3, line: 5637, column: 9)
!19730 = distinct !DILexicalBlock(scope: !19722, file: !3, line: 5636, column: 9)
!19731 = !DILocation(line: 5637, column: 13, scope: !19729)
!19732 = !DILocation(line: 5637, column: 16, scope: !19729)
!19733 = !DILocation(line: 5637, column: 9, scope: !19730)
!19734 = !DILocation(line: 5639, column: 15, scope: !19735)
!19735 = distinct !DILexicalBlock(scope: !19736, file: !3, line: 5639, column: 15)
!19736 = distinct !DILexicalBlock(scope: !19729, file: !3, line: 5637, column: 21)
!19737 = !DILocation(line: 5639, column: 19, scope: !19735)
!19738 = !DILocation(line: 5639, column: 27, scope: !19735)
!19739 = !DILocation(line: 5639, column: 30, scope: !19735)
!19740 = !DILocation(line: 5639, column: 34, scope: !19735)
!19741 = !DILocation(line: 5639, column: 38, scope: !19735)
!19742 = !DILocation(line: 5639, column: 43, scope: !19735)
!19743 = !DILocation(line: 5639, column: 58, scope: !19735)
!19744 = !DILocation(line: 5639, column: 55, scope: !19735)
!19745 = !DILocation(line: 5639, column: 15, scope: !19736)
!19746 = !DILocation(line: 5639, column: 70, scope: !19735)
!19747 = !DILocation(line: 5639, column: 75, scope: !19735)
!19748 = !DILocation(line: 5639, column: 68, scope: !19735)
!19749 = !DILocation(line: 5639, column: 64, scope: !19735)
!19750 = !DILocation(line: 5640, column: 15, scope: !19751)
!19751 = distinct !DILexicalBlock(scope: !19735, file: !3, line: 5640, column: 15)
!19752 = !DILocation(line: 5640, column: 19, scope: !19751)
!19753 = !DILocation(line: 5640, column: 27, scope: !19751)
!19754 = !DILocation(line: 5640, column: 30, scope: !19751)
!19755 = !DILocation(line: 5640, column: 34, scope: !19751)
!19756 = !DILocation(line: 5640, column: 38, scope: !19751)
!19757 = !DILocation(line: 5640, column: 43, scope: !19751)
!19758 = !DILocation(line: 5640, column: 58, scope: !19751)
!19759 = !DILocation(line: 5640, column: 55, scope: !19751)
!19760 = !DILocation(line: 5640, column: 15, scope: !19735)
!19761 = !DILocation(line: 5640, column: 70, scope: !19751)
!19762 = !DILocation(line: 5640, column: 75, scope: !19751)
!19763 = !DILocation(line: 5640, column: 68, scope: !19751)
!19764 = !DILocation(line: 5640, column: 64, scope: !19751)
!19765 = !DILocation(line: 5641, column: 5, scope: !19736)
!19766 = !DILocation(line: 5642, column: 14, scope: !19767)
!19767 = distinct !DILexicalBlock(scope: !19729, file: !3, line: 5642, column: 14)
!19768 = !DILocation(line: 5642, column: 17, scope: !19767)
!19769 = !DILocation(line: 5642, column: 19, scope: !19767)
!19770 = !DILocation(line: 5642, column: 14, scope: !19729)
!19771 = !DILocation(line: 5647, column: 10, scope: !19772)
!19772 = distinct !DILexicalBlock(scope: !19773, file: !3, line: 5647, column: 10)
!19773 = distinct !DILexicalBlock(scope: !19767, file: !3, line: 5642, column: 28)
!19774 = !DILocation(line: 5647, column: 10, scope: !19773)
!19775 = !DILocation(line: 5648, column: 13, scope: !19776)
!19776 = distinct !DILexicalBlock(scope: !19772, file: !3, line: 5647, column: 23)
!19777 = !DILocation(line: 5648, column: 16, scope: !19776)
!19778 = !DILocation(line: 5648, column: 11, scope: !19776)
!19779 = !DILocation(line: 5649, column: 14, scope: !19776)
!19780 = !DILocation(line: 5649, column: 19, scope: !19776)
!19781 = !DILocation(line: 5649, column: 34, scope: !19776)
!19782 = !DILocation(line: 5649, column: 31, scope: !19776)
!19783 = !DILocation(line: 5649, column: 13, scope: !19776)
!19784 = !DILocation(line: 5649, column: 41, scope: !19776)
!19785 = !DILocation(line: 5649, column: 46, scope: !19776)
!19786 = !DILocation(line: 5649, column: 11, scope: !19776)
!19787 = !DILocation(line: 5650, column: 6, scope: !19776)
!19788 = !DILocation(line: 5651, column: 15, scope: !19789)
!19789 = distinct !DILexicalBlock(scope: !19772, file: !3, line: 5651, column: 15)
!19790 = !DILocation(line: 5651, column: 15, scope: !19772)
!19791 = !DILocation(line: 5652, column: 13, scope: !19792)
!19792 = distinct !DILexicalBlock(scope: !19789, file: !3, line: 5651, column: 28)
!19793 = !DILocation(line: 5652, column: 16, scope: !19792)
!19794 = !DILocation(line: 5652, column: 11, scope: !19792)
!19795 = !DILocation(line: 5653, column: 14, scope: !19792)
!19796 = !DILocation(line: 5653, column: 19, scope: !19792)
!19797 = !DILocation(line: 5653, column: 34, scope: !19792)
!19798 = !DILocation(line: 5653, column: 31, scope: !19792)
!19799 = !DILocation(line: 5653, column: 13, scope: !19792)
!19800 = !DILocation(line: 5653, column: 41, scope: !19792)
!19801 = !DILocation(line: 5653, column: 46, scope: !19792)
!19802 = !DILocation(line: 5653, column: 11, scope: !19792)
!19803 = !DILocation(line: 5654, column: 6, scope: !19792)
!19804 = !DILocation(line: 5655, column: 5, scope: !19773)
!19805 = !DILocation(line: 5657, column: 10, scope: !19806)
!19806 = distinct !DILexicalBlock(scope: !19730, file: !3, line: 5657, column: 9)
!19807 = !DILocation(line: 5657, column: 22, scope: !19806)
!19808 = !DILocation(line: 5657, column: 25, scope: !19806)
!19809 = !DILocation(line: 5657, column: 9, scope: !19730)
!19810 = !DILocation(line: 5658, column: 20, scope: !19811)
!19811 = distinct !DILexicalBlock(scope: !19806, file: !3, line: 5657, column: 30)
!19812 = !DILocation(line: 5658, column: 23, scope: !19811)
!19813 = !DILocation(line: 5658, column: 28, scope: !19811)
!19814 = !DILocation(line: 5658, column: 31, scope: !19811)
!19815 = !DILocation(line: 5658, column: 39, scope: !19811)
!19816 = !DILocation(line: 5658, column: 6, scope: !19811)
!19817 = !DILocation(line: 5659, column: 5, scope: !19811)
!19818 = !DILocation(line: 5660, column: 10, scope: !19819)
!19819 = distinct !DILexicalBlock(scope: !19730, file: !3, line: 5660, column: 9)
!19820 = !DILocation(line: 5660, column: 22, scope: !19819)
!19821 = !DILocation(line: 5660, column: 25, scope: !19819)
!19822 = !DILocation(line: 5660, column: 9, scope: !19730)
!19823 = !DILocation(line: 5661, column: 20, scope: !19824)
!19824 = distinct !DILexicalBlock(scope: !19819, file: !3, line: 5660, column: 30)
!19825 = !DILocation(line: 5661, column: 23, scope: !19824)
!19826 = !DILocation(line: 5661, column: 28, scope: !19824)
!19827 = !DILocation(line: 5661, column: 31, scope: !19824)
!19828 = !DILocation(line: 5661, column: 39, scope: !19824)
!19829 = !DILocation(line: 5661, column: 6, scope: !19824)
!19830 = !DILocation(line: 5662, column: 5, scope: !19824)
!19831 = !DILocation(line: 5665, column: 4, scope: !19484)
!19832 = !DILocation(line: 5666, column: 4, scope: !19484)
!19833 = !DILocation(line: 5667, column: 3, scope: !19484)
!19834 = !DILocation(line: 5667, column: 13, scope: !19300)
!19835 = !DILocation(line: 5667, column: 18, scope: !19300)
!19836 = !DILocation(line: 5667, column: 27, scope: !19300)
!19837 = !DILocation(line: 5667, column: 15, scope: !19300)
!19838 = !DILocation(line: 5667, column: 30, scope: !19300)
!19839 = !DILocation(line: 5667, column: 34, scope: !19300)
!19840 = !DILocation(line: 5667, column: 38, scope: !19300)
!19841 = !DILocation(line: 5667, column: 41, scope: !19300)
!19842 = !DILocation(line: 0, scope: !19300)
!19843 = distinct !{!19843, !19482, !19844}
!19844 = !DILocation(line: 5667, column: 45, scope: !19300)
!19845 = !DILocation(line: 5669, column: 10, scope: !19300)
!19846 = !DILocation(line: 5675, column: 20, scope: !19043)
!19847 = !DILocation(line: 5675, column: 24, scope: !19043)
!19848 = !DILocation(line: 5675, column: 27, scope: !19043)
!19849 = !DILocation(line: 5675, column: 30, scope: !19043)
!19850 = !DILocation(line: 5675, column: 38, scope: !19043)
!19851 = !DILocation(line: 5675, column: 41, scope: !19043)
!19852 = !DILocation(line: 5675, column: 51, scope: !19043)
!19853 = !DILocation(line: 5675, column: 54, scope: !19043)
!19854 = !DILocation(line: 5675, column: 59, scope: !19043)
!19855 = !DILocation(line: 5675, column: 68, scope: !19043)
!19856 = !DILocation(line: 0, scope: !19043)
!19857 = !DILocation(line: 5675, column: 17, scope: !19043)
!19858 = !DILocation(line: 5677, column: 6, scope: !19859)
!19859 = distinct !DILexicalBlock(scope: !19043, file: !3, line: 5677, column: 6)
!19860 = !DILocation(line: 5677, column: 6, scope: !19043)
!19861 = !DILocation(line: 5678, column: 39, scope: !19862)
!19862 = distinct !DILexicalBlock(scope: !19859, file: !3, line: 5677, column: 22)
!19863 = !DILocation(line: 5678, column: 11, scope: !19862)
!19864 = !DILocation(line: 5678, column: 9, scope: !19862)
!19865 = !DILocation(line: 5679, column: 2, scope: !19862)
!19866 = !DILocation(line: 5681, column: 9, scope: !19867)
!19867 = distinct !DILexicalBlock(scope: !19859, file: !3, line: 5680, column: 7)
!19868 = !DILocation(line: 5687, column: 12, scope: !19043)
!19869 = !DILocation(line: 5687, column: 2, scope: !19043)
!19870 = !DILocation(line: 5687, column: 7, scope: !19043)
!19871 = !DILocation(line: 5687, column: 10, scope: !19043)
!19872 = !DILocation(line: 5688, column: 15, scope: !19043)
!19873 = !DILocation(line: 5688, column: 2, scope: !19043)
!19874 = !DILocation(line: 5688, column: 7, scope: !19043)
!19875 = !DILocation(line: 5688, column: 13, scope: !19043)
!19876 = !DILocation(line: 5692, column: 10, scope: !19043)
!19877 = !DILocation(line: 5692, column: 2, scope: !19043)
!19878 = !DILocation(line: 5693, column: 10, scope: !19043)
!19879 = !DILocation(line: 5695, column: 13, scope: !19043)
!19880 = !DILocation(line: 5695, column: 45, scope: !19043)
!19881 = !DILocation(line: 5695, column: 43, scope: !19043)
!19882 = !DILocation(line: 5695, column: 11, scope: !19043)
!19883 = !DILocation(line: 5696, column: 17, scope: !19043)
!19884 = !DILocation(line: 5696, column: 45, scope: !19043)
!19885 = !DILocation(line: 5696, column: 43, scope: !19043)
!19886 = !DILocation(line: 5696, column: 15, scope: !19043)
!19887 = !DILocation(line: 5697, column: 13, scope: !19043)
!19888 = !DILocation(line: 5697, column: 27, scope: !19043)
!19889 = !DILocation(line: 5697, column: 2, scope: !19043)
!19890 = !DILocation(line: 5699, column: 2, scope: !19891)
!19891 = distinct !DILexicalBlock(scope: !19043, file: !3, line: 5699, column: 2)
!19892 = !DILocation(line: 5699, column: 2, scope: !19893)
!19893 = distinct !DILexicalBlock(scope: !19891, file: !3, line: 5699, column: 2)
!19894 = !DILocation(line: 5700, column: 7, scope: !19895)
!19895 = distinct !DILexicalBlock(scope: !19896, file: !3, line: 5700, column: 7)
!19896 = distinct !DILexicalBlock(scope: !19893, file: !3, line: 5699, column: 48)
!19897 = !DILocation(line: 5700, column: 7, scope: !19896)
!19898 = !DILocalVariable(name: "iter2", scope: !19899, file: !3, line: 5701, type: !11228)
!19899 = distinct !DILexicalBlock(scope: !19895, file: !3, line: 5700, column: 45)
!19900 = !DILocation(line: 5701, column: 11, scope: !19899)
!19901 = !DILocalVariable(name: "e2", scope: !19899, file: !3, line: 5702, type: !3682)
!19902 = !DILocation(line: 5702, column: 12, scope: !19899)
!19903 = !DILocalVariable(name: "d", scope: !19899, file: !3, line: 5703, type: !1727)
!19904 = !DILocation(line: 5703, column: 10, scope: !19899)
!19905 = !DILocation(line: 5707, column: 11, scope: !19906)
!19906 = distinct !DILexicalBlock(scope: !19899, file: !3, line: 5707, column: 4)
!19907 = !DILocation(line: 5707, column: 9, scope: !19906)
!19908 = !DILocation(line: 5707, column: 16, scope: !19909)
!19909 = distinct !DILexicalBlock(scope: !19906, file: !3, line: 5707, column: 4)
!19910 = !DILocation(line: 5707, column: 18, scope: !19909)
!19911 = !DILocation(line: 5707, column: 4, scope: !19906)
!19912 = !DILocation(line: 5708, column: 9, scope: !19913)
!19913 = distinct !DILexicalBlock(scope: !19909, file: !3, line: 5707, column: 28)
!19914 = !DILocation(line: 5708, column: 13, scope: !19913)
!19915 = !DILocation(line: 5708, column: 16, scope: !19913)
!19916 = !DILocation(line: 5708, column: 21, scope: !19913)
!19917 = !DILocation(line: 5708, column: 24, scope: !19913)
!19918 = !DILocation(line: 5708, column: 7, scope: !19913)
!19919 = !DILocation(line: 5709, column: 5, scope: !19920)
!19920 = distinct !DILexicalBlock(scope: !19913, file: !3, line: 5709, column: 5)
!19921 = !DILocation(line: 5709, column: 5, scope: !19922)
!19922 = distinct !DILexicalBlock(scope: !19920, file: !3, line: 5709, column: 5)
!19923 = !DILocalVariable(name: "sco_a", scope: !19924, file: !3, line: 5711, type: !1987)
!19924 = distinct !DILexicalBlock(scope: !19922, file: !3, line: 5709, column: 52)
!19925 = !DILocation(line: 5711, column: 12, scope: !19924)
!19926 = !DILocalVariable(name: "sco_b", scope: !19924, file: !3, line: 5711, type: !1987)
!19927 = !DILocation(line: 5711, column: 22, scope: !19924)
!19928 = !DILocation(line: 5713, column: 10, scope: !19929)
!19929 = distinct !DILexicalBlock(scope: !19924, file: !3, line: 5713, column: 10)
!19930 = !DILocation(line: 5713, column: 10, scope: !19924)
!19931 = !DILocation(line: 5714, column: 7, scope: !19929)
!19932 = !DILocation(line: 5717, column: 10, scope: !19933)
!19933 = distinct !DILexicalBlock(scope: !19924, file: !3, line: 5717, column: 10)
!19934 = !DILocation(line: 5717, column: 25, scope: !19933)
!19935 = !DILocation(line: 5717, column: 47, scope: !19933)
!19936 = !DILocation(line: 5717, column: 54, scope: !19933)
!19937 = !DILocation(line: 5717, column: 58, scope: !19933)
!19938 = !DILocation(line: 5717, column: 62, scope: !19933)
!19939 = !DILocation(line: 5717, column: 67, scope: !19933)
!19940 = !DILocation(line: 5717, column: 70, scope: !19933)
!19941 = !DILocation(line: 5717, column: 29, scope: !19933)
!19942 = !DILocation(line: 5717, column: 10, scope: !19924)
!19943 = !DILocation(line: 5718, column: 7, scope: !19944)
!19944 = distinct !DILexicalBlock(scope: !19933, file: !3, line: 5717, column: 79)
!19945 = !DILocation(line: 5722, column: 10, scope: !19924)
!19946 = !DILocation(line: 5722, column: 19, scope: !19924)
!19947 = !DILocation(line: 5722, column: 8, scope: !19924)
!19948 = !DILocation(line: 5724, column: 10, scope: !19949)
!19949 = distinct !DILexicalBlock(scope: !19924, file: !3, line: 5724, column: 10)
!19950 = !DILocation(line: 5724, column: 19, scope: !19949)
!19951 = !DILocation(line: 5724, column: 22, scope: !19949)
!19952 = !DILocation(line: 5724, column: 10, scope: !19924)
!19953 = !DILocation(line: 5725, column: 37, scope: !19954)
!19954 = distinct !DILexicalBlock(scope: !19949, file: !3, line: 5724, column: 27)
!19955 = !DILocation(line: 5725, column: 41, scope: !19954)
!19956 = !DILocation(line: 5725, column: 50, scope: !19954)
!19957 = !DILocation(line: 5725, column: 53, scope: !19954)
!19958 = !DILocation(line: 5725, column: 58, scope: !19954)
!19959 = !DILocation(line: 5725, column: 62, scope: !19954)
!19960 = !DILocation(line: 5725, column: 69, scope: !19954)
!19961 = !DILocation(line: 5725, column: 7, scope: !19954)
!19962 = !DILocation(line: 5726, column: 6, scope: !19954)
!19963 = !DILocation(line: 5728, column: 19, scope: !19964)
!19964 = distinct !DILexicalBlock(scope: !19949, file: !3, line: 5727, column: 11)
!19965 = !DILocation(line: 5728, column: 26, scope: !19964)
!19966 = !DILocation(line: 5728, column: 29, scope: !19964)
!19967 = !DILocation(line: 5728, column: 33, scope: !19964)
!19968 = !DILocation(line: 5728, column: 42, scope: !19964)
!19969 = !DILocation(line: 5728, column: 45, scope: !19964)
!19970 = !DILocation(line: 5728, column: 7, scope: !19964)
!19971 = !DILocation(line: 5729, column: 37, scope: !19964)
!19972 = !DILocation(line: 5729, column: 41, scope: !19964)
!19973 = !DILocation(line: 5729, column: 48, scope: !19964)
!19974 = !DILocation(line: 5729, column: 55, scope: !19964)
!19975 = !DILocation(line: 5729, column: 7, scope: !19964)
!19976 = !DILocation(line: 5732, column: 10, scope: !19977)
!19977 = distinct !DILexicalBlock(scope: !19924, file: !3, line: 5732, column: 10)
!19978 = !DILocation(line: 5732, column: 19, scope: !19977)
!19979 = !DILocation(line: 5732, column: 22, scope: !19977)
!19980 = !DILocation(line: 5732, column: 10, scope: !19924)
!19981 = !DILocation(line: 5733, column: 37, scope: !19982)
!19982 = distinct !DILexicalBlock(scope: !19977, file: !3, line: 5732, column: 27)
!19983 = !DILocation(line: 5733, column: 41, scope: !19982)
!19984 = !DILocation(line: 5733, column: 50, scope: !19982)
!19985 = !DILocation(line: 5733, column: 53, scope: !19982)
!19986 = !DILocation(line: 5733, column: 58, scope: !19982)
!19987 = !DILocation(line: 5733, column: 62, scope: !19982)
!19988 = !DILocation(line: 5733, column: 69, scope: !19982)
!19989 = !DILocation(line: 5733, column: 7, scope: !19982)
!19990 = !DILocation(line: 5734, column: 6, scope: !19982)
!19991 = !DILocation(line: 5736, column: 19, scope: !19992)
!19992 = distinct !DILexicalBlock(scope: !19977, file: !3, line: 5735, column: 11)
!19993 = !DILocation(line: 5736, column: 26, scope: !19992)
!19994 = !DILocation(line: 5736, column: 29, scope: !19992)
!19995 = !DILocation(line: 5736, column: 33, scope: !19992)
!19996 = !DILocation(line: 5736, column: 42, scope: !19992)
!19997 = !DILocation(line: 5736, column: 45, scope: !19992)
!19998 = !DILocation(line: 5736, column: 7, scope: !19992)
!19999 = !DILocation(line: 5737, column: 37, scope: !19992)
!20000 = !DILocation(line: 5737, column: 41, scope: !19992)
!20001 = !DILocation(line: 5737, column: 48, scope: !19992)
!20002 = !DILocation(line: 5737, column: 55, scope: !19992)
!20003 = !DILocation(line: 5737, column: 7, scope: !19992)
!20004 = !DILocation(line: 5741, column: 34, scope: !19924)
!20005 = !DILocation(line: 5741, column: 40, scope: !19924)
!20006 = !DILocation(line: 5741, column: 47, scope: !19924)
!20007 = !DILocation(line: 5741, column: 10, scope: !19924)
!20008 = !DILocation(line: 5741, column: 8, scope: !19924)
!20009 = !DILocation(line: 5742, column: 11, scope: !20010)
!20010 = distinct !DILexicalBlock(scope: !19924, file: !3, line: 5742, column: 10)
!20011 = !DILocation(line: 5742, column: 19, scope: !20010)
!20012 = !DILocation(line: 5742, column: 29, scope: !20010)
!20013 = !DILocation(line: 5744, column: 11, scope: !20010)
!20014 = !DILocation(line: 5744, column: 15, scope: !20010)
!20015 = !DILocation(line: 5744, column: 13, scope: !20010)
!20016 = !DILocation(line: 5744, column: 23, scope: !20010)
!20017 = !DILocation(line: 5744, column: 44, scope: !20010)
!20018 = !DILocation(line: 5744, column: 51, scope: !20010)
!20019 = !DILocation(line: 5744, column: 27, scope: !20010)
!20020 = !DILocation(line: 5744, column: 58, scope: !20010)
!20021 = !DILocation(line: 5742, column: 10, scope: !19924)
!20022 = !DILocation(line: 5746, column: 17, scope: !20023)
!20023 = distinct !DILexicalBlock(scope: !20010, file: !3, line: 5745, column: 6)
!20024 = !DILocation(line: 5746, column: 15, scope: !20023)
!20025 = !DILocation(line: 5747, column: 19, scope: !20023)
!20026 = !DILocation(line: 5747, column: 29, scope: !20023)
!20027 = !DILocation(line: 5747, column: 36, scope: !20023)
!20028 = !DILocation(line: 5747, column: 7, scope: !20023)
!20029 = !DILocation(line: 5748, column: 6, scope: !20023)
!20030 = !DILocation(line: 5751, column: 13, scope: !19924)
!20031 = !DILocation(line: 5751, column: 22, scope: !19924)
!20032 = !DILocation(line: 5751, column: 25, scope: !19924)
!20033 = !DILocation(line: 5751, column: 11, scope: !19924)
!20034 = !DILocation(line: 5752, column: 10, scope: !20035)
!20035 = distinct !DILexicalBlock(scope: !19924, file: !3, line: 5752, column: 10)
!20036 = !DILocation(line: 5752, column: 23, scope: !20035)
!20037 = !DILocation(line: 5752, column: 29, scope: !20035)
!20038 = !DILocation(line: 5752, column: 38, scope: !20035)
!20039 = !DILocation(line: 5752, column: 41, scope: !20035)
!20040 = !DILocation(line: 5752, column: 45, scope: !20035)
!20041 = !DILocation(line: 5752, column: 58, scope: !20035)
!20042 = !DILocation(line: 5752, column: 43, scope: !20035)
!20043 = !DILocation(line: 5752, column: 10, scope: !19924)
!20044 = !DILocation(line: 5753, column: 28, scope: !20045)
!20045 = distinct !DILexicalBlock(scope: !20035, file: !3, line: 5752, column: 65)
!20046 = !DILocation(line: 5753, column: 7, scope: !20045)
!20047 = !DILocation(line: 5753, column: 20, scope: !20045)
!20048 = !DILocation(line: 5753, column: 26, scope: !20045)
!20049 = !DILocation(line: 5754, column: 19, scope: !20045)
!20050 = !DILocation(line: 5754, column: 28, scope: !20045)
!20051 = !DILocation(line: 5754, column: 35, scope: !20045)
!20052 = !DILocation(line: 5754, column: 42, scope: !20045)
!20053 = !DILocation(line: 5754, column: 7, scope: !20045)
!20054 = !DILocation(line: 5755, column: 6, scope: !20045)
!20055 = !DILocation(line: 5756, column: 5, scope: !19924)
!20056 = distinct !{!20056, !19919, !20057}
!20057 = !DILocation(line: 5756, column: 5, scope: !19920)
!20058 = !DILocation(line: 5757, column: 4, scope: !19913)
!20059 = !DILocation(line: 5707, column: 24, scope: !19909)
!20060 = !DILocation(line: 5707, column: 4, scope: !19909)
!20061 = distinct !{!20061, !19911, !20062}
!20062 = !DILocation(line: 5757, column: 4, scope: !19906)
!20063 = !DILocation(line: 5758, column: 3, scope: !19899)
!20064 = !DILocation(line: 5759, column: 2, scope: !19896)
!20065 = distinct !{!20065, !19890, !20066}
!20066 = !DILocation(line: 5759, column: 2, scope: !19891)
!20067 = !DILocation(line: 5762, column: 6, scope: !20068)
!20068 = distinct !DILexicalBlock(scope: !19043, file: !3, line: 5762, column: 6)
!20069 = !DILocation(line: 5762, column: 6, scope: !19043)
!20070 = !DILocation(line: 5763, column: 3, scope: !20071)
!20071 = distinct !DILexicalBlock(scope: !20068, file: !3, line: 5762, column: 49)
!20072 = !DILocation(line: 5763, column: 15, scope: !20071)
!20073 = !DILocation(line: 5764, column: 3, scope: !20071)
!20074 = !DILocation(line: 5764, column: 15, scope: !20071)
!20075 = !DILocation(line: 5765, column: 2, scope: !20071)
!20076 = !DILocation(line: 5767, column: 19, scope: !19043)
!20077 = !DILocation(line: 5767, column: 2, scope: !19043)
!20078 = !DILocation(line: 5769, column: 6, scope: !20079)
!20079 = distinct !DILexicalBlock(scope: !19043, file: !3, line: 5769, column: 6)
!20080 = !DILocation(line: 5769, column: 11, scope: !20079)
!20081 = !DILocation(line: 5769, column: 6, scope: !19043)
!20082 = !DILocation(line: 5770, column: 20, scope: !20083)
!20083 = distinct !DILexicalBlock(scope: !20079, file: !3, line: 5769, column: 26)
!20084 = !DILocation(line: 5770, column: 3, scope: !20083)
!20085 = !DILocation(line: 5770, column: 8, scope: !20083)
!20086 = !DILocation(line: 5770, column: 18, scope: !20083)
!20087 = !DILocation(line: 5771, column: 23, scope: !20083)
!20088 = !DILocation(line: 5771, column: 3, scope: !20083)
!20089 = !DILocation(line: 5771, column: 8, scope: !20083)
!20090 = !DILocation(line: 5771, column: 21, scope: !20083)
!20091 = !DILocation(line: 5773, column: 32, scope: !20083)
!20092 = !DILocation(line: 5773, column: 37, scope: !20083)
!20093 = !DILocation(line: 5773, column: 51, scope: !20083)
!20094 = !DILocation(line: 5773, column: 3, scope: !20083)
!20095 = !DILocation(line: 5774, column: 2, scope: !20083)
!20096 = !DILocation(line: 5777, column: 13, scope: !19043)
!20097 = !DILocation(line: 5777, column: 18, scope: !19043)
!20098 = !DILocation(line: 5777, column: 11, scope: !19043)
!20099 = !DILocation(line: 5778, column: 9, scope: !20100)
!20100 = distinct !DILexicalBlock(scope: !19043, file: !3, line: 5778, column: 2)
!20101 = !DILocation(line: 5778, column: 7, scope: !20100)
!20102 = !DILocation(line: 5778, column: 14, scope: !20103)
!20103 = distinct !DILexicalBlock(scope: !20100, file: !3, line: 5778, column: 2)
!20104 = !DILocation(line: 5778, column: 18, scope: !20103)
!20105 = !DILocation(line: 5778, column: 23, scope: !20103)
!20106 = !DILocation(line: 5778, column: 16, scope: !20103)
!20107 = !DILocation(line: 5778, column: 2, scope: !20100)
!20108 = !DILocalVariable(name: "fiter", scope: !20109, file: !3, line: 5779, type: !11228)
!20109 = distinct !DILexicalBlock(scope: !20103, file: !3, line: 5778, column: 47)
!20110 = !DILocation(line: 5779, column: 10, scope: !20109)
!20111 = !DILocalVariable(name: "f", scope: !20109, file: !3, line: 5780, type: !3686)
!20112 = !DILocation(line: 5780, column: 11, scope: !20109)
!20113 = !DILocation(line: 5783, column: 7, scope: !20114)
!20114 = distinct !DILexicalBlock(scope: !20109, file: !3, line: 5783, column: 7)
!20115 = !DILocation(line: 5783, column: 12, scope: !20114)
!20116 = !DILocation(line: 5783, column: 7, scope: !20109)
!20117 = !DILocation(line: 5784, column: 4, scope: !20118)
!20118 = distinct !DILexicalBlock(scope: !20119, file: !3, line: 5784, column: 4)
!20119 = distinct !DILexicalBlock(scope: !20114, file: !3, line: 5783, column: 27)
!20120 = !DILocation(line: 5784, column: 4, scope: !20121)
!20121 = distinct !DILexicalBlock(scope: !20118, file: !3, line: 5784, column: 4)
!20122 = !DILocation(line: 5785, column: 27, scope: !20123)
!20123 = distinct !DILexicalBlock(scope: !20124, file: !3, line: 5785, column: 9)
!20124 = distinct !DILexicalBlock(scope: !20121, file: !3, line: 5784, column: 60)
!20125 = !DILocation(line: 5785, column: 32, scope: !20123)
!20126 = !DILocation(line: 5785, column: 43, scope: !20123)
!20127 = !DILocation(line: 5785, column: 10, scope: !20123)
!20128 = !DILocation(line: 5785, column: 9, scope: !20124)
!20129 = !DILocalVariable(name: "f_copy", scope: !20130, file: !3, line: 5786, type: !3686)
!20130 = distinct !DILexicalBlock(scope: !20123, file: !3, line: 5785, column: 47)
!20131 = !DILocation(line: 5786, column: 14, scope: !20130)
!20132 = !DILocation(line: 5786, column: 36, scope: !20130)
!20133 = !DILocation(line: 5786, column: 41, scope: !20130)
!20134 = !DILocation(line: 5786, column: 55, scope: !20130)
!20135 = !DILocation(line: 5786, column: 59, scope: !20130)
!20136 = !DILocation(line: 5786, column: 23, scope: !20130)
!20137 = !DILocation(line: 5787, column: 23, scope: !20130)
!20138 = !DILocation(line: 5787, column: 28, scope: !20130)
!20139 = !DILocation(line: 5787, column: 39, scope: !20130)
!20140 = !DILocation(line: 5787, column: 42, scope: !20130)
!20141 = !DILocation(line: 5787, column: 6, scope: !20130)
!20142 = !DILocation(line: 5788, column: 5, scope: !20130)
!20143 = !DILocation(line: 5789, column: 4, scope: !20124)
!20144 = distinct !{!20144, !20117, !20145}
!20145 = !DILocation(line: 5789, column: 4, scope: !20118)
!20146 = !DILocation(line: 5790, column: 3, scope: !20119)
!20147 = !DILocation(line: 5793, column: 10, scope: !20109)
!20148 = !DILocation(line: 5793, column: 20, scope: !20109)
!20149 = !DILocation(line: 5793, column: 8, scope: !20109)
!20150 = !DILocation(line: 5794, column: 16, scope: !20151)
!20151 = distinct !DILexicalBlock(scope: !20109, file: !3, line: 5794, column: 7)
!20152 = !DILocation(line: 5794, column: 25, scope: !20151)
!20153 = !DILocation(line: 5794, column: 32, scope: !20151)
!20154 = !DILocation(line: 5794, column: 7, scope: !20151)
!20155 = !DILocation(line: 5794, column: 42, scope: !20151)
!20156 = !DILocation(line: 5794, column: 7, scope: !20109)
!20157 = !DILocation(line: 5795, column: 15, scope: !20158)
!20158 = distinct !DILexicalBlock(scope: !20151, file: !3, line: 5794, column: 50)
!20159 = !DILocation(line: 5795, column: 25, scope: !20158)
!20160 = !DILocation(line: 5795, column: 32, scope: !20158)
!20161 = !DILocation(line: 5795, column: 42, scope: !20158)
!20162 = !DILocation(line: 5795, column: 4, scope: !20158)
!20163 = !DILocalVariable(name: "sw_ap", scope: !20164, file: !3, line: 5796, type: !3678)
!20164 = distinct !DILexicalBlock(scope: !20158, file: !3, line: 5796, column: 4)
!20165 = !DILocation(line: 5796, column: 4, scope: !20164)
!20166 = !DILocation(line: 5797, column: 3, scope: !20158)
!20167 = !DILocation(line: 5798, column: 2, scope: !20109)
!20168 = !DILocation(line: 5778, column: 31, scope: !20103)
!20169 = !DILocation(line: 5778, column: 43, scope: !20103)
!20170 = !DILocation(line: 5778, column: 2, scope: !20103)
!20171 = distinct !{!20171, !20107, !20172}
!20172 = !DILocation(line: 5798, column: 2, scope: !20100)
!20173 = !DILocation(line: 5800, column: 6, scope: !20174)
!20174 = distinct !DILexicalBlock(scope: !19043, file: !3, line: 5800, column: 6)
!20175 = !DILocation(line: 5800, column: 6, scope: !19043)
!20176 = !DILocation(line: 5801, column: 32, scope: !20174)
!20177 = !DILocation(line: 5801, column: 35, scope: !20174)
!20178 = !DILocation(line: 5801, column: 40, scope: !20174)
!20179 = !DILocation(line: 5801, column: 3, scope: !20174)
!20180 = !DILocation(line: 5803, column: 12, scope: !19043)
!20181 = !DILocation(line: 5803, column: 2, scope: !19043)
!20182 = !DILocation(line: 5803, column: 7, scope: !19043)
!20183 = !DILocation(line: 5803, column: 10, scope: !19043)
!20184 = !DILocation(line: 5806, column: 10, scope: !19043)
!20185 = !DILocation(line: 5806, column: 2, scope: !19043)
!20186 = !DILocation(line: 5809, column: 13, scope: !19043)
!20187 = !DILocation(line: 5809, column: 23, scope: !19043)
!20188 = !DILocation(line: 5809, column: 2, scope: !19043)
!20189 = !DILocation(line: 5810, column: 12, scope: !19043)
!20190 = !DILocation(line: 5810, column: 2, scope: !19043)
!20191 = !DILocation(line: 5812, column: 23, scope: !19043)
!20192 = !DILocation(line: 5812, column: 26, scope: !19043)
!20193 = !DILocation(line: 5812, column: 36, scope: !19043)
!20194 = !DILocation(line: 5812, column: 34, scope: !19043)
!20195 = !DILocation(line: 5812, column: 2, scope: !19043)
!20196 = !DILocation(line: 5812, column: 7, scope: !19043)
!20197 = !DILocation(line: 5812, column: 21, scope: !19043)
!20198 = !DILocation(line: 5813, column: 23, scope: !19043)
!20199 = !DILocation(line: 5813, column: 26, scope: !19043)
!20200 = !DILocation(line: 5813, column: 36, scope: !19043)
!20201 = !DILocation(line: 5813, column: 34, scope: !19043)
!20202 = !DILocation(line: 5813, column: 2, scope: !19043)
!20203 = !DILocation(line: 5813, column: 7, scope: !19043)
!20204 = !DILocation(line: 5813, column: 21, scope: !19043)
!20205 = !DILocation(line: 5815, column: 21, scope: !19043)
!20206 = !DILocation(line: 5815, column: 24, scope: !19043)
!20207 = !DILocation(line: 5815, column: 34, scope: !19043)
!20208 = !DILocation(line: 5815, column: 32, scope: !19043)
!20209 = !DILocation(line: 5815, column: 2, scope: !19043)
!20210 = !DILocation(line: 5815, column: 7, scope: !19043)
!20211 = !DILocation(line: 5815, column: 19, scope: !19043)
!20212 = !DILocation(line: 5816, column: 21, scope: !19043)
!20213 = !DILocation(line: 5816, column: 24, scope: !19043)
!20214 = !DILocation(line: 5816, column: 34, scope: !19043)
!20215 = !DILocation(line: 5816, column: 32, scope: !19043)
!20216 = !DILocation(line: 5816, column: 2, scope: !19043)
!20217 = !DILocation(line: 5816, column: 7, scope: !19043)
!20218 = !DILocation(line: 5816, column: 19, scope: !19043)
!20219 = !DILocation(line: 5818, column: 2, scope: !19043)
!20220 = !DILocation(line: 5818, column: 7, scope: !19043)
!20221 = !DILocation(line: 5818, column: 12, scope: !19043)
!20222 = !DILocation(line: 5820, column: 18, scope: !19043)
!20223 = !DILocation(line: 5820, column: 2, scope: !19043)
!20224 = !DILocation(line: 5820, column: 5, scope: !19043)
!20225 = !DILocation(line: 5820, column: 16, scope: !19043)
!20226 = !DILocation(line: 5822, column: 2, scope: !19043)
!20227 = !DILocation(line: 5822, column: 12, scope: !19043)
!20228 = !DILocation(line: 5823, column: 6, scope: !20229)
!20229 = distinct !DILexicalBlock(scope: !19043, file: !3, line: 5823, column: 6)
!20230 = !DILocation(line: 5823, column: 6, scope: !19043)
!20231 = !DILocation(line: 5824, column: 18, scope: !20232)
!20232 = distinct !DILexicalBlock(scope: !20229, file: !3, line: 5823, column: 13)
!20233 = !DILocation(line: 5824, column: 3, scope: !20232)
!20234 = !DILocation(line: 5825, column: 2, scope: !20232)
!20235 = !DILocation(line: 5826, column: 2, scope: !19043)
!20236 = !DILocation(line: 5826, column: 12, scope: !19043)
!20237 = !DILocation(line: 5827, column: 2, scope: !19043)
!20238 = !DILocation(line: 5827, column: 12, scope: !19043)
!20239 = !DILocation(line: 5829, column: 2, scope: !19043)
!20240 = !DILocation(line: 5830, column: 1, scope: !19043)
!20241 = distinct !DISubprogram(name: "BM_edge_is_manifold", scope: !11622, file: !11622, line: 86, type: !11623, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20242 = !DILocalVariable(name: "e", arg: 1, scope: !20241, file: !11622, line: 86, type: !11625)
!20243 = !DILocation(line: 86, column: 51, scope: !20241)
!20244 = !DILocalVariable(name: "l", scope: !20241, file: !11622, line: 88, type: !11630)
!20245 = !DILocation(line: 88, column: 16, scope: !20241)
!20246 = !DILocation(line: 88, column: 20, scope: !20241)
!20247 = !DILocation(line: 88, column: 23, scope: !20241)
!20248 = !DILocation(line: 89, column: 10, scope: !20241)
!20249 = !DILocation(line: 89, column: 12, scope: !20241)
!20250 = !DILocation(line: 89, column: 16, scope: !20241)
!20251 = !DILocation(line: 89, column: 19, scope: !20241)
!20252 = !DILocation(line: 89, column: 34, scope: !20241)
!20253 = !DILocation(line: 89, column: 31, scope: !20241)
!20254 = !DILocation(line: 89, column: 37, scope: !20241)
!20255 = !DILocation(line: 90, column: 16, scope: !20241)
!20256 = !DILocation(line: 90, column: 19, scope: !20241)
!20257 = !DILocation(line: 90, column: 32, scope: !20241)
!20258 = !DILocation(line: 90, column: 47, scope: !20241)
!20259 = !DILocation(line: 90, column: 44, scope: !20241)
!20260 = !DILocation(line: 0, scope: !20241)
!20261 = !DILocation(line: 89, column: 9, scope: !20241)
!20262 = !DILocation(line: 89, column: 2, scope: !20241)
!20263 = distinct !DISubprogram(name: "_bm_elem_flag_enable", scope: !11598, file: !11598, line: 52, type: !20264, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20264 = !DISubroutineType(types: !20265)
!20265 = !{null, !20266, !3435}
!20266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3588, size: 64)
!20267 = !DILocalVariable(name: "head", arg: 1, scope: !20263, file: !11598, line: 52, type: !20266)
!20268 = !DILocation(line: 52, column: 48, scope: !20263)
!20269 = !DILocalVariable(name: "hflag", arg: 2, scope: !20263, file: !11598, line: 52, type: !3435)
!20270 = !DILocation(line: 52, column: 65, scope: !20263)
!20271 = !DILocation(line: 54, column: 17, scope: !20263)
!20272 = !DILocation(line: 54, column: 2, scope: !20263)
!20273 = !DILocation(line: 54, column: 8, scope: !20263)
!20274 = !DILocation(line: 54, column: 14, scope: !20263)
!20275 = !DILocation(line: 55, column: 1, scope: !20263)
!20276 = distinct !DISubprogram(name: "_bm_elem_flag_disable", scope: !11598, file: !11598, line: 57, type: !20264, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20277 = !DILocalVariable(name: "head", arg: 1, scope: !20276, file: !11598, line: 57, type: !20266)
!20278 = !DILocation(line: 57, column: 49, scope: !20276)
!20279 = !DILocalVariable(name: "hflag", arg: 2, scope: !20276, file: !11598, line: 57, type: !3435)
!20280 = !DILocation(line: 57, column: 66, scope: !20276)
!20281 = !DILocation(line: 59, column: 24, scope: !20276)
!20282 = !DILocation(line: 59, column: 23, scope: !20276)
!20283 = !DILocation(line: 59, column: 17, scope: !20276)
!20284 = !DILocation(line: 59, column: 2, scope: !20276)
!20285 = !DILocation(line: 59, column: 8, scope: !20276)
!20286 = !DILocation(line: 59, column: 14, scope: !20276)
!20287 = !DILocation(line: 60, column: 1, scope: !20276)
!20288 = distinct !DISubprogram(name: "_bm_elem_index_set", scope: !11598, file: !11598, line: 114, type: !20289, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20289 = !DISubroutineType(types: !20290)
!20290 = !{null, !20266, !3858}
!20291 = !DILocalVariable(name: "head", arg: 1, scope: !20288, file: !11598, line: 114, type: !20266)
!20292 = !DILocation(line: 114, column: 46, scope: !20288)
!20293 = !DILocalVariable(name: "index", arg: 2, scope: !20288, file: !11598, line: 114, type: !3858)
!20294 = !DILocation(line: 114, column: 62, scope: !20288)
!20295 = !DILocation(line: 116, column: 16, scope: !20288)
!20296 = !DILocation(line: 116, column: 2, scope: !20288)
!20297 = !DILocation(line: 116, column: 8, scope: !20288)
!20298 = !DILocation(line: 116, column: 14, scope: !20288)
!20299 = !DILocation(line: 117, column: 1, scope: !20288)
!20300 = distinct !DISubprogram(name: "get_other_edge", scope: !3, file: !3, line: 5116, type: !20301, scopeLine: 5117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20301 = !DISubroutineType(types: !20302)
!20302 = !{!3682, !3678, !3682}
!20303 = !DILocalVariable(name: "v", arg: 1, scope: !20300, file: !3, line: 5116, type: !3678)
!20304 = !DILocation(line: 5116, column: 39, scope: !20300)
!20305 = !DILocalVariable(name: "e", arg: 2, scope: !20300, file: !3, line: 5116, type: !3682)
!20306 = !DILocation(line: 5116, column: 50, scope: !20300)
!20307 = !DILocalVariable(name: "iter", scope: !20300, file: !3, line: 5118, type: !11228)
!20308 = !DILocation(line: 5118, column: 9, scope: !20300)
!20309 = !DILocalVariable(name: "e_iter", scope: !20300, file: !3, line: 5119, type: !3682)
!20310 = !DILocation(line: 5119, column: 10, scope: !20300)
!20311 = !DILocation(line: 5121, column: 2, scope: !20312)
!20312 = distinct !DILexicalBlock(scope: !20300, file: !3, line: 5121, column: 2)
!20313 = !DILocation(line: 5121, column: 2, scope: !20314)
!20314 = distinct !DILexicalBlock(scope: !20312, file: !3, line: 5121, column: 2)
!20315 = !DILocation(line: 5122, column: 7, scope: !20316)
!20316 = distinct !DILexicalBlock(scope: !20317, file: !3, line: 5122, column: 7)
!20317 = distinct !DILexicalBlock(scope: !20314, file: !3, line: 5121, column: 52)
!20318 = !DILocation(line: 5122, column: 49, scope: !20316)
!20319 = !DILocation(line: 5122, column: 52, scope: !20316)
!20320 = !DILocation(line: 5122, column: 62, scope: !20316)
!20321 = !DILocation(line: 5122, column: 59, scope: !20316)
!20322 = !DILocation(line: 5122, column: 7, scope: !20317)
!20323 = !DILocation(line: 5123, column: 11, scope: !20324)
!20324 = distinct !DILexicalBlock(scope: !20316, file: !3, line: 5122, column: 65)
!20325 = !DILocation(line: 5123, column: 4, scope: !20324)
!20326 = !DILocation(line: 5125, column: 2, scope: !20317)
!20327 = distinct !{!20327, !20311, !20328}
!20328 = !DILocation(line: 5125, column: 2, scope: !20312)
!20329 = !DILocation(line: 5127, column: 2, scope: !20300)
!20330 = !DILocation(line: 5128, column: 1, scope: !20300)
!20331 = distinct !DISubprogram(name: "BM_edge_other_vert", scope: !11622, file: !11622, line: 60, type: !20332, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20332 = !DISubroutineType(types: !20333)
!20333 = !{!3678, !3682, !20334}
!20334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20335, size: 64)
!20335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3679)
!20336 = !DILocalVariable(name: "e", arg: 1, scope: !20331, file: !11622, line: 60, type: !3682)
!20337 = !DILocation(line: 60, column: 47, scope: !20331)
!20338 = !DILocalVariable(name: "v", arg: 2, scope: !20331, file: !11622, line: 60, type: !20334)
!20339 = !DILocation(line: 60, column: 64, scope: !20331)
!20340 = !DILocation(line: 62, column: 6, scope: !20341)
!20341 = distinct !DILexicalBlock(scope: !20331, file: !11622, line: 62, column: 6)
!20342 = !DILocation(line: 62, column: 9, scope: !20341)
!20343 = !DILocation(line: 62, column: 15, scope: !20341)
!20344 = !DILocation(line: 62, column: 12, scope: !20341)
!20345 = !DILocation(line: 62, column: 6, scope: !20331)
!20346 = !DILocation(line: 63, column: 10, scope: !20347)
!20347 = distinct !DILexicalBlock(scope: !20341, file: !11622, line: 62, column: 18)
!20348 = !DILocation(line: 63, column: 13, scope: !20347)
!20349 = !DILocation(line: 63, column: 3, scope: !20347)
!20350 = !DILocation(line: 65, column: 11, scope: !20351)
!20351 = distinct !DILexicalBlock(scope: !20341, file: !11622, line: 65, column: 11)
!20352 = !DILocation(line: 65, column: 14, scope: !20351)
!20353 = !DILocation(line: 65, column: 20, scope: !20351)
!20354 = !DILocation(line: 65, column: 17, scope: !20351)
!20355 = !DILocation(line: 65, column: 11, scope: !20341)
!20356 = !DILocation(line: 66, column: 10, scope: !20357)
!20357 = distinct !DILexicalBlock(scope: !20351, file: !11622, line: 65, column: 23)
!20358 = !DILocation(line: 66, column: 13, scope: !20357)
!20359 = !DILocation(line: 66, column: 3, scope: !20357)
!20360 = !DILocation(line: 68, column: 2, scope: !20331)
!20361 = !DILocation(line: 69, column: 1, scope: !20331)
!20362 = distinct !DISubprogram(name: "get_next_loop", scope: !3, file: !3, line: 5202, type: !20363, scopeLine: 5204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20363 = !DISubroutineType(types: !20364)
!20364 = !{!3625, !3678, !3625, !3682, !3682, !1773}
!20365 = !DILocalVariable(name: "v", arg: 1, scope: !20362, file: !3, line: 5202, type: !3678)
!20366 = !DILocation(line: 5202, column: 38, scope: !20362)
!20367 = !DILocalVariable(name: "l", arg: 2, scope: !20362, file: !3, line: 5202, type: !3625)
!20368 = !DILocation(line: 5202, column: 49, scope: !20362)
!20369 = !DILocalVariable(name: "e_prev", arg: 3, scope: !20362, file: !3, line: 5203, type: !3682)
!20370 = !DILocation(line: 5203, column: 38, scope: !20362)
!20371 = !DILocalVariable(name: "e_next", arg: 4, scope: !20362, file: !3, line: 5203, type: !3682)
!20372 = !DILocation(line: 5203, column: 54, scope: !20362)
!20373 = !DILocalVariable(name: "r_slide_vec", arg: 5, scope: !20362, file: !3, line: 5203, type: !1773)
!20374 = !DILocation(line: 5203, column: 68, scope: !20362)
!20375 = !DILocalVariable(name: "l_first", scope: !20362, file: !3, line: 5205, type: !3625)
!20376 = !DILocation(line: 5205, column: 10, scope: !20362)
!20377 = !DILocalVariable(name: "vec_accum", scope: !20362, file: !3, line: 5206, type: !1987)
!20378 = !DILocation(line: 5206, column: 8, scope: !20362)
!20379 = !DILocalVariable(name: "vec_accum_len", scope: !20362, file: !3, line: 5207, type: !1727)
!20380 = !DILocation(line: 5207, column: 8, scope: !20362)
!20381 = !DILocalVariable(name: "i", scope: !20362, file: !3, line: 5208, type: !35)
!20382 = !DILocation(line: 5208, column: 6, scope: !20362)
!20383 = !DILocation(line: 5213, column: 12, scope: !20362)
!20384 = !DILocation(line: 5213, column: 10, scope: !20362)
!20385 = !DILocation(line: 5214, column: 2, scope: !20362)
!20386 = !DILocation(line: 5215, column: 31, scope: !20387)
!20387 = distinct !DILexicalBlock(scope: !20362, file: !3, line: 5214, column: 5)
!20388 = !DILocation(line: 5215, column: 34, scope: !20387)
!20389 = !DILocation(line: 5215, column: 7, scope: !20387)
!20390 = !DILocation(line: 5215, column: 5, scope: !20387)
!20391 = !DILocation(line: 5217, column: 7, scope: !20392)
!20392 = distinct !DILexicalBlock(scope: !20387, file: !3, line: 5217, column: 7)
!20393 = !DILocation(line: 5217, column: 10, scope: !20392)
!20394 = !DILocation(line: 5217, column: 15, scope: !20392)
!20395 = !DILocation(line: 5217, column: 12, scope: !20392)
!20396 = !DILocation(line: 5217, column: 7, scope: !20387)
!20397 = !DILocation(line: 5218, column: 8, scope: !20398)
!20398 = distinct !DILexicalBlock(scope: !20399, file: !3, line: 5218, column: 8)
!20399 = distinct !DILexicalBlock(scope: !20392, file: !3, line: 5217, column: 23)
!20400 = !DILocation(line: 5218, column: 8, scope: !20399)
!20401 = !DILocation(line: 5219, column: 19, scope: !20402)
!20402 = distinct !DILexicalBlock(scope: !20398, file: !3, line: 5218, column: 11)
!20403 = !DILocation(line: 5219, column: 30, scope: !20402)
!20404 = !DILocation(line: 5219, column: 53, scope: !20402)
!20405 = !DILocation(line: 5219, column: 46, scope: !20402)
!20406 = !DILocation(line: 5219, column: 44, scope: !20402)
!20407 = !DILocation(line: 5219, column: 5, scope: !20402)
!20408 = !DILocation(line: 5220, column: 4, scope: !20402)
!20409 = !DILocalVariable(name: "l_tmp", scope: !20410, file: !3, line: 5224, type: !3625)
!20410 = distinct !DILexicalBlock(scope: !20398, file: !3, line: 5221, column: 9)
!20411 = !DILocation(line: 5224, column: 13, scope: !20410)
!20412 = !DILocation(line: 5224, column: 45, scope: !20410)
!20413 = !DILocation(line: 5224, column: 54, scope: !20410)
!20414 = !DILocation(line: 5224, column: 57, scope: !20410)
!20415 = !DILocation(line: 5224, column: 21, scope: !20410)
!20416 = !DILocation(line: 5228, column: 9, scope: !20417)
!20417 = distinct !DILexicalBlock(scope: !20410, file: !3, line: 5228, column: 9)
!20418 = !DILocation(line: 5228, column: 16, scope: !20417)
!20419 = !DILocation(line: 5228, column: 19, scope: !20417)
!20420 = !DILocation(line: 5228, column: 23, scope: !20417)
!20421 = !DILocation(line: 5228, column: 9, scope: !20410)
!20422 = !DILocation(line: 5231, column: 18, scope: !20423)
!20423 = distinct !DILexicalBlock(scope: !20417, file: !3, line: 5228, column: 29)
!20424 = !DILocation(line: 5231, column: 29, scope: !20423)
!20425 = !DILocation(line: 5231, column: 36, scope: !20423)
!20426 = !DILocation(line: 5231, column: 42, scope: !20423)
!20427 = !DILocation(line: 5231, column: 48, scope: !20423)
!20428 = !DILocation(line: 5231, column: 51, scope: !20423)
!20429 = !DILocation(line: 5231, column: 55, scope: !20423)
!20430 = !DILocation(line: 5231, column: 58, scope: !20423)
!20431 = !DILocation(line: 5231, column: 6, scope: !20423)
!20432 = !DILocation(line: 5232, column: 5, scope: !20423)
!20433 = !DILocalVariable(name: "tdir", scope: !20434, file: !3, line: 5234, type: !1987)
!20434 = distinct !DILexicalBlock(scope: !20417, file: !3, line: 5233, column: 10)
!20435 = !DILocation(line: 5234, column: 12, scope: !20434)
!20436 = !DILocation(line: 5235, column: 34, scope: !20434)
!20437 = !DILocation(line: 5235, column: 41, scope: !20434)
!20438 = !DILocation(line: 5235, column: 6, scope: !20434)
!20439 = !DILocation(line: 5236, column: 20, scope: !20434)
!20440 = !DILocation(line: 5236, column: 31, scope: !20434)
!20441 = !DILocation(line: 5236, column: 38, scope: !20434)
!20442 = !DILocation(line: 5236, column: 41, scope: !20434)
!20443 = !DILocation(line: 5236, column: 45, scope: !20434)
!20444 = !DILocation(line: 5236, column: 6, scope: !20434)
!20445 = !DILocalVariable(name: "tvec", scope: !20446, file: !3, line: 5244, type: !1987)
!20446 = distinct !DILexicalBlock(scope: !20434, file: !3, line: 5243, column: 6)
!20447 = !DILocation(line: 5244, column: 13, scope: !20446)
!20448 = !DILocalVariable(name: "dist", scope: !20446, file: !3, line: 5245, type: !1727)
!20449 = !DILocation(line: 5245, column: 13, scope: !20446)
!20450 = !DILocation(line: 5247, column: 36, scope: !20451)
!20451 = distinct !DILexicalBlock(scope: !20446, file: !3, line: 5247, column: 11)
!20452 = !DILocation(line: 5247, column: 43, scope: !20451)
!20453 = !DILocation(line: 5247, column: 49, scope: !20451)
!20454 = !DILocation(line: 5247, column: 11, scope: !20451)
!20455 = !DILocation(line: 5247, column: 11, scope: !20446)
!20456 = !DILocation(line: 5248, column: 24, scope: !20457)
!20457 = distinct !DILexicalBlock(scope: !20451, file: !3, line: 5247, column: 56)
!20458 = !DILocation(line: 5248, column: 31, scope: !20457)
!20459 = !DILocation(line: 5248, column: 34, scope: !20457)
!20460 = !DILocation(line: 5248, column: 38, scope: !20457)
!20461 = !DILocation(line: 5248, column: 15, scope: !20457)
!20462 = !DILocation(line: 5248, column: 13, scope: !20457)
!20463 = !DILocation(line: 5249, column: 7, scope: !20457)
!20464 = !DILocation(line: 5251, column: 36, scope: !20465)
!20465 = distinct !DILexicalBlock(scope: !20451, file: !3, line: 5250, column: 12)
!20466 = !DILocation(line: 5251, column: 16, scope: !20465)
!20467 = !DILocation(line: 5251, column: 66, scope: !20465)
!20468 = !DILocation(line: 5251, column: 46, scope: !20465)
!20469 = !DILocation(line: 5251, column: 44, scope: !20465)
!20470 = !DILocation(line: 5251, column: 75, scope: !20465)
!20471 = !DILocation(line: 5251, column: 13, scope: !20465)
!20472 = !DILocation(line: 5254, column: 21, scope: !20446)
!20473 = !DILocation(line: 5254, column: 32, scope: !20446)
!20474 = !DILocation(line: 5254, column: 7, scope: !20446)
!20475 = !DILocation(line: 5260, column: 15, scope: !20399)
!20476 = !DILocation(line: 5260, column: 28, scope: !20399)
!20477 = !DILocation(line: 5260, column: 4, scope: !20399)
!20478 = !DILocation(line: 5261, column: 11, scope: !20399)
!20479 = !DILocation(line: 5261, column: 4, scope: !20399)
!20480 = !DILocalVariable(name: "tvec", scope: !20481, file: !3, line: 5266, type: !1987)
!20481 = distinct !DILexicalBlock(scope: !20392, file: !3, line: 5263, column: 8)
!20482 = !DILocation(line: 5266, column: 10, scope: !20481)
!20483 = !DILocation(line: 5267, column: 16, scope: !20481)
!20484 = !DILocation(line: 5267, column: 41, scope: !20481)
!20485 = !DILocation(line: 5267, column: 44, scope: !20481)
!20486 = !DILocation(line: 5267, column: 47, scope: !20481)
!20487 = !DILocation(line: 5267, column: 22, scope: !20481)
!20488 = !DILocation(line: 5267, column: 51, scope: !20481)
!20489 = !DILocation(line: 5267, column: 55, scope: !20481)
!20490 = !DILocation(line: 5267, column: 58, scope: !20481)
!20491 = !DILocation(line: 5267, column: 4, scope: !20481)
!20492 = !DILocation(line: 5268, column: 34, scope: !20481)
!20493 = !DILocation(line: 5268, column: 21, scope: !20481)
!20494 = !DILocation(line: 5268, column: 18, scope: !20481)
!20495 = !DILocation(line: 5269, column: 14, scope: !20481)
!20496 = !DILocation(line: 5269, column: 25, scope: !20481)
!20497 = !DILocation(line: 5269, column: 4, scope: !20481)
!20498 = !DILocation(line: 5270, column: 6, scope: !20481)
!20499 = !DILocation(line: 5273, column: 31, scope: !20500)
!20500 = distinct !DILexicalBlock(scope: !20387, file: !3, line: 5273, column: 7)
!20501 = !DILocation(line: 5273, column: 34, scope: !20500)
!20502 = !DILocation(line: 5273, column: 7, scope: !20500)
!20503 = !DILocation(line: 5273, column: 38, scope: !20500)
!20504 = !DILocation(line: 5273, column: 43, scope: !20500)
!20505 = !DILocation(line: 5273, column: 40, scope: !20500)
!20506 = !DILocation(line: 5273, column: 7, scope: !20387)
!20507 = !DILocation(line: 5274, column: 8, scope: !20508)
!20508 = distinct !DILexicalBlock(scope: !20509, file: !3, line: 5274, column: 8)
!20509 = distinct !DILexicalBlock(scope: !20500, file: !3, line: 5273, column: 51)
!20510 = !DILocation(line: 5274, column: 8, scope: !20509)
!20511 = !DILocation(line: 5275, column: 19, scope: !20512)
!20512 = distinct !DILexicalBlock(scope: !20508, file: !3, line: 5274, column: 11)
!20513 = !DILocation(line: 5275, column: 30, scope: !20512)
!20514 = !DILocation(line: 5275, column: 53, scope: !20512)
!20515 = !DILocation(line: 5275, column: 46, scope: !20512)
!20516 = !DILocation(line: 5275, column: 44, scope: !20512)
!20517 = !DILocation(line: 5275, column: 5, scope: !20512)
!20518 = !DILocation(line: 5276, column: 4, scope: !20512)
!20519 = !DILocation(line: 5278, column: 15, scope: !20509)
!20520 = !DILocation(line: 5278, column: 28, scope: !20509)
!20521 = !DILocation(line: 5278, column: 4, scope: !20509)
!20522 = !DILocation(line: 5279, column: 35, scope: !20509)
!20523 = !DILocation(line: 5279, column: 38, scope: !20509)
!20524 = !DILocation(line: 5279, column: 11, scope: !20509)
!20525 = !DILocation(line: 5279, column: 4, scope: !20509)
!20526 = !DILocation(line: 5282, column: 2, scope: !20387)
!20527 = !DILocation(line: 5282, column: 12, scope: !20362)
!20528 = !DILocation(line: 5282, column: 17, scope: !20362)
!20529 = !DILocation(line: 5282, column: 20, scope: !20362)
!20530 = !DILocation(line: 5282, column: 14, scope: !20362)
!20531 = !DILocation(line: 5282, column: 33, scope: !20362)
!20532 = !DILocation(line: 5283, column: 17, scope: !20362)
!20533 = !DILocation(line: 5283, column: 20, scope: !20362)
!20534 = !DILocation(line: 5283, column: 15, scope: !20362)
!20535 = !DILocation(line: 5283, column: 36, scope: !20362)
!20536 = !DILocation(line: 5283, column: 33, scope: !20362)
!20537 = !DILocation(line: 0, scope: !20362)
!20538 = distinct !{!20538, !20385, !20539}
!20539 = !DILocation(line: 5283, column: 44, scope: !20362)
!20540 = !DILocation(line: 5285, column: 6, scope: !20541)
!20541 = distinct !DILexicalBlock(scope: !20362, file: !3, line: 5285, column: 6)
!20542 = !DILocation(line: 5285, column: 6, scope: !20362)
!20543 = !DILocation(line: 5286, column: 17, scope: !20544)
!20544 = distinct !DILexicalBlock(scope: !20541, file: !3, line: 5285, column: 9)
!20545 = !DILocation(line: 5286, column: 28, scope: !20544)
!20546 = !DILocation(line: 5286, column: 51, scope: !20544)
!20547 = !DILocation(line: 5286, column: 44, scope: !20544)
!20548 = !DILocation(line: 5286, column: 42, scope: !20544)
!20549 = !DILocation(line: 5286, column: 3, scope: !20544)
!20550 = !DILocation(line: 5287, column: 2, scope: !20544)
!20551 = !DILocation(line: 5289, column: 13, scope: !20362)
!20552 = !DILocation(line: 5289, column: 26, scope: !20362)
!20553 = !DILocation(line: 5289, column: 2, scope: !20362)
!20554 = !DILocation(line: 5291, column: 2, scope: !20362)
!20555 = !DILocation(line: 5292, column: 1, scope: !20362)
!20556 = distinct !DISubprogram(name: "_bm_elem_index_get", scope: !11598, file: !11598, line: 119, type: !20557, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20557 = !DISubroutineType(types: !20558)
!20558 = !{!35, !11601}
!20559 = !DILocalVariable(name: "head", arg: 1, scope: !20556, file: !11598, line: 119, type: !11601)
!20560 = !DILocation(line: 119, column: 51, scope: !20556)
!20561 = !DILocation(line: 121, column: 9, scope: !20556)
!20562 = !DILocation(line: 121, column: 15, scope: !20556)
!20563 = !DILocation(line: 121, column: 2, scope: !20556)
!20564 = distinct !DISubprogram(name: "len_squared_v2v2", scope: !4885, file: !4885, line: 719, type: !12635, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20565 = !DILocalVariable(name: "a", arg: 1, scope: !20564, file: !4885, line: 719, type: !3980)
!20566 = !DILocation(line: 719, column: 44, scope: !20564)
!20567 = !DILocalVariable(name: "b", arg: 2, scope: !20564, file: !4885, line: 719, type: !3980)
!20568 = !DILocation(line: 719, column: 62, scope: !20564)
!20569 = !DILocalVariable(name: "d", scope: !20564, file: !4885, line: 721, type: !1754)
!20570 = !DILocation(line: 721, column: 8, scope: !20564)
!20571 = !DILocation(line: 723, column: 14, scope: !20564)
!20572 = !DILocation(line: 723, column: 17, scope: !20564)
!20573 = !DILocation(line: 723, column: 20, scope: !20564)
!20574 = !DILocation(line: 723, column: 2, scope: !20564)
!20575 = !DILocation(line: 724, column: 18, scope: !20564)
!20576 = !DILocation(line: 724, column: 21, scope: !20564)
!20577 = !DILocation(line: 724, column: 9, scope: !20564)
!20578 = !DILocation(line: 724, column: 2, scope: !20564)
!20579 = distinct !DISubprogram(name: "len_squared_v2", scope: !4885, file: !4885, line: 666, type: !13151, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20580 = !DILocalVariable(name: "v", arg: 1, scope: !20579, file: !4885, line: 666, type: !3980)
!20581 = !DILocation(line: 666, column: 42, scope: !20579)
!20582 = !DILocation(line: 668, column: 9, scope: !20579)
!20583 = !DILocation(line: 668, column: 16, scope: !20579)
!20584 = !DILocation(line: 668, column: 14, scope: !20579)
!20585 = !DILocation(line: 668, column: 23, scope: !20579)
!20586 = !DILocation(line: 668, column: 30, scope: !20579)
!20587 = !DILocation(line: 668, column: 28, scope: !20579)
!20588 = !DILocation(line: 668, column: 21, scope: !20579)
!20589 = !DILocation(line: 668, column: 2, scope: !20579)
!20590 = distinct !DISubprogram(name: "swap_v3_v3", scope: !4885, file: !4885, line: 223, type: !20591, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20591 = !DISubroutineType(types: !20592)
!20592 = !{null, !1773, !1773}
!20593 = !DILocalVariable(name: "a", arg: 1, scope: !20590, file: !4885, line: 223, type: !1773)
!20594 = !DILocation(line: 223, column: 31, scope: !20590)
!20595 = !DILocalVariable(name: "b", arg: 2, scope: !20590, file: !4885, line: 223, type: !1773)
!20596 = !DILocation(line: 223, column: 43, scope: !20590)
!20597 = !DILocalVariable(name: "sw_ap", scope: !20598, file: !4885, line: 225, type: !1727)
!20598 = distinct !DILexicalBlock(scope: !20590, file: !4885, line: 225, column: 2)
!20599 = !DILocation(line: 225, column: 2, scope: !20598)
!20600 = !DILocalVariable(name: "sw_ap", scope: !20601, file: !4885, line: 226, type: !1727)
!20601 = distinct !DILexicalBlock(scope: !20590, file: !4885, line: 226, column: 2)
!20602 = !DILocation(line: 226, column: 2, scope: !20601)
!20603 = !DILocalVariable(name: "sw_ap", scope: !20604, file: !4885, line: 227, type: !1727)
!20604 = distinct !DILexicalBlock(scope: !20590, file: !4885, line: 227, column: 2)
!20605 = !DILocation(line: 227, column: 2, scope: !20604)
!20606 = !DILocation(line: 228, column: 1, scope: !20590)
!20607 = distinct !DISubprogram(name: "calcNonProportionalEdgeSlide", scope: !3, file: !3, line: 5294, type: !20608, scopeLine: 5295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20608 = !DISubroutineType(types: !20609)
!20609 = !{null, !3841, !3574, !3980}
!20610 = !DILocalVariable(name: "t", arg: 1, scope: !20607, file: !3, line: 5294, type: !3841)
!20611 = !DILocation(line: 5294, column: 53, scope: !20607)
!20612 = !DILocalVariable(name: "sld", arg: 2, scope: !20607, file: !3, line: 5294, type: !3574)
!20613 = !DILocation(line: 5294, column: 71, scope: !20607)
!20614 = !DILocalVariable(name: "mval", arg: 3, scope: !20607, file: !3, line: 5294, type: !3980)
!20615 = !DILocation(line: 5294, column: 88, scope: !20607)
!20616 = !DILocalVariable(name: "sv", scope: !20607, file: !3, line: 5296, type: !3579)
!20617 = !DILocation(line: 5296, column: 26, scope: !20607)
!20618 = !DILocation(line: 5296, column: 31, scope: !20607)
!20619 = !DILocation(line: 5296, column: 36, scope: !20607)
!20620 = !DILocation(line: 5298, column: 6, scope: !20621)
!20621 = distinct !DILexicalBlock(scope: !20607, file: !3, line: 5298, column: 6)
!20622 = !DILocation(line: 5298, column: 11, scope: !20621)
!20623 = !DILocation(line: 5298, column: 17, scope: !20621)
!20624 = !DILocation(line: 5298, column: 6, scope: !20607)
!20625 = !DILocalVariable(name: "ar", scope: !20626, file: !3, line: 5299, type: !8833)
!20626 = distinct !DILexicalBlock(scope: !20621, file: !3, line: 5298, column: 22)
!20627 = !DILocation(line: 5299, column: 12, scope: !20626)
!20628 = !DILocation(line: 5299, column: 17, scope: !20626)
!20629 = !DILocation(line: 5299, column: 20, scope: !20626)
!20630 = !DILocalVariable(name: "rv3d", scope: !20626, file: !3, line: 5300, type: !4453)
!20631 = !DILocation(line: 5300, column: 17, scope: !20626)
!20632 = !DILocalVariable(name: "projectMat", scope: !20626, file: !3, line: 5301, type: !2071)
!20633 = !DILocation(line: 5301, column: 9, scope: !20626)
!20634 = !DILocalVariable(name: "i", scope: !20626, file: !3, line: 5303, type: !35)
!20635 = !DILocation(line: 5303, column: 7, scope: !20626)
!20636 = !DILocalVariable(name: "v_proj", scope: !20626, file: !3, line: 5305, type: !1754)
!20637 = !DILocation(line: 5305, column: 9, scope: !20626)
!20638 = !DILocalVariable(name: "dist_sq", scope: !20626, file: !3, line: 5306, type: !1727)
!20639 = !DILocation(line: 5306, column: 9, scope: !20626)
!20640 = !DILocalVariable(name: "dist_min_sq", scope: !20626, file: !3, line: 5307, type: !1727)
!20641 = !DILocation(line: 5307, column: 9, scope: !20626)
!20642 = !DILocation(line: 5309, column: 7, scope: !20643)
!20643 = distinct !DILexicalBlock(scope: !20626, file: !3, line: 5309, column: 7)
!20644 = !DILocation(line: 5309, column: 10, scope: !20643)
!20645 = !DILocation(line: 5309, column: 20, scope: !20643)
!20646 = !DILocation(line: 5309, column: 7, scope: !20626)
!20647 = !DILocation(line: 5311, column: 11, scope: !20648)
!20648 = distinct !DILexicalBlock(scope: !20643, file: !3, line: 5309, column: 37)
!20649 = !DILocation(line: 5311, column: 14, scope: !20648)
!20650 = !DILocation(line: 5311, column: 19, scope: !20648)
!20651 = !DILocation(line: 5311, column: 22, scope: !20648)
!20652 = !DILocation(line: 5311, column: 26, scope: !20648)
!20653 = !DILocation(line: 5311, column: 9, scope: !20648)
!20654 = !DILocation(line: 5312, column: 3, scope: !20648)
!20655 = !DILocation(line: 5314, column: 8, scope: !20656)
!20656 = distinct !DILexicalBlock(scope: !20626, file: !3, line: 5314, column: 7)
!20657 = !DILocation(line: 5314, column: 7, scope: !20626)
!20658 = !DILocation(line: 5316, column: 12, scope: !20659)
!20659 = distinct !DILexicalBlock(scope: !20656, file: !3, line: 5314, column: 14)
!20660 = !DILocation(line: 5316, column: 4, scope: !20659)
!20661 = !DILocation(line: 5317, column: 3, scope: !20659)
!20662 = !DILocation(line: 5319, column: 33, scope: !20663)
!20663 = distinct !DILexicalBlock(scope: !20656, file: !3, line: 5318, column: 8)
!20664 = !DILocation(line: 5319, column: 39, scope: !20663)
!20665 = !DILocation(line: 5319, column: 42, scope: !20663)
!20666 = !DILocation(line: 5319, column: 50, scope: !20663)
!20667 = !DILocation(line: 5319, column: 4, scope: !20663)
!20668 = !DILocation(line: 5322, column: 10, scope: !20669)
!20669 = distinct !DILexicalBlock(scope: !20626, file: !3, line: 5322, column: 3)
!20670 = !DILocation(line: 5322, column: 8, scope: !20669)
!20671 = !DILocation(line: 5322, column: 15, scope: !20672)
!20672 = distinct !DILexicalBlock(scope: !20669, file: !3, line: 5322, column: 3)
!20673 = !DILocation(line: 5322, column: 19, scope: !20672)
!20674 = !DILocation(line: 5322, column: 24, scope: !20672)
!20675 = !DILocation(line: 5322, column: 17, scope: !20672)
!20676 = !DILocation(line: 5322, column: 3, scope: !20669)
!20677 = !DILocation(line: 5324, column: 28, scope: !20678)
!20678 = distinct !DILexicalBlock(scope: !20672, file: !3, line: 5322, column: 42)
!20679 = !DILocation(line: 5324, column: 32, scope: !20678)
!20680 = !DILocation(line: 5324, column: 39, scope: !20678)
!20681 = !DILocation(line: 5324, column: 43, scope: !20678)
!20682 = !DILocation(line: 5324, column: 19, scope: !20678)
!20683 = !DILocation(line: 5324, column: 4, scope: !20678)
!20684 = !DILocation(line: 5324, column: 8, scope: !20678)
!20685 = !DILocation(line: 5324, column: 17, scope: !20678)
!20686 = !DILocation(line: 5326, column: 34, scope: !20678)
!20687 = !DILocation(line: 5326, column: 38, scope: !20678)
!20688 = !DILocation(line: 5326, column: 42, scope: !20678)
!20689 = !DILocation(line: 5326, column: 45, scope: !20678)
!20690 = !DILocation(line: 5326, column: 49, scope: !20678)
!20691 = !DILocation(line: 5326, column: 57, scope: !20678)
!20692 = !DILocation(line: 5326, column: 4, scope: !20678)
!20693 = !DILocation(line: 5327, column: 31, scope: !20678)
!20694 = !DILocation(line: 5327, column: 37, scope: !20678)
!20695 = !DILocation(line: 5327, column: 14, scope: !20678)
!20696 = !DILocation(line: 5327, column: 12, scope: !20678)
!20697 = !DILocation(line: 5328, column: 8, scope: !20698)
!20698 = distinct !DILexicalBlock(scope: !20678, file: !3, line: 5328, column: 8)
!20699 = !DILocation(line: 5328, column: 18, scope: !20698)
!20700 = !DILocation(line: 5328, column: 16, scope: !20698)
!20701 = !DILocation(line: 5328, column: 8, scope: !20678)
!20702 = !DILocation(line: 5329, column: 19, scope: !20703)
!20703 = distinct !DILexicalBlock(scope: !20698, file: !3, line: 5328, column: 31)
!20704 = !DILocation(line: 5329, column: 17, scope: !20703)
!20705 = !DILocation(line: 5330, column: 26, scope: !20703)
!20706 = !DILocation(line: 5330, column: 5, scope: !20703)
!20707 = !DILocation(line: 5330, column: 10, scope: !20703)
!20708 = !DILocation(line: 5330, column: 24, scope: !20703)
!20709 = !DILocation(line: 5331, column: 4, scope: !20703)
!20710 = !DILocation(line: 5332, column: 3, scope: !20678)
!20711 = !DILocation(line: 5322, column: 32, scope: !20672)
!20712 = !DILocation(line: 5322, column: 38, scope: !20672)
!20713 = !DILocation(line: 5322, column: 3, scope: !20672)
!20714 = distinct !{!20714, !20676, !20715}
!20715 = !DILocation(line: 5332, column: 3, scope: !20669)
!20716 = !DILocation(line: 5333, column: 2, scope: !20626)
!20717 = !DILocation(line: 5335, column: 3, scope: !20718)
!20718 = distinct !DILexicalBlock(scope: !20621, file: !3, line: 5334, column: 7)
!20719 = !DILocation(line: 5335, column: 8, scope: !20718)
!20720 = !DILocation(line: 5335, column: 22, scope: !20718)
!20721 = !DILocation(line: 5337, column: 1, scope: !20607)
!20722 = distinct !DISubprogram(name: "zero_v2", scope: !4885, file: !4885, line: 37, type: !4886, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20723 = !DILocalVariable(name: "r", arg: 1, scope: !20722, file: !4885, line: 37, type: !1773)
!20724 = !DILocation(line: 37, column: 28, scope: !20722)
!20725 = !DILocation(line: 39, column: 2, scope: !20722)
!20726 = !DILocation(line: 39, column: 7, scope: !20722)
!20727 = !DILocation(line: 40, column: 2, scope: !20722)
!20728 = !DILocation(line: 40, column: 7, scope: !20722)
!20729 = !DILocation(line: 41, column: 1, scope: !20722)
!20730 = distinct !DISubprogram(name: "mul_v2_fl", scope: !4885, file: !4885, line: 380, type: !12290, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20731 = !DILocalVariable(name: "r", arg: 1, scope: !20730, file: !4885, line: 380, type: !1773)
!20732 = !DILocation(line: 380, column: 30, scope: !20730)
!20733 = !DILocalVariable(name: "f", arg: 2, scope: !20730, file: !4885, line: 380, type: !1727)
!20734 = !DILocation(line: 380, column: 42, scope: !20730)
!20735 = !DILocation(line: 382, column: 10, scope: !20730)
!20736 = !DILocation(line: 382, column: 2, scope: !20730)
!20737 = !DILocation(line: 382, column: 7, scope: !20730)
!20738 = !DILocation(line: 383, column: 10, scope: !20730)
!20739 = !DILocation(line: 383, column: 2, scope: !20730)
!20740 = !DILocation(line: 383, column: 7, scope: !20730)
!20741 = !DILocation(line: 384, column: 1, scope: !20730)
!20742 = distinct !DISubprogram(name: "len_v3_ensure", scope: !3, file: !3, line: 5150, type: !20743, scopeLine: 5151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20743 = !DISubroutineType(types: !20744)
!20744 = !{null, !1773, !3981}
!20745 = !DILocalVariable(name: "v", arg: 1, scope: !20742, file: !3, line: 5150, type: !1773)
!20746 = !DILocation(line: 5150, column: 33, scope: !20742)
!20747 = !DILocalVariable(name: "length", arg: 2, scope: !20742, file: !3, line: 5150, type: !3981)
!20748 = !DILocation(line: 5150, column: 51, scope: !20742)
!20749 = !DILocation(line: 5152, column: 15, scope: !20742)
!20750 = !DILocation(line: 5152, column: 2, scope: !20742)
!20751 = !DILocation(line: 5153, column: 12, scope: !20742)
!20752 = !DILocation(line: 5153, column: 15, scope: !20742)
!20753 = !DILocation(line: 5153, column: 2, scope: !20742)
!20754 = !DILocation(line: 5154, column: 1, scope: !20742)
!20755 = distinct !DISubprogram(name: "bm_loop_calc_opposite_co", scope: !3, file: !3, line: 5160, type: !20756, scopeLine: 5163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20756 = !DISubroutineType(types: !20757)
!20757 = !{!2769, !3625, !3980, !1773}
!20758 = !DILocalVariable(name: "l_tmp", arg: 1, scope: !20755, file: !3, line: 5160, type: !3625)
!20759 = !DILocation(line: 5160, column: 46, scope: !20755)
!20760 = !DILocalVariable(name: "plane_no", arg: 2, scope: !20755, file: !3, line: 5161, type: !3980)
!20761 = !DILocation(line: 5161, column: 50, scope: !20755)
!20762 = !DILocalVariable(name: "r_co", arg: 3, scope: !20755, file: !3, line: 5162, type: !1773)
!20763 = !DILocation(line: 5162, column: 44, scope: !20755)
!20764 = !DILocalVariable(name: "l_first", scope: !20755, file: !3, line: 5165, type: !3625)
!20765 = !DILocation(line: 5165, column: 10, scope: !20755)
!20766 = !DILocation(line: 5165, column: 20, scope: !20755)
!20767 = !DILocation(line: 5165, column: 27, scope: !20755)
!20768 = !DILocalVariable(name: "l_last", scope: !20755, file: !3, line: 5166, type: !3625)
!20769 = !DILocation(line: 5166, column: 10, scope: !20755)
!20770 = !DILocation(line: 5166, column: 20, scope: !20755)
!20771 = !DILocation(line: 5166, column: 27, scope: !20755)
!20772 = !DILocalVariable(name: "l_iter", scope: !20755, file: !3, line: 5167, type: !3625)
!20773 = !DILocation(line: 5167, column: 10, scope: !20755)
!20774 = !DILocalVariable(name: "dist", scope: !20755, file: !3, line: 5168, type: !1727)
!20775 = !DILocation(line: 5168, column: 8, scope: !20755)
!20776 = !DILocation(line: 5170, column: 11, scope: !20755)
!20777 = !DILocation(line: 5170, column: 9, scope: !20755)
!20778 = !DILocation(line: 5171, column: 2, scope: !20755)
!20779 = !DILocalVariable(name: "tvec", scope: !20780, file: !3, line: 5172, type: !1987)
!20780 = distinct !DILexicalBlock(scope: !20755, file: !3, line: 5171, column: 5)
!20781 = !DILocation(line: 5172, column: 9, scope: !20780)
!20782 = !DILocation(line: 5173, column: 27, scope: !20783)
!20783 = distinct !DILexicalBlock(scope: !20780, file: !3, line: 5173, column: 7)
!20784 = !DILocation(line: 5174, column: 27, scope: !20783)
!20785 = !DILocation(line: 5174, column: 35, scope: !20783)
!20786 = !DILocation(line: 5174, column: 38, scope: !20783)
!20787 = !DILocation(line: 5174, column: 42, scope: !20783)
!20788 = !DILocation(line: 5174, column: 50, scope: !20783)
!20789 = !DILocation(line: 5174, column: 56, scope: !20783)
!20790 = !DILocation(line: 5174, column: 59, scope: !20783)
!20791 = !DILocation(line: 5175, column: 27, scope: !20783)
!20792 = !DILocation(line: 5175, column: 34, scope: !20783)
!20793 = !DILocation(line: 5175, column: 37, scope: !20783)
!20794 = !DILocation(line: 5175, column: 41, scope: !20783)
!20795 = !DILocation(line: 5173, column: 7, scope: !20783)
!20796 = !DILocation(line: 5173, column: 7, scope: !20780)
!20797 = !DILocalVariable(name: "fac", scope: !20798, file: !3, line: 5177, type: !3981)
!20798 = distinct !DILexicalBlock(scope: !20783, file: !3, line: 5176, column: 3)
!20799 = !DILocation(line: 5177, column: 16, scope: !20798)
!20800 = !DILocation(line: 5177, column: 43, scope: !20798)
!20801 = !DILocation(line: 5177, column: 49, scope: !20798)
!20802 = !DILocation(line: 5177, column: 57, scope: !20798)
!20803 = !DILocation(line: 5177, column: 60, scope: !20798)
!20804 = !DILocation(line: 5177, column: 64, scope: !20798)
!20805 = !DILocation(line: 5177, column: 72, scope: !20798)
!20806 = !DILocation(line: 5177, column: 78, scope: !20798)
!20807 = !DILocation(line: 5177, column: 81, scope: !20798)
!20808 = !DILocation(line: 5177, column: 22, scope: !20798)
!20809 = !DILocation(line: 5179, column: 9, scope: !20810)
!20810 = distinct !DILexicalBlock(scope: !20798, file: !3, line: 5179, column: 8)
!20811 = !DILocation(line: 5179, column: 13, scope: !20810)
!20812 = !DILocation(line: 5179, column: 29, scope: !20810)
!20813 = !DILocation(line: 5179, column: 33, scope: !20810)
!20814 = !DILocation(line: 5179, column: 37, scope: !20810)
!20815 = !DILocation(line: 5179, column: 8, scope: !20798)
!20816 = !DILocalVariable(name: "tdist", scope: !20817, file: !3, line: 5183, type: !3981)
!20817 = distinct !DILexicalBlock(scope: !20810, file: !3, line: 5179, column: 60)
!20818 = !DILocation(line: 5183, column: 17, scope: !20817)
!20819 = !DILocation(line: 5183, column: 34, scope: !20817)
!20820 = !DILocation(line: 5183, column: 41, scope: !20817)
!20821 = !DILocation(line: 5183, column: 44, scope: !20817)
!20822 = !DILocation(line: 5183, column: 48, scope: !20817)
!20823 = !DILocation(line: 5183, column: 25, scope: !20817)
!20824 = !DILocation(line: 5184, column: 9, scope: !20825)
!20825 = distinct !DILexicalBlock(scope: !20817, file: !3, line: 5184, column: 9)
!20826 = !DILocation(line: 5184, column: 17, scope: !20825)
!20827 = !DILocation(line: 5184, column: 15, scope: !20825)
!20828 = !DILocation(line: 5184, column: 9, scope: !20817)
!20829 = !DILocation(line: 5185, column: 17, scope: !20830)
!20830 = distinct !DILexicalBlock(scope: !20825, file: !3, line: 5184, column: 23)
!20831 = !DILocation(line: 5185, column: 23, scope: !20830)
!20832 = !DILocation(line: 5185, column: 6, scope: !20830)
!20833 = !DILocation(line: 5186, column: 13, scope: !20830)
!20834 = !DILocation(line: 5186, column: 11, scope: !20830)
!20835 = !DILocation(line: 5187, column: 5, scope: !20830)
!20836 = !DILocation(line: 5188, column: 4, scope: !20817)
!20837 = !DILocation(line: 5189, column: 3, scope: !20798)
!20838 = !DILocation(line: 5190, column: 2, scope: !20780)
!20839 = !DILocation(line: 5190, column: 21, scope: !20755)
!20840 = !DILocation(line: 5190, column: 29, scope: !20755)
!20841 = !DILocation(line: 5190, column: 19, scope: !20755)
!20842 = !DILocation(line: 5190, column: 38, scope: !20755)
!20843 = !DILocation(line: 5190, column: 35, scope: !20755)
!20844 = distinct !{!20844, !20778, !20845}
!20845 = !DILocation(line: 5190, column: 44, scope: !20755)
!20846 = !DILocation(line: 5192, column: 10, scope: !20755)
!20847 = !DILocation(line: 5192, column: 15, scope: !20755)
!20848 = !DILocation(line: 5192, column: 9, scope: !20755)
!20849 = !DILocation(line: 5192, column: 2, scope: !20755)
!20850 = distinct !DISubprogram(name: "sub_v2_v2v2", scope: !4885, file: !4885, line: 338, type: !12181, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20851 = !DILocalVariable(name: "r", arg: 1, scope: !20850, file: !4885, line: 338, type: !1773)
!20852 = !DILocation(line: 338, column: 32, scope: !20850)
!20853 = !DILocalVariable(name: "a", arg: 2, scope: !20850, file: !4885, line: 338, type: !3980)
!20854 = !DILocation(line: 338, column: 50, scope: !20850)
!20855 = !DILocalVariable(name: "b", arg: 3, scope: !20850, file: !4885, line: 338, type: !3980)
!20856 = !DILocation(line: 338, column: 68, scope: !20850)
!20857 = !DILocation(line: 340, column: 9, scope: !20850)
!20858 = !DILocation(line: 340, column: 16, scope: !20850)
!20859 = !DILocation(line: 340, column: 14, scope: !20850)
!20860 = !DILocation(line: 340, column: 2, scope: !20850)
!20861 = !DILocation(line: 340, column: 7, scope: !20850)
!20862 = !DILocation(line: 341, column: 9, scope: !20850)
!20863 = !DILocation(line: 341, column: 16, scope: !20850)
!20864 = !DILocation(line: 341, column: 14, scope: !20850)
!20865 = !DILocation(line: 341, column: 2, scope: !20850)
!20866 = !DILocation(line: 341, column: 7, scope: !20850)
!20867 = !DILocation(line: 342, column: 1, scope: !20850)
!20868 = distinct !DISubprogram(name: "dot_v2v2", scope: !4885, file: !4885, line: 614, type: !12635, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20869 = !DILocalVariable(name: "a", arg: 1, scope: !20868, file: !4885, line: 614, type: !3980)
!20870 = !DILocation(line: 614, column: 36, scope: !20868)
!20871 = !DILocalVariable(name: "b", arg: 2, scope: !20868, file: !4885, line: 614, type: !3980)
!20872 = !DILocation(line: 614, column: 54, scope: !20868)
!20873 = !DILocation(line: 616, column: 9, scope: !20868)
!20874 = !DILocation(line: 616, column: 16, scope: !20868)
!20875 = !DILocation(line: 616, column: 14, scope: !20868)
!20876 = !DILocation(line: 616, column: 23, scope: !20868)
!20877 = !DILocation(line: 616, column: 30, scope: !20868)
!20878 = !DILocation(line: 616, column: 28, scope: !20868)
!20879 = !DILocation(line: 616, column: 21, scope: !20868)
!20880 = !DILocation(line: 616, column: 2, scope: !20868)
!20881 = distinct !DISubprogram(name: "applyVertSlide", scope: !3, file: !3, line: 6752, type: !12679, scopeLine: 6753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!20882 = !DILocalVariable(name: "t", arg: 1, scope: !20881, file: !3, line: 6752, type: !3841)
!20883 = !DILocation(line: 6752, column: 39, scope: !20881)
!20884 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !20881, file: !3, line: 6752, type: !3857)
!20885 = !DILocation(line: 6752, column: 52, scope: !20881)
!20886 = !DILocalVariable(name: "str", scope: !20881, file: !3, line: 6754, type: !2366)
!20887 = !DILocation(line: 6754, column: 7, scope: !20881)
!20888 = !DILocalVariable(name: "ofs", scope: !20881, file: !3, line: 6755, type: !13646)
!20889 = !DILocation(line: 6755, column: 9, scope: !20881)
!20890 = !DILocalVariable(name: "final", scope: !20881, file: !3, line: 6756, type: !1727)
!20891 = !DILocation(line: 6756, column: 8, scope: !20881)
!20892 = !DILocalVariable(name: "sld", scope: !20881, file: !3, line: 6757, type: !3817)
!20893 = !DILocation(line: 6757, column: 17, scope: !20881)
!20894 = !DILocation(line: 6757, column: 24, scope: !20881)
!20895 = !DILocation(line: 6757, column: 27, scope: !20881)
!20896 = !DILocalVariable(name: "flipped", scope: !20881, file: !3, line: 6758, type: !12045)
!20897 = !DILocation(line: 6758, column: 13, scope: !20881)
!20898 = !DILocation(line: 6758, column: 23, scope: !20881)
!20899 = !DILocation(line: 6758, column: 28, scope: !20881)
!20900 = !DILocalVariable(name: "is_proportional", scope: !20881, file: !3, line: 6759, type: !12045)
!20901 = !DILocation(line: 6759, column: 13, scope: !20881)
!20902 = !DILocation(line: 6759, column: 31, scope: !20881)
!20903 = !DILocation(line: 6759, column: 36, scope: !20881)
!20904 = !DILocalVariable(name: "is_clamp", scope: !20881, file: !3, line: 6760, type: !12045)
!20905 = !DILocation(line: 6760, column: 13, scope: !20881)
!20906 = !DILocation(line: 6760, column: 26, scope: !20881)
!20907 = !DILocation(line: 6760, column: 29, scope: !20881)
!20908 = !DILocation(line: 6760, column: 34, scope: !20881)
!20909 = !DILocation(line: 6760, column: 24, scope: !20881)
!20910 = !DILocalVariable(name: "is_constrained", scope: !20881, file: !3, line: 6761, type: !12045)
!20911 = !DILocation(line: 6761, column: 13, scope: !20881)
!20912 = !DILocation(line: 6761, column: 32, scope: !20881)
!20913 = !DILocation(line: 6761, column: 41, scope: !20881)
!20914 = !DILocation(line: 6761, column: 50, scope: !20881)
!20915 = !DILocation(line: 6761, column: 66, scope: !20881)
!20916 = !DILocation(line: 6761, column: 69, scope: !20881)
!20917 = !DILocation(line: 6761, column: 53, scope: !20881)
!20918 = !DILocation(line: 6761, column: 30, scope: !20881)
!20919 = !DILocation(line: 6763, column: 10, scope: !20881)
!20920 = !DILocation(line: 6763, column: 13, scope: !20881)
!20921 = !DILocation(line: 6763, column: 8, scope: !20881)
!20922 = !DILocation(line: 6765, column: 20, scope: !20881)
!20923 = !DILocation(line: 6765, column: 2, scope: !20881)
!20924 = !DILocation(line: 6768, column: 6, scope: !20925)
!20925 = distinct !DILexicalBlock(scope: !20881, file: !3, line: 6768, column: 6)
!20926 = !DILocation(line: 6768, column: 6, scope: !20881)
!20927 = !DILocation(line: 6769, column: 3, scope: !20928)
!20928 = distinct !DILexicalBlock(scope: !20929, file: !3, line: 6769, column: 3)
!20929 = distinct !DILexicalBlock(scope: !20930, file: !3, line: 6769, column: 3)
!20930 = distinct !DILexicalBlock(scope: !20925, file: !3, line: 6768, column: 22)
!20931 = !DILocation(line: 6769, column: 3, scope: !20929)
!20932 = !DILocation(line: 6769, column: 3, scope: !20933)
!20933 = distinct !DILexicalBlock(scope: !20928, file: !3, line: 6769, column: 3)
!20934 = !DILocation(line: 6770, column: 2, scope: !20930)
!20935 = !DILocation(line: 6772, column: 17, scope: !20881)
!20936 = !DILocation(line: 6772, column: 20, scope: !20881)
!20937 = !DILocation(line: 6772, column: 2, scope: !20881)
!20938 = !DILocation(line: 6775, column: 26, scope: !20881)
!20939 = !DILocation(line: 6775, column: 32, scope: !20881)
!20940 = !DILocation(line: 6775, column: 30, scope: !20881)
!20941 = !DILocation(line: 6775, column: 76, scope: !20881)
!20942 = !DILocation(line: 6775, column: 74, scope: !20881)
!20943 = !DILocation(line: 6775, column: 9, scope: !20881)
!20944 = !DILocation(line: 6775, column: 6, scope: !20881)
!20945 = !DILocation(line: 6776, column: 19, scope: !20946)
!20946 = distinct !DILexicalBlock(scope: !20881, file: !3, line: 6776, column: 6)
!20947 = !DILocation(line: 6776, column: 22, scope: !20946)
!20948 = !DILocation(line: 6776, column: 6, scope: !20946)
!20949 = !DILocation(line: 6776, column: 6, scope: !20881)
!20950 = !DILocalVariable(name: "c", scope: !20951, file: !3, line: 6777, type: !22)
!20951 = distinct !DILexicalBlock(scope: !20946, file: !3, line: 6776, column: 28)
!20952 = !DILocation(line: 6777, column: 8, scope: !20951)
!20953 = !DILocation(line: 6778, column: 20, scope: !20951)
!20954 = !DILocation(line: 6778, column: 23, scope: !20951)
!20955 = !DILocation(line: 6778, column: 29, scope: !20951)
!20956 = !DILocation(line: 6778, column: 33, scope: !20951)
!20957 = !DILocation(line: 6778, column: 36, scope: !20951)
!20958 = !DILocation(line: 6778, column: 43, scope: !20951)
!20959 = !DILocation(line: 6778, column: 3, scope: !20951)
!20960 = !DILocation(line: 6779, column: 27, scope: !20951)
!20961 = !DILocation(line: 6779, column: 33, scope: !20951)
!20962 = !DILocation(line: 6779, column: 31, scope: !20951)
!20963 = !DILocation(line: 6779, column: 39, scope: !20951)
!20964 = !DILocation(line: 6779, column: 60, scope: !20951)
!20965 = !DILocation(line: 6779, column: 58, scope: !20951)
!20966 = !DILocation(line: 6779, column: 10, scope: !20951)
!20967 = !DILocation(line: 6779, column: 7, scope: !20951)
!20968 = !DILocation(line: 6780, column: 2, scope: !20951)
!20969 = !DILocation(line: 6782, column: 23, scope: !20970)
!20970 = distinct !DILexicalBlock(scope: !20946, file: !3, line: 6781, column: 7)
!20971 = !DILocation(line: 6782, column: 29, scope: !20970)
!20972 = !DILocation(line: 6782, column: 27, scope: !20970)
!20973 = !DILocation(line: 6782, column: 49, scope: !20970)
!20974 = !DILocation(line: 6782, column: 47, scope: !20970)
!20975 = !DILocation(line: 6782, column: 63, scope: !20970)
!20976 = !DILocation(line: 6782, column: 10, scope: !20970)
!20977 = !DILocation(line: 6782, column: 7, scope: !20970)
!20978 = !DILocation(line: 6784, column: 22, scope: !20881)
!20979 = !DILocation(line: 6784, column: 28, scope: !20881)
!20980 = !DILocation(line: 6784, column: 26, scope: !20881)
!20981 = !DILocation(line: 6784, column: 48, scope: !20881)
!20982 = !DILocation(line: 6784, column: 46, scope: !20881)
!20983 = !DILocation(line: 6784, column: 96, scope: !20881)
!20984 = !DILocation(line: 6784, column: 95, scope: !20881)
!20985 = !DILocation(line: 6784, column: 77, scope: !20881)
!20986 = !DILocation(line: 6784, column: 9, scope: !20881)
!20987 = !DILocation(line: 6784, column: 6, scope: !20881)
!20988 = !DILocation(line: 6785, column: 7, scope: !20989)
!20989 = distinct !DILexicalBlock(scope: !20881, file: !3, line: 6785, column: 6)
!20990 = !DILocation(line: 6785, column: 6, scope: !20881)
!20991 = !DILocation(line: 6786, column: 23, scope: !20992)
!20992 = distinct !DILexicalBlock(scope: !20989, file: !3, line: 6785, column: 24)
!20993 = !DILocation(line: 6786, column: 29, scope: !20992)
!20994 = !DILocation(line: 6786, column: 27, scope: !20992)
!20995 = !DILocation(line: 6786, column: 49, scope: !20992)
!20996 = !DILocation(line: 6786, column: 47, scope: !20992)
!20997 = !DILocation(line: 6786, column: 99, scope: !20992)
!20998 = !DILocation(line: 6786, column: 81, scope: !20992)
!20999 = !DILocation(line: 6786, column: 10, scope: !20992)
!21000 = !DILocation(line: 6786, column: 7, scope: !20992)
!21001 = !DILocation(line: 6787, column: 2, scope: !20992)
!21002 = !DILocation(line: 6788, column: 22, scope: !20881)
!21003 = !DILocation(line: 6788, column: 28, scope: !20881)
!21004 = !DILocation(line: 6788, column: 26, scope: !20881)
!21005 = !DILocation(line: 6788, column: 48, scope: !20881)
!21006 = !DILocation(line: 6788, column: 46, scope: !20881)
!21007 = !DILocation(line: 6788, column: 101, scope: !20881)
!21008 = !DILocation(line: 6788, column: 83, scope: !20881)
!21009 = !DILocation(line: 6788, column: 9, scope: !20881)
!21010 = !DILocation(line: 6788, column: 6, scope: !20881)
!21011 = !DILocation(line: 6792, column: 14, scope: !20881)
!21012 = !DILocation(line: 6792, column: 17, scope: !20881)
!21013 = !DILocation(line: 6792, column: 2, scope: !20881)
!21014 = !DILocation(line: 6794, column: 13, scope: !20881)
!21015 = !DILocation(line: 6794, column: 2, scope: !20881)
!21016 = !DILocation(line: 6796, column: 22, scope: !20881)
!21017 = !DILocation(line: 6796, column: 25, scope: !20881)
!21018 = !DILocation(line: 6796, column: 29, scope: !20881)
!21019 = !DILocation(line: 6796, column: 2, scope: !20881)
!21020 = !DILocation(line: 6797, column: 1, scope: !20881)
!21021 = distinct !DISubprogram(name: "handleEventVertSlide", scope: !3, file: !3, line: 6568, type: !3861, scopeLine: 6569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!21022 = !DILocalVariable(name: "t", arg: 1, scope: !21021, file: !3, line: 6568, type: !3856)
!21023 = !DILocation(line: 6568, column: 59, scope: !21021)
!21024 = !DILocalVariable(name: "event", arg: 2, scope: !21021, file: !3, line: 6568, type: !3864)
!21025 = !DILocation(line: 6568, column: 84, scope: !21021)
!21026 = !DILocation(line: 6570, column: 6, scope: !21027)
!21027 = distinct !DILexicalBlock(scope: !21021, file: !3, line: 6570, column: 6)
!21028 = !DILocation(line: 6570, column: 9, scope: !21027)
!21029 = !DILocation(line: 6570, column: 14, scope: !21027)
!21030 = !DILocation(line: 6570, column: 6, scope: !21021)
!21031 = !DILocalVariable(name: "sld", scope: !21032, file: !3, line: 6571, type: !3817)
!21032 = distinct !DILexicalBlock(scope: !21027, file: !3, line: 6570, column: 33)
!21033 = !DILocation(line: 6571, column: 18, scope: !21032)
!21034 = !DILocation(line: 6571, column: 24, scope: !21032)
!21035 = !DILocation(line: 6571, column: 27, scope: !21032)
!21036 = !DILocation(line: 6573, column: 7, scope: !21037)
!21037 = distinct !DILexicalBlock(scope: !21032, file: !3, line: 6573, column: 7)
!21038 = !DILocation(line: 6573, column: 7, scope: !21032)
!21039 = !DILocation(line: 6574, column: 12, scope: !21040)
!21040 = distinct !DILexicalBlock(scope: !21037, file: !3, line: 6573, column: 12)
!21041 = !DILocation(line: 6574, column: 19, scope: !21040)
!21042 = !DILocation(line: 6574, column: 4, scope: !21040)
!21043 = !DILocation(line: 6576, column: 10, scope: !21044)
!21044 = distinct !DILexicalBlock(scope: !21045, file: !3, line: 6576, column: 10)
!21045 = distinct !DILexicalBlock(scope: !21040, file: !3, line: 6574, column: 25)
!21046 = !DILocation(line: 6576, column: 17, scope: !21044)
!21047 = !DILocation(line: 6576, column: 21, scope: !21044)
!21048 = !DILocation(line: 6576, column: 10, scope: !21045)
!21049 = !DILocation(line: 6577, column: 31, scope: !21050)
!21050 = distinct !DILexicalBlock(scope: !21044, file: !3, line: 6576, column: 34)
!21051 = !DILocation(line: 6577, column: 36, scope: !21050)
!21052 = !DILocation(line: 6577, column: 30, scope: !21050)
!21053 = !DILocation(line: 6577, column: 7, scope: !21050)
!21054 = !DILocation(line: 6577, column: 12, scope: !21050)
!21055 = !DILocation(line: 6577, column: 28, scope: !21050)
!21056 = !DILocation(line: 6578, column: 11, scope: !21057)
!21057 = distinct !DILexicalBlock(scope: !21050, file: !3, line: 6578, column: 11)
!21058 = !DILocation(line: 6578, column: 16, scope: !21057)
!21059 = !DILocation(line: 6578, column: 11, scope: !21050)
!21060 = !DILocation(line: 6579, column: 34, scope: !21061)
!21061 = distinct !DILexicalBlock(scope: !21057, file: !3, line: 6578, column: 29)
!21062 = !DILocation(line: 6579, column: 8, scope: !21061)
!21063 = !DILocation(line: 6580, column: 7, scope: !21061)
!21064 = !DILocation(line: 6581, column: 7, scope: !21050)
!21065 = !DILocation(line: 6583, column: 6, scope: !21045)
!21066 = !DILocation(line: 6586, column: 10, scope: !21067)
!21067 = distinct !DILexicalBlock(scope: !21068, file: !3, line: 6586, column: 10)
!21068 = distinct !DILexicalBlock(scope: !21045, file: !3, line: 6585, column: 5)
!21069 = !DILocation(line: 6586, column: 17, scope: !21067)
!21070 = !DILocation(line: 6586, column: 21, scope: !21067)
!21071 = !DILocation(line: 6586, column: 10, scope: !21068)
!21072 = !DILocation(line: 6587, column: 27, scope: !21073)
!21073 = distinct !DILexicalBlock(scope: !21067, file: !3, line: 6586, column: 34)
!21074 = !DILocation(line: 6587, column: 32, scope: !21073)
!21075 = !DILocation(line: 6587, column: 26, scope: !21073)
!21076 = !DILocation(line: 6587, column: 7, scope: !21073)
!21077 = !DILocation(line: 6587, column: 12, scope: !21073)
!21078 = !DILocation(line: 6587, column: 24, scope: !21073)
!21079 = !DILocation(line: 6588, column: 33, scope: !21073)
!21080 = !DILocation(line: 6588, column: 7, scope: !21073)
!21081 = !DILocation(line: 6589, column: 7, scope: !21073)
!21082 = !DILocation(line: 6591, column: 6, scope: !21068)
!21083 = !DILocation(line: 6596, column: 10, scope: !21084)
!21084 = distinct !DILexicalBlock(scope: !21085, file: !3, line: 6596, column: 10)
!21085 = distinct !DILexicalBlock(scope: !21045, file: !3, line: 6594, column: 5)
!21086 = !DILocation(line: 6596, column: 17, scope: !21084)
!21087 = !DILocation(line: 6596, column: 21, scope: !21084)
!21088 = !DILocation(line: 6596, column: 10, scope: !21085)
!21089 = !DILocation(line: 6597, column: 7, scope: !21090)
!21090 = distinct !DILexicalBlock(scope: !21084, file: !3, line: 6596, column: 34)
!21091 = !DILocation(line: 6597, column: 10, scope: !21090)
!21092 = !DILocation(line: 6597, column: 15, scope: !21090)
!21093 = !DILocation(line: 6598, column: 33, scope: !21090)
!21094 = !DILocation(line: 6598, column: 7, scope: !21090)
!21095 = !DILocation(line: 6599, column: 7, scope: !21090)
!21096 = !DILocation(line: 6601, column: 6, scope: !21085)
!21097 = !DILocalVariable(name: "is_clamp", scope: !21098, file: !3, line: 6623, type: !12045)
!21098 = distinct !DILexicalBlock(scope: !21045, file: !3, line: 6621, column: 5)
!21099 = !DILocation(line: 6623, column: 17, scope: !21098)
!21100 = !DILocation(line: 6623, column: 30, scope: !21098)
!21101 = !DILocation(line: 6623, column: 33, scope: !21098)
!21102 = !DILocation(line: 6623, column: 38, scope: !21098)
!21103 = !DILocation(line: 6623, column: 28, scope: !21098)
!21104 = !DILocation(line: 6624, column: 10, scope: !21105)
!21105 = distinct !DILexicalBlock(scope: !21098, file: !3, line: 6624, column: 10)
!21106 = !DILocation(line: 6624, column: 10, scope: !21098)
!21107 = !DILocation(line: 6625, column: 37, scope: !21108)
!21108 = distinct !DILexicalBlock(scope: !21105, file: !3, line: 6624, column: 20)
!21109 = !DILocation(line: 6625, column: 40, scope: !21108)
!21110 = !DILocation(line: 6625, column: 47, scope: !21108)
!21111 = !DILocation(line: 6625, column: 7, scope: !21108)
!21112 = !DILocation(line: 6626, column: 6, scope: !21108)
!21113 = !DILocation(line: 6627, column: 32, scope: !21098)
!21114 = !DILocation(line: 6627, column: 6, scope: !21098)
!21115 = !DILocation(line: 6628, column: 6, scope: !21098)
!21116 = !DILocation(line: 6631, column: 6, scope: !21045)
!21117 = !DILocation(line: 6633, column: 3, scope: !21040)
!21118 = !DILocation(line: 6634, column: 2, scope: !21032)
!21119 = !DILocation(line: 6635, column: 2, scope: !21021)
!21120 = !DILocation(line: 6636, column: 1, scope: !21021)
!21121 = distinct !DISubprogram(name: "createVertSlideVerts", scope: !3, file: !3, line: 6375, type: !11766, scopeLine: 6376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!21122 = !DILocalVariable(name: "t", arg: 1, scope: !21121, file: !3, line: 6375, type: !3841)
!21123 = !DILocation(line: 6375, column: 45, scope: !21121)
!21124 = !DILocalVariable(name: "em", scope: !21121, file: !3, line: 6377, type: !11200)
!21125 = !DILocation(line: 6377, column: 14, scope: !21121)
!21126 = !DILocation(line: 6377, column: 44, scope: !21121)
!21127 = !DILocation(line: 6377, column: 47, scope: !21121)
!21128 = !DILocation(line: 6377, column: 19, scope: !21121)
!21129 = !DILocalVariable(name: "bm", scope: !21121, file: !3, line: 6378, type: !3737)
!21130 = !DILocation(line: 6378, column: 9, scope: !21121)
!21131 = !DILocation(line: 6378, column: 14, scope: !21121)
!21132 = !DILocation(line: 6378, column: 18, scope: !21121)
!21133 = !DILocalVariable(name: "iter", scope: !21121, file: !3, line: 6379, type: !11228)
!21134 = !DILocation(line: 6379, column: 9, scope: !21121)
!21135 = !DILocalVariable(name: "eiter", scope: !21121, file: !3, line: 6380, type: !11228)
!21136 = !DILocation(line: 6380, column: 9, scope: !21121)
!21137 = !DILocalVariable(name: "e", scope: !21121, file: !3, line: 6381, type: !3682)
!21138 = !DILocation(line: 6381, column: 10, scope: !21121)
!21139 = !DILocalVariable(name: "v", scope: !21121, file: !3, line: 6382, type: !3678)
!21140 = !DILocation(line: 6382, column: 10, scope: !21121)
!21141 = !DILocalVariable(name: "sv_array", scope: !21121, file: !3, line: 6383, type: !3822)
!21142 = !DILocation(line: 6383, column: 26, scope: !21121)
!21143 = !DILocalVariable(name: "sld", scope: !21121, file: !3, line: 6384, type: !3817)
!21144 = !DILocation(line: 6384, column: 17, scope: !21121)
!21145 = !DILocation(line: 6384, column: 23, scope: !21121)
!21146 = !DILocalVariable(name: "rv3d", scope: !21121, file: !3, line: 6386, type: !4453)
!21147 = !DILocation(line: 6386, column: 16, scope: !21121)
!21148 = !DILocalVariable(name: "ar", scope: !21121, file: !3, line: 6387, type: !8833)
!21149 = !DILocation(line: 6387, column: 11, scope: !21121)
!21150 = !DILocation(line: 6387, column: 16, scope: !21121)
!21151 = !DILocation(line: 6387, column: 19, scope: !21121)
!21152 = !DILocalVariable(name: "projectMat", scope: !21121, file: !3, line: 6388, type: !2071)
!21153 = !DILocation(line: 6388, column: 8, scope: !21121)
!21154 = !DILocalVariable(name: "j", scope: !21121, file: !3, line: 6389, type: !35)
!21155 = !DILocation(line: 6389, column: 6, scope: !21121)
!21156 = !DILocation(line: 6391, column: 6, scope: !21157)
!21157 = distinct !DILexicalBlock(scope: !21121, file: !3, line: 6391, column: 6)
!21158 = !DILocation(line: 6391, column: 9, scope: !21157)
!21159 = !DILocation(line: 6391, column: 19, scope: !21157)
!21160 = !DILocation(line: 6391, column: 6, scope: !21121)
!21161 = !DILocation(line: 6394, column: 10, scope: !21162)
!21162 = distinct !DILexicalBlock(scope: !21157, file: !3, line: 6391, column: 36)
!21163 = !DILocation(line: 6394, column: 15, scope: !21162)
!21164 = !DILocation(line: 6394, column: 19, scope: !21162)
!21165 = !DILocation(line: 6394, column: 8, scope: !21162)
!21166 = !DILocation(line: 6395, column: 2, scope: !21162)
!21167 = !DILocation(line: 6397, column: 2, scope: !21121)
!21168 = !DILocation(line: 6397, column: 7, scope: !21121)
!21169 = !DILocation(line: 6397, column: 23, scope: !21121)
!21170 = !DILocation(line: 6398, column: 2, scope: !21121)
!21171 = !DILocation(line: 6398, column: 7, scope: !21121)
!21172 = !DILocation(line: 6398, column: 21, scope: !21121)
!21173 = !DILocation(line: 6399, column: 2, scope: !21121)
!21174 = !DILocation(line: 6399, column: 7, scope: !21121)
!21175 = !DILocation(line: 6399, column: 19, scope: !21121)
!21176 = !DILocation(line: 6401, column: 7, scope: !21177)
!21177 = distinct !DILexicalBlock(scope: !21121, file: !3, line: 6401, column: 6)
!21178 = !DILocation(line: 6401, column: 6, scope: !21121)
!21179 = !DILocation(line: 6403, column: 11, scope: !21180)
!21180 = distinct !DILexicalBlock(scope: !21177, file: !3, line: 6401, column: 13)
!21181 = !DILocation(line: 6403, column: 3, scope: !21180)
!21182 = !DILocation(line: 6404, column: 2, scope: !21180)
!21183 = !DILocation(line: 6406, column: 32, scope: !21184)
!21184 = distinct !DILexicalBlock(scope: !21177, file: !3, line: 6405, column: 7)
!21185 = !DILocation(line: 6406, column: 38, scope: !21184)
!21186 = !DILocation(line: 6406, column: 41, scope: !21184)
!21187 = !DILocation(line: 6406, column: 49, scope: !21184)
!21188 = !DILocation(line: 6406, column: 3, scope: !21184)
!21189 = !DILocation(line: 6409, column: 4, scope: !21121)
!21190 = !DILocation(line: 6410, column: 2, scope: !21191)
!21191 = distinct !DILexicalBlock(scope: !21121, file: !3, line: 6410, column: 2)
!21192 = !DILocation(line: 6410, column: 2, scope: !21193)
!21193 = distinct !DILexicalBlock(scope: !21191, file: !3, line: 6410, column: 2)
!21194 = !DILocalVariable(name: "ok", scope: !21195, file: !3, line: 6411, type: !2769)
!21195 = distinct !DILexicalBlock(scope: !21193, file: !3, line: 6410, column: 48)
!21196 = !DILocation(line: 6411, column: 8, scope: !21195)
!21197 = !DILocation(line: 6412, column: 7, scope: !21198)
!21198 = distinct !DILexicalBlock(scope: !21195, file: !3, line: 6412, column: 7)
!21199 = !DILocation(line: 6412, column: 44, scope: !21198)
!21200 = !DILocation(line: 6412, column: 47, scope: !21198)
!21201 = !DILocation(line: 6412, column: 50, scope: !21198)
!21202 = !DILocation(line: 6412, column: 7, scope: !21195)
!21203 = !DILocation(line: 6413, column: 4, scope: !21204)
!21204 = distinct !DILexicalBlock(scope: !21205, file: !3, line: 6413, column: 4)
!21205 = distinct !DILexicalBlock(scope: !21198, file: !3, line: 6412, column: 53)
!21206 = !DILocation(line: 6413, column: 4, scope: !21207)
!21207 = distinct !DILexicalBlock(scope: !21204, file: !3, line: 6413, column: 4)
!21208 = !DILocation(line: 6414, column: 10, scope: !21209)
!21209 = distinct !DILexicalBlock(scope: !21210, file: !3, line: 6414, column: 9)
!21210 = distinct !DILexicalBlock(scope: !21207, file: !3, line: 6413, column: 50)
!21211 = !DILocation(line: 6414, column: 9, scope: !21210)
!21212 = !DILocation(line: 6415, column: 9, scope: !21213)
!21213 = distinct !DILexicalBlock(scope: !21209, file: !3, line: 6414, column: 48)
!21214 = !DILocation(line: 6416, column: 6, scope: !21213)
!21215 = !DILocation(line: 6418, column: 4, scope: !21210)
!21216 = distinct !{!21216, !21203, !21217}
!21217 = !DILocation(line: 6418, column: 4, scope: !21204)
!21218 = !DILocation(line: 6419, column: 3, scope: !21205)
!21219 = !DILocation(line: 6421, column: 7, scope: !21220)
!21220 = distinct !DILexicalBlock(scope: !21195, file: !3, line: 6421, column: 7)
!21221 = !DILocation(line: 6421, column: 7, scope: !21195)
!21222 = !DILocation(line: 6422, column: 4, scope: !21223)
!21223 = distinct !DILexicalBlock(scope: !21220, file: !3, line: 6421, column: 11)
!21224 = !DILocation(line: 6423, column: 6, scope: !21223)
!21225 = !DILocation(line: 6424, column: 3, scope: !21223)
!21226 = !DILocation(line: 6426, column: 4, scope: !21227)
!21227 = distinct !DILexicalBlock(scope: !21220, file: !3, line: 6425, column: 8)
!21228 = !DILocation(line: 6428, column: 2, scope: !21195)
!21229 = distinct !{!21229, !21190, !21230}
!21230 = !DILocation(line: 6428, column: 2, scope: !21191)
!21231 = !DILocation(line: 6430, column: 7, scope: !21232)
!21232 = distinct !DILexicalBlock(scope: !21121, file: !3, line: 6430, column: 6)
!21233 = !DILocation(line: 6430, column: 6, scope: !21121)
!21234 = !DILocation(line: 6431, column: 3, scope: !21235)
!21235 = distinct !DILexicalBlock(scope: !21232, file: !3, line: 6430, column: 10)
!21236 = !DILocation(line: 6431, column: 13, scope: !21235)
!21237 = !DILocation(line: 6432, column: 3, scope: !21235)
!21238 = !DILocation(line: 6435, column: 13, scope: !21121)
!21239 = !DILocation(line: 6435, column: 58, scope: !21121)
!21240 = !DILocation(line: 6435, column: 56, scope: !21121)
!21241 = !DILocation(line: 6435, column: 11, scope: !21121)
!21242 = !DILocation(line: 6437, column: 4, scope: !21121)
!21243 = !DILocation(line: 6438, column: 2, scope: !21244)
!21244 = distinct !DILexicalBlock(scope: !21121, file: !3, line: 6438, column: 2)
!21245 = !DILocation(line: 6438, column: 2, scope: !21246)
!21246 = distinct !DILexicalBlock(scope: !21244, file: !3, line: 6438, column: 2)
!21247 = !DILocation(line: 6439, column: 7, scope: !21248)
!21248 = distinct !DILexicalBlock(scope: !21249, file: !3, line: 6439, column: 7)
!21249 = distinct !DILexicalBlock(scope: !21246, file: !3, line: 6438, column: 48)
!21250 = !DILocation(line: 6439, column: 7, scope: !21249)
!21251 = !DILocalVariable(name: "k", scope: !21252, file: !3, line: 6440, type: !35)
!21252 = distinct !DILexicalBlock(scope: !21248, file: !3, line: 6439, column: 42)
!21253 = !DILocation(line: 6440, column: 8, scope: !21252)
!21254 = !DILocation(line: 6441, column: 20, scope: !21252)
!21255 = !DILocation(line: 6441, column: 4, scope: !21252)
!21256 = !DILocation(line: 6441, column: 13, scope: !21252)
!21257 = !DILocation(line: 6441, column: 16, scope: !21252)
!21258 = !DILocation(line: 6441, column: 18, scope: !21252)
!21259 = !DILocation(line: 6442, column: 15, scope: !21252)
!21260 = !DILocation(line: 6442, column: 24, scope: !21252)
!21261 = !DILocation(line: 6442, column: 27, scope: !21252)
!21262 = !DILocation(line: 6442, column: 39, scope: !21252)
!21263 = !DILocation(line: 6442, column: 42, scope: !21252)
!21264 = !DILocation(line: 6442, column: 4, scope: !21252)
!21265 = !DILocation(line: 6444, column: 6, scope: !21252)
!21266 = !DILocation(line: 6445, column: 4, scope: !21267)
!21267 = distinct !DILexicalBlock(scope: !21252, file: !3, line: 6445, column: 4)
!21268 = !DILocation(line: 6445, column: 4, scope: !21269)
!21269 = distinct !DILexicalBlock(scope: !21267, file: !3, line: 6445, column: 4)
!21270 = !DILocation(line: 6446, column: 10, scope: !21271)
!21271 = distinct !DILexicalBlock(scope: !21272, file: !3, line: 6446, column: 9)
!21272 = distinct !DILexicalBlock(scope: !21269, file: !3, line: 6445, column: 50)
!21273 = !DILocation(line: 6446, column: 9, scope: !21272)
!21274 = !DILocation(line: 6447, column: 7, scope: !21275)
!21275 = distinct !DILexicalBlock(scope: !21271, file: !3, line: 6446, column: 48)
!21276 = !DILocation(line: 6448, column: 5, scope: !21275)
!21277 = !DILocation(line: 6449, column: 4, scope: !21272)
!21278 = distinct !{!21278, !21266, !21279}
!21279 = !DILocation(line: 6449, column: 4, scope: !21267)
!21280 = !DILocation(line: 6451, column: 34, scope: !21252)
!21281 = !DILocation(line: 6451, column: 85, scope: !21252)
!21282 = !DILocation(line: 6451, column: 83, scope: !21252)
!21283 = !DILocation(line: 6451, column: 4, scope: !21252)
!21284 = !DILocation(line: 6451, column: 13, scope: !21252)
!21285 = !DILocation(line: 6451, column: 16, scope: !21252)
!21286 = !DILocation(line: 6451, column: 32, scope: !21252)
!21287 = !DILocation(line: 6452, column: 34, scope: !21252)
!21288 = !DILocation(line: 6452, column: 85, scope: !21252)
!21289 = !DILocation(line: 6452, column: 83, scope: !21252)
!21290 = !DILocation(line: 6452, column: 4, scope: !21252)
!21291 = !DILocation(line: 6452, column: 13, scope: !21252)
!21292 = !DILocation(line: 6452, column: 16, scope: !21252)
!21293 = !DILocation(line: 6452, column: 32, scope: !21252)
!21294 = !DILocation(line: 6453, column: 30, scope: !21252)
!21295 = !DILocation(line: 6453, column: 4, scope: !21252)
!21296 = !DILocation(line: 6453, column: 13, scope: !21252)
!21297 = !DILocation(line: 6453, column: 16, scope: !21252)
!21298 = !DILocation(line: 6453, column: 28, scope: !21252)
!21299 = !DILocation(line: 6455, column: 6, scope: !21252)
!21300 = !DILocation(line: 6456, column: 4, scope: !21301)
!21301 = distinct !DILexicalBlock(scope: !21252, file: !3, line: 6456, column: 4)
!21302 = !DILocation(line: 6456, column: 4, scope: !21303)
!21303 = distinct !DILexicalBlock(scope: !21301, file: !3, line: 6456, column: 4)
!21304 = !DILocation(line: 6457, column: 10, scope: !21305)
!21305 = distinct !DILexicalBlock(scope: !21306, file: !3, line: 6457, column: 9)
!21306 = distinct !DILexicalBlock(scope: !21303, file: !3, line: 6456, column: 50)
!21307 = !DILocation(line: 6457, column: 9, scope: !21306)
!21308 = !DILocalVariable(name: "v_other", scope: !21309, file: !3, line: 6458, type: !3678)
!21309 = distinct !DILexicalBlock(scope: !21305, file: !3, line: 6457, column: 48)
!21310 = !DILocation(line: 6458, column: 14, scope: !21309)
!21311 = !DILocation(line: 6458, column: 43, scope: !21309)
!21312 = !DILocation(line: 6458, column: 46, scope: !21309)
!21313 = !DILocation(line: 6458, column: 24, scope: !21309)
!21314 = !DILocation(line: 6459, column: 17, scope: !21309)
!21315 = !DILocation(line: 6459, column: 26, scope: !21309)
!21316 = !DILocation(line: 6459, column: 29, scope: !21309)
!21317 = !DILocation(line: 6459, column: 45, scope: !21309)
!21318 = !DILocation(line: 6459, column: 49, scope: !21309)
!21319 = !DILocation(line: 6459, column: 58, scope: !21309)
!21320 = !DILocation(line: 6459, column: 6, scope: !21309)
!21321 = !DILocation(line: 6460, column: 10, scope: !21322)
!21322 = distinct !DILexicalBlock(scope: !21309, file: !3, line: 6460, column: 10)
!21323 = !DILocation(line: 6460, column: 10, scope: !21309)
!21324 = !DILocation(line: 6461, column: 37, scope: !21325)
!21325 = distinct !DILexicalBlock(scope: !21322, file: !3, line: 6460, column: 14)
!21326 = !DILocation(line: 6462, column: 37, scope: !21325)
!21327 = !DILocation(line: 6462, column: 46, scope: !21325)
!21328 = !DILocation(line: 6462, column: 49, scope: !21325)
!21329 = !DILocation(line: 6462, column: 65, scope: !21325)
!21330 = !DILocation(line: 6463, column: 37, scope: !21325)
!21331 = !DILocation(line: 6463, column: 46, scope: !21325)
!21332 = !DILocation(line: 6463, column: 49, scope: !21325)
!21333 = !DILocation(line: 6463, column: 65, scope: !21325)
!21334 = !DILocation(line: 6464, column: 37, scope: !21325)
!21335 = !DILocation(line: 6461, column: 7, scope: !21325)
!21336 = !DILocation(line: 6465, column: 6, scope: !21325)
!21337 = !DILocation(line: 6467, column: 18, scope: !21338)
!21338 = distinct !DILexicalBlock(scope: !21322, file: !3, line: 6466, column: 11)
!21339 = !DILocation(line: 6467, column: 27, scope: !21338)
!21340 = !DILocation(line: 6467, column: 30, scope: !21338)
!21341 = !DILocation(line: 6467, column: 46, scope: !21338)
!21342 = !DILocation(line: 6468, column: 18, scope: !21338)
!21343 = !DILocation(line: 6468, column: 27, scope: !21338)
!21344 = !DILocation(line: 6468, column: 30, scope: !21338)
!21345 = !DILocation(line: 6468, column: 46, scope: !21338)
!21346 = !DILocation(line: 6467, column: 7, scope: !21338)
!21347 = !DILocation(line: 6470, column: 7, scope: !21309)
!21348 = !DILocation(line: 6471, column: 5, scope: !21309)
!21349 = !DILocation(line: 6472, column: 4, scope: !21306)
!21350 = distinct !{!21350, !21300, !21351}
!21351 = !DILocation(line: 6472, column: 4, scope: !21301)
!21352 = !DILocation(line: 6474, column: 8, scope: !21353)
!21353 = distinct !DILexicalBlock(scope: !21252, file: !3, line: 6474, column: 8)
!21354 = !DILocation(line: 6474, column: 8, scope: !21252)
!21355 = !DILocation(line: 6475, column: 35, scope: !21356)
!21356 = distinct !DILexicalBlock(scope: !21353, file: !3, line: 6474, column: 12)
!21357 = !DILocation(line: 6476, column: 35, scope: !21356)
!21358 = !DILocation(line: 6476, column: 44, scope: !21356)
!21359 = !DILocation(line: 6476, column: 47, scope: !21356)
!21360 = !DILocation(line: 6477, column: 35, scope: !21356)
!21361 = !DILocation(line: 6477, column: 44, scope: !21356)
!21362 = !DILocation(line: 6477, column: 47, scope: !21356)
!21363 = !DILocation(line: 6478, column: 35, scope: !21356)
!21364 = !DILocation(line: 6475, column: 5, scope: !21356)
!21365 = !DILocation(line: 6479, column: 4, scope: !21356)
!21366 = !DILocation(line: 6481, column: 16, scope: !21367)
!21367 = distinct !DILexicalBlock(scope: !21353, file: !3, line: 6480, column: 9)
!21368 = !DILocation(line: 6481, column: 25, scope: !21367)
!21369 = !DILocation(line: 6481, column: 28, scope: !21367)
!21370 = !DILocation(line: 6482, column: 16, scope: !21367)
!21371 = !DILocation(line: 6482, column: 25, scope: !21367)
!21372 = !DILocation(line: 6482, column: 28, scope: !21367)
!21373 = !DILocation(line: 6481, column: 5, scope: !21367)
!21374 = !DILocation(line: 6485, column: 5, scope: !21252)
!21375 = !DILocation(line: 6486, column: 3, scope: !21252)
!21376 = !DILocation(line: 6487, column: 2, scope: !21249)
!21377 = distinct !{!21377, !21243, !21378}
!21378 = !DILocation(line: 6487, column: 2, scope: !21244)
!21379 = !DILocation(line: 6489, column: 12, scope: !21121)
!21380 = !DILocation(line: 6489, column: 2, scope: !21121)
!21381 = !DILocation(line: 6489, column: 7, scope: !21121)
!21382 = !DILocation(line: 6489, column: 10, scope: !21121)
!21383 = !DILocation(line: 6490, column: 15, scope: !21121)
!21384 = !DILocation(line: 6490, column: 2, scope: !21121)
!21385 = !DILocation(line: 6490, column: 7, scope: !21121)
!21386 = !DILocation(line: 6490, column: 13, scope: !21121)
!21387 = !DILocation(line: 6492, column: 12, scope: !21121)
!21388 = !DILocation(line: 6492, column: 2, scope: !21121)
!21389 = !DILocation(line: 6492, column: 7, scope: !21121)
!21390 = !DILocation(line: 6492, column: 10, scope: !21121)
!21391 = !DILocation(line: 6494, column: 2, scope: !21121)
!21392 = !DILocation(line: 6494, column: 7, scope: !21121)
!21393 = !DILocation(line: 6494, column: 12, scope: !21121)
!21394 = !DILocation(line: 6496, column: 18, scope: !21121)
!21395 = !DILocation(line: 6496, column: 2, scope: !21121)
!21396 = !DILocation(line: 6496, column: 5, scope: !21121)
!21397 = !DILocation(line: 6496, column: 16, scope: !21121)
!21398 = !DILocation(line: 6498, column: 6, scope: !21399)
!21399 = distinct !DILexicalBlock(scope: !21121, file: !3, line: 6498, column: 6)
!21400 = !DILocation(line: 6498, column: 6, scope: !21121)
!21401 = !DILocation(line: 6499, column: 32, scope: !21402)
!21402 = distinct !DILexicalBlock(scope: !21399, file: !3, line: 6498, column: 12)
!21403 = !DILocation(line: 6499, column: 35, scope: !21402)
!21404 = !DILocation(line: 6499, column: 38, scope: !21402)
!21405 = !DILocation(line: 6499, column: 3, scope: !21402)
!21406 = !DILocation(line: 6500, column: 33, scope: !21402)
!21407 = !DILocation(line: 6500, column: 36, scope: !21402)
!21408 = !DILocation(line: 6500, column: 39, scope: !21402)
!21409 = !DILocation(line: 6500, column: 3, scope: !21402)
!21410 = !DILocation(line: 6501, column: 2, scope: !21402)
!21411 = !DILocation(line: 6503, column: 2, scope: !21121)
!21412 = !DILocation(line: 6504, column: 1, scope: !21121)
!21413 = distinct !DISubprogram(name: "calcVertSlideCustomPoints", scope: !3, file: !3, line: 6295, type: !3973, scopeLine: 6296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!21414 = !DILocalVariable(name: "t", arg: 1, scope: !21413, file: !3, line: 6295, type: !3856)
!21415 = !DILocation(line: 6295, column: 57, scope: !21413)
!21416 = !DILocalVariable(name: "sld", scope: !21413, file: !3, line: 6297, type: !3817)
!21417 = !DILocation(line: 6297, column: 17, scope: !21413)
!21418 = !DILocation(line: 6297, column: 23, scope: !21413)
!21419 = !DILocation(line: 6297, column: 26, scope: !21413)
!21420 = !DILocalVariable(name: "sv", scope: !21413, file: !3, line: 6298, type: !3822)
!21421 = !DILocation(line: 6298, column: 26, scope: !21413)
!21422 = !DILocation(line: 6298, column: 32, scope: !21413)
!21423 = !DILocation(line: 6298, column: 37, scope: !21413)
!21424 = !DILocation(line: 6298, column: 40, scope: !21413)
!21425 = !DILocation(line: 6298, column: 45, scope: !21413)
!21426 = !DILocalVariable(name: "co_orig", scope: !21413, file: !3, line: 6299, type: !3980)
!21427 = !DILocation(line: 6299, column: 15, scope: !21413)
!21428 = !DILocation(line: 6299, column: 25, scope: !21413)
!21429 = !DILocation(line: 6299, column: 29, scope: !21413)
!21430 = !DILocalVariable(name: "co_curr", scope: !21413, file: !3, line: 6300, type: !3980)
!21431 = !DILocation(line: 6300, column: 15, scope: !21413)
!21432 = !DILocation(line: 6300, column: 25, scope: !21413)
!21433 = !DILocation(line: 6300, column: 29, scope: !21413)
!21434 = !DILocation(line: 6300, column: 45, scope: !21413)
!21435 = !DILocation(line: 6300, column: 49, scope: !21413)
!21436 = !DILocalVariable(name: "mval_start", scope: !21413, file: !3, line: 6301, type: !21437)
!21437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3858, size: 64, elements: !1755)
!21438 = !DILocation(line: 6301, column: 12, scope: !21413)
!21439 = !DILocation(line: 6301, column: 28, scope: !21413)
!21440 = !DILocation(line: 6301, column: 29, scope: !21413)
!21441 = !DILocation(line: 6301, column: 41, scope: !21413)
!21442 = !DILocalVariable(name: "mval_end", scope: !21413, file: !3, line: 6302, type: !21437)
!21443 = !DILocation(line: 6302, column: 12, scope: !21413)
!21444 = !DILocation(line: 6302, column: 28, scope: !21413)
!21445 = !DILocation(line: 6302, column: 29, scope: !21413)
!21446 = !DILocation(line: 6302, column: 41, scope: !21413)
!21447 = !DILocation(line: 6304, column: 6, scope: !21448)
!21448 = distinct !DILexicalBlock(scope: !21413, file: !3, line: 6304, column: 6)
!21449 = !DILocation(line: 6304, column: 11, scope: !21448)
!21450 = !DILocation(line: 6304, column: 23, scope: !21448)
!21451 = !DILocation(line: 6304, column: 26, scope: !21448)
!21452 = !DILocation(line: 6304, column: 31, scope: !21448)
!21453 = !DILocation(line: 6304, column: 47, scope: !21448)
!21454 = !DILocation(line: 6304, column: 6, scope: !21413)
!21455 = !DILocation(line: 6305, column: 19, scope: !21456)
!21456 = distinct !DILexicalBlock(scope: !21448, file: !3, line: 6304, column: 57)
!21457 = !DILocation(line: 6305, column: 23, scope: !21456)
!21458 = !DILocation(line: 6305, column: 26, scope: !21456)
!21459 = !DILocation(line: 6305, column: 33, scope: !21456)
!21460 = !DILocation(line: 6305, column: 45, scope: !21456)
!21461 = !DILocation(line: 6305, column: 3, scope: !21456)
!21462 = !DILocation(line: 6306, column: 2, scope: !21456)
!21463 = !DILocation(line: 6308, column: 19, scope: !21464)
!21464 = distinct !DILexicalBlock(scope: !21448, file: !3, line: 6307, column: 7)
!21465 = !DILocation(line: 6308, column: 23, scope: !21464)
!21466 = !DILocation(line: 6308, column: 26, scope: !21464)
!21467 = !DILocation(line: 6308, column: 33, scope: !21464)
!21468 = !DILocation(line: 6308, column: 43, scope: !21464)
!21469 = !DILocation(line: 6308, column: 3, scope: !21464)
!21470 = !DILocation(line: 6310, column: 1, scope: !21413)
!21471 = distinct !DISubprogram(name: "doVertSlide", scope: !3, file: !3, line: 6709, type: !10970, scopeLine: 6710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!21472 = !DILocalVariable(name: "t", arg: 1, scope: !21471, file: !3, line: 6709, type: !3841)
!21473 = !DILocation(line: 6709, column: 35, scope: !21471)
!21474 = !DILocalVariable(name: "perc", arg: 2, scope: !21471, file: !3, line: 6709, type: !1727)
!21475 = !DILocation(line: 6709, column: 44, scope: !21471)
!21476 = !DILocalVariable(name: "sld", scope: !21471, file: !3, line: 6711, type: !3817)
!21477 = !DILocation(line: 6711, column: 17, scope: !21471)
!21478 = !DILocation(line: 6711, column: 23, scope: !21471)
!21479 = !DILocation(line: 6711, column: 26, scope: !21471)
!21480 = !DILocalVariable(name: "svlist", scope: !21471, file: !3, line: 6712, type: !3822)
!21481 = !DILocation(line: 6712, column: 26, scope: !21471)
!21482 = !DILocation(line: 6712, column: 35, scope: !21471)
!21483 = !DILocation(line: 6712, column: 40, scope: !21471)
!21484 = !DILocalVariable(name: "sv", scope: !21471, file: !3, line: 6712, type: !3822)
!21485 = !DILocation(line: 6712, column: 45, scope: !21471)
!21486 = !DILocalVariable(name: "i", scope: !21471, file: !3, line: 6713, type: !35)
!21487 = !DILocation(line: 6713, column: 6, scope: !21471)
!21488 = !DILocation(line: 6715, column: 14, scope: !21471)
!21489 = !DILocation(line: 6715, column: 2, scope: !21471)
!21490 = !DILocation(line: 6715, column: 7, scope: !21471)
!21491 = !DILocation(line: 6715, column: 12, scope: !21471)
!21492 = !DILocation(line: 6716, column: 7, scope: !21471)
!21493 = !DILocation(line: 6716, column: 5, scope: !21471)
!21494 = !DILocation(line: 6718, column: 6, scope: !21495)
!21495 = distinct !DILexicalBlock(scope: !21471, file: !3, line: 6718, column: 6)
!21496 = !DILocation(line: 6718, column: 11, scope: !21495)
!21497 = !DILocation(line: 6718, column: 27, scope: !21495)
!21498 = !DILocation(line: 6718, column: 6, scope: !21471)
!21499 = !DILocation(line: 6719, column: 10, scope: !21500)
!21500 = distinct !DILexicalBlock(scope: !21501, file: !3, line: 6719, column: 3)
!21501 = distinct !DILexicalBlock(scope: !21495, file: !3, line: 6718, column: 36)
!21502 = !DILocation(line: 6719, column: 8, scope: !21500)
!21503 = !DILocation(line: 6719, column: 15, scope: !21504)
!21504 = distinct !DILexicalBlock(scope: !21500, file: !3, line: 6719, column: 3)
!21505 = !DILocation(line: 6719, column: 19, scope: !21504)
!21506 = !DILocation(line: 6719, column: 24, scope: !21504)
!21507 = !DILocation(line: 6719, column: 17, scope: !21504)
!21508 = !DILocation(line: 6719, column: 3, scope: !21500)
!21509 = !DILocation(line: 6720, column: 19, scope: !21510)
!21510 = distinct !DILexicalBlock(scope: !21504, file: !3, line: 6719, column: 42)
!21511 = !DILocation(line: 6720, column: 23, scope: !21510)
!21512 = !DILocation(line: 6720, column: 26, scope: !21510)
!21513 = !DILocation(line: 6720, column: 30, scope: !21510)
!21514 = !DILocation(line: 6720, column: 34, scope: !21510)
!21515 = !DILocation(line: 6720, column: 46, scope: !21510)
!21516 = !DILocation(line: 6720, column: 50, scope: !21510)
!21517 = !DILocation(line: 6720, column: 66, scope: !21510)
!21518 = !DILocation(line: 6720, column: 70, scope: !21510)
!21519 = !DILocation(line: 6720, column: 85, scope: !21510)
!21520 = !DILocation(line: 6720, column: 4, scope: !21510)
!21521 = !DILocation(line: 6721, column: 3, scope: !21510)
!21522 = !DILocation(line: 6719, column: 32, scope: !21504)
!21523 = !DILocation(line: 6719, column: 38, scope: !21504)
!21524 = !DILocation(line: 6719, column: 3, scope: !21504)
!21525 = distinct !{!21525, !21508, !21526}
!21526 = !DILocation(line: 6721, column: 3, scope: !21500)
!21527 = !DILocation(line: 6722, column: 2, scope: !21501)
!21528 = !DILocalVariable(name: "sv_curr", scope: !21529, file: !3, line: 6724, type: !3822)
!21529 = distinct !DILexicalBlock(scope: !21495, file: !3, line: 6723, column: 7)
!21530 = !DILocation(line: 6724, column: 27, scope: !21529)
!21531 = !DILocation(line: 6724, column: 38, scope: !21529)
!21532 = !DILocation(line: 6724, column: 43, scope: !21529)
!21533 = !DILocation(line: 6724, column: 46, scope: !21529)
!21534 = !DILocation(line: 6724, column: 51, scope: !21529)
!21535 = !DILocalVariable(name: "edge_len_curr", scope: !21529, file: !3, line: 6725, type: !3981)
!21536 = !DILocation(line: 6725, column: 15, scope: !21529)
!21537 = !DILocation(line: 6725, column: 40, scope: !21529)
!21538 = !DILocation(line: 6725, column: 49, scope: !21529)
!21539 = !DILocation(line: 6725, column: 61, scope: !21529)
!21540 = !DILocation(line: 6725, column: 70, scope: !21529)
!21541 = !DILocation(line: 6725, column: 86, scope: !21529)
!21542 = !DILocation(line: 6725, column: 95, scope: !21529)
!21543 = !DILocation(line: 6725, column: 31, scope: !21529)
!21544 = !DILocalVariable(name: "tperc", scope: !21529, file: !3, line: 6726, type: !3981)
!21545 = !DILocation(line: 6726, column: 15, scope: !21529)
!21546 = !DILocation(line: 6726, column: 23, scope: !21529)
!21547 = !DILocation(line: 6726, column: 30, scope: !21529)
!21548 = !DILocation(line: 6726, column: 28, scope: !21529)
!21549 = !DILocation(line: 6728, column: 10, scope: !21550)
!21550 = distinct !DILexicalBlock(scope: !21529, file: !3, line: 6728, column: 3)
!21551 = !DILocation(line: 6728, column: 8, scope: !21550)
!21552 = !DILocation(line: 6728, column: 15, scope: !21553)
!21553 = distinct !DILexicalBlock(scope: !21550, file: !3, line: 6728, column: 3)
!21554 = !DILocation(line: 6728, column: 19, scope: !21553)
!21555 = !DILocation(line: 6728, column: 24, scope: !21553)
!21556 = !DILocation(line: 6728, column: 17, scope: !21553)
!21557 = !DILocation(line: 6728, column: 3, scope: !21550)
!21558 = !DILocalVariable(name: "edge_len", scope: !21559, file: !3, line: 6729, type: !1727)
!21559 = distinct !DILexicalBlock(scope: !21553, file: !3, line: 6728, column: 42)
!21560 = !DILocation(line: 6729, column: 10, scope: !21559)
!21561 = !DILocalVariable(name: "dir", scope: !21559, file: !3, line: 6730, type: !1987)
!21562 = !DILocation(line: 6730, column: 10, scope: !21559)
!21563 = !DILocation(line: 6732, column: 16, scope: !21559)
!21564 = !DILocation(line: 6732, column: 21, scope: !21559)
!21565 = !DILocation(line: 6732, column: 25, scope: !21559)
!21566 = !DILocation(line: 6732, column: 41, scope: !21559)
!21567 = !DILocation(line: 6732, column: 45, scope: !21559)
!21568 = !DILocation(line: 6732, column: 60, scope: !21559)
!21569 = !DILocation(line: 6732, column: 64, scope: !21559)
!21570 = !DILocation(line: 6732, column: 4, scope: !21559)
!21571 = !DILocation(line: 6733, column: 28, scope: !21559)
!21572 = !DILocation(line: 6733, column: 15, scope: !21559)
!21573 = !DILocation(line: 6733, column: 13, scope: !21559)
!21574 = !DILocation(line: 6735, column: 8, scope: !21575)
!21575 = distinct !DILexicalBlock(scope: !21559, file: !3, line: 6735, column: 8)
!21576 = !DILocation(line: 6735, column: 17, scope: !21575)
!21577 = !DILocation(line: 6735, column: 8, scope: !21559)
!21578 = !DILocation(line: 6736, column: 9, scope: !21579)
!21579 = distinct !DILexicalBlock(scope: !21580, file: !3, line: 6736, column: 9)
!21580 = distinct !DILexicalBlock(scope: !21575, file: !3, line: 6735, column: 32)
!21581 = !DILocation(line: 6736, column: 14, scope: !21579)
!21582 = !DILocation(line: 6736, column: 9, scope: !21580)
!21583 = !DILocation(line: 6737, column: 21, scope: !21584)
!21584 = distinct !DILexicalBlock(scope: !21579, file: !3, line: 6736, column: 27)
!21585 = !DILocation(line: 6737, column: 25, scope: !21584)
!21586 = !DILocation(line: 6737, column: 28, scope: !21584)
!21587 = !DILocation(line: 6737, column: 32, scope: !21584)
!21588 = !DILocation(line: 6737, column: 36, scope: !21584)
!21589 = !DILocation(line: 6737, column: 52, scope: !21584)
!21590 = !DILocation(line: 6737, column: 56, scope: !21584)
!21591 = !DILocation(line: 6737, column: 71, scope: !21584)
!21592 = !DILocation(line: 6737, column: 77, scope: !21584)
!21593 = !DILocation(line: 6737, column: 76, scope: !21584)
!21594 = !DILocation(line: 6737, column: 6, scope: !21584)
!21595 = !DILocation(line: 6738, column: 5, scope: !21584)
!21596 = !DILocation(line: 6740, column: 21, scope: !21597)
!21597 = distinct !DILexicalBlock(scope: !21579, file: !3, line: 6739, column: 10)
!21598 = !DILocation(line: 6740, column: 25, scope: !21597)
!21599 = !DILocation(line: 6740, column: 28, scope: !21597)
!21600 = !DILocation(line: 6740, column: 32, scope: !21597)
!21601 = !DILocation(line: 6740, column: 36, scope: !21597)
!21602 = !DILocation(line: 6740, column: 48, scope: !21597)
!21603 = !DILocation(line: 6740, column: 53, scope: !21597)
!21604 = !DILocation(line: 6740, column: 6, scope: !21597)
!21605 = !DILocation(line: 6742, column: 4, scope: !21580)
!21606 = !DILocation(line: 6744, column: 16, scope: !21607)
!21607 = distinct !DILexicalBlock(scope: !21575, file: !3, line: 6743, column: 9)
!21608 = !DILocation(line: 6744, column: 20, scope: !21607)
!21609 = !DILocation(line: 6744, column: 23, scope: !21607)
!21610 = !DILocation(line: 6744, column: 27, scope: !21607)
!21611 = !DILocation(line: 6744, column: 31, scope: !21607)
!21612 = !DILocation(line: 6744, column: 5, scope: !21607)
!21613 = !DILocation(line: 6746, column: 3, scope: !21559)
!21614 = !DILocation(line: 6728, column: 32, scope: !21553)
!21615 = !DILocation(line: 6728, column: 38, scope: !21553)
!21616 = !DILocation(line: 6728, column: 3, scope: !21553)
!21617 = distinct !{!21617, !21557, !21618}
!21618 = !DILocation(line: 6746, column: 3, scope: !21550)
!21619 = !DILocation(line: 6749, column: 2, scope: !21471)
!21620 = distinct !DISubprogram(name: "calcVertSlideMouseActiveEdges", scope: !3, file: !3, line: 6337, type: !3854, scopeLine: 6338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!21621 = !DILocalVariable(name: "t", arg: 1, scope: !21620, file: !3, line: 6337, type: !3856)
!21622 = !DILocation(line: 6337, column: 61, scope: !21620)
!21623 = !DILocalVariable(name: "mval", arg: 2, scope: !21620, file: !3, line: 6337, type: !3857)
!21624 = !DILocation(line: 6337, column: 74, scope: !21620)
!21625 = !DILocalVariable(name: "sld", scope: !21620, file: !3, line: 6339, type: !3817)
!21626 = !DILocation(line: 6339, column: 17, scope: !21620)
!21627 = !DILocation(line: 6339, column: 23, scope: !21620)
!21628 = !DILocation(line: 6339, column: 26, scope: !21620)
!21629 = !DILocalVariable(name: "mval_fl", scope: !21620, file: !3, line: 6340, type: !1754)
!21630 = !DILocation(line: 6340, column: 8, scope: !21620)
!21631 = !DILocation(line: 6340, column: 21, scope: !21620)
!21632 = !DILocation(line: 6340, column: 22, scope: !21620)
!21633 = !DILocalVariable(name: "dir", scope: !21620, file: !3, line: 6342, type: !1754)
!21634 = !DILocation(line: 6342, column: 8, scope: !21620)
!21635 = !DILocalVariable(name: "sv", scope: !21620, file: !3, line: 6343, type: !3822)
!21636 = !DILocation(line: 6343, column: 26, scope: !21620)
!21637 = !DILocalVariable(name: "i", scope: !21620, file: !3, line: 6344, type: !35)
!21638 = !DILocation(line: 6344, column: 6, scope: !21620)
!21639 = !DILocation(line: 6347, column: 14, scope: !21620)
!21640 = !DILocation(line: 6347, column: 19, scope: !21620)
!21641 = !DILocation(line: 6347, column: 24, scope: !21620)
!21642 = !DILocation(line: 6347, column: 27, scope: !21620)
!21643 = !DILocation(line: 6347, column: 32, scope: !21620)
!21644 = !DILocation(line: 6347, column: 47, scope: !21620)
!21645 = !DILocation(line: 6347, column: 59, scope: !21620)
!21646 = !DILocation(line: 6347, column: 2, scope: !21620)
!21647 = !DILocation(line: 6348, column: 15, scope: !21620)
!21648 = !DILocation(line: 6348, column: 2, scope: !21620)
!21649 = !DILocation(line: 6350, column: 9, scope: !21650)
!21650 = distinct !DILexicalBlock(scope: !21620, file: !3, line: 6350, column: 2)
!21651 = !DILocation(line: 6350, column: 19, scope: !21650)
!21652 = !DILocation(line: 6350, column: 24, scope: !21650)
!21653 = !DILocation(line: 6350, column: 17, scope: !21650)
!21654 = !DILocation(line: 6350, column: 7, scope: !21650)
!21655 = !DILocation(line: 6350, column: 28, scope: !21656)
!21656 = distinct !DILexicalBlock(scope: !21650, file: !3, line: 6350, column: 2)
!21657 = !DILocation(line: 6350, column: 32, scope: !21656)
!21658 = !DILocation(line: 6350, column: 37, scope: !21656)
!21659 = !DILocation(line: 6350, column: 30, scope: !21656)
!21660 = !DILocation(line: 6350, column: 2, scope: !21650)
!21661 = !DILocation(line: 6351, column: 7, scope: !21662)
!21662 = distinct !DILexicalBlock(scope: !21663, file: !3, line: 6351, column: 7)
!21663 = distinct !DILexicalBlock(scope: !21656, file: !3, line: 6350, column: 55)
!21664 = !DILocation(line: 6351, column: 11, scope: !21662)
!21665 = !DILocation(line: 6351, column: 23, scope: !21662)
!21666 = !DILocation(line: 6351, column: 7, scope: !21663)
!21667 = !DILocalVariable(name: "dir_dot_best", scope: !21668, file: !3, line: 6352, type: !1727)
!21668 = distinct !DILexicalBlock(scope: !21662, file: !3, line: 6351, column: 28)
!21669 = !DILocation(line: 6352, column: 10, scope: !21668)
!21670 = !DILocalVariable(name: "co_link_curr_best", scope: !21668, file: !3, line: 6353, type: !35)
!21671 = !DILocation(line: 6353, column: 8, scope: !21668)
!21672 = !DILocalVariable(name: "j", scope: !21668, file: !3, line: 6354, type: !35)
!21673 = !DILocation(line: 6354, column: 8, scope: !21668)
!21674 = !DILocation(line: 6356, column: 11, scope: !21675)
!21675 = distinct !DILexicalBlock(scope: !21668, file: !3, line: 6356, column: 4)
!21676 = !DILocation(line: 6356, column: 9, scope: !21675)
!21677 = !DILocation(line: 6356, column: 16, scope: !21678)
!21678 = distinct !DILexicalBlock(scope: !21675, file: !3, line: 6356, column: 4)
!21679 = !DILocation(line: 6356, column: 20, scope: !21678)
!21680 = !DILocation(line: 6356, column: 24, scope: !21678)
!21681 = !DILocation(line: 6356, column: 18, scope: !21678)
!21682 = !DILocation(line: 6356, column: 4, scope: !21675)
!21683 = !DILocalVariable(name: "tdir", scope: !21684, file: !3, line: 6357, type: !1754)
!21684 = distinct !DILexicalBlock(scope: !21678, file: !3, line: 6356, column: 42)
!21685 = !DILocation(line: 6357, column: 11, scope: !21684)
!21686 = !DILocalVariable(name: "dir_dot", scope: !21684, file: !3, line: 6358, type: !1727)
!21687 = !DILocation(line: 6358, column: 11, scope: !21684)
!21688 = !DILocation(line: 6359, column: 17, scope: !21684)
!21689 = !DILocation(line: 6359, column: 23, scope: !21684)
!21690 = !DILocation(line: 6359, column: 27, scope: !21684)
!21691 = !DILocation(line: 6359, column: 39, scope: !21684)
!21692 = !DILocation(line: 6359, column: 43, scope: !21684)
!21693 = !DILocation(line: 6359, column: 59, scope: !21684)
!21694 = !DILocation(line: 6359, column: 5, scope: !21684)
!21695 = !DILocation(line: 6360, column: 18, scope: !21684)
!21696 = !DILocation(line: 6360, column: 5, scope: !21684)
!21697 = !DILocation(line: 6361, column: 24, scope: !21684)
!21698 = !DILocation(line: 6361, column: 29, scope: !21684)
!21699 = !DILocation(line: 6361, column: 15, scope: !21684)
!21700 = !DILocation(line: 6361, column: 13, scope: !21684)
!21701 = !DILocation(line: 6362, column: 9, scope: !21702)
!21702 = distinct !DILexicalBlock(scope: !21684, file: !3, line: 6362, column: 9)
!21703 = !DILocation(line: 6362, column: 19, scope: !21702)
!21704 = !DILocation(line: 6362, column: 17, scope: !21702)
!21705 = !DILocation(line: 6362, column: 9, scope: !21684)
!21706 = !DILocation(line: 6363, column: 21, scope: !21707)
!21707 = distinct !DILexicalBlock(scope: !21702, file: !3, line: 6362, column: 33)
!21708 = !DILocation(line: 6363, column: 19, scope: !21707)
!21709 = !DILocation(line: 6364, column: 26, scope: !21707)
!21710 = !DILocation(line: 6364, column: 24, scope: !21707)
!21711 = !DILocation(line: 6365, column: 5, scope: !21707)
!21712 = !DILocation(line: 6366, column: 4, scope: !21684)
!21713 = !DILocation(line: 6356, column: 38, scope: !21678)
!21714 = !DILocation(line: 6356, column: 4, scope: !21678)
!21715 = distinct !{!21715, !21682, !21716}
!21716 = !DILocation(line: 6366, column: 4, scope: !21675)
!21717 = !DILocation(line: 6368, column: 8, scope: !21718)
!21718 = distinct !DILexicalBlock(scope: !21668, file: !3, line: 6368, column: 8)
!21719 = !DILocation(line: 6368, column: 26, scope: !21718)
!21720 = !DILocation(line: 6368, column: 8, scope: !21668)
!21721 = !DILocation(line: 6369, column: 24, scope: !21722)
!21722 = distinct !DILexicalBlock(scope: !21718, file: !3, line: 6368, column: 33)
!21723 = !DILocation(line: 6369, column: 5, scope: !21722)
!21724 = !DILocation(line: 6369, column: 9, scope: !21722)
!21725 = !DILocation(line: 6369, column: 22, scope: !21722)
!21726 = !DILocation(line: 6370, column: 4, scope: !21722)
!21727 = !DILocation(line: 6371, column: 3, scope: !21668)
!21728 = !DILocation(line: 6372, column: 2, scope: !21663)
!21729 = !DILocation(line: 6350, column: 45, scope: !21656)
!21730 = !DILocation(line: 6350, column: 51, scope: !21656)
!21731 = !DILocation(line: 6350, column: 2, scope: !21656)
!21732 = distinct !{!21732, !21660, !21733}
!21733 = !DILocation(line: 6372, column: 2, scope: !21650)
!21734 = !DILocation(line: 6373, column: 1, scope: !21620)
!21735 = distinct !DISubprogram(name: "normalize_v2", scope: !4885, file: !4885, line: 783, type: !10636, scopeLine: 784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!21736 = !DILocalVariable(name: "n", arg: 1, scope: !21735, file: !4885, line: 783, type: !1773)
!21737 = !DILocation(line: 783, column: 34, scope: !21735)
!21738 = !DILocation(line: 785, column: 25, scope: !21735)
!21739 = !DILocation(line: 785, column: 28, scope: !21735)
!21740 = !DILocation(line: 785, column: 9, scope: !21735)
!21741 = !DILocation(line: 785, column: 2, scope: !21735)
!21742 = distinct !DISubprogram(name: "normalize_v2_v2", scope: !4885, file: !4885, line: 767, type: !12603, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!21743 = !DILocalVariable(name: "r", arg: 1, scope: !21742, file: !4885, line: 767, type: !1773)
!21744 = !DILocation(line: 767, column: 37, scope: !21742)
!21745 = !DILocalVariable(name: "a", arg: 2, scope: !21742, file: !4885, line: 767, type: !3980)
!21746 = !DILocation(line: 767, column: 55, scope: !21742)
!21747 = !DILocalVariable(name: "d", scope: !21742, file: !4885, line: 769, type: !1727)
!21748 = !DILocation(line: 769, column: 8, scope: !21742)
!21749 = !DILocation(line: 769, column: 21, scope: !21742)
!21750 = !DILocation(line: 769, column: 24, scope: !21742)
!21751 = !DILocation(line: 769, column: 12, scope: !21742)
!21752 = !DILocation(line: 771, column: 6, scope: !21753)
!21753 = distinct !DILexicalBlock(scope: !21742, file: !4885, line: 771, column: 6)
!21754 = !DILocation(line: 771, column: 8, scope: !21753)
!21755 = !DILocation(line: 771, column: 6, scope: !21742)
!21756 = !DILocation(line: 772, column: 13, scope: !21757)
!21757 = distinct !DILexicalBlock(scope: !21753, file: !4885, line: 771, column: 20)
!21758 = !DILocation(line: 772, column: 7, scope: !21757)
!21759 = !DILocation(line: 772, column: 5, scope: !21757)
!21760 = !DILocation(line: 773, column: 15, scope: !21757)
!21761 = !DILocation(line: 773, column: 18, scope: !21757)
!21762 = !DILocation(line: 773, column: 28, scope: !21757)
!21763 = !DILocation(line: 773, column: 26, scope: !21757)
!21764 = !DILocation(line: 773, column: 3, scope: !21757)
!21765 = !DILocation(line: 774, column: 2, scope: !21757)
!21766 = !DILocation(line: 776, column: 11, scope: !21767)
!21767 = distinct !DILexicalBlock(scope: !21753, file: !4885, line: 775, column: 7)
!21768 = !DILocation(line: 776, column: 3, scope: !21767)
!21769 = !DILocation(line: 777, column: 5, scope: !21767)
!21770 = !DILocation(line: 780, column: 9, scope: !21742)
!21771 = !DILocation(line: 780, column: 2, scope: !21742)
!21772 = distinct !DISubprogram(name: "mul_v2_v2fl", scope: !4885, file: !4885, line: 386, type: !12654, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!21773 = !DILocalVariable(name: "r", arg: 1, scope: !21772, file: !4885, line: 386, type: !1773)
!21774 = !DILocation(line: 386, column: 32, scope: !21772)
!21775 = !DILocalVariable(name: "a", arg: 2, scope: !21772, file: !4885, line: 386, type: !3980)
!21776 = !DILocation(line: 386, column: 50, scope: !21772)
!21777 = !DILocalVariable(name: "f", arg: 3, scope: !21772, file: !4885, line: 386, type: !1727)
!21778 = !DILocation(line: 386, column: 62, scope: !21772)
!21779 = !DILocation(line: 388, column: 9, scope: !21772)
!21780 = !DILocation(line: 388, column: 16, scope: !21772)
!21781 = !DILocation(line: 388, column: 14, scope: !21772)
!21782 = !DILocation(line: 388, column: 2, scope: !21772)
!21783 = !DILocation(line: 388, column: 7, scope: !21772)
!21784 = !DILocation(line: 389, column: 9, scope: !21772)
!21785 = !DILocation(line: 389, column: 16, scope: !21772)
!21786 = !DILocation(line: 389, column: 14, scope: !21772)
!21787 = !DILocation(line: 389, column: 2, scope: !21772)
!21788 = !DILocation(line: 389, column: 7, scope: !21772)
!21789 = !DILocation(line: 390, column: 1, scope: !21772)
!21790 = distinct !DISubprogram(name: "calcVertSlideMouseActiveVert", scope: !3, file: !3, line: 6315, type: !3854, scopeLine: 6316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!21791 = !DILocalVariable(name: "t", arg: 1, scope: !21790, file: !3, line: 6315, type: !3856)
!21792 = !DILocation(line: 6315, column: 60, scope: !21790)
!21793 = !DILocalVariable(name: "mval", arg: 2, scope: !21790, file: !3, line: 6315, type: !3857)
!21794 = !DILocation(line: 6315, column: 73, scope: !21790)
!21795 = !DILocalVariable(name: "sld", scope: !21790, file: !3, line: 6317, type: !3817)
!21796 = !DILocation(line: 6317, column: 17, scope: !21790)
!21797 = !DILocation(line: 6317, column: 23, scope: !21790)
!21798 = !DILocation(line: 6317, column: 26, scope: !21790)
!21799 = !DILocalVariable(name: "mval_fl", scope: !21790, file: !3, line: 6318, type: !1754)
!21800 = !DILocation(line: 6318, column: 8, scope: !21790)
!21801 = !DILocation(line: 6318, column: 21, scope: !21790)
!21802 = !DILocation(line: 6318, column: 22, scope: !21790)
!21803 = !DILocalVariable(name: "sv", scope: !21790, file: !3, line: 6319, type: !3822)
!21804 = !DILocation(line: 6319, column: 26, scope: !21790)
!21805 = !DILocalVariable(name: "dist_sq", scope: !21790, file: !3, line: 6322, type: !1727)
!21806 = !DILocation(line: 6322, column: 8, scope: !21790)
!21807 = !DILocalVariable(name: "dist_min_sq", scope: !21790, file: !3, line: 6323, type: !1727)
!21808 = !DILocation(line: 6323, column: 8, scope: !21790)
!21809 = !DILocalVariable(name: "i", scope: !21790, file: !3, line: 6324, type: !35)
!21810 = !DILocation(line: 6324, column: 6, scope: !21790)
!21811 = !DILocation(line: 6326, column: 9, scope: !21812)
!21812 = distinct !DILexicalBlock(scope: !21790, file: !3, line: 6326, column: 2)
!21813 = !DILocation(line: 6326, column: 19, scope: !21812)
!21814 = !DILocation(line: 6326, column: 24, scope: !21812)
!21815 = !DILocation(line: 6326, column: 17, scope: !21812)
!21816 = !DILocation(line: 6326, column: 7, scope: !21812)
!21817 = !DILocation(line: 6326, column: 28, scope: !21818)
!21818 = distinct !DILexicalBlock(scope: !21812, file: !3, line: 6326, column: 2)
!21819 = !DILocation(line: 6326, column: 32, scope: !21818)
!21820 = !DILocation(line: 6326, column: 37, scope: !21818)
!21821 = !DILocation(line: 6326, column: 30, scope: !21818)
!21822 = !DILocation(line: 6326, column: 2, scope: !21812)
!21823 = !DILocation(line: 6327, column: 30, scope: !21824)
!21824 = distinct !DILexicalBlock(scope: !21818, file: !3, line: 6326, column: 55)
!21825 = !DILocation(line: 6327, column: 39, scope: !21824)
!21826 = !DILocation(line: 6327, column: 43, scope: !21824)
!21827 = !DILocation(line: 6327, column: 13, scope: !21824)
!21828 = !DILocation(line: 6327, column: 11, scope: !21824)
!21829 = !DILocation(line: 6328, column: 7, scope: !21830)
!21830 = distinct !DILexicalBlock(scope: !21824, file: !3, line: 6328, column: 7)
!21831 = !DILocation(line: 6328, column: 17, scope: !21830)
!21832 = !DILocation(line: 6328, column: 15, scope: !21830)
!21833 = !DILocation(line: 6328, column: 7, scope: !21824)
!21834 = !DILocation(line: 6329, column: 18, scope: !21835)
!21835 = distinct !DILexicalBlock(scope: !21830, file: !3, line: 6328, column: 30)
!21836 = !DILocation(line: 6329, column: 16, scope: !21835)
!21837 = !DILocation(line: 6330, column: 25, scope: !21835)
!21838 = !DILocation(line: 6330, column: 4, scope: !21835)
!21839 = !DILocation(line: 6330, column: 9, scope: !21835)
!21840 = !DILocation(line: 6330, column: 23, scope: !21835)
!21841 = !DILocation(line: 6331, column: 3, scope: !21835)
!21842 = !DILocation(line: 6332, column: 2, scope: !21824)
!21843 = !DILocation(line: 6326, column: 45, scope: !21818)
!21844 = !DILocation(line: 6326, column: 51, scope: !21818)
!21845 = !DILocation(line: 6326, column: 2, scope: !21818)
!21846 = distinct !{!21846, !21822, !21847}
!21847 = !DILocation(line: 6332, column: 2, scope: !21812)
!21848 = !DILocation(line: 6333, column: 1, scope: !21790)
!21849 = distinct !DISubprogram(name: "applyBoneRoll", scope: !3, file: !3, line: 6828, type: !12679, scopeLine: 6829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!21850 = !DILocalVariable(name: "t", arg: 1, scope: !21849, file: !3, line: 6828, type: !3841)
!21851 = !DILocation(line: 6828, column: 38, scope: !21849)
!21852 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !21849, file: !3, line: 6828, type: !3857)
!21853 = !DILocation(line: 6828, column: 51, scope: !21849)
!21854 = !DILocalVariable(name: "td", scope: !21849, file: !3, line: 6830, type: !3868)
!21855 = !DILocation(line: 6830, column: 13, scope: !21849)
!21856 = !DILocation(line: 6830, column: 18, scope: !21849)
!21857 = !DILocation(line: 6830, column: 21, scope: !21849)
!21858 = !DILocalVariable(name: "i", scope: !21849, file: !3, line: 6831, type: !35)
!21859 = !DILocation(line: 6831, column: 6, scope: !21849)
!21860 = !DILocalVariable(name: "str", scope: !21849, file: !3, line: 6832, type: !2366)
!21861 = !DILocation(line: 6832, column: 7, scope: !21849)
!21862 = !DILocalVariable(name: "final", scope: !21849, file: !3, line: 6834, type: !1727)
!21863 = !DILocation(line: 6834, column: 8, scope: !21849)
!21864 = !DILocation(line: 6836, column: 10, scope: !21849)
!21865 = !DILocation(line: 6836, column: 13, scope: !21849)
!21866 = !DILocation(line: 6836, column: 8, scope: !21849)
!21867 = !DILocation(line: 6838, column: 20, scope: !21849)
!21868 = !DILocation(line: 6838, column: 2, scope: !21849)
!21869 = !DILocation(line: 6840, column: 17, scope: !21849)
!21870 = !DILocation(line: 6840, column: 20, scope: !21849)
!21871 = !DILocation(line: 6840, column: 2, scope: !21849)
!21872 = !DILocation(line: 6842, column: 19, scope: !21873)
!21873 = distinct !DILexicalBlock(scope: !21849, file: !3, line: 6842, column: 6)
!21874 = !DILocation(line: 6842, column: 22, scope: !21873)
!21875 = !DILocation(line: 6842, column: 6, scope: !21873)
!21876 = !DILocation(line: 6842, column: 6, scope: !21849)
!21877 = !DILocalVariable(name: "c", scope: !21878, file: !3, line: 6843, type: !22)
!21878 = distinct !DILexicalBlock(scope: !21873, file: !3, line: 6842, column: 28)
!21879 = !DILocation(line: 6843, column: 8, scope: !21878)
!21880 = !DILocation(line: 6845, column: 20, scope: !21878)
!21881 = !DILocation(line: 6845, column: 23, scope: !21878)
!21882 = !DILocation(line: 6845, column: 29, scope: !21878)
!21883 = !DILocation(line: 6845, column: 33, scope: !21878)
!21884 = !DILocation(line: 6845, column: 36, scope: !21878)
!21885 = !DILocation(line: 6845, column: 43, scope: !21878)
!21886 = !DILocation(line: 6845, column: 3, scope: !21878)
!21887 = !DILocation(line: 6847, column: 16, scope: !21878)
!21888 = !DILocation(line: 6847, column: 56, scope: !21878)
!21889 = !DILocation(line: 6847, column: 3, scope: !21878)
!21890 = !DILocation(line: 6848, column: 2, scope: !21878)
!21891 = !DILocation(line: 6850, column: 16, scope: !21892)
!21892 = distinct !DILexicalBlock(scope: !21873, file: !3, line: 6849, column: 7)
!21893 = !DILocation(line: 6850, column: 57, scope: !21892)
!21894 = !DILocation(line: 6850, column: 3, scope: !21892)
!21895 = !DILocation(line: 6854, column: 9, scope: !21896)
!21896 = distinct !DILexicalBlock(scope: !21849, file: !3, line: 6854, column: 2)
!21897 = !DILocation(line: 6854, column: 7, scope: !21896)
!21898 = !DILocation(line: 6854, column: 14, scope: !21899)
!21899 = distinct !DILexicalBlock(scope: !21896, file: !3, line: 6854, column: 2)
!21900 = !DILocation(line: 6854, column: 18, scope: !21899)
!21901 = !DILocation(line: 6854, column: 21, scope: !21899)
!21902 = !DILocation(line: 6854, column: 16, scope: !21899)
!21903 = !DILocation(line: 6854, column: 2, scope: !21896)
!21904 = !DILocation(line: 6855, column: 7, scope: !21905)
!21905 = distinct !DILexicalBlock(scope: !21906, file: !3, line: 6855, column: 7)
!21906 = distinct !DILexicalBlock(scope: !21899, file: !3, line: 6854, column: 39)
!21907 = !DILocation(line: 6855, column: 11, scope: !21905)
!21908 = !DILocation(line: 6855, column: 16, scope: !21905)
!21909 = !DILocation(line: 6855, column: 7, scope: !21906)
!21910 = !DILocation(line: 6856, column: 4, scope: !21905)
!21911 = !DILocation(line: 6858, column: 7, scope: !21912)
!21912 = distinct !DILexicalBlock(scope: !21906, file: !3, line: 6858, column: 7)
!21913 = !DILocation(line: 6858, column: 11, scope: !21912)
!21914 = !DILocation(line: 6858, column: 16, scope: !21912)
!21915 = !DILocation(line: 6858, column: 7, scope: !21906)
!21916 = !DILocation(line: 6859, column: 4, scope: !21912)
!21917 = !DILocation(line: 6861, column: 16, scope: !21906)
!21918 = !DILocation(line: 6861, column: 20, scope: !21906)
!21919 = !DILocation(line: 6861, column: 27, scope: !21906)
!21920 = !DILocation(line: 6861, column: 25, scope: !21906)
!21921 = !DILocation(line: 6861, column: 5, scope: !21906)
!21922 = !DILocation(line: 6861, column: 9, scope: !21906)
!21923 = !DILocation(line: 6861, column: 14, scope: !21906)
!21924 = !DILocation(line: 6862, column: 2, scope: !21906)
!21925 = !DILocation(line: 6854, column: 29, scope: !21899)
!21926 = !DILocation(line: 6854, column: 35, scope: !21899)
!21927 = !DILocation(line: 6854, column: 2, scope: !21899)
!21928 = distinct !{!21928, !21903, !21929}
!21929 = !DILocation(line: 6862, column: 2, scope: !21896)
!21930 = !DILocation(line: 6864, column: 13, scope: !21849)
!21931 = !DILocation(line: 6864, column: 2, scope: !21849)
!21932 = !DILocation(line: 6866, column: 22, scope: !21849)
!21933 = !DILocation(line: 6866, column: 25, scope: !21849)
!21934 = !DILocation(line: 6866, column: 29, scope: !21849)
!21935 = !DILocation(line: 6866, column: 2, scope: !21849)
!21936 = !DILocation(line: 6867, column: 1, scope: !21849)
!21937 = distinct !DISubprogram(name: "applyBakeTime", scope: !3, file: !3, line: 6893, type: !12679, scopeLine: 6894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!21938 = !DILocalVariable(name: "t", arg: 1, scope: !21937, file: !3, line: 6893, type: !3841)
!21939 = !DILocation(line: 6893, column: 38, scope: !21937)
!21940 = !DILocalVariable(name: "mval", arg: 2, scope: !21937, file: !3, line: 6893, type: !3857)
!21941 = !DILocation(line: 6893, column: 51, scope: !21937)
!21942 = !DILocalVariable(name: "td", scope: !21937, file: !3, line: 6895, type: !3868)
!21943 = !DILocation(line: 6895, column: 13, scope: !21937)
!21944 = !DILocation(line: 6895, column: 18, scope: !21937)
!21945 = !DILocation(line: 6895, column: 21, scope: !21937)
!21946 = !DILocalVariable(name: "time", scope: !21937, file: !3, line: 6896, type: !1727)
!21947 = !DILocation(line: 6896, column: 8, scope: !21937)
!21948 = !DILocalVariable(name: "i", scope: !21937, file: !3, line: 6897, type: !35)
!21949 = !DILocation(line: 6897, column: 6, scope: !21937)
!21950 = !DILocalVariable(name: "str", scope: !21937, file: !3, line: 6898, type: !2366)
!21951 = !DILocation(line: 6898, column: 7, scope: !21937)
!21952 = !DILocalVariable(name: "fac", scope: !21937, file: !3, line: 6900, type: !1727)
!21953 = !DILocation(line: 6900, column: 8, scope: !21937)
!21954 = !DILocation(line: 6902, column: 6, scope: !21955)
!21955 = distinct !DILexicalBlock(scope: !21937, file: !3, line: 6902, column: 6)
!21956 = !DILocation(line: 6902, column: 9, scope: !21955)
!21957 = !DILocation(line: 6902, column: 15, scope: !21955)
!21958 = !DILocation(line: 6902, column: 6, scope: !21937)
!21959 = !DILocation(line: 6904, column: 18, scope: !21960)
!21960 = distinct !DILexicalBlock(scope: !21955, file: !3, line: 6902, column: 26)
!21961 = !DILocation(line: 6904, column: 21, scope: !21960)
!21962 = !DILocation(line: 6904, column: 35, scope: !21960)
!21963 = !DILocation(line: 6904, column: 38, scope: !21960)
!21964 = !DILocation(line: 6904, column: 44, scope: !21960)
!21965 = !DILocation(line: 6904, column: 33, scope: !21960)
!21966 = !DILocation(line: 6904, column: 65, scope: !21960)
!21967 = !DILocation(line: 6904, column: 63, scope: !21960)
!21968 = !DILocation(line: 6904, column: 8, scope: !21960)
!21969 = !DILocation(line: 6905, column: 27, scope: !21960)
!21970 = !DILocation(line: 6905, column: 30, scope: !21960)
!21971 = !DILocation(line: 6905, column: 44, scope: !21960)
!21972 = !DILocation(line: 6905, column: 42, scope: !21960)
!21973 = !DILocation(line: 6905, column: 50, scope: !21960)
!21974 = !DILocation(line: 6905, column: 48, scope: !21960)
!21975 = !DILocation(line: 6905, column: 61, scope: !21960)
!21976 = !DILocation(line: 6905, column: 59, scope: !21960)
!21977 = !DILocation(line: 6905, column: 16, scope: !21960)
!21978 = !DILocation(line: 6905, column: 8, scope: !21960)
!21979 = !DILocation(line: 6906, column: 2, scope: !21960)
!21980 = !DILocation(line: 6908, column: 18, scope: !21981)
!21981 = distinct !DILexicalBlock(scope: !21955, file: !3, line: 6907, column: 7)
!21982 = !DILocation(line: 6908, column: 21, scope: !21981)
!21983 = !DILocation(line: 6908, column: 35, scope: !21981)
!21984 = !DILocation(line: 6908, column: 33, scope: !21981)
!21985 = !DILocation(line: 6908, column: 46, scope: !21981)
!21986 = !DILocation(line: 6908, column: 44, scope: !21981)
!21987 = !DILocation(line: 6908, column: 8, scope: !21981)
!21988 = !DILocation(line: 6911, column: 20, scope: !21937)
!21989 = !DILocation(line: 6911, column: 2, scope: !21937)
!21990 = !DILocation(line: 6913, column: 17, scope: !21937)
!21991 = !DILocation(line: 6913, column: 20, scope: !21937)
!21992 = !DILocation(line: 6913, column: 2, scope: !21937)
!21993 = !DILocation(line: 6916, column: 19, scope: !21994)
!21994 = distinct !DILexicalBlock(scope: !21937, file: !3, line: 6916, column: 6)
!21995 = !DILocation(line: 6916, column: 22, scope: !21994)
!21996 = !DILocation(line: 6916, column: 6, scope: !21994)
!21997 = !DILocation(line: 6916, column: 6, scope: !21937)
!21998 = !DILocalVariable(name: "c", scope: !21999, file: !3, line: 6917, type: !22)
!21999 = distinct !DILexicalBlock(scope: !21994, file: !3, line: 6916, column: 28)
!22000 = !DILocation(line: 6917, column: 8, scope: !21999)
!22001 = !DILocation(line: 6919, column: 20, scope: !21999)
!22002 = !DILocation(line: 6919, column: 23, scope: !21999)
!22003 = !DILocation(line: 6919, column: 29, scope: !21999)
!22004 = !DILocation(line: 6919, column: 33, scope: !21999)
!22005 = !DILocation(line: 6919, column: 36, scope: !21999)
!22006 = !DILocation(line: 6919, column: 43, scope: !21999)
!22007 = !DILocation(line: 6919, column: 3, scope: !21999)
!22008 = !DILocation(line: 6921, column: 7, scope: !22009)
!22009 = distinct !DILexicalBlock(scope: !21999, file: !3, line: 6921, column: 7)
!22010 = !DILocation(line: 6921, column: 12, scope: !22009)
!22011 = !DILocation(line: 6921, column: 7, scope: !21999)
!22012 = !DILocation(line: 6922, column: 17, scope: !22009)
!22013 = !DILocation(line: 6922, column: 60, scope: !22009)
!22014 = !DILocation(line: 6922, column: 63, scope: !22009)
!22015 = !DILocation(line: 6922, column: 66, scope: !22009)
!22016 = !DILocation(line: 6922, column: 4, scope: !22009)
!22017 = !DILocation(line: 6924, column: 17, scope: !22009)
!22018 = !DILocation(line: 6924, column: 59, scope: !22009)
!22019 = !DILocation(line: 6924, column: 62, scope: !22009)
!22020 = !DILocation(line: 6924, column: 65, scope: !22009)
!22021 = !DILocation(line: 6924, column: 4, scope: !22009)
!22022 = !DILocation(line: 6925, column: 2, scope: !21999)
!22023 = !DILocation(line: 6928, column: 7, scope: !22024)
!22024 = distinct !DILexicalBlock(scope: !22025, file: !3, line: 6928, column: 7)
!22025 = distinct !DILexicalBlock(scope: !21994, file: !3, line: 6926, column: 7)
!22026 = !DILocation(line: 6928, column: 12, scope: !22024)
!22027 = !DILocation(line: 6928, column: 7, scope: !22025)
!22028 = !DILocation(line: 6929, column: 17, scope: !22024)
!22029 = !DILocation(line: 6929, column: 62, scope: !22024)
!22030 = !DILocation(line: 6929, column: 68, scope: !22024)
!22031 = !DILocation(line: 6929, column: 71, scope: !22024)
!22032 = !DILocation(line: 6929, column: 4, scope: !22024)
!22033 = !DILocation(line: 6931, column: 17, scope: !22024)
!22034 = !DILocation(line: 6931, column: 61, scope: !22024)
!22035 = !DILocation(line: 6931, column: 67, scope: !22024)
!22036 = !DILocation(line: 6931, column: 70, scope: !22024)
!22037 = !DILocation(line: 6931, column: 4, scope: !22024)
!22038 = !DILocation(line: 6934, column: 9, scope: !22039)
!22039 = distinct !DILexicalBlock(scope: !21937, file: !3, line: 6934, column: 2)
!22040 = !DILocation(line: 6934, column: 7, scope: !22039)
!22041 = !DILocation(line: 6934, column: 14, scope: !22042)
!22042 = distinct !DILexicalBlock(scope: !22039, file: !3, line: 6934, column: 2)
!22043 = !DILocation(line: 6934, column: 18, scope: !22042)
!22044 = !DILocation(line: 6934, column: 21, scope: !22042)
!22045 = !DILocation(line: 6934, column: 16, scope: !22042)
!22046 = !DILocation(line: 6934, column: 2, scope: !22039)
!22047 = !DILocation(line: 6935, column: 7, scope: !22048)
!22048 = distinct !DILexicalBlock(scope: !22049, file: !3, line: 6935, column: 7)
!22049 = distinct !DILexicalBlock(scope: !22042, file: !3, line: 6934, column: 39)
!22050 = !DILocation(line: 6935, column: 11, scope: !22048)
!22051 = !DILocation(line: 6935, column: 16, scope: !22048)
!22052 = !DILocation(line: 6935, column: 7, scope: !22049)
!22053 = !DILocation(line: 6936, column: 4, scope: !22048)
!22054 = !DILocation(line: 6938, column: 7, scope: !22055)
!22055 = distinct !DILexicalBlock(scope: !22049, file: !3, line: 6938, column: 7)
!22056 = !DILocation(line: 6938, column: 11, scope: !22055)
!22057 = !DILocation(line: 6938, column: 16, scope: !22055)
!22058 = !DILocation(line: 6938, column: 7, scope: !22049)
!22059 = !DILocation(line: 6939, column: 4, scope: !22055)
!22060 = !DILocation(line: 6941, column: 7, scope: !22061)
!22061 = distinct !DILexicalBlock(scope: !22049, file: !3, line: 6941, column: 7)
!22062 = !DILocation(line: 6941, column: 11, scope: !22061)
!22063 = !DILocation(line: 6941, column: 7, scope: !22049)
!22064 = !DILocation(line: 6942, column: 15, scope: !22065)
!22065 = distinct !DILexicalBlock(scope: !22061, file: !3, line: 6941, column: 16)
!22066 = !DILocation(line: 6942, column: 19, scope: !22065)
!22067 = !DILocation(line: 6942, column: 26, scope: !22065)
!22068 = !DILocation(line: 6942, column: 33, scope: !22065)
!22069 = !DILocation(line: 6942, column: 37, scope: !22065)
!22070 = !DILocation(line: 6942, column: 31, scope: !22065)
!22071 = !DILocation(line: 6942, column: 24, scope: !22065)
!22072 = !DILocation(line: 6942, column: 5, scope: !22065)
!22073 = !DILocation(line: 6942, column: 9, scope: !22065)
!22074 = !DILocation(line: 6942, column: 13, scope: !22065)
!22075 = !DILocation(line: 6943, column: 8, scope: !22076)
!22076 = distinct !DILexicalBlock(scope: !22065, file: !3, line: 6943, column: 8)
!22077 = !DILocation(line: 6943, column: 12, scope: !22076)
!22078 = !DILocation(line: 6943, column: 17, scope: !22076)
!22079 = !DILocation(line: 6943, column: 22, scope: !22076)
!22080 = !DILocation(line: 6943, column: 26, scope: !22076)
!22081 = !DILocation(line: 6943, column: 30, scope: !22076)
!22082 = !DILocation(line: 6943, column: 25, scope: !22076)
!22083 = !DILocation(line: 6943, column: 37, scope: !22076)
!22084 = !DILocation(line: 6943, column: 41, scope: !22076)
!22085 = !DILocation(line: 6943, column: 46, scope: !22076)
!22086 = !DILocation(line: 6943, column: 36, scope: !22076)
!22087 = !DILocation(line: 6943, column: 34, scope: !22076)
!22088 = !DILocation(line: 6943, column: 8, scope: !22065)
!22089 = !DILocation(line: 6943, column: 64, scope: !22076)
!22090 = !DILocation(line: 6943, column: 68, scope: !22076)
!22091 = !DILocation(line: 6943, column: 73, scope: !22076)
!22092 = !DILocation(line: 6943, column: 63, scope: !22076)
!22093 = !DILocation(line: 6943, column: 53, scope: !22076)
!22094 = !DILocation(line: 6943, column: 57, scope: !22076)
!22095 = !DILocation(line: 6943, column: 61, scope: !22076)
!22096 = !DILocation(line: 6943, column: 52, scope: !22076)
!22097 = !DILocation(line: 6944, column: 8, scope: !22098)
!22098 = distinct !DILexicalBlock(scope: !22065, file: !3, line: 6944, column: 8)
!22099 = !DILocation(line: 6944, column: 12, scope: !22098)
!22100 = !DILocation(line: 6944, column: 17, scope: !22098)
!22101 = !DILocation(line: 6944, column: 22, scope: !22098)
!22102 = !DILocation(line: 6944, column: 26, scope: !22098)
!22103 = !DILocation(line: 6944, column: 30, scope: !22098)
!22104 = !DILocation(line: 6944, column: 25, scope: !22098)
!22105 = !DILocation(line: 6944, column: 37, scope: !22098)
!22106 = !DILocation(line: 6944, column: 41, scope: !22098)
!22107 = !DILocation(line: 6944, column: 46, scope: !22098)
!22108 = !DILocation(line: 6944, column: 36, scope: !22098)
!22109 = !DILocation(line: 6944, column: 34, scope: !22098)
!22110 = !DILocation(line: 6944, column: 8, scope: !22065)
!22111 = !DILocation(line: 6944, column: 64, scope: !22098)
!22112 = !DILocation(line: 6944, column: 68, scope: !22098)
!22113 = !DILocation(line: 6944, column: 73, scope: !22098)
!22114 = !DILocation(line: 6944, column: 63, scope: !22098)
!22115 = !DILocation(line: 6944, column: 53, scope: !22098)
!22116 = !DILocation(line: 6944, column: 57, scope: !22098)
!22117 = !DILocation(line: 6944, column: 61, scope: !22098)
!22118 = !DILocation(line: 6944, column: 52, scope: !22098)
!22119 = !DILocation(line: 6945, column: 3, scope: !22065)
!22120 = !DILocation(line: 6946, column: 2, scope: !22049)
!22121 = !DILocation(line: 6934, column: 29, scope: !22042)
!22122 = !DILocation(line: 6934, column: 35, scope: !22042)
!22123 = !DILocation(line: 6934, column: 2, scope: !22042)
!22124 = distinct !{!22124, !22046, !22125}
!22125 = !DILocation(line: 6946, column: 2, scope: !22039)
!22126 = !DILocation(line: 6948, column: 13, scope: !21937)
!22127 = !DILocation(line: 6948, column: 2, scope: !21937)
!22128 = !DILocation(line: 6950, column: 22, scope: !21937)
!22129 = !DILocation(line: 6950, column: 25, scope: !21937)
!22130 = !DILocation(line: 6950, column: 29, scope: !21937)
!22131 = !DILocation(line: 6950, column: 2, scope: !21937)
!22132 = !DILocation(line: 6951, column: 1, scope: !21937)
!22133 = distinct !DISubprogram(name: "applyMirror", scope: !3, file: !3, line: 6972, type: !12679, scopeLine: 6973, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!22134 = !DILocalVariable(name: "t", arg: 1, scope: !22133, file: !3, line: 6972, type: !3841)
!22135 = !DILocation(line: 6972, column: 36, scope: !22133)
!22136 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !22133, file: !3, line: 6972, type: !3857)
!22137 = !DILocation(line: 6972, column: 49, scope: !22133)
!22138 = !DILocalVariable(name: "td", scope: !22133, file: !3, line: 6974, type: !3868)
!22139 = !DILocation(line: 6974, column: 13, scope: !22133)
!22140 = !DILocalVariable(name: "size", scope: !22133, file: !3, line: 6975, type: !1987)
!22141 = !DILocation(line: 6975, column: 8, scope: !22133)
!22142 = !DILocalVariable(name: "mat", scope: !22133, file: !3, line: 6975, type: !3881)
!22143 = !DILocation(line: 6975, column: 17, scope: !22133)
!22144 = !DILocalVariable(name: "i", scope: !22133, file: !3, line: 6976, type: !35)
!22145 = !DILocation(line: 6976, column: 6, scope: !22133)
!22146 = !DILocalVariable(name: "str", scope: !22133, file: !3, line: 6977, type: !2366)
!22147 = !DILocation(line: 6977, column: 7, scope: !22133)
!22148 = !DILocation(line: 6986, column: 6, scope: !22149)
!22149 = distinct !DILexicalBlock(scope: !22133, file: !3, line: 6986, column: 6)
!22150 = !DILocation(line: 6986, column: 9, scope: !22149)
!22151 = !DILocation(line: 6986, column: 13, scope: !22149)
!22152 = !DILocation(line: 6986, column: 18, scope: !22149)
!22153 = !DILocation(line: 6986, column: 6, scope: !22133)
!22154 = !DILocation(line: 6987, column: 23, scope: !22155)
!22155 = distinct !DILexicalBlock(scope: !22149, file: !3, line: 6986, column: 31)
!22156 = !DILocation(line: 6987, column: 31, scope: !22155)
!22157 = !DILocation(line: 6987, column: 13, scope: !22155)
!22158 = !DILocation(line: 6987, column: 21, scope: !22155)
!22159 = !DILocation(line: 6987, column: 3, scope: !22155)
!22160 = !DILocation(line: 6987, column: 11, scope: !22155)
!22161 = !DILocation(line: 6989, column: 16, scope: !22155)
!22162 = !DILocation(line: 6989, column: 21, scope: !22155)
!22163 = !DILocation(line: 6989, column: 3, scope: !22155)
!22164 = !DILocation(line: 6991, column: 7, scope: !22165)
!22165 = distinct !DILexicalBlock(scope: !22155, file: !3, line: 6991, column: 7)
!22166 = !DILocation(line: 6991, column: 10, scope: !22165)
!22167 = !DILocation(line: 6991, column: 14, scope: !22165)
!22168 = !DILocation(line: 6991, column: 7, scope: !22155)
!22169 = !DILocation(line: 6992, column: 4, scope: !22170)
!22170 = distinct !DILexicalBlock(scope: !22165, file: !3, line: 6991, column: 25)
!22171 = !DILocation(line: 6992, column: 7, scope: !22170)
!22172 = !DILocation(line: 6992, column: 11, scope: !22170)
!22173 = !DILocation(line: 6992, column: 21, scope: !22170)
!22174 = !DILocation(line: 6992, column: 30, scope: !22170)
!22175 = !DILocation(line: 6993, column: 3, scope: !22170)
!22176 = !DILocation(line: 6995, column: 16, scope: !22155)
!22177 = !DILocation(line: 6995, column: 55, scope: !22155)
!22178 = !DILocation(line: 6995, column: 58, scope: !22155)
!22179 = !DILocation(line: 6995, column: 62, scope: !22155)
!22180 = !DILocation(line: 6995, column: 3, scope: !22155)
!22181 = !DILocation(line: 6997, column: 10, scope: !22182)
!22182 = distinct !DILexicalBlock(scope: !22155, file: !3, line: 6997, column: 3)
!22183 = !DILocation(line: 6997, column: 20, scope: !22182)
!22184 = !DILocation(line: 6997, column: 23, scope: !22182)
!22185 = !DILocation(line: 6997, column: 18, scope: !22182)
!22186 = !DILocation(line: 6997, column: 8, scope: !22182)
!22187 = !DILocation(line: 6997, column: 29, scope: !22188)
!22188 = distinct !DILexicalBlock(scope: !22182, file: !3, line: 6997, column: 3)
!22189 = !DILocation(line: 6997, column: 33, scope: !22188)
!22190 = !DILocation(line: 6997, column: 36, scope: !22188)
!22191 = !DILocation(line: 6997, column: 31, scope: !22188)
!22192 = !DILocation(line: 6997, column: 3, scope: !22182)
!22193 = !DILocation(line: 6998, column: 8, scope: !22194)
!22194 = distinct !DILexicalBlock(scope: !22195, file: !3, line: 6998, column: 8)
!22195 = distinct !DILexicalBlock(scope: !22188, file: !3, line: 6997, column: 54)
!22196 = !DILocation(line: 6998, column: 12, scope: !22194)
!22197 = !DILocation(line: 6998, column: 17, scope: !22194)
!22198 = !DILocation(line: 6998, column: 8, scope: !22195)
!22199 = !DILocation(line: 6999, column: 5, scope: !22194)
!22200 = !DILocation(line: 7001, column: 8, scope: !22201)
!22201 = distinct !DILexicalBlock(scope: !22195, file: !3, line: 7001, column: 8)
!22202 = !DILocation(line: 7001, column: 12, scope: !22201)
!22203 = !DILocation(line: 7001, column: 17, scope: !22201)
!22204 = !DILocation(line: 7001, column: 8, scope: !22195)
!22205 = !DILocation(line: 7002, column: 5, scope: !22201)
!22206 = !DILocation(line: 7004, column: 18, scope: !22195)
!22207 = !DILocation(line: 7004, column: 21, scope: !22195)
!22208 = !DILocation(line: 7004, column: 25, scope: !22195)
!22209 = !DILocation(line: 7004, column: 4, scope: !22195)
!22210 = !DILocation(line: 7005, column: 3, scope: !22195)
!22211 = !DILocation(line: 6997, column: 44, scope: !22188)
!22212 = !DILocation(line: 6997, column: 50, scope: !22188)
!22213 = !DILocation(line: 6997, column: 3, scope: !22188)
!22214 = distinct !{!22214, !22192, !22215}
!22215 = !DILocation(line: 7005, column: 3, scope: !22182)
!22216 = !DILocation(line: 7007, column: 14, scope: !22155)
!22217 = !DILocation(line: 7007, column: 3, scope: !22155)
!22218 = !DILocation(line: 7009, column: 23, scope: !22155)
!22219 = !DILocation(line: 7009, column: 26, scope: !22155)
!22220 = !DILocation(line: 7009, column: 30, scope: !22155)
!22221 = !DILocation(line: 7009, column: 3, scope: !22155)
!22222 = !DILocation(line: 7010, column: 2, scope: !22155)
!22223 = !DILocation(line: 7012, column: 23, scope: !22224)
!22224 = distinct !DILexicalBlock(scope: !22149, file: !3, line: 7011, column: 7)
!22225 = !DILocation(line: 7012, column: 31, scope: !22224)
!22226 = !DILocation(line: 7012, column: 13, scope: !22224)
!22227 = !DILocation(line: 7012, column: 21, scope: !22224)
!22228 = !DILocation(line: 7012, column: 3, scope: !22224)
!22229 = !DILocation(line: 7012, column: 11, scope: !22224)
!22230 = !DILocation(line: 7014, column: 16, scope: !22224)
!22231 = !DILocation(line: 7014, column: 21, scope: !22224)
!22232 = !DILocation(line: 7014, column: 3, scope: !22224)
!22233 = !DILocation(line: 7016, column: 10, scope: !22234)
!22234 = distinct !DILexicalBlock(scope: !22224, file: !3, line: 7016, column: 3)
!22235 = !DILocation(line: 7016, column: 20, scope: !22234)
!22236 = !DILocation(line: 7016, column: 23, scope: !22234)
!22237 = !DILocation(line: 7016, column: 18, scope: !22234)
!22238 = !DILocation(line: 7016, column: 8, scope: !22234)
!22239 = !DILocation(line: 7016, column: 29, scope: !22240)
!22240 = distinct !DILexicalBlock(scope: !22234, file: !3, line: 7016, column: 3)
!22241 = !DILocation(line: 7016, column: 33, scope: !22240)
!22242 = !DILocation(line: 7016, column: 36, scope: !22240)
!22243 = !DILocation(line: 7016, column: 31, scope: !22240)
!22244 = !DILocation(line: 7016, column: 3, scope: !22234)
!22245 = !DILocation(line: 7017, column: 8, scope: !22246)
!22246 = distinct !DILexicalBlock(scope: !22247, file: !3, line: 7017, column: 8)
!22247 = distinct !DILexicalBlock(scope: !22240, file: !3, line: 7016, column: 54)
!22248 = !DILocation(line: 7017, column: 12, scope: !22246)
!22249 = !DILocation(line: 7017, column: 17, scope: !22246)
!22250 = !DILocation(line: 7017, column: 8, scope: !22247)
!22251 = !DILocation(line: 7018, column: 5, scope: !22246)
!22252 = !DILocation(line: 7020, column: 8, scope: !22253)
!22253 = distinct !DILexicalBlock(scope: !22247, file: !3, line: 7020, column: 8)
!22254 = !DILocation(line: 7020, column: 12, scope: !22253)
!22255 = !DILocation(line: 7020, column: 17, scope: !22253)
!22256 = !DILocation(line: 7020, column: 8, scope: !22247)
!22257 = !DILocation(line: 7021, column: 5, scope: !22253)
!22258 = !DILocation(line: 7023, column: 18, scope: !22247)
!22259 = !DILocation(line: 7023, column: 21, scope: !22247)
!22260 = !DILocation(line: 7023, column: 25, scope: !22247)
!22261 = !DILocation(line: 7023, column: 4, scope: !22247)
!22262 = !DILocation(line: 7024, column: 3, scope: !22247)
!22263 = !DILocation(line: 7016, column: 44, scope: !22240)
!22264 = !DILocation(line: 7016, column: 50, scope: !22240)
!22265 = !DILocation(line: 7016, column: 3, scope: !22240)
!22266 = distinct !{!22266, !22244, !22267}
!22267 = !DILocation(line: 7024, column: 3, scope: !22234)
!22268 = !DILocation(line: 7026, column: 14, scope: !22224)
!22269 = !DILocation(line: 7026, column: 3, scope: !22224)
!22270 = !DILocation(line: 7028, column: 7, scope: !22271)
!22271 = distinct !DILexicalBlock(scope: !22224, file: !3, line: 7028, column: 7)
!22272 = !DILocation(line: 7028, column: 10, scope: !22271)
!22273 = !DILocation(line: 7028, column: 15, scope: !22271)
!22274 = !DILocation(line: 7028, column: 7, scope: !22224)
!22275 = !DILocation(line: 7029, column: 24, scope: !22271)
!22276 = !DILocation(line: 7029, column: 27, scope: !22271)
!22277 = !DILocation(line: 7029, column: 4, scope: !22271)
!22278 = !DILocation(line: 7031, column: 24, scope: !22271)
!22279 = !DILocation(line: 7031, column: 27, scope: !22271)
!22280 = !DILocation(line: 7031, column: 4, scope: !22271)
!22281 = !DILocation(line: 7033, column: 1, scope: !22133)
!22282 = distinct !DISubprogram(name: "applyAlign", scope: !3, file: !3, line: 7052, type: !12679, scopeLine: 7053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!22283 = !DILocalVariable(name: "t", arg: 1, scope: !22282, file: !3, line: 7052, type: !3841)
!22284 = !DILocation(line: 7052, column: 35, scope: !22282)
!22285 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !22282, file: !3, line: 7052, type: !3857)
!22286 = !DILocation(line: 7052, column: 48, scope: !22282)
!22287 = !DILocalVariable(name: "td", scope: !22282, file: !3, line: 7054, type: !3868)
!22288 = !DILocation(line: 7054, column: 13, scope: !22282)
!22289 = !DILocation(line: 7054, column: 18, scope: !22282)
!22290 = !DILocation(line: 7054, column: 21, scope: !22282)
!22291 = !DILocalVariable(name: "center", scope: !22282, file: !3, line: 7055, type: !1987)
!22292 = !DILocation(line: 7055, column: 8, scope: !22282)
!22293 = !DILocalVariable(name: "i", scope: !22282, file: !3, line: 7056, type: !35)
!22294 = !DILocation(line: 7056, column: 6, scope: !22282)
!22295 = !DILocation(line: 7059, column: 13, scope: !22282)
!22296 = !DILocation(line: 7059, column: 21, scope: !22282)
!22297 = !DILocation(line: 7059, column: 24, scope: !22282)
!22298 = !DILocation(line: 7059, column: 2, scope: !22282)
!22299 = !DILocation(line: 7061, column: 9, scope: !22300)
!22300 = distinct !DILexicalBlock(scope: !22282, file: !3, line: 7061, column: 2)
!22301 = !DILocation(line: 7061, column: 7, scope: !22300)
!22302 = !DILocation(line: 7061, column: 14, scope: !22303)
!22303 = distinct !DILexicalBlock(scope: !22300, file: !3, line: 7061, column: 2)
!22304 = !DILocation(line: 7061, column: 18, scope: !22303)
!22305 = !DILocation(line: 7061, column: 21, scope: !22303)
!22306 = !DILocation(line: 7061, column: 16, scope: !22303)
!22307 = !DILocation(line: 7061, column: 2, scope: !22300)
!22308 = !DILocalVariable(name: "mat", scope: !22309, file: !3, line: 7062, type: !3881)
!22309 = distinct !DILexicalBlock(scope: !22303, file: !3, line: 7061, column: 39)
!22310 = !DILocation(line: 7062, column: 9, scope: !22309)
!22311 = !DILocalVariable(name: "invmat", scope: !22309, file: !3, line: 7062, type: !3881)
!22312 = !DILocation(line: 7062, column: 20, scope: !22309)
!22313 = !DILocation(line: 7064, column: 7, scope: !22314)
!22314 = distinct !DILexicalBlock(scope: !22309, file: !3, line: 7064, column: 7)
!22315 = !DILocation(line: 7064, column: 11, scope: !22314)
!22316 = !DILocation(line: 7064, column: 16, scope: !22314)
!22317 = !DILocation(line: 7064, column: 7, scope: !22309)
!22318 = !DILocation(line: 7065, column: 4, scope: !22314)
!22319 = !DILocation(line: 7067, column: 7, scope: !22320)
!22320 = distinct !DILexicalBlock(scope: !22309, file: !3, line: 7067, column: 7)
!22321 = !DILocation(line: 7067, column: 11, scope: !22320)
!22322 = !DILocation(line: 7067, column: 16, scope: !22320)
!22323 = !DILocation(line: 7067, column: 7, scope: !22309)
!22324 = !DILocation(line: 7068, column: 4, scope: !22320)
!22325 = !DILocation(line: 7071, column: 7, scope: !22326)
!22326 = distinct !DILexicalBlock(scope: !22309, file: !3, line: 7071, column: 7)
!22327 = !DILocation(line: 7071, column: 10, scope: !22326)
!22328 = !DILocation(line: 7071, column: 15, scope: !22326)
!22329 = !DILocation(line: 7071, column: 7, scope: !22309)
!22330 = !DILocation(line: 7072, column: 15, scope: !22331)
!22331 = distinct !DILexicalBlock(scope: !22326, file: !3, line: 7071, column: 38)
!22332 = !DILocation(line: 7072, column: 18, scope: !22331)
!22333 = !DILocation(line: 7072, column: 26, scope: !22331)
!22334 = !DILocation(line: 7072, column: 30, scope: !22331)
!22335 = !DILocation(line: 7072, column: 4, scope: !22331)
!22336 = !DILocation(line: 7073, column: 3, scope: !22331)
!22337 = !DILocation(line: 7075, column: 8, scope: !22338)
!22338 = distinct !DILexicalBlock(scope: !22339, file: !3, line: 7075, column: 8)
!22339 = distinct !DILexicalBlock(scope: !22326, file: !3, line: 7074, column: 8)
!22340 = !DILocation(line: 7075, column: 11, scope: !22338)
!22341 = !DILocation(line: 7075, column: 21, scope: !22338)
!22342 = !DILocation(line: 7075, column: 32, scope: !22338)
!22343 = !DILocation(line: 7075, column: 8, scope: !22339)
!22344 = !DILocation(line: 7076, column: 16, scope: !22345)
!22345 = distinct !DILexicalBlock(scope: !22338, file: !3, line: 7075, column: 51)
!22346 = !DILocation(line: 7076, column: 19, scope: !22345)
!22347 = !DILocation(line: 7076, column: 27, scope: !22345)
!22348 = !DILocation(line: 7076, column: 31, scope: !22345)
!22349 = !DILocation(line: 7076, column: 5, scope: !22345)
!22350 = !DILocation(line: 7077, column: 4, scope: !22345)
!22351 = !DILocation(line: 7080, column: 16, scope: !22309)
!22352 = !DILocation(line: 7080, column: 24, scope: !22309)
!22353 = !DILocation(line: 7080, column: 28, scope: !22309)
!22354 = !DILocation(line: 7080, column: 3, scope: !22309)
!22355 = !DILocation(line: 7082, column: 15, scope: !22309)
!22356 = !DILocation(line: 7082, column: 20, scope: !22309)
!22357 = !DILocation(line: 7082, column: 23, scope: !22309)
!22358 = !DILocation(line: 7082, column: 33, scope: !22309)
!22359 = !DILocation(line: 7082, column: 3, scope: !22309)
!22360 = !DILocation(line: 7084, column: 19, scope: !22309)
!22361 = !DILocation(line: 7084, column: 22, scope: !22309)
!22362 = !DILocation(line: 7084, column: 26, scope: !22309)
!22363 = !DILocation(line: 7084, column: 31, scope: !22309)
!22364 = !DILocation(line: 7084, column: 34, scope: !22309)
!22365 = !DILocation(line: 7084, column: 3, scope: !22309)
!22366 = !DILocation(line: 7085, column: 2, scope: !22309)
!22367 = !DILocation(line: 7061, column: 29, scope: !22303)
!22368 = !DILocation(line: 7061, column: 35, scope: !22303)
!22369 = !DILocation(line: 7061, column: 2, scope: !22303)
!22370 = distinct !{!22370, !22307, !22371}
!22371 = !DILocation(line: 7085, column: 2, scope: !22300)
!22372 = !DILocation(line: 7088, column: 13, scope: !22282)
!22373 = !DILocation(line: 7088, column: 16, scope: !22282)
!22374 = !DILocation(line: 7088, column: 24, scope: !22282)
!22375 = !DILocation(line: 7088, column: 2, scope: !22282)
!22376 = !DILocation(line: 7090, column: 13, scope: !22282)
!22377 = !DILocation(line: 7090, column: 2, scope: !22282)
!22378 = !DILocation(line: 7092, column: 22, scope: !22282)
!22379 = !DILocation(line: 7092, column: 25, scope: !22282)
!22380 = !DILocation(line: 7092, column: 2, scope: !22282)
!22381 = !DILocation(line: 7093, column: 1, scope: !22282)
!22382 = distinct !DISubprogram(name: "applySeqSlide", scope: !3, file: !3, line: 7171, type: !12679, scopeLine: 7172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!22383 = !DILocalVariable(name: "t", arg: 1, scope: !22382, file: !3, line: 7171, type: !3841)
!22384 = !DILocation(line: 7171, column: 38, scope: !22382)
!22385 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !22382, file: !3, line: 7171, type: !3857)
!22386 = !DILocation(line: 7171, column: 51, scope: !22382)
!22387 = !DILocalVariable(name: "str", scope: !22382, file: !3, line: 7173, type: !2366)
!22388 = !DILocation(line: 7173, column: 7, scope: !22382)
!22389 = !DILocation(line: 7175, column: 6, scope: !22390)
!22390 = distinct !DILexicalBlock(scope: !22382, file: !3, line: 7175, column: 6)
!22391 = !DILocation(line: 7175, column: 9, scope: !22390)
!22392 = !DILocation(line: 7175, column: 13, scope: !22390)
!22393 = !DILocation(line: 7175, column: 18, scope: !22390)
!22394 = !DILocation(line: 7175, column: 6, scope: !22382)
!22395 = !DILocalVariable(name: "pvec", scope: !22396, file: !3, line: 7176, type: !1987)
!22396 = distinct !DILexicalBlock(scope: !22390, file: !3, line: 7175, column: 31)
!22397 = !DILocation(line: 7176, column: 9, scope: !22396)
!22398 = !DILocalVariable(name: "tvec", scope: !22396, file: !3, line: 7177, type: !1987)
!22399 = !DILocation(line: 7177, column: 9, scope: !22396)
!22400 = !DILocation(line: 7178, column: 3, scope: !22396)
!22401 = !DILocation(line: 7178, column: 6, scope: !22396)
!22402 = !DILocation(line: 7178, column: 10, scope: !22396)
!22403 = !DILocation(line: 7178, column: 19, scope: !22396)
!22404 = !DILocation(line: 7178, column: 28, scope: !22396)
!22405 = !DILocation(line: 7178, column: 31, scope: !22396)
!22406 = !DILocation(line: 7178, column: 39, scope: !22396)
!22407 = !DILocation(line: 7178, column: 45, scope: !22396)
!22408 = !DILocation(line: 7179, column: 14, scope: !22396)
!22409 = !DILocation(line: 7179, column: 17, scope: !22396)
!22410 = !DILocation(line: 7179, column: 25, scope: !22396)
!22411 = !DILocation(line: 7179, column: 3, scope: !22396)
!22412 = !DILocation(line: 7180, column: 2, scope: !22396)
!22413 = !DILocation(line: 7182, column: 21, scope: !22414)
!22414 = distinct !DILexicalBlock(scope: !22390, file: !3, line: 7181, column: 7)
!22415 = !DILocation(line: 7182, column: 24, scope: !22414)
!22416 = !DILocation(line: 7182, column: 27, scope: !22414)
!22417 = !DILocation(line: 7182, column: 3, scope: !22414)
!22418 = !DILocation(line: 7183, column: 18, scope: !22414)
!22419 = !DILocation(line: 7183, column: 21, scope: !22414)
!22420 = !DILocation(line: 7183, column: 26, scope: !22414)
!22421 = !DILocation(line: 7183, column: 29, scope: !22414)
!22422 = !DILocation(line: 7183, column: 3, scope: !22414)
!22423 = !DILocation(line: 7186, column: 23, scope: !22382)
!22424 = !DILocation(line: 7186, column: 26, scope: !22382)
!22425 = !DILocation(line: 7186, column: 36, scope: !22382)
!22426 = !DILocation(line: 7186, column: 17, scope: !22382)
!22427 = !DILocation(line: 7186, column: 2, scope: !22382)
!22428 = !DILocation(line: 7186, column: 5, scope: !22382)
!22429 = !DILocation(line: 7186, column: 15, scope: !22382)
!22430 = !DILocation(line: 7187, column: 23, scope: !22382)
!22431 = !DILocation(line: 7187, column: 26, scope: !22382)
!22432 = !DILocation(line: 7187, column: 36, scope: !22382)
!22433 = !DILocation(line: 7187, column: 17, scope: !22382)
!22434 = !DILocation(line: 7187, column: 2, scope: !22382)
!22435 = !DILocation(line: 7187, column: 5, scope: !22382)
!22436 = !DILocation(line: 7187, column: 15, scope: !22382)
!22437 = !DILocation(line: 7189, column: 17, scope: !22382)
!22438 = !DILocation(line: 7189, column: 20, scope: !22382)
!22439 = !DILocation(line: 7189, column: 23, scope: !22382)
!22440 = !DILocation(line: 7189, column: 31, scope: !22382)
!22441 = !DILocation(line: 7189, column: 2, scope: !22382)
!22442 = !DILocation(line: 7190, column: 21, scope: !22382)
!22443 = !DILocation(line: 7190, column: 24, scope: !22382)
!22444 = !DILocation(line: 7190, column: 27, scope: !22382)
!22445 = !DILocation(line: 7190, column: 2, scope: !22382)
!22446 = !DILocation(line: 7192, column: 13, scope: !22382)
!22447 = !DILocation(line: 7192, column: 2, scope: !22382)
!22448 = !DILocation(line: 7194, column: 22, scope: !22382)
!22449 = !DILocation(line: 7194, column: 25, scope: !22382)
!22450 = !DILocation(line: 7194, column: 29, scope: !22382)
!22451 = !DILocation(line: 7194, column: 2, scope: !22382)
!22452 = !DILocation(line: 7195, column: 1, scope: !22382)
!22453 = distinct !DISubprogram(name: "headerSeqSlide", scope: !3, file: !3, line: 7124, type: !13632, scopeLine: 7125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!22454 = !DILocalVariable(name: "t", arg: 1, scope: !22453, file: !3, line: 7124, type: !3841)
!22455 = !DILocation(line: 7124, column: 39, scope: !22453)
!22456 = !DILocalVariable(name: "val", arg: 2, scope: !22453, file: !3, line: 7124, type: !1773)
!22457 = !DILocation(line: 7124, column: 48, scope: !22453)
!22458 = !DILocalVariable(name: "str", arg: 3, scope: !22453, file: !3, line: 7124, type: !2050)
!22459 = !DILocation(line: 7124, column: 61, scope: !22453)
!22460 = !DILocalVariable(name: "tvec", scope: !22453, file: !3, line: 7126, type: !13641)
!22461 = !DILocation(line: 7126, column: 7, scope: !22453)
!22462 = !DILocalVariable(name: "ofs", scope: !22453, file: !3, line: 7127, type: !13646)
!22463 = !DILocation(line: 7127, column: 9, scope: !22453)
!22464 = !DILocation(line: 7129, column: 19, scope: !22465)
!22465 = distinct !DILexicalBlock(scope: !22453, file: !3, line: 7129, column: 6)
!22466 = !DILocation(line: 7129, column: 22, scope: !22465)
!22467 = !DILocation(line: 7129, column: 6, scope: !22465)
!22468 = !DILocation(line: 7129, column: 6, scope: !22453)
!22469 = !DILocation(line: 7130, column: 20, scope: !22470)
!22470 = distinct !DILexicalBlock(scope: !22465, file: !3, line: 7129, column: 28)
!22471 = !DILocation(line: 7130, column: 23, scope: !22470)
!22472 = !DILocation(line: 7130, column: 29, scope: !22470)
!22473 = !DILocation(line: 7130, column: 36, scope: !22470)
!22474 = !DILocation(line: 7130, column: 39, scope: !22470)
!22475 = !DILocation(line: 7130, column: 46, scope: !22470)
!22476 = !DILocation(line: 7130, column: 3, scope: !22470)
!22477 = !DILocation(line: 7131, column: 2, scope: !22470)
!22478 = !DILocation(line: 7133, column: 17, scope: !22479)
!22479 = distinct !DILexicalBlock(scope: !22465, file: !3, line: 7132, column: 7)
!22480 = !DILocation(line: 7133, column: 57, scope: !22479)
!22481 = !DILocation(line: 7133, column: 65, scope: !22479)
!22482 = !DILocation(line: 7133, column: 3, scope: !22479)
!22483 = !DILocation(line: 7136, column: 22, scope: !22453)
!22484 = !DILocation(line: 7136, column: 28, scope: !22453)
!22485 = !DILocation(line: 7136, column: 26, scope: !22453)
!22486 = !DILocation(line: 7136, column: 48, scope: !22453)
!22487 = !DILocation(line: 7136, column: 46, scope: !22453)
!22488 = !DILocation(line: 7136, column: 89, scope: !22453)
!22489 = !DILocation(line: 7136, column: 98, scope: !22453)
!22490 = !DILocation(line: 7136, column: 101, scope: !22453)
!22491 = !DILocation(line: 7136, column: 105, scope: !22453)
!22492 = !DILocation(line: 7136, column: 9, scope: !22453)
!22493 = !DILocation(line: 7136, column: 6, scope: !22453)
!22494 = !DILocation(line: 7138, column: 6, scope: !22495)
!22495 = distinct !DILexicalBlock(scope: !22453, file: !3, line: 7138, column: 6)
!22496 = !DILocation(line: 7138, column: 9, scope: !22495)
!22497 = !DILocation(line: 7138, column: 6, scope: !22453)
!22498 = !DILocalVariable(name: "kmi", scope: !22499, file: !3, line: 7139, type: !8392)
!22499 = distinct !DILexicalBlock(scope: !22495, file: !3, line: 7138, column: 17)
!22500 = !DILocation(line: 7139, column: 17, scope: !22499)
!22501 = !DILocation(line: 7139, column: 53, scope: !22499)
!22502 = !DILocation(line: 7139, column: 56, scope: !22499)
!22503 = !DILocation(line: 7139, column: 23, scope: !22499)
!22504 = !DILocation(line: 7140, column: 7, scope: !22505)
!22505 = distinct !DILexicalBlock(scope: !22499, file: !3, line: 7140, column: 7)
!22506 = !DILocation(line: 7140, column: 7, scope: !22499)
!22507 = !DILocation(line: 7141, column: 36, scope: !22508)
!22508 = distinct !DILexicalBlock(scope: !22505, file: !3, line: 7140, column: 12)
!22509 = !DILocation(line: 7141, column: 41, scope: !22508)
!22510 = !DILocation(line: 7141, column: 47, scope: !22508)
!22511 = !DILocation(line: 7141, column: 45, scope: !22508)
!22512 = !DILocation(line: 7141, column: 67, scope: !22508)
!22513 = !DILocation(line: 7141, column: 65, scope: !22508)
!22514 = !DILocation(line: 7141, column: 52, scope: !22508)
!22515 = !DILocation(line: 7141, column: 11, scope: !22508)
!22516 = !DILocation(line: 7141, column: 8, scope: !22508)
!22517 = !DILocation(line: 7142, column: 3, scope: !22508)
!22518 = !DILocation(line: 7143, column: 2, scope: !22499)
!22519 = !DILocation(line: 7144, column: 22, scope: !22453)
!22520 = !DILocation(line: 7144, column: 28, scope: !22453)
!22521 = !DILocation(line: 7144, column: 26, scope: !22453)
!22522 = !DILocation(line: 7144, column: 48, scope: !22453)
!22523 = !DILocation(line: 7144, column: 46, scope: !22453)
!22524 = !DILocation(line: 7145, column: 41, scope: !22453)
!22525 = !DILocation(line: 7145, column: 44, scope: !22453)
!22526 = !DILocation(line: 7145, column: 49, scope: !22453)
!22527 = !DILocation(line: 7145, column: 68, scope: !22453)
!22528 = !DILocation(line: 7145, column: 40, scope: !22453)
!22529 = !DILocation(line: 7145, column: 22, scope: !22453)
!22530 = !DILocation(line: 7144, column: 9, scope: !22453)
!22531 = !DILocation(line: 7144, column: 6, scope: !22453)
!22532 = !DILocation(line: 7146, column: 1, scope: !22453)
!22533 = distinct !DISubprogram(name: "applySeqSlideValue", scope: !3, file: !3, line: 7148, type: !22534, scopeLine: 7149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!22534 = !DISubroutineType(types: !22535)
!22535 = !{null, !3841, !3980}
!22536 = !DILocalVariable(name: "t", arg: 1, scope: !22533, file: !3, line: 7148, type: !3841)
!22537 = !DILocation(line: 7148, column: 43, scope: !22533)
!22538 = !DILocalVariable(name: "val", arg: 2, scope: !22533, file: !3, line: 7148, type: !3980)
!22539 = !DILocation(line: 7148, column: 58, scope: !22533)
!22540 = !DILocalVariable(name: "td", scope: !22533, file: !3, line: 7150, type: !3868)
!22541 = !DILocation(line: 7150, column: 13, scope: !22533)
!22542 = !DILocation(line: 7150, column: 18, scope: !22533)
!22543 = !DILocation(line: 7150, column: 21, scope: !22533)
!22544 = !DILocalVariable(name: "i", scope: !22533, file: !3, line: 7151, type: !35)
!22545 = !DILocation(line: 7151, column: 6, scope: !22533)
!22546 = !DILocation(line: 7153, column: 9, scope: !22547)
!22547 = distinct !DILexicalBlock(scope: !22533, file: !3, line: 7153, column: 2)
!22548 = !DILocation(line: 7153, column: 7, scope: !22547)
!22549 = !DILocation(line: 7153, column: 14, scope: !22550)
!22550 = distinct !DILexicalBlock(scope: !22547, file: !3, line: 7153, column: 2)
!22551 = !DILocation(line: 7153, column: 18, scope: !22550)
!22552 = !DILocation(line: 7153, column: 21, scope: !22550)
!22553 = !DILocation(line: 7153, column: 16, scope: !22550)
!22554 = !DILocation(line: 7153, column: 2, scope: !22547)
!22555 = !DILocalVariable(name: "tvec", scope: !22556, file: !3, line: 7154, type: !1754)
!22556 = distinct !DILexicalBlock(scope: !22550, file: !3, line: 7153, column: 39)
!22557 = !DILocation(line: 7154, column: 9, scope: !22556)
!22558 = !DILocation(line: 7156, column: 7, scope: !22559)
!22559 = distinct !DILexicalBlock(scope: !22556, file: !3, line: 7156, column: 7)
!22560 = !DILocation(line: 7156, column: 11, scope: !22559)
!22561 = !DILocation(line: 7156, column: 16, scope: !22559)
!22562 = !DILocation(line: 7156, column: 7, scope: !22556)
!22563 = !DILocation(line: 7157, column: 4, scope: !22559)
!22564 = !DILocation(line: 7159, column: 7, scope: !22565)
!22565 = distinct !DILexicalBlock(scope: !22556, file: !3, line: 7159, column: 7)
!22566 = !DILocation(line: 7159, column: 11, scope: !22565)
!22567 = !DILocation(line: 7159, column: 16, scope: !22565)
!22568 = !DILocation(line: 7159, column: 7, scope: !22556)
!22569 = !DILocation(line: 7160, column: 4, scope: !22565)
!22570 = !DILocation(line: 7162, column: 14, scope: !22556)
!22571 = !DILocation(line: 7162, column: 20, scope: !22556)
!22572 = !DILocation(line: 7162, column: 3, scope: !22556)
!22573 = !DILocation(line: 7164, column: 13, scope: !22556)
!22574 = !DILocation(line: 7164, column: 19, scope: !22556)
!22575 = !DILocation(line: 7164, column: 23, scope: !22556)
!22576 = !DILocation(line: 7164, column: 3, scope: !22556)
!22577 = !DILocation(line: 7166, column: 16, scope: !22556)
!22578 = !DILocation(line: 7166, column: 20, scope: !22556)
!22579 = !DILocation(line: 7166, column: 30, scope: !22556)
!22580 = !DILocation(line: 7166, column: 28, scope: !22556)
!22581 = !DILocation(line: 7166, column: 3, scope: !22556)
!22582 = !DILocation(line: 7166, column: 7, scope: !22556)
!22583 = !DILocation(line: 7166, column: 14, scope: !22556)
!22584 = !DILocation(line: 7167, column: 16, scope: !22556)
!22585 = !DILocation(line: 7167, column: 20, scope: !22556)
!22586 = !DILocation(line: 7167, column: 30, scope: !22556)
!22587 = !DILocation(line: 7167, column: 28, scope: !22556)
!22588 = !DILocation(line: 7167, column: 3, scope: !22556)
!22589 = !DILocation(line: 7167, column: 7, scope: !22556)
!22590 = !DILocation(line: 7167, column: 14, scope: !22556)
!22591 = !DILocation(line: 7168, column: 2, scope: !22556)
!22592 = !DILocation(line: 7153, column: 29, scope: !22550)
!22593 = !DILocation(line: 7153, column: 35, scope: !22550)
!22594 = !DILocation(line: 7153, column: 2, scope: !22550)
!22595 = distinct !{!22595, !22554, !22596}
!22596 = !DILocation(line: 7168, column: 2, scope: !22547)
!22597 = !DILocation(line: 7169, column: 1, scope: !22533)
!22598 = distinct !DISubprogram(name: "applyTimeTranslate", scope: !3, file: !3, line: 7446, type: !12679, scopeLine: 7447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!22599 = !DILocalVariable(name: "t", arg: 1, scope: !22598, file: !3, line: 7446, type: !3841)
!22600 = !DILocation(line: 7446, column: 43, scope: !22598)
!22601 = !DILocalVariable(name: "mval", arg: 2, scope: !22598, file: !3, line: 7446, type: !3857)
!22602 = !DILocation(line: 7446, column: 56, scope: !22598)
!22603 = !DILocalVariable(name: "v2d", scope: !22598, file: !3, line: 7448, type: !1728)
!22604 = !DILocation(line: 7448, column: 10, scope: !22598)
!22605 = !DILocation(line: 7448, column: 26, scope: !22598)
!22606 = !DILocation(line: 7448, column: 29, scope: !22598)
!22607 = !DILocation(line: 7448, column: 16, scope: !22598)
!22608 = !DILocalVariable(name: "cval", scope: !22598, file: !3, line: 7449, type: !1754)
!22609 = !DILocation(line: 7449, column: 8, scope: !22598)
!22610 = !DILocalVariable(name: "sval", scope: !22598, file: !3, line: 7449, type: !1754)
!22611 = !DILocation(line: 7449, column: 17, scope: !22598)
!22612 = !DILocalVariable(name: "str", scope: !22598, file: !3, line: 7450, type: !2366)
!22613 = !DILocation(line: 7450, column: 7, scope: !22598)
!22614 = !DILocation(line: 7453, column: 27, scope: !22598)
!22615 = !DILocation(line: 7453, column: 32, scope: !22598)
!22616 = !DILocation(line: 7453, column: 41, scope: !22598)
!22617 = !DILocation(line: 7453, column: 51, scope: !22598)
!22618 = !DILocation(line: 7453, column: 61, scope: !22598)
!22619 = !DILocation(line: 7453, column: 2, scope: !22598)
!22620 = !DILocation(line: 7454, column: 27, scope: !22598)
!22621 = !DILocation(line: 7454, column: 32, scope: !22598)
!22622 = !DILocation(line: 7454, column: 35, scope: !22598)
!22623 = !DILocation(line: 7454, column: 45, scope: !22598)
!22624 = !DILocation(line: 7454, column: 48, scope: !22598)
!22625 = !DILocation(line: 7454, column: 59, scope: !22598)
!22626 = !DILocation(line: 7454, column: 69, scope: !22598)
!22627 = !DILocation(line: 7454, column: 2, scope: !22598)
!22628 = !DILocation(line: 7457, column: 17, scope: !22598)
!22629 = !DILocation(line: 7457, column: 27, scope: !22598)
!22630 = !DILocation(line: 7457, column: 25, scope: !22598)
!22631 = !DILocation(line: 7457, column: 2, scope: !22598)
!22632 = !DILocation(line: 7457, column: 5, scope: !22598)
!22633 = !DILocation(line: 7457, column: 15, scope: !22598)
!22634 = !DILocation(line: 7460, column: 14, scope: !22598)
!22635 = !DILocation(line: 7460, column: 17, scope: !22598)
!22636 = !DILocation(line: 7460, column: 2, scope: !22598)
!22637 = !DILocation(line: 7460, column: 5, scope: !22598)
!22638 = !DILocation(line: 7460, column: 12, scope: !22598)
!22639 = !DILocation(line: 7461, column: 17, scope: !22598)
!22640 = !DILocation(line: 7461, column: 20, scope: !22598)
!22641 = !DILocation(line: 7461, column: 26, scope: !22598)
!22642 = !DILocation(line: 7461, column: 29, scope: !22598)
!22643 = !DILocation(line: 7461, column: 2, scope: !22598)
!22644 = !DILocation(line: 7462, column: 17, scope: !22598)
!22645 = !DILocation(line: 7462, column: 20, scope: !22598)
!22646 = !DILocation(line: 7462, column: 2, scope: !22598)
!22647 = !DILocation(line: 7462, column: 5, scope: !22598)
!22648 = !DILocation(line: 7462, column: 15, scope: !22598)
!22649 = !DILocation(line: 7463, column: 22, scope: !22598)
!22650 = !DILocation(line: 7463, column: 25, scope: !22598)
!22651 = !DILocation(line: 7463, column: 2, scope: !22598)
!22652 = !DILocation(line: 7465, column: 26, scope: !22598)
!22653 = !DILocation(line: 7465, column: 29, scope: !22598)
!22654 = !DILocation(line: 7465, column: 2, scope: !22598)
!22655 = !DILocation(line: 7467, column: 13, scope: !22598)
!22656 = !DILocation(line: 7467, column: 2, scope: !22598)
!22657 = !DILocation(line: 7469, column: 22, scope: !22598)
!22658 = !DILocation(line: 7469, column: 25, scope: !22598)
!22659 = !DILocation(line: 7469, column: 29, scope: !22598)
!22660 = !DILocation(line: 7469, column: 2, scope: !22598)
!22661 = !DILocation(line: 7470, column: 1, scope: !22598)
!22662 = distinct !DISubprogram(name: "headerTimeTranslate", scope: !3, file: !3, line: 7350, type: !22663, scopeLine: 7351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!22663 = !DISubroutineType(types: !22664)
!22664 = !{null, !3841, !2050}
!22665 = !DILocalVariable(name: "t", arg: 1, scope: !22662, file: !3, line: 7350, type: !3841)
!22666 = !DILocation(line: 7350, column: 44, scope: !22662)
!22667 = !DILocalVariable(name: "str", arg: 2, scope: !22662, file: !3, line: 7350, type: !2050)
!22668 = !DILocation(line: 7350, column: 52, scope: !22662)
!22669 = !DILocalVariable(name: "tvec", scope: !22662, file: !3, line: 7352, type: !13641)
!22670 = !DILocation(line: 7352, column: 7, scope: !22662)
!22671 = !DILocation(line: 7355, column: 19, scope: !22672)
!22672 = distinct !DILexicalBlock(scope: !22662, file: !3, line: 7355, column: 6)
!22673 = !DILocation(line: 7355, column: 22, scope: !22672)
!22674 = !DILocation(line: 7355, column: 6, scope: !22672)
!22675 = !DILocation(line: 7355, column: 6, scope: !22662)
!22676 = !DILocation(line: 7356, column: 20, scope: !22677)
!22677 = distinct !DILexicalBlock(scope: !22672, file: !3, line: 7355, column: 28)
!22678 = !DILocation(line: 7356, column: 23, scope: !22677)
!22679 = !DILocation(line: 7356, column: 29, scope: !22677)
!22680 = !DILocation(line: 7356, column: 36, scope: !22677)
!22681 = !DILocation(line: 7356, column: 39, scope: !22677)
!22682 = !DILocation(line: 7356, column: 46, scope: !22677)
!22683 = !DILocation(line: 7356, column: 3, scope: !22677)
!22684 = !DILocation(line: 7357, column: 2, scope: !22677)
!22685 = !DILocalVariable(name: "scene", scope: !22686, file: !3, line: 7359, type: !22687)
!22686 = distinct !DILexicalBlock(scope: !22672, file: !3, line: 7358, column: 7)
!22687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22688, size: 64)
!22688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8899)
!22689 = !DILocation(line: 7359, column: 16, scope: !22686)
!22690 = !DILocation(line: 7359, column: 24, scope: !22686)
!22691 = !DILocation(line: 7359, column: 27, scope: !22686)
!22692 = !DILocalVariable(name: "autosnap", scope: !22686, file: !3, line: 7360, type: !22693)
!22693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !27)
!22694 = !DILocation(line: 7360, column: 15, scope: !22686)
!22695 = !DILocation(line: 7360, column: 47, scope: !22686)
!22696 = !DILocation(line: 7360, column: 26, scope: !22686)
!22697 = !DILocalVariable(name: "secf", scope: !22686, file: !3, line: 7361, type: !22698)
!22698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3424)
!22699 = !DILocation(line: 7361, column: 16, scope: !22686)
!22700 = !DILocation(line: 7361, column: 23, scope: !22686)
!22701 = !DILocalVariable(name: "val", scope: !22686, file: !3, line: 7362, type: !1727)
!22702 = !DILocation(line: 7362, column: 9, scope: !22686)
!22703 = !DILocation(line: 7362, column: 15, scope: !22686)
!22704 = !DILocation(line: 7362, column: 18, scope: !22686)
!22705 = !DILocation(line: 7365, column: 7, scope: !22706)
!22706 = distinct !DILexicalBlock(scope: !22686, file: !3, line: 7365, column: 7)
!22707 = !DILocation(line: 7365, column: 16, scope: !22706)
!22708 = !DILocation(line: 7365, column: 7, scope: !22686)
!22709 = !DILocation(line: 7367, column: 17, scope: !22710)
!22710 = distinct !DILexicalBlock(scope: !22706, file: !3, line: 7365, column: 34)
!22711 = !DILocation(line: 7367, column: 21, scope: !22710)
!22712 = !DILocation(line: 7367, column: 10, scope: !22710)
!22713 = !DILocation(line: 7367, column: 8, scope: !22710)
!22714 = !DILocation(line: 7368, column: 3, scope: !22710)
!22715 = !DILocation(line: 7369, column: 12, scope: !22716)
!22716 = distinct !DILexicalBlock(scope: !22706, file: !3, line: 7369, column: 12)
!22717 = !DILocation(line: 7369, column: 21, scope: !22716)
!22718 = !DILocation(line: 7369, column: 12, scope: !22706)
!22719 = !DILocation(line: 7371, column: 25, scope: !22720)
!22720 = distinct !DILexicalBlock(scope: !22716, file: !3, line: 7369, column: 40)
!22721 = !DILocation(line: 7371, column: 17, scope: !22720)
!22722 = !DILocation(line: 7371, column: 31, scope: !22720)
!22723 = !DILocation(line: 7371, column: 29, scope: !22720)
!22724 = !DILocation(line: 7371, column: 36, scope: !22720)
!22725 = !DILocation(line: 7371, column: 10, scope: !22720)
!22726 = !DILocation(line: 7371, column: 8, scope: !22720)
!22727 = !DILocation(line: 7372, column: 3, scope: !22720)
!22728 = !DILocation(line: 7373, column: 12, scope: !22729)
!22729 = distinct !DILexicalBlock(scope: !22716, file: !3, line: 7373, column: 12)
!22730 = !DILocation(line: 7373, column: 21, scope: !22729)
!22731 = !DILocation(line: 7373, column: 12, scope: !22716)
!22732 = !DILocation(line: 7375, column: 26, scope: !22733)
!22733 = distinct !DILexicalBlock(scope: !22729, file: !3, line: 7373, column: 41)
!22734 = !DILocation(line: 7375, column: 18, scope: !22733)
!22735 = !DILocation(line: 7375, column: 32, scope: !22733)
!22736 = !DILocation(line: 7375, column: 30, scope: !22733)
!22737 = !DILocation(line: 7375, column: 10, scope: !22733)
!22738 = !DILocation(line: 7375, column: 8, scope: !22733)
!22739 = !DILocation(line: 7376, column: 3, scope: !22733)
!22740 = !DILocation(line: 7378, column: 7, scope: !22741)
!22741 = distinct !DILexicalBlock(scope: !22686, file: !3, line: 7378, column: 7)
!22742 = !DILocation(line: 7378, column: 16, scope: !22741)
!22743 = !DILocation(line: 7378, column: 7, scope: !22686)
!22744 = !DILocation(line: 7379, column: 18, scope: !22741)
!22745 = !DILocation(line: 7379, column: 65, scope: !22741)
!22746 = !DILocation(line: 7379, column: 60, scope: !22741)
!22747 = !DILocation(line: 7379, column: 70, scope: !22741)
!22748 = !DILocation(line: 7379, column: 4, scope: !22741)
!22749 = !DILocation(line: 7380, column: 12, scope: !22750)
!22750 = distinct !DILexicalBlock(scope: !22741, file: !3, line: 7380, column: 12)
!22751 = !DILocation(line: 7380, column: 21, scope: !22750)
!22752 = !DILocation(line: 7380, column: 12, scope: !22741)
!22753 = !DILocation(line: 7381, column: 18, scope: !22750)
!22754 = !DILocation(line: 7381, column: 69, scope: !22750)
!22755 = !DILocation(line: 7381, column: 64, scope: !22750)
!22756 = !DILocation(line: 7381, column: 74, scope: !22750)
!22757 = !DILocation(line: 7381, column: 4, scope: !22750)
!22758 = !DILocation(line: 7382, column: 12, scope: !22759)
!22759 = distinct !DILexicalBlock(scope: !22750, file: !3, line: 7382, column: 12)
!22760 = !DILocation(line: 7382, column: 21, scope: !22759)
!22761 = !DILocation(line: 7382, column: 12, scope: !22750)
!22762 = !DILocation(line: 7383, column: 18, scope: !22759)
!22763 = !DILocation(line: 7383, column: 56, scope: !22759)
!22764 = !DILocation(line: 7383, column: 4, scope: !22759)
!22765 = !DILocation(line: 7385, column: 18, scope: !22759)
!22766 = !DILocation(line: 7385, column: 52, scope: !22759)
!22767 = !DILocation(line: 7385, column: 4, scope: !22759)
!22768 = !DILocation(line: 7388, column: 15, scope: !22662)
!22769 = !DILocation(line: 7388, column: 57, scope: !22662)
!22770 = !DILocation(line: 7388, column: 2, scope: !22662)
!22771 = !DILocation(line: 7389, column: 1, scope: !22662)
!22772 = distinct !DISubprogram(name: "applyTimeTranslateValue", scope: !3, file: !3, line: 7391, type: !22773, scopeLine: 7392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!22773 = !DISubroutineType(types: !22774)
!22774 = !{null, !3841, !1727}
!22775 = !DILocalVariable(name: "t", arg: 1, scope: !22772, file: !3, line: 7391, type: !3841)
!22776 = !DILocation(line: 7391, column: 48, scope: !22772)
!22777 = !DILocalVariable(name: "UNUSED_sval", arg: 2, scope: !22772, file: !3, line: 7391, type: !1727)
!22778 = !DILocation(line: 7391, column: 57, scope: !22772)
!22779 = !DILocalVariable(name: "td", scope: !22772, file: !3, line: 7393, type: !3868)
!22780 = !DILocation(line: 7393, column: 13, scope: !22772)
!22781 = !DILocation(line: 7393, column: 18, scope: !22772)
!22782 = !DILocation(line: 7393, column: 21, scope: !22772)
!22783 = !DILocalVariable(name: "td2d", scope: !22772, file: !3, line: 7394, type: !3946)
!22784 = !DILocation(line: 7394, column: 15, scope: !22772)
!22785 = !DILocation(line: 7394, column: 22, scope: !22772)
!22786 = !DILocation(line: 7394, column: 25, scope: !22772)
!22787 = !DILocalVariable(name: "scene", scope: !22772, file: !3, line: 7395, type: !8898)
!22788 = !DILocation(line: 7395, column: 9, scope: !22772)
!22789 = !DILocation(line: 7395, column: 17, scope: !22772)
!22790 = !DILocation(line: 7395, column: 20, scope: !22772)
!22791 = !DILocalVariable(name: "i", scope: !22772, file: !3, line: 7396, type: !35)
!22792 = !DILocation(line: 7396, column: 6, scope: !22772)
!22793 = !DILocalVariable(name: "autosnap", scope: !22772, file: !3, line: 7398, type: !22693)
!22794 = !DILocation(line: 7398, column: 14, scope: !22772)
!22795 = !DILocation(line: 7398, column: 46, scope: !22772)
!22796 = !DILocation(line: 7398, column: 25, scope: !22772)
!22797 = !DILocalVariable(name: "secf", scope: !22772, file: !3, line: 7399, type: !22698)
!22798 = !DILocation(line: 7399, column: 15, scope: !22772)
!22799 = !DILocation(line: 7399, column: 22, scope: !22772)
!22800 = !DILocalVariable(name: "deltax", scope: !22772, file: !3, line: 7401, type: !1727)
!22801 = !DILocation(line: 7401, column: 8, scope: !22772)
!22802 = !DILocalVariable(name: "val", scope: !22772, file: !3, line: 7401, type: !1727)
!22803 = !DILocation(line: 7401, column: 16, scope: !22772)
!22804 = !DILocation(line: 7404, column: 9, scope: !22805)
!22805 = distinct !DILexicalBlock(scope: !22772, file: !3, line: 7404, column: 2)
!22806 = !DILocation(line: 7404, column: 7, scope: !22805)
!22807 = !DILocation(line: 7404, column: 14, scope: !22808)
!22808 = distinct !DILexicalBlock(scope: !22805, file: !3, line: 7404, column: 2)
!22809 = !DILocation(line: 7404, column: 18, scope: !22808)
!22810 = !DILocation(line: 7404, column: 21, scope: !22808)
!22811 = !DILocation(line: 7404, column: 16, scope: !22808)
!22812 = !DILocation(line: 7404, column: 2, scope: !22805)
!22813 = !DILocalVariable(name: "adt", scope: !22814, file: !3, line: 7409, type: !22815)
!22814 = distinct !DILexicalBlock(scope: !22808, file: !3, line: 7404, column: 47)
!22815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22816, size: 64)
!22816 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimData", file: !1869, line: 869, baseType: !1868)
!22817 = !DILocation(line: 7409, column: 13, scope: !22814)
!22818 = !DILocation(line: 7409, column: 20, scope: !22814)
!22819 = !DILocation(line: 7409, column: 23, scope: !22814)
!22820 = !DILocation(line: 7409, column: 33, scope: !22814)
!22821 = !DILocation(line: 7409, column: 19, scope: !22814)
!22822 = !DILocation(line: 7409, column: 49, scope: !22814)
!22823 = !DILocation(line: 7409, column: 53, scope: !22814)
!22824 = !DILocation(line: 7414, column: 7, scope: !22825)
!22825 = distinct !DILexicalBlock(scope: !22814, file: !3, line: 7414, column: 7)
!22826 = !DILocation(line: 7414, column: 11, scope: !22825)
!22827 = !DILocation(line: 7414, column: 15, scope: !22825)
!22828 = !DILocation(line: 7414, column: 18, scope: !22825)
!22829 = !DILocation(line: 7414, column: 28, scope: !22825)
!22830 = !DILocation(line: 7414, column: 7, scope: !22814)
!22831 = !DILocation(line: 7415, column: 13, scope: !22832)
!22832 = distinct !DILexicalBlock(scope: !22825, file: !3, line: 7414, column: 43)
!22833 = !DILocation(line: 7415, column: 16, scope: !22832)
!22834 = !DILocation(line: 7415, column: 11, scope: !22832)
!22835 = !DILocation(line: 7417, column: 8, scope: !22836)
!22836 = distinct !DILexicalBlock(scope: !22832, file: !3, line: 7417, column: 8)
!22837 = !DILocation(line: 7417, column: 17, scope: !22836)
!22838 = !DILocation(line: 7417, column: 8, scope: !22832)
!22839 = !DILocation(line: 7418, column: 37, scope: !22840)
!22840 = distinct !DILexicalBlock(scope: !22836, file: !3, line: 7417, column: 36)
!22841 = !DILocation(line: 7418, column: 29, scope: !22840)
!22842 = !DILocation(line: 7418, column: 46, scope: !22840)
!22843 = !DILocation(line: 7418, column: 44, scope: !22840)
!22844 = !DILocation(line: 7418, column: 52, scope: !22840)
!22845 = !DILocation(line: 7418, column: 22, scope: !22840)
!22846 = !DILocation(line: 7418, column: 61, scope: !22840)
!22847 = !DILocation(line: 7418, column: 59, scope: !22840)
!22848 = !DILocation(line: 7418, column: 14, scope: !22840)
!22849 = !DILocation(line: 7418, column: 12, scope: !22840)
!22850 = !DILocation(line: 7419, column: 4, scope: !22840)
!22851 = !DILocation(line: 7420, column: 13, scope: !22852)
!22852 = distinct !DILexicalBlock(scope: !22836, file: !3, line: 7420, column: 13)
!22853 = !DILocation(line: 7420, column: 22, scope: !22852)
!22854 = !DILocation(line: 7420, column: 13, scope: !22836)
!22855 = !DILocation(line: 7421, column: 28, scope: !22856)
!22856 = distinct !DILexicalBlock(scope: !22852, file: !3, line: 7420, column: 40)
!22857 = !DILocation(line: 7421, column: 35, scope: !22856)
!22858 = !DILocation(line: 7421, column: 22, scope: !22856)
!22859 = !DILocation(line: 7421, column: 14, scope: !22856)
!22860 = !DILocation(line: 7421, column: 12, scope: !22856)
!22861 = !DILocation(line: 7422, column: 4, scope: !22856)
!22862 = !DILocation(line: 7424, column: 34, scope: !22832)
!22863 = !DILocation(line: 7424, column: 39, scope: !22832)
!22864 = !DILocation(line: 7424, column: 43, scope: !22832)
!22865 = !DILocation(line: 7424, column: 10, scope: !22832)
!22866 = !DILocation(line: 7424, column: 8, scope: !22832)
!22867 = !DILocation(line: 7425, column: 11, scope: !22832)
!22868 = !DILocation(line: 7425, column: 8, scope: !22832)
!22869 = !DILocation(line: 7426, column: 41, scope: !22832)
!22870 = !DILocation(line: 7426, column: 46, scope: !22832)
!22871 = !DILocation(line: 7426, column: 17, scope: !22832)
!22872 = !DILocation(line: 7426, column: 6, scope: !22832)
!22873 = !DILocation(line: 7426, column: 10, scope: !22832)
!22874 = !DILocation(line: 7426, column: 15, scope: !22832)
!22875 = !DILocation(line: 7427, column: 3, scope: !22832)
!22876 = !DILocation(line: 7429, column: 19, scope: !22877)
!22877 = distinct !DILexicalBlock(scope: !22825, file: !3, line: 7428, column: 8)
!22878 = !DILocation(line: 7429, column: 22, scope: !22877)
!22879 = !DILocation(line: 7429, column: 17, scope: !22877)
!22880 = !DILocation(line: 7429, column: 11, scope: !22877)
!22881 = !DILocation(line: 7431, column: 8, scope: !22882)
!22882 = distinct !DILexicalBlock(scope: !22877, file: !3, line: 7431, column: 8)
!22883 = !DILocation(line: 7431, column: 17, scope: !22882)
!22884 = !DILocation(line: 7431, column: 8, scope: !22877)
!22885 = !DILocation(line: 7432, column: 34, scope: !22886)
!22886 = distinct !DILexicalBlock(scope: !22882, file: !3, line: 7431, column: 36)
!22887 = !DILocation(line: 7432, column: 26, scope: !22886)
!22888 = !DILocation(line: 7432, column: 43, scope: !22886)
!22889 = !DILocation(line: 7432, column: 41, scope: !22886)
!22890 = !DILocation(line: 7432, column: 49, scope: !22886)
!22891 = !DILocation(line: 7432, column: 19, scope: !22886)
!22892 = !DILocation(line: 7432, column: 58, scope: !22886)
!22893 = !DILocation(line: 7432, column: 56, scope: !22886)
!22894 = !DILocation(line: 7432, column: 11, scope: !22886)
!22895 = !DILocation(line: 7432, column: 9, scope: !22886)
!22896 = !DILocation(line: 7433, column: 4, scope: !22886)
!22897 = !DILocation(line: 7434, column: 13, scope: !22898)
!22898 = distinct !DILexicalBlock(scope: !22882, file: !3, line: 7434, column: 13)
!22899 = !DILocation(line: 7434, column: 22, scope: !22898)
!22900 = !DILocation(line: 7434, column: 13, scope: !22882)
!22901 = !DILocation(line: 7435, column: 25, scope: !22902)
!22902 = distinct !DILexicalBlock(scope: !22898, file: !3, line: 7434, column: 40)
!22903 = !DILocation(line: 7435, column: 29, scope: !22902)
!22904 = !DILocation(line: 7435, column: 19, scope: !22902)
!22905 = !DILocation(line: 7435, column: 11, scope: !22902)
!22906 = !DILocation(line: 7435, column: 9, scope: !22902)
!22907 = !DILocation(line: 7436, column: 4, scope: !22902)
!22908 = !DILocation(line: 7438, column: 17, scope: !22877)
!22909 = !DILocation(line: 7438, column: 21, scope: !22877)
!22910 = !DILocation(line: 7438, column: 28, scope: !22877)
!22911 = !DILocation(line: 7438, column: 26, scope: !22877)
!22912 = !DILocation(line: 7438, column: 6, scope: !22877)
!22913 = !DILocation(line: 7438, column: 10, scope: !22877)
!22914 = !DILocation(line: 7438, column: 15, scope: !22877)
!22915 = !DILocation(line: 7442, column: 24, scope: !22814)
!22916 = !DILocation(line: 7442, column: 27, scope: !22814)
!22917 = !DILocation(line: 7442, column: 31, scope: !22814)
!22918 = !DILocation(line: 7442, column: 37, scope: !22814)
!22919 = !DILocation(line: 7442, column: 42, scope: !22814)
!22920 = !DILocation(line: 7442, column: 3, scope: !22814)
!22921 = !DILocation(line: 7443, column: 2, scope: !22814)
!22922 = !DILocation(line: 7404, column: 29, scope: !22808)
!22923 = !DILocation(line: 7404, column: 35, scope: !22808)
!22924 = !DILocation(line: 7404, column: 43, scope: !22808)
!22925 = !DILocation(line: 7404, column: 2, scope: !22808)
!22926 = distinct !{!22926, !22812, !22927}
!22927 = !DILocation(line: 7443, column: 2, scope: !22805)
!22928 = !DILocation(line: 7444, column: 1, scope: !22772)
!22929 = distinct !DISubprogram(name: "getAnimEdit_SnapMode", scope: !3, file: !3, line: 7212, type: !22930, scopeLine: 7213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!22930 = !DISubroutineType(types: !22931)
!22931 = !{!27, !3841}
!22932 = !DILocalVariable(name: "t", arg: 1, scope: !22929, file: !3, line: 7212, type: !3841)
!22933 = !DILocation(line: 7212, column: 46, scope: !22929)
!22934 = !DILocalVariable(name: "autosnap", scope: !22929, file: !3, line: 7214, type: !27)
!22935 = !DILocation(line: 7214, column: 8, scope: !22929)
!22936 = !DILocation(line: 7216, column: 6, scope: !22937)
!22937 = distinct !DILexicalBlock(scope: !22929, file: !3, line: 7216, column: 6)
!22938 = !DILocation(line: 7216, column: 9, scope: !22937)
!22939 = !DILocation(line: 7216, column: 19, scope: !22937)
!22940 = !DILocation(line: 7216, column: 6, scope: !22929)
!22941 = !DILocalVariable(name: "saction", scope: !22942, file: !3, line: 7217, type: !4354)
!22942 = distinct !DILexicalBlock(scope: !22937, file: !3, line: 7216, column: 36)
!22943 = !DILocation(line: 7217, column: 16, scope: !22942)
!22944 = !DILocation(line: 7217, column: 41, scope: !22942)
!22945 = !DILocation(line: 7217, column: 44, scope: !22942)
!22946 = !DILocation(line: 7217, column: 48, scope: !22942)
!22947 = !DILocation(line: 7217, column: 58, scope: !22942)
!22948 = !DILocation(line: 7217, column: 26, scope: !22942)
!22949 = !DILocation(line: 7219, column: 7, scope: !22950)
!22950 = distinct !DILexicalBlock(scope: !22942, file: !3, line: 7219, column: 7)
!22951 = !DILocation(line: 7219, column: 7, scope: !22942)
!22952 = !DILocation(line: 7220, column: 15, scope: !22950)
!22953 = !DILocation(line: 7220, column: 24, scope: !22950)
!22954 = !DILocation(line: 7220, column: 13, scope: !22950)
!22955 = !DILocation(line: 7220, column: 4, scope: !22950)
!22956 = !DILocation(line: 7221, column: 2, scope: !22942)
!22957 = !DILocation(line: 7222, column: 11, scope: !22958)
!22958 = distinct !DILexicalBlock(scope: !22937, file: !3, line: 7222, column: 11)
!22959 = !DILocation(line: 7222, column: 14, scope: !22958)
!22960 = !DILocation(line: 7222, column: 24, scope: !22958)
!22961 = !DILocation(line: 7222, column: 11, scope: !22937)
!22962 = !DILocalVariable(name: "sipo", scope: !22963, file: !3, line: 7223, type: !4382)
!22963 = distinct !DILexicalBlock(scope: !22958, file: !3, line: 7222, column: 38)
!22964 = !DILocation(line: 7223, column: 13, scope: !22963)
!22965 = !DILocation(line: 7223, column: 32, scope: !22963)
!22966 = !DILocation(line: 7223, column: 35, scope: !22963)
!22967 = !DILocation(line: 7223, column: 39, scope: !22963)
!22968 = !DILocation(line: 7223, column: 49, scope: !22963)
!22969 = !DILocation(line: 7223, column: 20, scope: !22963)
!22970 = !DILocation(line: 7225, column: 7, scope: !22971)
!22971 = distinct !DILexicalBlock(scope: !22963, file: !3, line: 7225, column: 7)
!22972 = !DILocation(line: 7225, column: 7, scope: !22963)
!22973 = !DILocation(line: 7226, column: 15, scope: !22971)
!22974 = !DILocation(line: 7226, column: 21, scope: !22971)
!22975 = !DILocation(line: 7226, column: 13, scope: !22971)
!22976 = !DILocation(line: 7226, column: 4, scope: !22971)
!22977 = !DILocation(line: 7227, column: 2, scope: !22963)
!22978 = !DILocation(line: 7228, column: 11, scope: !22979)
!22979 = distinct !DILexicalBlock(scope: !22958, file: !3, line: 7228, column: 11)
!22980 = !DILocation(line: 7228, column: 14, scope: !22979)
!22981 = !DILocation(line: 7228, column: 24, scope: !22979)
!22982 = !DILocation(line: 7228, column: 11, scope: !22958)
!22983 = !DILocalVariable(name: "snla", scope: !22984, file: !3, line: 7229, type: !4401)
!22984 = distinct !DILexicalBlock(scope: !22979, file: !3, line: 7228, column: 38)
!22985 = !DILocation(line: 7229, column: 13, scope: !22984)
!22986 = !DILocation(line: 7229, column: 32, scope: !22984)
!22987 = !DILocation(line: 7229, column: 35, scope: !22984)
!22988 = !DILocation(line: 7229, column: 39, scope: !22984)
!22989 = !DILocation(line: 7229, column: 49, scope: !22984)
!22990 = !DILocation(line: 7229, column: 20, scope: !22984)
!22991 = !DILocation(line: 7231, column: 7, scope: !22992)
!22992 = distinct !DILexicalBlock(scope: !22984, file: !3, line: 7231, column: 7)
!22993 = !DILocation(line: 7231, column: 7, scope: !22984)
!22994 = !DILocation(line: 7232, column: 15, scope: !22992)
!22995 = !DILocation(line: 7232, column: 21, scope: !22992)
!22996 = !DILocation(line: 7232, column: 13, scope: !22992)
!22997 = !DILocation(line: 7232, column: 4, scope: !22992)
!22998 = !DILocation(line: 7233, column: 2, scope: !22984)
!22999 = !DILocation(line: 7235, column: 12, scope: !23000)
!23000 = distinct !DILexicalBlock(scope: !22979, file: !3, line: 7234, column: 7)
!23001 = !DILocation(line: 7241, column: 6, scope: !23002)
!23002 = distinct !DILexicalBlock(scope: !22929, file: !3, line: 7241, column: 6)
!23003 = !DILocation(line: 7241, column: 9, scope: !23002)
!23004 = !DILocation(line: 7241, column: 19, scope: !23002)
!23005 = !DILocation(line: 7241, column: 6, scope: !22929)
!23006 = !DILocation(line: 7242, column: 7, scope: !23007)
!23007 = distinct !DILexicalBlock(scope: !23008, file: !3, line: 7242, column: 7)
!23008 = distinct !DILexicalBlock(scope: !23002, file: !3, line: 7241, column: 38)
!23009 = !DILocation(line: 7242, column: 7, scope: !23008)
!23010 = !DILocation(line: 7243, column: 13, scope: !23007)
!23011 = !DILocation(line: 7243, column: 4, scope: !23007)
!23012 = !DILocation(line: 7245, column: 13, scope: !23007)
!23013 = !DILocation(line: 7246, column: 2, scope: !23008)
!23014 = !DILocation(line: 7248, column: 9, scope: !22929)
!23015 = !DILocation(line: 7248, column: 2, scope: !22929)
!23016 = distinct !DISubprogram(name: "doAnimEdit_SnapFrame", scope: !3, file: !3, line: 7254, type: !23017, scopeLine: 7255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!23017 = !DISubroutineType(types: !23018)
!23018 = !{null, !3841, !3868, !3946, !22815, !27}
!23019 = !DILocalVariable(name: "t", arg: 1, scope: !23016, file: !3, line: 7254, type: !3841)
!23020 = !DILocation(line: 7254, column: 45, scope: !23016)
!23021 = !DILocalVariable(name: "td", arg: 2, scope: !23016, file: !3, line: 7254, type: !3868)
!23022 = !DILocation(line: 7254, column: 59, scope: !23016)
!23023 = !DILocalVariable(name: "td2d", arg: 3, scope: !23016, file: !3, line: 7254, type: !3946)
!23024 = !DILocation(line: 7254, column: 76, scope: !23016)
!23025 = !DILocalVariable(name: "adt", arg: 4, scope: !23016, file: !3, line: 7254, type: !22815)
!23026 = !DILocation(line: 7254, column: 92, scope: !23016)
!23027 = !DILocalVariable(name: "autosnap", arg: 5, scope: !23016, file: !3, line: 7254, type: !27)
!23028 = !DILocation(line: 7254, column: 103, scope: !23016)
!23029 = !DILocation(line: 7257, column: 6, scope: !23030)
!23030 = distinct !DILexicalBlock(scope: !23016, file: !3, line: 7257, column: 6)
!23031 = !DILocation(line: 7257, column: 6, scope: !23016)
!23032 = !DILocalVariable(name: "scene", scope: !23033, file: !3, line: 7258, type: !22687)
!23033 = distinct !DILexicalBlock(scope: !23030, file: !3, line: 7257, column: 55)
!23034 = !DILocation(line: 7258, column: 16, scope: !23033)
!23035 = !DILocation(line: 7258, column: 24, scope: !23033)
!23036 = !DILocation(line: 7258, column: 27, scope: !23033)
!23037 = !DILocalVariable(name: "secf", scope: !23033, file: !3, line: 7259, type: !22698)
!23038 = !DILocation(line: 7259, column: 16, scope: !23033)
!23039 = !DILocation(line: 7259, column: 23, scope: !23033)
!23040 = !DILocalVariable(name: "val", scope: !23033, file: !3, line: 7260, type: !3424)
!23041 = !DILocation(line: 7260, column: 10, scope: !23033)
!23042 = !DILocation(line: 7263, column: 7, scope: !23043)
!23043 = distinct !DILexicalBlock(scope: !23033, file: !3, line: 7263, column: 7)
!23044 = !DILocation(line: 7263, column: 7, scope: !23033)
!23045 = !DILocation(line: 7264, column: 34, scope: !23043)
!23046 = !DILocation(line: 7264, column: 41, scope: !23043)
!23047 = !DILocation(line: 7264, column: 45, scope: !23043)
!23048 = !DILocation(line: 7264, column: 39, scope: !23043)
!23049 = !DILocation(line: 7264, column: 10, scope: !23043)
!23050 = !DILocation(line: 7264, column: 8, scope: !23043)
!23051 = !DILocation(line: 7264, column: 4, scope: !23043)
!23052 = !DILocation(line: 7266, column: 12, scope: !23043)
!23053 = !DILocation(line: 7266, column: 16, scope: !23043)
!23054 = !DILocation(line: 7266, column: 10, scope: !23043)
!23055 = !DILocation(line: 7266, column: 8, scope: !23043)
!23056 = !DILocation(line: 7269, column: 7, scope: !23057)
!23057 = distinct !DILexicalBlock(scope: !23033, file: !3, line: 7269, column: 7)
!23058 = !DILocation(line: 7269, column: 16, scope: !23057)
!23059 = !DILocation(line: 7269, column: 7, scope: !23033)
!23060 = !DILocation(line: 7270, column: 17, scope: !23061)
!23061 = distinct !DILexicalBlock(scope: !23057, file: !3, line: 7269, column: 35)
!23062 = !DILocation(line: 7270, column: 21, scope: !23061)
!23063 = !DILocation(line: 7270, column: 10, scope: !23061)
!23064 = !DILocation(line: 7270, column: 8, scope: !23061)
!23065 = !DILocation(line: 7271, column: 3, scope: !23061)
!23066 = !DILocation(line: 7272, column: 12, scope: !23067)
!23067 = distinct !DILexicalBlock(scope: !23057, file: !3, line: 7272, column: 12)
!23068 = !DILocation(line: 7272, column: 21, scope: !23067)
!23069 = !DILocation(line: 7272, column: 12, scope: !23057)
!23070 = !DILocation(line: 7273, column: 25, scope: !23071)
!23071 = distinct !DILexicalBlock(scope: !23067, file: !3, line: 7272, column: 41)
!23072 = !DILocation(line: 7273, column: 31, scope: !23071)
!23073 = !DILocation(line: 7273, column: 29, scope: !23071)
!23074 = !DILocation(line: 7273, column: 37, scope: !23071)
!23075 = !DILocation(line: 7273, column: 18, scope: !23071)
!23076 = !DILocation(line: 7273, column: 46, scope: !23071)
!23077 = !DILocation(line: 7273, column: 44, scope: !23071)
!23078 = !DILocation(line: 7273, column: 10, scope: !23071)
!23079 = !DILocation(line: 7273, column: 8, scope: !23071)
!23080 = !DILocation(line: 7274, column: 3, scope: !23071)
!23081 = !DILocation(line: 7277, column: 7, scope: !23082)
!23082 = distinct !DILexicalBlock(scope: !23033, file: !3, line: 7277, column: 7)
!23083 = !DILocation(line: 7277, column: 7, scope: !23033)
!23084 = !DILocation(line: 7278, column: 41, scope: !23082)
!23085 = !DILocation(line: 7278, column: 46, scope: !23082)
!23086 = !DILocation(line: 7278, column: 17, scope: !23082)
!23087 = !DILocation(line: 7278, column: 6, scope: !23082)
!23088 = !DILocation(line: 7278, column: 10, scope: !23082)
!23089 = !DILocation(line: 7278, column: 15, scope: !23082)
!23090 = !DILocation(line: 7278, column: 4, scope: !23082)
!23091 = !DILocation(line: 7280, column: 17, scope: !23082)
!23092 = !DILocation(line: 7280, column: 6, scope: !23082)
!23093 = !DILocation(line: 7280, column: 10, scope: !23082)
!23094 = !DILocation(line: 7280, column: 15, scope: !23082)
!23095 = !DILocation(line: 7281, column: 2, scope: !23033)
!23096 = !DILocation(line: 7283, column: 11, scope: !23097)
!23097 = distinct !DILexicalBlock(scope: !23030, file: !3, line: 7283, column: 11)
!23098 = !DILocation(line: 7283, column: 20, scope: !23097)
!23099 = !DILocation(line: 7283, column: 11, scope: !23030)
!23100 = !DILocalVariable(name: "val", scope: !23101, file: !3, line: 7284, type: !1727)
!23101 = distinct !DILexicalBlock(scope: !23097, file: !3, line: 7283, column: 40)
!23102 = !DILocation(line: 7284, column: 9, scope: !23101)
!23103 = !DILocation(line: 7287, column: 7, scope: !23104)
!23104 = distinct !DILexicalBlock(scope: !23101, file: !3, line: 7287, column: 7)
!23105 = !DILocation(line: 7287, column: 7, scope: !23101)
!23106 = !DILocation(line: 7288, column: 34, scope: !23104)
!23107 = !DILocation(line: 7288, column: 41, scope: !23104)
!23108 = !DILocation(line: 7288, column: 45, scope: !23104)
!23109 = !DILocation(line: 7288, column: 39, scope: !23104)
!23110 = !DILocation(line: 7288, column: 10, scope: !23104)
!23111 = !DILocation(line: 7288, column: 8, scope: !23104)
!23112 = !DILocation(line: 7288, column: 4, scope: !23104)
!23113 = !DILocation(line: 7290, column: 12, scope: !23104)
!23114 = !DILocation(line: 7290, column: 16, scope: !23104)
!23115 = !DILocation(line: 7290, column: 10, scope: !23104)
!23116 = !DILocation(line: 7290, column: 8, scope: !23104)
!23117 = !DILocation(line: 7294, column: 53, scope: !23101)
!23118 = !DILocation(line: 7294, column: 56, scope: !23101)
!23119 = !DILocation(line: 7294, column: 63, scope: !23101)
!23120 = !DILocation(line: 7294, column: 72, scope: !23101)
!23121 = !DILocation(line: 7294, column: 16, scope: !23101)
!23122 = !DILocation(line: 7294, column: 9, scope: !23101)
!23123 = !DILocation(line: 7294, column: 7, scope: !23101)
!23124 = !DILocation(line: 7297, column: 7, scope: !23125)
!23125 = distinct !DILexicalBlock(scope: !23101, file: !3, line: 7297, column: 7)
!23126 = !DILocation(line: 7297, column: 7, scope: !23101)
!23127 = !DILocation(line: 7298, column: 41, scope: !23125)
!23128 = !DILocation(line: 7298, column: 46, scope: !23125)
!23129 = !DILocation(line: 7298, column: 17, scope: !23125)
!23130 = !DILocation(line: 7298, column: 6, scope: !23125)
!23131 = !DILocation(line: 7298, column: 10, scope: !23125)
!23132 = !DILocation(line: 7298, column: 15, scope: !23125)
!23133 = !DILocation(line: 7298, column: 4, scope: !23125)
!23134 = !DILocation(line: 7300, column: 17, scope: !23125)
!23135 = !DILocation(line: 7300, column: 6, scope: !23125)
!23136 = !DILocation(line: 7300, column: 10, scope: !23125)
!23137 = !DILocation(line: 7300, column: 15, scope: !23125)
!23138 = !DILocation(line: 7301, column: 2, scope: !23101)
!23139 = !DILocation(line: 7307, column: 7, scope: !23140)
!23140 = distinct !DILexicalBlock(scope: !23016, file: !3, line: 7307, column: 6)
!23141 = !DILocation(line: 7307, column: 11, scope: !23140)
!23142 = !DILocation(line: 7307, column: 16, scope: !23140)
!23143 = !DILocation(line: 7307, column: 34, scope: !23140)
!23144 = !DILocation(line: 7307, column: 37, scope: !23140)
!23145 = !DILocation(line: 7307, column: 43, scope: !23140)
!23146 = !DILocation(line: 7307, column: 6, scope: !23016)
!23147 = !DILocation(line: 7308, column: 17, scope: !23148)
!23148 = distinct !DILexicalBlock(scope: !23140, file: !3, line: 7307, column: 47)
!23149 = !DILocation(line: 7308, column: 23, scope: !23148)
!23150 = !DILocation(line: 7308, column: 33, scope: !23148)
!23151 = !DILocation(line: 7308, column: 37, scope: !23148)
!23152 = !DILocation(line: 7308, column: 32, scope: !23148)
!23153 = !DILocation(line: 7308, column: 30, scope: !23148)
!23154 = !DILocation(line: 7308, column: 43, scope: !23148)
!23155 = !DILocation(line: 7308, column: 47, scope: !23148)
!23156 = !DILocation(line: 7308, column: 41, scope: !23148)
!23157 = !DILocation(line: 7308, column: 3, scope: !23148)
!23158 = !DILocation(line: 7308, column: 9, scope: !23148)
!23159 = !DILocation(line: 7308, column: 15, scope: !23148)
!23160 = !DILocation(line: 7309, column: 2, scope: !23148)
!23161 = !DILocation(line: 7310, column: 7, scope: !23162)
!23162 = distinct !DILexicalBlock(scope: !23016, file: !3, line: 7310, column: 6)
!23163 = !DILocation(line: 7310, column: 11, scope: !23162)
!23164 = !DILocation(line: 7310, column: 16, scope: !23162)
!23165 = !DILocation(line: 7310, column: 34, scope: !23162)
!23166 = !DILocation(line: 7310, column: 37, scope: !23162)
!23167 = !DILocation(line: 7310, column: 43, scope: !23162)
!23168 = !DILocation(line: 7310, column: 6, scope: !23016)
!23169 = !DILocation(line: 7311, column: 17, scope: !23170)
!23170 = distinct !DILexicalBlock(scope: !23162, file: !3, line: 7310, column: 47)
!23171 = !DILocation(line: 7311, column: 23, scope: !23170)
!23172 = !DILocation(line: 7311, column: 33, scope: !23170)
!23173 = !DILocation(line: 7311, column: 37, scope: !23170)
!23174 = !DILocation(line: 7311, column: 32, scope: !23170)
!23175 = !DILocation(line: 7311, column: 30, scope: !23170)
!23176 = !DILocation(line: 7311, column: 43, scope: !23170)
!23177 = !DILocation(line: 7311, column: 47, scope: !23170)
!23178 = !DILocation(line: 7311, column: 41, scope: !23170)
!23179 = !DILocation(line: 7311, column: 3, scope: !23170)
!23180 = !DILocation(line: 7311, column: 9, scope: !23170)
!23181 = !DILocation(line: 7311, column: 15, scope: !23170)
!23182 = !DILocation(line: 7312, column: 2, scope: !23170)
!23183 = !DILocation(line: 7313, column: 1, scope: !23016)
!23184 = distinct !DISubprogram(name: "applyTimeSlide", scope: !3, file: !3, line: 7584, type: !12679, scopeLine: 7585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!23185 = !DILocalVariable(name: "t", arg: 1, scope: !23184, file: !3, line: 7584, type: !3841)
!23186 = !DILocation(line: 7584, column: 39, scope: !23184)
!23187 = !DILocalVariable(name: "mval", arg: 2, scope: !23184, file: !3, line: 7584, type: !3857)
!23188 = !DILocation(line: 7584, column: 52, scope: !23184)
!23189 = !DILocalVariable(name: "v2d", scope: !23184, file: !3, line: 7586, type: !1728)
!23190 = !DILocation(line: 7586, column: 10, scope: !23184)
!23191 = !DILocation(line: 7586, column: 26, scope: !23184)
!23192 = !DILocation(line: 7586, column: 29, scope: !23184)
!23193 = !DILocation(line: 7586, column: 16, scope: !23184)
!23194 = !DILocalVariable(name: "cval", scope: !23184, file: !3, line: 7587, type: !1754)
!23195 = !DILocation(line: 7587, column: 8, scope: !23184)
!23196 = !DILocalVariable(name: "sval", scope: !23184, file: !3, line: 7587, type: !1754)
!23197 = !DILocation(line: 7587, column: 17, scope: !23184)
!23198 = !DILocalVariable(name: "minx", scope: !23184, file: !3, line: 7588, type: !1727)
!23199 = !DILocation(line: 7588, column: 8, scope: !23184)
!23200 = !DILocation(line: 7588, column: 27, scope: !23184)
!23201 = !DILocation(line: 7588, column: 30, scope: !23184)
!23202 = !DILocation(line: 7588, column: 17, scope: !23184)
!23203 = !DILocation(line: 7588, column: 15, scope: !23184)
!23204 = !DILocalVariable(name: "maxx", scope: !23184, file: !3, line: 7589, type: !1727)
!23205 = !DILocation(line: 7589, column: 8, scope: !23184)
!23206 = !DILocation(line: 7589, column: 27, scope: !23184)
!23207 = !DILocation(line: 7589, column: 30, scope: !23184)
!23208 = !DILocation(line: 7589, column: 17, scope: !23184)
!23209 = !DILocation(line: 7589, column: 42, scope: !23184)
!23210 = !DILocation(line: 7589, column: 15, scope: !23184)
!23211 = !DILocalVariable(name: "str", scope: !23184, file: !3, line: 7590, type: !2366)
!23212 = !DILocation(line: 7590, column: 7, scope: !23184)
!23213 = !DILocation(line: 7593, column: 27, scope: !23184)
!23214 = !DILocation(line: 7593, column: 32, scope: !23184)
!23215 = !DILocation(line: 7593, column: 41, scope: !23184)
!23216 = !DILocation(line: 7593, column: 51, scope: !23184)
!23217 = !DILocation(line: 7593, column: 61, scope: !23184)
!23218 = !DILocation(line: 7593, column: 2, scope: !23184)
!23219 = !DILocation(line: 7594, column: 27, scope: !23184)
!23220 = !DILocation(line: 7594, column: 32, scope: !23184)
!23221 = !DILocation(line: 7594, column: 35, scope: !23184)
!23222 = !DILocation(line: 7594, column: 45, scope: !23184)
!23223 = !DILocation(line: 7594, column: 48, scope: !23184)
!23224 = !DILocation(line: 7594, column: 59, scope: !23184)
!23225 = !DILocation(line: 7594, column: 69, scope: !23184)
!23226 = !DILocation(line: 7594, column: 2, scope: !23184)
!23227 = !DILocation(line: 7598, column: 17, scope: !23184)
!23228 = !DILocation(line: 7598, column: 2, scope: !23184)
!23229 = !DILocation(line: 7598, column: 5, scope: !23184)
!23230 = !DILocation(line: 7598, column: 15, scope: !23184)
!23231 = !DILocation(line: 7601, column: 22, scope: !23184)
!23232 = !DILocation(line: 7601, column: 32, scope: !23184)
!23233 = !DILocation(line: 7601, column: 30, scope: !23184)
!23234 = !DILocation(line: 7601, column: 19, scope: !23184)
!23235 = !DILocation(line: 7601, column: 44, scope: !23184)
!23236 = !DILocation(line: 7601, column: 51, scope: !23184)
!23237 = !DILocation(line: 7601, column: 49, scope: !23184)
!23238 = !DILocation(line: 7601, column: 41, scope: !23184)
!23239 = !DILocation(line: 7601, column: 2, scope: !23184)
!23240 = !DILocation(line: 7601, column: 5, scope: !23184)
!23241 = !DILocation(line: 7601, column: 12, scope: !23184)
!23242 = !DILocation(line: 7602, column: 17, scope: !23184)
!23243 = !DILocation(line: 7602, column: 20, scope: !23184)
!23244 = !DILocation(line: 7602, column: 26, scope: !23184)
!23245 = !DILocation(line: 7602, column: 29, scope: !23184)
!23246 = !DILocation(line: 7602, column: 2, scope: !23184)
!23247 = !DILocation(line: 7603, column: 18, scope: !23184)
!23248 = !DILocation(line: 7603, column: 25, scope: !23184)
!23249 = !DILocation(line: 7603, column: 23, scope: !23184)
!23250 = !DILocation(line: 7603, column: 33, scope: !23184)
!23251 = !DILocation(line: 7603, column: 36, scope: !23184)
!23252 = !DILocation(line: 7603, column: 31, scope: !23184)
!23253 = !DILocation(line: 7603, column: 43, scope: !23184)
!23254 = !DILocation(line: 7603, column: 52, scope: !23184)
!23255 = !DILocation(line: 7603, column: 50, scope: !23184)
!23256 = !DILocation(line: 7603, column: 2, scope: !23184)
!23257 = !DILocation(line: 7603, column: 5, scope: !23184)
!23258 = !DILocation(line: 7603, column: 15, scope: !23184)
!23259 = !DILocation(line: 7605, column: 18, scope: !23184)
!23260 = !DILocation(line: 7605, column: 21, scope: !23184)
!23261 = !DILocation(line: 7605, column: 30, scope: !23184)
!23262 = !DILocation(line: 7605, column: 2, scope: !23184)
!23263 = !DILocation(line: 7606, column: 22, scope: !23184)
!23264 = !DILocation(line: 7606, column: 25, scope: !23184)
!23265 = !DILocation(line: 7606, column: 2, scope: !23184)
!23266 = !DILocation(line: 7608, column: 13, scope: !23184)
!23267 = !DILocation(line: 7608, column: 2, scope: !23184)
!23268 = !DILocation(line: 7610, column: 22, scope: !23184)
!23269 = !DILocation(line: 7610, column: 25, scope: !23184)
!23270 = !DILocation(line: 7610, column: 29, scope: !23184)
!23271 = !DILocation(line: 7610, column: 2, scope: !23184)
!23272 = !DILocation(line: 7611, column: 1, scope: !23184)
!23273 = distinct !DISubprogram(name: "headerTimeSlide", scope: !3, file: !3, line: 7515, type: !23274, scopeLine: 7516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!23274 = !DISubroutineType(types: !23275)
!23275 = !{null, !3841, !1727, !2050}
!23276 = !DILocalVariable(name: "t", arg: 1, scope: !23273, file: !3, line: 7515, type: !3841)
!23277 = !DILocation(line: 7515, column: 40, scope: !23273)
!23278 = !DILocalVariable(name: "sval", arg: 2, scope: !23273, file: !3, line: 7515, type: !1727)
!23279 = !DILocation(line: 7515, column: 49, scope: !23273)
!23280 = !DILocalVariable(name: "str", arg: 3, scope: !23273, file: !3, line: 7515, type: !2050)
!23281 = !DILocation(line: 7515, column: 60, scope: !23273)
!23282 = !DILocalVariable(name: "tvec", scope: !23273, file: !3, line: 7517, type: !13641)
!23283 = !DILocation(line: 7517, column: 7, scope: !23273)
!23284 = !DILocation(line: 7519, column: 19, scope: !23285)
!23285 = distinct !DILexicalBlock(scope: !23273, file: !3, line: 7519, column: 6)
!23286 = !DILocation(line: 7519, column: 22, scope: !23285)
!23287 = !DILocation(line: 7519, column: 6, scope: !23285)
!23288 = !DILocation(line: 7519, column: 6, scope: !23273)
!23289 = !DILocation(line: 7520, column: 20, scope: !23290)
!23290 = distinct !DILexicalBlock(scope: !23285, file: !3, line: 7519, column: 28)
!23291 = !DILocation(line: 7520, column: 23, scope: !23290)
!23292 = !DILocation(line: 7520, column: 29, scope: !23290)
!23293 = !DILocation(line: 7520, column: 36, scope: !23290)
!23294 = !DILocation(line: 7520, column: 39, scope: !23290)
!23295 = !DILocation(line: 7520, column: 46, scope: !23290)
!23296 = !DILocation(line: 7520, column: 3, scope: !23290)
!23297 = !DILocation(line: 7521, column: 2, scope: !23290)
!23298 = !DILocalVariable(name: "minx", scope: !23299, file: !3, line: 7523, type: !1727)
!23299 = distinct !DILexicalBlock(scope: !23285, file: !3, line: 7522, column: 7)
!23300 = !DILocation(line: 7523, column: 9, scope: !23299)
!23301 = !DILocation(line: 7523, column: 28, scope: !23299)
!23302 = !DILocation(line: 7523, column: 31, scope: !23299)
!23303 = !DILocation(line: 7523, column: 18, scope: !23299)
!23304 = !DILocation(line: 7523, column: 16, scope: !23299)
!23305 = !DILocalVariable(name: "maxx", scope: !23299, file: !3, line: 7524, type: !1727)
!23306 = !DILocation(line: 7524, column: 9, scope: !23299)
!23307 = !DILocation(line: 7524, column: 28, scope: !23299)
!23308 = !DILocation(line: 7524, column: 31, scope: !23299)
!23309 = !DILocation(line: 7524, column: 18, scope: !23299)
!23310 = !DILocation(line: 7524, column: 43, scope: !23299)
!23311 = !DILocation(line: 7524, column: 16, scope: !23299)
!23312 = !DILocalVariable(name: "cval", scope: !23299, file: !3, line: 7525, type: !1727)
!23313 = !DILocation(line: 7525, column: 9, scope: !23299)
!23314 = !DILocation(line: 7525, column: 16, scope: !23299)
!23315 = !DILocation(line: 7525, column: 19, scope: !23299)
!23316 = !DILocalVariable(name: "val", scope: !23299, file: !3, line: 7526, type: !1727)
!23317 = !DILocation(line: 7526, column: 9, scope: !23299)
!23318 = !DILocation(line: 7528, column: 17, scope: !23299)
!23319 = !DILocation(line: 7528, column: 24, scope: !23299)
!23320 = !DILocation(line: 7528, column: 22, scope: !23299)
!23321 = !DILocation(line: 7528, column: 14, scope: !23299)
!23322 = !DILocation(line: 7528, column: 33, scope: !23299)
!23323 = !DILocation(line: 7528, column: 40, scope: !23299)
!23324 = !DILocation(line: 7528, column: 38, scope: !23299)
!23325 = !DILocation(line: 7528, column: 30, scope: !23299)
!23326 = !DILocation(line: 7528, column: 7, scope: !23299)
!23327 = !DILocation(line: 7529, column: 3, scope: !23328)
!23328 = distinct !DILexicalBlock(scope: !23329, file: !3, line: 7529, column: 3)
!23329 = distinct !DILexicalBlock(scope: !23299, file: !3, line: 7529, column: 3)
!23330 = !DILocation(line: 7529, column: 3, scope: !23329)
!23331 = !DILocation(line: 7529, column: 3, scope: !23332)
!23332 = distinct !DILexicalBlock(scope: !23328, file: !3, line: 7529, column: 3)
!23333 = !DILocation(line: 7531, column: 17, scope: !23299)
!23334 = !DILocation(line: 7531, column: 51, scope: !23299)
!23335 = !DILocation(line: 7531, column: 3, scope: !23299)
!23336 = !DILocation(line: 7534, column: 15, scope: !23273)
!23337 = !DILocation(line: 7534, column: 60, scope: !23273)
!23338 = !DILocation(line: 7534, column: 2, scope: !23273)
!23339 = !DILocation(line: 7535, column: 1, scope: !23273)
!23340 = distinct !DISubprogram(name: "applyTimeSlideValue", scope: !3, file: !3, line: 7537, type: !22773, scopeLine: 7538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!23341 = !DILocalVariable(name: "t", arg: 1, scope: !23340, file: !3, line: 7537, type: !3841)
!23342 = !DILocation(line: 7537, column: 44, scope: !23340)
!23343 = !DILocalVariable(name: "sval", arg: 2, scope: !23340, file: !3, line: 7537, type: !1727)
!23344 = !DILocation(line: 7537, column: 53, scope: !23340)
!23345 = !DILocalVariable(name: "td", scope: !23340, file: !3, line: 7539, type: !3868)
!23346 = !DILocation(line: 7539, column: 13, scope: !23340)
!23347 = !DILocation(line: 7539, column: 18, scope: !23340)
!23348 = !DILocation(line: 7539, column: 21, scope: !23340)
!23349 = !DILocalVariable(name: "i", scope: !23340, file: !3, line: 7540, type: !35)
!23350 = !DILocation(line: 7540, column: 6, scope: !23340)
!23351 = !DILocalVariable(name: "minx", scope: !23340, file: !3, line: 7542, type: !1727)
!23352 = !DILocation(line: 7542, column: 8, scope: !23340)
!23353 = !DILocation(line: 7542, column: 27, scope: !23340)
!23354 = !DILocation(line: 7542, column: 30, scope: !23340)
!23355 = !DILocation(line: 7542, column: 17, scope: !23340)
!23356 = !DILocation(line: 7542, column: 15, scope: !23340)
!23357 = !DILocalVariable(name: "maxx", scope: !23340, file: !3, line: 7543, type: !1727)
!23358 = !DILocation(line: 7543, column: 8, scope: !23340)
!23359 = !DILocation(line: 7543, column: 27, scope: !23340)
!23360 = !DILocation(line: 7543, column: 30, scope: !23340)
!23361 = !DILocation(line: 7543, column: 17, scope: !23340)
!23362 = !DILocation(line: 7543, column: 42, scope: !23340)
!23363 = !DILocation(line: 7543, column: 15, scope: !23340)
!23364 = !DILocation(line: 7546, column: 6, scope: !23365)
!23365 = distinct !DILexicalBlock(scope: !23340, file: !3, line: 7546, column: 6)
!23366 = !DILocation(line: 7546, column: 9, scope: !23365)
!23367 = !DILocation(line: 7546, column: 19, scope: !23365)
!23368 = !DILocation(line: 7546, column: 6, scope: !23340)
!23369 = !DILocalVariable(name: "saction", scope: !23370, file: !3, line: 7547, type: !4354)
!23370 = distinct !DILexicalBlock(scope: !23365, file: !3, line: 7546, column: 36)
!23371 = !DILocation(line: 7547, column: 16, scope: !23370)
!23372 = !DILocation(line: 7547, column: 41, scope: !23370)
!23373 = !DILocation(line: 7547, column: 44, scope: !23370)
!23374 = !DILocation(line: 7547, column: 48, scope: !23370)
!23375 = !DILocation(line: 7547, column: 58, scope: !23370)
!23376 = !DILocation(line: 7547, column: 26, scope: !23370)
!23377 = !DILocalVariable(name: "cvalf", scope: !23370, file: !3, line: 7548, type: !1727)
!23378 = !DILocation(line: 7548, column: 9, scope: !23370)
!23379 = !DILocation(line: 7548, column: 17, scope: !23370)
!23380 = !DILocation(line: 7548, column: 20, scope: !23370)
!23381 = !DILocation(line: 7550, column: 24, scope: !23370)
!23382 = !DILocation(line: 7550, column: 3, scope: !23370)
!23383 = !DILocation(line: 7550, column: 12, scope: !23370)
!23384 = !DILocation(line: 7550, column: 22, scope: !23370)
!23385 = !DILocation(line: 7551, column: 2, scope: !23370)
!23386 = !DILocation(line: 7554, column: 9, scope: !23387)
!23387 = distinct !DILexicalBlock(scope: !23340, file: !3, line: 7554, column: 2)
!23388 = !DILocation(line: 7554, column: 7, scope: !23387)
!23389 = !DILocation(line: 7554, column: 14, scope: !23390)
!23390 = distinct !DILexicalBlock(scope: !23387, file: !3, line: 7554, column: 2)
!23391 = !DILocation(line: 7554, column: 18, scope: !23390)
!23392 = !DILocation(line: 7554, column: 21, scope: !23390)
!23393 = !DILocation(line: 7554, column: 16, scope: !23390)
!23394 = !DILocation(line: 7554, column: 2, scope: !23387)
!23395 = !DILocalVariable(name: "adt", scope: !23396, file: !3, line: 7559, type: !22815)
!23396 = distinct !DILexicalBlock(scope: !23390, file: !3, line: 7554, column: 39)
!23397 = !DILocation(line: 7559, column: 13, scope: !23396)
!23398 = !DILocation(line: 7559, column: 20, scope: !23396)
!23399 = !DILocation(line: 7559, column: 23, scope: !23396)
!23400 = !DILocation(line: 7559, column: 33, scope: !23396)
!23401 = !DILocation(line: 7559, column: 19, scope: !23396)
!23402 = !DILocation(line: 7559, column: 49, scope: !23396)
!23403 = !DILocation(line: 7559, column: 53, scope: !23396)
!23404 = !DILocalVariable(name: "cval", scope: !23396, file: !3, line: 7560, type: !1727)
!23405 = !DILocation(line: 7560, column: 9, scope: !23396)
!23406 = !DILocation(line: 7560, column: 16, scope: !23396)
!23407 = !DILocation(line: 7560, column: 19, scope: !23396)
!23408 = !DILocation(line: 7563, column: 7, scope: !23409)
!23409 = distinct !DILexicalBlock(scope: !23396, file: !3, line: 7563, column: 7)
!23410 = !DILocation(line: 7563, column: 7, scope: !23396)
!23411 = !DILocation(line: 7564, column: 35, scope: !23409)
!23412 = !DILocation(line: 7564, column: 40, scope: !23409)
!23413 = !DILocation(line: 7564, column: 11, scope: !23409)
!23414 = !DILocation(line: 7564, column: 9, scope: !23409)
!23415 = !DILocation(line: 7564, column: 4, scope: !23409)
!23416 = !DILocation(line: 7567, column: 8, scope: !23417)
!23417 = distinct !DILexicalBlock(scope: !23396, file: !3, line: 7567, column: 7)
!23418 = !DILocation(line: 7567, column: 15, scope: !23417)
!23419 = !DILocation(line: 7567, column: 13, scope: !23417)
!23420 = !DILocation(line: 7567, column: 21, scope: !23417)
!23421 = !DILocation(line: 7567, column: 25, scope: !23417)
!23422 = !DILocation(line: 7567, column: 32, scope: !23417)
!23423 = !DILocation(line: 7567, column: 30, scope: !23417)
!23424 = !DILocation(line: 7567, column: 7, scope: !23396)
!23425 = !DILocalVariable(name: "cvalc", scope: !23426, file: !3, line: 7568, type: !1727)
!23426 = distinct !DILexicalBlock(scope: !23417, file: !3, line: 7567, column: 39)
!23427 = !DILocation(line: 7568, column: 10, scope: !23426)
!23428 = !DILocation(line: 7568, column: 18, scope: !23426)
!23429 = !DILocalVariable(name: "timefac", scope: !23426, file: !3, line: 7569, type: !1727)
!23430 = !DILocation(line: 7569, column: 10, scope: !23426)
!23431 = !DILocation(line: 7572, column: 8, scope: !23432)
!23432 = distinct !DILexicalBlock(scope: !23426, file: !3, line: 7572, column: 8)
!23433 = !DILocation(line: 7572, column: 12, scope: !23432)
!23434 = !DILocation(line: 7572, column: 19, scope: !23432)
!23435 = !DILocation(line: 7572, column: 17, scope: !23432)
!23436 = !DILocation(line: 7572, column: 8, scope: !23426)
!23437 = !DILocation(line: 7573, column: 16, scope: !23438)
!23438 = distinct !DILexicalBlock(scope: !23432, file: !3, line: 7572, column: 25)
!23439 = !DILocation(line: 7573, column: 23, scope: !23438)
!23440 = !DILocation(line: 7573, column: 27, scope: !23438)
!23441 = !DILocation(line: 7573, column: 21, scope: !23438)
!23442 = !DILocation(line: 7573, column: 36, scope: !23438)
!23443 = !DILocation(line: 7573, column: 43, scope: !23438)
!23444 = !DILocation(line: 7573, column: 41, scope: !23438)
!23445 = !DILocation(line: 7573, column: 33, scope: !23438)
!23446 = !DILocation(line: 7573, column: 13, scope: !23438)
!23447 = !DILocation(line: 7574, column: 18, scope: !23438)
!23448 = !DILocation(line: 7574, column: 26, scope: !23438)
!23449 = !DILocation(line: 7574, column: 37, scope: !23438)
!23450 = !DILocation(line: 7574, column: 45, scope: !23438)
!23451 = !DILocation(line: 7574, column: 43, scope: !23438)
!23452 = !DILocation(line: 7574, column: 34, scope: !23438)
!23453 = !DILocation(line: 7574, column: 24, scope: !23438)
!23454 = !DILocation(line: 7574, column: 7, scope: !23438)
!23455 = !DILocation(line: 7574, column: 11, scope: !23438)
!23456 = !DILocation(line: 7574, column: 16, scope: !23438)
!23457 = !DILocation(line: 7575, column: 4, scope: !23438)
!23458 = !DILocation(line: 7577, column: 16, scope: !23459)
!23459 = distinct !DILexicalBlock(scope: !23432, file: !3, line: 7576, column: 9)
!23460 = !DILocation(line: 7577, column: 20, scope: !23459)
!23461 = !DILocation(line: 7577, column: 27, scope: !23459)
!23462 = !DILocation(line: 7577, column: 25, scope: !23459)
!23463 = !DILocation(line: 7577, column: 36, scope: !23459)
!23464 = !DILocation(line: 7577, column: 43, scope: !23459)
!23465 = !DILocation(line: 7577, column: 41, scope: !23459)
!23466 = !DILocation(line: 7577, column: 33, scope: !23459)
!23467 = !DILocation(line: 7577, column: 13, scope: !23459)
!23468 = !DILocation(line: 7578, column: 18, scope: !23459)
!23469 = !DILocation(line: 7578, column: 26, scope: !23459)
!23470 = !DILocation(line: 7578, column: 37, scope: !23459)
!23471 = !DILocation(line: 7578, column: 44, scope: !23459)
!23472 = !DILocation(line: 7578, column: 42, scope: !23459)
!23473 = !DILocation(line: 7578, column: 34, scope: !23459)
!23474 = !DILocation(line: 7578, column: 24, scope: !23459)
!23475 = !DILocation(line: 7578, column: 7, scope: !23459)
!23476 = !DILocation(line: 7578, column: 11, scope: !23459)
!23477 = !DILocation(line: 7578, column: 16, scope: !23459)
!23478 = !DILocation(line: 7580, column: 3, scope: !23426)
!23479 = !DILocation(line: 7581, column: 2, scope: !23396)
!23480 = !DILocation(line: 7554, column: 29, scope: !23390)
!23481 = !DILocation(line: 7554, column: 35, scope: !23390)
!23482 = !DILocation(line: 7554, column: 2, scope: !23390)
!23483 = distinct !{!23483, !23394, !23484}
!23484 = !DILocation(line: 7581, column: 2, scope: !23387)
!23485 = !DILocation(line: 7582, column: 1, scope: !23340)
!23486 = distinct !DISubprogram(name: "applyTimeScale", scope: !3, file: !3, line: 7714, type: !12679, scopeLine: 7715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!23487 = !DILocalVariable(name: "t", arg: 1, scope: !23486, file: !3, line: 7714, type: !3841)
!23488 = !DILocation(line: 7714, column: 39, scope: !23486)
!23489 = !DILocalVariable(name: "UNUSED_mval", arg: 2, scope: !23486, file: !3, line: 7714, type: !3857)
!23490 = !DILocation(line: 7714, column: 52, scope: !23486)
!23491 = !DILocalVariable(name: "str", scope: !23486, file: !3, line: 7716, type: !2366)
!23492 = !DILocation(line: 7716, column: 7, scope: !23486)
!23493 = !DILocation(line: 7719, column: 14, scope: !23486)
!23494 = !DILocation(line: 7719, column: 17, scope: !23486)
!23495 = !DILocation(line: 7719, column: 2, scope: !23486)
!23496 = !DILocation(line: 7719, column: 5, scope: !23486)
!23497 = !DILocation(line: 7719, column: 12, scope: !23486)
!23498 = !DILocation(line: 7720, column: 17, scope: !23486)
!23499 = !DILocation(line: 7720, column: 20, scope: !23486)
!23500 = !DILocation(line: 7720, column: 26, scope: !23486)
!23501 = !DILocation(line: 7720, column: 29, scope: !23486)
!23502 = !DILocation(line: 7720, column: 2, scope: !23486)
!23503 = !DILocation(line: 7721, column: 17, scope: !23486)
!23504 = !DILocation(line: 7721, column: 20, scope: !23486)
!23505 = !DILocation(line: 7721, column: 2, scope: !23486)
!23506 = !DILocation(line: 7721, column: 5, scope: !23486)
!23507 = !DILocation(line: 7721, column: 15, scope: !23486)
!23508 = !DILocation(line: 7722, column: 18, scope: !23486)
!23509 = !DILocation(line: 7722, column: 21, scope: !23486)
!23510 = !DILocation(line: 7722, column: 2, scope: !23486)
!23511 = !DILocation(line: 7724, column: 22, scope: !23486)
!23512 = !DILocation(line: 7724, column: 2, scope: !23486)
!23513 = !DILocation(line: 7726, column: 13, scope: !23486)
!23514 = !DILocation(line: 7726, column: 2, scope: !23486)
!23515 = !DILocation(line: 7728, column: 22, scope: !23486)
!23516 = !DILocation(line: 7728, column: 25, scope: !23486)
!23517 = !DILocation(line: 7728, column: 29, scope: !23486)
!23518 = !DILocation(line: 7728, column: 2, scope: !23486)
!23519 = !DILocation(line: 7729, column: 1, scope: !23486)
!23520 = distinct !DISubprogram(name: "headerTimeScale", scope: !3, file: !3, line: 7663, type: !22663, scopeLine: 7664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!23521 = !DILocalVariable(name: "t", arg: 1, scope: !23520, file: !3, line: 7663, type: !3841)
!23522 = !DILocation(line: 7663, column: 40, scope: !23520)
!23523 = !DILocalVariable(name: "str", arg: 2, scope: !23520, file: !3, line: 7663, type: !2050)
!23524 = !DILocation(line: 7663, column: 48, scope: !23520)
!23525 = !DILocalVariable(name: "tvec", scope: !23520, file: !3, line: 7665, type: !13641)
!23526 = !DILocation(line: 7665, column: 7, scope: !23520)
!23527 = !DILocation(line: 7667, column: 19, scope: !23528)
!23528 = distinct !DILexicalBlock(scope: !23520, file: !3, line: 7667, column: 6)
!23529 = !DILocation(line: 7667, column: 22, scope: !23528)
!23530 = !DILocation(line: 7667, column: 6, scope: !23528)
!23531 = !DILocation(line: 7667, column: 6, scope: !23520)
!23532 = !DILocation(line: 7668, column: 20, scope: !23528)
!23533 = !DILocation(line: 7668, column: 23, scope: !23528)
!23534 = !DILocation(line: 7668, column: 29, scope: !23528)
!23535 = !DILocation(line: 7668, column: 36, scope: !23528)
!23536 = !DILocation(line: 7668, column: 39, scope: !23528)
!23537 = !DILocation(line: 7668, column: 46, scope: !23528)
!23538 = !DILocation(line: 7668, column: 3, scope: !23528)
!23539 = !DILocation(line: 7670, column: 17, scope: !23528)
!23540 = !DILocation(line: 7670, column: 51, scope: !23528)
!23541 = !DILocation(line: 7670, column: 54, scope: !23528)
!23542 = !DILocation(line: 7670, column: 3, scope: !23528)
!23543 = !DILocation(line: 7672, column: 15, scope: !23520)
!23544 = !DILocation(line: 7672, column: 57, scope: !23520)
!23545 = !DILocation(line: 7672, column: 2, scope: !23520)
!23546 = !DILocation(line: 7673, column: 1, scope: !23520)
!23547 = distinct !DISubprogram(name: "applyTimeScaleValue", scope: !3, file: !3, line: 7675, type: !4434, scopeLine: 7676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !4417)
!23548 = !DILocalVariable(name: "t", arg: 1, scope: !23547, file: !3, line: 7675, type: !3841)
!23549 = !DILocation(line: 7675, column: 44, scope: !23547)
!23550 = !DILocalVariable(name: "scene", scope: !23547, file: !3, line: 7677, type: !8898)
!23551 = !DILocation(line: 7677, column: 9, scope: !23547)
!23552 = !DILocation(line: 7677, column: 17, scope: !23547)
!23553 = !DILocation(line: 7677, column: 20, scope: !23547)
!23554 = !DILocalVariable(name: "td", scope: !23547, file: !3, line: 7678, type: !3868)
!23555 = !DILocation(line: 7678, column: 13, scope: !23547)
!23556 = !DILocation(line: 7678, column: 18, scope: !23547)
!23557 = !DILocation(line: 7678, column: 21, scope: !23547)
!23558 = !DILocalVariable(name: "td2d", scope: !23547, file: !3, line: 7679, type: !3946)
!23559 = !DILocation(line: 7679, column: 15, scope: !23547)
!23560 = !DILocation(line: 7679, column: 22, scope: !23547)
!23561 = !DILocation(line: 7679, column: 25, scope: !23547)
!23562 = !DILocalVariable(name: "i", scope: !23547, file: !3, line: 7680, type: !35)
!23563 = !DILocation(line: 7680, column: 6, scope: !23547)
!23564 = !DILocalVariable(name: "autosnap", scope: !23547, file: !3, line: 7682, type: !22693)
!23565 = !DILocation(line: 7682, column: 14, scope: !23547)
!23566 = !DILocation(line: 7682, column: 46, scope: !23547)
!23567 = !DILocation(line: 7682, column: 25, scope: !23547)
!23568 = !DILocalVariable(name: "secf", scope: !23547, file: !3, line: 7683, type: !22698)
!23569 = !DILocation(line: 7683, column: 15, scope: !23547)
!23570 = !DILocation(line: 7683, column: 22, scope: !23547)
!23571 = !DILocation(line: 7686, column: 9, scope: !23572)
!23572 = distinct !DILexicalBlock(scope: !23547, file: !3, line: 7686, column: 2)
!23573 = !DILocation(line: 7686, column: 7, scope: !23572)
!23574 = !DILocation(line: 7686, column: 14, scope: !23575)
!23575 = distinct !DILexicalBlock(scope: !23572, file: !3, line: 7686, column: 2)
!23576 = !DILocation(line: 7686, column: 18, scope: !23575)
!23577 = !DILocation(line: 7686, column: 21, scope: !23575)
!23578 = !DILocation(line: 7686, column: 16, scope: !23575)
!23579 = !DILocation(line: 7686, column: 2, scope: !23572)
!23580 = !DILocalVariable(name: "adt", scope: !23581, file: !3, line: 7691, type: !22815)
!23581 = distinct !DILexicalBlock(scope: !23575, file: !3, line: 7686, column: 47)
!23582 = !DILocation(line: 7691, column: 13, scope: !23581)
!23583 = !DILocation(line: 7691, column: 20, scope: !23581)
!23584 = !DILocation(line: 7691, column: 23, scope: !23581)
!23585 = !DILocation(line: 7691, column: 33, scope: !23581)
!23586 = !DILocation(line: 7691, column: 19, scope: !23581)
!23587 = !DILocation(line: 7691, column: 49, scope: !23581)
!23588 = !DILocation(line: 7691, column: 53, scope: !23581)
!23589 = !DILocalVariable(name: "startx", scope: !23581, file: !3, line: 7692, type: !1727)
!23590 = !DILocation(line: 7692, column: 9, scope: !23581)
!23591 = !DILocation(line: 7692, column: 18, scope: !23581)
!23592 = !DILocalVariable(name: "fac", scope: !23581, file: !3, line: 7693, type: !1727)
!23593 = !DILocation(line: 7693, column: 9, scope: !23581)
!23594 = !DILocation(line: 7693, column: 15, scope: !23581)
!23595 = !DILocation(line: 7693, column: 18, scope: !23581)
!23596 = !DILocation(line: 7695, column: 7, scope: !23597)
!23597 = distinct !DILexicalBlock(scope: !23581, file: !3, line: 7695, column: 7)
!23598 = !DILocation(line: 7695, column: 16, scope: !23597)
!23599 = !DILocation(line: 7695, column: 7, scope: !23581)
!23600 = !DILocation(line: 7696, column: 32, scope: !23601)
!23601 = distinct !DILexicalBlock(scope: !23597, file: !3, line: 7695, column: 35)
!23602 = !DILocation(line: 7696, column: 24, scope: !23601)
!23603 = !DILocation(line: 7696, column: 38, scope: !23601)
!23604 = !DILocation(line: 7696, column: 36, scope: !23601)
!23605 = !DILocation(line: 7696, column: 43, scope: !23601)
!23606 = !DILocation(line: 7696, column: 18, scope: !23601)
!23607 = !DILocation(line: 7696, column: 52, scope: !23601)
!23608 = !DILocation(line: 7696, column: 50, scope: !23601)
!23609 = !DILocation(line: 7696, column: 10, scope: !23601)
!23610 = !DILocation(line: 7696, column: 8, scope: !23601)
!23611 = !DILocation(line: 7697, column: 3, scope: !23601)
!23612 = !DILocation(line: 7698, column: 12, scope: !23613)
!23613 = distinct !DILexicalBlock(scope: !23597, file: !3, line: 7698, column: 12)
!23614 = !DILocation(line: 7698, column: 21, scope: !23613)
!23615 = !DILocation(line: 7698, column: 12, scope: !23597)
!23616 = !DILocation(line: 7699, column: 24, scope: !23617)
!23617 = distinct !DILexicalBlock(scope: !23613, file: !3, line: 7698, column: 39)
!23618 = !DILocation(line: 7699, column: 28, scope: !23617)
!23619 = !DILocation(line: 7699, column: 18, scope: !23617)
!23620 = !DILocation(line: 7699, column: 10, scope: !23617)
!23621 = !DILocation(line: 7699, column: 8, scope: !23617)
!23622 = !DILocation(line: 7700, column: 3, scope: !23617)
!23623 = !DILocation(line: 7703, column: 7, scope: !23624)
!23624 = distinct !DILexicalBlock(scope: !23581, file: !3, line: 7703, column: 7)
!23625 = !DILocation(line: 7703, column: 7, scope: !23581)
!23626 = !DILocation(line: 7704, column: 37, scope: !23624)
!23627 = !DILocation(line: 7704, column: 42, scope: !23624)
!23628 = !DILocation(line: 7704, column: 13, scope: !23624)
!23629 = !DILocation(line: 7704, column: 11, scope: !23624)
!23630 = !DILocation(line: 7704, column: 4, scope: !23624)
!23631 = !DILocation(line: 7707, column: 18, scope: !23581)
!23632 = !DILocation(line: 7707, column: 22, scope: !23581)
!23633 = !DILocation(line: 7707, column: 29, scope: !23581)
!23634 = !DILocation(line: 7707, column: 27, scope: !23581)
!23635 = !DILocation(line: 7707, column: 39, scope: !23581)
!23636 = !DILocation(line: 7707, column: 37, scope: !23581)
!23637 = !DILocation(line: 7707, column: 46, scope: !23581)
!23638 = !DILocation(line: 7707, column: 44, scope: !23581)
!23639 = !DILocation(line: 7707, column: 5, scope: !23581)
!23640 = !DILocation(line: 7707, column: 9, scope: !23581)
!23641 = !DILocation(line: 7707, column: 14, scope: !23581)
!23642 = !DILocation(line: 7710, column: 24, scope: !23581)
!23643 = !DILocation(line: 7710, column: 27, scope: !23581)
!23644 = !DILocation(line: 7710, column: 31, scope: !23581)
!23645 = !DILocation(line: 7710, column: 37, scope: !23581)
!23646 = !DILocation(line: 7710, column: 42, scope: !23581)
!23647 = !DILocation(line: 7710, column: 3, scope: !23581)
!23648 = !DILocation(line: 7711, column: 2, scope: !23581)
!23649 = !DILocation(line: 7686, column: 29, scope: !23575)
!23650 = !DILocation(line: 7686, column: 35, scope: !23575)
!23651 = !DILocation(line: 7686, column: 43, scope: !23575)
!23652 = !DILocation(line: 7686, column: 2, scope: !23575)
!23653 = distinct !{!23653, !23579, !23654}
!23654 = !DILocation(line: 7711, column: 2, scope: !23572)
!23655 = !DILocation(line: 7712, column: 1, scope: !23547)
