; ModuleID = 'blender/source/blender/editors/space_node/node_edit.c'
source_filename = "blender/source/blender/editors/space_node/node_edit.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.bNodeTreeType = type { i32, [64 x i8], [64 x i8], [256 x i8], i32, void (%struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.Scene*, i8*, void (i8*, i32, i8*)*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, void (%struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Ipo = type opaque
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type { %struct.RenderResult*, %struct.RenderResult*, i32, i32, i16, i16, i32*, float*, float*, %struct.rcti, i32, i32, %struct.ListBase, %struct.rcti, %struct.RenderLayer*, i32, i32, i32, i8* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.RenderLayer = type { %struct.RenderLayer*, %struct.RenderLayer*, [74 x i8], i32, i32, i32, i32, i32, i32, %struct.Material*, %struct.Group*, float*, float*, float*, i32*, i32, i32, i8*, %struct.ListBase }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.Group = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type { %struct.ImBuf*, %struct.ImBuf*, i32, i32, i8, i32, i32, i32, i32*, float*, [2 x double], i32, i32, i32, i32, i32**, i32*, float*, float, [20 x %struct.ImBuf*], i32, i32, i32, i32, %struct.ImMetaData*, i8*, i32, [1024 x i8], [1024 x i8], %struct.MEM_CacheLimiterHandle_s*, i32, i8*, i32, i32, %struct.ColorSpace*, %struct.ColorSpace*, i32*, %struct.ColormanageCache*, i32, %struct.rcti, %struct.DDSData }
%struct.ImMetaData = type opaque
%struct.MEM_CacheLimiterHandle_s = type opaque
%struct.ColorSpace = type opaque
%struct.ColormanageCache = type opaque
%struct.DDSData = type { i32, i32, i8*, i32 }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type opaque
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type { %struct.GHash* }
%struct.GHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type { %struct.ID, i8*, i32, i32, %struct.ListBase, %struct.TextLine*, %struct.TextLine*, i32, i32, i8*, i32, i32, i8*, double }
%struct.TextLine = type { %struct.TextLine*, %struct.TextLine*, i8*, i8*, i32, i32 }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.bContext = type opaque
%struct.bNodeLink = type { %struct.bNodeLink*, %struct.bNodeLink*, %struct.bNode*, %struct.bNode*, %struct.bNodeSocket*, %struct.bNodeSocket*, i32, i32 }
%struct.bNode = type { %struct.bNode*, %struct.bNode*, %struct.bNode*, %struct.IDProperty*, %struct.bNodeType*, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.bNode*, %struct.ID*, i8*, %struct.bNode*, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, i8*, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, %struct.uiBlock* }
%struct.bNodeType = type { i8*, i8*, i16, [64 x i8], i32, [64 x i8], [256 x i8], i32, float, float, float, float, float, float, i16, i16, i16, %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate*, [64 x i8], void (%struct.bContext*, %struct.ARegion*, %struct.SpaceNode*, %struct.bNodeTree*, %struct.bNode*, i32)*, void (%struct.bContext*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.SpaceNode*, %struct.ImBuf*, %struct.bNode*, i32, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, {}*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, {}*, void (%struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.bNode*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNode*, %struct.bNodeTree*)*, {}*, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, void (i8*)*, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, %struct.ExtensionRNA }
%struct.bNodeSocketTemplate = type { i32, i32, [64 x i8], float, float, float, float, float, float, i32, i32, %struct.bNodeSocket*, [64 x i8] }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.SpaceNode = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, %struct.ID*, %struct.ID*, i16, i16, float, float, float, float, float, [2 x float], %struct.ListBase, %struct.bNodeTree*, %struct.bNodeTree*, [64 x i8], i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.bGPdata* }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.uiLayout = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.bNodeExecContext = type opaque
%struct.bNodeExecData = type opaque
%struct.bNodeStack = type { [4 x float], float, float, i8*, i16, i16, i16, i16, i16, i16, [2 x i16] }
%struct.GPUMaterial = type opaque
%struct.GPUNodeStack = type { i32, i8*, [4 x float], %struct.GPUNodeLink*, i8, i8, i16 }
%struct.GPUNodeLink = type opaque
%struct.uiBlock = type opaque
%struct.bNodeSocket = type { %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.IDProperty*, [64 x i8], [64 x i8], i8*, i16, i16, i16, i16, %struct.bNodeSocketType*, [64 x i8], float, float, i8*, i16, i16, i32, i8*, i32, i32, %struct.bNodeSocket*, %struct.bNodeLink*, %struct.bNodeStack }
%struct.bNodeSocketType = type { [64 x i8], void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*, %struct.PointerRNA*, i8*)*, void (%struct.bContext*, %struct.PointerRNA*, %struct.PointerRNA*, float*)*, void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*, float*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, %struct.ExtensionRNA, %struct.ExtensionRNA, i32, i32 }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.wmJob = type opaque
%struct.CompoJob = type { %struct.Scene*, %struct.bNodeTree*, %struct.bNodeTree*, i16*, i16*, float*, i16, i32 }
%struct.wmWindowManager = type { %struct.ID, %struct.wmWindow*, %struct.wmWindow*, %struct.ListBase, i32, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ReportList, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.ListBase, %struct.wmTimer*, i8, [7 x i8] }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmKeyConfig = type { %struct.wmKeyConfig*, %struct.wmKeyConfig*, [64 x i8], [64 x i8], %struct.ListBase, i32, i32 }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type opaque
%struct.SpaceImage = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, i32, %struct.Image*, %struct.ImageUser, %struct.CurveMapping*, %struct.Scopes, %struct.Histogram, %struct.bGPdata*, [2 x float], float, float, float, float, float, i8, i8, i16, i16, i16, i8, i8, i8, i8, %struct.MaskSpaceInfo }
%struct.Scopes = type { i32, i32, i32, float, i32, float, float, i32, float, i32, [3 x [2 x float]], %struct.Histogram, float*, float*, float*, float*, i32, i32 }
%struct.Histogram = type { i32, i32, [256 x float], [256 x float], [256 x float], [256 x float], [256 x float], float, float, i16, i16, i32, [2 x [2 x float]] }
%struct.MaskSpaceInfo = type { %struct.Mask*, i8, i8, i8, [5 x i8] }
%struct.NodeTreeIterStore = type { %struct.bNodeTree*, %struct.Scene*, %struct.Material*, %struct.Tex*, %struct.Lamp*, %struct.World*, %struct.FreestyleLineStyle* }
%struct.Lamp = type { %struct.ID, %struct.AnimData*, i16, i16, i32, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.CurveMapping*, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i8, i8, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, [2 x i8], %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [4 x i8], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.FreestyleLineStyle = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, i32, float, i32, i32, i32, i32, float, float, float, float, float, i32, i16, i16, i16, i16, i16, i16, i32, i32, float, i16, i16, i16, [3 x i16], i16, i16, i16, i16, i16, i16, i32, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bNodeTreePath = type { %struct.bNodeTreePath*, %struct.bNodeTreePath*, %struct.bNodeTree*, %struct.bNodeInstanceKey, i32, [2 x float], [64 x i8] }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.PropertyRNA = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.NodeSizeWidget = type { float, float, float, float, float, float, float, float, float, i32 }
%struct.Render = type opaque
%struct.SceneRenderLayer = type { %struct.SceneRenderLayer*, %struct.SceneRenderLayer*, [64 x i8], %struct.Material*, %struct.Group*, i32, i32, i32, i32, i32, i32, i32, float, %struct.FreestyleConfig }
%struct.FreestyleConfig = type { %struct.ListBase, i32, i32, i32, float, float, float, %struct.ListBase }
%struct.NodeImageMultiFile = type { [1024 x i8], %struct.ImageFormatData, i32, i32, i32, i32 }
%struct.RenderEngine = type { %struct.RenderEngineType*, i8*, i32, %struct.Object*, i32, i32, i32, %struct.Render*, %struct.ListBase, [512 x i8], i32, i32, %struct.ReportList*, i32, i32, %struct.rctf, %struct.rcti, [4 x [4 x float]], i32, i32 }
%struct.RenderEngineType = type { %struct.RenderEngineType*, %struct.RenderEngineType*, [64 x i8], [64 x i8], i32, void (%struct.RenderEngine*, %struct.Main*, %struct.Scene*)*, void (%struct.RenderEngine*, %struct.Scene*)*, void (%struct.RenderEngine*, %struct.Scene*, %struct.Object*, i32, %struct.BakePixel*, i32, i32, i8*)*, void (%struct.RenderEngine*, %struct.bContext*)*, void (%struct.RenderEngine*, %struct.bContext*)*, void (%struct.RenderEngine*, %struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.BakePixel = type { i32, [2 x float], float, float, float, float }
%struct.NodeShaderScript = type { i32, i32, [1024 x i8], [64 x i8], i8* }
%struct.wmEventHandler = type opaque

@G = external dso_local global %struct.Global, align 8
@.str = private unnamed_addr constant [14 x i8] c"Render Result\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"Compositing\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.2 = private unnamed_addr constant [10 x i8] c"compo job\00", align 1
@ntreeType_Composite = external dso_local global %struct.bNodeTreeType*, align 8
@ntreeType_Shader = external dso_local global %struct.bNodeTreeType*, align 8
@ntreeType_Texture = external dso_local global %struct.bNodeTreeType*, align 8
@__const.ED_node_shader_default.color = private unnamed_addr constant [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 16
@.str.3 = private unnamed_addr constant [16 x i8] c"Shader Nodetree\00", align 1
@.str.4 = private unnamed_addr constant [49 x i8] c"ED_node_shader_default called on wrong ID type.\0A\00", align 1
@RNA_NodeSocket = external dso_local global %struct.StructRNA, align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"default_value\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"error in composite initialize\0A\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"Compositing Nodetree\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"error in texture initialize\0A\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"Texture Nodetree\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"Viewer Node\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"Resize Node\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"NODE_OT_resize\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"Resize a node\00", align 1
@U = external dso_local global %struct.UserDef, align 8
@.str.14 = private unnamed_addr constant [16 x i8] c"Duplicate Nodes\00", align 1
@.str.15 = private unnamed_addr constant [25 x i8] c"Duplicate selected nodes\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"NODE_OT_duplicate\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"keep_inputs\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"Keep Inputs\00", align 1
@.str.19 = private unnamed_addr constant [41 x i8] c"Keep the input links to duplicated nodes\00", align 1
@.str.20 = private unnamed_addr constant [19 x i8] c"Read Render Layers\00", align 1
@.str.21 = private unnamed_addr constant [26 x i8] c"NODE_OT_read_renderlayers\00", align 1
@.str.22 = private unnamed_addr constant [42 x i8] c"Read all render layers of all used scenes\00", align 1
@.str.23 = private unnamed_addr constant [24 x i8] c"Read Full Sample Layers\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"NODE_OT_read_fullsamplelayers\00", align 1
@.str.25 = private unnamed_addr constant [56 x i8] c"Read all render layers of current scene, in full sample\00", align 1
@.str.26 = private unnamed_addr constant [17 x i8] c"RENDER_OT_render\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"layer\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"scene\00", align 1
@.str.29 = private unnamed_addr constant [21 x i8] c"Render Changed Layer\00", align 1
@.str.30 = private unnamed_addr constant [23 x i8] c"NODE_OT_render_changed\00", align 1
@.str.31 = private unnamed_addr constant [63 x i8] c"Render current scene, when input node's layer has been changed\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"Hide\00", align 1
@.str.33 = private unnamed_addr constant [32 x i8] c"Toggle hiding of selected nodes\00", align 1
@.str.34 = private unnamed_addr constant [20 x i8] c"NODE_OT_hide_toggle\00", align 1
@.str.35 = private unnamed_addr constant [20 x i8] c"Toggle Node Preview\00", align 1
@.str.36 = private unnamed_addr constant [42 x i8] c"Toggle preview display for selected nodes\00", align 1
@.str.37 = private unnamed_addr constant [23 x i8] c"NODE_OT_preview_toggle\00", align 1
@.str.38 = private unnamed_addr constant [20 x i8] c"Toggle Node Options\00", align 1
@.str.39 = private unnamed_addr constant [49 x i8] c"Toggle option buttons display for selected nodes\00", align 1
@.str.40 = private unnamed_addr constant [23 x i8] c"NODE_OT_options_toggle\00", align 1
@.str.41 = private unnamed_addr constant [27 x i8] c"Toggle Hidden Node Sockets\00", align 1
@.str.42 = private unnamed_addr constant [34 x i8] c"Toggle unused node socket display\00", align 1
@.str.43 = private unnamed_addr constant [27 x i8] c"NODE_OT_hide_socket_toggle\00", align 1
@.str.44 = private unnamed_addr constant [17 x i8] c"Toggle Node Mute\00", align 1
@.str.45 = private unnamed_addr constant [27 x i8] c"Toggle muting of the nodes\00", align 1
@.str.46 = private unnamed_addr constant [20 x i8] c"NODE_OT_mute_toggle\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"Delete\00", align 1
@.str.48 = private unnamed_addr constant [22 x i8] c"Delete selected nodes\00", align 1
@.str.49 = private unnamed_addr constant [15 x i8] c"NODE_OT_delete\00", align 1
@.str.50 = private unnamed_addr constant [22 x i8] c"Delete with Reconnect\00", align 1
@.str.51 = private unnamed_addr constant [60 x i8] c"Delete nodes; will reconnect nodes as if deletion was muted\00", align 1
@.str.52 = private unnamed_addr constant [25 x i8] c"NODE_OT_delete_reconnect\00", align 1
@.str.53 = private unnamed_addr constant [21 x i8] c"Add File Node Socket\00", align 1
@.str.54 = private unnamed_addr constant [38 x i8] c"Add a new input to a file output node\00", align 1
@.str.55 = private unnamed_addr constant [31 x i8] c"NODE_OT_output_file_add_socket\00", align 1
@.str.56 = private unnamed_addr constant [10 x i8] c"file_path\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"Image\00", align 1
@.str.58 = private unnamed_addr constant [10 x i8] c"File Path\00", align 1
@.str.59 = private unnamed_addr constant [28 x i8] c"Sub-path of the output file\00", align 1
@.str.60 = private unnamed_addr constant [24 x i8] c"Remove File Node Socket\00", align 1
@.str.61 = private unnamed_addr constant [44 x i8] c"Remove active input from a file output node\00", align 1
@.str.62 = private unnamed_addr constant [41 x i8] c"NODE_OT_output_file_remove_active_socket\00", align 1
@NODE_OT_output_file_move_active_socket.direction_items = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.65, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.65, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !0
@.str.63 = private unnamed_addr constant [3 x i8] c"UP\00", align 1
@.str.64 = private unnamed_addr constant [3 x i8] c"Up\00", align 1
@.str.65 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.66 = private unnamed_addr constant [5 x i8] c"DOWN\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"Down\00", align 1
@.str.68 = private unnamed_addr constant [22 x i8] c"Move File Node Socket\00", align 1
@.str.69 = private unnamed_addr constant [64 x i8] c"Move the active input of a file output node up or down the list\00", align 1
@.str.70 = private unnamed_addr constant [39 x i8] c"NODE_OT_output_file_move_active_socket\00", align 1
@.str.71 = private unnamed_addr constant [10 x i8] c"direction\00", align 1
@.str.72 = private unnamed_addr constant [10 x i8] c"Direction\00", align 1
@.str.73 = private unnamed_addr constant [11 x i8] c"Copy Color\00", align 1
@.str.74 = private unnamed_addr constant [33 x i8] c"Copy color to all selected nodes\00", align 1
@.str.75 = private unnamed_addr constant [24 x i8] c"NODE_OT_node_copy_color\00", align 1
@.str.76 = private unnamed_addr constant [18 x i8] c"Copy to Clipboard\00", align 1
@.str.77 = private unnamed_addr constant [39 x i8] c"Copies selected nodes to the clipboard\00", align 1
@.str.78 = private unnamed_addr constant [23 x i8] c"NODE_OT_clipboard_copy\00", align 1
@.str.79 = private unnamed_addr constant [21 x i8] c"Paste from Clipboard\00", align 1
@.str.80 = private unnamed_addr constant [56 x i8] c"Pastes nodes from the clipboard to the active node tree\00", align 1
@.str.81 = private unnamed_addr constant [24 x i8] c"NODE_OT_clipboard_paste\00", align 1
@.str.82 = private unnamed_addr constant [31 x i8] c"Add Node Tree Interface Socket\00", align 1
@.str.83 = private unnamed_addr constant [55 x i8] c"Add an input or output socket to the current node tree\00", align 1
@.str.84 = private unnamed_addr constant [24 x i8] c"NODE_OT_tree_socket_add\00", align 1
@.str.85 = private unnamed_addr constant [7 x i8] c"in_out\00", align 1
@node_socket_in_out_items = external dso_local global [0 x %struct.EnumPropertyItem], align 8
@.str.86 = private unnamed_addr constant [12 x i8] c"Socket Type\00", align 1
@.str.87 = private unnamed_addr constant [34 x i8] c"Remove Node Tree Interface Socket\00", align 1
@.str.88 = private unnamed_addr constant [58 x i8] c"Remove an input or output socket to the current node tree\00", align 1
@.str.89 = private unnamed_addr constant [27 x i8] c"NODE_OT_tree_socket_remove\00", align 1
@.str.90 = private unnamed_addr constant [22 x i8] c"Move Node Tree Socket\00", align 1
@.str.91 = private unnamed_addr constant [66 x i8] c"Move a socket up or down in the current node tree's sockets stack\00", align 1
@.str.92 = private unnamed_addr constant [25 x i8] c"NODE_OT_tree_socket_move\00", align 1
@move_direction_items = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.65, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.65, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !2872
@.str.93 = private unnamed_addr constant [19 x i8] c"Script Node Update\00", align 1
@.str.94 = private unnamed_addr constant [71 x i8] c"Update shader script node with new sockets and options from the script\00", align 1
@.str.95 = private unnamed_addr constant [29 x i8] c"NODE_OT_shader_script_update\00", align 1
@.str.96 = private unnamed_addr constant [14 x i8] c"Viewer Border\00", align 1
@.str.97 = private unnamed_addr constant [41 x i8] c"Set the boundaries for viewer operations\00", align 1
@.str.98 = private unnamed_addr constant [22 x i8] c"NODE_OT_viewer_border\00", align 1
@.str.99 = private unnamed_addr constant [20 x i8] c"Clear Viewer Border\00", align 1
@.str.100 = private unnamed_addr constant [43 x i8] c"Clear the boundaries for viewer operations\00", align 1
@.str.101 = private unnamed_addr constant [28 x i8] c"NODE_OT_clear_viewer_border\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.102 = private unnamed_addr constant [20 x i8] c"size widget op data\00", align 1
@.str.103 = private unnamed_addr constant [10 x i8] c"bNodeLink\00", align 1
@.str.104 = private unnamed_addr constant [5 x i8] c"node\00", align 1
@.str.105 = private unnamed_addr constant [19 x i8] c"Clipboard is empty\00", align 1
@.str.106 = private unnamed_addr constant [41 x i8] c"Clipboard nodes are an incompatible type\00", align 1
@.str.107 = private unnamed_addr constant [64 x i8] c"Some nodes references could not be restored, will be left empty\00", align 1
@.str.108 = private unnamed_addr constant [37 x i8] c"Cannot add node %s into node tree %s\00", align 1
@.str.109 = private unnamed_addr constant [6 x i8] c"Input\00", align 1
@.str.110 = private unnamed_addr constant [7 x i8] c"Output\00", align 1
@.str.111 = private unnamed_addr constant [16 x i8] c"NodeSocketFloat\00", align 1
@RNA_ShaderNodeScript = external dso_local global %struct.StructRNA, align 1
@.str.112 = private unnamed_addr constant [10 x i8] c"edit_text\00", align 1
@RNA_Text = external dso_local global %struct.StructRNA, align 1
@.str.113 = private unnamed_addr constant [42 x i8] c"Text not used by any node, no update done\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_node_composite_job(%struct.bContext* %C, %struct.bNodeTree* %nodetree, %struct.Scene* %scene_owner) #0 !dbg !2888 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %nodetree.addr = alloca %struct.bNodeTree*, align 8
  %scene_owner.addr = alloca %struct.Scene*, align 8
  %wm_job = alloca %struct.wmJob*, align 8
  %cj = alloca %struct.CompoJob*, align 8
  %scene = alloca %struct.Scene*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2894, metadata !DIExpression()), !dbg !2895
  store %struct.bNodeTree* %nodetree, %struct.bNodeTree** %nodetree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %nodetree.addr, metadata !2896, metadata !DIExpression()), !dbg !2897
  store %struct.Scene* %scene_owner, %struct.Scene** %scene_owner.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene_owner.addr, metadata !2898, metadata !DIExpression()), !dbg !2899
  call void @llvm.dbg.declare(metadata %struct.wmJob** %wm_job, metadata !2900, metadata !DIExpression()), !dbg !2904
  call void @llvm.dbg.declare(metadata %struct.CompoJob** %cj, metadata !2905, metadata !DIExpression()), !dbg !2920
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !2921, metadata !DIExpression()), !dbg !2922
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2923
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !2924
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !2922
  %1 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 13), align 2, !dbg !2925
  %tobool = icmp ne i8 %1, 0, !dbg !2927
  br i1 %tobool, label %if.then, label %if.end, !dbg !2928

if.then:                                          ; preds = %entry
  br label %return, !dbg !2929

if.end:                                           ; preds = %entry
  store i8 0, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !2931
  %2 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !2932
  %call1 = call %struct.Image* @BKE_image_verify_viewer(i32 4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)), !dbg !2933
  call void @BKE_image_backup_render(%struct.Scene* %2, %struct.Image* %call1), !dbg !2934
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2935
  %call2 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %3), !dbg !2936
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2937
  %call3 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %4), !dbg !2938
  %5 = load %struct.Scene*, %struct.Scene** %scene_owner.addr, align 8, !dbg !2939
  %6 = bitcast %struct.Scene* %5 to i8*, !dbg !2939
  %call4 = call %struct.wmJob* @WM_jobs_get(%struct.wmWindowManager* %call2, %struct.wmWindow* %call3, i8* %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32 6, i32 1), !dbg !2940
  store %struct.wmJob* %call4, %struct.wmJob** %wm_job, align 8, !dbg !2941
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2942
  %call5 = call i8* %7(i64 56, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)), !dbg !2942
  %8 = bitcast i8* %call5 to %struct.CompoJob*, !dbg !2942
  store %struct.CompoJob* %8, %struct.CompoJob** %cj, align 8, !dbg !2943
  %9 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !2944
  %10 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !2945
  %scene6 = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %10, i32 0, i32 0, !dbg !2946
  store %struct.Scene* %9, %struct.Scene** %scene6, align 8, !dbg !2947
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree.addr, align 8, !dbg !2948
  %12 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !2949
  %ntree = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %12, i32 0, i32 1, !dbg !2950
  store %struct.bNodeTree* %11, %struct.bNodeTree** %ntree, align 8, !dbg !2951
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2952
  %call7 = call i32 @compo_get_recalc_flags(%struct.bContext* %13), !dbg !2953
  %14 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !2954
  %recalc_flags = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %14, i32 0, i32 7, !dbg !2955
  store i32 %call7, i32* %recalc_flags, align 4, !dbg !2956
  %15 = load %struct.wmJob*, %struct.wmJob** %wm_job, align 8, !dbg !2957
  %16 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !2958
  %17 = bitcast %struct.CompoJob* %16 to i8*, !dbg !2958
  call void @WM_jobs_customdata_set(%struct.wmJob* %15, i8* %17, void (i8*)* @compo_freejob), !dbg !2959
  %18 = load %struct.wmJob*, %struct.wmJob** %wm_job, align 8, !dbg !2960
  call void @WM_jobs_timer(%struct.wmJob* %18, double 1.000000e-01, i32 67960832, i32 67960832), !dbg !2961
  %19 = load %struct.wmJob*, %struct.wmJob** %wm_job, align 8, !dbg !2962
  call void @WM_jobs_callbacks(%struct.wmJob* %19, void (i8*, i16*, i16*, float*)* @compo_startjob, void (i8*)* @compo_initjob, void (i8*)* @compo_updatejob, void (i8*)* null), !dbg !2963
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2964
  %call8 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %20), !dbg !2965
  %21 = load %struct.wmJob*, %struct.wmJob** %wm_job, align 8, !dbg !2966
  call void @WM_jobs_start(%struct.wmWindowManager* %call8, %struct.wmJob* %21), !dbg !2967
  br label %return, !dbg !2968

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !2968
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

declare dso_local void @BKE_image_backup_render(%struct.Scene*, %struct.Image*) #2

declare dso_local %struct.Image* @BKE_image_verify_viewer(i32, i8*) #2

declare dso_local %struct.wmJob* @WM_jobs_get(%struct.wmWindowManager*, %struct.wmWindow*, i8*, i8*, i32, i32) #2

declare dso_local %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext*) #2

declare dso_local %struct.wmWindow* @CTX_wm_window(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @compo_get_recalc_flags(%struct.bContext* %C) #0 !dbg !2969 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %recalc_flags = alloca i32, align 4
  %sc = alloca %struct.bScreen*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2972, metadata !DIExpression()), !dbg !2973
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !2974, metadata !DIExpression()), !dbg !3010
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3011
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !3012
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !3010
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !3013, metadata !DIExpression()), !dbg !3016
  call void @llvm.dbg.declare(metadata i32* %recalc_flags, metadata !3017, metadata !DIExpression()), !dbg !3018
  store i32 0, i32* %recalc_flags, align 4, !dbg !3018
  %1 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !3019
  %windows = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %1, i32 0, i32 3, !dbg !3021
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows, i32 0, i32 0, !dbg !3022
  %2 = load i8*, i8** %first, align 8, !dbg !3022
  %3 = bitcast i8* %2 to %struct.wmWindow*, !dbg !3019
  store %struct.wmWindow* %3, %struct.wmWindow** %win, align 8, !dbg !3023
  br label %for.cond, !dbg !3024

for.cond:                                         ; preds = %for.inc38, %entry
  %4 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3025
  %tobool = icmp ne %struct.wmWindow* %4, null, !dbg !3027
  br i1 %tobool, label %for.body, label %for.end40, !dbg !3027

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc, metadata !3028, metadata !DIExpression()), !dbg !3032
  %5 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3033
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %5, i32 0, i32 3, !dbg !3034
  %6 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !3034
  store %struct.bScreen* %6, %struct.bScreen** %sc, align 8, !dbg !3032
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !3035, metadata !DIExpression()), !dbg !3082
  %7 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !3083
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %7, i32 0, i32 3, !dbg !3085
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !3086
  %8 = load i8*, i8** %first1, align 8, !dbg !3086
  %9 = bitcast i8* %8 to %struct.ScrArea*, !dbg !3083
  store %struct.ScrArea* %9, %struct.ScrArea** %sa, align 8, !dbg !3087
  br label %for.cond2, !dbg !3088

for.cond2:                                        ; preds = %for.inc, %for.body
  %10 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3089
  %tobool3 = icmp ne %struct.ScrArea* %10, null, !dbg !3091
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !3091

for.body4:                                        ; preds = %for.cond2
  %11 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3092
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %11, i32 0, i32 8, !dbg !3095
  %12 = load i8, i8* %spacetype, align 8, !dbg !3095
  %conv = zext i8 %12 to i32, !dbg !3092
  %cmp = icmp eq i32 %conv, 6, !dbg !3096
  br i1 %cmp, label %if.then, label %if.else23, !dbg !3097

if.then:                                          ; preds = %for.body4
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !3098, metadata !DIExpression()), !dbg !3179
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3180
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %13, i32 0, i32 19, !dbg !3181
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !3182
  %14 = load i8*, i8** %first6, align 8, !dbg !3182
  %15 = bitcast i8* %14 to %struct.SpaceImage*, !dbg !3180
  store %struct.SpaceImage* %15, %struct.SpaceImage** %sima, align 8, !dbg !3179
  %16 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !3183
  %image = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %16, i32 0, i32 5, !dbg !3185
  %17 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !3185
  %tobool7 = icmp ne %struct.Image* %17, null, !dbg !3183
  br i1 %tobool7, label %if.then8, label %if.end22, !dbg !3186

if.then8:                                         ; preds = %if.then
  %18 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !3187
  %image9 = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %18, i32 0, i32 5, !dbg !3190
  %19 = load %struct.Image*, %struct.Image** %image9, align 8, !dbg !3190
  %type = getelementptr inbounds %struct.Image, %struct.Image* %19, i32 0, i32 12, !dbg !3191
  %20 = load i16, i16* %type, align 2, !dbg !3191
  %conv10 = sext i16 %20 to i32, !dbg !3187
  %cmp11 = icmp eq i32 %conv10, 4, !dbg !3192
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !3193

if.then13:                                        ; preds = %if.then8
  %21 = load i32, i32* %recalc_flags, align 4, !dbg !3194
  %or = or i32 %21, 1, !dbg !3194
  store i32 %or, i32* %recalc_flags, align 4, !dbg !3194
  br label %if.end21, !dbg !3195

if.else:                                          ; preds = %if.then8
  %22 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !3196
  %image14 = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %22, i32 0, i32 5, !dbg !3198
  %23 = load %struct.Image*, %struct.Image** %image14, align 8, !dbg !3198
  %type15 = getelementptr inbounds %struct.Image, %struct.Image* %23, i32 0, i32 12, !dbg !3199
  %24 = load i16, i16* %type15, align 2, !dbg !3199
  %conv16 = sext i16 %24 to i32, !dbg !3196
  %cmp17 = icmp eq i32 %conv16, 5, !dbg !3200
  br i1 %cmp17, label %if.then19, label %if.end, !dbg !3201

if.then19:                                        ; preds = %if.else
  %25 = load i32, i32* %recalc_flags, align 4, !dbg !3202
  %or20 = or i32 %25, 2, !dbg !3202
  store i32 %or20, i32* %recalc_flags, align 4, !dbg !3202
  br label %if.end, !dbg !3203

if.end:                                           ; preds = %if.then19, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end, %if.then13
  br label %if.end22, !dbg !3204

if.end22:                                         ; preds = %if.end21, %if.then
  br label %if.end37, !dbg !3205

if.else23:                                        ; preds = %for.body4
  %26 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3206
  %spacetype24 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %26, i32 0, i32 8, !dbg !3208
  %27 = load i8, i8* %spacetype24, align 8, !dbg !3208
  %conv25 = zext i8 %27 to i32, !dbg !3206
  %cmp26 = icmp eq i32 %conv25, 16, !dbg !3209
  br i1 %cmp26, label %if.then28, label %if.end36, !dbg !3210

if.then28:                                        ; preds = %if.else23
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !3211, metadata !DIExpression()), !dbg !3215
  %28 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3216
  %spacedata29 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %28, i32 0, i32 19, !dbg !3217
  %first30 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata29, i32 0, i32 0, !dbg !3218
  %29 = load i8*, i8** %first30, align 8, !dbg !3218
  %30 = bitcast i8* %29 to %struct.SpaceNode*, !dbg !3216
  store %struct.SpaceNode* %30, %struct.SpaceNode** %snode, align 8, !dbg !3215
  %31 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !3219
  %flag = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %31, i32 0, i32 9, !dbg !3221
  %32 = load i16, i16* %flag, align 8, !dbg !3221
  %conv31 = sext i16 %32 to i32, !dbg !3219
  %and = and i32 %conv31, 2, !dbg !3222
  %tobool32 = icmp ne i32 %and, 0, !dbg !3222
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !3223

if.then33:                                        ; preds = %if.then28
  %33 = load i32, i32* %recalc_flags, align 4, !dbg !3224
  %or34 = or i32 %33, 2, !dbg !3224
  store i32 %or34, i32* %recalc_flags, align 4, !dbg !3224
  br label %if.end35, !dbg !3225

if.end35:                                         ; preds = %if.then33, %if.then28
  br label %if.end36, !dbg !3226

if.end36:                                         ; preds = %if.end35, %if.else23
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end22
  br label %for.inc, !dbg !3227

for.inc:                                          ; preds = %if.end37
  %34 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3228
  %next = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %34, i32 0, i32 0, !dbg !3229
  %35 = load %struct.ScrArea*, %struct.ScrArea** %next, align 8, !dbg !3229
  store %struct.ScrArea* %35, %struct.ScrArea** %sa, align 8, !dbg !3230
  br label %for.cond2, !dbg !3231, !llvm.loop !3232

for.end:                                          ; preds = %for.cond2
  br label %for.inc38, !dbg !3234

for.inc38:                                        ; preds = %for.end
  %36 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3235
  %next39 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %36, i32 0, i32 0, !dbg !3236
  %37 = load %struct.wmWindow*, %struct.wmWindow** %next39, align 8, !dbg !3236
  store %struct.wmWindow* %37, %struct.wmWindow** %win, align 8, !dbg !3237
  br label %for.cond, !dbg !3238, !llvm.loop !3239

for.end40:                                        ; preds = %for.cond
  %38 = load i32, i32* %recalc_flags, align 4, !dbg !3241
  ret i32 %38, !dbg !3242
}

declare dso_local void @WM_jobs_customdata_set(%struct.wmJob*, i8*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @compo_freejob(i8* %cjv) #0 !dbg !3243 {
entry:
  %cjv.addr = alloca i8*, align 8
  %cj = alloca %struct.CompoJob*, align 8
  store i8* %cjv, i8** %cjv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cjv.addr, metadata !3244, metadata !DIExpression()), !dbg !3245
  call void @llvm.dbg.declare(metadata %struct.CompoJob** %cj, metadata !3246, metadata !DIExpression()), !dbg !3247
  %0 = load i8*, i8** %cjv.addr, align 8, !dbg !3248
  %1 = bitcast i8* %0 to %struct.CompoJob*, !dbg !3248
  store %struct.CompoJob* %1, %struct.CompoJob** %cj, align 8, !dbg !3247
  %2 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3249
  %localtree = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %2, i32 0, i32 2, !dbg !3251
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %localtree, align 8, !dbg !3251
  %tobool = icmp ne %struct.bNodeTree* %3, null, !dbg !3249
  br i1 %tobool, label %if.then, label %if.end, !dbg !3252

if.then:                                          ; preds = %entry
  %4 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3253
  %localtree1 = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %4, i32 0, i32 2, !dbg !3255
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %localtree1, align 8, !dbg !3255
  %6 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3256
  %ntree = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %6, i32 0, i32 1, !dbg !3257
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3257
  call void @ntreeLocalMerge(%struct.bNodeTree* %5, %struct.bNodeTree* %7), !dbg !3258
  br label %if.end, !dbg !3259

if.end:                                           ; preds = %if.then, %entry
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3260
  %9 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3261
  %10 = bitcast %struct.CompoJob* %9 to i8*, !dbg !3261
  call void %8(i8* %10), !dbg !3260
  ret void, !dbg !3262
}

declare dso_local void @WM_jobs_timer(%struct.wmJob*, double, i32, i32) #2

declare dso_local void @WM_jobs_callbacks(%struct.wmJob*, void (i8*, i16*, i16*, float*)*, void (i8*)*, void (i8*)*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @compo_startjob(i8* %cjv, i16* %stop, i16* %do_update, float* %progress) #0 !dbg !3263 {
entry:
  %cjv.addr = alloca i8*, align 8
  %stop.addr = alloca i16*, align 8
  %do_update.addr = alloca i16*, align 8
  %progress.addr = alloca float*, align 8
  %cj = alloca %struct.CompoJob*, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %scene = alloca %struct.Scene*, align 8
  store i8* %cjv, i8** %cjv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cjv.addr, metadata !3266, metadata !DIExpression()), !dbg !3267
  store i16* %stop, i16** %stop.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %stop.addr, metadata !3268, metadata !DIExpression()), !dbg !3269
  store i16* %do_update, i16** %do_update.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %do_update.addr, metadata !3270, metadata !DIExpression()), !dbg !3271
  store float* %progress, float** %progress.addr, align 8
  call void @llvm.dbg.declare(metadata float** %progress.addr, metadata !3272, metadata !DIExpression()), !dbg !3273
  call void @llvm.dbg.declare(metadata %struct.CompoJob** %cj, metadata !3274, metadata !DIExpression()), !dbg !3275
  %0 = load i8*, i8** %cjv.addr, align 8, !dbg !3276
  %1 = bitcast i8* %0 to %struct.CompoJob*, !dbg !3276
  store %struct.CompoJob* %1, %struct.CompoJob** %cj, align 8, !dbg !3275
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !3277, metadata !DIExpression()), !dbg !3278
  %2 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3279
  %localtree = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %2, i32 0, i32 2, !dbg !3280
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %localtree, align 8, !dbg !3280
  store %struct.bNodeTree* %3, %struct.bNodeTree** %ntree, align 8, !dbg !3278
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !3281, metadata !DIExpression()), !dbg !3282
  %4 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3283
  %scene1 = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %4, i32 0, i32 0, !dbg !3284
  %5 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !3284
  store %struct.Scene* %5, %struct.Scene** %scene, align 8, !dbg !3282
  %6 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3285
  %use_nodes = getelementptr inbounds %struct.Scene, %struct.Scene* %6, i32 0, i32 16, !dbg !3287
  %7 = load i8, i8* %use_nodes, align 2, !dbg !3287
  %conv = zext i8 %7 to i32, !dbg !3285
  %cmp = icmp eq i32 %conv, 0, !dbg !3288
  br i1 %cmp, label %if.then, label %if.end, !dbg !3289

if.then:                                          ; preds = %entry
  br label %return, !dbg !3290

if.end:                                           ; preds = %entry
  %8 = load i16*, i16** %stop.addr, align 8, !dbg !3291
  %9 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3292
  %stop3 = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %9, i32 0, i32 3, !dbg !3293
  store i16* %8, i16** %stop3, align 8, !dbg !3294
  %10 = load i16*, i16** %do_update.addr, align 8, !dbg !3295
  %11 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3296
  %do_update4 = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %11, i32 0, i32 4, !dbg !3297
  store i16* %10, i16** %do_update4, align 8, !dbg !3298
  %12 = load float*, float** %progress.addr, align 8, !dbg !3299
  %13 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3300
  %progress5 = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %13, i32 0, i32 5, !dbg !3301
  store float* %12, float** %progress5, align 8, !dbg !3302
  %14 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3303
  %test_break = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %14, i32 0, i32 30, !dbg !3304
  store i32 (i8*)* @compo_breakjob, i32 (i8*)** %test_break, align 8, !dbg !3305
  %15 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3306
  %16 = bitcast %struct.CompoJob* %15 to i8*, !dbg !3306
  %17 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3307
  %tbh = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %17, i32 0, i32 32, !dbg !3308
  store i8* %16, i8** %tbh, align 8, !dbg !3309
  %18 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3310
  %stats_draw = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %18, i32 0, i32 29, !dbg !3311
  store void (i8*, i8*)* @compo_statsdrawjob, void (i8*, i8*)** %stats_draw, align 8, !dbg !3312
  %19 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3313
  %20 = bitcast %struct.CompoJob* %19 to i8*, !dbg !3313
  %21 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3314
  %sdh = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %21, i32 0, i32 34, !dbg !3315
  store i8* %20, i8** %sdh, align 8, !dbg !3316
  %22 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3317
  %progress6 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %22, i32 0, i32 28, !dbg !3318
  store void (i8*, float)* @compo_progressjob, void (i8*, float)** %progress6, align 8, !dbg !3319
  %23 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3320
  %24 = bitcast %struct.CompoJob* %23 to i8*, !dbg !3320
  %25 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3321
  %prh = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %25, i32 0, i32 33, !dbg !3322
  store i8* %24, i8** %prh, align 8, !dbg !3323
  %26 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3324
  %update_draw = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %26, i32 0, i32 31, !dbg !3325
  store void (i8*)* @compo_redrawjob, void (i8*)** %update_draw, align 8, !dbg !3326
  %27 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3327
  %28 = bitcast %struct.CompoJob* %27 to i8*, !dbg !3327
  %29 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3328
  %udh = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %29, i32 0, i32 35, !dbg !3329
  store i8* %28, i8** %udh, align 8, !dbg !3330
  %30 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3331
  %scene7 = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %30, i32 0, i32 0, !dbg !3332
  %31 = load %struct.Scene*, %struct.Scene** %scene7, align 8, !dbg !3332
  %32 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3333
  %33 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3334
  %scene8 = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %33, i32 0, i32 0, !dbg !3335
  %34 = load %struct.Scene*, %struct.Scene** %scene8, align 8, !dbg !3335
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %34, i32 0, i32 22, !dbg !3336
  %35 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3337
  %view_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %35, i32 0, i32 44, !dbg !3338
  %36 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3339
  %display_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %36, i32 0, i32 45, !dbg !3340
  call void @ntreeCompositExecTree(%struct.Scene* %31, %struct.bNodeTree* %32, %struct.RenderData* %r, i32 0, i32 1, %struct.ColorManagedViewSettings* %view_settings, %struct.ColorManagedDisplaySettings* %display_settings), !dbg !3341
  %37 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3342
  %test_break9 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %37, i32 0, i32 30, !dbg !3343
  store i32 (i8*)* null, i32 (i8*)** %test_break9, align 8, !dbg !3344
  %38 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3345
  %stats_draw10 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %38, i32 0, i32 29, !dbg !3346
  store void (i8*, i8*)* null, void (i8*, i8*)** %stats_draw10, align 8, !dbg !3347
  %39 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3348
  %progress11 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %39, i32 0, i32 28, !dbg !3349
  store void (i8*, float)* null, void (i8*, float)** %progress11, align 8, !dbg !3350
  br label %return, !dbg !3351

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3351
}

; Function Attrs: noinline nounwind uwtable
define internal void @compo_initjob(i8* %cjv) #0 !dbg !3352 {
entry:
  %cjv.addr = alloca i8*, align 8
  %cj = alloca %struct.CompoJob*, align 8
  store i8* %cjv, i8** %cjv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cjv.addr, metadata !3353, metadata !DIExpression()), !dbg !3354
  call void @llvm.dbg.declare(metadata %struct.CompoJob** %cj, metadata !3355, metadata !DIExpression()), !dbg !3356
  %0 = load i8*, i8** %cjv.addr, align 8, !dbg !3357
  %1 = bitcast i8* %0 to %struct.CompoJob*, !dbg !3357
  store %struct.CompoJob* %1, %struct.CompoJob** %cj, align 8, !dbg !3356
  %2 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3358
  %ntree = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %2, i32 0, i32 1, !dbg !3359
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3359
  %call = call %struct.bNodeTree* @ntreeLocalize(%struct.bNodeTree* %3), !dbg !3360
  %4 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3361
  %localtree = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %4, i32 0, i32 2, !dbg !3362
  store %struct.bNodeTree* %call, %struct.bNodeTree** %localtree, align 8, !dbg !3363
  %5 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3364
  %recalc_flags = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %5, i32 0, i32 7, !dbg !3366
  %6 = load i32, i32* %recalc_flags, align 4, !dbg !3366
  %tobool = icmp ne i32 %6, 0, !dbg !3364
  br i1 %tobool, label %if.then, label %if.end, !dbg !3367

if.then:                                          ; preds = %entry
  %7 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3368
  %localtree1 = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %7, i32 0, i32 2, !dbg !3369
  %8 = load %struct.bNodeTree*, %struct.bNodeTree** %localtree1, align 8, !dbg !3369
  %9 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3370
  %recalc_flags2 = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %9, i32 0, i32 7, !dbg !3371
  %10 = load i32, i32* %recalc_flags2, align 4, !dbg !3371
  call void @compo_tag_output_nodes(%struct.bNodeTree* %8, i32 %10), !dbg !3372
  br label %if.end, !dbg !3372

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3373
}

; Function Attrs: noinline nounwind uwtable
define internal void @compo_updatejob(i8* %cjv) #0 !dbg !3374 {
entry:
  %cjv.addr = alloca i8*, align 8
  %cj = alloca %struct.CompoJob*, align 8
  store i8* %cjv, i8** %cjv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cjv.addr, metadata !3375, metadata !DIExpression()), !dbg !3376
  call void @llvm.dbg.declare(metadata %struct.CompoJob** %cj, metadata !3377, metadata !DIExpression()), !dbg !3378
  %0 = load i8*, i8** %cjv.addr, align 8, !dbg !3379
  %1 = bitcast i8* %0 to %struct.CompoJob*, !dbg !3379
  store %struct.CompoJob* %1, %struct.CompoJob** %cj, align 8, !dbg !3378
  %2 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3380
  %need_sync = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %2, i32 0, i32 6, !dbg !3382
  %3 = load i16, i16* %need_sync, align 8, !dbg !3382
  %tobool = icmp ne i16 %3, 0, !dbg !3380
  br i1 %tobool, label %if.then, label %if.end, !dbg !3383

if.then:                                          ; preds = %entry
  %4 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3384
  %localtree = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %4, i32 0, i32 2, !dbg !3386
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %localtree, align 8, !dbg !3386
  %6 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3387
  %ntree = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %6, i32 0, i32 1, !dbg !3388
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3388
  call void @ntreeLocalSync(%struct.bNodeTree* %5, %struct.bNodeTree* %7), !dbg !3389
  %8 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !3390
  %need_sync1 = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %8, i32 0, i32 6, !dbg !3391
  store i16 0, i16* %need_sync1, align 8, !dbg !3392
  br label %if.end, !dbg !3393

if.end:                                           ; preds = %if.then, %entry
  call void @WM_main_add_notifier(i32 67960832, i8* null), !dbg !3394
  ret void, !dbg !3395
}

declare dso_local void @WM_jobs_start(%struct.wmWindowManager*, %struct.wmJob*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @composite_node_active(%struct.bContext* %C) #0 !dbg !3396 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3400, metadata !DIExpression()), !dbg !3401
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3402
  %call = call i32 @ED_operator_node_active(%struct.bContext* %0), !dbg !3404
  %tobool = icmp ne i32 %call, 0, !dbg !3404
  br i1 %tobool, label %if.then, label %if.end5, !dbg !3405

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !3406, metadata !DIExpression()), !dbg !3408
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3409
  %call1 = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %1), !dbg !3410
  store %struct.SpaceNode* %call1, %struct.SpaceNode** %snode, align 8, !dbg !3408
  %2 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !3411
  %call2 = call zeroext i8 @ED_node_is_compositor(%struct.SpaceNode* %2), !dbg !3413
  %tobool3 = icmp ne i8 %call2, 0, !dbg !3413
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !3414

if.then4:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !3415
  br label %return, !dbg !3415

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !3416

if.end5:                                          ; preds = %if.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !3417
  br label %return, !dbg !3417

return:                                           ; preds = %if.end5, %if.then4
  %3 = load i32, i32* %retval, align 4, !dbg !3418
  ret i32 %3, !dbg !3418
}

declare dso_local i32 @ED_operator_node_active(%struct.bContext*) #2

declare dso_local %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_node_is_compositor(%struct.SpaceNode* %snode) #0 !dbg !3419 {
entry:
  %snode.addr = alloca %struct.SpaceNode*, align 8
  store %struct.SpaceNode* %snode, %struct.SpaceNode** %snode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode.addr, metadata !3422, metadata !DIExpression()), !dbg !3423
  %0 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !3424
  %tree_idname = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %0, i32 0, i32 20, !dbg !3424
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %tree_idname, i64 0, i64 0, !dbg !3424
  %1 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** @ntreeType_Composite, align 8, !dbg !3424
  %idname = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %1, i32 0, i32 1, !dbg !3424
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !3424
  %call = call i32 @strcmp(i8* %arraydecay, i8* %arraydecay1) #5, !dbg !3424
  %cmp = icmp eq i32 %call, 0, !dbg !3424
  %conv = zext i1 %cmp to i32, !dbg !3424
  %conv2 = trunc i32 %conv to i8, !dbg !3424
  ret i8 %conv2, !dbg !3425
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @composite_node_editable(%struct.bContext* %C) #0 !dbg !3426 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3427, metadata !DIExpression()), !dbg !3428
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3429
  %call = call i32 @ED_operator_node_editable(%struct.bContext* %0), !dbg !3431
  %tobool = icmp ne i32 %call, 0, !dbg !3431
  br i1 %tobool, label %if.then, label %if.end5, !dbg !3432

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !3433, metadata !DIExpression()), !dbg !3435
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3436
  %call1 = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %1), !dbg !3437
  store %struct.SpaceNode* %call1, %struct.SpaceNode** %snode, align 8, !dbg !3435
  %2 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !3438
  %call2 = call zeroext i8 @ED_node_is_compositor(%struct.SpaceNode* %2), !dbg !3440
  %tobool3 = icmp ne i8 %call2, 0, !dbg !3440
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !3441

if.then4:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !3442
  br label %return, !dbg !3442

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !3443

if.end5:                                          ; preds = %if.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !3444
  br label %return, !dbg !3444

return:                                           ; preds = %if.end5, %if.then4
  %3 = load i32, i32* %retval, align 4, !dbg !3445
  ret i32 %3, !dbg !3445
}

declare dso_local i32 @ED_operator_node_editable(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @snode_dag_update(%struct.bContext* %C, %struct.SpaceNode* %snode) #0 !dbg !3446 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %snode.addr = alloca %struct.SpaceNode*, align 8
  %bmain = alloca %struct.Main*, align 8
  %_nstore = alloca %struct.NodeTreeIterStore, align 8
  %tntree = alloca %struct.bNodeTree*, align 8
  %id = alloca %struct.ID*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3449, metadata !DIExpression()), !dbg !3450
  store %struct.SpaceNode* %snode, %struct.SpaceNode** %snode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode.addr, metadata !3451, metadata !DIExpression()), !dbg !3452
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !3453, metadata !DIExpression()), !dbg !3518
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3519
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !3520
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !3518
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !3521
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %1, i32 0, i32 19, !dbg !3523
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !3523
  %3 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !3524
  %nodetree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %3, i32 0, i32 18, !dbg !3525
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !3525
  %cmp = icmp ne %struct.bNodeTree* %2, %4, !dbg !3526
  br i1 %cmp, label %if.then, label %if.end10, !dbg !3527

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.NodeTreeIterStore* %_nstore, metadata !3528, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %tntree, metadata !3594, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.declare(metadata %struct.ID** %id, metadata !3595, metadata !DIExpression()), !dbg !3593
  %5 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3593
  call void @BKE_node_tree_iter_init(%struct.NodeTreeIterStore* %_nstore, %struct.Main* %5), !dbg !3593
  br label %while.cond, !dbg !3593

while.cond:                                       ; preds = %if.end9, %if.then
  %call1 = call zeroext i8 @BKE_node_tree_iter_step(%struct.NodeTreeIterStore* %_nstore, %struct.bNodeTree** %tntree, %struct.ID** %id), !dbg !3593
  %conv = zext i8 %call1 to i32, !dbg !3593
  %cmp2 = icmp eq i32 %conv, 1, !dbg !3593
  br i1 %cmp2, label %while.body, label %while.end, !dbg !3593

while.body:                                       ; preds = %while.cond
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %tntree, align 8, !dbg !3596
  %tobool = icmp ne %struct.bNodeTree* %6, null, !dbg !3596
  br i1 %tobool, label %if.then4, label %if.end9, !dbg !3599

if.then4:                                         ; preds = %while.body
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %tntree, align 8, !dbg !3600
  %8 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !3604
  %edittree5 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %8, i32 0, i32 19, !dbg !3605
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree5, align 8, !dbg !3605
  %call6 = call zeroext i8 @ntreeHasTree(%struct.bNodeTree* %7, %struct.bNodeTree* %9), !dbg !3606
  %tobool7 = icmp ne i8 %call6, 0, !dbg !3606
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !3607

if.then8:                                         ; preds = %if.then4
  %10 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !3608
  call void @DAG_id_tag_update(%struct.ID* %10, i16 signext 0), !dbg !3609
  br label %if.end, !dbg !3609

if.end:                                           ; preds = %if.then8, %if.then4
  br label %if.end9, !dbg !3610

if.end9:                                          ; preds = %if.end, %while.body
  br label %while.cond, !dbg !3593, !llvm.loop !3611

while.end:                                        ; preds = %while.cond
  br label %if.end10, !dbg !3613

if.end10:                                         ; preds = %while.end, %entry
  %11 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !3614
  %id11 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %11, i32 0, i32 7, !dbg !3615
  %12 = load %struct.ID*, %struct.ID** %id11, align 8, !dbg !3615
  call void @DAG_id_tag_update(%struct.ID* %12, i16 signext 0), !dbg !3616
  ret void, !dbg !3617
}

declare dso_local %struct.Main* @CTX_data_main(%struct.bContext*) #2

declare dso_local void @BKE_node_tree_iter_init(%struct.NodeTreeIterStore*, %struct.Main*) #2

declare dso_local zeroext i8 @BKE_node_tree_iter_step(%struct.NodeTreeIterStore*, %struct.bNodeTree**, %struct.ID**) #2

declare dso_local zeroext i8 @ntreeHasTree(%struct.bNodeTree*, %struct.bNodeTree*) #2

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @snode_notify(%struct.bContext* %C, %struct.SpaceNode* %snode) #0 !dbg !3618 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %snode.addr = alloca %struct.SpaceNode*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3619, metadata !DIExpression()), !dbg !3620
  store %struct.SpaceNode* %snode, %struct.SpaceNode** %snode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode.addr, metadata !3621, metadata !DIExpression()), !dbg !3622
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3623
  call void @WM_event_add_notifier(%struct.bContext* %0, i32 285212673, i8* null), !dbg !3624
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !3625
  %call = call zeroext i8 @ED_node_is_shader(%struct.SpaceNode* %1), !dbg !3627
  %tobool = icmp ne i8 %call, 0, !dbg !3627
  br i1 %tobool, label %if.then, label %if.else, !dbg !3628

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3629
  %3 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !3630
  %id = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %3, i32 0, i32 7, !dbg !3631
  %4 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !3631
  %5 = bitcast %struct.ID* %4 to i8*, !dbg !3630
  call void @WM_event_add_notifier(%struct.bContext* %2, i32 100990976, i8* %5), !dbg !3632
  br label %if.end11, !dbg !3632

if.else:                                          ; preds = %entry
  %6 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !3633
  %call1 = call zeroext i8 @ED_node_is_compositor(%struct.SpaceNode* %6), !dbg !3635
  %tobool2 = icmp ne i8 %call1, 0, !dbg !3635
  br i1 %tobool2, label %if.then3, label %if.else5, !dbg !3636

if.then3:                                         ; preds = %if.else
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3637
  %8 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !3638
  %id4 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %8, i32 0, i32 7, !dbg !3639
  %9 = load %struct.ID*, %struct.ID** %id4, align 8, !dbg !3639
  %10 = bitcast %struct.ID* %9 to i8*, !dbg !3638
  call void @WM_event_add_notifier(%struct.bContext* %7, i32 67436544, i8* %10), !dbg !3640
  br label %if.end10, !dbg !3640

if.else5:                                         ; preds = %if.else
  %11 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !3641
  %call6 = call zeroext i8 @ED_node_is_texture(%struct.SpaceNode* %11), !dbg !3643
  %tobool7 = icmp ne i8 %call6, 0, !dbg !3643
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !3644

if.then8:                                         ; preds = %if.else5
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3645
  %13 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !3646
  %id9 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %13, i32 0, i32 7, !dbg !3647
  %14 = load %struct.ID*, %struct.ID** %id9, align 8, !dbg !3647
  %15 = bitcast %struct.ID* %14 to i8*, !dbg !3646
  call void @WM_event_add_notifier(%struct.bContext* %12, i32 117768192, i8* %15), !dbg !3648
  br label %if.end, !dbg !3648

if.end:                                           ; preds = %if.then8, %if.else5
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then3
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.then
  ret void, !dbg !3649
}

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_node_is_shader(%struct.SpaceNode* %snode) #0 !dbg !3650 {
entry:
  %snode.addr = alloca %struct.SpaceNode*, align 8
  store %struct.SpaceNode* %snode, %struct.SpaceNode** %snode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode.addr, metadata !3651, metadata !DIExpression()), !dbg !3652
  %0 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !3653
  %tree_idname = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %0, i32 0, i32 20, !dbg !3653
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %tree_idname, i64 0, i64 0, !dbg !3653
  %1 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** @ntreeType_Shader, align 8, !dbg !3653
  %idname = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %1, i32 0, i32 1, !dbg !3653
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !3653
  %call = call i32 @strcmp(i8* %arraydecay, i8* %arraydecay1) #5, !dbg !3653
  %cmp = icmp eq i32 %call, 0, !dbg !3653
  %conv = zext i1 %cmp to i32, !dbg !3653
  %conv2 = trunc i32 %conv to i8, !dbg !3653
  ret i8 %conv2, !dbg !3654
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_node_is_texture(%struct.SpaceNode* %snode) #0 !dbg !3655 {
entry:
  %snode.addr = alloca %struct.SpaceNode*, align 8
  store %struct.SpaceNode* %snode, %struct.SpaceNode** %snode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode.addr, metadata !3656, metadata !DIExpression()), !dbg !3657
  %0 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !3658
  %tree_idname = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %0, i32 0, i32 20, !dbg !3658
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %tree_idname, i64 0, i64 0, !dbg !3658
  %1 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** @ntreeType_Texture, align 8, !dbg !3658
  %idname = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %1, i32 0, i32 1, !dbg !3658
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !3658
  %call = call i32 @strcmp(i8* %arraydecay, i8* %arraydecay1) #5, !dbg !3658
  %cmp = icmp eq i32 %call, 0, !dbg !3658
  %conv = zext i1 %cmp to i32, !dbg !3658
  %conv2 = trunc i32 %conv to i8, !dbg !3658
  ret i8 %conv2, !dbg !3659
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_node_set_tree_type(%struct.SpaceNode* %snode, %struct.bNodeTreeType* %typeinfo) #0 !dbg !3660 {
entry:
  %snode.addr = alloca %struct.SpaceNode*, align 8
  %typeinfo.addr = alloca %struct.bNodeTreeType*, align 8
  store %struct.SpaceNode* %snode, %struct.SpaceNode** %snode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode.addr, metadata !3665, metadata !DIExpression()), !dbg !3666
  store %struct.bNodeTreeType* %typeinfo, %struct.bNodeTreeType** %typeinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTreeType** %typeinfo.addr, metadata !3667, metadata !DIExpression()), !dbg !3668
  %0 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo.addr, align 8, !dbg !3669
  %tobool = icmp ne %struct.bNodeTreeType* %0, null, !dbg !3669
  br i1 %tobool, label %if.then, label %if.else, !dbg !3671

if.then:                                          ; preds = %entry
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !3672
  %tree_idname = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %1, i32 0, i32 20, !dbg !3673
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %tree_idname, i64 0, i64 0, !dbg !3672
  %2 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo.addr, align 8, !dbg !3674
  %idname = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %2, i32 0, i32 1, !dbg !3675
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !3674
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay1, i64 64), !dbg !3676
  br label %if.end, !dbg !3676

if.else:                                          ; preds = %entry
  %3 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !3677
  %tree_idname2 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %3, i32 0, i32 20, !dbg !3678
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %tree_idname2, i64 0, i64 0, !dbg !3677
  store i8 0, i8* %arrayidx, align 8, !dbg !3679
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3680
}

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_node_shader_default(%struct.bContext* %C, %struct.ID* %id) #0 !dbg !3681 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %id.addr = alloca %struct.ID*, align 8
  %scene = alloca %struct.Scene*, align 8
  %in = alloca %struct.bNode*, align 8
  %out = alloca %struct.bNode*, align 8
  %fromsock = alloca %struct.bNodeSocket*, align 8
  %tosock = alloca %struct.bNodeSocket*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %output_type = alloca i32, align 4
  %shader_type = alloca i32, align 4
  %color = alloca [4 x float], align 16
  %strength = alloca float, align 4
  %ma = alloca %struct.Material*, align 8
  %wo = alloca %struct.World*, align 8
  %la = alloca %struct.Lamp*, align 8
  %sockptr = alloca %struct.PointerRNA, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3684, metadata !DIExpression()), !dbg !3685
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !3686, metadata !DIExpression()), !dbg !3687
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !3688, metadata !DIExpression()), !dbg !3689
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3690
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !3691
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !3689
  call void @llvm.dbg.declare(metadata %struct.bNode** %in, metadata !3692, metadata !DIExpression()), !dbg !3693
  call void @llvm.dbg.declare(metadata %struct.bNode** %out, metadata !3694, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %fromsock, metadata !3696, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %tosock, metadata !3698, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !3700, metadata !DIExpression()), !dbg !3701
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !3702, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.declare(metadata i32* %output_type, metadata !3704, metadata !DIExpression()), !dbg !3705
  call void @llvm.dbg.declare(metadata i32* %shader_type, metadata !3706, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.declare(metadata [4 x float]* %color, metadata !3708, metadata !DIExpression()), !dbg !3709
  %1 = bitcast [4 x float]* %color to i8*, !dbg !3709
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %1, i8* align 16 bitcast ([4 x float]* @__const.ED_node_shader_default.color to i8*), i64 16, i1 false), !dbg !3709
  call void @llvm.dbg.declare(metadata float* %strength, metadata !3710, metadata !DIExpression()), !dbg !3711
  store float 1.000000e+00, float* %strength, align 4, !dbg !3711
  %2 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** @ntreeType_Shader, align 8, !dbg !3712
  %idname = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %2, i32 0, i32 1, !dbg !3713
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !3712
  %call1 = call %struct.bNodeTree* @ntreeAddTree(%struct.Main* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay), !dbg !3714
  store %struct.bNodeTree* %call1, %struct.bNodeTree** %ntree, align 8, !dbg !3715
  %3 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !3716
  %name = getelementptr inbounds %struct.ID, %struct.ID* %3, i32 0, i32 4, !dbg !3716
  %arraydecay2 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !3716
  %4 = bitcast i8* %arraydecay2 to i16*, !dbg !3716
  %5 = load i16, i16* %4, align 8, !dbg !3716
  %conv = sext i16 %5 to i32, !dbg !3716
  switch i32 %conv, label %sw.default [
    i32 16717, label %sw.bb
    i32 20311, label %sw.bb5
    i32 16716, label %sw.bb8
  ], !dbg !3717

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !3718, metadata !DIExpression()), !dbg !3721
  %6 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !3722
  %7 = bitcast %struct.ID* %6 to %struct.Material*, !dbg !3723
  store %struct.Material* %7, %struct.Material** %ma, align 8, !dbg !3721
  %8 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3724
  %9 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3725
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %9, i32 0, i32 103, !dbg !3726
  store %struct.bNodeTree* %8, %struct.bNodeTree** %nodetree, align 8, !dbg !3727
  %10 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3728
  %call3 = call zeroext i8 @BKE_scene_use_new_shading_nodes(%struct.Scene* %10), !dbg !3730
  %tobool = icmp ne i8 %call3, 0, !dbg !3730
  br i1 %tobool, label %if.then, label %if.else, !dbg !3731

if.then:                                          ; preds = %sw.bb
  store i32 124, i32* %output_type, align 4, !dbg !3732
  store i32 132, i32* %shader_type, align 4, !dbg !3734
  br label %if.end, !dbg !3735

if.else:                                          ; preds = %sw.bb
  store i32 1, i32* %output_type, align 4, !dbg !3736
  store i32 100, i32* %shader_type, align 4, !dbg !3738
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arraydecay4 = getelementptr inbounds [4 x float], [4 x float]* %color, i64 0, i64 0, !dbg !3739
  %11 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3740
  %r = getelementptr inbounds %struct.Material, %struct.Material* %11, i32 0, i32 4, !dbg !3741
  call void @copy_v3_v3(float* %arraydecay4, float* %r), !dbg !3742
  store float 0.000000e+00, float* %strength, align 4, !dbg !3743
  br label %sw.epilog, !dbg !3744

sw.bb5:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.World** %wo, metadata !3745, metadata !DIExpression()), !dbg !3747
  %12 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !3748
  %13 = bitcast %struct.ID* %12 to %struct.World*, !dbg !3749
  store %struct.World* %13, %struct.World** %wo, align 8, !dbg !3747
  %14 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3750
  %15 = load %struct.World*, %struct.World** %wo, align 8, !dbg !3751
  %nodetree6 = getelementptr inbounds %struct.World, %struct.World* %15, i32 0, i32 75, !dbg !3752
  store %struct.bNodeTree* %14, %struct.bNodeTree** %nodetree6, align 8, !dbg !3753
  store i32 125, i32* %output_type, align 4, !dbg !3754
  store i32 130, i32* %shader_type, align 4, !dbg !3755
  %arraydecay7 = getelementptr inbounds [4 x float], [4 x float]* %color, i64 0, i64 0, !dbg !3756
  %16 = load %struct.World*, %struct.World** %wo, align 8, !dbg !3757
  %horr = getelementptr inbounds %struct.World, %struct.World* %16, i32 0, i32 6, !dbg !3758
  call void @copy_v3_v3(float* %arraydecay7, float* %horr), !dbg !3759
  store float 1.000000e+00, float* %strength, align 4, !dbg !3760
  br label %sw.epilog, !dbg !3761

sw.bb8:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Lamp** %la, metadata !3762, metadata !DIExpression()), !dbg !3764
  %17 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !3765
  %18 = bitcast %struct.ID* %17 to %struct.Lamp*, !dbg !3766
  store %struct.Lamp* %18, %struct.Lamp** %la, align 8, !dbg !3764
  %19 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3767
  %20 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !3768
  %nodetree9 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %20, i32 0, i32 74, !dbg !3769
  store %struct.bNodeTree* %19, %struct.bNodeTree** %nodetree9, align 8, !dbg !3770
  store i32 126, i32* %output_type, align 4, !dbg !3771
  store i32 140, i32* %shader_type, align 4, !dbg !3772
  %arraydecay10 = getelementptr inbounds [4 x float], [4 x float]* %color, i64 0, i64 0, !dbg !3773
  %21 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !3774
  %r11 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %21, i32 0, i32 7, !dbg !3775
  call void @copy_v3_v3(float* %arraydecay10, float* %r11), !dbg !3776
  %22 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !3777
  %type = getelementptr inbounds %struct.Lamp, %struct.Lamp* %22, i32 0, i32 2, !dbg !3779
  %23 = load i16, i16* %type, align 8, !dbg !3779
  %conv12 = sext i16 %23 to i32, !dbg !3777
  %cmp = icmp eq i32 %conv12, 0, !dbg !3780
  br i1 %cmp, label %if.then23, label %lor.lhs.false, !dbg !3781

lor.lhs.false:                                    ; preds = %sw.bb8
  %24 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !3782
  %type14 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %24, i32 0, i32 2, !dbg !3783
  %25 = load i16, i16* %type14, align 8, !dbg !3783
  %conv15 = sext i16 %25 to i32, !dbg !3782
  %cmp16 = icmp eq i32 %conv15, 2, !dbg !3784
  br i1 %cmp16, label %if.then23, label %lor.lhs.false18, !dbg !3785

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %26 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !3786
  %type19 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %26, i32 0, i32 2, !dbg !3787
  %27 = load i16, i16* %type19, align 8, !dbg !3787
  %conv20 = sext i16 %27 to i32, !dbg !3786
  %cmp21 = icmp eq i32 %conv20, 4, !dbg !3788
  br i1 %cmp21, label %if.then23, label %if.else24, !dbg !3789

if.then23:                                        ; preds = %lor.lhs.false18, %lor.lhs.false, %sw.bb8
  store float 1.000000e+02, float* %strength, align 4, !dbg !3790
  br label %if.end25, !dbg !3791

if.else24:                                        ; preds = %lor.lhs.false18
  store float 1.000000e+00, float* %strength, align 4, !dbg !3792
  br label %if.end25

if.end25:                                         ; preds = %if.else24, %if.then23
  br label %sw.epilog, !dbg !3793

sw.default:                                       ; preds = %entry
  %call26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i64 0, i64 0)), !dbg !3794
  br label %return, !dbg !3795

sw.epilog:                                        ; preds = %if.end25, %sw.bb5, %if.end
  %28 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3796
  %29 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3797
  %30 = load i32, i32* %output_type, align 4, !dbg !3798
  %call27 = call %struct.bNode* @nodeAddStaticNode(%struct.bContext* %28, %struct.bNodeTree* %29, i32 %30), !dbg !3799
  store %struct.bNode* %call27, %struct.bNode** %out, align 8, !dbg !3800
  %31 = load %struct.bNode*, %struct.bNode** %out, align 8, !dbg !3801
  %locx = getelementptr inbounds %struct.bNode, %struct.bNode* %31, i32 0, i32 24, !dbg !3802
  store float 3.000000e+02, float* %locx, align 8, !dbg !3803
  %32 = load %struct.bNode*, %struct.bNode** %out, align 8, !dbg !3804
  %locy = getelementptr inbounds %struct.bNode, %struct.bNode* %32, i32 0, i32 25, !dbg !3805
  store float 3.000000e+02, float* %locy, align 4, !dbg !3806
  %33 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3807
  %34 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3808
  %35 = load i32, i32* %shader_type, align 4, !dbg !3809
  %call28 = call %struct.bNode* @nodeAddStaticNode(%struct.bContext* %33, %struct.bNodeTree* %34, i32 %35), !dbg !3810
  store %struct.bNode* %call28, %struct.bNode** %in, align 8, !dbg !3811
  %36 = load %struct.bNode*, %struct.bNode** %in, align 8, !dbg !3812
  %locx29 = getelementptr inbounds %struct.bNode, %struct.bNode* %36, i32 0, i32 24, !dbg !3813
  store float 1.000000e+01, float* %locx29, align 8, !dbg !3814
  %37 = load %struct.bNode*, %struct.bNode** %in, align 8, !dbg !3815
  %locy30 = getelementptr inbounds %struct.bNode, %struct.bNode* %37, i32 0, i32 25, !dbg !3816
  store float 3.000000e+02, float* %locy30, align 4, !dbg !3817
  %38 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3818
  %39 = load %struct.bNode*, %struct.bNode** %in, align 8, !dbg !3819
  call void @nodeSetActive(%struct.bNodeTree* %38, %struct.bNode* %39), !dbg !3820
  %40 = load %struct.bNode*, %struct.bNode** %in, align 8, !dbg !3821
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %40, i32 0, i32 18, !dbg !3822
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !3823
  %41 = load i8*, i8** %first, align 8, !dbg !3823
  %42 = bitcast i8* %41 to %struct.bNodeSocket*, !dbg !3821
  store %struct.bNodeSocket* %42, %struct.bNodeSocket** %fromsock, align 8, !dbg !3824
  %43 = load %struct.bNode*, %struct.bNode** %out, align 8, !dbg !3825
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %43, i32 0, i32 17, !dbg !3826
  %first31 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !3827
  %44 = load i8*, i8** %first31, align 8, !dbg !3827
  %45 = bitcast i8* %44 to %struct.bNodeSocket*, !dbg !3825
  store %struct.bNodeSocket* %45, %struct.bNodeSocket** %tosock, align 8, !dbg !3828
  %46 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3829
  %47 = load %struct.bNode*, %struct.bNode** %in, align 8, !dbg !3830
  %48 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock, align 8, !dbg !3831
  %49 = load %struct.bNode*, %struct.bNode** %out, align 8, !dbg !3832
  %50 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !3833
  %call32 = call %struct.bNodeLink* @nodeAddLink(%struct.bNodeTree* %46, %struct.bNode* %47, %struct.bNodeSocket* %48, %struct.bNode* %49, %struct.bNodeSocket* %50), !dbg !3834
  %51 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3835
  %call33 = call zeroext i8 @BKE_scene_use_new_shading_nodes(%struct.Scene* %51), !dbg !3837
  %tobool34 = icmp ne i8 %call33, 0, !dbg !3837
  br i1 %tobool34, label %if.then35, label %if.end44, !dbg !3838

if.then35:                                        ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %sockptr, metadata !3839, metadata !DIExpression()), !dbg !3842
  %52 = load %struct.bNode*, %struct.bNode** %in, align 8, !dbg !3843
  %inputs36 = getelementptr inbounds %struct.bNode, %struct.bNode* %52, i32 0, i32 17, !dbg !3844
  %first37 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs36, i32 0, i32 0, !dbg !3845
  %53 = load i8*, i8** %first37, align 8, !dbg !3845
  %54 = bitcast i8* %53 to %struct.bNodeSocket*, !dbg !3843
  store %struct.bNodeSocket* %54, %struct.bNodeSocket** %sock, align 8, !dbg !3846
  %55 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3847
  %56 = bitcast %struct.bNodeTree* %55 to %struct.ID*, !dbg !3848
  %57 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3849
  %58 = bitcast %struct.bNodeSocket* %57 to i8*, !dbg !3849
  call void @RNA_pointer_create(%struct.ID* %56, %struct.StructRNA* @RNA_NodeSocket, i8* %58, %struct.PointerRNA* %sockptr), !dbg !3850
  %arraydecay38 = getelementptr inbounds [4 x float], [4 x float]* %color, i64 0, i64 0, !dbg !3851
  call void @RNA_float_set_array(%struct.PointerRNA* %sockptr, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), float* %arraydecay38), !dbg !3852
  %59 = load float, float* %strength, align 4, !dbg !3853
  %cmp39 = fcmp une float %59, 0.000000e+00, !dbg !3855
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !3856

if.then41:                                        ; preds = %if.then35
  %60 = load %struct.bNode*, %struct.bNode** %in, align 8, !dbg !3857
  %inputs42 = getelementptr inbounds %struct.bNode, %struct.bNode* %60, i32 0, i32 17, !dbg !3859
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs42, i32 0, i32 1, !dbg !3860
  %61 = load i8*, i8** %last, align 8, !dbg !3860
  %62 = bitcast i8* %61 to %struct.bNodeSocket*, !dbg !3857
  store %struct.bNodeSocket* %62, %struct.bNodeSocket** %sock, align 8, !dbg !3861
  %63 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3862
  %64 = bitcast %struct.bNodeTree* %63 to %struct.ID*, !dbg !3863
  %65 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3864
  %66 = bitcast %struct.bNodeSocket* %65 to i8*, !dbg !3864
  call void @RNA_pointer_create(%struct.ID* %64, %struct.StructRNA* @RNA_NodeSocket, i8* %66, %struct.PointerRNA* %sockptr), !dbg !3865
  %67 = load float, float* %strength, align 4, !dbg !3866
  call void @RNA_float_set(%struct.PointerRNA* %sockptr, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), float %67), !dbg !3867
  br label %if.end43, !dbg !3868

if.end43:                                         ; preds = %if.then41, %if.then35
  br label %if.end44, !dbg !3869

if.end44:                                         ; preds = %if.end43, %sw.epilog
  %68 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3870
  %call45 = call %struct.Main* @CTX_data_main(%struct.bContext* %68), !dbg !3871
  %69 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !3872
  call void @ntreeUpdateTree(%struct.Main* %call45, %struct.bNodeTree* %69), !dbg !3873
  br label %return, !dbg !3874

return:                                           ; preds = %if.end44, %sw.default
  ret void, !dbg !3874
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local %struct.bNodeTree* @ntreeAddTree(%struct.Main*, i8*, i8*) #2

declare dso_local zeroext i8 @BKE_scene_use_new_shading_nodes(%struct.Scene*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !3875 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3881, metadata !DIExpression()), !dbg !3882
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3883, metadata !DIExpression()), !dbg !3884
  %0 = load float*, float** %a.addr, align 8, !dbg !3885
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3885
  %1 = load float, float* %arrayidx, align 4, !dbg !3885
  %2 = load float*, float** %r.addr, align 8, !dbg !3886
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3886
  store float %1, float* %arrayidx1, align 4, !dbg !3887
  %3 = load float*, float** %a.addr, align 8, !dbg !3888
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !3888
  %4 = load float, float* %arrayidx2, align 4, !dbg !3888
  %5 = load float*, float** %r.addr, align 8, !dbg !3889
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !3889
  store float %4, float* %arrayidx3, align 4, !dbg !3890
  %6 = load float*, float** %a.addr, align 8, !dbg !3891
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !3891
  %7 = load float, float* %arrayidx4, align 4, !dbg !3891
  %8 = load float*, float** %r.addr, align 8, !dbg !3892
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !3892
  store float %7, float* %arrayidx5, align 4, !dbg !3893
  ret void, !dbg !3894
}

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local %struct.bNode* @nodeAddStaticNode(%struct.bContext*, %struct.bNodeTree*, i32) #2

declare dso_local void @nodeSetActive(%struct.bNodeTree*, %struct.bNode*) #2

declare dso_local %struct.bNodeLink* @nodeAddLink(%struct.bNodeTree*, %struct.bNode*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*) #2

declare dso_local void @RNA_pointer_create(%struct.ID*, %struct.StructRNA*, i8*, %struct.PointerRNA*) #2

declare dso_local void @RNA_float_set_array(%struct.PointerRNA*, i8*, float*) #2

declare dso_local void @RNA_float_set(%struct.PointerRNA*, i8*, float) #2

declare dso_local void @ntreeUpdateTree(%struct.Main*, %struct.bNodeTree*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_node_composit_default(%struct.bContext* %C, %struct.Scene* %sce) #0 !dbg !3895 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sce.addr = alloca %struct.Scene*, align 8
  %in = alloca %struct.bNode*, align 8
  %out = alloca %struct.bNode*, align 8
  %fromsock = alloca %struct.bNodeSocket*, align 8
  %tosock = alloca %struct.bNodeSocket*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3898, metadata !DIExpression()), !dbg !3899
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !3900, metadata !DIExpression()), !dbg !3901
  call void @llvm.dbg.declare(metadata %struct.bNode** %in, metadata !3902, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.declare(metadata %struct.bNode** %out, metadata !3904, metadata !DIExpression()), !dbg !3905
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %fromsock, metadata !3906, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %tosock, metadata !3908, metadata !DIExpression()), !dbg !3909
  %0 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !3910
  %nodetree = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 18, !dbg !3912
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !3912
  %tobool = icmp ne %struct.bNodeTree* %1, null, !dbg !3910
  br i1 %tobool, label %if.then, label %if.end3, !dbg !3913

if.then:                                          ; preds = %entry
  %2 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !3914
  %and = and i32 %2, 1, !dbg !3917
  %tobool1 = icmp ne i32 %and, 0, !dbg !3917
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !3918

if.then2:                                         ; preds = %if.then
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0)), !dbg !3919
  br label %if.end, !dbg !3919

if.end:                                           ; preds = %if.then2, %if.then
  br label %return, !dbg !3920

if.end3:                                          ; preds = %entry
  %3 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** @ntreeType_Composite, align 8, !dbg !3921
  %idname = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %3, i32 0, i32 1, !dbg !3922
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !3921
  %call4 = call %struct.bNodeTree* @ntreeAddTree(%struct.Main* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i8* %arraydecay), !dbg !3923
  %4 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !3924
  %nodetree5 = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 18, !dbg !3925
  store %struct.bNodeTree* %call4, %struct.bNodeTree** %nodetree5, align 8, !dbg !3926
  %5 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !3927
  %nodetree6 = getelementptr inbounds %struct.Scene, %struct.Scene* %5, i32 0, i32 18, !dbg !3928
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree6, align 8, !dbg !3928
  %chunksize = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %6, i32 0, i32 20, !dbg !3929
  store i32 256, i32* %chunksize, align 4, !dbg !3930
  %7 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !3931
  %nodetree7 = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 18, !dbg !3932
  %8 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree7, align 8, !dbg !3932
  %edit_quality = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %8, i32 0, i32 18, !dbg !3933
  store i16 0, i16* %edit_quality, align 8, !dbg !3934
  %9 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !3935
  %nodetree8 = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 18, !dbg !3936
  %10 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree8, align 8, !dbg !3936
  %render_quality = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %10, i32 0, i32 19, !dbg !3937
  store i16 0, i16* %render_quality, align 2, !dbg !3938
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3939
  %12 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !3940
  %nodetree9 = getelementptr inbounds %struct.Scene, %struct.Scene* %12, i32 0, i32 18, !dbg !3941
  %13 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree9, align 8, !dbg !3941
  %call10 = call %struct.bNode* @nodeAddStaticNode(%struct.bContext* %11, %struct.bNodeTree* %13, i32 222), !dbg !3942
  store %struct.bNode* %call10, %struct.bNode** %out, align 8, !dbg !3943
  %14 = load %struct.bNode*, %struct.bNode** %out, align 8, !dbg !3944
  %locx = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 24, !dbg !3945
  store float 3.000000e+02, float* %locx, align 8, !dbg !3946
  %15 = load %struct.bNode*, %struct.bNode** %out, align 8, !dbg !3947
  %locy = getelementptr inbounds %struct.bNode, %struct.bNode* %15, i32 0, i32 25, !dbg !3948
  store float 4.000000e+02, float* %locy, align 4, !dbg !3949
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3950
  %17 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !3951
  %nodetree11 = getelementptr inbounds %struct.Scene, %struct.Scene* %17, i32 0, i32 18, !dbg !3952
  %18 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree11, align 8, !dbg !3952
  %call12 = call %struct.bNode* @nodeAddStaticNode(%struct.bContext* %16, %struct.bNodeTree* %18, i32 221), !dbg !3953
  store %struct.bNode* %call12, %struct.bNode** %in, align 8, !dbg !3954
  %19 = load %struct.bNode*, %struct.bNode** %in, align 8, !dbg !3955
  %locx13 = getelementptr inbounds %struct.bNode, %struct.bNode* %19, i32 0, i32 24, !dbg !3956
  store float 1.000000e+01, float* %locx13, align 8, !dbg !3957
  %20 = load %struct.bNode*, %struct.bNode** %in, align 8, !dbg !3958
  %locy14 = getelementptr inbounds %struct.bNode, %struct.bNode* %20, i32 0, i32 25, !dbg !3959
  store float 4.000000e+02, float* %locy14, align 4, !dbg !3960
  %21 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !3961
  %nodetree15 = getelementptr inbounds %struct.Scene, %struct.Scene* %21, i32 0, i32 18, !dbg !3962
  %22 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree15, align 8, !dbg !3962
  %23 = load %struct.bNode*, %struct.bNode** %in, align 8, !dbg !3963
  call void @nodeSetActive(%struct.bNodeTree* %22, %struct.bNode* %23), !dbg !3964
  %24 = load %struct.bNode*, %struct.bNode** %in, align 8, !dbg !3965
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %24, i32 0, i32 18, !dbg !3966
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !3967
  %25 = load i8*, i8** %first, align 8, !dbg !3967
  %26 = bitcast i8* %25 to %struct.bNodeSocket*, !dbg !3965
  store %struct.bNodeSocket* %26, %struct.bNodeSocket** %fromsock, align 8, !dbg !3968
  %27 = load %struct.bNode*, %struct.bNode** %out, align 8, !dbg !3969
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %27, i32 0, i32 17, !dbg !3970
  %first16 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !3971
  %28 = load i8*, i8** %first16, align 8, !dbg !3971
  %29 = bitcast i8* %28 to %struct.bNodeSocket*, !dbg !3969
  store %struct.bNodeSocket* %29, %struct.bNodeSocket** %tosock, align 8, !dbg !3972
  %30 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !3973
  %nodetree17 = getelementptr inbounds %struct.Scene, %struct.Scene* %30, i32 0, i32 18, !dbg !3974
  %31 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree17, align 8, !dbg !3974
  %32 = load %struct.bNode*, %struct.bNode** %in, align 8, !dbg !3975
  %33 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock, align 8, !dbg !3976
  %34 = load %struct.bNode*, %struct.bNode** %out, align 8, !dbg !3977
  %35 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !3978
  %call18 = call %struct.bNodeLink* @nodeAddLink(%struct.bNodeTree* %31, %struct.bNode* %32, %struct.bNodeSocket* %33, %struct.bNode* %34, %struct.bNodeSocket* %35), !dbg !3979
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3980
  %call19 = call %struct.Main* @CTX_data_main(%struct.bContext* %36), !dbg !3981
  %37 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !3982
  %nodetree20 = getelementptr inbounds %struct.Scene, %struct.Scene* %37, i32 0, i32 18, !dbg !3983
  %38 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree20, align 8, !dbg !3983
  call void @ntreeUpdateTree(%struct.Main* %call19, %struct.bNodeTree* %38), !dbg !3984
  br label %return, !dbg !3985

return:                                           ; preds = %if.end3, %if.end
  ret void, !dbg !3985
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_node_texture_default(%struct.bContext* %C, %struct.Tex* %tx) #0 !dbg !3986 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %tx.addr = alloca %struct.Tex*, align 8
  %in = alloca %struct.bNode*, align 8
  %out = alloca %struct.bNode*, align 8
  %fromsock = alloca %struct.bNodeSocket*, align 8
  %tosock = alloca %struct.bNodeSocket*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3989, metadata !DIExpression()), !dbg !3990
  store %struct.Tex* %tx, %struct.Tex** %tx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tx.addr, metadata !3991, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.declare(metadata %struct.bNode** %in, metadata !3993, metadata !DIExpression()), !dbg !3994
  call void @llvm.dbg.declare(metadata %struct.bNode** %out, metadata !3995, metadata !DIExpression()), !dbg !3996
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %fromsock, metadata !3997, metadata !DIExpression()), !dbg !3998
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %tosock, metadata !3999, metadata !DIExpression()), !dbg !4000
  %0 = load %struct.Tex*, %struct.Tex** %tx.addr, align 8, !dbg !4001
  %nodetree = getelementptr inbounds %struct.Tex, %struct.Tex* %0, i32 0, i32 52, !dbg !4003
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !4003
  %tobool = icmp ne %struct.bNodeTree* %1, null, !dbg !4001
  br i1 %tobool, label %if.then, label %if.end3, !dbg !4004

if.then:                                          ; preds = %entry
  %2 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !4005
  %and = and i32 %2, 1, !dbg !4008
  %tobool1 = icmp ne i32 %and, 0, !dbg !4008
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !4009

if.then2:                                         ; preds = %if.then
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0)), !dbg !4010
  br label %if.end, !dbg !4010

if.end:                                           ; preds = %if.then2, %if.then
  br label %return, !dbg !4011

if.end3:                                          ; preds = %entry
  %3 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** @ntreeType_Texture, align 8, !dbg !4012
  %idname = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %3, i32 0, i32 1, !dbg !4013
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !4012
  %call4 = call %struct.bNodeTree* @ntreeAddTree(%struct.Main* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* %arraydecay), !dbg !4014
  %4 = load %struct.Tex*, %struct.Tex** %tx.addr, align 8, !dbg !4015
  %nodetree5 = getelementptr inbounds %struct.Tex, %struct.Tex* %4, i32 0, i32 52, !dbg !4016
  store %struct.bNodeTree* %call4, %struct.bNodeTree** %nodetree5, align 8, !dbg !4017
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4018
  %6 = load %struct.Tex*, %struct.Tex** %tx.addr, align 8, !dbg !4019
  %nodetree6 = getelementptr inbounds %struct.Tex, %struct.Tex* %6, i32 0, i32 52, !dbg !4020
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree6, align 8, !dbg !4020
  %call7 = call %struct.bNode* @nodeAddStaticNode(%struct.bContext* %5, %struct.bNodeTree* %7, i32 401), !dbg !4021
  store %struct.bNode* %call7, %struct.bNode** %out, align 8, !dbg !4022
  %8 = load %struct.bNode*, %struct.bNode** %out, align 8, !dbg !4023
  %locx = getelementptr inbounds %struct.bNode, %struct.bNode* %8, i32 0, i32 24, !dbg !4024
  store float 3.000000e+02, float* %locx, align 8, !dbg !4025
  %9 = load %struct.bNode*, %struct.bNode** %out, align 8, !dbg !4026
  %locy = getelementptr inbounds %struct.bNode, %struct.bNode* %9, i32 0, i32 25, !dbg !4027
  store float 3.000000e+02, float* %locy, align 4, !dbg !4028
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4029
  %11 = load %struct.Tex*, %struct.Tex** %tx.addr, align 8, !dbg !4030
  %nodetree8 = getelementptr inbounds %struct.Tex, %struct.Tex* %11, i32 0, i32 52, !dbg !4031
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree8, align 8, !dbg !4031
  %call9 = call %struct.bNode* @nodeAddStaticNode(%struct.bContext* %10, %struct.bNodeTree* %12, i32 402), !dbg !4032
  store %struct.bNode* %call9, %struct.bNode** %in, align 8, !dbg !4033
  %13 = load %struct.bNode*, %struct.bNode** %in, align 8, !dbg !4034
  %locx10 = getelementptr inbounds %struct.bNode, %struct.bNode* %13, i32 0, i32 24, !dbg !4035
  store float 1.000000e+01, float* %locx10, align 8, !dbg !4036
  %14 = load %struct.bNode*, %struct.bNode** %in, align 8, !dbg !4037
  %locy11 = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 25, !dbg !4038
  store float 3.000000e+02, float* %locy11, align 4, !dbg !4039
  %15 = load %struct.Tex*, %struct.Tex** %tx.addr, align 8, !dbg !4040
  %nodetree12 = getelementptr inbounds %struct.Tex, %struct.Tex* %15, i32 0, i32 52, !dbg !4041
  %16 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree12, align 8, !dbg !4041
  %17 = load %struct.bNode*, %struct.bNode** %in, align 8, !dbg !4042
  call void @nodeSetActive(%struct.bNodeTree* %16, %struct.bNode* %17), !dbg !4043
  %18 = load %struct.bNode*, %struct.bNode** %in, align 8, !dbg !4044
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 18, !dbg !4045
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !4046
  %19 = load i8*, i8** %first, align 8, !dbg !4046
  %20 = bitcast i8* %19 to %struct.bNodeSocket*, !dbg !4044
  store %struct.bNodeSocket* %20, %struct.bNodeSocket** %fromsock, align 8, !dbg !4047
  %21 = load %struct.bNode*, %struct.bNode** %out, align 8, !dbg !4048
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %21, i32 0, i32 17, !dbg !4049
  %first13 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !4050
  %22 = load i8*, i8** %first13, align 8, !dbg !4050
  %23 = bitcast i8* %22 to %struct.bNodeSocket*, !dbg !4048
  store %struct.bNodeSocket* %23, %struct.bNodeSocket** %tosock, align 8, !dbg !4051
  %24 = load %struct.Tex*, %struct.Tex** %tx.addr, align 8, !dbg !4052
  %nodetree14 = getelementptr inbounds %struct.Tex, %struct.Tex* %24, i32 0, i32 52, !dbg !4053
  %25 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree14, align 8, !dbg !4053
  %26 = load %struct.bNode*, %struct.bNode** %in, align 8, !dbg !4054
  %27 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock, align 8, !dbg !4055
  %28 = load %struct.bNode*, %struct.bNode** %out, align 8, !dbg !4056
  %29 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !4057
  %call15 = call %struct.bNodeLink* @nodeAddLink(%struct.bNodeTree* %25, %struct.bNode* %26, %struct.bNodeSocket* %27, %struct.bNode* %28, %struct.bNodeSocket* %29), !dbg !4058
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4059
  %call16 = call %struct.Main* @CTX_data_main(%struct.bContext* %30), !dbg !4060
  %31 = load %struct.Tex*, %struct.Tex** %tx.addr, align 8, !dbg !4061
  %nodetree17 = getelementptr inbounds %struct.Tex, %struct.Tex* %31, i32 0, i32 52, !dbg !4062
  %32 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree17, align 8, !dbg !4062
  call void @ntreeUpdateTree(%struct.Main* %call16, %struct.bNodeTree* %32), !dbg !4063
  br label %return, !dbg !4064

return:                                           ; preds = %if.end3, %if.end
  ret void, !dbg !4064
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @snode_set_context(%struct.bContext* %C) #0 !dbg !4065 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %treetype = alloca %struct.bNodeTreeType*, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %id = alloca %struct.ID*, align 8
  %from = alloca %struct.ID*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4068, metadata !DIExpression()), !dbg !4069
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !4070, metadata !DIExpression()), !dbg !4071
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4072
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !4073
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !4071
  call void @llvm.dbg.declare(metadata %struct.bNodeTreeType** %treetype, metadata !4074, metadata !DIExpression()), !dbg !4075
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4076
  %tree_idname = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %1, i32 0, i32 20, !dbg !4077
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %tree_idname, i64 0, i64 0, !dbg !4076
  %call1 = call %struct.bNodeTreeType* @ntreeTypeFind(i8* %arraydecay), !dbg !4078
  store %struct.bNodeTreeType* %call1, %struct.bNodeTreeType** %treetype, align 8, !dbg !4075
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !4079, metadata !DIExpression()), !dbg !4080
  %2 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4081
  %nodetree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %2, i32 0, i32 18, !dbg !4082
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !4082
  store %struct.bNodeTree* %3, %struct.bNodeTree** %ntree, align 8, !dbg !4080
  call void @llvm.dbg.declare(metadata %struct.ID** %id, metadata !4083, metadata !DIExpression()), !dbg !4084
  %4 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4085
  %id2 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %4, i32 0, i32 7, !dbg !4086
  %5 = load %struct.ID*, %struct.ID** %id2, align 8, !dbg !4086
  store %struct.ID* %5, %struct.ID** %id, align 8, !dbg !4084
  call void @llvm.dbg.declare(metadata %struct.ID** %from, metadata !4087, metadata !DIExpression()), !dbg !4088
  %6 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4089
  %from3 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %6, i32 0, i32 8, !dbg !4090
  %7 = load %struct.ID*, %struct.ID** %from3, align 8, !dbg !4090
  store %struct.ID* %7, %struct.ID** %from, align 8, !dbg !4088
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4091
  %call4 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %8), !dbg !4093
  %call5 = call zeroext i8 @BKE_scene_use_new_shading_nodes(%struct.Scene* %call4), !dbg !4094
  %tobool = icmp ne i8 %call5, 0, !dbg !4094
  br i1 %tobool, label %if.then, label %if.else, !dbg !4095

if.then:                                          ; preds = %entry
  %9 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4096
  %flag = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %9, i32 0, i32 9, !dbg !4097
  %10 = load i16, i16* %flag, align 8, !dbg !4098
  %conv = sext i16 %10 to i32, !dbg !4098
  %or = or i32 %conv, 2048, !dbg !4098
  %conv6 = trunc i32 %or to i16, !dbg !4098
  store i16 %conv6, i16* %flag, align 8, !dbg !4098
  br label %if.end, !dbg !4096

if.else:                                          ; preds = %entry
  %11 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4099
  %flag7 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %11, i32 0, i32 9, !dbg !4100
  %12 = load i16, i16* %flag7, align 8, !dbg !4101
  %conv8 = sext i16 %12 to i32, !dbg !4101
  %and = and i32 %conv8, -2049, !dbg !4101
  %conv9 = trunc i32 %and to i16, !dbg !4101
  store i16 %conv9, i16* %flag7, align 8, !dbg !4101
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %treetype, align 8, !dbg !4102
  %tobool10 = icmp ne %struct.bNodeTreeType* %13, null, !dbg !4102
  br i1 %tobool10, label %lor.lhs.false, label %if.then15, !dbg !4104

lor.lhs.false:                                    ; preds = %if.end
  %14 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %treetype, align 8, !dbg !4105
  %poll = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %14, i32 0, i32 8, !dbg !4106
  %15 = load i32 (%struct.bContext*, %struct.bNodeTreeType*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)** %poll, align 8, !dbg !4106
  %tobool11 = icmp ne i32 (%struct.bContext*, %struct.bNodeTreeType*)* %15, null, !dbg !4105
  br i1 %tobool11, label %land.lhs.true, label %if.end16, !dbg !4107

land.lhs.true:                                    ; preds = %lor.lhs.false
  %16 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %treetype, align 8, !dbg !4108
  %poll12 = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %16, i32 0, i32 8, !dbg !4109
  %17 = load i32 (%struct.bContext*, %struct.bNodeTreeType*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)** %poll12, align 8, !dbg !4109
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4110
  %19 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %treetype, align 8, !dbg !4111
  %call13 = call i32 %17(%struct.bContext* %18, %struct.bNodeTreeType* %19), !dbg !4108
  %tobool14 = icmp ne i32 %call13, 0, !dbg !4108
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !4112

if.then15:                                        ; preds = %land.lhs.true, %if.end
  br label %if.end62, !dbg !4113

if.end16:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %20 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4115
  %nodetree17 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %20, i32 0, i32 18, !dbg !4117
  %21 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree17, align 8, !dbg !4117
  %tobool18 = icmp ne %struct.bNodeTree* %21, null, !dbg !4115
  br i1 %tobool18, label %land.lhs.true19, label %if.end27, !dbg !4118

land.lhs.true19:                                  ; preds = %if.end16
  %22 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4119
  %nodetree20 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %22, i32 0, i32 18, !dbg !4120
  %23 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree20, align 8, !dbg !4120
  %idname = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %23, i32 0, i32 3, !dbg !4121
  %arraydecay21 = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !4119
  %24 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4122
  %tree_idname22 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %24, i32 0, i32 20, !dbg !4123
  %arraydecay23 = getelementptr inbounds [64 x i8], [64 x i8]* %tree_idname22, i64 0, i64 0, !dbg !4122
  %call24 = call i32 @strcmp(i8* %arraydecay21, i8* %arraydecay23) #5, !dbg !4124
  %cmp = icmp ne i32 %call24, 0, !dbg !4125
  br i1 %cmp, label %if.then26, label %if.end27, !dbg !4126

if.then26:                                        ; preds = %land.lhs.true19
  store %struct.bNodeTree* null, %struct.bNodeTree** %ntree, align 8, !dbg !4127
  store %struct.ID* null, %struct.ID** %id, align 8, !dbg !4129
  store %struct.ID* null, %struct.ID** %from, align 8, !dbg !4130
  br label %if.end27, !dbg !4131

if.end27:                                         ; preds = %if.then26, %land.lhs.true19, %if.end16
  %25 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4132
  %flag28 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %25, i32 0, i32 9, !dbg !4134
  %26 = load i16, i16* %flag28, align 8, !dbg !4134
  %conv29 = sext i16 %26 to i32, !dbg !4132
  %and30 = and i32 %conv29, 4096, !dbg !4135
  %tobool31 = icmp ne i32 %and30, 0, !dbg !4135
  br i1 %tobool31, label %lor.lhs.false32, label %if.then35, !dbg !4136

lor.lhs.false32:                                  ; preds = %if.end27
  %27 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !4137
  %cmp33 = icmp eq %struct.bNodeTree* %27, null, !dbg !4138
  br i1 %cmp33, label %if.then35, label %if.end40, !dbg !4139

if.then35:                                        ; preds = %lor.lhs.false32, %if.end27
  %28 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %treetype, align 8, !dbg !4140
  %get_from_context = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %28, i32 0, i32 9, !dbg !4143
  %29 = load void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)** %get_from_context, align 8, !dbg !4143
  %tobool36 = icmp ne void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)* %29, null, !dbg !4140
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !4144

if.then37:                                        ; preds = %if.then35
  store %struct.bNodeTree* null, %struct.bNodeTree** %ntree, align 8, !dbg !4145
  store %struct.ID* null, %struct.ID** %id, align 8, !dbg !4147
  store %struct.ID* null, %struct.ID** %from, align 8, !dbg !4148
  %30 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %treetype, align 8, !dbg !4149
  %get_from_context38 = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %30, i32 0, i32 9, !dbg !4150
  %31 = load void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)** %get_from_context38, align 8, !dbg !4150
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4151
  %33 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %treetype, align 8, !dbg !4152
  call void %31(%struct.bContext* %32, %struct.bNodeTreeType* %33, %struct.bNodeTree** %ntree, %struct.ID** %id, %struct.ID** %from), !dbg !4149
  br label %if.end39, !dbg !4153

if.end39:                                         ; preds = %if.then37, %if.then35
  br label %if.end40, !dbg !4154

if.end40:                                         ; preds = %if.end39, %lor.lhs.false32
  %34 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4155
  %nodetree41 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %34, i32 0, i32 18, !dbg !4157
  %35 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree41, align 8, !dbg !4157
  %36 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !4158
  %cmp42 = icmp ne %struct.bNodeTree* %35, %36, !dbg !4159
  br i1 %cmp42, label %if.then52, label %lor.lhs.false44, !dbg !4160

lor.lhs.false44:                                  ; preds = %if.end40
  %37 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4161
  %id45 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %37, i32 0, i32 7, !dbg !4162
  %38 = load %struct.ID*, %struct.ID** %id45, align 8, !dbg !4162
  %39 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4163
  %cmp46 = icmp ne %struct.ID* %38, %39, !dbg !4164
  br i1 %cmp46, label %if.then52, label %lor.lhs.false48, !dbg !4165

lor.lhs.false48:                                  ; preds = %lor.lhs.false44
  %40 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4166
  %from49 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %40, i32 0, i32 8, !dbg !4167
  %41 = load %struct.ID*, %struct.ID** %from49, align 8, !dbg !4167
  %42 = load %struct.ID*, %struct.ID** %from, align 8, !dbg !4168
  %cmp50 = icmp ne %struct.ID* %41, %42, !dbg !4169
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !4170

if.then52:                                        ; preds = %lor.lhs.false48, %lor.lhs.false44, %if.end40
  %43 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4171
  %44 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !4173
  %45 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4174
  %46 = load %struct.ID*, %struct.ID** %from, align 8, !dbg !4175
  call void @ED_node_tree_start(%struct.SpaceNode* %43, %struct.bNodeTree* %44, %struct.ID* %45, %struct.ID* %46), !dbg !4176
  br label %if.end53, !dbg !4177

if.end53:                                         ; preds = %if.then52, %lor.lhs.false48
  %47 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4178
  %call54 = call zeroext i8 @ED_node_is_compositor(%struct.SpaceNode* %47), !dbg !4180
  %conv55 = zext i8 %call54 to i32, !dbg !4180
  %tobool56 = icmp ne i32 %conv55, 0, !dbg !4180
  br i1 %tobool56, label %land.lhs.true57, label %if.end62, !dbg !4181

land.lhs.true57:                                  ; preds = %if.end53
  %48 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4182
  %nodetree58 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %48, i32 0, i32 18, !dbg !4183
  %49 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree58, align 8, !dbg !4183
  %tobool59 = icmp ne %struct.bNodeTree* %49, null, !dbg !4182
  br i1 %tobool59, label %if.then60, label %if.end62, !dbg !4184

if.then60:                                        ; preds = %land.lhs.true57
  %50 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4185
  %nodetree61 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %50, i32 0, i32 18, !dbg !4187
  %51 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree61, align 8, !dbg !4187
  call void @ntreeCompositForceHidden(%struct.bNodeTree* %51), !dbg !4188
  br label %if.end62, !dbg !4189

if.end62:                                         ; preds = %if.then15, %if.then60, %land.lhs.true57, %if.end53
  ret void, !dbg !4190
}

declare dso_local %struct.bNodeTreeType* @ntreeTypeFind(i8*) #2

declare dso_local void @ED_node_tree_start(%struct.SpaceNode*, %struct.bNodeTree*, %struct.ID*, %struct.ID*) #2

declare dso_local void @ntreeCompositForceHidden(%struct.bNodeTree*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @snode_update(%struct.SpaceNode* %snode, %struct.bNode* %node) #0 !dbg !4191 {
entry:
  %snode.addr = alloca %struct.SpaceNode*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %path = alloca %struct.bNodeTreePath*, align 8
  %ngroup = alloca %struct.bNodeTree*, align 8
  store %struct.SpaceNode* %snode, %struct.SpaceNode** %snode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode.addr, metadata !4194, metadata !DIExpression()), !dbg !4195
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !4196, metadata !DIExpression()), !dbg !4197
  call void @llvm.dbg.declare(metadata %struct.bNodeTreePath** %path, metadata !4198, metadata !DIExpression()), !dbg !4211
  %0 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !4212
  %treepath = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %0, i32 0, i32 17, !dbg !4213
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %treepath, i32 0, i32 1, !dbg !4214
  %1 = load i8*, i8** %last, align 8, !dbg !4214
  %2 = bitcast i8* %1 to %struct.bNodeTreePath*, !dbg !4212
  store %struct.bNodeTreePath* %2, %struct.bNodeTreePath** %path, align 8, !dbg !4215
  %3 = load %struct.bNodeTreePath*, %struct.bNodeTreePath** %path, align 8, !dbg !4216
  %tobool = icmp ne %struct.bNodeTreePath* %3, null, !dbg !4216
  br i1 %tobool, label %if.then, label %if.end, !dbg !4218

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ngroup, metadata !4219, metadata !DIExpression()), !dbg !4221
  %4 = load %struct.bNodeTreePath*, %struct.bNodeTreePath** %path, align 8, !dbg !4222
  %nodetree = getelementptr inbounds %struct.bNodeTreePath, %struct.bNodeTreePath* %4, i32 0, i32 2, !dbg !4223
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !4223
  store %struct.bNodeTree* %5, %struct.bNodeTree** %ngroup, align 8, !dbg !4221
  %6 = load %struct.bNodeTreePath*, %struct.bNodeTreePath** %path, align 8, !dbg !4224
  %prev = getelementptr inbounds %struct.bNodeTreePath, %struct.bNodeTreePath* %6, i32 0, i32 1, !dbg !4226
  %7 = load %struct.bNodeTreePath*, %struct.bNodeTreePath** %prev, align 8, !dbg !4226
  store %struct.bNodeTreePath* %7, %struct.bNodeTreePath** %path, align 8, !dbg !4227
  br label %for.cond, !dbg !4228

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load %struct.bNodeTreePath*, %struct.bNodeTreePath** %path, align 8, !dbg !4229
  %tobool1 = icmp ne %struct.bNodeTreePath* %8, null, !dbg !4231
  br i1 %tobool1, label %for.body, label %for.end, !dbg !4231

for.body:                                         ; preds = %for.cond
  %9 = load %struct.bNodeTreePath*, %struct.bNodeTreePath** %path, align 8, !dbg !4232
  %nodetree2 = getelementptr inbounds %struct.bNodeTreePath, %struct.bNodeTreePath* %9, i32 0, i32 2, !dbg !4234
  %10 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree2, align 8, !dbg !4234
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %ngroup, align 8, !dbg !4235
  %12 = bitcast %struct.bNodeTree* %11 to %struct.ID*, !dbg !4236
  %call = call zeroext i8 @nodeUpdateID(%struct.bNodeTree* %10, %struct.ID* %12), !dbg !4237
  %13 = load %struct.bNodeTreePath*, %struct.bNodeTreePath** %path, align 8, !dbg !4238
  %nodetree3 = getelementptr inbounds %struct.bNodeTreePath, %struct.bNodeTreePath* %13, i32 0, i32 2, !dbg !4239
  %14 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree3, align 8, !dbg !4239
  store %struct.bNodeTree* %14, %struct.bNodeTree** %ngroup, align 8, !dbg !4240
  br label %for.inc, !dbg !4241

for.inc:                                          ; preds = %for.body
  %15 = load %struct.bNodeTreePath*, %struct.bNodeTreePath** %path, align 8, !dbg !4242
  %prev4 = getelementptr inbounds %struct.bNodeTreePath, %struct.bNodeTreePath* %15, i32 0, i32 1, !dbg !4243
  %16 = load %struct.bNodeTreePath*, %struct.bNodeTreePath** %prev4, align 8, !dbg !4243
  store %struct.bNodeTreePath* %16, %struct.bNodeTreePath** %path, align 8, !dbg !4244
  br label %for.cond, !dbg !4245, !llvm.loop !4246

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !4248

if.end:                                           ; preds = %for.end, %entry
  %17 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4249
  %tobool5 = icmp ne %struct.bNode* %17, null, !dbg !4249
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !4251

if.then6:                                         ; preds = %if.end
  %18 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !4252
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %18, i32 0, i32 19, !dbg !4253
  %19 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !4253
  %20 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4254
  call void @nodeUpdate(%struct.bNodeTree* %19, %struct.bNode* %20), !dbg !4255
  br label %if.end7, !dbg !4255

if.end7:                                          ; preds = %if.then6, %if.end
  ret void, !dbg !4256
}

declare dso_local zeroext i8 @nodeUpdateID(%struct.bNodeTree*, %struct.ID*) #2

declare dso_local void @nodeUpdate(%struct.bNodeTree*, %struct.bNode*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_node_set_active(%struct.Main* %bmain, %struct.bNodeTree* %ntree, %struct.bNode* %node) #0 !dbg !4257 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %was_active_texture = alloca i8, align 1
  %was_output = alloca i8, align 1
  %do_update = alloca i8, align 1
  %tnode = alloca %struct.bNode*, align 8
  %tnode76 = alloca %struct.bNode*, align 8
  %ma = alloca %struct.Material*, align 8
  %tnode147 = alloca %struct.bNode*, align 8
  %scene = alloca %struct.Scene*, align 8
  %num_layers = alloca i32, align 4
  %tnode235 = alloca %struct.bNode*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !4260, metadata !DIExpression()), !dbg !4261
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !4262, metadata !DIExpression()), !dbg !4263
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !4264, metadata !DIExpression()), !dbg !4265
  call void @llvm.dbg.declare(metadata i8* %was_active_texture, metadata !4266, metadata !DIExpression()), !dbg !4268
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4269
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 7, !dbg !4270
  %1 = load i32, i32* %flag, align 8, !dbg !4270
  %and = and i32 %1, 16384, !dbg !4271
  %cmp = icmp ne i32 %and, 0, !dbg !4272
  %conv = zext i1 %cmp to i32, !dbg !4272
  %conv1 = trunc i32 %conv to i8, !dbg !4273
  store i8 %conv1, i8* %was_active_texture, align 1, !dbg !4268
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4274
  %3 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4275
  call void @nodeSetActive(%struct.bNodeTree* %2, %struct.bNode* %3), !dbg !4276
  %4 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4277
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %4, i32 0, i32 8, !dbg !4279
  %5 = load i16, i16* %type, align 4, !dbg !4279
  %conv2 = sext i16 %5 to i32, !dbg !4277
  %cmp3 = icmp ne i32 %conv2, 2, !dbg !4280
  br i1 %cmp3, label %if.then, label %if.end270, !dbg !4281

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %was_output, metadata !4282, metadata !DIExpression()), !dbg !4284
  %6 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4285
  %flag5 = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 7, !dbg !4286
  %7 = load i32, i32* %flag5, align 8, !dbg !4286
  %and6 = and i32 %7, 64, !dbg !4287
  %cmp7 = icmp ne i32 %and6, 0, !dbg !4288
  %conv8 = zext i1 %cmp7 to i32, !dbg !4288
  %conv9 = trunc i32 %conv8 to i8, !dbg !4289
  store i8 %conv9, i8* %was_output, align 1, !dbg !4284
  call void @llvm.dbg.declare(metadata i8* %do_update, metadata !4290, metadata !DIExpression()), !dbg !4291
  store i8 0, i8* %do_update, align 1, !dbg !4291
  %8 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4292
  %type10 = getelementptr inbounds %struct.bNode, %struct.bNode* %8, i32 0, i32 8, !dbg !4294
  %9 = load i16, i16* %type10, align 4, !dbg !4294
  %conv11 = sext i16 %9 to i32, !dbg !4292
  %cmp12 = icmp eq i32 %conv11, 8, !dbg !4295
  br i1 %cmp12, label %if.then14, label %if.end26, !dbg !4296

if.then14:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bNode** %tnode, metadata !4297, metadata !DIExpression()), !dbg !4299
  %10 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4300
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %10, i32 0, i32 7, !dbg !4302
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !4303
  %11 = load i8*, i8** %first, align 8, !dbg !4303
  %12 = bitcast i8* %11 to %struct.bNode*, !dbg !4300
  store %struct.bNode* %12, %struct.bNode** %tnode, align 8, !dbg !4304
  br label %for.cond, !dbg !4305

for.cond:                                         ; preds = %for.inc, %if.then14
  %13 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !4306
  %tobool = icmp ne %struct.bNode* %13, null, !dbg !4308
  br i1 %tobool, label %for.body, label %for.end, !dbg !4308

for.body:                                         ; preds = %for.cond
  %14 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !4309
  %type15 = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 8, !dbg !4311
  %15 = load i16, i16* %type15, align 4, !dbg !4311
  %conv16 = sext i16 %15 to i32, !dbg !4309
  %cmp17 = icmp eq i32 %conv16, 8, !dbg !4312
  br i1 %cmp17, label %if.then19, label %if.end, !dbg !4313

if.then19:                                        ; preds = %for.body
  %16 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !4314
  %flag20 = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 7, !dbg !4315
  %17 = load i32, i32* %flag20, align 8, !dbg !4316
  %and21 = and i32 %17, -65, !dbg !4316
  store i32 %and21, i32* %flag20, align 8, !dbg !4316
  br label %if.end, !dbg !4314

if.end:                                           ; preds = %if.then19, %for.body
  br label %for.inc, !dbg !4317

for.inc:                                          ; preds = %if.end
  %18 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !4318
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 0, !dbg !4319
  %19 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !4319
  store %struct.bNode* %19, %struct.bNode** %tnode, align 8, !dbg !4320
  br label %for.cond, !dbg !4321, !llvm.loop !4322

for.end:                                          ; preds = %for.cond
  %20 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4324
  %flag22 = getelementptr inbounds %struct.bNode, %struct.bNode* %20, i32 0, i32 7, !dbg !4325
  %21 = load i32, i32* %flag22, align 8, !dbg !4326
  %or = or i32 %21, 64, !dbg !4326
  store i32 %or, i32* %flag22, align 8, !dbg !4326
  %22 = load i8, i8* %was_output, align 1, !dbg !4327
  %tobool23 = icmp ne i8 %22, 0, !dbg !4327
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !4329

if.then24:                                        ; preds = %for.end
  store i8 1, i8* %do_update, align 1, !dbg !4330
  br label %if.end25, !dbg !4331

if.end25:                                         ; preds = %if.then24, %for.end
  br label %if.end26, !dbg !4332

if.end26:                                         ; preds = %if.end25, %if.then
  %23 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4333
  %type27 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %23, i32 0, i32 9, !dbg !4335
  %24 = load i32, i32* %type27, align 8, !dbg !4335
  %cmp28 = icmp eq i32 %24, 0, !dbg !4336
  br i1 %cmp28, label %if.then30, label %if.else132, !dbg !4337

if.then30:                                        ; preds = %if.end26
  %25 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4338
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %25, i32 0, i32 20, !dbg !4341
  %26 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4341
  %tobool31 = icmp ne %struct.ID* %26, null, !dbg !4338
  br i1 %tobool31, label %land.lhs.true, label %if.end50, !dbg !4342

land.lhs.true:                                    ; preds = %if.then30
  %27 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4343
  %id32 = getelementptr inbounds %struct.bNode, %struct.bNode* %27, i32 0, i32 20, !dbg !4343
  %28 = load %struct.ID*, %struct.ID** %id32, align 8, !dbg !4343
  %name = getelementptr inbounds %struct.ID, %struct.ID* %28, i32 0, i32 4, !dbg !4343
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !4343
  %29 = bitcast i8* %arraydecay to i16*, !dbg !4343
  %30 = load i16, i16* %29, align 8, !dbg !4343
  %conv33 = sext i16 %30 to i32, !dbg !4343
  %cmp34 = icmp eq i32 %conv33, 16717, !dbg !4343
  br i1 %cmp34, label %if.then49, label %lor.lhs.false, !dbg !4343

lor.lhs.false:                                    ; preds = %land.lhs.true
  %31 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4343
  %id36 = getelementptr inbounds %struct.bNode, %struct.bNode* %31, i32 0, i32 20, !dbg !4343
  %32 = load %struct.ID*, %struct.ID** %id36, align 8, !dbg !4343
  %name37 = getelementptr inbounds %struct.ID, %struct.ID* %32, i32 0, i32 4, !dbg !4343
  %arraydecay38 = getelementptr inbounds [66 x i8], [66 x i8]* %name37, i64 0, i64 0, !dbg !4343
  %33 = bitcast i8* %arraydecay38 to i16*, !dbg !4343
  %34 = load i16, i16* %33, align 8, !dbg !4343
  %conv39 = sext i16 %34 to i32, !dbg !4343
  %cmp40 = icmp eq i32 %conv39, 16716, !dbg !4343
  br i1 %cmp40, label %if.then49, label %lor.lhs.false42, !dbg !4343

lor.lhs.false42:                                  ; preds = %lor.lhs.false
  %35 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4343
  %id43 = getelementptr inbounds %struct.bNode, %struct.bNode* %35, i32 0, i32 20, !dbg !4343
  %36 = load %struct.ID*, %struct.ID** %id43, align 8, !dbg !4343
  %name44 = getelementptr inbounds %struct.ID, %struct.ID* %36, i32 0, i32 4, !dbg !4343
  %arraydecay45 = getelementptr inbounds [66 x i8], [66 x i8]* %name44, i64 0, i64 0, !dbg !4343
  %37 = bitcast i8* %arraydecay45 to i16*, !dbg !4343
  %38 = load i16, i16* %37, align 8, !dbg !4343
  %conv46 = sext i16 %38 to i32, !dbg !4343
  %cmp47 = icmp eq i32 %conv46, 20311, !dbg !4343
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !4344

if.then49:                                        ; preds = %lor.lhs.false42, %lor.lhs.false, %land.lhs.true
  %39 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4345
  call void @nodeClearActiveID(%struct.bNodeTree* %39, i16 signext 17748), !dbg !4346
  br label %if.end50, !dbg !4346

if.end50:                                         ; preds = %if.then49, %lor.lhs.false42, %if.then30
  %40 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4347
  %type51 = getelementptr inbounds %struct.bNode, %struct.bNode* %40, i32 0, i32 8, !dbg !4347
  %41 = load i16, i16* %type51, align 4, !dbg !4347
  %conv52 = sext i16 %41 to i32, !dbg !4347
  %cmp53 = icmp eq i32 %conv52, 1, !dbg !4347
  br i1 %cmp53, label %if.then75, label %lor.lhs.false55, !dbg !4347

lor.lhs.false55:                                  ; preds = %if.end50
  %42 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4347
  %type56 = getelementptr inbounds %struct.bNode, %struct.bNode* %42, i32 0, i32 8, !dbg !4347
  %43 = load i16, i16* %type56, align 4, !dbg !4347
  %conv57 = sext i16 %43 to i32, !dbg !4347
  %cmp58 = icmp eq i32 %conv57, 124, !dbg !4347
  br i1 %cmp58, label %if.then75, label %lor.lhs.false60, !dbg !4347

lor.lhs.false60:                                  ; preds = %lor.lhs.false55
  %44 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4347
  %type61 = getelementptr inbounds %struct.bNode, %struct.bNode* %44, i32 0, i32 8, !dbg !4347
  %45 = load i16, i16* %type61, align 4, !dbg !4347
  %conv62 = sext i16 %45 to i32, !dbg !4347
  %cmp63 = icmp eq i32 %conv62, 125, !dbg !4347
  br i1 %cmp63, label %if.then75, label %lor.lhs.false65, !dbg !4347

lor.lhs.false65:                                  ; preds = %lor.lhs.false60
  %46 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4347
  %type66 = getelementptr inbounds %struct.bNode, %struct.bNode* %46, i32 0, i32 8, !dbg !4347
  %47 = load i16, i16* %type66, align 4, !dbg !4347
  %conv67 = sext i16 %47 to i32, !dbg !4347
  %cmp68 = icmp eq i32 %conv67, 126, !dbg !4347
  br i1 %cmp68, label %if.then75, label %lor.lhs.false70, !dbg !4347

lor.lhs.false70:                                  ; preds = %lor.lhs.false65
  %48 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4347
  %type71 = getelementptr inbounds %struct.bNode, %struct.bNode* %48, i32 0, i32 8, !dbg !4347
  %49 = load i16, i16* %type71, align 4, !dbg !4347
  %conv72 = sext i16 %49 to i32, !dbg !4347
  %cmp73 = icmp eq i32 %conv72, 190, !dbg !4347
  br i1 %cmp73, label %if.then75, label %if.else, !dbg !4349

if.then75:                                        ; preds = %lor.lhs.false70, %lor.lhs.false65, %lor.lhs.false60, %lor.lhs.false55, %if.end50
  call void @llvm.dbg.declare(metadata %struct.bNode** %tnode76, metadata !4350, metadata !DIExpression()), !dbg !4352
  %50 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4353
  %nodes77 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %50, i32 0, i32 7, !dbg !4355
  %first78 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes77, i32 0, i32 0, !dbg !4356
  %51 = load i8*, i8** %first78, align 8, !dbg !4356
  %52 = bitcast i8* %51 to %struct.bNode*, !dbg !4353
  store %struct.bNode* %52, %struct.bNode** %tnode76, align 8, !dbg !4357
  br label %for.cond79, !dbg !4358

for.cond79:                                       ; preds = %for.inc92, %if.then75
  %53 = load %struct.bNode*, %struct.bNode** %tnode76, align 8, !dbg !4359
  %tobool80 = icmp ne %struct.bNode* %53, null, !dbg !4361
  br i1 %tobool80, label %for.body81, label %for.end94, !dbg !4361

for.body81:                                       ; preds = %for.cond79
  %54 = load %struct.bNode*, %struct.bNode** %tnode76, align 8, !dbg !4362
  %type82 = getelementptr inbounds %struct.bNode, %struct.bNode* %54, i32 0, i32 8, !dbg !4364
  %55 = load i16, i16* %type82, align 4, !dbg !4364
  %conv83 = sext i16 %55 to i32, !dbg !4362
  %56 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4365
  %type84 = getelementptr inbounds %struct.bNode, %struct.bNode* %56, i32 0, i32 8, !dbg !4366
  %57 = load i16, i16* %type84, align 4, !dbg !4366
  %conv85 = sext i16 %57 to i32, !dbg !4365
  %cmp86 = icmp eq i32 %conv83, %conv85, !dbg !4367
  br i1 %cmp86, label %if.then88, label %if.end91, !dbg !4368

if.then88:                                        ; preds = %for.body81
  %58 = load %struct.bNode*, %struct.bNode** %tnode76, align 8, !dbg !4369
  %flag89 = getelementptr inbounds %struct.bNode, %struct.bNode* %58, i32 0, i32 7, !dbg !4370
  %59 = load i32, i32* %flag89, align 8, !dbg !4371
  %and90 = and i32 %59, -65, !dbg !4371
  store i32 %and90, i32* %flag89, align 8, !dbg !4371
  br label %if.end91, !dbg !4369

if.end91:                                         ; preds = %if.then88, %for.body81
  br label %for.inc92, !dbg !4366

for.inc92:                                        ; preds = %if.end91
  %60 = load %struct.bNode*, %struct.bNode** %tnode76, align 8, !dbg !4372
  %next93 = getelementptr inbounds %struct.bNode, %struct.bNode* %60, i32 0, i32 0, !dbg !4373
  %61 = load %struct.bNode*, %struct.bNode** %next93, align 8, !dbg !4373
  store %struct.bNode* %61, %struct.bNode** %tnode76, align 8, !dbg !4374
  br label %for.cond79, !dbg !4375, !llvm.loop !4376

for.end94:                                        ; preds = %for.cond79
  %62 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4378
  %flag95 = getelementptr inbounds %struct.bNode, %struct.bNode* %62, i32 0, i32 7, !dbg !4379
  %63 = load i32, i32* %flag95, align 8, !dbg !4380
  %or96 = or i32 %63, 64, !dbg !4380
  store i32 %or96, i32* %flag95, align 8, !dbg !4380
  %64 = load i8, i8* %was_output, align 1, !dbg !4381
  %conv97 = zext i8 %64 to i32, !dbg !4381
  %cmp98 = icmp eq i32 %conv97, 0, !dbg !4383
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !4384

if.then100:                                       ; preds = %for.end94
  %65 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4385
  %66 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4386
  call void @ED_node_tag_update_nodetree(%struct.Main* %65, %struct.bNodeTree* %66), !dbg !4387
  br label %if.end101, !dbg !4387

if.end101:                                        ; preds = %if.then100, %for.end94
  br label %if.end105, !dbg !4388

if.else:                                          ; preds = %lor.lhs.false70
  %67 = load i8, i8* %do_update, align 1, !dbg !4389
  %tobool102 = icmp ne i8 %67, 0, !dbg !4389
  br i1 %tobool102, label %if.then103, label %if.end104, !dbg !4391

if.then103:                                       ; preds = %if.else
  %68 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4392
  %69 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4393
  call void @ED_node_tag_update_nodetree(%struct.Main* %68, %struct.bNodeTree* %69), !dbg !4394
  br label %if.end104, !dbg !4394

if.end104:                                        ; preds = %if.then103, %if.else
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end101
  %70 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4395
  %flag106 = getelementptr inbounds %struct.bNode, %struct.bNode* %70, i32 0, i32 7, !dbg !4397
  %71 = load i32, i32* %flag106, align 8, !dbg !4397
  %and107 = and i32 %71, 16384, !dbg !4398
  %tobool108 = icmp ne i32 %and107, 0, !dbg !4398
  br i1 %tobool108, label %land.lhs.true109, label %if.end130, !dbg !4399

land.lhs.true109:                                 ; preds = %if.end105
  %72 = load i8, i8* %was_active_texture, align 1, !dbg !4400
  %tobool110 = icmp ne i8 %72, 0, !dbg !4400
  br i1 %tobool110, label %if.end130, label %if.then111, !dbg !4401

if.then111:                                       ; preds = %land.lhs.true109
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !4402, metadata !DIExpression()), !dbg !4404
  %73 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4405
  %mat = getelementptr inbounds %struct.Main, %struct.Main* %73, i32 0, i32 17, !dbg !4407
  %first112 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mat, i32 0, i32 0, !dbg !4408
  %74 = load i8*, i8** %first112, align 8, !dbg !4408
  %75 = bitcast i8* %74 to %struct.Material*, !dbg !4405
  store %struct.Material* %75, %struct.Material** %ma, align 8, !dbg !4409
  br label %for.cond113, !dbg !4410

for.cond113:                                      ; preds = %for.inc126, %if.then111
  %76 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4411
  %tobool114 = icmp ne %struct.Material* %76, null, !dbg !4413
  br i1 %tobool114, label %for.body115, label %for.end129, !dbg !4413

for.body115:                                      ; preds = %for.cond113
  %77 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4414
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %77, i32 0, i32 103, !dbg !4416
  %78 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !4416
  %tobool116 = icmp ne %struct.bNodeTree* %78, null, !dbg !4414
  br i1 %tobool116, label %land.lhs.true117, label %if.end125, !dbg !4417

land.lhs.true117:                                 ; preds = %for.body115
  %79 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4418
  %use_nodes = getelementptr inbounds %struct.Material, %struct.Material* %79, i32 0, i32 77, !dbg !4419
  %80 = load i8, i8* %use_nodes, align 1, !dbg !4419
  %conv118 = zext i8 %80 to i32, !dbg !4418
  %tobool119 = icmp ne i32 %conv118, 0, !dbg !4418
  br i1 %tobool119, label %land.lhs.true120, label %if.end125, !dbg !4420

land.lhs.true120:                                 ; preds = %land.lhs.true117
  %81 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4421
  %nodetree121 = getelementptr inbounds %struct.Material, %struct.Material* %81, i32 0, i32 103, !dbg !4422
  %82 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree121, align 8, !dbg !4422
  %83 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4423
  %call = call zeroext i8 @ntreeHasTree(%struct.bNodeTree* %82, %struct.bNodeTree* %83), !dbg !4424
  %conv122 = zext i8 %call to i32, !dbg !4424
  %tobool123 = icmp ne i32 %conv122, 0, !dbg !4424
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !4425

if.then124:                                       ; preds = %land.lhs.true120
  %84 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4426
  call void @GPU_material_free(%struct.Material* %84), !dbg !4427
  br label %if.end125, !dbg !4427

if.end125:                                        ; preds = %if.then124, %land.lhs.true120, %land.lhs.true117, %for.body115
  br label %for.inc126, !dbg !4428

for.inc126:                                       ; preds = %if.end125
  %85 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4429
  %id127 = getelementptr inbounds %struct.Material, %struct.Material* %85, i32 0, i32 0, !dbg !4430
  %next128 = getelementptr inbounds %struct.ID, %struct.ID* %id127, i32 0, i32 0, !dbg !4431
  %86 = load i8*, i8** %next128, align 8, !dbg !4431
  %87 = bitcast i8* %86 to %struct.Material*, !dbg !4429
  store %struct.Material* %87, %struct.Material** %ma, align 8, !dbg !4432
  br label %for.cond113, !dbg !4433, !llvm.loop !4434

for.end129:                                       ; preds = %for.cond113
  call void @WM_main_add_notifier(i32 167772160, i8* null), !dbg !4436
  br label %if.end130, !dbg !4437

if.end130:                                        ; preds = %for.end129, %land.lhs.true109, %if.end105
  %88 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4438
  %id131 = getelementptr inbounds %struct.bNode, %struct.bNode* %88, i32 0, i32 20, !dbg !4439
  %89 = load %struct.ID*, %struct.ID** %id131, align 8, !dbg !4439
  %90 = bitcast %struct.ID* %89 to i8*, !dbg !4438
  call void @WM_main_add_notifier(i32 100990976, i8* %90), !dbg !4440
  br label %if.end269, !dbg !4441

if.else132:                                       ; preds = %if.end26
  %91 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4442
  %type133 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %91, i32 0, i32 9, !dbg !4444
  %92 = load i32, i32* %type133, align 8, !dbg !4444
  %cmp134 = icmp eq i32 %92, 1, !dbg !4445
  br i1 %cmp134, label %if.then136, label %if.else262, !dbg !4446

if.then136:                                       ; preds = %if.else132
  %93 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4447
  %type137 = getelementptr inbounds %struct.bNode, %struct.bNode* %93, i32 0, i32 8, !dbg !4447
  %94 = load i16, i16* %type137, align 4, !dbg !4447
  %conv138 = sext i16 %94 to i32, !dbg !4447
  %cmp139 = icmp eq i32 %conv138, 201, !dbg !4447
  br i1 %cmp139, label %if.then146, label %lor.lhs.false141, !dbg !4447

lor.lhs.false141:                                 ; preds = %if.then136
  %95 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4447
  %type142 = getelementptr inbounds %struct.bNode, %struct.bNode* %95, i32 0, i32 8, !dbg !4447
  %96 = load i16, i16* %type142, align 4, !dbg !4447
  %conv143 = sext i16 %96 to i32, !dbg !4447
  %cmp144 = icmp eq i32 %conv143, 240, !dbg !4447
  br i1 %cmp144, label %if.then146, label %if.else178, !dbg !4450

if.then146:                                       ; preds = %lor.lhs.false141, %if.then136
  call void @llvm.dbg.declare(metadata %struct.bNode** %tnode147, metadata !4451, metadata !DIExpression()), !dbg !4453
  %97 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4454
  %nodes148 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %97, i32 0, i32 7, !dbg !4456
  %first149 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes148, i32 0, i32 0, !dbg !4457
  %98 = load i8*, i8** %first149, align 8, !dbg !4457
  %99 = bitcast i8* %98 to %struct.bNode*, !dbg !4454
  store %struct.bNode* %99, %struct.bNode** %tnode147, align 8, !dbg !4458
  br label %for.cond150, !dbg !4459

for.cond150:                                      ; preds = %for.inc166, %if.then146
  %100 = load %struct.bNode*, %struct.bNode** %tnode147, align 8, !dbg !4460
  %tobool151 = icmp ne %struct.bNode* %100, null, !dbg !4462
  br i1 %tobool151, label %for.body152, label %for.end168, !dbg !4462

for.body152:                                      ; preds = %for.cond150
  %101 = load %struct.bNode*, %struct.bNode** %tnode147, align 8, !dbg !4463
  %type153 = getelementptr inbounds %struct.bNode, %struct.bNode* %101, i32 0, i32 8, !dbg !4463
  %102 = load i16, i16* %type153, align 4, !dbg !4463
  %conv154 = sext i16 %102 to i32, !dbg !4463
  %cmp155 = icmp eq i32 %conv154, 201, !dbg !4463
  br i1 %cmp155, label %if.then162, label %lor.lhs.false157, !dbg !4463

lor.lhs.false157:                                 ; preds = %for.body152
  %103 = load %struct.bNode*, %struct.bNode** %tnode147, align 8, !dbg !4463
  %type158 = getelementptr inbounds %struct.bNode, %struct.bNode* %103, i32 0, i32 8, !dbg !4463
  %104 = load i16, i16* %type158, align 4, !dbg !4463
  %conv159 = sext i16 %104 to i32, !dbg !4463
  %cmp160 = icmp eq i32 %conv159, 240, !dbg !4463
  br i1 %cmp160, label %if.then162, label %if.end165, !dbg !4465

if.then162:                                       ; preds = %lor.lhs.false157, %for.body152
  %105 = load %struct.bNode*, %struct.bNode** %tnode147, align 8, !dbg !4466
  %flag163 = getelementptr inbounds %struct.bNode, %struct.bNode* %105, i32 0, i32 7, !dbg !4467
  %106 = load i32, i32* %flag163, align 8, !dbg !4468
  %and164 = and i32 %106, -65, !dbg !4468
  store i32 %and164, i32* %flag163, align 8, !dbg !4468
  br label %if.end165, !dbg !4466

if.end165:                                        ; preds = %if.then162, %lor.lhs.false157
  br label %for.inc166, !dbg !4463

for.inc166:                                       ; preds = %if.end165
  %107 = load %struct.bNode*, %struct.bNode** %tnode147, align 8, !dbg !4469
  %next167 = getelementptr inbounds %struct.bNode, %struct.bNode* %107, i32 0, i32 0, !dbg !4470
  %108 = load %struct.bNode*, %struct.bNode** %next167, align 8, !dbg !4470
  store %struct.bNode* %108, %struct.bNode** %tnode147, align 8, !dbg !4471
  br label %for.cond150, !dbg !4472, !llvm.loop !4473

for.end168:                                       ; preds = %for.cond150
  %109 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4475
  %flag169 = getelementptr inbounds %struct.bNode, %struct.bNode* %109, i32 0, i32 7, !dbg !4476
  %110 = load i32, i32* %flag169, align 8, !dbg !4477
  %or170 = or i32 %110, 64, !dbg !4477
  store i32 %or170, i32* %flag169, align 8, !dbg !4477
  %111 = load i8, i8* %was_output, align 1, !dbg !4478
  %conv171 = zext i8 %111 to i32, !dbg !4478
  %cmp172 = icmp eq i32 %conv171, 0, !dbg !4480
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !4481

if.then174:                                       ; preds = %for.end168
  %112 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4482
  %113 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4483
  call void @ED_node_tag_update_nodetree(%struct.Main* %112, %struct.bNodeTree* %113), !dbg !4484
  br label %if.end175, !dbg !4484

if.end175:                                        ; preds = %if.then174, %for.end168
  %call176 = call %struct.Image* @BKE_image_verify_viewer(i32 5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0)), !dbg !4485
  %114 = bitcast %struct.Image* %call176 to %struct.ID*, !dbg !4486
  %115 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4487
  %id177 = getelementptr inbounds %struct.bNode, %struct.bNode* %115, i32 0, i32 20, !dbg !4488
  store %struct.ID* %114, %struct.ID** %id177, align 8, !dbg !4489
  br label %if.end261, !dbg !4490

if.else178:                                       ; preds = %lor.lhs.false141
  %116 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4491
  %type179 = getelementptr inbounds %struct.bNode, %struct.bNode* %116, i32 0, i32 8, !dbg !4493
  %117 = load i16, i16* %type179, align 4, !dbg !4493
  %conv180 = sext i16 %117 to i32, !dbg !4491
  %cmp181 = icmp eq i32 %conv180, 221, !dbg !4494
  br i1 %cmp181, label %if.then183, label %if.else225, !dbg !4495

if.then183:                                       ; preds = %if.else178
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !4496, metadata !DIExpression()), !dbg !4498
  %118 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4499
  %scene184 = getelementptr inbounds %struct.Main, %struct.Main* %118, i32 0, i32 11, !dbg !4501
  %first185 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene184, i32 0, i32 0, !dbg !4502
  %119 = load i8*, i8** %first185, align 8, !dbg !4502
  %120 = bitcast i8* %119 to %struct.Scene*, !dbg !4499
  store %struct.Scene* %120, %struct.Scene** %scene, align 8, !dbg !4503
  br label %for.cond186, !dbg !4504

for.cond186:                                      ; preds = %for.inc221, %if.then183
  %121 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4505
  %tobool187 = icmp ne %struct.Scene* %121, null, !dbg !4507
  br i1 %tobool187, label %for.body188, label %for.end224, !dbg !4507

for.body188:                                      ; preds = %for.cond186
  %122 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4508
  %nodetree189 = getelementptr inbounds %struct.Scene, %struct.Scene* %122, i32 0, i32 18, !dbg !4511
  %123 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree189, align 8, !dbg !4511
  %tobool190 = icmp ne %struct.bNodeTree* %123, null, !dbg !4508
  br i1 %tobool190, label %land.lhs.true191, label %if.end220, !dbg !4512

land.lhs.true191:                                 ; preds = %for.body188
  %124 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4513
  %use_nodes192 = getelementptr inbounds %struct.Scene, %struct.Scene* %124, i32 0, i32 16, !dbg !4514
  %125 = load i8, i8* %use_nodes192, align 2, !dbg !4514
  %conv193 = zext i8 %125 to i32, !dbg !4513
  %tobool194 = icmp ne i32 %conv193, 0, !dbg !4513
  br i1 %tobool194, label %land.lhs.true195, label %if.end220, !dbg !4515

land.lhs.true195:                                 ; preds = %land.lhs.true191
  %126 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4516
  %nodetree196 = getelementptr inbounds %struct.Scene, %struct.Scene* %126, i32 0, i32 18, !dbg !4517
  %127 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree196, align 8, !dbg !4517
  %128 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4518
  %call197 = call zeroext i8 @ntreeHasTree(%struct.bNodeTree* %127, %struct.bNodeTree* %128), !dbg !4519
  %conv198 = zext i8 %call197 to i32, !dbg !4519
  %tobool199 = icmp ne i32 %conv198, 0, !dbg !4519
  br i1 %tobool199, label %if.then200, label %if.end220, !dbg !4520

if.then200:                                       ; preds = %land.lhs.true195
  %129 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4521
  %id201 = getelementptr inbounds %struct.bNode, %struct.bNode* %129, i32 0, i32 20, !dbg !4524
  %130 = load %struct.ID*, %struct.ID** %id201, align 8, !dbg !4524
  %cmp202 = icmp eq %struct.ID* %130, null, !dbg !4525
  br i1 %cmp202, label %if.then208, label %lor.lhs.false204, !dbg !4526

lor.lhs.false204:                                 ; preds = %if.then200
  %131 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4527
  %id205 = getelementptr inbounds %struct.bNode, %struct.bNode* %131, i32 0, i32 20, !dbg !4528
  %132 = load %struct.ID*, %struct.ID** %id205, align 8, !dbg !4528
  %133 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4529
  %134 = bitcast %struct.Scene* %133 to %struct.ID*, !dbg !4530
  %cmp206 = icmp eq %struct.ID* %132, %134, !dbg !4531
  br i1 %cmp206, label %if.then208, label %if.end219, !dbg !4532

if.then208:                                       ; preds = %lor.lhs.false204, %if.then200
  call void @llvm.dbg.declare(metadata i32* %num_layers, metadata !4533, metadata !DIExpression()), !dbg !4535
  %135 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4536
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %135, i32 0, i32 22, !dbg !4537
  %layers = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 60, !dbg !4538
  %call209 = call i32 @BLI_countlist(%struct.ListBase* %layers), !dbg !4539
  store i32 %call209, i32* %num_layers, align 4, !dbg !4535
  %136 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4540
  %custom1 = getelementptr inbounds %struct.bNode, %struct.bNode* %136, i32 0, i32 33, !dbg !4541
  %137 = load i16, i16* %custom1, align 8, !dbg !4541
  %138 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4542
  %r210 = getelementptr inbounds %struct.Scene, %struct.Scene* %138, i32 0, i32 22, !dbg !4543
  %actlay = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r210, i32 0, i32 61, !dbg !4544
  store i16 %137, i16* %actlay, align 8, !dbg !4545
  %139 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4546
  %r211 = getelementptr inbounds %struct.Scene, %struct.Scene* %139, i32 0, i32 22, !dbg !4547
  %actlay212 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r211, i32 0, i32 61, !dbg !4548
  %140 = load i16, i16* %actlay212, align 8, !dbg !4548
  %conv213 = sitofp i16 %140 to float, !dbg !4546
  %141 = load i32, i32* %num_layers, align 4, !dbg !4549
  %sub = sub nsw i32 %141, 1, !dbg !4550
  %conv214 = sitofp i32 %sub to float, !dbg !4549
  %call215 = call float @min_ff(float %conv213, float %conv214), !dbg !4551
  %conv216 = fptosi float %call215 to i16, !dbg !4551
  %142 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4552
  %r217 = getelementptr inbounds %struct.Scene, %struct.Scene* %142, i32 0, i32 22, !dbg !4553
  %actlay218 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r217, i32 0, i32 61, !dbg !4554
  store i16 %conv216, i16* %actlay218, align 8, !dbg !4555
  br label %if.end219, !dbg !4556

if.end219:                                        ; preds = %if.then208, %lor.lhs.false204
  br label %if.end220, !dbg !4557

if.end220:                                        ; preds = %if.end219, %land.lhs.true195, %land.lhs.true191, %for.body188
  br label %for.inc221, !dbg !4558

for.inc221:                                       ; preds = %if.end220
  %143 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4559
  %id222 = getelementptr inbounds %struct.Scene, %struct.Scene* %143, i32 0, i32 0, !dbg !4560
  %next223 = getelementptr inbounds %struct.ID, %struct.ID* %id222, i32 0, i32 0, !dbg !4561
  %144 = load i8*, i8** %next223, align 8, !dbg !4561
  %145 = bitcast i8* %144 to %struct.Scene*, !dbg !4559
  store %struct.Scene* %145, %struct.Scene** %scene, align 8, !dbg !4562
  br label %for.cond186, !dbg !4563, !llvm.loop !4564

for.end224:                                       ; preds = %for.cond186
  br label %if.end260, !dbg !4566

if.else225:                                       ; preds = %if.else178
  %146 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4567
  %type226 = getelementptr inbounds %struct.bNode, %struct.bNode* %146, i32 0, i32 8, !dbg !4569
  %147 = load i16, i16* %type226, align 4, !dbg !4569
  %conv227 = sext i16 %147 to i32, !dbg !4567
  %cmp228 = icmp eq i32 %conv227, 222, !dbg !4570
  br i1 %cmp228, label %if.then230, label %if.else255, !dbg !4571

if.then230:                                       ; preds = %if.else225
  %148 = load i8, i8* %was_output, align 1, !dbg !4572
  %conv231 = zext i8 %148 to i32, !dbg !4572
  %cmp232 = icmp eq i32 %conv231, 0, !dbg !4575
  br i1 %cmp232, label %if.then234, label %if.end254, !dbg !4576

if.then234:                                       ; preds = %if.then230
  call void @llvm.dbg.declare(metadata %struct.bNode** %tnode235, metadata !4577, metadata !DIExpression()), !dbg !4579
  %149 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4580
  %nodes236 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %149, i32 0, i32 7, !dbg !4582
  %first237 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes236, i32 0, i32 0, !dbg !4583
  %150 = load i8*, i8** %first237, align 8, !dbg !4583
  %151 = bitcast i8* %150 to %struct.bNode*, !dbg !4580
  store %struct.bNode* %151, %struct.bNode** %tnode235, align 8, !dbg !4584
  br label %for.cond238, !dbg !4585

for.cond238:                                      ; preds = %for.inc249, %if.then234
  %152 = load %struct.bNode*, %struct.bNode** %tnode235, align 8, !dbg !4586
  %tobool239 = icmp ne %struct.bNode* %152, null, !dbg !4588
  br i1 %tobool239, label %for.body240, label %for.end251, !dbg !4588

for.body240:                                      ; preds = %for.cond238
  %153 = load %struct.bNode*, %struct.bNode** %tnode235, align 8, !dbg !4589
  %type241 = getelementptr inbounds %struct.bNode, %struct.bNode* %153, i32 0, i32 8, !dbg !4591
  %154 = load i16, i16* %type241, align 4, !dbg !4591
  %conv242 = sext i16 %154 to i32, !dbg !4589
  %cmp243 = icmp eq i32 %conv242, 222, !dbg !4592
  br i1 %cmp243, label %if.then245, label %if.end248, !dbg !4593

if.then245:                                       ; preds = %for.body240
  %155 = load %struct.bNode*, %struct.bNode** %tnode235, align 8, !dbg !4594
  %flag246 = getelementptr inbounds %struct.bNode, %struct.bNode* %155, i32 0, i32 7, !dbg !4595
  %156 = load i32, i32* %flag246, align 8, !dbg !4596
  %and247 = and i32 %156, -65, !dbg !4596
  store i32 %and247, i32* %flag246, align 8, !dbg !4596
  br label %if.end248, !dbg !4594

if.end248:                                        ; preds = %if.then245, %for.body240
  br label %for.inc249, !dbg !4597

for.inc249:                                       ; preds = %if.end248
  %157 = load %struct.bNode*, %struct.bNode** %tnode235, align 8, !dbg !4598
  %next250 = getelementptr inbounds %struct.bNode, %struct.bNode* %157, i32 0, i32 0, !dbg !4599
  %158 = load %struct.bNode*, %struct.bNode** %next250, align 8, !dbg !4599
  store %struct.bNode* %158, %struct.bNode** %tnode235, align 8, !dbg !4600
  br label %for.cond238, !dbg !4601, !llvm.loop !4602

for.end251:                                       ; preds = %for.cond238
  %159 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4604
  %flag252 = getelementptr inbounds %struct.bNode, %struct.bNode* %159, i32 0, i32 7, !dbg !4605
  %160 = load i32, i32* %flag252, align 8, !dbg !4606
  %or253 = or i32 %160, 64, !dbg !4606
  store i32 %or253, i32* %flag252, align 8, !dbg !4606
  %161 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4607
  %162 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4608
  call void @ED_node_tag_update_nodetree(%struct.Main* %161, %struct.bNodeTree* %162), !dbg !4609
  br label %if.end254, !dbg !4610

if.end254:                                        ; preds = %for.end251, %if.then230
  br label %if.end259, !dbg !4611

if.else255:                                       ; preds = %if.else225
  %163 = load i8, i8* %do_update, align 1, !dbg !4612
  %tobool256 = icmp ne i8 %163, 0, !dbg !4612
  br i1 %tobool256, label %if.then257, label %if.end258, !dbg !4614

if.then257:                                       ; preds = %if.else255
  %164 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4615
  %165 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4616
  call void @ED_node_tag_update_nodetree(%struct.Main* %164, %struct.bNodeTree* %165), !dbg !4617
  br label %if.end258, !dbg !4617

if.end258:                                        ; preds = %if.then257, %if.else255
  br label %if.end259

if.end259:                                        ; preds = %if.end258, %if.end254
  br label %if.end260

if.end260:                                        ; preds = %if.end259, %for.end224
  br label %if.end261

if.end261:                                        ; preds = %if.end260, %if.end175
  br label %if.end268, !dbg !4618

if.else262:                                       ; preds = %if.else132
  %166 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4619
  %type263 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %166, i32 0, i32 9, !dbg !4621
  %167 = load i32, i32* %type263, align 8, !dbg !4621
  %cmp264 = icmp eq i32 %167, 2, !dbg !4622
  br i1 %cmp264, label %if.then266, label %if.end267, !dbg !4623

if.then266:                                       ; preds = %if.else262
  br label %if.end267, !dbg !4624

if.end267:                                        ; preds = %if.then266, %if.else262
  br label %if.end268

if.end268:                                        ; preds = %if.end267, %if.end261
  br label %if.end269

if.end269:                                        ; preds = %if.end268, %if.end130
  br label %if.end270, !dbg !4626

if.end270:                                        ; preds = %if.end269, %entry
  ret void, !dbg !4627
}

declare dso_local void @nodeClearActiveID(%struct.bNodeTree*, i16 signext) #2

declare dso_local void @ED_node_tag_update_nodetree(%struct.Main*, %struct.bNodeTree*) #2

declare dso_local void @GPU_material_free(%struct.Material*) #2

declare dso_local void @WM_main_add_notifier(i32, i8*) #2

declare dso_local i32 @BLI_countlist(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !4628 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !4632, metadata !DIExpression()), !dbg !4633
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !4634, metadata !DIExpression()), !dbg !4635
  %0 = load float, float* %a.addr, align 4, !dbg !4636
  %1 = load float, float* %b.addr, align 4, !dbg !4637
  %cmp = fcmp olt float %0, %1, !dbg !4638
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4639

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !4640
  br label %cond.end, !dbg !4639

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !4641
  br label %cond.end, !dbg !4639

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !4639
  ret float %cond, !dbg !4642
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_node_post_apply_transform(%struct.bContext* %UNUSED_C, %struct.bNodeTree* %UNUSED_ntree) #0 !dbg !4643 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %UNUSED_ntree.addr = alloca %struct.bNodeTree*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !4646, metadata !DIExpression()), !dbg !4647
  store %struct.bNodeTree* %UNUSED_ntree, %struct.bNodeTree** %UNUSED_ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %UNUSED_ntree.addr, metadata !4648, metadata !DIExpression()), !dbg !4649
  ret void, !dbg !4650
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_resize(%struct.wmOperatorType* %ot) #0 !dbg !4651 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4652, metadata !DIExpression()), !dbg !4653
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4654
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4655
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i8** %name, align 8, !dbg !4656
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4657
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4658
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i8** %idname, align 8, !dbg !4659
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4660
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4661
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8** %description, align 8, !dbg !4662
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4663
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4664
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @node_resize_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4665
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4666
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !4667
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @node_resize_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !4668
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4669
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !4670
  store i32 (%struct.bContext*)* @ED_operator_node_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !4671
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4672
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 7, !dbg !4673
  store void (%struct.bContext*, %struct.wmOperator*)* @node_resize_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !4674
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4675
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 19, !dbg !4676
  store i16 4, i16* %flag, align 8, !dbg !4677
  ret void, !dbg !4678
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_resize_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !4679 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %node = alloca %struct.bNode*, align 8
  %dir = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4687, metadata !DIExpression()), !dbg !4688
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4689, metadata !DIExpression()), !dbg !4690
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !4691, metadata !DIExpression()), !dbg !4692
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !4693, metadata !DIExpression()), !dbg !4694
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4695
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !4696
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !4694
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !4697, metadata !DIExpression()), !dbg !4700
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4701
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %1), !dbg !4702
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !4700
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !4703, metadata !DIExpression()), !dbg !4704
  %2 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4705
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %2, i32 0, i32 19, !dbg !4706
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !4706
  %call2 = call %struct.bNode* @nodeGetActive(%struct.bNodeTree* %3), !dbg !4707
  store %struct.bNode* %call2, %struct.bNode** %node, align 8, !dbg !4704
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !4708, metadata !DIExpression()), !dbg !4709
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4710
  %tobool = icmp ne %struct.bNode* %4, null, !dbg !4710
  br i1 %tobool, label %if.then, label %if.end18, !dbg !4712

if.then:                                          ; preds = %entry
  %5 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4713
  %v2d = getelementptr inbounds %struct.ARegion, %struct.ARegion* %5, i32 0, i32 2, !dbg !4715
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4716
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 6, !dbg !4717
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !4716
  %7 = load i32, i32* %arrayidx, align 4, !dbg !4716
  %conv = sitofp i32 %7 to float, !dbg !4716
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4718
  %mval3 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 6, !dbg !4719
  %arrayidx4 = getelementptr inbounds [2 x i32], [2 x i32]* %mval3, i64 0, i64 1, !dbg !4718
  %9 = load i32, i32* %arrayidx4, align 4, !dbg !4718
  %conv5 = sitofp i32 %9 to float, !dbg !4718
  %10 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4720
  %cursor = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %10, i32 0, i32 16, !dbg !4721
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %cursor, i64 0, i64 0, !dbg !4720
  %11 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4722
  %cursor7 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %11, i32 0, i32 16, !dbg !4723
  %arrayidx8 = getelementptr inbounds [2 x float], [2 x float]* %cursor7, i64 0, i64 1, !dbg !4722
  call void @UI_view2d_region_to_view(%struct.View2D* %v2d, float %conv, float %conv5, float* %arrayidx6, float* %arrayidx8), !dbg !4724
  %12 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4725
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %12, i32 0, i32 4, !dbg !4726
  %13 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !4726
  %resize_area_func = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %13, i32 0, i32 26, !dbg !4727
  %14 = load i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)** %resize_area_func, align 8, !dbg !4727
  %15 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4728
  %16 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4729
  %cursor9 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %16, i32 0, i32 16, !dbg !4730
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %cursor9, i64 0, i64 0, !dbg !4729
  %17 = load float, float* %arrayidx10, align 8, !dbg !4729
  %conv11 = fptosi float %17 to i32, !dbg !4729
  %18 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4731
  %cursor12 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %18, i32 0, i32 16, !dbg !4732
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* %cursor12, i64 0, i64 1, !dbg !4731
  %19 = load float, float* %arrayidx13, align 4, !dbg !4731
  %conv14 = fptosi float %19 to i32, !dbg !4731
  %call15 = call i32 %14(%struct.bNode* %15, i32 %conv11, i32 %conv14), !dbg !4725
  store i32 %call15, i32* %dir, align 4, !dbg !4733
  %20 = load i32, i32* %dir, align 4, !dbg !4734
  %cmp = icmp ne i32 %20, 0, !dbg !4736
  br i1 %cmp, label %if.then17, label %if.end, !dbg !4737

if.then17:                                        ; preds = %if.then
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4738
  %22 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4740
  %23 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4741
  %24 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4742
  %25 = load i32, i32* %dir, align 4, !dbg !4743
  call void @node_resize_init(%struct.bContext* %21, %struct.wmOperator* %22, %struct.wmEvent* %23, %struct.bNode* %24, i32 %25), !dbg !4744
  store i32 1, i32* %retval, align 4, !dbg !4745
  br label %return, !dbg !4745

if.end:                                           ; preds = %if.then
  br label %if.end18, !dbg !4746

if.end18:                                         ; preds = %if.end, %entry
  store i32 10, i32* %retval, align 4, !dbg !4747
  br label %return, !dbg !4747

return:                                           ; preds = %if.end18, %if.then17
  %26 = load i32, i32* %retval, align 4, !dbg !4748
  ret i32 %26, !dbg !4748
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_resize_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !4749 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %node = alloca %struct.bNode*, align 8
  %nsw = alloca %struct.NodeSizeWidget*, align 8
  %mx = alloca float, align 4
  %my = alloca float, align 4
  %dx = alloca float, align 4
  %dy = alloca float, align 4
  %pwidth = alloca float*, align 8
  %oldwidth = alloca float, align 4
  %widthmin = alloca float, align 4
  %widthmax = alloca float, align 4
  %use_hidden = alloca i8, align 1
  %locmax = alloca float, align 4
  %heightmin = alloca float, align 4
  %heightmax = alloca float, align 4
  %locmin = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4750, metadata !DIExpression()), !dbg !4751
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4752, metadata !DIExpression()), !dbg !4753
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !4754, metadata !DIExpression()), !dbg !4755
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !4756, metadata !DIExpression()), !dbg !4757
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4758
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !4759
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !4757
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !4760, metadata !DIExpression()), !dbg !4761
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4762
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %1), !dbg !4763
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !4761
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !4764, metadata !DIExpression()), !dbg !4765
  %2 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4766
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %2, i32 0, i32 19, !dbg !4767
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !4767
  %call2 = call %struct.bNode* @nodeGetActive(%struct.bNodeTree* %3), !dbg !4768
  store %struct.bNode* %call2, %struct.bNode** %node, align 8, !dbg !4765
  call void @llvm.dbg.declare(metadata %struct.NodeSizeWidget** %nsw, metadata !4769, metadata !DIExpression()), !dbg !4784
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4785
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 5, !dbg !4786
  %5 = load i8*, i8** %customdata, align 8, !dbg !4786
  %6 = bitcast i8* %5 to %struct.NodeSizeWidget*, !dbg !4785
  store %struct.NodeSizeWidget* %6, %struct.NodeSizeWidget** %nsw, align 8, !dbg !4784
  call void @llvm.dbg.declare(metadata float* %mx, metadata !4787, metadata !DIExpression()), !dbg !4788
  call void @llvm.dbg.declare(metadata float* %my, metadata !4789, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.declare(metadata float* %dx, metadata !4791, metadata !DIExpression()), !dbg !4792
  call void @llvm.dbg.declare(metadata float* %dy, metadata !4793, metadata !DIExpression()), !dbg !4794
  %7 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4795
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 2, !dbg !4796
  %8 = load i16, i16* %type, align 8, !dbg !4796
  %conv = sext i16 %8 to i32, !dbg !4795
  switch i32 %conv, label %sw.epilog [
    i32 4, label %sw.bb
    i32 1, label %sw.bb177
    i32 2, label %sw.bb177
    i32 3, label %sw.bb177
  ], !dbg !4797

sw.bb:                                            ; preds = %entry
  %9 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4798
  %v2d = getelementptr inbounds %struct.ARegion, %struct.ARegion* %9, i32 0, i32 2, !dbg !4800
  %10 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4801
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %10, i32 0, i32 6, !dbg !4802
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !4801
  %11 = load i32, i32* %arrayidx, align 4, !dbg !4801
  %conv3 = sitofp i32 %11 to float, !dbg !4801
  %12 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4803
  %mval4 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %12, i32 0, i32 6, !dbg !4804
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %mval4, i64 0, i64 1, !dbg !4803
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !4803
  %conv6 = sitofp i32 %13 to float, !dbg !4803
  call void @UI_view2d_region_to_view(%struct.View2D* %v2d, float %conv3, float %conv6, float* %mx, float* %my), !dbg !4805
  %14 = load float, float* %mx, align 4, !dbg !4806
  %15 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !4807
  %mxstart = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %15, i32 0, i32 0, !dbg !4808
  %16 = load float, float* %mxstart, align 4, !dbg !4808
  %sub = fsub float %14, %16, !dbg !4809
  %17 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !4810
  %18 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !4810
  %conv7 = sitofp i32 %18 to float, !dbg !4810
  %mul = fmul float %17, %conv7, !dbg !4810
  %div = fdiv float %mul, 7.200000e+01, !dbg !4810
  %div8 = fdiv float %sub, %div, !dbg !4811
  store float %div8, float* %dx, align 4, !dbg !4812
  %19 = load float, float* %my, align 4, !dbg !4813
  %20 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !4814
  %mystart = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %20, i32 0, i32 1, !dbg !4815
  %21 = load float, float* %mystart, align 4, !dbg !4815
  %sub9 = fsub float %19, %21, !dbg !4816
  %22 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !4817
  %23 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !4817
  %conv10 = sitofp i32 %23 to float, !dbg !4817
  %mul11 = fmul float %22, %conv10, !dbg !4817
  %div12 = fdiv float %mul11, 7.200000e+01, !dbg !4817
  %div13 = fdiv float %sub9, %div12, !dbg !4818
  store float %div13, float* %dy, align 4, !dbg !4819
  %24 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4820
  %tobool = icmp ne %struct.bNode* %24, null, !dbg !4820
  br i1 %tobool, label %if.then, label %if.end176, !dbg !4822

if.then:                                          ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata float** %pwidth, metadata !4823, metadata !DIExpression()), !dbg !4825
  call void @llvm.dbg.declare(metadata float* %oldwidth, metadata !4826, metadata !DIExpression()), !dbg !4827
  call void @llvm.dbg.declare(metadata float* %widthmin, metadata !4828, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.declare(metadata float* %widthmax, metadata !4830, metadata !DIExpression()), !dbg !4831
  call void @llvm.dbg.declare(metadata i8* %use_hidden, metadata !4832, metadata !DIExpression()), !dbg !4833
  %25 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4834
  %type14 = getelementptr inbounds %struct.bNode, %struct.bNode* %25, i32 0, i32 8, !dbg !4835
  %26 = load i16, i16* %type14, align 4, !dbg !4835
  %conv15 = sext i16 %26 to i32, !dbg !4834
  %cmp = icmp ne i32 %conv15, 5, !dbg !4836
  %conv16 = zext i1 %cmp to i32, !dbg !4836
  %conv17 = trunc i32 %conv16 to i8, !dbg !4837
  store i8 %conv17, i8* %use_hidden, align 1, !dbg !4833
  %27 = load i8, i8* %use_hidden, align 1, !dbg !4838
  %conv18 = zext i8 %27 to i32, !dbg !4838
  %tobool19 = icmp ne i32 %conv18, 0, !dbg !4838
  br i1 %tobool19, label %land.lhs.true, label %if.else, !dbg !4840

land.lhs.true:                                    ; preds = %if.then
  %28 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4841
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %28, i32 0, i32 7, !dbg !4842
  %29 = load i32, i32* %flag, align 8, !dbg !4842
  %and = and i32 %29, 8, !dbg !4843
  %tobool20 = icmp ne i32 %and, 0, !dbg !4843
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !4844

if.then21:                                        ; preds = %land.lhs.true
  %30 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4845
  %miniwidth = getelementptr inbounds %struct.bNode, %struct.bNode* %30, i32 0, i32 28, !dbg !4847
  store float* %miniwidth, float** %pwidth, align 8, !dbg !4848
  %31 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !4849
  %oldminiwidth = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %31, i32 0, i32 8, !dbg !4850
  %32 = load float, float* %oldminiwidth, align 4, !dbg !4850
  store float %32, float* %oldwidth, align 4, !dbg !4851
  store float 0.000000e+00, float* %widthmin, align 4, !dbg !4852
  store float 1.000000e+02, float* %widthmax, align 4, !dbg !4853
  br label %if.end, !dbg !4854

if.else:                                          ; preds = %land.lhs.true, %if.then
  %33 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4855
  %width = getelementptr inbounds %struct.bNode, %struct.bNode* %33, i32 0, i32 26, !dbg !4857
  store float* %width, float** %pwidth, align 8, !dbg !4858
  %34 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !4859
  %oldwidth22 = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %34, i32 0, i32 6, !dbg !4860
  %35 = load float, float* %oldwidth22, align 4, !dbg !4860
  store float %35, float* %oldwidth, align 4, !dbg !4861
  %36 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4862
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %36, i32 0, i32 4, !dbg !4863
  %37 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !4863
  %minwidth = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %37, i32 0, i32 9, !dbg !4864
  %38 = load float, float* %minwidth, align 8, !dbg !4864
  store float %38, float* %widthmin, align 4, !dbg !4865
  %39 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4866
  %typeinfo23 = getelementptr inbounds %struct.bNode, %struct.bNode* %39, i32 0, i32 4, !dbg !4867
  %40 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo23, align 8, !dbg !4867
  %maxwidth = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %40, i32 0, i32 10, !dbg !4868
  %41 = load float, float* %maxwidth, align 4, !dbg !4868
  store float %41, float* %widthmax, align 4, !dbg !4869
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then21
  %42 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !4870
  %directions = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %42, i32 0, i32 9, !dbg !4873
  %43 = load i32, i32* %directions, align 4, !dbg !4873
  %and24 = and i32 %43, 4, !dbg !4874
  %tobool25 = icmp ne i32 %and24, 0, !dbg !4874
  br i1 %tobool25, label %if.then26, label %if.end36, !dbg !4875

if.then26:                                        ; preds = %if.end
  %44 = load float, float* %oldwidth, align 4, !dbg !4876
  %45 = load float, float* %dx, align 4, !dbg !4878
  %add = fadd float %44, %45, !dbg !4879
  %46 = load float*, float** %pwidth, align 8, !dbg !4880
  store float %add, float* %46, align 4, !dbg !4881
  %47 = load float*, float** %pwidth, align 8, !dbg !4882
  %48 = load float, float* %47, align 4, !dbg !4882
  %49 = load float, float* %widthmin, align 4, !dbg !4882
  %cmp27 = fcmp olt float %48, %49, !dbg !4882
  br i1 %cmp27, label %if.then29, label %if.else30, !dbg !4885

if.then29:                                        ; preds = %if.then26
  %50 = load float, float* %widthmin, align 4, !dbg !4882
  %51 = load float*, float** %pwidth, align 8, !dbg !4882
  store float %50, float* %51, align 4, !dbg !4882
  br label %if.end35, !dbg !4882

if.else30:                                        ; preds = %if.then26
  %52 = load float*, float** %pwidth, align 8, !dbg !4886
  %53 = load float, float* %52, align 4, !dbg !4886
  %54 = load float, float* %widthmax, align 4, !dbg !4886
  %cmp31 = fcmp ogt float %53, %54, !dbg !4886
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !4882

if.then33:                                        ; preds = %if.else30
  %55 = load float, float* %widthmax, align 4, !dbg !4886
  %56 = load float*, float** %pwidth, align 8, !dbg !4886
  store float %55, float* %56, align 4, !dbg !4886
  br label %if.end34, !dbg !4886

if.end34:                                         ; preds = %if.then33, %if.else30
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then29
  br label %if.end36, !dbg !4888

if.end36:                                         ; preds = %if.end35, %if.end
  %57 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !4889
  %directions37 = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %57, i32 0, i32 9, !dbg !4891
  %58 = load i32, i32* %directions37, align 4, !dbg !4891
  %and38 = and i32 %58, 8, !dbg !4892
  %tobool39 = icmp ne i32 %and38, 0, !dbg !4892
  br i1 %tobool39, label %if.then40, label %if.end63, !dbg !4893

if.then40:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata float* %locmax, metadata !4894, metadata !DIExpression()), !dbg !4896
  %59 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !4897
  %oldlocx = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %59, i32 0, i32 2, !dbg !4898
  %60 = load float, float* %oldlocx, align 4, !dbg !4898
  %61 = load float, float* %oldwidth, align 4, !dbg !4899
  %add41 = fadd float %60, %61, !dbg !4900
  store float %add41, float* %locmax, align 4, !dbg !4896
  %62 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !4901
  %oldlocx42 = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %62, i32 0, i32 2, !dbg !4902
  %63 = load float, float* %oldlocx42, align 4, !dbg !4902
  %64 = load float, float* %dx, align 4, !dbg !4903
  %add43 = fadd float %63, %64, !dbg !4904
  %65 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4905
  %locx = getelementptr inbounds %struct.bNode, %struct.bNode* %65, i32 0, i32 24, !dbg !4906
  store float %add43, float* %locx, align 8, !dbg !4907
  %66 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4908
  %locx44 = getelementptr inbounds %struct.bNode, %struct.bNode* %66, i32 0, i32 24, !dbg !4908
  %67 = load float, float* %locx44, align 8, !dbg !4908
  %68 = load float, float* %locmax, align 4, !dbg !4908
  %69 = load float, float* %widthmax, align 4, !dbg !4908
  %sub45 = fsub float %68, %69, !dbg !4908
  %cmp46 = fcmp olt float %67, %sub45, !dbg !4908
  br i1 %cmp46, label %if.then48, label %if.else51, !dbg !4911

if.then48:                                        ; preds = %if.then40
  %70 = load float, float* %locmax, align 4, !dbg !4908
  %71 = load float, float* %widthmax, align 4, !dbg !4908
  %sub49 = fsub float %70, %71, !dbg !4908
  %72 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4908
  %locx50 = getelementptr inbounds %struct.bNode, %struct.bNode* %72, i32 0, i32 24, !dbg !4908
  store float %sub49, float* %locx50, align 8, !dbg !4908
  br label %if.end60, !dbg !4908

if.else51:                                        ; preds = %if.then40
  %73 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4912
  %locx52 = getelementptr inbounds %struct.bNode, %struct.bNode* %73, i32 0, i32 24, !dbg !4912
  %74 = load float, float* %locx52, align 8, !dbg !4912
  %75 = load float, float* %locmax, align 4, !dbg !4912
  %76 = load float, float* %widthmin, align 4, !dbg !4912
  %sub53 = fsub float %75, %76, !dbg !4912
  %cmp54 = fcmp ogt float %74, %sub53, !dbg !4912
  br i1 %cmp54, label %if.then56, label %if.end59, !dbg !4908

if.then56:                                        ; preds = %if.else51
  %77 = load float, float* %locmax, align 4, !dbg !4912
  %78 = load float, float* %widthmin, align 4, !dbg !4912
  %sub57 = fsub float %77, %78, !dbg !4912
  %79 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4912
  %locx58 = getelementptr inbounds %struct.bNode, %struct.bNode* %79, i32 0, i32 24, !dbg !4912
  store float %sub57, float* %locx58, align 8, !dbg !4912
  br label %if.end59, !dbg !4912

if.end59:                                         ; preds = %if.then56, %if.else51
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then48
  %80 = load float, float* %locmax, align 4, !dbg !4914
  %81 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4915
  %locx61 = getelementptr inbounds %struct.bNode, %struct.bNode* %81, i32 0, i32 24, !dbg !4916
  %82 = load float, float* %locx61, align 8, !dbg !4916
  %sub62 = fsub float %80, %82, !dbg !4917
  %83 = load float*, float** %pwidth, align 8, !dbg !4918
  store float %sub62, float* %83, align 4, !dbg !4919
  br label %if.end63, !dbg !4920

if.end63:                                         ; preds = %if.end60, %if.end36
  call void @llvm.dbg.declare(metadata float* %heightmin, metadata !4921, metadata !DIExpression()), !dbg !4923
  %84 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !4924
  %85 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !4924
  %conv64 = sitofp i32 %85 to float, !dbg !4924
  %mul65 = fmul float %84, %conv64, !dbg !4924
  %div66 = fdiv float %mul65, 7.200000e+01, !dbg !4924
  %86 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4925
  %typeinfo67 = getelementptr inbounds %struct.bNode, %struct.bNode* %86, i32 0, i32 4, !dbg !4926
  %87 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo67, align 8, !dbg !4926
  %minheight = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %87, i32 0, i32 12, !dbg !4927
  %88 = load float, float* %minheight, align 4, !dbg !4927
  %mul68 = fmul float %div66, %88, !dbg !4928
  store float %mul68, float* %heightmin, align 4, !dbg !4923
  call void @llvm.dbg.declare(metadata float* %heightmax, metadata !4929, metadata !DIExpression()), !dbg !4930
  %89 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !4931
  %90 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !4931
  %conv69 = sitofp i32 %90 to float, !dbg !4931
  %mul70 = fmul float %89, %conv69, !dbg !4931
  %div71 = fdiv float %mul70, 7.200000e+01, !dbg !4931
  %91 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4932
  %typeinfo72 = getelementptr inbounds %struct.bNode, %struct.bNode* %91, i32 0, i32 4, !dbg !4933
  %92 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo72, align 8, !dbg !4933
  %maxheight = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %92, i32 0, i32 13, !dbg !4934
  %93 = load float, float* %maxheight, align 8, !dbg !4934
  %mul73 = fmul float %div71, %93, !dbg !4935
  store float %mul73, float* %heightmax, align 4, !dbg !4930
  %94 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !4936
  %directions74 = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %94, i32 0, i32 9, !dbg !4938
  %95 = load i32, i32* %directions74, align 4, !dbg !4938
  %and75 = and i32 %95, 1, !dbg !4939
  %tobool76 = icmp ne i32 %and75, 0, !dbg !4939
  br i1 %tobool76, label %if.then77, label %if.end100, !dbg !4940

if.then77:                                        ; preds = %if.end63
  call void @llvm.dbg.declare(metadata float* %locmin, metadata !4941, metadata !DIExpression()), !dbg !4943
  %96 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !4944
  %oldlocy = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %96, i32 0, i32 3, !dbg !4945
  %97 = load float, float* %oldlocy, align 4, !dbg !4945
  %98 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !4946
  %oldheight = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %98, i32 0, i32 7, !dbg !4947
  %99 = load float, float* %oldheight, align 4, !dbg !4947
  %sub78 = fsub float %97, %99, !dbg !4948
  store float %sub78, float* %locmin, align 4, !dbg !4943
  %100 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !4949
  %oldlocy79 = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %100, i32 0, i32 3, !dbg !4950
  %101 = load float, float* %oldlocy79, align 4, !dbg !4950
  %102 = load float, float* %dy, align 4, !dbg !4951
  %add80 = fadd float %101, %102, !dbg !4952
  %103 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4953
  %locy = getelementptr inbounds %struct.bNode, %struct.bNode* %103, i32 0, i32 25, !dbg !4954
  store float %add80, float* %locy, align 4, !dbg !4955
  %104 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4956
  %locy81 = getelementptr inbounds %struct.bNode, %struct.bNode* %104, i32 0, i32 25, !dbg !4956
  %105 = load float, float* %locy81, align 4, !dbg !4956
  %106 = load float, float* %locmin, align 4, !dbg !4956
  %107 = load float, float* %heightmin, align 4, !dbg !4956
  %add82 = fadd float %106, %107, !dbg !4956
  %cmp83 = fcmp olt float %105, %add82, !dbg !4956
  br i1 %cmp83, label %if.then85, label %if.else88, !dbg !4959

if.then85:                                        ; preds = %if.then77
  %108 = load float, float* %locmin, align 4, !dbg !4956
  %109 = load float, float* %heightmin, align 4, !dbg !4956
  %add86 = fadd float %108, %109, !dbg !4956
  %110 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4956
  %locy87 = getelementptr inbounds %struct.bNode, %struct.bNode* %110, i32 0, i32 25, !dbg !4956
  store float %add86, float* %locy87, align 4, !dbg !4956
  br label %if.end97, !dbg !4956

if.else88:                                        ; preds = %if.then77
  %111 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4960
  %locy89 = getelementptr inbounds %struct.bNode, %struct.bNode* %111, i32 0, i32 25, !dbg !4960
  %112 = load float, float* %locy89, align 4, !dbg !4960
  %113 = load float, float* %locmin, align 4, !dbg !4960
  %114 = load float, float* %heightmax, align 4, !dbg !4960
  %add90 = fadd float %113, %114, !dbg !4960
  %cmp91 = fcmp ogt float %112, %add90, !dbg !4960
  br i1 %cmp91, label %if.then93, label %if.end96, !dbg !4956

if.then93:                                        ; preds = %if.else88
  %115 = load float, float* %locmin, align 4, !dbg !4960
  %116 = load float, float* %heightmax, align 4, !dbg !4960
  %add94 = fadd float %115, %116, !dbg !4960
  %117 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4960
  %locy95 = getelementptr inbounds %struct.bNode, %struct.bNode* %117, i32 0, i32 25, !dbg !4960
  store float %add94, float* %locy95, align 4, !dbg !4960
  br label %if.end96, !dbg !4960

if.end96:                                         ; preds = %if.then93, %if.else88
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then85
  %118 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4962
  %locy98 = getelementptr inbounds %struct.bNode, %struct.bNode* %118, i32 0, i32 25, !dbg !4963
  %119 = load float, float* %locy98, align 4, !dbg !4963
  %120 = load float, float* %locmin, align 4, !dbg !4964
  %sub99 = fsub float %119, %120, !dbg !4965
  %121 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4966
  %height = getelementptr inbounds %struct.bNode, %struct.bNode* %121, i32 0, i32 27, !dbg !4967
  store float %sub99, float* %height, align 4, !dbg !4968
  br label %if.end100, !dbg !4969

if.end100:                                        ; preds = %if.end97, %if.end63
  %122 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !4970
  %directions101 = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %122, i32 0, i32 9, !dbg !4972
  %123 = load i32, i32* %directions101, align 4, !dbg !4972
  %and102 = and i32 %123, 2, !dbg !4973
  %tobool103 = icmp ne i32 %and102, 0, !dbg !4973
  br i1 %tobool103, label %if.then104, label %if.end121, !dbg !4974

if.then104:                                       ; preds = %if.end100
  %124 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !4975
  %oldheight105 = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %124, i32 0, i32 7, !dbg !4977
  %125 = load float, float* %oldheight105, align 4, !dbg !4977
  %126 = load float, float* %dy, align 4, !dbg !4978
  %sub106 = fsub float %125, %126, !dbg !4979
  %127 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4980
  %height107 = getelementptr inbounds %struct.bNode, %struct.bNode* %127, i32 0, i32 27, !dbg !4981
  store float %sub106, float* %height107, align 4, !dbg !4982
  %128 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4983
  %height108 = getelementptr inbounds %struct.bNode, %struct.bNode* %128, i32 0, i32 27, !dbg !4983
  %129 = load float, float* %height108, align 4, !dbg !4983
  %130 = load float, float* %heightmin, align 4, !dbg !4983
  %cmp109 = fcmp olt float %129, %130, !dbg !4983
  br i1 %cmp109, label %if.then111, label %if.else113, !dbg !4986

if.then111:                                       ; preds = %if.then104
  %131 = load float, float* %heightmin, align 4, !dbg !4983
  %132 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4983
  %height112 = getelementptr inbounds %struct.bNode, %struct.bNode* %132, i32 0, i32 27, !dbg !4983
  store float %131, float* %height112, align 4, !dbg !4983
  br label %if.end120, !dbg !4983

if.else113:                                       ; preds = %if.then104
  %133 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4987
  %height114 = getelementptr inbounds %struct.bNode, %struct.bNode* %133, i32 0, i32 27, !dbg !4987
  %134 = load float, float* %height114, align 4, !dbg !4987
  %135 = load float, float* %heightmax, align 4, !dbg !4987
  %cmp115 = fcmp ogt float %134, %135, !dbg !4987
  br i1 %cmp115, label %if.then117, label %if.end119, !dbg !4983

if.then117:                                       ; preds = %if.else113
  %136 = load float, float* %heightmax, align 4, !dbg !4987
  %137 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4987
  %height118 = getelementptr inbounds %struct.bNode, %struct.bNode* %137, i32 0, i32 27, !dbg !4987
  store float %136, float* %height118, align 4, !dbg !4987
  br label %if.end119, !dbg !4987

if.end119:                                        ; preds = %if.then117, %if.else113
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then111
  br label %if.end121, !dbg !4989

if.end121:                                        ; preds = %if.end120, %if.end100
  %138 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4990
  %type122 = getelementptr inbounds %struct.bNode, %struct.bNode* %138, i32 0, i32 8, !dbg !4992
  %139 = load i16, i16* %type122, align 4, !dbg !4992
  %conv123 = sext i16 %139 to i32, !dbg !4990
  %cmp124 = icmp eq i32 %conv123, 5, !dbg !4993
  br i1 %cmp124, label %if.then126, label %if.end175, !dbg !4994

if.then126:                                       ; preds = %if.end121
  %140 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !4995
  %directions127 = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %140, i32 0, i32 9, !dbg !4998
  %141 = load i32, i32* %directions127, align 4, !dbg !4998
  %and128 = and i32 %141, 8, !dbg !4999
  %tobool129 = icmp ne i32 %and128, 0, !dbg !4999
  br i1 %tobool129, label %if.then130, label %if.end137, !dbg !5000

if.then130:                                       ; preds = %if.then126
  %142 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !5001
  %oldlocx131 = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %142, i32 0, i32 2, !dbg !5003
  %143 = load float, float* %oldlocx131, align 4, !dbg !5003
  %144 = load float, float* %dx, align 4, !dbg !5004
  %mul132 = fmul float 5.000000e-01, %144, !dbg !5005
  %add133 = fadd float %143, %mul132, !dbg !5006
  %145 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5007
  %locx134 = getelementptr inbounds %struct.bNode, %struct.bNode* %145, i32 0, i32 24, !dbg !5008
  store float %add133, float* %locx134, align 8, !dbg !5009
  %146 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !5010
  %oldoffsetx = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %146, i32 0, i32 4, !dbg !5011
  %147 = load float, float* %oldoffsetx, align 4, !dbg !5011
  %148 = load float, float* %dx, align 4, !dbg !5012
  %mul135 = fmul float 5.000000e-01, %148, !dbg !5013
  %add136 = fadd float %147, %mul135, !dbg !5014
  %149 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5015
  %offsetx = getelementptr inbounds %struct.bNode, %struct.bNode* %149, i32 0, i32 29, !dbg !5016
  store float %add136, float* %offsetx, align 4, !dbg !5017
  br label %if.end137, !dbg !5018

if.end137:                                        ; preds = %if.then130, %if.then126
  %150 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !5019
  %directions138 = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %150, i32 0, i32 9, !dbg !5021
  %151 = load i32, i32* %directions138, align 4, !dbg !5021
  %and139 = and i32 %151, 4, !dbg !5022
  %tobool140 = icmp ne i32 %and139, 0, !dbg !5022
  br i1 %tobool140, label %if.then141, label %if.end150, !dbg !5023

if.then141:                                       ; preds = %if.end137
  %152 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !5024
  %oldlocx142 = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %152, i32 0, i32 2, !dbg !5026
  %153 = load float, float* %oldlocx142, align 4, !dbg !5026
  %154 = load float, float* %dx, align 4, !dbg !5027
  %mul143 = fmul float 5.000000e-01, %154, !dbg !5028
  %add144 = fadd float %153, %mul143, !dbg !5029
  %155 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5030
  %locx145 = getelementptr inbounds %struct.bNode, %struct.bNode* %155, i32 0, i32 24, !dbg !5031
  store float %add144, float* %locx145, align 8, !dbg !5032
  %156 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !5033
  %oldoffsetx146 = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %156, i32 0, i32 4, !dbg !5034
  %157 = load float, float* %oldoffsetx146, align 4, !dbg !5034
  %158 = load float, float* %dx, align 4, !dbg !5035
  %mul147 = fmul float 5.000000e-01, %158, !dbg !5036
  %sub148 = fsub float %157, %mul147, !dbg !5037
  %159 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5038
  %offsetx149 = getelementptr inbounds %struct.bNode, %struct.bNode* %159, i32 0, i32 29, !dbg !5039
  store float %sub148, float* %offsetx149, align 4, !dbg !5040
  br label %if.end150, !dbg !5041

if.end150:                                        ; preds = %if.then141, %if.end137
  %160 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !5042
  %directions151 = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %160, i32 0, i32 9, !dbg !5044
  %161 = load i32, i32* %directions151, align 4, !dbg !5044
  %and152 = and i32 %161, 1, !dbg !5045
  %tobool153 = icmp ne i32 %and152, 0, !dbg !5045
  br i1 %tobool153, label %if.then154, label %if.end161, !dbg !5046

if.then154:                                       ; preds = %if.end150
  %162 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !5047
  %oldlocy155 = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %162, i32 0, i32 3, !dbg !5049
  %163 = load float, float* %oldlocy155, align 4, !dbg !5049
  %164 = load float, float* %dy, align 4, !dbg !5050
  %mul156 = fmul float 5.000000e-01, %164, !dbg !5051
  %add157 = fadd float %163, %mul156, !dbg !5052
  %165 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5053
  %locy158 = getelementptr inbounds %struct.bNode, %struct.bNode* %165, i32 0, i32 25, !dbg !5054
  store float %add157, float* %locy158, align 4, !dbg !5055
  %166 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !5056
  %oldoffsety = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %166, i32 0, i32 5, !dbg !5057
  %167 = load float, float* %oldoffsety, align 4, !dbg !5057
  %168 = load float, float* %dy, align 4, !dbg !5058
  %mul159 = fmul float 5.000000e-01, %168, !dbg !5059
  %add160 = fadd float %167, %mul159, !dbg !5060
  %169 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5061
  %offsety = getelementptr inbounds %struct.bNode, %struct.bNode* %169, i32 0, i32 30, !dbg !5062
  store float %add160, float* %offsety, align 8, !dbg !5063
  br label %if.end161, !dbg !5064

if.end161:                                        ; preds = %if.then154, %if.end150
  %170 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !5065
  %directions162 = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %170, i32 0, i32 9, !dbg !5067
  %171 = load i32, i32* %directions162, align 4, !dbg !5067
  %and163 = and i32 %171, 2, !dbg !5068
  %tobool164 = icmp ne i32 %and163, 0, !dbg !5068
  br i1 %tobool164, label %if.then165, label %if.end174, !dbg !5069

if.then165:                                       ; preds = %if.end161
  %172 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !5070
  %oldlocy166 = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %172, i32 0, i32 3, !dbg !5072
  %173 = load float, float* %oldlocy166, align 4, !dbg !5072
  %174 = load float, float* %dy, align 4, !dbg !5073
  %mul167 = fmul float 5.000000e-01, %174, !dbg !5074
  %add168 = fadd float %173, %mul167, !dbg !5075
  %175 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5076
  %locy169 = getelementptr inbounds %struct.bNode, %struct.bNode* %175, i32 0, i32 25, !dbg !5077
  store float %add168, float* %locy169, align 4, !dbg !5078
  %176 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !5079
  %oldoffsety170 = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %176, i32 0, i32 5, !dbg !5080
  %177 = load float, float* %oldoffsety170, align 4, !dbg !5080
  %178 = load float, float* %dy, align 4, !dbg !5081
  %mul171 = fmul float 5.000000e-01, %178, !dbg !5082
  %sub172 = fsub float %177, %mul171, !dbg !5083
  %179 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5084
  %offsety173 = getelementptr inbounds %struct.bNode, %struct.bNode* %179, i32 0, i32 30, !dbg !5085
  store float %sub172, float* %offsety173, align 8, !dbg !5086
  br label %if.end174, !dbg !5087

if.end174:                                        ; preds = %if.then165, %if.end161
  br label %if.end175, !dbg !5088

if.end175:                                        ; preds = %if.end174, %if.end121
  br label %if.end176, !dbg !5089

if.end176:                                        ; preds = %if.end175, %sw.bb
  %180 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5090
  call void @ED_region_tag_redraw(%struct.ARegion* %180), !dbg !5091
  br label %sw.epilog, !dbg !5092

sw.bb177:                                         ; preds = %entry, %entry, %entry
  %181 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5093
  %182 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5094
  call void @node_resize_exit(%struct.bContext* %181, %struct.wmOperator* %182, i8 zeroext 0), !dbg !5095
  %183 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5096
  %184 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !5097
  %edittree178 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %184, i32 0, i32 19, !dbg !5098
  %185 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree178, align 8, !dbg !5098
  call void @ED_node_post_apply_transform(%struct.bContext* %183, %struct.bNodeTree* %185), !dbg !5099
  store i32 4, i32* %retval, align 4, !dbg !5100
  br label %return, !dbg !5100

sw.epilog:                                        ; preds = %entry, %if.end176
  store i32 1, i32* %retval, align 4, !dbg !5101
  br label %return, !dbg !5101

return:                                           ; preds = %sw.epilog, %sw.bb177
  %186 = load i32, i32* %retval, align 4, !dbg !5102
  ret i32 %186, !dbg !5102
}

; Function Attrs: noinline nounwind uwtable
define internal void @node_resize_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5103 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5106, metadata !DIExpression()), !dbg !5107
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5108, metadata !DIExpression()), !dbg !5109
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5110
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5111
  call void @node_resize_exit(%struct.bContext* %0, %struct.wmOperator* %1, i8 zeroext 1), !dbg !5112
  ret void, !dbg !5113
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @node_has_hidden_sockets(%struct.bNode* %node) #0 !dbg !5114 {
entry:
  %retval = alloca i32, align 4
  %node.addr = alloca %struct.bNode*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !5117, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !5119, metadata !DIExpression()), !dbg !5120
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !5121
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 17, !dbg !5123
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !5124
  %1 = load i8*, i8** %first, align 8, !dbg !5124
  %2 = bitcast i8* %1 to %struct.bNodeSocket*, !dbg !5121
  store %struct.bNodeSocket* %2, %struct.bNodeSocket** %sock, align 8, !dbg !5125
  br label %for.cond, !dbg !5126

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5127
  %tobool = icmp ne %struct.bNodeSocket* %3, null, !dbg !5129
  br i1 %tobool, label %for.body, label %for.end, !dbg !5129

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5130
  %flag = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %4, i32 0, i32 8, !dbg !5132
  %5 = load i16, i16* %flag, align 2, !dbg !5132
  %conv = sext i16 %5 to i32, !dbg !5130
  %and = and i32 %conv, 2, !dbg !5133
  %tobool1 = icmp ne i32 %and, 0, !dbg !5133
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5134

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !5135
  br label %return, !dbg !5135

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5136

for.inc:                                          ; preds = %if.end
  %6 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5137
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %6, i32 0, i32 0, !dbg !5138
  %7 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !5138
  store %struct.bNodeSocket* %7, %struct.bNodeSocket** %sock, align 8, !dbg !5139
  br label %for.cond, !dbg !5140, !llvm.loop !5141

for.end:                                          ; preds = %for.cond
  %8 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !5143
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %8, i32 0, i32 18, !dbg !5145
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !5146
  %9 = load i8*, i8** %first2, align 8, !dbg !5146
  %10 = bitcast i8* %9 to %struct.bNodeSocket*, !dbg !5143
  store %struct.bNodeSocket* %10, %struct.bNodeSocket** %sock, align 8, !dbg !5147
  br label %for.cond3, !dbg !5148

for.cond3:                                        ; preds = %for.inc12, %for.end
  %11 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5149
  %tobool4 = icmp ne %struct.bNodeSocket* %11, null, !dbg !5151
  br i1 %tobool4, label %for.body5, label %for.end14, !dbg !5151

for.body5:                                        ; preds = %for.cond3
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5152
  %flag6 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %12, i32 0, i32 8, !dbg !5154
  %13 = load i16, i16* %flag6, align 2, !dbg !5154
  %conv7 = sext i16 %13 to i32, !dbg !5152
  %and8 = and i32 %conv7, 2, !dbg !5155
  %tobool9 = icmp ne i32 %and8, 0, !dbg !5155
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !5156

if.then10:                                        ; preds = %for.body5
  store i32 1, i32* %retval, align 4, !dbg !5157
  br label %return, !dbg !5157

if.end11:                                         ; preds = %for.body5
  br label %for.inc12, !dbg !5158

for.inc12:                                        ; preds = %if.end11
  %14 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5159
  %next13 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %14, i32 0, i32 0, !dbg !5160
  %15 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next13, align 8, !dbg !5160
  store %struct.bNodeSocket* %15, %struct.bNodeSocket** %sock, align 8, !dbg !5161
  br label %for.cond3, !dbg !5162, !llvm.loop !5163

for.end14:                                        ; preds = %for.cond3
  store i32 0, i32* %retval, align 4, !dbg !5165
  br label %return, !dbg !5165

return:                                           ; preds = %for.end14, %if.then10, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !5166
  ret i32 %16, !dbg !5166
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @node_set_hidden_sockets(%struct.SpaceNode* %snode, %struct.bNode* %node, i32 %set) #0 !dbg !5167 {
entry:
  %snode.addr = alloca %struct.SpaceNode*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %set.addr = alloca i32, align 4
  %sock = alloca %struct.bNodeSocket*, align 8
  store %struct.SpaceNode* %snode, %struct.SpaceNode** %snode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode.addr, metadata !5170, metadata !DIExpression()), !dbg !5171
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !5172, metadata !DIExpression()), !dbg !5173
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !5174, metadata !DIExpression()), !dbg !5175
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !5176, metadata !DIExpression()), !dbg !5177
  %0 = load i32, i32* %set.addr, align 4, !dbg !5178
  %cmp = icmp eq i32 %0, 0, !dbg !5180
  br i1 %cmp, label %if.then, label %if.else, !dbg !5181

if.then:                                          ; preds = %entry
  %1 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !5182
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %1, i32 0, i32 17, !dbg !5185
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !5186
  %2 = load i8*, i8** %first, align 8, !dbg !5186
  %3 = bitcast i8* %2 to %struct.bNodeSocket*, !dbg !5182
  store %struct.bNodeSocket* %3, %struct.bNodeSocket** %sock, align 8, !dbg !5187
  br label %for.cond, !dbg !5188

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5189
  %tobool = icmp ne %struct.bNodeSocket* %4, null, !dbg !5191
  br i1 %tobool, label %for.body, label %for.end, !dbg !5191

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5192
  %flag = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %5, i32 0, i32 8, !dbg !5193
  %6 = load i16, i16* %flag, align 2, !dbg !5194
  %conv = sext i16 %6 to i32, !dbg !5194
  %and = and i32 %conv, -3, !dbg !5194
  %conv1 = trunc i32 %and to i16, !dbg !5194
  store i16 %conv1, i16* %flag, align 2, !dbg !5194
  br label %for.inc, !dbg !5192

for.inc:                                          ; preds = %for.body
  %7 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5195
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %7, i32 0, i32 0, !dbg !5196
  %8 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !5196
  store %struct.bNodeSocket* %8, %struct.bNodeSocket** %sock, align 8, !dbg !5197
  br label %for.cond, !dbg !5198, !llvm.loop !5199

for.end:                                          ; preds = %for.cond
  %9 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !5201
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %9, i32 0, i32 18, !dbg !5203
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !5204
  %10 = load i8*, i8** %first2, align 8, !dbg !5204
  %11 = bitcast i8* %10 to %struct.bNodeSocket*, !dbg !5201
  store %struct.bNodeSocket* %11, %struct.bNodeSocket** %sock, align 8, !dbg !5205
  br label %for.cond3, !dbg !5206

for.cond3:                                        ; preds = %for.inc10, %for.end
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5207
  %tobool4 = icmp ne %struct.bNodeSocket* %12, null, !dbg !5209
  br i1 %tobool4, label %for.body5, label %for.end12, !dbg !5209

for.body5:                                        ; preds = %for.cond3
  %13 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5210
  %flag6 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %13, i32 0, i32 8, !dbg !5211
  %14 = load i16, i16* %flag6, align 2, !dbg !5212
  %conv7 = sext i16 %14 to i32, !dbg !5212
  %and8 = and i32 %conv7, -3, !dbg !5212
  %conv9 = trunc i32 %and8 to i16, !dbg !5212
  store i16 %conv9, i16* %flag6, align 2, !dbg !5212
  br label %for.inc10, !dbg !5210

for.inc10:                                        ; preds = %for.body5
  %15 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5213
  %next11 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %15, i32 0, i32 0, !dbg !5214
  %16 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next11, align 8, !dbg !5214
  store %struct.bNodeSocket* %16, %struct.bNodeSocket** %sock, align 8, !dbg !5215
  br label %for.cond3, !dbg !5216, !llvm.loop !5217

for.end12:                                        ; preds = %for.cond3
  br label %if.end43, !dbg !5219

if.else:                                          ; preds = %entry
  %17 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !5220
  %inputs13 = getelementptr inbounds %struct.bNode, %struct.bNode* %17, i32 0, i32 17, !dbg !5223
  %first14 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs13, i32 0, i32 0, !dbg !5224
  %18 = load i8*, i8** %first14, align 8, !dbg !5224
  %19 = bitcast i8* %18 to %struct.bNodeSocket*, !dbg !5220
  store %struct.bNodeSocket* %19, %struct.bNodeSocket** %sock, align 8, !dbg !5225
  br label %for.cond15, !dbg !5226

for.cond15:                                       ; preds = %for.inc24, %if.else
  %20 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5227
  %tobool16 = icmp ne %struct.bNodeSocket* %20, null, !dbg !5229
  br i1 %tobool16, label %for.body17, label %for.end26, !dbg !5229

for.body17:                                       ; preds = %for.cond15
  %21 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5230
  %link = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %21, i32 0, i32 23, !dbg !5233
  %22 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5233
  %cmp18 = icmp eq %struct.bNodeLink* %22, null, !dbg !5234
  br i1 %cmp18, label %if.then20, label %if.end, !dbg !5235

if.then20:                                        ; preds = %for.body17
  %23 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5236
  %flag21 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %23, i32 0, i32 8, !dbg !5237
  %24 = load i16, i16* %flag21, align 2, !dbg !5238
  %conv22 = sext i16 %24 to i32, !dbg !5238
  %or = or i32 %conv22, 2, !dbg !5238
  %conv23 = trunc i32 %or to i16, !dbg !5238
  store i16 %conv23, i16* %flag21, align 2, !dbg !5238
  br label %if.end, !dbg !5236

if.end:                                           ; preds = %if.then20, %for.body17
  br label %for.inc24, !dbg !5239

for.inc24:                                        ; preds = %if.end
  %25 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5240
  %next25 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %25, i32 0, i32 0, !dbg !5241
  %26 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next25, align 8, !dbg !5241
  store %struct.bNodeSocket* %26, %struct.bNodeSocket** %sock, align 8, !dbg !5242
  br label %for.cond15, !dbg !5243, !llvm.loop !5244

for.end26:                                        ; preds = %for.cond15
  %27 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !5246
  %outputs27 = getelementptr inbounds %struct.bNode, %struct.bNode* %27, i32 0, i32 18, !dbg !5248
  %first28 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs27, i32 0, i32 0, !dbg !5249
  %28 = load i8*, i8** %first28, align 8, !dbg !5249
  %29 = bitcast i8* %28 to %struct.bNodeSocket*, !dbg !5246
  store %struct.bNodeSocket* %29, %struct.bNodeSocket** %sock, align 8, !dbg !5250
  br label %for.cond29, !dbg !5251

for.cond29:                                       ; preds = %for.inc40, %for.end26
  %30 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5252
  %tobool30 = icmp ne %struct.bNodeSocket* %30, null, !dbg !5254
  br i1 %tobool30, label %for.body31, label %for.end42, !dbg !5254

for.body31:                                       ; preds = %for.cond29
  %31 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !5255
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %31, i32 0, i32 19, !dbg !5258
  %32 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !5258
  %33 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5259
  %call = call i32 @nodeCountSocketLinks(%struct.bNodeTree* %32, %struct.bNodeSocket* %33), !dbg !5260
  %cmp32 = icmp eq i32 %call, 0, !dbg !5261
  br i1 %cmp32, label %if.then34, label %if.end39, !dbg !5262

if.then34:                                        ; preds = %for.body31
  %34 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5263
  %flag35 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %34, i32 0, i32 8, !dbg !5264
  %35 = load i16, i16* %flag35, align 2, !dbg !5265
  %conv36 = sext i16 %35 to i32, !dbg !5265
  %or37 = or i32 %conv36, 2, !dbg !5265
  %conv38 = trunc i32 %or37 to i16, !dbg !5265
  store i16 %conv38, i16* %flag35, align 2, !dbg !5265
  br label %if.end39, !dbg !5263

if.end39:                                         ; preds = %if.then34, %for.body31
  br label %for.inc40, !dbg !5266

for.inc40:                                        ; preds = %if.end39
  %36 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5267
  %next41 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %36, i32 0, i32 0, !dbg !5268
  %37 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next41, align 8, !dbg !5268
  store %struct.bNodeSocket* %37, %struct.bNodeSocket** %sock, align 8, !dbg !5269
  br label %for.cond29, !dbg !5270, !llvm.loop !5271

for.end42:                                        ; preds = %for.cond29
  br label %if.end43

if.end43:                                         ; preds = %for.end42, %for.end12
  ret void, !dbg !5273
}

declare dso_local i32 @nodeCountSocketLinks(%struct.bNodeTree*, %struct.bNodeSocket*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @node_find_indicated_socket(%struct.SpaceNode* %snode, %struct.bNode** %nodep, %struct.bNodeSocket** %sockp, float* %cursor, i32 %in_out) #0 !dbg !5274 {
entry:
  %retval = alloca i32, align 4
  %snode.addr = alloca %struct.SpaceNode*, align 8
  %nodep.addr = alloca %struct.bNode**, align 8
  %sockp.addr = alloca %struct.bNodeSocket**, align 8
  %cursor.addr = alloca float*, align 8
  %in_out.addr = alloca i32, align 4
  %node = alloca %struct.bNode*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  %rect = alloca %struct.rctf, align 4
  store %struct.SpaceNode* %snode, %struct.SpaceNode** %snode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode.addr, metadata !5279, metadata !DIExpression()), !dbg !5280
  store %struct.bNode** %nodep, %struct.bNode*** %nodep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode*** %nodep.addr, metadata !5281, metadata !DIExpression()), !dbg !5282
  store %struct.bNodeSocket** %sockp, %struct.bNodeSocket*** %sockp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket*** %sockp.addr, metadata !5283, metadata !DIExpression()), !dbg !5284
  store float* %cursor, float** %cursor.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cursor.addr, metadata !5285, metadata !DIExpression()), !dbg !5286
  store i32 %in_out, i32* %in_out.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_out.addr, metadata !5287, metadata !DIExpression()), !dbg !5288
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !5289, metadata !DIExpression()), !dbg !5290
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !5291, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.declare(metadata %struct.rctf* %rect, metadata !5293, metadata !DIExpression()), !dbg !5294
  %0 = load %struct.bNode**, %struct.bNode*** %nodep.addr, align 8, !dbg !5295
  store %struct.bNode* null, %struct.bNode** %0, align 8, !dbg !5296
  %1 = load %struct.bNodeSocket**, %struct.bNodeSocket*** %sockp.addr, align 8, !dbg !5297
  store %struct.bNodeSocket* null, %struct.bNodeSocket** %1, align 8, !dbg !5298
  %2 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !5299
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %2, i32 0, i32 19, !dbg !5301
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !5301
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 7, !dbg !5302
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !5303
  %4 = load i8*, i8** %first, align 8, !dbg !5303
  %5 = bitcast i8* %4 to %struct.bNode*, !dbg !5299
  store %struct.bNode* %5, %struct.bNode** %node, align 8, !dbg !5304
  br label %for.cond, !dbg !5305

for.cond:                                         ; preds = %for.inc96, %entry
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5306
  %tobool = icmp ne %struct.bNode* %6, null, !dbg !5308
  br i1 %tobool, label %for.body, label %for.end98, !dbg !5308

for.body:                                         ; preds = %for.cond
  %7 = load float*, float** %cursor.addr, align 8, !dbg !5309
  %arrayidx = getelementptr inbounds float, float* %7, i64 0, !dbg !5309
  %8 = load float, float* %arrayidx, align 4, !dbg !5309
  %9 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5311
  %conv = sext i16 %9 to i32, !dbg !5311
  %conv1 = sitofp i32 %conv to float, !dbg !5311
  %mul = fmul float 2.500000e-01, %conv1, !dbg !5311
  %add = fadd float %mul, 4.000000e+00, !dbg !5312
  %sub = fsub float %8, %add, !dbg !5313
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 0, !dbg !5314
  store float %sub, float* %xmin, align 4, !dbg !5315
  %10 = load float*, float** %cursor.addr, align 8, !dbg !5316
  %arrayidx2 = getelementptr inbounds float, float* %10, i64 1, !dbg !5316
  %11 = load float, float* %arrayidx2, align 4, !dbg !5316
  %12 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5317
  %conv3 = sext i16 %12 to i32, !dbg !5317
  %conv4 = sitofp i32 %conv3 to float, !dbg !5317
  %mul5 = fmul float 2.500000e-01, %conv4, !dbg !5317
  %add6 = fadd float %mul5, 4.000000e+00, !dbg !5318
  %sub7 = fsub float %11, %add6, !dbg !5319
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 2, !dbg !5320
  store float %sub7, float* %ymin, align 4, !dbg !5321
  %13 = load float*, float** %cursor.addr, align 8, !dbg !5322
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 0, !dbg !5322
  %14 = load float, float* %arrayidx8, align 4, !dbg !5322
  %15 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5323
  %conv9 = sext i16 %15 to i32, !dbg !5323
  %conv10 = sitofp i32 %conv9 to float, !dbg !5323
  %mul11 = fmul float 2.500000e-01, %conv10, !dbg !5323
  %add12 = fadd float %mul11, 4.000000e+00, !dbg !5324
  %add13 = fadd float %14, %add12, !dbg !5325
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 1, !dbg !5326
  store float %add13, float* %xmax, align 4, !dbg !5327
  %16 = load float*, float** %cursor.addr, align 8, !dbg !5328
  %arrayidx14 = getelementptr inbounds float, float* %16, i64 1, !dbg !5328
  %17 = load float, float* %arrayidx14, align 4, !dbg !5328
  %18 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5329
  %conv15 = sext i16 %18 to i32, !dbg !5329
  %conv16 = sitofp i32 %conv15 to float, !dbg !5329
  %mul17 = fmul float 2.500000e-01, %conv16, !dbg !5329
  %add18 = fadd float %mul17, 4.000000e+00, !dbg !5330
  %add19 = fadd float %17, %add18, !dbg !5331
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 3, !dbg !5332
  store float %add19, float* %ymax, align 4, !dbg !5333
  %19 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5334
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %19, i32 0, i32 7, !dbg !5336
  %20 = load i32, i32* %flag, align 8, !dbg !5336
  %and = and i32 %20, 8, !dbg !5337
  %tobool20 = icmp ne i32 %and, 0, !dbg !5337
  br i1 %tobool20, label %if.end49, label %if.then, !dbg !5338

if.then:                                          ; preds = %for.body
  %21 = load i32, i32* %in_out.addr, align 4, !dbg !5339
  %cmp = icmp eq i32 %21, 1, !dbg !5342
  br i1 %cmp, label %if.then22, label %if.else, !dbg !5343

if.then22:                                        ; preds = %if.then
  %22 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5344
  %conv23 = sext i16 %22 to i32, !dbg !5344
  %conv24 = sitofp i32 %conv23 to float, !dbg !5344
  %mul25 = fmul float 2.500000e-01, %conv24, !dbg !5344
  %xmax26 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 1, !dbg !5346
  %23 = load float, float* %xmax26, align 4, !dbg !5347
  %add27 = fadd float %23, %mul25, !dbg !5347
  store float %add27, float* %xmax26, align 4, !dbg !5347
  %24 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5348
  %conv28 = sext i16 %24 to i32, !dbg !5348
  %conv29 = sitofp i32 %conv28 to float, !dbg !5348
  %mul30 = fmul float 2.500000e-01, %conv29, !dbg !5348
  %mul31 = fmul float %mul30, 4.000000e+00, !dbg !5349
  %xmin32 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 0, !dbg !5350
  %25 = load float, float* %xmin32, align 4, !dbg !5351
  %sub33 = fsub float %25, %mul31, !dbg !5351
  store float %sub33, float* %xmin32, align 4, !dbg !5351
  br label %if.end48, !dbg !5352

if.else:                                          ; preds = %if.then
  %26 = load i32, i32* %in_out.addr, align 4, !dbg !5353
  %cmp34 = icmp eq i32 %26, 2, !dbg !5355
  br i1 %cmp34, label %if.then36, label %if.end, !dbg !5356

if.then36:                                        ; preds = %if.else
  %27 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5357
  %conv37 = sext i16 %27 to i32, !dbg !5357
  %conv38 = sitofp i32 %conv37 to float, !dbg !5357
  %mul39 = fmul float 2.500000e-01, %conv38, !dbg !5357
  %mul40 = fmul float %mul39, 4.000000e+00, !dbg !5359
  %xmax41 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 1, !dbg !5360
  %28 = load float, float* %xmax41, align 4, !dbg !5361
  %add42 = fadd float %28, %mul40, !dbg !5361
  store float %add42, float* %xmax41, align 4, !dbg !5361
  %29 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5362
  %conv43 = sext i16 %29 to i32, !dbg !5362
  %conv44 = sitofp i32 %conv43 to float, !dbg !5362
  %mul45 = fmul float 2.500000e-01, %conv44, !dbg !5362
  %xmin46 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 0, !dbg !5363
  %30 = load float, float* %xmin46, align 4, !dbg !5364
  %sub47 = fsub float %30, %mul45, !dbg !5364
  store float %sub47, float* %xmin46, align 4, !dbg !5364
  br label %if.end, !dbg !5365

if.end:                                           ; preds = %if.then36, %if.else
  br label %if.end48

if.end48:                                         ; preds = %if.end, %if.then22
  br label %if.end49, !dbg !5366

if.end49:                                         ; preds = %if.end48, %for.body
  %31 = load i32, i32* %in_out.addr, align 4, !dbg !5367
  %and50 = and i32 %31, 1, !dbg !5369
  %tobool51 = icmp ne i32 %and50, 0, !dbg !5369
  br i1 %tobool51, label %if.then52, label %if.end69, !dbg !5370

if.then52:                                        ; preds = %if.end49
  %32 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5371
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %32, i32 0, i32 17, !dbg !5374
  %first53 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !5375
  %33 = load i8*, i8** %first53, align 8, !dbg !5375
  %34 = bitcast i8* %33 to %struct.bNodeSocket*, !dbg !5371
  store %struct.bNodeSocket* %34, %struct.bNodeSocket** %sock, align 8, !dbg !5376
  br label %for.cond54, !dbg !5377

for.cond54:                                       ; preds = %for.inc, %if.then52
  %35 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5378
  %tobool55 = icmp ne %struct.bNodeSocket* %35, null, !dbg !5380
  br i1 %tobool55, label %for.body56, label %for.end, !dbg !5380

for.body56:                                       ; preds = %for.cond54
  %36 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5381
  %call = call i32 @nodeSocketIsHidden(%struct.bNodeSocket* %36), !dbg !5384
  %tobool57 = icmp ne i32 %call, 0, !dbg !5384
  br i1 %tobool57, label %if.end68, label %if.then58, !dbg !5385

if.then58:                                        ; preds = %for.body56
  %37 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5386
  %locx = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %37, i32 0, i32 13, !dbg !5389
  %38 = load float, float* %locx, align 8, !dbg !5389
  %39 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5390
  %locy = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %39, i32 0, i32 14, !dbg !5391
  %40 = load float, float* %locy, align 4, !dbg !5391
  %call59 = call zeroext i8 @BLI_rctf_isect_pt(%struct.rctf* %rect, float %38, float %40), !dbg !5392
  %tobool60 = icmp ne i8 %call59, 0, !dbg !5392
  br i1 %tobool60, label %if.then61, label %if.end67, !dbg !5393

if.then61:                                        ; preds = %if.then58
  %41 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5394
  %42 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !5397
  %call62 = call %struct.bNode* @visible_node(%struct.SpaceNode* %42, %struct.rctf* %rect), !dbg !5398
  %cmp63 = icmp eq %struct.bNode* %41, %call62, !dbg !5399
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !5400

if.then65:                                        ; preds = %if.then61
  %43 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5401
  %44 = load %struct.bNode**, %struct.bNode*** %nodep.addr, align 8, !dbg !5403
  store %struct.bNode* %43, %struct.bNode** %44, align 8, !dbg !5404
  %45 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5405
  %46 = load %struct.bNodeSocket**, %struct.bNodeSocket*** %sockp.addr, align 8, !dbg !5406
  store %struct.bNodeSocket* %45, %struct.bNodeSocket** %46, align 8, !dbg !5407
  store i32 1, i32* %retval, align 4, !dbg !5408
  br label %return, !dbg !5408

if.end66:                                         ; preds = %if.then61
  br label %if.end67, !dbg !5409

if.end67:                                         ; preds = %if.end66, %if.then58
  br label %if.end68, !dbg !5410

if.end68:                                         ; preds = %if.end67, %for.body56
  br label %for.inc, !dbg !5411

for.inc:                                          ; preds = %if.end68
  %47 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5412
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %47, i32 0, i32 0, !dbg !5413
  %48 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !5413
  store %struct.bNodeSocket* %48, %struct.bNodeSocket** %sock, align 8, !dbg !5414
  br label %for.cond54, !dbg !5415, !llvm.loop !5416

for.end:                                          ; preds = %for.cond54
  br label %if.end69, !dbg !5418

if.end69:                                         ; preds = %for.end, %if.end49
  %49 = load i32, i32* %in_out.addr, align 4, !dbg !5419
  %and70 = and i32 %49, 2, !dbg !5421
  %tobool71 = icmp ne i32 %and70, 0, !dbg !5421
  br i1 %tobool71, label %if.then72, label %if.end95, !dbg !5422

if.then72:                                        ; preds = %if.end69
  %50 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5423
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %50, i32 0, i32 18, !dbg !5426
  %first73 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !5427
  %51 = load i8*, i8** %first73, align 8, !dbg !5427
  %52 = bitcast i8* %51 to %struct.bNodeSocket*, !dbg !5423
  store %struct.bNodeSocket* %52, %struct.bNodeSocket** %sock, align 8, !dbg !5428
  br label %for.cond74, !dbg !5429

for.cond74:                                       ; preds = %for.inc92, %if.then72
  %53 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5430
  %tobool75 = icmp ne %struct.bNodeSocket* %53, null, !dbg !5432
  br i1 %tobool75, label %for.body76, label %for.end94, !dbg !5432

for.body76:                                       ; preds = %for.cond74
  %54 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5433
  %call77 = call i32 @nodeSocketIsHidden(%struct.bNodeSocket* %54), !dbg !5436
  %tobool78 = icmp ne i32 %call77, 0, !dbg !5436
  br i1 %tobool78, label %if.end91, label %if.then79, !dbg !5437

if.then79:                                        ; preds = %for.body76
  %55 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5438
  %locx80 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %55, i32 0, i32 13, !dbg !5441
  %56 = load float, float* %locx80, align 8, !dbg !5441
  %57 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5442
  %locy81 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %57, i32 0, i32 14, !dbg !5443
  %58 = load float, float* %locy81, align 4, !dbg !5443
  %call82 = call zeroext i8 @BLI_rctf_isect_pt(%struct.rctf* %rect, float %56, float %58), !dbg !5444
  %tobool83 = icmp ne i8 %call82, 0, !dbg !5444
  br i1 %tobool83, label %if.then84, label %if.end90, !dbg !5445

if.then84:                                        ; preds = %if.then79
  %59 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5446
  %60 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !5449
  %call85 = call %struct.bNode* @visible_node(%struct.SpaceNode* %60, %struct.rctf* %rect), !dbg !5450
  %cmp86 = icmp eq %struct.bNode* %59, %call85, !dbg !5451
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !5452

if.then88:                                        ; preds = %if.then84
  %61 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5453
  %62 = load %struct.bNode**, %struct.bNode*** %nodep.addr, align 8, !dbg !5455
  store %struct.bNode* %61, %struct.bNode** %62, align 8, !dbg !5456
  %63 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5457
  %64 = load %struct.bNodeSocket**, %struct.bNodeSocket*** %sockp.addr, align 8, !dbg !5458
  store %struct.bNodeSocket* %63, %struct.bNodeSocket** %64, align 8, !dbg !5459
  store i32 1, i32* %retval, align 4, !dbg !5460
  br label %return, !dbg !5460

if.end89:                                         ; preds = %if.then84
  br label %if.end90, !dbg !5461

if.end90:                                         ; preds = %if.end89, %if.then79
  br label %if.end91, !dbg !5462

if.end91:                                         ; preds = %if.end90, %for.body76
  br label %for.inc92, !dbg !5463

for.inc92:                                        ; preds = %if.end91
  %65 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5464
  %next93 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %65, i32 0, i32 0, !dbg !5465
  %66 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next93, align 8, !dbg !5465
  store %struct.bNodeSocket* %66, %struct.bNodeSocket** %sock, align 8, !dbg !5466
  br label %for.cond74, !dbg !5467, !llvm.loop !5468

for.end94:                                        ; preds = %for.cond74
  br label %if.end95, !dbg !5470

if.end95:                                         ; preds = %for.end94, %if.end69
  br label %for.inc96, !dbg !5471

for.inc96:                                        ; preds = %if.end95
  %67 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5472
  %next97 = getelementptr inbounds %struct.bNode, %struct.bNode* %67, i32 0, i32 0, !dbg !5473
  %68 = load %struct.bNode*, %struct.bNode** %next97, align 8, !dbg !5473
  store %struct.bNode* %68, %struct.bNode** %node, align 8, !dbg !5474
  br label %for.cond, !dbg !5475, !llvm.loop !5476

for.end98:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !5478
  br label %return, !dbg !5478

return:                                           ; preds = %for.end98, %if.then88, %if.then65
  %69 = load i32, i32* %retval, align 4, !dbg !5479
  ret i32 %69, !dbg !5479
}

declare dso_local i32 @nodeSocketIsHidden(%struct.bNodeSocket*) #2

declare dso_local zeroext i8 @BLI_rctf_isect_pt(%struct.rctf*, float, float) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.bNode* @visible_node(%struct.SpaceNode* %snode, %struct.rctf* %rct) #0 !dbg !5480 {
entry:
  %snode.addr = alloca %struct.SpaceNode*, align 8
  %rct.addr = alloca %struct.rctf*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.SpaceNode* %snode, %struct.SpaceNode** %snode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode.addr, metadata !5485, metadata !DIExpression()), !dbg !5486
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !5487, metadata !DIExpression()), !dbg !5488
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !5489, metadata !DIExpression()), !dbg !5490
  %0 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !5491
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %0, i32 0, i32 19, !dbg !5493
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !5493
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 7, !dbg !5494
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 1, !dbg !5495
  %2 = load i8*, i8** %last, align 8, !dbg !5495
  %3 = bitcast i8* %2 to %struct.bNode*, !dbg !5491
  store %struct.bNode* %3, %struct.bNode** %node, align 8, !dbg !5496
  br label %for.cond, !dbg !5497

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5498
  %tobool = icmp ne %struct.bNode* %4, null, !dbg !5500
  br i1 %tobool, label %for.body, label %for.end, !dbg !5500

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5501
  %totr = getelementptr inbounds %struct.bNode, %struct.bNode* %5, i32 0, i32 40, !dbg !5504
  %6 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !5505
  %call = call zeroext i8 @BLI_rctf_isect(%struct.rctf* %totr, %struct.rctf* %6, %struct.rctf* null), !dbg !5506
  %tobool1 = icmp ne i8 %call, 0, !dbg !5506
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5507

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !5508

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5509

for.inc:                                          ; preds = %if.end
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5510
  %prev = getelementptr inbounds %struct.bNode, %struct.bNode* %7, i32 0, i32 1, !dbg !5511
  %8 = load %struct.bNode*, %struct.bNode** %prev, align 8, !dbg !5511
  store %struct.bNode* %8, %struct.bNode** %node, align 8, !dbg !5512
  br label %for.cond, !dbg !5513, !llvm.loop !5514

for.end:                                          ; preds = %if.then, %for.cond
  %9 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5516
  ret %struct.bNode* %9, !dbg !5517
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_duplicate(%struct.wmOperatorType* %ot) #0 !dbg !5518 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5519, metadata !DIExpression()), !dbg !5520
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5521
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5522
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i8** %name, align 8, !dbg !5523
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5524
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5525
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.15, i64 0, i64 0), i8** %description, align 8, !dbg !5526
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5527
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5528
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8** %idname, align 8, !dbg !5529
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5530
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5531
  store i32 (%struct.bContext*, %struct.wmOperator*)* @node_duplicate_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5532
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5533
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5534
  store i32 (%struct.bContext*)* @ED_operator_node_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !5535
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5536
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5537
  store i16 3, i16* %flag, align 8, !dbg !5538
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5539
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !5540
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5540
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !5539
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.19, i64 0, i64 0)), !dbg !5541
  ret void, !dbg !5542
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_duplicate_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5543 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  %newnode = alloca %struct.bNode*, align 8
  %lastnode = alloca %struct.bNode*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  %newlink = alloca %struct.bNodeLink*, align 8
  %lastlink = alloca %struct.bNodeLink*, align 8
  %keep_inputs = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5546, metadata !DIExpression()), !dbg !5547
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5548, metadata !DIExpression()), !dbg !5549
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !5550, metadata !DIExpression()), !dbg !5551
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5552
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !5553
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !5551
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !5554, metadata !DIExpression()), !dbg !5555
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !5556
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %1, i32 0, i32 19, !dbg !5557
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !5557
  store %struct.bNodeTree* %2, %struct.bNodeTree** %ntree, align 8, !dbg !5555
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !5558, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.declare(metadata %struct.bNode** %newnode, metadata !5560, metadata !DIExpression()), !dbg !5561
  call void @llvm.dbg.declare(metadata %struct.bNode** %lastnode, metadata !5562, metadata !DIExpression()), !dbg !5563
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !5564, metadata !DIExpression()), !dbg !5567
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %newlink, metadata !5568, metadata !DIExpression()), !dbg !5569
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %lastlink, metadata !5570, metadata !DIExpression()), !dbg !5571
  call void @llvm.dbg.declare(metadata i8* %keep_inputs, metadata !5572, metadata !DIExpression()), !dbg !5573
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5574
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !5575
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5575
  %call1 = call i32 @RNA_boolean_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)), !dbg !5576
  %conv = trunc i32 %call1 to i8, !dbg !5576
  store i8 %conv, i8* %keep_inputs, align 1, !dbg !5573
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5577
  call void @ED_preview_kill_jobs(%struct.bContext* %5), !dbg !5578
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !5579
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %6, i32 0, i32 7, !dbg !5580
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 1, !dbg !5581
  %7 = load i8*, i8** %last, align 8, !dbg !5581
  %8 = bitcast i8* %7 to %struct.bNode*, !dbg !5579
  store %struct.bNode* %8, %struct.bNode** %lastnode, align 8, !dbg !5582
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !5583
  %nodes2 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %9, i32 0, i32 7, !dbg !5585
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes2, i32 0, i32 0, !dbg !5586
  %10 = load i8*, i8** %first, align 8, !dbg !5586
  %11 = bitcast i8* %10 to %struct.bNode*, !dbg !5583
  store %struct.bNode* %11, %struct.bNode** %node, align 8, !dbg !5587
  br label %for.cond, !dbg !5588

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5589
  %tobool = icmp ne %struct.bNode* %12, null, !dbg !5591
  br i1 %tobool, label %for.body, label %for.end, !dbg !5591

for.body:                                         ; preds = %for.cond
  %13 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5592
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %13, i32 0, i32 7, !dbg !5595
  %14 = load i32, i32* %flag, align 8, !dbg !5595
  %and = and i32 %14, 1, !dbg !5596
  %tobool3 = icmp ne i32 %and, 0, !dbg !5596
  br i1 %tobool3, label %if.then, label %if.end9, !dbg !5597

if.then:                                          ; preds = %for.body
  %15 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !5598
  %16 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5600
  %call4 = call %struct.bNode* @nodeCopyNode(%struct.bNodeTree* %15, %struct.bNode* %16), !dbg !5601
  store %struct.bNode* %call4, %struct.bNode** %newnode, align 8, !dbg !5602
  %17 = load %struct.bNode*, %struct.bNode** %newnode, align 8, !dbg !5603
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %17, i32 0, i32 20, !dbg !5605
  %18 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !5605
  %tobool5 = icmp ne %struct.ID* %18, null, !dbg !5603
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !5606

if.then6:                                         ; preds = %if.then
  %19 = load %struct.bNode*, %struct.bNode** %newnode, align 8, !dbg !5607
  %id7 = getelementptr inbounds %struct.bNode, %struct.bNode* %19, i32 0, i32 20, !dbg !5609
  %20 = load %struct.ID*, %struct.ID** %id7, align 8, !dbg !5609
  call void @id_us_plus(%struct.ID* %20), !dbg !5610
  %21 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !5611
  %id8 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %21, i32 0, i32 7, !dbg !5612
  %22 = load %struct.ID*, %struct.ID** %id8, align 8, !dbg !5612
  call void @ED_node_tag_update_id(%struct.ID* %22), !dbg !5613
  br label %if.end, !dbg !5614

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end9, !dbg !5615

if.end9:                                          ; preds = %if.end, %for.body
  %23 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5616
  %24 = load %struct.bNode*, %struct.bNode** %lastnode, align 8, !dbg !5618
  %cmp = icmp eq %struct.bNode* %23, %24, !dbg !5619
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !5620

if.then11:                                        ; preds = %if.end9
  br label %for.end, !dbg !5621

if.end12:                                         ; preds = %if.end9
  br label %for.inc, !dbg !5622

for.inc:                                          ; preds = %if.end12
  %25 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5623
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %25, i32 0, i32 0, !dbg !5624
  %26 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !5624
  store %struct.bNode* %26, %struct.bNode** %node, align 8, !dbg !5625
  br label %for.cond, !dbg !5626, !llvm.loop !5627

for.end:                                          ; preds = %if.then11, %for.cond
  %27 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !5629
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %27, i32 0, i32 8, !dbg !5630
  %last13 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links, i32 0, i32 1, !dbg !5631
  %28 = load i8*, i8** %last13, align 8, !dbg !5631
  %29 = bitcast i8* %28 to %struct.bNodeLink*, !dbg !5629
  store %struct.bNodeLink* %29, %struct.bNodeLink** %lastlink, align 8, !dbg !5632
  %30 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !5633
  %links14 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %30, i32 0, i32 8, !dbg !5635
  %first15 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links14, i32 0, i32 0, !dbg !5636
  %31 = load i8*, i8** %first15, align 8, !dbg !5636
  %32 = bitcast i8* %31 to %struct.bNodeLink*, !dbg !5633
  store %struct.bNodeLink* %32, %struct.bNodeLink** %link, align 8, !dbg !5637
  br label %for.cond16, !dbg !5638

for.cond16:                                       ; preds = %for.inc64, %for.end
  %33 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5639
  %tobool17 = icmp ne %struct.bNodeLink* %33, null, !dbg !5641
  br i1 %tobool17, label %for.body18, label %for.end66, !dbg !5641

for.body18:                                       ; preds = %for.cond16
  %34 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5642
  %tonode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %34, i32 0, i32 3, !dbg !5645
  %35 = load %struct.bNode*, %struct.bNode** %tonode, align 8, !dbg !5645
  %tobool19 = icmp ne %struct.bNode* %35, null, !dbg !5642
  br i1 %tobool19, label %land.lhs.true, label %if.end59, !dbg !5646

land.lhs.true:                                    ; preds = %for.body18
  %36 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5647
  %tonode20 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %36, i32 0, i32 3, !dbg !5648
  %37 = load %struct.bNode*, %struct.bNode** %tonode20, align 8, !dbg !5648
  %flag21 = getelementptr inbounds %struct.bNode, %struct.bNode* %37, i32 0, i32 7, !dbg !5649
  %38 = load i32, i32* %flag21, align 8, !dbg !5649
  %and22 = and i32 %38, 1, !dbg !5650
  %tobool23 = icmp ne i32 %and22, 0, !dbg !5650
  br i1 %tobool23, label %land.lhs.true24, label %if.end59, !dbg !5651

land.lhs.true24:                                  ; preds = %land.lhs.true
  %39 = load i8, i8* %keep_inputs, align 1, !dbg !5652
  %conv25 = zext i8 %39 to i32, !dbg !5652
  %tobool26 = icmp ne i32 %conv25, 0, !dbg !5652
  br i1 %tobool26, label %if.then33, label %lor.lhs.false, !dbg !5653

lor.lhs.false:                                    ; preds = %land.lhs.true24
  %40 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5654
  %fromnode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %40, i32 0, i32 2, !dbg !5655
  %41 = load %struct.bNode*, %struct.bNode** %fromnode, align 8, !dbg !5655
  %tobool27 = icmp ne %struct.bNode* %41, null, !dbg !5654
  br i1 %tobool27, label %land.lhs.true28, label %if.end59, !dbg !5656

land.lhs.true28:                                  ; preds = %lor.lhs.false
  %42 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5657
  %fromnode29 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %42, i32 0, i32 2, !dbg !5658
  %43 = load %struct.bNode*, %struct.bNode** %fromnode29, align 8, !dbg !5658
  %flag30 = getelementptr inbounds %struct.bNode, %struct.bNode* %43, i32 0, i32 7, !dbg !5659
  %44 = load i32, i32* %flag30, align 8, !dbg !5659
  %and31 = and i32 %44, 1, !dbg !5660
  %tobool32 = icmp ne i32 %and31, 0, !dbg !5660
  br i1 %tobool32, label %if.then33, label %if.end59, !dbg !5661

if.then33:                                        ; preds = %land.lhs.true28, %land.lhs.true24
  %45 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5662
  %call34 = call i8* %45(i64 56, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.103, i64 0, i64 0)), !dbg !5662
  %46 = bitcast i8* %call34 to %struct.bNodeLink*, !dbg !5662
  store %struct.bNodeLink* %46, %struct.bNodeLink** %newlink, align 8, !dbg !5664
  %47 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5665
  %flag35 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %47, i32 0, i32 6, !dbg !5666
  %48 = load i32, i32* %flag35, align 8, !dbg !5666
  %49 = load %struct.bNodeLink*, %struct.bNodeLink** %newlink, align 8, !dbg !5667
  %flag36 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %49, i32 0, i32 6, !dbg !5668
  store i32 %48, i32* %flag36, align 8, !dbg !5669
  %50 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5670
  %tonode37 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %50, i32 0, i32 3, !dbg !5671
  %51 = load %struct.bNode*, %struct.bNode** %tonode37, align 8, !dbg !5671
  %new_node = getelementptr inbounds %struct.bNode, %struct.bNode* %51, i32 0, i32 2, !dbg !5672
  %52 = load %struct.bNode*, %struct.bNode** %new_node, align 8, !dbg !5672
  %53 = load %struct.bNodeLink*, %struct.bNodeLink** %newlink, align 8, !dbg !5673
  %tonode38 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %53, i32 0, i32 3, !dbg !5674
  store %struct.bNode* %52, %struct.bNode** %tonode38, align 8, !dbg !5675
  %54 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5676
  %tosock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %54, i32 0, i32 5, !dbg !5677
  %55 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !5677
  %new_sock = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %55, i32 0, i32 2, !dbg !5678
  %56 = load %struct.bNodeSocket*, %struct.bNodeSocket** %new_sock, align 8, !dbg !5678
  %57 = load %struct.bNodeLink*, %struct.bNodeLink** %newlink, align 8, !dbg !5679
  %tosock39 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %57, i32 0, i32 5, !dbg !5680
  store %struct.bNodeSocket* %56, %struct.bNodeSocket** %tosock39, align 8, !dbg !5681
  %58 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5682
  %fromnode40 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %58, i32 0, i32 2, !dbg !5684
  %59 = load %struct.bNode*, %struct.bNode** %fromnode40, align 8, !dbg !5684
  %tobool41 = icmp ne %struct.bNode* %59, null, !dbg !5682
  br i1 %tobool41, label %land.lhs.true42, label %if.else, !dbg !5685

land.lhs.true42:                                  ; preds = %if.then33
  %60 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5686
  %fromnode43 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %60, i32 0, i32 2, !dbg !5687
  %61 = load %struct.bNode*, %struct.bNode** %fromnode43, align 8, !dbg !5687
  %flag44 = getelementptr inbounds %struct.bNode, %struct.bNode* %61, i32 0, i32 7, !dbg !5688
  %62 = load i32, i32* %flag44, align 8, !dbg !5688
  %and45 = and i32 %62, 1, !dbg !5689
  %tobool46 = icmp ne i32 %and45, 0, !dbg !5689
  br i1 %tobool46, label %if.then47, label %if.else, !dbg !5690

if.then47:                                        ; preds = %land.lhs.true42
  %63 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5691
  %fromnode48 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %63, i32 0, i32 2, !dbg !5693
  %64 = load %struct.bNode*, %struct.bNode** %fromnode48, align 8, !dbg !5693
  %new_node49 = getelementptr inbounds %struct.bNode, %struct.bNode* %64, i32 0, i32 2, !dbg !5694
  %65 = load %struct.bNode*, %struct.bNode** %new_node49, align 8, !dbg !5694
  %66 = load %struct.bNodeLink*, %struct.bNodeLink** %newlink, align 8, !dbg !5695
  %fromnode50 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %66, i32 0, i32 2, !dbg !5696
  store %struct.bNode* %65, %struct.bNode** %fromnode50, align 8, !dbg !5697
  %67 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5698
  %fromsock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %67, i32 0, i32 4, !dbg !5699
  %68 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock, align 8, !dbg !5699
  %new_sock51 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %68, i32 0, i32 2, !dbg !5700
  %69 = load %struct.bNodeSocket*, %struct.bNodeSocket** %new_sock51, align 8, !dbg !5700
  %70 = load %struct.bNodeLink*, %struct.bNodeLink** %newlink, align 8, !dbg !5701
  %fromsock52 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %70, i32 0, i32 4, !dbg !5702
  store %struct.bNodeSocket* %69, %struct.bNodeSocket** %fromsock52, align 8, !dbg !5703
  br label %if.end57, !dbg !5704

if.else:                                          ; preds = %land.lhs.true42, %if.then33
  %71 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5705
  %fromnode53 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %71, i32 0, i32 2, !dbg !5707
  %72 = load %struct.bNode*, %struct.bNode** %fromnode53, align 8, !dbg !5707
  %73 = load %struct.bNodeLink*, %struct.bNodeLink** %newlink, align 8, !dbg !5708
  %fromnode54 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %73, i32 0, i32 2, !dbg !5709
  store %struct.bNode* %72, %struct.bNode** %fromnode54, align 8, !dbg !5710
  %74 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5711
  %fromsock55 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %74, i32 0, i32 4, !dbg !5712
  %75 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock55, align 8, !dbg !5712
  %76 = load %struct.bNodeLink*, %struct.bNodeLink** %newlink, align 8, !dbg !5713
  %fromsock56 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %76, i32 0, i32 4, !dbg !5714
  store %struct.bNodeSocket* %75, %struct.bNodeSocket** %fromsock56, align 8, !dbg !5715
  br label %if.end57

if.end57:                                         ; preds = %if.else, %if.then47
  %77 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !5716
  %links58 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %77, i32 0, i32 8, !dbg !5717
  %78 = load %struct.bNodeLink*, %struct.bNodeLink** %newlink, align 8, !dbg !5718
  %79 = bitcast %struct.bNodeLink* %78 to i8*, !dbg !5718
  call void @BLI_addtail(%struct.ListBase* %links58, i8* %79), !dbg !5719
  br label %if.end59, !dbg !5720

if.end59:                                         ; preds = %if.end57, %land.lhs.true28, %lor.lhs.false, %land.lhs.true, %for.body18
  %80 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5721
  %81 = load %struct.bNodeLink*, %struct.bNodeLink** %lastlink, align 8, !dbg !5723
  %cmp60 = icmp eq %struct.bNodeLink* %80, %81, !dbg !5724
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !5725

if.then62:                                        ; preds = %if.end59
  br label %for.end66, !dbg !5726

if.end63:                                         ; preds = %if.end59
  br label %for.inc64, !dbg !5727

for.inc64:                                        ; preds = %if.end63
  %82 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5728
  %next65 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %82, i32 0, i32 0, !dbg !5729
  %83 = load %struct.bNodeLink*, %struct.bNodeLink** %next65, align 8, !dbg !5729
  store %struct.bNodeLink* %83, %struct.bNodeLink** %link, align 8, !dbg !5730
  br label %for.cond16, !dbg !5731, !llvm.loop !5732

for.end66:                                        ; preds = %if.then62, %for.cond16
  %84 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !5734
  %nodes67 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %84, i32 0, i32 7, !dbg !5736
  %first68 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes67, i32 0, i32 0, !dbg !5737
  %85 = load i8*, i8** %first68, align 8, !dbg !5737
  %86 = bitcast i8* %85 to %struct.bNode*, !dbg !5734
  store %struct.bNode* %86, %struct.bNode** %node, align 8, !dbg !5738
  br label %for.cond69, !dbg !5739

for.cond69:                                       ; preds = %for.inc74, %for.end66
  %87 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5740
  %tobool70 = icmp ne %struct.bNode* %87, null, !dbg !5742
  br i1 %tobool70, label %for.body71, label %for.end76, !dbg !5742

for.body71:                                       ; preds = %for.cond69
  %88 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5743
  %flag72 = getelementptr inbounds %struct.bNode, %struct.bNode* %88, i32 0, i32 7, !dbg !5744
  %89 = load i32, i32* %flag72, align 8, !dbg !5745
  %and73 = and i32 %89, -257, !dbg !5745
  store i32 %and73, i32* %flag72, align 8, !dbg !5745
  br label %for.inc74, !dbg !5743

for.inc74:                                        ; preds = %for.body71
  %90 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5746
  %next75 = getelementptr inbounds %struct.bNode, %struct.bNode* %90, i32 0, i32 0, !dbg !5747
  %91 = load %struct.bNode*, %struct.bNode** %next75, align 8, !dbg !5747
  store %struct.bNode* %91, %struct.bNode** %node, align 8, !dbg !5748
  br label %for.cond69, !dbg !5749, !llvm.loop !5750

for.end76:                                        ; preds = %for.cond69
  %92 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !5752
  %nodes77 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %92, i32 0, i32 7, !dbg !5754
  %first78 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes77, i32 0, i32 0, !dbg !5755
  %93 = load i8*, i8** %first78, align 8, !dbg !5755
  %94 = bitcast i8* %93 to %struct.bNode*, !dbg !5752
  store %struct.bNode* %94, %struct.bNode** %node, align 8, !dbg !5756
  br label %for.cond79, !dbg !5757

for.cond79:                                       ; preds = %for.inc95, %for.end76
  %95 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5758
  %tobool80 = icmp ne %struct.bNode* %95, null, !dbg !5760
  br i1 %tobool80, label %for.body81, label %for.end97, !dbg !5760

for.body81:                                       ; preds = %for.cond79
  %96 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5761
  %flag82 = getelementptr inbounds %struct.bNode, %struct.bNode* %96, i32 0, i32 7, !dbg !5764
  %97 = load i32, i32* %flag82, align 8, !dbg !5764
  %and83 = and i32 %97, 1, !dbg !5765
  %tobool84 = icmp ne i32 %and83, 0, !dbg !5765
  br i1 %tobool84, label %land.lhs.true85, label %if.end90, !dbg !5766

land.lhs.true85:                                  ; preds = %for.body81
  %98 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5767
  %flag86 = getelementptr inbounds %struct.bNode, %struct.bNode* %98, i32 0, i32 7, !dbg !5768
  %99 = load i32, i32* %flag86, align 8, !dbg !5768
  %and87 = and i32 %99, 256, !dbg !5769
  %tobool88 = icmp ne i32 %and87, 0, !dbg !5769
  br i1 %tobool88, label %if.end90, label %if.then89, !dbg !5770

if.then89:                                        ; preds = %land.lhs.true85
  %100 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5771
  call void @node_duplicate_reparent_recursive(%struct.bNode* %100), !dbg !5772
  br label %if.end90, !dbg !5772

if.end90:                                         ; preds = %if.then89, %land.lhs.true85, %for.body81
  %101 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5773
  %102 = load %struct.bNode*, %struct.bNode** %lastnode, align 8, !dbg !5775
  %cmp91 = icmp eq %struct.bNode* %101, %102, !dbg !5776
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !5777

if.then93:                                        ; preds = %if.end90
  br label %for.end97, !dbg !5778

if.end94:                                         ; preds = %if.end90
  br label %for.inc95, !dbg !5779

for.inc95:                                        ; preds = %if.end94
  %103 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5780
  %next96 = getelementptr inbounds %struct.bNode, %struct.bNode* %103, i32 0, i32 0, !dbg !5781
  %104 = load %struct.bNode*, %struct.bNode** %next96, align 8, !dbg !5781
  store %struct.bNode* %104, %struct.bNode** %node, align 8, !dbg !5782
  br label %for.cond79, !dbg !5783, !llvm.loop !5784

for.end97:                                        ; preds = %if.then93, %for.cond79
  %105 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !5786
  %nodes98 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %105, i32 0, i32 7, !dbg !5788
  %first99 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes98, i32 0, i32 0, !dbg !5789
  %106 = load i8*, i8** %first99, align 8, !dbg !5789
  %107 = bitcast i8* %106 to %struct.bNode*, !dbg !5786
  store %struct.bNode* %107, %struct.bNode** %node, align 8, !dbg !5790
  br label %for.cond100, !dbg !5791

for.cond100:                                      ; preds = %for.inc115, %for.end97
  %108 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5792
  %tobool101 = icmp ne %struct.bNode* %108, null, !dbg !5794
  br i1 %tobool101, label %for.body102, label %for.end117, !dbg !5794

for.body102:                                      ; preds = %for.cond100
  %109 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5795
  %flag103 = getelementptr inbounds %struct.bNode, %struct.bNode* %109, i32 0, i32 7, !dbg !5798
  %110 = load i32, i32* %flag103, align 8, !dbg !5798
  %and104 = and i32 %110, 1, !dbg !5799
  %tobool105 = icmp ne i32 %and104, 0, !dbg !5799
  br i1 %tobool105, label %if.then106, label %if.end110, !dbg !5800

if.then106:                                       ; preds = %for.body102
  %111 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5801
  %new_node107 = getelementptr inbounds %struct.bNode, %struct.bNode* %111, i32 0, i32 2, !dbg !5803
  %112 = load %struct.bNode*, %struct.bNode** %new_node107, align 8, !dbg !5803
  store %struct.bNode* %112, %struct.bNode** %newnode, align 8, !dbg !5804
  %113 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5805
  call void @nodeSetSelected(%struct.bNode* %113, i8 zeroext 0), !dbg !5806
  %114 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5807
  %flag108 = getelementptr inbounds %struct.bNode, %struct.bNode* %114, i32 0, i32 7, !dbg !5808
  %115 = load i32, i32* %flag108, align 8, !dbg !5809
  %and109 = and i32 %115, -17, !dbg !5809
  store i32 %and109, i32* %flag108, align 8, !dbg !5809
  %116 = load %struct.bNode*, %struct.bNode** %newnode, align 8, !dbg !5810
  call void @nodeSetSelected(%struct.bNode* %116, i8 zeroext 1), !dbg !5811
  br label %if.end110, !dbg !5812

if.end110:                                        ; preds = %if.then106, %for.body102
  %117 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5813
  %118 = load %struct.bNode*, %struct.bNode** %lastnode, align 8, !dbg !5815
  %cmp111 = icmp eq %struct.bNode* %117, %118, !dbg !5816
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !5817

if.then113:                                       ; preds = %if.end110
  br label %for.end117, !dbg !5818

if.end114:                                        ; preds = %if.end110
  br label %for.inc115, !dbg !5819

for.inc115:                                       ; preds = %if.end114
  %119 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5820
  %next116 = getelementptr inbounds %struct.bNode, %struct.bNode* %119, i32 0, i32 0, !dbg !5821
  %120 = load %struct.bNode*, %struct.bNode** %next116, align 8, !dbg !5821
  store %struct.bNode* %120, %struct.bNode** %node, align 8, !dbg !5822
  br label %for.cond100, !dbg !5823, !llvm.loop !5824

for.end117:                                       ; preds = %if.then113, %for.cond100
  %121 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5826
  %call118 = call %struct.Main* @CTX_data_main(%struct.bContext* %121), !dbg !5827
  %122 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !5828
  %edittree119 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %122, i32 0, i32 19, !dbg !5829
  %123 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree119, align 8, !dbg !5829
  call void @ntreeUpdateTree(%struct.Main* %call118, %struct.bNodeTree* %123), !dbg !5830
  %124 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5831
  %125 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !5832
  call void @snode_notify(%struct.bContext* %124, %struct.SpaceNode* %125), !dbg !5833
  %126 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5834
  %127 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !5835
  call void @snode_dag_update(%struct.bContext* %126, %struct.SpaceNode* %127), !dbg !5836
  ret i32 4, !dbg !5837
}

declare dso_local %struct.PropertyRNA* @RNA_def_boolean(i8*, i8*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_node_select_check(%struct.ListBase* %lb) #0 !dbg !5838 {
entry:
  %retval = alloca i8, align 1
  %lb.addr = alloca %struct.ListBase*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !5841, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !5843, metadata !DIExpression()), !dbg !5844
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5845
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !5847
  %1 = load i8*, i8** %first, align 8, !dbg !5847
  %2 = bitcast i8* %1 to %struct.bNode*, !dbg !5845
  store %struct.bNode* %2, %struct.bNode** %node, align 8, !dbg !5848
  br label %for.cond, !dbg !5849

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5850
  %tobool = icmp ne %struct.bNode* %3, null, !dbg !5852
  br i1 %tobool, label %for.body, label %for.end, !dbg !5852

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5853
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %4, i32 0, i32 7, !dbg !5856
  %5 = load i32, i32* %flag, align 8, !dbg !5856
  %and = and i32 %5, 1, !dbg !5857
  %tobool1 = icmp ne i32 %and, 0, !dbg !5857
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5858

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !5859
  br label %return, !dbg !5859

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5861

for.inc:                                          ; preds = %if.end
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5862
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 0, !dbg !5863
  %7 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !5863
  store %struct.bNode* %7, %struct.bNode** %node, align 8, !dbg !5864
  br label %for.cond, !dbg !5865, !llvm.loop !5866

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !5868
  br label %return, !dbg !5868

return:                                           ; preds = %for.end, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !5869
  ret i8 %8, !dbg !5869
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_read_renderlayers(%struct.wmOperatorType* %ot) #0 !dbg !5870 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5871, metadata !DIExpression()), !dbg !5872
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5873
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5874
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0), i8** %name, align 8, !dbg !5875
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5876
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5877
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0), i8** %idname, align 8, !dbg !5878
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5879
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5880
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22, i64 0, i64 0), i8** %description, align 8, !dbg !5881
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5882
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5883
  store i32 (%struct.bContext*, %struct.wmOperator*)* @node_read_renderlayers_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5884
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5885
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5886
  store i32 (%struct.bContext*)* @composite_node_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !5887
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5888
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5889
  store i16 0, i16* %flag, align 8, !dbg !5890
  ret void, !dbg !5891
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_read_renderlayers_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !5892 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %curscene = alloca %struct.Scene*, align 8
  %scene = alloca %struct.Scene*, align 8
  %node = alloca %struct.bNode*, align 8
  %id12 = alloca %struct.ID*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5893, metadata !DIExpression()), !dbg !5894
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !5895, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !5897, metadata !DIExpression()), !dbg !5898
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5899
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !5900
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !5898
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !5901, metadata !DIExpression()), !dbg !5902
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5903
  %call1 = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %1), !dbg !5904
  store %struct.SpaceNode* %call1, %struct.SpaceNode** %snode, align 8, !dbg !5902
  call void @llvm.dbg.declare(metadata %struct.Scene** %curscene, metadata !5905, metadata !DIExpression()), !dbg !5906
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5907
  %call2 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %2), !dbg !5908
  store %struct.Scene* %call2, %struct.Scene** %curscene, align 8, !dbg !5906
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !5909, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !5911, metadata !DIExpression()), !dbg !5912
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5913
  call void @ED_preview_kill_jobs(%struct.bContext* %3), !dbg !5914
  %4 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5915
  %scene3 = getelementptr inbounds %struct.Main, %struct.Main* %4, i32 0, i32 11, !dbg !5917
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene3, i32 0, i32 0, !dbg !5918
  %5 = load i8*, i8** %first, align 8, !dbg !5918
  %6 = bitcast i8* %5 to %struct.Scene*, !dbg !5915
  store %struct.Scene* %6, %struct.Scene** %scene, align 8, !dbg !5919
  br label %for.cond, !dbg !5920

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5921
  %tobool = icmp ne %struct.Scene* %7, null, !dbg !5923
  br i1 %tobool, label %for.body, label %for.end, !dbg !5923

for.body:                                         ; preds = %for.cond
  %8 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5924
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %8, i32 0, i32 0, !dbg !5925
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !5926
  %9 = load i16, i16* %flag, align 2, !dbg !5927
  %conv = sext i16 %9 to i32, !dbg !5927
  %or = or i32 %conv, 1024, !dbg !5927
  %conv4 = trunc i32 %or to i16, !dbg !5927
  store i16 %conv4, i16* %flag, align 2, !dbg !5927
  br label %for.inc, !dbg !5924

for.inc:                                          ; preds = %for.body
  %10 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5928
  %id5 = getelementptr inbounds %struct.Scene, %struct.Scene* %10, i32 0, i32 0, !dbg !5929
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 0, !dbg !5930
  %11 = load i8*, i8** %next, align 8, !dbg !5930
  %12 = bitcast i8* %11 to %struct.Scene*, !dbg !5928
  store %struct.Scene* %12, %struct.Scene** %scene, align 8, !dbg !5931
  br label %for.cond, !dbg !5932, !llvm.loop !5933

for.end:                                          ; preds = %for.cond
  %13 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !5935
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %13, i32 0, i32 19, !dbg !5937
  %14 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !5937
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %14, i32 0, i32 7, !dbg !5938
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !5939
  %15 = load i8*, i8** %first6, align 8, !dbg !5939
  %16 = bitcast i8* %15 to %struct.bNode*, !dbg !5935
  store %struct.bNode* %16, %struct.bNode** %node, align 8, !dbg !5940
  br label %for.cond7, !dbg !5941

for.cond7:                                        ; preds = %for.inc24, %for.end
  %17 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5942
  %tobool8 = icmp ne %struct.bNode* %17, null, !dbg !5944
  br i1 %tobool8, label %for.body9, label %for.end26, !dbg !5944

for.body9:                                        ; preds = %for.cond7
  %18 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5945
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 8, !dbg !5948
  %19 = load i16, i16* %type, align 4, !dbg !5948
  %conv10 = sext i16 %19 to i32, !dbg !5945
  %cmp = icmp eq i32 %conv10, 221, !dbg !5949
  br i1 %cmp, label %if.then, label %if.end23, !dbg !5950

if.then:                                          ; preds = %for.body9
  call void @llvm.dbg.declare(metadata %struct.ID** %id12, metadata !5951, metadata !DIExpression()), !dbg !5953
  %20 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5954
  %id13 = getelementptr inbounds %struct.bNode, %struct.bNode* %20, i32 0, i32 20, !dbg !5955
  %21 = load %struct.ID*, %struct.ID** %id13, align 8, !dbg !5955
  store %struct.ID* %21, %struct.ID** %id12, align 8, !dbg !5953
  %22 = load %struct.ID*, %struct.ID** %id12, align 8, !dbg !5956
  %flag14 = getelementptr inbounds %struct.ID, %struct.ID* %22, i32 0, i32 5, !dbg !5958
  %23 = load i16, i16* %flag14, align 2, !dbg !5958
  %conv15 = sext i16 %23 to i32, !dbg !5956
  %and = and i32 %conv15, 1024, !dbg !5959
  %tobool16 = icmp ne i32 %and, 0, !dbg !5959
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !5960

if.then17:                                        ; preds = %if.then
  %24 = load %struct.Scene*, %struct.Scene** %curscene, align 8, !dbg !5961
  %25 = load %struct.ID*, %struct.ID** %id12, align 8, !dbg !5963
  %26 = bitcast %struct.ID* %25 to %struct.Scene*, !dbg !5964
  %call18 = call zeroext i8 @RE_ReadRenderResult(%struct.Scene* %24, %struct.Scene* %26), !dbg !5965
  %27 = load %struct.ID*, %struct.ID** %id12, align 8, !dbg !5966
  %28 = bitcast %struct.ID* %27 to %struct.Scene*, !dbg !5967
  call void @ntreeCompositTagRender(%struct.Scene* %28), !dbg !5968
  %29 = load %struct.ID*, %struct.ID** %id12, align 8, !dbg !5969
  %flag19 = getelementptr inbounds %struct.ID, %struct.ID* %29, i32 0, i32 5, !dbg !5970
  %30 = load i16, i16* %flag19, align 2, !dbg !5971
  %conv20 = sext i16 %30 to i32, !dbg !5971
  %and21 = and i32 %conv20, -1025, !dbg !5971
  %conv22 = trunc i32 %and21 to i16, !dbg !5971
  store i16 %conv22, i16* %flag19, align 2, !dbg !5971
  br label %if.end, !dbg !5972

if.end:                                           ; preds = %if.then17, %if.then
  br label %if.end23, !dbg !5973

if.end23:                                         ; preds = %if.end, %for.body9
  br label %for.inc24, !dbg !5974

for.inc24:                                        ; preds = %if.end23
  %31 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5975
  %next25 = getelementptr inbounds %struct.bNode, %struct.bNode* %31, i32 0, i32 0, !dbg !5976
  %32 = load %struct.bNode*, %struct.bNode** %next25, align 8, !dbg !5976
  store %struct.bNode* %32, %struct.bNode** %node, align 8, !dbg !5977
  br label %for.cond7, !dbg !5978, !llvm.loop !5979

for.end26:                                        ; preds = %for.cond7
  %33 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5981
  %34 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !5982
  call void @snode_notify(%struct.bContext* %33, %struct.SpaceNode* %34), !dbg !5983
  %35 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5984
  %36 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !5985
  call void @snode_dag_update(%struct.bContext* %35, %struct.SpaceNode* %36), !dbg !5986
  ret i32 4, !dbg !5987
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_read_fullsamplelayers(%struct.wmOperatorType* %ot) #0 !dbg !5988 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5989, metadata !DIExpression()), !dbg !5990
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5991
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5992
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0), i8** %name, align 8, !dbg !5993
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5994
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5995
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i64 0, i64 0), i8** %idname, align 8, !dbg !5996
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5997
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5998
  store i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.25, i64 0, i64 0), i8** %description, align 8, !dbg !5999
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6000
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6001
  store i32 (%struct.bContext*, %struct.wmOperator*)* @node_read_fullsamplelayers_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6002
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6003
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6004
  store i32 (%struct.bContext*)* @composite_node_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !6005
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6006
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6007
  store i16 0, i16* %flag, align 8, !dbg !6008
  ret void, !dbg !6009
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_read_fullsamplelayers_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6010 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %curscene = alloca %struct.Scene*, align 8
  %re = alloca %struct.Render*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6011, metadata !DIExpression()), !dbg !6012
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6013, metadata !DIExpression()), !dbg !6014
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !6015, metadata !DIExpression()), !dbg !6016
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6017
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !6018
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !6016
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !6019, metadata !DIExpression()), !dbg !6020
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6021
  %call1 = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %1), !dbg !6022
  store %struct.SpaceNode* %call1, %struct.SpaceNode** %snode, align 8, !dbg !6020
  call void @llvm.dbg.declare(metadata %struct.Scene** %curscene, metadata !6023, metadata !DIExpression()), !dbg !6024
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6025
  %call2 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %2), !dbg !6026
  store %struct.Scene* %call2, %struct.Scene** %curscene, align 8, !dbg !6024
  call void @llvm.dbg.declare(metadata %struct.Render** %re, metadata !6027, metadata !DIExpression()), !dbg !6032
  %3 = load %struct.Scene*, %struct.Scene** %curscene, align 8, !dbg !6033
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 0, !dbg !6034
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !6035
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !6033
  %call3 = call %struct.Render* @RE_NewRender(i8* %arraydecay), !dbg !6036
  store %struct.Render* %call3, %struct.Render** %re, align 8, !dbg !6032
  call void @WM_cursor_wait(i8 zeroext 1), !dbg !6037
  %4 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !6038
  %5 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !6039
  %6 = load %struct.Scene*, %struct.Scene** %curscene, align 8, !dbg !6040
  %7 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6041
  %nodetree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %7, i32 0, i32 18, !dbg !6042
  %8 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !6042
  call void @RE_MergeFullSample(%struct.Render* %4, %struct.Main* %5, %struct.Scene* %6, %struct.bNodeTree* %8), !dbg !6043
  call void @WM_cursor_wait(i8 zeroext 0), !dbg !6044
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6045
  call void @WM_event_add_notifier(%struct.bContext* %9, i32 67960832, i8* null), !dbg !6046
  ret i32 4, !dbg !6047
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @node_render_changed_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6048 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %sce = alloca %struct.Scene*, align 8
  %node = alloca %struct.bNode*, align 8
  %srl = alloca %struct.SceneRenderLayer*, align 8
  %op_ptr = alloca %struct.PointerRNA, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6049, metadata !DIExpression()), !dbg !6050
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6051, metadata !DIExpression()), !dbg !6052
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce, metadata !6053, metadata !DIExpression()), !dbg !6054
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6055
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !6056
  store %struct.Scene* %call, %struct.Scene** %sce, align 8, !dbg !6054
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !6057, metadata !DIExpression()), !dbg !6058
  %1 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !6059
  %nodetree = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 18, !dbg !6061
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !6061
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 7, !dbg !6062
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !6063
  %3 = load i8*, i8** %first, align 8, !dbg !6063
  %4 = bitcast i8* %3 to %struct.bNode*, !dbg !6059
  store %struct.bNode* %4, %struct.bNode** %node, align 8, !dbg !6064
  br label %for.cond, !dbg !6065

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6066
  %tobool = icmp ne %struct.bNode* %5, null, !dbg !6068
  br i1 %tobool, label %for.body, label %for.end, !dbg !6068

for.body:                                         ; preds = %for.cond
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6069
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 20, !dbg !6072
  %7 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6072
  %8 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !6073
  %9 = bitcast %struct.Scene* %8 to %struct.ID*, !dbg !6074
  %cmp = icmp eq %struct.ID* %7, %9, !dbg !6075
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6076

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6077
  %need_exec = getelementptr inbounds %struct.bNode, %struct.bNode* %10, i32 0, i32 37, !dbg !6078
  %11 = load i16, i16* %need_exec, align 4, !dbg !6078
  %conv = sext i16 %11 to i32, !dbg !6077
  %tobool1 = icmp ne i32 %conv, 0, !dbg !6077
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6079

if.then:                                          ; preds = %land.lhs.true
  br label %for.end, !dbg !6080

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !6082

for.inc:                                          ; preds = %if.end
  %12 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6083
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %12, i32 0, i32 0, !dbg !6084
  %13 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !6084
  store %struct.bNode* %13, %struct.bNode** %node, align 8, !dbg !6085
  br label %for.cond, !dbg !6086, !llvm.loop !6087

for.end:                                          ; preds = %if.then, %for.cond
  %14 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6089
  %tobool2 = icmp ne %struct.bNode* %14, null, !dbg !6089
  br i1 %tobool2, label %if.then3, label %if.end14, !dbg !6091

if.then3:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.SceneRenderLayer** %srl, metadata !6092, metadata !DIExpression()), !dbg !6124
  %15 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !6125
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %15, i32 0, i32 22, !dbg !6126
  %layers = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 60, !dbg !6127
  %16 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6128
  %custom1 = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 33, !dbg !6129
  %17 = load i16, i16* %custom1, align 8, !dbg !6129
  %conv4 = sext i16 %17 to i32, !dbg !6128
  %call5 = call i8* @BLI_findlink(%struct.ListBase* %layers, i32 %conv4), !dbg !6130
  %18 = bitcast i8* %call5 to %struct.SceneRenderLayer*, !dbg !6130
  store %struct.SceneRenderLayer* %18, %struct.SceneRenderLayer** %srl, align 8, !dbg !6124
  %19 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !6131
  %tobool6 = icmp ne %struct.SceneRenderLayer* %19, null, !dbg !6131
  br i1 %tobool6, label %if.then7, label %if.end13, !dbg !6133

if.then7:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %op_ptr, metadata !6134, metadata !DIExpression()), !dbg !6136
  call void @WM_operator_properties_create(%struct.PointerRNA* %op_ptr, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26, i64 0, i64 0)), !dbg !6137
  %20 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !6138
  %name = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %20, i32 0, i32 2, !dbg !6139
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !6138
  call void @RNA_string_set(%struct.PointerRNA* %op_ptr, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i8* %arraydecay), !dbg !6140
  %21 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !6141
  %id8 = getelementptr inbounds %struct.Scene, %struct.Scene* %21, i32 0, i32 0, !dbg !6142
  %name9 = getelementptr inbounds %struct.ID, %struct.ID* %id8, i32 0, i32 4, !dbg !6143
  %arraydecay10 = getelementptr inbounds [66 x i8], [66 x i8]* %name9, i64 0, i64 0, !dbg !6141
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay10, i64 2, !dbg !6144
  call void @RNA_string_set(%struct.PointerRNA* %op_ptr, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), i8* %add.ptr), !dbg !6145
  %22 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !6146
  %r11 = getelementptr inbounds %struct.Scene, %struct.Scene* %22, i32 0, i32 22, !dbg !6147
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r11, i32 0, i32 46, !dbg !6148
  %23 = load i32, i32* %scemode, align 4, !dbg !6149
  %or = or i32 %23, 16384, !dbg !6149
  store i32 %or, i32* %scemode, align 4, !dbg !6149
  %24 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6150
  %call12 = call i32 @WM_operator_name_call(%struct.bContext* %24, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26, i64 0, i64 0), i16 signext 0, %struct.PointerRNA* %op_ptr), !dbg !6151
  call void @WM_operator_properties_free(%struct.PointerRNA* %op_ptr), !dbg !6152
  store i32 4, i32* %retval, align 4, !dbg !6153
  br label %return, !dbg !6153

if.end13:                                         ; preds = %if.then3
  br label %if.end14, !dbg !6154

if.end14:                                         ; preds = %if.end13, %for.end
  store i32 2, i32* %retval, align 4, !dbg !6155
  br label %return, !dbg !6155

return:                                           ; preds = %if.end14, %if.then7
  %25 = load i32, i32* %retval, align 4, !dbg !6156
  ret i32 %25, !dbg !6156
}

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

declare dso_local void @WM_operator_properties_create(%struct.PointerRNA*, i8*) #2

declare dso_local void @RNA_string_set(%struct.PointerRNA*, i8*, i8*) #2

declare dso_local i32 @WM_operator_name_call(%struct.bContext*, i8*, i16 signext, %struct.PointerRNA*) #2

declare dso_local void @WM_operator_properties_free(%struct.PointerRNA*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_render_changed(%struct.wmOperatorType* %ot) #0 !dbg !6157 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6158, metadata !DIExpression()), !dbg !6159
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6160
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6161
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0), i8** %name, align 8, !dbg !6162
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6163
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6164
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30, i64 0, i64 0), i8** %idname, align 8, !dbg !6165
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6166
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6167
  store i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.31, i64 0, i64 0), i8** %description, align 8, !dbg !6168
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6169
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6170
  store i32 (%struct.bContext*, %struct.wmOperator*)* @node_render_changed_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6171
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6172
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6173
  store i32 (%struct.bContext*)* @composite_node_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !6174
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6175
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6176
  store i16 0, i16* %flag, align 8, !dbg !6177
  ret void, !dbg !6178
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_hide_toggle(%struct.wmOperatorType* %ot) #0 !dbg !6179 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6180, metadata !DIExpression()), !dbg !6181
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6182
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6183
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i8** %name, align 8, !dbg !6184
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6185
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6186
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.33, i64 0, i64 0), i8** %description, align 8, !dbg !6187
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6188
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6189
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.34, i64 0, i64 0), i8** %idname, align 8, !dbg !6190
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6191
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6192
  store i32 (%struct.bContext*, %struct.wmOperator*)* @node_hide_toggle_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6193
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6194
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6195
  store i32 (%struct.bContext*)* @ED_operator_node_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !6196
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6197
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6198
  store i16 3, i16* %flag, align 8, !dbg !6199
  ret void, !dbg !6200
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_hide_toggle_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6201 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6202, metadata !DIExpression()), !dbg !6203
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6204, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !6206, metadata !DIExpression()), !dbg !6207
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6208
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !6209
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !6207
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6210
  %cmp = icmp eq %struct.SpaceNode* %1, null, !dbg !6212
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6213

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6214
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %2, i32 0, i32 19, !dbg !6215
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !6215
  %cmp1 = icmp eq %struct.bNodeTree* %3, null, !dbg !6216
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6217

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !6218
  br label %return, !dbg !6218

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6219
  call void @node_flag_toggle_exec(%struct.SpaceNode* %4, i32 8), !dbg !6220
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6221
  call void @WM_event_add_notifier(%struct.bContext* %5, i32 288555008, i8* null), !dbg !6222
  store i32 4, i32* %retval, align 4, !dbg !6223
  br label %return, !dbg !6223

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !6224
  ret i32 %6, !dbg !6224
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_preview_toggle(%struct.wmOperatorType* %ot) #0 !dbg !6225 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6226, metadata !DIExpression()), !dbg !6227
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6228
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6229
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.35, i64 0, i64 0), i8** %name, align 8, !dbg !6230
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6231
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6232
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.36, i64 0, i64 0), i8** %description, align 8, !dbg !6233
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6234
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6235
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.37, i64 0, i64 0), i8** %idname, align 8, !dbg !6236
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6237
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6238
  store i32 (%struct.bContext*, %struct.wmOperator*)* @node_preview_toggle_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6239
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6240
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6241
  store i32 (%struct.bContext*)* @ED_operator_node_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !6242
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6243
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6244
  store i16 3, i16* %flag, align 8, !dbg !6245
  ret void, !dbg !6246
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_preview_toggle_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6247 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6248, metadata !DIExpression()), !dbg !6249
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6250, metadata !DIExpression()), !dbg !6251
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !6252, metadata !DIExpression()), !dbg !6253
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6254
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !6255
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !6253
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6256
  %cmp = icmp eq %struct.SpaceNode* %1, null, !dbg !6258
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6259

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6260
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %2, i32 0, i32 19, !dbg !6261
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !6261
  %cmp1 = icmp eq %struct.bNodeTree* %3, null, !dbg !6262
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6263

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !6264
  br label %return, !dbg !6264

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6265
  call void @ED_preview_kill_jobs(%struct.bContext* %4), !dbg !6266
  %5 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6267
  call void @node_flag_toggle_exec(%struct.SpaceNode* %5, i32 4), !dbg !6268
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6269
  %7 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6270
  call void @snode_notify(%struct.bContext* %6, %struct.SpaceNode* %7), !dbg !6271
  store i32 4, i32* %retval, align 4, !dbg !6272
  br label %return, !dbg !6272

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !6273
  ret i32 %8, !dbg !6273
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_options_toggle(%struct.wmOperatorType* %ot) #0 !dbg !6274 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6275, metadata !DIExpression()), !dbg !6276
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6277
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6278
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i8** %name, align 8, !dbg !6279
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6280
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6281
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i64 0, i64 0), i8** %description, align 8, !dbg !6282
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6283
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6284
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), i8** %idname, align 8, !dbg !6285
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6286
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6287
  store i32 (%struct.bContext*, %struct.wmOperator*)* @node_options_toggle_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6288
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6289
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6290
  store i32 (%struct.bContext*)* @ED_operator_node_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !6291
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6292
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6293
  store i16 3, i16* %flag, align 8, !dbg !6294
  ret void, !dbg !6295
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_options_toggle_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6296 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6297, metadata !DIExpression()), !dbg !6298
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6299, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !6301, metadata !DIExpression()), !dbg !6302
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6303
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !6304
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !6302
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6305
  %cmp = icmp eq %struct.SpaceNode* %1, null, !dbg !6307
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6308

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6309
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %2, i32 0, i32 19, !dbg !6310
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !6310
  %cmp1 = icmp eq %struct.bNodeTree* %3, null, !dbg !6311
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6312

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !6313
  br label %return, !dbg !6313

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6314
  call void @node_flag_toggle_exec(%struct.SpaceNode* %4, i32 2), !dbg !6315
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6316
  call void @WM_event_add_notifier(%struct.bContext* %5, i32 288555008, i8* null), !dbg !6317
  store i32 4, i32* %retval, align 4, !dbg !6318
  br label %return, !dbg !6318

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !6319
  ret i32 %6, !dbg !6319
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_hide_socket_toggle(%struct.wmOperatorType* %ot) #0 !dbg !6320 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6321, metadata !DIExpression()), !dbg !6322
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6323
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6324
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.41, i64 0, i64 0), i8** %name, align 8, !dbg !6325
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6326
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6327
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.42, i64 0, i64 0), i8** %description, align 8, !dbg !6328
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6329
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6330
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43, i64 0, i64 0), i8** %idname, align 8, !dbg !6331
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6332
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6333
  store i32 (%struct.bContext*, %struct.wmOperator*)* @node_socket_toggle_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6334
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6335
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6336
  store i32 (%struct.bContext*)* @ED_operator_node_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !6337
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6338
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6339
  store i16 3, i16* %flag, align 8, !dbg !6340
  ret void, !dbg !6341
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_socket_toggle_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6342 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %node = alloca %struct.bNode*, align 8
  %hidden = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6343, metadata !DIExpression()), !dbg !6344
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6345, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !6347, metadata !DIExpression()), !dbg !6348
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6349
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !6350
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !6348
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !6351, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.declare(metadata i32* %hidden, metadata !6353, metadata !DIExpression()), !dbg !6354
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6355
  %cmp = icmp eq %struct.SpaceNode* %1, null, !dbg !6357
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6358

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6359
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %2, i32 0, i32 19, !dbg !6360
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !6360
  %cmp1 = icmp eq %struct.bNodeTree* %3, null, !dbg !6361
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6362

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !6363
  br label %return, !dbg !6363

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6364
  call void @ED_preview_kill_jobs(%struct.bContext* %4), !dbg !6365
  store i32 0, i32* %hidden, align 4, !dbg !6366
  %5 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6367
  %edittree2 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %5, i32 0, i32 19, !dbg !6369
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree2, align 8, !dbg !6369
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %6, i32 0, i32 7, !dbg !6370
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !6371
  %7 = load i8*, i8** %first, align 8, !dbg !6371
  %8 = bitcast i8* %7 to %struct.bNode*, !dbg !6367
  store %struct.bNode* %8, %struct.bNode** %node, align 8, !dbg !6372
  br label %for.cond, !dbg !6373

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6374
  %tobool = icmp ne %struct.bNode* %9, null, !dbg !6376
  br i1 %tobool, label %for.body, label %for.end, !dbg !6376

for.body:                                         ; preds = %for.cond
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6377
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %10, i32 0, i32 7, !dbg !6380
  %11 = load i32, i32* %flag, align 8, !dbg !6380
  %and = and i32 %11, 1, !dbg !6381
  %tobool3 = icmp ne i32 %and, 0, !dbg !6381
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !6382

if.then4:                                         ; preds = %for.body
  %12 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6383
  %call5 = call i32 @node_has_hidden_sockets(%struct.bNode* %12), !dbg !6386
  %tobool6 = icmp ne i32 %call5, 0, !dbg !6386
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !6387

if.then7:                                         ; preds = %if.then4
  store i32 1, i32* %hidden, align 4, !dbg !6388
  br label %for.end, !dbg !6390

if.end8:                                          ; preds = %if.then4
  br label %if.end9, !dbg !6391

if.end9:                                          ; preds = %if.end8, %for.body
  br label %for.inc, !dbg !6392

for.inc:                                          ; preds = %if.end9
  %13 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6393
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %13, i32 0, i32 0, !dbg !6394
  %14 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !6394
  store %struct.bNode* %14, %struct.bNode** %node, align 8, !dbg !6395
  br label %for.cond, !dbg !6396, !llvm.loop !6397

for.end:                                          ; preds = %if.then7, %for.cond
  %15 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6399
  %edittree10 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %15, i32 0, i32 19, !dbg !6401
  %16 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree10, align 8, !dbg !6401
  %nodes11 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %16, i32 0, i32 7, !dbg !6402
  %first12 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes11, i32 0, i32 0, !dbg !6403
  %17 = load i8*, i8** %first12, align 8, !dbg !6403
  %18 = bitcast i8* %17 to %struct.bNode*, !dbg !6399
  store %struct.bNode* %18, %struct.bNode** %node, align 8, !dbg !6404
  br label %for.cond13, !dbg !6405

for.cond13:                                       ; preds = %for.inc22, %for.end
  %19 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6406
  %tobool14 = icmp ne %struct.bNode* %19, null, !dbg !6408
  br i1 %tobool14, label %for.body15, label %for.end24, !dbg !6408

for.body15:                                       ; preds = %for.cond13
  %20 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6409
  %flag16 = getelementptr inbounds %struct.bNode, %struct.bNode* %20, i32 0, i32 7, !dbg !6412
  %21 = load i32, i32* %flag16, align 8, !dbg !6412
  %and17 = and i32 %21, 1, !dbg !6413
  %tobool18 = icmp ne i32 %and17, 0, !dbg !6413
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !6414

if.then19:                                        ; preds = %for.body15
  %22 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6415
  %23 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6417
  %24 = load i32, i32* %hidden, align 4, !dbg !6418
  %tobool20 = icmp ne i32 %24, 0, !dbg !6419
  %lnot = xor i1 %tobool20, true, !dbg !6419
  %lnot.ext = zext i1 %lnot to i32, !dbg !6419
  call void @node_set_hidden_sockets(%struct.SpaceNode* %22, %struct.bNode* %23, i32 %lnot.ext), !dbg !6420
  br label %if.end21, !dbg !6421

if.end21:                                         ; preds = %if.then19, %for.body15
  br label %for.inc22, !dbg !6422

for.inc22:                                        ; preds = %if.end21
  %25 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6423
  %next23 = getelementptr inbounds %struct.bNode, %struct.bNode* %25, i32 0, i32 0, !dbg !6424
  %26 = load %struct.bNode*, %struct.bNode** %next23, align 8, !dbg !6424
  store %struct.bNode* %26, %struct.bNode** %node, align 8, !dbg !6425
  br label %for.cond13, !dbg !6426, !llvm.loop !6427

for.end24:                                        ; preds = %for.cond13
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6429
  %call25 = call %struct.Main* @CTX_data_main(%struct.bContext* %27), !dbg !6430
  %28 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6431
  %edittree26 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %28, i32 0, i32 19, !dbg !6432
  %29 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree26, align 8, !dbg !6432
  call void @ntreeUpdateTree(%struct.Main* %call25, %struct.bNodeTree* %29), !dbg !6433
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6434
  call void @WM_event_add_notifier(%struct.bContext* %30, i32 288555008, i8* null), !dbg !6435
  store i32 4, i32* %retval, align 4, !dbg !6436
  br label %return, !dbg !6436

return:                                           ; preds = %for.end24, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !6437
  ret i32 %31, !dbg !6437
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_mute_toggle(%struct.wmOperatorType* %ot) #0 !dbg !6438 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6439, metadata !DIExpression()), !dbg !6440
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6441
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6442
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.44, i64 0, i64 0), i8** %name, align 8, !dbg !6443
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6444
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6445
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.45, i64 0, i64 0), i8** %description, align 8, !dbg !6446
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6447
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6448
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.46, i64 0, i64 0), i8** %idname, align 8, !dbg !6449
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6450
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6451
  store i32 (%struct.bContext*, %struct.wmOperator*)* @node_mute_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6452
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6453
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6454
  store i32 (%struct.bContext*)* @ED_operator_node_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !6455
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6456
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6457
  store i16 3, i16* %flag, align 8, !dbg !6458
  ret void, !dbg !6459
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_mute_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6460 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6461, metadata !DIExpression()), !dbg !6462
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6463, metadata !DIExpression()), !dbg !6464
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !6465, metadata !DIExpression()), !dbg !6466
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6467
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !6468
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !6466
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !6469, metadata !DIExpression()), !dbg !6470
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6471
  call void @ED_preview_kill_jobs(%struct.bContext* %1), !dbg !6472
  %2 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6473
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %2, i32 0, i32 19, !dbg !6475
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !6475
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 7, !dbg !6476
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !6477
  %4 = load i8*, i8** %first, align 8, !dbg !6477
  %5 = bitcast i8* %4 to %struct.bNode*, !dbg !6473
  store %struct.bNode* %5, %struct.bNode** %node, align 8, !dbg !6478
  br label %for.cond, !dbg !6479

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6480
  %tobool = icmp ne %struct.bNode* %6, null, !dbg !6482
  br i1 %tobool, label %for.body, label %for.end, !dbg !6482

for.body:                                         ; preds = %for.cond
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6483
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %7, i32 0, i32 7, !dbg !6486
  %8 = load i32, i32* %flag, align 8, !dbg !6486
  %and = and i32 %8, 1, !dbg !6487
  %tobool1 = icmp ne i32 %and, 0, !dbg !6487
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !6488

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6489
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %9, i32 0, i32 4, !dbg !6490
  %10 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !6490
  %update_internal_links = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %10, i32 0, i32 39, !dbg !6491
  %update_internal_links2 = bitcast {}** %update_internal_links to void (%struct.bNodeTree*, %struct.bNode*)**, !dbg !6491
  %11 = load void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*)** %update_internal_links2, align 8, !dbg !6491
  %tobool3 = icmp ne void (%struct.bNodeTree*, %struct.bNode*)* %11, null, !dbg !6489
  br i1 %tobool3, label %if.then, label %if.end, !dbg !6492

if.then:                                          ; preds = %land.lhs.true
  %12 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6493
  %flag4 = getelementptr inbounds %struct.bNode, %struct.bNode* %12, i32 0, i32 7, !dbg !6495
  %13 = load i32, i32* %flag4, align 8, !dbg !6496
  %xor = xor i32 %13, 512, !dbg !6496
  store i32 %xor, i32* %flag4, align 8, !dbg !6496
  %14 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6497
  %15 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6498
  call void @snode_update(%struct.SpaceNode* %14, %struct.bNode* %15), !dbg !6499
  br label %if.end, !dbg !6500

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !6501

for.inc:                                          ; preds = %if.end
  %16 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6502
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 0, !dbg !6503
  %17 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !6503
  store %struct.bNode* %17, %struct.bNode** %node, align 8, !dbg !6504
  br label %for.cond, !dbg !6505, !llvm.loop !6506

for.end:                                          ; preds = %for.cond
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6508
  %19 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6509
  call void @snode_notify(%struct.bContext* %18, %struct.SpaceNode* %19), !dbg !6510
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6511
  %21 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6512
  call void @snode_dag_update(%struct.bContext* %20, %struct.SpaceNode* %21), !dbg !6513
  ret i32 4, !dbg !6514
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_delete(%struct.wmOperatorType* %ot) #0 !dbg !6515 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6516, metadata !DIExpression()), !dbg !6517
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6518
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6519
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0), i8** %name, align 8, !dbg !6520
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6521
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6522
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.48, i64 0, i64 0), i8** %description, align 8, !dbg !6523
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6524
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6525
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49, i64 0, i64 0), i8** %idname, align 8, !dbg !6526
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6527
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6528
  store i32 (%struct.bContext*, %struct.wmOperator*)* @node_delete_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6529
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6530
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6531
  store i32 (%struct.bContext*)* @ED_operator_node_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !6532
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6533
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6534
  store i16 3, i16* %flag, align 8, !dbg !6535
  ret void, !dbg !6536
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_delete_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6537 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %node = alloca %struct.bNode*, align 8
  %next = alloca %struct.bNode*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6538, metadata !DIExpression()), !dbg !6539
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6540, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !6542, metadata !DIExpression()), !dbg !6543
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6544
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !6545
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !6543
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !6546, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.declare(metadata %struct.bNode** %next, metadata !6548, metadata !DIExpression()), !dbg !6549
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6550
  call void @ED_preview_kill_jobs(%struct.bContext* %1), !dbg !6551
  %2 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6552
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %2, i32 0, i32 19, !dbg !6554
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !6554
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 7, !dbg !6555
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !6556
  %4 = load i8*, i8** %first, align 8, !dbg !6556
  %5 = bitcast i8* %4 to %struct.bNode*, !dbg !6552
  store %struct.bNode* %5, %struct.bNode** %node, align 8, !dbg !6557
  br label %for.cond, !dbg !6558

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6559
  %tobool = icmp ne %struct.bNode* %6, null, !dbg !6561
  br i1 %tobool, label %for.body, label %for.end, !dbg !6561

for.body:                                         ; preds = %for.cond
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6562
  %next1 = getelementptr inbounds %struct.bNode, %struct.bNode* %7, i32 0, i32 0, !dbg !6564
  %8 = load %struct.bNode*, %struct.bNode** %next1, align 8, !dbg !6564
  store %struct.bNode* %8, %struct.bNode** %next, align 8, !dbg !6565
  %9 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6566
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %9, i32 0, i32 7, !dbg !6568
  %10 = load i32, i32* %flag, align 8, !dbg !6568
  %and = and i32 %10, 1, !dbg !6569
  %tobool2 = icmp ne i32 %and, 0, !dbg !6569
  br i1 %tobool2, label %if.then, label %if.end7, !dbg !6570

if.then:                                          ; preds = %for.body
  %11 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6571
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %11, i32 0, i32 20, !dbg !6574
  %12 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6574
  %tobool3 = icmp ne %struct.ID* %12, null, !dbg !6571
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !6575

if.then4:                                         ; preds = %if.then
  %13 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6576
  %id5 = getelementptr inbounds %struct.bNode, %struct.bNode* %13, i32 0, i32 20, !dbg !6577
  %14 = load %struct.ID*, %struct.ID** %id5, align 8, !dbg !6577
  %us = getelementptr inbounds %struct.ID, %struct.ID* %14, i32 0, i32 6, !dbg !6578
  %15 = load i32, i32* %us, align 4, !dbg !6579
  %dec = add nsw i32 %15, -1, !dbg !6579
  store i32 %dec, i32* %us, align 4, !dbg !6579
  br label %if.end, !dbg !6576

if.end:                                           ; preds = %if.then4, %if.then
  %16 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6580
  %edittree6 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %16, i32 0, i32 19, !dbg !6581
  %17 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree6, align 8, !dbg !6581
  %18 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6582
  call void @nodeFreeNode(%struct.bNodeTree* %17, %struct.bNode* %18), !dbg !6583
  br label %if.end7, !dbg !6584

if.end7:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !6585

for.inc:                                          ; preds = %if.end7
  %19 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !6586
  store %struct.bNode* %19, %struct.bNode** %node, align 8, !dbg !6587
  br label %for.cond, !dbg !6588, !llvm.loop !6589

for.end:                                          ; preds = %for.cond
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6591
  %call8 = call %struct.Main* @CTX_data_main(%struct.bContext* %20), !dbg !6592
  %21 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6593
  %edittree9 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %21, i32 0, i32 19, !dbg !6594
  %22 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree9, align 8, !dbg !6594
  call void @ntreeUpdateTree(%struct.Main* %call8, %struct.bNodeTree* %22), !dbg !6595
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6596
  %24 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6597
  call void @snode_notify(%struct.bContext* %23, %struct.SpaceNode* %24), !dbg !6598
  %25 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6599
  %26 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6600
  call void @snode_dag_update(%struct.bContext* %25, %struct.SpaceNode* %26), !dbg !6601
  ret i32 4, !dbg !6602
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_delete_reconnect(%struct.wmOperatorType* %ot) #0 !dbg !6603 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6604, metadata !DIExpression()), !dbg !6605
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6606
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6607
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.50, i64 0, i64 0), i8** %name, align 8, !dbg !6608
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6609
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6610
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.51, i64 0, i64 0), i8** %description, align 8, !dbg !6611
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6612
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6613
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.52, i64 0, i64 0), i8** %idname, align 8, !dbg !6614
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6615
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6616
  store i32 (%struct.bContext*, %struct.wmOperator*)* @node_delete_reconnect_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6617
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6618
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6619
  store i32 (%struct.bContext*)* @ED_operator_node_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !6620
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6621
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6622
  store i16 3, i16* %flag, align 8, !dbg !6623
  ret void, !dbg !6624
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_delete_reconnect_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6625 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %node = alloca %struct.bNode*, align 8
  %next = alloca %struct.bNode*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6626, metadata !DIExpression()), !dbg !6627
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6628, metadata !DIExpression()), !dbg !6629
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !6630, metadata !DIExpression()), !dbg !6631
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6632
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !6633
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !6631
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !6634, metadata !DIExpression()), !dbg !6635
  call void @llvm.dbg.declare(metadata %struct.bNode** %next, metadata !6636, metadata !DIExpression()), !dbg !6637
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6638
  call void @ED_preview_kill_jobs(%struct.bContext* %1), !dbg !6639
  %2 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6640
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %2, i32 0, i32 19, !dbg !6642
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !6642
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 7, !dbg !6643
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !6644
  %4 = load i8*, i8** %first, align 8, !dbg !6644
  %5 = bitcast i8* %4 to %struct.bNode*, !dbg !6640
  store %struct.bNode* %5, %struct.bNode** %node, align 8, !dbg !6645
  br label %for.cond, !dbg !6646

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6647
  %tobool = icmp ne %struct.bNode* %6, null, !dbg !6649
  br i1 %tobool, label %for.body, label %for.end, !dbg !6649

for.body:                                         ; preds = %for.cond
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6650
  %next1 = getelementptr inbounds %struct.bNode, %struct.bNode* %7, i32 0, i32 0, !dbg !6652
  %8 = load %struct.bNode*, %struct.bNode** %next1, align 8, !dbg !6652
  store %struct.bNode* %8, %struct.bNode** %next, align 8, !dbg !6653
  %9 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6654
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %9, i32 0, i32 7, !dbg !6656
  %10 = load i32, i32* %flag, align 8, !dbg !6656
  %and = and i32 %10, 1, !dbg !6657
  %tobool2 = icmp ne i32 %and, 0, !dbg !6657
  br i1 %tobool2, label %if.then, label %if.end8, !dbg !6658

if.then:                                          ; preds = %for.body
  %11 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6659
  %edittree3 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %11, i32 0, i32 19, !dbg !6661
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree3, align 8, !dbg !6661
  %13 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6662
  call void @nodeInternalRelink(%struct.bNodeTree* %12, %struct.bNode* %13), !dbg !6663
  %14 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6664
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 20, !dbg !6666
  %15 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6666
  %tobool4 = icmp ne %struct.ID* %15, null, !dbg !6664
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !6667

if.then5:                                         ; preds = %if.then
  %16 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6668
  %id6 = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 20, !dbg !6669
  %17 = load %struct.ID*, %struct.ID** %id6, align 8, !dbg !6669
  %us = getelementptr inbounds %struct.ID, %struct.ID* %17, i32 0, i32 6, !dbg !6670
  %18 = load i32, i32* %us, align 4, !dbg !6671
  %dec = add nsw i32 %18, -1, !dbg !6671
  store i32 %dec, i32* %us, align 4, !dbg !6671
  br label %if.end, !dbg !6668

if.end:                                           ; preds = %if.then5, %if.then
  %19 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6672
  %edittree7 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %19, i32 0, i32 19, !dbg !6673
  %20 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree7, align 8, !dbg !6673
  %21 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6674
  call void @nodeFreeNode(%struct.bNodeTree* %20, %struct.bNode* %21), !dbg !6675
  br label %if.end8, !dbg !6676

if.end8:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !6677

for.inc:                                          ; preds = %if.end8
  %22 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !6678
  store %struct.bNode* %22, %struct.bNode** %node, align 8, !dbg !6679
  br label %for.cond, !dbg !6680, !llvm.loop !6681

for.end:                                          ; preds = %for.cond
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6683
  %call9 = call %struct.Main* @CTX_data_main(%struct.bContext* %23), !dbg !6684
  %24 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6685
  %edittree10 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %24, i32 0, i32 19, !dbg !6686
  %25 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree10, align 8, !dbg !6686
  call void @ntreeUpdateTree(%struct.Main* %call9, %struct.bNodeTree* %25), !dbg !6687
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6688
  %27 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6689
  call void @snode_notify(%struct.bContext* %26, %struct.SpaceNode* %27), !dbg !6690
  %28 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6691
  %29 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6692
  call void @snode_dag_update(%struct.bContext* %28, %struct.SpaceNode* %29), !dbg !6693
  ret i32 4, !dbg !6694
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_output_file_add_socket(%struct.wmOperatorType* %ot) #0 !dbg !6695 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6696, metadata !DIExpression()), !dbg !6697
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6698
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6699
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.53, i64 0, i64 0), i8** %name, align 8, !dbg !6700
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6701
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6702
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.54, i64 0, i64 0), i8** %description, align 8, !dbg !6703
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6704
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6705
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.55, i64 0, i64 0), i8** %idname, align 8, !dbg !6706
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6707
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6708
  store i32 (%struct.bContext*, %struct.wmOperator*)* @node_output_file_add_socket_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6709
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6710
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6711
  store i32 (%struct.bContext*)* @composite_node_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !6712
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6713
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6714
  store i16 3, i16* %flag, align 8, !dbg !6715
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6716
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6717
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6717
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6716
  %call = call %struct.PropertyRNA* @RNA_def_string(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0), i32 64, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.59, i64 0, i64 0)), !dbg !6718
  ret void, !dbg !6719
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_output_file_add_socket_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6720 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  %file_path = alloca [64 x i8], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6721, metadata !DIExpression()), !dbg !6722
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6723, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !6725, metadata !DIExpression()), !dbg !6726
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6727
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !6728
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !6726
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !6729, metadata !DIExpression()), !dbg !6730
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6731
  %call1 = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %1), !dbg !6732
  store %struct.SpaceNode* %call1, %struct.SpaceNode** %snode, align 8, !dbg !6730
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !6733, metadata !DIExpression()), !dbg !6734
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6735
  call void @CTX_data_pointer_get(%struct.PointerRNA* sret %ptr, %struct.bContext* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.104, i64 0, i64 0)), !dbg !6736
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !6737, metadata !DIExpression()), !dbg !6738
  store %struct.bNodeTree* null, %struct.bNodeTree** %ntree, align 8, !dbg !6738
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !6739, metadata !DIExpression()), !dbg !6740
  store %struct.bNode* null, %struct.bNode** %node, align 8, !dbg !6740
  call void @llvm.dbg.declare(metadata [64 x i8]* %file_path, metadata !6741, metadata !DIExpression()), !dbg !6742
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !6743
  %3 = load i8*, i8** %data, align 8, !dbg !6743
  %tobool = icmp ne i8* %3, null, !dbg !6745
  br i1 %tobool, label %if.then, label %if.else, !dbg !6746

if.then:                                          ; preds = %entry
  %data2 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !6747
  %4 = load i8*, i8** %data2, align 8, !dbg !6747
  %5 = bitcast i8* %4 to %struct.bNode*, !dbg !6749
  store %struct.bNode* %5, %struct.bNode** %node, align 8, !dbg !6750
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 0, !dbg !6751
  %data3 = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !6752
  %6 = load i8*, i8** %data3, align 8, !dbg !6752
  %7 = bitcast i8* %6 to %struct.bNodeTree*, !dbg !6753
  store %struct.bNodeTree* %7, %struct.bNodeTree** %ntree, align 8, !dbg !6754
  br label %if.end10, !dbg !6755

if.else:                                          ; preds = %entry
  %8 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6756
  %tobool4 = icmp ne %struct.SpaceNode* %8, null, !dbg !6756
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !6758

land.lhs.true:                                    ; preds = %if.else
  %9 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6759
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %9, i32 0, i32 19, !dbg !6760
  %10 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !6760
  %tobool5 = icmp ne %struct.bNodeTree* %10, null, !dbg !6759
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !6761

if.then6:                                         ; preds = %land.lhs.true
  %11 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6762
  %edittree7 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %11, i32 0, i32 19, !dbg !6764
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree7, align 8, !dbg !6764
  store %struct.bNodeTree* %12, %struct.bNodeTree** %ntree, align 8, !dbg !6765
  %13 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6766
  %edittree8 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %13, i32 0, i32 19, !dbg !6767
  %14 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree8, align 8, !dbg !6767
  %call9 = call %struct.bNode* @nodeGetActive(%struct.bNodeTree* %14), !dbg !6768
  store %struct.bNode* %call9, %struct.bNode** %node, align 8, !dbg !6769
  br label %if.end, !dbg !6770

if.end:                                           ; preds = %if.then6, %land.lhs.true, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  %15 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6771
  %tobool11 = icmp ne %struct.bNode* %15, null, !dbg !6771
  br i1 %tobool11, label %lor.lhs.false, label %if.then13, !dbg !6773

lor.lhs.false:                                    ; preds = %if.end10
  %16 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6774
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 8, !dbg !6775
  %17 = load i16, i16* %type, align 4, !dbg !6775
  %conv = sext i16 %17 to i32, !dbg !6774
  %cmp = icmp ne i32 %conv, 223, !dbg !6776
  br i1 %cmp, label %if.then13, label %if.end14, !dbg !6777

if.then13:                                        ; preds = %lor.lhs.false, %if.end10
  store i32 2, i32* %retval, align 4, !dbg !6778
  br label %return, !dbg !6778

if.end14:                                         ; preds = %lor.lhs.false
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6779
  %ptr15 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %18, i32 0, i32 7, !dbg !6780
  %19 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr15, align 8, !dbg !6780
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %file_path, i64 0, i64 0, !dbg !6781
  call void @RNA_string_get(%struct.PointerRNA* %19, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i64 0, i64 0), i8* %arraydecay), !dbg !6782
  %20 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !6783
  %21 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6784
  %arraydecay16 = getelementptr inbounds [64 x i8], [64 x i8]* %file_path, i64 0, i64 0, !dbg !6785
  %22 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6786
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %22, i32 0, i32 22, !dbg !6787
  %im_format = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 0, !dbg !6788
  %call17 = call %struct.bNodeSocket* @ntreeCompositOutputFileAddSocket(%struct.bNodeTree* %20, %struct.bNode* %21, i8* %arraydecay16, %struct.ImageFormatData* %im_format), !dbg !6789
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6790
  %24 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6791
  call void @snode_notify(%struct.bContext* %23, %struct.SpaceNode* %24), !dbg !6792
  store i32 4, i32* %retval, align 4, !dbg !6793
  br label %return, !dbg !6793

return:                                           ; preds = %if.end14, %if.then13
  %25 = load i32, i32* %retval, align 4, !dbg !6794
  ret i32 %25, !dbg !6794
}

declare dso_local %struct.PropertyRNA* @RNA_def_string(i8*, i8*, i8*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_output_file_remove_active_socket(%struct.wmOperatorType* %ot) #0 !dbg !6795 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6796, metadata !DIExpression()), !dbg !6797
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6798
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6799
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.60, i64 0, i64 0), i8** %name, align 8, !dbg !6800
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6801
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6802
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.61, i64 0, i64 0), i8** %description, align 8, !dbg !6803
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6804
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6805
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.62, i64 0, i64 0), i8** %idname, align 8, !dbg !6806
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6807
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6808
  store i32 (%struct.bContext*, %struct.wmOperator*)* @node_output_file_remove_active_socket_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6809
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6810
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6811
  store i32 (%struct.bContext*)* @composite_node_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !6812
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6813
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6814
  store i16 3, i16* %flag, align 8, !dbg !6815
  ret void, !dbg !6816
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_output_file_remove_active_socket_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6817 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6818, metadata !DIExpression()), !dbg !6819
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6820, metadata !DIExpression()), !dbg !6821
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !6822, metadata !DIExpression()), !dbg !6823
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6824
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !6825
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !6823
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !6826, metadata !DIExpression()), !dbg !6827
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6828
  call void @CTX_data_pointer_get(%struct.PointerRNA* sret %ptr, %struct.bContext* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.104, i64 0, i64 0)), !dbg !6829
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !6830, metadata !DIExpression()), !dbg !6831
  store %struct.bNodeTree* null, %struct.bNodeTree** %ntree, align 8, !dbg !6831
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !6832, metadata !DIExpression()), !dbg !6833
  store %struct.bNode* null, %struct.bNode** %node, align 8, !dbg !6833
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !6834
  %2 = load i8*, i8** %data, align 8, !dbg !6834
  %tobool = icmp ne i8* %2, null, !dbg !6836
  br i1 %tobool, label %if.then, label %if.else, !dbg !6837

if.then:                                          ; preds = %entry
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !6838
  %3 = load i8*, i8** %data1, align 8, !dbg !6838
  %4 = bitcast i8* %3 to %struct.bNode*, !dbg !6840
  store %struct.bNode* %4, %struct.bNode** %node, align 8, !dbg !6841
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 0, !dbg !6842
  %data2 = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !6843
  %5 = load i8*, i8** %data2, align 8, !dbg !6843
  %6 = bitcast i8* %5 to %struct.bNodeTree*, !dbg !6844
  store %struct.bNodeTree* %6, %struct.bNodeTree** %ntree, align 8, !dbg !6845
  br label %if.end9, !dbg !6846

if.else:                                          ; preds = %entry
  %7 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6847
  %tobool3 = icmp ne %struct.SpaceNode* %7, null, !dbg !6847
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !6849

land.lhs.true:                                    ; preds = %if.else
  %8 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6850
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %8, i32 0, i32 19, !dbg !6851
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !6851
  %tobool4 = icmp ne %struct.bNodeTree* %9, null, !dbg !6850
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !6852

if.then5:                                         ; preds = %land.lhs.true
  %10 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6853
  %edittree6 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %10, i32 0, i32 19, !dbg !6855
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree6, align 8, !dbg !6855
  store %struct.bNodeTree* %11, %struct.bNodeTree** %ntree, align 8, !dbg !6856
  %12 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6857
  %edittree7 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %12, i32 0, i32 19, !dbg !6858
  %13 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree7, align 8, !dbg !6858
  %call8 = call %struct.bNode* @nodeGetActive(%struct.bNodeTree* %13), !dbg !6859
  store %struct.bNode* %call8, %struct.bNode** %node, align 8, !dbg !6860
  br label %if.end, !dbg !6861

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %14 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6862
  %tobool10 = icmp ne %struct.bNode* %14, null, !dbg !6862
  br i1 %tobool10, label %lor.lhs.false, label %if.then12, !dbg !6864

lor.lhs.false:                                    ; preds = %if.end9
  %15 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6865
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %15, i32 0, i32 8, !dbg !6866
  %16 = load i16, i16* %type, align 4, !dbg !6866
  %conv = sext i16 %16 to i32, !dbg !6865
  %cmp = icmp ne i32 %conv, 223, !dbg !6867
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !6868

if.then12:                                        ; preds = %lor.lhs.false, %if.end9
  store i32 2, i32* %retval, align 4, !dbg !6869
  br label %return, !dbg !6869

if.end13:                                         ; preds = %lor.lhs.false
  %17 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !6870
  %18 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6872
  %call14 = call i32 @ntreeCompositOutputFileRemoveActiveSocket(%struct.bNodeTree* %17, %struct.bNode* %18), !dbg !6873
  %tobool15 = icmp ne i32 %call14, 0, !dbg !6873
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !6874

if.then16:                                        ; preds = %if.end13
  store i32 2, i32* %retval, align 4, !dbg !6875
  br label %return, !dbg !6875

if.end17:                                         ; preds = %if.end13
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6876
  %20 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6877
  call void @snode_notify(%struct.bContext* %19, %struct.SpaceNode* %20), !dbg !6878
  store i32 4, i32* %retval, align 4, !dbg !6879
  br label %return, !dbg !6879

return:                                           ; preds = %if.end17, %if.then16, %if.then12
  %21 = load i32, i32* %retval, align 4, !dbg !6880
  ret i32 %21, !dbg !6880
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_output_file_move_active_socket(%struct.wmOperatorType* %ot) #0 !dbg !2 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6881, metadata !DIExpression()), !dbg !6882
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6883
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6884
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.68, i64 0, i64 0), i8** %name, align 8, !dbg !6885
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6886
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6887
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.69, i64 0, i64 0), i8** %description, align 8, !dbg !6888
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6889
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6890
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.70, i64 0, i64 0), i8** %idname, align 8, !dbg !6891
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6892
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6893
  store i32 (%struct.bContext*, %struct.wmOperator*)* @node_output_file_move_active_socket_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6894
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6895
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6896
  store i32 (%struct.bContext*)* @composite_node_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !6897
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6898
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6899
  store i16 3, i16* %flag, align 8, !dbg !6900
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6901
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6902
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6902
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6901
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @NODE_OT_output_file_move_active_socket.direction_items, i64 0, i64 0), i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.65, i64 0, i64 0)), !dbg !6903
  ret void, !dbg !6904
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_output_file_move_active_socket_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6905 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %node = alloca %struct.bNode*, align 8
  %nimf = alloca %struct.NodeImageMultiFile*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  %direction = alloca i32, align 4
  %before = alloca %struct.bNodeSocket*, align 8
  %after = alloca %struct.bNodeSocket*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6906, metadata !DIExpression()), !dbg !6907
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6908, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !6910, metadata !DIExpression()), !dbg !6911
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6912
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !6913
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !6911
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !6914, metadata !DIExpression()), !dbg !6915
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6916
  call void @CTX_data_pointer_get(%struct.PointerRNA* sret %ptr, %struct.bContext* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.104, i64 0, i64 0)), !dbg !6917
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !6918, metadata !DIExpression()), !dbg !6919
  store %struct.bNode* null, %struct.bNode** %node, align 8, !dbg !6919
  call void @llvm.dbg.declare(metadata %struct.NodeImageMultiFile** %nimf, metadata !6920, metadata !DIExpression()), !dbg !6932
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !6933, metadata !DIExpression()), !dbg !6934
  call void @llvm.dbg.declare(metadata i32* %direction, metadata !6935, metadata !DIExpression()), !dbg !6936
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !6937
  %2 = load i8*, i8** %data, align 8, !dbg !6937
  %tobool = icmp ne i8* %2, null, !dbg !6939
  br i1 %tobool, label %if.then, label %if.else, !dbg !6940

if.then:                                          ; preds = %entry
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !6941
  %3 = load i8*, i8** %data1, align 8, !dbg !6941
  %4 = bitcast i8* %3 to %struct.bNode*, !dbg !6942
  store %struct.bNode* %4, %struct.bNode** %node, align 8, !dbg !6943
  br label %if.end7, !dbg !6944

if.else:                                          ; preds = %entry
  %5 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6945
  %tobool2 = icmp ne %struct.SpaceNode* %5, null, !dbg !6945
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !6947

land.lhs.true:                                    ; preds = %if.else
  %6 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6948
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %6, i32 0, i32 19, !dbg !6949
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !6949
  %tobool3 = icmp ne %struct.bNodeTree* %7, null, !dbg !6948
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !6950

if.then4:                                         ; preds = %land.lhs.true
  %8 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !6951
  %edittree5 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %8, i32 0, i32 19, !dbg !6952
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree5, align 8, !dbg !6952
  %call6 = call %struct.bNode* @nodeGetActive(%struct.bNodeTree* %9), !dbg !6953
  store %struct.bNode* %call6, %struct.bNode** %node, align 8, !dbg !6954
  br label %if.end, !dbg !6955

if.end:                                           ; preds = %if.then4, %land.lhs.true, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6956
  %tobool8 = icmp ne %struct.bNode* %10, null, !dbg !6956
  br i1 %tobool8, label %lor.lhs.false, label %if.then10, !dbg !6958

lor.lhs.false:                                    ; preds = %if.end7
  %11 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6959
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %11, i32 0, i32 8, !dbg !6960
  %12 = load i16, i16* %type, align 4, !dbg !6960
  %conv = sext i16 %12 to i32, !dbg !6959
  %cmp = icmp ne i32 %conv, 223, !dbg !6961
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !6962

if.then10:                                        ; preds = %lor.lhs.false, %if.end7
  store i32 2, i32* %retval, align 4, !dbg !6963
  br label %return, !dbg !6963

if.end11:                                         ; preds = %lor.lhs.false
  %13 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6964
  %storage = getelementptr inbounds %struct.bNode, %struct.bNode* %13, i32 0, i32 21, !dbg !6965
  %14 = load i8*, i8** %storage, align 8, !dbg !6965
  %15 = bitcast i8* %14 to %struct.NodeImageMultiFile*, !dbg !6964
  store %struct.NodeImageMultiFile* %15, %struct.NodeImageMultiFile** %nimf, align 8, !dbg !6966
  %16 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6967
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 17, !dbg !6968
  %17 = load %struct.NodeImageMultiFile*, %struct.NodeImageMultiFile** %nimf, align 8, !dbg !6969
  %active_input = getelementptr inbounds %struct.NodeImageMultiFile, %struct.NodeImageMultiFile* %17, i32 0, i32 4, !dbg !6970
  %18 = load i32, i32* %active_input, align 8, !dbg !6970
  %call12 = call i8* @BLI_findlink(%struct.ListBase* %inputs, i32 %18), !dbg !6971
  %19 = bitcast i8* %call12 to %struct.bNodeSocket*, !dbg !6971
  store %struct.bNodeSocket* %19, %struct.bNodeSocket** %sock, align 8, !dbg !6972
  %20 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6973
  %tobool13 = icmp ne %struct.bNodeSocket* %20, null, !dbg !6973
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !6975

if.then14:                                        ; preds = %if.end11
  store i32 2, i32* %retval, align 4, !dbg !6976
  br label %return, !dbg !6976

if.end15:                                         ; preds = %if.end11
  %21 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6977
  %ptr16 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %21, i32 0, i32 7, !dbg !6978
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr16, align 8, !dbg !6978
  %call17 = call i32 @RNA_enum_get(%struct.PointerRNA* %22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i64 0, i64 0)), !dbg !6979
  store i32 %call17, i32* %direction, align 4, !dbg !6980
  %23 = load i32, i32* %direction, align 4, !dbg !6981
  %cmp18 = icmp eq i32 %23, 1, !dbg !6983
  br i1 %cmp18, label %if.then20, label %if.else27, !dbg !6984

if.then20:                                        ; preds = %if.end15
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %before, metadata !6985, metadata !DIExpression()), !dbg !6987
  %24 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6988
  %prev = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %24, i32 0, i32 1, !dbg !6989
  %25 = load %struct.bNodeSocket*, %struct.bNodeSocket** %prev, align 8, !dbg !6989
  store %struct.bNodeSocket* %25, %struct.bNodeSocket** %before, align 8, !dbg !6987
  %26 = load %struct.bNodeSocket*, %struct.bNodeSocket** %before, align 8, !dbg !6990
  %tobool21 = icmp ne %struct.bNodeSocket* %26, null, !dbg !6990
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !6992

if.then22:                                        ; preds = %if.then20
  store i32 2, i32* %retval, align 4, !dbg !6993
  br label %return, !dbg !6993

if.end23:                                         ; preds = %if.then20
  %27 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6994
  %inputs24 = getelementptr inbounds %struct.bNode, %struct.bNode* %27, i32 0, i32 17, !dbg !6995
  %28 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6996
  %29 = bitcast %struct.bNodeSocket* %28 to i8*, !dbg !6996
  call void @BLI_remlink(%struct.ListBase* %inputs24, i8* %29), !dbg !6997
  %30 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6998
  %inputs25 = getelementptr inbounds %struct.bNode, %struct.bNode* %30, i32 0, i32 17, !dbg !6999
  %31 = load %struct.bNodeSocket*, %struct.bNodeSocket** %before, align 8, !dbg !7000
  %32 = bitcast %struct.bNodeSocket* %31 to i8*, !dbg !7000
  %33 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7001
  %34 = bitcast %struct.bNodeSocket* %33 to i8*, !dbg !7001
  call void @BLI_insertlinkbefore(%struct.ListBase* %inputs25, i8* %32, i8* %34), !dbg !7002
  %35 = load %struct.NodeImageMultiFile*, %struct.NodeImageMultiFile** %nimf, align 8, !dbg !7003
  %active_input26 = getelementptr inbounds %struct.NodeImageMultiFile, %struct.NodeImageMultiFile* %35, i32 0, i32 4, !dbg !7004
  %36 = load i32, i32* %active_input26, align 8, !dbg !7005
  %dec = add nsw i32 %36, -1, !dbg !7005
  store i32 %dec, i32* %active_input26, align 8, !dbg !7005
  br label %if.end34, !dbg !7006

if.else27:                                        ; preds = %if.end15
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %after, metadata !7007, metadata !DIExpression()), !dbg !7009
  %37 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7010
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %37, i32 0, i32 0, !dbg !7011
  %38 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !7011
  store %struct.bNodeSocket* %38, %struct.bNodeSocket** %after, align 8, !dbg !7009
  %39 = load %struct.bNodeSocket*, %struct.bNodeSocket** %after, align 8, !dbg !7012
  %tobool28 = icmp ne %struct.bNodeSocket* %39, null, !dbg !7012
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !7014

if.then29:                                        ; preds = %if.else27
  store i32 2, i32* %retval, align 4, !dbg !7015
  br label %return, !dbg !7015

if.end30:                                         ; preds = %if.else27
  %40 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7016
  %inputs31 = getelementptr inbounds %struct.bNode, %struct.bNode* %40, i32 0, i32 17, !dbg !7017
  %41 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7018
  %42 = bitcast %struct.bNodeSocket* %41 to i8*, !dbg !7018
  call void @BLI_remlink(%struct.ListBase* %inputs31, i8* %42), !dbg !7019
  %43 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7020
  %inputs32 = getelementptr inbounds %struct.bNode, %struct.bNode* %43, i32 0, i32 17, !dbg !7021
  %44 = load %struct.bNodeSocket*, %struct.bNodeSocket** %after, align 8, !dbg !7022
  %45 = bitcast %struct.bNodeSocket* %44 to i8*, !dbg !7022
  %46 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7023
  %47 = bitcast %struct.bNodeSocket* %46 to i8*, !dbg !7023
  call void @BLI_insertlinkafter(%struct.ListBase* %inputs32, i8* %45, i8* %47), !dbg !7024
  %48 = load %struct.NodeImageMultiFile*, %struct.NodeImageMultiFile** %nimf, align 8, !dbg !7025
  %active_input33 = getelementptr inbounds %struct.NodeImageMultiFile, %struct.NodeImageMultiFile* %48, i32 0, i32 4, !dbg !7026
  %49 = load i32, i32* %active_input33, align 8, !dbg !7027
  %inc = add nsw i32 %49, 1, !dbg !7027
  store i32 %inc, i32* %active_input33, align 8, !dbg !7027
  br label %if.end34

if.end34:                                         ; preds = %if.end30, %if.end23
  %50 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7028
  %51 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !7029
  call void @snode_notify(%struct.bContext* %50, %struct.SpaceNode* %51), !dbg !7030
  store i32 4, i32* %retval, align 4, !dbg !7031
  br label %return, !dbg !7031

return:                                           ; preds = %if.end34, %if.then29, %if.then22, %if.then14, %if.then10
  %52 = load i32, i32* %retval, align 4, !dbg !7032
  ret i32 %52, !dbg !7032
}

declare dso_local %struct.PropertyRNA* @RNA_def_enum(i8*, i8*, %struct.EnumPropertyItem*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_node_copy_color(%struct.wmOperatorType* %ot) #0 !dbg !7033 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7034, metadata !DIExpression()), !dbg !7035
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7036
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7037
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.73, i64 0, i64 0), i8** %name, align 8, !dbg !7038
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7039
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7040
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.74, i64 0, i64 0), i8** %description, align 8, !dbg !7041
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7042
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7043
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.75, i64 0, i64 0), i8** %idname, align 8, !dbg !7044
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7045
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7046
  store i32 (%struct.bContext*, %struct.wmOperator*)* @node_copy_color_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7047
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7048
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7049
  store i32 (%struct.bContext*)* @ED_operator_node_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !7050
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7051
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7052
  store i16 3, i16* %flag, align 8, !dbg !7053
  ret void, !dbg !7054
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_copy_color_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !7055 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  %tnode = alloca %struct.bNode*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7056, metadata !DIExpression()), !dbg !7057
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7058, metadata !DIExpression()), !dbg !7059
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !7060, metadata !DIExpression()), !dbg !7061
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7062
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !7063
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !7061
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !7064, metadata !DIExpression()), !dbg !7065
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !7066
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %1, i32 0, i32 19, !dbg !7067
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !7067
  store %struct.bNodeTree* %2, %struct.bNodeTree** %ntree, align 8, !dbg !7065
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !7068, metadata !DIExpression()), !dbg !7069
  call void @llvm.dbg.declare(metadata %struct.bNode** %tnode, metadata !7070, metadata !DIExpression()), !dbg !7071
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7072
  %tobool = icmp ne %struct.bNodeTree* %3, null, !dbg !7072
  br i1 %tobool, label %if.end, label %if.then, !dbg !7074

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !7075
  br label %return, !dbg !7075

if.end:                                           ; preds = %entry
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7076
  %call1 = call %struct.bNode* @nodeGetActive(%struct.bNodeTree* %4), !dbg !7077
  store %struct.bNode* %call1, %struct.bNode** %node, align 8, !dbg !7078
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7079
  %tobool2 = icmp ne %struct.bNode* %5, null, !dbg !7079
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !7081

if.then3:                                         ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !7082
  br label %return, !dbg !7082

if.end4:                                          ; preds = %if.end
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7083
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %6, i32 0, i32 7, !dbg !7085
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !7086
  %7 = load i8*, i8** %first, align 8, !dbg !7086
  %8 = bitcast i8* %7 to %struct.bNode*, !dbg !7083
  store %struct.bNode* %8, %struct.bNode** %tnode, align 8, !dbg !7087
  br label %for.cond, !dbg !7088

for.cond:                                         ; preds = %for.inc, %if.end4
  %9 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !7089
  %tobool5 = icmp ne %struct.bNode* %9, null, !dbg !7091
  br i1 %tobool5, label %for.body, label %for.end, !dbg !7091

for.body:                                         ; preds = %for.cond
  %10 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !7092
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %10, i32 0, i32 7, !dbg !7095
  %11 = load i32, i32* %flag, align 8, !dbg !7095
  %and = and i32 %11, 1, !dbg !7096
  %tobool6 = icmp ne i32 %and, 0, !dbg !7096
  br i1 %tobool6, label %land.lhs.true, label %if.end18, !dbg !7097

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !7098
  %13 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7099
  %cmp = icmp ne %struct.bNode* %12, %13, !dbg !7100
  br i1 %cmp, label %if.then7, label %if.end18, !dbg !7101

if.then7:                                         ; preds = %land.lhs.true
  %14 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7102
  %flag8 = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 7, !dbg !7105
  %15 = load i32, i32* %flag8, align 8, !dbg !7105
  %and9 = and i32 %15, 32768, !dbg !7106
  %tobool10 = icmp ne i32 %and9, 0, !dbg !7106
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !7107

if.then11:                                        ; preds = %if.then7
  %16 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !7108
  %flag12 = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 7, !dbg !7110
  %17 = load i32, i32* %flag12, align 8, !dbg !7111
  %or = or i32 %17, 32768, !dbg !7111
  store i32 %or, i32* %flag12, align 8, !dbg !7111
  %18 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !7112
  %color = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 16, !dbg !7113
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %color, i64 0, i64 0, !dbg !7112
  %19 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7114
  %color13 = getelementptr inbounds %struct.bNode, %struct.bNode* %19, i32 0, i32 16, !dbg !7115
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %color13, i64 0, i64 0, !dbg !7114
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay14), !dbg !7116
  br label %if.end17, !dbg !7117

if.else:                                          ; preds = %if.then7
  %20 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !7118
  %flag15 = getelementptr inbounds %struct.bNode, %struct.bNode* %20, i32 0, i32 7, !dbg !7119
  %21 = load i32, i32* %flag15, align 8, !dbg !7120
  %and16 = and i32 %21, -32769, !dbg !7120
  store i32 %and16, i32* %flag15, align 8, !dbg !7120
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then11
  br label %if.end18, !dbg !7121

if.end18:                                         ; preds = %if.end17, %land.lhs.true, %for.body
  br label %for.inc, !dbg !7122

for.inc:                                          ; preds = %if.end18
  %22 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !7123
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %22, i32 0, i32 0, !dbg !7124
  %23 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !7124
  store %struct.bNode* %23, %struct.bNode** %tnode, align 8, !dbg !7125
  br label %for.cond, !dbg !7126, !llvm.loop !7127

for.end:                                          ; preds = %for.cond
  %24 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7129
  call void @ED_node_sort(%struct.bNodeTree* %24), !dbg !7130
  %25 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7131
  call void @WM_event_add_notifier(%struct.bContext* %25, i32 288555008, i8* null), !dbg !7132
  store i32 4, i32* %retval, align 4, !dbg !7133
  br label %return, !dbg !7133

return:                                           ; preds = %for.end, %if.then3, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !7134
  ret i32 %26, !dbg !7134
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_clipboard_copy(%struct.wmOperatorType* %ot) #0 !dbg !7135 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7136, metadata !DIExpression()), !dbg !7137
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7138
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7139
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.76, i64 0, i64 0), i8** %name, align 8, !dbg !7140
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7141
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7142
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.77, i64 0, i64 0), i8** %description, align 8, !dbg !7143
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7144
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7145
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.78, i64 0, i64 0), i8** %idname, align 8, !dbg !7146
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7147
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7148
  store i32 (%struct.bContext*, %struct.wmOperator*)* @node_clipboard_copy_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7149
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7150
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7151
  store i32 (%struct.bContext*)* @ED_operator_node_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !7152
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7153
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7154
  store i16 3, i16* %flag, align 8, !dbg !7155
  ret void, !dbg !7156
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_clipboard_copy_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !7157 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  %newlink = alloca %struct.bNodeLink*, align 8
  %new_node = alloca %struct.bNode*, align 8
  %new_node12 = alloca %struct.bNode*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7158, metadata !DIExpression()), !dbg !7159
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7160, metadata !DIExpression()), !dbg !7161
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !7162, metadata !DIExpression()), !dbg !7163
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7164
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !7165
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !7163
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !7166, metadata !DIExpression()), !dbg !7167
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !7168
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %1, i32 0, i32 19, !dbg !7169
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !7169
  store %struct.bNodeTree* %2, %struct.bNodeTree** %ntree, align 8, !dbg !7167
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !7170, metadata !DIExpression()), !dbg !7171
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !7172, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %newlink, metadata !7174, metadata !DIExpression()), !dbg !7175
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7176
  call void @ED_preview_kill_jobs(%struct.bContext* %3), !dbg !7177
  call void @BKE_node_clipboard_clear(), !dbg !7178
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7179
  call void @BKE_node_clipboard_init(%struct.bNodeTree* %4), !dbg !7180
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7181
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %5, i32 0, i32 7, !dbg !7183
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !7184
  %6 = load i8*, i8** %first, align 8, !dbg !7184
  %7 = bitcast i8* %6 to %struct.bNode*, !dbg !7181
  store %struct.bNode* %7, %struct.bNode** %node, align 8, !dbg !7185
  br label %for.cond, !dbg !7186

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7187
  %tobool = icmp ne %struct.bNode* %8, null, !dbg !7189
  br i1 %tobool, label %for.body, label %for.end, !dbg !7189

for.body:                                         ; preds = %for.cond
  %9 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7190
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %9, i32 0, i32 7, !dbg !7193
  %10 = load i32, i32* %flag, align 8, !dbg !7193
  %and = and i32 %10, 1, !dbg !7194
  %tobool1 = icmp ne i32 %and, 0, !dbg !7194
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7195

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.bNode** %new_node, metadata !7196, metadata !DIExpression()), !dbg !7198
  %11 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7199
  %call2 = call %struct.bNode* @nodeCopyNode(%struct.bNodeTree* null, %struct.bNode* %11), !dbg !7200
  store %struct.bNode* %call2, %struct.bNode** %new_node, align 8, !dbg !7201
  %12 = load %struct.bNode*, %struct.bNode** %new_node, align 8, !dbg !7202
  call void @BKE_node_clipboard_add_node(%struct.bNode* %12), !dbg !7203
  br label %if.end, !dbg !7204

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !7205

for.inc:                                          ; preds = %if.end
  %13 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7206
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %13, i32 0, i32 0, !dbg !7207
  %14 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !7207
  store %struct.bNode* %14, %struct.bNode** %node, align 8, !dbg !7208
  br label %for.cond, !dbg !7209, !llvm.loop !7210

for.end:                                          ; preds = %for.cond
  %15 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7212
  %nodes3 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %15, i32 0, i32 7, !dbg !7214
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes3, i32 0, i32 0, !dbg !7215
  %16 = load i8*, i8** %first4, align 8, !dbg !7215
  %17 = bitcast i8* %16 to %struct.bNode*, !dbg !7212
  store %struct.bNode* %17, %struct.bNode** %node, align 8, !dbg !7216
  br label %for.cond5, !dbg !7217

for.cond5:                                        ; preds = %for.inc27, %for.end
  %18 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7218
  %tobool6 = icmp ne %struct.bNode* %18, null, !dbg !7220
  br i1 %tobool6, label %for.body7, label %for.end29, !dbg !7220

for.body7:                                        ; preds = %for.cond5
  %19 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7221
  %flag8 = getelementptr inbounds %struct.bNode, %struct.bNode* %19, i32 0, i32 7, !dbg !7224
  %20 = load i32, i32* %flag8, align 8, !dbg !7224
  %and9 = and i32 %20, 1, !dbg !7225
  %tobool10 = icmp ne i32 %and9, 0, !dbg !7225
  br i1 %tobool10, label %if.then11, label %if.end26, !dbg !7226

if.then11:                                        ; preds = %for.body7
  call void @llvm.dbg.declare(metadata %struct.bNode** %new_node12, metadata !7227, metadata !DIExpression()), !dbg !7229
  %21 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7230
  %new_node13 = getelementptr inbounds %struct.bNode, %struct.bNode* %21, i32 0, i32 2, !dbg !7231
  %22 = load %struct.bNode*, %struct.bNode** %new_node13, align 8, !dbg !7231
  store %struct.bNode* %22, %struct.bNode** %new_node12, align 8, !dbg !7229
  %23 = load %struct.bNode*, %struct.bNode** %new_node12, align 8, !dbg !7232
  %parent = getelementptr inbounds %struct.bNode, %struct.bNode* %23, i32 0, i32 19, !dbg !7234
  %24 = load %struct.bNode*, %struct.bNode** %parent, align 8, !dbg !7234
  %tobool14 = icmp ne %struct.bNode* %24, null, !dbg !7232
  br i1 %tobool14, label %if.then15, label %if.end25, !dbg !7235

if.then15:                                        ; preds = %if.then11
  %25 = load %struct.bNode*, %struct.bNode** %new_node12, align 8, !dbg !7236
  %parent16 = getelementptr inbounds %struct.bNode, %struct.bNode* %25, i32 0, i32 19, !dbg !7239
  %26 = load %struct.bNode*, %struct.bNode** %parent16, align 8, !dbg !7239
  %flag17 = getelementptr inbounds %struct.bNode, %struct.bNode* %26, i32 0, i32 7, !dbg !7240
  %27 = load i32, i32* %flag17, align 8, !dbg !7240
  %and18 = and i32 %27, 1, !dbg !7241
  %tobool19 = icmp ne i32 %and18, 0, !dbg !7241
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !7242

if.then20:                                        ; preds = %if.then15
  %28 = load %struct.bNode*, %struct.bNode** %new_node12, align 8, !dbg !7243
  %parent21 = getelementptr inbounds %struct.bNode, %struct.bNode* %28, i32 0, i32 19, !dbg !7245
  %29 = load %struct.bNode*, %struct.bNode** %parent21, align 8, !dbg !7245
  %new_node22 = getelementptr inbounds %struct.bNode, %struct.bNode* %29, i32 0, i32 2, !dbg !7246
  %30 = load %struct.bNode*, %struct.bNode** %new_node22, align 8, !dbg !7246
  %31 = load %struct.bNode*, %struct.bNode** %new_node12, align 8, !dbg !7247
  %parent23 = getelementptr inbounds %struct.bNode, %struct.bNode* %31, i32 0, i32 19, !dbg !7248
  store %struct.bNode* %30, %struct.bNode** %parent23, align 8, !dbg !7249
  br label %if.end24, !dbg !7250

if.else:                                          ; preds = %if.then15
  %32 = load %struct.bNode*, %struct.bNode** %new_node12, align 8, !dbg !7251
  call void @nodeDetachNode(%struct.bNode* %32), !dbg !7253
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then20
  br label %if.end25, !dbg !7254

if.end25:                                         ; preds = %if.end24, %if.then11
  br label %if.end26, !dbg !7255

if.end26:                                         ; preds = %if.end25, %for.body7
  br label %for.inc27, !dbg !7256

for.inc27:                                        ; preds = %if.end26
  %33 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7257
  %next28 = getelementptr inbounds %struct.bNode, %struct.bNode* %33, i32 0, i32 0, !dbg !7258
  %34 = load %struct.bNode*, %struct.bNode** %next28, align 8, !dbg !7258
  store %struct.bNode* %34, %struct.bNode** %node, align 8, !dbg !7259
  br label %for.cond5, !dbg !7260, !llvm.loop !7261

for.end29:                                        ; preds = %for.cond5
  %35 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7263
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %35, i32 0, i32 8, !dbg !7265
  %first30 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links, i32 0, i32 0, !dbg !7266
  %36 = load i8*, i8** %first30, align 8, !dbg !7266
  %37 = bitcast i8* %36 to %struct.bNodeLink*, !dbg !7263
  store %struct.bNodeLink* %37, %struct.bNodeLink** %link, align 8, !dbg !7267
  br label %for.cond31, !dbg !7268

for.cond31:                                       ; preds = %for.inc60, %for.end29
  %38 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7269
  %tobool32 = icmp ne %struct.bNodeLink* %38, null, !dbg !7271
  br i1 %tobool32, label %for.body33, label %for.end62, !dbg !7271

for.body33:                                       ; preds = %for.cond31
  %39 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7272
  %tonode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %39, i32 0, i32 3, !dbg !7275
  %40 = load %struct.bNode*, %struct.bNode** %tonode, align 8, !dbg !7275
  %tobool34 = icmp ne %struct.bNode* %40, null, !dbg !7272
  br i1 %tobool34, label %land.lhs.true, label %if.end59, !dbg !7276

land.lhs.true:                                    ; preds = %for.body33
  %41 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7277
  %tonode35 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %41, i32 0, i32 3, !dbg !7278
  %42 = load %struct.bNode*, %struct.bNode** %tonode35, align 8, !dbg !7278
  %flag36 = getelementptr inbounds %struct.bNode, %struct.bNode* %42, i32 0, i32 7, !dbg !7279
  %43 = load i32, i32* %flag36, align 8, !dbg !7279
  %and37 = and i32 %43, 1, !dbg !7280
  %tobool38 = icmp ne i32 %and37, 0, !dbg !7280
  br i1 %tobool38, label %land.lhs.true39, label %if.end59, !dbg !7281

land.lhs.true39:                                  ; preds = %land.lhs.true
  %44 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7282
  %fromnode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %44, i32 0, i32 2, !dbg !7283
  %45 = load %struct.bNode*, %struct.bNode** %fromnode, align 8, !dbg !7283
  %tobool40 = icmp ne %struct.bNode* %45, null, !dbg !7282
  br i1 %tobool40, label %land.lhs.true41, label %if.end59, !dbg !7284

land.lhs.true41:                                  ; preds = %land.lhs.true39
  %46 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7285
  %fromnode42 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %46, i32 0, i32 2, !dbg !7286
  %47 = load %struct.bNode*, %struct.bNode** %fromnode42, align 8, !dbg !7286
  %flag43 = getelementptr inbounds %struct.bNode, %struct.bNode* %47, i32 0, i32 7, !dbg !7287
  %48 = load i32, i32* %flag43, align 8, !dbg !7287
  %and44 = and i32 %48, 1, !dbg !7288
  %tobool45 = icmp ne i32 %and44, 0, !dbg !7288
  br i1 %tobool45, label %if.then46, label %if.end59, !dbg !7289

if.then46:                                        ; preds = %land.lhs.true41
  %49 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7290
  %call47 = call i8* %49(i64 56, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.103, i64 0, i64 0)), !dbg !7290
  %50 = bitcast i8* %call47 to %struct.bNodeLink*, !dbg !7290
  store %struct.bNodeLink* %50, %struct.bNodeLink** %newlink, align 8, !dbg !7292
  %51 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7293
  %flag48 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %51, i32 0, i32 6, !dbg !7294
  %52 = load i32, i32* %flag48, align 8, !dbg !7294
  %53 = load %struct.bNodeLink*, %struct.bNodeLink** %newlink, align 8, !dbg !7295
  %flag49 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %53, i32 0, i32 6, !dbg !7296
  store i32 %52, i32* %flag49, align 8, !dbg !7297
  %54 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7298
  %tonode50 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %54, i32 0, i32 3, !dbg !7299
  %55 = load %struct.bNode*, %struct.bNode** %tonode50, align 8, !dbg !7299
  %new_node51 = getelementptr inbounds %struct.bNode, %struct.bNode* %55, i32 0, i32 2, !dbg !7300
  %56 = load %struct.bNode*, %struct.bNode** %new_node51, align 8, !dbg !7300
  %57 = load %struct.bNodeLink*, %struct.bNodeLink** %newlink, align 8, !dbg !7301
  %tonode52 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %57, i32 0, i32 3, !dbg !7302
  store %struct.bNode* %56, %struct.bNode** %tonode52, align 8, !dbg !7303
  %58 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7304
  %tosock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %58, i32 0, i32 5, !dbg !7305
  %59 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !7305
  %new_sock = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %59, i32 0, i32 2, !dbg !7306
  %60 = load %struct.bNodeSocket*, %struct.bNodeSocket** %new_sock, align 8, !dbg !7306
  %61 = load %struct.bNodeLink*, %struct.bNodeLink** %newlink, align 8, !dbg !7307
  %tosock53 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %61, i32 0, i32 5, !dbg !7308
  store %struct.bNodeSocket* %60, %struct.bNodeSocket** %tosock53, align 8, !dbg !7309
  %62 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7310
  %fromnode54 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %62, i32 0, i32 2, !dbg !7311
  %63 = load %struct.bNode*, %struct.bNode** %fromnode54, align 8, !dbg !7311
  %new_node55 = getelementptr inbounds %struct.bNode, %struct.bNode* %63, i32 0, i32 2, !dbg !7312
  %64 = load %struct.bNode*, %struct.bNode** %new_node55, align 8, !dbg !7312
  %65 = load %struct.bNodeLink*, %struct.bNodeLink** %newlink, align 8, !dbg !7313
  %fromnode56 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %65, i32 0, i32 2, !dbg !7314
  store %struct.bNode* %64, %struct.bNode** %fromnode56, align 8, !dbg !7315
  %66 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7316
  %fromsock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %66, i32 0, i32 4, !dbg !7317
  %67 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock, align 8, !dbg !7317
  %new_sock57 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %67, i32 0, i32 2, !dbg !7318
  %68 = load %struct.bNodeSocket*, %struct.bNodeSocket** %new_sock57, align 8, !dbg !7318
  %69 = load %struct.bNodeLink*, %struct.bNodeLink** %newlink, align 8, !dbg !7319
  %fromsock58 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %69, i32 0, i32 4, !dbg !7320
  store %struct.bNodeSocket* %68, %struct.bNodeSocket** %fromsock58, align 8, !dbg !7321
  %70 = load %struct.bNodeLink*, %struct.bNodeLink** %newlink, align 8, !dbg !7322
  call void @BKE_node_clipboard_add_link(%struct.bNodeLink* %70), !dbg !7323
  br label %if.end59, !dbg !7324

if.end59:                                         ; preds = %if.then46, %land.lhs.true41, %land.lhs.true39, %land.lhs.true, %for.body33
  br label %for.inc60, !dbg !7325

for.inc60:                                        ; preds = %if.end59
  %71 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7326
  %next61 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %71, i32 0, i32 0, !dbg !7327
  %72 = load %struct.bNodeLink*, %struct.bNodeLink** %next61, align 8, !dbg !7327
  store %struct.bNodeLink* %72, %struct.bNodeLink** %link, align 8, !dbg !7328
  br label %for.cond31, !dbg !7329, !llvm.loop !7330

for.end62:                                        ; preds = %for.cond31
  ret i32 4, !dbg !7332
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_clipboard_paste(%struct.wmOperatorType* %ot) #0 !dbg !7333 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7334, metadata !DIExpression()), !dbg !7335
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7336
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7337
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.79, i64 0, i64 0), i8** %name, align 8, !dbg !7338
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7339
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7340
  store i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.80, i64 0, i64 0), i8** %description, align 8, !dbg !7341
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7342
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7343
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.81, i64 0, i64 0), i8** %idname, align 8, !dbg !7344
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7345
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7346
  store i32 (%struct.bContext*, %struct.wmOperator*)* @node_clipboard_paste_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7347
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7348
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7349
  store i32 (%struct.bContext*)* @ED_operator_node_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !7350
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7351
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7352
  store i16 3, i16* %flag, align 8, !dbg !7353
  ret void, !dbg !7354
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_clipboard_paste_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7355 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %clipboard_nodes_lb = alloca %struct.ListBase*, align 8
  %clipboard_links_lb = alloca %struct.ListBase*, align 8
  %node = alloca %struct.bNode*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  %num_nodes = alloca i32, align 4
  %center = alloca [2 x float], align 4
  %is_clipboard_valid = alloca i8, align 1
  %all_nodes_valid = alloca i8, align 1
  %new_node = alloca %struct.bNode*, align 8
  %new_node54 = alloca %struct.bNode*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7356, metadata !DIExpression()), !dbg !7357
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7358, metadata !DIExpression()), !dbg !7359
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !7360, metadata !DIExpression()), !dbg !7361
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7362
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !7363
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !7361
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !7364, metadata !DIExpression()), !dbg !7365
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !7366
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %1, i32 0, i32 19, !dbg !7367
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !7367
  store %struct.bNodeTree* %2, %struct.bNodeTree** %ntree, align 8, !dbg !7365
  call void @llvm.dbg.declare(metadata %struct.ListBase** %clipboard_nodes_lb, metadata !7368, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.declare(metadata %struct.ListBase** %clipboard_links_lb, metadata !7372, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !7374, metadata !DIExpression()), !dbg !7375
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !7376, metadata !DIExpression()), !dbg !7377
  call void @llvm.dbg.declare(metadata i32* %num_nodes, metadata !7378, metadata !DIExpression()), !dbg !7379
  call void @llvm.dbg.declare(metadata [2 x float]* %center, metadata !7380, metadata !DIExpression()), !dbg !7381
  call void @llvm.dbg.declare(metadata i8* %is_clipboard_valid, metadata !7382, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.declare(metadata i8* %all_nodes_valid, metadata !7384, metadata !DIExpression()), !dbg !7385
  %call1 = call zeroext i8 @BKE_node_clipboard_validate(), !dbg !7386
  store i8 %call1, i8* %is_clipboard_valid, align 1, !dbg !7387
  %call2 = call %struct.ListBase* @BKE_node_clipboard_get_nodes(), !dbg !7388
  store %struct.ListBase* %call2, %struct.ListBase** %clipboard_nodes_lb, align 8, !dbg !7389
  %call3 = call %struct.ListBase* @BKE_node_clipboard_get_links(), !dbg !7390
  store %struct.ListBase* %call3, %struct.ListBase** %clipboard_links_lb, align 8, !dbg !7391
  %3 = load %struct.ListBase*, %struct.ListBase** %clipboard_nodes_lb, align 8, !dbg !7392
  %call4 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %3), !dbg !7394
  %tobool = icmp ne i8 %call4, 0, !dbg !7394
  br i1 %tobool, label %if.then, label %if.end, !dbg !7395

if.then:                                          ; preds = %entry
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7396
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 8, !dbg !7398
  %5 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !7398
  call void @BKE_report(%struct.ReportList* %5, i32 32, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.105, i64 0, i64 0)), !dbg !7399
  store i32 2, i32* %retval, align 4, !dbg !7400
  br label %return, !dbg !7400

if.end:                                           ; preds = %entry
  %call5 = call i32 @BKE_node_clipboard_get_type(), !dbg !7401
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7403
  %type = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %6, i32 0, i32 9, !dbg !7404
  %7 = load i32, i32* %type, align 8, !dbg !7404
  %cmp = icmp ne i32 %call5, %7, !dbg !7405
  br i1 %cmp, label %if.then6, label %if.end8, !dbg !7406

if.then6:                                         ; preds = %if.end
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7407
  %reports7 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 8, !dbg !7409
  %9 = load %struct.ReportList*, %struct.ReportList** %reports7, align 8, !dbg !7409
  call void @BKE_report(%struct.ReportList* %9, i32 32, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.106, i64 0, i64 0)), !dbg !7410
  store i32 2, i32* %retval, align 4, !dbg !7411
  br label %return, !dbg !7411

if.end8:                                          ; preds = %if.end
  %10 = load i8, i8* %is_clipboard_valid, align 1, !dbg !7412
  %conv = zext i8 %10 to i32, !dbg !7412
  %cmp9 = icmp eq i32 %conv, 0, !dbg !7414
  br i1 %cmp9, label %if.then11, label %if.end13, !dbg !7415

if.then11:                                        ; preds = %if.end8
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7416
  %reports12 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 8, !dbg !7418
  %12 = load %struct.ReportList*, %struct.ReportList** %reports12, align 8, !dbg !7418
  call void @BKE_report(%struct.ReportList* %12, i32 16, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.107, i64 0, i64 0)), !dbg !7419
  br label %if.end13, !dbg !7420

if.end13:                                         ; preds = %if.then11, %if.end8
  store i8 1, i8* %all_nodes_valid, align 1, !dbg !7421
  %13 = load %struct.ListBase*, %struct.ListBase** %clipboard_nodes_lb, align 8, !dbg !7422
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %13, i32 0, i32 0, !dbg !7424
  %14 = load i8*, i8** %first, align 8, !dbg !7424
  %15 = bitcast i8* %14 to %struct.bNode*, !dbg !7422
  store %struct.bNode* %15, %struct.bNode** %node, align 8, !dbg !7425
  br label %for.cond, !dbg !7426

for.cond:                                         ; preds = %for.inc, %if.end13
  %16 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7427
  %tobool14 = icmp ne %struct.bNode* %16, null, !dbg !7429
  br i1 %tobool14, label %for.body, label %for.end, !dbg !7429

for.body:                                         ; preds = %for.cond
  %17 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7430
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %17, i32 0, i32 4, !dbg !7433
  %18 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !7433
  %poll_instance = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %18, i32 0, i32 38, !dbg !7434
  %19 = load i32 (%struct.bNode*, %struct.bNodeTree*)*, i32 (%struct.bNode*, %struct.bNodeTree*)** %poll_instance, align 8, !dbg !7434
  %20 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7435
  %21 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7436
  %call15 = call i32 %19(%struct.bNode* %20, %struct.bNodeTree* %21), !dbg !7430
  %tobool16 = icmp ne i32 %call15, 0, !dbg !7430
  br i1 %tobool16, label %if.end21, label %if.then17, !dbg !7437

if.then17:                                        ; preds = %for.body
  store i8 0, i8* %all_nodes_valid, align 1, !dbg !7438
  %22 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7440
  %reports18 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %22, i32 0, i32 8, !dbg !7441
  %23 = load %struct.ReportList*, %struct.ReportList** %reports18, align 8, !dbg !7441
  %24 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7442
  %name = getelementptr inbounds %struct.bNode, %struct.bNode* %24, i32 0, i32 6, !dbg !7443
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !7442
  %25 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7444
  %id = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %25, i32 0, i32 0, !dbg !7445
  %name19 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !7446
  %arraydecay20 = getelementptr inbounds [66 x i8], [66 x i8]* %name19, i64 0, i64 0, !dbg !7444
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay20, i64 2, !dbg !7447
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %23, i32 32, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.108, i64 0, i64 0), i8* %arraydecay, i8* %add.ptr), !dbg !7448
  br label %if.end21, !dbg !7449

if.end21:                                         ; preds = %if.then17, %for.body
  br label %for.inc, !dbg !7450

for.inc:                                          ; preds = %if.end21
  %26 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7451
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %26, i32 0, i32 0, !dbg !7452
  %27 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !7452
  store %struct.bNode* %27, %struct.bNode** %node, align 8, !dbg !7453
  br label %for.cond, !dbg !7454, !llvm.loop !7455

for.end:                                          ; preds = %for.cond
  %28 = load i8, i8* %all_nodes_valid, align 1, !dbg !7457
  %tobool22 = icmp ne i8 %28, 0, !dbg !7457
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !7459

if.then23:                                        ; preds = %for.end
  store i32 2, i32* %retval, align 4, !dbg !7460
  br label %return, !dbg !7460

if.end24:                                         ; preds = %for.end
  %29 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7461
  call void @ED_preview_kill_jobs(%struct.bContext* %29), !dbg !7462
  %30 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !7463
  call void @node_deselect_all(%struct.SpaceNode* %30), !dbg !7464
  %arraydecay25 = getelementptr inbounds [2 x float], [2 x float]* %center, i64 0, i64 0, !dbg !7465
  call void @zero_v2(float* %arraydecay25), !dbg !7466
  %31 = load %struct.ListBase*, %struct.ListBase** %clipboard_nodes_lb, align 8, !dbg !7467
  %first26 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %31, i32 0, i32 0, !dbg !7469
  %32 = load i8*, i8** %first26, align 8, !dbg !7469
  %33 = bitcast i8* %32 to %struct.bNode*, !dbg !7467
  store %struct.bNode* %33, %struct.bNode** %node, align 8, !dbg !7470
  store i32 0, i32* %num_nodes, align 4, !dbg !7471
  br label %for.cond27, !dbg !7472

for.cond27:                                       ; preds = %for.inc35, %if.end24
  %34 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7473
  %tobool28 = icmp ne %struct.bNode* %34, null, !dbg !7475
  br i1 %tobool28, label %for.body29, label %for.end37, !dbg !7475

for.body29:                                       ; preds = %for.cond27
  %35 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7476
  %totr = getelementptr inbounds %struct.bNode, %struct.bNode* %35, i32 0, i32 40, !dbg !7478
  %call30 = call float @BLI_rctf_cent_x(%struct.rctf* %totr), !dbg !7479
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %center, i64 0, i64 0, !dbg !7480
  %36 = load float, float* %arrayidx, align 4, !dbg !7481
  %add = fadd float %36, %call30, !dbg !7481
  store float %add, float* %arrayidx, align 4, !dbg !7481
  %37 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7482
  %totr31 = getelementptr inbounds %struct.bNode, %struct.bNode* %37, i32 0, i32 40, !dbg !7483
  %call32 = call float @BLI_rctf_cent_y(%struct.rctf* %totr31), !dbg !7484
  %arrayidx33 = getelementptr inbounds [2 x float], [2 x float]* %center, i64 0, i64 1, !dbg !7485
  %38 = load float, float* %arrayidx33, align 4, !dbg !7486
  %add34 = fadd float %38, %call32, !dbg !7486
  store float %add34, float* %arrayidx33, align 4, !dbg !7486
  br label %for.inc35, !dbg !7487

for.inc35:                                        ; preds = %for.body29
  %39 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7488
  %next36 = getelementptr inbounds %struct.bNode, %struct.bNode* %39, i32 0, i32 0, !dbg !7489
  %40 = load %struct.bNode*, %struct.bNode** %next36, align 8, !dbg !7489
  store %struct.bNode* %40, %struct.bNode** %node, align 8, !dbg !7490
  %41 = load i32, i32* %num_nodes, align 4, !dbg !7491
  %inc = add nsw i32 %41, 1, !dbg !7491
  store i32 %inc, i32* %num_nodes, align 4, !dbg !7491
  br label %for.cond27, !dbg !7492, !llvm.loop !7493

for.end37:                                        ; preds = %for.cond27
  %arraydecay38 = getelementptr inbounds [2 x float], [2 x float]* %center, i64 0, i64 0, !dbg !7495
  %42 = load i32, i32* %num_nodes, align 4, !dbg !7496
  %conv39 = sitofp i32 %42 to double, !dbg !7496
  %div = fdiv double 1.000000e+00, %conv39, !dbg !7497
  %conv40 = fptrunc double %div to float, !dbg !7498
  call void @mul_v2_fl(float* %arraydecay38, float %conv40), !dbg !7499
  %43 = load %struct.ListBase*, %struct.ListBase** %clipboard_nodes_lb, align 8, !dbg !7500
  %first41 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %43, i32 0, i32 0, !dbg !7502
  %44 = load i8*, i8** %first41, align 8, !dbg !7502
  %45 = bitcast i8* %44 to %struct.bNode*, !dbg !7500
  store %struct.bNode* %45, %struct.bNode** %node, align 8, !dbg !7503
  br label %for.cond42, !dbg !7504

for.cond42:                                       ; preds = %for.inc47, %for.end37
  %46 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7505
  %tobool43 = icmp ne %struct.bNode* %46, null, !dbg !7507
  br i1 %tobool43, label %for.body44, label %for.end49, !dbg !7507

for.body44:                                       ; preds = %for.cond42
  call void @llvm.dbg.declare(metadata %struct.bNode** %new_node, metadata !7508, metadata !DIExpression()), !dbg !7510
  %47 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7511
  %48 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7512
  %call45 = call %struct.bNode* @nodeCopyNode(%struct.bNodeTree* %47, %struct.bNode* %48), !dbg !7513
  store %struct.bNode* %call45, %struct.bNode** %new_node, align 8, !dbg !7510
  %49 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7514
  %id46 = getelementptr inbounds %struct.bNode, %struct.bNode* %49, i32 0, i32 20, !dbg !7515
  %50 = load %struct.ID*, %struct.ID** %id46, align 8, !dbg !7515
  call void @id_us_plus(%struct.ID* %50), !dbg !7516
  %51 = load %struct.bNode*, %struct.bNode** %new_node, align 8, !dbg !7517
  call void @nodeSetSelected(%struct.bNode* %51, i8 zeroext 1), !dbg !7518
  br label %for.inc47, !dbg !7519

for.inc47:                                        ; preds = %for.body44
  %52 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7520
  %next48 = getelementptr inbounds %struct.bNode, %struct.bNode* %52, i32 0, i32 0, !dbg !7521
  %53 = load %struct.bNode*, %struct.bNode** %next48, align 8, !dbg !7521
  store %struct.bNode* %53, %struct.bNode** %node, align 8, !dbg !7522
  br label %for.cond42, !dbg !7523, !llvm.loop !7524

for.end49:                                        ; preds = %for.cond42
  %54 = load %struct.ListBase*, %struct.ListBase** %clipboard_nodes_lb, align 8, !dbg !7526
  %first50 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %54, i32 0, i32 0, !dbg !7528
  %55 = load i8*, i8** %first50, align 8, !dbg !7528
  %56 = bitcast i8* %55 to %struct.bNode*, !dbg !7526
  store %struct.bNode* %56, %struct.bNode** %node, align 8, !dbg !7529
  br label %for.cond51, !dbg !7530

for.cond51:                                       ; preds = %for.inc62, %for.end49
  %57 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7531
  %tobool52 = icmp ne %struct.bNode* %57, null, !dbg !7533
  br i1 %tobool52, label %for.body53, label %for.end64, !dbg !7533

for.body53:                                       ; preds = %for.cond51
  call void @llvm.dbg.declare(metadata %struct.bNode** %new_node54, metadata !7534, metadata !DIExpression()), !dbg !7536
  %58 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7537
  %new_node55 = getelementptr inbounds %struct.bNode, %struct.bNode* %58, i32 0, i32 2, !dbg !7538
  %59 = load %struct.bNode*, %struct.bNode** %new_node55, align 8, !dbg !7538
  store %struct.bNode* %59, %struct.bNode** %new_node54, align 8, !dbg !7536
  %60 = load %struct.bNode*, %struct.bNode** %new_node54, align 8, !dbg !7539
  %parent = getelementptr inbounds %struct.bNode, %struct.bNode* %60, i32 0, i32 19, !dbg !7541
  %61 = load %struct.bNode*, %struct.bNode** %parent, align 8, !dbg !7541
  %tobool56 = icmp ne %struct.bNode* %61, null, !dbg !7539
  br i1 %tobool56, label %if.then57, label %if.end61, !dbg !7542

if.then57:                                        ; preds = %for.body53
  %62 = load %struct.bNode*, %struct.bNode** %new_node54, align 8, !dbg !7543
  %parent58 = getelementptr inbounds %struct.bNode, %struct.bNode* %62, i32 0, i32 19, !dbg !7544
  %63 = load %struct.bNode*, %struct.bNode** %parent58, align 8, !dbg !7544
  %new_node59 = getelementptr inbounds %struct.bNode, %struct.bNode* %63, i32 0, i32 2, !dbg !7545
  %64 = load %struct.bNode*, %struct.bNode** %new_node59, align 8, !dbg !7545
  %65 = load %struct.bNode*, %struct.bNode** %new_node54, align 8, !dbg !7546
  %parent60 = getelementptr inbounds %struct.bNode, %struct.bNode* %65, i32 0, i32 19, !dbg !7547
  store %struct.bNode* %64, %struct.bNode** %parent60, align 8, !dbg !7548
  br label %if.end61, !dbg !7546

if.end61:                                         ; preds = %if.then57, %for.body53
  br label %for.inc62, !dbg !7549

for.inc62:                                        ; preds = %if.end61
  %66 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7550
  %next63 = getelementptr inbounds %struct.bNode, %struct.bNode* %66, i32 0, i32 0, !dbg !7551
  %67 = load %struct.bNode*, %struct.bNode** %next63, align 8, !dbg !7551
  store %struct.bNode* %67, %struct.bNode** %node, align 8, !dbg !7552
  br label %for.cond51, !dbg !7553, !llvm.loop !7554

for.end64:                                        ; preds = %for.cond51
  %68 = load %struct.ListBase*, %struct.ListBase** %clipboard_links_lb, align 8, !dbg !7556
  %first65 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %68, i32 0, i32 0, !dbg !7558
  %69 = load i8*, i8** %first65, align 8, !dbg !7558
  %70 = bitcast i8* %69 to %struct.bNodeLink*, !dbg !7556
  store %struct.bNodeLink* %70, %struct.bNodeLink** %link, align 8, !dbg !7559
  br label %for.cond66, !dbg !7560

for.cond66:                                       ; preds = %for.inc73, %for.end64
  %71 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7561
  %tobool67 = icmp ne %struct.bNodeLink* %71, null, !dbg !7563
  br i1 %tobool67, label %for.body68, label %for.end75, !dbg !7563

for.body68:                                       ; preds = %for.cond66
  %72 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7564
  %73 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7566
  %fromnode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %73, i32 0, i32 2, !dbg !7567
  %74 = load %struct.bNode*, %struct.bNode** %fromnode, align 8, !dbg !7567
  %new_node69 = getelementptr inbounds %struct.bNode, %struct.bNode* %74, i32 0, i32 2, !dbg !7568
  %75 = load %struct.bNode*, %struct.bNode** %new_node69, align 8, !dbg !7568
  %76 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7569
  %fromsock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %76, i32 0, i32 4, !dbg !7570
  %77 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock, align 8, !dbg !7570
  %new_sock = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %77, i32 0, i32 2, !dbg !7571
  %78 = load %struct.bNodeSocket*, %struct.bNodeSocket** %new_sock, align 8, !dbg !7571
  %79 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7572
  %tonode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %79, i32 0, i32 3, !dbg !7573
  %80 = load %struct.bNode*, %struct.bNode** %tonode, align 8, !dbg !7573
  %new_node70 = getelementptr inbounds %struct.bNode, %struct.bNode* %80, i32 0, i32 2, !dbg !7574
  %81 = load %struct.bNode*, %struct.bNode** %new_node70, align 8, !dbg !7574
  %82 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7575
  %tosock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %82, i32 0, i32 5, !dbg !7576
  %83 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !7576
  %new_sock71 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %83, i32 0, i32 2, !dbg !7577
  %84 = load %struct.bNodeSocket*, %struct.bNodeSocket** %new_sock71, align 8, !dbg !7577
  %call72 = call %struct.bNodeLink* @nodeAddLink(%struct.bNodeTree* %72, %struct.bNode* %75, %struct.bNodeSocket* %78, %struct.bNode* %81, %struct.bNodeSocket* %84), !dbg !7578
  br label %for.inc73, !dbg !7579

for.inc73:                                        ; preds = %for.body68
  %85 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7580
  %next74 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %85, i32 0, i32 0, !dbg !7581
  %86 = load %struct.bNodeLink*, %struct.bNodeLink** %next74, align 8, !dbg !7581
  store %struct.bNodeLink* %86, %struct.bNodeLink** %link, align 8, !dbg !7582
  br label %for.cond66, !dbg !7583, !llvm.loop !7584

for.end75:                                        ; preds = %for.cond66
  %87 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7586
  %call76 = call %struct.Main* @CTX_data_main(%struct.bContext* %87), !dbg !7587
  %88 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !7588
  %edittree77 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %88, i32 0, i32 19, !dbg !7589
  %89 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree77, align 8, !dbg !7589
  call void @ntreeUpdateTree(%struct.Main* %call76, %struct.bNodeTree* %89), !dbg !7590
  %90 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7591
  %91 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !7592
  call void @snode_notify(%struct.bContext* %90, %struct.SpaceNode* %91), !dbg !7593
  %92 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7594
  %93 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !7595
  call void @snode_dag_update(%struct.bContext* %92, %struct.SpaceNode* %93), !dbg !7596
  store i32 4, i32* %retval, align 4, !dbg !7597
  br label %return, !dbg !7597

return:                                           ; preds = %for.end75, %if.then23, %if.then6, %if.then
  %94 = load i32, i32* %retval, align 4, !dbg !7598
  ret i32 %94, !dbg !7598
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_tree_socket_add(%struct.wmOperatorType* %ot) #0 !dbg !7599 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7600, metadata !DIExpression()), !dbg !7601
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7602
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7603
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.82, i64 0, i64 0), i8** %name, align 8, !dbg !7604
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7605
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7606
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.83, i64 0, i64 0), i8** %description, align 8, !dbg !7607
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7608
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7609
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.84, i64 0, i64 0), i8** %idname, align 8, !dbg !7610
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7611
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7612
  store i32 (%struct.bContext*, %struct.wmOperator*)* @ntree_socket_add_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7613
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7614
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7615
  store i32 (%struct.bContext*)* @ED_operator_node_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !7616
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7617
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7618
  store i16 3, i16* %flag, align 8, !dbg !7619
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7620
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !7621
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7621
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !7620
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @node_socket_in_out_items, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.86, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.65, i64 0, i64 0)), !dbg !7622
  ret void, !dbg !7623
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ntree_socket_add_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7624 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %in_out = alloca i32, align 4
  %ntree_ptr = alloca %struct.PointerRNA, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  %tsock = alloca %struct.bNodeSocket*, align 8
  %active_sock = alloca %struct.bNodeSocket*, align 8
  %default_name = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7625, metadata !DIExpression()), !dbg !7626
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7627, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !7629, metadata !DIExpression()), !dbg !7630
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7631
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !7632
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !7630
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !7633, metadata !DIExpression()), !dbg !7634
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !7635
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %1, i32 0, i32 19, !dbg !7636
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !7636
  store %struct.bNodeTree* %2, %struct.bNodeTree** %ntree, align 8, !dbg !7634
  call void @llvm.dbg.declare(metadata i32* %in_out, metadata !7637, metadata !DIExpression()), !dbg !7638
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7639
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !7640
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7640
  %call1 = call i32 @RNA_enum_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i64 0, i64 0)), !dbg !7641
  store i32 %call1, i32* %in_out, align 4, !dbg !7638
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ntree_ptr, metadata !7642, metadata !DIExpression()), !dbg !7643
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !7644, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %tsock, metadata !7646, metadata !DIExpression()), !dbg !7647
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %active_sock, metadata !7648, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.declare(metadata i8** %default_name, metadata !7650, metadata !DIExpression()), !dbg !7651
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7652
  %6 = bitcast %struct.bNodeTree* %5 to %struct.ID*, !dbg !7653
  call void @RNA_id_pointer_create(%struct.ID* %6, %struct.PointerRNA* %ntree_ptr), !dbg !7654
  %7 = load i32, i32* %in_out, align 4, !dbg !7655
  %cmp = icmp eq i32 %7, 1, !dbg !7657
  br i1 %cmp, label %if.then, label %if.else, !dbg !7658

if.then:                                          ; preds = %entry
  %8 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7659
  %inputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %8, i32 0, i32 22, !dbg !7661
  %call2 = call %struct.bNodeSocket* @ntree_get_active_interface_socket(%struct.ListBase* %inputs), !dbg !7662
  store %struct.bNodeSocket* %call2, %struct.bNodeSocket** %active_sock, align 8, !dbg !7663
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i64 0, i64 0), i8** %default_name, align 8, !dbg !7664
  br label %if.end, !dbg !7665

if.else:                                          ; preds = %entry
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7666
  %outputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %9, i32 0, i32 23, !dbg !7668
  %call3 = call %struct.bNodeSocket* @ntree_get_active_interface_socket(%struct.ListBase* %outputs), !dbg !7669
  store %struct.bNodeSocket* %call3, %struct.bNodeSocket** %active_sock, align 8, !dbg !7670
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.110, i64 0, i64 0), i8** %default_name, align 8, !dbg !7671
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load %struct.bNodeSocket*, %struct.bNodeSocket** %active_sock, align 8, !dbg !7672
  %tobool = icmp ne %struct.bNodeSocket* %10, null, !dbg !7672
  br i1 %tobool, label %if.then4, label %if.else7, !dbg !7674

if.then4:                                         ; preds = %if.end
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7675
  %12 = load i32, i32* %in_out, align 4, !dbg !7677
  %13 = load %struct.bNodeSocket*, %struct.bNodeSocket** %active_sock, align 8, !dbg !7678
  %idname = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %13, i32 0, i32 12, !dbg !7679
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !7678
  %14 = load %struct.bNodeSocket*, %struct.bNodeSocket** %active_sock, align 8, !dbg !7680
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %14, i32 0, i32 0, !dbg !7681
  %15 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !7681
  %16 = load %struct.bNodeSocket*, %struct.bNodeSocket** %active_sock, align 8, !dbg !7682
  %name = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %16, i32 0, i32 5, !dbg !7683
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !7682
  %call6 = call %struct.bNodeSocket* @ntreeInsertSocketInterface(%struct.bNodeTree* %11, i32 %12, i8* %arraydecay, %struct.bNodeSocket* %15, i8* %arraydecay5), !dbg !7684
  store %struct.bNodeSocket* %call6, %struct.bNodeSocket** %sock, align 8, !dbg !7685
  br label %if.end9, !dbg !7686

if.else7:                                         ; preds = %if.end
  %17 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7687
  %18 = load i32, i32* %in_out, align 4, !dbg !7689
  %19 = load i8*, i8** %default_name, align 8, !dbg !7690
  %call8 = call %struct.bNodeSocket* @ntreeAddSocketInterface(%struct.bNodeTree* %17, i32 %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.111, i64 0, i64 0), i8* %19), !dbg !7691
  store %struct.bNodeSocket* %call8, %struct.bNodeSocket** %sock, align 8, !dbg !7692
  br label %if.end9

if.end9:                                          ; preds = %if.else7, %if.then4
  %20 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7693
  %inputs10 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %20, i32 0, i32 22, !dbg !7695
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs10, i32 0, i32 0, !dbg !7696
  %21 = load i8*, i8** %first, align 8, !dbg !7696
  %22 = bitcast i8* %21 to %struct.bNodeSocket*, !dbg !7693
  store %struct.bNodeSocket* %22, %struct.bNodeSocket** %tsock, align 8, !dbg !7697
  br label %for.cond, !dbg !7698

for.cond:                                         ; preds = %for.inc, %if.end9
  %23 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tsock, align 8, !dbg !7699
  %tobool11 = icmp ne %struct.bNodeSocket* %23, null, !dbg !7701
  br i1 %tobool11, label %for.body, label %for.end, !dbg !7701

for.body:                                         ; preds = %for.cond
  %24 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tsock, align 8, !dbg !7702
  %flag = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %24, i32 0, i32 8, !dbg !7703
  %25 = load i16, i16* %flag, align 2, !dbg !7704
  %conv = sext i16 %25 to i32, !dbg !7704
  %and = and i32 %conv, -2, !dbg !7704
  %conv12 = trunc i32 %and to i16, !dbg !7704
  store i16 %conv12, i16* %flag, align 2, !dbg !7704
  br label %for.inc, !dbg !7702

for.inc:                                          ; preds = %for.body
  %26 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tsock, align 8, !dbg !7705
  %next13 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %26, i32 0, i32 0, !dbg !7706
  %27 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next13, align 8, !dbg !7706
  store %struct.bNodeSocket* %27, %struct.bNodeSocket** %tsock, align 8, !dbg !7707
  br label %for.cond, !dbg !7708, !llvm.loop !7709

for.end:                                          ; preds = %for.cond
  %28 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7711
  %outputs14 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %28, i32 0, i32 23, !dbg !7713
  %first15 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs14, i32 0, i32 0, !dbg !7714
  %29 = load i8*, i8** %first15, align 8, !dbg !7714
  %30 = bitcast i8* %29 to %struct.bNodeSocket*, !dbg !7711
  store %struct.bNodeSocket* %30, %struct.bNodeSocket** %tsock, align 8, !dbg !7715
  br label %for.cond16, !dbg !7716

for.cond16:                                       ; preds = %for.inc23, %for.end
  %31 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tsock, align 8, !dbg !7717
  %tobool17 = icmp ne %struct.bNodeSocket* %31, null, !dbg !7719
  br i1 %tobool17, label %for.body18, label %for.end25, !dbg !7719

for.body18:                                       ; preds = %for.cond16
  %32 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tsock, align 8, !dbg !7720
  %flag19 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %32, i32 0, i32 8, !dbg !7721
  %33 = load i16, i16* %flag19, align 2, !dbg !7722
  %conv20 = sext i16 %33 to i32, !dbg !7722
  %and21 = and i32 %conv20, -2, !dbg !7722
  %conv22 = trunc i32 %and21 to i16, !dbg !7722
  store i16 %conv22, i16* %flag19, align 2, !dbg !7722
  br label %for.inc23, !dbg !7720

for.inc23:                                        ; preds = %for.body18
  %34 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tsock, align 8, !dbg !7723
  %next24 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %34, i32 0, i32 0, !dbg !7724
  %35 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next24, align 8, !dbg !7724
  store %struct.bNodeSocket* %35, %struct.bNodeSocket** %tsock, align 8, !dbg !7725
  br label %for.cond16, !dbg !7726, !llvm.loop !7727

for.end25:                                        ; preds = %for.cond16
  %36 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7729
  %flag26 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %36, i32 0, i32 8, !dbg !7730
  %37 = load i16, i16* %flag26, align 2, !dbg !7731
  %conv27 = sext i16 %37 to i32, !dbg !7731
  %or = or i32 %conv27, 1, !dbg !7731
  %conv28 = trunc i32 %or to i16, !dbg !7731
  store i16 %conv28, i16* %flag26, align 2, !dbg !7731
  %38 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7732
  %call29 = call %struct.Main* @CTX_data_main(%struct.bContext* %38), !dbg !7733
  %39 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7734
  call void @ntreeUpdateTree(%struct.Main* %call29, %struct.bNodeTree* %39), !dbg !7735
  %40 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7736
  call void @WM_event_add_notifier(%struct.bContext* %40, i32 288555008, i8* null), !dbg !7737
  ret i32 4, !dbg !7738
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_tree_socket_remove(%struct.wmOperatorType* %ot) #0 !dbg !7739 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7740, metadata !DIExpression()), !dbg !7741
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7742
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7743
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.87, i64 0, i64 0), i8** %name, align 8, !dbg !7744
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7745
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7746
  store i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.88, i64 0, i64 0), i8** %description, align 8, !dbg !7747
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7748
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7749
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.89, i64 0, i64 0), i8** %idname, align 8, !dbg !7750
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7751
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7752
  store i32 (%struct.bContext*, %struct.wmOperator*)* @ntree_socket_remove_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7753
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7754
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7755
  store i32 (%struct.bContext*)* @ED_operator_node_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !7756
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7757
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7758
  store i16 3, i16* %flag, align 8, !dbg !7759
  ret void, !dbg !7760
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ntree_socket_remove_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !7761 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %iosock = alloca %struct.bNodeSocket*, align 8
  %active_sock = alloca %struct.bNodeSocket*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7762, metadata !DIExpression()), !dbg !7763
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7764, metadata !DIExpression()), !dbg !7765
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !7766, metadata !DIExpression()), !dbg !7767
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7768
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !7769
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !7767
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !7770, metadata !DIExpression()), !dbg !7771
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !7772
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %1, i32 0, i32 19, !dbg !7773
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !7773
  store %struct.bNodeTree* %2, %struct.bNodeTree** %ntree, align 8, !dbg !7771
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %iosock, metadata !7774, metadata !DIExpression()), !dbg !7775
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %active_sock, metadata !7776, metadata !DIExpression()), !dbg !7777
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7778
  %inputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 22, !dbg !7779
  %call1 = call %struct.bNodeSocket* @ntree_get_active_interface_socket(%struct.ListBase* %inputs), !dbg !7780
  store %struct.bNodeSocket* %call1, %struct.bNodeSocket** %iosock, align 8, !dbg !7781
  %4 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7782
  %tobool = icmp ne %struct.bNodeSocket* %4, null, !dbg !7782
  br i1 %tobool, label %if.end, label %if.then, !dbg !7784

if.then:                                          ; preds = %entry
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7785
  %outputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %5, i32 0, i32 23, !dbg !7786
  %call2 = call %struct.bNodeSocket* @ntree_get_active_interface_socket(%struct.ListBase* %outputs), !dbg !7787
  store %struct.bNodeSocket* %call2, %struct.bNodeSocket** %iosock, align 8, !dbg !7788
  br label %if.end, !dbg !7789

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7790
  %tobool3 = icmp ne %struct.bNodeSocket* %6, null, !dbg !7790
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !7792

if.then4:                                         ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !7793
  br label %return, !dbg !7793

if.end5:                                          ; preds = %if.end
  %7 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7794
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %7, i32 0, i32 0, !dbg !7795
  %8 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !7795
  %tobool6 = icmp ne %struct.bNodeSocket* %8, null, !dbg !7794
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !7794

cond.true:                                        ; preds = %if.end5
  %9 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7796
  %next7 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %9, i32 0, i32 0, !dbg !7797
  %10 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next7, align 8, !dbg !7797
  br label %cond.end, !dbg !7794

cond.false:                                       ; preds = %if.end5
  %11 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7798
  %prev = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %11, i32 0, i32 1, !dbg !7799
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %prev, align 8, !dbg !7799
  br label %cond.end, !dbg !7794

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bNodeSocket* [ %10, %cond.true ], [ %12, %cond.false ], !dbg !7794
  store %struct.bNodeSocket* %cond, %struct.bNodeSocket** %active_sock, align 8, !dbg !7800
  %13 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7801
  %14 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7802
  call void @ntreeRemoveSocketInterface(%struct.bNodeTree* %13, %struct.bNodeSocket* %14), !dbg !7803
  %15 = load %struct.bNodeSocket*, %struct.bNodeSocket** %active_sock, align 8, !dbg !7804
  %tobool8 = icmp ne %struct.bNodeSocket* %15, null, !dbg !7804
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !7806

if.then9:                                         ; preds = %cond.end
  %16 = load %struct.bNodeSocket*, %struct.bNodeSocket** %active_sock, align 8, !dbg !7807
  %flag = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %16, i32 0, i32 8, !dbg !7808
  %17 = load i16, i16* %flag, align 2, !dbg !7809
  %conv = sext i16 %17 to i32, !dbg !7809
  %or = or i32 %conv, 1, !dbg !7809
  %conv10 = trunc i32 %or to i16, !dbg !7809
  store i16 %conv10, i16* %flag, align 2, !dbg !7809
  br label %if.end11, !dbg !7807

if.end11:                                         ; preds = %if.then9, %cond.end
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7810
  %call12 = call %struct.Main* @CTX_data_main(%struct.bContext* %18), !dbg !7811
  %19 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7812
  call void @ntreeUpdateTree(%struct.Main* %call12, %struct.bNodeTree* %19), !dbg !7813
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7814
  call void @WM_event_add_notifier(%struct.bContext* %20, i32 288555008, i8* null), !dbg !7815
  store i32 4, i32* %retval, align 4, !dbg !7816
  br label %return, !dbg !7816

return:                                           ; preds = %if.end11, %if.then4
  %21 = load i32, i32* %retval, align 4, !dbg !7817
  ret i32 %21, !dbg !7817
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_tree_socket_move(%struct.wmOperatorType* %ot) #0 !dbg !7818 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7819, metadata !DIExpression()), !dbg !7820
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7821
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7822
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.90, i64 0, i64 0), i8** %name, align 8, !dbg !7823
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7824
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7825
  store i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.91, i64 0, i64 0), i8** %description, align 8, !dbg !7826
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7827
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7828
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.92, i64 0, i64 0), i8** %idname, align 8, !dbg !7829
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7830
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7831
  store i32 (%struct.bContext*, %struct.wmOperator*)* @ntree_socket_move_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7832
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7833
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7834
  store i32 (%struct.bContext*)* @ED_operator_node_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !7835
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7836
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7837
  store i16 3, i16* %flag, align 8, !dbg !7838
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7839
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !7840
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7840
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !7839
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @move_direction_items, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.65, i64 0, i64 0)), !dbg !7841
  ret void, !dbg !7842
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ntree_socket_move_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7843 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %direction = alloca i32, align 4
  %iosock = alloca %struct.bNodeSocket*, align 8
  %lb = alloca %struct.ListBase*, align 8
  %before = alloca %struct.bNodeSocket*, align 8
  %after = alloca %struct.bNodeSocket*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7844, metadata !DIExpression()), !dbg !7845
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7846, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !7848, metadata !DIExpression()), !dbg !7849
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7850
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !7851
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !7849
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !7852, metadata !DIExpression()), !dbg !7853
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !7854
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %1, i32 0, i32 19, !dbg !7855
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !7855
  store %struct.bNodeTree* %2, %struct.bNodeTree** %ntree, align 8, !dbg !7853
  call void @llvm.dbg.declare(metadata i32* %direction, metadata !7856, metadata !DIExpression()), !dbg !7857
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7858
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !7859
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7859
  %call1 = call i32 @RNA_enum_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i64 0, i64 0)), !dbg !7860
  store i32 %call1, i32* %direction, align 4, !dbg !7857
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %iosock, metadata !7861, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !7863, metadata !DIExpression()), !dbg !7864
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7865
  %inputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %5, i32 0, i32 22, !dbg !7866
  store %struct.ListBase* %inputs, %struct.ListBase** %lb, align 8, !dbg !7867
  %6 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !7868
  %call2 = call %struct.bNodeSocket* @ntree_get_active_interface_socket(%struct.ListBase* %6), !dbg !7869
  store %struct.bNodeSocket* %call2, %struct.bNodeSocket** %iosock, align 8, !dbg !7870
  %7 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7871
  %tobool = icmp ne %struct.bNodeSocket* %7, null, !dbg !7871
  br i1 %tobool, label %if.end, label %if.then, !dbg !7873

if.then:                                          ; preds = %entry
  %8 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7874
  %outputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %8, i32 0, i32 23, !dbg !7876
  store %struct.ListBase* %outputs, %struct.ListBase** %lb, align 8, !dbg !7877
  %9 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !7878
  %call3 = call %struct.bNodeSocket* @ntree_get_active_interface_socket(%struct.ListBase* %9), !dbg !7879
  store %struct.bNodeSocket* %call3, %struct.bNodeSocket** %iosock, align 8, !dbg !7880
  br label %if.end, !dbg !7881

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7882
  %tobool4 = icmp ne %struct.bNodeSocket* %10, null, !dbg !7882
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !7884

if.then5:                                         ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !7885
  br label %return, !dbg !7885

if.end6:                                          ; preds = %if.end
  %11 = load i32, i32* %direction, align 4, !dbg !7886
  switch i32 %11, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb10
  ], !dbg !7887

sw.bb:                                            ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %before, metadata !7888, metadata !DIExpression()), !dbg !7891
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7892
  %prev = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %12, i32 0, i32 1, !dbg !7893
  %13 = load %struct.bNodeSocket*, %struct.bNodeSocket** %prev, align 8, !dbg !7893
  store %struct.bNodeSocket* %13, %struct.bNodeSocket** %before, align 8, !dbg !7891
  %14 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !7894
  %15 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7895
  %16 = bitcast %struct.bNodeSocket* %15 to i8*, !dbg !7895
  call void @BLI_remlink(%struct.ListBase* %14, i8* %16), !dbg !7896
  %17 = load %struct.bNodeSocket*, %struct.bNodeSocket** %before, align 8, !dbg !7897
  %tobool7 = icmp ne %struct.bNodeSocket* %17, null, !dbg !7897
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !7899

if.then8:                                         ; preds = %sw.bb
  %18 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !7900
  %19 = load %struct.bNodeSocket*, %struct.bNodeSocket** %before, align 8, !dbg !7901
  %20 = bitcast %struct.bNodeSocket* %19 to i8*, !dbg !7901
  %21 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7902
  %22 = bitcast %struct.bNodeSocket* %21 to i8*, !dbg !7902
  call void @BLI_insertlinkbefore(%struct.ListBase* %18, i8* %20, i8* %22), !dbg !7903
  br label %if.end9, !dbg !7903

if.else:                                          ; preds = %sw.bb
  %23 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !7904
  %24 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7905
  %25 = bitcast %struct.bNodeSocket* %24 to i8*, !dbg !7905
  call void @BLI_addhead(%struct.ListBase* %23, i8* %25), !dbg !7906
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then8
  br label %sw.epilog, !dbg !7907

sw.bb10:                                          ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %after, metadata !7908, metadata !DIExpression()), !dbg !7910
  %26 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7911
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %26, i32 0, i32 0, !dbg !7912
  %27 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !7912
  store %struct.bNodeSocket* %27, %struct.bNodeSocket** %after, align 8, !dbg !7910
  %28 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !7913
  %29 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7914
  %30 = bitcast %struct.bNodeSocket* %29 to i8*, !dbg !7914
  call void @BLI_remlink(%struct.ListBase* %28, i8* %30), !dbg !7915
  %31 = load %struct.bNodeSocket*, %struct.bNodeSocket** %after, align 8, !dbg !7916
  %tobool11 = icmp ne %struct.bNodeSocket* %31, null, !dbg !7916
  br i1 %tobool11, label %if.then12, label %if.else13, !dbg !7918

if.then12:                                        ; preds = %sw.bb10
  %32 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !7919
  %33 = load %struct.bNodeSocket*, %struct.bNodeSocket** %after, align 8, !dbg !7920
  %34 = bitcast %struct.bNodeSocket* %33 to i8*, !dbg !7920
  %35 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7921
  %36 = bitcast %struct.bNodeSocket* %35 to i8*, !dbg !7921
  call void @BLI_insertlinkafter(%struct.ListBase* %32, i8* %34, i8* %36), !dbg !7922
  br label %if.end14, !dbg !7922

if.else13:                                        ; preds = %sw.bb10
  %37 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !7923
  %38 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7924
  %39 = bitcast %struct.bNodeSocket* %38 to i8*, !dbg !7924
  call void @BLI_addtail(%struct.ListBase* %37, i8* %39), !dbg !7925
  br label %if.end14

if.end14:                                         ; preds = %if.else13, %if.then12
  br label %sw.epilog, !dbg !7926

sw.epilog:                                        ; preds = %if.end6, %if.end14, %if.end9
  %40 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7927
  %call15 = call %struct.Main* @CTX_data_main(%struct.bContext* %40), !dbg !7928
  %41 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7929
  call void @ntreeUpdateTree(%struct.Main* %call15, %struct.bNodeTree* %41), !dbg !7930
  %42 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7931
  call void @WM_event_add_notifier(%struct.bContext* %42, i32 288555008, i8* null), !dbg !7932
  store i32 4, i32* %retval, align 4, !dbg !7933
  br label %return, !dbg !7933

return:                                           ; preds = %sw.epilog, %if.then5
  %43 = load i32, i32* %retval, align 4, !dbg !7934
  ret i32 %43, !dbg !7934
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_shader_script_update(%struct.wmOperatorType* %ot) #0 !dbg !7935 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7936, metadata !DIExpression()), !dbg !7937
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7938
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7939
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.93, i64 0, i64 0), i8** %name, align 8, !dbg !7940
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7941
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7942
  store i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.94, i64 0, i64 0), i8** %description, align 8, !dbg !7943
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7944
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7945
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.95, i64 0, i64 0), i8** %idname, align 8, !dbg !7946
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7947
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7948
  store i32 (%struct.bContext*, %struct.wmOperator*)* @node_shader_script_update_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7949
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7950
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7951
  store i32 (%struct.bContext*)* @node_shader_script_update_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !7952
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7953
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7954
  store i16 3, i16* %flag, align 8, !dbg !7955
  ret void, !dbg !7956
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_shader_script_update_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7957 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %scene = alloca %struct.Scene*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %nodeptr = alloca %struct.PointerRNA, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  %engine = alloca %struct.RenderEngine*, align 8
  %type = alloca %struct.RenderEngineType*, align 8
  %found = alloca i8, align 1
  %text = alloca %struct.Text*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  %_nstore = alloca %struct.NodeTreeIterStore, align 8
  %ntree22 = alloca %struct.bNodeTree*, align 8
  %id23 = alloca %struct.ID*, align 8
  %_nstore34 = alloca %struct.NodeTreeIterStore, align 8
  %ntree35 = alloca %struct.bNodeTree*, align 8
  %id36 = alloca %struct.ID*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7958, metadata !DIExpression()), !dbg !7959
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7960, metadata !DIExpression()), !dbg !7961
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !7962, metadata !DIExpression()), !dbg !7963
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7964
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !7965
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !7963
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !7966, metadata !DIExpression()), !dbg !7967
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7968
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !7969
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !7967
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !7970, metadata !DIExpression()), !dbg !7971
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7972
  %call2 = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %2), !dbg !7973
  store %struct.SpaceNode* %call2, %struct.SpaceNode** %snode, align 8, !dbg !7971
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %nodeptr, metadata !7974, metadata !DIExpression()), !dbg !7975
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7976
  call void @CTX_data_pointer_get_type(%struct.PointerRNA* sret %nodeptr, %struct.bContext* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.104, i64 0, i64 0), %struct.StructRNA* @RNA_ShaderNodeScript), !dbg !7977
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !7978, metadata !DIExpression()), !dbg !7979
  store %struct.bNodeTree* null, %struct.bNodeTree** %ntree, align 8, !dbg !7979
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !7980, metadata !DIExpression()), !dbg !7981
  store %struct.bNode* null, %struct.bNode** %node, align 8, !dbg !7981
  call void @llvm.dbg.declare(metadata %struct.RenderEngine** %engine, metadata !7982, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.declare(metadata %struct.RenderEngineType** %type, metadata !8057, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.declare(metadata i8* %found, metadata !8059, metadata !DIExpression()), !dbg !8060
  store i8 0, i8* %found, align 1, !dbg !8060
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8061
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 22, !dbg !8062
  %engine3 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 115, !dbg !8063
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %engine3, i64 0, i64 0, !dbg !8061
  %call4 = call %struct.RenderEngineType* @RE_engines_find(i8* %arraydecay), !dbg !8064
  store %struct.RenderEngineType* %call4, %struct.RenderEngineType** %type, align 8, !dbg !8065
  %5 = load %struct.RenderEngineType*, %struct.RenderEngineType** %type, align 8, !dbg !8066
  %call5 = call %struct.RenderEngine* @RE_engine_create(%struct.RenderEngineType* %5), !dbg !8067
  store %struct.RenderEngine* %call5, %struct.RenderEngine** %engine, align 8, !dbg !8068
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8069
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 8, !dbg !8070
  %7 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !8070
  %8 = load %struct.RenderEngine*, %struct.RenderEngine** %engine, align 8, !dbg !8071
  %reports6 = getelementptr inbounds %struct.RenderEngine, %struct.RenderEngine* %8, i32 0, i32 12, !dbg !8072
  store %struct.ReportList* %7, %struct.ReportList** %reports6, align 8, !dbg !8073
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %nodeptr, i32 0, i32 2, !dbg !8074
  %9 = load i8*, i8** %data, align 8, !dbg !8074
  %tobool = icmp ne i8* %9, null, !dbg !8076
  br i1 %tobool, label %if.then, label %if.else, !dbg !8077

if.then:                                          ; preds = %entry
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %nodeptr, i32 0, i32 0, !dbg !8078
  %data7 = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !8080
  %10 = load i8*, i8** %data7, align 8, !dbg !8080
  %11 = bitcast i8* %10 to %struct.bNodeTree*, !dbg !8081
  store %struct.bNodeTree* %11, %struct.bNodeTree** %ntree, align 8, !dbg !8082
  %data8 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %nodeptr, i32 0, i32 2, !dbg !8083
  %12 = load i8*, i8** %data8, align 8, !dbg !8083
  %13 = bitcast i8* %12 to %struct.bNode*, !dbg !8084
  store %struct.bNode* %13, %struct.bNode** %node, align 8, !dbg !8085
  br label %if.end15, !dbg !8086

if.else:                                          ; preds = %entry
  %14 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8087
  %tobool9 = icmp ne %struct.SpaceNode* %14, null, !dbg !8087
  br i1 %tobool9, label %land.lhs.true, label %if.end, !dbg !8089

land.lhs.true:                                    ; preds = %if.else
  %15 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8090
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %15, i32 0, i32 19, !dbg !8091
  %16 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !8091
  %tobool10 = icmp ne %struct.bNodeTree* %16, null, !dbg !8090
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !8092

if.then11:                                        ; preds = %land.lhs.true
  %17 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8093
  %edittree12 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %17, i32 0, i32 19, !dbg !8095
  %18 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree12, align 8, !dbg !8095
  store %struct.bNodeTree* %18, %struct.bNodeTree** %ntree, align 8, !dbg !8096
  %19 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8097
  %edittree13 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %19, i32 0, i32 19, !dbg !8098
  %20 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree13, align 8, !dbg !8098
  %call14 = call %struct.bNode* @nodeGetActive(%struct.bNodeTree* %20), !dbg !8099
  store %struct.bNode* %call14, %struct.bNode** %node, align 8, !dbg !8100
  br label %if.end, !dbg !8101

if.end:                                           ; preds = %if.then11, %land.lhs.true, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  %21 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8102
  %tobool16 = icmp ne %struct.bNode* %21, null, !dbg !8102
  br i1 %tobool16, label %if.then17, label %if.else18, !dbg !8104

if.then17:                                        ; preds = %if.end15
  %22 = load %struct.RenderEngineType*, %struct.RenderEngineType** %type, align 8, !dbg !8105
  %update_script_node = getelementptr inbounds %struct.RenderEngineType, %struct.RenderEngineType* %22, i32 0, i32 10, !dbg !8107
  %23 = load void (%struct.RenderEngine*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.RenderEngine*, %struct.bNodeTree*, %struct.bNode*)** %update_script_node, align 8, !dbg !8107
  %24 = load %struct.RenderEngine*, %struct.RenderEngine** %engine, align 8, !dbg !8108
  %25 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !8109
  %26 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8110
  call void %23(%struct.RenderEngine* %24, %struct.bNodeTree* %25, %struct.bNode* %26), !dbg !8105
  store i8 1, i8* %found, align 1, !dbg !8111
  br label %if.end65, !dbg !8112

if.else18:                                        ; preds = %if.end15
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !8113, metadata !DIExpression()), !dbg !8117
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8118
  call void @CTX_data_pointer_get_type(%struct.PointerRNA* sret %tmp, %struct.bContext* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.112, i64 0, i64 0), %struct.StructRNA* @RNA_Text), !dbg !8119
  %data19 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %tmp, i32 0, i32 2, !dbg !8120
  %28 = load i8*, i8** %data19, align 8, !dbg !8120
  %29 = bitcast i8* %28 to %struct.Text*, !dbg !8119
  store %struct.Text* %29, %struct.Text** %text, align 8, !dbg !8117
  %30 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !8121
  %tobool20 = icmp ne %struct.Text* %30, null, !dbg !8121
  br i1 %tobool20, label %if.then21, label %if.end64, !dbg !8123

if.then21:                                        ; preds = %if.else18
  call void @llvm.dbg.declare(metadata %struct.NodeTreeIterStore* %_nstore, metadata !8124, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree22, metadata !8128, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.declare(metadata %struct.ID** %id23, metadata !8129, metadata !DIExpression()), !dbg !8127
  %31 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !8127
  call void @BKE_node_tree_iter_init(%struct.NodeTreeIterStore* %_nstore, %struct.Main* %31), !dbg !8127
  br label %while.cond, !dbg !8127

while.cond:                                       ; preds = %if.end33, %if.then21
  %call24 = call zeroext i8 @BKE_node_tree_iter_step(%struct.NodeTreeIterStore* %_nstore, %struct.bNodeTree** %ntree22, %struct.ID** %id23), !dbg !8127
  %conv = zext i8 %call24 to i32, !dbg !8127
  %cmp = icmp eq i32 %conv, 1, !dbg !8127
  br i1 %cmp, label %while.body, label %while.end, !dbg !8127

while.body:                                       ; preds = %while.cond
  %32 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree22, align 8, !dbg !8130
  %tobool26 = icmp ne %struct.bNodeTree* %32, null, !dbg !8130
  br i1 %tobool26, label %if.then27, label %if.end33, !dbg !8133

if.then27:                                        ; preds = %while.body
  %33 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree22, align 8, !dbg !8134
  %type28 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %33, i32 0, i32 9, !dbg !8138
  %34 = load i32, i32* %type28, align 8, !dbg !8138
  %cmp29 = icmp eq i32 %34, 0, !dbg !8139
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !8140

if.then31:                                        ; preds = %if.then27
  %35 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree22, align 8, !dbg !8141
  %done = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %35, i32 0, i32 15, !dbg !8142
  store i16 0, i16* %done, align 2, !dbg !8143
  br label %if.end32, !dbg !8141

if.end32:                                         ; preds = %if.then31, %if.then27
  br label %if.end33, !dbg !8144

if.end33:                                         ; preds = %if.end32, %while.body
  br label %while.cond, !dbg !8127, !llvm.loop !8145

while.end:                                        ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.NodeTreeIterStore* %_nstore34, metadata !8147, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree35, metadata !8150, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.declare(metadata %struct.ID** %id36, metadata !8151, metadata !DIExpression()), !dbg !8149
  %36 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !8149
  call void @BKE_node_tree_iter_init(%struct.NodeTreeIterStore* %_nstore34, %struct.Main* %36), !dbg !8149
  br label %while.cond37, !dbg !8149

while.cond37:                                     ; preds = %if.end58, %while.end
  %call38 = call zeroext i8 @BKE_node_tree_iter_step(%struct.NodeTreeIterStore* %_nstore34, %struct.bNodeTree** %ntree35, %struct.ID** %id36), !dbg !8149
  %conv39 = zext i8 %call38 to i32, !dbg !8149
  %cmp40 = icmp eq i32 %conv39, 1, !dbg !8149
  br i1 %cmp40, label %while.body42, label %while.end59, !dbg !8149

while.body42:                                     ; preds = %while.cond37
  %37 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree35, align 8, !dbg !8152
  %tobool43 = icmp ne %struct.bNodeTree* %37, null, !dbg !8152
  br i1 %tobool43, label %if.then44, label %if.end58, !dbg !8155

if.then44:                                        ; preds = %while.body42
  %38 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree35, align 8, !dbg !8156
  %type45 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %38, i32 0, i32 9, !dbg !8160
  %39 = load i32, i32* %type45, align 8, !dbg !8160
  %cmp46 = icmp eq i32 %39, 0, !dbg !8161
  br i1 %cmp46, label %if.then48, label %if.end57, !dbg !8162

if.then48:                                        ; preds = %if.then44
  %40 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree35, align 8, !dbg !8163
  %done49 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %40, i32 0, i32 15, !dbg !8166
  %41 = load i16, i16* %done49, align 2, !dbg !8166
  %tobool50 = icmp ne i16 %41, 0, !dbg !8163
  br i1 %tobool50, label %if.end56, label %if.then51, !dbg !8167

if.then51:                                        ; preds = %if.then48
  %42 = load %struct.RenderEngine*, %struct.RenderEngine** %engine, align 8, !dbg !8168
  %43 = load %struct.RenderEngineType*, %struct.RenderEngineType** %type, align 8, !dbg !8169
  %44 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree35, align 8, !dbg !8170
  %45 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !8171
  %call52 = call zeroext i8 @node_shader_script_update_text_recursive(%struct.RenderEngine* %42, %struct.RenderEngineType* %43, %struct.bNodeTree* %44, %struct.Text* %45), !dbg !8172
  %conv53 = zext i8 %call52 to i32, !dbg !8172
  %46 = load i8, i8* %found, align 1, !dbg !8173
  %conv54 = zext i8 %46 to i32, !dbg !8173
  %or = or i32 %conv54, %conv53, !dbg !8173
  %conv55 = trunc i32 %or to i8, !dbg !8173
  store i8 %conv55, i8* %found, align 1, !dbg !8173
  br label %if.end56, !dbg !8174

if.end56:                                         ; preds = %if.then51, %if.then48
  br label %if.end57, !dbg !8175

if.end57:                                         ; preds = %if.end56, %if.then44
  br label %if.end58, !dbg !8176

if.end58:                                         ; preds = %if.end57, %while.body42
  br label %while.cond37, !dbg !8149, !llvm.loop !8177

while.end59:                                      ; preds = %while.cond37
  %47 = load i8, i8* %found, align 1, !dbg !8179
  %tobool60 = icmp ne i8 %47, 0, !dbg !8179
  br i1 %tobool60, label %if.end63, label %if.then61, !dbg !8181

if.then61:                                        ; preds = %while.end59
  %48 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8182
  %reports62 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %48, i32 0, i32 8, !dbg !8183
  %49 = load %struct.ReportList*, %struct.ReportList** %reports62, align 8, !dbg !8183
  call void @BKE_report(%struct.ReportList* %49, i32 2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.113, i64 0, i64 0)), !dbg !8184
  br label %if.end63, !dbg !8184

if.end63:                                         ; preds = %if.then61, %while.end59
  br label %if.end64, !dbg !8185

if.end64:                                         ; preds = %if.end63, %if.else18
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then17
  %50 = load %struct.RenderEngine*, %struct.RenderEngine** %engine, align 8, !dbg !8186
  call void @RE_engine_free(%struct.RenderEngine* %50), !dbg !8187
  %51 = load i8, i8* %found, align 1, !dbg !8188
  %conv66 = zext i8 %51 to i32, !dbg !8189
  %tobool67 = icmp ne i32 %conv66, 0, !dbg !8189
  %52 = zext i1 %tobool67 to i64, !dbg !8189
  %cond = select i1 %tobool67, i32 4, i32 2, !dbg !8189
  ret i32 %cond, !dbg !8190
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_shader_script_update_poll(%struct.bContext* %C) #0 !dbg !8191 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %scene = alloca %struct.Scene*, align 8
  %type = alloca %struct.RenderEngineType*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %node = alloca %struct.bNode*, align 8
  %text = alloca %struct.Text*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  %nss = alloca %struct.NodeShaderScript*, align 8
  %tmp25 = alloca %struct.PointerRNA, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8192, metadata !DIExpression()), !dbg !8193
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !8194, metadata !DIExpression()), !dbg !8195
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8196
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !8197
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !8195
  call void @llvm.dbg.declare(metadata %struct.RenderEngineType** %type, metadata !8198, metadata !DIExpression()), !dbg !8199
  %1 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8200
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 22, !dbg !8201
  %engine = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 115, !dbg !8202
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %engine, i64 0, i64 0, !dbg !8200
  %call1 = call %struct.RenderEngineType* @RE_engines_find(i8* %arraydecay), !dbg !8203
  store %struct.RenderEngineType* %call1, %struct.RenderEngineType** %type, align 8, !dbg !8199
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !8204, metadata !DIExpression()), !dbg !8205
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8206
  %call2 = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %2), !dbg !8207
  store %struct.SpaceNode* %call2, %struct.SpaceNode** %snode, align 8, !dbg !8205
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !8208, metadata !DIExpression()), !dbg !8209
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !8210, metadata !DIExpression()), !dbg !8211
  %3 = load %struct.RenderEngineType*, %struct.RenderEngineType** %type, align 8, !dbg !8212
  %tobool = icmp ne %struct.RenderEngineType* %3, null, !dbg !8212
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !8214

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.RenderEngineType*, %struct.RenderEngineType** %type, align 8, !dbg !8215
  %update_script_node = getelementptr inbounds %struct.RenderEngineType, %struct.RenderEngineType* %4, i32 0, i32 10, !dbg !8216
  %5 = load void (%struct.RenderEngine*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.RenderEngine*, %struct.bNodeTree*, %struct.bNode*)** %update_script_node, align 8, !dbg !8216
  %tobool3 = icmp ne void (%struct.RenderEngine*, %struct.bNodeTree*, %struct.bNode*)* %5, null, !dbg !8215
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8217

if.then:                                          ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !8218
  br label %return, !dbg !8218

if.end:                                           ; preds = %land.lhs.true
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8219
  call void @CTX_data_pointer_get_type(%struct.PointerRNA* sret %tmp, %struct.bContext* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.104, i64 0, i64 0), %struct.StructRNA* @RNA_ShaderNodeScript), !dbg !8220
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %tmp, i32 0, i32 2, !dbg !8221
  %7 = load i8*, i8** %data, align 8, !dbg !8221
  %8 = bitcast i8* %7 to %struct.bNode*, !dbg !8220
  store %struct.bNode* %8, %struct.bNode** %node, align 8, !dbg !8222
  %9 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8223
  %tobool4 = icmp ne %struct.bNode* %9, null, !dbg !8223
  br i1 %tobool4, label %if.end12, label %land.lhs.true5, !dbg !8225

land.lhs.true5:                                   ; preds = %if.end
  %10 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8226
  %tobool6 = icmp ne %struct.SpaceNode* %10, null, !dbg !8226
  br i1 %tobool6, label %land.lhs.true7, label %if.end12, !dbg !8227

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %11 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8228
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %11, i32 0, i32 19, !dbg !8229
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !8229
  %tobool8 = icmp ne %struct.bNodeTree* %12, null, !dbg !8228
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !8230

if.then9:                                         ; preds = %land.lhs.true7
  %13 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8231
  %edittree10 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %13, i32 0, i32 19, !dbg !8232
  %14 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree10, align 8, !dbg !8232
  %call11 = call %struct.bNode* @nodeGetActive(%struct.bNodeTree* %14), !dbg !8233
  store %struct.bNode* %call11, %struct.bNode** %node, align 8, !dbg !8234
  br label %if.end12, !dbg !8235

if.end12:                                         ; preds = %if.then9, %land.lhs.true7, %land.lhs.true5, %if.end
  %15 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8236
  %tobool13 = icmp ne %struct.bNode* %15, null, !dbg !8236
  br i1 %tobool13, label %land.lhs.true14, label %if.end24, !dbg !8238

land.lhs.true14:                                  ; preds = %if.end12
  %16 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8239
  %type15 = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 8, !dbg !8240
  %17 = load i16, i16* %type15, align 4, !dbg !8240
  %conv = sext i16 %17 to i32, !dbg !8239
  %cmp = icmp eq i32 %conv, 171, !dbg !8241
  br i1 %cmp, label %if.then17, label %if.end24, !dbg !8242

if.then17:                                        ; preds = %land.lhs.true14
  call void @llvm.dbg.declare(metadata %struct.NodeShaderScript** %nss, metadata !8243, metadata !DIExpression()), !dbg !8254
  %18 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8255
  %storage = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 21, !dbg !8256
  %19 = load i8*, i8** %storage, align 8, !dbg !8256
  %20 = bitcast i8* %19 to %struct.NodeShaderScript*, !dbg !8255
  store %struct.NodeShaderScript* %20, %struct.NodeShaderScript** %nss, align 8, !dbg !8254
  %21 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8257
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %21, i32 0, i32 20, !dbg !8259
  %22 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !8259
  %tobool18 = icmp ne %struct.ID* %22, null, !dbg !8257
  br i1 %tobool18, label %if.then21, label %lor.lhs.false, !dbg !8260

lor.lhs.false:                                    ; preds = %if.then17
  %23 = load %struct.NodeShaderScript*, %struct.NodeShaderScript** %nss, align 8, !dbg !8261
  %filepath = getelementptr inbounds %struct.NodeShaderScript, %struct.NodeShaderScript* %23, i32 0, i32 2, !dbg !8262
  %arrayidx = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !8261
  %24 = load i8, i8* %arrayidx, align 8, !dbg !8261
  %conv19 = zext i8 %24 to i32, !dbg !8261
  %tobool20 = icmp ne i32 %conv19, 0, !dbg !8261
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !8263

if.then21:                                        ; preds = %lor.lhs.false, %if.then17
  %25 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8264
  %call22 = call i32 @ED_operator_node_editable(%struct.bContext* %25), !dbg !8266
  store i32 %call22, i32* %retval, align 4, !dbg !8267
  br label %return, !dbg !8267

if.end23:                                         ; preds = %lor.lhs.false
  br label %if.end24, !dbg !8268

if.end24:                                         ; preds = %if.end23, %land.lhs.true14, %if.end12
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8269
  call void @CTX_data_pointer_get_type(%struct.PointerRNA* sret %tmp25, %struct.bContext* %26, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.112, i64 0, i64 0), %struct.StructRNA* @RNA_Text), !dbg !8270
  %data26 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %tmp25, i32 0, i32 2, !dbg !8271
  %27 = load i8*, i8** %data26, align 8, !dbg !8271
  %28 = bitcast i8* %27 to %struct.Text*, !dbg !8270
  store %struct.Text* %28, %struct.Text** %text, align 8, !dbg !8272
  %29 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !8273
  %tobool27 = icmp ne %struct.Text* %29, null, !dbg !8273
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !8275

if.then28:                                        ; preds = %if.end24
  store i32 1, i32* %retval, align 4, !dbg !8276
  br label %return, !dbg !8276

if.end29:                                         ; preds = %if.end24
  store i32 0, i32* %retval, align 4, !dbg !8277
  br label %return, !dbg !8277

return:                                           ; preds = %if.end29, %if.then28, %if.then21, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !8278
  ret i32 %30, !dbg !8278
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_viewer_border(%struct.wmOperatorType* %ot) #0 !dbg !8279 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8280, metadata !DIExpression()), !dbg !8281
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8282
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8283
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.96, i64 0, i64 0), i8** %name, align 8, !dbg !8284
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8285
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !8286
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.97, i64 0, i64 0), i8** %description, align 8, !dbg !8287
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8288
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !8289
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.98, i64 0, i64 0), i8** %idname, align 8, !dbg !8290
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8291
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8292
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_border_select_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8293
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8294
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8295
  store i32 (%struct.bContext*, %struct.wmOperator*)* @viewer_border_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8296
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8297
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 8, !dbg !8298
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_border_select_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !8299
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8300
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 7, !dbg !8301
  store void (%struct.bContext*, %struct.wmOperator*)* @WM_border_select_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !8302
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8303
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 9, !dbg !8304
  store i32 (%struct.bContext*)* @composite_node_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !8305
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8306
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 19, !dbg !8307
  store i16 3, i16* %flag, align 8, !dbg !8308
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8309
  call void @WM_operator_properties_gesture_border(%struct.wmOperatorType* %9, i8 zeroext 1), !dbg !8310
  ret void, !dbg !8311
}

declare dso_local i32 @WM_border_select_invoke(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @viewer_border_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8312 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ima = alloca %struct.Image*, align 8
  %lock = alloca i8*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %btree = alloca %struct.bNodeTree*, align 8
  %rect = alloca %struct.rcti, align 4
  %rectf = alloca %struct.rctf, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8313, metadata !DIExpression()), !dbg !8314
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8315, metadata !DIExpression()), !dbg !8316
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !8317, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.declare(metadata i8** %lock, metadata !8321, metadata !DIExpression()), !dbg !8322
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !8323, metadata !DIExpression()), !dbg !8326
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8327
  call void @ED_preview_kill_jobs(%struct.bContext* %0), !dbg !8328
  %call = call %struct.Image* @BKE_image_verify_viewer(i32 5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0)), !dbg !8329
  store %struct.Image* %call, %struct.Image** %ima, align 8, !dbg !8330
  %1 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !8331
  %call1 = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %1, %struct.ImageUser* null, i8** %lock), !dbg !8332
  store %struct.ImBuf* %call1, %struct.ImBuf** %ibuf, align 8, !dbg !8333
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8334
  %tobool = icmp ne %struct.ImBuf* %2, null, !dbg !8334
  br i1 %tobool, label %if.then, label %if.end45, !dbg !8336

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !8337, metadata !DIExpression()), !dbg !8339
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8340
  %call2 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %3), !dbg !8341
  store %struct.ARegion* %call2, %struct.ARegion** %ar, align 8, !dbg !8339
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !8342, metadata !DIExpression()), !dbg !8343
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8344
  %call3 = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %4), !dbg !8345
  store %struct.SpaceNode* %call3, %struct.SpaceNode** %snode, align 8, !dbg !8343
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %btree, metadata !8346, metadata !DIExpression()), !dbg !8347
  %5 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8348
  %nodetree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %5, i32 0, i32 18, !dbg !8349
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !8349
  store %struct.bNodeTree* %6, %struct.bNodeTree** %btree, align 8, !dbg !8347
  call void @llvm.dbg.declare(metadata %struct.rcti* %rect, metadata !8350, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.declare(metadata %struct.rctf* %rectf, metadata !8352, metadata !DIExpression()), !dbg !8353
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8354
  call void @WM_operator_properties_border_to_rcti(%struct.wmOperator* %7, %struct.rcti* %rect), !dbg !8355
  %8 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8356
  %9 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8357
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 0, !dbg !8358
  %10 = load i32, i32* %xmin, align 4, !dbg !8358
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 2, !dbg !8359
  %11 = load i32, i32* %ymin, align 4, !dbg !8359
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8360
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %12, i32 0, i32 2, !dbg !8361
  %13 = load i32, i32* %x, align 8, !dbg !8361
  %14 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8362
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %14, i32 0, i32 3, !dbg !8363
  %15 = load i32, i32* %y, align 4, !dbg !8363
  %xmin4 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 0, !dbg !8364
  %ymin5 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 2, !dbg !8365
  call void @viewer_border_corner_to_backdrop(%struct.SpaceNode* %8, %struct.ARegion* %9, i32 %10, i32 %11, i32 %13, i32 %15, float* %xmin4, float* %ymin5), !dbg !8366
  %16 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8367
  %17 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8368
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 1, !dbg !8369
  %18 = load i32, i32* %xmax, align 4, !dbg !8369
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 3, !dbg !8370
  %19 = load i32, i32* %ymax, align 4, !dbg !8370
  %20 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8371
  %x6 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %20, i32 0, i32 2, !dbg !8372
  %21 = load i32, i32* %x6, align 8, !dbg !8372
  %22 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8373
  %y7 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %22, i32 0, i32 3, !dbg !8374
  %23 = load i32, i32* %y7, align 4, !dbg !8374
  %xmax8 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 1, !dbg !8375
  %ymax9 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 3, !dbg !8376
  call void @viewer_border_corner_to_backdrop(%struct.SpaceNode* %16, %struct.ARegion* %17, i32 %18, i32 %19, i32 %21, i32 %23, float* %xmax8, float* %ymax9), !dbg !8377
  %xmin10 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 0, !dbg !8378
  %24 = load float, float* %xmin10, align 4, !dbg !8378
  %call11 = call float @max_ff(float %24, float 0.000000e+00), !dbg !8379
  %xmin12 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 0, !dbg !8380
  store float %call11, float* %xmin12, align 4, !dbg !8381
  %ymin13 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 2, !dbg !8382
  %25 = load float, float* %ymin13, align 4, !dbg !8382
  %call14 = call float @max_ff(float %25, float 0.000000e+00), !dbg !8383
  %ymin15 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 2, !dbg !8384
  store float %call14, float* %ymin15, align 4, !dbg !8385
  %xmax16 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 1, !dbg !8386
  %26 = load float, float* %xmax16, align 4, !dbg !8386
  %call17 = call float @min_ff(float %26, float 1.000000e+00), !dbg !8387
  %xmax18 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 1, !dbg !8388
  store float %call17, float* %xmax18, align 4, !dbg !8389
  %ymax19 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 3, !dbg !8390
  %27 = load float, float* %ymax19, align 4, !dbg !8390
  %call20 = call float @min_ff(float %27, float 1.000000e+00), !dbg !8391
  %ymax21 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 3, !dbg !8392
  store float %call20, float* %ymax21, align 4, !dbg !8393
  %xmin22 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 0, !dbg !8394
  %28 = load float, float* %xmin22, align 4, !dbg !8394
  %xmax23 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 1, !dbg !8396
  %29 = load float, float* %xmax23, align 4, !dbg !8396
  %cmp = fcmp olt float %28, %29, !dbg !8397
  br i1 %cmp, label %land.lhs.true, label %if.else41, !dbg !8398

land.lhs.true:                                    ; preds = %if.then
  %ymin24 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 2, !dbg !8399
  %30 = load float, float* %ymin24, align 4, !dbg !8399
  %ymax25 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 3, !dbg !8400
  %31 = load float, float* %ymax25, align 4, !dbg !8400
  %cmp26 = fcmp olt float %30, %31, !dbg !8401
  br i1 %cmp26, label %if.then27, label %if.else41, !dbg !8402

if.then27:                                        ; preds = %land.lhs.true
  %32 = load %struct.bNodeTree*, %struct.bNodeTree** %btree, align 8, !dbg !8403
  %viewer_border = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %32, i32 0, i32 21, !dbg !8405
  %33 = bitcast %struct.rctf* %viewer_border to i8*, !dbg !8406
  %34 = bitcast %struct.rctf* %rectf to i8*, !dbg !8406
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 4 %34, i64 16, i1 false), !dbg !8406
  %xmin28 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 0, !dbg !8407
  %35 = load float, float* %xmin28, align 4, !dbg !8407
  %cmp29 = fcmp oeq float %35, 0.000000e+00, !dbg !8409
  br i1 %cmp29, label %land.lhs.true30, label %if.else, !dbg !8410

land.lhs.true30:                                  ; preds = %if.then27
  %ymin31 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 2, !dbg !8411
  %36 = load float, float* %ymin31, align 4, !dbg !8411
  %cmp32 = fcmp oeq float %36, 0.000000e+00, !dbg !8412
  br i1 %cmp32, label %land.lhs.true33, label %if.else, !dbg !8413

land.lhs.true33:                                  ; preds = %land.lhs.true30
  %xmax34 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 1, !dbg !8414
  %37 = load float, float* %xmax34, align 4, !dbg !8414
  %cmp35 = fcmp oeq float %37, 1.000000e+00, !dbg !8415
  br i1 %cmp35, label %land.lhs.true36, label %if.else, !dbg !8416

land.lhs.true36:                                  ; preds = %land.lhs.true33
  %ymax37 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 3, !dbg !8417
  %38 = load float, float* %ymax37, align 4, !dbg !8417
  %cmp38 = fcmp oeq float %38, 1.000000e+00, !dbg !8418
  br i1 %cmp38, label %if.then39, label %if.else, !dbg !8419

if.then39:                                        ; preds = %land.lhs.true36
  %39 = load %struct.bNodeTree*, %struct.bNodeTree** %btree, align 8, !dbg !8420
  %flag = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %39, i32 0, i32 12, !dbg !8422
  %40 = load i32, i32* %flag, align 4, !dbg !8423
  %and = and i32 %40, -17, !dbg !8423
  store i32 %and, i32* %flag, align 4, !dbg !8423
  br label %if.end, !dbg !8424

if.else:                                          ; preds = %land.lhs.true36, %land.lhs.true33, %land.lhs.true30, %if.then27
  %41 = load %struct.bNodeTree*, %struct.bNodeTree** %btree, align 8, !dbg !8425
  %flag40 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %41, i32 0, i32 12, !dbg !8427
  %42 = load i32, i32* %flag40, align 4, !dbg !8428
  %or = or i32 %42, 16, !dbg !8428
  store i32 %or, i32* %flag40, align 4, !dbg !8428
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then39
  %43 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8429
  %44 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8430
  call void @snode_notify(%struct.bContext* %43, %struct.SpaceNode* %44), !dbg !8431
  %45 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8432
  call void @WM_event_add_notifier(%struct.bContext* %45, i32 288555008, i8* null), !dbg !8433
  br label %if.end44, !dbg !8434

if.else41:                                        ; preds = %land.lhs.true, %if.then
  %46 = load %struct.bNodeTree*, %struct.bNodeTree** %btree, align 8, !dbg !8435
  %flag42 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %46, i32 0, i32 12, !dbg !8437
  %47 = load i32, i32* %flag42, align 4, !dbg !8438
  %and43 = and i32 %47, -17, !dbg !8438
  store i32 %and43, i32* %flag42, align 4, !dbg !8438
  br label %if.end44

if.end44:                                         ; preds = %if.else41, %if.end
  br label %if.end45, !dbg !8439

if.end45:                                         ; preds = %if.end44, %entry
  %48 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !8440
  %49 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8441
  %50 = load i8*, i8** %lock, align 8, !dbg !8442
  call void @BKE_image_release_ibuf(%struct.Image* %48, %struct.ImBuf* %49, i8* %50), !dbg !8443
  ret i32 4, !dbg !8444
}

declare dso_local i32 @WM_border_select_modal(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

declare dso_local void @WM_border_select_cancel(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local void @WM_operator_properties_gesture_border(%struct.wmOperatorType*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @NODE_OT_clear_viewer_border(%struct.wmOperatorType* %ot) #0 !dbg !8445 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8446, metadata !DIExpression()), !dbg !8447
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8448
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8449
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.99, i64 0, i64 0), i8** %name, align 8, !dbg !8450
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8451
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !8452
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.100, i64 0, i64 0), i8** %description, align 8, !dbg !8453
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8454
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !8455
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.101, i64 0, i64 0), i8** %idname, align 8, !dbg !8456
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8457
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8458
  store i32 (%struct.bContext*, %struct.wmOperator*)* @clear_viewer_border_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8459
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8460
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8461
  store i32 (%struct.bContext*)* @composite_node_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !8462
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8463
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8464
  store i16 3, i16* %flag, align 8, !dbg !8465
  ret void, !dbg !8466
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @clear_viewer_border_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !8467 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %btree = alloca %struct.bNodeTree*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8468, metadata !DIExpression()), !dbg !8469
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !8470, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !8472, metadata !DIExpression()), !dbg !8473
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8474
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !8475
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !8473
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %btree, metadata !8476, metadata !DIExpression()), !dbg !8477
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8478
  %nodetree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %1, i32 0, i32 18, !dbg !8479
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !8479
  store %struct.bNodeTree* %2, %struct.bNodeTree** %btree, align 8, !dbg !8477
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %btree, align 8, !dbg !8480
  %flag = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 12, !dbg !8481
  %4 = load i32, i32* %flag, align 4, !dbg !8482
  %and = and i32 %4, -17, !dbg !8482
  store i32 %and, i32* %flag, align 4, !dbg !8482
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8483
  %6 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8484
  call void @snode_notify(%struct.bContext* %5, %struct.SpaceNode* %6), !dbg !8485
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8486
  call void @WM_event_add_notifier(%struct.bContext* %7, i32 288555008, i8* null), !dbg !8487
  ret i32 4, !dbg !8488
}

declare dso_local void @ntreeLocalMerge(%struct.bNodeTree*, %struct.bNodeTree*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @compo_breakjob(i8* %cjv) #0 !dbg !8489 {
entry:
  %cjv.addr = alloca i8*, align 8
  %cj = alloca %struct.CompoJob*, align 8
  store i8* %cjv, i8** %cjv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cjv.addr, metadata !8490, metadata !DIExpression()), !dbg !8491
  call void @llvm.dbg.declare(metadata %struct.CompoJob** %cj, metadata !8492, metadata !DIExpression()), !dbg !8493
  %0 = load i8*, i8** %cjv.addr, align 8, !dbg !8494
  %1 = bitcast i8* %0 to %struct.CompoJob*, !dbg !8494
  store %struct.CompoJob* %1, %struct.CompoJob** %cj, align 8, !dbg !8493
  %2 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !8495
  %stop = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %2, i32 0, i32 3, !dbg !8496
  %3 = load i16*, i16** %stop, align 8, !dbg !8496
  %4 = load i16, i16* %3, align 2, !dbg !8497
  %conv = sext i16 %4 to i32, !dbg !8497
  %tobool = icmp ne i32 %conv, 0, !dbg !8497
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !8498

lor.rhs:                                          ; preds = %entry
  %5 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !8499
  %conv1 = zext i8 %5 to i32, !dbg !8500
  %tobool2 = icmp ne i32 %conv1, 0, !dbg !8498
  br label %lor.end, !dbg !8498

lor.end:                                          ; preds = %lor.rhs, %entry
  %6 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !8498
  ret i32 %lor.ext, !dbg !8501
}

; Function Attrs: noinline nounwind uwtable
define internal void @compo_statsdrawjob(i8* %cjv, i8* %UNUSED_str) #0 !dbg !8502 {
entry:
  %cjv.addr = alloca i8*, align 8
  %UNUSED_str.addr = alloca i8*, align 8
  %cj = alloca %struct.CompoJob*, align 8
  store i8* %cjv, i8** %cjv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cjv.addr, metadata !8503, metadata !DIExpression()), !dbg !8504
  store i8* %UNUSED_str, i8** %UNUSED_str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_str.addr, metadata !8505, metadata !DIExpression()), !dbg !8506
  call void @llvm.dbg.declare(metadata %struct.CompoJob** %cj, metadata !8507, metadata !DIExpression()), !dbg !8508
  %0 = load i8*, i8** %cjv.addr, align 8, !dbg !8509
  %1 = bitcast i8* %0 to %struct.CompoJob*, !dbg !8509
  store %struct.CompoJob* %1, %struct.CompoJob** %cj, align 8, !dbg !8508
  %2 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !8510
  %do_update = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %2, i32 0, i32 4, !dbg !8511
  %3 = load i16*, i16** %do_update, align 8, !dbg !8511
  store i16 1, i16* %3, align 2, !dbg !8512
  %4 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !8513
  %need_sync = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %4, i32 0, i32 6, !dbg !8514
  store i16 1, i16* %need_sync, align 8, !dbg !8515
  ret void, !dbg !8516
}

; Function Attrs: noinline nounwind uwtable
define internal void @compo_progressjob(i8* %cjv, float %progress) #0 !dbg !8517 {
entry:
  %cjv.addr = alloca i8*, align 8
  %progress.addr = alloca float, align 4
  %cj = alloca %struct.CompoJob*, align 8
  store i8* %cjv, i8** %cjv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cjv.addr, metadata !8518, metadata !DIExpression()), !dbg !8519
  store float %progress, float* %progress.addr, align 4
  call void @llvm.dbg.declare(metadata float* %progress.addr, metadata !8520, metadata !DIExpression()), !dbg !8521
  call void @llvm.dbg.declare(metadata %struct.CompoJob** %cj, metadata !8522, metadata !DIExpression()), !dbg !8523
  %0 = load i8*, i8** %cjv.addr, align 8, !dbg !8524
  %1 = bitcast i8* %0 to %struct.CompoJob*, !dbg !8524
  store %struct.CompoJob* %1, %struct.CompoJob** %cj, align 8, !dbg !8523
  %2 = load float, float* %progress.addr, align 4, !dbg !8525
  %3 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !8526
  %progress1 = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %3, i32 0, i32 5, !dbg !8527
  %4 = load float*, float** %progress1, align 8, !dbg !8527
  store float %2, float* %4, align 4, !dbg !8528
  ret void, !dbg !8529
}

; Function Attrs: noinline nounwind uwtable
define internal void @compo_redrawjob(i8* %cjv) #0 !dbg !8530 {
entry:
  %cjv.addr = alloca i8*, align 8
  %cj = alloca %struct.CompoJob*, align 8
  store i8* %cjv, i8** %cjv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cjv.addr, metadata !8531, metadata !DIExpression()), !dbg !8532
  call void @llvm.dbg.declare(metadata %struct.CompoJob** %cj, metadata !8533, metadata !DIExpression()), !dbg !8534
  %0 = load i8*, i8** %cjv.addr, align 8, !dbg !8535
  %1 = bitcast i8* %0 to %struct.CompoJob*, !dbg !8535
  store %struct.CompoJob* %1, %struct.CompoJob** %cj, align 8, !dbg !8534
  %2 = load %struct.CompoJob*, %struct.CompoJob** %cj, align 8, !dbg !8536
  %do_update = getelementptr inbounds %struct.CompoJob, %struct.CompoJob* %2, i32 0, i32 4, !dbg !8537
  %3 = load i16*, i16** %do_update, align 8, !dbg !8537
  store i16 1, i16* %3, align 2, !dbg !8538
  ret void, !dbg !8539
}

declare dso_local void @ntreeCompositExecTree(%struct.Scene*, %struct.bNodeTree*, %struct.RenderData*, i32, i32, %struct.ColorManagedViewSettings*, %struct.ColorManagedDisplaySettings*) #2

declare dso_local %struct.bNodeTree* @ntreeLocalize(%struct.bNodeTree*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @compo_tag_output_nodes(%struct.bNodeTree* %nodetree, i32 %recalc_flags) #0 !dbg !8540 {
entry:
  %nodetree.addr = alloca %struct.bNodeTree*, align 8
  %recalc_flags.addr = alloca i32, align 4
  %node = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %nodetree, %struct.bNodeTree** %nodetree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %nodetree.addr, metadata !8543, metadata !DIExpression()), !dbg !8544
  store i32 %recalc_flags, i32* %recalc_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %recalc_flags.addr, metadata !8545, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !8547, metadata !DIExpression()), !dbg !8548
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree.addr, align 8, !dbg !8549
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 7, !dbg !8551
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !8552
  %1 = load i8*, i8** %first, align 8, !dbg !8552
  %2 = bitcast i8* %1 to %struct.bNode*, !dbg !8549
  store %struct.bNode* %2, %struct.bNode** %node, align 8, !dbg !8553
  br label %for.cond, !dbg !8554

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8555
  %tobool = icmp ne %struct.bNode* %3, null, !dbg !8557
  br i1 %tobool, label %for.body, label %for.end, !dbg !8557

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8558
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %4, i32 0, i32 8, !dbg !8561
  %5 = load i16, i16* %type, align 4, !dbg !8561
  %conv = sext i16 %5 to i32, !dbg !8558
  %cmp = icmp eq i32 %conv, 222, !dbg !8562
  br i1 %cmp, label %if.then, label %if.else, !dbg !8563

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %recalc_flags.addr, align 4, !dbg !8564
  %and = and i32 %6, 1, !dbg !8567
  %tobool2 = icmp ne i32 %and, 0, !dbg !8567
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !8568

if.then3:                                         ; preds = %if.then
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8569
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %7, i32 0, i32 7, !dbg !8570
  %8 = load i32, i32* %flag, align 8, !dbg !8571
  %or = or i32 %8, 131072, !dbg !8571
  store i32 %or, i32* %flag, align 8, !dbg !8571
  br label %if.end, !dbg !8569

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end31, !dbg !8572

if.else:                                          ; preds = %for.body
  %9 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8573
  %type4 = getelementptr inbounds %struct.bNode, %struct.bNode* %9, i32 0, i32 8, !dbg !8575
  %10 = load i16, i16* %type4, align 4, !dbg !8575
  %conv5 = sext i16 %10 to i32, !dbg !8573
  %cmp6 = icmp eq i32 %conv5, 201, !dbg !8576
  br i1 %cmp6, label %if.then12, label %lor.lhs.false, !dbg !8577

lor.lhs.false:                                    ; preds = %if.else
  %11 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8578
  %type8 = getelementptr inbounds %struct.bNode, %struct.bNode* %11, i32 0, i32 8, !dbg !8579
  %12 = load i16, i16* %type8, align 4, !dbg !8579
  %conv9 = sext i16 %12 to i32, !dbg !8578
  %cmp10 = icmp eq i32 %conv9, 240, !dbg !8580
  br i1 %cmp10, label %if.then12, label %if.else19, !dbg !8581

if.then12:                                        ; preds = %lor.lhs.false, %if.else
  %13 = load i32, i32* %recalc_flags.addr, align 4, !dbg !8582
  %and13 = and i32 %13, 2, !dbg !8585
  %tobool14 = icmp ne i32 %and13, 0, !dbg !8585
  br i1 %tobool14, label %if.then15, label %if.end18, !dbg !8586

if.then15:                                        ; preds = %if.then12
  %14 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8587
  %flag16 = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 7, !dbg !8588
  %15 = load i32, i32* %flag16, align 8, !dbg !8589
  %or17 = or i32 %15, 131072, !dbg !8589
  store i32 %or17, i32* %flag16, align 8, !dbg !8589
  br label %if.end18, !dbg !8587

if.end18:                                         ; preds = %if.then15, %if.then12
  br label %if.end30, !dbg !8590

if.else19:                                        ; preds = %lor.lhs.false
  %16 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8591
  %type20 = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 8, !dbg !8593
  %17 = load i16, i16* %type20, align 4, !dbg !8593
  %conv21 = sext i16 %17 to i32, !dbg !8591
  %cmp22 = icmp eq i32 %conv21, 2, !dbg !8594
  br i1 %cmp22, label %if.then24, label %if.end29, !dbg !8595

if.then24:                                        ; preds = %if.else19
  %18 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8596
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 20, !dbg !8599
  %19 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !8599
  %tobool25 = icmp ne %struct.ID* %19, null, !dbg !8596
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !8600

if.then26:                                        ; preds = %if.then24
  %20 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8601
  %id27 = getelementptr inbounds %struct.bNode, %struct.bNode* %20, i32 0, i32 20, !dbg !8602
  %21 = load %struct.ID*, %struct.ID** %id27, align 8, !dbg !8602
  %22 = bitcast %struct.ID* %21 to %struct.bNodeTree*, !dbg !8603
  %23 = load i32, i32* %recalc_flags.addr, align 4, !dbg !8604
  call void @compo_tag_output_nodes(%struct.bNodeTree* %22, i32 %23), !dbg !8605
  br label %if.end28, !dbg !8605

if.end28:                                         ; preds = %if.then26, %if.then24
  br label %if.end29, !dbg !8606

if.end29:                                         ; preds = %if.end28, %if.else19
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end18
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end
  br label %for.inc, !dbg !8607

for.inc:                                          ; preds = %if.end31
  %24 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8608
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %24, i32 0, i32 0, !dbg !8609
  %25 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !8609
  store %struct.bNode* %25, %struct.bNode** %node, align 8, !dbg !8610
  br label %for.cond, !dbg !8611, !llvm.loop !8612

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8614
}

declare dso_local void @ntreeLocalSync(%struct.bNodeTree*, %struct.bNodeTree*) #2

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #2

declare dso_local %struct.bNode* @nodeGetActive(%struct.bNodeTree*) #2

declare dso_local void @UI_view2d_region_to_view(%struct.View2D*, float, float, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @node_resize_init(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event, %struct.bNode* %node, i32 %dir) #0 !dbg !8615 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %dir.addr = alloca i32, align 4
  %snode = alloca %struct.SpaceNode*, align 8
  %nsw = alloca %struct.NodeSizeWidget*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8618, metadata !DIExpression()), !dbg !8619
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8620, metadata !DIExpression()), !dbg !8621
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !8622, metadata !DIExpression()), !dbg !8623
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !8624, metadata !DIExpression()), !dbg !8625
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !8626, metadata !DIExpression()), !dbg !8627
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !8628, metadata !DIExpression()), !dbg !8629
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8630
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !8631
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !8629
  call void @llvm.dbg.declare(metadata %struct.NodeSizeWidget** %nsw, metadata !8632, metadata !DIExpression()), !dbg !8633
  %1 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8634
  %call1 = call i8* %1(i64 40, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.102, i64 0, i64 0)), !dbg !8634
  %2 = bitcast i8* %call1 to %struct.NodeSizeWidget*, !dbg !8634
  store %struct.NodeSizeWidget* %2, %struct.NodeSizeWidget** %nsw, align 8, !dbg !8633
  %3 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !8635
  %4 = bitcast %struct.NodeSizeWidget* %3 to i8*, !dbg !8635
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8636
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 5, !dbg !8637
  store i8* %4, i8** %customdata, align 8, !dbg !8638
  %6 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8639
  %cursor = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %6, i32 0, i32 16, !dbg !8640
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %cursor, i64 0, i64 0, !dbg !8639
  %7 = load float, float* %arrayidx, align 8, !dbg !8639
  %8 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !8641
  %mxstart = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %8, i32 0, i32 0, !dbg !8642
  store float %7, float* %mxstart, align 4, !dbg !8643
  %9 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8644
  %cursor2 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %9, i32 0, i32 16, !dbg !8645
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %cursor2, i64 0, i64 1, !dbg !8644
  %10 = load float, float* %arrayidx3, align 4, !dbg !8644
  %11 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !8646
  %mystart = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %11, i32 0, i32 1, !dbg !8647
  store float %10, float* %mystart, align 4, !dbg !8648
  %12 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8649
  %locx = getelementptr inbounds %struct.bNode, %struct.bNode* %12, i32 0, i32 24, !dbg !8650
  %13 = load float, float* %locx, align 8, !dbg !8650
  %14 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !8651
  %oldlocx = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %14, i32 0, i32 2, !dbg !8652
  store float %13, float* %oldlocx, align 4, !dbg !8653
  %15 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8654
  %locy = getelementptr inbounds %struct.bNode, %struct.bNode* %15, i32 0, i32 25, !dbg !8655
  %16 = load float, float* %locy, align 4, !dbg !8655
  %17 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !8656
  %oldlocy = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %17, i32 0, i32 3, !dbg !8657
  store float %16, float* %oldlocy, align 4, !dbg !8658
  %18 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8659
  %offsetx = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 29, !dbg !8660
  %19 = load float, float* %offsetx, align 4, !dbg !8660
  %20 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !8661
  %oldoffsetx = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %20, i32 0, i32 4, !dbg !8662
  store float %19, float* %oldoffsetx, align 4, !dbg !8663
  %21 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8664
  %offsety = getelementptr inbounds %struct.bNode, %struct.bNode* %21, i32 0, i32 30, !dbg !8665
  %22 = load float, float* %offsety, align 8, !dbg !8665
  %23 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !8666
  %oldoffsety = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %23, i32 0, i32 5, !dbg !8667
  store float %22, float* %oldoffsety, align 4, !dbg !8668
  %24 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8669
  %width = getelementptr inbounds %struct.bNode, %struct.bNode* %24, i32 0, i32 26, !dbg !8670
  %25 = load float, float* %width, align 8, !dbg !8670
  %26 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !8671
  %oldwidth = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %26, i32 0, i32 6, !dbg !8672
  store float %25, float* %oldwidth, align 4, !dbg !8673
  %27 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8674
  %height = getelementptr inbounds %struct.bNode, %struct.bNode* %27, i32 0, i32 27, !dbg !8675
  %28 = load float, float* %height, align 4, !dbg !8675
  %29 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !8676
  %oldheight = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %29, i32 0, i32 7, !dbg !8677
  store float %28, float* %oldheight, align 4, !dbg !8678
  %30 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8679
  %miniwidth = getelementptr inbounds %struct.bNode, %struct.bNode* %30, i32 0, i32 28, !dbg !8680
  %31 = load float, float* %miniwidth, align 8, !dbg !8680
  %32 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !8681
  %oldminiwidth = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %32, i32 0, i32 8, !dbg !8682
  store float %31, float* %oldminiwidth, align 4, !dbg !8683
  %33 = load i32, i32* %dir.addr, align 4, !dbg !8684
  %34 = load %struct.NodeSizeWidget*, %struct.NodeSizeWidget** %nsw, align 8, !dbg !8685
  %directions = getelementptr inbounds %struct.NodeSizeWidget, %struct.NodeSizeWidget* %34, i32 0, i32 9, !dbg !8686
  store i32 %33, i32* %directions, align 4, !dbg !8687
  %35 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8688
  %call4 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %35), !dbg !8689
  %36 = load i32, i32* %dir.addr, align 4, !dbg !8690
  %call5 = call i32 @node_get_resize_cursor(i32 %36), !dbg !8691
  call void @WM_cursor_modal_set(%struct.wmWindow* %call4, i32 %call5), !dbg !8692
  %37 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8693
  %38 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8694
  %call6 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %37, %struct.wmOperator* %38), !dbg !8695
  ret void, !dbg !8696
}

declare dso_local void @WM_cursor_modal_set(%struct.wmWindow*, i32) #2

declare dso_local i32 @node_get_resize_cursor(i32) #2

declare dso_local %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local void @ED_region_tag_redraw(%struct.ARegion*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @node_resize_exit(%struct.bContext* %C, %struct.wmOperator* %op, i8 zeroext %UNUSED_cancel) #0 !dbg !8697 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_cancel.addr = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8700, metadata !DIExpression()), !dbg !8701
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8702, metadata !DIExpression()), !dbg !8703
  store i8 %UNUSED_cancel, i8* %UNUSED_cancel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %UNUSED_cancel.addr, metadata !8704, metadata !DIExpression()), !dbg !8705
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8706
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !8707
  call void @WM_cursor_modal_restore(%struct.wmWindow* %call), !dbg !8708
  %1 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8709
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8710
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 5, !dbg !8711
  %3 = load i8*, i8** %customdata, align 8, !dbg !8711
  call void %1(i8* %3), !dbg !8709
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8712
  %customdata1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 5, !dbg !8713
  store i8* null, i8** %customdata1, align 8, !dbg !8714
  ret void, !dbg !8715
}

declare dso_local void @WM_cursor_modal_restore(%struct.wmWindow*) #2

declare dso_local zeroext i8 @BLI_rctf_isect(%struct.rctf*, %struct.rctf*, %struct.rctf*) #2

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #2

declare dso_local void @ED_preview_kill_jobs(%struct.bContext*) #2

declare dso_local %struct.bNode* @nodeCopyNode(%struct.bNodeTree*, %struct.bNode*) #2

declare dso_local void @id_us_plus(%struct.ID*) #2

declare dso_local void @ED_node_tag_update_id(%struct.ID*) #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @node_duplicate_reparent_recursive(%struct.bNode* %node) #0 !dbg !8716 {
entry:
  %node.addr = alloca %struct.bNode*, align 8
  %parent = alloca %struct.bNode*, align 8
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !8719, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.declare(metadata %struct.bNode** %parent, metadata !8721, metadata !DIExpression()), !dbg !8722
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8723
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 7, !dbg !8724
  %1 = load i32, i32* %flag, align 8, !dbg !8725
  %or = or i32 %1, 256, !dbg !8725
  store i32 %or, i32* %flag, align 8, !dbg !8725
  %2 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8726
  %parent1 = getelementptr inbounds %struct.bNode, %struct.bNode* %2, i32 0, i32 19, !dbg !8728
  %3 = load %struct.bNode*, %struct.bNode** %parent1, align 8, !dbg !8728
  store %struct.bNode* %3, %struct.bNode** %parent, align 8, !dbg !8729
  br label %for.cond, !dbg !8730

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.bNode*, %struct.bNode** %parent, align 8, !dbg !8731
  %tobool = icmp ne %struct.bNode* %4, null, !dbg !8733
  br i1 %tobool, label %for.body, label %for.end, !dbg !8733

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bNode*, %struct.bNode** %parent, align 8, !dbg !8734
  %flag2 = getelementptr inbounds %struct.bNode, %struct.bNode* %5, i32 0, i32 7, !dbg !8737
  %6 = load i32, i32* %flag2, align 8, !dbg !8737
  %and = and i32 %6, 1, !dbg !8738
  %tobool3 = icmp ne i32 %and, 0, !dbg !8738
  br i1 %tobool3, label %if.then, label %if.end8, !dbg !8739

if.then:                                          ; preds = %for.body
  %7 = load %struct.bNode*, %struct.bNode** %parent, align 8, !dbg !8740
  %flag4 = getelementptr inbounds %struct.bNode, %struct.bNode* %7, i32 0, i32 7, !dbg !8743
  %8 = load i32, i32* %flag4, align 8, !dbg !8743
  %and5 = and i32 %8, 256, !dbg !8744
  %tobool6 = icmp ne i32 %and5, 0, !dbg !8744
  br i1 %tobool6, label %if.end, label %if.then7, !dbg !8745

if.then7:                                         ; preds = %if.then
  %9 = load %struct.bNode*, %struct.bNode** %parent, align 8, !dbg !8746
  call void @node_duplicate_reparent_recursive(%struct.bNode* %9), !dbg !8747
  br label %if.end, !dbg !8747

if.end:                                           ; preds = %if.then7, %if.then
  br label %for.end, !dbg !8748

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !8749

for.inc:                                          ; preds = %if.end8
  %10 = load %struct.bNode*, %struct.bNode** %parent, align 8, !dbg !8750
  %parent9 = getelementptr inbounds %struct.bNode, %struct.bNode* %10, i32 0, i32 19, !dbg !8751
  %11 = load %struct.bNode*, %struct.bNode** %parent9, align 8, !dbg !8751
  store %struct.bNode* %11, %struct.bNode** %parent, align 8, !dbg !8752
  br label %for.cond, !dbg !8753, !llvm.loop !8754

for.end:                                          ; preds = %if.end, %for.cond
  %12 = load %struct.bNode*, %struct.bNode** %parent, align 8, !dbg !8756
  %tobool10 = icmp ne %struct.bNode* %12, null, !dbg !8756
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !8758

if.then11:                                        ; preds = %for.end
  %13 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8759
  %new_node = getelementptr inbounds %struct.bNode, %struct.bNode* %13, i32 0, i32 2, !dbg !8761
  %14 = load %struct.bNode*, %struct.bNode** %new_node, align 8, !dbg !8761
  call void @nodeDetachNode(%struct.bNode* %14), !dbg !8762
  %15 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8763
  %new_node12 = getelementptr inbounds %struct.bNode, %struct.bNode* %15, i32 0, i32 2, !dbg !8764
  %16 = load %struct.bNode*, %struct.bNode** %new_node12, align 8, !dbg !8764
  %17 = load %struct.bNode*, %struct.bNode** %parent, align 8, !dbg !8765
  %new_node13 = getelementptr inbounds %struct.bNode, %struct.bNode* %17, i32 0, i32 2, !dbg !8766
  %18 = load %struct.bNode*, %struct.bNode** %new_node13, align 8, !dbg !8766
  call void @nodeAttachNode(%struct.bNode* %16, %struct.bNode* %18), !dbg !8767
  br label %if.end14, !dbg !8768

if.end14:                                         ; preds = %if.then11, %for.end
  ret void, !dbg !8769
}

declare dso_local void @nodeSetSelected(%struct.bNode*, i8 zeroext) #2

declare dso_local void @nodeDetachNode(%struct.bNode*) #2

declare dso_local void @nodeAttachNode(%struct.bNode*, %struct.bNode*) #2

declare dso_local zeroext i8 @RE_ReadRenderResult(%struct.Scene*, %struct.Scene*) #2

declare dso_local void @ntreeCompositTagRender(%struct.Scene*) #2

declare dso_local %struct.Render* @RE_NewRender(i8*) #2

declare dso_local void @WM_cursor_wait(i8 zeroext) #2

declare dso_local void @RE_MergeFullSample(%struct.Render*, %struct.Main*, %struct.Scene*, %struct.bNodeTree*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @node_flag_toggle_exec(%struct.SpaceNode* %snode, i32 %toggle_flag) #0 !dbg !8770 {
entry:
  %snode.addr = alloca %struct.SpaceNode*, align 8
  %toggle_flag.addr = alloca i32, align 4
  %node = alloca %struct.bNode*, align 8
  %tot_eq = alloca i32, align 4
  %tot_neq = alloca i32, align 4
  store %struct.SpaceNode* %snode, %struct.SpaceNode** %snode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode.addr, metadata !8773, metadata !DIExpression()), !dbg !8774
  store i32 %toggle_flag, i32* %toggle_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %toggle_flag.addr, metadata !8775, metadata !DIExpression()), !dbg !8776
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !8777, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.declare(metadata i32* %tot_eq, metadata !8779, metadata !DIExpression()), !dbg !8780
  store i32 0, i32* %tot_eq, align 4, !dbg !8780
  call void @llvm.dbg.declare(metadata i32* %tot_neq, metadata !8781, metadata !DIExpression()), !dbg !8782
  store i32 0, i32* %tot_neq, align 4, !dbg !8782
  %0 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !8783
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %0, i32 0, i32 19, !dbg !8785
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !8785
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 7, !dbg !8786
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !8787
  %2 = load i8*, i8** %first, align 8, !dbg !8787
  %3 = bitcast i8* %2 to %struct.bNode*, !dbg !8783
  store %struct.bNode* %3, %struct.bNode** %node, align 8, !dbg !8788
  br label %for.cond, !dbg !8789

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8790
  %tobool = icmp ne %struct.bNode* %4, null, !dbg !8792
  br i1 %tobool, label %for.body, label %for.end, !dbg !8792

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8793
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %5, i32 0, i32 7, !dbg !8796
  %6 = load i32, i32* %flag, align 8, !dbg !8796
  %and = and i32 %6, 1, !dbg !8797
  %tobool1 = icmp ne i32 %and, 0, !dbg !8797
  br i1 %tobool1, label %if.then, label %if.end22, !dbg !8798

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %toggle_flag.addr, align 4, !dbg !8799
  %cmp = icmp eq i32 %7, 4, !dbg !8802
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8803

land.lhs.true:                                    ; preds = %if.then
  %8 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8804
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %8, i32 0, i32 4, !dbg !8805
  %9 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !8805
  %flag2 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %9, i32 0, i32 15, !dbg !8806
  %10 = load i16, i16* %flag2, align 2, !dbg !8806
  %conv = sext i16 %10 to i32, !dbg !8804
  %and3 = and i32 %conv, 4, !dbg !8807
  %cmp4 = icmp eq i32 %and3, 0, !dbg !8808
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !8809

if.then6:                                         ; preds = %land.lhs.true
  br label %for.inc, !dbg !8810

if.end:                                           ; preds = %land.lhs.true, %if.then
  %11 = load i32, i32* %toggle_flag.addr, align 4, !dbg !8811
  %cmp7 = icmp eq i32 %11, 2, !dbg !8813
  br i1 %cmp7, label %land.lhs.true9, label %if.end15, !dbg !8814

land.lhs.true9:                                   ; preds = %if.end
  %12 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8815
  %typeinfo10 = getelementptr inbounds %struct.bNode, %struct.bNode* %12, i32 0, i32 4, !dbg !8816
  %13 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo10, align 8, !dbg !8816
  %draw_buttons = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %13, i32 0, i32 22, !dbg !8817
  %14 = load void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)** %draw_buttons, align 8, !dbg !8817
  %tobool11 = icmp ne void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)* %14, null, !dbg !8815
  br i1 %tobool11, label %if.end15, label %lor.lhs.false, !dbg !8818

lor.lhs.false:                                    ; preds = %land.lhs.true9
  %15 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8819
  %typeinfo12 = getelementptr inbounds %struct.bNode, %struct.bNode* %15, i32 0, i32 4, !dbg !8820
  %16 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo12, align 8, !dbg !8820
  %draw_buttons_ex = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %16, i32 0, i32 23, !dbg !8821
  %17 = load void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)** %draw_buttons_ex, align 8, !dbg !8821
  %tobool13 = icmp ne void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)* %17, null, !dbg !8819
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !8822

if.then14:                                        ; preds = %lor.lhs.false
  br label %for.inc, !dbg !8823

if.end15:                                         ; preds = %lor.lhs.false, %land.lhs.true9, %if.end
  %18 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8824
  %flag16 = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 7, !dbg !8826
  %19 = load i32, i32* %flag16, align 8, !dbg !8826
  %20 = load i32, i32* %toggle_flag.addr, align 4, !dbg !8827
  %and17 = and i32 %19, %20, !dbg !8828
  %tobool18 = icmp ne i32 %and17, 0, !dbg !8828
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !8829

if.then19:                                        ; preds = %if.end15
  %21 = load i32, i32* %tot_eq, align 4, !dbg !8830
  %inc = add nsw i32 %21, 1, !dbg !8830
  store i32 %inc, i32* %tot_eq, align 4, !dbg !8830
  br label %if.end21, !dbg !8831

if.else:                                          ; preds = %if.end15
  %22 = load i32, i32* %tot_neq, align 4, !dbg !8832
  %inc20 = add nsw i32 %22, 1, !dbg !8832
  store i32 %inc20, i32* %tot_neq, align 4, !dbg !8832
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then19
  br label %if.end22, !dbg !8833

if.end22:                                         ; preds = %if.end21, %for.body
  br label %for.inc, !dbg !8834

for.inc:                                          ; preds = %if.end22, %if.then14, %if.then6
  %23 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8835
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %23, i32 0, i32 0, !dbg !8836
  %24 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !8836
  store %struct.bNode* %24, %struct.bNode** %node, align 8, !dbg !8837
  br label %for.cond, !dbg !8838, !llvm.loop !8839

for.end:                                          ; preds = %for.cond
  %25 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !8841
  %edittree23 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %25, i32 0, i32 19, !dbg !8843
  %26 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree23, align 8, !dbg !8843
  %nodes24 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %26, i32 0, i32 7, !dbg !8844
  %first25 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes24, i32 0, i32 0, !dbg !8845
  %27 = load i8*, i8** %first25, align 8, !dbg !8845
  %28 = bitcast i8* %27 to %struct.bNode*, !dbg !8841
  store %struct.bNode* %28, %struct.bNode** %node, align 8, !dbg !8846
  br label %for.cond26, !dbg !8847

for.cond26:                                       ; preds = %for.inc69, %for.end
  %29 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8848
  %tobool27 = icmp ne %struct.bNode* %29, null, !dbg !8850
  br i1 %tobool27, label %for.body28, label %for.end71, !dbg !8850

for.body28:                                       ; preds = %for.cond26
  %30 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8851
  %flag29 = getelementptr inbounds %struct.bNode, %struct.bNode* %30, i32 0, i32 7, !dbg !8854
  %31 = load i32, i32* %flag29, align 8, !dbg !8854
  %and30 = and i32 %31, 1, !dbg !8855
  %tobool31 = icmp ne i32 %and30, 0, !dbg !8855
  br i1 %tobool31, label %if.then32, label %if.end68, !dbg !8856

if.then32:                                        ; preds = %for.body28
  %32 = load i32, i32* %toggle_flag.addr, align 4, !dbg !8857
  %cmp33 = icmp eq i32 %32, 4, !dbg !8860
  br i1 %cmp33, label %land.lhs.true35, label %if.end43, !dbg !8861

land.lhs.true35:                                  ; preds = %if.then32
  %33 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8862
  %typeinfo36 = getelementptr inbounds %struct.bNode, %struct.bNode* %33, i32 0, i32 4, !dbg !8863
  %34 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo36, align 8, !dbg !8863
  %flag37 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %34, i32 0, i32 15, !dbg !8864
  %35 = load i16, i16* %flag37, align 2, !dbg !8864
  %conv38 = sext i16 %35 to i32, !dbg !8862
  %and39 = and i32 %conv38, 4, !dbg !8865
  %cmp40 = icmp eq i32 %and39, 0, !dbg !8866
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !8867

if.then42:                                        ; preds = %land.lhs.true35
  br label %for.inc69, !dbg !8868

if.end43:                                         ; preds = %land.lhs.true35, %if.then32
  %36 = load i32, i32* %toggle_flag.addr, align 4, !dbg !8869
  %cmp44 = icmp eq i32 %36, 2, !dbg !8871
  br i1 %cmp44, label %land.lhs.true46, label %if.end55, !dbg !8872

land.lhs.true46:                                  ; preds = %if.end43
  %37 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8873
  %typeinfo47 = getelementptr inbounds %struct.bNode, %struct.bNode* %37, i32 0, i32 4, !dbg !8874
  %38 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo47, align 8, !dbg !8874
  %draw_buttons48 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %38, i32 0, i32 22, !dbg !8875
  %39 = load void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)** %draw_buttons48, align 8, !dbg !8875
  %tobool49 = icmp ne void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)* %39, null, !dbg !8873
  br i1 %tobool49, label %if.end55, label %lor.lhs.false50, !dbg !8876

lor.lhs.false50:                                  ; preds = %land.lhs.true46
  %40 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8877
  %typeinfo51 = getelementptr inbounds %struct.bNode, %struct.bNode* %40, i32 0, i32 4, !dbg !8878
  %41 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo51, align 8, !dbg !8878
  %draw_buttons_ex52 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %41, i32 0, i32 23, !dbg !8879
  %42 = load void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)** %draw_buttons_ex52, align 8, !dbg !8879
  %tobool53 = icmp ne void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)* %42, null, !dbg !8877
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !8880

if.then54:                                        ; preds = %lor.lhs.false50
  br label %for.inc69, !dbg !8881

if.end55:                                         ; preds = %lor.lhs.false50, %land.lhs.true46, %if.end43
  %43 = load i32, i32* %tot_eq, align 4, !dbg !8882
  %tobool56 = icmp ne i32 %43, 0, !dbg !8882
  br i1 %tobool56, label %land.lhs.true57, label %lor.lhs.false59, !dbg !8884

land.lhs.true57:                                  ; preds = %if.end55
  %44 = load i32, i32* %tot_neq, align 4, !dbg !8885
  %tobool58 = icmp ne i32 %44, 0, !dbg !8885
  br i1 %tobool58, label %if.then62, label %lor.lhs.false59, !dbg !8886

lor.lhs.false59:                                  ; preds = %land.lhs.true57, %if.end55
  %45 = load i32, i32* %tot_eq, align 4, !dbg !8887
  %cmp60 = icmp eq i32 %45, 0, !dbg !8888
  br i1 %cmp60, label %if.then62, label %if.else64, !dbg !8889

if.then62:                                        ; preds = %lor.lhs.false59, %land.lhs.true57
  %46 = load i32, i32* %toggle_flag.addr, align 4, !dbg !8890
  %47 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8891
  %flag63 = getelementptr inbounds %struct.bNode, %struct.bNode* %47, i32 0, i32 7, !dbg !8892
  %48 = load i32, i32* %flag63, align 8, !dbg !8893
  %or = or i32 %48, %46, !dbg !8893
  store i32 %or, i32* %flag63, align 8, !dbg !8893
  br label %if.end67, !dbg !8891

if.else64:                                        ; preds = %lor.lhs.false59
  %49 = load i32, i32* %toggle_flag.addr, align 4, !dbg !8894
  %neg = xor i32 %49, -1, !dbg !8895
  %50 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8896
  %flag65 = getelementptr inbounds %struct.bNode, %struct.bNode* %50, i32 0, i32 7, !dbg !8897
  %51 = load i32, i32* %flag65, align 8, !dbg !8898
  %and66 = and i32 %51, %neg, !dbg !8898
  store i32 %and66, i32* %flag65, align 8, !dbg !8898
  br label %if.end67

if.end67:                                         ; preds = %if.else64, %if.then62
  br label %if.end68, !dbg !8899

if.end68:                                         ; preds = %if.end67, %for.body28
  br label %for.inc69, !dbg !8900

for.inc69:                                        ; preds = %if.end68, %if.then54, %if.then42
  %52 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8901
  %next70 = getelementptr inbounds %struct.bNode, %struct.bNode* %52, i32 0, i32 0, !dbg !8902
  %53 = load %struct.bNode*, %struct.bNode** %next70, align 8, !dbg !8902
  store %struct.bNode* %53, %struct.bNode** %node, align 8, !dbg !8903
  br label %for.cond26, !dbg !8904, !llvm.loop !8905

for.end71:                                        ; preds = %for.cond26
  ret void, !dbg !8907
}

declare dso_local void @nodeFreeNode(%struct.bNodeTree*, %struct.bNode*) #2

declare dso_local void @nodeInternalRelink(%struct.bNodeTree*, %struct.bNode*) #2

declare dso_local void @CTX_data_pointer_get(%struct.PointerRNA* sret, %struct.bContext*, i8*) #2

declare dso_local void @RNA_string_get(%struct.PointerRNA*, i8*, i8*) #2

declare dso_local %struct.bNodeSocket* @ntreeCompositOutputFileAddSocket(%struct.bNodeTree*, %struct.bNode*, i8*, %struct.ImageFormatData*) #2

declare dso_local i32 @ntreeCompositOutputFileRemoveActiveSocket(%struct.bNodeTree*, %struct.bNode*) #2

declare dso_local i32 @RNA_enum_get(%struct.PointerRNA*, i8*) #2

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

declare dso_local void @BLI_insertlinkbefore(%struct.ListBase*, i8*, i8*) #2

declare dso_local void @BLI_insertlinkafter(%struct.ListBase*, i8*, i8*) #2

declare dso_local void @ED_node_sort(%struct.bNodeTree*) #2

declare dso_local void @BKE_node_clipboard_clear() #2

declare dso_local void @BKE_node_clipboard_init(%struct.bNodeTree*) #2

declare dso_local void @BKE_node_clipboard_add_node(%struct.bNode*) #2

declare dso_local void @BKE_node_clipboard_add_link(%struct.bNodeLink*) #2

declare dso_local zeroext i8 @BKE_node_clipboard_validate() #2

declare dso_local %struct.ListBase* @BKE_node_clipboard_get_nodes() #2

declare dso_local %struct.ListBase* @BKE_node_clipboard_get_links() #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !8908 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !8914, metadata !DIExpression()), !dbg !8915
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8916
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !8917
  %1 = load i8*, i8** %first, align 8, !dbg !8917
  %cmp = icmp eq i8* %1, null, !dbg !8918
  %conv = zext i1 %cmp to i32, !dbg !8918
  %conv1 = trunc i32 %conv to i8, !dbg !8919
  ret i8 %conv1, !dbg !8920
}

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

declare dso_local i32 @BKE_node_clipboard_get_type() #2

declare dso_local void @BKE_reportf(%struct.ReportList*, i32, i8*, ...) #2

declare dso_local void @node_deselect_all(%struct.SpaceNode*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v2(float* %r) #0 !dbg !8921 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8924, metadata !DIExpression()), !dbg !8925
  %0 = load float*, float** %r.addr, align 8, !dbg !8926
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8926
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !8927
  %1 = load float*, float** %r.addr, align 8, !dbg !8928
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !8928
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !8929
  ret void, !dbg !8930
}

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_cent_x(%struct.rctf* %rct) #0 !dbg !8931 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !8937, metadata !DIExpression()), !dbg !8938
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !8939
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 0, !dbg !8940
  %1 = load float, float* %xmin, align 4, !dbg !8940
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !8941
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 1, !dbg !8942
  %3 = load float, float* %xmax, align 4, !dbg !8942
  %add = fadd float %1, %3, !dbg !8943
  %div = fdiv float %add, 2.000000e+00, !dbg !8944
  ret float %div, !dbg !8945
}

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_cent_y(%struct.rctf* %rct) #0 !dbg !8946 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !8947, metadata !DIExpression()), !dbg !8948
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !8949
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 2, !dbg !8950
  %1 = load float, float* %ymin, align 4, !dbg !8950
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !8951
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 3, !dbg !8952
  %3 = load float, float* %ymax, align 4, !dbg !8952
  %add = fadd float %1, %3, !dbg !8953
  %div = fdiv float %add, 2.000000e+00, !dbg !8954
  ret float %div, !dbg !8955
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v2_fl(float* %r, float %f) #0 !dbg !8956 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8959, metadata !DIExpression()), !dbg !8960
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !8961, metadata !DIExpression()), !dbg !8962
  %0 = load float, float* %f.addr, align 4, !dbg !8963
  %1 = load float*, float** %r.addr, align 8, !dbg !8964
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !8964
  %2 = load float, float* %arrayidx, align 4, !dbg !8965
  %mul = fmul float %2, %0, !dbg !8965
  store float %mul, float* %arrayidx, align 4, !dbg !8965
  %3 = load float, float* %f.addr, align 4, !dbg !8966
  %4 = load float*, float** %r.addr, align 8, !dbg !8967
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !8967
  %5 = load float, float* %arrayidx1, align 4, !dbg !8968
  %mul2 = fmul float %5, %3, !dbg !8968
  store float %mul2, float* %arrayidx1, align 4, !dbg !8968
  ret void, !dbg !8969
}

declare dso_local void @RNA_id_pointer_create(%struct.ID*, %struct.PointerRNA*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.bNodeSocket* @ntree_get_active_interface_socket(%struct.ListBase* %lb) #0 !dbg !8970 {
entry:
  %retval = alloca %struct.bNodeSocket*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !8973, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !8975, metadata !DIExpression()), !dbg !8976
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8977
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !8979
  %1 = load i8*, i8** %first, align 8, !dbg !8979
  %2 = bitcast i8* %1 to %struct.bNodeSocket*, !dbg !8977
  store %struct.bNodeSocket* %2, %struct.bNodeSocket** %sock, align 8, !dbg !8980
  br label %for.cond, !dbg !8981

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !8982
  %tobool = icmp ne %struct.bNodeSocket* %3, null, !dbg !8984
  br i1 %tobool, label %for.body, label %for.end, !dbg !8984

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !8985
  %flag = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %4, i32 0, i32 8, !dbg !8987
  %5 = load i16, i16* %flag, align 2, !dbg !8987
  %conv = sext i16 %5 to i32, !dbg !8985
  %and = and i32 %conv, 1, !dbg !8988
  %tobool1 = icmp ne i32 %and, 0, !dbg !8988
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8989

if.then:                                          ; preds = %for.body
  %6 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !8990
  store %struct.bNodeSocket* %6, %struct.bNodeSocket** %retval, align 8, !dbg !8991
  br label %return, !dbg !8991

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8992

for.inc:                                          ; preds = %if.end
  %7 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !8993
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %7, i32 0, i32 0, !dbg !8994
  %8 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !8994
  store %struct.bNodeSocket* %8, %struct.bNodeSocket** %sock, align 8, !dbg !8995
  br label %for.cond, !dbg !8996, !llvm.loop !8997

for.end:                                          ; preds = %for.cond
  store %struct.bNodeSocket* null, %struct.bNodeSocket** %retval, align 8, !dbg !8999
  br label %return, !dbg !8999

return:                                           ; preds = %for.end, %if.then
  %9 = load %struct.bNodeSocket*, %struct.bNodeSocket** %retval, align 8, !dbg !9000
  ret %struct.bNodeSocket* %9, !dbg !9000
}

declare dso_local %struct.bNodeSocket* @ntreeInsertSocketInterface(%struct.bNodeTree*, i32, i8*, %struct.bNodeSocket*, i8*) #2

declare dso_local %struct.bNodeSocket* @ntreeAddSocketInterface(%struct.bNodeTree*, i32, i8*, i8*) #2

declare dso_local void @ntreeRemoveSocketInterface(%struct.bNodeTree*, %struct.bNodeSocket*) #2

declare dso_local void @BLI_addhead(%struct.ListBase*, i8*) #2

declare dso_local void @CTX_data_pointer_get_type(%struct.PointerRNA* sret, %struct.bContext*, i8*, %struct.StructRNA*) #2

declare dso_local %struct.RenderEngineType* @RE_engines_find(i8*) #2

declare dso_local %struct.RenderEngine* @RE_engine_create(%struct.RenderEngineType*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @node_shader_script_update_text_recursive(%struct.RenderEngine* %engine, %struct.RenderEngineType* %type, %struct.bNodeTree* %ntree, %struct.Text* %text) #0 !dbg !9001 {
entry:
  %engine.addr = alloca %struct.RenderEngine*, align 8
  %type.addr = alloca %struct.RenderEngineType*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %text.addr = alloca %struct.Text*, align 8
  %found = alloca i8, align 1
  %node = alloca %struct.bNode*, align 8
  %ngroup = alloca %struct.bNodeTree*, align 8
  store %struct.RenderEngine* %engine, %struct.RenderEngine** %engine.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderEngine** %engine.addr, metadata !9004, metadata !DIExpression()), !dbg !9005
  store %struct.RenderEngineType* %type, %struct.RenderEngineType** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderEngineType** %type.addr, metadata !9006, metadata !DIExpression()), !dbg !9007
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !9008, metadata !DIExpression()), !dbg !9009
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !9010, metadata !DIExpression()), !dbg !9011
  call void @llvm.dbg.declare(metadata i8* %found, metadata !9012, metadata !DIExpression()), !dbg !9013
  store i8 0, i8* %found, align 1, !dbg !9013
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !9014, metadata !DIExpression()), !dbg !9015
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9016
  %done = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 15, !dbg !9017
  store i16 1, i16* %done, align 2, !dbg !9018
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9019
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 7, !dbg !9021
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !9022
  %2 = load i8*, i8** %first, align 8, !dbg !9022
  %3 = bitcast i8* %2 to %struct.bNode*, !dbg !9019
  store %struct.bNode* %3, %struct.bNode** %node, align 8, !dbg !9023
  br label %for.cond, !dbg !9024

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9025
  %tobool = icmp ne %struct.bNode* %4, null, !dbg !9027
  br i1 %tobool, label %for.body, label %for.end, !dbg !9027

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9028
  %type1 = getelementptr inbounds %struct.bNode, %struct.bNode* %5, i32 0, i32 8, !dbg !9031
  %6 = load i16, i16* %type1, align 4, !dbg !9031
  %conv = sext i16 %6 to i32, !dbg !9028
  %cmp = icmp eq i32 %conv, 2, !dbg !9032
  br i1 %cmp, label %if.then, label %if.else, !dbg !9033

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ngroup, metadata !9034, metadata !DIExpression()), !dbg !9036
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9037
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %7, i32 0, i32 20, !dbg !9038
  %8 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !9038
  %9 = bitcast %struct.ID* %8 to %struct.bNodeTree*, !dbg !9039
  store %struct.bNodeTree* %9, %struct.bNodeTree** %ngroup, align 8, !dbg !9036
  %10 = load %struct.bNodeTree*, %struct.bNodeTree** %ngroup, align 8, !dbg !9040
  %tobool3 = icmp ne %struct.bNodeTree* %10, null, !dbg !9040
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !9042

land.lhs.true:                                    ; preds = %if.then
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %ngroup, align 8, !dbg !9043
  %done4 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %11, i32 0, i32 15, !dbg !9044
  %12 = load i16, i16* %done4, align 2, !dbg !9044
  %tobool5 = icmp ne i16 %12, 0, !dbg !9043
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !9045

if.then6:                                         ; preds = %land.lhs.true
  %13 = load %struct.RenderEngine*, %struct.RenderEngine** %engine.addr, align 8, !dbg !9046
  %14 = load %struct.RenderEngineType*, %struct.RenderEngineType** %type.addr, align 8, !dbg !9047
  %15 = load %struct.bNodeTree*, %struct.bNodeTree** %ngroup, align 8, !dbg !9048
  %16 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9049
  %call = call zeroext i8 @node_shader_script_update_text_recursive(%struct.RenderEngine* %13, %struct.RenderEngineType* %14, %struct.bNodeTree* %15, %struct.Text* %16), !dbg !9050
  %conv7 = zext i8 %call to i32, !dbg !9050
  %17 = load i8, i8* %found, align 1, !dbg !9051
  %conv8 = zext i8 %17 to i32, !dbg !9051
  %or = or i32 %conv8, %conv7, !dbg !9051
  %conv9 = trunc i32 %or to i8, !dbg !9051
  store i8 %conv9, i8* %found, align 1, !dbg !9051
  br label %if.end, !dbg !9052

if.end:                                           ; preds = %if.then6, %land.lhs.true, %if.then
  br label %if.end21, !dbg !9053

if.else:                                          ; preds = %for.body
  %18 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9054
  %type10 = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 8, !dbg !9056
  %19 = load i16, i16* %type10, align 4, !dbg !9056
  %conv11 = sext i16 %19 to i32, !dbg !9054
  %cmp12 = icmp eq i32 %conv11, 171, !dbg !9057
  br i1 %cmp12, label %land.lhs.true14, label %if.end20, !dbg !9058

land.lhs.true14:                                  ; preds = %if.else
  %20 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9059
  %id15 = getelementptr inbounds %struct.bNode, %struct.bNode* %20, i32 0, i32 20, !dbg !9060
  %21 = load %struct.ID*, %struct.ID** %id15, align 8, !dbg !9060
  %22 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !9061
  %id16 = getelementptr inbounds %struct.Text, %struct.Text* %22, i32 0, i32 0, !dbg !9062
  %cmp17 = icmp eq %struct.ID* %21, %id16, !dbg !9063
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !9064

if.then19:                                        ; preds = %land.lhs.true14
  %23 = load %struct.RenderEngineType*, %struct.RenderEngineType** %type.addr, align 8, !dbg !9065
  %update_script_node = getelementptr inbounds %struct.RenderEngineType, %struct.RenderEngineType* %23, i32 0, i32 10, !dbg !9067
  %24 = load void (%struct.RenderEngine*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.RenderEngine*, %struct.bNodeTree*, %struct.bNode*)** %update_script_node, align 8, !dbg !9067
  %25 = load %struct.RenderEngine*, %struct.RenderEngine** %engine.addr, align 8, !dbg !9068
  %26 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9069
  %27 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9070
  call void %24(%struct.RenderEngine* %25, %struct.bNodeTree* %26, %struct.bNode* %27), !dbg !9065
  store i8 1, i8* %found, align 1, !dbg !9071
  br label %if.end20, !dbg !9072

if.end20:                                         ; preds = %if.then19, %land.lhs.true14, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end
  br label %for.inc, !dbg !9073

for.inc:                                          ; preds = %if.end21
  %28 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9074
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %28, i32 0, i32 0, !dbg !9075
  %29 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !9075
  store %struct.bNode* %29, %struct.bNode** %node, align 8, !dbg !9076
  br label %for.cond, !dbg !9077, !llvm.loop !9078

for.end:                                          ; preds = %for.cond
  %30 = load i8, i8* %found, align 1, !dbg !9080
  ret i8 %30, !dbg !9081
}

declare dso_local void @RE_engine_free(%struct.RenderEngine*) #2

declare dso_local %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image*, %struct.ImageUser*, i8**) #2

declare dso_local void @WM_operator_properties_border_to_rcti(%struct.wmOperator*, %struct.rcti*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @viewer_border_corner_to_backdrop(%struct.SpaceNode* %snode, %struct.ARegion* %ar, i32 %x, i32 %y, i32 %backdrop_width, i32 %backdrop_height, float* %fx, float* %fy) #0 !dbg !9082 {
entry:
  %snode.addr = alloca %struct.SpaceNode*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %backdrop_width.addr = alloca i32, align 4
  %backdrop_height.addr = alloca i32, align 4
  %fx.addr = alloca float*, align 8
  %fy.addr = alloca float*, align 8
  %bufx = alloca float, align 4
  %bufy = alloca float, align 4
  store %struct.SpaceNode* %snode, %struct.SpaceNode** %snode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode.addr, metadata !9085, metadata !DIExpression()), !dbg !9086
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !9087, metadata !DIExpression()), !dbg !9088
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !9089, metadata !DIExpression()), !dbg !9090
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !9091, metadata !DIExpression()), !dbg !9092
  store i32 %backdrop_width, i32* %backdrop_width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %backdrop_width.addr, metadata !9093, metadata !DIExpression()), !dbg !9094
  store i32 %backdrop_height, i32* %backdrop_height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %backdrop_height.addr, metadata !9095, metadata !DIExpression()), !dbg !9096
  store float* %fx, float** %fx.addr, align 8
  call void @llvm.dbg.declare(metadata float** %fx.addr, metadata !9097, metadata !DIExpression()), !dbg !9098
  store float* %fy, float** %fy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %fy.addr, metadata !9099, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.declare(metadata float* %bufx, metadata !9101, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.declare(metadata float* %bufy, metadata !9103, metadata !DIExpression()), !dbg !9104
  %0 = load i32, i32* %backdrop_width.addr, align 4, !dbg !9105
  %conv = sitofp i32 %0 to float, !dbg !9105
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !9106
  %zoom = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %1, i32 0, i32 15, !dbg !9107
  %2 = load float, float* %zoom, align 4, !dbg !9107
  %mul = fmul float %conv, %2, !dbg !9108
  store float %mul, float* %bufx, align 4, !dbg !9109
  %3 = load i32, i32* %backdrop_height.addr, align 4, !dbg !9110
  %conv1 = sitofp i32 %3 to float, !dbg !9110
  %4 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !9111
  %zoom2 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %4, i32 0, i32 15, !dbg !9112
  %5 = load float, float* %zoom2, align 4, !dbg !9112
  %mul3 = fmul float %conv1, %5, !dbg !9113
  store float %mul3, float* %bufy, align 4, !dbg !9114
  %6 = load float, float* %bufx, align 4, !dbg !9115
  %cmp = fcmp ogt float %6, 0.000000e+00, !dbg !9116
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9115

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %x.addr, align 4, !dbg !9117
  %conv5 = sitofp i32 %7 to float, !dbg !9118
  %8 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !9119
  %winx = getelementptr inbounds %struct.ARegion, %struct.ARegion* %8, i32 0, i32 5, !dbg !9120
  %9 = load i16, i16* %winx, align 8, !dbg !9120
  %conv6 = sext i16 %9 to i32, !dbg !9119
  %conv7 = sitofp i32 %conv6 to float, !dbg !9119
  %mul8 = fmul float 5.000000e-01, %conv7, !dbg !9121
  %sub = fsub float %conv5, %mul8, !dbg !9122
  %10 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !9123
  %xof = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %10, i32 0, i32 13, !dbg !9124
  %11 = load float, float* %xof, align 4, !dbg !9124
  %sub9 = fsub float %sub, %11, !dbg !9125
  %12 = load float, float* %bufx, align 4, !dbg !9126
  %div = fdiv float %sub9, %12, !dbg !9127
  %add = fadd float %div, 5.000000e-01, !dbg !9128
  br label %cond.end, !dbg !9115

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9115

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %add, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !9115
  %13 = load float*, float** %fx.addr, align 8, !dbg !9129
  store float %cond, float* %13, align 4, !dbg !9130
  %14 = load float, float* %bufy, align 4, !dbg !9131
  %cmp10 = fcmp ogt float %14, 0.000000e+00, !dbg !9132
  br i1 %cmp10, label %cond.true12, label %cond.false21, !dbg !9131

cond.true12:                                      ; preds = %cond.end
  %15 = load i32, i32* %y.addr, align 4, !dbg !9133
  %conv13 = sitofp i32 %15 to float, !dbg !9134
  %16 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !9135
  %winy = getelementptr inbounds %struct.ARegion, %struct.ARegion* %16, i32 0, i32 6, !dbg !9136
  %17 = load i16, i16* %winy, align 2, !dbg !9136
  %conv14 = sext i16 %17 to i32, !dbg !9135
  %conv15 = sitofp i32 %conv14 to float, !dbg !9135
  %mul16 = fmul float 5.000000e-01, %conv15, !dbg !9137
  %sub17 = fsub float %conv13, %mul16, !dbg !9138
  %18 = load %struct.SpaceNode*, %struct.SpaceNode** %snode.addr, align 8, !dbg !9139
  %yof = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %18, i32 0, i32 14, !dbg !9140
  %19 = load float, float* %yof, align 8, !dbg !9140
  %sub18 = fsub float %sub17, %19, !dbg !9141
  %20 = load float, float* %bufy, align 4, !dbg !9142
  %div19 = fdiv float %sub18, %20, !dbg !9143
  %add20 = fadd float %div19, 5.000000e-01, !dbg !9144
  br label %cond.end22, !dbg !9131

cond.false21:                                     ; preds = %cond.end
  br label %cond.end22, !dbg !9131

cond.end22:                                       ; preds = %cond.false21, %cond.true12
  %cond23 = phi float [ %add20, %cond.true12 ], [ 0.000000e+00, %cond.false21 ], !dbg !9131
  %21 = load float*, float** %fy.addr, align 8, !dbg !9145
  store float %cond23, float* %21, align 4, !dbg !9146
  ret void, !dbg !9147
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !9148 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !9149, metadata !DIExpression()), !dbg !9150
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !9151, metadata !DIExpression()), !dbg !9152
  %0 = load float, float* %a.addr, align 4, !dbg !9153
  %1 = load float, float* %b.addr, align 4, !dbg !9154
  %cmp = fcmp ogt float %0, %1, !dbg !9155
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9156

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !9157
  br label %cond.end, !dbg !9156

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !9158
  br label %cond.end, !dbg !9156

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !9156
  ret float %cond, !dbg !9159
}

declare dso_local void @BKE_image_release_ibuf(%struct.Image*, %struct.ImBuf*, i8*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind readonly }

!llvm.dbg.cu = !{!2655}
!llvm.module.flags = !{!2884, !2885, !2886}
!llvm.ident = !{!2887}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "direction_items", scope: !2, file: !3, line: 1851, type: !2874, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "NODE_OT_output_file_move_active_socket", scope: !3, file: !3, line: 1849, type: !4, scopeLine: 1850, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!3 = !DIFile(filename: "blender/source/blender/editors/space_node/node_edit.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{null, !6}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !8, line: 568, baseType: !9)
!8 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !8, line: 508, size: 1536, elements: !10)
!10 = !{!11, !15, !16, !17, !18, !2606, !2610, !2616, !2620, !2621, !2625, !2626, !2627, !2628, !2632, !2633, !2648, !2649, !2653, !2654}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9, file: !8, line: 509, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14)
!14 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !9, file: !8, line: 510, baseType: !12, size: 64, offset: 64)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !9, file: !8, line: 511, baseType: !12, size: 64, offset: 128)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !9, file: !8, line: 512, baseType: !12, size: 64, offset: 192)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !9, file: !8, line: 518, baseType: !19, size: 64, offset: 256)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!20 = !DISubroutineType(types: !21)
!21 = !{!22, !23, !26}
!22 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!24 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !25, line: 44, flags: DIFlagFwdDecl)
!25 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!27 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !28, line: 328, size: 1344, elements: !29)
!28 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!29 = !{!30, !31, !32, !36, !68, !70, !71, !72, !85, !2601, !2602, !2603, !2604, !2605}
!30 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !27, file: !28, line: 329, baseType: !26, size: 64)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !27, file: !28, line: 329, baseType: !26, size: 64, offset: 64)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !27, file: !28, line: 332, baseType: !33, size: 512, offset: 128)
!33 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 512, elements: !34)
!34 = !{!35}
!35 = !DISubrange(count: 64)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !27, file: !28, line: 333, baseType: !37, size: 64, offset: 640)
!37 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !39, line: 75, baseType: !40)
!39 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!40 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !39, line: 62, size: 1024, elements: !41)
!41 = !{!42, !44, !45, !46, !47, !49, !50, !51, !66, !67}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !40, file: !39, line: 63, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !40, file: !39, line: 63, baseType: !43, size: 64, offset: 64)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !40, file: !39, line: 64, baseType: !14, size: 8, offset: 128)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !40, file: !39, line: 64, baseType: !14, size: 8, offset: 136)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !40, file: !39, line: 65, baseType: !48, size: 16, offset: 144)
!48 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !40, file: !39, line: 66, baseType: !33, size: 512, offset: 160)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !40, file: !39, line: 67, baseType: !22, size: 32, offset: 672)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !40, file: !39, line: 69, baseType: !52, size: 256, offset: 704)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !39, line: 60, baseType: !53)
!53 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !39, line: 48, size: 256, elements: !54)
!54 = !{!55, !57, !64, !65}
!55 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !53, file: !39, line: 49, baseType: !56, size: 64)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !53, file: !39, line: 58, baseType: !58, size: 128, offset: 64)
!58 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !59, line: 71, baseType: !60)
!59 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!60 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !59, line: 69, size: 128, elements: !61)
!61 = !{!62, !63}
!62 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !60, file: !59, line: 70, baseType: !56, size: 64)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !60, file: !59, line: 70, baseType: !56, size: 64, offset: 64)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !53, file: !39, line: 59, baseType: !22, size: 32, offset: 192)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !53, file: !39, line: 59, baseType: !22, size: 32, offset: 224)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !40, file: !39, line: 70, baseType: !22, size: 32, offset: 960)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !40, file: !39, line: 74, baseType: !22, size: 32, offset: 992)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !27, file: !28, line: 336, baseType: !69, size: 64, offset: 704)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !27, file: !28, line: 337, baseType: !56, size: 64, offset: 768)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !27, file: !28, line: 338, baseType: !56, size: 64, offset: 832)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !27, file: !28, line: 340, baseType: !73, size: 64, offset: 896)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !25, line: 55, size: 192, elements: !75)
!75 = !{!76, !80, !84}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !74, file: !25, line: 58, baseType: !77, size: 64)
!77 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !74, file: !25, line: 56, size: 64, elements: !78)
!78 = !{!79}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !77, file: !25, line: 57, baseType: !56, size: 64)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !74, file: !25, line: 60, baseType: !81, size: 64, offset: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!82 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !83, line: 335, flags: DIFlagFwdDecl)
!83 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!84 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !74, file: !25, line: 61, baseType: !56, size: 64, offset: 128)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !27, file: !28, line: 341, baseType: !86, size: 64, offset: 960)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64)
!87 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !28, line: 106, size: 320, elements: !88)
!88 = !{!89, !90, !91, !92, !93, !94}
!89 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !87, file: !28, line: 107, baseType: !58, size: 128)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !87, file: !28, line: 108, baseType: !22, size: 32, offset: 128)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !87, file: !28, line: 109, baseType: !22, size: 32, offset: 160)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !87, file: !28, line: 110, baseType: !22, size: 32, offset: 192)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !87, file: !28, line: 110, baseType: !22, size: 32, offset: 224)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !87, file: !28, line: 111, baseType: !95, size: 64, offset: 256)
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64)
!96 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !8, line: 490, size: 768, elements: !97)
!97 = !{!98, !99, !100, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600}
!98 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !96, file: !8, line: 491, baseType: !95, size: 64)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !96, file: !8, line: 491, baseType: !95, size: 64, offset: 64)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !96, file: !8, line: 493, baseType: !101, size: 64, offset: 128)
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64)
!102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !28, line: 169, size: 2048, elements: !103)
!103 = !{!104, !105, !106, !107, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2567, !2570, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591}
!104 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !102, file: !28, line: 170, baseType: !101, size: 64)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !102, file: !28, line: 170, baseType: !101, size: 64, offset: 64)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !102, file: !28, line: 172, baseType: !56, size: 64, offset: 128)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !102, file: !28, line: 174, baseType: !108, size: 64, offset: 192)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !110, line: 49, size: 1984, elements: !111)
!110 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!111 = !{!112, !148, !149, !150, !151, !152, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !109, file: !110, line: 50, baseType: !113, size: 960)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !39, line: 130, baseType: !114)
!114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !39, line: 117, size: 960, elements: !115)
!115 = !{!116, !117, !118, !120, !139, !143, !144, !145, !146, !147}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !114, file: !39, line: 118, baseType: !56, size: 64)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !114, file: !39, line: 118, baseType: !56, size: 64, offset: 64)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !114, file: !39, line: 119, baseType: !119, size: 64, offset: 128)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !114, file: !39, line: 120, baseType: !121, size: 64, offset: 192)
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64)
!122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !39, line: 136, size: 17600, elements: !123)
!123 = !{!124, !125, !127, !130, !134, !135, !136}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !122, file: !39, line: 137, baseType: !113, size: 960)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !122, file: !39, line: 138, baseType: !126, size: 64, offset: 960)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !122, file: !39, line: 139, baseType: !128, size: 64, offset: 1024)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64)
!129 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !39, line: 43, flags: DIFlagFwdDecl)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !122, file: !39, line: 140, baseType: !131, size: 8192, offset: 1088)
!131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8192, elements: !132)
!132 = !{!133}
!133 = !DISubrange(count: 1024)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !122, file: !39, line: 141, baseType: !131, size: 8192, offset: 9280)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !122, file: !39, line: 148, baseType: !121, size: 64, offset: 17472)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !122, file: !39, line: 150, baseType: !137, size: 64, offset: 17536)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64)
!138 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !39, line: 45, flags: DIFlagFwdDecl)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !114, file: !39, line: 121, baseType: !140, size: 528, offset: 256)
!140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 528, elements: !141)
!141 = !{!142}
!142 = !DISubrange(count: 66)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !114, file: !39, line: 126, baseType: !48, size: 16, offset: 784)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !114, file: !39, line: 127, baseType: !22, size: 32, offset: 800)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !114, file: !39, line: 128, baseType: !22, size: 32, offset: 832)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !114, file: !39, line: 128, baseType: !22, size: 32, offset: 864)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !114, file: !39, line: 129, baseType: !37, size: 64, offset: 896)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !109, file: !110, line: 52, baseType: !58, size: 128, offset: 960)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !109, file: !110, line: 53, baseType: !58, size: 128, offset: 1088)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !109, file: !110, line: 54, baseType: !58, size: 128, offset: 1216)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !109, file: !110, line: 55, baseType: !58, size: 128, offset: 1344)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !109, file: !110, line: 57, baseType: !153, size: 64, offset: 1472)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64)
!154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !155, line: 1216, size: 39680, elements: !156)
!155 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!156 = !{!157, !158, !162, !165, !1512, !1513, !1514, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1884, !2095, !2098, !2364, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2386, !2387, !2388, !2389, !2390, !2398, !2464, !2471, !2472, !2479, !2480, !2486, !2487, !2488, !2489, !2490}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !154, file: !155, line: 1217, baseType: !113, size: 960)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !154, file: !155, line: 1218, baseType: !159, size: 64, offset: 960)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64)
!160 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !161, line: 45, flags: DIFlagFwdDecl)
!161 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!162 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !154, file: !155, line: 1220, baseType: !163, size: 64, offset: 1024)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!164 = !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !161, line: 49, flags: DIFlagFwdDecl)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !154, file: !155, line: 1221, baseType: !166, size: 64, offset: 1088)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !168, line: 52, size: 4224, elements: !169)
!168 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!169 = !{!170, !171, !172, !173, !174, !175, !176, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !240, !241, !244, !1507, !1508, !1509, !1510, !1511}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !167, file: !168, line: 53, baseType: !113, size: 960)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !167, file: !168, line: 54, baseType: !159, size: 64, offset: 960)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !167, file: !168, line: 56, baseType: !48, size: 16, offset: 1024)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !167, file: !168, line: 56, baseType: !48, size: 16, offset: 1040)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !167, file: !168, line: 57, baseType: !48, size: 16, offset: 1056)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !167, file: !168, line: 57, baseType: !48, size: 16, offset: 1072)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !167, file: !168, line: 59, baseType: !177, size: 32, offset: 1088)
!177 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !167, file: !168, line: 59, baseType: !177, size: 32, offset: 1120)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !167, file: !168, line: 59, baseType: !177, size: 32, offset: 1152)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !167, file: !168, line: 60, baseType: !177, size: 32, offset: 1184)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !167, file: !168, line: 60, baseType: !177, size: 32, offset: 1216)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !167, file: !168, line: 60, baseType: !177, size: 32, offset: 1248)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !167, file: !168, line: 61, baseType: !177, size: 32, offset: 1280)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !167, file: !168, line: 61, baseType: !177, size: 32, offset: 1312)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !167, file: !168, line: 61, baseType: !177, size: 32, offset: 1344)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !167, file: !168, line: 68, baseType: !177, size: 32, offset: 1376)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !167, file: !168, line: 68, baseType: !177, size: 32, offset: 1408)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !167, file: !168, line: 68, baseType: !177, size: 32, offset: 1440)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !167, file: !168, line: 69, baseType: !177, size: 32, offset: 1472)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !167, file: !168, line: 69, baseType: !177, size: 32, offset: 1504)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !167, file: !168, line: 74, baseType: !177, size: 32, offset: 1536)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !167, file: !168, line: 79, baseType: !177, size: 32, offset: 1568)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !167, file: !168, line: 81, baseType: !48, size: 16, offset: 1600)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !167, file: !168, line: 91, baseType: !48, size: 16, offset: 1616)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !167, file: !168, line: 92, baseType: !48, size: 16, offset: 1632)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !167, file: !168, line: 93, baseType: !48, size: 16, offset: 1648)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !167, file: !168, line: 94, baseType: !48, size: 16, offset: 1664)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !167, file: !168, line: 94, baseType: !48, size: 16, offset: 1680)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !167, file: !168, line: 94, baseType: !48, size: 16, offset: 1696)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !167, file: !168, line: 94, baseType: !48, size: 16, offset: 1712)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !167, file: !168, line: 96, baseType: !177, size: 32, offset: 1728)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !167, file: !168, line: 96, baseType: !177, size: 32, offset: 1760)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !167, file: !168, line: 96, baseType: !177, size: 32, offset: 1792)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !167, file: !168, line: 96, baseType: !177, size: 32, offset: 1824)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !167, file: !168, line: 98, baseType: !177, size: 32, offset: 1856)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !167, file: !168, line: 98, baseType: !177, size: 32, offset: 1888)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !167, file: !168, line: 98, baseType: !177, size: 32, offset: 1920)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !167, file: !168, line: 98, baseType: !177, size: 32, offset: 1952)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !167, file: !168, line: 99, baseType: !177, size: 32, offset: 1984)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !167, file: !168, line: 99, baseType: !177, size: 32, offset: 2016)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !167, file: !168, line: 100, baseType: !177, size: 32, offset: 2048)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !167, file: !168, line: 100, baseType: !177, size: 32, offset: 2080)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !167, file: !168, line: 103, baseType: !48, size: 16, offset: 2112)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !167, file: !168, line: 103, baseType: !48, size: 16, offset: 2128)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !167, file: !168, line: 103, baseType: !48, size: 16, offset: 2144)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !167, file: !168, line: 103, baseType: !48, size: 16, offset: 2160)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !167, file: !168, line: 106, baseType: !177, size: 32, offset: 2176)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !167, file: !168, line: 106, baseType: !177, size: 32, offset: 2208)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !167, file: !168, line: 106, baseType: !177, size: 32, offset: 2240)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !167, file: !168, line: 106, baseType: !177, size: 32, offset: 2272)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !167, file: !168, line: 107, baseType: !48, size: 16, offset: 2304)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !167, file: !168, line: 107, baseType: !48, size: 16, offset: 2320)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !167, file: !168, line: 107, baseType: !48, size: 16, offset: 2336)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !167, file: !168, line: 107, baseType: !48, size: 16, offset: 2352)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !167, file: !168, line: 108, baseType: !177, size: 32, offset: 2368)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !167, file: !168, line: 108, baseType: !177, size: 32, offset: 2400)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !167, file: !168, line: 109, baseType: !177, size: 32, offset: 2432)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !167, file: !168, line: 109, baseType: !177, size: 32, offset: 2464)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !167, file: !168, line: 110, baseType: !177, size: 32, offset: 2496)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !167, file: !168, line: 110, baseType: !177, size: 32, offset: 2528)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !167, file: !168, line: 110, baseType: !177, size: 32, offset: 2560)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !167, file: !168, line: 111, baseType: !48, size: 16, offset: 2592)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !167, file: !168, line: 111, baseType: !48, size: 16, offset: 2608)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !167, file: !168, line: 112, baseType: !48, size: 16, offset: 2624)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !167, file: !168, line: 112, baseType: !48, size: 16, offset: 2640)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !167, file: !168, line: 112, baseType: !48, size: 16, offset: 2656)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !167, file: !168, line: 115, baseType: !48, size: 16, offset: 2672)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !167, file: !168, line: 118, baseType: !239, size: 64, offset: 2688)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !167, file: !168, line: 118, baseType: !239, size: 64, offset: 2752)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !167, file: !168, line: 121, baseType: !242, size: 64, offset: 2816)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !161, line: 46, flags: DIFlagFwdDecl)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !167, file: !168, line: 122, baseType: !245, size: 1152, offset: 2880)
!245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !246, size: 1152, elements: !1505)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !161, line: 57, size: 2496, elements: !248)
!248 = !{!249, !250, !251, !252, !253, !254, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !247, file: !161, line: 59, baseType: !48, size: 16)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !247, file: !161, line: 59, baseType: !48, size: 16, offset: 16)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !247, file: !161, line: 59, baseType: !48, size: 16, offset: 32)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !247, file: !161, line: 59, baseType: !48, size: 16, offset: 48)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !247, file: !161, line: 60, baseType: !163, size: 64, offset: 64)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !247, file: !161, line: 61, baseType: !255, size: 64, offset: 128)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !161, line: 202, size: 3328, elements: !257)
!257 = !{!258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !327, !987, !988, !1318, !1319, !1347, !1348, !1415, !1436, !1444, !1445}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !256, file: !161, line: 203, baseType: !113, size: 960)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !256, file: !161, line: 204, baseType: !159, size: 64, offset: 960)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !256, file: !161, line: 206, baseType: !177, size: 32, offset: 1024)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !256, file: !161, line: 206, baseType: !177, size: 32, offset: 1056)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !256, file: !161, line: 207, baseType: !177, size: 32, offset: 1088)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !256, file: !161, line: 207, baseType: !177, size: 32, offset: 1120)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !256, file: !161, line: 207, baseType: !177, size: 32, offset: 1152)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !256, file: !161, line: 207, baseType: !177, size: 32, offset: 1184)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !256, file: !161, line: 207, baseType: !177, size: 32, offset: 1216)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !256, file: !161, line: 207, baseType: !177, size: 32, offset: 1248)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !256, file: !161, line: 208, baseType: !177, size: 32, offset: 1280)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !256, file: !161, line: 208, baseType: !177, size: 32, offset: 1312)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !256, file: !161, line: 211, baseType: !177, size: 32, offset: 1344)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !256, file: !161, line: 211, baseType: !177, size: 32, offset: 1376)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !256, file: !161, line: 211, baseType: !177, size: 32, offset: 1408)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !256, file: !161, line: 211, baseType: !177, size: 32, offset: 1440)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !256, file: !161, line: 211, baseType: !177, size: 32, offset: 1472)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !256, file: !161, line: 214, baseType: !177, size: 32, offset: 1504)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !256, file: !161, line: 214, baseType: !177, size: 32, offset: 1536)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !256, file: !161, line: 217, baseType: !177, size: 32, offset: 1568)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !256, file: !161, line: 218, baseType: !177, size: 32, offset: 1600)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !256, file: !161, line: 219, baseType: !177, size: 32, offset: 1632)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !256, file: !161, line: 220, baseType: !177, size: 32, offset: 1664)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !256, file: !161, line: 221, baseType: !177, size: 32, offset: 1696)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !256, file: !161, line: 222, baseType: !48, size: 16, offset: 1728)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !256, file: !161, line: 222, baseType: !48, size: 16, offset: 1744)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !256, file: !161, line: 224, baseType: !48, size: 16, offset: 1760)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !256, file: !161, line: 224, baseType: !48, size: 16, offset: 1776)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !256, file: !161, line: 227, baseType: !48, size: 16, offset: 1792)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !256, file: !161, line: 227, baseType: !48, size: 16, offset: 1808)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !256, file: !161, line: 229, baseType: !48, size: 16, offset: 1824)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !256, file: !161, line: 229, baseType: !48, size: 16, offset: 1840)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !256, file: !161, line: 230, baseType: !48, size: 16, offset: 1856)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !256, file: !161, line: 230, baseType: !48, size: 16, offset: 1872)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !256, file: !161, line: 232, baseType: !177, size: 32, offset: 1888)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !256, file: !161, line: 232, baseType: !177, size: 32, offset: 1920)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !256, file: !161, line: 232, baseType: !177, size: 32, offset: 1952)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !256, file: !161, line: 232, baseType: !177, size: 32, offset: 1984)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !256, file: !161, line: 233, baseType: !22, size: 32, offset: 2016)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !256, file: !161, line: 234, baseType: !22, size: 32, offset: 2048)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !256, file: !161, line: 235, baseType: !48, size: 16, offset: 2080)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !256, file: !161, line: 235, baseType: !48, size: 16, offset: 2096)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !256, file: !161, line: 236, baseType: !48, size: 16, offset: 2112)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !256, file: !161, line: 239, baseType: !48, size: 16, offset: 2128)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !256, file: !161, line: 240, baseType: !22, size: 32, offset: 2144)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !256, file: !161, line: 241, baseType: !22, size: 32, offset: 2176)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !256, file: !161, line: 241, baseType: !22, size: 32, offset: 2208)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !256, file: !161, line: 241, baseType: !22, size: 32, offset: 2240)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !256, file: !161, line: 243, baseType: !177, size: 32, offset: 2272)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !256, file: !161, line: 243, baseType: !177, size: 32, offset: 2304)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !256, file: !161, line: 244, baseType: !177, size: 32, offset: 2336)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !256, file: !161, line: 246, baseType: !310, size: 320, offset: 2368)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !311, line: 50, size: 320, elements: !312)
!311 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!312 = !{!313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !310, file: !311, line: 51, baseType: !153, size: 64)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !310, file: !311, line: 53, baseType: !22, size: 32, offset: 64)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !310, file: !311, line: 54, baseType: !22, size: 32, offset: 96)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !310, file: !311, line: 55, baseType: !22, size: 32, offset: 128)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !310, file: !311, line: 55, baseType: !22, size: 32, offset: 160)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !310, file: !311, line: 56, baseType: !14, size: 8, offset: 192)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !310, file: !311, line: 56, baseType: !14, size: 8, offset: 200)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !310, file: !311, line: 57, baseType: !14, size: 8, offset: 208)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !310, file: !311, line: 57, baseType: !14, size: 8, offset: 216)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !310, file: !311, line: 59, baseType: !48, size: 16, offset: 224)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !310, file: !311, line: 59, baseType: !48, size: 16, offset: 240)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !310, file: !311, line: 59, baseType: !48, size: 16, offset: 256)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !310, file: !311, line: 61, baseType: !48, size: 16, offset: 272)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !310, file: !311, line: 63, baseType: !22, size: 32, offset: 288)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !256, file: !161, line: 248, baseType: !328, size: 64, offset: 2688)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !83, line: 328, size: 3456, elements: !330)
!330 = !{!331, !332, !333, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !965, !966, !967, !970, !974, !978, !982, !983, !984, !985, !986}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !329, file: !83, line: 329, baseType: !113, size: 960)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !329, file: !83, line: 330, baseType: !159, size: 64, offset: 960)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !329, file: !83, line: 332, baseType: !334, size: 64, offset: 1024)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !336, line: 283, size: 4096, elements: !337)
!336 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_node.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!337 = !{!338, !339, !340, !341, !345, !346, !350, !903, !911, !915, !921, !925, !926, !927, !928, !932, !933}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !335, file: !336, line: 284, baseType: !22, size: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !335, file: !336, line: 285, baseType: !33, size: 512, offset: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !335, file: !336, line: 287, baseType: !33, size: 512, offset: 544)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !335, file: !336, line: 288, baseType: !342, size: 2048, offset: 1056)
!342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 2048, elements: !343)
!343 = !{!344}
!344 = !DISubrange(count: 256)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !335, file: !336, line: 289, baseType: !22, size: 32, offset: 3104)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "free_cache", scope: !335, file: !336, line: 292, baseType: !347, size: 64, offset: 3136)
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64)
!348 = !DISubroutineType(types: !349)
!349 = !{null, !328}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "free_node_cache", scope: !335, file: !336, line: 293, baseType: !351, size: 64, offset: 3200)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = !DISubroutineType(types: !353)
!353 = !{null, !328, !354}
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNode", file: !83, line: 167, size: 3712, elements: !356)
!356 = !{!357, !358, !359, !360, !361, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !355, file: !83, line: 168, baseType: !354, size: 64)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !355, file: !83, line: 168, baseType: !354, size: 64, offset: 64)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "new_node", scope: !355, file: !83, line: 168, baseType: !354, size: 64, offset: 128)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !355, file: !83, line: 170, baseType: !37, size: 64, offset: 192)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !355, file: !83, line: 172, baseType: !362, size: 64, offset: 256)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeType", file: !336, line: 144, size: 6016, elements: !364)
!364 = !{!365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !530, !531, !532, !677, !681, !685, !686, !759, !763, !767, !768, !769, !770, !774, !775, !779, !783, !787, !791, !795, !799, !803, !804, !811, !813, !822, !855}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !363, file: !336, line: 145, baseType: !56, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !363, file: !336, line: 145, baseType: !56, size: 64, offset: 64)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free", scope: !363, file: !336, line: 146, baseType: !48, size: 16, offset: 128)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !363, file: !336, line: 148, baseType: !33, size: 512, offset: 144)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !363, file: !336, line: 149, baseType: !22, size: 32, offset: 672)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !363, file: !336, line: 151, baseType: !33, size: 512, offset: 704)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !363, file: !336, line: 152, baseType: !342, size: 2048, offset: 1216)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !363, file: !336, line: 153, baseType: !22, size: 32, offset: 3264)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !363, file: !336, line: 155, baseType: !177, size: 32, offset: 3296)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !363, file: !336, line: 155, baseType: !177, size: 32, offset: 3328)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !363, file: !336, line: 155, baseType: !177, size: 32, offset: 3360)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !363, file: !336, line: 156, baseType: !177, size: 32, offset: 3392)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "minheight", scope: !363, file: !336, line: 156, baseType: !177, size: 32, offset: 3424)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "maxheight", scope: !363, file: !336, line: 156, baseType: !177, size: 32, offset: 3456)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "nclass", scope: !363, file: !336, line: 157, baseType: !48, size: 16, offset: 3488)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !363, file: !336, line: 157, baseType: !48, size: 16, offset: 3504)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility", scope: !363, file: !336, line: 157, baseType: !48, size: 16, offset: 3520)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !363, file: !336, line: 160, baseType: !383, size: 64, offset: 3584)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!384 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketTemplate", file: !336, line: 109, baseType: !385)
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketTemplate", file: !336, line: 98, size: 1408, elements: !386)
!386 = !{!387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !529}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !385, file: !336, line: 99, baseType: !22, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !385, file: !336, line: 99, baseType: !22, size: 32, offset: 32)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !385, file: !336, line: 100, baseType: !33, size: 512, offset: 64)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !385, file: !336, line: 101, baseType: !177, size: 32, offset: 576)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !385, file: !336, line: 101, baseType: !177, size: 32, offset: 608)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "val3", scope: !385, file: !336, line: 101, baseType: !177, size: 32, offset: 640)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "val4", scope: !385, file: !336, line: 101, baseType: !177, size: 32, offset: 672)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !385, file: !336, line: 102, baseType: !177, size: 32, offset: 704)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !385, file: !336, line: 102, baseType: !177, size: 32, offset: 736)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !385, file: !336, line: 103, baseType: !22, size: 32, offset: 768)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !385, file: !336, line: 104, baseType: !22, size: 32, offset: 800)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !385, file: !336, line: 107, baseType: !399, size: 64, offset: 832)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocket", file: !83, line: 87, size: 2816, elements: !401)
!401 = !{!402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !508}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !400, file: !83, line: 88, baseType: !399, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !400, file: !83, line: 88, baseType: !399, size: 64, offset: 64)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "new_sock", scope: !400, file: !83, line: 88, baseType: !399, size: 64, offset: 128)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !400, file: !83, line: 90, baseType: !37, size: 64, offset: 192)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !400, file: !83, line: 92, baseType: !33, size: 512, offset: 256)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !400, file: !83, line: 94, baseType: !33, size: 512, offset: 768)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !400, file: !83, line: 99, baseType: !56, size: 64, offset: 1280)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !400, file: !83, line: 101, baseType: !48, size: 16, offset: 1344)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !400, file: !83, line: 101, baseType: !48, size: 16, offset: 1360)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !400, file: !83, line: 102, baseType: !48, size: 16, offset: 1376)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "in_out", scope: !400, file: !83, line: 103, baseType: !48, size: 16, offset: 1392)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !400, file: !83, line: 104, baseType: !414, size: 64, offset: 1408)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketType", file: !336, line: 114, size: 1600, elements: !416)
!416 = !{!417, !418, !424, !428, !432, !436, !440, !444, !445, !449, !478, !479, !480}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !415, file: !336, line: 115, baseType: !33, size: 512)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !415, file: !336, line: 117, baseType: !419, size: 64, offset: 512)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!420 = !DISubroutineType(types: !421)
!421 = !{null, !23, !422, !73, !73, !12}
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!423 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !336, line: 73, flags: DIFlagFwdDecl)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "draw_color", scope: !415, file: !336, line: 118, baseType: !425, size: 64, offset: 576)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!426 = !DISubroutineType(types: !427)
!427 = !{null, !23, !73, !73, !239}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw", scope: !415, file: !336, line: 120, baseType: !429, size: 64, offset: 640)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = !DISubroutineType(types: !431)
!431 = !{null, !23, !422, !73}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw_color", scope: !415, file: !336, line: 121, baseType: !433, size: 64, offset: 704)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = !DISubroutineType(types: !435)
!435 = !{null, !23, !73, !239}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "interface_register_properties", scope: !415, file: !336, line: 122, baseType: !437, size: 64, offset: 768)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!438 = !DISubroutineType(types: !439)
!439 = !{null, !328, !399, !81}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "interface_init_socket", scope: !415, file: !336, line: 123, baseType: !441, size: 64, offset: 832)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!442 = !DISubroutineType(types: !443)
!443 = !{null, !328, !399, !354, !399, !12}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "interface_verify_socket", scope: !415, file: !336, line: 124, baseType: !441, size: 64, offset: 896)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "interface_from_socket", scope: !415, file: !336, line: 125, baseType: !446, size: 64, offset: 960)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = !DISubroutineType(types: !448)
!448 = !{null, !328, !399, !354, !399}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "ext_socket", scope: !415, file: !336, line: 128, baseType: !450, size: 256, offset: 1024)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !25, line: 436, baseType: !451)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !25, line: 430, size: 256, elements: !452)
!452 = !{!453, !454, !457, !473}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !451, file: !25, line: 431, baseType: !56, size: 64)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !451, file: !25, line: 432, baseType: !455, size: 64, offset: 64)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !25, line: 417, baseType: !82)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !451, file: !25, line: 433, baseType: !458, size: 64, offset: 128)
!458 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !25, line: 408, baseType: !459)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!460 = !DISubroutineType(types: !461)
!461 = !{!22, !23, !73, !462, !464}
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!463 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !25, line: 38, flags: DIFlagFwdDecl)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !25, line: 348, baseType: !466)
!466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !25, line: 337, size: 256, elements: !467)
!467 = !{!468, !469, !470, !471, !472}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !466, file: !25, line: 339, baseType: !56, size: 64)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !466, file: !25, line: 342, baseType: !462, size: 64, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !466, file: !25, line: 345, baseType: !22, size: 32, offset: 128)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !466, file: !25, line: 347, baseType: !22, size: 32, offset: 160)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !466, file: !25, line: 347, baseType: !22, size: 32, offset: 192)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !451, file: !25, line: 434, baseType: !474, size: 64, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !25, line: 409, baseType: !475)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = !DISubroutineType(types: !477)
!477 = !{null, !56}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "ext_interface", scope: !415, file: !336, line: 129, baseType: !450, size: 256, offset: 1280)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !415, file: !336, line: 132, baseType: !22, size: 32, offset: 1536)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !415, file: !336, line: 132, baseType: !22, size: 32, offset: 1568)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !400, file: !83, line: 105, baseType: !33, size: 512, offset: 1472)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !400, file: !83, line: 107, baseType: !177, size: 32, offset: 1984)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !400, file: !83, line: 107, baseType: !177, size: 32, offset: 2016)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !400, file: !83, line: 109, baseType: !56, size: 64, offset: 2048)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !400, file: !83, line: 112, baseType: !48, size: 16, offset: 2112)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "stack_type", scope: !400, file: !83, line: 114, baseType: !48, size: 16, offset: 2128)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !400, file: !83, line: 115, baseType: !22, size: 32, offset: 2144)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !400, file: !83, line: 117, baseType: !56, size: 64, offset: 2176)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "own_index", scope: !400, file: !83, line: 122, baseType: !22, size: 32, offset: 2240)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "to_index", scope: !400, file: !83, line: 124, baseType: !22, size: 32, offset: 2272)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "groupsock", scope: !400, file: !83, line: 126, baseType: !399, size: 64, offset: 2304)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !400, file: !83, line: 128, baseType: !493, size: 64, offset: 2368)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeLink", file: !83, line: 298, size: 448, elements: !495)
!495 = !{!496, !497, !498, !501, !502, !505, !506, !507}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !494, file: !83, line: 299, baseType: !493, size: 64)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !494, file: !83, line: 299, baseType: !493, size: 64, offset: 64)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "fromnode", scope: !494, file: !83, line: 301, baseType: !499, size: 64, offset: 128)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNode", file: !83, line: 218, baseType: !355)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "tonode", scope: !494, file: !83, line: 301, baseType: !499, size: 64, offset: 192)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "fromsock", scope: !494, file: !83, line: 302, baseType: !503, size: 64, offset: 256)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocket", file: !83, line: 132, baseType: !400)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "tosock", scope: !494, file: !83, line: 302, baseType: !503, size: 64, offset: 320)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !494, file: !83, line: 304, baseType: !22, size: 32, offset: 384)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !494, file: !83, line: 305, baseType: !22, size: 32, offset: 416)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !400, file: !83, line: 131, baseType: !509, size: 384, offset: 2432)
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeStack", file: !83, line: 73, baseType: !510)
!510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeStack", file: !83, line: 62, size: 384, elements: !511)
!511 = !{!512, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !510, file: !83, line: 63, baseType: !513, size: 128)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 128, elements: !514)
!514 = !{!515}
!515 = !DISubrange(count: 4)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !510, file: !83, line: 64, baseType: !177, size: 32, offset: 128)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !510, file: !83, line: 64, baseType: !177, size: 32, offset: 160)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !510, file: !83, line: 65, baseType: !56, size: 64, offset: 192)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !510, file: !83, line: 66, baseType: !48, size: 16, offset: 256)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !510, file: !83, line: 67, baseType: !48, size: 16, offset: 272)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !510, file: !83, line: 68, baseType: !48, size: 16, offset: 288)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !510, file: !83, line: 69, baseType: !48, size: 16, offset: 304)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !510, file: !83, line: 70, baseType: !48, size: 16, offset: 320)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !510, file: !83, line: 71, baseType: !48, size: 16, offset: 336)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !510, file: !83, line: 72, baseType: !526, size: 32, offset: 352)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 32, elements: !527)
!527 = !{!528}
!528 = !DISubrange(count: 2)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !385, file: !336, line: 108, baseType: !33, size: 512, offset: 896)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !363, file: !336, line: 160, baseType: !383, size: 64, offset: 3648)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "storagename", scope: !363, file: !336, line: 162, baseType: !33, size: 512, offset: 3712)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype", scope: !363, file: !336, line: 165, baseType: !533, size: 64, offset: 4224)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = !DISubroutineType(types: !535)
!535 = !{null, !536, !538, !623, !328, !354, !672}
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !24)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !110, line: 230, size: 3072, elements: !540)
!540 = !{!541, !542, !543, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !612, !613, !614, !615, !616, !617, !618, !619, !620, !622}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !539, file: !110, line: 231, baseType: !538, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !539, file: !110, line: 231, baseType: !538, size: 64, offset: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !539, file: !110, line: 233, baseType: !544, size: 1280, offset: 128)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !545, line: 71, baseType: !546)
!545 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !545, line: 40, size: 1280, elements: !547)
!547 = !{!548, !557, !558, !566, !567, !568, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !591}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !546, file: !545, line: 41, baseType: !549, size: 128)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !550, line: 95, baseType: !551)
!550 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !550, line: 92, size: 128, elements: !552)
!552 = !{!553, !554, !555, !556}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !551, file: !550, line: 93, baseType: !177, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !551, file: !550, line: 93, baseType: !177, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !551, file: !550, line: 94, baseType: !177, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !551, file: !550, line: 94, baseType: !177, size: 32, offset: 96)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !546, file: !545, line: 41, baseType: !549, size: 128, offset: 128)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !546, file: !545, line: 42, baseType: !559, size: 128, offset: 256)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !550, line: 89, baseType: !560)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !550, line: 86, size: 128, elements: !561)
!561 = !{!562, !563, !564, !565}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !560, file: !550, line: 87, baseType: !22, size: 32)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !560, file: !550, line: 87, baseType: !22, size: 32, offset: 32)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !560, file: !550, line: 88, baseType: !22, size: 32, offset: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !560, file: !550, line: 88, baseType: !22, size: 32, offset: 96)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !546, file: !545, line: 42, baseType: !559, size: 128, offset: 384)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !546, file: !545, line: 43, baseType: !559, size: 128, offset: 512)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !546, file: !545, line: 45, baseType: !569, size: 64, offset: 640)
!569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 64, elements: !527)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !546, file: !545, line: 45, baseType: !569, size: 64, offset: 704)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !546, file: !545, line: 46, baseType: !177, size: 32, offset: 768)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !546, file: !545, line: 46, baseType: !177, size: 32, offset: 800)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !546, file: !545, line: 48, baseType: !48, size: 16, offset: 832)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !546, file: !545, line: 49, baseType: !48, size: 16, offset: 848)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !546, file: !545, line: 51, baseType: !48, size: 16, offset: 864)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !546, file: !545, line: 52, baseType: !48, size: 16, offset: 880)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !546, file: !545, line: 53, baseType: !48, size: 16, offset: 896)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !546, file: !545, line: 55, baseType: !48, size: 16, offset: 912)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !546, file: !545, line: 56, baseType: !48, size: 16, offset: 928)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !546, file: !545, line: 58, baseType: !48, size: 16, offset: 944)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !546, file: !545, line: 58, baseType: !48, size: 16, offset: 960)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !546, file: !545, line: 59, baseType: !48, size: 16, offset: 976)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !546, file: !545, line: 59, baseType: !48, size: 16, offset: 992)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !546, file: !545, line: 61, baseType: !48, size: 16, offset: 1008)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !546, file: !545, line: 63, baseType: !239, size: 64, offset: 1024)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !546, file: !545, line: 64, baseType: !22, size: 32, offset: 1088)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !546, file: !545, line: 65, baseType: !22, size: 32, offset: 1120)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !546, file: !545, line: 68, baseType: !589, size: 64, offset: 1152)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 64)
!590 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !545, line: 68, flags: DIFlagFwdDecl)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !546, file: !545, line: 69, baseType: !95, size: 64, offset: 1216)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !539, file: !110, line: 234, baseType: !559, size: 128, offset: 1408)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !539, file: !110, line: 235, baseType: !559, size: 128, offset: 1536)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !539, file: !110, line: 236, baseType: !48, size: 16, offset: 1664)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !539, file: !110, line: 236, baseType: !48, size: 16, offset: 1680)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !539, file: !110, line: 238, baseType: !48, size: 16, offset: 1696)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !539, file: !110, line: 239, baseType: !48, size: 16, offset: 1712)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !539, file: !110, line: 240, baseType: !48, size: 16, offset: 1728)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !539, file: !110, line: 241, baseType: !48, size: 16, offset: 1744)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !539, file: !110, line: 243, baseType: !177, size: 32, offset: 1760)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !539, file: !110, line: 244, baseType: !48, size: 16, offset: 1792)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !539, file: !110, line: 244, baseType: !48, size: 16, offset: 1808)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !539, file: !110, line: 246, baseType: !48, size: 16, offset: 1824)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !539, file: !110, line: 247, baseType: !48, size: 16, offset: 1840)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !539, file: !110, line: 248, baseType: !48, size: 16, offset: 1856)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !539, file: !110, line: 249, baseType: !48, size: 16, offset: 1872)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !539, file: !110, line: 250, baseType: !48, size: 16, offset: 1888)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !539, file: !110, line: 251, baseType: !48, size: 16, offset: 1904)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !539, file: !110, line: 253, baseType: !610, size: 64, offset: 1920)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !110, line: 42, flags: DIFlagFwdDecl)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !539, file: !110, line: 255, baseType: !58, size: 128, offset: 1984)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !539, file: !110, line: 256, baseType: !58, size: 128, offset: 2112)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !539, file: !110, line: 257, baseType: !58, size: 128, offset: 2240)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !539, file: !110, line: 258, baseType: !58, size: 128, offset: 2368)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !539, file: !110, line: 259, baseType: !58, size: 128, offset: 2496)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !539, file: !110, line: 260, baseType: !58, size: 128, offset: 2624)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !539, file: !110, line: 261, baseType: !58, size: 128, offset: 2752)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !539, file: !110, line: 263, baseType: !95, size: 64, offset: 2880)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !539, file: !110, line: 265, baseType: !621, size: 64, offset: 2944)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !539, file: !110, line: 266, baseType: !56, size: 64, offset: 3008)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !625, line: 925, size: 3200, elements: !626)
!625 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!626 = !{!627, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !624, file: !625, line: 926, baseType: !628, size: 64)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !625, line: 91, baseType: !630)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !625, line: 85, size: 448, elements: !631)
!631 = !{!632, !634, !635, !636, !637, !638}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !630, file: !625, line: 86, baseType: !633, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !630, file: !625, line: 86, baseType: !633, size: 64, offset: 64)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !630, file: !625, line: 87, baseType: !58, size: 128, offset: 128)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !630, file: !625, line: 88, baseType: !22, size: 32, offset: 256)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !630, file: !625, line: 89, baseType: !177, size: 32, offset: 288)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !630, file: !625, line: 90, baseType: !639, size: 128, offset: 320)
!639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 128, elements: !640)
!640 = !{!641}
!641 = !DISubrange(count: 8)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !624, file: !625, line: 926, baseType: !628, size: 64, offset: 64)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !624, file: !625, line: 927, baseType: !58, size: 128, offset: 128)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !624, file: !625, line: 928, baseType: !22, size: 32, offset: 256)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !624, file: !625, line: 929, baseType: !177, size: 32, offset: 288)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !624, file: !625, line: 930, baseType: !639, size: 128, offset: 320)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !624, file: !625, line: 932, baseType: !544, size: 1280, offset: 448)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !624, file: !625, line: 934, baseType: !119, size: 64, offset: 1728)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !624, file: !625, line: 934, baseType: !119, size: 64, offset: 1792)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !624, file: !625, line: 935, baseType: !48, size: 16, offset: 1856)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !624, file: !625, line: 935, baseType: !48, size: 16, offset: 1872)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "aspect", scope: !624, file: !625, line: 936, baseType: !177, size: 32, offset: 1888)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !624, file: !625, line: 936, baseType: !177, size: 32, offset: 1920)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !624, file: !625, line: 938, baseType: !177, size: 32, offset: 1952)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !624, file: !625, line: 938, baseType: !177, size: 32, offset: 1984)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !624, file: !625, line: 939, baseType: !177, size: 32, offset: 2016)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !624, file: !625, line: 940, baseType: !569, size: 64, offset: 2048)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "treepath", scope: !624, file: !625, line: 947, baseType: !58, size: 128, offset: 2112)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !624, file: !625, line: 949, baseType: !328, size: 64, offset: 2240)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "edittree", scope: !624, file: !625, line: 949, baseType: !328, size: 64, offset: 2304)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "tree_idname", scope: !624, file: !625, line: 952, baseType: !33, size: 512, offset: 2368)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "treetype", scope: !624, file: !625, line: 953, baseType: !22, size: 32, offset: 2880)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !624, file: !625, line: 954, baseType: !22, size: 32, offset: 2912)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "texfrom", scope: !624, file: !625, line: 956, baseType: !48, size: 16, offset: 2944)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "shaderfrom", scope: !624, file: !625, line: 957, baseType: !48, size: 16, offset: 2960)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !624, file: !625, line: 958, baseType: !48, size: 16, offset: 2976)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !624, file: !625, line: 959, baseType: !48, size: 16, offset: 2992)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "linkdrag", scope: !624, file: !625, line: 960, baseType: !58, size: 128, offset: 3008)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !624, file: !625, line: 962, baseType: !670, size: 64, offset: 3136)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !155, line: 61, flags: DIFlagFwdDecl)
!672 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !83, line: 274, baseType: !673)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !83, line: 271, size: 32, elements: !674)
!674 = !{!675}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !673, file: !83, line: 273, baseType: !676, size: 32)
!676 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype_prepare", scope: !363, file: !336, line: 168, baseType: !678, size: 64, offset: 4288)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = !DISubroutineType(types: !680)
!680 = !{null, !536, !328, !354}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons", scope: !363, file: !336, line: 171, baseType: !682, size: 64, offset: 4352)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DISubroutineType(types: !684)
!684 = !{null, !422, !23, !73}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons_ex", scope: !363, file: !336, line: 173, baseType: !682, size: 64, offset: 4416)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "draw_backdrop", scope: !363, file: !336, line: 176, baseType: !687, size: 64, offset: 4480)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DISubroutineType(types: !689)
!689 = !{null, !623, !690, !354, !22, !22}
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !692, line: 70, size: 19840, elements: !693)
!692 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!693 = !{!694, !695, !696, !697, !698, !700, !701, !702, !703, !705, !706, !709, !710, !711, !712, !713, !715, !717, !718, !719, !723, !724, !725, !726, !727, !730, !731, !732, !733, !734, !737, !738, !740, !741, !742, !745, !746, !747, !750, !751, !752}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !691, file: !692, line: 71, baseType: !690, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !691, file: !692, line: 71, baseType: !690, size: 64, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !691, file: !692, line: 74, baseType: !22, size: 32, offset: 128)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !691, file: !692, line: 74, baseType: !22, size: 32, offset: 160)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !691, file: !692, line: 79, baseType: !699, size: 8, offset: 192)
!699 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !691, file: !692, line: 80, baseType: !22, size: 32, offset: 224)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !691, file: !692, line: 83, baseType: !22, size: 32, offset: 256)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "mall", scope: !691, file: !692, line: 84, baseType: !22, size: 32, offset: 288)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !691, file: !692, line: 87, baseType: !704, size: 64, offset: 320)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "rect_float", scope: !691, file: !692, line: 88, baseType: !239, size: 64, offset: 384)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "ppm", scope: !691, file: !692, line: 93, baseType: !707, size: 128, offset: 448)
!707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !708, size: 128, elements: !527)
!708 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !691, file: !692, line: 96, baseType: !22, size: 32, offset: 576)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !691, file: !692, line: 96, baseType: !22, size: 32, offset: 608)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "xtiles", scope: !691, file: !692, line: 97, baseType: !22, size: 32, offset: 640)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "ytiles", scope: !691, file: !692, line: 97, baseType: !22, size: 32, offset: 672)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "tiles", scope: !691, file: !692, line: 98, baseType: !714, size: 64, offset: 704)
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !691, file: !692, line: 101, baseType: !716, size: 64, offset: 768)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf_float", scope: !691, file: !692, line: 102, baseType: !239, size: 64, offset: 832)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !691, file: !692, line: 105, baseType: !177, size: 32, offset: 896)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "mipmap", scope: !691, file: !692, line: 108, baseType: !720, size: 1280, offset: 960)
!720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 1280, elements: !721)
!721 = !{!722}
!722 = !DISubrange(count: 20)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "miptot", scope: !691, file: !692, line: 109, baseType: !22, size: 32, offset: 2240)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "miplevel", scope: !691, file: !692, line: 109, baseType: !22, size: 32, offset: 2272)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !691, file: !692, line: 112, baseType: !22, size: 32, offset: 2304)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "userflags", scope: !691, file: !692, line: 113, baseType: !22, size: 32, offset: 2336)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !691, file: !692, line: 114, baseType: !728, size: 64, offset: 2368)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImMetaData", file: !692, line: 50, flags: DIFlagFwdDecl)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !691, file: !692, line: 115, baseType: !56, size: 64, offset: 2432)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ftype", scope: !691, file: !692, line: 118, baseType: !22, size: 32, offset: 2496)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !691, file: !692, line: 119, baseType: !131, size: 8192, offset: 2528)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "cachename", scope: !691, file: !692, line: 120, baseType: !131, size: 8192, offset: 10720)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "c_handle", scope: !691, file: !692, line: 123, baseType: !735, size: 64, offset: 18944)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DICompositeType(tag: DW_TAG_structure_type, name: "MEM_CacheLimiterHandle_s", file: !692, line: 123, flags: DIFlagFwdDecl)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "refcounter", scope: !691, file: !692, line: 124, baseType: !22, size: 32, offset: 19008)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffer", scope: !691, file: !692, line: 127, baseType: !739, size: 64, offset: 19072)
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "encodedsize", scope: !691, file: !692, line: 128, baseType: !676, size: 32, offset: 19136)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffersize", scope: !691, file: !692, line: 129, baseType: !676, size: 32, offset: 19168)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "rect_colorspace", scope: !691, file: !692, line: 132, baseType: !743, size: 64, offset: 19200)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !155, line: 63, flags: DIFlagFwdDecl)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "float_colorspace", scope: !691, file: !692, line: 133, baseType: !743, size: 64, offset: 19264)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer_flags", scope: !691, file: !692, line: 134, baseType: !704, size: 64, offset: 19328)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_cache", scope: !691, file: !692, line: 135, baseType: !748, size: 64, offset: 19392)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColormanageCache", file: !692, line: 135, flags: DIFlagFwdDecl)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_flag", scope: !691, file: !692, line: 136, baseType: !22, size: 32, offset: 19456)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_rect", scope: !691, file: !692, line: 137, baseType: !559, size: 128, offset: 19488)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "dds_data", scope: !691, file: !692, line: 140, baseType: !753, size: 192, offset: 19648)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DDSData", file: !692, line: 55, size: 192, elements: !754)
!754 = !{!755, !756, !757, !758}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "fourcc", scope: !753, file: !692, line: 56, baseType: !676, size: 32)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "nummipmaps", scope: !753, file: !692, line: 57, baseType: !676, size: 32, offset: 32)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !753, file: !692, line: 58, baseType: !739, size: 64, offset: 64)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !753, file: !692, line: 59, baseType: !676, size: 32, offset: 128)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "labelfunc", scope: !363, file: !336, line: 179, baseType: !760, size: 64, offset: 4544)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = !DISubroutineType(types: !762)
!762 = !{null, !328, !354, !621, !22}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "resize_area_func", scope: !363, file: !336, line: 181, baseType: !764, size: 64, offset: 4608)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!765 = !DISubroutineType(types: !766)
!766 = !{!22, !354, !22, !22}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "select_area_func", scope: !363, file: !336, line: 183, baseType: !764, size: 64, offset: 4672)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "tweak_area_func", scope: !363, file: !336, line: 185, baseType: !764, size: 64, offset: 4736)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "updatefunc", scope: !363, file: !336, line: 188, baseType: !351, size: 64, offset: 4800)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "verifyfunc", scope: !363, file: !336, line: 190, baseType: !771, size: 64, offset: 4864)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DISubroutineType(types: !773)
!773 = !{null, !328, !354, !119}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc", scope: !363, file: !336, line: 193, baseType: !351, size: 64, offset: 4928)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc", scope: !363, file: !336, line: 195, baseType: !776, size: 64, offset: 4992)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{null, !354}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc", scope: !363, file: !336, line: 197, baseType: !780, size: 64, offset: 5056)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{null, !328, !354, !354}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc_api", scope: !363, file: !336, line: 200, baseType: !784, size: 64, offset: 5120)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = !DISubroutineType(types: !786)
!786 = !{null, !536, !73}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc_api", scope: !363, file: !336, line: 201, baseType: !788, size: 64, offset: 5184)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DISubroutineType(types: !790)
!790 = !{null, !73}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc_api", scope: !363, file: !336, line: 202, baseType: !792, size: 64, offset: 5248)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DISubroutineType(types: !794)
!794 = !{null, !73, !354}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !363, file: !336, line: 205, baseType: !796, size: 64, offset: 5312)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DISubroutineType(types: !798)
!798 = !{!22, !362, !328}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "poll_instance", scope: !363, file: !336, line: 207, baseType: !800, size: 64, offset: 5376)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DISubroutineType(types: !802)
!802 = !{!22, !354, !328}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "update_internal_links", scope: !363, file: !336, line: 210, baseType: !351, size: 64, offset: 5440)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "initexecfunc", scope: !363, file: !336, line: 213, baseType: !805, size: 64, offset: 5504)
!805 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeInitExecFunction", file: !336, line: 135, baseType: !806)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DISubroutineType(types: !808)
!808 = !{!56, !809, !354, !672}
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecContext", file: !336, line: 62, flags: DIFlagFwdDecl)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "freeexecfunc", scope: !363, file: !336, line: 214, baseType: !812, size: 64, offset: 5568)
!812 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeFreeExecFunction", file: !336, line: 136, baseType: !475)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "execfunc", scope: !363, file: !336, line: 215, baseType: !814, size: 64, offset: 5632)
!814 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeExecFunction", file: !336, line: 137, baseType: !815)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DISubroutineType(types: !817)
!817 = !{null, !56, !22, !354, !818, !820, !820}
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecData", file: !336, line: 63, flags: DIFlagFwdDecl)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "gpufunc", scope: !363, file: !336, line: 217, baseType: !823, size: 64, offset: 5696)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeGPUExecFunction", file: !336, line: 138, baseType: !824)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DISubroutineType(types: !826)
!826 = !{!22, !827, !354, !818, !829, !829}
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUMaterial", file: !336, line: 64, flags: DIFlagFwdDecl)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeStack", file: !831, line: 106, size: 384, elements: !832)
!831 = !DIFile(filename: "blender/source/blender/gpu/GPU_material.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!832 = !{!833, !847, !848, !849, !852, !853, !854}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !830, file: !831, line: 107, baseType: !834, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUType", file: !831, line: 80, baseType: !835)
!835 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "GPUType", file: !831, line: 69, baseType: !676, size: 32, elements: !836)
!836 = !{!837, !838, !839, !840, !841, !842, !843, !844, !845, !846}
!837 = !DIEnumerator(name: "GPU_NONE", value: 0, isUnsigned: true)
!838 = !DIEnumerator(name: "GPU_FLOAT", value: 1, isUnsigned: true)
!839 = !DIEnumerator(name: "GPU_VEC2", value: 2, isUnsigned: true)
!840 = !DIEnumerator(name: "GPU_VEC3", value: 3, isUnsigned: true)
!841 = !DIEnumerator(name: "GPU_VEC4", value: 4, isUnsigned: true)
!842 = !DIEnumerator(name: "GPU_MAT3", value: 9, isUnsigned: true)
!843 = !DIEnumerator(name: "GPU_MAT4", value: 16, isUnsigned: true)
!844 = !DIEnumerator(name: "GPU_TEX2D", value: 1002, isUnsigned: true)
!845 = !DIEnumerator(name: "GPU_SHADOW2D", value: 1003, isUnsigned: true)
!846 = !DIEnumerator(name: "GPU_ATTRIB", value: 3001, isUnsigned: true)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !830, file: !831, line: 108, baseType: !12, size: 64, offset: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !830, file: !831, line: 109, baseType: !513, size: 128, offset: 128)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !830, file: !831, line: 110, baseType: !850, size: 64, offset: 256)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeLink", file: !831, line: 55, flags: DIFlagFwdDecl)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !830, file: !831, line: 111, baseType: !699, size: 8, offset: 320)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !830, file: !831, line: 112, baseType: !699, size: 8, offset: 328)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !830, file: !831, line: 113, baseType: !48, size: 16, offset: 336)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !363, file: !336, line: 220, baseType: !450, size: 256, offset: 5760)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !355, file: !83, line: 173, baseType: !33, size: 512, offset: 320)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !355, file: !83, line: 175, baseType: !33, size: 512, offset: 832)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !355, file: !83, line: 176, baseType: !22, size: 32, offset: 1344)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !355, file: !83, line: 177, baseType: !48, size: 16, offset: 1376)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !355, file: !83, line: 177, baseType: !48, size: 16, offset: 1392)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !355, file: !83, line: 178, baseType: !48, size: 16, offset: 1408)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !355, file: !83, line: 178, baseType: !48, size: 16, offset: 1424)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "lasty", scope: !355, file: !83, line: 179, baseType: !48, size: 16, offset: 1440)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !355, file: !83, line: 179, baseType: !48, size: 16, offset: 1456)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !355, file: !83, line: 180, baseType: !48, size: 16, offset: 1472)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !355, file: !83, line: 181, baseType: !48, size: 16, offset: 1488)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !355, file: !83, line: 182, baseType: !868, size: 96, offset: 1504)
!868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 96, elements: !869)
!869 = !{!870}
!870 = !DISubrange(count: 3)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !355, file: !83, line: 184, baseType: !58, size: 128, offset: 1600)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !355, file: !83, line: 184, baseType: !58, size: 128, offset: 1728)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !355, file: !83, line: 185, baseType: !354, size: 64, offset: 1856)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !355, file: !83, line: 186, baseType: !119, size: 64, offset: 1920)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !355, file: !83, line: 187, baseType: !56, size: 64, offset: 1984)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !355, file: !83, line: 188, baseType: !354, size: 64, offset: 2048)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "internal_links", scope: !355, file: !83, line: 189, baseType: !58, size: 128, offset: 2112)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !355, file: !83, line: 191, baseType: !177, size: 32, offset: 2240)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !355, file: !83, line: 191, baseType: !177, size: 32, offset: 2272)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !355, file: !83, line: 192, baseType: !177, size: 32, offset: 2304)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !355, file: !83, line: 192, baseType: !177, size: 32, offset: 2336)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "miniwidth", scope: !355, file: !83, line: 193, baseType: !177, size: 32, offset: 2368)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !355, file: !83, line: 194, baseType: !177, size: 32, offset: 2400)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !355, file: !83, line: 194, baseType: !177, size: 32, offset: 2432)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !355, file: !83, line: 196, baseType: !22, size: 32, offset: 2464)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !355, file: !83, line: 198, baseType: !33, size: 512, offset: 2496)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "custom1", scope: !355, file: !83, line: 199, baseType: !48, size: 16, offset: 3008)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "custom2", scope: !355, file: !83, line: 199, baseType: !48, size: 16, offset: 3024)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "custom3", scope: !355, file: !83, line: 200, baseType: !177, size: 32, offset: 3040)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "custom4", scope: !355, file: !83, line: 200, baseType: !177, size: 32, offset: 3072)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "need_exec", scope: !355, file: !83, line: 202, baseType: !48, size: 16, offset: 3104)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !355, file: !83, line: 202, baseType: !48, size: 16, offset: 3120)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "threaddata", scope: !355, file: !83, line: 203, baseType: !56, size: 64, offset: 3136)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "totr", scope: !355, file: !83, line: 204, baseType: !549, size: 128, offset: 3200)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "butr", scope: !355, file: !83, line: 205, baseType: !549, size: 128, offset: 3328)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "prvr", scope: !355, file: !83, line: 206, baseType: !549, size: 128, offset: 3456)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "preview_xsize", scope: !355, file: !83, line: 215, baseType: !48, size: 16, offset: 3584)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "preview_ysize", scope: !355, file: !83, line: 215, baseType: !48, size: 16, offset: 3600)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !355, file: !83, line: 216, baseType: !22, size: 32, offset: 3616)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !355, file: !83, line: 217, baseType: !901, size: 64, offset: 3648)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !83, line: 51, flags: DIFlagFwdDecl)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "foreach_nodeclass", scope: !335, file: !336, line: 294, baseType: !904, size: 64, offset: 3264)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{null, !153, !56, !907}
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClassCallback", file: !336, line: 282, baseType: !908)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{null, !56, !22, !12}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !335, file: !336, line: 296, baseType: !912, size: 64, offset: 3328)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{!22, !536, !334}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "get_from_context", scope: !335, file: !336, line: 298, baseType: !916, size: 64, offset: 3392)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{null, !536, !334, !919, !920, !920}
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "localize", scope: !335, file: !336, line: 302, baseType: !922, size: 64, offset: 3456)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DISubroutineType(types: !924)
!924 = !{null, !328, !328}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "local_sync", scope: !335, file: !336, line: 303, baseType: !922, size: 64, offset: 3520)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "local_merge", scope: !335, file: !336, line: 304, baseType: !922, size: 64, offset: 3584)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !335, file: !336, line: 307, baseType: !347, size: 64, offset: 3648)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "validate_link", scope: !335, file: !336, line: 309, baseType: !929, size: 64, offset: 3712)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{!22, !328, !493}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "node_add_init", scope: !335, file: !336, line: 311, baseType: !351, size: 64, offset: 3776)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !335, file: !336, line: 314, baseType: !450, size: 256, offset: 3840)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !329, file: !83, line: 333, baseType: !33, size: 512, offset: 1088)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !329, file: !83, line: 335, baseType: !81, size: 64, offset: 1600)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !329, file: !83, line: 337, baseType: !670, size: 64, offset: 1664)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !329, file: !83, line: 338, baseType: !569, size: 64, offset: 1728)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !329, file: !83, line: 340, baseType: !58, size: 128, offset: 1792)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !329, file: !83, line: 340, baseType: !58, size: 128, offset: 1920)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !329, file: !83, line: 342, baseType: !22, size: 32, offset: 2048)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !329, file: !83, line: 342, baseType: !22, size: 32, offset: 2080)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !329, file: !83, line: 343, baseType: !22, size: 32, offset: 2112)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !329, file: !83, line: 345, baseType: !22, size: 32, offset: 2144)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !329, file: !83, line: 346, baseType: !22, size: 32, offset: 2176)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !329, file: !83, line: 347, baseType: !48, size: 16, offset: 2208)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !329, file: !83, line: 348, baseType: !48, size: 16, offset: 2224)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !329, file: !83, line: 349, baseType: !22, size: 32, offset: 2240)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !329, file: !83, line: 351, baseType: !22, size: 32, offset: 2272)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !329, file: !83, line: 353, baseType: !48, size: 16, offset: 2304)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !329, file: !83, line: 354, baseType: !48, size: 16, offset: 2320)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !329, file: !83, line: 355, baseType: !22, size: 32, offset: 2336)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !329, file: !83, line: 357, baseType: !549, size: 128, offset: 2368)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !329, file: !83, line: 363, baseType: !58, size: 128, offset: 2496)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !329, file: !83, line: 363, baseType: !58, size: 128, offset: 2624)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !329, file: !83, line: 368, baseType: !956, size: 64, offset: 2752)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !336, line: 500, size: 64, elements: !958)
!958 = !{!959}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !957, file: !336, line: 502, baseType: !960, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !962, line: 48, baseType: !963)
!962 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!963 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !964, line: 47, flags: DIFlagFwdDecl)
!964 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!965 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !329, file: !83, line: 372, baseType: !672, size: 32, offset: 2816)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !329, file: !83, line: 373, baseType: !22, size: 32, offset: 2848)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !329, file: !83, line: 382, baseType: !968, size: 64, offset: 2880)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !83, line: 46, flags: DIFlagFwdDecl)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !329, file: !83, line: 385, baseType: !971, size: 64, offset: 2944)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{null, !56, !177}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !329, file: !83, line: 386, baseType: !975, size: 64, offset: 3008)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{null, !56, !621}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !329, file: !83, line: 387, baseType: !979, size: 64, offset: 3072)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DISubroutineType(types: !981)
!981 = !{!22, !56}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !329, file: !83, line: 388, baseType: !475, size: 64, offset: 3136)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !329, file: !83, line: 389, baseType: !56, size: 64, offset: 3200)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !329, file: !83, line: 389, baseType: !56, size: 64, offset: 3264)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !329, file: !83, line: 389, baseType: !56, size: 64, offset: 3328)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !329, file: !83, line: 389, baseType: !56, size: 64, offset: 3392)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !256, file: !161, line: 249, baseType: !242, size: 64, offset: 2752)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !256, file: !161, line: 250, baseType: !989, size: 64, offset: 2816)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !311, line: 77, size: 15424, elements: !991)
!991 = !{!992, !993, !994, !997, !1000, !1003, !1270, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1307, !1308, !1312}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !990, file: !311, line: 78, baseType: !113, size: 960)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !990, file: !311, line: 80, baseType: !131, size: 8192, offset: 960)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !990, file: !311, line: 82, baseType: !995, size: 64, offset: 9152)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !311, line: 43, flags: DIFlagFwdDecl)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !990, file: !311, line: 83, baseType: !998, size: 64, offset: 9216)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !39, line: 46, flags: DIFlagFwdDecl)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !990, file: !311, line: 86, baseType: !1001, size: 64, offset: 9280)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !311, line: 41, flags: DIFlagFwdDecl)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !990, file: !311, line: 87, baseType: !1004, size: 64, offset: 9344)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1006, line: 110, size: 1152, elements: !1007)
!1006 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_pipeline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1007 = !{!1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1023, !1266, !1267, !1268, !1269}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1005, file: !1006, line: 111, baseType: !1004, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1005, file: !1006, line: 111, baseType: !1004, size: 64, offset: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !1005, file: !1006, line: 114, baseType: !22, size: 32, offset: 128)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !1005, file: !1006, line: 114, baseType: !22, size: 32, offset: 160)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1005, file: !1006, line: 115, baseType: !48, size: 16, offset: 192)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "sample_nr", scope: !1005, file: !1006, line: 115, baseType: !48, size: 16, offset: 208)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "rect32", scope: !1005, file: !1006, line: 118, baseType: !716, size: 64, offset: 256)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !1005, file: !1006, line: 120, baseType: !239, size: 64, offset: 320)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !1005, file: !1006, line: 122, baseType: !239, size: 64, offset: 384)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "tilerect", scope: !1005, file: !1006, line: 125, baseType: !559, size: 128, offset: 448)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !1005, file: !1006, line: 127, baseType: !22, size: 32, offset: 576)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !1005, file: !1006, line: 127, baseType: !22, size: 32, offset: 608)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1005, file: !1006, line: 130, baseType: !58, size: 128, offset: 640)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "renrect", scope: !1005, file: !1006, line: 133, baseType: !1022, size: 128, offset: 768)
!1022 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !559)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "renlay", scope: !1005, file: !1006, line: 134, baseType: !1024, size: 64, offset: 896)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1026)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderLayer", file: !1006, line: 108, baseType: !1027)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderLayer", file: !1006, line: 85, size: 1600, elements: !1028)
!1028 = !{!1029, !1031, !1032, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1027, file: !1006, line: 86, baseType: !1030, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1027, file: !1006, line: 86, baseType: !1030, size: 64, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1027, file: !1006, line: 89, baseType: !1033, size: 592, offset: 128)
!1033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 592, elements: !1034)
!1034 = !{!1035}
!1035 = !DISubrange(count: 74)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1027, file: !1006, line: 90, baseType: !676, size: 32, offset: 736)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !1027, file: !1006, line: 90, baseType: !676, size: 32, offset: 768)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !1027, file: !1006, line: 90, baseType: !676, size: 32, offset: 800)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !1027, file: !1006, line: 91, baseType: !22, size: 32, offset: 832)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !1027, file: !1006, line: 91, baseType: !22, size: 32, offset: 864)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !1027, file: !1006, line: 91, baseType: !22, size: 32, offset: 896)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !1027, file: !1006, line: 93, baseType: !1043, size: 64, offset: 960)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !1045, line: 93, size: 7552, elements: !1046)
!1045 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1046 = !{!1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1095, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1206, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1248, !1256}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1044, file: !1045, line: 94, baseType: !113, size: 960)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1044, file: !1045, line: 95, baseType: !159, size: 64, offset: 960)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !1044, file: !1045, line: 97, baseType: !48, size: 16, offset: 1024)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1044, file: !1045, line: 97, baseType: !48, size: 16, offset: 1040)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1044, file: !1045, line: 99, baseType: !177, size: 32, offset: 1056)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1044, file: !1045, line: 99, baseType: !177, size: 32, offset: 1088)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1044, file: !1045, line: 99, baseType: !177, size: 32, offset: 1120)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !1044, file: !1045, line: 100, baseType: !177, size: 32, offset: 1152)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !1044, file: !1045, line: 100, baseType: !177, size: 32, offset: 1184)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !1044, file: !1045, line: 100, baseType: !177, size: 32, offset: 1216)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !1044, file: !1045, line: 101, baseType: !177, size: 32, offset: 1248)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !1044, file: !1045, line: 101, baseType: !177, size: 32, offset: 1280)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !1044, file: !1045, line: 101, baseType: !177, size: 32, offset: 1312)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !1044, file: !1045, line: 102, baseType: !177, size: 32, offset: 1344)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !1044, file: !1045, line: 102, baseType: !177, size: 32, offset: 1376)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !1044, file: !1045, line: 102, baseType: !177, size: 32, offset: 1408)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !1044, file: !1045, line: 103, baseType: !177, size: 32, offset: 1440)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !1044, file: !1045, line: 103, baseType: !177, size: 32, offset: 1472)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !1044, file: !1045, line: 103, baseType: !177, size: 32, offset: 1504)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !1044, file: !1045, line: 103, baseType: !177, size: 32, offset: 1536)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !1044, file: !1045, line: 103, baseType: !177, size: 32, offset: 1568)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1044, file: !1045, line: 104, baseType: !177, size: 32, offset: 1600)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1044, file: !1045, line: 104, baseType: !177, size: 32, offset: 1632)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !1044, file: !1045, line: 104, baseType: !177, size: 32, offset: 1664)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !1044, file: !1045, line: 104, baseType: !177, size: 32, offset: 1696)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !1044, file: !1045, line: 104, baseType: !177, size: 32, offset: 1728)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !1044, file: !1045, line: 105, baseType: !177, size: 32, offset: 1760)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !1044, file: !1045, line: 108, baseType: !1075, size: 704, offset: 1792)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !1045, line: 53, size: 704, elements: !1076)
!1076 = !{!1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !1075, file: !1045, line: 54, baseType: !177, size: 32)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !1075, file: !1045, line: 55, baseType: !177, size: 32, offset: 32)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !1075, file: !1045, line: 56, baseType: !177, size: 32, offset: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !1075, file: !1045, line: 57, baseType: !177, size: 32, offset: 96)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !1075, file: !1045, line: 59, baseType: !868, size: 96, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !1075, file: !1045, line: 60, baseType: !868, size: 96, offset: 224)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !1075, file: !1045, line: 61, baseType: !868, size: 96, offset: 320)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !1075, file: !1045, line: 63, baseType: !177, size: 32, offset: 416)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !1075, file: !1045, line: 64, baseType: !177, size: 32, offset: 448)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !1075, file: !1045, line: 65, baseType: !177, size: 32, offset: 480)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !1075, file: !1045, line: 67, baseType: !48, size: 16, offset: 512)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !1075, file: !1045, line: 68, baseType: !48, size: 16, offset: 528)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !1075, file: !1045, line: 69, baseType: !48, size: 16, offset: 544)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !1075, file: !1045, line: 70, baseType: !48, size: 16, offset: 560)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !1075, file: !1045, line: 72, baseType: !177, size: 32, offset: 576)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !1075, file: !1045, line: 73, baseType: !177, size: 32, offset: 608)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !1075, file: !1045, line: 74, baseType: !177, size: 32, offset: 640)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !1075, file: !1045, line: 75, baseType: !177, size: 32, offset: 672)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !1044, file: !1045, line: 109, baseType: !1096, size: 128, offset: 2496)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !1045, line: 79, size: 128, elements: !1097)
!1097 = !{!1098, !1099, !1100, !1101}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1096, file: !1045, line: 80, baseType: !22, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !1096, file: !1045, line: 81, baseType: !22, size: 32, offset: 32)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !1096, file: !1045, line: 82, baseType: !22, size: 32, offset: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1096, file: !1045, line: 83, baseType: !22, size: 32, offset: 96)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !1044, file: !1045, line: 111, baseType: !177, size: 32, offset: 2624)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !1044, file: !1045, line: 111, baseType: !177, size: 32, offset: 2656)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !1044, file: !1045, line: 112, baseType: !177, size: 32, offset: 2688)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !1044, file: !1045, line: 112, baseType: !177, size: 32, offset: 2720)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1044, file: !1045, line: 113, baseType: !177, size: 32, offset: 2752)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !1044, file: !1045, line: 114, baseType: !177, size: 32, offset: 2784)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !1044, file: !1045, line: 114, baseType: !177, size: 32, offset: 2816)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !1044, file: !1045, line: 115, baseType: !48, size: 16, offset: 2848)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !1044, file: !1045, line: 115, baseType: !48, size: 16, offset: 2864)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !1044, file: !1045, line: 116, baseType: !48, size: 16, offset: 2880)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !1044, file: !1045, line: 117, baseType: !14, size: 8, offset: 2896)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !1044, file: !1045, line: 117, baseType: !14, size: 8, offset: 2904)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !1044, file: !1045, line: 119, baseType: !177, size: 32, offset: 2912)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !1044, file: !1045, line: 119, baseType: !177, size: 32, offset: 2944)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !1044, file: !1045, line: 120, baseType: !48, size: 16, offset: 2976)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !1044, file: !1045, line: 120, baseType: !48, size: 16, offset: 2992)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !1044, file: !1045, line: 121, baseType: !177, size: 32, offset: 3008)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !1044, file: !1045, line: 121, baseType: !177, size: 32, offset: 3040)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !1044, file: !1045, line: 122, baseType: !177, size: 32, offset: 3072)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !1044, file: !1045, line: 123, baseType: !177, size: 32, offset: 3104)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !1044, file: !1045, line: 124, baseType: !48, size: 16, offset: 3136)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !1044, file: !1045, line: 125, baseType: !48, size: 16, offset: 3152)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1044, file: !1045, line: 127, baseType: !22, size: 32, offset: 3168)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !1044, file: !1045, line: 127, baseType: !22, size: 32, offset: 3200)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !1044, file: !1045, line: 128, baseType: !22, size: 32, offset: 3232)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !1044, file: !1045, line: 128, baseType: !22, size: 32, offset: 3264)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !1044, file: !1045, line: 129, baseType: !48, size: 16, offset: 3296)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !1044, file: !1045, line: 129, baseType: !48, size: 16, offset: 3312)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !1044, file: !1045, line: 129, baseType: !48, size: 16, offset: 3328)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !1044, file: !1045, line: 129, baseType: !48, size: 16, offset: 3344)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !1044, file: !1045, line: 130, baseType: !177, size: 32, offset: 3360)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !1044, file: !1045, line: 130, baseType: !177, size: 32, offset: 3392)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !1044, file: !1045, line: 130, baseType: !177, size: 32, offset: 3424)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !1044, file: !1045, line: 130, baseType: !177, size: 32, offset: 3456)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !1044, file: !1045, line: 131, baseType: !177, size: 32, offset: 3488)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !1044, file: !1045, line: 131, baseType: !177, size: 32, offset: 3520)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !1044, file: !1045, line: 131, baseType: !177, size: 32, offset: 3552)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !1044, file: !1045, line: 131, baseType: !177, size: 32, offset: 3584)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !1044, file: !1045, line: 132, baseType: !177, size: 32, offset: 3616)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !1044, file: !1045, line: 132, baseType: !177, size: 32, offset: 3648)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !1044, file: !1045, line: 133, baseType: !33, size: 512, offset: 3680)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !1044, file: !1045, line: 135, baseType: !177, size: 32, offset: 4192)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !1044, file: !1045, line: 136, baseType: !177, size: 32, offset: 4224)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !1044, file: !1045, line: 137, baseType: !177, size: 32, offset: 4256)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !1044, file: !1045, line: 138, baseType: !22, size: 32, offset: 4288)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !1044, file: !1045, line: 141, baseType: !14, size: 8, offset: 4320)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !1044, file: !1045, line: 141, baseType: !14, size: 8, offset: 4328)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !1044, file: !1045, line: 141, baseType: !14, size: 8, offset: 4336)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1044, file: !1045, line: 141, baseType: !14, size: 8, offset: 4344)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !1044, file: !1045, line: 142, baseType: !48, size: 16, offset: 4352)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !1044, file: !1045, line: 142, baseType: !48, size: 16, offset: 4368)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !1044, file: !1045, line: 142, baseType: !48, size: 16, offset: 4384)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !1044, file: !1045, line: 145, baseType: !14, size: 8, offset: 4400)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1044, file: !1045, line: 145, baseType: !14, size: 8, offset: 4408)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !1044, file: !1045, line: 148, baseType: !48, size: 16, offset: 4416)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !1044, file: !1045, line: 148, baseType: !48, size: 16, offset: 4432)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !1044, file: !1045, line: 149, baseType: !177, size: 32, offset: 4448)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !1044, file: !1045, line: 149, baseType: !177, size: 32, offset: 4480)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1044, file: !1045, line: 152, baseType: !513, size: 128, offset: 4512)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !1044, file: !1045, line: 153, baseType: !177, size: 32, offset: 4640)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !1044, file: !1045, line: 154, baseType: !177, size: 32, offset: 4672)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !1044, file: !1045, line: 157, baseType: !48, size: 16, offset: 4704)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !1044, file: !1045, line: 157, baseType: !48, size: 16, offset: 4720)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !1044, file: !1045, line: 160, baseType: !1166, size: 64, offset: 4736)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !161, line: 113, size: 6208, elements: !1168)
!1168 = !{!1169, !1170, !1171, !1172, !1173, !1174, !1178}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1167, file: !161, line: 114, baseType: !48, size: 16)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1167, file: !161, line: 114, baseType: !48, size: 16, offset: 16)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !1167, file: !161, line: 115, baseType: !14, size: 8, offset: 32)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !1167, file: !161, line: 115, baseType: !14, size: 8, offset: 40)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !1167, file: !161, line: 116, baseType: !14, size: 8, offset: 48)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1167, file: !161, line: 117, baseType: !1175, size: 8, offset: 56)
!1175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8, elements: !1176)
!1176 = !{!1177}
!1177 = !DISubrange(count: 1)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1167, file: !161, line: 119, baseType: !1179, size: 6144, offset: 64)
!1179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1180, size: 6144, elements: !1189)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !161, line: 109, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !161, line: 106, size: 192, elements: !1182)
!1182 = !{!1183, !1184, !1185, !1186, !1187, !1188}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1181, file: !161, line: 107, baseType: !177, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1181, file: !161, line: 107, baseType: !177, size: 32, offset: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1181, file: !161, line: 107, baseType: !177, size: 32, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1181, file: !161, line: 107, baseType: !177, size: 32, offset: 96)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1181, file: !161, line: 107, baseType: !177, size: 32, offset: 128)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1181, file: !161, line: 108, baseType: !22, size: 32, offset: 160)
!1189 = !{!1190}
!1190 = !DISubrange(count: 32)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !1044, file: !1045, line: 161, baseType: !1166, size: 64, offset: 4800)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !1044, file: !1045, line: 162, baseType: !14, size: 8, offset: 4864)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !1044, file: !1045, line: 162, baseType: !14, size: 8, offset: 4872)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !1044, file: !1045, line: 163, baseType: !14, size: 8, offset: 4880)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !1044, file: !1045, line: 163, baseType: !14, size: 8, offset: 4888)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !1044, file: !1045, line: 164, baseType: !48, size: 16, offset: 4896)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1044, file: !1045, line: 164, baseType: !48, size: 16, offset: 4912)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !1044, file: !1045, line: 165, baseType: !177, size: 32, offset: 4928)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !1044, file: !1045, line: 165, baseType: !177, size: 32, offset: 4960)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !1044, file: !1045, line: 167, baseType: !245, size: 1152, offset: 4992)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1044, file: !1045, line: 168, baseType: !328, size: 64, offset: 6144)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1044, file: !1045, line: 169, baseType: !242, size: 64, offset: 6208)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1044, file: !1045, line: 170, baseType: !1204, size: 64, offset: 6272)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!1205 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !964, line: 46, flags: DIFlagFwdDecl)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1044, file: !1045, line: 171, baseType: !1207, size: 64, offset: 6336)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !39, line: 159, size: 448, elements: !1209)
!1209 = !{!1210, !1212, !1213, !1214, !1215, !1217}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1208, file: !39, line: 161, baseType: !1211, size: 64)
!1211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !676, size: 64, elements: !527)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1208, file: !39, line: 162, baseType: !1211, size: 64, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1208, file: !39, line: 163, baseType: !526, size: 32, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1208, file: !39, line: 164, baseType: !526, size: 32, offset: 160)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1208, file: !39, line: 165, baseType: !1216, size: 128, offset: 192)
!1216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !704, size: 128, elements: !527)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1208, file: !39, line: 166, baseType: !1218, size: 128, offset: 320)
!1218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !998, size: 128, elements: !527)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !1044, file: !1045, line: 174, baseType: !177, size: 32, offset: 6400)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !1044, file: !1045, line: 174, baseType: !177, size: 32, offset: 6432)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !1044, file: !1045, line: 174, baseType: !177, size: 32, offset: 6464)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !1044, file: !1045, line: 175, baseType: !177, size: 32, offset: 6496)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !1044, file: !1045, line: 175, baseType: !177, size: 32, offset: 6528)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !1044, file: !1045, line: 176, baseType: !48, size: 16, offset: 6560)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1044, file: !1045, line: 176, baseType: !48, size: 16, offset: 6576)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !1044, file: !1045, line: 179, baseType: !868, size: 96, offset: 6592)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !1044, file: !1045, line: 179, baseType: !868, size: 96, offset: 6688)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !1044, file: !1045, line: 180, baseType: !177, size: 32, offset: 6784)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !1044, file: !1045, line: 180, baseType: !177, size: 32, offset: 6816)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !1044, file: !1045, line: 180, baseType: !177, size: 32, offset: 6848)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !1044, file: !1045, line: 181, baseType: !177, size: 32, offset: 6880)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !1044, file: !1045, line: 181, baseType: !177, size: 32, offset: 6912)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !1044, file: !1045, line: 182, baseType: !177, size: 32, offset: 6944)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !1044, file: !1045, line: 182, baseType: !177, size: 32, offset: 6976)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !1044, file: !1045, line: 183, baseType: !48, size: 16, offset: 7008)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !1044, file: !1045, line: 183, baseType: !48, size: 16, offset: 7024)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !1044, file: !1045, line: 185, baseType: !22, size: 32, offset: 7040)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !1044, file: !1045, line: 186, baseType: !48, size: 16, offset: 7072)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1044, file: !1045, line: 187, baseType: !48, size: 16, offset: 7088)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !1044, file: !1045, line: 190, baseType: !513, size: 128, offset: 7104)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !1044, file: !1045, line: 191, baseType: !48, size: 16, offset: 7232)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !1044, file: !1045, line: 192, baseType: !48, size: 16, offset: 7248)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !1044, file: !1045, line: 195, baseType: !48, size: 16, offset: 7264)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !1044, file: !1045, line: 196, baseType: !48, size: 16, offset: 7280)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !1044, file: !1045, line: 197, baseType: !48, size: 16, offset: 7296)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1044, file: !1045, line: 198, baseType: !1247, size: 48, offset: 7312)
!1247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 48, elements: !869)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !1044, file: !1045, line: 200, baseType: !1249, size: 64, offset: 7360)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !1045, line: 86, size: 192, elements: !1251)
!1251 = !{!1252, !1253, !1254, !1255}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1250, file: !1045, line: 87, baseType: !989, size: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1250, file: !1045, line: 88, baseType: !621, size: 64, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1250, file: !1045, line: 89, baseType: !22, size: 32, offset: 128)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1250, file: !1045, line: 90, baseType: !22, size: 32, offset: 160)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !1044, file: !1045, line: 202, baseType: !58, size: 128, offset: 7424)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !1027, file: !1006, line: 94, baseType: !1204, size: 64, offset: 1024)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !1027, file: !1006, line: 96, baseType: !239, size: 64, offset: 1088)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "acolrect", scope: !1027, file: !1006, line: 97, baseType: !239, size: 64, offset: 1152)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "scolrect", scope: !1027, file: !1006, line: 98, baseType: !239, size: 64, offset: 1216)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer", scope: !1027, file: !1006, line: 99, baseType: !716, size: 64, offset: 1280)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !1027, file: !1006, line: 101, baseType: !22, size: 32, offset: 1344)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !1027, file: !1006, line: 101, baseType: !22, size: 32, offset: 1376)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "exrhandle", scope: !1027, file: !1006, line: 104, baseType: !56, size: 64, offset: 1408)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "passes", scope: !1027, file: !1006, line: 106, baseType: !58, size: 128, offset: 1472)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "do_exr_tile", scope: !1005, file: !1006, line: 137, baseType: !22, size: 32, offset: 960)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1005, file: !1006, line: 140, baseType: !22, size: 32, offset: 992)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "have_combined", scope: !1005, file: !1006, line: 143, baseType: !22, size: 32, offset: 1024)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1005, file: !1006, line: 146, baseType: !621, size: 64, offset: 1088)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !990, file: !311, line: 89, baseType: !1271, size: 512, offset: 9408)
!1271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1004, size: 512, elements: !640)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !990, file: !311, line: 90, baseType: !48, size: 16, offset: 9920)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !990, file: !311, line: 90, baseType: !48, size: 16, offset: 9936)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !990, file: !311, line: 92, baseType: !48, size: 16, offset: 9952)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !990, file: !311, line: 92, baseType: !48, size: 16, offset: 9968)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !990, file: !311, line: 93, baseType: !48, size: 16, offset: 9984)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !990, file: !311, line: 93, baseType: !48, size: 16, offset: 10000)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !990, file: !311, line: 94, baseType: !22, size: 32, offset: 10016)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !990, file: !311, line: 97, baseType: !48, size: 16, offset: 10048)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !990, file: !311, line: 97, baseType: !48, size: 16, offset: 10064)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !990, file: !311, line: 98, baseType: !48, size: 16, offset: 10080)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !990, file: !311, line: 98, baseType: !48, size: 16, offset: 10096)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !990, file: !311, line: 99, baseType: !48, size: 16, offset: 10112)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !990, file: !311, line: 99, baseType: !48, size: 16, offset: 10128)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !990, file: !311, line: 100, baseType: !676, size: 32, offset: 10144)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !990, file: !311, line: 101, baseType: !704, size: 64, offset: 10176)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !990, file: !311, line: 103, baseType: !137, size: 64, offset: 10240)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !990, file: !311, line: 104, baseType: !1207, size: 64, offset: 10304)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !990, file: !311, line: 107, baseType: !177, size: 32, offset: 10368)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !990, file: !311, line: 108, baseType: !22, size: 32, offset: 10400)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !990, file: !311, line: 109, baseType: !48, size: 16, offset: 10432)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !990, file: !311, line: 110, baseType: !48, size: 16, offset: 10448)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !990, file: !311, line: 113, baseType: !22, size: 32, offset: 10464)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !990, file: !311, line: 113, baseType: !22, size: 32, offset: 10496)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !990, file: !311, line: 114, baseType: !14, size: 8, offset: 10528)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !990, file: !311, line: 114, baseType: !14, size: 8, offset: 10536)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !990, file: !311, line: 115, baseType: !48, size: 16, offset: 10544)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !990, file: !311, line: 116, baseType: !513, size: 128, offset: 10560)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !990, file: !311, line: 119, baseType: !177, size: 32, offset: 10688)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !990, file: !311, line: 119, baseType: !177, size: 32, offset: 10720)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !990, file: !311, line: 122, baseType: !1302, size: 512, offset: 10752)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1303, line: 182, baseType: !1304)
!1303 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1303, line: 180, size: 512, elements: !1305)
!1305 = !{!1306}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1304, file: !1303, line: 181, baseType: !33, size: 512)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !990, file: !311, line: 123, baseType: !14, size: 8, offset: 11264)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !990, file: !311, line: 125, baseType: !1309, size: 56, offset: 11272)
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 56, elements: !1310)
!1310 = !{!1311}
!1311 = !DISubrange(count: 7)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !990, file: !311, line: 126, baseType: !1313, size: 4096, offset: 11328)
!1313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1314, size: 4096, elements: !640)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !311, line: 69, baseType: !1315)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !311, line: 67, size: 512, elements: !1316)
!1316 = !{!1317}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1315, file: !311, line: 68, baseType: !33, size: 512)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !256, file: !161, line: 251, baseType: !1166, size: 64, offset: 2880)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !256, file: !161, line: 252, baseType: !1320, size: 64, offset: 2944)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !161, line: 122, size: 1600, elements: !1322)
!1322 = !{!1323, !1324, !1325, !1329, !1332, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1321, file: !161, line: 123, baseType: !163, size: 64)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1321, file: !161, line: 124, baseType: !989, size: 64, offset: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1321, file: !161, line: 125, baseType: !1326, size: 384, offset: 128)
!1326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 384, elements: !1327)
!1327 = !{!1328}
!1328 = !DISubrange(count: 6)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1321, file: !161, line: 126, baseType: !1330, size: 512, offset: 512)
!1330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 512, elements: !1331)
!1331 = !{!515, !515}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1321, file: !161, line: 127, baseType: !1333, size: 288, offset: 1024)
!1333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 288, elements: !1334)
!1334 = !{!870, !870}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1321, file: !161, line: 128, baseType: !48, size: 16, offset: 1312)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1321, file: !161, line: 128, baseType: !48, size: 16, offset: 1328)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1321, file: !161, line: 129, baseType: !177, size: 32, offset: 1344)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1321, file: !161, line: 129, baseType: !177, size: 32, offset: 1376)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1321, file: !161, line: 130, baseType: !177, size: 32, offset: 1408)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1321, file: !161, line: 131, baseType: !676, size: 32, offset: 1440)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1321, file: !161, line: 132, baseType: !48, size: 16, offset: 1472)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1321, file: !161, line: 132, baseType: !48, size: 16, offset: 1488)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1321, file: !161, line: 133, baseType: !22, size: 32, offset: 1504)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1321, file: !161, line: 133, baseType: !22, size: 32, offset: 1536)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1321, file: !161, line: 134, baseType: !48, size: 16, offset: 1568)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1321, file: !161, line: 134, baseType: !48, size: 16, offset: 1584)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !256, file: !161, line: 253, baseType: !1207, size: 64, offset: 3008)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !256, file: !161, line: 254, baseType: !1349, size: 64, offset: 3072)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !161, line: 137, size: 832, elements: !1351)
!1351 = !{!1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1350, file: !161, line: 138, baseType: !48, size: 16)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1350, file: !161, line: 140, baseType: !48, size: 16, offset: 16)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1350, file: !161, line: 141, baseType: !177, size: 32, offset: 32)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1350, file: !161, line: 142, baseType: !177, size: 32, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1350, file: !161, line: 143, baseType: !48, size: 16, offset: 96)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1350, file: !161, line: 144, baseType: !48, size: 16, offset: 112)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1350, file: !161, line: 145, baseType: !22, size: 32, offset: 128)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1350, file: !161, line: 147, baseType: !22, size: 32, offset: 160)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1350, file: !161, line: 149, baseType: !163, size: 64, offset: 192)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1350, file: !161, line: 150, baseType: !22, size: 32, offset: 256)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1350, file: !161, line: 151, baseType: !48, size: 16, offset: 288)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1350, file: !161, line: 152, baseType: !48, size: 16, offset: 304)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1350, file: !161, line: 154, baseType: !56, size: 64, offset: 320)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1350, file: !161, line: 155, baseType: !239, size: 64, offset: 384)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1350, file: !161, line: 157, baseType: !177, size: 32, offset: 448)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1350, file: !161, line: 158, baseType: !48, size: 16, offset: 480)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1350, file: !161, line: 159, baseType: !48, size: 16, offset: 496)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1350, file: !161, line: 160, baseType: !48, size: 16, offset: 512)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1350, file: !161, line: 161, baseType: !1247, size: 48, offset: 528)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1350, file: !161, line: 162, baseType: !177, size: 32, offset: 576)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1350, file: !161, line: 164, baseType: !177, size: 32, offset: 608)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1350, file: !161, line: 164, baseType: !177, size: 32, offset: 640)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1350, file: !161, line: 164, baseType: !177, size: 32, offset: 672)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1350, file: !161, line: 165, baseType: !1166, size: 64, offset: 704)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1350, file: !161, line: 167, baseType: !1377, size: 64, offset: 768)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1303, line: 72, size: 3072, elements: !1379)
!1379 = !{!1380, !1381, !1382, !1383, !1384, !1385, !1386, !1411, !1412, !1413, !1414}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1378, file: !1303, line: 73, baseType: !22, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1378, file: !1303, line: 73, baseType: !22, size: 32, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1378, file: !1303, line: 74, baseType: !22, size: 32, offset: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1378, file: !1303, line: 75, baseType: !22, size: 32, offset: 96)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1378, file: !1303, line: 77, baseType: !549, size: 128, offset: 128)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1378, file: !1303, line: 77, baseType: !549, size: 128, offset: 256)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1378, file: !1303, line: 79, baseType: !1387, size: 2304, offset: 384)
!1387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1388, size: 2304, elements: !514)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1303, line: 67, baseType: !1389)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1303, line: 55, size: 576, elements: !1390)
!1390 = !{!1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1407, !1408, !1409, !1410}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1389, file: !1303, line: 56, baseType: !48, size: 16)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1389, file: !1303, line: 56, baseType: !48, size: 16, offset: 16)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1389, file: !1303, line: 58, baseType: !177, size: 32, offset: 32)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1389, file: !1303, line: 59, baseType: !177, size: 32, offset: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1389, file: !1303, line: 59, baseType: !177, size: 32, offset: 96)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1389, file: !1303, line: 60, baseType: !569, size: 64, offset: 128)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1389, file: !1303, line: 60, baseType: !569, size: 64, offset: 192)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1389, file: !1303, line: 61, baseType: !1399, size: 64, offset: 256)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1303, line: 47, baseType: !1401)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1303, line: 44, size: 96, elements: !1402)
!1402 = !{!1403, !1404, !1405, !1406}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1401, file: !1303, line: 45, baseType: !177, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1401, file: !1303, line: 45, baseType: !177, size: 32, offset: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1401, file: !1303, line: 46, baseType: !48, size: 16, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1401, file: !1303, line: 46, baseType: !48, size: 16, offset: 80)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1389, file: !1303, line: 62, baseType: !1399, size: 64, offset: 320)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1389, file: !1303, line: 64, baseType: !1399, size: 64, offset: 384)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1389, file: !1303, line: 65, baseType: !569, size: 64, offset: 448)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1389, file: !1303, line: 66, baseType: !569, size: 64, offset: 512)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1378, file: !1303, line: 80, baseType: !868, size: 96, offset: 2688)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1378, file: !1303, line: 80, baseType: !868, size: 96, offset: 2784)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1378, file: !1303, line: 81, baseType: !868, size: 96, offset: 2880)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1378, file: !1303, line: 83, baseType: !868, size: 96, offset: 2976)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !256, file: !161, line: 255, baseType: !1416, size: 64, offset: 3136)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !161, line: 170, size: 8704, elements: !1418)
!1418 = !{!1419, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1417, file: !161, line: 171, baseType: !1420, size: 96)
!1420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 96, elements: !869)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1417, file: !161, line: 172, baseType: !22, size: 32, offset: 96)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1417, file: !161, line: 173, baseType: !48, size: 16, offset: 128)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1417, file: !161, line: 174, baseType: !48, size: 16, offset: 144)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1417, file: !161, line: 175, baseType: !48, size: 16, offset: 160)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1417, file: !161, line: 176, baseType: !48, size: 16, offset: 176)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1417, file: !161, line: 177, baseType: !48, size: 16, offset: 192)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1417, file: !161, line: 178, baseType: !48, size: 16, offset: 208)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1417, file: !161, line: 179, baseType: !22, size: 32, offset: 224)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1417, file: !161, line: 181, baseType: !163, size: 64, offset: 256)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1417, file: !161, line: 182, baseType: !177, size: 32, offset: 320)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1417, file: !161, line: 183, baseType: !22, size: 32, offset: 352)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1417, file: !161, line: 184, baseType: !131, size: 8192, offset: 384)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1417, file: !161, line: 187, baseType: !239, size: 64, offset: 8576)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1417, file: !161, line: 188, baseType: !22, size: 32, offset: 8640)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1417, file: !161, line: 189, baseType: !22, size: 32, offset: 8672)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !256, file: !161, line: 256, baseType: !1437, size: 64, offset: 3200)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !161, line: 193, size: 640, elements: !1439)
!1439 = !{!1440, !1441, !1442, !1443}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1438, file: !161, line: 194, baseType: !163, size: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1438, file: !161, line: 195, baseType: !33, size: 512, offset: 64)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1438, file: !161, line: 197, baseType: !22, size: 32, offset: 576)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1438, file: !161, line: 198, baseType: !22, size: 32, offset: 608)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !256, file: !161, line: 258, baseType: !14, size: 8, offset: 3264)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !256, file: !161, line: 259, baseType: !1309, size: 56, offset: 3272)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !247, file: !161, line: 62, baseType: !33, size: 512, offset: 192)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !247, file: !161, line: 64, baseType: !14, size: 8, offset: 704)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !247, file: !161, line: 64, baseType: !14, size: 8, offset: 712)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !247, file: !161, line: 64, baseType: !14, size: 8, offset: 720)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !247, file: !161, line: 64, baseType: !14, size: 8, offset: 728)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !247, file: !161, line: 65, baseType: !868, size: 96, offset: 736)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !247, file: !161, line: 65, baseType: !868, size: 96, offset: 832)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !247, file: !161, line: 65, baseType: !177, size: 32, offset: 928)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !247, file: !161, line: 67, baseType: !48, size: 16, offset: 960)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !247, file: !161, line: 67, baseType: !48, size: 16, offset: 976)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !247, file: !161, line: 67, baseType: !48, size: 16, offset: 992)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !247, file: !161, line: 67, baseType: !48, size: 16, offset: 1008)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !247, file: !161, line: 68, baseType: !48, size: 16, offset: 1024)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !247, file: !161, line: 68, baseType: !48, size: 16, offset: 1040)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !247, file: !161, line: 69, baseType: !14, size: 8, offset: 1056)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !247, file: !161, line: 69, baseType: !1309, size: 56, offset: 1064)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !247, file: !161, line: 70, baseType: !177, size: 32, offset: 1120)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !247, file: !161, line: 70, baseType: !177, size: 32, offset: 1152)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !247, file: !161, line: 70, baseType: !177, size: 32, offset: 1184)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !247, file: !161, line: 70, baseType: !177, size: 32, offset: 1216)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !247, file: !161, line: 71, baseType: !177, size: 32, offset: 1248)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !247, file: !161, line: 71, baseType: !177, size: 32, offset: 1280)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !247, file: !161, line: 74, baseType: !177, size: 32, offset: 1312)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !247, file: !161, line: 74, baseType: !177, size: 32, offset: 1344)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !247, file: !161, line: 77, baseType: !177, size: 32, offset: 1376)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !247, file: !161, line: 77, baseType: !177, size: 32, offset: 1408)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !247, file: !161, line: 77, baseType: !177, size: 32, offset: 1440)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !247, file: !161, line: 78, baseType: !177, size: 32, offset: 1472)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !247, file: !161, line: 78, baseType: !177, size: 32, offset: 1504)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !247, file: !161, line: 78, baseType: !177, size: 32, offset: 1536)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !247, file: !161, line: 79, baseType: !177, size: 32, offset: 1568)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !247, file: !161, line: 79, baseType: !177, size: 32, offset: 1600)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !247, file: !161, line: 79, baseType: !177, size: 32, offset: 1632)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !247, file: !161, line: 79, baseType: !177, size: 32, offset: 1664)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !247, file: !161, line: 80, baseType: !177, size: 32, offset: 1696)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !247, file: !161, line: 80, baseType: !177, size: 32, offset: 1728)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !247, file: !161, line: 80, baseType: !177, size: 32, offset: 1760)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !247, file: !161, line: 81, baseType: !177, size: 32, offset: 1792)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !247, file: !161, line: 81, baseType: !177, size: 32, offset: 1824)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !247, file: !161, line: 81, baseType: !177, size: 32, offset: 1856)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !247, file: !161, line: 82, baseType: !177, size: 32, offset: 1888)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !247, file: !161, line: 82, baseType: !177, size: 32, offset: 1920)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !247, file: !161, line: 82, baseType: !177, size: 32, offset: 1952)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !247, file: !161, line: 85, baseType: !177, size: 32, offset: 1984)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !247, file: !161, line: 85, baseType: !177, size: 32, offset: 2016)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !247, file: !161, line: 85, baseType: !177, size: 32, offset: 2048)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !247, file: !161, line: 85, baseType: !177, size: 32, offset: 2080)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !247, file: !161, line: 86, baseType: !177, size: 32, offset: 2112)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !247, file: !161, line: 86, baseType: !177, size: 32, offset: 2144)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !247, file: !161, line: 86, baseType: !177, size: 32, offset: 2176)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !247, file: !161, line: 86, baseType: !177, size: 32, offset: 2208)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !247, file: !161, line: 87, baseType: !177, size: 32, offset: 2240)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !247, file: !161, line: 87, baseType: !177, size: 32, offset: 2272)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !247, file: !161, line: 87, baseType: !177, size: 32, offset: 2304)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !247, file: !161, line: 87, baseType: !177, size: 32, offset: 2336)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !247, file: !161, line: 90, baseType: !177, size: 32, offset: 2368)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !247, file: !161, line: 93, baseType: !177, size: 32, offset: 2400)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !247, file: !161, line: 93, baseType: !177, size: 32, offset: 2432)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !247, file: !161, line: 93, baseType: !177, size: 32, offset: 2464)
!1505 = !{!1506}
!1506 = !DISubrange(count: 18)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !167, file: !168, line: 123, baseType: !48, size: 16, offset: 4032)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !167, file: !168, line: 123, baseType: !48, size: 16, offset: 4048)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !167, file: !168, line: 123, baseType: !526, size: 32, offset: 4064)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !167, file: !168, line: 126, baseType: !1207, size: 64, offset: 4096)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !167, file: !168, line: 129, baseType: !328, size: 64, offset: 4160)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !154, file: !155, line: 1223, baseType: !153, size: 64, offset: 1152)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !154, file: !155, line: 1225, baseType: !58, size: 128, offset: 1216)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !154, file: !155, line: 1226, baseType: !1515, size: 64, offset: 1344)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 64)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !155, line: 69, size: 320, elements: !1517)
!1517 = !{!1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1516, file: !155, line: 70, baseType: !1515, size: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1516, file: !155, line: 70, baseType: !1515, size: 64, offset: 64)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1516, file: !155, line: 71, baseType: !676, size: 32, offset: 128)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1516, file: !155, line: 71, baseType: !676, size: 32, offset: 160)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1516, file: !155, line: 72, baseType: !22, size: 32, offset: 192)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1516, file: !155, line: 73, baseType: !48, size: 16, offset: 224)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1516, file: !155, line: 73, baseType: !48, size: 16, offset: 240)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1516, file: !155, line: 74, baseType: !163, size: 64, offset: 256)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !154, file: !155, line: 1227, baseType: !163, size: 64, offset: 1408)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !154, file: !155, line: 1229, baseType: !868, size: 96, offset: 1472)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !154, file: !155, line: 1230, baseType: !868, size: 96, offset: 1568)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !154, file: !155, line: 1231, baseType: !868, size: 96, offset: 1664)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !154, file: !155, line: 1231, baseType: !868, size: 96, offset: 1760)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !154, file: !155, line: 1233, baseType: !676, size: 32, offset: 1856)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !154, file: !155, line: 1234, baseType: !22, size: 32, offset: 1888)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !154, file: !155, line: 1235, baseType: !676, size: 32, offset: 1920)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !154, file: !155, line: 1237, baseType: !48, size: 16, offset: 1952)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !154, file: !155, line: 1239, baseType: !14, size: 8, offset: 1968)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !154, file: !155, line: 1240, baseType: !1175, size: 8, offset: 1976)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !154, file: !155, line: 1242, baseType: !328, size: 64, offset: 1984)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !154, file: !155, line: 1244, baseType: !1539, size: 64, offset: 2048)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1541, line: 200, size: 17024, elements: !1542)
!1541 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1542 = !{!1543, !1545, !1546, !1547, !1877, !1878, !1879, !1880, !1881, !1882, !1883}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1540, file: !1541, line: 201, baseType: !1544, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1540, file: !1541, line: 202, baseType: !58, size: 128, offset: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1540, file: !1541, line: 203, baseType: !58, size: 128, offset: 192)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1540, file: !1541, line: 206, baseType: !1548, size: 64, offset: 320)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !1541, line: 190, baseType: !1550)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !1541, line: 126, size: 2816, elements: !1551)
!1551 = !{!1552, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1640, !1641, !1642, !1643, !1848, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1876}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1550, file: !1541, line: 127, baseType: !1553, size: 64)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1550, file: !1541, line: 127, baseType: !1553, size: 64, offset: 64)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1550, file: !1541, line: 128, baseType: !56, size: 64, offset: 128)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1550, file: !1541, line: 129, baseType: !56, size: 64, offset: 192)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1550, file: !1541, line: 130, baseType: !33, size: 512, offset: 256)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1550, file: !1541, line: 132, baseType: !22, size: 32, offset: 768)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1550, file: !1541, line: 132, baseType: !22, size: 32, offset: 800)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1550, file: !1541, line: 133, baseType: !22, size: 32, offset: 832)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1550, file: !1541, line: 134, baseType: !22, size: 32, offset: 864)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1550, file: !1541, line: 134, baseType: !22, size: 32, offset: 896)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1550, file: !1541, line: 134, baseType: !22, size: 32, offset: 928)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1550, file: !1541, line: 135, baseType: !22, size: 32, offset: 960)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1550, file: !1541, line: 135, baseType: !22, size: 32, offset: 992)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1550, file: !1541, line: 136, baseType: !22, size: 32, offset: 1024)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1550, file: !1541, line: 136, baseType: !22, size: 32, offset: 1056)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1550, file: !1541, line: 137, baseType: !22, size: 32, offset: 1088)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1550, file: !1541, line: 137, baseType: !22, size: 32, offset: 1120)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1550, file: !1541, line: 138, baseType: !177, size: 32, offset: 1152)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1550, file: !1541, line: 139, baseType: !177, size: 32, offset: 1184)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1550, file: !1541, line: 139, baseType: !177, size: 32, offset: 1216)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1550, file: !1541, line: 141, baseType: !48, size: 16, offset: 1248)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1550, file: !1541, line: 142, baseType: !48, size: 16, offset: 1264)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1550, file: !1541, line: 143, baseType: !22, size: 32, offset: 1280)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1550, file: !1541, line: 144, baseType: !22, size: 32, offset: 1312)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1550, file: !1541, line: 146, baseType: !1578, size: 64, offset: 1344)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !1541, line: 114, baseType: !1580)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !1541, line: 99, size: 7232, elements: !1581)
!1581 = !{!1582, !1584, !1585, !1586, !1587, !1588, !1589, !1597, !1601, !1613, !1622, !1629, !1639}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1580, file: !1541, line: 100, baseType: !1583, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1580, file: !1541, line: 100, baseType: !1583, size: 64, offset: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1580, file: !1541, line: 101, baseType: !22, size: 32, offset: 128)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1580, file: !1541, line: 101, baseType: !22, size: 32, offset: 160)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1580, file: !1541, line: 102, baseType: !22, size: 32, offset: 192)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1580, file: !1541, line: 102, baseType: !22, size: 32, offset: 224)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !1580, file: !1541, line: 103, baseType: !1590, size: 64, offset: 256)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64)
!1591 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !1541, line: 59, baseType: !1592)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !1541, line: 56, size: 2112, elements: !1593)
!1593 = !{!1594, !1595, !1596}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1592, file: !1541, line: 57, baseType: !342, size: 2048)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !1592, file: !1541, line: 58, baseType: !22, size: 32, offset: 2048)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !1592, file: !1541, line: 58, baseType: !22, size: 32, offset: 2080)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1580, file: !1541, line: 106, baseType: !1598, size: 6144, offset: 320)
!1598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 6144, elements: !1599)
!1599 = !{!1600}
!1600 = !DISubrange(count: 768)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1580, file: !1541, line: 107, baseType: !1602, size: 64, offset: 6464)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !1541, line: 97, baseType: !1604)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !1541, line: 83, size: 8320, elements: !1605)
!1605 = !{!1606, !1607, !1608, !1609, !1610, !1611, !1612}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1604, file: !1541, line: 84, baseType: !1598, size: 6144)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1604, file: !1541, line: 87, baseType: !342, size: 2048, offset: 6144)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1604, file: !1541, line: 88, baseType: !1001, size: 64, offset: 8192)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1604, file: !1541, line: 90, baseType: !48, size: 16, offset: 8256)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1604, file: !1541, line: 92, baseType: !48, size: 16, offset: 8272)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !1604, file: !1541, line: 93, baseType: !48, size: 16, offset: 8288)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !1604, file: !1541, line: 95, baseType: !48, size: 16, offset: 8304)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1580, file: !1541, line: 108, baseType: !1614, size: 64, offset: 6528)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !1541, line: 66, baseType: !1616)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !1541, line: 61, size: 128, elements: !1617)
!1617 = !{!1618, !1619, !1620, !1621}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1616, file: !1541, line: 62, baseType: !22, size: 32)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !1616, file: !1541, line: 63, baseType: !22, size: 32, offset: 32)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1616, file: !1541, line: 64, baseType: !22, size: 32, offset: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1616, file: !1541, line: 65, baseType: !22, size: 32, offset: 96)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !1580, file: !1541, line: 109, baseType: !1623, size: 64, offset: 6592)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !1541, line: 71, baseType: !1625)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !1541, line: 68, size: 64, elements: !1626)
!1626 = !{!1627, !1628}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !1625, file: !1541, line: 69, baseType: !22, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !1625, file: !1541, line: 70, baseType: !22, size: 32, offset: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !1580, file: !1541, line: 110, baseType: !1630, size: 64, offset: 6656)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !1541, line: 81, baseType: !1632)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !1541, line: 73, size: 352, elements: !1633)
!1633 = !{!1634, !1635, !1636, !1637, !1638}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !1632, file: !1541, line: 74, baseType: !868, size: 96)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1632, file: !1541, line: 75, baseType: !868, size: 96, offset: 96)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1632, file: !1541, line: 76, baseType: !868, size: 96, offset: 192)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1632, file: !1541, line: 77, baseType: !22, size: 32, offset: 288)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1632, file: !1541, line: 78, baseType: !22, size: 32, offset: 320)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1580, file: !1541, line: 113, baseType: !1302, size: 512, offset: 6720)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1550, file: !1541, line: 148, baseType: !242, size: 64, offset: 1408)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1550, file: !1541, line: 151, baseType: !153, size: 64, offset: 1472)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1550, file: !1541, line: 152, baseType: !163, size: 64, offset: 1536)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1550, file: !1541, line: 153, baseType: !1644, size: 64, offset: 1600)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1646, line: 64, size: 19136, elements: !1647)
!1646 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1647 = !{!1648, !1649, !1650, !1651, !1652, !1653, !1655, !1656, !1657, !1658, !1661, !1662, !1834, !1835, !1843, !1844, !1845, !1846, !1847}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1645, file: !1646, line: 65, baseType: !113, size: 960)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1645, file: !1646, line: 66, baseType: !159, size: 64, offset: 960)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1645, file: !1646, line: 68, baseType: !131, size: 8192, offset: 1024)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1645, file: !1646, line: 70, baseType: !22, size: 32, offset: 9216)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1645, file: !1646, line: 71, baseType: !22, size: 32, offset: 9248)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1645, file: !1646, line: 72, baseType: !1654, size: 64, offset: 9280)
!1654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 64, elements: !527)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1645, file: !1646, line: 74, baseType: !177, size: 32, offset: 9344)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1645, file: !1646, line: 74, baseType: !177, size: 32, offset: 9376)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1645, file: !1646, line: 76, baseType: !1001, size: 64, offset: 9408)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1645, file: !1646, line: 77, baseType: !1659, size: 64, offset: 9472)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64)
!1660 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1646, line: 77, flags: DIFlagFwdDecl)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1645, file: !1646, line: 78, baseType: !670, size: 64, offset: 9536)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1645, file: !1646, line: 80, baseType: !1663, size: 2624, offset: 9600)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !1664, line: 340, size: 2624, elements: !1665)
!1664 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1665 = !{!1666, !1694, !1712, !1713, !1714, !1729, !1787, !1788, !1814, !1815, !1816, !1817, !1823}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !1663, file: !1664, line: 341, baseType: !1667, size: 576)
!1667 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !1664, line: 251, baseType: !1668)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !1664, line: 207, size: 576, elements: !1669)
!1669 = !{!1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1668, file: !1664, line: 208, baseType: !22, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !1668, file: !1664, line: 211, baseType: !48, size: 16, offset: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !1668, file: !1664, line: 212, baseType: !48, size: 16, offset: 48)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !1668, file: !1664, line: 213, baseType: !177, size: 32, offset: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !1668, file: !1664, line: 214, baseType: !48, size: 16, offset: 96)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !1668, file: !1664, line: 215, baseType: !48, size: 16, offset: 112)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !1668, file: !1664, line: 216, baseType: !48, size: 16, offset: 128)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !1668, file: !1664, line: 217, baseType: !48, size: 16, offset: 144)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !1668, file: !1664, line: 218, baseType: !48, size: 16, offset: 160)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !1668, file: !1664, line: 219, baseType: !48, size: 16, offset: 176)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !1668, file: !1664, line: 220, baseType: !177, size: 32, offset: 192)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !1668, file: !1664, line: 222, baseType: !48, size: 16, offset: 224)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !1668, file: !1664, line: 225, baseType: !48, size: 16, offset: 240)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !1668, file: !1664, line: 228, baseType: !22, size: 32, offset: 256)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !1668, file: !1664, line: 229, baseType: !22, size: 32, offset: 288)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !1668, file: !1664, line: 233, baseType: !22, size: 32, offset: 320)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !1668, file: !1664, line: 236, baseType: !48, size: 16, offset: 352)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1668, file: !1664, line: 236, baseType: !48, size: 16, offset: 368)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1668, file: !1664, line: 241, baseType: !177, size: 32, offset: 384)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !1668, file: !1664, line: 244, baseType: !22, size: 32, offset: 416)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !1668, file: !1664, line: 244, baseType: !22, size: 32, offset: 448)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !1668, file: !1664, line: 245, baseType: !177, size: 32, offset: 480)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !1668, file: !1664, line: 248, baseType: !177, size: 32, offset: 512)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1668, file: !1664, line: 250, baseType: !22, size: 32, offset: 544)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1663, file: !1664, line: 342, baseType: !1695, size: 448, offset: 576)
!1695 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !1664, line: 79, baseType: !1696)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !1664, line: 61, size: 448, elements: !1697)
!1697 = !{!1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !1696, file: !1664, line: 62, baseType: !56, size: 64)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !1696, file: !1664, line: 64, baseType: !48, size: 16, offset: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1696, file: !1664, line: 65, baseType: !48, size: 16, offset: 80)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !1696, file: !1664, line: 67, baseType: !177, size: 32, offset: 96)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !1696, file: !1664, line: 68, baseType: !177, size: 32, offset: 128)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !1696, file: !1664, line: 69, baseType: !177, size: 32, offset: 160)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1696, file: !1664, line: 70, baseType: !48, size: 16, offset: 192)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1696, file: !1664, line: 71, baseType: !48, size: 16, offset: 208)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !1696, file: !1664, line: 72, baseType: !569, size: 64, offset: 224)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1696, file: !1664, line: 75, baseType: !177, size: 32, offset: 288)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !1696, file: !1664, line: 75, baseType: !177, size: 32, offset: 320)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !1696, file: !1664, line: 75, baseType: !177, size: 32, offset: 352)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !1696, file: !1664, line: 78, baseType: !177, size: 32, offset: 384)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !1696, file: !1664, line: 78, baseType: !177, size: 32, offset: 416)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !1663, file: !1664, line: 343, baseType: !58, size: 128, offset: 1024)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !1663, file: !1664, line: 344, baseType: !58, size: 128, offset: 1152)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !1663, file: !1664, line: 345, baseType: !1715, size: 192, offset: 1280)
!1715 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !1664, line: 278, baseType: !1716)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !1664, line: 270, size: 192, elements: !1717)
!1717 = !{!1718, !1719, !1720, !1721, !1722}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1716, file: !1664, line: 271, baseType: !22, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1716, file: !1664, line: 273, baseType: !177, size: 32, offset: 32)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !1716, file: !1664, line: 275, baseType: !22, size: 32, offset: 64)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !1716, file: !1664, line: 276, baseType: !22, size: 32, offset: 96)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !1716, file: !1664, line: 277, baseType: !1723, size: 64, offset: 128)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !1664, line: 55, size: 576, elements: !1725)
!1725 = !{!1726, !1727, !1728}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1724, file: !1664, line: 56, baseType: !22, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1724, file: !1664, line: 57, baseType: !177, size: 32, offset: 32)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1724, file: !1664, line: 58, baseType: !1330, size: 512, offset: 64)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !1663, file: !1664, line: 346, baseType: !1730, size: 384, offset: 1472)
!1730 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !1664, line: 268, baseType: !1731)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !1664, line: 253, size: 384, elements: !1732)
!1732 = !{!1733, !1734, !1735, !1736, !1737, !1781, !1782, !1783, !1784, !1785, !1786}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1731, file: !1664, line: 254, baseType: !22, size: 32)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !1731, file: !1664, line: 255, baseType: !22, size: 32, offset: 32)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1731, file: !1664, line: 255, baseType: !22, size: 32, offset: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !1731, file: !1664, line: 258, baseType: !177, size: 32, offset: 96)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !1731, file: !1664, line: 259, baseType: !1738, size: 64, offset: 128)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !1664, line: 164, baseType: !1740)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !1664, line: 108, size: 1664, elements: !1741)
!1741 = !{!1742, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1740, file: !1664, line: 109, baseType: !1743, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1740, file: !1664, line: 109, baseType: !1743, size: 64, offset: 64)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1740, file: !1664, line: 111, baseType: !33, size: 512, offset: 128)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !1740, file: !1664, line: 119, baseType: !569, size: 64, offset: 640)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !1740, file: !1664, line: 119, baseType: !569, size: 64, offset: 704)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1740, file: !1664, line: 125, baseType: !569, size: 64, offset: 768)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1740, file: !1664, line: 125, baseType: !569, size: 64, offset: 832)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1740, file: !1664, line: 127, baseType: !569, size: 64, offset: 896)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1740, file: !1664, line: 130, baseType: !22, size: 32, offset: 960)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1740, file: !1664, line: 131, baseType: !22, size: 32, offset: 992)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1740, file: !1664, line: 132, baseType: !1754, size: 64, offset: 1024)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1755 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !1664, line: 106, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !1664, line: 81, size: 512, elements: !1757)
!1757 = !{!1758, !1759, !1762, !1763, !1764, !1765}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1756, file: !1664, line: 82, baseType: !569, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !1756, file: !1664, line: 97, baseType: !1760, size: 256, offset: 64)
!1760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 256, elements: !1761)
!1761 = !{!515, !528}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1756, file: !1664, line: 102, baseType: !569, size: 64, offset: 320)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1756, file: !1664, line: 102, baseType: !569, size: 64, offset: 384)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1756, file: !1664, line: 104, baseType: !22, size: 32, offset: 448)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1756, file: !1664, line: 105, baseType: !22, size: 32, offset: 480)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !1740, file: !1664, line: 135, baseType: !868, size: 96, offset: 1088)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1740, file: !1664, line: 136, baseType: !177, size: 32, offset: 1184)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1740, file: !1664, line: 139, baseType: !22, size: 32, offset: 1216)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !1740, file: !1664, line: 139, baseType: !22, size: 32, offset: 1248)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !1740, file: !1664, line: 139, baseType: !22, size: 32, offset: 1280)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1740, file: !1664, line: 140, baseType: !868, size: 96, offset: 1312)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !1740, file: !1664, line: 143, baseType: !48, size: 16, offset: 1408)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1740, file: !1664, line: 144, baseType: !48, size: 16, offset: 1424)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !1740, file: !1664, line: 145, baseType: !48, size: 16, offset: 1440)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !1740, file: !1664, line: 148, baseType: !48, size: 16, offset: 1456)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !1740, file: !1664, line: 149, baseType: !22, size: 32, offset: 1472)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !1740, file: !1664, line: 150, baseType: !177, size: 32, offset: 1504)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1740, file: !1664, line: 152, baseType: !670, size: 64, offset: 1536)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1740, file: !1664, line: 163, baseType: !177, size: 32, offset: 1600)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1740, file: !1664, line: 163, baseType: !177, size: 32, offset: 1632)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !1731, file: !1664, line: 261, baseType: !177, size: 32, offset: 192)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !1731, file: !1664, line: 261, baseType: !177, size: 32, offset: 224)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !1731, file: !1664, line: 261, baseType: !177, size: 32, offset: 256)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1731, file: !1664, line: 263, baseType: !22, size: 32, offset: 288)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1731, file: !1664, line: 266, baseType: !22, size: 32, offset: 320)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1731, file: !1664, line: 267, baseType: !177, size: 32, offset: 352)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1663, file: !1664, line: 347, baseType: !1738, size: 64, offset: 1856)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !1663, file: !1664, line: 348, baseType: !1789, size: 64, offset: 1920)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !1664, line: 205, baseType: !1791)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !1664, line: 186, size: 1024, elements: !1792)
!1792 = !{!1793, !1795, !1796, !1797, !1799, !1800, !1801, !1809, !1810, !1811, !1812, !1813}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1791, file: !1664, line: 187, baseType: !1794, size: 64)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1791, file: !1664, line: 187, baseType: !1794, size: 64, offset: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1791, file: !1664, line: 189, baseType: !33, size: 512, offset: 128)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !1791, file: !1664, line: 191, baseType: !1798, size: 64, offset: 640)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !1791, file: !1664, line: 193, baseType: !22, size: 32, offset: 704)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1791, file: !1664, line: 193, baseType: !22, size: 32, offset: 736)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1791, file: !1664, line: 195, baseType: !1802, size: 64, offset: 768)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !1664, line: 184, baseType: !1804)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !1664, line: 166, size: 320, elements: !1805)
!1805 = !{!1806, !1807, !1808}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !1804, file: !1664, line: 180, baseType: !1760, size: 256)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1804, file: !1664, line: 182, baseType: !22, size: 32, offset: 256)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1804, file: !1664, line: 183, baseType: !22, size: 32, offset: 288)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1791, file: !1664, line: 196, baseType: !22, size: 32, offset: 832)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1791, file: !1664, line: 198, baseType: !22, size: 32, offset: 864)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1791, file: !1664, line: 200, baseType: !989, size: 64, offset: 896)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !1791, file: !1664, line: 201, baseType: !177, size: 32, offset: 960)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1791, file: !1664, line: 204, baseType: !22, size: 32, offset: 992)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1663, file: !1664, line: 350, baseType: !58, size: 128, offset: 1984)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !1663, file: !1664, line: 351, baseType: !22, size: 32, offset: 2112)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !1663, file: !1664, line: 351, baseType: !22, size: 32, offset: 2144)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1663, file: !1664, line: 353, baseType: !1818, size: 64, offset: 2176)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !1664, line: 297, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !1664, line: 295, size: 2048, elements: !1821)
!1821 = !{!1822}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1820, file: !1664, line: 296, baseType: !342, size: 2048)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !1663, file: !1664, line: 355, baseType: !1824, size: 384, offset: 2240)
!1824 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !1664, line: 338, baseType: !1825)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !1664, line: 322, size: 384, elements: !1826)
!1826 = !{!1827, !1828, !1829, !1830, !1831, !1832, !1833}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1825, file: !1664, line: 323, baseType: !22, size: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1825, file: !1664, line: 325, baseType: !48, size: 16, offset: 32)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1825, file: !1664, line: 326, baseType: !48, size: 16, offset: 48)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1825, file: !1664, line: 331, baseType: !58, size: 128, offset: 64)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1825, file: !1664, line: 334, baseType: !58, size: 128, offset: 192)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1825, file: !1664, line: 335, baseType: !22, size: 32, offset: 320)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1825, file: !1664, line: 337, baseType: !22, size: 32, offset: 352)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1645, file: !1646, line: 81, baseType: !56, size: 64, offset: 12224)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1645, file: !1646, line: 85, baseType: !1836, size: 6208, offset: 12288)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1646, line: 55, size: 6208, elements: !1837)
!1837 = !{!1838, !1839, !1840, !1841, !1842}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1836, file: !1646, line: 56, baseType: !1598, size: 6144)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1836, file: !1646, line: 58, baseType: !48, size: 16, offset: 6144)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1836, file: !1646, line: 59, baseType: !48, size: 16, offset: 6160)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1836, file: !1646, line: 60, baseType: !48, size: 16, offset: 6176)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1836, file: !1646, line: 61, baseType: !48, size: 16, offset: 6192)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1645, file: !1646, line: 86, baseType: !22, size: 32, offset: 18496)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1645, file: !1646, line: 88, baseType: !22, size: 32, offset: 18528)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1645, file: !1646, line: 90, baseType: !22, size: 32, offset: 18560)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1645, file: !1646, line: 94, baseType: !22, size: 32, offset: 18592)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1645, file: !1646, line: 100, baseType: !1302, size: 512, offset: 18624)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1550, file: !1541, line: 154, baseType: !1849, size: 64, offset: 1664)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1850 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !1851, line: 264, flags: DIFlagFwdDecl)
!1851 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1550, file: !1541, line: 156, baseType: !1001, size: 64, offset: 1728)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1550, file: !1541, line: 158, baseType: !177, size: 32, offset: 1792)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1550, file: !1541, line: 159, baseType: !177, size: 32, offset: 1824)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1550, file: !1541, line: 162, baseType: !1553, size: 64, offset: 1856)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1550, file: !1541, line: 162, baseType: !1553, size: 64, offset: 1920)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1550, file: !1541, line: 162, baseType: !1553, size: 64, offset: 1984)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1550, file: !1541, line: 164, baseType: !58, size: 128, offset: 2048)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1550, file: !1541, line: 166, baseType: !1860, size: 64, offset: 2176)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!1861 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !1541, line: 51, flags: DIFlagFwdDecl)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1550, file: !1541, line: 167, baseType: !56, size: 64, offset: 2240)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1550, file: !1541, line: 168, baseType: !177, size: 32, offset: 2304)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1550, file: !1541, line: 170, baseType: !177, size: 32, offset: 2336)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1550, file: !1541, line: 170, baseType: !177, size: 32, offset: 2368)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1550, file: !1541, line: 171, baseType: !177, size: 32, offset: 2400)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1550, file: !1541, line: 173, baseType: !56, size: 64, offset: 2432)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1550, file: !1541, line: 175, baseType: !22, size: 32, offset: 2496)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1550, file: !1541, line: 176, baseType: !22, size: 32, offset: 2528)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1550, file: !1541, line: 179, baseType: !22, size: 32, offset: 2560)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1550, file: !1541, line: 180, baseType: !177, size: 32, offset: 2592)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1550, file: !1541, line: 183, baseType: !22, size: 32, offset: 2624)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1550, file: !1541, line: 185, baseType: !14, size: 8, offset: 2656)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1550, file: !1541, line: 186, baseType: !1875, size: 24, offset: 2664)
!1875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 24, elements: !869)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1550, file: !1541, line: 189, baseType: !58, size: 128, offset: 2688)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1540, file: !1541, line: 207, baseType: !131, size: 8192, offset: 384)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1540, file: !1541, line: 208, baseType: !131, size: 8192, offset: 8576)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1540, file: !1541, line: 210, baseType: !22, size: 32, offset: 16768)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1540, file: !1541, line: 210, baseType: !22, size: 32, offset: 16800)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1540, file: !1541, line: 211, baseType: !22, size: 32, offset: 16832)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1540, file: !1541, line: 211, baseType: !22, size: 32, offset: 16864)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1540, file: !1541, line: 212, baseType: !549, size: 128, offset: 16896)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !154, file: !155, line: 1246, baseType: !1885, size: 64, offset: 2112)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !155, line: 1067, size: 5184, elements: !1887)
!1887 = !{!1888, !1917, !1918, !1932, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1954, !1970, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2078}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1886, file: !155, line: 1068, baseType: !1889, size: 64)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !155, line: 934, baseType: !1891)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !155, line: 925, size: 576, elements: !1892)
!1892 = !{!1893, !1909, !1910, !1911, !1912, !1913, !1916}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1891, file: !155, line: 926, baseType: !1894, size: 320)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !155, line: 830, baseType: !1895)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !155, line: 813, size: 320, elements: !1896)
!1896 = !{!1897, !1900, !1903, !1904, !1906, !1907, !1908}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1895, file: !155, line: 814, baseType: !1898, size: 64)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!1899 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !155, line: 51, flags: DIFlagFwdDecl)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1895, file: !155, line: 815, baseType: !1901, size: 64, offset: 64)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!1902 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !155, line: 815, flags: DIFlagFwdDecl)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1895, file: !155, line: 818, baseType: !56, size: 64, offset: 128)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1895, file: !155, line: 819, baseType: !1905, size: 32, offset: 192)
!1905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !699, size: 32, elements: !514)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1895, file: !155, line: 822, baseType: !22, size: 32, offset: 224)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1895, file: !155, line: 826, baseType: !22, size: 32, offset: 256)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1895, file: !155, line: 829, baseType: !22, size: 32, offset: 288)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1891, file: !155, line: 928, baseType: !48, size: 16, offset: 320)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1891, file: !155, line: 928, baseType: !48, size: 16, offset: 336)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1891, file: !155, line: 929, baseType: !22, size: 32, offset: 352)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1891, file: !155, line: 930, baseType: !704, size: 64, offset: 384)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1891, file: !155, line: 931, baseType: !1914, size: 64, offset: 448)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 64)
!1915 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !155, line: 931, flags: DIFlagFwdDecl)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1891, file: !155, line: 933, baseType: !56, size: 64, offset: 512)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1886, file: !155, line: 1069, baseType: !1889, size: 64, offset: 64)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1886, file: !155, line: 1070, baseType: !1919, size: 64, offset: 128)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1920 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !155, line: 916, baseType: !1921)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !155, line: 891, size: 704, elements: !1922)
!1922 = !{!1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1921, file: !155, line: 892, baseType: !1894, size: 320)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1921, file: !155, line: 896, baseType: !22, size: 32, offset: 320)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1921, file: !155, line: 900, baseType: !1420, size: 96, offset: 352)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1921, file: !155, line: 903, baseType: !177, size: 32, offset: 448)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1921, file: !155, line: 906, baseType: !22, size: 32, offset: 480)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1921, file: !155, line: 909, baseType: !177, size: 32, offset: 512)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1921, file: !155, line: 912, baseType: !177, size: 32, offset: 544)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1921, file: !155, line: 914, baseType: !163, size: 64, offset: 576)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1921, file: !155, line: 915, baseType: !56, size: 64, offset: 640)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1886, file: !155, line: 1071, baseType: !1933, size: 64, offset: 192)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !155, line: 920, baseType: !1935)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !155, line: 918, size: 320, elements: !1936)
!1936 = !{!1937}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1935, file: !155, line: 919, baseType: !1894, size: 320)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1886, file: !155, line: 1075, baseType: !177, size: 32, offset: 256)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1886, file: !155, line: 1077, baseType: !177, size: 32, offset: 288)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1886, file: !155, line: 1078, baseType: !177, size: 32, offset: 320)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1886, file: !155, line: 1079, baseType: !48, size: 16, offset: 352)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1886, file: !155, line: 1082, baseType: !48, size: 16, offset: 368)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1886, file: !155, line: 1085, baseType: !14, size: 8, offset: 384)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1886, file: !155, line: 1086, baseType: !14, size: 8, offset: 392)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1886, file: !155, line: 1087, baseType: !14, size: 8, offset: 400)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1886, file: !155, line: 1088, baseType: !14, size: 8, offset: 408)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1886, file: !155, line: 1090, baseType: !177, size: 32, offset: 416)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1886, file: !155, line: 1093, baseType: !48, size: 16, offset: 448)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1886, file: !155, line: 1096, baseType: !14, size: 8, offset: 464)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1886, file: !155, line: 1098, baseType: !1951, size: 40, offset: 472)
!1951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 40, elements: !1952)
!1952 = !{!1953}
!1953 = !DISubrange(count: 5)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1886, file: !155, line: 1101, baseType: !1955, size: 832, offset: 512)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !155, line: 836, size: 832, elements: !1956)
!1956 = !{!1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1955, file: !155, line: 837, baseType: !1894, size: 320)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1955, file: !155, line: 839, baseType: !48, size: 16, offset: 320)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1955, file: !155, line: 839, baseType: !48, size: 16, offset: 336)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1955, file: !155, line: 842, baseType: !48, size: 16, offset: 352)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1955, file: !155, line: 842, baseType: !48, size: 16, offset: 368)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1955, file: !155, line: 843, baseType: !526, size: 32, offset: 384)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1955, file: !155, line: 845, baseType: !22, size: 32, offset: 416)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1955, file: !155, line: 847, baseType: !56, size: 64, offset: 448)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1955, file: !155, line: 848, baseType: !989, size: 64, offset: 512)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1955, file: !155, line: 849, baseType: !989, size: 64, offset: 576)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1955, file: !155, line: 850, baseType: !989, size: 64, offset: 640)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1955, file: !155, line: 851, baseType: !868, size: 96, offset: 704)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1955, file: !155, line: 852, baseType: !177, size: 32, offset: 800)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1886, file: !155, line: 1104, baseType: !1971, size: 1344, offset: 1344)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !155, line: 867, size: 1344, elements: !1972)
!1972 = !{!1973, !1974, !1975, !1976, !1977, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1971, file: !155, line: 868, baseType: !48, size: 16)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1971, file: !155, line: 869, baseType: !48, size: 16, offset: 16)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1971, file: !155, line: 870, baseType: !48, size: 16, offset: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1971, file: !155, line: 871, baseType: !48, size: 16, offset: 48)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1971, file: !155, line: 873, baseType: !1978, size: 896, offset: 64)
!1978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1979, size: 896, elements: !1310)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !155, line: 864, baseType: !1980)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !155, line: 859, size: 128, elements: !1981)
!1981 = !{!1982, !1983, !1984, !1985, !1986, !1987}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1980, file: !155, line: 860, baseType: !48, size: 16)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1980, file: !155, line: 861, baseType: !48, size: 16, offset: 16)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1980, file: !155, line: 861, baseType: !48, size: 16, offset: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1980, file: !155, line: 861, baseType: !48, size: 16, offset: 48)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1980, file: !155, line: 862, baseType: !22, size: 32, offset: 64)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1980, file: !155, line: 863, baseType: !177, size: 32, offset: 96)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1971, file: !155, line: 874, baseType: !56, size: 64, offset: 960)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1971, file: !155, line: 876, baseType: !177, size: 32, offset: 1024)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1971, file: !155, line: 876, baseType: !177, size: 32, offset: 1056)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1971, file: !155, line: 878, baseType: !22, size: 32, offset: 1088)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1971, file: !155, line: 879, baseType: !22, size: 32, offset: 1120)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1971, file: !155, line: 881, baseType: !22, size: 32, offset: 1152)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1971, file: !155, line: 881, baseType: !22, size: 32, offset: 1184)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1971, file: !155, line: 883, baseType: !153, size: 64, offset: 1216)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1971, file: !155, line: 884, baseType: !163, size: 64, offset: 1280)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1886, file: !155, line: 1107, baseType: !177, size: 32, offset: 2688)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1886, file: !155, line: 1110, baseType: !177, size: 32, offset: 2720)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1886, file: !155, line: 1113, baseType: !48, size: 16, offset: 2752)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1886, file: !155, line: 1113, baseType: !48, size: 16, offset: 2768)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1886, file: !155, line: 1116, baseType: !14, size: 8, offset: 2784)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1886, file: !155, line: 1117, baseType: !1175, size: 8, offset: 2792)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1886, file: !155, line: 1120, baseType: !48, size: 16, offset: 2800)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1886, file: !155, line: 1121, baseType: !177, size: 32, offset: 2816)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1886, file: !155, line: 1122, baseType: !177, size: 32, offset: 2848)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1886, file: !155, line: 1123, baseType: !177, size: 32, offset: 2880)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1886, file: !155, line: 1124, baseType: !177, size: 32, offset: 2912)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1886, file: !155, line: 1125, baseType: !177, size: 32, offset: 2944)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1886, file: !155, line: 1126, baseType: !177, size: 32, offset: 2976)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1886, file: !155, line: 1127, baseType: !177, size: 32, offset: 3008)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1886, file: !155, line: 1128, baseType: !177, size: 32, offset: 3040)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1886, file: !155, line: 1129, baseType: !177, size: 32, offset: 3072)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1886, file: !155, line: 1130, baseType: !177, size: 32, offset: 3104)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1886, file: !155, line: 1131, baseType: !48, size: 16, offset: 3136)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1886, file: !155, line: 1132, baseType: !14, size: 8, offset: 3152)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1886, file: !155, line: 1133, baseType: !14, size: 8, offset: 3160)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1886, file: !155, line: 1134, baseType: !1875, size: 24, offset: 3168)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1886, file: !155, line: 1135, baseType: !14, size: 8, offset: 3192)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1886, file: !155, line: 1138, baseType: !163, size: 64, offset: 3200)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1886, file: !155, line: 1139, baseType: !14, size: 8, offset: 3264)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1886, file: !155, line: 1140, baseType: !14, size: 8, offset: 3272)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1886, file: !155, line: 1141, baseType: !14, size: 8, offset: 3280)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1886, file: !155, line: 1142, baseType: !14, size: 8, offset: 3288)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1886, file: !155, line: 1143, baseType: !14, size: 8, offset: 3296)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1886, file: !155, line: 1144, baseType: !2026, size: 64, offset: 3304)
!2026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 64, elements: !640)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1886, file: !155, line: 1145, baseType: !2026, size: 64, offset: 3368)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1886, file: !155, line: 1148, baseType: !14, size: 8, offset: 3432)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1886, file: !155, line: 1149, baseType: !14, size: 8, offset: 3440)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1886, file: !155, line: 1152, baseType: !14, size: 8, offset: 3448)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1886, file: !155, line: 1152, baseType: !14, size: 8, offset: 3456)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1886, file: !155, line: 1153, baseType: !14, size: 8, offset: 3464)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1886, file: !155, line: 1154, baseType: !48, size: 16, offset: 3472)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1886, file: !155, line: 1154, baseType: !48, size: 16, offset: 3488)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1886, file: !155, line: 1155, baseType: !48, size: 16, offset: 3504)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1886, file: !155, line: 1155, baseType: !48, size: 16, offset: 3520)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1886, file: !155, line: 1156, baseType: !14, size: 8, offset: 3536)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1886, file: !155, line: 1157, baseType: !14, size: 8, offset: 3544)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1886, file: !155, line: 1159, baseType: !14, size: 8, offset: 3552)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1886, file: !155, line: 1160, baseType: !14, size: 8, offset: 3560)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1886, file: !155, line: 1161, baseType: !14, size: 8, offset: 3568)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1886, file: !155, line: 1162, baseType: !14, size: 8, offset: 3576)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1886, file: !155, line: 1165, baseType: !22, size: 32, offset: 3584)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1886, file: !155, line: 1166, baseType: !22, size: 32, offset: 3616)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1886, file: !155, line: 1167, baseType: !22, size: 32, offset: 3648)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1886, file: !155, line: 1168, baseType: !22, size: 32, offset: 3680)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1886, file: !155, line: 1171, baseType: !48, size: 16, offset: 3712)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1886, file: !155, line: 1171, baseType: !48, size: 16, offset: 3728)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1886, file: !155, line: 1172, baseType: !22, size: 32, offset: 3744)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1886, file: !155, line: 1173, baseType: !177, size: 32, offset: 3776)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1886, file: !155, line: 1174, baseType: !177, size: 32, offset: 3808)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1886, file: !155, line: 1177, baseType: !2053, size: 1024, offset: 3840)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !155, line: 963, size: 1024, elements: !2054)
!2054 = !{!2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2053, file: !155, line: 965, baseType: !22, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2053, file: !155, line: 968, baseType: !177, size: 32, offset: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2053, file: !155, line: 971, baseType: !177, size: 32, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2053, file: !155, line: 974, baseType: !177, size: 32, offset: 96)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2053, file: !155, line: 977, baseType: !868, size: 96, offset: 128)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2053, file: !155, line: 979, baseType: !868, size: 96, offset: 224)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2053, file: !155, line: 982, baseType: !22, size: 32, offset: 320)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2053, file: !155, line: 987, baseType: !569, size: 64, offset: 352)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2053, file: !155, line: 989, baseType: !177, size: 32, offset: 416)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2053, file: !155, line: 994, baseType: !22, size: 32, offset: 448)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2053, file: !155, line: 995, baseType: !22, size: 32, offset: 480)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2053, file: !155, line: 997, baseType: !14, size: 8, offset: 512)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2053, file: !155, line: 998, baseType: !1309, size: 56, offset: 520)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2053, file: !155, line: 1000, baseType: !177, size: 32, offset: 576)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2053, file: !155, line: 1003, baseType: !569, size: 64, offset: 608)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2053, file: !155, line: 1006, baseType: !22, size: 32, offset: 672)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2053, file: !155, line: 1009, baseType: !177, size: 32, offset: 704)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2053, file: !155, line: 1012, baseType: !569, size: 64, offset: 736)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2053, file: !155, line: 1015, baseType: !569, size: 64, offset: 800)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2053, file: !155, line: 1018, baseType: !22, size: 32, offset: 864)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2053, file: !155, line: 1019, baseType: !743, size: 64, offset: 896)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2053, file: !155, line: 1023, baseType: !177, size: 32, offset: 960)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2053, file: !155, line: 1024, baseType: !22, size: 32, offset: 992)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1886, file: !155, line: 1179, baseType: !2079, size: 320, offset: 4864)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !155, line: 1043, size: 320, elements: !2080)
!2080 = !{!2081, !2082, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2079, file: !155, line: 1044, baseType: !14, size: 8)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2079, file: !155, line: 1045, baseType: !2083, size: 16, offset: 8)
!2083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 16, elements: !527)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2079, file: !155, line: 1048, baseType: !14, size: 8, offset: 24)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2079, file: !155, line: 1049, baseType: !177, size: 32, offset: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2079, file: !155, line: 1049, baseType: !177, size: 32, offset: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2079, file: !155, line: 1052, baseType: !177, size: 32, offset: 96)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2079, file: !155, line: 1052, baseType: !177, size: 32, offset: 128)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2079, file: !155, line: 1053, baseType: !14, size: 8, offset: 160)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2079, file: !155, line: 1054, baseType: !1875, size: 24, offset: 168)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2079, file: !155, line: 1057, baseType: !177, size: 32, offset: 192)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2079, file: !155, line: 1057, baseType: !177, size: 32, offset: 224)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2079, file: !155, line: 1060, baseType: !177, size: 32, offset: 256)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2079, file: !155, line: 1060, baseType: !177, size: 32, offset: 288)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !154, file: !155, line: 1247, baseType: !2096, size: 64, offset: 2176)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !155, line: 60, flags: DIFlagFwdDecl)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !154, file: !155, line: 1251, baseType: !2099, size: 31872, offset: 2240)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !155, line: 403, size: 31872, elements: !2100)
!2100 = !{!2101, !2136, !2156, !2165, !2185, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2342, !2343, !2344, !2346, !2362, !2363}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2099, file: !155, line: 404, baseType: !2102, size: 1984)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !155, line: 259, size: 1984, elements: !2103)
!2103 = !{!2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2119, !2131}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2102, file: !155, line: 260, baseType: !14, size: 8)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2102, file: !155, line: 263, baseType: !14, size: 8, offset: 8)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2102, file: !155, line: 266, baseType: !14, size: 8, offset: 16)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2102, file: !155, line: 267, baseType: !14, size: 8, offset: 24)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2102, file: !155, line: 269, baseType: !14, size: 8, offset: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2102, file: !155, line: 270, baseType: !14, size: 8, offset: 40)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2102, file: !155, line: 276, baseType: !14, size: 8, offset: 48)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2102, file: !155, line: 279, baseType: !14, size: 8, offset: 56)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2102, file: !155, line: 280, baseType: !48, size: 16, offset: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2102, file: !155, line: 280, baseType: !48, size: 16, offset: 80)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2102, file: !155, line: 281, baseType: !177, size: 32, offset: 96)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2102, file: !155, line: 284, baseType: !14, size: 8, offset: 128)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2102, file: !155, line: 285, baseType: !14, size: 8, offset: 136)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2102, file: !155, line: 287, baseType: !2118, size: 48, offset: 144)
!2118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 48, elements: !1327)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2102, file: !155, line: 290, baseType: !2120, size: 1280, offset: 192)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1303, line: 174, baseType: !2121)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1303, line: 166, size: 1280, elements: !2122)
!2122 = !{!2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2121, file: !1303, line: 167, baseType: !22, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2121, file: !1303, line: 167, baseType: !22, size: 32, offset: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2121, file: !1303, line: 168, baseType: !33, size: 512, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2121, file: !1303, line: 169, baseType: !33, size: 512, offset: 576)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2121, file: !1303, line: 170, baseType: !177, size: 32, offset: 1088)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2121, file: !1303, line: 171, baseType: !177, size: 32, offset: 1120)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2121, file: !1303, line: 172, baseType: !1377, size: 64, offset: 1152)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2121, file: !1303, line: 173, baseType: !56, size: 64, offset: 1216)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2102, file: !155, line: 291, baseType: !2132, size: 512, offset: 1472)
!2132 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1303, line: 178, baseType: !2133)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1303, line: 176, size: 512, elements: !2134)
!2134 = !{!2135}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2133, file: !1303, line: 177, baseType: !33, size: 512)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2099, file: !155, line: 406, baseType: !2137, size: 64, offset: 1984)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 64)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !155, line: 80, size: 1472, elements: !2139)
!2139 = !{!2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2138, file: !155, line: 81, baseType: !56, size: 64)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2138, file: !155, line: 82, baseType: !56, size: 64, offset: 64)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2138, file: !155, line: 83, baseType: !676, size: 32, offset: 128)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2138, file: !155, line: 84, baseType: !676, size: 32, offset: 160)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2138, file: !155, line: 86, baseType: !676, size: 32, offset: 192)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2138, file: !155, line: 87, baseType: !676, size: 32, offset: 224)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2138, file: !155, line: 88, baseType: !676, size: 32, offset: 256)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2138, file: !155, line: 89, baseType: !676, size: 32, offset: 288)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2138, file: !155, line: 90, baseType: !676, size: 32, offset: 320)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2138, file: !155, line: 91, baseType: !676, size: 32, offset: 352)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2138, file: !155, line: 92, baseType: !676, size: 32, offset: 384)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2138, file: !155, line: 93, baseType: !676, size: 32, offset: 416)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2138, file: !155, line: 95, baseType: !2153, size: 1024, offset: 448)
!2153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 1024, elements: !2154)
!2154 = !{!2155}
!2155 = !DISubrange(count: 128)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2099, file: !155, line: 407, baseType: !2157, size: 64, offset: 2048)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !155, line: 98, size: 1216, elements: !2159)
!2159 = !{!2160, !2161, !2162, !2163, !2164}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2158, file: !155, line: 100, baseType: !56, size: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2158, file: !155, line: 101, baseType: !56, size: 64, offset: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2158, file: !155, line: 103, baseType: !676, size: 32, offset: 128)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2158, file: !155, line: 104, baseType: !676, size: 32, offset: 160)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2158, file: !155, line: 106, baseType: !2153, size: 1024, offset: 192)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2099, file: !155, line: 408, baseType: !2166, size: 512, offset: 2112)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !155, line: 109, size: 512, elements: !2167)
!2167 = !{!2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2166, file: !155, line: 111, baseType: !22, size: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2166, file: !155, line: 112, baseType: !22, size: 32, offset: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2166, file: !155, line: 115, baseType: !22, size: 32, offset: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2166, file: !155, line: 116, baseType: !22, size: 32, offset: 96)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2166, file: !155, line: 117, baseType: !22, size: 32, offset: 128)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2166, file: !155, line: 118, baseType: !22, size: 32, offset: 160)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2166, file: !155, line: 119, baseType: !22, size: 32, offset: 192)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2166, file: !155, line: 120, baseType: !22, size: 32, offset: 224)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2166, file: !155, line: 121, baseType: !22, size: 32, offset: 256)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2166, file: !155, line: 122, baseType: !22, size: 32, offset: 288)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2166, file: !155, line: 125, baseType: !22, size: 32, offset: 320)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2166, file: !155, line: 126, baseType: !22, size: 32, offset: 352)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2166, file: !155, line: 127, baseType: !48, size: 16, offset: 384)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2166, file: !155, line: 128, baseType: !48, size: 16, offset: 400)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2166, file: !155, line: 129, baseType: !22, size: 32, offset: 416)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2166, file: !155, line: 130, baseType: !22, size: 32, offset: 448)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2166, file: !155, line: 131, baseType: !22, size: 32, offset: 480)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2099, file: !155, line: 409, baseType: !2186, size: 576, offset: 2624)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !155, line: 134, size: 576, elements: !2187)
!2187 = !{!2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2186, file: !155, line: 135, baseType: !22, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2186, file: !155, line: 136, baseType: !22, size: 32, offset: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2186, file: !155, line: 137, baseType: !22, size: 32, offset: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2186, file: !155, line: 138, baseType: !22, size: 32, offset: 96)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2186, file: !155, line: 139, baseType: !22, size: 32, offset: 128)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2186, file: !155, line: 140, baseType: !22, size: 32, offset: 160)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2186, file: !155, line: 141, baseType: !22, size: 32, offset: 192)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2186, file: !155, line: 142, baseType: !22, size: 32, offset: 224)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2186, file: !155, line: 143, baseType: !177, size: 32, offset: 256)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2186, file: !155, line: 144, baseType: !22, size: 32, offset: 288)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2186, file: !155, line: 145, baseType: !22, size: 32, offset: 320)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2186, file: !155, line: 147, baseType: !22, size: 32, offset: 352)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2186, file: !155, line: 148, baseType: !22, size: 32, offset: 384)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2186, file: !155, line: 149, baseType: !22, size: 32, offset: 416)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2186, file: !155, line: 150, baseType: !22, size: 32, offset: 448)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2186, file: !155, line: 151, baseType: !22, size: 32, offset: 480)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2186, file: !155, line: 152, baseType: !37, size: 64, offset: 512)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2099, file: !155, line: 411, baseType: !22, size: 32, offset: 3200)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2099, file: !155, line: 411, baseType: !22, size: 32, offset: 3232)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2099, file: !155, line: 411, baseType: !22, size: 32, offset: 3264)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2099, file: !155, line: 412, baseType: !177, size: 32, offset: 3296)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2099, file: !155, line: 413, baseType: !22, size: 32, offset: 3328)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2099, file: !155, line: 413, baseType: !22, size: 32, offset: 3360)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2099, file: !155, line: 415, baseType: !22, size: 32, offset: 3392)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2099, file: !155, line: 415, baseType: !22, size: 32, offset: 3424)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2099, file: !155, line: 416, baseType: !48, size: 16, offset: 3456)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2099, file: !155, line: 416, baseType: !48, size: 16, offset: 3472)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2099, file: !155, line: 418, baseType: !177, size: 32, offset: 3488)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2099, file: !155, line: 418, baseType: !177, size: 32, offset: 3520)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2099, file: !155, line: 421, baseType: !177, size: 32, offset: 3552)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2099, file: !155, line: 421, baseType: !177, size: 32, offset: 3584)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2099, file: !155, line: 421, baseType: !177, size: 32, offset: 3616)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2099, file: !155, line: 425, baseType: !48, size: 16, offset: 3648)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2099, file: !155, line: 425, baseType: !48, size: 16, offset: 3664)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2099, file: !155, line: 425, baseType: !48, size: 16, offset: 3680)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2099, file: !155, line: 426, baseType: !48, size: 16, offset: 3696)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2099, file: !155, line: 428, baseType: !48, size: 16, offset: 3712)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2099, file: !155, line: 428, baseType: !48, size: 16, offset: 3728)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2099, file: !155, line: 431, baseType: !22, size: 32, offset: 3744)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2099, file: !155, line: 433, baseType: !48, size: 16, offset: 3776)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2099, file: !155, line: 435, baseType: !48, size: 16, offset: 3792)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2099, file: !155, line: 437, baseType: !48, size: 16, offset: 3808)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2099, file: !155, line: 439, baseType: !48, size: 16, offset: 3824)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2099, file: !155, line: 441, baseType: !48, size: 16, offset: 3840)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2099, file: !155, line: 443, baseType: !48, size: 16, offset: 3856)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2099, file: !155, line: 449, baseType: !22, size: 32, offset: 3872)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2099, file: !155, line: 453, baseType: !22, size: 32, offset: 3904)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2099, file: !155, line: 458, baseType: !48, size: 16, offset: 3936)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2099, file: !155, line: 462, baseType: !48, size: 16, offset: 3952)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2099, file: !155, line: 467, baseType: !22, size: 32, offset: 3968)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2099, file: !155, line: 467, baseType: !22, size: 32, offset: 4000)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2099, file: !155, line: 469, baseType: !48, size: 16, offset: 4032)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2099, file: !155, line: 469, baseType: !48, size: 16, offset: 4048)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2099, file: !155, line: 469, baseType: !48, size: 16, offset: 4064)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2099, file: !155, line: 469, baseType: !48, size: 16, offset: 4080)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2099, file: !155, line: 474, baseType: !48, size: 16, offset: 4096)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2099, file: !155, line: 475, baseType: !14, size: 8, offset: 4112)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2099, file: !155, line: 476, baseType: !14, size: 8, offset: 4120)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2099, file: !155, line: 481, baseType: !22, size: 32, offset: 4128)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2099, file: !155, line: 486, baseType: !22, size: 32, offset: 4160)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2099, file: !155, line: 491, baseType: !22, size: 32, offset: 4192)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2099, file: !155, line: 496, baseType: !48, size: 16, offset: 4224)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2099, file: !155, line: 498, baseType: !48, size: 16, offset: 4240)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2099, file: !155, line: 501, baseType: !48, size: 16, offset: 4256)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2099, file: !155, line: 502, baseType: !48, size: 16, offset: 4272)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2099, file: !155, line: 508, baseType: !48, size: 16, offset: 4288)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2099, file: !155, line: 513, baseType: !48, size: 16, offset: 4304)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2099, file: !155, line: 515, baseType: !48, size: 16, offset: 4320)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2099, file: !155, line: 515, baseType: !48, size: 16, offset: 4336)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2099, file: !155, line: 519, baseType: !549, size: 128, offset: 4352)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2099, file: !155, line: 519, baseType: !549, size: 128, offset: 4480)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2099, file: !155, line: 520, baseType: !559, size: 128, offset: 4608)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2099, file: !155, line: 523, baseType: !58, size: 128, offset: 4736)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2099, file: !155, line: 524, baseType: !48, size: 16, offset: 4864)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2099, file: !155, line: 527, baseType: !48, size: 16, offset: 4880)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2099, file: !155, line: 532, baseType: !177, size: 32, offset: 4896)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2099, file: !155, line: 532, baseType: !177, size: 32, offset: 4928)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2099, file: !155, line: 534, baseType: !177, size: 32, offset: 4960)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2099, file: !155, line: 538, baseType: !177, size: 32, offset: 4992)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2099, file: !155, line: 542, baseType: !22, size: 32, offset: 5024)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2099, file: !155, line: 545, baseType: !177, size: 32, offset: 5056)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2099, file: !155, line: 545, baseType: !177, size: 32, offset: 5088)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2099, file: !155, line: 545, baseType: !177, size: 32, offset: 5120)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2099, file: !155, line: 548, baseType: !177, size: 32, offset: 5152)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2099, file: !155, line: 551, baseType: !48, size: 16, offset: 5184)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2099, file: !155, line: 551, baseType: !48, size: 16, offset: 5200)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2099, file: !155, line: 551, baseType: !48, size: 16, offset: 5216)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2099, file: !155, line: 551, baseType: !48, size: 16, offset: 5232)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2099, file: !155, line: 552, baseType: !48, size: 16, offset: 5248)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2099, file: !155, line: 552, baseType: !48, size: 16, offset: 5264)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2099, file: !155, line: 553, baseType: !177, size: 32, offset: 5280)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2099, file: !155, line: 553, baseType: !177, size: 32, offset: 5312)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2099, file: !155, line: 554, baseType: !48, size: 16, offset: 5344)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2099, file: !155, line: 554, baseType: !48, size: 16, offset: 5360)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2099, file: !155, line: 555, baseType: !177, size: 32, offset: 5376)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2099, file: !155, line: 555, baseType: !177, size: 32, offset: 5408)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2099, file: !155, line: 558, baseType: !131, size: 8192, offset: 5440)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2099, file: !155, line: 561, baseType: !22, size: 32, offset: 13632)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2099, file: !155, line: 562, baseType: !48, size: 16, offset: 13664)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2099, file: !155, line: 562, baseType: !48, size: 16, offset: 13680)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2099, file: !155, line: 565, baseType: !1598, size: 6144, offset: 13696)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2099, file: !155, line: 568, baseType: !513, size: 128, offset: 19840)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2099, file: !155, line: 569, baseType: !513, size: 128, offset: 19968)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2099, file: !155, line: 572, baseType: !14, size: 8, offset: 20096)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2099, file: !155, line: 573, baseType: !14, size: 8, offset: 20104)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2099, file: !155, line: 574, baseType: !14, size: 8, offset: 20112)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2099, file: !155, line: 575, baseType: !1951, size: 40, offset: 20120)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2099, file: !155, line: 578, baseType: !22, size: 32, offset: 20160)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2099, file: !155, line: 579, baseType: !48, size: 16, offset: 20192)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2099, file: !155, line: 580, baseType: !48, size: 16, offset: 20208)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2099, file: !155, line: 581, baseType: !177, size: 32, offset: 20224)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2099, file: !155, line: 582, baseType: !177, size: 32, offset: 20256)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2099, file: !155, line: 585, baseType: !48, size: 16, offset: 20288)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2099, file: !155, line: 585, baseType: !48, size: 16, offset: 20304)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2099, file: !155, line: 586, baseType: !177, size: 32, offset: 20320)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2099, file: !155, line: 589, baseType: !48, size: 16, offset: 20352)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2099, file: !155, line: 589, baseType: !48, size: 16, offset: 20368)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2099, file: !155, line: 590, baseType: !22, size: 32, offset: 20384)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2099, file: !155, line: 593, baseType: !48, size: 16, offset: 20416)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2099, file: !155, line: 593, baseType: !48, size: 16, offset: 20432)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2099, file: !155, line: 594, baseType: !48, size: 16, offset: 20448)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2099, file: !155, line: 594, baseType: !48, size: 16, offset: 20464)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2099, file: !155, line: 595, baseType: !177, size: 32, offset: 20480)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2099, file: !155, line: 596, baseType: !177, size: 32, offset: 20512)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2099, file: !155, line: 597, baseType: !2313, size: 64, offset: 20544)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 64)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !2315, line: 50, size: 1664, elements: !2316)
!2315 = !DIFile(filename: "blender/source/blender/makesdna/DNA_text_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2316 = !{!2317, !2318, !2319, !2320, !2321, !2322, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2314, file: !2315, line: 51, baseType: !113, size: 960)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2314, file: !2315, line: 53, baseType: !621, size: 64, offset: 960)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2314, file: !2315, line: 55, baseType: !22, size: 32, offset: 1024)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "nlines", scope: !2314, file: !2315, line: 55, baseType: !22, size: 32, offset: 1056)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !2314, file: !2315, line: 57, baseType: !58, size: 128, offset: 1088)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "curl", scope: !2314, file: !2315, line: 58, baseType: !2323, size: 64, offset: 1216)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 64)
!2324 = !DIDerivedType(tag: DW_TAG_typedef, name: "TextLine", file: !2315, line: 48, baseType: !2325)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextLine", file: !2315, line: 42, size: 320, elements: !2326)
!2326 = !{!2327, !2329, !2330, !2331, !2332, !2333}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2325, file: !2315, line: 43, baseType: !2328, size: 64)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2325, file: !2315, line: 43, baseType: !2328, size: 64, offset: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !2325, file: !2315, line: 45, baseType: !621, size: 64, offset: 128)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2325, file: !2315, line: 46, baseType: !621, size: 64, offset: 192)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2325, file: !2315, line: 47, baseType: !22, size: 32, offset: 256)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "blen", scope: !2325, file: !2315, line: 47, baseType: !22, size: 32, offset: 288)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "sell", scope: !2314, file: !2315, line: 58, baseType: !2323, size: 64, offset: 1280)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "curc", scope: !2314, file: !2315, line: 59, baseType: !22, size: 32, offset: 1344)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "selc", scope: !2314, file: !2315, line: 59, baseType: !22, size: 32, offset: 1376)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "undo_buf", scope: !2314, file: !2315, line: 61, baseType: !621, size: 64, offset: 1408)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "undo_pos", scope: !2314, file: !2315, line: 62, baseType: !22, size: 32, offset: 1472)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "undo_len", scope: !2314, file: !2315, line: 62, baseType: !22, size: 32, offset: 1504)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "compiled", scope: !2314, file: !2315, line: 64, baseType: !56, size: 64, offset: 1536)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !2314, file: !2315, line: 65, baseType: !708, size: 64, offset: 1600)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2099, file: !155, line: 600, baseType: !22, size: 32, offset: 20608)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2099, file: !155, line: 601, baseType: !177, size: 32, offset: 20640)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2099, file: !155, line: 604, baseType: !2345, size: 256, offset: 20672)
!2345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 256, elements: !1189)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2099, file: !155, line: 607, baseType: !2347, size: 10880, offset: 20928)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !155, line: 364, size: 10880, elements: !2348)
!2348 = !{!2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2347, file: !155, line: 365, baseType: !2102, size: 1984)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2347, file: !155, line: 367, baseType: !131, size: 8192, offset: 1984)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2347, file: !155, line: 369, baseType: !48, size: 16, offset: 10176)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2347, file: !155, line: 369, baseType: !48, size: 16, offset: 10192)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2347, file: !155, line: 370, baseType: !48, size: 16, offset: 10208)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2347, file: !155, line: 370, baseType: !48, size: 16, offset: 10224)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2347, file: !155, line: 372, baseType: !177, size: 32, offset: 10240)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2347, file: !155, line: 373, baseType: !177, size: 32, offset: 10272)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2347, file: !155, line: 375, baseType: !1875, size: 24, offset: 10304)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2347, file: !155, line: 376, baseType: !14, size: 8, offset: 10328)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2347, file: !155, line: 378, baseType: !14, size: 8, offset: 10336)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2347, file: !155, line: 379, baseType: !1875, size: 24, offset: 10344)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2347, file: !155, line: 381, baseType: !33, size: 512, offset: 10368)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2099, file: !155, line: 609, baseType: !22, size: 32, offset: 31808)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2099, file: !155, line: 610, baseType: !22, size: 32, offset: 31840)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !154, file: !155, line: 1252, baseType: !2365, size: 256, offset: 34112)
!2365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !155, line: 158, size: 256, elements: !2366)
!2366 = !{!2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2365, file: !155, line: 159, baseType: !22, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2365, file: !155, line: 160, baseType: !177, size: 32, offset: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2365, file: !155, line: 161, baseType: !177, size: 32, offset: 64)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2365, file: !155, line: 162, baseType: !177, size: 32, offset: 96)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2365, file: !155, line: 163, baseType: !22, size: 32, offset: 128)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2365, file: !155, line: 164, baseType: !48, size: 16, offset: 160)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2365, file: !155, line: 165, baseType: !48, size: 16, offset: 176)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2365, file: !155, line: 166, baseType: !177, size: 32, offset: 192)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2365, file: !155, line: 167, baseType: !177, size: 32, offset: 224)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !154, file: !155, line: 1254, baseType: !58, size: 128, offset: 34368)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !154, file: !155, line: 1255, baseType: !58, size: 128, offset: 34496)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !154, file: !155, line: 1257, baseType: !56, size: 64, offset: 34624)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !154, file: !155, line: 1258, baseType: !56, size: 64, offset: 34688)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !154, file: !155, line: 1259, baseType: !56, size: 64, offset: 34752)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !154, file: !155, line: 1260, baseType: !56, size: 64, offset: 34816)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !154, file: !155, line: 1262, baseType: !56, size: 64, offset: 34880)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !154, file: !155, line: 1265, baseType: !2384, size: 64, offset: 34944)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 64)
!2385 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !155, line: 1265, flags: DIFlagFwdDecl)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !154, file: !155, line: 1266, baseType: !48, size: 16, offset: 35008)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !154, file: !155, line: 1267, baseType: !48, size: 16, offset: 35024)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !154, file: !155, line: 1270, baseType: !22, size: 32, offset: 35040)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !154, file: !155, line: 1271, baseType: !58, size: 128, offset: 35072)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !154, file: !155, line: 1274, baseType: !2391, size: 128, offset: 35200)
!2391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !155, line: 650, size: 128, elements: !2392)
!2392 = !{!2393, !2394, !2395, !2396, !2397}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2391, file: !155, line: 651, baseType: !868, size: 96)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2391, file: !155, line: 652, baseType: !14, size: 8, offset: 96)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2391, file: !155, line: 652, baseType: !14, size: 8, offset: 104)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2391, file: !155, line: 652, baseType: !14, size: 8, offset: 112)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2391, file: !155, line: 652, baseType: !14, size: 8, offset: 120)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !154, file: !155, line: 1275, baseType: !2399, size: 1472, offset: 35328)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !155, line: 676, size: 1472, elements: !2400)
!2400 = !{!2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2422, !2423, !2424, !2425, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2399, file: !155, line: 679, baseType: !2391, size: 128)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2399, file: !155, line: 680, baseType: !48, size: 16, offset: 128)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2399, file: !155, line: 680, baseType: !48, size: 16, offset: 144)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2399, file: !155, line: 680, baseType: !48, size: 16, offset: 160)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2399, file: !155, line: 680, baseType: !48, size: 16, offset: 176)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2399, file: !155, line: 681, baseType: !48, size: 16, offset: 192)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2399, file: !155, line: 681, baseType: !48, size: 16, offset: 208)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2399, file: !155, line: 681, baseType: !48, size: 16, offset: 224)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2399, file: !155, line: 681, baseType: !48, size: 16, offset: 240)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2399, file: !155, line: 682, baseType: !48, size: 16, offset: 256)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2399, file: !155, line: 682, baseType: !1247, size: 48, offset: 272)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2399, file: !155, line: 685, baseType: !2413, size: 192, offset: 320)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !155, line: 633, size: 192, elements: !2414)
!2414 = !{!2415, !2416, !2417, !2418, !2419, !2420, !2421}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2413, file: !155, line: 634, baseType: !48, size: 16)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2413, file: !155, line: 634, baseType: !48, size: 16, offset: 16)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2413, file: !155, line: 635, baseType: !48, size: 16, offset: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2413, file: !155, line: 635, baseType: !48, size: 16, offset: 48)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2413, file: !155, line: 636, baseType: !177, size: 32, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2413, file: !155, line: 636, baseType: !177, size: 32, offset: 96)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2413, file: !155, line: 637, baseType: !2313, size: 64, offset: 128)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2399, file: !155, line: 686, baseType: !48, size: 16, offset: 512)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2399, file: !155, line: 686, baseType: !48, size: 16, offset: 528)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2399, file: !155, line: 687, baseType: !177, size: 32, offset: 544)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2399, file: !155, line: 688, baseType: !2426, size: 448, offset: 576)
!2426 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !155, line: 674, baseType: !2427)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !155, line: 659, size: 448, elements: !2428)
!2428 = !{!2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2427, file: !155, line: 660, baseType: !177, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2427, file: !155, line: 661, baseType: !177, size: 32, offset: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2427, file: !155, line: 662, baseType: !177, size: 32, offset: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2427, file: !155, line: 663, baseType: !177, size: 32, offset: 96)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2427, file: !155, line: 664, baseType: !177, size: 32, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2427, file: !155, line: 665, baseType: !177, size: 32, offset: 160)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2427, file: !155, line: 666, baseType: !177, size: 32, offset: 192)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2427, file: !155, line: 667, baseType: !177, size: 32, offset: 224)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2427, file: !155, line: 668, baseType: !177, size: 32, offset: 256)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2427, file: !155, line: 669, baseType: !177, size: 32, offset: 288)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2427, file: !155, line: 670, baseType: !22, size: 32, offset: 320)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2427, file: !155, line: 671, baseType: !177, size: 32, offset: 352)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2427, file: !155, line: 672, baseType: !177, size: 32, offset: 384)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2427, file: !155, line: 673, baseType: !48, size: 16, offset: 416)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2427, file: !155, line: 673, baseType: !48, size: 16, offset: 432)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2399, file: !155, line: 692, baseType: !177, size: 32, offset: 1024)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2399, file: !155, line: 697, baseType: !177, size: 32, offset: 1056)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2399, file: !155, line: 703, baseType: !22, size: 32, offset: 1088)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2399, file: !155, line: 704, baseType: !48, size: 16, offset: 1120)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2399, file: !155, line: 704, baseType: !48, size: 16, offset: 1136)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2399, file: !155, line: 705, baseType: !48, size: 16, offset: 1152)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2399, file: !155, line: 706, baseType: !48, size: 16, offset: 1168)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2399, file: !155, line: 707, baseType: !48, size: 16, offset: 1184)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2399, file: !155, line: 708, baseType: !48, size: 16, offset: 1200)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2399, file: !155, line: 709, baseType: !48, size: 16, offset: 1216)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2399, file: !155, line: 709, baseType: !48, size: 16, offset: 1232)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2399, file: !155, line: 709, baseType: !48, size: 16, offset: 1248)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2399, file: !155, line: 709, baseType: !48, size: 16, offset: 1264)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2399, file: !155, line: 710, baseType: !48, size: 16, offset: 1280)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2399, file: !155, line: 711, baseType: !48, size: 16, offset: 1296)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2399, file: !155, line: 712, baseType: !177, size: 32, offset: 1312)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2399, file: !155, line: 713, baseType: !177, size: 32, offset: 1344)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2399, file: !155, line: 713, baseType: !177, size: 32, offset: 1376)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2399, file: !155, line: 713, baseType: !177, size: 32, offset: 1408)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2399, file: !155, line: 713, baseType: !177, size: 32, offset: 1440)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !154, file: !155, line: 1278, baseType: !2465, size: 64, offset: 36800)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !155, line: 1197, size: 64, elements: !2466)
!2466 = !{!2467, !2468, !2469, !2470}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2465, file: !155, line: 1199, baseType: !177, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2465, file: !155, line: 1200, baseType: !14, size: 8, offset: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2465, file: !155, line: 1201, baseType: !14, size: 8, offset: 40)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2465, file: !155, line: 1202, baseType: !48, size: 16, offset: 48)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !154, file: !155, line: 1281, baseType: !670, size: 64, offset: 36864)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !154, file: !155, line: 1284, baseType: !2473, size: 192, offset: 36928)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !155, line: 1208, size: 192, elements: !2474)
!2474 = !{!2475, !2476, !2477, !2478}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2473, file: !155, line: 1209, baseType: !868, size: 96)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2473, file: !155, line: 1210, baseType: !22, size: 32, offset: 96)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2473, file: !155, line: 1210, baseType: !22, size: 32, offset: 128)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2473, file: !155, line: 1210, baseType: !22, size: 32, offset: 160)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !154, file: !155, line: 1287, baseType: !1644, size: 64, offset: 37120)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !154, file: !155, line: 1289, baseType: !2481, size: 64, offset: 37184)
!2481 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !2482, line: 27, baseType: !2483)
!2482 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !2484, line: 45, baseType: !2485)
!2484 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2485 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !154, file: !155, line: 1290, baseType: !2481, size: 64, offset: 37248)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !154, file: !155, line: 1293, baseType: !2120, size: 1280, offset: 37312)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !154, file: !155, line: 1294, baseType: !2132, size: 512, offset: 38592)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !154, file: !155, line: 1295, baseType: !1302, size: 512, offset: 39104)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !154, file: !155, line: 1298, baseType: !2491, size: 64, offset: 39616)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 64)
!2492 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !155, line: 1298, flags: DIFlagFwdDecl)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !109, file: !110, line: 58, baseType: !153, size: 64, offset: 1536)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !109, file: !110, line: 60, baseType: !22, size: 32, offset: 1600)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !109, file: !110, line: 61, baseType: !22, size: 32, offset: 1632)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !109, file: !110, line: 63, baseType: !48, size: 16, offset: 1664)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !109, file: !110, line: 64, baseType: !48, size: 16, offset: 1680)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !109, file: !110, line: 65, baseType: !48, size: 16, offset: 1696)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !109, file: !110, line: 66, baseType: !48, size: 16, offset: 1712)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !109, file: !110, line: 67, baseType: !48, size: 16, offset: 1728)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !109, file: !110, line: 68, baseType: !48, size: 16, offset: 1744)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !109, file: !110, line: 69, baseType: !48, size: 16, offset: 1760)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !109, file: !110, line: 70, baseType: !48, size: 16, offset: 1776)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !109, file: !110, line: 71, baseType: !48, size: 16, offset: 1792)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !109, file: !110, line: 73, baseType: !48, size: 16, offset: 1808)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !109, file: !110, line: 74, baseType: !48, size: 16, offset: 1824)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !109, file: !110, line: 76, baseType: !48, size: 16, offset: 1840)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !109, file: !110, line: 78, baseType: !95, size: 64, offset: 1856)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !109, file: !110, line: 79, baseType: !56, size: 64, offset: 1920)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !102, file: !28, line: 175, baseType: !108, size: 64, offset: 256)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !102, file: !28, line: 176, baseType: !33, size: 512, offset: 320)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !102, file: !28, line: 178, baseType: !48, size: 16, offset: 832)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !102, file: !28, line: 178, baseType: !48, size: 16, offset: 848)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !102, file: !28, line: 178, baseType: !48, size: 16, offset: 864)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !102, file: !28, line: 178, baseType: !48, size: 16, offset: 880)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !102, file: !28, line: 179, baseType: !48, size: 16, offset: 896)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !102, file: !28, line: 180, baseType: !48, size: 16, offset: 912)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !102, file: !28, line: 181, baseType: !48, size: 16, offset: 928)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !102, file: !28, line: 182, baseType: !48, size: 16, offset: 944)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !102, file: !28, line: 183, baseType: !48, size: 16, offset: 960)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !102, file: !28, line: 184, baseType: !48, size: 16, offset: 976)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !102, file: !28, line: 185, baseType: !48, size: 16, offset: 992)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !102, file: !28, line: 186, baseType: !48, size: 16, offset: 1008)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !102, file: !28, line: 188, baseType: !22, size: 32, offset: 1024)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !102, file: !28, line: 190, baseType: !48, size: 16, offset: 1056)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !102, file: !28, line: 191, baseType: !48, size: 16, offset: 1072)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !102, file: !28, line: 194, baseType: !2528, size: 64, offset: 1088)
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 64)
!2529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !8, line: 421, size: 960, elements: !2530)
!2530 = !{!2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2563, !2564, !2565, !2566}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2529, file: !8, line: 422, baseType: !2528, size: 64)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2529, file: !8, line: 422, baseType: !2528, size: 64, offset: 64)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2529, file: !8, line: 424, baseType: !48, size: 16, offset: 128)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2529, file: !8, line: 425, baseType: !48, size: 16, offset: 144)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2529, file: !8, line: 426, baseType: !22, size: 32, offset: 160)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2529, file: !8, line: 426, baseType: !22, size: 32, offset: 192)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !2529, file: !8, line: 427, baseType: !1654, size: 64, offset: 224)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !2529, file: !8, line: 428, baseType: !2118, size: 48, offset: 288)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !2529, file: !8, line: 431, baseType: !14, size: 8, offset: 336)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2529, file: !8, line: 432, baseType: !14, size: 8, offset: 344)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !2529, file: !8, line: 435, baseType: !48, size: 16, offset: 352)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !2529, file: !8, line: 436, baseType: !48, size: 16, offset: 368)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !2529, file: !8, line: 437, baseType: !22, size: 32, offset: 384)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !2529, file: !8, line: 437, baseType: !22, size: 32, offset: 416)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !2529, file: !8, line: 438, baseType: !708, size: 64, offset: 448)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !2529, file: !8, line: 439, baseType: !22, size: 32, offset: 512)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !2529, file: !8, line: 439, baseType: !22, size: 32, offset: 544)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2529, file: !8, line: 442, baseType: !48, size: 16, offset: 576)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !2529, file: !8, line: 442, baseType: !48, size: 16, offset: 592)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2529, file: !8, line: 442, baseType: !48, size: 16, offset: 608)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !2529, file: !8, line: 442, baseType: !48, size: 16, offset: 624)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !2529, file: !8, line: 443, baseType: !48, size: 16, offset: 640)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !2529, file: !8, line: 446, baseType: !48, size: 16, offset: 656)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !2529, file: !8, line: 449, baseType: !12, size: 64, offset: 704)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !2529, file: !8, line: 452, baseType: !2556, size: 64, offset: 768)
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2557, size: 64)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !8, line: 463, size: 128, elements: !2558)
!2558 = !{!2559, !2560, !2561, !2562}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !2557, file: !8, line: 464, baseType: !22, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !2557, file: !8, line: 465, baseType: !177, size: 32, offset: 32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !2557, file: !8, line: 466, baseType: !177, size: 32, offset: 64)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !2557, file: !8, line: 467, baseType: !177, size: 32, offset: 96)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !2529, file: !8, line: 455, baseType: !48, size: 16, offset: 832)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !2529, file: !8, line: 456, baseType: !48, size: 16, offset: 848)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2529, file: !8, line: 457, baseType: !22, size: 32, offset: 864)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2529, file: !8, line: 458, baseType: !56, size: 64, offset: 896)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !102, file: !28, line: 196, baseType: !2568, size: 64, offset: 1152)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 64)
!2569 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !28, line: 55, flags: DIFlagFwdDecl)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !102, file: !28, line: 198, baseType: !2571, size: 64, offset: 1216)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !8, line: 398, size: 448, elements: !2573)
!2573 = !{!2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2572, file: !8, line: 399, baseType: !2571, size: 64)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2572, file: !8, line: 399, baseType: !2571, size: 64, offset: 64)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !2572, file: !8, line: 400, baseType: !22, size: 32, offset: 128)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2572, file: !8, line: 401, baseType: !22, size: 32, offset: 160)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2572, file: !8, line: 402, baseType: !22, size: 32, offset: 192)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !2572, file: !8, line: 403, baseType: !22, size: 32, offset: 224)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2572, file: !8, line: 404, baseType: !22, size: 32, offset: 256)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2572, file: !8, line: 405, baseType: !22, size: 32, offset: 288)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2572, file: !8, line: 407, baseType: !56, size: 64, offset: 320)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !2572, file: !8, line: 414, baseType: !56, size: 64, offset: 384)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !102, file: !28, line: 200, baseType: !22, size: 32, offset: 1280)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !102, file: !28, line: 200, baseType: !22, size: 32, offset: 1312)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !102, file: !28, line: 201, baseType: !56, size: 64, offset: 1344)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !102, file: !28, line: 203, baseType: !58, size: 128, offset: 1408)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !102, file: !28, line: 204, baseType: !58, size: 128, offset: 1536)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !102, file: !28, line: 205, baseType: !58, size: 128, offset: 1664)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !102, file: !28, line: 207, baseType: !58, size: 128, offset: 1792)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !102, file: !28, line: 208, baseType: !58, size: 128, offset: 1920)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !96, file: !8, line: 495, baseType: !708, size: 64, offset: 192)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !96, file: !8, line: 496, baseType: !22, size: 32, offset: 256)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !96, file: !8, line: 497, baseType: !56, size: 64, offset: 320)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !96, file: !8, line: 499, baseType: !708, size: 64, offset: 384)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !96, file: !8, line: 500, baseType: !708, size: 64, offset: 448)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !96, file: !8, line: 502, baseType: !708, size: 64, offset: 512)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !96, file: !8, line: 503, baseType: !708, size: 64, offset: 576)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !96, file: !8, line: 504, baseType: !708, size: 64, offset: 640)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !96, file: !8, line: 505, baseType: !22, size: 32, offset: 704)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !27, file: !28, line: 343, baseType: !58, size: 128, offset: 1024)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !27, file: !28, line: 344, baseType: !26, size: 64, offset: 1152)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !27, file: !28, line: 345, baseType: !422, size: 64, offset: 1216)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !27, file: !28, line: 346, baseType: !48, size: 16, offset: 1280)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !27, file: !28, line: 346, baseType: !1247, size: 48, offset: 1296)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !9, file: !8, line: 524, baseType: !2607, size: 64, offset: 320)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 64)
!2608 = !DISubroutineType(types: !2609)
!2609 = !{!699, !23, !26}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !9, file: !8, line: 530, baseType: !2611, size: 64, offset: 384)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 64)
!2612 = !DISubroutineType(types: !2613)
!2613 = !{!22, !23, !26, !2614}
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 64)
!2615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2529)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !9, file: !8, line: 531, baseType: !2617, size: 64, offset: 448)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 64)
!2618 = !DISubroutineType(types: !2619)
!2619 = !{null, !23, !26}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !9, file: !8, line: 532, baseType: !2611, size: 64, offset: 512)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !9, file: !8, line: 536, baseType: !2622, size: 64, offset: 576)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 64)
!2623 = !DISubroutineType(types: !2624)
!2624 = !{!22, !23}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !9, file: !8, line: 539, baseType: !2617, size: 64, offset: 640)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !9, file: !8, line: 542, baseType: !81, size: 64, offset: 704)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !9, file: !8, line: 545, baseType: !43, size: 64, offset: 768)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !9, file: !8, line: 549, baseType: !2629, size: 64, offset: 832)
!2629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 64)
!2630 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !25, line: 333, baseType: !2631)
!2631 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !25, line: 39, flags: DIFlagFwdDecl)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !9, file: !8, line: 552, baseType: !58, size: 128, offset: 896)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !9, file: !8, line: 555, baseType: !2634, size: 64, offset: 1024)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 64)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !28, line: 281, size: 1088, elements: !2636)
!2636 = !{!2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2635, file: !28, line: 282, baseType: !2634, size: 64)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2635, file: !28, line: 282, baseType: !2634, size: 64, offset: 64)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !2635, file: !28, line: 284, baseType: !58, size: 128, offset: 128)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !2635, file: !28, line: 285, baseType: !58, size: 128, offset: 256)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !2635, file: !28, line: 287, baseType: !33, size: 512, offset: 384)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !2635, file: !28, line: 288, baseType: !48, size: 16, offset: 896)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !2635, file: !28, line: 289, baseType: !48, size: 16, offset: 912)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2635, file: !28, line: 291, baseType: !48, size: 16, offset: 928)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !2635, file: !28, line: 292, baseType: !48, size: 16, offset: 944)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2635, file: !28, line: 295, baseType: !2622, size: 64, offset: 960)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !2635, file: !28, line: 296, baseType: !56, size: 64, offset: 1024)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !9, file: !8, line: 559, baseType: !56, size: 64, offset: 1088)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !9, file: !8, line: 560, baseType: !2650, size: 64, offset: 1152)
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 64)
!2651 = !DISubroutineType(types: !2652)
!2652 = !{!22, !23, !69}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !9, file: !8, line: 563, baseType: !450, size: 256, offset: 1216)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9, file: !8, line: 566, baseType: !48, size: 16, offset: 1472)
!2655 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2656, retainedTypes: !2780, globals: !2871, splitDebugInlining: false, nameTableKind: None)
!2656 = !{!835, !2657, !2664, !2681, !2693, !2706, !2715, !2719, !2733, !2741, !2765, !2769}
!2657 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2658, line: 376, baseType: !676, size: 32, elements: !2659)
!2658 = !DIFile(filename: "blender/source/blender/windowmanager/WM_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2659 = !{!2660, !2661, !2662, !2663}
!2660 = !DIEnumerator(name: "WM_JOB_PRIORITY", value: 1, isUnsigned: true)
!2661 = !DIEnumerator(name: "WM_JOB_EXCL_RENDER", value: 2, isUnsigned: true)
!2662 = !DIEnumerator(name: "WM_JOB_PROGRESS", value: 4, isUnsigned: true)
!2663 = !DIEnumerator(name: "WM_JOB_SUSPEND", value: 8, isUnsigned: true)
!2664 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2658, line: 384, baseType: !676, size: 32, elements: !2665)
!2665 = !{!2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680}
!2666 = !DIEnumerator(name: "WM_JOB_TYPE_ANY", value: 0, isUnsigned: true)
!2667 = !DIEnumerator(name: "WM_JOB_TYPE_COMPOSITE", value: 1, isUnsigned: true)
!2668 = !DIEnumerator(name: "WM_JOB_TYPE_RENDER", value: 2, isUnsigned: true)
!2669 = !DIEnumerator(name: "WM_JOB_TYPE_RENDER_PREVIEW", value: 3, isUnsigned: true)
!2670 = !DIEnumerator(name: "WM_JOB_TYPE_SCREENCAST", value: 4, isUnsigned: true)
!2671 = !DIEnumerator(name: "WM_JOB_TYPE_OBJECT_SIM_OCEAN", value: 5, isUnsigned: true)
!2672 = !DIEnumerator(name: "WM_JOB_TYPE_OBJECT_SIM_FLUID", value: 6, isUnsigned: true)
!2673 = !DIEnumerator(name: "WM_JOB_TYPE_OBJECT_BAKE_TEXTURE", value: 7, isUnsigned: true)
!2674 = !DIEnumerator(name: "WM_JOB_TYPE_OBJECT_BAKE", value: 8, isUnsigned: true)
!2675 = !DIEnumerator(name: "WM_JOB_TYPE_FILESEL_THUMBNAIL", value: 9, isUnsigned: true)
!2676 = !DIEnumerator(name: "WM_JOB_TYPE_CLIP_BUILD_PROXY", value: 10, isUnsigned: true)
!2677 = !DIEnumerator(name: "WM_JOB_TYPE_CLIP_TRACK_MARKERS", value: 11, isUnsigned: true)
!2678 = !DIEnumerator(name: "WM_JOB_TYPE_CLIP_SOLVE_CAMERA", value: 12, isUnsigned: true)
!2679 = !DIEnumerator(name: "WM_JOB_TYPE_CLIP_PREFETCH", value: 13, isUnsigned: true)
!2680 = !DIEnumerator(name: "WM_JOB_TYPE_SEQ_BUILD_PROXY", value: 14, isUnsigned: true)
!2681 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2682, line: 123, baseType: !676, size: 32, elements: !2683)
!2682 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_global.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2683 = !{!2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692}
!2684 = !DIEnumerator(name: "G_DEBUG", value: 1, isUnsigned: true)
!2685 = !DIEnumerator(name: "G_DEBUG_FFMPEG", value: 2, isUnsigned: true)
!2686 = !DIEnumerator(name: "G_DEBUG_PYTHON", value: 4, isUnsigned: true)
!2687 = !DIEnumerator(name: "G_DEBUG_EVENTS", value: 8, isUnsigned: true)
!2688 = !DIEnumerator(name: "G_DEBUG_HANDLERS", value: 16, isUnsigned: true)
!2689 = !DIEnumerator(name: "G_DEBUG_WM", value: 32, isUnsigned: true)
!2690 = !DIEnumerator(name: "G_DEBUG_JOBS", value: 64, isUnsigned: true)
!2691 = !DIEnumerator(name: "G_DEBUG_FREESTYLE", value: 128, isUnsigned: true)
!2692 = !DIEnumerator(name: "G_DEBUG_DEPSGRAPH", value: 256, isUnsigned: true)
!2693 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpaceNode_Flag", file: !625, line: 966, baseType: !676, size: 32, elements: !2694)
!2694 = !{!2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705}
!2695 = !DIEnumerator(name: "SNODE_BACKDRAW", value: 2, isUnsigned: true)
!2696 = !DIEnumerator(name: "SNODE_SHOW_GPENCIL", value: 4, isUnsigned: true)
!2697 = !DIEnumerator(name: "SNODE_USE_ALPHA", value: 8, isUnsigned: true)
!2698 = !DIEnumerator(name: "SNODE_SHOW_ALPHA", value: 16, isUnsigned: true)
!2699 = !DIEnumerator(name: "SNODE_SHOW_R", value: 128, isUnsigned: true)
!2700 = !DIEnumerator(name: "SNODE_SHOW_G", value: 256, isUnsigned: true)
!2701 = !DIEnumerator(name: "SNODE_SHOW_B", value: 512, isUnsigned: true)
!2702 = !DIEnumerator(name: "SNODE_AUTO_RENDER", value: 32, isUnsigned: true)
!2703 = !DIEnumerator(name: "SNODE_SHOW_HIGHLIGHT", value: 64, isUnsigned: true)
!2704 = !DIEnumerator(name: "SNODE_NEW_SHADERS", value: 2048, isUnsigned: true)
!2705 = !DIEnumerator(name: "SNODE_PIN", value: 4096, isUnsigned: true)
!2706 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eNodeSocketFlag", file: !83, line: 154, baseType: !676, size: 32, elements: !2707)
!2707 = !{!2708, !2709, !2710, !2711, !2712, !2713, !2714}
!2708 = !DIEnumerator(name: "SOCK_HIDDEN", value: 2, isUnsigned: true)
!2709 = !DIEnumerator(name: "SOCK_IN_USE", value: 4, isUnsigned: true)
!2710 = !DIEnumerator(name: "SOCK_UNAVAIL", value: 8, isUnsigned: true)
!2711 = !DIEnumerator(name: "SOCK_COLLAPSED", value: 64, isUnsigned: true)
!2712 = !DIEnumerator(name: "SOCK_HIDE_VALUE", value: 128, isUnsigned: true)
!2713 = !DIEnumerator(name: "SOCK_AUTO_HIDDEN__DEPRECATED", value: 256, isUnsigned: true)
!2714 = !DIEnumerator(name: "SOCK_NO_INTERNAL_LINK", value: 512, isUnsigned: true)
!2715 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eNodeSocketInOut", file: !83, line: 148, baseType: !676, size: 32, elements: !2716)
!2716 = !{!2717, !2718}
!2717 = !DIEnumerator(name: "SOCK_IN", value: 1, isUnsigned: true)
!2718 = !DIEnumerator(name: "SOCK_OUT", value: 2, isUnsigned: true)
!2719 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !8, line: 141, baseType: !676, size: 32, elements: !2720)
!2720 = !{!2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732}
!2721 = !DIEnumerator(name: "WM_OP_INVOKE_DEFAULT", value: 0, isUnsigned: true)
!2722 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_WIN", value: 1, isUnsigned: true)
!2723 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_CHANNELS", value: 2, isUnsigned: true)
!2724 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_PREVIEW", value: 3, isUnsigned: true)
!2725 = !DIEnumerator(name: "WM_OP_INVOKE_AREA", value: 4, isUnsigned: true)
!2726 = !DIEnumerator(name: "WM_OP_INVOKE_SCREEN", value: 5, isUnsigned: true)
!2727 = !DIEnumerator(name: "WM_OP_EXEC_DEFAULT", value: 6, isUnsigned: true)
!2728 = !DIEnumerator(name: "WM_OP_EXEC_REGION_WIN", value: 7, isUnsigned: true)
!2729 = !DIEnumerator(name: "WM_OP_EXEC_REGION_CHANNELS", value: 8, isUnsigned: true)
!2730 = !DIEnumerator(name: "WM_OP_EXEC_REGION_PREVIEW", value: 9, isUnsigned: true)
!2731 = !DIEnumerator(name: "WM_OP_EXEC_AREA", value: 10, isUnsigned: true)
!2732 = !DIEnumerator(name: "WM_OP_EXEC_SCREEN", value: 11, isUnsigned: true)
!2733 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !28, line: 351, baseType: !676, size: 32, elements: !2734)
!2734 = !{!2735, !2736, !2737, !2738, !2739, !2740}
!2735 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!2736 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!2737 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!2738 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!2739 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!2740 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!2741 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpace_Type", file: !625, line: 1163, baseType: !676, size: 32, elements: !2742)
!2742 = !{!2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764}
!2743 = !DIEnumerator(name: "SPACE_EMPTY", value: 0, isUnsigned: true)
!2744 = !DIEnumerator(name: "SPACE_VIEW3D", value: 1, isUnsigned: true)
!2745 = !DIEnumerator(name: "SPACE_IPO", value: 2, isUnsigned: true)
!2746 = !DIEnumerator(name: "SPACE_OUTLINER", value: 3, isUnsigned: true)
!2747 = !DIEnumerator(name: "SPACE_BUTS", value: 4, isUnsigned: true)
!2748 = !DIEnumerator(name: "SPACE_FILE", value: 5, isUnsigned: true)
!2749 = !DIEnumerator(name: "SPACE_IMAGE", value: 6, isUnsigned: true)
!2750 = !DIEnumerator(name: "SPACE_INFO", value: 7, isUnsigned: true)
!2751 = !DIEnumerator(name: "SPACE_SEQ", value: 8, isUnsigned: true)
!2752 = !DIEnumerator(name: "SPACE_TEXT", value: 9, isUnsigned: true)
!2753 = !DIEnumerator(name: "SPACE_IMASEL", value: 10, isUnsigned: true)
!2754 = !DIEnumerator(name: "SPACE_SOUND", value: 11, isUnsigned: true)
!2755 = !DIEnumerator(name: "SPACE_ACTION", value: 12, isUnsigned: true)
!2756 = !DIEnumerator(name: "SPACE_NLA", value: 13, isUnsigned: true)
!2757 = !DIEnumerator(name: "SPACE_SCRIPT", value: 14, isUnsigned: true)
!2758 = !DIEnumerator(name: "SPACE_TIME", value: 15, isUnsigned: true)
!2759 = !DIEnumerator(name: "SPACE_NODE", value: 16, isUnsigned: true)
!2760 = !DIEnumerator(name: "SPACE_LOGIC", value: 17, isUnsigned: true)
!2761 = !DIEnumerator(name: "SPACE_CONSOLE", value: 18, isUnsigned: true)
!2762 = !DIEnumerator(name: "SPACE_USERPREF", value: 19, isUnsigned: true)
!2763 = !DIEnumerator(name: "SPACE_CLIP", value: 20, isUnsigned: true)
!2764 = !DIEnumerator(name: "SPACEICONMAX", value: 20, isUnsigned: true)
!2765 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 87, baseType: !676, size: 32, elements: !2766)
!2766 = !{!2767, !2768}
!2767 = !DIEnumerator(name: "COM_RECALC_COMPOSITE", value: 1, isUnsigned: true)
!2768 = !DIEnumerator(name: "COM_RECALC_VIEWER", value: 2, isUnsigned: true)
!2769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !28, line: 67, baseType: !676, size: 32, elements: !2770)
!2770 = !{!2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779}
!2771 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!2772 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!2773 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!2774 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!2775 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!2776 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!2777 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!2778 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!2779 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!2780 = !{!56, !621, !2781, !2782, !2784, !2786, !126, !2867, !177, !2869}
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !1045, line: 203, baseType: !1044)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = !DIDerivedType(tag: DW_TAG_typedef, name: "World", file: !168, line: 131, baseType: !167)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64)
!2787 = !DIDerivedType(tag: DW_TAG_typedef, name: "Lamp", file: !2788, line: 113, baseType: !2789)
!2788 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lamp_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Lamp", file: !2788, line: 48, size: 4160, elements: !2790)
!2790 = !{!2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2865, !2866}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2789, file: !2788, line: 49, baseType: !113, size: 960)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2789, file: !2788, line: 50, baseType: !159, size: 64, offset: 960)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2789, file: !2788, line: 52, baseType: !48, size: 16, offset: 1024)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2789, file: !2788, line: 52, baseType: !48, size: 16, offset: 1040)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2789, file: !2788, line: 53, baseType: !22, size: 32, offset: 1056)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !2789, file: !2788, line: 55, baseType: !48, size: 16, offset: 1088)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !2789, file: !2788, line: 55, baseType: !48, size: 16, offset: 1104)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2789, file: !2788, line: 56, baseType: !177, size: 32, offset: 1120)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2789, file: !2788, line: 56, baseType: !177, size: 32, offset: 1152)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2789, file: !2788, line: 56, baseType: !177, size: 32, offset: 1184)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !2789, file: !2788, line: 56, baseType: !177, size: 32, offset: 1216)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "shdwr", scope: !2789, file: !2788, line: 57, baseType: !177, size: 32, offset: 1248)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "shdwg", scope: !2789, file: !2788, line: 57, baseType: !177, size: 32, offset: 1280)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "shdwb", scope: !2789, file: !2788, line: 57, baseType: !177, size: 32, offset: 1312)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "shdwpad", scope: !2789, file: !2788, line: 57, baseType: !177, size: 32, offset: 1344)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !2789, file: !2788, line: 59, baseType: !177, size: 32, offset: 1376)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2789, file: !2788, line: 59, baseType: !177, size: 32, offset: 1408)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "spotsize", scope: !2789, file: !2788, line: 59, baseType: !177, size: 32, offset: 1440)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "spotblend", scope: !2789, file: !2788, line: 59, baseType: !177, size: 32, offset: 1472)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "haint", scope: !2789, file: !2788, line: 60, baseType: !177, size: 32, offset: 1504)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "att1", scope: !2789, file: !2788, line: 63, baseType: !177, size: 32, offset: 1536)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "att2", scope: !2789, file: !2788, line: 63, baseType: !177, size: 32, offset: 1568)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "curfalloff", scope: !2789, file: !2788, line: 64, baseType: !1377, size: 64, offset: 1600)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !2789, file: !2788, line: 65, baseType: !48, size: 16, offset: 1664)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2789, file: !2788, line: 66, baseType: !48, size: 16, offset: 1680)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !2789, file: !2788, line: 68, baseType: !177, size: 32, offset: 1696)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2789, file: !2788, line: 68, baseType: !177, size: 32, offset: 1728)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !2789, file: !2788, line: 69, baseType: !177, size: 32, offset: 1760)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2789, file: !2788, line: 69, baseType: !177, size: 32, offset: 1792)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !2789, file: !2788, line: 69, baseType: !177, size: 32, offset: 1824)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "bleedbias", scope: !2789, file: !2788, line: 69, baseType: !177, size: 32, offset: 1856)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2789, file: !2788, line: 69, baseType: !177, size: 32, offset: 1888)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "bufsize", scope: !2789, file: !2788, line: 70, baseType: !48, size: 16, offset: 1920)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !2789, file: !2788, line: 70, baseType: !48, size: 16, offset: 1936)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !2789, file: !2788, line: 70, baseType: !48, size: 16, offset: 1952)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2789, file: !2788, line: 70, baseType: !48, size: 16, offset: 1968)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "bufflag", scope: !2789, file: !2788, line: 71, baseType: !14, size: 8, offset: 1984)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "buftype", scope: !2789, file: !2788, line: 71, baseType: !14, size: 8, offset: 1992)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp", scope: !2789, file: !2788, line: 73, baseType: !48, size: 16, offset: 2000)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampy", scope: !2789, file: !2788, line: 73, baseType: !48, size: 16, offset: 2016)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampz", scope: !2789, file: !2788, line: 73, baseType: !48, size: 16, offset: 2032)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_type", scope: !2789, file: !2788, line: 74, baseType: !48, size: 16, offset: 2048)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "area_shape", scope: !2789, file: !2788, line: 75, baseType: !48, size: 16, offset: 2064)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "area_size", scope: !2789, file: !2788, line: 76, baseType: !177, size: 32, offset: 2080)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizey", scope: !2789, file: !2788, line: 76, baseType: !177, size: 32, offset: 2112)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizez", scope: !2789, file: !2788, line: 76, baseType: !177, size: 32, offset: 2144)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh", scope: !2789, file: !2788, line: 77, baseType: !177, size: 32, offset: 2176)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_method", scope: !2789, file: !2788, line: 78, baseType: !48, size: 16, offset: 2208)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "shadowmap_type", scope: !2789, file: !2788, line: 79, baseType: !48, size: 16, offset: 2224)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !2789, file: !2788, line: 82, baseType: !48, size: 16, offset: 2240)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !2789, file: !2788, line: 82, baseType: !48, size: 16, offset: 2256)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "sun_effect_type", scope: !2789, file: !2788, line: 85, baseType: !48, size: 16, offset: 2272)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendtype", scope: !2789, file: !2788, line: 86, baseType: !48, size: 16, offset: 2288)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "horizon_brightness", scope: !2789, file: !2788, line: 87, baseType: !177, size: 32, offset: 2304)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !2789, file: !2788, line: 88, baseType: !177, size: 32, offset: 2336)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "sun_brightness", scope: !2789, file: !2788, line: 89, baseType: !177, size: 32, offset: 2368)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "sun_size", scope: !2789, file: !2788, line: 90, baseType: !177, size: 32, offset: 2400)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "backscattered_light", scope: !2789, file: !2788, line: 91, baseType: !177, size: 32, offset: 2432)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "sun_intensity", scope: !2789, file: !2788, line: 92, baseType: !177, size: 32, offset: 2464)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "atm_turbidity", scope: !2789, file: !2788, line: 93, baseType: !177, size: 32, offset: 2496)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "atm_inscattering_factor", scope: !2789, file: !2788, line: 94, baseType: !177, size: 32, offset: 2528)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "atm_extinction_factor", scope: !2789, file: !2788, line: 95, baseType: !177, size: 32, offset: 2560)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "atm_distance_factor", scope: !2789, file: !2788, line: 96, baseType: !177, size: 32, offset: 2592)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendfac", scope: !2789, file: !2788, line: 97, baseType: !177, size: 32, offset: 2624)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "sky_exposure", scope: !2789, file: !2788, line: 98, baseType: !177, size: 32, offset: 2656)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "shadow_frustum_size", scope: !2789, file: !2788, line: 99, baseType: !177, size: 32, offset: 2688)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "sky_colorspace", scope: !2789, file: !2788, line: 100, baseType: !48, size: 16, offset: 2720)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2789, file: !2788, line: 101, baseType: !2083, size: 16, offset: 2736)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2789, file: !2788, line: 103, baseType: !242, size: 64, offset: 2752)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !2789, file: !2788, line: 104, baseType: !245, size: 1152, offset: 2816)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !2789, file: !2788, line: 105, baseType: !48, size: 16, offset: 3968)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2789, file: !2788, line: 105, baseType: !48, size: 16, offset: 3984)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2789, file: !2788, line: 106, baseType: !2864, size: 32, offset: 4000)
!2864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 32, elements: !514)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2789, file: !2788, line: 109, baseType: !1207, size: 64, offset: 4032)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2789, file: !2788, line: 112, baseType: !328, size: 64, offset: 4096)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2868 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeTree", file: !83, line: 391, baseType: !329)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !155, line: 1299, baseType: !154)
!2871 = !{!0, !2872}
!2872 = !DIGlobalVariableExpression(var: !2873, expr: !DIExpression())
!2873 = distinct !DIGlobalVariable(name: "move_direction_items", scope: !2655, file: !3, line: 2219, type: !2874, isLocal: true, isDefinition: true)
!2874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2875, size: 960, elements: !869)
!2875 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !25, line: 308, baseType: !2876)
!2876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !25, line: 302, size: 320, elements: !2877)
!2877 = !{!2878, !2879, !2880, !2881, !2882}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2876, file: !25, line: 303, baseType: !22, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !2876, file: !25, line: 304, baseType: !12, size: 64, offset: 64)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !2876, file: !25, line: 305, baseType: !22, size: 32, offset: 128)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2876, file: !25, line: 306, baseType: !12, size: 64, offset: 192)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2876, file: !25, line: 307, baseType: !12, size: 64, offset: 256)
!2883 = !{}
!2884 = !{i32 7, !"Dwarf Version", i32 4}
!2885 = !{i32 2, !"Debug Info Version", i32 3}
!2886 = !{i32 1, !"wchar_size", i32 4}
!2887 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2888 = distinct !DISubprogram(name: "ED_node_composite_job", scope: !3, file: !3, line: 270, type: !2889, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!2889 = !DISubroutineType(types: !2890)
!2890 = !{null, !2891, !328, !2869}
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2893)
!2893 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !1851, line: 69, baseType: !24)
!2894 = !DILocalVariable(name: "C", arg: 1, scope: !2888, file: !3, line: 270, type: !2891)
!2895 = !DILocation(line: 270, column: 44, scope: !2888)
!2896 = !DILocalVariable(name: "nodetree", arg: 2, scope: !2888, file: !3, line: 270, type: !328)
!2897 = !DILocation(line: 270, column: 65, scope: !2888)
!2898 = !DILocalVariable(name: "scene_owner", arg: 3, scope: !2888, file: !3, line: 270, type: !2869)
!2899 = !DILocation(line: 270, column: 82, scope: !2888)
!2900 = !DILocalVariable(name: "wm_job", scope: !2888, file: !3, line: 272, type: !2901)
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2902, size: 64)
!2902 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmJob", file: !2658, line: 71, baseType: !2903)
!2903 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmJob", file: !2658, line: 55, flags: DIFlagFwdDecl)
!2904 = !DILocation(line: 272, column: 9, scope: !2888)
!2905 = !DILocalVariable(name: "cj", scope: !2888, file: !3, line: 273, type: !2906)
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2907, size: 64)
!2907 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompoJob", file: !3, line: 101, baseType: !2908)
!2908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CompoJob", file: !3, line: 92, size: 448, elements: !2909)
!2909 = !{!2910, !2911, !2912, !2913, !2916, !2917, !2918, !2919}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2908, file: !3, line: 93, baseType: !2869, size: 64)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "ntree", scope: !2908, file: !3, line: 94, baseType: !2867, size: 64, offset: 64)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "localtree", scope: !2908, file: !3, line: 95, baseType: !2867, size: 64, offset: 128)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !2908, file: !3, line: 96, baseType: !2914, size: 64, offset: 192)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!2915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !48)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "do_update", scope: !2908, file: !3, line: 97, baseType: !2781, size: 64, offset: 256)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !2908, file: !3, line: 98, baseType: !239, size: 64, offset: 320)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "need_sync", scope: !2908, file: !3, line: 99, baseType: !48, size: 16, offset: 384)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "recalc_flags", scope: !2908, file: !3, line: 100, baseType: !22, size: 32, offset: 416)
!2920 = !DILocation(line: 273, column: 12, scope: !2888)
!2921 = !DILocalVariable(name: "scene", scope: !2888, file: !3, line: 274, type: !2869)
!2922 = !DILocation(line: 274, column: 9, scope: !2888)
!2923 = !DILocation(line: 274, column: 32, scope: !2888)
!2924 = !DILocation(line: 274, column: 17, scope: !2888)
!2925 = !DILocation(line: 277, column: 8, scope: !2926)
!2926 = distinct !DILexicalBlock(scope: !2888, file: !3, line: 277, column: 6)
!2927 = !DILocation(line: 277, column: 6, scope: !2926)
!2928 = !DILocation(line: 277, column: 6, scope: !2888)
!2929 = !DILocation(line: 278, column: 3, scope: !2930)
!2930 = distinct !DILexicalBlock(scope: !2926, file: !3, line: 277, column: 22)
!2931 = !DILocation(line: 282, column: 13, scope: !2888)
!2932 = !DILocation(line: 285, column: 26, scope: !2888)
!2933 = !DILocation(line: 285, column: 33, scope: !2888)
!2934 = !DILocation(line: 285, column: 2, scope: !2888)
!2935 = !DILocation(line: 287, column: 38, scope: !2888)
!2936 = !DILocation(line: 287, column: 23, scope: !2888)
!2937 = !DILocation(line: 287, column: 56, scope: !2888)
!2938 = !DILocation(line: 287, column: 42, scope: !2888)
!2939 = !DILocation(line: 287, column: 60, scope: !2888)
!2940 = !DILocation(line: 287, column: 11, scope: !2888)
!2941 = !DILocation(line: 287, column: 9, scope: !2888)
!2942 = !DILocation(line: 289, column: 7, scope: !2888)
!2943 = !DILocation(line: 289, column: 5, scope: !2888)
!2944 = !DILocation(line: 292, column: 14, scope: !2888)
!2945 = !DILocation(line: 292, column: 2, scope: !2888)
!2946 = !DILocation(line: 292, column: 6, scope: !2888)
!2947 = !DILocation(line: 292, column: 12, scope: !2888)
!2948 = !DILocation(line: 293, column: 14, scope: !2888)
!2949 = !DILocation(line: 293, column: 2, scope: !2888)
!2950 = !DILocation(line: 293, column: 6, scope: !2888)
!2951 = !DILocation(line: 293, column: 12, scope: !2888)
!2952 = !DILocation(line: 294, column: 44, scope: !2888)
!2953 = !DILocation(line: 294, column: 21, scope: !2888)
!2954 = !DILocation(line: 294, column: 2, scope: !2888)
!2955 = !DILocation(line: 294, column: 6, scope: !2888)
!2956 = !DILocation(line: 294, column: 19, scope: !2888)
!2957 = !DILocation(line: 297, column: 25, scope: !2888)
!2958 = !DILocation(line: 297, column: 33, scope: !2888)
!2959 = !DILocation(line: 297, column: 2, scope: !2888)
!2960 = !DILocation(line: 298, column: 16, scope: !2888)
!2961 = !DILocation(line: 298, column: 2, scope: !2888)
!2962 = !DILocation(line: 299, column: 20, scope: !2888)
!2963 = !DILocation(line: 299, column: 2, scope: !2888)
!2964 = !DILocation(line: 301, column: 31, scope: !2888)
!2965 = !DILocation(line: 301, column: 16, scope: !2888)
!2966 = !DILocation(line: 301, column: 35, scope: !2888)
!2967 = !DILocation(line: 301, column: 2, scope: !2888)
!2968 = !DILocation(line: 302, column: 1, scope: !2888)
!2969 = distinct !DISubprogram(name: "compo_get_recalc_flags", scope: !3, file: !3, line: 123, type: !2970, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!2970 = !DISubroutineType(types: !2971)
!2971 = !{!22, !2891}
!2972 = !DILocalVariable(name: "C", arg: 1, scope: !2969, file: !3, line: 123, type: !2891)
!2973 = !DILocation(line: 123, column: 51, scope: !2969)
!2974 = !DILocalVariable(name: "wm", scope: !2969, file: !3, line: 125, type: !2975)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindowManager", file: !28, line: 160, baseType: !2977)
!2977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindowManager", file: !28, line: 128, size: 2816, elements: !2978)
!2978 = !{!2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !3004, !3005, !3006, !3007, !3008, !3009}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2977, file: !28, line: 129, baseType: !113, size: 960)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "windrawable", scope: !2977, file: !28, line: 131, baseType: !101, size: 64, offset: 960)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "winactive", scope: !2977, file: !28, line: 131, baseType: !101, size: 64, offset: 1024)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !2977, file: !28, line: 132, baseType: !58, size: 128, offset: 1088)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2977, file: !28, line: 134, baseType: !22, size: 32, offset: 1216)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "file_saved", scope: !2977, file: !28, line: 135, baseType: !48, size: 16, offset: 1248)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "op_undo_depth", scope: !2977, file: !28, line: 136, baseType: !48, size: 16, offset: 1264)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "operators", scope: !2977, file: !28, line: 138, baseType: !58, size: 128, offset: 1280)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2977, file: !28, line: 140, baseType: !58, size: 128, offset: 1408)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !2977, file: !28, line: 142, baseType: !87, size: 320, offset: 1536)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "jobs", scope: !2977, file: !28, line: 144, baseType: !58, size: 128, offset: 1856)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursors", scope: !2977, file: !28, line: 146, baseType: !58, size: 128, offset: 1984)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "drags", scope: !2977, file: !28, line: 148, baseType: !58, size: 128, offset: 2112)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "keyconfigs", scope: !2977, file: !28, line: 150, baseType: !58, size: 128, offset: 2240)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "defaultconf", scope: !2977, file: !28, line: 151, baseType: !2994, size: 64, offset: 2368)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 64)
!2995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyConfig", file: !28, line: 310, size: 1344, elements: !2996)
!2996 = !{!2997, !2998, !2999, !3000, !3001, !3002, !3003}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2995, file: !28, line: 311, baseType: !2994, size: 64)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2995, file: !28, line: 311, baseType: !2994, size: 64, offset: 64)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !2995, file: !28, line: 313, baseType: !33, size: 512, offset: 128)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !2995, file: !28, line: 314, baseType: !33, size: 512, offset: 640)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "keymaps", scope: !2995, file: !28, line: 316, baseType: !58, size: 128, offset: 1152)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "actkeymap", scope: !2995, file: !28, line: 317, baseType: !22, size: 32, offset: 1280)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2995, file: !28, line: 317, baseType: !22, size: 32, offset: 1312)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "addonconf", scope: !2977, file: !28, line: 152, baseType: !2994, size: 64, offset: 2432)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "userconf", scope: !2977, file: !28, line: 153, baseType: !2994, size: 64, offset: 2496)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "timers", scope: !2977, file: !28, line: 155, baseType: !58, size: 128, offset: 2560)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "autosavetimer", scope: !2977, file: !28, line: 156, baseType: !95, size: 64, offset: 2688)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "is_interface_locked", scope: !2977, file: !28, line: 158, baseType: !14, size: 8, offset: 2752)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !2977, file: !28, line: 159, baseType: !1309, size: 56, offset: 2760)
!3010 = !DILocation(line: 125, column: 19, scope: !2969)
!3011 = !DILocation(line: 125, column: 39, scope: !2969)
!3012 = !DILocation(line: 125, column: 24, scope: !2969)
!3013 = !DILocalVariable(name: "win", scope: !2969, file: !3, line: 126, type: !3014)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64)
!3015 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindow", file: !28, line: 209, baseType: !102)
!3016 = !DILocation(line: 126, column: 12, scope: !2969)
!3017 = !DILocalVariable(name: "recalc_flags", scope: !2969, file: !3, line: 127, type: !22)
!3018 = !DILocation(line: 127, column: 6, scope: !2969)
!3019 = !DILocation(line: 129, column: 13, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !2969, file: !3, line: 129, column: 2)
!3021 = !DILocation(line: 129, column: 17, scope: !3020)
!3022 = !DILocation(line: 129, column: 25, scope: !3020)
!3023 = !DILocation(line: 129, column: 11, scope: !3020)
!3024 = !DILocation(line: 129, column: 7, scope: !3020)
!3025 = !DILocation(line: 129, column: 32, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !3020, file: !3, line: 129, column: 2)
!3027 = !DILocation(line: 129, column: 2, scope: !3020)
!3028 = !DILocalVariable(name: "sc", scope: !3029, file: !3, line: 130, type: !3030)
!3029 = distinct !DILexicalBlock(scope: !3026, file: !3, line: 129, column: 54)
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3031, size: 64)
!3031 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !110, line: 80, baseType: !109)
!3032 = !DILocation(line: 130, column: 12, scope: !3029)
!3033 = !DILocation(line: 130, column: 17, scope: !3029)
!3034 = !DILocation(line: 130, column: 22, scope: !3029)
!3035 = !DILocalVariable(name: "sa", scope: !3029, file: !3, line: 131, type: !3036)
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 64)
!3037 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !110, line: 228, baseType: !3038)
!3038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !110, line: 203, size: 1280, elements: !3039)
!3039 = !{!3040, !3042, !3043, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3078, !3079, !3080, !3081}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3038, file: !110, line: 204, baseType: !3041, size: 64)
!3041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3038, size: 64)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3038, file: !110, line: 204, baseType: !3041, size: 64, offset: 64)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3038, file: !110, line: 206, baseType: !3044, size: 64, offset: 128)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!3045 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !110, line: 87, baseType: !3046)
!3046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !110, line: 82, size: 256, elements: !3047)
!3047 = !{!3048, !3050, !3051, !3052, !3058, !3059}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3046, file: !110, line: 83, baseType: !3049, size: 64)
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 64)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3046, file: !110, line: 83, baseType: !3049, size: 64, offset: 64)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !3046, file: !110, line: 83, baseType: !3049, size: 64, offset: 128)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3046, file: !110, line: 84, baseType: !3053, size: 32, offset: 192)
!3053 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !550, line: 43, baseType: !3054)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !550, line: 41, size: 32, elements: !3055)
!3055 = !{!3056, !3057}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3054, file: !550, line: 42, baseType: !48, size: 16)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3054, file: !550, line: 42, baseType: !48, size: 16, offset: 16)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3046, file: !110, line: 86, baseType: !48, size: 16, offset: 224)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !3046, file: !110, line: 86, baseType: !48, size: 16, offset: 240)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3038, file: !110, line: 206, baseType: !3044, size: 64, offset: 192)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3038, file: !110, line: 206, baseType: !3044, size: 64, offset: 256)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3038, file: !110, line: 206, baseType: !3044, size: 64, offset: 320)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !3038, file: !110, line: 207, baseType: !3030, size: 64, offset: 384)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !3038, file: !110, line: 209, baseType: !559, size: 128, offset: 448)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3038, file: !110, line: 211, baseType: !14, size: 8, offset: 576)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !3038, file: !110, line: 211, baseType: !14, size: 8, offset: 584)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3038, file: !110, line: 212, baseType: !48, size: 16, offset: 592)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3038, file: !110, line: 212, baseType: !48, size: 16, offset: 608)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !3038, file: !110, line: 214, baseType: !48, size: 16, offset: 624)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !3038, file: !110, line: 215, baseType: !48, size: 16, offset: 640)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3038, file: !110, line: 216, baseType: !48, size: 16, offset: 656)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !3038, file: !110, line: 217, baseType: !48, size: 16, offset: 672)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3038, file: !110, line: 219, baseType: !14, size: 8, offset: 688)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3038, file: !110, line: 219, baseType: !14, size: 8, offset: 696)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3038, file: !110, line: 221, baseType: !3076, size: 64, offset: 704)
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3077, size: 64)
!3077 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !110, line: 39, flags: DIFlagFwdDecl)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !3038, file: !110, line: 223, baseType: !58, size: 128, offset: 768)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3038, file: !110, line: 224, baseType: !58, size: 128, offset: 896)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3038, file: !110, line: 225, baseType: !58, size: 128, offset: 1024)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !3038, file: !110, line: 227, baseType: !58, size: 128, offset: 1152)
!3082 = !DILocation(line: 131, column: 12, scope: !3029)
!3083 = !DILocation(line: 133, column: 13, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3029, file: !3, line: 133, column: 3)
!3085 = !DILocation(line: 133, column: 17, scope: !3084)
!3086 = !DILocation(line: 133, column: 26, scope: !3084)
!3087 = !DILocation(line: 133, column: 11, scope: !3084)
!3088 = !DILocation(line: 133, column: 8, scope: !3084)
!3089 = !DILocation(line: 133, column: 33, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3084, file: !3, line: 133, column: 3)
!3091 = !DILocation(line: 133, column: 3, scope: !3084)
!3092 = !DILocation(line: 134, column: 8, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3094, file: !3, line: 134, column: 8)
!3094 = distinct !DILexicalBlock(scope: !3090, file: !3, line: 133, column: 52)
!3095 = !DILocation(line: 134, column: 12, scope: !3093)
!3096 = !DILocation(line: 134, column: 22, scope: !3093)
!3097 = !DILocation(line: 134, column: 8, scope: !3094)
!3098 = !DILocalVariable(name: "sima", scope: !3099, file: !3, line: 135, type: !3100)
!3099 = distinct !DILexicalBlock(scope: !3093, file: !3, line: 134, column: 38)
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 64)
!3101 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceImage", file: !625, line: 743, baseType: !3102)
!3102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceImage", file: !625, line: 710, size: 84672, elements: !3103)
!3103 = !{!3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170}
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3102, file: !625, line: 711, baseType: !628, size: 64)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3102, file: !625, line: 711, baseType: !628, size: 64, offset: 64)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3102, file: !625, line: 712, baseType: !58, size: 128, offset: 128)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3102, file: !625, line: 713, baseType: !22, size: 32, offset: 256)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3102, file: !625, line: 715, baseType: !22, size: 32, offset: 288)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3102, file: !625, line: 717, baseType: !989, size: 64, offset: 320)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !3102, file: !625, line: 718, baseType: !310, size: 320, offset: 384)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "cumap", scope: !3102, file: !625, line: 720, baseType: !1377, size: 64, offset: 704)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "scopes", scope: !3102, file: !625, line: 722, baseType: !3113, size: 42112, offset: 768)
!3113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scopes", file: !1303, line: 138, size: 42112, elements: !3114)
!3114 = !{!3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3128, !3147, !3148, !3149, !3150, !3151, !3152}
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !3113, file: !1303, line: 139, baseType: !22, size: 32)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "sample_full", scope: !3113, file: !1303, line: 140, baseType: !22, size: 32, offset: 32)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "sample_lines", scope: !3113, file: !1303, line: 141, baseType: !22, size: 32, offset: 64)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !3113, file: !1303, line: 142, baseType: !177, size: 32, offset: 96)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_mode", scope: !3113, file: !1303, line: 143, baseType: !22, size: 32, offset: 128)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_alpha", scope: !3113, file: !1303, line: 144, baseType: !177, size: 32, offset: 160)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_yfac", scope: !3113, file: !1303, line: 145, baseType: !177, size: 32, offset: 192)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_height", scope: !3113, file: !1303, line: 146, baseType: !22, size: 32, offset: 224)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_alpha", scope: !3113, file: !1303, line: 147, baseType: !177, size: 32, offset: 256)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_height", scope: !3113, file: !1303, line: 148, baseType: !22, size: 32, offset: 288)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "minmax", scope: !3113, file: !1303, line: 149, baseType: !3126, size: 192, offset: 320)
!3126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 192, elements: !3127)
!3127 = !{!870, !528}
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "hist", scope: !3113, file: !1303, line: 150, baseType: !3129, size: 41280, offset: 512)
!3129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Histogram", file: !1303, line: 118, size: 41280, elements: !3130)
!3130 = !{!3131, !3132, !3133, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !3129, file: !1303, line: 119, baseType: !22, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !3129, file: !1303, line: 120, baseType: !22, size: 32, offset: 32)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "data_luma", scope: !3129, file: !1303, line: 121, baseType: !3134, size: 8192, offset: 64)
!3134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 8192, elements: !343)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !3129, file: !1303, line: 122, baseType: !3134, size: 8192, offset: 8256)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !3129, file: !1303, line: 123, baseType: !3134, size: 8192, offset: 16448)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !3129, file: !1303, line: 124, baseType: !3134, size: 8192, offset: 24640)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "data_a", scope: !3129, file: !1303, line: 125, baseType: !3134, size: 8192, offset: 32832)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !3129, file: !1303, line: 126, baseType: !177, size: 32, offset: 41024)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !3129, file: !1303, line: 126, baseType: !177, size: 32, offset: 41056)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3129, file: !1303, line: 127, baseType: !48, size: 16, offset: 41088)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3129, file: !1303, line: 128, baseType: !48, size: 16, offset: 41104)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !3129, file: !1303, line: 129, baseType: !22, size: 32, offset: 41120)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3129, file: !1303, line: 133, baseType: !3145, size: 128, offset: 41152)
!3145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 128, elements: !3146)
!3146 = !{!528, !528}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_1", scope: !3113, file: !1303, line: 151, baseType: !239, size: 64, offset: 41792)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_2", scope: !3113, file: !1303, line: 152, baseType: !239, size: 64, offset: 41856)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_3", scope: !3113, file: !1303, line: 153, baseType: !239, size: 64, offset: 41920)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope", scope: !3113, file: !1303, line: 154, baseType: !239, size: 64, offset: 41984)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_tot", scope: !3113, file: !1303, line: 155, baseType: !22, size: 32, offset: 42048)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3113, file: !1303, line: 156, baseType: !22, size: 32, offset: 42080)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "sample_line_hist", scope: !3102, file: !625, line: 723, baseType: !3129, size: 41280, offset: 42880)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !3102, file: !625, line: 725, baseType: !670, size: 64, offset: 84160)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !3102, file: !625, line: 727, baseType: !569, size: 64, offset: 84224)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !3102, file: !625, line: 728, baseType: !177, size: 32, offset: 84288)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !3102, file: !625, line: 728, baseType: !177, size: 32, offset: 84320)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !3102, file: !625, line: 729, baseType: !177, size: 32, offset: 84352)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "centx", scope: !3102, file: !625, line: 730, baseType: !177, size: 32, offset: 84384)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "centy", scope: !3102, file: !625, line: 730, baseType: !177, size: 32, offset: 84416)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3102, file: !625, line: 732, baseType: !14, size: 8, offset: 84448)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !3102, file: !625, line: 733, baseType: !14, size: 8, offset: 84456)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3102, file: !625, line: 734, baseType: !48, size: 16, offset: 84464)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "curtile", scope: !3102, file: !625, line: 735, baseType: !48, size: 16, offset: 84480)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3102, file: !625, line: 736, baseType: !48, size: 16, offset: 84496)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uv", scope: !3102, file: !625, line: 737, baseType: !14, size: 8, offset: 84512)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "sticky", scope: !3102, file: !625, line: 738, baseType: !14, size: 8, offset: 84520)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uvstretch", scope: !3102, file: !625, line: 739, baseType: !14, size: 8, offset: 84528)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !3102, file: !625, line: 740, baseType: !14, size: 8, offset: 84536)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "mask_info", scope: !3102, file: !625, line: 742, baseType: !3171, size: 128, offset: 84544)
!3171 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSpaceInfo", file: !625, line: 554, baseType: !3172)
!3172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSpaceInfo", file: !625, line: 545, size: 128, elements: !3173)
!3173 = !{!3174, !3175, !3176, !3177, !3178}
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3172, file: !625, line: 548, baseType: !1849, size: 64)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "draw_flag", scope: !3172, file: !625, line: 550, baseType: !14, size: 8, offset: 64)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "draw_type", scope: !3172, file: !625, line: 551, baseType: !14, size: 8, offset: 72)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_mode", scope: !3172, file: !625, line: 552, baseType: !14, size: 8, offset: 80)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3172, file: !625, line: 553, baseType: !1951, size: 40, offset: 88)
!3179 = !DILocation(line: 135, column: 17, scope: !3099)
!3180 = !DILocation(line: 135, column: 24, scope: !3099)
!3181 = !DILocation(line: 135, column: 28, scope: !3099)
!3182 = !DILocation(line: 135, column: 38, scope: !3099)
!3183 = !DILocation(line: 136, column: 9, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3099, file: !3, line: 136, column: 9)
!3185 = !DILocation(line: 136, column: 15, scope: !3184)
!3186 = !DILocation(line: 136, column: 9, scope: !3099)
!3187 = !DILocation(line: 137, column: 10, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3189, file: !3, line: 137, column: 10)
!3189 = distinct !DILexicalBlock(scope: !3184, file: !3, line: 136, column: 22)
!3190 = !DILocation(line: 137, column: 16, scope: !3188)
!3191 = !DILocation(line: 137, column: 23, scope: !3188)
!3192 = !DILocation(line: 137, column: 28, scope: !3188)
!3193 = !DILocation(line: 137, column: 10, scope: !3189)
!3194 = !DILocation(line: 138, column: 20, scope: !3188)
!3195 = !DILocation(line: 138, column: 7, scope: !3188)
!3196 = !DILocation(line: 139, column: 15, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 139, column: 15)
!3198 = !DILocation(line: 139, column: 21, scope: !3197)
!3199 = !DILocation(line: 139, column: 28, scope: !3197)
!3200 = !DILocation(line: 139, column: 33, scope: !3197)
!3201 = !DILocation(line: 139, column: 15, scope: !3188)
!3202 = !DILocation(line: 140, column: 20, scope: !3197)
!3203 = !DILocation(line: 140, column: 7, scope: !3197)
!3204 = !DILocation(line: 141, column: 5, scope: !3189)
!3205 = !DILocation(line: 142, column: 4, scope: !3099)
!3206 = !DILocation(line: 143, column: 13, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3093, file: !3, line: 143, column: 13)
!3208 = !DILocation(line: 143, column: 17, scope: !3207)
!3209 = !DILocation(line: 143, column: 27, scope: !3207)
!3210 = !DILocation(line: 143, column: 13, scope: !3093)
!3211 = !DILocalVariable(name: "snode", scope: !3212, file: !3, line: 144, type: !3213)
!3212 = distinct !DILexicalBlock(scope: !3207, file: !3, line: 143, column: 42)
!3213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3214, size: 64)
!3214 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceNode", file: !625, line: 963, baseType: !624)
!3215 = !DILocation(line: 144, column: 16, scope: !3212)
!3216 = !DILocation(line: 144, column: 24, scope: !3212)
!3217 = !DILocation(line: 144, column: 28, scope: !3212)
!3218 = !DILocation(line: 144, column: 38, scope: !3212)
!3219 = !DILocation(line: 145, column: 9, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3212, file: !3, line: 145, column: 9)
!3221 = !DILocation(line: 145, column: 16, scope: !3220)
!3222 = !DILocation(line: 145, column: 21, scope: !3220)
!3223 = !DILocation(line: 145, column: 9, scope: !3212)
!3224 = !DILocation(line: 146, column: 19, scope: !3220)
!3225 = !DILocation(line: 146, column: 6, scope: !3220)
!3226 = !DILocation(line: 147, column: 4, scope: !3212)
!3227 = !DILocation(line: 148, column: 3, scope: !3094)
!3228 = !DILocation(line: 133, column: 42, scope: !3090)
!3229 = !DILocation(line: 133, column: 46, scope: !3090)
!3230 = !DILocation(line: 133, column: 40, scope: !3090)
!3231 = !DILocation(line: 133, column: 3, scope: !3090)
!3232 = distinct !{!3232, !3091, !3233}
!3233 = !DILocation(line: 148, column: 3, scope: !3084)
!3234 = !DILocation(line: 149, column: 2, scope: !3029)
!3235 = !DILocation(line: 129, column: 43, scope: !3026)
!3236 = !DILocation(line: 129, column: 48, scope: !3026)
!3237 = !DILocation(line: 129, column: 41, scope: !3026)
!3238 = !DILocation(line: 129, column: 2, scope: !3026)
!3239 = distinct !{!3239, !3027, !3240}
!3240 = !DILocation(line: 149, column: 2, scope: !3020)
!3241 = !DILocation(line: 151, column: 9, scope: !2969)
!3242 = !DILocation(line: 151, column: 2, scope: !2969)
!3243 = distinct !DISubprogram(name: "compo_freejob", scope: !3, file: !3, line: 185, type: !476, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!3244 = !DILocalVariable(name: "cjv", arg: 1, scope: !3243, file: !3, line: 185, type: !56)
!3245 = !DILocation(line: 185, column: 33, scope: !3243)
!3246 = !DILocalVariable(name: "cj", scope: !3243, file: !3, line: 187, type: !2906)
!3247 = !DILocation(line: 187, column: 12, scope: !3243)
!3248 = !DILocation(line: 187, column: 17, scope: !3243)
!3249 = !DILocation(line: 189, column: 6, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3243, file: !3, line: 189, column: 6)
!3251 = !DILocation(line: 189, column: 10, scope: !3250)
!3252 = !DILocation(line: 189, column: 6, scope: !3243)
!3253 = !DILocation(line: 190, column: 19, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 189, column: 21)
!3255 = !DILocation(line: 190, column: 23, scope: !3254)
!3256 = !DILocation(line: 190, column: 34, scope: !3254)
!3257 = !DILocation(line: 190, column: 38, scope: !3254)
!3258 = !DILocation(line: 190, column: 3, scope: !3254)
!3259 = !DILocation(line: 191, column: 2, scope: !3254)
!3260 = !DILocation(line: 192, column: 2, scope: !3243)
!3261 = !DILocation(line: 192, column: 12, scope: !3243)
!3262 = !DILocation(line: 193, column: 1, scope: !3243)
!3263 = distinct !DISubprogram(name: "compo_startjob", scope: !3, file: !3, line: 231, type: !3264, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!3264 = !DISubroutineType(types: !3265)
!3265 = !{null, !56, !2781, !2781, !239}
!3266 = !DILocalVariable(name: "cjv", arg: 1, scope: !3263, file: !3, line: 231, type: !56)
!3267 = !DILocation(line: 231, column: 34, scope: !3263)
!3268 = !DILocalVariable(name: "stop", arg: 2, scope: !3263, file: !3, line: 231, type: !2781)
!3269 = !DILocation(line: 231, column: 46, scope: !3263)
!3270 = !DILocalVariable(name: "do_update", arg: 3, scope: !3263, file: !3, line: 231, type: !2781)
!3271 = !DILocation(line: 231, column: 59, scope: !3263)
!3272 = !DILocalVariable(name: "progress", arg: 4, scope: !3263, file: !3, line: 231, type: !239)
!3273 = !DILocation(line: 231, column: 77, scope: !3263)
!3274 = !DILocalVariable(name: "cj", scope: !3263, file: !3, line: 233, type: !2906)
!3275 = !DILocation(line: 233, column: 12, scope: !3263)
!3276 = !DILocation(line: 233, column: 17, scope: !3263)
!3277 = !DILocalVariable(name: "ntree", scope: !3263, file: !3, line: 234, type: !2867)
!3278 = !DILocation(line: 234, column: 13, scope: !3263)
!3279 = !DILocation(line: 234, column: 21, scope: !3263)
!3280 = !DILocation(line: 234, column: 25, scope: !3263)
!3281 = !DILocalVariable(name: "scene", scope: !3263, file: !3, line: 235, type: !2869)
!3282 = !DILocation(line: 235, column: 9, scope: !3263)
!3283 = !DILocation(line: 235, column: 17, scope: !3263)
!3284 = !DILocation(line: 235, column: 21, scope: !3263)
!3285 = !DILocation(line: 237, column: 6, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3263, file: !3, line: 237, column: 6)
!3287 = !DILocation(line: 237, column: 13, scope: !3286)
!3288 = !DILocation(line: 237, column: 23, scope: !3286)
!3289 = !DILocation(line: 237, column: 6, scope: !3263)
!3290 = !DILocation(line: 238, column: 3, scope: !3286)
!3291 = !DILocation(line: 240, column: 13, scope: !3263)
!3292 = !DILocation(line: 240, column: 2, scope: !3263)
!3293 = !DILocation(line: 240, column: 6, scope: !3263)
!3294 = !DILocation(line: 240, column: 11, scope: !3263)
!3295 = !DILocation(line: 241, column: 18, scope: !3263)
!3296 = !DILocation(line: 241, column: 2, scope: !3263)
!3297 = !DILocation(line: 241, column: 6, scope: !3263)
!3298 = !DILocation(line: 241, column: 16, scope: !3263)
!3299 = !DILocation(line: 242, column: 17, scope: !3263)
!3300 = !DILocation(line: 242, column: 2, scope: !3263)
!3301 = !DILocation(line: 242, column: 6, scope: !3263)
!3302 = !DILocation(line: 242, column: 15, scope: !3263)
!3303 = !DILocation(line: 244, column: 2, scope: !3263)
!3304 = !DILocation(line: 244, column: 9, scope: !3263)
!3305 = !DILocation(line: 244, column: 20, scope: !3263)
!3306 = !DILocation(line: 245, column: 15, scope: !3263)
!3307 = !DILocation(line: 245, column: 2, scope: !3263)
!3308 = !DILocation(line: 245, column: 9, scope: !3263)
!3309 = !DILocation(line: 245, column: 13, scope: !3263)
!3310 = !DILocation(line: 246, column: 2, scope: !3263)
!3311 = !DILocation(line: 246, column: 9, scope: !3263)
!3312 = !DILocation(line: 246, column: 20, scope: !3263)
!3313 = !DILocation(line: 247, column: 15, scope: !3263)
!3314 = !DILocation(line: 247, column: 2, scope: !3263)
!3315 = !DILocation(line: 247, column: 9, scope: !3263)
!3316 = !DILocation(line: 247, column: 13, scope: !3263)
!3317 = !DILocation(line: 248, column: 2, scope: !3263)
!3318 = !DILocation(line: 248, column: 9, scope: !3263)
!3319 = !DILocation(line: 248, column: 18, scope: !3263)
!3320 = !DILocation(line: 249, column: 15, scope: !3263)
!3321 = !DILocation(line: 249, column: 2, scope: !3263)
!3322 = !DILocation(line: 249, column: 9, scope: !3263)
!3323 = !DILocation(line: 249, column: 13, scope: !3263)
!3324 = !DILocation(line: 250, column: 2, scope: !3263)
!3325 = !DILocation(line: 250, column: 9, scope: !3263)
!3326 = !DILocation(line: 250, column: 21, scope: !3263)
!3327 = !DILocation(line: 251, column: 15, scope: !3263)
!3328 = !DILocation(line: 251, column: 2, scope: !3263)
!3329 = !DILocation(line: 251, column: 9, scope: !3263)
!3330 = !DILocation(line: 251, column: 13, scope: !3263)
!3331 = !DILocation(line: 255, column: 24, scope: !3263)
!3332 = !DILocation(line: 255, column: 28, scope: !3263)
!3333 = !DILocation(line: 255, column: 35, scope: !3263)
!3334 = !DILocation(line: 255, column: 43, scope: !3263)
!3335 = !DILocation(line: 255, column: 47, scope: !3263)
!3336 = !DILocation(line: 255, column: 54, scope: !3263)
!3337 = !DILocation(line: 255, column: 71, scope: !3263)
!3338 = !DILocation(line: 255, column: 78, scope: !3263)
!3339 = !DILocation(line: 255, column: 94, scope: !3263)
!3340 = !DILocation(line: 255, column: 101, scope: !3263)
!3341 = !DILocation(line: 255, column: 2, scope: !3263)
!3342 = !DILocation(line: 257, column: 2, scope: !3263)
!3343 = !DILocation(line: 257, column: 9, scope: !3263)
!3344 = !DILocation(line: 257, column: 20, scope: !3263)
!3345 = !DILocation(line: 258, column: 2, scope: !3263)
!3346 = !DILocation(line: 258, column: 9, scope: !3263)
!3347 = !DILocation(line: 258, column: 20, scope: !3263)
!3348 = !DILocation(line: 259, column: 2, scope: !3263)
!3349 = !DILocation(line: 259, column: 9, scope: !3263)
!3350 = !DILocation(line: 259, column: 18, scope: !3263)
!3351 = !DILocation(line: 261, column: 1, scope: !3263)
!3352 = distinct !DISubprogram(name: "compo_initjob", scope: !3, file: !3, line: 197, type: !476, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!3353 = !DILocalVariable(name: "cjv", arg: 1, scope: !3352, file: !3, line: 197, type: !56)
!3354 = !DILocation(line: 197, column: 33, scope: !3352)
!3355 = !DILocalVariable(name: "cj", scope: !3352, file: !3, line: 199, type: !2906)
!3356 = !DILocation(line: 199, column: 12, scope: !3352)
!3357 = !DILocation(line: 199, column: 17, scope: !3352)
!3358 = !DILocation(line: 201, column: 32, scope: !3352)
!3359 = !DILocation(line: 201, column: 36, scope: !3352)
!3360 = !DILocation(line: 201, column: 18, scope: !3352)
!3361 = !DILocation(line: 201, column: 2, scope: !3352)
!3362 = !DILocation(line: 201, column: 6, scope: !3352)
!3363 = !DILocation(line: 201, column: 16, scope: !3352)
!3364 = !DILocation(line: 203, column: 6, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3352, file: !3, line: 203, column: 6)
!3366 = !DILocation(line: 203, column: 10, scope: !3365)
!3367 = !DILocation(line: 203, column: 6, scope: !3352)
!3368 = !DILocation(line: 204, column: 26, scope: !3365)
!3369 = !DILocation(line: 204, column: 30, scope: !3365)
!3370 = !DILocation(line: 204, column: 41, scope: !3365)
!3371 = !DILocation(line: 204, column: 45, scope: !3365)
!3372 = !DILocation(line: 204, column: 3, scope: !3365)
!3373 = !DILocation(line: 205, column: 1, scope: !3352)
!3374 = distinct !DISubprogram(name: "compo_updatejob", scope: !3, file: !3, line: 208, type: !476, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!3375 = !DILocalVariable(name: "cjv", arg: 1, scope: !3374, file: !3, line: 208, type: !56)
!3376 = !DILocation(line: 208, column: 35, scope: !3374)
!3377 = !DILocalVariable(name: "cj", scope: !3374, file: !3, line: 210, type: !2906)
!3378 = !DILocation(line: 210, column: 12, scope: !3374)
!3379 = !DILocation(line: 210, column: 17, scope: !3374)
!3380 = !DILocation(line: 212, column: 6, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 212, column: 6)
!3382 = !DILocation(line: 212, column: 10, scope: !3381)
!3383 = !DILocation(line: 212, column: 6, scope: !3374)
!3384 = !DILocation(line: 214, column: 18, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3381, file: !3, line: 212, column: 21)
!3386 = !DILocation(line: 214, column: 22, scope: !3385)
!3387 = !DILocation(line: 214, column: 33, scope: !3385)
!3388 = !DILocation(line: 214, column: 37, scope: !3385)
!3389 = !DILocation(line: 214, column: 3, scope: !3385)
!3390 = !DILocation(line: 216, column: 3, scope: !3385)
!3391 = !DILocation(line: 216, column: 7, scope: !3385)
!3392 = !DILocation(line: 216, column: 17, scope: !3385)
!3393 = !DILocation(line: 217, column: 2, scope: !3385)
!3394 = !DILocation(line: 219, column: 2, scope: !3374)
!3395 = !DILocation(line: 220, column: 1, scope: !3374)
!3396 = distinct !DISubprogram(name: "composite_node_active", scope: !3, file: !3, line: 307, type: !3397, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{!22, !3399}
!3399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 64)
!3400 = !DILocalVariable(name: "C", arg: 1, scope: !3396, file: !3, line: 307, type: !3399)
!3401 = !DILocation(line: 307, column: 37, scope: !3396)
!3402 = !DILocation(line: 309, column: 30, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3396, file: !3, line: 309, column: 6)
!3404 = !DILocation(line: 309, column: 6, scope: !3403)
!3405 = !DILocation(line: 309, column: 6, scope: !3396)
!3406 = !DILocalVariable(name: "snode", scope: !3407, file: !3, line: 310, type: !3213)
!3407 = distinct !DILexicalBlock(scope: !3403, file: !3, line: 309, column: 34)
!3408 = !DILocation(line: 310, column: 14, scope: !3407)
!3409 = !DILocation(line: 310, column: 40, scope: !3407)
!3410 = !DILocation(line: 310, column: 22, scope: !3407)
!3411 = !DILocation(line: 311, column: 29, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 311, column: 7)
!3413 = !DILocation(line: 311, column: 7, scope: !3412)
!3414 = !DILocation(line: 311, column: 7, scope: !3407)
!3415 = !DILocation(line: 312, column: 4, scope: !3412)
!3416 = !DILocation(line: 313, column: 2, scope: !3407)
!3417 = !DILocation(line: 314, column: 2, scope: !3396)
!3418 = !DILocation(line: 315, column: 1, scope: !3396)
!3419 = distinct !DISubprogram(name: "ED_node_is_compositor", scope: !3, file: !3, line: 363, type: !3420, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!3420 = !DISubroutineType(types: !3421)
!3421 = !{!699, !623}
!3422 = !DILocalVariable(name: "snode", arg: 1, scope: !3419, file: !3, line: 363, type: !623)
!3423 = !DILocation(line: 363, column: 46, scope: !3419)
!3424 = !DILocation(line: 365, column: 9, scope: !3419)
!3425 = !DILocation(line: 365, column: 2, scope: !3419)
!3426 = distinct !DISubprogram(name: "composite_node_editable", scope: !3, file: !3, line: 318, type: !3397, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!3427 = !DILocalVariable(name: "C", arg: 1, scope: !3426, file: !3, line: 318, type: !3399)
!3428 = !DILocation(line: 318, column: 39, scope: !3426)
!3429 = !DILocation(line: 320, column: 32, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3426, file: !3, line: 320, column: 6)
!3431 = !DILocation(line: 320, column: 6, scope: !3430)
!3432 = !DILocation(line: 320, column: 6, scope: !3426)
!3433 = !DILocalVariable(name: "snode", scope: !3434, file: !3, line: 321, type: !3213)
!3434 = distinct !DILexicalBlock(scope: !3430, file: !3, line: 320, column: 36)
!3435 = !DILocation(line: 321, column: 14, scope: !3434)
!3436 = !DILocation(line: 321, column: 40, scope: !3434)
!3437 = !DILocation(line: 321, column: 22, scope: !3434)
!3438 = !DILocation(line: 322, column: 29, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3434, file: !3, line: 322, column: 7)
!3440 = !DILocation(line: 322, column: 7, scope: !3439)
!3441 = !DILocation(line: 322, column: 7, scope: !3434)
!3442 = !DILocation(line: 323, column: 4, scope: !3439)
!3443 = !DILocation(line: 324, column: 2, scope: !3434)
!3444 = !DILocation(line: 325, column: 2, scope: !3426)
!3445 = !DILocation(line: 326, column: 1, scope: !3426)
!3446 = distinct !DISubprogram(name: "snode_dag_update", scope: !3, file: !3, line: 328, type: !3447, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!3447 = !DISubroutineType(types: !3448)
!3448 = !{null, !3399, !3213}
!3449 = !DILocalVariable(name: "C", arg: 1, scope: !3446, file: !3, line: 328, type: !3399)
!3450 = !DILocation(line: 328, column: 33, scope: !3446)
!3451 = !DILocalVariable(name: "snode", arg: 2, scope: !3446, file: !3, line: 328, type: !3213)
!3452 = !DILocation(line: 328, column: 47, scope: !3446)
!3453 = !DILocalVariable(name: "bmain", scope: !3446, file: !3, line: 330, type: !3454)
!3454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3455, size: 64)
!3455 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !3456, line: 104, baseType: !3457)
!3456 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !3456, line: 53, size: 15232, elements: !3458)
!3458 = !{!3459, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3515}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3457, file: !3456, line: 54, baseType: !3460, size: 64)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 64)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3457, file: !3456, line: 54, baseType: !3460, size: 64, offset: 64)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3457, file: !3456, line: 55, baseType: !131, size: 8192, offset: 128)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !3457, file: !3456, line: 56, baseType: !48, size: 16, offset: 8320)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !3457, file: !3456, line: 56, baseType: !48, size: 16, offset: 8336)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !3457, file: !3456, line: 57, baseType: !48, size: 16, offset: 8352)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !3457, file: !3456, line: 57, baseType: !48, size: 16, offset: 8368)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !3457, file: !3456, line: 58, baseType: !2481, size: 64, offset: 8384)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !3457, file: !3456, line: 59, baseType: !3469, size: 128, offset: 8448)
!3469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 128, elements: !3470)
!3470 = !{!3471}
!3471 = !DISubrange(count: 16)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !3457, file: !3456, line: 60, baseType: !48, size: 16, offset: 8576)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !3457, file: !3456, line: 62, baseType: !121, size: 64, offset: 8640)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3457, file: !3456, line: 63, baseType: !58, size: 128, offset: 8704)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !3457, file: !3456, line: 64, baseType: !58, size: 128, offset: 8832)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3457, file: !3456, line: 65, baseType: !58, size: 128, offset: 8960)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !3457, file: !3456, line: 66, baseType: !58, size: 128, offset: 9088)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !3457, file: !3456, line: 67, baseType: !58, size: 128, offset: 9216)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !3457, file: !3456, line: 68, baseType: !58, size: 128, offset: 9344)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3457, file: !3456, line: 69, baseType: !58, size: 128, offset: 9472)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !3457, file: !3456, line: 70, baseType: !58, size: 128, offset: 9600)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3457, file: !3456, line: 71, baseType: !58, size: 128, offset: 9728)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !3457, file: !3456, line: 72, baseType: !58, size: 128, offset: 9856)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !3457, file: !3456, line: 73, baseType: !58, size: 128, offset: 9984)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !3457, file: !3456, line: 74, baseType: !58, size: 128, offset: 10112)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3457, file: !3456, line: 75, baseType: !58, size: 128, offset: 10240)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3457, file: !3456, line: 76, baseType: !58, size: 128, offset: 10368)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !3457, file: !3456, line: 77, baseType: !58, size: 128, offset: 10496)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !3457, file: !3456, line: 78, baseType: !58, size: 128, offset: 10624)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !3457, file: !3456, line: 79, baseType: !58, size: 128, offset: 10752)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !3457, file: !3456, line: 80, baseType: !58, size: 128, offset: 10880)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !3457, file: !3456, line: 81, baseType: !58, size: 128, offset: 11008)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !3457, file: !3456, line: 82, baseType: !58, size: 128, offset: 11136)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !3457, file: !3456, line: 83, baseType: !58, size: 128, offset: 11264)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3457, file: !3456, line: 84, baseType: !58, size: 128, offset: 11392)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !3457, file: !3456, line: 85, baseType: !58, size: 128, offset: 11520)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3457, file: !3456, line: 86, baseType: !58, size: 128, offset: 11648)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !3457, file: !3456, line: 87, baseType: !58, size: 128, offset: 11776)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !3457, file: !3456, line: 88, baseType: !58, size: 128, offset: 11904)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !3457, file: !3456, line: 89, baseType: !58, size: 128, offset: 12032)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !3457, file: !3456, line: 90, baseType: !58, size: 128, offset: 12160)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !3457, file: !3456, line: 91, baseType: !58, size: 128, offset: 12288)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !3457, file: !3456, line: 92, baseType: !58, size: 128, offset: 12416)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !3457, file: !3456, line: 93, baseType: !58, size: 128, offset: 12544)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !3457, file: !3456, line: 94, baseType: !58, size: 128, offset: 12672)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3457, file: !3456, line: 95, baseType: !58, size: 128, offset: 12800)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !3457, file: !3456, line: 96, baseType: !58, size: 128, offset: 12928)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !3457, file: !3456, line: 98, baseType: !342, size: 2048, offset: 13056)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !3457, file: !3456, line: 101, baseType: !3510, size: 64, offset: 15104)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !3512, line: 58, size: 32, elements: !3513)
!3512 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3513 = !{!3514}
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3511, file: !3512, line: 59, baseType: !22, size: 32)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3457, file: !3456, line: 103, baseType: !3516, size: 64, offset: 15168)
!3516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3517, size: 64)
!3517 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !3456, line: 51, flags: DIFlagFwdDecl)
!3518 = !DILocation(line: 330, column: 8, scope: !3446)
!3519 = !DILocation(line: 330, column: 30, scope: !3446)
!3520 = !DILocation(line: 330, column: 16, scope: !3446)
!3521 = !DILocation(line: 333, column: 6, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 333, column: 6)
!3523 = !DILocation(line: 333, column: 13, scope: !3522)
!3524 = !DILocation(line: 333, column: 25, scope: !3522)
!3525 = !DILocation(line: 333, column: 32, scope: !3522)
!3526 = !DILocation(line: 333, column: 22, scope: !3522)
!3527 = !DILocation(line: 333, column: 6, scope: !3446)
!3528 = !DILocalVariable(name: "_nstore", scope: !3529, file: !3, line: 334, type: !3531)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 334, column: 3)
!3530 = distinct !DILexicalBlock(scope: !3522, file: !3, line: 333, column: 42)
!3531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NodeTreeIterStore", file: !336, line: 632, size: 448, elements: !3532)
!3532 = !{!3533, !3534, !3535, !3536, !3539, !3540, !3541}
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "ngroup", scope: !3531, file: !336, line: 633, baseType: !2867, size: 64)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3531, file: !336, line: 634, baseType: !2869, size: 64, offset: 64)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3531, file: !336, line: 635, baseType: !2782, size: 64, offset: 128)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !3531, file: !336, line: 636, baseType: !3537, size: 64, offset: 192)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 64)
!3538 = !DIDerivedType(tag: DW_TAG_typedef, name: "Tex", file: !161, line: 261, baseType: !256)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !3531, file: !336, line: 637, baseType: !2786, size: 64, offset: 256)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !3531, file: !336, line: 638, baseType: !2784, size: 64, offset: 320)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !3531, file: !336, line: 639, baseType: !3542, size: 64, offset: 384)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = !DIDerivedType(tag: DW_TAG_typedef, name: "FreestyleLineStyle", file: !3544, line: 454, baseType: !3545)
!3544 = !DIFile(filename: "blender/source/blender/makesdna/DNA_linestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FreestyleLineStyle", file: !3544, line: 421, size: 3712, elements: !3546)
!3546 = !{!3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3568, !3569, !3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592}
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3545, file: !3544, line: 422, baseType: !113, size: 960)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3545, file: !3544, line: 423, baseType: !159, size: 64, offset: 960)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3545, file: !3544, line: 425, baseType: !177, size: 32, offset: 1024)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3545, file: !3544, line: 425, baseType: !177, size: 32, offset: 1056)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3545, file: !3544, line: 425, baseType: !177, size: 32, offset: 1088)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !3545, file: !3544, line: 425, baseType: !177, size: 32, offset: 1120)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "thickness", scope: !3545, file: !3544, line: 426, baseType: !177, size: 32, offset: 1152)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_position", scope: !3545, file: !3544, line: 427, baseType: !22, size: 32, offset: 1184)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_ratio", scope: !3545, file: !3544, line: 428, baseType: !177, size: 32, offset: 1216)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3545, file: !3544, line: 429, baseType: !22, size: 32, offset: 1248)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !3545, file: !3544, line: 429, baseType: !22, size: 32, offset: 1280)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "chaining", scope: !3545, file: !3544, line: 430, baseType: !22, size: 32, offset: 1312)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "rounds", scope: !3545, file: !3544, line: 431, baseType: !676, size: 32, offset: 1344)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "split_length", scope: !3545, file: !3544, line: 432, baseType: !177, size: 32, offset: 1376)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "min_angle", scope: !3545, file: !3544, line: 433, baseType: !177, size: 32, offset: 1408)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "max_angle", scope: !3545, file: !3544, line: 433, baseType: !177, size: 32, offset: 1440)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "min_length", scope: !3545, file: !3544, line: 434, baseType: !177, size: 32, offset: 1472)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "max_length", scope: !3545, file: !3544, line: 434, baseType: !177, size: 32, offset: 1504)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "chain_count", scope: !3545, file: !3544, line: 435, baseType: !676, size: 32, offset: 1536)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "split_dash1", scope: !3545, file: !3544, line: 436, baseType: !3567, size: 16, offset: 1568)
!3567 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "split_gap1", scope: !3545, file: !3544, line: 436, baseType: !3567, size: 16, offset: 1584)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "split_dash2", scope: !3545, file: !3544, line: 437, baseType: !3567, size: 16, offset: 1600)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "split_gap2", scope: !3545, file: !3544, line: 437, baseType: !3567, size: 16, offset: 1616)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "split_dash3", scope: !3545, file: !3544, line: 438, baseType: !3567, size: 16, offset: 1632)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "split_gap3", scope: !3545, file: !3544, line: 438, baseType: !3567, size: 16, offset: 1648)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "sort_key", scope: !3545, file: !3544, line: 439, baseType: !22, size: 32, offset: 1664)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "integration_type", scope: !3545, file: !3544, line: 439, baseType: !22, size: 32, offset: 1696)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "texstep", scope: !3545, file: !3544, line: 440, baseType: !177, size: 32, offset: 1728)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !3545, file: !3544, line: 441, baseType: !48, size: 16, offset: 1760)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !3545, file: !3544, line: 441, baseType: !48, size: 16, offset: 1776)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !3545, file: !3544, line: 442, baseType: !48, size: 16, offset: 1792)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3545, file: !3544, line: 442, baseType: !1247, size: 48, offset: 1808)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "dash1", scope: !3545, file: !3544, line: 443, baseType: !3567, size: 16, offset: 1856)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "gap1", scope: !3545, file: !3544, line: 443, baseType: !3567, size: 16, offset: 1872)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "dash2", scope: !3545, file: !3544, line: 443, baseType: !3567, size: 16, offset: 1888)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "gap2", scope: !3545, file: !3544, line: 443, baseType: !3567, size: 16, offset: 1904)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "dash3", scope: !3545, file: !3544, line: 443, baseType: !3567, size: 16, offset: 1920)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "gap3", scope: !3545, file: !3544, line: 443, baseType: !3567, size: 16, offset: 1936)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "panel", scope: !3545, file: !3544, line: 444, baseType: !22, size: 32, offset: 1952)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !3545, file: !3544, line: 446, baseType: !245, size: 1152, offset: 1984)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !3545, file: !3544, line: 448, baseType: !328, size: 64, offset: 3136)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "color_modifiers", scope: !3545, file: !3544, line: 450, baseType: !58, size: 128, offset: 3200)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_modifiers", scope: !3545, file: !3544, line: 451, baseType: !58, size: 128, offset: 3328)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_modifiers", scope: !3545, file: !3544, line: 452, baseType: !58, size: 128, offset: 3456)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "geometry_modifiers", scope: !3545, file: !3544, line: 453, baseType: !58, size: 128, offset: 3584)
!3593 = !DILocation(line: 334, column: 3, scope: !3529)
!3594 = !DILocalVariable(name: "tntree", scope: !3529, file: !3, line: 334, type: !2867)
!3595 = !DILocalVariable(name: "id", scope: !3529, file: !3, line: 334, type: !126)
!3596 = !DILocation(line: 334, column: 3, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 334, column: 3)
!3598 = distinct !DILexicalBlock(scope: !3529, file: !3, line: 334, column: 3)
!3599 = !DILocation(line: 334, column: 3, scope: !3598)
!3600 = !DILocation(line: 335, column: 21, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3602, file: !3, line: 335, column: 8)
!3602 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 334, column: 39)
!3603 = distinct !DILexicalBlock(scope: !3597, file: !3, line: 334, column: 3)
!3604 = !DILocation(line: 335, column: 29, scope: !3601)
!3605 = !DILocation(line: 335, column: 36, scope: !3601)
!3606 = !DILocation(line: 335, column: 8, scope: !3601)
!3607 = !DILocation(line: 335, column: 8, scope: !3602)
!3608 = !DILocation(line: 336, column: 23, scope: !3601)
!3609 = !DILocation(line: 336, column: 5, scope: !3601)
!3610 = !DILocation(line: 337, column: 5, scope: !3603)
!3611 = distinct !{!3611, !3593, !3612}
!3612 = !DILocation(line: 337, column: 5, scope: !3529)
!3613 = !DILocation(line: 338, column: 2, scope: !3530)
!3614 = !DILocation(line: 340, column: 20, scope: !3446)
!3615 = !DILocation(line: 340, column: 27, scope: !3446)
!3616 = !DILocation(line: 340, column: 2, scope: !3446)
!3617 = !DILocation(line: 341, column: 1, scope: !3446)
!3618 = distinct !DISubprogram(name: "snode_notify", scope: !3, file: !3, line: 343, type: !3447, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!3619 = !DILocalVariable(name: "C", arg: 1, scope: !3618, file: !3, line: 343, type: !3399)
!3620 = !DILocation(line: 343, column: 29, scope: !3618)
!3621 = !DILocalVariable(name: "snode", arg: 2, scope: !3618, file: !3, line: 343, type: !3213)
!3622 = !DILocation(line: 343, column: 43, scope: !3618)
!3623 = !DILocation(line: 345, column: 24, scope: !3618)
!3624 = !DILocation(line: 345, column: 2, scope: !3618)
!3625 = !DILocation(line: 347, column: 24, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 347, column: 6)
!3627 = !DILocation(line: 347, column: 6, scope: !3626)
!3628 = !DILocation(line: 347, column: 6, scope: !3618)
!3629 = !DILocation(line: 348, column: 25, scope: !3626)
!3630 = !DILocation(line: 348, column: 52, scope: !3626)
!3631 = !DILocation(line: 348, column: 59, scope: !3626)
!3632 = !DILocation(line: 348, column: 3, scope: !3626)
!3633 = !DILocation(line: 349, column: 33, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3626, file: !3, line: 349, column: 11)
!3635 = !DILocation(line: 349, column: 11, scope: !3634)
!3636 = !DILocation(line: 349, column: 11, scope: !3626)
!3637 = !DILocation(line: 350, column: 25, scope: !3634)
!3638 = !DILocation(line: 350, column: 49, scope: !3634)
!3639 = !DILocation(line: 350, column: 56, scope: !3634)
!3640 = !DILocation(line: 350, column: 3, scope: !3634)
!3641 = !DILocation(line: 351, column: 30, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3634, file: !3, line: 351, column: 11)
!3643 = !DILocation(line: 351, column: 11, scope: !3642)
!3644 = !DILocation(line: 351, column: 11, scope: !3634)
!3645 = !DILocation(line: 352, column: 25, scope: !3642)
!3646 = !DILocation(line: 352, column: 51, scope: !3642)
!3647 = !DILocation(line: 352, column: 58, scope: !3642)
!3648 = !DILocation(line: 352, column: 3, scope: !3642)
!3649 = !DILocation(line: 353, column: 1, scope: !3618)
!3650 = distinct !DISubprogram(name: "ED_node_is_shader", scope: !3, file: !3, line: 368, type: !3420, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!3651 = !DILocalVariable(name: "snode", arg: 1, scope: !3650, file: !3, line: 368, type: !623)
!3652 = !DILocation(line: 368, column: 42, scope: !3650)
!3653 = !DILocation(line: 370, column: 9, scope: !3650)
!3654 = !DILocation(line: 370, column: 2, scope: !3650)
!3655 = distinct !DISubprogram(name: "ED_node_is_texture", scope: !3, file: !3, line: 373, type: !3420, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!3656 = !DILocalVariable(name: "snode", arg: 1, scope: !3655, file: !3, line: 373, type: !623)
!3657 = !DILocation(line: 373, column: 43, scope: !3655)
!3658 = !DILocation(line: 375, column: 9, scope: !3655)
!3659 = !DILocation(line: 375, column: 2, scope: !3655)
!3660 = distinct !DISubprogram(name: "ED_node_set_tree_type", scope: !3, file: !3, line: 355, type: !3661, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!3661 = !DISubroutineType(types: !3662)
!3662 = !{null, !3213, !3663}
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 64)
!3664 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeTreeType", file: !336, line: 315, baseType: !335)
!3665 = !DILocalVariable(name: "snode", arg: 1, scope: !3660, file: !3, line: 355, type: !3213)
!3666 = !DILocation(line: 355, column: 39, scope: !3660)
!3667 = !DILocalVariable(name: "typeinfo", arg: 2, scope: !3660, file: !3, line: 355, type: !3663)
!3668 = !DILocation(line: 355, column: 61, scope: !3660)
!3669 = !DILocation(line: 357, column: 6, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3660, file: !3, line: 357, column: 6)
!3671 = !DILocation(line: 357, column: 6, scope: !3660)
!3672 = !DILocation(line: 358, column: 15, scope: !3670)
!3673 = !DILocation(line: 358, column: 22, scope: !3670)
!3674 = !DILocation(line: 358, column: 35, scope: !3670)
!3675 = !DILocation(line: 358, column: 45, scope: !3670)
!3676 = !DILocation(line: 358, column: 3, scope: !3670)
!3677 = !DILocation(line: 360, column: 3, scope: !3670)
!3678 = !DILocation(line: 360, column: 10, scope: !3670)
!3679 = !DILocation(line: 360, column: 25, scope: !3670)
!3680 = !DILocation(line: 361, column: 1, scope: !3660)
!3681 = distinct !DISubprogram(name: "ED_node_shader_default", scope: !3, file: !3, line: 380, type: !3682, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!3682 = !DISubroutineType(types: !3683)
!3683 = !{null, !2891, !126}
!3684 = !DILocalVariable(name: "C", arg: 1, scope: !3681, file: !3, line: 380, type: !2891)
!3685 = !DILocation(line: 380, column: 45, scope: !3681)
!3686 = !DILocalVariable(name: "id", arg: 2, scope: !3681, file: !3, line: 380, type: !126)
!3687 = !DILocation(line: 380, column: 52, scope: !3681)
!3688 = !DILocalVariable(name: "scene", scope: !3681, file: !3, line: 382, type: !2869)
!3689 = !DILocation(line: 382, column: 9, scope: !3681)
!3690 = !DILocation(line: 382, column: 32, scope: !3681)
!3691 = !DILocation(line: 382, column: 17, scope: !3681)
!3692 = !DILocalVariable(name: "in", scope: !3681, file: !3, line: 383, type: !499)
!3693 = !DILocation(line: 383, column: 9, scope: !3681)
!3694 = !DILocalVariable(name: "out", scope: !3681, file: !3, line: 383, type: !499)
!3695 = !DILocation(line: 383, column: 14, scope: !3681)
!3696 = !DILocalVariable(name: "fromsock", scope: !3681, file: !3, line: 384, type: !503)
!3697 = !DILocation(line: 384, column: 15, scope: !3681)
!3698 = !DILocalVariable(name: "tosock", scope: !3681, file: !3, line: 384, type: !503)
!3699 = !DILocation(line: 384, column: 26, scope: !3681)
!3700 = !DILocalVariable(name: "sock", scope: !3681, file: !3, line: 384, type: !503)
!3701 = !DILocation(line: 384, column: 35, scope: !3681)
!3702 = !DILocalVariable(name: "ntree", scope: !3681, file: !3, line: 385, type: !2867)
!3703 = !DILocation(line: 385, column: 13, scope: !3681)
!3704 = !DILocalVariable(name: "output_type", scope: !3681, file: !3, line: 386, type: !22)
!3705 = !DILocation(line: 386, column: 6, scope: !3681)
!3706 = !DILocalVariable(name: "shader_type", scope: !3681, file: !3, line: 386, type: !22)
!3707 = !DILocation(line: 386, column: 19, scope: !3681)
!3708 = !DILocalVariable(name: "color", scope: !3681, file: !3, line: 387, type: !513)
!3709 = !DILocation(line: 387, column: 8, scope: !3681)
!3710 = !DILocalVariable(name: "strength", scope: !3681, file: !3, line: 387, type: !177)
!3711 = !DILocation(line: 387, column: 47, scope: !3681)
!3712 = !DILocation(line: 389, column: 48, scope: !3681)
!3713 = !DILocation(line: 389, column: 66, scope: !3681)
!3714 = !DILocation(line: 389, column: 10, scope: !3681)
!3715 = !DILocation(line: 389, column: 8, scope: !3681)
!3716 = !DILocation(line: 391, column: 10, scope: !3681)
!3717 = !DILocation(line: 391, column: 2, scope: !3681)
!3718 = !DILocalVariable(name: "ma", scope: !3719, file: !3, line: 394, type: !2782)
!3719 = distinct !DILexicalBlock(scope: !3720, file: !3, line: 393, column: 3)
!3720 = distinct !DILexicalBlock(scope: !3681, file: !3, line: 391, column: 24)
!3721 = !DILocation(line: 394, column: 14, scope: !3719)
!3722 = !DILocation(line: 394, column: 31, scope: !3719)
!3723 = !DILocation(line: 394, column: 19, scope: !3719)
!3724 = !DILocation(line: 395, column: 19, scope: !3719)
!3725 = !DILocation(line: 395, column: 4, scope: !3719)
!3726 = !DILocation(line: 395, column: 8, scope: !3719)
!3727 = !DILocation(line: 395, column: 17, scope: !3719)
!3728 = !DILocation(line: 397, column: 40, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3719, file: !3, line: 397, column: 8)
!3730 = !DILocation(line: 397, column: 8, scope: !3729)
!3731 = !DILocation(line: 397, column: 8, scope: !3719)
!3732 = !DILocation(line: 398, column: 17, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 397, column: 48)
!3734 = !DILocation(line: 399, column: 17, scope: !3733)
!3735 = !DILocation(line: 400, column: 4, scope: !3733)
!3736 = !DILocation(line: 402, column: 17, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 401, column: 9)
!3738 = !DILocation(line: 403, column: 17, scope: !3737)
!3739 = !DILocation(line: 406, column: 15, scope: !3719)
!3740 = !DILocation(line: 406, column: 23, scope: !3719)
!3741 = !DILocation(line: 406, column: 27, scope: !3719)
!3742 = !DILocation(line: 406, column: 4, scope: !3719)
!3743 = !DILocation(line: 407, column: 13, scope: !3719)
!3744 = !DILocation(line: 408, column: 4, scope: !3719)
!3745 = !DILocalVariable(name: "wo", scope: !3746, file: !3, line: 412, type: !2784)
!3746 = distinct !DILexicalBlock(scope: !3720, file: !3, line: 411, column: 3)
!3747 = !DILocation(line: 412, column: 11, scope: !3746)
!3748 = !DILocation(line: 412, column: 25, scope: !3746)
!3749 = !DILocation(line: 412, column: 16, scope: !3746)
!3750 = !DILocation(line: 413, column: 19, scope: !3746)
!3751 = !DILocation(line: 413, column: 4, scope: !3746)
!3752 = !DILocation(line: 413, column: 8, scope: !3746)
!3753 = !DILocation(line: 413, column: 17, scope: !3746)
!3754 = !DILocation(line: 415, column: 16, scope: !3746)
!3755 = !DILocation(line: 416, column: 16, scope: !3746)
!3756 = !DILocation(line: 418, column: 15, scope: !3746)
!3757 = !DILocation(line: 418, column: 23, scope: !3746)
!3758 = !DILocation(line: 418, column: 27, scope: !3746)
!3759 = !DILocation(line: 418, column: 4, scope: !3746)
!3760 = !DILocation(line: 419, column: 13, scope: !3746)
!3761 = !DILocation(line: 420, column: 4, scope: !3746)
!3762 = !DILocalVariable(name: "la", scope: !3763, file: !3, line: 424, type: !2786)
!3763 = distinct !DILexicalBlock(scope: !3720, file: !3, line: 423, column: 3)
!3764 = !DILocation(line: 424, column: 10, scope: !3763)
!3765 = !DILocation(line: 424, column: 23, scope: !3763)
!3766 = !DILocation(line: 424, column: 15, scope: !3763)
!3767 = !DILocation(line: 425, column: 19, scope: !3763)
!3768 = !DILocation(line: 425, column: 4, scope: !3763)
!3769 = !DILocation(line: 425, column: 8, scope: !3763)
!3770 = !DILocation(line: 425, column: 17, scope: !3763)
!3771 = !DILocation(line: 427, column: 16, scope: !3763)
!3772 = !DILocation(line: 428, column: 16, scope: !3763)
!3773 = !DILocation(line: 430, column: 15, scope: !3763)
!3774 = !DILocation(line: 430, column: 23, scope: !3763)
!3775 = !DILocation(line: 430, column: 27, scope: !3763)
!3776 = !DILocation(line: 430, column: 4, scope: !3763)
!3777 = !DILocation(line: 431, column: 8, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 431, column: 8)
!3779 = !DILocation(line: 431, column: 12, scope: !3778)
!3780 = !DILocation(line: 431, column: 17, scope: !3778)
!3781 = !DILocation(line: 431, column: 29, scope: !3778)
!3782 = !DILocation(line: 431, column: 32, scope: !3778)
!3783 = !DILocation(line: 431, column: 36, scope: !3778)
!3784 = !DILocation(line: 431, column: 41, scope: !3778)
!3785 = !DILocation(line: 431, column: 52, scope: !3778)
!3786 = !DILocation(line: 431, column: 55, scope: !3778)
!3787 = !DILocation(line: 431, column: 59, scope: !3778)
!3788 = !DILocation(line: 431, column: 64, scope: !3778)
!3789 = !DILocation(line: 431, column: 8, scope: !3763)
!3790 = !DILocation(line: 432, column: 14, scope: !3778)
!3791 = !DILocation(line: 432, column: 5, scope: !3778)
!3792 = !DILocation(line: 434, column: 14, scope: !3778)
!3793 = !DILocation(line: 435, column: 4, scope: !3763)
!3794 = !DILocation(line: 438, column: 4, scope: !3720)
!3795 = !DILocation(line: 439, column: 4, scope: !3720)
!3796 = !DILocation(line: 442, column: 26, scope: !3681)
!3797 = !DILocation(line: 442, column: 29, scope: !3681)
!3798 = !DILocation(line: 442, column: 36, scope: !3681)
!3799 = !DILocation(line: 442, column: 8, scope: !3681)
!3800 = !DILocation(line: 442, column: 6, scope: !3681)
!3801 = !DILocation(line: 443, column: 2, scope: !3681)
!3802 = !DILocation(line: 443, column: 7, scope: !3681)
!3803 = !DILocation(line: 443, column: 12, scope: !3681)
!3804 = !DILocation(line: 443, column: 22, scope: !3681)
!3805 = !DILocation(line: 443, column: 27, scope: !3681)
!3806 = !DILocation(line: 443, column: 32, scope: !3681)
!3807 = !DILocation(line: 445, column: 25, scope: !3681)
!3808 = !DILocation(line: 445, column: 28, scope: !3681)
!3809 = !DILocation(line: 445, column: 35, scope: !3681)
!3810 = !DILocation(line: 445, column: 7, scope: !3681)
!3811 = !DILocation(line: 445, column: 5, scope: !3681)
!3812 = !DILocation(line: 446, column: 2, scope: !3681)
!3813 = !DILocation(line: 446, column: 6, scope: !3681)
!3814 = !DILocation(line: 446, column: 11, scope: !3681)
!3815 = !DILocation(line: 446, column: 20, scope: !3681)
!3816 = !DILocation(line: 446, column: 24, scope: !3681)
!3817 = !DILocation(line: 446, column: 29, scope: !3681)
!3818 = !DILocation(line: 447, column: 16, scope: !3681)
!3819 = !DILocation(line: 447, column: 23, scope: !3681)
!3820 = !DILocation(line: 447, column: 2, scope: !3681)
!3821 = !DILocation(line: 450, column: 13, scope: !3681)
!3822 = !DILocation(line: 450, column: 17, scope: !3681)
!3823 = !DILocation(line: 450, column: 25, scope: !3681)
!3824 = !DILocation(line: 450, column: 11, scope: !3681)
!3825 = !DILocation(line: 451, column: 11, scope: !3681)
!3826 = !DILocation(line: 451, column: 16, scope: !3681)
!3827 = !DILocation(line: 451, column: 23, scope: !3681)
!3828 = !DILocation(line: 451, column: 9, scope: !3681)
!3829 = !DILocation(line: 452, column: 14, scope: !3681)
!3830 = !DILocation(line: 452, column: 21, scope: !3681)
!3831 = !DILocation(line: 452, column: 25, scope: !3681)
!3832 = !DILocation(line: 452, column: 35, scope: !3681)
!3833 = !DILocation(line: 452, column: 40, scope: !3681)
!3834 = !DILocation(line: 452, column: 2, scope: !3681)
!3835 = !DILocation(line: 455, column: 38, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3681, file: !3, line: 455, column: 6)
!3837 = !DILocation(line: 455, column: 6, scope: !3836)
!3838 = !DILocation(line: 455, column: 6, scope: !3681)
!3839 = !DILocalVariable(name: "sockptr", scope: !3840, file: !3, line: 456, type: !3841)
!3840 = distinct !DILexicalBlock(scope: !3836, file: !3, line: 455, column: 46)
!3841 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !25, line: 62, baseType: !74)
!3842 = !DILocation(line: 456, column: 14, scope: !3840)
!3843 = !DILocation(line: 457, column: 10, scope: !3840)
!3844 = !DILocation(line: 457, column: 14, scope: !3840)
!3845 = !DILocation(line: 457, column: 21, scope: !3840)
!3846 = !DILocation(line: 457, column: 8, scope: !3840)
!3847 = !DILocation(line: 458, column: 28, scope: !3840)
!3848 = !DILocation(line: 458, column: 22, scope: !3840)
!3849 = !DILocation(line: 458, column: 52, scope: !3840)
!3850 = !DILocation(line: 458, column: 3, scope: !3840)
!3851 = !DILocation(line: 460, column: 50, scope: !3840)
!3852 = !DILocation(line: 460, column: 3, scope: !3840)
!3853 = !DILocation(line: 462, column: 7, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 462, column: 7)
!3855 = !DILocation(line: 462, column: 16, scope: !3854)
!3856 = !DILocation(line: 462, column: 7, scope: !3840)
!3857 = !DILocation(line: 463, column: 11, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 462, column: 25)
!3859 = !DILocation(line: 463, column: 15, scope: !3858)
!3860 = !DILocation(line: 463, column: 22, scope: !3858)
!3861 = !DILocation(line: 463, column: 9, scope: !3858)
!3862 = !DILocation(line: 464, column: 29, scope: !3858)
!3863 = !DILocation(line: 464, column: 23, scope: !3858)
!3864 = !DILocation(line: 464, column: 53, scope: !3858)
!3865 = !DILocation(line: 464, column: 4, scope: !3858)
!3866 = !DILocation(line: 465, column: 45, scope: !3858)
!3867 = !DILocation(line: 465, column: 4, scope: !3858)
!3868 = !DILocation(line: 466, column: 3, scope: !3858)
!3869 = !DILocation(line: 467, column: 2, scope: !3840)
!3870 = !DILocation(line: 469, column: 32, scope: !3681)
!3871 = !DILocation(line: 469, column: 18, scope: !3681)
!3872 = !DILocation(line: 469, column: 36, scope: !3681)
!3873 = !DILocation(line: 469, column: 2, scope: !3681)
!3874 = !DILocation(line: 470, column: 1, scope: !3681)
!3875 = distinct !DISubprogram(name: "copy_v3_v3", scope: !3876, file: !3876, line: 64, type: !3877, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!3876 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3877 = !DISubroutineType(types: !3878)
!3878 = !{null, !239, !3879}
!3879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3880, size: 64)
!3880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !177)
!3881 = !DILocalVariable(name: "r", arg: 1, scope: !3875, file: !3876, line: 64, type: !239)
!3882 = !DILocation(line: 64, column: 31, scope: !3875)
!3883 = !DILocalVariable(name: "a", arg: 2, scope: !3875, file: !3876, line: 64, type: !3879)
!3884 = !DILocation(line: 64, column: 49, scope: !3875)
!3885 = !DILocation(line: 66, column: 9, scope: !3875)
!3886 = !DILocation(line: 66, column: 2, scope: !3875)
!3887 = !DILocation(line: 66, column: 7, scope: !3875)
!3888 = !DILocation(line: 67, column: 9, scope: !3875)
!3889 = !DILocation(line: 67, column: 2, scope: !3875)
!3890 = !DILocation(line: 67, column: 7, scope: !3875)
!3891 = !DILocation(line: 68, column: 9, scope: !3875)
!3892 = !DILocation(line: 68, column: 2, scope: !3875)
!3893 = !DILocation(line: 68, column: 7, scope: !3875)
!3894 = !DILocation(line: 69, column: 1, scope: !3875)
!3895 = distinct !DISubprogram(name: "ED_node_composit_default", scope: !3, file: !3, line: 474, type: !3896, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!3896 = !DISubroutineType(types: !3897)
!3897 = !{null, !2891, !153}
!3898 = !DILocalVariable(name: "C", arg: 1, scope: !3895, file: !3, line: 474, type: !2891)
!3899 = !DILocation(line: 474, column: 47, scope: !3895)
!3900 = !DILocalVariable(name: "sce", arg: 2, scope: !3895, file: !3, line: 474, type: !153)
!3901 = !DILocation(line: 474, column: 64, scope: !3895)
!3902 = !DILocalVariable(name: "in", scope: !3895, file: !3, line: 476, type: !499)
!3903 = !DILocation(line: 476, column: 9, scope: !3895)
!3904 = !DILocalVariable(name: "out", scope: !3895, file: !3, line: 476, type: !499)
!3905 = !DILocation(line: 476, column: 14, scope: !3895)
!3906 = !DILocalVariable(name: "fromsock", scope: !3895, file: !3, line: 477, type: !503)
!3907 = !DILocation(line: 477, column: 15, scope: !3895)
!3908 = !DILocalVariable(name: "tosock", scope: !3895, file: !3, line: 477, type: !503)
!3909 = !DILocation(line: 477, column: 26, scope: !3895)
!3910 = !DILocation(line: 480, column: 6, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3895, file: !3, line: 480, column: 6)
!3912 = !DILocation(line: 480, column: 11, scope: !3911)
!3913 = !DILocation(line: 480, column: 6, scope: !3895)
!3914 = !DILocation(line: 481, column: 9, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3916, file: !3, line: 481, column: 7)
!3916 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 480, column: 21)
!3917 = !DILocation(line: 481, column: 15, scope: !3915)
!3918 = !DILocation(line: 481, column: 7, scope: !3916)
!3919 = !DILocation(line: 482, column: 4, scope: !3915)
!3920 = !DILocation(line: 483, column: 3, scope: !3916)
!3921 = !DILocation(line: 486, column: 61, scope: !3895)
!3922 = !DILocation(line: 486, column: 82, scope: !3895)
!3923 = !DILocation(line: 486, column: 18, scope: !3895)
!3924 = !DILocation(line: 486, column: 2, scope: !3895)
!3925 = !DILocation(line: 486, column: 7, scope: !3895)
!3926 = !DILocation(line: 486, column: 16, scope: !3895)
!3927 = !DILocation(line: 488, column: 2, scope: !3895)
!3928 = !DILocation(line: 488, column: 7, scope: !3895)
!3929 = !DILocation(line: 488, column: 17, scope: !3895)
!3930 = !DILocation(line: 488, column: 27, scope: !3895)
!3931 = !DILocation(line: 489, column: 2, scope: !3895)
!3932 = !DILocation(line: 489, column: 7, scope: !3895)
!3933 = !DILocation(line: 489, column: 17, scope: !3895)
!3934 = !DILocation(line: 489, column: 30, scope: !3895)
!3935 = !DILocation(line: 490, column: 2, scope: !3895)
!3936 = !DILocation(line: 490, column: 7, scope: !3895)
!3937 = !DILocation(line: 490, column: 17, scope: !3895)
!3938 = !DILocation(line: 490, column: 32, scope: !3895)
!3939 = !DILocation(line: 492, column: 26, scope: !3895)
!3940 = !DILocation(line: 492, column: 29, scope: !3895)
!3941 = !DILocation(line: 492, column: 34, scope: !3895)
!3942 = !DILocation(line: 492, column: 8, scope: !3895)
!3943 = !DILocation(line: 492, column: 6, scope: !3895)
!3944 = !DILocation(line: 493, column: 2, scope: !3895)
!3945 = !DILocation(line: 493, column: 7, scope: !3895)
!3946 = !DILocation(line: 493, column: 12, scope: !3895)
!3947 = !DILocation(line: 493, column: 22, scope: !3895)
!3948 = !DILocation(line: 493, column: 27, scope: !3895)
!3949 = !DILocation(line: 493, column: 32, scope: !3895)
!3950 = !DILocation(line: 495, column: 25, scope: !3895)
!3951 = !DILocation(line: 495, column: 28, scope: !3895)
!3952 = !DILocation(line: 495, column: 33, scope: !3895)
!3953 = !DILocation(line: 495, column: 7, scope: !3895)
!3954 = !DILocation(line: 495, column: 5, scope: !3895)
!3955 = !DILocation(line: 496, column: 2, scope: !3895)
!3956 = !DILocation(line: 496, column: 6, scope: !3895)
!3957 = !DILocation(line: 496, column: 11, scope: !3895)
!3958 = !DILocation(line: 496, column: 20, scope: !3895)
!3959 = !DILocation(line: 496, column: 24, scope: !3895)
!3960 = !DILocation(line: 496, column: 29, scope: !3895)
!3961 = !DILocation(line: 497, column: 16, scope: !3895)
!3962 = !DILocation(line: 497, column: 21, scope: !3895)
!3963 = !DILocation(line: 497, column: 31, scope: !3895)
!3964 = !DILocation(line: 497, column: 2, scope: !3895)
!3965 = !DILocation(line: 500, column: 13, scope: !3895)
!3966 = !DILocation(line: 500, column: 17, scope: !3895)
!3967 = !DILocation(line: 500, column: 25, scope: !3895)
!3968 = !DILocation(line: 500, column: 11, scope: !3895)
!3969 = !DILocation(line: 501, column: 11, scope: !3895)
!3970 = !DILocation(line: 501, column: 16, scope: !3895)
!3971 = !DILocation(line: 501, column: 23, scope: !3895)
!3972 = !DILocation(line: 501, column: 9, scope: !3895)
!3973 = !DILocation(line: 502, column: 14, scope: !3895)
!3974 = !DILocation(line: 502, column: 19, scope: !3895)
!3975 = !DILocation(line: 502, column: 29, scope: !3895)
!3976 = !DILocation(line: 502, column: 33, scope: !3895)
!3977 = !DILocation(line: 502, column: 43, scope: !3895)
!3978 = !DILocation(line: 502, column: 48, scope: !3895)
!3979 = !DILocation(line: 502, column: 2, scope: !3895)
!3980 = !DILocation(line: 504, column: 32, scope: !3895)
!3981 = !DILocation(line: 504, column: 18, scope: !3895)
!3982 = !DILocation(line: 504, column: 36, scope: !3895)
!3983 = !DILocation(line: 504, column: 41, scope: !3895)
!3984 = !DILocation(line: 504, column: 2, scope: !3895)
!3985 = !DILocation(line: 507, column: 1, scope: !3895)
!3986 = distinct !DISubprogram(name: "ED_node_texture_default", scope: !3, file: !3, line: 511, type: !3987, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!3987 = !DISubroutineType(types: !3988)
!3988 = !{null, !2891, !3537}
!3989 = !DILocalVariable(name: "C", arg: 1, scope: !3986, file: !3, line: 511, type: !2891)
!3990 = !DILocation(line: 511, column: 46, scope: !3986)
!3991 = !DILocalVariable(name: "tx", arg: 2, scope: !3986, file: !3, line: 511, type: !3537)
!3992 = !DILocation(line: 511, column: 54, scope: !3986)
!3993 = !DILocalVariable(name: "in", scope: !3986, file: !3, line: 513, type: !499)
!3994 = !DILocation(line: 513, column: 9, scope: !3986)
!3995 = !DILocalVariable(name: "out", scope: !3986, file: !3, line: 513, type: !499)
!3996 = !DILocation(line: 513, column: 14, scope: !3986)
!3997 = !DILocalVariable(name: "fromsock", scope: !3986, file: !3, line: 514, type: !503)
!3998 = !DILocation(line: 514, column: 15, scope: !3986)
!3999 = !DILocalVariable(name: "tosock", scope: !3986, file: !3, line: 514, type: !503)
!4000 = !DILocation(line: 514, column: 26, scope: !3986)
!4001 = !DILocation(line: 517, column: 6, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 517, column: 6)
!4003 = !DILocation(line: 517, column: 10, scope: !4002)
!4004 = !DILocation(line: 517, column: 6, scope: !3986)
!4005 = !DILocation(line: 518, column: 9, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !4007, file: !3, line: 518, column: 7)
!4007 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 517, column: 20)
!4008 = !DILocation(line: 518, column: 15, scope: !4006)
!4009 = !DILocation(line: 518, column: 7, scope: !4007)
!4010 = !DILocation(line: 519, column: 4, scope: !4006)
!4011 = !DILocation(line: 520, column: 3, scope: !4007)
!4012 = !DILocation(line: 523, column: 56, scope: !3986)
!4013 = !DILocation(line: 523, column: 75, scope: !3986)
!4014 = !DILocation(line: 523, column: 17, scope: !3986)
!4015 = !DILocation(line: 523, column: 2, scope: !3986)
!4016 = !DILocation(line: 523, column: 6, scope: !3986)
!4017 = !DILocation(line: 523, column: 15, scope: !3986)
!4018 = !DILocation(line: 525, column: 26, scope: !3986)
!4019 = !DILocation(line: 525, column: 29, scope: !3986)
!4020 = !DILocation(line: 525, column: 33, scope: !3986)
!4021 = !DILocation(line: 525, column: 8, scope: !3986)
!4022 = !DILocation(line: 525, column: 6, scope: !3986)
!4023 = !DILocation(line: 526, column: 2, scope: !3986)
!4024 = !DILocation(line: 526, column: 7, scope: !3986)
!4025 = !DILocation(line: 526, column: 12, scope: !3986)
!4026 = !DILocation(line: 526, column: 22, scope: !3986)
!4027 = !DILocation(line: 526, column: 27, scope: !3986)
!4028 = !DILocation(line: 526, column: 32, scope: !3986)
!4029 = !DILocation(line: 528, column: 25, scope: !3986)
!4030 = !DILocation(line: 528, column: 28, scope: !3986)
!4031 = !DILocation(line: 528, column: 32, scope: !3986)
!4032 = !DILocation(line: 528, column: 7, scope: !3986)
!4033 = !DILocation(line: 528, column: 5, scope: !3986)
!4034 = !DILocation(line: 529, column: 2, scope: !3986)
!4035 = !DILocation(line: 529, column: 6, scope: !3986)
!4036 = !DILocation(line: 529, column: 11, scope: !3986)
!4037 = !DILocation(line: 529, column: 20, scope: !3986)
!4038 = !DILocation(line: 529, column: 24, scope: !3986)
!4039 = !DILocation(line: 529, column: 29, scope: !3986)
!4040 = !DILocation(line: 530, column: 16, scope: !3986)
!4041 = !DILocation(line: 530, column: 20, scope: !3986)
!4042 = !DILocation(line: 530, column: 30, scope: !3986)
!4043 = !DILocation(line: 530, column: 2, scope: !3986)
!4044 = !DILocation(line: 532, column: 13, scope: !3986)
!4045 = !DILocation(line: 532, column: 17, scope: !3986)
!4046 = !DILocation(line: 532, column: 25, scope: !3986)
!4047 = !DILocation(line: 532, column: 11, scope: !3986)
!4048 = !DILocation(line: 533, column: 11, scope: !3986)
!4049 = !DILocation(line: 533, column: 16, scope: !3986)
!4050 = !DILocation(line: 533, column: 23, scope: !3986)
!4051 = !DILocation(line: 533, column: 9, scope: !3986)
!4052 = !DILocation(line: 534, column: 14, scope: !3986)
!4053 = !DILocation(line: 534, column: 18, scope: !3986)
!4054 = !DILocation(line: 534, column: 28, scope: !3986)
!4055 = !DILocation(line: 534, column: 32, scope: !3986)
!4056 = !DILocation(line: 534, column: 42, scope: !3986)
!4057 = !DILocation(line: 534, column: 47, scope: !3986)
!4058 = !DILocation(line: 534, column: 2, scope: !3986)
!4059 = !DILocation(line: 536, column: 32, scope: !3986)
!4060 = !DILocation(line: 536, column: 18, scope: !3986)
!4061 = !DILocation(line: 536, column: 36, scope: !3986)
!4062 = !DILocation(line: 536, column: 40, scope: !3986)
!4063 = !DILocation(line: 536, column: 2, scope: !3986)
!4064 = !DILocation(line: 537, column: 1, scope: !3986)
!4065 = distinct !DISubprogram(name: "snode_set_context", scope: !3, file: !3, line: 540, type: !4066, scopeLine: 541, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!4066 = !DISubroutineType(types: !4067)
!4067 = !{null, !2891}
!4068 = !DILocalVariable(name: "C", arg: 1, scope: !4065, file: !3, line: 540, type: !2891)
!4069 = !DILocation(line: 540, column: 40, scope: !4065)
!4070 = !DILocalVariable(name: "snode", scope: !4065, file: !3, line: 542, type: !3213)
!4071 = !DILocation(line: 542, column: 13, scope: !4065)
!4072 = !DILocation(line: 542, column: 39, scope: !4065)
!4073 = !DILocation(line: 542, column: 21, scope: !4065)
!4074 = !DILocalVariable(name: "treetype", scope: !4065, file: !3, line: 543, type: !3663)
!4075 = !DILocation(line: 543, column: 17, scope: !4065)
!4076 = !DILocation(line: 543, column: 42, scope: !4065)
!4077 = !DILocation(line: 543, column: 49, scope: !4065)
!4078 = !DILocation(line: 543, column: 28, scope: !4065)
!4079 = !DILocalVariable(name: "ntree", scope: !4065, file: !3, line: 544, type: !2867)
!4080 = !DILocation(line: 544, column: 13, scope: !4065)
!4081 = !DILocation(line: 544, column: 21, scope: !4065)
!4082 = !DILocation(line: 544, column: 28, scope: !4065)
!4083 = !DILocalVariable(name: "id", scope: !4065, file: !3, line: 545, type: !126)
!4084 = !DILocation(line: 545, column: 6, scope: !4065)
!4085 = !DILocation(line: 545, column: 11, scope: !4065)
!4086 = !DILocation(line: 545, column: 18, scope: !4065)
!4087 = !DILocalVariable(name: "from", scope: !4065, file: !3, line: 545, type: !126)
!4088 = !DILocation(line: 545, column: 23, scope: !4065)
!4089 = !DILocation(line: 545, column: 30, scope: !4065)
!4090 = !DILocation(line: 545, column: 37, scope: !4065)
!4091 = !DILocation(line: 548, column: 53, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 548, column: 6)
!4093 = !DILocation(line: 548, column: 38, scope: !4092)
!4094 = !DILocation(line: 548, column: 6, scope: !4092)
!4095 = !DILocation(line: 548, column: 6, scope: !4065)
!4096 = !DILocation(line: 549, column: 3, scope: !4092)
!4097 = !DILocation(line: 549, column: 10, scope: !4092)
!4098 = !DILocation(line: 549, column: 15, scope: !4092)
!4099 = !DILocation(line: 551, column: 3, scope: !4092)
!4100 = !DILocation(line: 551, column: 10, scope: !4092)
!4101 = !DILocation(line: 551, column: 15, scope: !4092)
!4102 = !DILocation(line: 554, column: 7, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 554, column: 6)
!4104 = !DILocation(line: 554, column: 16, scope: !4103)
!4105 = !DILocation(line: 555, column: 7, scope: !4103)
!4106 = !DILocation(line: 555, column: 17, scope: !4103)
!4107 = !DILocation(line: 555, column: 22, scope: !4103)
!4108 = !DILocation(line: 555, column: 26, scope: !4103)
!4109 = !DILocation(line: 555, column: 36, scope: !4103)
!4110 = !DILocation(line: 555, column: 41, scope: !4103)
!4111 = !DILocation(line: 555, column: 44, scope: !4103)
!4112 = !DILocation(line: 554, column: 6, scope: !4065)
!4113 = !DILocation(line: 561, column: 3, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4103, file: !3, line: 556, column: 2)
!4115 = !DILocation(line: 564, column: 6, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 564, column: 6)
!4117 = !DILocation(line: 564, column: 13, scope: !4116)
!4118 = !DILocation(line: 564, column: 22, scope: !4116)
!4119 = !DILocation(line: 564, column: 32, scope: !4116)
!4120 = !DILocation(line: 564, column: 39, scope: !4116)
!4121 = !DILocation(line: 564, column: 49, scope: !4116)
!4122 = !DILocation(line: 564, column: 57, scope: !4116)
!4123 = !DILocation(line: 564, column: 64, scope: !4116)
!4124 = !DILocation(line: 564, column: 25, scope: !4116)
!4125 = !DILocation(line: 564, column: 77, scope: !4116)
!4126 = !DILocation(line: 564, column: 6, scope: !4065)
!4127 = !DILocation(line: 566, column: 9, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4116, file: !3, line: 564, column: 83)
!4129 = !DILocation(line: 567, column: 6, scope: !4128)
!4130 = !DILocation(line: 568, column: 8, scope: !4128)
!4131 = !DILocation(line: 569, column: 2, scope: !4128)
!4132 = !DILocation(line: 571, column: 8, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 571, column: 6)
!4134 = !DILocation(line: 571, column: 15, scope: !4133)
!4135 = !DILocation(line: 571, column: 20, scope: !4133)
!4136 = !DILocation(line: 571, column: 33, scope: !4133)
!4137 = !DILocation(line: 571, column: 36, scope: !4133)
!4138 = !DILocation(line: 571, column: 42, scope: !4133)
!4139 = !DILocation(line: 571, column: 6, scope: !4065)
!4140 = !DILocation(line: 572, column: 7, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4142, file: !3, line: 572, column: 7)
!4142 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 571, column: 51)
!4143 = !DILocation(line: 572, column: 17, scope: !4141)
!4144 = !DILocation(line: 572, column: 7, scope: !4142)
!4145 = !DILocation(line: 574, column: 10, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4141, file: !3, line: 572, column: 35)
!4147 = !DILocation(line: 575, column: 7, scope: !4146)
!4148 = !DILocation(line: 576, column: 9, scope: !4146)
!4149 = !DILocation(line: 578, column: 4, scope: !4146)
!4150 = !DILocation(line: 578, column: 14, scope: !4146)
!4151 = !DILocation(line: 578, column: 31, scope: !4146)
!4152 = !DILocation(line: 578, column: 34, scope: !4146)
!4153 = !DILocation(line: 579, column: 3, scope: !4146)
!4154 = !DILocation(line: 580, column: 2, scope: !4142)
!4155 = !DILocation(line: 582, column: 6, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 582, column: 6)
!4157 = !DILocation(line: 582, column: 13, scope: !4156)
!4158 = !DILocation(line: 582, column: 25, scope: !4156)
!4159 = !DILocation(line: 582, column: 22, scope: !4156)
!4160 = !DILocation(line: 582, column: 31, scope: !4156)
!4161 = !DILocation(line: 582, column: 34, scope: !4156)
!4162 = !DILocation(line: 582, column: 41, scope: !4156)
!4163 = !DILocation(line: 582, column: 47, scope: !4156)
!4164 = !DILocation(line: 582, column: 44, scope: !4156)
!4165 = !DILocation(line: 582, column: 50, scope: !4156)
!4166 = !DILocation(line: 582, column: 53, scope: !4156)
!4167 = !DILocation(line: 582, column: 60, scope: !4156)
!4168 = !DILocation(line: 582, column: 68, scope: !4156)
!4169 = !DILocation(line: 582, column: 65, scope: !4156)
!4170 = !DILocation(line: 582, column: 6, scope: !4065)
!4171 = !DILocation(line: 583, column: 22, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4156, file: !3, line: 582, column: 74)
!4173 = !DILocation(line: 583, column: 29, scope: !4172)
!4174 = !DILocation(line: 583, column: 36, scope: !4172)
!4175 = !DILocation(line: 583, column: 40, scope: !4172)
!4176 = !DILocation(line: 583, column: 3, scope: !4172)
!4177 = !DILocation(line: 584, column: 2, scope: !4172)
!4178 = !DILocation(line: 589, column: 28, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 589, column: 6)
!4180 = !DILocation(line: 589, column: 6, scope: !4179)
!4181 = !DILocation(line: 589, column: 35, scope: !4179)
!4182 = !DILocation(line: 589, column: 38, scope: !4179)
!4183 = !DILocation(line: 589, column: 45, scope: !4179)
!4184 = !DILocation(line: 589, column: 6, scope: !4065)
!4185 = !DILocation(line: 591, column: 28, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 589, column: 55)
!4187 = !DILocation(line: 591, column: 35, scope: !4186)
!4188 = !DILocation(line: 591, column: 3, scope: !4186)
!4189 = !DILocation(line: 592, column: 2, scope: !4186)
!4190 = !DILocation(line: 593, column: 1, scope: !4065)
!4191 = distinct !DISubprogram(name: "snode_update", scope: !3, file: !3, line: 595, type: !4192, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!4192 = !DISubroutineType(types: !4193)
!4193 = !{null, !3213, !499}
!4194 = !DILocalVariable(name: "snode", arg: 1, scope: !4191, file: !3, line: 595, type: !3213)
!4195 = !DILocation(line: 595, column: 30, scope: !4191)
!4196 = !DILocalVariable(name: "node", arg: 2, scope: !4191, file: !3, line: 595, type: !499)
!4197 = !DILocation(line: 595, column: 44, scope: !4191)
!4198 = !DILocalVariable(name: "path", scope: !4191, file: !3, line: 597, type: !4199)
!4199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4200, size: 64)
!4200 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeTreePath", file: !625, line: 923, baseType: !4201)
!4201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreePath", file: !625, line: 914, size: 832, elements: !4202)
!4202 = !{!4203, !4205, !4206, !4207, !4208, !4209, !4210}
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4201, file: !625, line: 915, baseType: !4204, size: 64)
!4204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4201, size: 64)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4201, file: !625, line: 915, baseType: !4204, size: 64, offset: 64)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !4201, file: !625, line: 917, baseType: !328, size: 64, offset: 128)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "parent_key", scope: !4201, file: !625, line: 918, baseType: !672, size: 32, offset: 192)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4201, file: !625, line: 919, baseType: !22, size: 32, offset: 224)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !4201, file: !625, line: 920, baseType: !569, size: 64, offset: 256)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "node_name", scope: !4201, file: !625, line: 922, baseType: !33, size: 512, offset: 320)
!4211 = !DILocation(line: 597, column: 17, scope: !4191)
!4212 = !DILocation(line: 605, column: 9, scope: !4191)
!4213 = !DILocation(line: 605, column: 16, scope: !4191)
!4214 = !DILocation(line: 605, column: 25, scope: !4191)
!4215 = !DILocation(line: 605, column: 7, scope: !4191)
!4216 = !DILocation(line: 606, column: 6, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4191, file: !3, line: 606, column: 6)
!4218 = !DILocation(line: 606, column: 6, scope: !4191)
!4219 = !DILocalVariable(name: "ngroup", scope: !4220, file: !3, line: 607, type: !2867)
!4220 = distinct !DILexicalBlock(scope: !4217, file: !3, line: 606, column: 12)
!4221 = !DILocation(line: 607, column: 14, scope: !4220)
!4222 = !DILocation(line: 607, column: 23, scope: !4220)
!4223 = !DILocation(line: 607, column: 29, scope: !4220)
!4224 = !DILocation(line: 608, column: 15, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4220, file: !3, line: 608, column: 3)
!4226 = !DILocation(line: 608, column: 21, scope: !4225)
!4227 = !DILocation(line: 608, column: 13, scope: !4225)
!4228 = !DILocation(line: 608, column: 8, scope: !4225)
!4229 = !DILocation(line: 608, column: 27, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 608, column: 3)
!4231 = !DILocation(line: 608, column: 3, scope: !4225)
!4232 = !DILocation(line: 609, column: 17, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4230, file: !3, line: 608, column: 52)
!4234 = !DILocation(line: 609, column: 23, scope: !4233)
!4235 = !DILocation(line: 609, column: 39, scope: !4233)
!4236 = !DILocation(line: 609, column: 33, scope: !4233)
!4237 = !DILocation(line: 609, column: 4, scope: !4233)
!4238 = !DILocation(line: 610, column: 13, scope: !4233)
!4239 = !DILocation(line: 610, column: 19, scope: !4233)
!4240 = !DILocation(line: 610, column: 11, scope: !4233)
!4241 = !DILocation(line: 611, column: 3, scope: !4233)
!4242 = !DILocation(line: 608, column: 40, scope: !4230)
!4243 = !DILocation(line: 608, column: 46, scope: !4230)
!4244 = !DILocation(line: 608, column: 38, scope: !4230)
!4245 = !DILocation(line: 608, column: 3, scope: !4230)
!4246 = distinct !{!4246, !4231, !4247}
!4247 = !DILocation(line: 611, column: 3, scope: !4225)
!4248 = !DILocation(line: 612, column: 2, scope: !4220)
!4249 = !DILocation(line: 614, column: 6, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4191, file: !3, line: 614, column: 6)
!4251 = !DILocation(line: 614, column: 6, scope: !4191)
!4252 = !DILocation(line: 615, column: 14, scope: !4250)
!4253 = !DILocation(line: 615, column: 21, scope: !4250)
!4254 = !DILocation(line: 615, column: 31, scope: !4250)
!4255 = !DILocation(line: 615, column: 3, scope: !4250)
!4256 = !DILocation(line: 616, column: 1, scope: !4191)
!4257 = distinct !DISubprogram(name: "ED_node_set_active", scope: !3, file: !3, line: 618, type: !4258, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!4258 = !DISubroutineType(types: !4259)
!4259 = !{null, !3454, !2867, !499}
!4260 = !DILocalVariable(name: "bmain", arg: 1, scope: !4257, file: !3, line: 618, type: !3454)
!4261 = !DILocation(line: 618, column: 31, scope: !4257)
!4262 = !DILocalVariable(name: "ntree", arg: 2, scope: !4257, file: !3, line: 618, type: !2867)
!4263 = !DILocation(line: 618, column: 49, scope: !4257)
!4264 = !DILocalVariable(name: "node", arg: 3, scope: !4257, file: !3, line: 618, type: !499)
!4265 = !DILocation(line: 618, column: 63, scope: !4257)
!4266 = !DILocalVariable(name: "was_active_texture", scope: !4257, file: !3, line: 620, type: !4267)
!4267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !699)
!4268 = !DILocation(line: 620, column: 13, scope: !4257)
!4269 = !DILocation(line: 620, column: 35, scope: !4257)
!4270 = !DILocation(line: 620, column: 41, scope: !4257)
!4271 = !DILocation(line: 620, column: 46, scope: !4257)
!4272 = !DILocation(line: 620, column: 69, scope: !4257)
!4273 = !DILocation(line: 620, column: 34, scope: !4257)
!4274 = !DILocation(line: 622, column: 16, scope: !4257)
!4275 = !DILocation(line: 622, column: 23, scope: !4257)
!4276 = !DILocation(line: 622, column: 2, scope: !4257)
!4277 = !DILocation(line: 624, column: 6, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4257, file: !3, line: 624, column: 6)
!4279 = !DILocation(line: 624, column: 12, scope: !4278)
!4280 = !DILocation(line: 624, column: 17, scope: !4278)
!4281 = !DILocation(line: 624, column: 6, scope: !4257)
!4282 = !DILocalVariable(name: "was_output", scope: !4283, file: !3, line: 625, type: !4267)
!4283 = distinct !DILexicalBlock(scope: !4278, file: !3, line: 624, column: 32)
!4284 = !DILocation(line: 625, column: 14, scope: !4283)
!4285 = !DILocation(line: 625, column: 28, scope: !4283)
!4286 = !DILocation(line: 625, column: 34, scope: !4283)
!4287 = !DILocation(line: 625, column: 39, scope: !4283)
!4288 = !DILocation(line: 625, column: 57, scope: !4283)
!4289 = !DILocation(line: 625, column: 27, scope: !4283)
!4290 = !DILocalVariable(name: "do_update", scope: !4283, file: !3, line: 626, type: !699)
!4291 = !DILocation(line: 626, column: 8, scope: !4283)
!4292 = !DILocation(line: 629, column: 7, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4283, file: !3, line: 629, column: 7)
!4294 = !DILocation(line: 629, column: 13, scope: !4293)
!4295 = !DILocation(line: 629, column: 18, scope: !4293)
!4296 = !DILocation(line: 629, column: 7, scope: !4283)
!4297 = !DILocalVariable(name: "tnode", scope: !4298, file: !3, line: 630, type: !499)
!4298 = distinct !DILexicalBlock(scope: !4293, file: !3, line: 629, column: 40)
!4299 = !DILocation(line: 630, column: 11, scope: !4298)
!4300 = !DILocation(line: 631, column: 17, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 631, column: 4)
!4302 = !DILocation(line: 631, column: 24, scope: !4301)
!4303 = !DILocation(line: 631, column: 30, scope: !4301)
!4304 = !DILocation(line: 631, column: 15, scope: !4301)
!4305 = !DILocation(line: 631, column: 9, scope: !4301)
!4306 = !DILocation(line: 631, column: 37, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 631, column: 4)
!4308 = !DILocation(line: 631, column: 4, scope: !4301)
!4309 = !DILocation(line: 632, column: 9, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4307, file: !3, line: 632, column: 9)
!4311 = !DILocation(line: 632, column: 16, scope: !4310)
!4312 = !DILocation(line: 632, column: 21, scope: !4310)
!4313 = !DILocation(line: 632, column: 9, scope: !4307)
!4314 = !DILocation(line: 633, column: 6, scope: !4310)
!4315 = !DILocation(line: 633, column: 13, scope: !4310)
!4316 = !DILocation(line: 633, column: 18, scope: !4310)
!4317 = !DILocation(line: 632, column: 24, scope: !4310)
!4318 = !DILocation(line: 631, column: 52, scope: !4307)
!4319 = !DILocation(line: 631, column: 59, scope: !4307)
!4320 = !DILocation(line: 631, column: 50, scope: !4307)
!4321 = !DILocation(line: 631, column: 4, scope: !4307)
!4322 = distinct !{!4322, !4308, !4323}
!4323 = !DILocation(line: 633, column: 22, scope: !4301)
!4324 = !DILocation(line: 635, column: 4, scope: !4298)
!4325 = !DILocation(line: 635, column: 10, scope: !4298)
!4326 = !DILocation(line: 635, column: 15, scope: !4298)
!4327 = !DILocation(line: 636, column: 9, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 636, column: 8)
!4329 = !DILocation(line: 636, column: 8, scope: !4298)
!4330 = !DILocation(line: 637, column: 15, scope: !4328)
!4331 = !DILocation(line: 637, column: 5, scope: !4328)
!4332 = !DILocation(line: 638, column: 3, scope: !4298)
!4333 = !DILocation(line: 641, column: 7, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4283, file: !3, line: 641, column: 7)
!4335 = !DILocation(line: 641, column: 14, scope: !4334)
!4336 = !DILocation(line: 641, column: 19, scope: !4334)
!4337 = !DILocation(line: 641, column: 7, scope: !4283)
!4338 = !DILocation(line: 643, column: 8, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 643, column: 8)
!4340 = distinct !DILexicalBlock(scope: !4334, file: !3, line: 641, column: 36)
!4341 = !DILocation(line: 643, column: 14, scope: !4339)
!4342 = !DILocation(line: 643, column: 17, scope: !4339)
!4343 = !DILocation(line: 643, column: 20, scope: !4339)
!4344 = !DILocation(line: 643, column: 8, scope: !4340)
!4345 = !DILocation(line: 644, column: 23, scope: !4339)
!4346 = !DILocation(line: 644, column: 5, scope: !4339)
!4347 = !DILocation(line: 646, column: 8, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 646, column: 8)
!4349 = !DILocation(line: 646, column: 8, scope: !4340)
!4350 = !DILocalVariable(name: "tnode", scope: !4351, file: !3, line: 649, type: !499)
!4351 = distinct !DILexicalBlock(scope: !4348, file: !3, line: 648, column: 4)
!4352 = !DILocation(line: 649, column: 12, scope: !4351)
!4353 = !DILocation(line: 651, column: 18, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4351, file: !3, line: 651, column: 5)
!4355 = !DILocation(line: 651, column: 25, scope: !4354)
!4356 = !DILocation(line: 651, column: 31, scope: !4354)
!4357 = !DILocation(line: 651, column: 16, scope: !4354)
!4358 = !DILocation(line: 651, column: 10, scope: !4354)
!4359 = !DILocation(line: 651, column: 38, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4354, file: !3, line: 651, column: 5)
!4361 = !DILocation(line: 651, column: 5, scope: !4354)
!4362 = !DILocation(line: 652, column: 10, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 652, column: 10)
!4364 = !DILocation(line: 652, column: 17, scope: !4363)
!4365 = !DILocation(line: 652, column: 25, scope: !4363)
!4366 = !DILocation(line: 652, column: 31, scope: !4363)
!4367 = !DILocation(line: 652, column: 22, scope: !4363)
!4368 = !DILocation(line: 652, column: 10, scope: !4360)
!4369 = !DILocation(line: 653, column: 7, scope: !4363)
!4370 = !DILocation(line: 653, column: 14, scope: !4363)
!4371 = !DILocation(line: 653, column: 19, scope: !4363)
!4372 = !DILocation(line: 651, column: 53, scope: !4360)
!4373 = !DILocation(line: 651, column: 60, scope: !4360)
!4374 = !DILocation(line: 651, column: 51, scope: !4360)
!4375 = !DILocation(line: 651, column: 5, scope: !4360)
!4376 = distinct !{!4376, !4361, !4377}
!4377 = !DILocation(line: 653, column: 23, scope: !4354)
!4378 = !DILocation(line: 655, column: 5, scope: !4351)
!4379 = !DILocation(line: 655, column: 11, scope: !4351)
!4380 = !DILocation(line: 655, column: 16, scope: !4351)
!4381 = !DILocation(line: 656, column: 9, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4351, file: !3, line: 656, column: 9)
!4383 = !DILocation(line: 656, column: 20, scope: !4382)
!4384 = !DILocation(line: 656, column: 9, scope: !4351)
!4385 = !DILocation(line: 657, column: 34, scope: !4382)
!4386 = !DILocation(line: 657, column: 41, scope: !4382)
!4387 = !DILocation(line: 657, column: 6, scope: !4382)
!4388 = !DILocation(line: 658, column: 4, scope: !4351)
!4389 = !DILocation(line: 659, column: 13, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4348, file: !3, line: 659, column: 13)
!4391 = !DILocation(line: 659, column: 13, scope: !4348)
!4392 = !DILocation(line: 660, column: 33, scope: !4390)
!4393 = !DILocation(line: 660, column: 40, scope: !4390)
!4394 = !DILocation(line: 660, column: 5, scope: !4390)
!4395 = !DILocation(line: 663, column: 9, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 663, column: 8)
!4397 = !DILocation(line: 663, column: 15, scope: !4396)
!4398 = !DILocation(line: 663, column: 20, scope: !4396)
!4399 = !DILocation(line: 663, column: 43, scope: !4396)
!4400 = !DILocation(line: 663, column: 47, scope: !4396)
!4401 = !DILocation(line: 663, column: 8, scope: !4340)
!4402 = !DILocalVariable(name: "ma", scope: !4403, file: !3, line: 664, type: !2782)
!4403 = distinct !DILexicalBlock(scope: !4396, file: !3, line: 663, column: 67)
!4404 = !DILocation(line: 664, column: 15, scope: !4403)
!4405 = !DILocation(line: 666, column: 15, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 666, column: 5)
!4407 = !DILocation(line: 666, column: 22, scope: !4406)
!4408 = !DILocation(line: 666, column: 26, scope: !4406)
!4409 = !DILocation(line: 666, column: 13, scope: !4406)
!4410 = !DILocation(line: 666, column: 10, scope: !4406)
!4411 = !DILocation(line: 666, column: 33, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4406, file: !3, line: 666, column: 5)
!4413 = !DILocation(line: 666, column: 5, scope: !4406)
!4414 = !DILocation(line: 667, column: 10, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 667, column: 10)
!4416 = !DILocation(line: 667, column: 14, scope: !4415)
!4417 = !DILocation(line: 667, column: 23, scope: !4415)
!4418 = !DILocation(line: 667, column: 26, scope: !4415)
!4419 = !DILocation(line: 667, column: 30, scope: !4415)
!4420 = !DILocation(line: 667, column: 40, scope: !4415)
!4421 = !DILocation(line: 667, column: 56, scope: !4415)
!4422 = !DILocation(line: 667, column: 60, scope: !4415)
!4423 = !DILocation(line: 667, column: 70, scope: !4415)
!4424 = !DILocation(line: 667, column: 43, scope: !4415)
!4425 = !DILocation(line: 667, column: 10, scope: !4412)
!4426 = !DILocation(line: 668, column: 25, scope: !4415)
!4427 = !DILocation(line: 668, column: 7, scope: !4415)
!4428 = !DILocation(line: 667, column: 75, scope: !4415)
!4429 = !DILocation(line: 666, column: 42, scope: !4412)
!4430 = !DILocation(line: 666, column: 46, scope: !4412)
!4431 = !DILocation(line: 666, column: 49, scope: !4412)
!4432 = !DILocation(line: 666, column: 40, scope: !4412)
!4433 = !DILocation(line: 666, column: 5, scope: !4412)
!4434 = distinct !{!4434, !4413, !4435}
!4435 = !DILocation(line: 668, column: 27, scope: !4406)
!4436 = !DILocation(line: 670, column: 5, scope: !4403)
!4437 = !DILocation(line: 671, column: 4, scope: !4403)
!4438 = !DILocation(line: 673, column: 49, scope: !4340)
!4439 = !DILocation(line: 673, column: 55, scope: !4340)
!4440 = !DILocation(line: 673, column: 4, scope: !4340)
!4441 = !DILocation(line: 674, column: 3, scope: !4340)
!4442 = !DILocation(line: 675, column: 12, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4334, file: !3, line: 675, column: 12)
!4444 = !DILocation(line: 675, column: 19, scope: !4443)
!4445 = !DILocation(line: 675, column: 24, scope: !4443)
!4446 = !DILocation(line: 675, column: 12, scope: !4334)
!4447 = !DILocation(line: 677, column: 8, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 677, column: 8)
!4449 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 675, column: 43)
!4450 = !DILocation(line: 677, column: 8, scope: !4449)
!4451 = !DILocalVariable(name: "tnode", scope: !4452, file: !3, line: 678, type: !499)
!4452 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 677, column: 65)
!4453 = !DILocation(line: 678, column: 12, scope: !4452)
!4454 = !DILocation(line: 681, column: 18, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 681, column: 5)
!4456 = !DILocation(line: 681, column: 25, scope: !4455)
!4457 = !DILocation(line: 681, column: 31, scope: !4455)
!4458 = !DILocation(line: 681, column: 16, scope: !4455)
!4459 = !DILocation(line: 681, column: 10, scope: !4455)
!4460 = !DILocation(line: 681, column: 38, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4455, file: !3, line: 681, column: 5)
!4462 = !DILocation(line: 681, column: 5, scope: !4455)
!4463 = !DILocation(line: 682, column: 10, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 682, column: 10)
!4465 = !DILocation(line: 682, column: 10, scope: !4461)
!4466 = !DILocation(line: 683, column: 7, scope: !4464)
!4467 = !DILocation(line: 683, column: 14, scope: !4464)
!4468 = !DILocation(line: 683, column: 19, scope: !4464)
!4469 = !DILocation(line: 681, column: 53, scope: !4461)
!4470 = !DILocation(line: 681, column: 60, scope: !4461)
!4471 = !DILocation(line: 681, column: 51, scope: !4461)
!4472 = !DILocation(line: 681, column: 5, scope: !4461)
!4473 = distinct !{!4473, !4462, !4474}
!4474 = !DILocation(line: 683, column: 23, scope: !4455)
!4475 = !DILocation(line: 685, column: 5, scope: !4452)
!4476 = !DILocation(line: 685, column: 11, scope: !4452)
!4477 = !DILocation(line: 685, column: 16, scope: !4452)
!4478 = !DILocation(line: 686, column: 9, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 686, column: 9)
!4480 = !DILocation(line: 686, column: 20, scope: !4479)
!4481 = !DILocation(line: 686, column: 9, scope: !4452)
!4482 = !DILocation(line: 687, column: 34, scope: !4479)
!4483 = !DILocation(line: 687, column: 41, scope: !4479)
!4484 = !DILocation(line: 687, column: 6, scope: !4479)
!4485 = !DILocation(line: 690, column: 22, scope: !4452)
!4486 = !DILocation(line: 690, column: 16, scope: !4452)
!4487 = !DILocation(line: 690, column: 5, scope: !4452)
!4488 = !DILocation(line: 690, column: 11, scope: !4452)
!4489 = !DILocation(line: 690, column: 14, scope: !4452)
!4490 = !DILocation(line: 691, column: 4, scope: !4452)
!4491 = !DILocation(line: 692, column: 13, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 692, column: 13)
!4493 = !DILocation(line: 692, column: 19, scope: !4492)
!4494 = !DILocation(line: 692, column: 24, scope: !4492)
!4495 = !DILocation(line: 692, column: 13, scope: !4448)
!4496 = !DILocalVariable(name: "scene", scope: !4497, file: !3, line: 693, type: !2869)
!4497 = distinct !DILexicalBlock(scope: !4492, file: !3, line: 692, column: 46)
!4498 = !DILocation(line: 693, column: 12, scope: !4497)
!4499 = !DILocation(line: 695, column: 18, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 695, column: 5)
!4501 = !DILocation(line: 695, column: 25, scope: !4500)
!4502 = !DILocation(line: 695, column: 31, scope: !4500)
!4503 = !DILocation(line: 695, column: 16, scope: !4500)
!4504 = !DILocation(line: 695, column: 10, scope: !4500)
!4505 = !DILocation(line: 695, column: 38, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 695, column: 5)
!4507 = !DILocation(line: 695, column: 5, scope: !4500)
!4508 = !DILocation(line: 696, column: 10, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4510, file: !3, line: 696, column: 10)
!4510 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 695, column: 69)
!4511 = !DILocation(line: 696, column: 17, scope: !4509)
!4512 = !DILocation(line: 696, column: 26, scope: !4509)
!4513 = !DILocation(line: 696, column: 29, scope: !4509)
!4514 = !DILocation(line: 696, column: 36, scope: !4509)
!4515 = !DILocation(line: 696, column: 46, scope: !4509)
!4516 = !DILocation(line: 696, column: 62, scope: !4509)
!4517 = !DILocation(line: 696, column: 69, scope: !4509)
!4518 = !DILocation(line: 696, column: 79, scope: !4509)
!4519 = !DILocation(line: 696, column: 49, scope: !4509)
!4520 = !DILocation(line: 696, column: 10, scope: !4510)
!4521 = !DILocation(line: 697, column: 11, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 697, column: 11)
!4523 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 696, column: 87)
!4524 = !DILocation(line: 697, column: 17, scope: !4522)
!4525 = !DILocation(line: 697, column: 20, scope: !4522)
!4526 = !DILocation(line: 697, column: 28, scope: !4522)
!4527 = !DILocation(line: 697, column: 31, scope: !4522)
!4528 = !DILocation(line: 697, column: 37, scope: !4522)
!4529 = !DILocation(line: 697, column: 49, scope: !4522)
!4530 = !DILocation(line: 697, column: 43, scope: !4522)
!4531 = !DILocation(line: 697, column: 40, scope: !4522)
!4532 = !DILocation(line: 697, column: 11, scope: !4523)
!4533 = !DILocalVariable(name: "num_layers", scope: !4534, file: !3, line: 698, type: !22)
!4534 = distinct !DILexicalBlock(scope: !4522, file: !3, line: 697, column: 56)
!4535 = !DILocation(line: 698, column: 12, scope: !4534)
!4536 = !DILocation(line: 698, column: 40, scope: !4534)
!4537 = !DILocation(line: 698, column: 47, scope: !4534)
!4538 = !DILocation(line: 698, column: 49, scope: !4534)
!4539 = !DILocation(line: 698, column: 25, scope: !4534)
!4540 = !DILocation(line: 699, column: 26, scope: !4534)
!4541 = !DILocation(line: 699, column: 32, scope: !4534)
!4542 = !DILocation(line: 699, column: 8, scope: !4534)
!4543 = !DILocation(line: 699, column: 15, scope: !4534)
!4544 = !DILocation(line: 699, column: 17, scope: !4534)
!4545 = !DILocation(line: 699, column: 24, scope: !4534)
!4546 = !DILocation(line: 703, column: 33, scope: !4534)
!4547 = !DILocation(line: 703, column: 40, scope: !4534)
!4548 = !DILocation(line: 703, column: 42, scope: !4534)
!4549 = !DILocation(line: 703, column: 50, scope: !4534)
!4550 = !DILocation(line: 703, column: 61, scope: !4534)
!4551 = !DILocation(line: 703, column: 26, scope: !4534)
!4552 = !DILocation(line: 703, column: 8, scope: !4534)
!4553 = !DILocation(line: 703, column: 15, scope: !4534)
!4554 = !DILocation(line: 703, column: 17, scope: !4534)
!4555 = !DILocation(line: 703, column: 24, scope: !4534)
!4556 = !DILocation(line: 704, column: 7, scope: !4534)
!4557 = !DILocation(line: 705, column: 6, scope: !4523)
!4558 = !DILocation(line: 706, column: 5, scope: !4510)
!4559 = !DILocation(line: 695, column: 53, scope: !4506)
!4560 = !DILocation(line: 695, column: 60, scope: !4506)
!4561 = !DILocation(line: 695, column: 63, scope: !4506)
!4562 = !DILocation(line: 695, column: 51, scope: !4506)
!4563 = !DILocation(line: 695, column: 5, scope: !4506)
!4564 = distinct !{!4564, !4507, !4565}
!4565 = !DILocation(line: 706, column: 5, scope: !4500)
!4566 = !DILocation(line: 707, column: 4, scope: !4497)
!4567 = !DILocation(line: 708, column: 13, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4492, file: !3, line: 708, column: 13)
!4569 = !DILocation(line: 708, column: 19, scope: !4568)
!4570 = !DILocation(line: 708, column: 24, scope: !4568)
!4571 = !DILocation(line: 708, column: 13, scope: !4492)
!4572 = !DILocation(line: 709, column: 9, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 709, column: 9)
!4574 = distinct !DILexicalBlock(scope: !4568, file: !3, line: 708, column: 47)
!4575 = !DILocation(line: 709, column: 20, scope: !4573)
!4576 = !DILocation(line: 709, column: 9, scope: !4574)
!4577 = !DILocalVariable(name: "tnode", scope: !4578, file: !3, line: 710, type: !499)
!4578 = distinct !DILexicalBlock(scope: !4573, file: !3, line: 709, column: 26)
!4579 = !DILocation(line: 710, column: 13, scope: !4578)
!4580 = !DILocation(line: 712, column: 19, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 712, column: 6)
!4582 = !DILocation(line: 712, column: 26, scope: !4581)
!4583 = !DILocation(line: 712, column: 32, scope: !4581)
!4584 = !DILocation(line: 712, column: 17, scope: !4581)
!4585 = !DILocation(line: 712, column: 11, scope: !4581)
!4586 = !DILocation(line: 712, column: 39, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 712, column: 6)
!4588 = !DILocation(line: 712, column: 6, scope: !4581)
!4589 = !DILocation(line: 713, column: 11, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4587, file: !3, line: 713, column: 11)
!4591 = !DILocation(line: 713, column: 18, scope: !4590)
!4592 = !DILocation(line: 713, column: 23, scope: !4590)
!4593 = !DILocation(line: 713, column: 11, scope: !4587)
!4594 = !DILocation(line: 714, column: 8, scope: !4590)
!4595 = !DILocation(line: 714, column: 15, scope: !4590)
!4596 = !DILocation(line: 714, column: 20, scope: !4590)
!4597 = !DILocation(line: 713, column: 26, scope: !4590)
!4598 = !DILocation(line: 712, column: 54, scope: !4587)
!4599 = !DILocation(line: 712, column: 61, scope: !4587)
!4600 = !DILocation(line: 712, column: 52, scope: !4587)
!4601 = !DILocation(line: 712, column: 6, scope: !4587)
!4602 = distinct !{!4602, !4588, !4603}
!4603 = !DILocation(line: 714, column: 24, scope: !4581)
!4604 = !DILocation(line: 716, column: 6, scope: !4578)
!4605 = !DILocation(line: 716, column: 12, scope: !4578)
!4606 = !DILocation(line: 716, column: 17, scope: !4578)
!4607 = !DILocation(line: 717, column: 34, scope: !4578)
!4608 = !DILocation(line: 717, column: 41, scope: !4578)
!4609 = !DILocation(line: 717, column: 6, scope: !4578)
!4610 = !DILocation(line: 718, column: 5, scope: !4578)
!4611 = !DILocation(line: 719, column: 4, scope: !4574)
!4612 = !DILocation(line: 720, column: 13, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4568, file: !3, line: 720, column: 13)
!4614 = !DILocation(line: 720, column: 13, scope: !4568)
!4615 = !DILocation(line: 721, column: 33, scope: !4613)
!4616 = !DILocation(line: 721, column: 40, scope: !4613)
!4617 = !DILocation(line: 721, column: 5, scope: !4613)
!4618 = !DILocation(line: 722, column: 3, scope: !4449)
!4619 = !DILocation(line: 723, column: 12, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 723, column: 12)
!4621 = !DILocation(line: 723, column: 19, scope: !4620)
!4622 = !DILocation(line: 723, column: 24, scope: !4620)
!4623 = !DILocation(line: 723, column: 12, scope: !4443)
!4624 = !DILocation(line: 731, column: 3, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4620, file: !3, line: 723, column: 42)
!4626 = !DILocation(line: 732, column: 2, scope: !4283)
!4627 = !DILocation(line: 733, column: 1, scope: !4257)
!4628 = distinct !DISubprogram(name: "min_ff", scope: !4629, file: !4629, line: 202, type: !4630, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!4629 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4630 = !DISubroutineType(types: !4631)
!4631 = !{!177, !177, !177}
!4632 = !DILocalVariable(name: "a", arg: 1, scope: !4628, file: !4629, line: 202, type: !177)
!4633 = !DILocation(line: 202, column: 28, scope: !4628)
!4634 = !DILocalVariable(name: "b", arg: 2, scope: !4628, file: !4629, line: 202, type: !177)
!4635 = !DILocation(line: 202, column: 37, scope: !4628)
!4636 = !DILocation(line: 204, column: 10, scope: !4628)
!4637 = !DILocation(line: 204, column: 14, scope: !4628)
!4638 = !DILocation(line: 204, column: 12, scope: !4628)
!4639 = !DILocation(line: 204, column: 9, scope: !4628)
!4640 = !DILocation(line: 204, column: 19, scope: !4628)
!4641 = !DILocation(line: 204, column: 23, scope: !4628)
!4642 = !DILocation(line: 204, column: 2, scope: !4628)
!4643 = distinct !DISubprogram(name: "ED_node_post_apply_transform", scope: !3, file: !3, line: 735, type: !4644, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!4644 = !DISubroutineType(types: !4645)
!4645 = !{null, !3399, !2867}
!4646 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !4643, file: !3, line: 735, type: !3399)
!4647 = !DILocation(line: 735, column: 45, scope: !4643)
!4648 = !DILocalVariable(name: "UNUSED_ntree", arg: 2, scope: !4643, file: !3, line: 735, type: !2867)
!4649 = !DILocation(line: 735, column: 67, scope: !4643)
!4650 = !DILocation(line: 742, column: 1, scope: !4643)
!4651 = distinct !DISubprogram(name: "NODE_OT_resize", scope: !3, file: !3, line: 995, type: !4, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!4652 = !DILocalVariable(name: "ot", arg: 1, scope: !4651, file: !3, line: 995, type: !6)
!4653 = !DILocation(line: 995, column: 37, scope: !4651)
!4654 = !DILocation(line: 998, column: 2, scope: !4651)
!4655 = !DILocation(line: 998, column: 6, scope: !4651)
!4656 = !DILocation(line: 998, column: 11, scope: !4651)
!4657 = !DILocation(line: 999, column: 2, scope: !4651)
!4658 = !DILocation(line: 999, column: 6, scope: !4651)
!4659 = !DILocation(line: 999, column: 13, scope: !4651)
!4660 = !DILocation(line: 1000, column: 2, scope: !4651)
!4661 = !DILocation(line: 1000, column: 6, scope: !4651)
!4662 = !DILocation(line: 1000, column: 18, scope: !4651)
!4663 = !DILocation(line: 1003, column: 2, scope: !4651)
!4664 = !DILocation(line: 1003, column: 6, scope: !4651)
!4665 = !DILocation(line: 1003, column: 13, scope: !4651)
!4666 = !DILocation(line: 1004, column: 2, scope: !4651)
!4667 = !DILocation(line: 1004, column: 6, scope: !4651)
!4668 = !DILocation(line: 1004, column: 12, scope: !4651)
!4669 = !DILocation(line: 1005, column: 2, scope: !4651)
!4670 = !DILocation(line: 1005, column: 6, scope: !4651)
!4671 = !DILocation(line: 1005, column: 11, scope: !4651)
!4672 = !DILocation(line: 1006, column: 2, scope: !4651)
!4673 = !DILocation(line: 1006, column: 6, scope: !4651)
!4674 = !DILocation(line: 1006, column: 13, scope: !4651)
!4675 = !DILocation(line: 1009, column: 2, scope: !4651)
!4676 = !DILocation(line: 1009, column: 6, scope: !4651)
!4677 = !DILocation(line: 1009, column: 11, scope: !4651)
!4678 = !DILocation(line: 1010, column: 1, scope: !4651)
!4679 = distinct !DISubprogram(name: "node_resize_invoke", scope: !3, file: !3, line: 970, type: !4680, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!4680 = !DISubroutineType(types: !4681)
!4681 = !{!22, !3399, !4682, !4684}
!4682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4683, size: 64)
!4683 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !28, line: 348, baseType: !27)
!4684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4685, size: 64)
!4685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4686)
!4686 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !8, line: 460, baseType: !2529)
!4687 = !DILocalVariable(name: "C", arg: 1, scope: !4679, file: !3, line: 970, type: !3399)
!4688 = !DILocation(line: 970, column: 41, scope: !4679)
!4689 = !DILocalVariable(name: "op", arg: 2, scope: !4679, file: !3, line: 970, type: !4682)
!4690 = !DILocation(line: 970, column: 56, scope: !4679)
!4691 = !DILocalVariable(name: "event", arg: 3, scope: !4679, file: !3, line: 970, type: !4684)
!4692 = !DILocation(line: 970, column: 75, scope: !4679)
!4693 = !DILocalVariable(name: "snode", scope: !4679, file: !3, line: 972, type: !3213)
!4694 = !DILocation(line: 972, column: 13, scope: !4679)
!4695 = !DILocation(line: 972, column: 39, scope: !4679)
!4696 = !DILocation(line: 972, column: 21, scope: !4679)
!4697 = !DILocalVariable(name: "ar", scope: !4679, file: !3, line: 973, type: !4698)
!4698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4699, size: 64)
!4699 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !110, line: 267, baseType: !539)
!4700 = !DILocation(line: 973, column: 11, scope: !4679)
!4701 = !DILocation(line: 973, column: 30, scope: !4679)
!4702 = !DILocation(line: 973, column: 16, scope: !4679)
!4703 = !DILocalVariable(name: "node", scope: !4679, file: !3, line: 974, type: !499)
!4704 = !DILocation(line: 974, column: 9, scope: !4679)
!4705 = !DILocation(line: 974, column: 30, scope: !4679)
!4706 = !DILocation(line: 974, column: 37, scope: !4679)
!4707 = !DILocation(line: 974, column: 16, scope: !4679)
!4708 = !DILocalVariable(name: "dir", scope: !4679, file: !3, line: 975, type: !22)
!4709 = !DILocation(line: 975, column: 6, scope: !4679)
!4710 = !DILocation(line: 977, column: 6, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4679, file: !3, line: 977, column: 6)
!4712 = !DILocation(line: 977, column: 6, scope: !4679)
!4713 = !DILocation(line: 979, column: 29, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4711, file: !3, line: 977, column: 12)
!4715 = !DILocation(line: 979, column: 33, scope: !4714)
!4716 = !DILocation(line: 979, column: 38, scope: !4714)
!4717 = !DILocation(line: 979, column: 45, scope: !4714)
!4718 = !DILocation(line: 979, column: 54, scope: !4714)
!4719 = !DILocation(line: 979, column: 61, scope: !4714)
!4720 = !DILocation(line: 980, column: 29, scope: !4714)
!4721 = !DILocation(line: 980, column: 36, scope: !4714)
!4722 = !DILocation(line: 980, column: 48, scope: !4714)
!4723 = !DILocation(line: 980, column: 55, scope: !4714)
!4724 = !DILocation(line: 979, column: 3, scope: !4714)
!4725 = !DILocation(line: 981, column: 9, scope: !4714)
!4726 = !DILocation(line: 981, column: 15, scope: !4714)
!4727 = !DILocation(line: 981, column: 25, scope: !4714)
!4728 = !DILocation(line: 981, column: 42, scope: !4714)
!4729 = !DILocation(line: 981, column: 48, scope: !4714)
!4730 = !DILocation(line: 981, column: 55, scope: !4714)
!4731 = !DILocation(line: 981, column: 66, scope: !4714)
!4732 = !DILocation(line: 981, column: 73, scope: !4714)
!4733 = !DILocation(line: 981, column: 7, scope: !4714)
!4734 = !DILocation(line: 982, column: 7, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 982, column: 7)
!4736 = !DILocation(line: 982, column: 11, scope: !4735)
!4737 = !DILocation(line: 982, column: 7, scope: !4714)
!4738 = !DILocation(line: 983, column: 21, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 982, column: 17)
!4740 = !DILocation(line: 983, column: 24, scope: !4739)
!4741 = !DILocation(line: 983, column: 28, scope: !4739)
!4742 = !DILocation(line: 983, column: 35, scope: !4739)
!4743 = !DILocation(line: 983, column: 41, scope: !4739)
!4744 = !DILocation(line: 983, column: 4, scope: !4739)
!4745 = !DILocation(line: 984, column: 4, scope: !4739)
!4746 = !DILocation(line: 986, column: 2, scope: !4714)
!4747 = !DILocation(line: 987, column: 2, scope: !4679)
!4748 = !DILocation(line: 988, column: 1, scope: !4679)
!4749 = distinct !DISubprogram(name: "node_resize_modal", scope: !3, file: !3, line: 866, type: !4680, scopeLine: 867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!4750 = !DILocalVariable(name: "C", arg: 1, scope: !4749, file: !3, line: 866, type: !3399)
!4751 = !DILocation(line: 866, column: 40, scope: !4749)
!4752 = !DILocalVariable(name: "op", arg: 2, scope: !4749, file: !3, line: 866, type: !4682)
!4753 = !DILocation(line: 866, column: 55, scope: !4749)
!4754 = !DILocalVariable(name: "event", arg: 3, scope: !4749, file: !3, line: 866, type: !4684)
!4755 = !DILocation(line: 866, column: 74, scope: !4749)
!4756 = !DILocalVariable(name: "snode", scope: !4749, file: !3, line: 868, type: !3213)
!4757 = !DILocation(line: 868, column: 13, scope: !4749)
!4758 = !DILocation(line: 868, column: 39, scope: !4749)
!4759 = !DILocation(line: 868, column: 21, scope: !4749)
!4760 = !DILocalVariable(name: "ar", scope: !4749, file: !3, line: 869, type: !4698)
!4761 = !DILocation(line: 869, column: 11, scope: !4749)
!4762 = !DILocation(line: 869, column: 30, scope: !4749)
!4763 = !DILocation(line: 869, column: 16, scope: !4749)
!4764 = !DILocalVariable(name: "node", scope: !4749, file: !3, line: 870, type: !499)
!4765 = !DILocation(line: 870, column: 9, scope: !4749)
!4766 = !DILocation(line: 870, column: 30, scope: !4749)
!4767 = !DILocation(line: 870, column: 37, scope: !4749)
!4768 = !DILocation(line: 870, column: 16, scope: !4749)
!4769 = !DILocalVariable(name: "nsw", scope: !4749, file: !3, line: 871, type: !4770)
!4770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4771, size: 64)
!4771 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeSizeWidget", file: !3, line: 831, baseType: !4772)
!4772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NodeSizeWidget", file: !3, line: 824, size: 320, elements: !4773)
!4773 = !{!4774, !4775, !4776, !4777, !4778, !4779, !4780, !4781, !4782, !4783}
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "mxstart", scope: !4772, file: !3, line: 825, baseType: !177, size: 32)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "mystart", scope: !4772, file: !3, line: 825, baseType: !177, size: 32, offset: 32)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "oldlocx", scope: !4772, file: !3, line: 826, baseType: !177, size: 32, offset: 64)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "oldlocy", scope: !4772, file: !3, line: 826, baseType: !177, size: 32, offset: 96)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "oldoffsetx", scope: !4772, file: !3, line: 827, baseType: !177, size: 32, offset: 128)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "oldoffsety", scope: !4772, file: !3, line: 827, baseType: !177, size: 32, offset: 160)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "oldwidth", scope: !4772, file: !3, line: 828, baseType: !177, size: 32, offset: 192)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "oldheight", scope: !4772, file: !3, line: 828, baseType: !177, size: 32, offset: 224)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "oldminiwidth", scope: !4772, file: !3, line: 829, baseType: !177, size: 32, offset: 256)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "directions", scope: !4772, file: !3, line: 830, baseType: !22, size: 32, offset: 288)
!4784 = !DILocation(line: 871, column: 18, scope: !4749)
!4785 = !DILocation(line: 871, column: 24, scope: !4749)
!4786 = !DILocation(line: 871, column: 28, scope: !4749)
!4787 = !DILocalVariable(name: "mx", scope: !4749, file: !3, line: 872, type: !177)
!4788 = !DILocation(line: 872, column: 8, scope: !4749)
!4789 = !DILocalVariable(name: "my", scope: !4749, file: !3, line: 872, type: !177)
!4790 = !DILocation(line: 872, column: 12, scope: !4749)
!4791 = !DILocalVariable(name: "dx", scope: !4749, file: !3, line: 872, type: !177)
!4792 = !DILocation(line: 872, column: 16, scope: !4749)
!4793 = !DILocalVariable(name: "dy", scope: !4749, file: !3, line: 872, type: !177)
!4794 = !DILocation(line: 872, column: 20, scope: !4749)
!4795 = !DILocation(line: 874, column: 10, scope: !4749)
!4796 = !DILocation(line: 874, column: 17, scope: !4749)
!4797 = !DILocation(line: 874, column: 2, scope: !4749)
!4798 = !DILocation(line: 877, column: 30, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 874, column: 23)
!4800 = !DILocation(line: 877, column: 34, scope: !4799)
!4801 = !DILocation(line: 877, column: 39, scope: !4799)
!4802 = !DILocation(line: 877, column: 46, scope: !4799)
!4803 = !DILocation(line: 877, column: 55, scope: !4799)
!4804 = !DILocation(line: 877, column: 62, scope: !4799)
!4805 = !DILocation(line: 877, column: 4, scope: !4799)
!4806 = !DILocation(line: 878, column: 10, scope: !4799)
!4807 = !DILocation(line: 878, column: 15, scope: !4799)
!4808 = !DILocation(line: 878, column: 20, scope: !4799)
!4809 = !DILocation(line: 878, column: 13, scope: !4799)
!4810 = !DILocation(line: 878, column: 31, scope: !4799)
!4811 = !DILocation(line: 878, column: 29, scope: !4799)
!4812 = !DILocation(line: 878, column: 7, scope: !4799)
!4813 = !DILocation(line: 879, column: 10, scope: !4799)
!4814 = !DILocation(line: 879, column: 15, scope: !4799)
!4815 = !DILocation(line: 879, column: 20, scope: !4799)
!4816 = !DILocation(line: 879, column: 13, scope: !4799)
!4817 = !DILocation(line: 879, column: 31, scope: !4799)
!4818 = !DILocation(line: 879, column: 29, scope: !4799)
!4819 = !DILocation(line: 879, column: 7, scope: !4799)
!4820 = !DILocation(line: 881, column: 8, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 881, column: 8)
!4822 = !DILocation(line: 881, column: 8, scope: !4799)
!4823 = !DILocalVariable(name: "pwidth", scope: !4824, file: !3, line: 883, type: !239)
!4824 = distinct !DILexicalBlock(scope: !4821, file: !3, line: 881, column: 14)
!4825 = !DILocation(line: 883, column: 12, scope: !4824)
!4826 = !DILocalVariable(name: "oldwidth", scope: !4824, file: !3, line: 884, type: !177)
!4827 = !DILocation(line: 884, column: 11, scope: !4824)
!4828 = !DILocalVariable(name: "widthmin", scope: !4824, file: !3, line: 884, type: !177)
!4829 = !DILocation(line: 884, column: 21, scope: !4824)
!4830 = !DILocalVariable(name: "widthmax", scope: !4824, file: !3, line: 884, type: !177)
!4831 = !DILocation(line: 884, column: 31, scope: !4824)
!4832 = !DILocalVariable(name: "use_hidden", scope: !4824, file: !3, line: 886, type: !699)
!4833 = !DILocation(line: 886, column: 10, scope: !4824)
!4834 = !DILocation(line: 886, column: 24, scope: !4824)
!4835 = !DILocation(line: 886, column: 30, scope: !4824)
!4836 = !DILocation(line: 886, column: 35, scope: !4824)
!4837 = !DILocation(line: 886, column: 23, scope: !4824)
!4838 = !DILocation(line: 887, column: 9, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4824, file: !3, line: 887, column: 9)
!4840 = !DILocation(line: 887, column: 20, scope: !4839)
!4841 = !DILocation(line: 887, column: 23, scope: !4839)
!4842 = !DILocation(line: 887, column: 29, scope: !4839)
!4843 = !DILocation(line: 887, column: 34, scope: !4839)
!4844 = !DILocation(line: 887, column: 9, scope: !4824)
!4845 = !DILocation(line: 888, column: 16, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4839, file: !3, line: 887, column: 49)
!4847 = !DILocation(line: 888, column: 22, scope: !4846)
!4848 = !DILocation(line: 888, column: 13, scope: !4846)
!4849 = !DILocation(line: 889, column: 17, scope: !4846)
!4850 = !DILocation(line: 889, column: 22, scope: !4846)
!4851 = !DILocation(line: 889, column: 15, scope: !4846)
!4852 = !DILocation(line: 890, column: 15, scope: !4846)
!4853 = !DILocation(line: 891, column: 15, scope: !4846)
!4854 = !DILocation(line: 892, column: 5, scope: !4846)
!4855 = !DILocation(line: 894, column: 16, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4839, file: !3, line: 893, column: 10)
!4857 = !DILocation(line: 894, column: 22, scope: !4856)
!4858 = !DILocation(line: 894, column: 13, scope: !4856)
!4859 = !DILocation(line: 895, column: 17, scope: !4856)
!4860 = !DILocation(line: 895, column: 22, scope: !4856)
!4861 = !DILocation(line: 895, column: 15, scope: !4856)
!4862 = !DILocation(line: 896, column: 17, scope: !4856)
!4863 = !DILocation(line: 896, column: 23, scope: !4856)
!4864 = !DILocation(line: 896, column: 33, scope: !4856)
!4865 = !DILocation(line: 896, column: 15, scope: !4856)
!4866 = !DILocation(line: 897, column: 17, scope: !4856)
!4867 = !DILocation(line: 897, column: 23, scope: !4856)
!4868 = !DILocation(line: 897, column: 33, scope: !4856)
!4869 = !DILocation(line: 897, column: 15, scope: !4856)
!4870 = !DILocation(line: 901, column: 10, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4872, file: !3, line: 901, column: 10)
!4872 = distinct !DILexicalBlock(scope: !4824, file: !3, line: 900, column: 5)
!4873 = !DILocation(line: 901, column: 15, scope: !4871)
!4874 = !DILocation(line: 901, column: 26, scope: !4871)
!4875 = !DILocation(line: 901, column: 10, scope: !4872)
!4876 = !DILocation(line: 902, column: 17, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 901, column: 47)
!4878 = !DILocation(line: 902, column: 28, scope: !4877)
!4879 = !DILocation(line: 902, column: 26, scope: !4877)
!4880 = !DILocation(line: 902, column: 8, scope: !4877)
!4881 = !DILocation(line: 902, column: 15, scope: !4877)
!4882 = !DILocation(line: 903, column: 7, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 903, column: 7)
!4884 = distinct !DILexicalBlock(scope: !4877, file: !3, line: 903, column: 7)
!4885 = !DILocation(line: 903, column: 7, scope: !4884)
!4886 = !DILocation(line: 903, column: 7, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4883, file: !3, line: 903, column: 7)
!4888 = !DILocation(line: 904, column: 6, scope: !4877)
!4889 = !DILocation(line: 905, column: 10, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4872, file: !3, line: 905, column: 10)
!4891 = !DILocation(line: 905, column: 15, scope: !4890)
!4892 = !DILocation(line: 905, column: 26, scope: !4890)
!4893 = !DILocation(line: 905, column: 10, scope: !4872)
!4894 = !DILocalVariable(name: "locmax", scope: !4895, file: !3, line: 906, type: !177)
!4895 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 905, column: 46)
!4896 = !DILocation(line: 906, column: 13, scope: !4895)
!4897 = !DILocation(line: 906, column: 22, scope: !4895)
!4898 = !DILocation(line: 906, column: 27, scope: !4895)
!4899 = !DILocation(line: 906, column: 37, scope: !4895)
!4900 = !DILocation(line: 906, column: 35, scope: !4895)
!4901 = !DILocation(line: 908, column: 20, scope: !4895)
!4902 = !DILocation(line: 908, column: 25, scope: !4895)
!4903 = !DILocation(line: 908, column: 35, scope: !4895)
!4904 = !DILocation(line: 908, column: 33, scope: !4895)
!4905 = !DILocation(line: 908, column: 7, scope: !4895)
!4906 = !DILocation(line: 908, column: 13, scope: !4895)
!4907 = !DILocation(line: 908, column: 18, scope: !4895)
!4908 = !DILocation(line: 909, column: 7, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4910, file: !3, line: 909, column: 7)
!4910 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 909, column: 7)
!4911 = !DILocation(line: 909, column: 7, scope: !4910)
!4912 = !DILocation(line: 909, column: 7, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 909, column: 7)
!4914 = !DILocation(line: 910, column: 17, scope: !4895)
!4915 = !DILocation(line: 910, column: 26, scope: !4895)
!4916 = !DILocation(line: 910, column: 32, scope: !4895)
!4917 = !DILocation(line: 910, column: 24, scope: !4895)
!4918 = !DILocation(line: 910, column: 8, scope: !4895)
!4919 = !DILocation(line: 910, column: 15, scope: !4895)
!4920 = !DILocation(line: 911, column: 6, scope: !4895)
!4921 = !DILocalVariable(name: "heightmin", scope: !4922, file: !3, line: 916, type: !177)
!4922 = distinct !DILexicalBlock(scope: !4824, file: !3, line: 915, column: 5)
!4923 = !DILocation(line: 916, column: 12, scope: !4922)
!4924 = !DILocation(line: 916, column: 24, scope: !4922)
!4925 = !DILocation(line: 916, column: 37, scope: !4922)
!4926 = !DILocation(line: 916, column: 43, scope: !4922)
!4927 = !DILocation(line: 916, column: 53, scope: !4922)
!4928 = !DILocation(line: 916, column: 35, scope: !4922)
!4929 = !DILocalVariable(name: "heightmax", scope: !4922, file: !3, line: 917, type: !177)
!4930 = !DILocation(line: 917, column: 12, scope: !4922)
!4931 = !DILocation(line: 917, column: 24, scope: !4922)
!4932 = !DILocation(line: 917, column: 37, scope: !4922)
!4933 = !DILocation(line: 917, column: 43, scope: !4922)
!4934 = !DILocation(line: 917, column: 53, scope: !4922)
!4935 = !DILocation(line: 917, column: 35, scope: !4922)
!4936 = !DILocation(line: 918, column: 10, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 918, column: 10)
!4938 = !DILocation(line: 918, column: 15, scope: !4937)
!4939 = !DILocation(line: 918, column: 26, scope: !4937)
!4940 = !DILocation(line: 918, column: 10, scope: !4922)
!4941 = !DILocalVariable(name: "locmin", scope: !4942, file: !3, line: 919, type: !177)
!4942 = distinct !DILexicalBlock(scope: !4937, file: !3, line: 918, column: 45)
!4943 = !DILocation(line: 919, column: 13, scope: !4942)
!4944 = !DILocation(line: 919, column: 22, scope: !4942)
!4945 = !DILocation(line: 919, column: 27, scope: !4942)
!4946 = !DILocation(line: 919, column: 37, scope: !4942)
!4947 = !DILocation(line: 919, column: 42, scope: !4942)
!4948 = !DILocation(line: 919, column: 35, scope: !4942)
!4949 = !DILocation(line: 921, column: 20, scope: !4942)
!4950 = !DILocation(line: 921, column: 25, scope: !4942)
!4951 = !DILocation(line: 921, column: 35, scope: !4942)
!4952 = !DILocation(line: 921, column: 33, scope: !4942)
!4953 = !DILocation(line: 921, column: 7, scope: !4942)
!4954 = !DILocation(line: 921, column: 13, scope: !4942)
!4955 = !DILocation(line: 921, column: 18, scope: !4942)
!4956 = !DILocation(line: 922, column: 7, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4958, file: !3, line: 922, column: 7)
!4958 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 922, column: 7)
!4959 = !DILocation(line: 922, column: 7, scope: !4958)
!4960 = !DILocation(line: 922, column: 7, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 922, column: 7)
!4962 = !DILocation(line: 923, column: 22, scope: !4942)
!4963 = !DILocation(line: 923, column: 28, scope: !4942)
!4964 = !DILocation(line: 923, column: 35, scope: !4942)
!4965 = !DILocation(line: 923, column: 33, scope: !4942)
!4966 = !DILocation(line: 923, column: 7, scope: !4942)
!4967 = !DILocation(line: 923, column: 13, scope: !4942)
!4968 = !DILocation(line: 923, column: 20, scope: !4942)
!4969 = !DILocation(line: 924, column: 6, scope: !4942)
!4970 = !DILocation(line: 925, column: 10, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 925, column: 10)
!4972 = !DILocation(line: 925, column: 15, scope: !4971)
!4973 = !DILocation(line: 925, column: 26, scope: !4971)
!4974 = !DILocation(line: 925, column: 10, scope: !4922)
!4975 = !DILocation(line: 926, column: 22, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 925, column: 48)
!4977 = !DILocation(line: 926, column: 27, scope: !4976)
!4978 = !DILocation(line: 926, column: 39, scope: !4976)
!4979 = !DILocation(line: 926, column: 37, scope: !4976)
!4980 = !DILocation(line: 926, column: 7, scope: !4976)
!4981 = !DILocation(line: 926, column: 13, scope: !4976)
!4982 = !DILocation(line: 926, column: 20, scope: !4976)
!4983 = !DILocation(line: 927, column: 7, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4985, file: !3, line: 927, column: 7)
!4985 = distinct !DILexicalBlock(scope: !4976, file: !3, line: 927, column: 7)
!4986 = !DILocation(line: 927, column: 7, scope: !4985)
!4987 = !DILocation(line: 927, column: 7, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4984, file: !3, line: 927, column: 7)
!4989 = !DILocation(line: 928, column: 6, scope: !4976)
!4990 = !DILocation(line: 932, column: 9, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4824, file: !3, line: 932, column: 9)
!4992 = !DILocation(line: 932, column: 15, scope: !4991)
!4993 = !DILocation(line: 932, column: 20, scope: !4991)
!4994 = !DILocation(line: 932, column: 9, scope: !4824)
!4995 = !DILocation(line: 934, column: 10, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 934, column: 10)
!4997 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 932, column: 35)
!4998 = !DILocation(line: 934, column: 15, scope: !4996)
!4999 = !DILocation(line: 934, column: 26, scope: !4996)
!5000 = !DILocation(line: 934, column: 10, scope: !4997)
!5001 = !DILocation(line: 935, column: 20, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4996, file: !3, line: 934, column: 46)
!5003 = !DILocation(line: 935, column: 25, scope: !5002)
!5004 = !DILocation(line: 935, column: 42, scope: !5002)
!5005 = !DILocation(line: 935, column: 40, scope: !5002)
!5006 = !DILocation(line: 935, column: 33, scope: !5002)
!5007 = !DILocation(line: 935, column: 7, scope: !5002)
!5008 = !DILocation(line: 935, column: 13, scope: !5002)
!5009 = !DILocation(line: 935, column: 18, scope: !5002)
!5010 = !DILocation(line: 936, column: 23, scope: !5002)
!5011 = !DILocation(line: 936, column: 28, scope: !5002)
!5012 = !DILocation(line: 936, column: 48, scope: !5002)
!5013 = !DILocation(line: 936, column: 46, scope: !5002)
!5014 = !DILocation(line: 936, column: 39, scope: !5002)
!5015 = !DILocation(line: 936, column: 7, scope: !5002)
!5016 = !DILocation(line: 936, column: 13, scope: !5002)
!5017 = !DILocation(line: 936, column: 21, scope: !5002)
!5018 = !DILocation(line: 937, column: 6, scope: !5002)
!5019 = !DILocation(line: 938, column: 10, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 938, column: 10)
!5021 = !DILocation(line: 938, column: 15, scope: !5020)
!5022 = !DILocation(line: 938, column: 26, scope: !5020)
!5023 = !DILocation(line: 938, column: 10, scope: !4997)
!5024 = !DILocation(line: 939, column: 20, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 938, column: 47)
!5026 = !DILocation(line: 939, column: 25, scope: !5025)
!5027 = !DILocation(line: 939, column: 42, scope: !5025)
!5028 = !DILocation(line: 939, column: 40, scope: !5025)
!5029 = !DILocation(line: 939, column: 33, scope: !5025)
!5030 = !DILocation(line: 939, column: 7, scope: !5025)
!5031 = !DILocation(line: 939, column: 13, scope: !5025)
!5032 = !DILocation(line: 939, column: 18, scope: !5025)
!5033 = !DILocation(line: 940, column: 23, scope: !5025)
!5034 = !DILocation(line: 940, column: 28, scope: !5025)
!5035 = !DILocation(line: 940, column: 48, scope: !5025)
!5036 = !DILocation(line: 940, column: 46, scope: !5025)
!5037 = !DILocation(line: 940, column: 39, scope: !5025)
!5038 = !DILocation(line: 940, column: 7, scope: !5025)
!5039 = !DILocation(line: 940, column: 13, scope: !5025)
!5040 = !DILocation(line: 940, column: 21, scope: !5025)
!5041 = !DILocation(line: 941, column: 6, scope: !5025)
!5042 = !DILocation(line: 942, column: 10, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 942, column: 10)
!5044 = !DILocation(line: 942, column: 15, scope: !5043)
!5045 = !DILocation(line: 942, column: 26, scope: !5043)
!5046 = !DILocation(line: 942, column: 10, scope: !4997)
!5047 = !DILocation(line: 943, column: 20, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5043, file: !3, line: 942, column: 45)
!5049 = !DILocation(line: 943, column: 25, scope: !5048)
!5050 = !DILocation(line: 943, column: 42, scope: !5048)
!5051 = !DILocation(line: 943, column: 40, scope: !5048)
!5052 = !DILocation(line: 943, column: 33, scope: !5048)
!5053 = !DILocation(line: 943, column: 7, scope: !5048)
!5054 = !DILocation(line: 943, column: 13, scope: !5048)
!5055 = !DILocation(line: 943, column: 18, scope: !5048)
!5056 = !DILocation(line: 944, column: 23, scope: !5048)
!5057 = !DILocation(line: 944, column: 28, scope: !5048)
!5058 = !DILocation(line: 944, column: 48, scope: !5048)
!5059 = !DILocation(line: 944, column: 46, scope: !5048)
!5060 = !DILocation(line: 944, column: 39, scope: !5048)
!5061 = !DILocation(line: 944, column: 7, scope: !5048)
!5062 = !DILocation(line: 944, column: 13, scope: !5048)
!5063 = !DILocation(line: 944, column: 21, scope: !5048)
!5064 = !DILocation(line: 945, column: 6, scope: !5048)
!5065 = !DILocation(line: 946, column: 10, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 946, column: 10)
!5067 = !DILocation(line: 946, column: 15, scope: !5066)
!5068 = !DILocation(line: 946, column: 26, scope: !5066)
!5069 = !DILocation(line: 946, column: 10, scope: !4997)
!5070 = !DILocation(line: 947, column: 20, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5066, file: !3, line: 946, column: 48)
!5072 = !DILocation(line: 947, column: 25, scope: !5071)
!5073 = !DILocation(line: 947, column: 42, scope: !5071)
!5074 = !DILocation(line: 947, column: 40, scope: !5071)
!5075 = !DILocation(line: 947, column: 33, scope: !5071)
!5076 = !DILocation(line: 947, column: 7, scope: !5071)
!5077 = !DILocation(line: 947, column: 13, scope: !5071)
!5078 = !DILocation(line: 947, column: 18, scope: !5071)
!5079 = !DILocation(line: 948, column: 23, scope: !5071)
!5080 = !DILocation(line: 948, column: 28, scope: !5071)
!5081 = !DILocation(line: 948, column: 48, scope: !5071)
!5082 = !DILocation(line: 948, column: 46, scope: !5071)
!5083 = !DILocation(line: 948, column: 39, scope: !5071)
!5084 = !DILocation(line: 948, column: 7, scope: !5071)
!5085 = !DILocation(line: 948, column: 13, scope: !5071)
!5086 = !DILocation(line: 948, column: 21, scope: !5071)
!5087 = !DILocation(line: 949, column: 6, scope: !5071)
!5088 = !DILocation(line: 950, column: 5, scope: !4997)
!5089 = !DILocation(line: 951, column: 4, scope: !4824)
!5090 = !DILocation(line: 953, column: 25, scope: !4799)
!5091 = !DILocation(line: 953, column: 4, scope: !4799)
!5092 = !DILocation(line: 955, column: 4, scope: !4799)
!5093 = !DILocation(line: 961, column: 21, scope: !4799)
!5094 = !DILocation(line: 961, column: 24, scope: !4799)
!5095 = !DILocation(line: 961, column: 4, scope: !4799)
!5096 = !DILocation(line: 962, column: 33, scope: !4799)
!5097 = !DILocation(line: 962, column: 36, scope: !4799)
!5098 = !DILocation(line: 962, column: 43, scope: !4799)
!5099 = !DILocation(line: 962, column: 4, scope: !4799)
!5100 = !DILocation(line: 964, column: 4, scope: !4799)
!5101 = !DILocation(line: 967, column: 2, scope: !4749)
!5102 = !DILocation(line: 968, column: 1, scope: !4749)
!5103 = distinct !DISubprogram(name: "node_resize_cancel", scope: !3, file: !3, line: 990, type: !5104, scopeLine: 991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!5104 = !DISubroutineType(types: !5105)
!5105 = !{null, !3399, !4682}
!5106 = !DILocalVariable(name: "C", arg: 1, scope: !5103, file: !3, line: 990, type: !3399)
!5107 = !DILocation(line: 990, column: 42, scope: !5103)
!5108 = !DILocalVariable(name: "op", arg: 2, scope: !5103, file: !3, line: 990, type: !4682)
!5109 = !DILocation(line: 990, column: 57, scope: !5103)
!5110 = !DILocation(line: 992, column: 19, scope: !5103)
!5111 = !DILocation(line: 992, column: 22, scope: !5103)
!5112 = !DILocation(line: 992, column: 2, scope: !5103)
!5113 = !DILocation(line: 993, column: 1, scope: !5103)
!5114 = distinct !DISubprogram(name: "node_has_hidden_sockets", scope: !3, file: !3, line: 1015, type: !5115, scopeLine: 1016, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!5115 = !DISubroutineType(types: !5116)
!5116 = !{!22, !499}
!5117 = !DILocalVariable(name: "node", arg: 1, scope: !5114, file: !3, line: 1015, type: !499)
!5118 = !DILocation(line: 1015, column: 36, scope: !5114)
!5119 = !DILocalVariable(name: "sock", scope: !5114, file: !3, line: 1017, type: !503)
!5120 = !DILocation(line: 1017, column: 15, scope: !5114)
!5121 = !DILocation(line: 1019, column: 14, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 1019, column: 2)
!5123 = !DILocation(line: 1019, column: 20, scope: !5122)
!5124 = !DILocation(line: 1019, column: 27, scope: !5122)
!5125 = !DILocation(line: 1019, column: 12, scope: !5122)
!5126 = !DILocation(line: 1019, column: 7, scope: !5122)
!5127 = !DILocation(line: 1019, column: 34, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 1019, column: 2)
!5129 = !DILocation(line: 1019, column: 2, scope: !5122)
!5130 = !DILocation(line: 1020, column: 7, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 1020, column: 7)
!5132 = !DILocation(line: 1020, column: 13, scope: !5131)
!5133 = !DILocation(line: 1020, column: 18, scope: !5131)
!5134 = !DILocation(line: 1020, column: 7, scope: !5128)
!5135 = !DILocation(line: 1021, column: 4, scope: !5131)
!5136 = !DILocation(line: 1020, column: 20, scope: !5131)
!5137 = !DILocation(line: 1019, column: 47, scope: !5128)
!5138 = !DILocation(line: 1019, column: 53, scope: !5128)
!5139 = !DILocation(line: 1019, column: 45, scope: !5128)
!5140 = !DILocation(line: 1019, column: 2, scope: !5128)
!5141 = distinct !{!5141, !5129, !5142}
!5142 = !DILocation(line: 1021, column: 11, scope: !5122)
!5143 = !DILocation(line: 1022, column: 14, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 1022, column: 2)
!5145 = !DILocation(line: 1022, column: 20, scope: !5144)
!5146 = !DILocation(line: 1022, column: 28, scope: !5144)
!5147 = !DILocation(line: 1022, column: 12, scope: !5144)
!5148 = !DILocation(line: 1022, column: 7, scope: !5144)
!5149 = !DILocation(line: 1022, column: 35, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 1022, column: 2)
!5151 = !DILocation(line: 1022, column: 2, scope: !5144)
!5152 = !DILocation(line: 1023, column: 7, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5150, file: !3, line: 1023, column: 7)
!5154 = !DILocation(line: 1023, column: 13, scope: !5153)
!5155 = !DILocation(line: 1023, column: 18, scope: !5153)
!5156 = !DILocation(line: 1023, column: 7, scope: !5150)
!5157 = !DILocation(line: 1024, column: 4, scope: !5153)
!5158 = !DILocation(line: 1023, column: 20, scope: !5153)
!5159 = !DILocation(line: 1022, column: 48, scope: !5150)
!5160 = !DILocation(line: 1022, column: 54, scope: !5150)
!5161 = !DILocation(line: 1022, column: 46, scope: !5150)
!5162 = !DILocation(line: 1022, column: 2, scope: !5150)
!5163 = distinct !{!5163, !5151, !5164}
!5164 = !DILocation(line: 1024, column: 11, scope: !5144)
!5165 = !DILocation(line: 1025, column: 2, scope: !5114)
!5166 = !DILocation(line: 1026, column: 1, scope: !5114)
!5167 = distinct !DISubprogram(name: "node_set_hidden_sockets", scope: !3, file: !3, line: 1028, type: !5168, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!5168 = !DISubroutineType(types: !5169)
!5169 = !{null, !3213, !499, !22}
!5170 = !DILocalVariable(name: "snode", arg: 1, scope: !5167, file: !3, line: 1028, type: !3213)
!5171 = !DILocation(line: 1028, column: 41, scope: !5167)
!5172 = !DILocalVariable(name: "node", arg: 2, scope: !5167, file: !3, line: 1028, type: !499)
!5173 = !DILocation(line: 1028, column: 55, scope: !5167)
!5174 = !DILocalVariable(name: "set", arg: 3, scope: !5167, file: !3, line: 1028, type: !22)
!5175 = !DILocation(line: 1028, column: 65, scope: !5167)
!5176 = !DILocalVariable(name: "sock", scope: !5167, file: !3, line: 1030, type: !503)
!5177 = !DILocation(line: 1030, column: 15, scope: !5167)
!5178 = !DILocation(line: 1032, column: 6, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5167, file: !3, line: 1032, column: 6)
!5180 = !DILocation(line: 1032, column: 10, scope: !5179)
!5181 = !DILocation(line: 1032, column: 6, scope: !5167)
!5182 = !DILocation(line: 1033, column: 15, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 1033, column: 3)
!5184 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 1032, column: 16)
!5185 = !DILocation(line: 1033, column: 21, scope: !5183)
!5186 = !DILocation(line: 1033, column: 28, scope: !5183)
!5187 = !DILocation(line: 1033, column: 13, scope: !5183)
!5188 = !DILocation(line: 1033, column: 8, scope: !5183)
!5189 = !DILocation(line: 1033, column: 35, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5183, file: !3, line: 1033, column: 3)
!5191 = !DILocation(line: 1033, column: 3, scope: !5183)
!5192 = !DILocation(line: 1034, column: 4, scope: !5190)
!5193 = !DILocation(line: 1034, column: 10, scope: !5190)
!5194 = !DILocation(line: 1034, column: 15, scope: !5190)
!5195 = !DILocation(line: 1033, column: 48, scope: !5190)
!5196 = !DILocation(line: 1033, column: 54, scope: !5190)
!5197 = !DILocation(line: 1033, column: 46, scope: !5190)
!5198 = !DILocation(line: 1033, column: 3, scope: !5190)
!5199 = distinct !{!5199, !5191, !5200}
!5200 = !DILocation(line: 1034, column: 19, scope: !5183)
!5201 = !DILocation(line: 1035, column: 15, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 1035, column: 3)
!5203 = !DILocation(line: 1035, column: 21, scope: !5202)
!5204 = !DILocation(line: 1035, column: 29, scope: !5202)
!5205 = !DILocation(line: 1035, column: 13, scope: !5202)
!5206 = !DILocation(line: 1035, column: 8, scope: !5202)
!5207 = !DILocation(line: 1035, column: 36, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5202, file: !3, line: 1035, column: 3)
!5209 = !DILocation(line: 1035, column: 3, scope: !5202)
!5210 = !DILocation(line: 1036, column: 4, scope: !5208)
!5211 = !DILocation(line: 1036, column: 10, scope: !5208)
!5212 = !DILocation(line: 1036, column: 15, scope: !5208)
!5213 = !DILocation(line: 1035, column: 49, scope: !5208)
!5214 = !DILocation(line: 1035, column: 55, scope: !5208)
!5215 = !DILocation(line: 1035, column: 47, scope: !5208)
!5216 = !DILocation(line: 1035, column: 3, scope: !5208)
!5217 = distinct !{!5217, !5209, !5218}
!5218 = !DILocation(line: 1036, column: 19, scope: !5202)
!5219 = !DILocation(line: 1037, column: 2, scope: !5184)
!5220 = !DILocation(line: 1040, column: 15, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5222, file: !3, line: 1040, column: 3)
!5222 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 1038, column: 7)
!5223 = !DILocation(line: 1040, column: 21, scope: !5221)
!5224 = !DILocation(line: 1040, column: 28, scope: !5221)
!5225 = !DILocation(line: 1040, column: 13, scope: !5221)
!5226 = !DILocation(line: 1040, column: 8, scope: !5221)
!5227 = !DILocation(line: 1040, column: 35, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 1040, column: 3)
!5229 = !DILocation(line: 1040, column: 3, scope: !5221)
!5230 = !DILocation(line: 1041, column: 8, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 1041, column: 8)
!5232 = distinct !DILexicalBlock(scope: !5228, file: !3, line: 1040, column: 60)
!5233 = !DILocation(line: 1041, column: 14, scope: !5231)
!5234 = !DILocation(line: 1041, column: 19, scope: !5231)
!5235 = !DILocation(line: 1041, column: 8, scope: !5232)
!5236 = !DILocation(line: 1042, column: 5, scope: !5231)
!5237 = !DILocation(line: 1042, column: 11, scope: !5231)
!5238 = !DILocation(line: 1042, column: 16, scope: !5231)
!5239 = !DILocation(line: 1043, column: 3, scope: !5232)
!5240 = !DILocation(line: 1040, column: 48, scope: !5228)
!5241 = !DILocation(line: 1040, column: 54, scope: !5228)
!5242 = !DILocation(line: 1040, column: 46, scope: !5228)
!5243 = !DILocation(line: 1040, column: 3, scope: !5228)
!5244 = distinct !{!5244, !5229, !5245}
!5245 = !DILocation(line: 1043, column: 3, scope: !5221)
!5246 = !DILocation(line: 1044, column: 15, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5222, file: !3, line: 1044, column: 3)
!5248 = !DILocation(line: 1044, column: 21, scope: !5247)
!5249 = !DILocation(line: 1044, column: 29, scope: !5247)
!5250 = !DILocation(line: 1044, column: 13, scope: !5247)
!5251 = !DILocation(line: 1044, column: 8, scope: !5247)
!5252 = !DILocation(line: 1044, column: 36, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5247, file: !3, line: 1044, column: 3)
!5254 = !DILocation(line: 1044, column: 3, scope: !5247)
!5255 = !DILocation(line: 1045, column: 29, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5257, file: !3, line: 1045, column: 8)
!5257 = distinct !DILexicalBlock(scope: !5253, file: !3, line: 1044, column: 61)
!5258 = !DILocation(line: 1045, column: 36, scope: !5256)
!5259 = !DILocation(line: 1045, column: 46, scope: !5256)
!5260 = !DILocation(line: 1045, column: 8, scope: !5256)
!5261 = !DILocation(line: 1045, column: 52, scope: !5256)
!5262 = !DILocation(line: 1045, column: 8, scope: !5257)
!5263 = !DILocation(line: 1046, column: 5, scope: !5256)
!5264 = !DILocation(line: 1046, column: 11, scope: !5256)
!5265 = !DILocation(line: 1046, column: 16, scope: !5256)
!5266 = !DILocation(line: 1047, column: 3, scope: !5257)
!5267 = !DILocation(line: 1044, column: 49, scope: !5253)
!5268 = !DILocation(line: 1044, column: 55, scope: !5253)
!5269 = !DILocation(line: 1044, column: 47, scope: !5253)
!5270 = !DILocation(line: 1044, column: 3, scope: !5253)
!5271 = distinct !{!5271, !5254, !5272}
!5272 = !DILocation(line: 1047, column: 3, scope: !5247)
!5273 = !DILocation(line: 1049, column: 1, scope: !5167)
!5274 = distinct !DISubprogram(name: "node_find_indicated_socket", scope: !3, file: !3, line: 1054, type: !5275, scopeLine: 1055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!5275 = !DISubroutineType(types: !5276)
!5276 = !{!22, !3213, !5277, !5278, !239, !22}
!5277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64)
!5278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!5279 = !DILocalVariable(name: "snode", arg: 1, scope: !5274, file: !3, line: 1054, type: !3213)
!5280 = !DILocation(line: 1054, column: 43, scope: !5274)
!5281 = !DILocalVariable(name: "nodep", arg: 2, scope: !5274, file: !3, line: 1054, type: !5277)
!5282 = !DILocation(line: 1054, column: 58, scope: !5274)
!5283 = !DILocalVariable(name: "sockp", arg: 3, scope: !5274, file: !3, line: 1054, type: !5278)
!5284 = !DILocation(line: 1054, column: 79, scope: !5274)
!5285 = !DILocalVariable(name: "cursor", arg: 4, scope: !5274, file: !3, line: 1054, type: !239)
!5286 = !DILocation(line: 1054, column: 92, scope: !5274)
!5287 = !DILocalVariable(name: "in_out", arg: 5, scope: !5274, file: !3, line: 1054, type: !22)
!5288 = !DILocation(line: 1054, column: 107, scope: !5274)
!5289 = !DILocalVariable(name: "node", scope: !5274, file: !3, line: 1056, type: !499)
!5290 = !DILocation(line: 1056, column: 9, scope: !5274)
!5291 = !DILocalVariable(name: "sock", scope: !5274, file: !3, line: 1057, type: !503)
!5292 = !DILocation(line: 1057, column: 15, scope: !5274)
!5293 = !DILocalVariable(name: "rect", scope: !5274, file: !3, line: 1058, type: !549)
!5294 = !DILocation(line: 1058, column: 7, scope: !5274)
!5295 = !DILocation(line: 1060, column: 3, scope: !5274)
!5296 = !DILocation(line: 1060, column: 9, scope: !5274)
!5297 = !DILocation(line: 1061, column: 3, scope: !5274)
!5298 = !DILocation(line: 1061, column: 9, scope: !5274)
!5299 = !DILocation(line: 1064, column: 14, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5274, file: !3, line: 1064, column: 2)
!5301 = !DILocation(line: 1064, column: 21, scope: !5300)
!5302 = !DILocation(line: 1064, column: 31, scope: !5300)
!5303 = !DILocation(line: 1064, column: 37, scope: !5300)
!5304 = !DILocation(line: 1064, column: 12, scope: !5300)
!5305 = !DILocation(line: 1064, column: 7, scope: !5300)
!5306 = !DILocation(line: 1064, column: 44, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 1064, column: 2)
!5308 = !DILocation(line: 1064, column: 2, scope: !5300)
!5309 = !DILocation(line: 1066, column: 15, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 1064, column: 69)
!5311 = !DILocation(line: 1066, column: 28, scope: !5310)
!5312 = !DILocation(line: 1066, column: 42, scope: !5310)
!5313 = !DILocation(line: 1066, column: 25, scope: !5310)
!5314 = !DILocation(line: 1066, column: 8, scope: !5310)
!5315 = !DILocation(line: 1066, column: 13, scope: !5310)
!5316 = !DILocation(line: 1067, column: 15, scope: !5310)
!5317 = !DILocation(line: 1067, column: 28, scope: !5310)
!5318 = !DILocation(line: 1067, column: 42, scope: !5310)
!5319 = !DILocation(line: 1067, column: 25, scope: !5310)
!5320 = !DILocation(line: 1067, column: 8, scope: !5310)
!5321 = !DILocation(line: 1067, column: 13, scope: !5310)
!5322 = !DILocation(line: 1068, column: 15, scope: !5310)
!5323 = !DILocation(line: 1068, column: 28, scope: !5310)
!5324 = !DILocation(line: 1068, column: 42, scope: !5310)
!5325 = !DILocation(line: 1068, column: 25, scope: !5310)
!5326 = !DILocation(line: 1068, column: 8, scope: !5310)
!5327 = !DILocation(line: 1068, column: 13, scope: !5310)
!5328 = !DILocation(line: 1069, column: 15, scope: !5310)
!5329 = !DILocation(line: 1069, column: 28, scope: !5310)
!5330 = !DILocation(line: 1069, column: 42, scope: !5310)
!5331 = !DILocation(line: 1069, column: 25, scope: !5310)
!5332 = !DILocation(line: 1069, column: 8, scope: !5310)
!5333 = !DILocation(line: 1069, column: 13, scope: !5310)
!5334 = !DILocation(line: 1071, column: 9, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 1071, column: 7)
!5336 = !DILocation(line: 1071, column: 15, scope: !5335)
!5337 = !DILocation(line: 1071, column: 20, scope: !5335)
!5338 = !DILocation(line: 1071, column: 7, scope: !5310)
!5339 = !DILocation(line: 1073, column: 8, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 1073, column: 8)
!5341 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 1071, column: 36)
!5342 = !DILocation(line: 1073, column: 15, scope: !5340)
!5343 = !DILocation(line: 1073, column: 8, scope: !5341)
!5344 = !DILocation(line: 1074, column: 18, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 1073, column: 27)
!5346 = !DILocation(line: 1074, column: 10, scope: !5345)
!5347 = !DILocation(line: 1074, column: 15, scope: !5345)
!5348 = !DILocation(line: 1075, column: 18, scope: !5345)
!5349 = !DILocation(line: 1075, column: 32, scope: !5345)
!5350 = !DILocation(line: 1075, column: 10, scope: !5345)
!5351 = !DILocation(line: 1075, column: 15, scope: !5345)
!5352 = !DILocation(line: 1076, column: 4, scope: !5345)
!5353 = !DILocation(line: 1077, column: 13, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 1077, column: 13)
!5355 = !DILocation(line: 1077, column: 20, scope: !5354)
!5356 = !DILocation(line: 1077, column: 13, scope: !5340)
!5357 = !DILocation(line: 1078, column: 18, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5354, file: !3, line: 1077, column: 33)
!5359 = !DILocation(line: 1078, column: 32, scope: !5358)
!5360 = !DILocation(line: 1078, column: 10, scope: !5358)
!5361 = !DILocation(line: 1078, column: 15, scope: !5358)
!5362 = !DILocation(line: 1079, column: 18, scope: !5358)
!5363 = !DILocation(line: 1079, column: 10, scope: !5358)
!5364 = !DILocation(line: 1079, column: 15, scope: !5358)
!5365 = !DILocation(line: 1080, column: 4, scope: !5358)
!5366 = !DILocation(line: 1081, column: 3, scope: !5341)
!5367 = !DILocation(line: 1083, column: 7, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 1083, column: 7)
!5369 = !DILocation(line: 1083, column: 14, scope: !5368)
!5370 = !DILocation(line: 1083, column: 7, scope: !5310)
!5371 = !DILocation(line: 1084, column: 16, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 1084, column: 4)
!5373 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 1083, column: 25)
!5374 = !DILocation(line: 1084, column: 22, scope: !5372)
!5375 = !DILocation(line: 1084, column: 29, scope: !5372)
!5376 = !DILocation(line: 1084, column: 14, scope: !5372)
!5377 = !DILocation(line: 1084, column: 9, scope: !5372)
!5378 = !DILocation(line: 1084, column: 36, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5372, file: !3, line: 1084, column: 4)
!5380 = !DILocation(line: 1084, column: 4, scope: !5372)
!5381 = !DILocation(line: 1085, column: 29, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 1085, column: 9)
!5383 = distinct !DILexicalBlock(scope: !5379, file: !3, line: 1084, column: 61)
!5384 = !DILocation(line: 1085, column: 10, scope: !5382)
!5385 = !DILocation(line: 1085, column: 9, scope: !5383)
!5386 = !DILocation(line: 1086, column: 35, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5388, file: !3, line: 1086, column: 10)
!5388 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 1085, column: 36)
!5389 = !DILocation(line: 1086, column: 41, scope: !5387)
!5390 = !DILocation(line: 1086, column: 47, scope: !5387)
!5391 = !DILocation(line: 1086, column: 53, scope: !5387)
!5392 = !DILocation(line: 1086, column: 10, scope: !5387)
!5393 = !DILocation(line: 1086, column: 10, scope: !5388)
!5394 = !DILocation(line: 1087, column: 11, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 1087, column: 11)
!5396 = distinct !DILexicalBlock(scope: !5387, file: !3, line: 1086, column: 60)
!5397 = !DILocation(line: 1087, column: 32, scope: !5395)
!5398 = !DILocation(line: 1087, column: 19, scope: !5395)
!5399 = !DILocation(line: 1087, column: 16, scope: !5395)
!5400 = !DILocation(line: 1087, column: 11, scope: !5396)
!5401 = !DILocation(line: 1088, column: 17, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5395, file: !3, line: 1087, column: 47)
!5403 = !DILocation(line: 1088, column: 9, scope: !5402)
!5404 = !DILocation(line: 1088, column: 15, scope: !5402)
!5405 = !DILocation(line: 1089, column: 17, scope: !5402)
!5406 = !DILocation(line: 1089, column: 9, scope: !5402)
!5407 = !DILocation(line: 1089, column: 15, scope: !5402)
!5408 = !DILocation(line: 1090, column: 8, scope: !5402)
!5409 = !DILocation(line: 1092, column: 6, scope: !5396)
!5410 = !DILocation(line: 1093, column: 5, scope: !5388)
!5411 = !DILocation(line: 1094, column: 4, scope: !5383)
!5412 = !DILocation(line: 1084, column: 49, scope: !5379)
!5413 = !DILocation(line: 1084, column: 55, scope: !5379)
!5414 = !DILocation(line: 1084, column: 47, scope: !5379)
!5415 = !DILocation(line: 1084, column: 4, scope: !5379)
!5416 = distinct !{!5416, !5380, !5417}
!5417 = !DILocation(line: 1094, column: 4, scope: !5372)
!5418 = !DILocation(line: 1095, column: 3, scope: !5373)
!5419 = !DILocation(line: 1096, column: 7, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 1096, column: 7)
!5421 = !DILocation(line: 1096, column: 14, scope: !5420)
!5422 = !DILocation(line: 1096, column: 7, scope: !5310)
!5423 = !DILocation(line: 1097, column: 16, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 1097, column: 4)
!5425 = distinct !DILexicalBlock(scope: !5420, file: !3, line: 1096, column: 26)
!5426 = !DILocation(line: 1097, column: 22, scope: !5424)
!5427 = !DILocation(line: 1097, column: 30, scope: !5424)
!5428 = !DILocation(line: 1097, column: 14, scope: !5424)
!5429 = !DILocation(line: 1097, column: 9, scope: !5424)
!5430 = !DILocation(line: 1097, column: 37, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5424, file: !3, line: 1097, column: 4)
!5432 = !DILocation(line: 1097, column: 4, scope: !5424)
!5433 = !DILocation(line: 1098, column: 29, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 1098, column: 9)
!5435 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 1097, column: 62)
!5436 = !DILocation(line: 1098, column: 10, scope: !5434)
!5437 = !DILocation(line: 1098, column: 9, scope: !5435)
!5438 = !DILocation(line: 1099, column: 35, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 1099, column: 10)
!5440 = distinct !DILexicalBlock(scope: !5434, file: !3, line: 1098, column: 36)
!5441 = !DILocation(line: 1099, column: 41, scope: !5439)
!5442 = !DILocation(line: 1099, column: 47, scope: !5439)
!5443 = !DILocation(line: 1099, column: 53, scope: !5439)
!5444 = !DILocation(line: 1099, column: 10, scope: !5439)
!5445 = !DILocation(line: 1099, column: 10, scope: !5440)
!5446 = !DILocation(line: 1100, column: 11, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 1100, column: 11)
!5448 = distinct !DILexicalBlock(scope: !5439, file: !3, line: 1099, column: 60)
!5449 = !DILocation(line: 1100, column: 32, scope: !5447)
!5450 = !DILocation(line: 1100, column: 19, scope: !5447)
!5451 = !DILocation(line: 1100, column: 16, scope: !5447)
!5452 = !DILocation(line: 1100, column: 11, scope: !5448)
!5453 = !DILocation(line: 1101, column: 17, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 1100, column: 47)
!5455 = !DILocation(line: 1101, column: 9, scope: !5454)
!5456 = !DILocation(line: 1101, column: 15, scope: !5454)
!5457 = !DILocation(line: 1102, column: 17, scope: !5454)
!5458 = !DILocation(line: 1102, column: 9, scope: !5454)
!5459 = !DILocation(line: 1102, column: 15, scope: !5454)
!5460 = !DILocation(line: 1103, column: 8, scope: !5454)
!5461 = !DILocation(line: 1105, column: 6, scope: !5448)
!5462 = !DILocation(line: 1106, column: 5, scope: !5440)
!5463 = !DILocation(line: 1107, column: 4, scope: !5435)
!5464 = !DILocation(line: 1097, column: 50, scope: !5431)
!5465 = !DILocation(line: 1097, column: 56, scope: !5431)
!5466 = !DILocation(line: 1097, column: 48, scope: !5431)
!5467 = !DILocation(line: 1097, column: 4, scope: !5431)
!5468 = distinct !{!5468, !5432, !5469}
!5469 = !DILocation(line: 1107, column: 4, scope: !5424)
!5470 = !DILocation(line: 1108, column: 3, scope: !5425)
!5471 = !DILocation(line: 1109, column: 2, scope: !5310)
!5472 = !DILocation(line: 1064, column: 57, scope: !5307)
!5473 = !DILocation(line: 1064, column: 63, scope: !5307)
!5474 = !DILocation(line: 1064, column: 55, scope: !5307)
!5475 = !DILocation(line: 1064, column: 2, scope: !5307)
!5476 = distinct !{!5476, !5308, !5477}
!5477 = !DILocation(line: 1109, column: 2, scope: !5300)
!5478 = !DILocation(line: 1111, column: 2, scope: !5274)
!5479 = !DILocation(line: 1112, column: 1, scope: !5274)
!5480 = distinct !DISubprogram(name: "visible_node", scope: !3, file: !3, line: 811, type: !5481, scopeLine: 812, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!5481 = !DISubroutineType(types: !5482)
!5482 = !{!499, !3213, !5483}
!5483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5484, size: 64)
!5484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !549)
!5485 = !DILocalVariable(name: "snode", arg: 1, scope: !5480, file: !3, line: 811, type: !3213)
!5486 = !DILocation(line: 811, column: 39, scope: !5480)
!5487 = !DILocalVariable(name: "rct", arg: 2, scope: !5480, file: !3, line: 811, type: !5483)
!5488 = !DILocation(line: 811, column: 58, scope: !5480)
!5489 = !DILocalVariable(name: "node", scope: !5480, file: !3, line: 813, type: !499)
!5490 = !DILocation(line: 813, column: 9, scope: !5480)
!5491 = !DILocation(line: 815, column: 14, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5480, file: !3, line: 815, column: 2)
!5493 = !DILocation(line: 815, column: 21, scope: !5492)
!5494 = !DILocation(line: 815, column: 31, scope: !5492)
!5495 = !DILocation(line: 815, column: 37, scope: !5492)
!5496 = !DILocation(line: 815, column: 12, scope: !5492)
!5497 = !DILocation(line: 815, column: 7, scope: !5492)
!5498 = !DILocation(line: 815, column: 43, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 815, column: 2)
!5500 = !DILocation(line: 815, column: 2, scope: !5492)
!5501 = !DILocation(line: 816, column: 23, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5503, file: !3, line: 816, column: 7)
!5503 = distinct !DILexicalBlock(scope: !5499, file: !3, line: 815, column: 68)
!5504 = !DILocation(line: 816, column: 29, scope: !5502)
!5505 = !DILocation(line: 816, column: 35, scope: !5502)
!5506 = !DILocation(line: 816, column: 7, scope: !5502)
!5507 = !DILocation(line: 816, column: 7, scope: !5503)
!5508 = !DILocation(line: 817, column: 4, scope: !5502)
!5509 = !DILocation(line: 818, column: 2, scope: !5503)
!5510 = !DILocation(line: 815, column: 56, scope: !5499)
!5511 = !DILocation(line: 815, column: 62, scope: !5499)
!5512 = !DILocation(line: 815, column: 54, scope: !5499)
!5513 = !DILocation(line: 815, column: 2, scope: !5499)
!5514 = distinct !{!5514, !5500, !5515}
!5515 = !DILocation(line: 818, column: 2, scope: !5492)
!5516 = !DILocation(line: 819, column: 9, scope: !5480)
!5517 = !DILocation(line: 819, column: 2, scope: !5480)
!5518 = distinct !DISubprogram(name: "NODE_OT_duplicate", scope: !3, file: !3, line: 1236, type: !4, scopeLine: 1237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!5519 = !DILocalVariable(name: "ot", arg: 1, scope: !5518, file: !3, line: 1236, type: !6)
!5520 = !DILocation(line: 1236, column: 40, scope: !5518)
!5521 = !DILocation(line: 1239, column: 2, scope: !5518)
!5522 = !DILocation(line: 1239, column: 6, scope: !5518)
!5523 = !DILocation(line: 1239, column: 11, scope: !5518)
!5524 = !DILocation(line: 1240, column: 2, scope: !5518)
!5525 = !DILocation(line: 1240, column: 6, scope: !5518)
!5526 = !DILocation(line: 1240, column: 18, scope: !5518)
!5527 = !DILocation(line: 1241, column: 2, scope: !5518)
!5528 = !DILocation(line: 1241, column: 6, scope: !5518)
!5529 = !DILocation(line: 1241, column: 13, scope: !5518)
!5530 = !DILocation(line: 1244, column: 2, scope: !5518)
!5531 = !DILocation(line: 1244, column: 6, scope: !5518)
!5532 = !DILocation(line: 1244, column: 11, scope: !5518)
!5533 = !DILocation(line: 1245, column: 2, scope: !5518)
!5534 = !DILocation(line: 1245, column: 6, scope: !5518)
!5535 = !DILocation(line: 1245, column: 11, scope: !5518)
!5536 = !DILocation(line: 1248, column: 2, scope: !5518)
!5537 = !DILocation(line: 1248, column: 6, scope: !5518)
!5538 = !DILocation(line: 1248, column: 11, scope: !5518)
!5539 = !DILocation(line: 1250, column: 18, scope: !5518)
!5540 = !DILocation(line: 1250, column: 22, scope: !5518)
!5541 = !DILocation(line: 1250, column: 2, scope: !5518)
!5542 = !DILocation(line: 1251, column: 1, scope: !5518)
!5543 = distinct !DISubprogram(name: "node_duplicate_exec", scope: !3, file: !3, line: 1137, type: !5544, scopeLine: 1138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!5544 = !DISubroutineType(types: !5545)
!5545 = !{!22, !3399, !4682}
!5546 = !DILocalVariable(name: "C", arg: 1, scope: !5543, file: !3, line: 1137, type: !3399)
!5547 = !DILocation(line: 1137, column: 42, scope: !5543)
!5548 = !DILocalVariable(name: "op", arg: 2, scope: !5543, file: !3, line: 1137, type: !4682)
!5549 = !DILocation(line: 1137, column: 57, scope: !5543)
!5550 = !DILocalVariable(name: "snode", scope: !5543, file: !3, line: 1139, type: !3213)
!5551 = !DILocation(line: 1139, column: 13, scope: !5543)
!5552 = !DILocation(line: 1139, column: 39, scope: !5543)
!5553 = !DILocation(line: 1139, column: 21, scope: !5543)
!5554 = !DILocalVariable(name: "ntree", scope: !5543, file: !3, line: 1140, type: !2867)
!5555 = !DILocation(line: 1140, column: 13, scope: !5543)
!5556 = !DILocation(line: 1140, column: 21, scope: !5543)
!5557 = !DILocation(line: 1140, column: 28, scope: !5543)
!5558 = !DILocalVariable(name: "node", scope: !5543, file: !3, line: 1141, type: !499)
!5559 = !DILocation(line: 1141, column: 9, scope: !5543)
!5560 = !DILocalVariable(name: "newnode", scope: !5543, file: !3, line: 1141, type: !499)
!5561 = !DILocation(line: 1141, column: 16, scope: !5543)
!5562 = !DILocalVariable(name: "lastnode", scope: !5543, file: !3, line: 1141, type: !499)
!5563 = !DILocation(line: 1141, column: 26, scope: !5543)
!5564 = !DILocalVariable(name: "link", scope: !5543, file: !3, line: 1142, type: !5565)
!5565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5566, size: 64)
!5566 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeLink", file: !83, line: 306, baseType: !494)
!5567 = !DILocation(line: 1142, column: 13, scope: !5543)
!5568 = !DILocalVariable(name: "newlink", scope: !5543, file: !3, line: 1142, type: !5565)
!5569 = !DILocation(line: 1142, column: 20, scope: !5543)
!5570 = !DILocalVariable(name: "lastlink", scope: !5543, file: !3, line: 1142, type: !5565)
!5571 = !DILocation(line: 1142, column: 30, scope: !5543)
!5572 = !DILocalVariable(name: "keep_inputs", scope: !5543, file: !3, line: 1143, type: !4267)
!5573 = !DILocation(line: 1143, column: 13, scope: !5543)
!5574 = !DILocation(line: 1143, column: 43, scope: !5543)
!5575 = !DILocation(line: 1143, column: 47, scope: !5543)
!5576 = !DILocation(line: 1143, column: 27, scope: !5543)
!5577 = !DILocation(line: 1145, column: 23, scope: !5543)
!5578 = !DILocation(line: 1145, column: 2, scope: !5543)
!5579 = !DILocation(line: 1147, column: 13, scope: !5543)
!5580 = !DILocation(line: 1147, column: 20, scope: !5543)
!5581 = !DILocation(line: 1147, column: 26, scope: !5543)
!5582 = !DILocation(line: 1147, column: 11, scope: !5543)
!5583 = !DILocation(line: 1148, column: 14, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 1148, column: 2)
!5585 = !DILocation(line: 1148, column: 21, scope: !5584)
!5586 = !DILocation(line: 1148, column: 27, scope: !5584)
!5587 = !DILocation(line: 1148, column: 12, scope: !5584)
!5588 = !DILocation(line: 1148, column: 7, scope: !5584)
!5589 = !DILocation(line: 1148, column: 34, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 1148, column: 2)
!5591 = !DILocation(line: 1148, column: 2, scope: !5584)
!5592 = !DILocation(line: 1149, column: 7, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 1149, column: 7)
!5594 = distinct !DILexicalBlock(scope: !5590, file: !3, line: 1148, column: 59)
!5595 = !DILocation(line: 1149, column: 13, scope: !5593)
!5596 = !DILocation(line: 1149, column: 18, scope: !5593)
!5597 = !DILocation(line: 1149, column: 7, scope: !5594)
!5598 = !DILocation(line: 1150, column: 27, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5593, file: !3, line: 1149, column: 28)
!5600 = !DILocation(line: 1150, column: 34, scope: !5599)
!5601 = !DILocation(line: 1150, column: 14, scope: !5599)
!5602 = !DILocation(line: 1150, column: 12, scope: !5599)
!5603 = !DILocation(line: 1152, column: 8, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5599, file: !3, line: 1152, column: 8)
!5605 = !DILocation(line: 1152, column: 17, scope: !5604)
!5606 = !DILocation(line: 1152, column: 8, scope: !5599)
!5607 = !DILocation(line: 1155, column: 16, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5604, file: !3, line: 1152, column: 21)
!5609 = !DILocation(line: 1155, column: 25, scope: !5608)
!5610 = !DILocation(line: 1155, column: 5, scope: !5608)
!5611 = !DILocation(line: 1157, column: 27, scope: !5608)
!5612 = !DILocation(line: 1157, column: 34, scope: !5608)
!5613 = !DILocation(line: 1157, column: 5, scope: !5608)
!5614 = !DILocation(line: 1158, column: 4, scope: !5608)
!5615 = !DILocation(line: 1159, column: 3, scope: !5599)
!5616 = !DILocation(line: 1162, column: 7, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 1162, column: 7)
!5618 = !DILocation(line: 1162, column: 15, scope: !5617)
!5619 = !DILocation(line: 1162, column: 12, scope: !5617)
!5620 = !DILocation(line: 1162, column: 7, scope: !5594)
!5621 = !DILocation(line: 1163, column: 4, scope: !5617)
!5622 = !DILocation(line: 1164, column: 2, scope: !5594)
!5623 = !DILocation(line: 1148, column: 47, scope: !5590)
!5624 = !DILocation(line: 1148, column: 53, scope: !5590)
!5625 = !DILocation(line: 1148, column: 45, scope: !5590)
!5626 = !DILocation(line: 1148, column: 2, scope: !5590)
!5627 = distinct !{!5627, !5591, !5628}
!5628 = !DILocation(line: 1164, column: 2, scope: !5584)
!5629 = !DILocation(line: 1169, column: 13, scope: !5543)
!5630 = !DILocation(line: 1169, column: 20, scope: !5543)
!5631 = !DILocation(line: 1169, column: 26, scope: !5543)
!5632 = !DILocation(line: 1169, column: 11, scope: !5543)
!5633 = !DILocation(line: 1170, column: 14, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 1170, column: 2)
!5635 = !DILocation(line: 1170, column: 21, scope: !5634)
!5636 = !DILocation(line: 1170, column: 27, scope: !5634)
!5637 = !DILocation(line: 1170, column: 12, scope: !5634)
!5638 = !DILocation(line: 1170, column: 7, scope: !5634)
!5639 = !DILocation(line: 1170, column: 34, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 1170, column: 2)
!5641 = !DILocation(line: 1170, column: 2, scope: !5634)
!5642 = !DILocation(line: 1174, column: 7, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5644, file: !3, line: 1174, column: 7)
!5644 = distinct !DILexicalBlock(scope: !5640, file: !3, line: 1170, column: 59)
!5645 = !DILocation(line: 1174, column: 13, scope: !5643)
!5646 = !DILocation(line: 1174, column: 20, scope: !5643)
!5647 = !DILocation(line: 1174, column: 24, scope: !5643)
!5648 = !DILocation(line: 1174, column: 30, scope: !5643)
!5649 = !DILocation(line: 1174, column: 38, scope: !5643)
!5650 = !DILocation(line: 1174, column: 43, scope: !5643)
!5651 = !DILocation(line: 1174, column: 58, scope: !5643)
!5652 = !DILocation(line: 1175, column: 8, scope: !5643)
!5653 = !DILocation(line: 1175, column: 20, scope: !5643)
!5654 = !DILocation(line: 1175, column: 24, scope: !5643)
!5655 = !DILocation(line: 1175, column: 30, scope: !5643)
!5656 = !DILocation(line: 1175, column: 39, scope: !5643)
!5657 = !DILocation(line: 1175, column: 43, scope: !5643)
!5658 = !DILocation(line: 1175, column: 49, scope: !5643)
!5659 = !DILocation(line: 1175, column: 59, scope: !5643)
!5660 = !DILocation(line: 1175, column: 64, scope: !5643)
!5661 = !DILocation(line: 1174, column: 7, scope: !5644)
!5662 = !DILocation(line: 1177, column: 14, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 1176, column: 3)
!5664 = !DILocation(line: 1177, column: 12, scope: !5663)
!5665 = !DILocation(line: 1178, column: 20, scope: !5663)
!5666 = !DILocation(line: 1178, column: 26, scope: !5663)
!5667 = !DILocation(line: 1178, column: 4, scope: !5663)
!5668 = !DILocation(line: 1178, column: 13, scope: !5663)
!5669 = !DILocation(line: 1178, column: 18, scope: !5663)
!5670 = !DILocation(line: 1179, column: 22, scope: !5663)
!5671 = !DILocation(line: 1179, column: 28, scope: !5663)
!5672 = !DILocation(line: 1179, column: 36, scope: !5663)
!5673 = !DILocation(line: 1179, column: 4, scope: !5663)
!5674 = !DILocation(line: 1179, column: 13, scope: !5663)
!5675 = !DILocation(line: 1179, column: 20, scope: !5663)
!5676 = !DILocation(line: 1180, column: 22, scope: !5663)
!5677 = !DILocation(line: 1180, column: 28, scope: !5663)
!5678 = !DILocation(line: 1180, column: 36, scope: !5663)
!5679 = !DILocation(line: 1180, column: 4, scope: !5663)
!5680 = !DILocation(line: 1180, column: 13, scope: !5663)
!5681 = !DILocation(line: 1180, column: 20, scope: !5663)
!5682 = !DILocation(line: 1181, column: 8, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 1181, column: 8)
!5684 = !DILocation(line: 1181, column: 14, scope: !5683)
!5685 = !DILocation(line: 1181, column: 23, scope: !5683)
!5686 = !DILocation(line: 1181, column: 27, scope: !5683)
!5687 = !DILocation(line: 1181, column: 33, scope: !5683)
!5688 = !DILocation(line: 1181, column: 43, scope: !5683)
!5689 = !DILocation(line: 1181, column: 48, scope: !5683)
!5690 = !DILocation(line: 1181, column: 8, scope: !5663)
!5691 = !DILocation(line: 1182, column: 25, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5683, file: !3, line: 1181, column: 64)
!5693 = !DILocation(line: 1182, column: 31, scope: !5692)
!5694 = !DILocation(line: 1182, column: 41, scope: !5692)
!5695 = !DILocation(line: 1182, column: 5, scope: !5692)
!5696 = !DILocation(line: 1182, column: 14, scope: !5692)
!5697 = !DILocation(line: 1182, column: 23, scope: !5692)
!5698 = !DILocation(line: 1183, column: 25, scope: !5692)
!5699 = !DILocation(line: 1183, column: 31, scope: !5692)
!5700 = !DILocation(line: 1183, column: 41, scope: !5692)
!5701 = !DILocation(line: 1183, column: 5, scope: !5692)
!5702 = !DILocation(line: 1183, column: 14, scope: !5692)
!5703 = !DILocation(line: 1183, column: 23, scope: !5692)
!5704 = !DILocation(line: 1184, column: 4, scope: !5692)
!5705 = !DILocation(line: 1187, column: 25, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5683, file: !3, line: 1185, column: 9)
!5707 = !DILocation(line: 1187, column: 31, scope: !5706)
!5708 = !DILocation(line: 1187, column: 5, scope: !5706)
!5709 = !DILocation(line: 1187, column: 14, scope: !5706)
!5710 = !DILocation(line: 1187, column: 23, scope: !5706)
!5711 = !DILocation(line: 1188, column: 25, scope: !5706)
!5712 = !DILocation(line: 1188, column: 31, scope: !5706)
!5713 = !DILocation(line: 1188, column: 5, scope: !5706)
!5714 = !DILocation(line: 1188, column: 14, scope: !5706)
!5715 = !DILocation(line: 1188, column: 23, scope: !5706)
!5716 = !DILocation(line: 1191, column: 17, scope: !5663)
!5717 = !DILocation(line: 1191, column: 24, scope: !5663)
!5718 = !DILocation(line: 1191, column: 31, scope: !5663)
!5719 = !DILocation(line: 1191, column: 4, scope: !5663)
!5720 = !DILocation(line: 1192, column: 3, scope: !5663)
!5721 = !DILocation(line: 1195, column: 7, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5644, file: !3, line: 1195, column: 7)
!5723 = !DILocation(line: 1195, column: 15, scope: !5722)
!5724 = !DILocation(line: 1195, column: 12, scope: !5722)
!5725 = !DILocation(line: 1195, column: 7, scope: !5644)
!5726 = !DILocation(line: 1196, column: 4, scope: !5722)
!5727 = !DILocation(line: 1197, column: 2, scope: !5644)
!5728 = !DILocation(line: 1170, column: 47, scope: !5640)
!5729 = !DILocation(line: 1170, column: 53, scope: !5640)
!5730 = !DILocation(line: 1170, column: 45, scope: !5640)
!5731 = !DILocation(line: 1170, column: 2, scope: !5640)
!5732 = distinct !{!5732, !5641, !5733}
!5733 = !DILocation(line: 1197, column: 2, scope: !5634)
!5734 = !DILocation(line: 1200, column: 14, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 1200, column: 2)
!5736 = !DILocation(line: 1200, column: 21, scope: !5735)
!5737 = !DILocation(line: 1200, column: 27, scope: !5735)
!5738 = !DILocation(line: 1200, column: 12, scope: !5735)
!5739 = !DILocation(line: 1200, column: 7, scope: !5735)
!5740 = !DILocation(line: 1200, column: 34, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 1200, column: 2)
!5742 = !DILocation(line: 1200, column: 2, scope: !5735)
!5743 = !DILocation(line: 1201, column: 3, scope: !5741)
!5744 = !DILocation(line: 1201, column: 9, scope: !5741)
!5745 = !DILocation(line: 1201, column: 14, scope: !5741)
!5746 = !DILocation(line: 1200, column: 47, scope: !5741)
!5747 = !DILocation(line: 1200, column: 53, scope: !5741)
!5748 = !DILocation(line: 1200, column: 45, scope: !5741)
!5749 = !DILocation(line: 1200, column: 2, scope: !5741)
!5750 = distinct !{!5750, !5742, !5751}
!5751 = !DILocation(line: 1201, column: 18, scope: !5735)
!5752 = !DILocation(line: 1203, column: 14, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 1203, column: 2)
!5754 = !DILocation(line: 1203, column: 21, scope: !5753)
!5755 = !DILocation(line: 1203, column: 27, scope: !5753)
!5756 = !DILocation(line: 1203, column: 12, scope: !5753)
!5757 = !DILocation(line: 1203, column: 7, scope: !5753)
!5758 = !DILocation(line: 1203, column: 34, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1203, column: 2)
!5760 = !DILocation(line: 1203, column: 2, scope: !5753)
!5761 = !DILocation(line: 1204, column: 8, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 1204, column: 7)
!5763 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 1203, column: 59)
!5764 = !DILocation(line: 1204, column: 14, scope: !5762)
!5765 = !DILocation(line: 1204, column: 19, scope: !5762)
!5766 = !DILocation(line: 1204, column: 29, scope: !5762)
!5767 = !DILocation(line: 1204, column: 34, scope: !5762)
!5768 = !DILocation(line: 1204, column: 40, scope: !5762)
!5769 = !DILocation(line: 1204, column: 45, scope: !5762)
!5770 = !DILocation(line: 1204, column: 7, scope: !5763)
!5771 = !DILocation(line: 1205, column: 38, scope: !5762)
!5772 = !DILocation(line: 1205, column: 4, scope: !5762)
!5773 = !DILocation(line: 1208, column: 7, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 1208, column: 7)
!5775 = !DILocation(line: 1208, column: 15, scope: !5774)
!5776 = !DILocation(line: 1208, column: 12, scope: !5774)
!5777 = !DILocation(line: 1208, column: 7, scope: !5763)
!5778 = !DILocation(line: 1209, column: 4, scope: !5774)
!5779 = !DILocation(line: 1210, column: 2, scope: !5763)
!5780 = !DILocation(line: 1203, column: 47, scope: !5759)
!5781 = !DILocation(line: 1203, column: 53, scope: !5759)
!5782 = !DILocation(line: 1203, column: 45, scope: !5759)
!5783 = !DILocation(line: 1203, column: 2, scope: !5759)
!5784 = distinct !{!5784, !5760, !5785}
!5785 = !DILocation(line: 1210, column: 2, scope: !5753)
!5786 = !DILocation(line: 1213, column: 14, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 1213, column: 2)
!5788 = !DILocation(line: 1213, column: 21, scope: !5787)
!5789 = !DILocation(line: 1213, column: 27, scope: !5787)
!5790 = !DILocation(line: 1213, column: 12, scope: !5787)
!5791 = !DILocation(line: 1213, column: 7, scope: !5787)
!5792 = !DILocation(line: 1213, column: 34, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 1213, column: 2)
!5794 = !DILocation(line: 1213, column: 2, scope: !5787)
!5795 = !DILocation(line: 1214, column: 7, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5797, file: !3, line: 1214, column: 7)
!5797 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 1213, column: 59)
!5798 = !DILocation(line: 1214, column: 13, scope: !5796)
!5799 = !DILocation(line: 1214, column: 18, scope: !5796)
!5800 = !DILocation(line: 1214, column: 7, scope: !5797)
!5801 = !DILocation(line: 1216, column: 14, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 1214, column: 28)
!5803 = !DILocation(line: 1216, column: 20, scope: !5802)
!5804 = !DILocation(line: 1216, column: 12, scope: !5802)
!5805 = !DILocation(line: 1218, column: 20, scope: !5802)
!5806 = !DILocation(line: 1218, column: 4, scope: !5802)
!5807 = !DILocation(line: 1219, column: 4, scope: !5802)
!5808 = !DILocation(line: 1219, column: 10, scope: !5802)
!5809 = !DILocation(line: 1219, column: 15, scope: !5802)
!5810 = !DILocation(line: 1220, column: 20, scope: !5802)
!5811 = !DILocation(line: 1220, column: 4, scope: !5802)
!5812 = !DILocation(line: 1221, column: 3, scope: !5802)
!5813 = !DILocation(line: 1224, column: 7, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5797, file: !3, line: 1224, column: 7)
!5815 = !DILocation(line: 1224, column: 15, scope: !5814)
!5816 = !DILocation(line: 1224, column: 12, scope: !5814)
!5817 = !DILocation(line: 1224, column: 7, scope: !5797)
!5818 = !DILocation(line: 1225, column: 4, scope: !5814)
!5819 = !DILocation(line: 1226, column: 2, scope: !5797)
!5820 = !DILocation(line: 1213, column: 47, scope: !5793)
!5821 = !DILocation(line: 1213, column: 53, scope: !5793)
!5822 = !DILocation(line: 1213, column: 45, scope: !5793)
!5823 = !DILocation(line: 1213, column: 2, scope: !5793)
!5824 = distinct !{!5824, !5794, !5825}
!5825 = !DILocation(line: 1226, column: 2, scope: !5787)
!5826 = !DILocation(line: 1228, column: 32, scope: !5543)
!5827 = !DILocation(line: 1228, column: 18, scope: !5543)
!5828 = !DILocation(line: 1228, column: 36, scope: !5543)
!5829 = !DILocation(line: 1228, column: 43, scope: !5543)
!5830 = !DILocation(line: 1228, column: 2, scope: !5543)
!5831 = !DILocation(line: 1230, column: 15, scope: !5543)
!5832 = !DILocation(line: 1230, column: 18, scope: !5543)
!5833 = !DILocation(line: 1230, column: 2, scope: !5543)
!5834 = !DILocation(line: 1231, column: 19, scope: !5543)
!5835 = !DILocation(line: 1231, column: 22, scope: !5543)
!5836 = !DILocation(line: 1231, column: 2, scope: !5543)
!5837 = !DILocation(line: 1233, column: 2, scope: !5543)
!5838 = distinct !DISubprogram(name: "ED_node_select_check", scope: !3, file: !3, line: 1253, type: !5839, scopeLine: 1256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!5839 = !DISubroutineType(types: !5840)
!5840 = !{!699, !1544}
!5841 = !DILocalVariable(name: "lb", arg: 1, scope: !5838, file: !3, line: 1253, type: !1544)
!5842 = !DILocation(line: 1253, column: 37, scope: !5838)
!5843 = !DILocalVariable(name: "node", scope: !5838, file: !3, line: 1257, type: !499)
!5844 = !DILocation(line: 1257, column: 9, scope: !5838)
!5845 = !DILocation(line: 1259, column: 14, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 1259, column: 2)
!5847 = !DILocation(line: 1259, column: 18, scope: !5846)
!5848 = !DILocation(line: 1259, column: 12, scope: !5846)
!5849 = !DILocation(line: 1259, column: 7, scope: !5846)
!5850 = !DILocation(line: 1259, column: 25, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 1259, column: 2)
!5852 = !DILocation(line: 1259, column: 2, scope: !5846)
!5853 = !DILocation(line: 1260, column: 7, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 1260, column: 7)
!5855 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 1259, column: 50)
!5856 = !DILocation(line: 1260, column: 13, scope: !5854)
!5857 = !DILocation(line: 1260, column: 18, scope: !5854)
!5858 = !DILocation(line: 1260, column: 7, scope: !5855)
!5859 = !DILocation(line: 1261, column: 4, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5854, file: !3, line: 1260, column: 33)
!5861 = !DILocation(line: 1263, column: 2, scope: !5855)
!5862 = !DILocation(line: 1259, column: 38, scope: !5851)
!5863 = !DILocation(line: 1259, column: 44, scope: !5851)
!5864 = !DILocation(line: 1259, column: 36, scope: !5851)
!5865 = !DILocation(line: 1259, column: 2, scope: !5851)
!5866 = distinct !{!5866, !5852, !5867}
!5867 = !DILocation(line: 1263, column: 2, scope: !5846)
!5868 = !DILocation(line: 1265, column: 2, scope: !5838)
!5869 = !DILocation(line: 1266, column: 1, scope: !5838)
!5870 = distinct !DISubprogram(name: "NODE_OT_read_renderlayers", scope: !3, file: !3, line: 1303, type: !4, scopeLine: 1304, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!5871 = !DILocalVariable(name: "ot", arg: 1, scope: !5870, file: !3, line: 1303, type: !6)
!5872 = !DILocation(line: 1303, column: 48, scope: !5870)
!5873 = !DILocation(line: 1306, column: 2, scope: !5870)
!5874 = !DILocation(line: 1306, column: 6, scope: !5870)
!5875 = !DILocation(line: 1306, column: 11, scope: !5870)
!5876 = !DILocation(line: 1307, column: 2, scope: !5870)
!5877 = !DILocation(line: 1307, column: 6, scope: !5870)
!5878 = !DILocation(line: 1307, column: 13, scope: !5870)
!5879 = !DILocation(line: 1308, column: 2, scope: !5870)
!5880 = !DILocation(line: 1308, column: 6, scope: !5870)
!5881 = !DILocation(line: 1308, column: 18, scope: !5870)
!5882 = !DILocation(line: 1310, column: 2, scope: !5870)
!5883 = !DILocation(line: 1310, column: 6, scope: !5870)
!5884 = !DILocation(line: 1310, column: 11, scope: !5870)
!5885 = !DILocation(line: 1312, column: 2, scope: !5870)
!5886 = !DILocation(line: 1312, column: 6, scope: !5870)
!5887 = !DILocation(line: 1312, column: 11, scope: !5870)
!5888 = !DILocation(line: 1315, column: 2, scope: !5870)
!5889 = !DILocation(line: 1315, column: 6, scope: !5870)
!5890 = !DILocation(line: 1315, column: 11, scope: !5870)
!5891 = !DILocation(line: 1316, column: 1, scope: !5870)
!5892 = distinct !DISubprogram(name: "node_read_renderlayers_exec", scope: !3, file: !3, line: 1273, type: !5544, scopeLine: 1274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!5893 = !DILocalVariable(name: "C", arg: 1, scope: !5892, file: !3, line: 1273, type: !3399)
!5894 = !DILocation(line: 1273, column: 50, scope: !5892)
!5895 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !5892, file: !3, line: 1273, type: !4682)
!5896 = !DILocation(line: 1273, column: 65, scope: !5892)
!5897 = !DILocalVariable(name: "bmain", scope: !5892, file: !3, line: 1275, type: !3454)
!5898 = !DILocation(line: 1275, column: 8, scope: !5892)
!5899 = !DILocation(line: 1275, column: 30, scope: !5892)
!5900 = !DILocation(line: 1275, column: 16, scope: !5892)
!5901 = !DILocalVariable(name: "snode", scope: !5892, file: !3, line: 1276, type: !3213)
!5902 = !DILocation(line: 1276, column: 13, scope: !5892)
!5903 = !DILocation(line: 1276, column: 39, scope: !5892)
!5904 = !DILocation(line: 1276, column: 21, scope: !5892)
!5905 = !DILocalVariable(name: "curscene", scope: !5892, file: !3, line: 1277, type: !2869)
!5906 = !DILocation(line: 1277, column: 9, scope: !5892)
!5907 = !DILocation(line: 1277, column: 35, scope: !5892)
!5908 = !DILocation(line: 1277, column: 20, scope: !5892)
!5909 = !DILocalVariable(name: "scene", scope: !5892, file: !3, line: 1277, type: !2869)
!5910 = !DILocation(line: 1277, column: 40, scope: !5892)
!5911 = !DILocalVariable(name: "node", scope: !5892, file: !3, line: 1278, type: !499)
!5912 = !DILocation(line: 1278, column: 9, scope: !5892)
!5913 = !DILocation(line: 1280, column: 23, scope: !5892)
!5914 = !DILocation(line: 1280, column: 2, scope: !5892)
!5915 = !DILocation(line: 1283, column: 15, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 1283, column: 2)
!5917 = !DILocation(line: 1283, column: 22, scope: !5916)
!5918 = !DILocation(line: 1283, column: 28, scope: !5916)
!5919 = !DILocation(line: 1283, column: 13, scope: !5916)
!5920 = !DILocation(line: 1283, column: 7, scope: !5916)
!5921 = !DILocation(line: 1283, column: 35, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 1283, column: 2)
!5923 = !DILocation(line: 1283, column: 2, scope: !5916)
!5924 = !DILocation(line: 1284, column: 3, scope: !5922)
!5925 = !DILocation(line: 1284, column: 10, scope: !5922)
!5926 = !DILocation(line: 1284, column: 13, scope: !5922)
!5927 = !DILocation(line: 1284, column: 18, scope: !5922)
!5928 = !DILocation(line: 1283, column: 50, scope: !5922)
!5929 = !DILocation(line: 1283, column: 57, scope: !5922)
!5930 = !DILocation(line: 1283, column: 60, scope: !5922)
!5931 = !DILocation(line: 1283, column: 48, scope: !5922)
!5932 = !DILocation(line: 1283, column: 2, scope: !5922)
!5933 = distinct !{!5933, !5923, !5934}
!5934 = !DILocation(line: 1284, column: 21, scope: !5916)
!5935 = !DILocation(line: 1286, column: 14, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 1286, column: 2)
!5937 = !DILocation(line: 1286, column: 21, scope: !5936)
!5938 = !DILocation(line: 1286, column: 31, scope: !5936)
!5939 = !DILocation(line: 1286, column: 37, scope: !5936)
!5940 = !DILocation(line: 1286, column: 12, scope: !5936)
!5941 = !DILocation(line: 1286, column: 7, scope: !5936)
!5942 = !DILocation(line: 1286, column: 44, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 1286, column: 2)
!5944 = !DILocation(line: 1286, column: 2, scope: !5936)
!5945 = !DILocation(line: 1287, column: 7, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 1287, column: 7)
!5947 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 1286, column: 69)
!5948 = !DILocation(line: 1287, column: 13, scope: !5946)
!5949 = !DILocation(line: 1287, column: 18, scope: !5946)
!5950 = !DILocation(line: 1287, column: 7, scope: !5947)
!5951 = !DILocalVariable(name: "id", scope: !5952, file: !3, line: 1288, type: !126)
!5952 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 1287, column: 40)
!5953 = !DILocation(line: 1288, column: 8, scope: !5952)
!5954 = !DILocation(line: 1288, column: 13, scope: !5952)
!5955 = !DILocation(line: 1288, column: 19, scope: !5952)
!5956 = !DILocation(line: 1289, column: 8, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 1289, column: 8)
!5958 = !DILocation(line: 1289, column: 12, scope: !5957)
!5959 = !DILocation(line: 1289, column: 17, scope: !5957)
!5960 = !DILocation(line: 1289, column: 8, scope: !5952)
!5961 = !DILocation(line: 1290, column: 25, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5957, file: !3, line: 1289, column: 29)
!5963 = !DILocation(line: 1290, column: 44, scope: !5962)
!5964 = !DILocation(line: 1290, column: 35, scope: !5962)
!5965 = !DILocation(line: 1290, column: 5, scope: !5962)
!5966 = !DILocation(line: 1291, column: 37, scope: !5962)
!5967 = !DILocation(line: 1291, column: 28, scope: !5962)
!5968 = !DILocation(line: 1291, column: 5, scope: !5962)
!5969 = !DILocation(line: 1292, column: 5, scope: !5962)
!5970 = !DILocation(line: 1292, column: 9, scope: !5962)
!5971 = !DILocation(line: 1292, column: 14, scope: !5962)
!5972 = !DILocation(line: 1293, column: 4, scope: !5962)
!5973 = !DILocation(line: 1294, column: 3, scope: !5952)
!5974 = !DILocation(line: 1295, column: 2, scope: !5947)
!5975 = !DILocation(line: 1286, column: 57, scope: !5943)
!5976 = !DILocation(line: 1286, column: 63, scope: !5943)
!5977 = !DILocation(line: 1286, column: 55, scope: !5943)
!5978 = !DILocation(line: 1286, column: 2, scope: !5943)
!5979 = distinct !{!5979, !5944, !5980}
!5980 = !DILocation(line: 1295, column: 2, scope: !5936)
!5981 = !DILocation(line: 1297, column: 15, scope: !5892)
!5982 = !DILocation(line: 1297, column: 18, scope: !5892)
!5983 = !DILocation(line: 1297, column: 2, scope: !5892)
!5984 = !DILocation(line: 1298, column: 19, scope: !5892)
!5985 = !DILocation(line: 1298, column: 22, scope: !5892)
!5986 = !DILocation(line: 1298, column: 2, scope: !5892)
!5987 = !DILocation(line: 1300, column: 2, scope: !5892)
!5988 = distinct !DISubprogram(name: "NODE_OT_read_fullsamplelayers", scope: !3, file: !3, line: 1337, type: !4, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!5989 = !DILocalVariable(name: "ot", arg: 1, scope: !5988, file: !3, line: 1337, type: !6)
!5990 = !DILocation(line: 1337, column: 52, scope: !5988)
!5991 = !DILocation(line: 1340, column: 2, scope: !5988)
!5992 = !DILocation(line: 1340, column: 6, scope: !5988)
!5993 = !DILocation(line: 1340, column: 11, scope: !5988)
!5994 = !DILocation(line: 1341, column: 2, scope: !5988)
!5995 = !DILocation(line: 1341, column: 6, scope: !5988)
!5996 = !DILocation(line: 1341, column: 13, scope: !5988)
!5997 = !DILocation(line: 1342, column: 2, scope: !5988)
!5998 = !DILocation(line: 1342, column: 6, scope: !5988)
!5999 = !DILocation(line: 1342, column: 18, scope: !5988)
!6000 = !DILocation(line: 1344, column: 2, scope: !5988)
!6001 = !DILocation(line: 1344, column: 6, scope: !5988)
!6002 = !DILocation(line: 1344, column: 11, scope: !5988)
!6003 = !DILocation(line: 1346, column: 2, scope: !5988)
!6004 = !DILocation(line: 1346, column: 6, scope: !5988)
!6005 = !DILocation(line: 1346, column: 11, scope: !5988)
!6006 = !DILocation(line: 1349, column: 2, scope: !5988)
!6007 = !DILocation(line: 1349, column: 6, scope: !5988)
!6008 = !DILocation(line: 1349, column: 11, scope: !5988)
!6009 = !DILocation(line: 1350, column: 1, scope: !5988)
!6010 = distinct !DISubprogram(name: "node_read_fullsamplelayers_exec", scope: !3, file: !3, line: 1318, type: !5544, scopeLine: 1319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6011 = !DILocalVariable(name: "C", arg: 1, scope: !6010, file: !3, line: 1318, type: !3399)
!6012 = !DILocation(line: 1318, column: 54, scope: !6010)
!6013 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6010, file: !3, line: 1318, type: !4682)
!6014 = !DILocation(line: 1318, column: 69, scope: !6010)
!6015 = !DILocalVariable(name: "bmain", scope: !6010, file: !3, line: 1320, type: !3454)
!6016 = !DILocation(line: 1320, column: 8, scope: !6010)
!6017 = !DILocation(line: 1320, column: 30, scope: !6010)
!6018 = !DILocation(line: 1320, column: 16, scope: !6010)
!6019 = !DILocalVariable(name: "snode", scope: !6010, file: !3, line: 1321, type: !3213)
!6020 = !DILocation(line: 1321, column: 13, scope: !6010)
!6021 = !DILocation(line: 1321, column: 39, scope: !6010)
!6022 = !DILocation(line: 1321, column: 21, scope: !6010)
!6023 = !DILocalVariable(name: "curscene", scope: !6010, file: !3, line: 1322, type: !2869)
!6024 = !DILocation(line: 1322, column: 9, scope: !6010)
!6025 = !DILocation(line: 1322, column: 35, scope: !6010)
!6026 = !DILocation(line: 1322, column: 20, scope: !6010)
!6027 = !DILocalVariable(name: "re", scope: !6010, file: !3, line: 1323, type: !6028)
!6028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6029, size: 64)
!6029 = !DIDerivedType(tag: DW_TAG_typedef, name: "Render", file: !1006, line: 58, baseType: !6030)
!6030 = !DICompositeType(tag: DW_TAG_structure_type, name: "Render", file: !6031, line: 35, flags: DIFlagFwdDecl)
!6031 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_bake.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6032 = !DILocation(line: 1323, column: 10, scope: !6010)
!6033 = !DILocation(line: 1323, column: 28, scope: !6010)
!6034 = !DILocation(line: 1323, column: 38, scope: !6010)
!6035 = !DILocation(line: 1323, column: 41, scope: !6010)
!6036 = !DILocation(line: 1323, column: 15, scope: !6010)
!6037 = !DILocation(line: 1325, column: 2, scope: !6010)
!6038 = !DILocation(line: 1326, column: 21, scope: !6010)
!6039 = !DILocation(line: 1326, column: 25, scope: !6010)
!6040 = !DILocation(line: 1326, column: 32, scope: !6010)
!6041 = !DILocation(line: 1326, column: 42, scope: !6010)
!6042 = !DILocation(line: 1326, column: 49, scope: !6010)
!6043 = !DILocation(line: 1326, column: 2, scope: !6010)
!6044 = !DILocation(line: 1327, column: 2, scope: !6010)
!6045 = !DILocation(line: 1331, column: 24, scope: !6010)
!6046 = !DILocation(line: 1331, column: 2, scope: !6010)
!6047 = !DILocation(line: 1333, column: 2, scope: !6010)
!6048 = distinct !DISubprogram(name: "node_render_changed_exec", scope: !3, file: !3, line: 1352, type: !5544, scopeLine: 1353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6049 = !DILocalVariable(name: "C", arg: 1, scope: !6048, file: !3, line: 1352, type: !3399)
!6050 = !DILocation(line: 1352, column: 40, scope: !6048)
!6051 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6048, file: !3, line: 1352, type: !4682)
!6052 = !DILocation(line: 1352, column: 55, scope: !6048)
!6053 = !DILocalVariable(name: "sce", scope: !6048, file: !3, line: 1354, type: !2869)
!6054 = !DILocation(line: 1354, column: 9, scope: !6048)
!6055 = !DILocation(line: 1354, column: 30, scope: !6048)
!6056 = !DILocation(line: 1354, column: 15, scope: !6048)
!6057 = !DILocalVariable(name: "node", scope: !6048, file: !3, line: 1355, type: !499)
!6058 = !DILocation(line: 1355, column: 9, scope: !6048)
!6059 = !DILocation(line: 1357, column: 14, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 1357, column: 2)
!6061 = !DILocation(line: 1357, column: 19, scope: !6060)
!6062 = !DILocation(line: 1357, column: 29, scope: !6060)
!6063 = !DILocation(line: 1357, column: 35, scope: !6060)
!6064 = !DILocation(line: 1357, column: 12, scope: !6060)
!6065 = !DILocation(line: 1357, column: 7, scope: !6060)
!6066 = !DILocation(line: 1357, column: 42, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 1357, column: 2)
!6068 = !DILocation(line: 1357, column: 2, scope: !6060)
!6069 = !DILocation(line: 1358, column: 7, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 1358, column: 7)
!6071 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 1357, column: 67)
!6072 = !DILocation(line: 1358, column: 13, scope: !6070)
!6073 = !DILocation(line: 1358, column: 25, scope: !6070)
!6074 = !DILocation(line: 1358, column: 19, scope: !6070)
!6075 = !DILocation(line: 1358, column: 16, scope: !6070)
!6076 = !DILocation(line: 1358, column: 29, scope: !6070)
!6077 = !DILocation(line: 1358, column: 32, scope: !6070)
!6078 = !DILocation(line: 1358, column: 38, scope: !6070)
!6079 = !DILocation(line: 1358, column: 7, scope: !6071)
!6080 = !DILocation(line: 1359, column: 4, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 1358, column: 49)
!6082 = !DILocation(line: 1361, column: 2, scope: !6071)
!6083 = !DILocation(line: 1357, column: 55, scope: !6067)
!6084 = !DILocation(line: 1357, column: 61, scope: !6067)
!6085 = !DILocation(line: 1357, column: 53, scope: !6067)
!6086 = !DILocation(line: 1357, column: 2, scope: !6067)
!6087 = distinct !{!6087, !6068, !6088}
!6088 = !DILocation(line: 1361, column: 2, scope: !6060)
!6089 = !DILocation(line: 1362, column: 6, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 1362, column: 6)
!6091 = !DILocation(line: 1362, column: 6, scope: !6048)
!6092 = !DILocalVariable(name: "srl", scope: !6093, file: !3, line: 1363, type: !6094)
!6093 = distinct !DILexicalBlock(scope: !6090, file: !3, line: 1362, column: 12)
!6094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6095, size: 64)
!6095 = !DIDerivedType(tag: DW_TAG_typedef, name: "SceneRenderLayer", file: !155, line: 194, baseType: !6096)
!6096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SceneRenderLayer", file: !155, line: 174, size: 1472, elements: !6097)
!6097 = !{!6098, !6100, !6101, !6102, !6103, !6104, !6105, !6106, !6107, !6108, !6109, !6110, !6111, !6112}
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6096, file: !155, line: 175, baseType: !6099, size: 64)
!6099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6096, size: 64)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6096, file: !155, line: 175, baseType: !6099, size: 64, offset: 64)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6096, file: !155, line: 177, baseType: !33, size: 512, offset: 128)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !6096, file: !155, line: 179, baseType: !1043, size: 64, offset: 640)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !6096, file: !155, line: 180, baseType: !1204, size: 64, offset: 704)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !6096, file: !155, line: 182, baseType: !676, size: 32, offset: 768)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !6096, file: !155, line: 183, baseType: !676, size: 32, offset: 800)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !6096, file: !155, line: 184, baseType: !676, size: 32, offset: 832)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !6096, file: !155, line: 185, baseType: !22, size: 32, offset: 864)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !6096, file: !155, line: 187, baseType: !22, size: 32, offset: 896)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !6096, file: !155, line: 188, baseType: !22, size: 32, offset: 928)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !6096, file: !155, line: 190, baseType: !22, size: 32, offset: 960)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "pass_alpha_threshold", scope: !6096, file: !155, line: 191, baseType: !177, size: 32, offset: 992)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "freestyleConfig", scope: !6096, file: !155, line: 193, baseType: !6113, size: 448, offset: 1024)
!6113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FreestyleConfig", file: !6114, line: 127, size: 448, elements: !6115)
!6114 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6115 = !{!6116, !6117, !6118, !6119, !6120, !6121, !6122, !6123}
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "modules", scope: !6113, file: !6114, line: 128, baseType: !58, size: 128)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6113, file: !6114, line: 130, baseType: !22, size: 32, offset: 128)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "raycasting_algorithm", scope: !6113, file: !6114, line: 131, baseType: !22, size: 32, offset: 160)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6113, file: !6114, line: 132, baseType: !22, size: 32, offset: 192)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "sphere_radius", scope: !6113, file: !6114, line: 133, baseType: !177, size: 32, offset: 224)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "dkr_epsilon", scope: !6113, file: !6114, line: 134, baseType: !177, size: 32, offset: 256)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "crease_angle", scope: !6113, file: !6114, line: 135, baseType: !177, size: 32, offset: 288)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "linesets", scope: !6113, file: !6114, line: 137, baseType: !58, size: 128, offset: 320)
!6124 = !DILocation(line: 1363, column: 21, scope: !6093)
!6125 = !DILocation(line: 1363, column: 41, scope: !6093)
!6126 = !DILocation(line: 1363, column: 46, scope: !6093)
!6127 = !DILocation(line: 1363, column: 48, scope: !6093)
!6128 = !DILocation(line: 1363, column: 56, scope: !6093)
!6129 = !DILocation(line: 1363, column: 62, scope: !6093)
!6130 = !DILocation(line: 1363, column: 27, scope: !6093)
!6131 = !DILocation(line: 1365, column: 7, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 1365, column: 7)
!6133 = !DILocation(line: 1365, column: 7, scope: !6093)
!6134 = !DILocalVariable(name: "op_ptr", scope: !6135, file: !3, line: 1366, type: !3841)
!6135 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 1365, column: 12)
!6136 = !DILocation(line: 1366, column: 15, scope: !6135)
!6137 = !DILocation(line: 1368, column: 4, scope: !6135)
!6138 = !DILocation(line: 1369, column: 37, scope: !6135)
!6139 = !DILocation(line: 1369, column: 42, scope: !6135)
!6140 = !DILocation(line: 1369, column: 4, scope: !6135)
!6141 = !DILocation(line: 1370, column: 37, scope: !6135)
!6142 = !DILocation(line: 1370, column: 42, scope: !6135)
!6143 = !DILocation(line: 1370, column: 45, scope: !6135)
!6144 = !DILocation(line: 1370, column: 50, scope: !6135)
!6145 = !DILocation(line: 1370, column: 4, scope: !6135)
!6146 = !DILocation(line: 1373, column: 4, scope: !6135)
!6147 = !DILocation(line: 1373, column: 9, scope: !6135)
!6148 = !DILocation(line: 1373, column: 11, scope: !6135)
!6149 = !DILocation(line: 1373, column: 19, scope: !6135)
!6150 = !DILocation(line: 1375, column: 26, scope: !6135)
!6151 = !DILocation(line: 1375, column: 4, scope: !6135)
!6152 = !DILocation(line: 1377, column: 4, scope: !6135)
!6153 = !DILocation(line: 1379, column: 4, scope: !6135)
!6154 = !DILocation(line: 1381, column: 2, scope: !6093)
!6155 = !DILocation(line: 1382, column: 2, scope: !6048)
!6156 = !DILocation(line: 1383, column: 1, scope: !6048)
!6157 = distinct !DISubprogram(name: "NODE_OT_render_changed", scope: !3, file: !3, line: 1385, type: !4, scopeLine: 1386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6158 = !DILocalVariable(name: "ot", arg: 1, scope: !6157, file: !3, line: 1385, type: !6)
!6159 = !DILocation(line: 1385, column: 45, scope: !6157)
!6160 = !DILocation(line: 1387, column: 2, scope: !6157)
!6161 = !DILocation(line: 1387, column: 6, scope: !6157)
!6162 = !DILocation(line: 1387, column: 11, scope: !6157)
!6163 = !DILocation(line: 1388, column: 2, scope: !6157)
!6164 = !DILocation(line: 1388, column: 6, scope: !6157)
!6165 = !DILocation(line: 1388, column: 13, scope: !6157)
!6166 = !DILocation(line: 1389, column: 2, scope: !6157)
!6167 = !DILocation(line: 1389, column: 6, scope: !6157)
!6168 = !DILocation(line: 1389, column: 18, scope: !6157)
!6169 = !DILocation(line: 1391, column: 2, scope: !6157)
!6170 = !DILocation(line: 1391, column: 6, scope: !6157)
!6171 = !DILocation(line: 1391, column: 11, scope: !6157)
!6172 = !DILocation(line: 1393, column: 2, scope: !6157)
!6173 = !DILocation(line: 1393, column: 6, scope: !6157)
!6174 = !DILocation(line: 1393, column: 11, scope: !6157)
!6175 = !DILocation(line: 1396, column: 2, scope: !6157)
!6176 = !DILocation(line: 1396, column: 6, scope: !6157)
!6177 = !DILocation(line: 1396, column: 11, scope: !6157)
!6178 = !DILocation(line: 1397, column: 1, scope: !6157)
!6179 = distinct !DISubprogram(name: "NODE_OT_hide_toggle", scope: !3, file: !3, line: 1456, type: !4, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6180 = !DILocalVariable(name: "ot", arg: 1, scope: !6179, file: !3, line: 1456, type: !6)
!6181 = !DILocation(line: 1456, column: 42, scope: !6179)
!6182 = !DILocation(line: 1459, column: 2, scope: !6179)
!6183 = !DILocation(line: 1459, column: 6, scope: !6179)
!6184 = !DILocation(line: 1459, column: 11, scope: !6179)
!6185 = !DILocation(line: 1460, column: 2, scope: !6179)
!6186 = !DILocation(line: 1460, column: 6, scope: !6179)
!6187 = !DILocation(line: 1460, column: 18, scope: !6179)
!6188 = !DILocation(line: 1461, column: 2, scope: !6179)
!6189 = !DILocation(line: 1461, column: 6, scope: !6179)
!6190 = !DILocation(line: 1461, column: 13, scope: !6179)
!6191 = !DILocation(line: 1464, column: 2, scope: !6179)
!6192 = !DILocation(line: 1464, column: 6, scope: !6179)
!6193 = !DILocation(line: 1464, column: 11, scope: !6179)
!6194 = !DILocation(line: 1465, column: 2, scope: !6179)
!6195 = !DILocation(line: 1465, column: 6, scope: !6179)
!6196 = !DILocation(line: 1465, column: 11, scope: !6179)
!6197 = !DILocation(line: 1468, column: 2, scope: !6179)
!6198 = !DILocation(line: 1468, column: 6, scope: !6179)
!6199 = !DILocation(line: 1468, column: 11, scope: !6179)
!6200 = !DILocation(line: 1469, column: 1, scope: !6179)
!6201 = distinct !DISubprogram(name: "node_hide_toggle_exec", scope: !3, file: !3, line: 1441, type: !5544, scopeLine: 1442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6202 = !DILocalVariable(name: "C", arg: 1, scope: !6201, file: !3, line: 1441, type: !3399)
!6203 = !DILocation(line: 1441, column: 44, scope: !6201)
!6204 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6201, file: !3, line: 1441, type: !4682)
!6205 = !DILocation(line: 1441, column: 59, scope: !6201)
!6206 = !DILocalVariable(name: "snode", scope: !6201, file: !3, line: 1443, type: !3213)
!6207 = !DILocation(line: 1443, column: 13, scope: !6201)
!6208 = !DILocation(line: 1443, column: 39, scope: !6201)
!6209 = !DILocation(line: 1443, column: 21, scope: !6201)
!6210 = !DILocation(line: 1446, column: 7, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 1446, column: 6)
!6212 = !DILocation(line: 1446, column: 13, scope: !6211)
!6213 = !DILocation(line: 1446, column: 22, scope: !6211)
!6214 = !DILocation(line: 1446, column: 26, scope: !6211)
!6215 = !DILocation(line: 1446, column: 33, scope: !6211)
!6216 = !DILocation(line: 1446, column: 42, scope: !6211)
!6217 = !DILocation(line: 1446, column: 6, scope: !6201)
!6218 = !DILocation(line: 1447, column: 3, scope: !6211)
!6219 = !DILocation(line: 1449, column: 24, scope: !6201)
!6220 = !DILocation(line: 1449, column: 2, scope: !6201)
!6221 = !DILocation(line: 1451, column: 24, scope: !6201)
!6222 = !DILocation(line: 1451, column: 2, scope: !6201)
!6223 = !DILocation(line: 1453, column: 2, scope: !6201)
!6224 = !DILocation(line: 1454, column: 1, scope: !6201)
!6225 = distinct !DISubprogram(name: "NODE_OT_preview_toggle", scope: !3, file: !3, line: 1488, type: !4, scopeLine: 1489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6226 = !DILocalVariable(name: "ot", arg: 1, scope: !6225, file: !3, line: 1488, type: !6)
!6227 = !DILocation(line: 1488, column: 45, scope: !6225)
!6228 = !DILocation(line: 1491, column: 2, scope: !6225)
!6229 = !DILocation(line: 1491, column: 6, scope: !6225)
!6230 = !DILocation(line: 1491, column: 11, scope: !6225)
!6231 = !DILocation(line: 1492, column: 2, scope: !6225)
!6232 = !DILocation(line: 1492, column: 6, scope: !6225)
!6233 = !DILocation(line: 1492, column: 18, scope: !6225)
!6234 = !DILocation(line: 1493, column: 2, scope: !6225)
!6235 = !DILocation(line: 1493, column: 6, scope: !6225)
!6236 = !DILocation(line: 1493, column: 13, scope: !6225)
!6237 = !DILocation(line: 1496, column: 2, scope: !6225)
!6238 = !DILocation(line: 1496, column: 6, scope: !6225)
!6239 = !DILocation(line: 1496, column: 11, scope: !6225)
!6240 = !DILocation(line: 1497, column: 2, scope: !6225)
!6241 = !DILocation(line: 1497, column: 6, scope: !6225)
!6242 = !DILocation(line: 1497, column: 11, scope: !6225)
!6243 = !DILocation(line: 1500, column: 2, scope: !6225)
!6244 = !DILocation(line: 1500, column: 6, scope: !6225)
!6245 = !DILocation(line: 1500, column: 11, scope: !6225)
!6246 = !DILocation(line: 1501, column: 1, scope: !6225)
!6247 = distinct !DISubprogram(name: "node_preview_toggle_exec", scope: !3, file: !3, line: 1471, type: !5544, scopeLine: 1472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6248 = !DILocalVariable(name: "C", arg: 1, scope: !6247, file: !3, line: 1471, type: !3399)
!6249 = !DILocation(line: 1471, column: 47, scope: !6247)
!6250 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6247, file: !3, line: 1471, type: !4682)
!6251 = !DILocation(line: 1471, column: 62, scope: !6247)
!6252 = !DILocalVariable(name: "snode", scope: !6247, file: !3, line: 1473, type: !3213)
!6253 = !DILocation(line: 1473, column: 13, scope: !6247)
!6254 = !DILocation(line: 1473, column: 39, scope: !6247)
!6255 = !DILocation(line: 1473, column: 21, scope: !6247)
!6256 = !DILocation(line: 1476, column: 7, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6247, file: !3, line: 1476, column: 6)
!6258 = !DILocation(line: 1476, column: 13, scope: !6257)
!6259 = !DILocation(line: 1476, column: 22, scope: !6257)
!6260 = !DILocation(line: 1476, column: 26, scope: !6257)
!6261 = !DILocation(line: 1476, column: 33, scope: !6257)
!6262 = !DILocation(line: 1476, column: 42, scope: !6257)
!6263 = !DILocation(line: 1476, column: 6, scope: !6247)
!6264 = !DILocation(line: 1477, column: 3, scope: !6257)
!6265 = !DILocation(line: 1479, column: 23, scope: !6247)
!6266 = !DILocation(line: 1479, column: 2, scope: !6247)
!6267 = !DILocation(line: 1481, column: 24, scope: !6247)
!6268 = !DILocation(line: 1481, column: 2, scope: !6247)
!6269 = !DILocation(line: 1483, column: 15, scope: !6247)
!6270 = !DILocation(line: 1483, column: 18, scope: !6247)
!6271 = !DILocation(line: 1483, column: 2, scope: !6247)
!6272 = !DILocation(line: 1485, column: 2, scope: !6247)
!6273 = !DILocation(line: 1486, column: 1, scope: !6247)
!6274 = distinct !DISubprogram(name: "NODE_OT_options_toggle", scope: !3, file: !3, line: 1518, type: !4, scopeLine: 1519, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6275 = !DILocalVariable(name: "ot", arg: 1, scope: !6274, file: !3, line: 1518, type: !6)
!6276 = !DILocation(line: 1518, column: 45, scope: !6274)
!6277 = !DILocation(line: 1521, column: 2, scope: !6274)
!6278 = !DILocation(line: 1521, column: 6, scope: !6274)
!6279 = !DILocation(line: 1521, column: 11, scope: !6274)
!6280 = !DILocation(line: 1522, column: 2, scope: !6274)
!6281 = !DILocation(line: 1522, column: 6, scope: !6274)
!6282 = !DILocation(line: 1522, column: 18, scope: !6274)
!6283 = !DILocation(line: 1523, column: 2, scope: !6274)
!6284 = !DILocation(line: 1523, column: 6, scope: !6274)
!6285 = !DILocation(line: 1523, column: 13, scope: !6274)
!6286 = !DILocation(line: 1526, column: 2, scope: !6274)
!6287 = !DILocation(line: 1526, column: 6, scope: !6274)
!6288 = !DILocation(line: 1526, column: 11, scope: !6274)
!6289 = !DILocation(line: 1527, column: 2, scope: !6274)
!6290 = !DILocation(line: 1527, column: 6, scope: !6274)
!6291 = !DILocation(line: 1527, column: 11, scope: !6274)
!6292 = !DILocation(line: 1530, column: 2, scope: !6274)
!6293 = !DILocation(line: 1530, column: 6, scope: !6274)
!6294 = !DILocation(line: 1530, column: 11, scope: !6274)
!6295 = !DILocation(line: 1531, column: 1, scope: !6274)
!6296 = distinct !DISubprogram(name: "node_options_toggle_exec", scope: !3, file: !3, line: 1503, type: !5544, scopeLine: 1504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6297 = !DILocalVariable(name: "C", arg: 1, scope: !6296, file: !3, line: 1503, type: !3399)
!6298 = !DILocation(line: 1503, column: 47, scope: !6296)
!6299 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6296, file: !3, line: 1503, type: !4682)
!6300 = !DILocation(line: 1503, column: 62, scope: !6296)
!6301 = !DILocalVariable(name: "snode", scope: !6296, file: !3, line: 1505, type: !3213)
!6302 = !DILocation(line: 1505, column: 13, scope: !6296)
!6303 = !DILocation(line: 1505, column: 39, scope: !6296)
!6304 = !DILocation(line: 1505, column: 21, scope: !6296)
!6305 = !DILocation(line: 1508, column: 7, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6296, file: !3, line: 1508, column: 6)
!6307 = !DILocation(line: 1508, column: 13, scope: !6306)
!6308 = !DILocation(line: 1508, column: 22, scope: !6306)
!6309 = !DILocation(line: 1508, column: 26, scope: !6306)
!6310 = !DILocation(line: 1508, column: 33, scope: !6306)
!6311 = !DILocation(line: 1508, column: 42, scope: !6306)
!6312 = !DILocation(line: 1508, column: 6, scope: !6296)
!6313 = !DILocation(line: 1509, column: 3, scope: !6306)
!6314 = !DILocation(line: 1511, column: 24, scope: !6296)
!6315 = !DILocation(line: 1511, column: 2, scope: !6296)
!6316 = !DILocation(line: 1513, column: 24, scope: !6296)
!6317 = !DILocation(line: 1513, column: 2, scope: !6296)
!6318 = !DILocation(line: 1515, column: 2, scope: !6296)
!6319 = !DILocation(line: 1516, column: 1, scope: !6296)
!6320 = distinct !DISubprogram(name: "NODE_OT_hide_socket_toggle", scope: !3, file: !3, line: 1569, type: !4, scopeLine: 1570, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6321 = !DILocalVariable(name: "ot", arg: 1, scope: !6320, file: !3, line: 1569, type: !6)
!6322 = !DILocation(line: 1569, column: 49, scope: !6320)
!6323 = !DILocation(line: 1572, column: 2, scope: !6320)
!6324 = !DILocation(line: 1572, column: 6, scope: !6320)
!6325 = !DILocation(line: 1572, column: 11, scope: !6320)
!6326 = !DILocation(line: 1573, column: 2, scope: !6320)
!6327 = !DILocation(line: 1573, column: 6, scope: !6320)
!6328 = !DILocation(line: 1573, column: 18, scope: !6320)
!6329 = !DILocation(line: 1574, column: 2, scope: !6320)
!6330 = !DILocation(line: 1574, column: 6, scope: !6320)
!6331 = !DILocation(line: 1574, column: 13, scope: !6320)
!6332 = !DILocation(line: 1577, column: 2, scope: !6320)
!6333 = !DILocation(line: 1577, column: 6, scope: !6320)
!6334 = !DILocation(line: 1577, column: 11, scope: !6320)
!6335 = !DILocation(line: 1578, column: 2, scope: !6320)
!6336 = !DILocation(line: 1578, column: 6, scope: !6320)
!6337 = !DILocation(line: 1578, column: 11, scope: !6320)
!6338 = !DILocation(line: 1581, column: 2, scope: !6320)
!6339 = !DILocation(line: 1581, column: 6, scope: !6320)
!6340 = !DILocation(line: 1581, column: 11, scope: !6320)
!6341 = !DILocation(line: 1582, column: 1, scope: !6320)
!6342 = distinct !DISubprogram(name: "node_socket_toggle_exec", scope: !3, file: !3, line: 1533, type: !5544, scopeLine: 1534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6343 = !DILocalVariable(name: "C", arg: 1, scope: !6342, file: !3, line: 1533, type: !3399)
!6344 = !DILocation(line: 1533, column: 46, scope: !6342)
!6345 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6342, file: !3, line: 1533, type: !4682)
!6346 = !DILocation(line: 1533, column: 61, scope: !6342)
!6347 = !DILocalVariable(name: "snode", scope: !6342, file: !3, line: 1535, type: !3213)
!6348 = !DILocation(line: 1535, column: 13, scope: !6342)
!6349 = !DILocation(line: 1535, column: 39, scope: !6342)
!6350 = !DILocation(line: 1535, column: 21, scope: !6342)
!6351 = !DILocalVariable(name: "node", scope: !6342, file: !3, line: 1536, type: !499)
!6352 = !DILocation(line: 1536, column: 9, scope: !6342)
!6353 = !DILocalVariable(name: "hidden", scope: !6342, file: !3, line: 1537, type: !22)
!6354 = !DILocation(line: 1537, column: 6, scope: !6342)
!6355 = !DILocation(line: 1540, column: 7, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6342, file: !3, line: 1540, column: 6)
!6357 = !DILocation(line: 1540, column: 13, scope: !6356)
!6358 = !DILocation(line: 1540, column: 22, scope: !6356)
!6359 = !DILocation(line: 1540, column: 26, scope: !6356)
!6360 = !DILocation(line: 1540, column: 33, scope: !6356)
!6361 = !DILocation(line: 1540, column: 42, scope: !6356)
!6362 = !DILocation(line: 1540, column: 6, scope: !6342)
!6363 = !DILocation(line: 1541, column: 3, scope: !6356)
!6364 = !DILocation(line: 1543, column: 23, scope: !6342)
!6365 = !DILocation(line: 1543, column: 2, scope: !6342)
!6366 = !DILocation(line: 1546, column: 9, scope: !6342)
!6367 = !DILocation(line: 1547, column: 14, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6342, file: !3, line: 1547, column: 2)
!6369 = !DILocation(line: 1547, column: 21, scope: !6368)
!6370 = !DILocation(line: 1547, column: 31, scope: !6368)
!6371 = !DILocation(line: 1547, column: 37, scope: !6368)
!6372 = !DILocation(line: 1547, column: 12, scope: !6368)
!6373 = !DILocation(line: 1547, column: 7, scope: !6368)
!6374 = !DILocation(line: 1547, column: 44, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6368, file: !3, line: 1547, column: 2)
!6376 = !DILocation(line: 1547, column: 2, scope: !6368)
!6377 = !DILocation(line: 1548, column: 7, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6379, file: !3, line: 1548, column: 7)
!6379 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 1547, column: 69)
!6380 = !DILocation(line: 1548, column: 13, scope: !6378)
!6381 = !DILocation(line: 1548, column: 18, scope: !6378)
!6382 = !DILocation(line: 1548, column: 7, scope: !6379)
!6383 = !DILocation(line: 1549, column: 32, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6385, file: !3, line: 1549, column: 8)
!6385 = distinct !DILexicalBlock(scope: !6378, file: !3, line: 1548, column: 28)
!6386 = !DILocation(line: 1549, column: 8, scope: !6384)
!6387 = !DILocation(line: 1549, column: 8, scope: !6385)
!6388 = !DILocation(line: 1550, column: 12, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 1549, column: 39)
!6390 = !DILocation(line: 1551, column: 5, scope: !6389)
!6391 = !DILocation(line: 1553, column: 3, scope: !6385)
!6392 = !DILocation(line: 1554, column: 2, scope: !6379)
!6393 = !DILocation(line: 1547, column: 57, scope: !6375)
!6394 = !DILocation(line: 1547, column: 63, scope: !6375)
!6395 = !DILocation(line: 1547, column: 55, scope: !6375)
!6396 = !DILocation(line: 1547, column: 2, scope: !6375)
!6397 = distinct !{!6397, !6376, !6398}
!6398 = !DILocation(line: 1554, column: 2, scope: !6368)
!6399 = !DILocation(line: 1556, column: 14, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6342, file: !3, line: 1556, column: 2)
!6401 = !DILocation(line: 1556, column: 21, scope: !6400)
!6402 = !DILocation(line: 1556, column: 31, scope: !6400)
!6403 = !DILocation(line: 1556, column: 37, scope: !6400)
!6404 = !DILocation(line: 1556, column: 12, scope: !6400)
!6405 = !DILocation(line: 1556, column: 7, scope: !6400)
!6406 = !DILocation(line: 1556, column: 44, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 1556, column: 2)
!6408 = !DILocation(line: 1556, column: 2, scope: !6400)
!6409 = !DILocation(line: 1557, column: 7, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 1557, column: 7)
!6411 = distinct !DILexicalBlock(scope: !6407, file: !3, line: 1556, column: 69)
!6412 = !DILocation(line: 1557, column: 13, scope: !6410)
!6413 = !DILocation(line: 1557, column: 18, scope: !6410)
!6414 = !DILocation(line: 1557, column: 7, scope: !6411)
!6415 = !DILocation(line: 1558, column: 28, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 1557, column: 28)
!6417 = !DILocation(line: 1558, column: 35, scope: !6416)
!6418 = !DILocation(line: 1558, column: 42, scope: !6416)
!6419 = !DILocation(line: 1558, column: 41, scope: !6416)
!6420 = !DILocation(line: 1558, column: 4, scope: !6416)
!6421 = !DILocation(line: 1559, column: 3, scope: !6416)
!6422 = !DILocation(line: 1560, column: 2, scope: !6411)
!6423 = !DILocation(line: 1556, column: 57, scope: !6407)
!6424 = !DILocation(line: 1556, column: 63, scope: !6407)
!6425 = !DILocation(line: 1556, column: 55, scope: !6407)
!6426 = !DILocation(line: 1556, column: 2, scope: !6407)
!6427 = distinct !{!6427, !6408, !6428}
!6428 = !DILocation(line: 1560, column: 2, scope: !6400)
!6429 = !DILocation(line: 1562, column: 32, scope: !6342)
!6430 = !DILocation(line: 1562, column: 18, scope: !6342)
!6431 = !DILocation(line: 1562, column: 36, scope: !6342)
!6432 = !DILocation(line: 1562, column: 43, scope: !6342)
!6433 = !DILocation(line: 1562, column: 2, scope: !6342)
!6434 = !DILocation(line: 1564, column: 24, scope: !6342)
!6435 = !DILocation(line: 1564, column: 2, scope: !6342)
!6436 = !DILocation(line: 1566, column: 2, scope: !6342)
!6437 = !DILocation(line: 1567, column: 1, scope: !6342)
!6438 = distinct !DISubprogram(name: "NODE_OT_mute_toggle", scope: !3, file: !3, line: 1607, type: !4, scopeLine: 1608, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6439 = !DILocalVariable(name: "ot", arg: 1, scope: !6438, file: !3, line: 1607, type: !6)
!6440 = !DILocation(line: 1607, column: 42, scope: !6438)
!6441 = !DILocation(line: 1610, column: 2, scope: !6438)
!6442 = !DILocation(line: 1610, column: 6, scope: !6438)
!6443 = !DILocation(line: 1610, column: 11, scope: !6438)
!6444 = !DILocation(line: 1611, column: 2, scope: !6438)
!6445 = !DILocation(line: 1611, column: 6, scope: !6438)
!6446 = !DILocation(line: 1611, column: 18, scope: !6438)
!6447 = !DILocation(line: 1612, column: 2, scope: !6438)
!6448 = !DILocation(line: 1612, column: 6, scope: !6438)
!6449 = !DILocation(line: 1612, column: 13, scope: !6438)
!6450 = !DILocation(line: 1615, column: 2, scope: !6438)
!6451 = !DILocation(line: 1615, column: 6, scope: !6438)
!6452 = !DILocation(line: 1615, column: 11, scope: !6438)
!6453 = !DILocation(line: 1616, column: 2, scope: !6438)
!6454 = !DILocation(line: 1616, column: 6, scope: !6438)
!6455 = !DILocation(line: 1616, column: 11, scope: !6438)
!6456 = !DILocation(line: 1619, column: 2, scope: !6438)
!6457 = !DILocation(line: 1619, column: 6, scope: !6438)
!6458 = !DILocation(line: 1619, column: 11, scope: !6438)
!6459 = !DILocation(line: 1620, column: 1, scope: !6438)
!6460 = distinct !DISubprogram(name: "node_mute_exec", scope: !3, file: !3, line: 1586, type: !5544, scopeLine: 1587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6461 = !DILocalVariable(name: "C", arg: 1, scope: !6460, file: !3, line: 1586, type: !3399)
!6462 = !DILocation(line: 1586, column: 37, scope: !6460)
!6463 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6460, file: !3, line: 1586, type: !4682)
!6464 = !DILocation(line: 1586, column: 52, scope: !6460)
!6465 = !DILocalVariable(name: "snode", scope: !6460, file: !3, line: 1588, type: !3213)
!6466 = !DILocation(line: 1588, column: 13, scope: !6460)
!6467 = !DILocation(line: 1588, column: 39, scope: !6460)
!6468 = !DILocation(line: 1588, column: 21, scope: !6460)
!6469 = !DILocalVariable(name: "node", scope: !6460, file: !3, line: 1589, type: !499)
!6470 = !DILocation(line: 1589, column: 9, scope: !6460)
!6471 = !DILocation(line: 1591, column: 23, scope: !6460)
!6472 = !DILocation(line: 1591, column: 2, scope: !6460)
!6473 = !DILocation(line: 1593, column: 14, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 1593, column: 2)
!6475 = !DILocation(line: 1593, column: 21, scope: !6474)
!6476 = !DILocation(line: 1593, column: 31, scope: !6474)
!6477 = !DILocation(line: 1593, column: 37, scope: !6474)
!6478 = !DILocation(line: 1593, column: 12, scope: !6474)
!6479 = !DILocation(line: 1593, column: 7, scope: !6474)
!6480 = !DILocation(line: 1593, column: 44, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 1593, column: 2)
!6482 = !DILocation(line: 1593, column: 2, scope: !6474)
!6483 = !DILocation(line: 1595, column: 8, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 1595, column: 7)
!6485 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 1593, column: 69)
!6486 = !DILocation(line: 1595, column: 14, scope: !6484)
!6487 = !DILocation(line: 1595, column: 19, scope: !6484)
!6488 = !DILocation(line: 1595, column: 29, scope: !6484)
!6489 = !DILocation(line: 1595, column: 32, scope: !6484)
!6490 = !DILocation(line: 1595, column: 38, scope: !6484)
!6491 = !DILocation(line: 1595, column: 48, scope: !6484)
!6492 = !DILocation(line: 1595, column: 7, scope: !6485)
!6493 = !DILocation(line: 1596, column: 4, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6484, file: !3, line: 1595, column: 71)
!6495 = !DILocation(line: 1596, column: 10, scope: !6494)
!6496 = !DILocation(line: 1596, column: 15, scope: !6494)
!6497 = !DILocation(line: 1597, column: 17, scope: !6494)
!6498 = !DILocation(line: 1597, column: 24, scope: !6494)
!6499 = !DILocation(line: 1597, column: 4, scope: !6494)
!6500 = !DILocation(line: 1598, column: 3, scope: !6494)
!6501 = !DILocation(line: 1599, column: 2, scope: !6485)
!6502 = !DILocation(line: 1593, column: 57, scope: !6481)
!6503 = !DILocation(line: 1593, column: 63, scope: !6481)
!6504 = !DILocation(line: 1593, column: 55, scope: !6481)
!6505 = !DILocation(line: 1593, column: 2, scope: !6481)
!6506 = distinct !{!6506, !6482, !6507}
!6507 = !DILocation(line: 1599, column: 2, scope: !6474)
!6508 = !DILocation(line: 1601, column: 15, scope: !6460)
!6509 = !DILocation(line: 1601, column: 18, scope: !6460)
!6510 = !DILocation(line: 1601, column: 2, scope: !6460)
!6511 = !DILocation(line: 1602, column: 19, scope: !6460)
!6512 = !DILocation(line: 1602, column: 22, scope: !6460)
!6513 = !DILocation(line: 1602, column: 2, scope: !6460)
!6514 = !DILocation(line: 1604, column: 2, scope: !6460)
!6515 = distinct !DISubprogram(name: "NODE_OT_delete", scope: !3, file: !3, line: 1649, type: !4, scopeLine: 1650, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6516 = !DILocalVariable(name: "ot", arg: 1, scope: !6515, file: !3, line: 1649, type: !6)
!6517 = !DILocation(line: 1649, column: 37, scope: !6515)
!6518 = !DILocation(line: 1652, column: 2, scope: !6515)
!6519 = !DILocation(line: 1652, column: 6, scope: !6515)
!6520 = !DILocation(line: 1652, column: 11, scope: !6515)
!6521 = !DILocation(line: 1653, column: 2, scope: !6515)
!6522 = !DILocation(line: 1653, column: 6, scope: !6515)
!6523 = !DILocation(line: 1653, column: 18, scope: !6515)
!6524 = !DILocation(line: 1654, column: 2, scope: !6515)
!6525 = !DILocation(line: 1654, column: 6, scope: !6515)
!6526 = !DILocation(line: 1654, column: 13, scope: !6515)
!6527 = !DILocation(line: 1657, column: 2, scope: !6515)
!6528 = !DILocation(line: 1657, column: 6, scope: !6515)
!6529 = !DILocation(line: 1657, column: 11, scope: !6515)
!6530 = !DILocation(line: 1658, column: 2, scope: !6515)
!6531 = !DILocation(line: 1658, column: 6, scope: !6515)
!6532 = !DILocation(line: 1658, column: 11, scope: !6515)
!6533 = !DILocation(line: 1661, column: 2, scope: !6515)
!6534 = !DILocation(line: 1661, column: 6, scope: !6515)
!6535 = !DILocation(line: 1661, column: 11, scope: !6515)
!6536 = !DILocation(line: 1662, column: 1, scope: !6515)
!6537 = distinct !DISubprogram(name: "node_delete_exec", scope: !3, file: !3, line: 1624, type: !5544, scopeLine: 1625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6538 = !DILocalVariable(name: "C", arg: 1, scope: !6537, file: !3, line: 1624, type: !3399)
!6539 = !DILocation(line: 1624, column: 39, scope: !6537)
!6540 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6537, file: !3, line: 1624, type: !4682)
!6541 = !DILocation(line: 1624, column: 54, scope: !6537)
!6542 = !DILocalVariable(name: "snode", scope: !6537, file: !3, line: 1626, type: !3213)
!6543 = !DILocation(line: 1626, column: 13, scope: !6537)
!6544 = !DILocation(line: 1626, column: 39, scope: !6537)
!6545 = !DILocation(line: 1626, column: 21, scope: !6537)
!6546 = !DILocalVariable(name: "node", scope: !6537, file: !3, line: 1627, type: !499)
!6547 = !DILocation(line: 1627, column: 9, scope: !6537)
!6548 = !DILocalVariable(name: "next", scope: !6537, file: !3, line: 1627, type: !499)
!6549 = !DILocation(line: 1627, column: 16, scope: !6537)
!6550 = !DILocation(line: 1629, column: 23, scope: !6537)
!6551 = !DILocation(line: 1629, column: 2, scope: !6537)
!6552 = !DILocation(line: 1631, column: 14, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6537, file: !3, line: 1631, column: 2)
!6554 = !DILocation(line: 1631, column: 21, scope: !6553)
!6555 = !DILocation(line: 1631, column: 31, scope: !6553)
!6556 = !DILocation(line: 1631, column: 37, scope: !6553)
!6557 = !DILocation(line: 1631, column: 12, scope: !6553)
!6558 = !DILocation(line: 1631, column: 7, scope: !6553)
!6559 = !DILocation(line: 1631, column: 44, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 1631, column: 2)
!6561 = !DILocation(line: 1631, column: 2, scope: !6553)
!6562 = !DILocation(line: 1632, column: 10, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1631, column: 63)
!6564 = !DILocation(line: 1632, column: 16, scope: !6563)
!6565 = !DILocation(line: 1632, column: 8, scope: !6563)
!6566 = !DILocation(line: 1633, column: 7, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6563, file: !3, line: 1633, column: 7)
!6568 = !DILocation(line: 1633, column: 13, scope: !6567)
!6569 = !DILocation(line: 1633, column: 18, scope: !6567)
!6570 = !DILocation(line: 1633, column: 7, scope: !6563)
!6571 = !DILocation(line: 1635, column: 8, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6573, file: !3, line: 1635, column: 8)
!6573 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 1633, column: 28)
!6574 = !DILocation(line: 1635, column: 14, scope: !6572)
!6575 = !DILocation(line: 1635, column: 8, scope: !6573)
!6576 = !DILocation(line: 1636, column: 5, scope: !6572)
!6577 = !DILocation(line: 1636, column: 11, scope: !6572)
!6578 = !DILocation(line: 1636, column: 15, scope: !6572)
!6579 = !DILocation(line: 1636, column: 17, scope: !6572)
!6580 = !DILocation(line: 1637, column: 17, scope: !6573)
!6581 = !DILocation(line: 1637, column: 24, scope: !6573)
!6582 = !DILocation(line: 1637, column: 34, scope: !6573)
!6583 = !DILocation(line: 1637, column: 4, scope: !6573)
!6584 = !DILocation(line: 1638, column: 3, scope: !6573)
!6585 = !DILocation(line: 1639, column: 2, scope: !6563)
!6586 = !DILocation(line: 1631, column: 57, scope: !6560)
!6587 = !DILocation(line: 1631, column: 55, scope: !6560)
!6588 = !DILocation(line: 1631, column: 2, scope: !6560)
!6589 = distinct !{!6589, !6561, !6590}
!6590 = !DILocation(line: 1639, column: 2, scope: !6553)
!6591 = !DILocation(line: 1641, column: 32, scope: !6537)
!6592 = !DILocation(line: 1641, column: 18, scope: !6537)
!6593 = !DILocation(line: 1641, column: 36, scope: !6537)
!6594 = !DILocation(line: 1641, column: 43, scope: !6537)
!6595 = !DILocation(line: 1641, column: 2, scope: !6537)
!6596 = !DILocation(line: 1643, column: 15, scope: !6537)
!6597 = !DILocation(line: 1643, column: 18, scope: !6537)
!6598 = !DILocation(line: 1643, column: 2, scope: !6537)
!6599 = !DILocation(line: 1644, column: 19, scope: !6537)
!6600 = !DILocation(line: 1644, column: 22, scope: !6537)
!6601 = !DILocation(line: 1644, column: 2, scope: !6537)
!6602 = !DILocation(line: 1646, column: 2, scope: !6537)
!6603 = distinct !DISubprogram(name: "NODE_OT_delete_reconnect", scope: !3, file: !3, line: 1692, type: !4, scopeLine: 1693, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6604 = !DILocalVariable(name: "ot", arg: 1, scope: !6603, file: !3, line: 1692, type: !6)
!6605 = !DILocation(line: 1692, column: 47, scope: !6603)
!6606 = !DILocation(line: 1695, column: 2, scope: !6603)
!6607 = !DILocation(line: 1695, column: 6, scope: !6603)
!6608 = !DILocation(line: 1695, column: 11, scope: !6603)
!6609 = !DILocation(line: 1696, column: 2, scope: !6603)
!6610 = !DILocation(line: 1696, column: 6, scope: !6603)
!6611 = !DILocation(line: 1696, column: 18, scope: !6603)
!6612 = !DILocation(line: 1697, column: 2, scope: !6603)
!6613 = !DILocation(line: 1697, column: 6, scope: !6603)
!6614 = !DILocation(line: 1697, column: 13, scope: !6603)
!6615 = !DILocation(line: 1700, column: 2, scope: !6603)
!6616 = !DILocation(line: 1700, column: 6, scope: !6603)
!6617 = !DILocation(line: 1700, column: 11, scope: !6603)
!6618 = !DILocation(line: 1701, column: 2, scope: !6603)
!6619 = !DILocation(line: 1701, column: 6, scope: !6603)
!6620 = !DILocation(line: 1701, column: 11, scope: !6603)
!6621 = !DILocation(line: 1704, column: 2, scope: !6603)
!6622 = !DILocation(line: 1704, column: 6, scope: !6603)
!6623 = !DILocation(line: 1704, column: 11, scope: !6603)
!6624 = !DILocation(line: 1705, column: 1, scope: !6603)
!6625 = distinct !DISubprogram(name: "node_delete_reconnect_exec", scope: !3, file: !3, line: 1665, type: !5544, scopeLine: 1666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6626 = !DILocalVariable(name: "C", arg: 1, scope: !6625, file: !3, line: 1665, type: !3399)
!6627 = !DILocation(line: 1665, column: 49, scope: !6625)
!6628 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6625, file: !3, line: 1665, type: !4682)
!6629 = !DILocation(line: 1665, column: 64, scope: !6625)
!6630 = !DILocalVariable(name: "snode", scope: !6625, file: !3, line: 1667, type: !3213)
!6631 = !DILocation(line: 1667, column: 13, scope: !6625)
!6632 = !DILocation(line: 1667, column: 39, scope: !6625)
!6633 = !DILocation(line: 1667, column: 21, scope: !6625)
!6634 = !DILocalVariable(name: "node", scope: !6625, file: !3, line: 1668, type: !499)
!6635 = !DILocation(line: 1668, column: 9, scope: !6625)
!6636 = !DILocalVariable(name: "next", scope: !6625, file: !3, line: 1668, type: !499)
!6637 = !DILocation(line: 1668, column: 16, scope: !6625)
!6638 = !DILocation(line: 1670, column: 23, scope: !6625)
!6639 = !DILocation(line: 1670, column: 2, scope: !6625)
!6640 = !DILocation(line: 1672, column: 14, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 1672, column: 2)
!6642 = !DILocation(line: 1672, column: 21, scope: !6641)
!6643 = !DILocation(line: 1672, column: 31, scope: !6641)
!6644 = !DILocation(line: 1672, column: 37, scope: !6641)
!6645 = !DILocation(line: 1672, column: 12, scope: !6641)
!6646 = !DILocation(line: 1672, column: 7, scope: !6641)
!6647 = !DILocation(line: 1672, column: 44, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 1672, column: 2)
!6649 = !DILocation(line: 1672, column: 2, scope: !6641)
!6650 = !DILocation(line: 1673, column: 10, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6648, file: !3, line: 1672, column: 63)
!6652 = !DILocation(line: 1673, column: 16, scope: !6651)
!6653 = !DILocation(line: 1673, column: 8, scope: !6651)
!6654 = !DILocation(line: 1674, column: 7, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 1674, column: 7)
!6656 = !DILocation(line: 1674, column: 13, scope: !6655)
!6657 = !DILocation(line: 1674, column: 18, scope: !6655)
!6658 = !DILocation(line: 1674, column: 7, scope: !6651)
!6659 = !DILocation(line: 1675, column: 23, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 1674, column: 28)
!6661 = !DILocation(line: 1675, column: 30, scope: !6660)
!6662 = !DILocation(line: 1675, column: 40, scope: !6660)
!6663 = !DILocation(line: 1675, column: 4, scope: !6660)
!6664 = !DILocation(line: 1678, column: 8, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6660, file: !3, line: 1678, column: 8)
!6666 = !DILocation(line: 1678, column: 14, scope: !6665)
!6667 = !DILocation(line: 1678, column: 8, scope: !6660)
!6668 = !DILocation(line: 1679, column: 5, scope: !6665)
!6669 = !DILocation(line: 1679, column: 11, scope: !6665)
!6670 = !DILocation(line: 1679, column: 15, scope: !6665)
!6671 = !DILocation(line: 1679, column: 17, scope: !6665)
!6672 = !DILocation(line: 1680, column: 17, scope: !6660)
!6673 = !DILocation(line: 1680, column: 24, scope: !6660)
!6674 = !DILocation(line: 1680, column: 34, scope: !6660)
!6675 = !DILocation(line: 1680, column: 4, scope: !6660)
!6676 = !DILocation(line: 1681, column: 3, scope: !6660)
!6677 = !DILocation(line: 1682, column: 2, scope: !6651)
!6678 = !DILocation(line: 1672, column: 57, scope: !6648)
!6679 = !DILocation(line: 1672, column: 55, scope: !6648)
!6680 = !DILocation(line: 1672, column: 2, scope: !6648)
!6681 = distinct !{!6681, !6649, !6682}
!6682 = !DILocation(line: 1682, column: 2, scope: !6641)
!6683 = !DILocation(line: 1684, column: 32, scope: !6625)
!6684 = !DILocation(line: 1684, column: 18, scope: !6625)
!6685 = !DILocation(line: 1684, column: 36, scope: !6625)
!6686 = !DILocation(line: 1684, column: 43, scope: !6625)
!6687 = !DILocation(line: 1684, column: 2, scope: !6625)
!6688 = !DILocation(line: 1686, column: 15, scope: !6625)
!6689 = !DILocation(line: 1686, column: 18, scope: !6625)
!6690 = !DILocation(line: 1686, column: 2, scope: !6625)
!6691 = !DILocation(line: 1687, column: 19, scope: !6625)
!6692 = !DILocation(line: 1687, column: 22, scope: !6625)
!6693 = !DILocation(line: 1687, column: 2, scope: !6625)
!6694 = !DILocation(line: 1689, column: 2, scope: !6625)
!6695 = distinct !DISubprogram(name: "NODE_OT_output_file_add_socket", scope: !3, file: !3, line: 1739, type: !4, scopeLine: 1740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6696 = !DILocalVariable(name: "ot", arg: 1, scope: !6695, file: !3, line: 1739, type: !6)
!6697 = !DILocation(line: 1739, column: 53, scope: !6695)
!6698 = !DILocation(line: 1742, column: 2, scope: !6695)
!6699 = !DILocation(line: 1742, column: 6, scope: !6695)
!6700 = !DILocation(line: 1742, column: 11, scope: !6695)
!6701 = !DILocation(line: 1743, column: 2, scope: !6695)
!6702 = !DILocation(line: 1743, column: 6, scope: !6695)
!6703 = !DILocation(line: 1743, column: 18, scope: !6695)
!6704 = !DILocation(line: 1744, column: 2, scope: !6695)
!6705 = !DILocation(line: 1744, column: 6, scope: !6695)
!6706 = !DILocation(line: 1744, column: 13, scope: !6695)
!6707 = !DILocation(line: 1747, column: 2, scope: !6695)
!6708 = !DILocation(line: 1747, column: 6, scope: !6695)
!6709 = !DILocation(line: 1747, column: 11, scope: !6695)
!6710 = !DILocation(line: 1748, column: 2, scope: !6695)
!6711 = !DILocation(line: 1748, column: 6, scope: !6695)
!6712 = !DILocation(line: 1748, column: 11, scope: !6695)
!6713 = !DILocation(line: 1751, column: 2, scope: !6695)
!6714 = !DILocation(line: 1751, column: 6, scope: !6695)
!6715 = !DILocation(line: 1751, column: 11, scope: !6695)
!6716 = !DILocation(line: 1753, column: 17, scope: !6695)
!6717 = !DILocation(line: 1753, column: 21, scope: !6695)
!6718 = !DILocation(line: 1753, column: 2, scope: !6695)
!6719 = !DILocation(line: 1754, column: 1, scope: !6695)
!6720 = distinct !DISubprogram(name: "node_output_file_add_socket_exec", scope: !3, file: !3, line: 1710, type: !5544, scopeLine: 1711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6721 = !DILocalVariable(name: "C", arg: 1, scope: !6720, file: !3, line: 1710, type: !3399)
!6722 = !DILocation(line: 1710, column: 55, scope: !6720)
!6723 = !DILocalVariable(name: "op", arg: 2, scope: !6720, file: !3, line: 1710, type: !4682)
!6724 = !DILocation(line: 1710, column: 70, scope: !6720)
!6725 = !DILocalVariable(name: "scene", scope: !6720, file: !3, line: 1712, type: !2869)
!6726 = !DILocation(line: 1712, column: 9, scope: !6720)
!6727 = !DILocation(line: 1712, column: 32, scope: !6720)
!6728 = !DILocation(line: 1712, column: 17, scope: !6720)
!6729 = !DILocalVariable(name: "snode", scope: !6720, file: !3, line: 1713, type: !3213)
!6730 = !DILocation(line: 1713, column: 13, scope: !6720)
!6731 = !DILocation(line: 1713, column: 39, scope: !6720)
!6732 = !DILocation(line: 1713, column: 21, scope: !6720)
!6733 = !DILocalVariable(name: "ptr", scope: !6720, file: !3, line: 1714, type: !3841)
!6734 = !DILocation(line: 1714, column: 13, scope: !6720)
!6735 = !DILocation(line: 1714, column: 40, scope: !6720)
!6736 = !DILocation(line: 1714, column: 19, scope: !6720)
!6737 = !DILocalVariable(name: "ntree", scope: !6720, file: !3, line: 1715, type: !2867)
!6738 = !DILocation(line: 1715, column: 13, scope: !6720)
!6739 = !DILocalVariable(name: "node", scope: !6720, file: !3, line: 1716, type: !499)
!6740 = !DILocation(line: 1716, column: 9, scope: !6720)
!6741 = !DILocalVariable(name: "file_path", scope: !6720, file: !3, line: 1717, type: !33)
!6742 = !DILocation(line: 1717, column: 7, scope: !6720)
!6743 = !DILocation(line: 1719, column: 10, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 1719, column: 6)
!6745 = !DILocation(line: 1719, column: 6, scope: !6744)
!6746 = !DILocation(line: 1719, column: 6, scope: !6720)
!6747 = !DILocation(line: 1720, column: 14, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 1719, column: 16)
!6749 = !DILocation(line: 1720, column: 10, scope: !6748)
!6750 = !DILocation(line: 1720, column: 8, scope: !6748)
!6751 = !DILocation(line: 1721, column: 15, scope: !6748)
!6752 = !DILocation(line: 1721, column: 18, scope: !6748)
!6753 = !DILocation(line: 1721, column: 11, scope: !6748)
!6754 = !DILocation(line: 1721, column: 9, scope: !6748)
!6755 = !DILocation(line: 1722, column: 2, scope: !6748)
!6756 = !DILocation(line: 1723, column: 11, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 1723, column: 11)
!6758 = !DILocation(line: 1723, column: 17, scope: !6757)
!6759 = !DILocation(line: 1723, column: 20, scope: !6757)
!6760 = !DILocation(line: 1723, column: 27, scope: !6757)
!6761 = !DILocation(line: 1723, column: 11, scope: !6744)
!6762 = !DILocation(line: 1724, column: 11, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 1723, column: 37)
!6764 = !DILocation(line: 1724, column: 18, scope: !6763)
!6765 = !DILocation(line: 1724, column: 9, scope: !6763)
!6766 = !DILocation(line: 1725, column: 24, scope: !6763)
!6767 = !DILocation(line: 1725, column: 31, scope: !6763)
!6768 = !DILocation(line: 1725, column: 10, scope: !6763)
!6769 = !DILocation(line: 1725, column: 8, scope: !6763)
!6770 = !DILocation(line: 1726, column: 2, scope: !6763)
!6771 = !DILocation(line: 1728, column: 7, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 1728, column: 6)
!6773 = !DILocation(line: 1728, column: 12, scope: !6772)
!6774 = !DILocation(line: 1728, column: 15, scope: !6772)
!6775 = !DILocation(line: 1728, column: 21, scope: !6772)
!6776 = !DILocation(line: 1728, column: 26, scope: !6772)
!6777 = !DILocation(line: 1728, column: 6, scope: !6720)
!6778 = !DILocation(line: 1729, column: 3, scope: !6772)
!6779 = !DILocation(line: 1731, column: 17, scope: !6720)
!6780 = !DILocation(line: 1731, column: 21, scope: !6720)
!6781 = !DILocation(line: 1731, column: 39, scope: !6720)
!6782 = !DILocation(line: 1731, column: 2, scope: !6720)
!6783 = !DILocation(line: 1732, column: 35, scope: !6720)
!6784 = !DILocation(line: 1732, column: 42, scope: !6720)
!6785 = !DILocation(line: 1732, column: 48, scope: !6720)
!6786 = !DILocation(line: 1732, column: 60, scope: !6720)
!6787 = !DILocation(line: 1732, column: 67, scope: !6720)
!6788 = !DILocation(line: 1732, column: 69, scope: !6720)
!6789 = !DILocation(line: 1732, column: 2, scope: !6720)
!6790 = !DILocation(line: 1734, column: 15, scope: !6720)
!6791 = !DILocation(line: 1734, column: 18, scope: !6720)
!6792 = !DILocation(line: 1734, column: 2, scope: !6720)
!6793 = !DILocation(line: 1736, column: 2, scope: !6720)
!6794 = !DILocation(line: 1737, column: 1, scope: !6720)
!6795 = distinct !DISubprogram(name: "NODE_OT_output_file_remove_active_socket", scope: !3, file: !3, line: 1785, type: !4, scopeLine: 1786, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6796 = !DILocalVariable(name: "ot", arg: 1, scope: !6795, file: !3, line: 1785, type: !6)
!6797 = !DILocation(line: 1785, column: 63, scope: !6795)
!6798 = !DILocation(line: 1788, column: 2, scope: !6795)
!6799 = !DILocation(line: 1788, column: 6, scope: !6795)
!6800 = !DILocation(line: 1788, column: 11, scope: !6795)
!6801 = !DILocation(line: 1789, column: 2, scope: !6795)
!6802 = !DILocation(line: 1789, column: 6, scope: !6795)
!6803 = !DILocation(line: 1789, column: 18, scope: !6795)
!6804 = !DILocation(line: 1790, column: 2, scope: !6795)
!6805 = !DILocation(line: 1790, column: 6, scope: !6795)
!6806 = !DILocation(line: 1790, column: 13, scope: !6795)
!6807 = !DILocation(line: 1793, column: 2, scope: !6795)
!6808 = !DILocation(line: 1793, column: 6, scope: !6795)
!6809 = !DILocation(line: 1793, column: 11, scope: !6795)
!6810 = !DILocation(line: 1794, column: 2, scope: !6795)
!6811 = !DILocation(line: 1794, column: 6, scope: !6795)
!6812 = !DILocation(line: 1794, column: 11, scope: !6795)
!6813 = !DILocation(line: 1797, column: 2, scope: !6795)
!6814 = !DILocation(line: 1797, column: 6, scope: !6795)
!6815 = !DILocation(line: 1797, column: 11, scope: !6795)
!6816 = !DILocation(line: 1798, column: 1, scope: !6795)
!6817 = distinct !DISubprogram(name: "node_output_file_remove_active_socket_exec", scope: !3, file: !3, line: 1758, type: !5544, scopeLine: 1759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6818 = !DILocalVariable(name: "C", arg: 1, scope: !6817, file: !3, line: 1758, type: !3399)
!6819 = !DILocation(line: 1758, column: 65, scope: !6817)
!6820 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6817, file: !3, line: 1758, type: !4682)
!6821 = !DILocation(line: 1758, column: 80, scope: !6817)
!6822 = !DILocalVariable(name: "snode", scope: !6817, file: !3, line: 1760, type: !3213)
!6823 = !DILocation(line: 1760, column: 13, scope: !6817)
!6824 = !DILocation(line: 1760, column: 39, scope: !6817)
!6825 = !DILocation(line: 1760, column: 21, scope: !6817)
!6826 = !DILocalVariable(name: "ptr", scope: !6817, file: !3, line: 1761, type: !3841)
!6827 = !DILocation(line: 1761, column: 13, scope: !6817)
!6828 = !DILocation(line: 1761, column: 40, scope: !6817)
!6829 = !DILocation(line: 1761, column: 19, scope: !6817)
!6830 = !DILocalVariable(name: "ntree", scope: !6817, file: !3, line: 1762, type: !2867)
!6831 = !DILocation(line: 1762, column: 13, scope: !6817)
!6832 = !DILocalVariable(name: "node", scope: !6817, file: !3, line: 1763, type: !499)
!6833 = !DILocation(line: 1763, column: 9, scope: !6817)
!6834 = !DILocation(line: 1765, column: 10, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 1765, column: 6)
!6836 = !DILocation(line: 1765, column: 6, scope: !6835)
!6837 = !DILocation(line: 1765, column: 6, scope: !6817)
!6838 = !DILocation(line: 1766, column: 14, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 1765, column: 16)
!6840 = !DILocation(line: 1766, column: 10, scope: !6839)
!6841 = !DILocation(line: 1766, column: 8, scope: !6839)
!6842 = !DILocation(line: 1767, column: 15, scope: !6839)
!6843 = !DILocation(line: 1767, column: 18, scope: !6839)
!6844 = !DILocation(line: 1767, column: 11, scope: !6839)
!6845 = !DILocation(line: 1767, column: 9, scope: !6839)
!6846 = !DILocation(line: 1768, column: 2, scope: !6839)
!6847 = !DILocation(line: 1769, column: 11, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 1769, column: 11)
!6849 = !DILocation(line: 1769, column: 17, scope: !6848)
!6850 = !DILocation(line: 1769, column: 20, scope: !6848)
!6851 = !DILocation(line: 1769, column: 27, scope: !6848)
!6852 = !DILocation(line: 1769, column: 11, scope: !6835)
!6853 = !DILocation(line: 1770, column: 11, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 1769, column: 37)
!6855 = !DILocation(line: 1770, column: 18, scope: !6854)
!6856 = !DILocation(line: 1770, column: 9, scope: !6854)
!6857 = !DILocation(line: 1771, column: 24, scope: !6854)
!6858 = !DILocation(line: 1771, column: 31, scope: !6854)
!6859 = !DILocation(line: 1771, column: 10, scope: !6854)
!6860 = !DILocation(line: 1771, column: 8, scope: !6854)
!6861 = !DILocation(line: 1772, column: 2, scope: !6854)
!6862 = !DILocation(line: 1774, column: 7, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 1774, column: 6)
!6864 = !DILocation(line: 1774, column: 12, scope: !6863)
!6865 = !DILocation(line: 1774, column: 15, scope: !6863)
!6866 = !DILocation(line: 1774, column: 21, scope: !6863)
!6867 = !DILocation(line: 1774, column: 26, scope: !6863)
!6868 = !DILocation(line: 1774, column: 6, scope: !6817)
!6869 = !DILocation(line: 1775, column: 3, scope: !6863)
!6870 = !DILocation(line: 1777, column: 49, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 1777, column: 6)
!6872 = !DILocation(line: 1777, column: 56, scope: !6871)
!6873 = !DILocation(line: 1777, column: 7, scope: !6871)
!6874 = !DILocation(line: 1777, column: 6, scope: !6817)
!6875 = !DILocation(line: 1778, column: 3, scope: !6871)
!6876 = !DILocation(line: 1780, column: 15, scope: !6817)
!6877 = !DILocation(line: 1780, column: 18, scope: !6817)
!6878 = !DILocation(line: 1780, column: 2, scope: !6817)
!6879 = !DILocation(line: 1782, column: 2, scope: !6817)
!6880 = !DILocation(line: 1783, column: 1, scope: !6817)
!6881 = !DILocalVariable(name: "ot", arg: 1, scope: !2, file: !3, line: 1849, type: !6)
!6882 = !DILocation(line: 1849, column: 61, scope: !2)
!6883 = !DILocation(line: 1858, column: 2, scope: !2)
!6884 = !DILocation(line: 1858, column: 6, scope: !2)
!6885 = !DILocation(line: 1858, column: 11, scope: !2)
!6886 = !DILocation(line: 1859, column: 2, scope: !2)
!6887 = !DILocation(line: 1859, column: 6, scope: !2)
!6888 = !DILocation(line: 1859, column: 18, scope: !2)
!6889 = !DILocation(line: 1860, column: 2, scope: !2)
!6890 = !DILocation(line: 1860, column: 6, scope: !2)
!6891 = !DILocation(line: 1860, column: 13, scope: !2)
!6892 = !DILocation(line: 1863, column: 2, scope: !2)
!6893 = !DILocation(line: 1863, column: 6, scope: !2)
!6894 = !DILocation(line: 1863, column: 11, scope: !2)
!6895 = !DILocation(line: 1864, column: 2, scope: !2)
!6896 = !DILocation(line: 1864, column: 6, scope: !2)
!6897 = !DILocation(line: 1864, column: 11, scope: !2)
!6898 = !DILocation(line: 1867, column: 2, scope: !2)
!6899 = !DILocation(line: 1867, column: 6, scope: !2)
!6900 = !DILocation(line: 1867, column: 11, scope: !2)
!6901 = !DILocation(line: 1869, column: 15, scope: !2)
!6902 = !DILocation(line: 1869, column: 19, scope: !2)
!6903 = !DILocation(line: 1869, column: 2, scope: !2)
!6904 = !DILocation(line: 1870, column: 1, scope: !2)
!6905 = distinct !DISubprogram(name: "node_output_file_move_active_socket_exec", scope: !3, file: !3, line: 1802, type: !5544, scopeLine: 1803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!6906 = !DILocalVariable(name: "C", arg: 1, scope: !6905, file: !3, line: 1802, type: !3399)
!6907 = !DILocation(line: 1802, column: 63, scope: !6905)
!6908 = !DILocalVariable(name: "op", arg: 2, scope: !6905, file: !3, line: 1802, type: !4682)
!6909 = !DILocation(line: 1802, column: 78, scope: !6905)
!6910 = !DILocalVariable(name: "snode", scope: !6905, file: !3, line: 1804, type: !3213)
!6911 = !DILocation(line: 1804, column: 13, scope: !6905)
!6912 = !DILocation(line: 1804, column: 39, scope: !6905)
!6913 = !DILocation(line: 1804, column: 21, scope: !6905)
!6914 = !DILocalVariable(name: "ptr", scope: !6905, file: !3, line: 1805, type: !3841)
!6915 = !DILocation(line: 1805, column: 13, scope: !6905)
!6916 = !DILocation(line: 1805, column: 40, scope: !6905)
!6917 = !DILocation(line: 1805, column: 19, scope: !6905)
!6918 = !DILocalVariable(name: "node", scope: !6905, file: !3, line: 1806, type: !499)
!6919 = !DILocation(line: 1806, column: 9, scope: !6905)
!6920 = !DILocalVariable(name: "nimf", scope: !6905, file: !3, line: 1807, type: !6921)
!6921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6922, size: 64)
!6922 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeImageMultiFile", file: !83, line: 610, baseType: !6923)
!6923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NodeImageMultiFile", file: !83, line: 604, size: 10304, elements: !6924)
!6924 = !{!6925, !6926, !6928, !6929, !6930, !6931}
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "base_path", scope: !6923, file: !83, line: 605, baseType: !131, size: 8192)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !6923, file: !83, line: 606, baseType: !6927, size: 1984, offset: 8192)
!6927 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageFormatData", file: !155, line: 292, baseType: !2102)
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !6923, file: !83, line: 607, baseType: !22, size: 32, offset: 10176)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !6923, file: !83, line: 607, baseType: !22, size: 32, offset: 10208)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "active_input", scope: !6923, file: !83, line: 608, baseType: !22, size: 32, offset: 10240)
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6923, file: !83, line: 609, baseType: !22, size: 32, offset: 10272)
!6932 = !DILocation(line: 1807, column: 22, scope: !6905)
!6933 = !DILocalVariable(name: "sock", scope: !6905, file: !3, line: 1808, type: !503)
!6934 = !DILocation(line: 1808, column: 15, scope: !6905)
!6935 = !DILocalVariable(name: "direction", scope: !6905, file: !3, line: 1809, type: !22)
!6936 = !DILocation(line: 1809, column: 6, scope: !6905)
!6937 = !DILocation(line: 1811, column: 10, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 1811, column: 6)
!6939 = !DILocation(line: 1811, column: 6, scope: !6938)
!6940 = !DILocation(line: 1811, column: 6, scope: !6905)
!6941 = !DILocation(line: 1812, column: 14, scope: !6938)
!6942 = !DILocation(line: 1812, column: 10, scope: !6938)
!6943 = !DILocation(line: 1812, column: 8, scope: !6938)
!6944 = !DILocation(line: 1812, column: 3, scope: !6938)
!6945 = !DILocation(line: 1813, column: 11, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6938, file: !3, line: 1813, column: 11)
!6947 = !DILocation(line: 1813, column: 17, scope: !6946)
!6948 = !DILocation(line: 1813, column: 20, scope: !6946)
!6949 = !DILocation(line: 1813, column: 27, scope: !6946)
!6950 = !DILocation(line: 1813, column: 11, scope: !6938)
!6951 = !DILocation(line: 1814, column: 24, scope: !6946)
!6952 = !DILocation(line: 1814, column: 31, scope: !6946)
!6953 = !DILocation(line: 1814, column: 10, scope: !6946)
!6954 = !DILocation(line: 1814, column: 8, scope: !6946)
!6955 = !DILocation(line: 1814, column: 3, scope: !6946)
!6956 = !DILocation(line: 1816, column: 7, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 1816, column: 6)
!6958 = !DILocation(line: 1816, column: 12, scope: !6957)
!6959 = !DILocation(line: 1816, column: 15, scope: !6957)
!6960 = !DILocation(line: 1816, column: 21, scope: !6957)
!6961 = !DILocation(line: 1816, column: 26, scope: !6957)
!6962 = !DILocation(line: 1816, column: 6, scope: !6905)
!6963 = !DILocation(line: 1817, column: 3, scope: !6957)
!6964 = !DILocation(line: 1819, column: 9, scope: !6905)
!6965 = !DILocation(line: 1819, column: 15, scope: !6905)
!6966 = !DILocation(line: 1819, column: 7, scope: !6905)
!6967 = !DILocation(line: 1821, column: 23, scope: !6905)
!6968 = !DILocation(line: 1821, column: 29, scope: !6905)
!6969 = !DILocation(line: 1821, column: 37, scope: !6905)
!6970 = !DILocation(line: 1821, column: 43, scope: !6905)
!6971 = !DILocation(line: 1821, column: 9, scope: !6905)
!6972 = !DILocation(line: 1821, column: 7, scope: !6905)
!6973 = !DILocation(line: 1822, column: 7, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 1822, column: 6)
!6975 = !DILocation(line: 1822, column: 6, scope: !6905)
!6976 = !DILocation(line: 1823, column: 3, scope: !6974)
!6977 = !DILocation(line: 1825, column: 27, scope: !6905)
!6978 = !DILocation(line: 1825, column: 31, scope: !6905)
!6979 = !DILocation(line: 1825, column: 14, scope: !6905)
!6980 = !DILocation(line: 1825, column: 12, scope: !6905)
!6981 = !DILocation(line: 1827, column: 6, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 1827, column: 6)
!6983 = !DILocation(line: 1827, column: 16, scope: !6982)
!6984 = !DILocation(line: 1827, column: 6, scope: !6905)
!6985 = !DILocalVariable(name: "before", scope: !6986, file: !3, line: 1828, type: !503)
!6986 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 1827, column: 22)
!6987 = !DILocation(line: 1828, column: 16, scope: !6986)
!6988 = !DILocation(line: 1828, column: 25, scope: !6986)
!6989 = !DILocation(line: 1828, column: 31, scope: !6986)
!6990 = !DILocation(line: 1829, column: 8, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6986, file: !3, line: 1829, column: 7)
!6992 = !DILocation(line: 1829, column: 7, scope: !6986)
!6993 = !DILocation(line: 1830, column: 4, scope: !6991)
!6994 = !DILocation(line: 1831, column: 16, scope: !6986)
!6995 = !DILocation(line: 1831, column: 22, scope: !6986)
!6996 = !DILocation(line: 1831, column: 30, scope: !6986)
!6997 = !DILocation(line: 1831, column: 3, scope: !6986)
!6998 = !DILocation(line: 1832, column: 25, scope: !6986)
!6999 = !DILocation(line: 1832, column: 31, scope: !6986)
!7000 = !DILocation(line: 1832, column: 39, scope: !6986)
!7001 = !DILocation(line: 1832, column: 47, scope: !6986)
!7002 = !DILocation(line: 1832, column: 3, scope: !6986)
!7003 = !DILocation(line: 1833, column: 3, scope: !6986)
!7004 = !DILocation(line: 1833, column: 9, scope: !6986)
!7005 = !DILocation(line: 1833, column: 21, scope: !6986)
!7006 = !DILocation(line: 1834, column: 2, scope: !6986)
!7007 = !DILocalVariable(name: "after", scope: !7008, file: !3, line: 1836, type: !503)
!7008 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 1835, column: 7)
!7009 = !DILocation(line: 1836, column: 16, scope: !7008)
!7010 = !DILocation(line: 1836, column: 24, scope: !7008)
!7011 = !DILocation(line: 1836, column: 30, scope: !7008)
!7012 = !DILocation(line: 1837, column: 8, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 1837, column: 7)
!7014 = !DILocation(line: 1837, column: 7, scope: !7008)
!7015 = !DILocation(line: 1838, column: 4, scope: !7013)
!7016 = !DILocation(line: 1839, column: 16, scope: !7008)
!7017 = !DILocation(line: 1839, column: 22, scope: !7008)
!7018 = !DILocation(line: 1839, column: 30, scope: !7008)
!7019 = !DILocation(line: 1839, column: 3, scope: !7008)
!7020 = !DILocation(line: 1840, column: 24, scope: !7008)
!7021 = !DILocation(line: 1840, column: 30, scope: !7008)
!7022 = !DILocation(line: 1840, column: 38, scope: !7008)
!7023 = !DILocation(line: 1840, column: 45, scope: !7008)
!7024 = !DILocation(line: 1840, column: 3, scope: !7008)
!7025 = !DILocation(line: 1841, column: 3, scope: !7008)
!7026 = !DILocation(line: 1841, column: 9, scope: !7008)
!7027 = !DILocation(line: 1841, column: 21, scope: !7008)
!7028 = !DILocation(line: 1844, column: 15, scope: !6905)
!7029 = !DILocation(line: 1844, column: 18, scope: !6905)
!7030 = !DILocation(line: 1844, column: 2, scope: !6905)
!7031 = !DILocation(line: 1846, column: 2, scope: !6905)
!7032 = !DILocation(line: 1847, column: 1, scope: !6905)
!7033 = distinct !DISubprogram(name: "NODE_OT_node_copy_color", scope: !3, file: !3, line: 1903, type: !4, scopeLine: 1904, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!7034 = !DILocalVariable(name: "ot", arg: 1, scope: !7033, file: !3, line: 1903, type: !6)
!7035 = !DILocation(line: 1903, column: 46, scope: !7033)
!7036 = !DILocation(line: 1906, column: 2, scope: !7033)
!7037 = !DILocation(line: 1906, column: 6, scope: !7033)
!7038 = !DILocation(line: 1906, column: 11, scope: !7033)
!7039 = !DILocation(line: 1907, column: 2, scope: !7033)
!7040 = !DILocation(line: 1907, column: 6, scope: !7033)
!7041 = !DILocation(line: 1907, column: 18, scope: !7033)
!7042 = !DILocation(line: 1908, column: 2, scope: !7033)
!7043 = !DILocation(line: 1908, column: 6, scope: !7033)
!7044 = !DILocation(line: 1908, column: 13, scope: !7033)
!7045 = !DILocation(line: 1911, column: 2, scope: !7033)
!7046 = !DILocation(line: 1911, column: 6, scope: !7033)
!7047 = !DILocation(line: 1911, column: 11, scope: !7033)
!7048 = !DILocation(line: 1912, column: 2, scope: !7033)
!7049 = !DILocation(line: 1912, column: 6, scope: !7033)
!7050 = !DILocation(line: 1912, column: 11, scope: !7033)
!7051 = !DILocation(line: 1915, column: 2, scope: !7033)
!7052 = !DILocation(line: 1915, column: 6, scope: !7033)
!7053 = !DILocation(line: 1915, column: 11, scope: !7033)
!7054 = !DILocation(line: 1916, column: 1, scope: !7033)
!7055 = distinct !DISubprogram(name: "node_copy_color_exec", scope: !3, file: !3, line: 1874, type: !5544, scopeLine: 1875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!7056 = !DILocalVariable(name: "C", arg: 1, scope: !7055, file: !3, line: 1874, type: !3399)
!7057 = !DILocation(line: 1874, column: 43, scope: !7055)
!7058 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7055, file: !3, line: 1874, type: !4682)
!7059 = !DILocation(line: 1874, column: 58, scope: !7055)
!7060 = !DILocalVariable(name: "snode", scope: !7055, file: !3, line: 1876, type: !3213)
!7061 = !DILocation(line: 1876, column: 13, scope: !7055)
!7062 = !DILocation(line: 1876, column: 39, scope: !7055)
!7063 = !DILocation(line: 1876, column: 21, scope: !7055)
!7064 = !DILocalVariable(name: "ntree", scope: !7055, file: !3, line: 1877, type: !2867)
!7065 = !DILocation(line: 1877, column: 13, scope: !7055)
!7066 = !DILocation(line: 1877, column: 21, scope: !7055)
!7067 = !DILocation(line: 1877, column: 28, scope: !7055)
!7068 = !DILocalVariable(name: "node", scope: !7055, file: !3, line: 1878, type: !499)
!7069 = !DILocation(line: 1878, column: 9, scope: !7055)
!7070 = !DILocalVariable(name: "tnode", scope: !7055, file: !3, line: 1878, type: !499)
!7071 = !DILocation(line: 1878, column: 16, scope: !7055)
!7072 = !DILocation(line: 1880, column: 7, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 1880, column: 6)
!7074 = !DILocation(line: 1880, column: 6, scope: !7055)
!7075 = !DILocation(line: 1881, column: 3, scope: !7073)
!7076 = !DILocation(line: 1882, column: 23, scope: !7055)
!7077 = !DILocation(line: 1882, column: 9, scope: !7055)
!7078 = !DILocation(line: 1882, column: 7, scope: !7055)
!7079 = !DILocation(line: 1883, column: 7, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 1883, column: 6)
!7081 = !DILocation(line: 1883, column: 6, scope: !7055)
!7082 = !DILocation(line: 1884, column: 3, scope: !7080)
!7083 = !DILocation(line: 1886, column: 15, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 1886, column: 2)
!7085 = !DILocation(line: 1886, column: 22, scope: !7084)
!7086 = !DILocation(line: 1886, column: 28, scope: !7084)
!7087 = !DILocation(line: 1886, column: 13, scope: !7084)
!7088 = !DILocation(line: 1886, column: 7, scope: !7084)
!7089 = !DILocation(line: 1886, column: 35, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 1886, column: 2)
!7091 = !DILocation(line: 1886, column: 2, scope: !7084)
!7092 = !DILocation(line: 1887, column: 7, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !3, line: 1887, column: 7)
!7094 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 1886, column: 63)
!7095 = !DILocation(line: 1887, column: 14, scope: !7093)
!7096 = !DILocation(line: 1887, column: 19, scope: !7093)
!7097 = !DILocation(line: 1887, column: 33, scope: !7093)
!7098 = !DILocation(line: 1887, column: 36, scope: !7093)
!7099 = !DILocation(line: 1887, column: 45, scope: !7093)
!7100 = !DILocation(line: 1887, column: 42, scope: !7093)
!7101 = !DILocation(line: 1887, column: 7, scope: !7094)
!7102 = !DILocation(line: 1888, column: 8, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7104, file: !3, line: 1888, column: 8)
!7104 = distinct !DILexicalBlock(scope: !7093, file: !3, line: 1887, column: 51)
!7105 = !DILocation(line: 1888, column: 14, scope: !7103)
!7106 = !DILocation(line: 1888, column: 19, scope: !7103)
!7107 = !DILocation(line: 1888, column: 8, scope: !7104)
!7108 = !DILocation(line: 1889, column: 5, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7103, file: !3, line: 1888, column: 40)
!7110 = !DILocation(line: 1889, column: 12, scope: !7109)
!7111 = !DILocation(line: 1889, column: 17, scope: !7109)
!7112 = !DILocation(line: 1890, column: 16, scope: !7109)
!7113 = !DILocation(line: 1890, column: 23, scope: !7109)
!7114 = !DILocation(line: 1890, column: 30, scope: !7109)
!7115 = !DILocation(line: 1890, column: 36, scope: !7109)
!7116 = !DILocation(line: 1890, column: 5, scope: !7109)
!7117 = !DILocation(line: 1891, column: 4, scope: !7109)
!7118 = !DILocation(line: 1893, column: 5, scope: !7103)
!7119 = !DILocation(line: 1893, column: 12, scope: !7103)
!7120 = !DILocation(line: 1893, column: 17, scope: !7103)
!7121 = !DILocation(line: 1894, column: 3, scope: !7104)
!7122 = !DILocation(line: 1895, column: 2, scope: !7094)
!7123 = !DILocation(line: 1886, column: 50, scope: !7090)
!7124 = !DILocation(line: 1886, column: 57, scope: !7090)
!7125 = !DILocation(line: 1886, column: 48, scope: !7090)
!7126 = !DILocation(line: 1886, column: 2, scope: !7090)
!7127 = distinct !{!7127, !7091, !7128}
!7128 = !DILocation(line: 1895, column: 2, scope: !7084)
!7129 = !DILocation(line: 1897, column: 15, scope: !7055)
!7130 = !DILocation(line: 1897, column: 2, scope: !7055)
!7131 = !DILocation(line: 1898, column: 24, scope: !7055)
!7132 = !DILocation(line: 1898, column: 2, scope: !7055)
!7133 = !DILocation(line: 1900, column: 2, scope: !7055)
!7134 = !DILocation(line: 1901, column: 1, scope: !7055)
!7135 = distinct !DISubprogram(name: "NODE_OT_clipboard_copy", scope: !3, file: !3, line: 1980, type: !4, scopeLine: 1981, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!7136 = !DILocalVariable(name: "ot", arg: 1, scope: !7135, file: !3, line: 1980, type: !6)
!7137 = !DILocation(line: 1980, column: 45, scope: !7135)
!7138 = !DILocation(line: 1983, column: 2, scope: !7135)
!7139 = !DILocation(line: 1983, column: 6, scope: !7135)
!7140 = !DILocation(line: 1983, column: 11, scope: !7135)
!7141 = !DILocation(line: 1984, column: 2, scope: !7135)
!7142 = !DILocation(line: 1984, column: 6, scope: !7135)
!7143 = !DILocation(line: 1984, column: 18, scope: !7135)
!7144 = !DILocation(line: 1985, column: 2, scope: !7135)
!7145 = !DILocation(line: 1985, column: 6, scope: !7135)
!7146 = !DILocation(line: 1985, column: 13, scope: !7135)
!7147 = !DILocation(line: 1988, column: 2, scope: !7135)
!7148 = !DILocation(line: 1988, column: 6, scope: !7135)
!7149 = !DILocation(line: 1988, column: 11, scope: !7135)
!7150 = !DILocation(line: 1989, column: 2, scope: !7135)
!7151 = !DILocation(line: 1989, column: 6, scope: !7135)
!7152 = !DILocation(line: 1989, column: 11, scope: !7135)
!7153 = !DILocation(line: 1992, column: 2, scope: !7135)
!7154 = !DILocation(line: 1992, column: 6, scope: !7135)
!7155 = !DILocation(line: 1992, column: 11, scope: !7135)
!7156 = !DILocation(line: 1993, column: 1, scope: !7135)
!7157 = distinct !DISubprogram(name: "node_clipboard_copy_exec", scope: !3, file: !3, line: 1920, type: !5544, scopeLine: 1921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!7158 = !DILocalVariable(name: "C", arg: 1, scope: !7157, file: !3, line: 1920, type: !3399)
!7159 = !DILocation(line: 1920, column: 47, scope: !7157)
!7160 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7157, file: !3, line: 1920, type: !4682)
!7161 = !DILocation(line: 1920, column: 62, scope: !7157)
!7162 = !DILocalVariable(name: "snode", scope: !7157, file: !3, line: 1922, type: !3213)
!7163 = !DILocation(line: 1922, column: 13, scope: !7157)
!7164 = !DILocation(line: 1922, column: 39, scope: !7157)
!7165 = !DILocation(line: 1922, column: 21, scope: !7157)
!7166 = !DILocalVariable(name: "ntree", scope: !7157, file: !3, line: 1923, type: !2867)
!7167 = !DILocation(line: 1923, column: 13, scope: !7157)
!7168 = !DILocation(line: 1923, column: 21, scope: !7157)
!7169 = !DILocation(line: 1923, column: 28, scope: !7157)
!7170 = !DILocalVariable(name: "node", scope: !7157, file: !3, line: 1924, type: !499)
!7171 = !DILocation(line: 1924, column: 9, scope: !7157)
!7172 = !DILocalVariable(name: "link", scope: !7157, file: !3, line: 1925, type: !5565)
!7173 = !DILocation(line: 1925, column: 13, scope: !7157)
!7174 = !DILocalVariable(name: "newlink", scope: !7157, file: !3, line: 1925, type: !5565)
!7175 = !DILocation(line: 1925, column: 20, scope: !7157)
!7176 = !DILocation(line: 1927, column: 23, scope: !7157)
!7177 = !DILocation(line: 1927, column: 2, scope: !7157)
!7178 = !DILocation(line: 1930, column: 2, scope: !7157)
!7179 = !DILocation(line: 1931, column: 26, scope: !7157)
!7180 = !DILocation(line: 1931, column: 2, scope: !7157)
!7181 = !DILocation(line: 1933, column: 14, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1933, column: 2)
!7183 = !DILocation(line: 1933, column: 21, scope: !7182)
!7184 = !DILocation(line: 1933, column: 27, scope: !7182)
!7185 = !DILocation(line: 1933, column: 12, scope: !7182)
!7186 = !DILocation(line: 1933, column: 7, scope: !7182)
!7187 = !DILocation(line: 1933, column: 34, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 1933, column: 2)
!7189 = !DILocation(line: 1933, column: 2, scope: !7182)
!7190 = !DILocation(line: 1934, column: 7, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 1934, column: 7)
!7192 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 1933, column: 59)
!7193 = !DILocation(line: 1934, column: 13, scope: !7191)
!7194 = !DILocation(line: 1934, column: 18, scope: !7191)
!7195 = !DILocation(line: 1934, column: 7, scope: !7192)
!7196 = !DILocalVariable(name: "new_node", scope: !7197, file: !3, line: 1935, type: !499)
!7197 = distinct !DILexicalBlock(scope: !7191, file: !3, line: 1934, column: 28)
!7198 = !DILocation(line: 1935, column: 11, scope: !7197)
!7199 = !DILocation(line: 1936, column: 34, scope: !7197)
!7200 = !DILocation(line: 1936, column: 15, scope: !7197)
!7201 = !DILocation(line: 1936, column: 13, scope: !7197)
!7202 = !DILocation(line: 1937, column: 32, scope: !7197)
!7203 = !DILocation(line: 1937, column: 4, scope: !7197)
!7204 = !DILocation(line: 1938, column: 3, scope: !7197)
!7205 = !DILocation(line: 1939, column: 2, scope: !7192)
!7206 = !DILocation(line: 1933, column: 47, scope: !7188)
!7207 = !DILocation(line: 1933, column: 53, scope: !7188)
!7208 = !DILocation(line: 1933, column: 45, scope: !7188)
!7209 = !DILocation(line: 1933, column: 2, scope: !7188)
!7210 = distinct !{!7210, !7189, !7211}
!7211 = !DILocation(line: 1939, column: 2, scope: !7182)
!7212 = !DILocation(line: 1941, column: 14, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1941, column: 2)
!7214 = !DILocation(line: 1941, column: 21, scope: !7213)
!7215 = !DILocation(line: 1941, column: 27, scope: !7213)
!7216 = !DILocation(line: 1941, column: 12, scope: !7213)
!7217 = !DILocation(line: 1941, column: 7, scope: !7213)
!7218 = !DILocation(line: 1941, column: 34, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7213, file: !3, line: 1941, column: 2)
!7220 = !DILocation(line: 1941, column: 2, scope: !7213)
!7221 = !DILocation(line: 1942, column: 7, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 1942, column: 7)
!7223 = distinct !DILexicalBlock(scope: !7219, file: !3, line: 1941, column: 59)
!7224 = !DILocation(line: 1942, column: 13, scope: !7222)
!7225 = !DILocation(line: 1942, column: 18, scope: !7222)
!7226 = !DILocation(line: 1942, column: 7, scope: !7223)
!7227 = !DILocalVariable(name: "new_node", scope: !7228, file: !3, line: 1943, type: !499)
!7228 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 1942, column: 28)
!7229 = !DILocation(line: 1943, column: 11, scope: !7228)
!7230 = !DILocation(line: 1943, column: 22, scope: !7228)
!7231 = !DILocation(line: 1943, column: 28, scope: !7228)
!7232 = !DILocation(line: 1946, column: 8, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7228, file: !3, line: 1946, column: 8)
!7234 = !DILocation(line: 1946, column: 18, scope: !7233)
!7235 = !DILocation(line: 1946, column: 8, scope: !7228)
!7236 = !DILocation(line: 1948, column: 9, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 1948, column: 9)
!7238 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 1946, column: 26)
!7239 = !DILocation(line: 1948, column: 19, scope: !7237)
!7240 = !DILocation(line: 1948, column: 27, scope: !7237)
!7241 = !DILocation(line: 1948, column: 32, scope: !7237)
!7242 = !DILocation(line: 1948, column: 9, scope: !7238)
!7243 = !DILocation(line: 1949, column: 25, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 1948, column: 47)
!7245 = !DILocation(line: 1949, column: 35, scope: !7244)
!7246 = !DILocation(line: 1949, column: 43, scope: !7244)
!7247 = !DILocation(line: 1949, column: 6, scope: !7244)
!7248 = !DILocation(line: 1949, column: 16, scope: !7244)
!7249 = !DILocation(line: 1949, column: 23, scope: !7244)
!7250 = !DILocation(line: 1950, column: 5, scope: !7244)
!7251 = !DILocation(line: 1952, column: 21, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 1951, column: 10)
!7253 = !DILocation(line: 1952, column: 6, scope: !7252)
!7254 = !DILocation(line: 1954, column: 4, scope: !7238)
!7255 = !DILocation(line: 1955, column: 3, scope: !7228)
!7256 = !DILocation(line: 1956, column: 2, scope: !7223)
!7257 = !DILocation(line: 1941, column: 47, scope: !7219)
!7258 = !DILocation(line: 1941, column: 53, scope: !7219)
!7259 = !DILocation(line: 1941, column: 45, scope: !7219)
!7260 = !DILocation(line: 1941, column: 2, scope: !7219)
!7261 = distinct !{!7261, !7220, !7262}
!7262 = !DILocation(line: 1956, column: 2, scope: !7213)
!7263 = !DILocation(line: 1961, column: 14, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1961, column: 2)
!7265 = !DILocation(line: 1961, column: 21, scope: !7264)
!7266 = !DILocation(line: 1961, column: 27, scope: !7264)
!7267 = !DILocation(line: 1961, column: 12, scope: !7264)
!7268 = !DILocation(line: 1961, column: 7, scope: !7264)
!7269 = !DILocation(line: 1961, column: 34, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7264, file: !3, line: 1961, column: 2)
!7271 = !DILocation(line: 1961, column: 2, scope: !7264)
!7272 = !DILocation(line: 1963, column: 7, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 1963, column: 7)
!7274 = distinct !DILexicalBlock(scope: !7270, file: !3, line: 1961, column: 59)
!7275 = !DILocation(line: 1963, column: 13, scope: !7273)
!7276 = !DILocation(line: 1963, column: 20, scope: !7273)
!7277 = !DILocation(line: 1963, column: 24, scope: !7273)
!7278 = !DILocation(line: 1963, column: 30, scope: !7273)
!7279 = !DILocation(line: 1963, column: 38, scope: !7273)
!7280 = !DILocation(line: 1963, column: 43, scope: !7273)
!7281 = !DILocation(line: 1963, column: 58, scope: !7273)
!7282 = !DILocation(line: 1964, column: 7, scope: !7273)
!7283 = !DILocation(line: 1964, column: 13, scope: !7273)
!7284 = !DILocation(line: 1964, column: 22, scope: !7273)
!7285 = !DILocation(line: 1964, column: 26, scope: !7273)
!7286 = !DILocation(line: 1964, column: 32, scope: !7273)
!7287 = !DILocation(line: 1964, column: 42, scope: !7273)
!7288 = !DILocation(line: 1964, column: 47, scope: !7273)
!7289 = !DILocation(line: 1963, column: 7, scope: !7274)
!7290 = !DILocation(line: 1966, column: 14, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7273, file: !3, line: 1965, column: 3)
!7292 = !DILocation(line: 1966, column: 12, scope: !7291)
!7293 = !DILocation(line: 1967, column: 20, scope: !7291)
!7294 = !DILocation(line: 1967, column: 26, scope: !7291)
!7295 = !DILocation(line: 1967, column: 4, scope: !7291)
!7296 = !DILocation(line: 1967, column: 13, scope: !7291)
!7297 = !DILocation(line: 1967, column: 18, scope: !7291)
!7298 = !DILocation(line: 1968, column: 22, scope: !7291)
!7299 = !DILocation(line: 1968, column: 28, scope: !7291)
!7300 = !DILocation(line: 1968, column: 36, scope: !7291)
!7301 = !DILocation(line: 1968, column: 4, scope: !7291)
!7302 = !DILocation(line: 1968, column: 13, scope: !7291)
!7303 = !DILocation(line: 1968, column: 20, scope: !7291)
!7304 = !DILocation(line: 1969, column: 22, scope: !7291)
!7305 = !DILocation(line: 1969, column: 28, scope: !7291)
!7306 = !DILocation(line: 1969, column: 36, scope: !7291)
!7307 = !DILocation(line: 1969, column: 4, scope: !7291)
!7308 = !DILocation(line: 1969, column: 13, scope: !7291)
!7309 = !DILocation(line: 1969, column: 20, scope: !7291)
!7310 = !DILocation(line: 1970, column: 24, scope: !7291)
!7311 = !DILocation(line: 1970, column: 30, scope: !7291)
!7312 = !DILocation(line: 1970, column: 40, scope: !7291)
!7313 = !DILocation(line: 1970, column: 4, scope: !7291)
!7314 = !DILocation(line: 1970, column: 13, scope: !7291)
!7315 = !DILocation(line: 1970, column: 22, scope: !7291)
!7316 = !DILocation(line: 1971, column: 24, scope: !7291)
!7317 = !DILocation(line: 1971, column: 30, scope: !7291)
!7318 = !DILocation(line: 1971, column: 40, scope: !7291)
!7319 = !DILocation(line: 1971, column: 4, scope: !7291)
!7320 = !DILocation(line: 1971, column: 13, scope: !7291)
!7321 = !DILocation(line: 1971, column: 22, scope: !7291)
!7322 = !DILocation(line: 1973, column: 32, scope: !7291)
!7323 = !DILocation(line: 1973, column: 4, scope: !7291)
!7324 = !DILocation(line: 1974, column: 3, scope: !7291)
!7325 = !DILocation(line: 1975, column: 2, scope: !7274)
!7326 = !DILocation(line: 1961, column: 47, scope: !7270)
!7327 = !DILocation(line: 1961, column: 53, scope: !7270)
!7328 = !DILocation(line: 1961, column: 45, scope: !7270)
!7329 = !DILocation(line: 1961, column: 2, scope: !7270)
!7330 = distinct !{!7330, !7271, !7331}
!7331 = !DILocation(line: 1975, column: 2, scope: !7264)
!7332 = !DILocation(line: 1977, column: 2, scope: !7157)
!7333 = distinct !DISubprogram(name: "NODE_OT_clipboard_paste", scope: !3, file: !3, line: 2084, type: !4, scopeLine: 2085, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!7334 = !DILocalVariable(name: "ot", arg: 1, scope: !7333, file: !3, line: 2084, type: !6)
!7335 = !DILocation(line: 2084, column: 46, scope: !7333)
!7336 = !DILocation(line: 2087, column: 2, scope: !7333)
!7337 = !DILocation(line: 2087, column: 6, scope: !7333)
!7338 = !DILocation(line: 2087, column: 11, scope: !7333)
!7339 = !DILocation(line: 2088, column: 2, scope: !7333)
!7340 = !DILocation(line: 2088, column: 6, scope: !7333)
!7341 = !DILocation(line: 2088, column: 18, scope: !7333)
!7342 = !DILocation(line: 2089, column: 2, scope: !7333)
!7343 = !DILocation(line: 2089, column: 6, scope: !7333)
!7344 = !DILocation(line: 2089, column: 13, scope: !7333)
!7345 = !DILocation(line: 2092, column: 2, scope: !7333)
!7346 = !DILocation(line: 2092, column: 6, scope: !7333)
!7347 = !DILocation(line: 2092, column: 11, scope: !7333)
!7348 = !DILocation(line: 2093, column: 2, scope: !7333)
!7349 = !DILocation(line: 2093, column: 6, scope: !7333)
!7350 = !DILocation(line: 2093, column: 11, scope: !7333)
!7351 = !DILocation(line: 2096, column: 2, scope: !7333)
!7352 = !DILocation(line: 2096, column: 6, scope: !7333)
!7353 = !DILocation(line: 2096, column: 11, scope: !7333)
!7354 = !DILocation(line: 2097, column: 1, scope: !7333)
!7355 = distinct !DISubprogram(name: "node_clipboard_paste_exec", scope: !3, file: !3, line: 1997, type: !5544, scopeLine: 1998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!7356 = !DILocalVariable(name: "C", arg: 1, scope: !7355, file: !3, line: 1997, type: !3399)
!7357 = !DILocation(line: 1997, column: 48, scope: !7355)
!7358 = !DILocalVariable(name: "op", arg: 2, scope: !7355, file: !3, line: 1997, type: !4682)
!7359 = !DILocation(line: 1997, column: 63, scope: !7355)
!7360 = !DILocalVariable(name: "snode", scope: !7355, file: !3, line: 1999, type: !3213)
!7361 = !DILocation(line: 1999, column: 13, scope: !7355)
!7362 = !DILocation(line: 1999, column: 39, scope: !7355)
!7363 = !DILocation(line: 1999, column: 21, scope: !7355)
!7364 = !DILocalVariable(name: "ntree", scope: !7355, file: !3, line: 2000, type: !2867)
!7365 = !DILocation(line: 2000, column: 13, scope: !7355)
!7366 = !DILocation(line: 2000, column: 21, scope: !7355)
!7367 = !DILocation(line: 2000, column: 28, scope: !7355)
!7368 = !DILocalVariable(name: "clipboard_nodes_lb", scope: !7355, file: !3, line: 2001, type: !7369)
!7369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7370, size: 64)
!7370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !58)
!7371 = !DILocation(line: 2001, column: 18, scope: !7355)
!7372 = !DILocalVariable(name: "clipboard_links_lb", scope: !7355, file: !3, line: 2002, type: !7369)
!7373 = !DILocation(line: 2002, column: 18, scope: !7355)
!7374 = !DILocalVariable(name: "node", scope: !7355, file: !3, line: 2003, type: !499)
!7375 = !DILocation(line: 2003, column: 9, scope: !7355)
!7376 = !DILocalVariable(name: "link", scope: !7355, file: !3, line: 2004, type: !5565)
!7377 = !DILocation(line: 2004, column: 13, scope: !7355)
!7378 = !DILocalVariable(name: "num_nodes", scope: !7355, file: !3, line: 2005, type: !22)
!7379 = !DILocation(line: 2005, column: 6, scope: !7355)
!7380 = !DILocalVariable(name: "center", scope: !7355, file: !3, line: 2006, type: !569)
!7381 = !DILocation(line: 2006, column: 8, scope: !7355)
!7382 = !DILocalVariable(name: "is_clipboard_valid", scope: !7355, file: !3, line: 2007, type: !699)
!7383 = !DILocation(line: 2007, column: 7, scope: !7355)
!7384 = !DILocalVariable(name: "all_nodes_valid", scope: !7355, file: !3, line: 2007, type: !699)
!7385 = !DILocation(line: 2007, column: 27, scope: !7355)
!7386 = !DILocation(line: 2010, column: 23, scope: !7355)
!7387 = !DILocation(line: 2010, column: 21, scope: !7355)
!7388 = !DILocation(line: 2011, column: 23, scope: !7355)
!7389 = !DILocation(line: 2011, column: 21, scope: !7355)
!7390 = !DILocation(line: 2012, column: 23, scope: !7355)
!7391 = !DILocation(line: 2012, column: 21, scope: !7355)
!7392 = !DILocation(line: 2014, column: 28, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 2014, column: 6)
!7394 = !DILocation(line: 2014, column: 6, scope: !7393)
!7395 = !DILocation(line: 2014, column: 6, scope: !7355)
!7396 = !DILocation(line: 2015, column: 14, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7393, file: !3, line: 2014, column: 49)
!7398 = !DILocation(line: 2015, column: 18, scope: !7397)
!7399 = !DILocation(line: 2015, column: 3, scope: !7397)
!7400 = !DILocation(line: 2016, column: 3, scope: !7397)
!7401 = !DILocation(line: 2019, column: 6, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 2019, column: 6)
!7403 = !DILocation(line: 2019, column: 39, scope: !7402)
!7404 = !DILocation(line: 2019, column: 46, scope: !7402)
!7405 = !DILocation(line: 2019, column: 36, scope: !7402)
!7406 = !DILocation(line: 2019, column: 6, scope: !7355)
!7407 = !DILocation(line: 2020, column: 14, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7402, file: !3, line: 2019, column: 52)
!7409 = !DILocation(line: 2020, column: 18, scope: !7408)
!7410 = !DILocation(line: 2020, column: 3, scope: !7408)
!7411 = !DILocation(line: 2021, column: 3, scope: !7408)
!7412 = !DILocation(line: 2025, column: 6, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 2025, column: 6)
!7414 = !DILocation(line: 2025, column: 25, scope: !7413)
!7415 = !DILocation(line: 2025, column: 6, scope: !7355)
!7416 = !DILocation(line: 2026, column: 14, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7413, file: !3, line: 2025, column: 35)
!7418 = !DILocation(line: 2026, column: 18, scope: !7417)
!7419 = !DILocation(line: 2026, column: 3, scope: !7417)
!7420 = !DILocation(line: 2027, column: 2, scope: !7417)
!7421 = !DILocation(line: 2030, column: 18, scope: !7355)
!7422 = !DILocation(line: 2031, column: 14, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 2031, column: 2)
!7424 = !DILocation(line: 2031, column: 34, scope: !7423)
!7425 = !DILocation(line: 2031, column: 12, scope: !7423)
!7426 = !DILocation(line: 2031, column: 7, scope: !7423)
!7427 = !DILocation(line: 2031, column: 41, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 2031, column: 2)
!7429 = !DILocation(line: 2031, column: 2, scope: !7423)
!7430 = !DILocation(line: 2032, column: 8, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 2032, column: 7)
!7432 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 2031, column: 66)
!7433 = !DILocation(line: 2032, column: 14, scope: !7431)
!7434 = !DILocation(line: 2032, column: 24, scope: !7431)
!7435 = !DILocation(line: 2032, column: 38, scope: !7431)
!7436 = !DILocation(line: 2032, column: 44, scope: !7431)
!7437 = !DILocation(line: 2032, column: 7, scope: !7432)
!7438 = !DILocation(line: 2033, column: 20, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7431, file: !3, line: 2032, column: 52)
!7440 = !DILocation(line: 2034, column: 16, scope: !7439)
!7441 = !DILocation(line: 2034, column: 20, scope: !7439)
!7442 = !DILocation(line: 2034, column: 80, scope: !7439)
!7443 = !DILocation(line: 2034, column: 86, scope: !7439)
!7444 = !DILocation(line: 2034, column: 92, scope: !7439)
!7445 = !DILocation(line: 2034, column: 99, scope: !7439)
!7446 = !DILocation(line: 2034, column: 102, scope: !7439)
!7447 = !DILocation(line: 2034, column: 107, scope: !7439)
!7448 = !DILocation(line: 2034, column: 4, scope: !7439)
!7449 = !DILocation(line: 2035, column: 3, scope: !7439)
!7450 = !DILocation(line: 2036, column: 2, scope: !7432)
!7451 = !DILocation(line: 2031, column: 54, scope: !7428)
!7452 = !DILocation(line: 2031, column: 60, scope: !7428)
!7453 = !DILocation(line: 2031, column: 52, scope: !7428)
!7454 = !DILocation(line: 2031, column: 2, scope: !7428)
!7455 = distinct !{!7455, !7429, !7456}
!7456 = !DILocation(line: 2036, column: 2, scope: !7423)
!7457 = !DILocation(line: 2037, column: 7, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 2037, column: 6)
!7459 = !DILocation(line: 2037, column: 6, scope: !7355)
!7460 = !DILocation(line: 2038, column: 3, scope: !7458)
!7461 = !DILocation(line: 2040, column: 23, scope: !7355)
!7462 = !DILocation(line: 2040, column: 2, scope: !7355)
!7463 = !DILocation(line: 2043, column: 20, scope: !7355)
!7464 = !DILocation(line: 2043, column: 2, scope: !7355)
!7465 = !DILocation(line: 2046, column: 10, scope: !7355)
!7466 = !DILocation(line: 2046, column: 2, scope: !7355)
!7467 = !DILocation(line: 2047, column: 14, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 2047, column: 2)
!7469 = !DILocation(line: 2047, column: 34, scope: !7468)
!7470 = !DILocation(line: 2047, column: 12, scope: !7468)
!7471 = !DILocation(line: 2047, column: 51, scope: !7468)
!7472 = !DILocation(line: 2047, column: 7, scope: !7468)
!7473 = !DILocation(line: 2047, column: 56, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 2047, column: 2)
!7475 = !DILocation(line: 2047, column: 2, scope: !7468)
!7476 = !DILocation(line: 2048, column: 33, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7474, file: !3, line: 2047, column: 94)
!7478 = !DILocation(line: 2048, column: 39, scope: !7477)
!7479 = !DILocation(line: 2048, column: 16, scope: !7477)
!7480 = !DILocation(line: 2048, column: 3, scope: !7477)
!7481 = !DILocation(line: 2048, column: 13, scope: !7477)
!7482 = !DILocation(line: 2049, column: 33, scope: !7477)
!7483 = !DILocation(line: 2049, column: 39, scope: !7477)
!7484 = !DILocation(line: 2049, column: 16, scope: !7477)
!7485 = !DILocation(line: 2049, column: 3, scope: !7477)
!7486 = !DILocation(line: 2049, column: 13, scope: !7477)
!7487 = !DILocation(line: 2050, column: 2, scope: !7477)
!7488 = !DILocation(line: 2047, column: 69, scope: !7474)
!7489 = !DILocation(line: 2047, column: 75, scope: !7474)
!7490 = !DILocation(line: 2047, column: 67, scope: !7474)
!7491 = !DILocation(line: 2047, column: 90, scope: !7474)
!7492 = !DILocation(line: 2047, column: 2, scope: !7474)
!7493 = distinct !{!7493, !7475, !7494}
!7494 = !DILocation(line: 2050, column: 2, scope: !7468)
!7495 = !DILocation(line: 2051, column: 12, scope: !7355)
!7496 = !DILocation(line: 2051, column: 26, scope: !7355)
!7497 = !DILocation(line: 2051, column: 24, scope: !7355)
!7498 = !DILocation(line: 2051, column: 20, scope: !7355)
!7499 = !DILocation(line: 2051, column: 2, scope: !7355)
!7500 = !DILocation(line: 2054, column: 14, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 2054, column: 2)
!7502 = !DILocation(line: 2054, column: 34, scope: !7501)
!7503 = !DILocation(line: 2054, column: 12, scope: !7501)
!7504 = !DILocation(line: 2054, column: 7, scope: !7501)
!7505 = !DILocation(line: 2054, column: 41, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7501, file: !3, line: 2054, column: 2)
!7507 = !DILocation(line: 2054, column: 2, scope: !7501)
!7508 = !DILocalVariable(name: "new_node", scope: !7509, file: !3, line: 2055, type: !499)
!7509 = distinct !DILexicalBlock(scope: !7506, file: !3, line: 2054, column: 66)
!7510 = !DILocation(line: 2055, column: 10, scope: !7509)
!7511 = !DILocation(line: 2055, column: 34, scope: !7509)
!7512 = !DILocation(line: 2055, column: 41, scope: !7509)
!7513 = !DILocation(line: 2055, column: 21, scope: !7509)
!7514 = !DILocation(line: 2058, column: 14, scope: !7509)
!7515 = !DILocation(line: 2058, column: 20, scope: !7509)
!7516 = !DILocation(line: 2058, column: 3, scope: !7509)
!7517 = !DILocation(line: 2061, column: 19, scope: !7509)
!7518 = !DILocation(line: 2061, column: 3, scope: !7509)
!7519 = !DILocation(line: 2062, column: 2, scope: !7509)
!7520 = !DILocation(line: 2054, column: 54, scope: !7506)
!7521 = !DILocation(line: 2054, column: 60, scope: !7506)
!7522 = !DILocation(line: 2054, column: 52, scope: !7506)
!7523 = !DILocation(line: 2054, column: 2, scope: !7506)
!7524 = distinct !{!7524, !7507, !7525}
!7525 = !DILocation(line: 2062, column: 2, scope: !7501)
!7526 = !DILocation(line: 2065, column: 14, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 2065, column: 2)
!7528 = !DILocation(line: 2065, column: 34, scope: !7527)
!7529 = !DILocation(line: 2065, column: 12, scope: !7527)
!7530 = !DILocation(line: 2065, column: 7, scope: !7527)
!7531 = !DILocation(line: 2065, column: 41, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7527, file: !3, line: 2065, column: 2)
!7533 = !DILocation(line: 2065, column: 2, scope: !7527)
!7534 = !DILocalVariable(name: "new_node", scope: !7535, file: !3, line: 2066, type: !499)
!7535 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 2065, column: 66)
!7536 = !DILocation(line: 2066, column: 10, scope: !7535)
!7537 = !DILocation(line: 2066, column: 21, scope: !7535)
!7538 = !DILocation(line: 2066, column: 27, scope: !7535)
!7539 = !DILocation(line: 2067, column: 7, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 2067, column: 7)
!7541 = !DILocation(line: 2067, column: 17, scope: !7540)
!7542 = !DILocation(line: 2067, column: 7, scope: !7535)
!7543 = !DILocation(line: 2068, column: 23, scope: !7540)
!7544 = !DILocation(line: 2068, column: 33, scope: !7540)
!7545 = !DILocation(line: 2068, column: 41, scope: !7540)
!7546 = !DILocation(line: 2068, column: 4, scope: !7540)
!7547 = !DILocation(line: 2068, column: 14, scope: !7540)
!7548 = !DILocation(line: 2068, column: 21, scope: !7540)
!7549 = !DILocation(line: 2069, column: 2, scope: !7535)
!7550 = !DILocation(line: 2065, column: 54, scope: !7532)
!7551 = !DILocation(line: 2065, column: 60, scope: !7532)
!7552 = !DILocation(line: 2065, column: 52, scope: !7532)
!7553 = !DILocation(line: 2065, column: 2, scope: !7532)
!7554 = distinct !{!7554, !7533, !7555}
!7555 = !DILocation(line: 2069, column: 2, scope: !7527)
!7556 = !DILocation(line: 2071, column: 14, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 2071, column: 2)
!7558 = !DILocation(line: 2071, column: 34, scope: !7557)
!7559 = !DILocation(line: 2071, column: 12, scope: !7557)
!7560 = !DILocation(line: 2071, column: 7, scope: !7557)
!7561 = !DILocation(line: 2071, column: 41, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7557, file: !3, line: 2071, column: 2)
!7563 = !DILocation(line: 2071, column: 2, scope: !7557)
!7564 = !DILocation(line: 2072, column: 15, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7562, file: !3, line: 2071, column: 66)
!7566 = !DILocation(line: 2072, column: 22, scope: !7565)
!7567 = !DILocation(line: 2072, column: 28, scope: !7565)
!7568 = !DILocation(line: 2072, column: 38, scope: !7565)
!7569 = !DILocation(line: 2072, column: 48, scope: !7565)
!7570 = !DILocation(line: 2072, column: 54, scope: !7565)
!7571 = !DILocation(line: 2072, column: 64, scope: !7565)
!7572 = !DILocation(line: 2073, column: 15, scope: !7565)
!7573 = !DILocation(line: 2073, column: 21, scope: !7565)
!7574 = !DILocation(line: 2073, column: 29, scope: !7565)
!7575 = !DILocation(line: 2073, column: 39, scope: !7565)
!7576 = !DILocation(line: 2073, column: 45, scope: !7565)
!7577 = !DILocation(line: 2073, column: 53, scope: !7565)
!7578 = !DILocation(line: 2072, column: 3, scope: !7565)
!7579 = !DILocation(line: 2074, column: 2, scope: !7565)
!7580 = !DILocation(line: 2071, column: 54, scope: !7562)
!7581 = !DILocation(line: 2071, column: 60, scope: !7562)
!7582 = !DILocation(line: 2071, column: 52, scope: !7562)
!7583 = !DILocation(line: 2071, column: 2, scope: !7562)
!7584 = distinct !{!7584, !7563, !7585}
!7585 = !DILocation(line: 2074, column: 2, scope: !7557)
!7586 = !DILocation(line: 2076, column: 32, scope: !7355)
!7587 = !DILocation(line: 2076, column: 18, scope: !7355)
!7588 = !DILocation(line: 2076, column: 36, scope: !7355)
!7589 = !DILocation(line: 2076, column: 43, scope: !7355)
!7590 = !DILocation(line: 2076, column: 2, scope: !7355)
!7591 = !DILocation(line: 2078, column: 15, scope: !7355)
!7592 = !DILocation(line: 2078, column: 18, scope: !7355)
!7593 = !DILocation(line: 2078, column: 2, scope: !7355)
!7594 = !DILocation(line: 2079, column: 19, scope: !7355)
!7595 = !DILocation(line: 2079, column: 22, scope: !7355)
!7596 = !DILocation(line: 2079, column: 2, scope: !7355)
!7597 = !DILocation(line: 2081, column: 2, scope: !7355)
!7598 = !DILocation(line: 2082, column: 1, scope: !7355)
!7599 = distinct !DISubprogram(name: "NODE_OT_tree_socket_add", scope: !3, file: !3, line: 2156, type: !4, scopeLine: 2157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!7600 = !DILocalVariable(name: "ot", arg: 1, scope: !7599, file: !3, line: 2156, type: !6)
!7601 = !DILocation(line: 2156, column: 46, scope: !7599)
!7602 = !DILocation(line: 2159, column: 2, scope: !7599)
!7603 = !DILocation(line: 2159, column: 6, scope: !7599)
!7604 = !DILocation(line: 2159, column: 11, scope: !7599)
!7605 = !DILocation(line: 2160, column: 2, scope: !7599)
!7606 = !DILocation(line: 2160, column: 6, scope: !7599)
!7607 = !DILocation(line: 2160, column: 18, scope: !7599)
!7608 = !DILocation(line: 2161, column: 2, scope: !7599)
!7609 = !DILocation(line: 2161, column: 6, scope: !7599)
!7610 = !DILocation(line: 2161, column: 13, scope: !7599)
!7611 = !DILocation(line: 2164, column: 2, scope: !7599)
!7612 = !DILocation(line: 2164, column: 6, scope: !7599)
!7613 = !DILocation(line: 2164, column: 11, scope: !7599)
!7614 = !DILocation(line: 2165, column: 2, scope: !7599)
!7615 = !DILocation(line: 2165, column: 6, scope: !7599)
!7616 = !DILocation(line: 2165, column: 11, scope: !7599)
!7617 = !DILocation(line: 2168, column: 2, scope: !7599)
!7618 = !DILocation(line: 2168, column: 6, scope: !7599)
!7619 = !DILocation(line: 2168, column: 11, scope: !7599)
!7620 = !DILocation(line: 2170, column: 15, scope: !7599)
!7621 = !DILocation(line: 2170, column: 19, scope: !7599)
!7622 = !DILocation(line: 2170, column: 2, scope: !7599)
!7623 = !DILocation(line: 2171, column: 1, scope: !7599)
!7624 = distinct !DISubprogram(name: "ntree_socket_add_exec", scope: !3, file: !3, line: 2110, type: !5544, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!7625 = !DILocalVariable(name: "C", arg: 1, scope: !7624, file: !3, line: 2110, type: !3399)
!7626 = !DILocation(line: 2110, column: 44, scope: !7624)
!7627 = !DILocalVariable(name: "op", arg: 2, scope: !7624, file: !3, line: 2110, type: !4682)
!7628 = !DILocation(line: 2110, column: 59, scope: !7624)
!7629 = !DILocalVariable(name: "snode", scope: !7624, file: !3, line: 2112, type: !3213)
!7630 = !DILocation(line: 2112, column: 13, scope: !7624)
!7631 = !DILocation(line: 2112, column: 39, scope: !7624)
!7632 = !DILocation(line: 2112, column: 21, scope: !7624)
!7633 = !DILocalVariable(name: "ntree", scope: !7624, file: !3, line: 2113, type: !2867)
!7634 = !DILocation(line: 2113, column: 13, scope: !7624)
!7635 = !DILocation(line: 2113, column: 21, scope: !7624)
!7636 = !DILocation(line: 2113, column: 28, scope: !7624)
!7637 = !DILocalVariable(name: "in_out", scope: !7624, file: !3, line: 2114, type: !22)
!7638 = !DILocation(line: 2114, column: 6, scope: !7624)
!7639 = !DILocation(line: 2114, column: 28, scope: !7624)
!7640 = !DILocation(line: 2114, column: 32, scope: !7624)
!7641 = !DILocation(line: 2114, column: 15, scope: !7624)
!7642 = !DILocalVariable(name: "ntree_ptr", scope: !7624, file: !3, line: 2115, type: !3841)
!7643 = !DILocation(line: 2115, column: 13, scope: !7624)
!7644 = !DILocalVariable(name: "sock", scope: !7624, file: !3, line: 2116, type: !503)
!7645 = !DILocation(line: 2116, column: 15, scope: !7624)
!7646 = !DILocalVariable(name: "tsock", scope: !7624, file: !3, line: 2116, type: !503)
!7647 = !DILocation(line: 2116, column: 22, scope: !7624)
!7648 = !DILocalVariable(name: "active_sock", scope: !7624, file: !3, line: 2116, type: !503)
!7649 = !DILocation(line: 2116, column: 30, scope: !7624)
!7650 = !DILocalVariable(name: "default_name", scope: !7624, file: !3, line: 2117, type: !12)
!7651 = !DILocation(line: 2117, column: 14, scope: !7624)
!7652 = !DILocation(line: 2119, column: 30, scope: !7624)
!7653 = !DILocation(line: 2119, column: 24, scope: !7624)
!7654 = !DILocation(line: 2119, column: 2, scope: !7624)
!7655 = !DILocation(line: 2121, column: 6, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 2121, column: 6)
!7657 = !DILocation(line: 2121, column: 13, scope: !7656)
!7658 = !DILocation(line: 2121, column: 6, scope: !7624)
!7659 = !DILocation(line: 2122, column: 52, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7656, file: !3, line: 2121, column: 25)
!7661 = !DILocation(line: 2122, column: 59, scope: !7660)
!7662 = !DILocation(line: 2122, column: 17, scope: !7660)
!7663 = !DILocation(line: 2122, column: 15, scope: !7660)
!7664 = !DILocation(line: 2123, column: 16, scope: !7660)
!7665 = !DILocation(line: 2124, column: 2, scope: !7660)
!7666 = !DILocation(line: 2126, column: 52, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7656, file: !3, line: 2125, column: 7)
!7668 = !DILocation(line: 2126, column: 59, scope: !7667)
!7669 = !DILocation(line: 2126, column: 17, scope: !7667)
!7670 = !DILocation(line: 2126, column: 15, scope: !7667)
!7671 = !DILocation(line: 2127, column: 16, scope: !7667)
!7672 = !DILocation(line: 2130, column: 6, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 2130, column: 6)
!7674 = !DILocation(line: 2130, column: 6, scope: !7624)
!7675 = !DILocation(line: 2132, column: 37, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7673, file: !3, line: 2130, column: 19)
!7677 = !DILocation(line: 2132, column: 44, scope: !7676)
!7678 = !DILocation(line: 2132, column: 52, scope: !7676)
!7679 = !DILocation(line: 2132, column: 65, scope: !7676)
!7680 = !DILocation(line: 2132, column: 73, scope: !7676)
!7681 = !DILocation(line: 2132, column: 86, scope: !7676)
!7682 = !DILocation(line: 2132, column: 92, scope: !7676)
!7683 = !DILocation(line: 2132, column: 105, scope: !7676)
!7684 = !DILocation(line: 2132, column: 10, scope: !7676)
!7685 = !DILocation(line: 2132, column: 8, scope: !7676)
!7686 = !DILocation(line: 2135, column: 2, scope: !7676)
!7687 = !DILocation(line: 2138, column: 34, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7673, file: !3, line: 2136, column: 7)
!7689 = !DILocation(line: 2138, column: 41, scope: !7688)
!7690 = !DILocation(line: 2138, column: 68, scope: !7688)
!7691 = !DILocation(line: 2138, column: 10, scope: !7688)
!7692 = !DILocation(line: 2138, column: 8, scope: !7688)
!7693 = !DILocation(line: 2142, column: 15, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 2142, column: 2)
!7695 = !DILocation(line: 2142, column: 22, scope: !7694)
!7696 = !DILocation(line: 2142, column: 29, scope: !7694)
!7697 = !DILocation(line: 2142, column: 13, scope: !7694)
!7698 = !DILocation(line: 2142, column: 7, scope: !7694)
!7699 = !DILocation(line: 2142, column: 36, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 2142, column: 2)
!7701 = !DILocation(line: 2142, column: 2, scope: !7694)
!7702 = !DILocation(line: 2143, column: 3, scope: !7700)
!7703 = !DILocation(line: 2143, column: 10, scope: !7700)
!7704 = !DILocation(line: 2143, column: 15, scope: !7700)
!7705 = !DILocation(line: 2142, column: 51, scope: !7700)
!7706 = !DILocation(line: 2142, column: 58, scope: !7700)
!7707 = !DILocation(line: 2142, column: 49, scope: !7700)
!7708 = !DILocation(line: 2142, column: 2, scope: !7700)
!7709 = distinct !{!7709, !7701, !7710}
!7710 = !DILocation(line: 2143, column: 19, scope: !7694)
!7711 = !DILocation(line: 2144, column: 15, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 2144, column: 2)
!7713 = !DILocation(line: 2144, column: 22, scope: !7712)
!7714 = !DILocation(line: 2144, column: 30, scope: !7712)
!7715 = !DILocation(line: 2144, column: 13, scope: !7712)
!7716 = !DILocation(line: 2144, column: 7, scope: !7712)
!7717 = !DILocation(line: 2144, column: 37, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7712, file: !3, line: 2144, column: 2)
!7719 = !DILocation(line: 2144, column: 2, scope: !7712)
!7720 = !DILocation(line: 2145, column: 3, scope: !7718)
!7721 = !DILocation(line: 2145, column: 10, scope: !7718)
!7722 = !DILocation(line: 2145, column: 15, scope: !7718)
!7723 = !DILocation(line: 2144, column: 52, scope: !7718)
!7724 = !DILocation(line: 2144, column: 59, scope: !7718)
!7725 = !DILocation(line: 2144, column: 50, scope: !7718)
!7726 = !DILocation(line: 2144, column: 2, scope: !7718)
!7727 = distinct !{!7727, !7719, !7728}
!7728 = !DILocation(line: 2145, column: 19, scope: !7712)
!7729 = !DILocation(line: 2147, column: 2, scope: !7624)
!7730 = !DILocation(line: 2147, column: 8, scope: !7624)
!7731 = !DILocation(line: 2147, column: 13, scope: !7624)
!7732 = !DILocation(line: 2149, column: 32, scope: !7624)
!7733 = !DILocation(line: 2149, column: 18, scope: !7624)
!7734 = !DILocation(line: 2149, column: 36, scope: !7624)
!7735 = !DILocation(line: 2149, column: 2, scope: !7624)
!7736 = !DILocation(line: 2151, column: 24, scope: !7624)
!7737 = !DILocation(line: 2151, column: 2, scope: !7624)
!7738 = !DILocation(line: 2153, column: 2, scope: !7624)
!7739 = distinct !DISubprogram(name: "NODE_OT_tree_socket_remove", scope: !3, file: !3, line: 2202, type: !4, scopeLine: 2203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!7740 = !DILocalVariable(name: "ot", arg: 1, scope: !7739, file: !3, line: 2202, type: !6)
!7741 = !DILocation(line: 2202, column: 49, scope: !7739)
!7742 = !DILocation(line: 2205, column: 2, scope: !7739)
!7743 = !DILocation(line: 2205, column: 6, scope: !7739)
!7744 = !DILocation(line: 2205, column: 11, scope: !7739)
!7745 = !DILocation(line: 2206, column: 2, scope: !7739)
!7746 = !DILocation(line: 2206, column: 6, scope: !7739)
!7747 = !DILocation(line: 2206, column: 18, scope: !7739)
!7748 = !DILocation(line: 2207, column: 2, scope: !7739)
!7749 = !DILocation(line: 2207, column: 6, scope: !7739)
!7750 = !DILocation(line: 2207, column: 13, scope: !7739)
!7751 = !DILocation(line: 2210, column: 2, scope: !7739)
!7752 = !DILocation(line: 2210, column: 6, scope: !7739)
!7753 = !DILocation(line: 2210, column: 11, scope: !7739)
!7754 = !DILocation(line: 2211, column: 2, scope: !7739)
!7755 = !DILocation(line: 2211, column: 6, scope: !7739)
!7756 = !DILocation(line: 2211, column: 11, scope: !7739)
!7757 = !DILocation(line: 2214, column: 2, scope: !7739)
!7758 = !DILocation(line: 2214, column: 6, scope: !7739)
!7759 = !DILocation(line: 2214, column: 11, scope: !7739)
!7760 = !DILocation(line: 2215, column: 1, scope: !7739)
!7761 = distinct !DISubprogram(name: "ntree_socket_remove_exec", scope: !3, file: !3, line: 2175, type: !5544, scopeLine: 2176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!7762 = !DILocalVariable(name: "C", arg: 1, scope: !7761, file: !3, line: 2175, type: !3399)
!7763 = !DILocation(line: 2175, column: 47, scope: !7761)
!7764 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7761, file: !3, line: 2175, type: !4682)
!7765 = !DILocation(line: 2175, column: 62, scope: !7761)
!7766 = !DILocalVariable(name: "snode", scope: !7761, file: !3, line: 2177, type: !3213)
!7767 = !DILocation(line: 2177, column: 13, scope: !7761)
!7768 = !DILocation(line: 2177, column: 39, scope: !7761)
!7769 = !DILocation(line: 2177, column: 21, scope: !7761)
!7770 = !DILocalVariable(name: "ntree", scope: !7761, file: !3, line: 2178, type: !2867)
!7771 = !DILocation(line: 2178, column: 13, scope: !7761)
!7772 = !DILocation(line: 2178, column: 21, scope: !7761)
!7773 = !DILocation(line: 2178, column: 28, scope: !7761)
!7774 = !DILocalVariable(name: "iosock", scope: !7761, file: !3, line: 2179, type: !503)
!7775 = !DILocation(line: 2179, column: 15, scope: !7761)
!7776 = !DILocalVariable(name: "active_sock", scope: !7761, file: !3, line: 2179, type: !503)
!7777 = !DILocation(line: 2179, column: 24, scope: !7761)
!7778 = !DILocation(line: 2181, column: 46, scope: !7761)
!7779 = !DILocation(line: 2181, column: 53, scope: !7761)
!7780 = !DILocation(line: 2181, column: 11, scope: !7761)
!7781 = !DILocation(line: 2181, column: 9, scope: !7761)
!7782 = !DILocation(line: 2182, column: 7, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 2182, column: 6)
!7784 = !DILocation(line: 2182, column: 6, scope: !7761)
!7785 = !DILocation(line: 2183, column: 47, scope: !7783)
!7786 = !DILocation(line: 2183, column: 54, scope: !7783)
!7787 = !DILocation(line: 2183, column: 12, scope: !7783)
!7788 = !DILocation(line: 2183, column: 10, scope: !7783)
!7789 = !DILocation(line: 2183, column: 3, scope: !7783)
!7790 = !DILocation(line: 2184, column: 7, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 2184, column: 6)
!7792 = !DILocation(line: 2184, column: 6, scope: !7761)
!7793 = !DILocation(line: 2185, column: 3, scope: !7791)
!7794 = !DILocation(line: 2188, column: 17, scope: !7761)
!7795 = !DILocation(line: 2188, column: 25, scope: !7761)
!7796 = !DILocation(line: 2188, column: 32, scope: !7761)
!7797 = !DILocation(line: 2188, column: 40, scope: !7761)
!7798 = !DILocation(line: 2188, column: 47, scope: !7761)
!7799 = !DILocation(line: 2188, column: 55, scope: !7761)
!7800 = !DILocation(line: 2188, column: 14, scope: !7761)
!7801 = !DILocation(line: 2189, column: 29, scope: !7761)
!7802 = !DILocation(line: 2189, column: 36, scope: !7761)
!7803 = !DILocation(line: 2189, column: 2, scope: !7761)
!7804 = !DILocation(line: 2192, column: 6, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 2192, column: 6)
!7806 = !DILocation(line: 2192, column: 6, scope: !7761)
!7807 = !DILocation(line: 2193, column: 3, scope: !7805)
!7808 = !DILocation(line: 2193, column: 16, scope: !7805)
!7809 = !DILocation(line: 2193, column: 21, scope: !7805)
!7810 = !DILocation(line: 2195, column: 32, scope: !7761)
!7811 = !DILocation(line: 2195, column: 18, scope: !7761)
!7812 = !DILocation(line: 2195, column: 36, scope: !7761)
!7813 = !DILocation(line: 2195, column: 2, scope: !7761)
!7814 = !DILocation(line: 2197, column: 24, scope: !7761)
!7815 = !DILocation(line: 2197, column: 2, scope: !7761)
!7816 = !DILocation(line: 2199, column: 2, scope: !7761)
!7817 = !DILocation(line: 2200, column: 1, scope: !7761)
!7818 = distinct !DISubprogram(name: "NODE_OT_tree_socket_move", scope: !3, file: !3, line: 2272, type: !4, scopeLine: 2273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!7819 = !DILocalVariable(name: "ot", arg: 1, scope: !7818, file: !3, line: 2272, type: !6)
!7820 = !DILocation(line: 2272, column: 47, scope: !7818)
!7821 = !DILocation(line: 2275, column: 2, scope: !7818)
!7822 = !DILocation(line: 2275, column: 6, scope: !7818)
!7823 = !DILocation(line: 2275, column: 11, scope: !7818)
!7824 = !DILocation(line: 2276, column: 2, scope: !7818)
!7825 = !DILocation(line: 2276, column: 6, scope: !7818)
!7826 = !DILocation(line: 2276, column: 18, scope: !7818)
!7827 = !DILocation(line: 2277, column: 2, scope: !7818)
!7828 = !DILocation(line: 2277, column: 6, scope: !7818)
!7829 = !DILocation(line: 2277, column: 13, scope: !7818)
!7830 = !DILocation(line: 2280, column: 2, scope: !7818)
!7831 = !DILocation(line: 2280, column: 6, scope: !7818)
!7832 = !DILocation(line: 2280, column: 11, scope: !7818)
!7833 = !DILocation(line: 2281, column: 2, scope: !7818)
!7834 = !DILocation(line: 2281, column: 6, scope: !7818)
!7835 = !DILocation(line: 2281, column: 11, scope: !7818)
!7836 = !DILocation(line: 2284, column: 2, scope: !7818)
!7837 = !DILocation(line: 2284, column: 6, scope: !7818)
!7838 = !DILocation(line: 2284, column: 11, scope: !7818)
!7839 = !DILocation(line: 2286, column: 15, scope: !7818)
!7840 = !DILocation(line: 2286, column: 19, scope: !7818)
!7841 = !DILocation(line: 2286, column: 2, scope: !7818)
!7842 = !DILocation(line: 2287, column: 1, scope: !7818)
!7843 = distinct !DISubprogram(name: "ntree_socket_move_exec", scope: !3, file: !3, line: 2225, type: !5544, scopeLine: 2226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!7844 = !DILocalVariable(name: "C", arg: 1, scope: !7843, file: !3, line: 2225, type: !3399)
!7845 = !DILocation(line: 2225, column: 45, scope: !7843)
!7846 = !DILocalVariable(name: "op", arg: 2, scope: !7843, file: !3, line: 2225, type: !4682)
!7847 = !DILocation(line: 2225, column: 60, scope: !7843)
!7848 = !DILocalVariable(name: "snode", scope: !7843, file: !3, line: 2227, type: !3213)
!7849 = !DILocation(line: 2227, column: 13, scope: !7843)
!7850 = !DILocation(line: 2227, column: 39, scope: !7843)
!7851 = !DILocation(line: 2227, column: 21, scope: !7843)
!7852 = !DILocalVariable(name: "ntree", scope: !7843, file: !3, line: 2228, type: !2867)
!7853 = !DILocation(line: 2228, column: 13, scope: !7843)
!7854 = !DILocation(line: 2228, column: 21, scope: !7843)
!7855 = !DILocation(line: 2228, column: 28, scope: !7843)
!7856 = !DILocalVariable(name: "direction", scope: !7843, file: !3, line: 2229, type: !22)
!7857 = !DILocation(line: 2229, column: 6, scope: !7843)
!7858 = !DILocation(line: 2229, column: 31, scope: !7843)
!7859 = !DILocation(line: 2229, column: 35, scope: !7843)
!7860 = !DILocation(line: 2229, column: 18, scope: !7843)
!7861 = !DILocalVariable(name: "iosock", scope: !7843, file: !3, line: 2230, type: !503)
!7862 = !DILocation(line: 2230, column: 15, scope: !7843)
!7863 = !DILocalVariable(name: "lb", scope: !7843, file: !3, line: 2231, type: !1544)
!7864 = !DILocation(line: 2231, column: 12, scope: !7843)
!7865 = !DILocation(line: 2233, column: 8, scope: !7843)
!7866 = !DILocation(line: 2233, column: 15, scope: !7843)
!7867 = !DILocation(line: 2233, column: 5, scope: !7843)
!7868 = !DILocation(line: 2234, column: 45, scope: !7843)
!7869 = !DILocation(line: 2234, column: 11, scope: !7843)
!7870 = !DILocation(line: 2234, column: 9, scope: !7843)
!7871 = !DILocation(line: 2235, column: 7, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 2235, column: 6)
!7873 = !DILocation(line: 2235, column: 6, scope: !7843)
!7874 = !DILocation(line: 2236, column: 9, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7872, file: !3, line: 2235, column: 15)
!7876 = !DILocation(line: 2236, column: 16, scope: !7875)
!7877 = !DILocation(line: 2236, column: 6, scope: !7875)
!7878 = !DILocation(line: 2237, column: 46, scope: !7875)
!7879 = !DILocation(line: 2237, column: 12, scope: !7875)
!7880 = !DILocation(line: 2237, column: 10, scope: !7875)
!7881 = !DILocation(line: 2238, column: 2, scope: !7875)
!7882 = !DILocation(line: 2239, column: 7, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 2239, column: 6)
!7884 = !DILocation(line: 2239, column: 6, scope: !7843)
!7885 = !DILocation(line: 2240, column: 3, scope: !7883)
!7886 = !DILocation(line: 2242, column: 10, scope: !7843)
!7887 = !DILocation(line: 2242, column: 2, scope: !7843)
!7888 = !DILocalVariable(name: "before", scope: !7889, file: !3, line: 2245, type: !503)
!7889 = distinct !DILexicalBlock(scope: !7890, file: !3, line: 2244, column: 3)
!7890 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 2242, column: 21)
!7891 = !DILocation(line: 2245, column: 17, scope: !7889)
!7892 = !DILocation(line: 2245, column: 26, scope: !7889)
!7893 = !DILocation(line: 2245, column: 34, scope: !7889)
!7894 = !DILocation(line: 2246, column: 16, scope: !7889)
!7895 = !DILocation(line: 2246, column: 20, scope: !7889)
!7896 = !DILocation(line: 2246, column: 4, scope: !7889)
!7897 = !DILocation(line: 2247, column: 8, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7889, file: !3, line: 2247, column: 8)
!7899 = !DILocation(line: 2247, column: 8, scope: !7889)
!7900 = !DILocation(line: 2248, column: 26, scope: !7898)
!7901 = !DILocation(line: 2248, column: 30, scope: !7898)
!7902 = !DILocation(line: 2248, column: 38, scope: !7898)
!7903 = !DILocation(line: 2248, column: 5, scope: !7898)
!7904 = !DILocation(line: 2250, column: 17, scope: !7898)
!7905 = !DILocation(line: 2250, column: 21, scope: !7898)
!7906 = !DILocation(line: 2250, column: 5, scope: !7898)
!7907 = !DILocation(line: 2251, column: 4, scope: !7889)
!7908 = !DILocalVariable(name: "after", scope: !7909, file: !3, line: 2255, type: !503)
!7909 = distinct !DILexicalBlock(scope: !7890, file: !3, line: 2254, column: 3)
!7910 = !DILocation(line: 2255, column: 17, scope: !7909)
!7911 = !DILocation(line: 2255, column: 25, scope: !7909)
!7912 = !DILocation(line: 2255, column: 33, scope: !7909)
!7913 = !DILocation(line: 2256, column: 16, scope: !7909)
!7914 = !DILocation(line: 2256, column: 20, scope: !7909)
!7915 = !DILocation(line: 2256, column: 4, scope: !7909)
!7916 = !DILocation(line: 2257, column: 8, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7909, file: !3, line: 2257, column: 8)
!7918 = !DILocation(line: 2257, column: 8, scope: !7909)
!7919 = !DILocation(line: 2258, column: 25, scope: !7917)
!7920 = !DILocation(line: 2258, column: 29, scope: !7917)
!7921 = !DILocation(line: 2258, column: 36, scope: !7917)
!7922 = !DILocation(line: 2258, column: 5, scope: !7917)
!7923 = !DILocation(line: 2260, column: 17, scope: !7917)
!7924 = !DILocation(line: 2260, column: 21, scope: !7917)
!7925 = !DILocation(line: 2260, column: 5, scope: !7917)
!7926 = !DILocation(line: 2261, column: 4, scope: !7909)
!7927 = !DILocation(line: 2265, column: 32, scope: !7843)
!7928 = !DILocation(line: 2265, column: 18, scope: !7843)
!7929 = !DILocation(line: 2265, column: 36, scope: !7843)
!7930 = !DILocation(line: 2265, column: 2, scope: !7843)
!7931 = !DILocation(line: 2267, column: 24, scope: !7843)
!7932 = !DILocation(line: 2267, column: 2, scope: !7843)
!7933 = !DILocation(line: 2269, column: 2, scope: !7843)
!7934 = !DILocation(line: 2270, column: 1, scope: !7843)
!7935 = distinct !DISubprogram(name: "NODE_OT_shader_script_update", scope: !3, file: !3, line: 2412, type: !4, scopeLine: 2413, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!7936 = !DILocalVariable(name: "ot", arg: 1, scope: !7935, file: !3, line: 2412, type: !6)
!7937 = !DILocation(line: 2412, column: 51, scope: !7935)
!7938 = !DILocation(line: 2415, column: 2, scope: !7935)
!7939 = !DILocation(line: 2415, column: 6, scope: !7935)
!7940 = !DILocation(line: 2415, column: 11, scope: !7935)
!7941 = !DILocation(line: 2416, column: 2, scope: !7935)
!7942 = !DILocation(line: 2416, column: 6, scope: !7935)
!7943 = !DILocation(line: 2416, column: 18, scope: !7935)
!7944 = !DILocation(line: 2417, column: 2, scope: !7935)
!7945 = !DILocation(line: 2417, column: 6, scope: !7935)
!7946 = !DILocation(line: 2417, column: 13, scope: !7935)
!7947 = !DILocation(line: 2420, column: 2, scope: !7935)
!7948 = !DILocation(line: 2420, column: 6, scope: !7935)
!7949 = !DILocation(line: 2420, column: 11, scope: !7935)
!7950 = !DILocation(line: 2421, column: 2, scope: !7935)
!7951 = !DILocation(line: 2421, column: 6, scope: !7935)
!7952 = !DILocation(line: 2421, column: 11, scope: !7935)
!7953 = !DILocation(line: 2424, column: 2, scope: !7935)
!7954 = !DILocation(line: 2424, column: 6, scope: !7935)
!7955 = !DILocation(line: 2424, column: 11, scope: !7935)
!7956 = !DILocation(line: 2425, column: 1, scope: !7935)
!7957 = distinct !DISubprogram(name: "node_shader_script_update_exec", scope: !3, file: !3, line: 2351, type: !5544, scopeLine: 2352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!7958 = !DILocalVariable(name: "C", arg: 1, scope: !7957, file: !3, line: 2351, type: !3399)
!7959 = !DILocation(line: 2351, column: 53, scope: !7957)
!7960 = !DILocalVariable(name: "op", arg: 2, scope: !7957, file: !3, line: 2351, type: !4682)
!7961 = !DILocation(line: 2351, column: 68, scope: !7957)
!7962 = !DILocalVariable(name: "bmain", scope: !7957, file: !3, line: 2353, type: !3454)
!7963 = !DILocation(line: 2353, column: 8, scope: !7957)
!7964 = !DILocation(line: 2353, column: 30, scope: !7957)
!7965 = !DILocation(line: 2353, column: 16, scope: !7957)
!7966 = !DILocalVariable(name: "scene", scope: !7957, file: !3, line: 2354, type: !2869)
!7967 = !DILocation(line: 2354, column: 9, scope: !7957)
!7968 = !DILocation(line: 2354, column: 32, scope: !7957)
!7969 = !DILocation(line: 2354, column: 17, scope: !7957)
!7970 = !DILocalVariable(name: "snode", scope: !7957, file: !3, line: 2355, type: !3213)
!7971 = !DILocation(line: 2355, column: 13, scope: !7957)
!7972 = !DILocation(line: 2355, column: 39, scope: !7957)
!7973 = !DILocation(line: 2355, column: 21, scope: !7957)
!7974 = !DILocalVariable(name: "nodeptr", scope: !7957, file: !3, line: 2356, type: !3841)
!7975 = !DILocation(line: 2356, column: 13, scope: !7957)
!7976 = !DILocation(line: 2356, column: 49, scope: !7957)
!7977 = !DILocation(line: 2356, column: 23, scope: !7957)
!7978 = !DILocalVariable(name: "ntree", scope: !7957, file: !3, line: 2357, type: !2867)
!7979 = !DILocation(line: 2357, column: 13, scope: !7957)
!7980 = !DILocalVariable(name: "node", scope: !7957, file: !3, line: 2358, type: !499)
!7981 = !DILocation(line: 2358, column: 9, scope: !7957)
!7982 = !DILocalVariable(name: "engine", scope: !7957, file: !3, line: 2359, type: !7983)
!7983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7984, size: 64)
!7984 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderEngine", file: !7985, line: 129, baseType: !7986)
!7985 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_engine.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !7985, line: 102, size: 5696, elements: !7987)
!7987 = !{!7988, !8033, !8034, !8035, !8036, !8037, !8038, !8039, !8041, !8042, !8046, !8047, !8048, !8049, !8050, !8051, !8052, !8053, !8054, !8055}
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7986, file: !7985, line: 103, baseType: !7989, size: 64)
!7989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7990, size: 64)
!7990 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderEngineType", file: !7985, line: 100, baseType: !7991)
!7991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngineType", file: !7985, line: 81, size: 1856, elements: !7992)
!7992 = !{!7993, !7995, !7996, !7997, !7998, !7999, !8004, !8008, !8023, !8027, !8028, !8032}
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7991, file: !7985, line: 82, baseType: !7994, size: 64)
!7994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7991, size: 64)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7991, file: !7985, line: 82, baseType: !7994, size: 64, offset: 64)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !7991, file: !7985, line: 85, baseType: !33, size: 512, offset: 128)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7991, file: !7985, line: 86, baseType: !33, size: 512, offset: 640)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7991, file: !7985, line: 87, baseType: !22, size: 32, offset: 1152)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !7991, file: !7985, line: 89, baseType: !8000, size: 64, offset: 1216)
!8000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8001, size: 64)
!8001 = !DISubroutineType(types: !8002)
!8002 = !{null, !8003, !3460, !153}
!8003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7986, size: 64)
!8004 = !DIDerivedType(tag: DW_TAG_member, name: "render", scope: !7991, file: !7985, line: 90, baseType: !8005, size: 64, offset: 1280)
!8005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8006, size: 64)
!8006 = !DISubroutineType(types: !8007)
!8007 = !{null, !8003, !153}
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !7991, file: !7985, line: 91, baseType: !8009, size: 64, offset: 1344)
!8009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8010, size: 64)
!8010 = !DISubroutineType(types: !8011)
!8011 = !{null, !8003, !153, !163, !8012, !8013, !8012, !8012, !56}
!8012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22)
!8013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8014, size: 64)
!8014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8015)
!8015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakePixel", file: !6031, line: 51, size: 224, elements: !8016)
!8016 = !{!8017, !8018, !8019, !8020, !8021, !8022}
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "primitive_id", scope: !8015, file: !6031, line: 52, baseType: !22, size: 32)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !8015, file: !6031, line: 53, baseType: !569, size: 64, offset: 32)
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "du_dx", scope: !8015, file: !6031, line: 54, baseType: !177, size: 32, offset: 96)
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "du_dy", scope: !8015, file: !6031, line: 54, baseType: !177, size: 32, offset: 128)
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "dv_dx", scope: !8015, file: !6031, line: 55, baseType: !177, size: 32, offset: 160)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "dv_dy", scope: !8015, file: !6031, line: 55, baseType: !177, size: 32, offset: 192)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "view_update", scope: !7991, file: !7985, line: 93, baseType: !8024, size: 64, offset: 1408)
!8024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8025, size: 64)
!8025 = !DISubroutineType(types: !8026)
!8026 = !{null, !8003, !536}
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "view_draw", scope: !7991, file: !7985, line: 94, baseType: !8024, size: 64, offset: 1472)
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "update_script_node", scope: !7991, file: !7985, line: 96, baseType: !8029, size: 64, offset: 1536)
!8029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8030, size: 64)
!8030 = !DISubroutineType(types: !8031)
!8031 = !{null, !8003, !328, !354}
!8032 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !7991, file: !7985, line: 99, baseType: !450, size: 256, offset: 1600)
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !7986, file: !7985, line: 104, baseType: !56, size: 64, offset: 64)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7986, file: !7985, line: 106, baseType: !22, size: 32, offset: 128)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "camera_override", scope: !7986, file: !7985, line: 107, baseType: !163, size: 64, offset: 192)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "layer_override", scope: !7986, file: !7985, line: 108, baseType: !676, size: 32, offset: 256)
!8037 = !DIDerivedType(tag: DW_TAG_member, name: "tile_x", scope: !7986, file: !7985, line: 110, baseType: !22, size: 32, offset: 288)
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "tile_y", scope: !7986, file: !7985, line: 111, baseType: !22, size: 32, offset: 320)
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !7986, file: !7985, line: 113, baseType: !8040, size: 64, offset: 384)
!8040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6030, size: 64)
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "fullresult", scope: !7986, file: !7985, line: 114, baseType: !58, size: 128, offset: 448)
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !7986, file: !7985, line: 115, baseType: !8043, size: 4096, offset: 576)
!8043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 4096, elements: !8044)
!8044 = !{!8045}
!8045 = !DISubrange(count: 512)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "resolution_x", scope: !7986, file: !7985, line: 117, baseType: !22, size: 32, offset: 4672)
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "resolution_y", scope: !7986, file: !7985, line: 117, baseType: !22, size: 32, offset: 4704)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !7986, file: !7985, line: 119, baseType: !86, size: 64, offset: 4736)
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "update_flag", scope: !7986, file: !7985, line: 122, baseType: !22, size: 32, offset: 4800)
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "job_update_flag", scope: !7986, file: !7985, line: 123, baseType: !22, size: 32, offset: 4832)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "last_viewplane", scope: !7986, file: !7985, line: 125, baseType: !549, size: 128, offset: 4864)
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "last_disprect", scope: !7986, file: !7985, line: 126, baseType: !559, size: 128, offset: 4992)
!8053 = !DIDerivedType(tag: DW_TAG_member, name: "last_viewmat", scope: !7986, file: !7985, line: 127, baseType: !1330, size: 512, offset: 5120)
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "last_winx", scope: !7986, file: !7985, line: 128, baseType: !22, size: 32, offset: 5632)
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "last_winy", scope: !7986, file: !7985, line: 128, baseType: !22, size: 32, offset: 5664)
!8056 = !DILocation(line: 2359, column: 16, scope: !7957)
!8057 = !DILocalVariable(name: "type", scope: !7957, file: !3, line: 2360, type: !7989)
!8058 = !DILocation(line: 2360, column: 20, scope: !7957)
!8059 = !DILocalVariable(name: "found", scope: !7957, file: !3, line: 2361, type: !699)
!8060 = !DILocation(line: 2361, column: 7, scope: !7957)
!8061 = !DILocation(line: 2364, column: 25, scope: !7957)
!8062 = !DILocation(line: 2364, column: 32, scope: !7957)
!8063 = !DILocation(line: 2364, column: 34, scope: !7957)
!8064 = !DILocation(line: 2364, column: 9, scope: !7957)
!8065 = !DILocation(line: 2364, column: 7, scope: !7957)
!8066 = !DILocation(line: 2365, column: 28, scope: !7957)
!8067 = !DILocation(line: 2365, column: 11, scope: !7957)
!8068 = !DILocation(line: 2365, column: 9, scope: !7957)
!8069 = !DILocation(line: 2366, column: 20, scope: !7957)
!8070 = !DILocation(line: 2366, column: 24, scope: !7957)
!8071 = !DILocation(line: 2366, column: 2, scope: !7957)
!8072 = !DILocation(line: 2366, column: 10, scope: !7957)
!8073 = !DILocation(line: 2366, column: 18, scope: !7957)
!8074 = !DILocation(line: 2369, column: 14, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 2369, column: 6)
!8076 = !DILocation(line: 2369, column: 6, scope: !8075)
!8077 = !DILocation(line: 2369, column: 6, scope: !7957)
!8078 = !DILocation(line: 2370, column: 19, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8075, file: !3, line: 2369, column: 20)
!8080 = !DILocation(line: 2370, column: 22, scope: !8079)
!8081 = !DILocation(line: 2370, column: 11, scope: !8079)
!8082 = !DILocation(line: 2370, column: 9, scope: !8079)
!8083 = !DILocation(line: 2371, column: 18, scope: !8079)
!8084 = !DILocation(line: 2371, column: 10, scope: !8079)
!8085 = !DILocation(line: 2371, column: 8, scope: !8079)
!8086 = !DILocation(line: 2372, column: 2, scope: !8079)
!8087 = !DILocation(line: 2373, column: 11, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8075, file: !3, line: 2373, column: 11)
!8089 = !DILocation(line: 2373, column: 17, scope: !8088)
!8090 = !DILocation(line: 2373, column: 20, scope: !8088)
!8091 = !DILocation(line: 2373, column: 27, scope: !8088)
!8092 = !DILocation(line: 2373, column: 11, scope: !8075)
!8093 = !DILocation(line: 2374, column: 11, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 2373, column: 37)
!8095 = !DILocation(line: 2374, column: 18, scope: !8094)
!8096 = !DILocation(line: 2374, column: 9, scope: !8094)
!8097 = !DILocation(line: 2375, column: 24, scope: !8094)
!8098 = !DILocation(line: 2375, column: 31, scope: !8094)
!8099 = !DILocation(line: 2375, column: 10, scope: !8094)
!8100 = !DILocation(line: 2375, column: 8, scope: !8094)
!8101 = !DILocation(line: 2376, column: 2, scope: !8094)
!8102 = !DILocation(line: 2378, column: 6, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 2378, column: 6)
!8104 = !DILocation(line: 2378, column: 6, scope: !7957)
!8105 = !DILocation(line: 2380, column: 3, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 2378, column: 12)
!8107 = !DILocation(line: 2380, column: 9, scope: !8106)
!8108 = !DILocation(line: 2380, column: 28, scope: !8106)
!8109 = !DILocation(line: 2380, column: 36, scope: !8106)
!8110 = !DILocation(line: 2380, column: 43, scope: !8106)
!8111 = !DILocation(line: 2382, column: 9, scope: !8106)
!8112 = !DILocation(line: 2383, column: 2, scope: !8106)
!8113 = !DILocalVariable(name: "text", scope: !8114, file: !3, line: 2386, type: !8115)
!8114 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 2384, column: 7)
!8115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8116, size: 64)
!8116 = !DIDerivedType(tag: DW_TAG_typedef, name: "Text", file: !2315, line: 66, baseType: !2314)
!8117 = !DILocation(line: 2386, column: 9, scope: !8114)
!8118 = !DILocation(line: 2386, column: 42, scope: !8114)
!8119 = !DILocation(line: 2386, column: 16, scope: !8114)
!8120 = !DILocation(line: 2386, column: 69, scope: !8114)
!8121 = !DILocation(line: 2388, column: 7, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 2388, column: 7)
!8123 = !DILocation(line: 2388, column: 7, scope: !8114)
!8124 = !DILocalVariable(name: "_nstore", scope: !8125, file: !3, line: 2390, type: !3531)
!8125 = distinct !DILexicalBlock(scope: !8126, file: !3, line: 2390, column: 4)
!8126 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 2388, column: 13)
!8127 = !DILocation(line: 2390, column: 4, scope: !8125)
!8128 = !DILocalVariable(name: "ntree", scope: !8125, file: !3, line: 2390, type: !2867)
!8129 = !DILocalVariable(name: "id", scope: !8125, file: !3, line: 2390, type: !126)
!8130 = !DILocation(line: 2390, column: 4, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 2390, column: 4)
!8132 = distinct !DILexicalBlock(scope: !8125, file: !3, line: 2390, column: 4)
!8133 = !DILocation(line: 2390, column: 4, scope: !8132)
!8134 = !DILocation(line: 2391, column: 9, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !8136, file: !3, line: 2391, column: 9)
!8136 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 2390, column: 39)
!8137 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 2390, column: 4)
!8138 = !DILocation(line: 2391, column: 16, scope: !8135)
!8139 = !DILocation(line: 2391, column: 21, scope: !8135)
!8140 = !DILocation(line: 2391, column: 9, scope: !8136)
!8141 = !DILocation(line: 2392, column: 6, scope: !8135)
!8142 = !DILocation(line: 2392, column: 13, scope: !8135)
!8143 = !DILocation(line: 2392, column: 18, scope: !8135)
!8144 = !DILocation(line: 2393, column: 6, scope: !8137)
!8145 = distinct !{!8145, !8127, !8146}
!8146 = !DILocation(line: 2393, column: 6, scope: !8125)
!8147 = !DILocalVariable(name: "_nstore", scope: !8148, file: !3, line: 2395, type: !3531)
!8148 = distinct !DILexicalBlock(scope: !8126, file: !3, line: 2395, column: 4)
!8149 = !DILocation(line: 2395, column: 4, scope: !8148)
!8150 = !DILocalVariable(name: "ntree", scope: !8148, file: !3, line: 2395, type: !2867)
!8151 = !DILocalVariable(name: "id", scope: !8148, file: !3, line: 2395, type: !126)
!8152 = !DILocation(line: 2395, column: 4, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8154, file: !3, line: 2395, column: 4)
!8154 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 2395, column: 4)
!8155 = !DILocation(line: 2395, column: 4, scope: !8154)
!8156 = !DILocation(line: 2396, column: 9, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 2396, column: 9)
!8158 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 2395, column: 39)
!8159 = distinct !DILexicalBlock(scope: !8153, file: !3, line: 2395, column: 4)
!8160 = !DILocation(line: 2396, column: 16, scope: !8157)
!8161 = !DILocation(line: 2396, column: 21, scope: !8157)
!8162 = !DILocation(line: 2396, column: 9, scope: !8158)
!8163 = !DILocation(line: 2397, column: 11, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8165, file: !3, line: 2397, column: 10)
!8165 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 2396, column: 38)
!8166 = !DILocation(line: 2397, column: 18, scope: !8164)
!8167 = !DILocation(line: 2397, column: 10, scope: !8165)
!8168 = !DILocation(line: 2398, column: 57, scope: !8164)
!8169 = !DILocation(line: 2398, column: 65, scope: !8164)
!8170 = !DILocation(line: 2398, column: 71, scope: !8164)
!8171 = !DILocation(line: 2398, column: 78, scope: !8164)
!8172 = !DILocation(line: 2398, column: 16, scope: !8164)
!8173 = !DILocation(line: 2398, column: 13, scope: !8164)
!8174 = !DILocation(line: 2398, column: 7, scope: !8164)
!8175 = !DILocation(line: 2399, column: 5, scope: !8165)
!8176 = !DILocation(line: 2400, column: 6, scope: !8159)
!8177 = distinct !{!8177, !8149, !8178}
!8178 = !DILocation(line: 2400, column: 6, scope: !8148)
!8179 = !DILocation(line: 2402, column: 9, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8126, file: !3, line: 2402, column: 8)
!8181 = !DILocation(line: 2402, column: 8, scope: !8126)
!8182 = !DILocation(line: 2403, column: 16, scope: !8180)
!8183 = !DILocation(line: 2403, column: 20, scope: !8180)
!8184 = !DILocation(line: 2403, column: 5, scope: !8180)
!8185 = !DILocation(line: 2404, column: 3, scope: !8126)
!8186 = !DILocation(line: 2407, column: 17, scope: !7957)
!8187 = !DILocation(line: 2407, column: 2, scope: !7957)
!8188 = !DILocation(line: 2409, column: 10, scope: !7957)
!8189 = !DILocation(line: 2409, column: 9, scope: !7957)
!8190 = !DILocation(line: 2409, column: 2, scope: !7957)
!8191 = distinct !DISubprogram(name: "node_shader_script_update_poll", scope: !3, file: !3, line: 2291, type: !3397, scopeLine: 2292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8192 = !DILocalVariable(name: "C", arg: 1, scope: !8191, file: !3, line: 2291, type: !3399)
!8193 = !DILocation(line: 2291, column: 53, scope: !8191)
!8194 = !DILocalVariable(name: "scene", scope: !8191, file: !3, line: 2293, type: !2869)
!8195 = !DILocation(line: 2293, column: 9, scope: !8191)
!8196 = !DILocation(line: 2293, column: 32, scope: !8191)
!8197 = !DILocation(line: 2293, column: 17, scope: !8191)
!8198 = !DILocalVariable(name: "type", scope: !8191, file: !3, line: 2294, type: !7989)
!8199 = !DILocation(line: 2294, column: 20, scope: !8191)
!8200 = !DILocation(line: 2294, column: 43, scope: !8191)
!8201 = !DILocation(line: 2294, column: 50, scope: !8191)
!8202 = !DILocation(line: 2294, column: 52, scope: !8191)
!8203 = !DILocation(line: 2294, column: 27, scope: !8191)
!8204 = !DILocalVariable(name: "snode", scope: !8191, file: !3, line: 2295, type: !3213)
!8205 = !DILocation(line: 2295, column: 13, scope: !8191)
!8206 = !DILocation(line: 2295, column: 39, scope: !8191)
!8207 = !DILocation(line: 2295, column: 21, scope: !8191)
!8208 = !DILocalVariable(name: "node", scope: !8191, file: !3, line: 2296, type: !499)
!8209 = !DILocation(line: 2296, column: 9, scope: !8191)
!8210 = !DILocalVariable(name: "text", scope: !8191, file: !3, line: 2297, type: !8115)
!8211 = !DILocation(line: 2297, column: 8, scope: !8191)
!8212 = !DILocation(line: 2300, column: 8, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 2300, column: 6)
!8214 = !DILocation(line: 2300, column: 13, scope: !8213)
!8215 = !DILocation(line: 2300, column: 16, scope: !8213)
!8216 = !DILocation(line: 2300, column: 22, scope: !8213)
!8217 = !DILocation(line: 2300, column: 6, scope: !8191)
!8218 = !DILocation(line: 2301, column: 3, scope: !8213)
!8219 = !DILocation(line: 2304, column: 35, scope: !8191)
!8220 = !DILocation(line: 2304, column: 9, scope: !8191)
!8221 = !DILocation(line: 2304, column: 69, scope: !8191)
!8222 = !DILocation(line: 2304, column: 7, scope: !8191)
!8223 = !DILocation(line: 2306, column: 7, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 2306, column: 6)
!8225 = !DILocation(line: 2306, column: 12, scope: !8224)
!8226 = !DILocation(line: 2306, column: 15, scope: !8224)
!8227 = !DILocation(line: 2306, column: 21, scope: !8224)
!8228 = !DILocation(line: 2306, column: 24, scope: !8224)
!8229 = !DILocation(line: 2306, column: 31, scope: !8224)
!8230 = !DILocation(line: 2306, column: 6, scope: !8191)
!8231 = !DILocation(line: 2307, column: 24, scope: !8224)
!8232 = !DILocation(line: 2307, column: 31, scope: !8224)
!8233 = !DILocation(line: 2307, column: 10, scope: !8224)
!8234 = !DILocation(line: 2307, column: 8, scope: !8224)
!8235 = !DILocation(line: 2307, column: 3, scope: !8224)
!8236 = !DILocation(line: 2309, column: 6, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 2309, column: 6)
!8238 = !DILocation(line: 2309, column: 11, scope: !8237)
!8239 = !DILocation(line: 2309, column: 14, scope: !8237)
!8240 = !DILocation(line: 2309, column: 20, scope: !8237)
!8241 = !DILocation(line: 2309, column: 25, scope: !8237)
!8242 = !DILocation(line: 2309, column: 6, scope: !8191)
!8243 = !DILocalVariable(name: "nss", scope: !8244, file: !3, line: 2310, type: !8245)
!8244 = distinct !DILexicalBlock(scope: !8237, file: !3, line: 2309, column: 44)
!8245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8246, size: 64)
!8246 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeShaderScript", file: !83, line: 838, baseType: !8247)
!8247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NodeShaderScript", file: !83, line: 830, size: 8832, elements: !8248)
!8248 = !{!8249, !8250, !8251, !8252, !8253}
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !8247, file: !83, line: 831, baseType: !22, size: 32)
!8250 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8247, file: !83, line: 832, baseType: !22, size: 32, offset: 32)
!8251 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !8247, file: !83, line: 834, baseType: !131, size: 8192, offset: 64)
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "bytecode_hash", scope: !8247, file: !83, line: 836, baseType: !33, size: 512, offset: 8256)
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "bytecode", scope: !8247, file: !83, line: 837, baseType: !621, size: 64, offset: 8768)
!8254 = !DILocation(line: 2310, column: 21, scope: !8244)
!8255 = !DILocation(line: 2310, column: 27, scope: !8244)
!8256 = !DILocation(line: 2310, column: 33, scope: !8244)
!8257 = !DILocation(line: 2312, column: 7, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 2312, column: 7)
!8259 = !DILocation(line: 2312, column: 13, scope: !8258)
!8260 = !DILocation(line: 2312, column: 16, scope: !8258)
!8261 = !DILocation(line: 2312, column: 19, scope: !8258)
!8262 = !DILocation(line: 2312, column: 24, scope: !8258)
!8263 = !DILocation(line: 2312, column: 7, scope: !8244)
!8264 = !DILocation(line: 2313, column: 37, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 2312, column: 37)
!8266 = !DILocation(line: 2313, column: 11, scope: !8265)
!8267 = !DILocation(line: 2313, column: 4, scope: !8265)
!8268 = !DILocation(line: 2315, column: 2, scope: !8244)
!8269 = !DILocation(line: 2318, column: 35, scope: !8191)
!8270 = !DILocation(line: 2318, column: 9, scope: !8191)
!8271 = !DILocation(line: 2318, column: 62, scope: !8191)
!8272 = !DILocation(line: 2318, column: 7, scope: !8191)
!8273 = !DILocation(line: 2319, column: 6, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 2319, column: 6)
!8275 = !DILocation(line: 2319, column: 6, scope: !8191)
!8276 = !DILocation(line: 2320, column: 3, scope: !8274)
!8277 = !DILocation(line: 2324, column: 2, scope: !8191)
!8278 = !DILocation(line: 2325, column: 1, scope: !8191)
!8279 = distinct !DISubprogram(name: "NODE_OT_viewer_border", scope: !3, file: !3, line: 2501, type: !4, scopeLine: 2502, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8280 = !DILocalVariable(name: "ot", arg: 1, scope: !8279, file: !3, line: 2501, type: !6)
!8281 = !DILocation(line: 2501, column: 44, scope: !8279)
!8282 = !DILocation(line: 2504, column: 2, scope: !8279)
!8283 = !DILocation(line: 2504, column: 6, scope: !8279)
!8284 = !DILocation(line: 2504, column: 11, scope: !8279)
!8285 = !DILocation(line: 2505, column: 2, scope: !8279)
!8286 = !DILocation(line: 2505, column: 6, scope: !8279)
!8287 = !DILocation(line: 2505, column: 18, scope: !8279)
!8288 = !DILocation(line: 2506, column: 2, scope: !8279)
!8289 = !DILocation(line: 2506, column: 6, scope: !8279)
!8290 = !DILocation(line: 2506, column: 13, scope: !8279)
!8291 = !DILocation(line: 2509, column: 2, scope: !8279)
!8292 = !DILocation(line: 2509, column: 6, scope: !8279)
!8293 = !DILocation(line: 2509, column: 13, scope: !8279)
!8294 = !DILocation(line: 2510, column: 2, scope: !8279)
!8295 = !DILocation(line: 2510, column: 6, scope: !8279)
!8296 = !DILocation(line: 2510, column: 11, scope: !8279)
!8297 = !DILocation(line: 2511, column: 2, scope: !8279)
!8298 = !DILocation(line: 2511, column: 6, scope: !8279)
!8299 = !DILocation(line: 2511, column: 12, scope: !8279)
!8300 = !DILocation(line: 2512, column: 2, scope: !8279)
!8301 = !DILocation(line: 2512, column: 6, scope: !8279)
!8302 = !DILocation(line: 2512, column: 13, scope: !8279)
!8303 = !DILocation(line: 2513, column: 2, scope: !8279)
!8304 = !DILocation(line: 2513, column: 6, scope: !8279)
!8305 = !DILocation(line: 2513, column: 11, scope: !8279)
!8306 = !DILocation(line: 2516, column: 2, scope: !8279)
!8307 = !DILocation(line: 2516, column: 6, scope: !8279)
!8308 = !DILocation(line: 2516, column: 11, scope: !8279)
!8309 = !DILocation(line: 2519, column: 40, scope: !8279)
!8310 = !DILocation(line: 2519, column: 2, scope: !8279)
!8311 = !DILocation(line: 2520, column: 1, scope: !8279)
!8312 = distinct !DISubprogram(name: "viewer_border_exec", scope: !3, file: !3, line: 2442, type: !5544, scopeLine: 2443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8313 = !DILocalVariable(name: "C", arg: 1, scope: !8312, file: !3, line: 2442, type: !3399)
!8314 = !DILocation(line: 2442, column: 41, scope: !8312)
!8315 = !DILocalVariable(name: "op", arg: 2, scope: !8312, file: !3, line: 2442, type: !4682)
!8316 = !DILocation(line: 2442, column: 56, scope: !8312)
!8317 = !DILocalVariable(name: "ima", scope: !8312, file: !3, line: 2444, type: !8318)
!8318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8319, size: 64)
!8319 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !311, line: 127, baseType: !990)
!8320 = !DILocation(line: 2444, column: 9, scope: !8312)
!8321 = !DILocalVariable(name: "lock", scope: !8312, file: !3, line: 2445, type: !56)
!8322 = !DILocation(line: 2445, column: 8, scope: !8312)
!8323 = !DILocalVariable(name: "ibuf", scope: !8312, file: !3, line: 2446, type: !8324)
!8324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8325, size: 64)
!8325 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImBuf", file: !692, line: 141, baseType: !691)
!8326 = !DILocation(line: 2446, column: 9, scope: !8312)
!8327 = !DILocation(line: 2448, column: 23, scope: !8312)
!8328 = !DILocation(line: 2448, column: 2, scope: !8312)
!8329 = !DILocation(line: 2450, column: 8, scope: !8312)
!8330 = !DILocation(line: 2450, column: 6, scope: !8312)
!8331 = !DILocation(line: 2451, column: 32, scope: !8312)
!8332 = !DILocation(line: 2451, column: 9, scope: !8312)
!8333 = !DILocation(line: 2451, column: 7, scope: !8312)
!8334 = !DILocation(line: 2453, column: 6, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 2453, column: 6)
!8336 = !DILocation(line: 2453, column: 6, scope: !8312)
!8337 = !DILocalVariable(name: "ar", scope: !8338, file: !3, line: 2454, type: !4698)
!8338 = distinct !DILexicalBlock(scope: !8335, file: !3, line: 2453, column: 12)
!8339 = !DILocation(line: 2454, column: 12, scope: !8338)
!8340 = !DILocation(line: 2454, column: 31, scope: !8338)
!8341 = !DILocation(line: 2454, column: 17, scope: !8338)
!8342 = !DILocalVariable(name: "snode", scope: !8338, file: !3, line: 2455, type: !3213)
!8343 = !DILocation(line: 2455, column: 14, scope: !8338)
!8344 = !DILocation(line: 2455, column: 40, scope: !8338)
!8345 = !DILocation(line: 2455, column: 22, scope: !8338)
!8346 = !DILocalVariable(name: "btree", scope: !8338, file: !3, line: 2456, type: !2867)
!8347 = !DILocation(line: 2456, column: 14, scope: !8338)
!8348 = !DILocation(line: 2456, column: 22, scope: !8338)
!8349 = !DILocation(line: 2456, column: 29, scope: !8338)
!8350 = !DILocalVariable(name: "rect", scope: !8338, file: !3, line: 2457, type: !559)
!8351 = !DILocation(line: 2457, column: 8, scope: !8338)
!8352 = !DILocalVariable(name: "rectf", scope: !8338, file: !3, line: 2458, type: !549)
!8353 = !DILocation(line: 2458, column: 8, scope: !8338)
!8354 = !DILocation(line: 2461, column: 41, scope: !8338)
!8355 = !DILocation(line: 2461, column: 3, scope: !8338)
!8356 = !DILocation(line: 2464, column: 36, scope: !8338)
!8357 = !DILocation(line: 2464, column: 43, scope: !8338)
!8358 = !DILocation(line: 2464, column: 52, scope: !8338)
!8359 = !DILocation(line: 2464, column: 63, scope: !8338)
!8360 = !DILocation(line: 2464, column: 69, scope: !8338)
!8361 = !DILocation(line: 2464, column: 75, scope: !8338)
!8362 = !DILocation(line: 2464, column: 78, scope: !8338)
!8363 = !DILocation(line: 2464, column: 84, scope: !8338)
!8364 = !DILocation(line: 2465, column: 43, scope: !8338)
!8365 = !DILocation(line: 2465, column: 56, scope: !8338)
!8366 = !DILocation(line: 2464, column: 3, scope: !8338)
!8367 = !DILocation(line: 2467, column: 36, scope: !8338)
!8368 = !DILocation(line: 2467, column: 43, scope: !8338)
!8369 = !DILocation(line: 2467, column: 52, scope: !8338)
!8370 = !DILocation(line: 2467, column: 63, scope: !8338)
!8371 = !DILocation(line: 2467, column: 69, scope: !8338)
!8372 = !DILocation(line: 2467, column: 75, scope: !8338)
!8373 = !DILocation(line: 2467, column: 78, scope: !8338)
!8374 = !DILocation(line: 2467, column: 84, scope: !8338)
!8375 = !DILocation(line: 2468, column: 43, scope: !8338)
!8376 = !DILocation(line: 2468, column: 56, scope: !8338)
!8377 = !DILocation(line: 2467, column: 3, scope: !8338)
!8378 = !DILocation(line: 2471, column: 29, scope: !8338)
!8379 = !DILocation(line: 2471, column: 16, scope: !8338)
!8380 = !DILocation(line: 2471, column: 9, scope: !8338)
!8381 = !DILocation(line: 2471, column: 14, scope: !8338)
!8382 = !DILocation(line: 2472, column: 29, scope: !8338)
!8383 = !DILocation(line: 2472, column: 16, scope: !8338)
!8384 = !DILocation(line: 2472, column: 9, scope: !8338)
!8385 = !DILocation(line: 2472, column: 14, scope: !8338)
!8386 = !DILocation(line: 2473, column: 29, scope: !8338)
!8387 = !DILocation(line: 2473, column: 16, scope: !8338)
!8388 = !DILocation(line: 2473, column: 9, scope: !8338)
!8389 = !DILocation(line: 2473, column: 14, scope: !8338)
!8390 = !DILocation(line: 2474, column: 29, scope: !8338)
!8391 = !DILocation(line: 2474, column: 16, scope: !8338)
!8392 = !DILocation(line: 2474, column: 9, scope: !8338)
!8393 = !DILocation(line: 2474, column: 14, scope: !8338)
!8394 = !DILocation(line: 2476, column: 13, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 2476, column: 7)
!8396 = !DILocation(line: 2476, column: 26, scope: !8395)
!8397 = !DILocation(line: 2476, column: 18, scope: !8395)
!8398 = !DILocation(line: 2476, column: 31, scope: !8395)
!8399 = !DILocation(line: 2476, column: 40, scope: !8395)
!8400 = !DILocation(line: 2476, column: 53, scope: !8395)
!8401 = !DILocation(line: 2476, column: 45, scope: !8395)
!8402 = !DILocation(line: 2476, column: 7, scope: !8338)
!8403 = !DILocation(line: 2477, column: 4, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 2476, column: 59)
!8405 = !DILocation(line: 2477, column: 11, scope: !8404)
!8406 = !DILocation(line: 2477, column: 27, scope: !8404)
!8407 = !DILocation(line: 2479, column: 14, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8404, file: !3, line: 2479, column: 8)
!8409 = !DILocation(line: 2479, column: 19, scope: !8408)
!8410 = !DILocation(line: 2479, column: 27, scope: !8408)
!8411 = !DILocation(line: 2479, column: 36, scope: !8408)
!8412 = !DILocation(line: 2479, column: 41, scope: !8408)
!8413 = !DILocation(line: 2479, column: 49, scope: !8408)
!8414 = !DILocation(line: 2480, column: 14, scope: !8408)
!8415 = !DILocation(line: 2480, column: 19, scope: !8408)
!8416 = !DILocation(line: 2480, column: 27, scope: !8408)
!8417 = !DILocation(line: 2480, column: 36, scope: !8408)
!8418 = !DILocation(line: 2480, column: 41, scope: !8408)
!8419 = !DILocation(line: 2479, column: 8, scope: !8404)
!8420 = !DILocation(line: 2482, column: 5, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8408, file: !3, line: 2481, column: 4)
!8422 = !DILocation(line: 2482, column: 12, scope: !8421)
!8423 = !DILocation(line: 2482, column: 17, scope: !8421)
!8424 = !DILocation(line: 2483, column: 4, scope: !8421)
!8425 = !DILocation(line: 2485, column: 5, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8408, file: !3, line: 2484, column: 9)
!8427 = !DILocation(line: 2485, column: 12, scope: !8426)
!8428 = !DILocation(line: 2485, column: 17, scope: !8426)
!8429 = !DILocation(line: 2488, column: 17, scope: !8404)
!8430 = !DILocation(line: 2488, column: 20, scope: !8404)
!8431 = !DILocation(line: 2488, column: 4, scope: !8404)
!8432 = !DILocation(line: 2489, column: 26, scope: !8404)
!8433 = !DILocation(line: 2489, column: 4, scope: !8404)
!8434 = !DILocation(line: 2490, column: 3, scope: !8404)
!8435 = !DILocation(line: 2492, column: 4, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 2491, column: 8)
!8437 = !DILocation(line: 2492, column: 11, scope: !8436)
!8438 = !DILocation(line: 2492, column: 16, scope: !8436)
!8439 = !DILocation(line: 2494, column: 2, scope: !8338)
!8440 = !DILocation(line: 2496, column: 25, scope: !8312)
!8441 = !DILocation(line: 2496, column: 30, scope: !8312)
!8442 = !DILocation(line: 2496, column: 36, scope: !8312)
!8443 = !DILocation(line: 2496, column: 2, scope: !8312)
!8444 = !DILocation(line: 2498, column: 2, scope: !8312)
!8445 = distinct !DISubprogram(name: "NODE_OT_clear_viewer_border", scope: !3, file: !3, line: 2534, type: !4, scopeLine: 2535, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8446 = !DILocalVariable(name: "ot", arg: 1, scope: !8445, file: !3, line: 2534, type: !6)
!8447 = !DILocation(line: 2534, column: 50, scope: !8445)
!8448 = !DILocation(line: 2537, column: 2, scope: !8445)
!8449 = !DILocation(line: 2537, column: 6, scope: !8445)
!8450 = !DILocation(line: 2537, column: 11, scope: !8445)
!8451 = !DILocation(line: 2538, column: 2, scope: !8445)
!8452 = !DILocation(line: 2538, column: 6, scope: !8445)
!8453 = !DILocation(line: 2538, column: 18, scope: !8445)
!8454 = !DILocation(line: 2539, column: 2, scope: !8445)
!8455 = !DILocation(line: 2539, column: 6, scope: !8445)
!8456 = !DILocation(line: 2539, column: 13, scope: !8445)
!8457 = !DILocation(line: 2542, column: 2, scope: !8445)
!8458 = !DILocation(line: 2542, column: 6, scope: !8445)
!8459 = !DILocation(line: 2542, column: 11, scope: !8445)
!8460 = !DILocation(line: 2543, column: 2, scope: !8445)
!8461 = !DILocation(line: 2543, column: 6, scope: !8445)
!8462 = !DILocation(line: 2543, column: 11, scope: !8445)
!8463 = !DILocation(line: 2546, column: 2, scope: !8445)
!8464 = !DILocation(line: 2546, column: 6, scope: !8445)
!8465 = !DILocation(line: 2546, column: 11, scope: !8445)
!8466 = !DILocation(line: 2547, column: 1, scope: !8445)
!8467 = distinct !DISubprogram(name: "clear_viewer_border_exec", scope: !3, file: !3, line: 2522, type: !5544, scopeLine: 2523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8468 = !DILocalVariable(name: "C", arg: 1, scope: !8467, file: !3, line: 2522, type: !3399)
!8469 = !DILocation(line: 2522, column: 47, scope: !8467)
!8470 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !8467, file: !3, line: 2522, type: !4682)
!8471 = !DILocation(line: 2522, column: 62, scope: !8467)
!8472 = !DILocalVariable(name: "snode", scope: !8467, file: !3, line: 2524, type: !3213)
!8473 = !DILocation(line: 2524, column: 13, scope: !8467)
!8474 = !DILocation(line: 2524, column: 39, scope: !8467)
!8475 = !DILocation(line: 2524, column: 21, scope: !8467)
!8476 = !DILocalVariable(name: "btree", scope: !8467, file: !3, line: 2525, type: !2867)
!8477 = !DILocation(line: 2525, column: 13, scope: !8467)
!8478 = !DILocation(line: 2525, column: 21, scope: !8467)
!8479 = !DILocation(line: 2525, column: 28, scope: !8467)
!8480 = !DILocation(line: 2527, column: 2, scope: !8467)
!8481 = !DILocation(line: 2527, column: 9, scope: !8467)
!8482 = !DILocation(line: 2527, column: 14, scope: !8467)
!8483 = !DILocation(line: 2528, column: 15, scope: !8467)
!8484 = !DILocation(line: 2528, column: 18, scope: !8467)
!8485 = !DILocation(line: 2528, column: 2, scope: !8467)
!8486 = !DILocation(line: 2529, column: 24, scope: !8467)
!8487 = !DILocation(line: 2529, column: 2, scope: !8467)
!8488 = !DILocation(line: 2531, column: 2, scope: !8467)
!8489 = distinct !DISubprogram(name: "compo_breakjob", scope: !3, file: !3, line: 155, type: !980, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8490 = !DILocalVariable(name: "cjv", arg: 1, scope: !8489, file: !3, line: 155, type: !56)
!8491 = !DILocation(line: 155, column: 33, scope: !8489)
!8492 = !DILocalVariable(name: "cj", scope: !8489, file: !3, line: 157, type: !2906)
!8493 = !DILocation(line: 157, column: 12, scope: !8489)
!8494 = !DILocation(line: 157, column: 17, scope: !8489)
!8495 = !DILocation(line: 160, column: 12, scope: !8489)
!8496 = !DILocation(line: 160, column: 16, scope: !8489)
!8497 = !DILocation(line: 160, column: 10, scope: !8489)
!8498 = !DILocation(line: 162, column: 10, scope: !8489)
!8499 = !DILocation(line: 163, column: 12, scope: !8489)
!8500 = !DILocation(line: 163, column: 10, scope: !8489)
!8501 = !DILocation(line: 160, column: 2, scope: !8489)
!8502 = distinct !DISubprogram(name: "compo_statsdrawjob", scope: !3, file: !3, line: 169, type: !976, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8503 = !DILocalVariable(name: "cjv", arg: 1, scope: !8502, file: !3, line: 169, type: !56)
!8504 = !DILocation(line: 169, column: 38, scope: !8502)
!8505 = !DILocalVariable(name: "UNUSED_str", arg: 2, scope: !8502, file: !3, line: 169, type: !621)
!8506 = !DILocation(line: 169, column: 49, scope: !8502)
!8507 = !DILocalVariable(name: "cj", scope: !8502, file: !3, line: 171, type: !2906)
!8508 = !DILocation(line: 171, column: 12, scope: !8502)
!8509 = !DILocation(line: 171, column: 17, scope: !8502)
!8510 = !DILocation(line: 173, column: 4, scope: !8502)
!8511 = !DILocation(line: 173, column: 8, scope: !8502)
!8512 = !DILocation(line: 173, column: 19, scope: !8502)
!8513 = !DILocation(line: 174, column: 2, scope: !8502)
!8514 = !DILocation(line: 174, column: 6, scope: !8502)
!8515 = !DILocation(line: 174, column: 16, scope: !8502)
!8516 = !DILocation(line: 175, column: 1, scope: !8502)
!8517 = distinct !DISubprogram(name: "compo_progressjob", scope: !3, file: !3, line: 222, type: !972, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8518 = !DILocalVariable(name: "cjv", arg: 1, scope: !8517, file: !3, line: 222, type: !56)
!8519 = !DILocation(line: 222, column: 37, scope: !8517)
!8520 = !DILocalVariable(name: "progress", arg: 2, scope: !8517, file: !3, line: 222, type: !177)
!8521 = !DILocation(line: 222, column: 48, scope: !8517)
!8522 = !DILocalVariable(name: "cj", scope: !8517, file: !3, line: 224, type: !2906)
!8523 = !DILocation(line: 224, column: 12, scope: !8517)
!8524 = !DILocation(line: 224, column: 17, scope: !8517)
!8525 = !DILocation(line: 226, column: 20, scope: !8517)
!8526 = !DILocation(line: 226, column: 4, scope: !8517)
!8527 = !DILocation(line: 226, column: 8, scope: !8517)
!8528 = !DILocation(line: 226, column: 18, scope: !8517)
!8529 = !DILocation(line: 227, column: 1, scope: !8517)
!8530 = distinct !DISubprogram(name: "compo_redrawjob", scope: !3, file: !3, line: 178, type: !476, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8531 = !DILocalVariable(name: "cjv", arg: 1, scope: !8530, file: !3, line: 178, type: !56)
!8532 = !DILocation(line: 178, column: 35, scope: !8530)
!8533 = !DILocalVariable(name: "cj", scope: !8530, file: !3, line: 180, type: !2906)
!8534 = !DILocation(line: 180, column: 12, scope: !8530)
!8535 = !DILocation(line: 180, column: 17, scope: !8530)
!8536 = !DILocation(line: 182, column: 4, scope: !8530)
!8537 = !DILocation(line: 182, column: 8, scope: !8530)
!8538 = !DILocation(line: 182, column: 19, scope: !8530)
!8539 = !DILocation(line: 183, column: 1, scope: !8530)
!8540 = distinct !DISubprogram(name: "compo_tag_output_nodes", scope: !3, file: !3, line: 103, type: !8541, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8541 = !DISubroutineType(types: !8542)
!8542 = !{null, !2867, !22}
!8543 = !DILocalVariable(name: "nodetree", arg: 1, scope: !8540, file: !3, line: 103, type: !2867)
!8544 = !DILocation(line: 103, column: 47, scope: !8540)
!8545 = !DILocalVariable(name: "recalc_flags", arg: 2, scope: !8540, file: !3, line: 103, type: !22)
!8546 = !DILocation(line: 103, column: 61, scope: !8540)
!8547 = !DILocalVariable(name: "node", scope: !8540, file: !3, line: 105, type: !499)
!8548 = !DILocation(line: 105, column: 9, scope: !8540)
!8549 = !DILocation(line: 107, column: 14, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8540, file: !3, line: 107, column: 2)
!8551 = !DILocation(line: 107, column: 24, scope: !8550)
!8552 = !DILocation(line: 107, column: 30, scope: !8550)
!8553 = !DILocation(line: 107, column: 12, scope: !8550)
!8554 = !DILocation(line: 107, column: 7, scope: !8550)
!8555 = !DILocation(line: 107, column: 37, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 107, column: 2)
!8557 = !DILocation(line: 107, column: 2, scope: !8550)
!8558 = !DILocation(line: 108, column: 7, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8560, file: !3, line: 108, column: 7)
!8560 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 107, column: 62)
!8561 = !DILocation(line: 108, column: 13, scope: !8559)
!8562 = !DILocation(line: 108, column: 18, scope: !8559)
!8563 = !DILocation(line: 108, column: 7, scope: !8560)
!8564 = !DILocation(line: 109, column: 8, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8566, file: !3, line: 109, column: 8)
!8566 = distinct !DILexicalBlock(scope: !8559, file: !3, line: 108, column: 41)
!8567 = !DILocation(line: 109, column: 21, scope: !8565)
!8568 = !DILocation(line: 109, column: 8, scope: !8566)
!8569 = !DILocation(line: 110, column: 5, scope: !8565)
!8570 = !DILocation(line: 110, column: 11, scope: !8565)
!8571 = !DILocation(line: 110, column: 16, scope: !8565)
!8572 = !DILocation(line: 111, column: 3, scope: !8566)
!8573 = !DILocation(line: 112, column: 12, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8559, file: !3, line: 112, column: 12)
!8575 = !DILocation(line: 112, column: 18, scope: !8574)
!8576 = !DILocation(line: 112, column: 23, scope: !8574)
!8577 = !DILocation(line: 112, column: 42, scope: !8574)
!8578 = !DILocation(line: 112, column: 45, scope: !8574)
!8579 = !DILocation(line: 112, column: 51, scope: !8574)
!8580 = !DILocation(line: 112, column: 56, scope: !8574)
!8581 = !DILocation(line: 112, column: 12, scope: !8559)
!8582 = !DILocation(line: 113, column: 8, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 113, column: 8)
!8584 = distinct !DILexicalBlock(scope: !8574, file: !3, line: 112, column: 81)
!8585 = !DILocation(line: 113, column: 21, scope: !8583)
!8586 = !DILocation(line: 113, column: 8, scope: !8584)
!8587 = !DILocation(line: 114, column: 5, scope: !8583)
!8588 = !DILocation(line: 114, column: 11, scope: !8583)
!8589 = !DILocation(line: 114, column: 16, scope: !8583)
!8590 = !DILocation(line: 115, column: 3, scope: !8584)
!8591 = !DILocation(line: 116, column: 12, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8574, file: !3, line: 116, column: 12)
!8593 = !DILocation(line: 116, column: 18, scope: !8592)
!8594 = !DILocation(line: 116, column: 23, scope: !8592)
!8595 = !DILocation(line: 116, column: 12, scope: !8574)
!8596 = !DILocation(line: 117, column: 8, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8598, file: !3, line: 117, column: 8)
!8598 = distinct !DILexicalBlock(scope: !8592, file: !3, line: 116, column: 38)
!8599 = !DILocation(line: 117, column: 14, scope: !8597)
!8600 = !DILocation(line: 117, column: 8, scope: !8598)
!8601 = !DILocation(line: 118, column: 41, scope: !8597)
!8602 = !DILocation(line: 118, column: 47, scope: !8597)
!8603 = !DILocation(line: 118, column: 28, scope: !8597)
!8604 = !DILocation(line: 118, column: 51, scope: !8597)
!8605 = !DILocation(line: 118, column: 5, scope: !8597)
!8606 = !DILocation(line: 119, column: 3, scope: !8598)
!8607 = !DILocation(line: 120, column: 2, scope: !8560)
!8608 = !DILocation(line: 107, column: 50, scope: !8556)
!8609 = !DILocation(line: 107, column: 56, scope: !8556)
!8610 = !DILocation(line: 107, column: 48, scope: !8556)
!8611 = !DILocation(line: 107, column: 2, scope: !8556)
!8612 = distinct !{!8612, !8557, !8613}
!8613 = !DILocation(line: 120, column: 2, scope: !8550)
!8614 = !DILocation(line: 121, column: 1, scope: !8540)
!8615 = distinct !DISubprogram(name: "node_resize_init", scope: !3, file: !3, line: 833, type: !8616, scopeLine: 834, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8616 = !DISubroutineType(types: !8617)
!8617 = !{null, !3399, !4682, !4684, !499, !22}
!8618 = !DILocalVariable(name: "C", arg: 1, scope: !8615, file: !3, line: 833, type: !3399)
!8619 = !DILocation(line: 833, column: 40, scope: !8615)
!8620 = !DILocalVariable(name: "op", arg: 2, scope: !8615, file: !3, line: 833, type: !4682)
!8621 = !DILocation(line: 833, column: 55, scope: !8615)
!8622 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !8615, file: !3, line: 833, type: !4684)
!8623 = !DILocation(line: 833, column: 74, scope: !8615)
!8624 = !DILocalVariable(name: "node", arg: 4, scope: !8615, file: !3, line: 833, type: !499)
!8625 = !DILocation(line: 833, column: 96, scope: !8615)
!8626 = !DILocalVariable(name: "dir", arg: 5, scope: !8615, file: !3, line: 833, type: !22)
!8627 = !DILocation(line: 833, column: 106, scope: !8615)
!8628 = !DILocalVariable(name: "snode", scope: !8615, file: !3, line: 835, type: !3213)
!8629 = !DILocation(line: 835, column: 13, scope: !8615)
!8630 = !DILocation(line: 835, column: 39, scope: !8615)
!8631 = !DILocation(line: 835, column: 21, scope: !8615)
!8632 = !DILocalVariable(name: "nsw", scope: !8615, file: !3, line: 837, type: !4770)
!8633 = !DILocation(line: 837, column: 18, scope: !8615)
!8634 = !DILocation(line: 837, column: 24, scope: !8615)
!8635 = !DILocation(line: 839, column: 19, scope: !8615)
!8636 = !DILocation(line: 839, column: 2, scope: !8615)
!8637 = !DILocation(line: 839, column: 6, scope: !8615)
!8638 = !DILocation(line: 839, column: 17, scope: !8615)
!8639 = !DILocation(line: 840, column: 17, scope: !8615)
!8640 = !DILocation(line: 840, column: 24, scope: !8615)
!8641 = !DILocation(line: 840, column: 2, scope: !8615)
!8642 = !DILocation(line: 840, column: 7, scope: !8615)
!8643 = !DILocation(line: 840, column: 15, scope: !8615)
!8644 = !DILocation(line: 841, column: 17, scope: !8615)
!8645 = !DILocation(line: 841, column: 24, scope: !8615)
!8646 = !DILocation(line: 841, column: 2, scope: !8615)
!8647 = !DILocation(line: 841, column: 7, scope: !8615)
!8648 = !DILocation(line: 841, column: 15, scope: !8615)
!8649 = !DILocation(line: 844, column: 17, scope: !8615)
!8650 = !DILocation(line: 844, column: 23, scope: !8615)
!8651 = !DILocation(line: 844, column: 2, scope: !8615)
!8652 = !DILocation(line: 844, column: 7, scope: !8615)
!8653 = !DILocation(line: 844, column: 15, scope: !8615)
!8654 = !DILocation(line: 845, column: 17, scope: !8615)
!8655 = !DILocation(line: 845, column: 23, scope: !8615)
!8656 = !DILocation(line: 845, column: 2, scope: !8615)
!8657 = !DILocation(line: 845, column: 7, scope: !8615)
!8658 = !DILocation(line: 845, column: 15, scope: !8615)
!8659 = !DILocation(line: 846, column: 20, scope: !8615)
!8660 = !DILocation(line: 846, column: 26, scope: !8615)
!8661 = !DILocation(line: 846, column: 2, scope: !8615)
!8662 = !DILocation(line: 846, column: 7, scope: !8615)
!8663 = !DILocation(line: 846, column: 18, scope: !8615)
!8664 = !DILocation(line: 847, column: 20, scope: !8615)
!8665 = !DILocation(line: 847, column: 26, scope: !8615)
!8666 = !DILocation(line: 847, column: 2, scope: !8615)
!8667 = !DILocation(line: 847, column: 7, scope: !8615)
!8668 = !DILocation(line: 847, column: 18, scope: !8615)
!8669 = !DILocation(line: 848, column: 18, scope: !8615)
!8670 = !DILocation(line: 848, column: 24, scope: !8615)
!8671 = !DILocation(line: 848, column: 2, scope: !8615)
!8672 = !DILocation(line: 848, column: 7, scope: !8615)
!8673 = !DILocation(line: 848, column: 16, scope: !8615)
!8674 = !DILocation(line: 849, column: 19, scope: !8615)
!8675 = !DILocation(line: 849, column: 25, scope: !8615)
!8676 = !DILocation(line: 849, column: 2, scope: !8615)
!8677 = !DILocation(line: 849, column: 7, scope: !8615)
!8678 = !DILocation(line: 849, column: 17, scope: !8615)
!8679 = !DILocation(line: 850, column: 22, scope: !8615)
!8680 = !DILocation(line: 850, column: 28, scope: !8615)
!8681 = !DILocation(line: 850, column: 2, scope: !8615)
!8682 = !DILocation(line: 850, column: 7, scope: !8615)
!8683 = !DILocation(line: 850, column: 20, scope: !8615)
!8684 = !DILocation(line: 851, column: 20, scope: !8615)
!8685 = !DILocation(line: 851, column: 2, scope: !8615)
!8686 = !DILocation(line: 851, column: 7, scope: !8615)
!8687 = !DILocation(line: 851, column: 18, scope: !8615)
!8688 = !DILocation(line: 853, column: 36, scope: !8615)
!8689 = !DILocation(line: 853, column: 22, scope: !8615)
!8690 = !DILocation(line: 853, column: 63, scope: !8615)
!8691 = !DILocation(line: 853, column: 40, scope: !8615)
!8692 = !DILocation(line: 853, column: 2, scope: !8615)
!8693 = !DILocation(line: 855, column: 29, scope: !8615)
!8694 = !DILocation(line: 855, column: 32, scope: !8615)
!8695 = !DILocation(line: 855, column: 2, scope: !8615)
!8696 = !DILocation(line: 856, column: 1, scope: !8615)
!8697 = distinct !DISubprogram(name: "node_resize_exit", scope: !3, file: !3, line: 858, type: !8698, scopeLine: 859, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8698 = !DISubroutineType(types: !8699)
!8699 = !{null, !3399, !4682, !699}
!8700 = !DILocalVariable(name: "C", arg: 1, scope: !8697, file: !3, line: 858, type: !3399)
!8701 = !DILocation(line: 858, column: 40, scope: !8697)
!8702 = !DILocalVariable(name: "op", arg: 2, scope: !8697, file: !3, line: 858, type: !4682)
!8703 = !DILocation(line: 858, column: 55, scope: !8697)
!8704 = !DILocalVariable(name: "UNUSED_cancel", arg: 3, scope: !8697, file: !3, line: 858, type: !699)
!8705 = !DILocation(line: 858, column: 64, scope: !8697)
!8706 = !DILocation(line: 860, column: 40, scope: !8697)
!8707 = !DILocation(line: 860, column: 26, scope: !8697)
!8708 = !DILocation(line: 860, column: 2, scope: !8697)
!8709 = !DILocation(line: 862, column: 2, scope: !8697)
!8710 = !DILocation(line: 862, column: 12, scope: !8697)
!8711 = !DILocation(line: 862, column: 16, scope: !8697)
!8712 = !DILocation(line: 863, column: 2, scope: !8697)
!8713 = !DILocation(line: 863, column: 6, scope: !8697)
!8714 = !DILocation(line: 863, column: 17, scope: !8697)
!8715 = !DILocation(line: 864, column: 1, scope: !8697)
!8716 = distinct !DISubprogram(name: "node_duplicate_reparent_recursive", scope: !3, file: !3, line: 1116, type: !8717, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8717 = !DISubroutineType(types: !8718)
!8718 = !{null, !499}
!8719 = !DILocalVariable(name: "node", arg: 1, scope: !8716, file: !3, line: 1116, type: !499)
!8720 = !DILocation(line: 1116, column: 54, scope: !8716)
!8721 = !DILocalVariable(name: "parent", scope: !8716, file: !3, line: 1118, type: !499)
!8722 = !DILocation(line: 1118, column: 9, scope: !8716)
!8723 = !DILocation(line: 1120, column: 2, scope: !8716)
!8724 = !DILocation(line: 1120, column: 8, scope: !8716)
!8725 = !DILocation(line: 1120, column: 13, scope: !8716)
!8726 = !DILocation(line: 1123, column: 16, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 1123, column: 2)
!8728 = !DILocation(line: 1123, column: 22, scope: !8727)
!8729 = !DILocation(line: 1123, column: 14, scope: !8727)
!8730 = !DILocation(line: 1123, column: 7, scope: !8727)
!8731 = !DILocation(line: 1123, column: 30, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8727, file: !3, line: 1123, column: 2)
!8733 = !DILocation(line: 1123, column: 2, scope: !8727)
!8734 = !DILocation(line: 1124, column: 7, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 1124, column: 7)
!8736 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 1123, column: 63)
!8737 = !DILocation(line: 1124, column: 15, scope: !8735)
!8738 = !DILocation(line: 1124, column: 20, scope: !8735)
!8739 = !DILocation(line: 1124, column: 7, scope: !8736)
!8740 = !DILocation(line: 1125, column: 10, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8742, file: !3, line: 1125, column: 8)
!8742 = distinct !DILexicalBlock(scope: !8735, file: !3, line: 1124, column: 30)
!8743 = !DILocation(line: 1125, column: 18, scope: !8741)
!8744 = !DILocation(line: 1125, column: 23, scope: !8741)
!8745 = !DILocation(line: 1125, column: 8, scope: !8742)
!8746 = !DILocation(line: 1126, column: 39, scope: !8741)
!8747 = !DILocation(line: 1126, column: 5, scope: !8741)
!8748 = !DILocation(line: 1127, column: 4, scope: !8742)
!8749 = !DILocation(line: 1129, column: 2, scope: !8736)
!8750 = !DILocation(line: 1123, column: 47, scope: !8732)
!8751 = !DILocation(line: 1123, column: 55, scope: !8732)
!8752 = !DILocation(line: 1123, column: 45, scope: !8732)
!8753 = !DILocation(line: 1123, column: 2, scope: !8732)
!8754 = distinct !{!8754, !8733, !8755}
!8755 = !DILocation(line: 1129, column: 2, scope: !8727)
!8756 = !DILocation(line: 1131, column: 6, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 1131, column: 6)
!8758 = !DILocation(line: 1131, column: 6, scope: !8716)
!8759 = !DILocation(line: 1132, column: 18, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8757, file: !3, line: 1131, column: 14)
!8761 = !DILocation(line: 1132, column: 24, scope: !8760)
!8762 = !DILocation(line: 1132, column: 3, scope: !8760)
!8763 = !DILocation(line: 1133, column: 18, scope: !8760)
!8764 = !DILocation(line: 1133, column: 24, scope: !8760)
!8765 = !DILocation(line: 1133, column: 34, scope: !8760)
!8766 = !DILocation(line: 1133, column: 42, scope: !8760)
!8767 = !DILocation(line: 1133, column: 3, scope: !8760)
!8768 = !DILocation(line: 1134, column: 2, scope: !8760)
!8769 = !DILocation(line: 1135, column: 1, scope: !8716)
!8770 = distinct !DISubprogram(name: "node_flag_toggle_exec", scope: !3, file: !3, line: 1402, type: !8771, scopeLine: 1403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8771 = !DISubroutineType(types: !8772)
!8772 = !{null, !3213, !22}
!8773 = !DILocalVariable(name: "snode", arg: 1, scope: !8770, file: !3, line: 1402, type: !3213)
!8774 = !DILocation(line: 1402, column: 46, scope: !8770)
!8775 = !DILocalVariable(name: "toggle_flag", arg: 2, scope: !8770, file: !3, line: 1402, type: !22)
!8776 = !DILocation(line: 1402, column: 57, scope: !8770)
!8777 = !DILocalVariable(name: "node", scope: !8770, file: !3, line: 1404, type: !499)
!8778 = !DILocation(line: 1404, column: 9, scope: !8770)
!8779 = !DILocalVariable(name: "tot_eq", scope: !8770, file: !3, line: 1405, type: !22)
!8780 = !DILocation(line: 1405, column: 6, scope: !8770)
!8781 = !DILocalVariable(name: "tot_neq", scope: !8770, file: !3, line: 1405, type: !22)
!8782 = !DILocation(line: 1405, column: 18, scope: !8770)
!8783 = !DILocation(line: 1411, column: 14, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8770, file: !3, line: 1411, column: 2)
!8785 = !DILocation(line: 1411, column: 21, scope: !8784)
!8786 = !DILocation(line: 1411, column: 31, scope: !8784)
!8787 = !DILocation(line: 1411, column: 37, scope: !8784)
!8788 = !DILocation(line: 1411, column: 12, scope: !8784)
!8789 = !DILocation(line: 1411, column: 7, scope: !8784)
!8790 = !DILocation(line: 1411, column: 44, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8784, file: !3, line: 1411, column: 2)
!8792 = !DILocation(line: 1411, column: 2, scope: !8784)
!8793 = !DILocation(line: 1412, column: 7, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8795, file: !3, line: 1412, column: 7)
!8795 = distinct !DILexicalBlock(scope: !8791, file: !3, line: 1411, column: 69)
!8796 = !DILocation(line: 1412, column: 13, scope: !8794)
!8797 = !DILocation(line: 1412, column: 18, scope: !8794)
!8798 = !DILocation(line: 1412, column: 7, scope: !8795)
!8799 = !DILocation(line: 1414, column: 8, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 1414, column: 8)
!8801 = distinct !DILexicalBlock(scope: !8794, file: !3, line: 1412, column: 28)
!8802 = !DILocation(line: 1414, column: 20, scope: !8800)
!8803 = !DILocation(line: 1414, column: 36, scope: !8800)
!8804 = !DILocation(line: 1414, column: 40, scope: !8800)
!8805 = !DILocation(line: 1414, column: 46, scope: !8800)
!8806 = !DILocation(line: 1414, column: 56, scope: !8800)
!8807 = !DILocation(line: 1414, column: 61, scope: !8800)
!8808 = !DILocation(line: 1414, column: 77, scope: !8800)
!8809 = !DILocation(line: 1414, column: 8, scope: !8801)
!8810 = !DILocation(line: 1415, column: 5, scope: !8800)
!8811 = !DILocation(line: 1416, column: 8, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 1416, column: 8)
!8813 = !DILocation(line: 1416, column: 20, scope: !8812)
!8814 = !DILocation(line: 1416, column: 36, scope: !8812)
!8815 = !DILocation(line: 1416, column: 41, scope: !8812)
!8816 = !DILocation(line: 1416, column: 47, scope: !8812)
!8817 = !DILocation(line: 1416, column: 57, scope: !8812)
!8818 = !DILocation(line: 1416, column: 70, scope: !8812)
!8819 = !DILocation(line: 1416, column: 73, scope: !8812)
!8820 = !DILocation(line: 1416, column: 79, scope: !8812)
!8821 = !DILocation(line: 1416, column: 89, scope: !8812)
!8822 = !DILocation(line: 1416, column: 8, scope: !8801)
!8823 = !DILocation(line: 1417, column: 5, scope: !8812)
!8824 = !DILocation(line: 1419, column: 8, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 1419, column: 8)
!8826 = !DILocation(line: 1419, column: 14, scope: !8825)
!8827 = !DILocation(line: 1419, column: 21, scope: !8825)
!8828 = !DILocation(line: 1419, column: 19, scope: !8825)
!8829 = !DILocation(line: 1419, column: 8, scope: !8801)
!8830 = !DILocation(line: 1420, column: 11, scope: !8825)
!8831 = !DILocation(line: 1420, column: 5, scope: !8825)
!8832 = !DILocation(line: 1422, column: 12, scope: !8825)
!8833 = !DILocation(line: 1423, column: 3, scope: !8801)
!8834 = !DILocation(line: 1424, column: 2, scope: !8795)
!8835 = !DILocation(line: 1411, column: 57, scope: !8791)
!8836 = !DILocation(line: 1411, column: 63, scope: !8791)
!8837 = !DILocation(line: 1411, column: 55, scope: !8791)
!8838 = !DILocation(line: 1411, column: 2, scope: !8791)
!8839 = distinct !{!8839, !8792, !8840}
!8840 = !DILocation(line: 1424, column: 2, scope: !8784)
!8841 = !DILocation(line: 1425, column: 14, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8770, file: !3, line: 1425, column: 2)
!8843 = !DILocation(line: 1425, column: 21, scope: !8842)
!8844 = !DILocation(line: 1425, column: 31, scope: !8842)
!8845 = !DILocation(line: 1425, column: 37, scope: !8842)
!8846 = !DILocation(line: 1425, column: 12, scope: !8842)
!8847 = !DILocation(line: 1425, column: 7, scope: !8842)
!8848 = !DILocation(line: 1425, column: 44, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8842, file: !3, line: 1425, column: 2)
!8850 = !DILocation(line: 1425, column: 2, scope: !8842)
!8851 = !DILocation(line: 1426, column: 7, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 1426, column: 7)
!8853 = distinct !DILexicalBlock(scope: !8849, file: !3, line: 1425, column: 69)
!8854 = !DILocation(line: 1426, column: 13, scope: !8852)
!8855 = !DILocation(line: 1426, column: 18, scope: !8852)
!8856 = !DILocation(line: 1426, column: 7, scope: !8853)
!8857 = !DILocation(line: 1428, column: 8, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 1428, column: 8)
!8859 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 1426, column: 28)
!8860 = !DILocation(line: 1428, column: 20, scope: !8858)
!8861 = !DILocation(line: 1428, column: 36, scope: !8858)
!8862 = !DILocation(line: 1428, column: 40, scope: !8858)
!8863 = !DILocation(line: 1428, column: 46, scope: !8858)
!8864 = !DILocation(line: 1428, column: 56, scope: !8858)
!8865 = !DILocation(line: 1428, column: 61, scope: !8858)
!8866 = !DILocation(line: 1428, column: 77, scope: !8858)
!8867 = !DILocation(line: 1428, column: 8, scope: !8859)
!8868 = !DILocation(line: 1429, column: 5, scope: !8858)
!8869 = !DILocation(line: 1430, column: 8, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 1430, column: 8)
!8871 = !DILocation(line: 1430, column: 20, scope: !8870)
!8872 = !DILocation(line: 1430, column: 36, scope: !8870)
!8873 = !DILocation(line: 1430, column: 41, scope: !8870)
!8874 = !DILocation(line: 1430, column: 47, scope: !8870)
!8875 = !DILocation(line: 1430, column: 57, scope: !8870)
!8876 = !DILocation(line: 1430, column: 70, scope: !8870)
!8877 = !DILocation(line: 1430, column: 73, scope: !8870)
!8878 = !DILocation(line: 1430, column: 79, scope: !8870)
!8879 = !DILocation(line: 1430, column: 89, scope: !8870)
!8880 = !DILocation(line: 1430, column: 8, scope: !8859)
!8881 = !DILocation(line: 1431, column: 5, scope: !8870)
!8882 = !DILocation(line: 1433, column: 9, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 1433, column: 8)
!8884 = !DILocation(line: 1433, column: 16, scope: !8883)
!8885 = !DILocation(line: 1433, column: 19, scope: !8883)
!8886 = !DILocation(line: 1433, column: 28, scope: !8883)
!8887 = !DILocation(line: 1433, column: 31, scope: !8883)
!8888 = !DILocation(line: 1433, column: 38, scope: !8883)
!8889 = !DILocation(line: 1433, column: 8, scope: !8859)
!8890 = !DILocation(line: 1434, column: 19, scope: !8883)
!8891 = !DILocation(line: 1434, column: 5, scope: !8883)
!8892 = !DILocation(line: 1434, column: 11, scope: !8883)
!8893 = !DILocation(line: 1434, column: 16, scope: !8883)
!8894 = !DILocation(line: 1436, column: 20, scope: !8883)
!8895 = !DILocation(line: 1436, column: 19, scope: !8883)
!8896 = !DILocation(line: 1436, column: 5, scope: !8883)
!8897 = !DILocation(line: 1436, column: 11, scope: !8883)
!8898 = !DILocation(line: 1436, column: 16, scope: !8883)
!8899 = !DILocation(line: 1437, column: 3, scope: !8859)
!8900 = !DILocation(line: 1438, column: 2, scope: !8853)
!8901 = !DILocation(line: 1425, column: 57, scope: !8849)
!8902 = !DILocation(line: 1425, column: 63, scope: !8849)
!8903 = !DILocation(line: 1425, column: 55, scope: !8849)
!8904 = !DILocation(line: 1425, column: 2, scope: !8849)
!8905 = distinct !{!8905, !8850, !8906}
!8906 = !DILocation(line: 1438, column: 2, scope: !8842)
!8907 = !DILocation(line: 1439, column: 1, scope: !8770)
!8908 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !8909, file: !8909, line: 88, type: !8910, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8909 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8910 = !DISubroutineType(types: !8911)
!8911 = !{!699, !8912}
!8912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8913, size: 64)
!8913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!8914 = !DILocalVariable(name: "lb", arg: 1, scope: !8908, file: !8909, line: 88, type: !8912)
!8915 = !DILocation(line: 88, column: 62, scope: !8908)
!8916 = !DILocation(line: 88, column: 76, scope: !8908)
!8917 = !DILocation(line: 88, column: 80, scope: !8908)
!8918 = !DILocation(line: 88, column: 86, scope: !8908)
!8919 = !DILocation(line: 88, column: 75, scope: !8908)
!8920 = !DILocation(line: 88, column: 68, scope: !8908)
!8921 = distinct !DISubprogram(name: "zero_v2", scope: !3876, file: !3876, line: 37, type: !8922, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8922 = !DISubroutineType(types: !8923)
!8923 = !{null, !239}
!8924 = !DILocalVariable(name: "r", arg: 1, scope: !8921, file: !3876, line: 37, type: !239)
!8925 = !DILocation(line: 37, column: 28, scope: !8921)
!8926 = !DILocation(line: 39, column: 2, scope: !8921)
!8927 = !DILocation(line: 39, column: 7, scope: !8921)
!8928 = !DILocation(line: 40, column: 2, scope: !8921)
!8929 = !DILocation(line: 40, column: 7, scope: !8921)
!8930 = !DILocation(line: 41, column: 1, scope: !8921)
!8931 = distinct !DISubprogram(name: "BLI_rctf_cent_x", scope: !8932, file: !8932, line: 102, type: !8933, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8932 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8933 = !DISubroutineType(types: !8934)
!8934 = !{!177, !8935}
!8935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8936, size: 64)
!8936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !551)
!8937 = !DILocalVariable(name: "rct", arg: 1, scope: !8931, file: !8932, line: 102, type: !8935)
!8938 = !DILocation(line: 102, column: 53, scope: !8931)
!8939 = !DILocation(line: 102, column: 68, scope: !8931)
!8940 = !DILocation(line: 102, column: 73, scope: !8931)
!8941 = !DILocation(line: 102, column: 80, scope: !8931)
!8942 = !DILocation(line: 102, column: 85, scope: !8931)
!8943 = !DILocation(line: 102, column: 78, scope: !8931)
!8944 = !DILocation(line: 102, column: 91, scope: !8931)
!8945 = !DILocation(line: 102, column: 60, scope: !8931)
!8946 = distinct !DISubprogram(name: "BLI_rctf_cent_y", scope: !8932, file: !8932, line: 103, type: !8933, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8947 = !DILocalVariable(name: "rct", arg: 1, scope: !8946, file: !8932, line: 103, type: !8935)
!8948 = !DILocation(line: 103, column: 53, scope: !8946)
!8949 = !DILocation(line: 103, column: 68, scope: !8946)
!8950 = !DILocation(line: 103, column: 73, scope: !8946)
!8951 = !DILocation(line: 103, column: 80, scope: !8946)
!8952 = !DILocation(line: 103, column: 85, scope: !8946)
!8953 = !DILocation(line: 103, column: 78, scope: !8946)
!8954 = !DILocation(line: 103, column: 91, scope: !8946)
!8955 = !DILocation(line: 103, column: 60, scope: !8946)
!8956 = distinct !DISubprogram(name: "mul_v2_fl", scope: !3876, file: !3876, line: 380, type: !8957, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8957 = !DISubroutineType(types: !8958)
!8958 = !{null, !239, !177}
!8959 = !DILocalVariable(name: "r", arg: 1, scope: !8956, file: !3876, line: 380, type: !239)
!8960 = !DILocation(line: 380, column: 30, scope: !8956)
!8961 = !DILocalVariable(name: "f", arg: 2, scope: !8956, file: !3876, line: 380, type: !177)
!8962 = !DILocation(line: 380, column: 42, scope: !8956)
!8963 = !DILocation(line: 382, column: 10, scope: !8956)
!8964 = !DILocation(line: 382, column: 2, scope: !8956)
!8965 = !DILocation(line: 382, column: 7, scope: !8956)
!8966 = !DILocation(line: 383, column: 10, scope: !8956)
!8967 = !DILocation(line: 383, column: 2, scope: !8956)
!8968 = !DILocation(line: 383, column: 7, scope: !8956)
!8969 = !DILocation(line: 384, column: 1, scope: !8956)
!8970 = distinct !DISubprogram(name: "ntree_get_active_interface_socket", scope: !3, file: !3, line: 2101, type: !8971, scopeLine: 2102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!8971 = !DISubroutineType(types: !8972)
!8972 = !{!503, !1544}
!8973 = !DILocalVariable(name: "lb", arg: 1, scope: !8970, file: !3, line: 2101, type: !1544)
!8974 = !DILocation(line: 2101, column: 65, scope: !8970)
!8975 = !DILocalVariable(name: "sock", scope: !8970, file: !3, line: 2103, type: !503)
!8976 = !DILocation(line: 2103, column: 15, scope: !8970)
!8977 = !DILocation(line: 2104, column: 14, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8970, file: !3, line: 2104, column: 2)
!8979 = !DILocation(line: 2104, column: 18, scope: !8978)
!8980 = !DILocation(line: 2104, column: 12, scope: !8978)
!8981 = !DILocation(line: 2104, column: 7, scope: !8978)
!8982 = !DILocation(line: 2104, column: 25, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8978, file: !3, line: 2104, column: 2)
!8984 = !DILocation(line: 2104, column: 2, scope: !8978)
!8985 = !DILocation(line: 2105, column: 7, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8983, file: !3, line: 2105, column: 7)
!8987 = !DILocation(line: 2105, column: 13, scope: !8986)
!8988 = !DILocation(line: 2105, column: 18, scope: !8986)
!8989 = !DILocation(line: 2105, column: 7, scope: !8983)
!8990 = !DILocation(line: 2106, column: 11, scope: !8986)
!8991 = !DILocation(line: 2106, column: 4, scope: !8986)
!8992 = !DILocation(line: 2105, column: 20, scope: !8986)
!8993 = !DILocation(line: 2104, column: 38, scope: !8983)
!8994 = !DILocation(line: 2104, column: 44, scope: !8983)
!8995 = !DILocation(line: 2104, column: 36, scope: !8983)
!8996 = !DILocation(line: 2104, column: 2, scope: !8983)
!8997 = distinct !{!8997, !8984, !8998}
!8998 = !DILocation(line: 2106, column: 11, scope: !8978)
!8999 = !DILocation(line: 2107, column: 2, scope: !8970)
!9000 = !DILocation(line: 2108, column: 1, scope: !8970)
!9001 = distinct !DISubprogram(name: "node_shader_script_update_text_recursive", scope: !3, file: !3, line: 2328, type: !9002, scopeLine: 2329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!9002 = !DISubroutineType(types: !9003)
!9003 = !{!699, !7983, !7989, !2867, !8115}
!9004 = !DILocalVariable(name: "engine", arg: 1, scope: !9001, file: !3, line: 2328, type: !7983)
!9005 = !DILocation(line: 2328, column: 68, scope: !9001)
!9006 = !DILocalVariable(name: "type", arg: 2, scope: !9001, file: !3, line: 2328, type: !7989)
!9007 = !DILocation(line: 2328, column: 94, scope: !9001)
!9008 = !DILocalVariable(name: "ntree", arg: 3, scope: !9001, file: !3, line: 2328, type: !2867)
!9009 = !DILocation(line: 2328, column: 111, scope: !9001)
!9010 = !DILocalVariable(name: "text", arg: 4, scope: !9001, file: !3, line: 2328, type: !8115)
!9011 = !DILocation(line: 2328, column: 124, scope: !9001)
!9012 = !DILocalVariable(name: "found", scope: !9001, file: !3, line: 2330, type: !699)
!9013 = !DILocation(line: 2330, column: 7, scope: !9001)
!9014 = !DILocalVariable(name: "node", scope: !9001, file: !3, line: 2331, type: !499)
!9015 = !DILocation(line: 2331, column: 9, scope: !9001)
!9016 = !DILocation(line: 2333, column: 2, scope: !9001)
!9017 = !DILocation(line: 2333, column: 9, scope: !9001)
!9018 = !DILocation(line: 2333, column: 14, scope: !9001)
!9019 = !DILocation(line: 2336, column: 14, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9001, file: !3, line: 2336, column: 2)
!9021 = !DILocation(line: 2336, column: 21, scope: !9020)
!9022 = !DILocation(line: 2336, column: 27, scope: !9020)
!9023 = !DILocation(line: 2336, column: 12, scope: !9020)
!9024 = !DILocation(line: 2336, column: 7, scope: !9020)
!9025 = !DILocation(line: 2336, column: 34, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9020, file: !3, line: 2336, column: 2)
!9027 = !DILocation(line: 2336, column: 2, scope: !9020)
!9028 = !DILocation(line: 2337, column: 7, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9030, file: !3, line: 2337, column: 7)
!9030 = distinct !DILexicalBlock(scope: !9026, file: !3, line: 2336, column: 59)
!9031 = !DILocation(line: 2337, column: 13, scope: !9029)
!9032 = !DILocation(line: 2337, column: 18, scope: !9029)
!9033 = !DILocation(line: 2337, column: 7, scope: !9030)
!9034 = !DILocalVariable(name: "ngroup", scope: !9035, file: !3, line: 2338, type: !2867)
!9035 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 2337, column: 33)
!9036 = !DILocation(line: 2338, column: 15, scope: !9035)
!9037 = !DILocation(line: 2338, column: 37, scope: !9035)
!9038 = !DILocation(line: 2338, column: 43, scope: !9035)
!9039 = !DILocation(line: 2338, column: 24, scope: !9035)
!9040 = !DILocation(line: 2339, column: 8, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9035, file: !3, line: 2339, column: 8)
!9042 = !DILocation(line: 2339, column: 15, scope: !9041)
!9043 = !DILocation(line: 2339, column: 19, scope: !9041)
!9044 = !DILocation(line: 2339, column: 27, scope: !9041)
!9045 = !DILocation(line: 2339, column: 8, scope: !9035)
!9046 = !DILocation(line: 2340, column: 55, scope: !9041)
!9047 = !DILocation(line: 2340, column: 63, scope: !9041)
!9048 = !DILocation(line: 2340, column: 69, scope: !9041)
!9049 = !DILocation(line: 2340, column: 77, scope: !9041)
!9050 = !DILocation(line: 2340, column: 14, scope: !9041)
!9051 = !DILocation(line: 2340, column: 11, scope: !9041)
!9052 = !DILocation(line: 2340, column: 5, scope: !9041)
!9053 = !DILocation(line: 2341, column: 3, scope: !9035)
!9054 = !DILocation(line: 2342, column: 12, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 2342, column: 12)
!9056 = !DILocation(line: 2342, column: 18, scope: !9055)
!9057 = !DILocation(line: 2342, column: 23, scope: !9055)
!9058 = !DILocation(line: 2342, column: 41, scope: !9055)
!9059 = !DILocation(line: 2342, column: 44, scope: !9055)
!9060 = !DILocation(line: 2342, column: 50, scope: !9055)
!9061 = !DILocation(line: 2342, column: 57, scope: !9055)
!9062 = !DILocation(line: 2342, column: 63, scope: !9055)
!9063 = !DILocation(line: 2342, column: 53, scope: !9055)
!9064 = !DILocation(line: 2342, column: 12, scope: !9029)
!9065 = !DILocation(line: 2343, column: 4, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9055, file: !3, line: 2342, column: 67)
!9067 = !DILocation(line: 2343, column: 10, scope: !9066)
!9068 = !DILocation(line: 2343, column: 29, scope: !9066)
!9069 = !DILocation(line: 2343, column: 37, scope: !9066)
!9070 = !DILocation(line: 2343, column: 44, scope: !9066)
!9071 = !DILocation(line: 2344, column: 10, scope: !9066)
!9072 = !DILocation(line: 2345, column: 3, scope: !9066)
!9073 = !DILocation(line: 2346, column: 2, scope: !9030)
!9074 = !DILocation(line: 2336, column: 47, scope: !9026)
!9075 = !DILocation(line: 2336, column: 53, scope: !9026)
!9076 = !DILocation(line: 2336, column: 45, scope: !9026)
!9077 = !DILocation(line: 2336, column: 2, scope: !9026)
!9078 = distinct !{!9078, !9027, !9079}
!9079 = !DILocation(line: 2346, column: 2, scope: !9020)
!9080 = !DILocation(line: 2348, column: 9, scope: !9001)
!9081 = !DILocation(line: 2348, column: 2, scope: !9001)
!9082 = distinct !DISubprogram(name: "viewer_border_corner_to_backdrop", scope: !3, file: !3, line: 2429, type: !9083, scopeLine: 2432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!9083 = !DISubroutineType(types: !9084)
!9084 = !{null, !3213, !4698, !22, !22, !22, !22, !239, !239}
!9085 = !DILocalVariable(name: "snode", arg: 1, scope: !9082, file: !3, line: 2429, type: !3213)
!9086 = !DILocation(line: 2429, column: 57, scope: !9082)
!9087 = !DILocalVariable(name: "ar", arg: 2, scope: !9082, file: !3, line: 2429, type: !4698)
!9088 = !DILocation(line: 2429, column: 73, scope: !9082)
!9089 = !DILocalVariable(name: "x", arg: 3, scope: !9082, file: !3, line: 2429, type: !22)
!9090 = !DILocation(line: 2429, column: 81, scope: !9082)
!9091 = !DILocalVariable(name: "y", arg: 4, scope: !9082, file: !3, line: 2429, type: !22)
!9092 = !DILocation(line: 2429, column: 88, scope: !9082)
!9093 = !DILocalVariable(name: "backdrop_width", arg: 5, scope: !9082, file: !3, line: 2430, type: !22)
!9094 = !DILocation(line: 2430, column: 50, scope: !9082)
!9095 = !DILocalVariable(name: "backdrop_height", arg: 6, scope: !9082, file: !3, line: 2430, type: !22)
!9096 = !DILocation(line: 2430, column: 70, scope: !9082)
!9097 = !DILocalVariable(name: "fx", arg: 7, scope: !9082, file: !3, line: 2431, type: !239)
!9098 = !DILocation(line: 2431, column: 53, scope: !9082)
!9099 = !DILocalVariable(name: "fy", arg: 8, scope: !9082, file: !3, line: 2431, type: !239)
!9100 = !DILocation(line: 2431, column: 64, scope: !9082)
!9101 = !DILocalVariable(name: "bufx", scope: !9082, file: !3, line: 2433, type: !177)
!9102 = !DILocation(line: 2433, column: 8, scope: !9082)
!9103 = !DILocalVariable(name: "bufy", scope: !9082, file: !3, line: 2433, type: !177)
!9104 = !DILocation(line: 2433, column: 14, scope: !9082)
!9105 = !DILocation(line: 2435, column: 9, scope: !9082)
!9106 = !DILocation(line: 2435, column: 26, scope: !9082)
!9107 = !DILocation(line: 2435, column: 33, scope: !9082)
!9108 = !DILocation(line: 2435, column: 24, scope: !9082)
!9109 = !DILocation(line: 2435, column: 7, scope: !9082)
!9110 = !DILocation(line: 2436, column: 9, scope: !9082)
!9111 = !DILocation(line: 2436, column: 27, scope: !9082)
!9112 = !DILocation(line: 2436, column: 34, scope: !9082)
!9113 = !DILocation(line: 2436, column: 25, scope: !9082)
!9114 = !DILocation(line: 2436, column: 7, scope: !9082)
!9115 = !DILocation(line: 2438, column: 9, scope: !9082)
!9116 = !DILocation(line: 2438, column: 14, scope: !9082)
!9117 = !DILocation(line: 2438, column: 32, scope: !9082)
!9118 = !DILocation(line: 2438, column: 24, scope: !9082)
!9119 = !DILocation(line: 2438, column: 43, scope: !9082)
!9120 = !DILocation(line: 2438, column: 47, scope: !9082)
!9121 = !DILocation(line: 2438, column: 41, scope: !9082)
!9122 = !DILocation(line: 2438, column: 34, scope: !9082)
!9123 = !DILocation(line: 2438, column: 54, scope: !9082)
!9124 = !DILocation(line: 2438, column: 61, scope: !9082)
!9125 = !DILocation(line: 2438, column: 52, scope: !9082)
!9126 = !DILocation(line: 2438, column: 68, scope: !9082)
!9127 = !DILocation(line: 2438, column: 66, scope: !9082)
!9128 = !DILocation(line: 2438, column: 73, scope: !9082)
!9129 = !DILocation(line: 2438, column: 3, scope: !9082)
!9130 = !DILocation(line: 2438, column: 6, scope: !9082)
!9131 = !DILocation(line: 2439, column: 9, scope: !9082)
!9132 = !DILocation(line: 2439, column: 14, scope: !9082)
!9133 = !DILocation(line: 2439, column: 32, scope: !9082)
!9134 = !DILocation(line: 2439, column: 24, scope: !9082)
!9135 = !DILocation(line: 2439, column: 43, scope: !9082)
!9136 = !DILocation(line: 2439, column: 47, scope: !9082)
!9137 = !DILocation(line: 2439, column: 41, scope: !9082)
!9138 = !DILocation(line: 2439, column: 34, scope: !9082)
!9139 = !DILocation(line: 2439, column: 54, scope: !9082)
!9140 = !DILocation(line: 2439, column: 61, scope: !9082)
!9141 = !DILocation(line: 2439, column: 52, scope: !9082)
!9142 = !DILocation(line: 2439, column: 68, scope: !9082)
!9143 = !DILocation(line: 2439, column: 66, scope: !9082)
!9144 = !DILocation(line: 2439, column: 73, scope: !9082)
!9145 = !DILocation(line: 2439, column: 3, scope: !9082)
!9146 = !DILocation(line: 2439, column: 6, scope: !9082)
!9147 = !DILocation(line: 2440, column: 1, scope: !9082)
!9148 = distinct !DISubprogram(name: "max_ff", scope: !4629, file: !4629, line: 206, type: !4630, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2655, retainedNodes: !2883)
!9149 = !DILocalVariable(name: "a", arg: 1, scope: !9148, file: !4629, line: 206, type: !177)
!9150 = !DILocation(line: 206, column: 28, scope: !9148)
!9151 = !DILocalVariable(name: "b", arg: 2, scope: !9148, file: !4629, line: 206, type: !177)
!9152 = !DILocation(line: 206, column: 37, scope: !9148)
!9153 = !DILocation(line: 208, column: 10, scope: !9148)
!9154 = !DILocation(line: 208, column: 14, scope: !9148)
!9155 = !DILocation(line: 208, column: 12, scope: !9148)
!9156 = !DILocation(line: 208, column: 9, scope: !9148)
!9157 = !DILocation(line: 208, column: 19, scope: !9148)
!9158 = !DILocation(line: 208, column: 23, scope: !9148)
!9159 = !DILocation(line: 208, column: 2, scope: !9148)
