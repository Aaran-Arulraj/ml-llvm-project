; ModuleID = 'df-scan.c'
source_filename = "df-scan.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.df = type { [8 x %struct.dataflow*], [8 x %struct.dataflow*], %struct.bitmap_head_def*, %struct.df_ref_info, %struct.df_ref_info, %struct.df_reg_info**, %struct.df_reg_info**, %struct.df_reg_info**, i32, i32, %struct.df_insn_info**, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32, i32*, i32, i8, i8, i8 }
%struct.dataflow = type { %struct.df_problem*, i8**, i32, %struct.alloc_pool_def*, %struct.bitmap_head_def*, i8*, i32, i8, i8, i8 }
%struct.df_problem = type { i32, i32, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*, i8*)*, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, void (%struct.bitmap_head_def*)*, void ()*, void ()*, void (%struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void ()*, void ()*, %struct.df_problem*, i32, i8 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.gimple_seq_d = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.df_ref_info = type { %union.df_ref_d**, i32*, i32*, i32, i32, i32, i32 }
%union.df_ref_d = type { %struct.df_extract_ref }
%struct.df_extract_ref = type { %struct.df_regular_ref, i32, i32, i32 }
%struct.df_regular_ref = type { %struct.df_base_ref, %struct.rtx_def** }
%struct.df_base_ref = type { i32, %struct.rtx_def*, %struct.df_link*, %struct.df_insn_info*, %union.df_ref_d*, %union.df_ref_d*, i32, i32, i32 }
%struct.df_link = type { %union.df_ref_d*, %struct.df_link* }
%struct.df_insn_info = type { %struct.rtx_def*, %union.df_ref_d**, %union.df_ref_d**, %union.df_ref_d**, %struct.df_mw_hardreg**, i32 }
%struct.df_mw_hardreg = type { %struct.rtx_def*, i32, i32, i32, i32 }
%struct.df_reg_info = type { %union.df_ref_d*, i32 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.anon = type { i32, i32 }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.df_scan_problem_data = type { %struct.alloc_pool_def*, %struct.alloc_pool_def*, %struct.alloc_pool_def*, %struct.alloc_pool_def*, %struct.alloc_pool_def*, %struct.alloc_pool_def*, %struct.alloc_pool_def*, %struct.bitmap_obstack, %struct.bitmap_obstack }
%struct.df_scan_bb_info = type { %union.df_ref_d**, %union.df_ref_d** }
%struct.df_collection_rec = type { %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack*, %struct.VEC_df_mw_hardreg_ptr_stack* }
%struct.VEC_df_ref_stack = type { %struct.VEC_df_ref_base }
%struct.VEC_df_ref_base = type { i32, i32, [1 x %union.df_ref_d*] }
%struct.VEC_df_mw_hardreg_ptr_stack = type { %struct.VEC_df_mw_hardreg_ptr_base }
%struct.VEC_df_mw_hardreg_ptr_base = type { i32, i32, [1 x %struct.df_mw_hardreg*] }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.df_artificial_ref = type { %struct.df_base_ref, %struct.basic_block_def* }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }

@df = external dso_local global %struct.df*, align 8
@.str = private unnamed_addr constant [19 x i8] c"df_scan_block pool\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"df_scan ref base\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"df_scan ref artificial\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"df_scan ref regular\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"df_scan ref extract\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"df_scan insn\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"df_scan reg\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"df_scan mw_reg\00", align 1
@cfun = external dso_local global %struct.function*, align 8
@problem_SCAN = internal global %struct.df_problem { i32 0, i32 0, void (%struct.bitmap_head_def*)* @df_scan_alloc, void (%struct.bitmap_head_def*)* null, void (%struct.basic_block_def*, i8*)* @df_scan_free_bb_info, void (%struct.bitmap_head_def*)* null, void (%struct.bitmap_head_def*)* null, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)* null, void (%struct.basic_block_def*)* null, void (%struct.edge_def*)* null, i8 (i32)* null, void (%struct.bitmap_head_def*)* null, void ()* @df_scan_free, void ()* null, void (%struct._IO_FILE*)* @df_scan_start_dump, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_scan_start_block, void (%struct.basic_block_def*, %struct._IO_FILE*)* null, void ()* null, void ()* null, %struct.df_problem* null, i32 28, i8 0 }, align 8, !dbg !0
@.str.8 = private unnamed_addr constant [10 x i8] c"df-scan.c\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@dump_file = external dso_local global %struct._IO_FILE*, align 8
@.str.10 = private unnamed_addr constant [43 x i8] c"deferring deletion of insn with uid = %d.\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"deleting insn with uid = %d.\0A\00", align 1
@.str.12 = private unnamed_addr constant [31 x i8] c"no bb for insn with uid = %d.\0A\00", align 1
@df_null_ref_rec = internal global [1 x %union.df_ref_d*] zeroinitializer, align 8, !dbg !2048
@df_null_mw_rec = internal global [1 x %struct.df_mw_hardreg*] zeroinitializer, align 8, !dbg !2050
@.str.13 = private unnamed_addr constant [38 x i8] c"deferring rescan insn with uid = %d.\0A\00", align 1
@.str.14 = private unnamed_addr constant [48 x i8] c"verify found no changes in insn with uid = %d.\0A\00", align 1
@.str.15 = private unnamed_addr constant [32 x i8] c"rescanning insn with uid = %d.\0A\00", align 1
@.str.16 = private unnamed_addr constant [34 x i8] c"scanning new insn with uid = %d.\0A\00", align 1
@const_int_rtx = external dso_local global [129 x %struct.rtx_def*], align 16
@.str.17 = private unnamed_addr constant [36 x i8] c"deleting debug_insn with uid = %d.\0A\00", align 1
@df_bitmap_obstack = external dso_local global %struct.bitmap_obstack, align 8
@.str.18 = private unnamed_addr constant [43 x i8] c"starting the processing of deferred insns\0A\00", align 1
@.str.19 = private unnamed_addr constant [41 x i8] c"ending the processing of deferred insns\0A\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"changing bb of uid %d\0A\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"  unscanned insn\0A\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"  from %d to %d\0A\00", align 1
@.str.23 = private unnamed_addr constant [9 x i8] c"  to %d\0A\00", align 1
@mode_size = external dso_local global [87 x i8], align 16
@df_hard_reg_init.eliminables = internal constant [4 x %struct.anon] [%struct.anon { i32 16, i32 7 }, %struct.anon { i32 16, i32 6 }, %struct.anon { i32 20, i32 7 }, %struct.anon { i32 20, i32 6 }], align 16, !dbg !2033
@initialized = internal global i8 0, align 1, !dbg !2058
@elim_reg_set = internal global i64 0, align 8, !dbg !2046
@regs_ever_live = internal global [53 x i8] zeroinitializer, align 16, !dbg !2053
@.str.24 = private unnamed_addr constant [26 x i8] c";;  invalidated by call \09\00", align 1
@regs_invalidated_by_call_regset = external dso_local global %struct.bitmap_head_def*, align 8
@.str.25 = private unnamed_addr constant [25 x i8] c";;  hardware regs used \09\00", align 1
@.str.26 = private unnamed_addr constant [36 x i8] c";;  regular block artificial uses \09\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c";;  eh block artificial uses \09\00", align 1
@.str.28 = private unnamed_addr constant [23 x i8] c";;  entry block defs \09\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c";;  exit block uses \09\00", align 1
@.str.30 = private unnamed_addr constant [21 x i8] c";;  regs ever live \09\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c" %d[%s]\00", align 1
@reg_names = external dso_local global [53 x i8*], align 16
@.str.32 = private unnamed_addr constant [17 x i8] c"\0A;;  ref usage \09\00", align 1
@.str.33 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"r%d={\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"%dd\00", align 1
@.str.36 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"%s%du\00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c"%s%dd\00", align 1
@.str.39 = private unnamed_addr constant [3 x i8] c"} \00", align 1
@.str.40 = private unnamed_addr constant [75 x i8] c"\0A;;    total ref usage %d{%dd,%du,%de} in %d{%d regular + %d call} insns.\0A\00", align 1
@.str.41 = private unnamed_addr constant [27 x i8] c";; bb %d artificial_defs: \00", align 1
@.str.42 = private unnamed_addr constant [28 x i8] c"\0A;; bb %d artificial_uses: \00", align 1
@.str.43 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@regno_reg_rtx = external dso_local global %struct.rtx_def**, align 8
@.str.44 = private unnamed_addr constant [25 x i8] c"changing reg in insn %d\0A\00", align 1
@rtx_format = external dso_local constant [139 x i8*], align 16
@rtx_length = external dso_local constant [139 x i8], align 16
@hard_regno_nregs = external dso_local global [53 x [87 x i8]], align 16
@global_regs = external dso_local global [53 x i8], align 16
@x_rtl = external dso_local global %struct.rtl_data, align 8
@global_rtl = external dso_local global [11 x %struct.rtx_def*], align 16
@reload_completed = external dso_local global i32, align 4
@fixed_regs = external dso_local global [53 x i8], align 16
@.str.45 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@flag_pic = external dso_local global i32, align 4
@pic_offset_table_rtx = external dso_local global %struct.rtx_def*, align 8
@epilogue_completed = external dso_local global i32, align 4
@call_used_regs = external dso_local global [53 x i8], align 16
@targetm = external dso_local global %struct.gcc_target, align 8
@current_function_decl = external dso_local global %union.tree_node*, align 8
@regs_invalidated_by_call = external dso_local global i64, align 8
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.46 = private unnamed_addr constant [20 x i8] c"entry_block_defs = \00", align 1
@.str.47 = private unnamed_addr constant [24 x i8] c"df->entry_block_defs = \00", align 1
@.str.48 = private unnamed_addr constant [19 x i8] c"exit_block_uses = \00", align 1
@.str.49 = private unnamed_addr constant [23 x i8] c"df->exit_block_uses = \00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_scan_alloc(%struct.bitmap_head_def* %all_blocks) #0 !dbg !2195 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %problem_data = alloca %struct.df_scan_problem_data*, align 8
  %insn_num = alloca i32, align 4
  %block_size = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %bb_index = alloca i32, align 4
  %bb_info = alloca %struct.df_scan_bb_info*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !2196, metadata !DIExpression()), !dbg !2197
  call void @llvm.dbg.declare(metadata %struct.df_scan_problem_data** %problem_data, metadata !2198, metadata !DIExpression()), !dbg !2199
  call void @llvm.dbg.declare(metadata i32* %insn_num, metadata !2200, metadata !DIExpression()), !dbg !2201
  %call = call i32 @get_max_uid(), !dbg !2202
  %add = add nsw i32 %call, 1, !dbg !2203
  store i32 %add, i32* %insn_num, align 4, !dbg !2201
  call void @llvm.dbg.declare(metadata i32* %block_size, metadata !2204, metadata !DIExpression()), !dbg !2205
  store i32 400, i32* %block_size, align 4, !dbg !2205
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !2206, metadata !DIExpression()), !dbg !2207
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2208
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !2208
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !2208
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2208
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !2210
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !2210
  %tobool = icmp ne i8* %2, null, !dbg !2208
  br i1 %tobool, label %if.then, label %if.end, !dbg !2211

if.then:                                          ; preds = %entry
  call void @df_scan_free_internal(), !dbg !2212
  br label %if.end, !dbg !2212

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %block_size, align 4, !dbg !2213
  %conv = zext i32 %3 to i64, !dbg !2213
  %call2 = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i64 16, i64 %conv), !dbg !2214
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !2215
  %problems_by_index3 = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 1, !dbg !2215
  %arrayidx4 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index3, i64 0, i64 0, !dbg !2215
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx4, align 8, !dbg !2215
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i32 0, i32 3, !dbg !2216
  store %struct.alloc_pool_def* %call2, %struct.alloc_pool_def** %block_pool, align 8, !dbg !2217
  %call5 = call i8* @xmalloc(i64 264), !dbg !2218
  %6 = bitcast i8* %call5 to %struct.df_scan_problem_data*, !dbg !2218
  store %struct.df_scan_problem_data* %6, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2219
  %7 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2220
  %8 = bitcast %struct.df_scan_problem_data* %7 to i8*, !dbg !2220
  %9 = load %struct.df*, %struct.df** @df, align 8, !dbg !2221
  %problems_by_index6 = getelementptr inbounds %struct.df, %struct.df* %9, i32 0, i32 1, !dbg !2221
  %arrayidx7 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index6, i64 0, i64 0, !dbg !2221
  %10 = load %struct.dataflow*, %struct.dataflow** %arrayidx7, align 8, !dbg !2221
  %problem_data8 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %10, i32 0, i32 5, !dbg !2222
  store i8* %8, i8** %problem_data8, align 8, !dbg !2223
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !2224
  %problems_by_index9 = getelementptr inbounds %struct.df, %struct.df* %11, i32 0, i32 1, !dbg !2224
  %arrayidx10 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index9, i64 0, i64 0, !dbg !2224
  %12 = load %struct.dataflow*, %struct.dataflow** %arrayidx10, align 8, !dbg !2224
  %computed = getelementptr inbounds %struct.dataflow, %struct.dataflow* %12, i32 0, i32 7, !dbg !2225
  store i8 1, i8* %computed, align 4, !dbg !2226
  %13 = load i32, i32* %block_size, align 4, !dbg !2227
  %conv11 = zext i32 %13 to i64, !dbg !2227
  %call12 = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 64, i64 %conv11), !dbg !2228
  %14 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2229
  %ref_base_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %14, i32 0, i32 0, !dbg !2230
  store %struct.alloc_pool_def* %call12, %struct.alloc_pool_def** %ref_base_pool, align 8, !dbg !2231
  %15 = load i32, i32* %block_size, align 4, !dbg !2232
  %conv13 = zext i32 %15 to i64, !dbg !2232
  %call14 = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i64 72, i64 %conv13), !dbg !2233
  %16 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2234
  %ref_artificial_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %16, i32 0, i32 1, !dbg !2235
  store %struct.alloc_pool_def* %call14, %struct.alloc_pool_def** %ref_artificial_pool, align 8, !dbg !2236
  %17 = load i32, i32* %block_size, align 4, !dbg !2237
  %conv15 = zext i32 %17 to i64, !dbg !2237
  %call16 = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0), i64 72, i64 %conv15), !dbg !2238
  %18 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2239
  %ref_regular_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %18, i32 0, i32 2, !dbg !2240
  store %struct.alloc_pool_def* %call16, %struct.alloc_pool_def** %ref_regular_pool, align 8, !dbg !2241
  %19 = load i32, i32* %block_size, align 4, !dbg !2242
  %conv17 = zext i32 %19 to i64, !dbg !2242
  %call18 = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i64 88, i64 %conv17), !dbg !2243
  %20 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2244
  %ref_extract_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %20, i32 0, i32 3, !dbg !2245
  store %struct.alloc_pool_def* %call18, %struct.alloc_pool_def** %ref_extract_pool, align 8, !dbg !2246
  %21 = load i32, i32* %block_size, align 4, !dbg !2247
  %conv19 = zext i32 %21 to i64, !dbg !2247
  %call20 = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i64 48, i64 %conv19), !dbg !2248
  %22 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2249
  %insn_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %22, i32 0, i32 4, !dbg !2250
  store %struct.alloc_pool_def* %call20, %struct.alloc_pool_def** %insn_pool, align 8, !dbg !2251
  %23 = load i32, i32* %block_size, align 4, !dbg !2252
  %conv21 = zext i32 %23 to i64, !dbg !2252
  %call22 = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i64 16, i64 %conv21), !dbg !2253
  %24 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2254
  %reg_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %24, i32 0, i32 5, !dbg !2255
  store %struct.alloc_pool_def* %call22, %struct.alloc_pool_def** %reg_pool, align 8, !dbg !2256
  %25 = load i32, i32* %block_size, align 4, !dbg !2257
  %conv23 = zext i32 %25 to i64, !dbg !2257
  %call24 = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i64 24, i64 %conv23), !dbg !2258
  %26 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2259
  %mw_reg_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %26, i32 0, i32 6, !dbg !2260
  store %struct.alloc_pool_def* %call24, %struct.alloc_pool_def** %mw_reg_pool, align 8, !dbg !2261
  %27 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2262
  %reg_bitmaps = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %27, i32 0, i32 7, !dbg !2263
  call void @bitmap_obstack_initialize(%struct.bitmap_obstack* %reg_bitmaps), !dbg !2264
  %28 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2265
  %insn_bitmaps = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %28, i32 0, i32 8, !dbg !2266
  call void @bitmap_obstack_initialize(%struct.bitmap_obstack* %insn_bitmaps), !dbg !2267
  %29 = load i32, i32* %insn_num, align 4, !dbg !2268
  %div = udiv i32 %29, 4, !dbg !2269
  %30 = load i32, i32* %insn_num, align 4, !dbg !2270
  %add25 = add i32 %30, %div, !dbg !2270
  store i32 %add25, i32* %insn_num, align 4, !dbg !2270
  call void @df_grow_reg_info(), !dbg !2271
  call void @df_grow_insn_info(), !dbg !2272
  %31 = load %struct.df*, %struct.df** @df, align 8, !dbg !2273
  %problems_by_index26 = getelementptr inbounds %struct.df, %struct.df* %31, i32 0, i32 1, !dbg !2273
  %arrayidx27 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index26, i64 0, i64 0, !dbg !2273
  %32 = load %struct.dataflow*, %struct.dataflow** %arrayidx27, align 8, !dbg !2273
  call void @df_grow_bb_info(%struct.dataflow* %32), !dbg !2274
  %33 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2275
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %33, i64 0, !dbg !2275
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !2275
  %34 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2275
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %34, i32 0, i32 0, !dbg !2275
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2275
  store %struct.basic_block_def* %35, %struct.basic_block_def** %bb, align 8, !dbg !2275
  br label %for.cond, !dbg !2275

for.cond:                                         ; preds = %for.inc, %if.end
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2277
  %tobool28 = icmp ne %struct.basic_block_def* %36, null, !dbg !2275
  br i1 %tobool28, label %for.body, label %for.end, !dbg !2275

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !2279, metadata !DIExpression()), !dbg !2281
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2282
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %37, i32 0, i32 9, !dbg !2283
  %38 = load i32, i32* %index, align 8, !dbg !2283
  store i32 %38, i32* %bb_index, align 4, !dbg !2281
  call void @llvm.dbg.declare(metadata %struct.df_scan_bb_info** %bb_info, metadata !2284, metadata !DIExpression()), !dbg !2285
  %39 = load i32, i32* %bb_index, align 4, !dbg !2286
  %call29 = call %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %39), !dbg !2287
  store %struct.df_scan_bb_info* %call29, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !2285
  %40 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !2288
  %tobool30 = icmp ne %struct.df_scan_bb_info* %40, null, !dbg !2288
  br i1 %tobool30, label %if.end36, label %if.then31, !dbg !2290

if.then31:                                        ; preds = %for.body
  %41 = load %struct.df*, %struct.df** @df, align 8, !dbg !2291
  %problems_by_index32 = getelementptr inbounds %struct.df, %struct.df* %41, i32 0, i32 1, !dbg !2291
  %arrayidx33 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index32, i64 0, i64 0, !dbg !2291
  %42 = load %struct.dataflow*, %struct.dataflow** %arrayidx33, align 8, !dbg !2291
  %block_pool34 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %42, i32 0, i32 3, !dbg !2293
  %43 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool34, align 8, !dbg !2293
  %call35 = call i8* @pool_alloc(%struct.alloc_pool_def* %43), !dbg !2294
  %44 = bitcast i8* %call35 to %struct.df_scan_bb_info*, !dbg !2295
  store %struct.df_scan_bb_info* %44, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !2296
  %45 = load i32, i32* %bb_index, align 4, !dbg !2297
  %46 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !2298
  call void @df_scan_set_bb_info(i32 %45, %struct.df_scan_bb_info* %46), !dbg !2299
  br label %if.end36, !dbg !2300

if.end36:                                         ; preds = %if.then31, %for.body
  %47 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !2301
  %artificial_defs = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %47, i32 0, i32 0, !dbg !2302
  store %union.df_ref_d** null, %union.df_ref_d*** %artificial_defs, align 8, !dbg !2303
  %48 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !2304
  %artificial_uses = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %48, i32 0, i32 1, !dbg !2305
  store %union.df_ref_d** null, %union.df_ref_d*** %artificial_uses, align 8, !dbg !2306
  br label %for.inc, !dbg !2307

for.inc:                                          ; preds = %if.end36
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2277
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %49, i32 0, i32 6, !dbg !2277
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !2277
  store %struct.basic_block_def* %50, %struct.basic_block_def** %bb, align 8, !dbg !2277
  br label %for.cond, !dbg !2277, !llvm.loop !2308

for.end:                                          ; preds = %for.cond
  %51 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2310
  %reg_bitmaps37 = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %51, i32 0, i32 7, !dbg !2310
  %call38 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %reg_bitmaps37), !dbg !2310
  %52 = load %struct.df*, %struct.df** @df, align 8, !dbg !2311
  %hardware_regs_used = getelementptr inbounds %struct.df, %struct.df* %52, i32 0, i32 13, !dbg !2312
  store %struct.bitmap_head_def* %call38, %struct.bitmap_head_def** %hardware_regs_used, align 8, !dbg !2313
  %53 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2314
  %reg_bitmaps39 = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %53, i32 0, i32 7, !dbg !2314
  %call40 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %reg_bitmaps39), !dbg !2314
  %54 = load %struct.df*, %struct.df** @df, align 8, !dbg !2315
  %regular_block_artificial_uses = getelementptr inbounds %struct.df, %struct.df* %54, i32 0, i32 14, !dbg !2316
  store %struct.bitmap_head_def* %call40, %struct.bitmap_head_def** %regular_block_artificial_uses, align 8, !dbg !2317
  %55 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2318
  %reg_bitmaps41 = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %55, i32 0, i32 7, !dbg !2318
  %call42 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %reg_bitmaps41), !dbg !2318
  %56 = load %struct.df*, %struct.df** @df, align 8, !dbg !2319
  %eh_block_artificial_uses = getelementptr inbounds %struct.df, %struct.df* %56, i32 0, i32 15, !dbg !2320
  store %struct.bitmap_head_def* %call42, %struct.bitmap_head_def** %eh_block_artificial_uses, align 8, !dbg !2321
  %57 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2322
  %reg_bitmaps43 = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %57, i32 0, i32 7, !dbg !2322
  %call44 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %reg_bitmaps43), !dbg !2322
  %58 = load %struct.df*, %struct.df** @df, align 8, !dbg !2323
  %entry_block_defs = getelementptr inbounds %struct.df, %struct.df* %58, i32 0, i32 16, !dbg !2324
  store %struct.bitmap_head_def* %call44, %struct.bitmap_head_def** %entry_block_defs, align 8, !dbg !2325
  %59 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2326
  %reg_bitmaps45 = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %59, i32 0, i32 7, !dbg !2326
  %call46 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %reg_bitmaps45), !dbg !2326
  %60 = load %struct.df*, %struct.df** @df, align 8, !dbg !2327
  %exit_block_uses = getelementptr inbounds %struct.df, %struct.df* %60, i32 0, i32 17, !dbg !2328
  store %struct.bitmap_head_def* %call46, %struct.bitmap_head_def** %exit_block_uses, align 8, !dbg !2329
  %61 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2330
  %insn_bitmaps47 = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %61, i32 0, i32 8, !dbg !2330
  %call48 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %insn_bitmaps47), !dbg !2330
  %62 = load %struct.df*, %struct.df** @df, align 8, !dbg !2331
  %insns_to_delete = getelementptr inbounds %struct.df, %struct.df* %62, i32 0, i32 18, !dbg !2332
  store %struct.bitmap_head_def* %call48, %struct.bitmap_head_def** %insns_to_delete, align 8, !dbg !2333
  %63 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2334
  %insn_bitmaps49 = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %63, i32 0, i32 8, !dbg !2334
  %call50 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %insn_bitmaps49), !dbg !2334
  %64 = load %struct.df*, %struct.df** @df, align 8, !dbg !2335
  %insns_to_rescan = getelementptr inbounds %struct.df, %struct.df* %64, i32 0, i32 19, !dbg !2336
  store %struct.bitmap_head_def* %call50, %struct.bitmap_head_def** %insns_to_rescan, align 8, !dbg !2337
  %65 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2338
  %insn_bitmaps51 = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %65, i32 0, i32 8, !dbg !2338
  %call52 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %insn_bitmaps51), !dbg !2338
  %66 = load %struct.df*, %struct.df** @df, align 8, !dbg !2339
  %insns_to_notes_rescan = getelementptr inbounds %struct.df, %struct.df* %66, i32 0, i32 20, !dbg !2340
  store %struct.bitmap_head_def* %call52, %struct.bitmap_head_def** %insns_to_notes_rescan, align 8, !dbg !2341
  %67 = load %struct.df*, %struct.df** @df, align 8, !dbg !2342
  %problems_by_index53 = getelementptr inbounds %struct.df, %struct.df* %67, i32 0, i32 1, !dbg !2342
  %arrayidx54 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index53, i64 0, i64 0, !dbg !2342
  %68 = load %struct.dataflow*, %struct.dataflow** %arrayidx54, align 8, !dbg !2342
  %optional_p = getelementptr inbounds %struct.dataflow, %struct.dataflow* %68, i32 0, i32 9, !dbg !2343
  store i8 0, i8* %optional_p, align 2, !dbg !2344
  ret void, !dbg !2345
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @get_max_uid() #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_scan_free_internal() #0 !dbg !2346 {
entry:
  %problem_data = alloca %struct.df_scan_problem_data*, align 8
  %i = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %insn_info = alloca %struct.df_insn_info*, align 8
  %bb_index = alloca i32, align 4
  %bb_info = alloca %struct.df_scan_bb_info*, align 8
  call void @llvm.dbg.declare(metadata %struct.df_scan_problem_data** %problem_data, metadata !2347, metadata !DIExpression()), !dbg !2348
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2349
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !2349
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !2349
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2349
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !2350
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !2350
  %3 = bitcast i8* %2 to %struct.df_scan_problem_data*, !dbg !2351
  store %struct.df_scan_problem_data* %3, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2348
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2352, metadata !DIExpression()), !dbg !2353
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !2354, metadata !DIExpression()), !dbg !2355
  store i32 0, i32* %i, align 4, !dbg !2356
  br label %for.cond, !dbg !2358

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !2359
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !2361
  %insns_size = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 11, !dbg !2361
  %6 = load i32, i32* %insns_size, align 8, !dbg !2361
  %cmp = icmp ult i32 %4, %6, !dbg !2362
  br i1 %cmp, label %for.body, label %for.end, !dbg !2363

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info, metadata !2364, metadata !DIExpression()), !dbg !2366
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !2367
  %insns = getelementptr inbounds %struct.df, %struct.df* %7, i32 0, i32 10, !dbg !2367
  %8 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !2367
  %9 = load i32, i32* %i, align 4, !dbg !2367
  %idxprom = zext i32 %9 to i64, !dbg !2367
  %arrayidx2 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %8, i64 %idxprom, !dbg !2367
  %10 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx2, align 8, !dbg !2367
  store %struct.df_insn_info* %10, %struct.df_insn_info** %insn_info, align 8, !dbg !2366
  %11 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !2368
  %tobool = icmp ne %struct.df_insn_info* %11, null, !dbg !2368
  br i1 %tobool, label %if.then, label %if.end35, !dbg !2370

if.then:                                          ; preds = %for.body
  br label %do.body, !dbg !2371

do.body:                                          ; preds = %if.then
  %12 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !2373
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %12, i32 0, i32 1, !dbg !2373
  %13 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !2373
  %tobool3 = icmp ne %union.df_ref_d** %13, null, !dbg !2373
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !2373

land.lhs.true:                                    ; preds = %do.body
  %14 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !2373
  %defs4 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %14, i32 0, i32 1, !dbg !2373
  %15 = load %union.df_ref_d**, %union.df_ref_d*** %defs4, align 8, !dbg !2373
  %16 = load %union.df_ref_d*, %union.df_ref_d** %15, align 8, !dbg !2373
  %tobool5 = icmp ne %union.df_ref_d* %16, null, !dbg !2373
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !2376

if.then6:                                         ; preds = %land.lhs.true
  %17 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !2373
  %defs7 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %17, i32 0, i32 1, !dbg !2373
  %18 = load %union.df_ref_d**, %union.df_ref_d*** %defs7, align 8, !dbg !2373
  %19 = bitcast %union.df_ref_d** %18 to i8*, !dbg !2373
  call void @free(i8* %19), !dbg !2373
  br label %if.end, !dbg !2373

if.end:                                           ; preds = %if.then6, %land.lhs.true, %do.body
  br label %do.end, !dbg !2376

do.end:                                           ; preds = %if.end
  br label %do.body8, !dbg !2377

do.body8:                                         ; preds = %do.end
  %20 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !2378
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %20, i32 0, i32 2, !dbg !2378
  %21 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !2378
  %tobool9 = icmp ne %union.df_ref_d** %21, null, !dbg !2378
  br i1 %tobool9, label %land.lhs.true10, label %if.end15, !dbg !2378

land.lhs.true10:                                  ; preds = %do.body8
  %22 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !2378
  %uses11 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %22, i32 0, i32 2, !dbg !2378
  %23 = load %union.df_ref_d**, %union.df_ref_d*** %uses11, align 8, !dbg !2378
  %24 = load %union.df_ref_d*, %union.df_ref_d** %23, align 8, !dbg !2378
  %tobool12 = icmp ne %union.df_ref_d* %24, null, !dbg !2378
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !2381

if.then13:                                        ; preds = %land.lhs.true10
  %25 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !2378
  %uses14 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %25, i32 0, i32 2, !dbg !2378
  %26 = load %union.df_ref_d**, %union.df_ref_d*** %uses14, align 8, !dbg !2378
  %27 = bitcast %union.df_ref_d** %26 to i8*, !dbg !2378
  call void @free(i8* %27), !dbg !2378
  br label %if.end15, !dbg !2378

if.end15:                                         ; preds = %if.then13, %land.lhs.true10, %do.body8
  br label %do.end16, !dbg !2381

do.end16:                                         ; preds = %if.end15
  br label %do.body17, !dbg !2382

do.body17:                                        ; preds = %do.end16
  %28 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !2383
  %eq_uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %28, i32 0, i32 3, !dbg !2383
  %29 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses, align 8, !dbg !2383
  %tobool18 = icmp ne %union.df_ref_d** %29, null, !dbg !2383
  br i1 %tobool18, label %land.lhs.true19, label %if.end24, !dbg !2383

land.lhs.true19:                                  ; preds = %do.body17
  %30 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !2383
  %eq_uses20 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %30, i32 0, i32 3, !dbg !2383
  %31 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses20, align 8, !dbg !2383
  %32 = load %union.df_ref_d*, %union.df_ref_d** %31, align 8, !dbg !2383
  %tobool21 = icmp ne %union.df_ref_d* %32, null, !dbg !2383
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !2386

if.then22:                                        ; preds = %land.lhs.true19
  %33 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !2383
  %eq_uses23 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %33, i32 0, i32 3, !dbg !2383
  %34 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses23, align 8, !dbg !2383
  %35 = bitcast %union.df_ref_d** %34 to i8*, !dbg !2383
  call void @free(i8* %35), !dbg !2383
  br label %if.end24, !dbg !2383

if.end24:                                         ; preds = %if.then22, %land.lhs.true19, %do.body17
  br label %do.end25, !dbg !2386

do.end25:                                         ; preds = %if.end24
  br label %do.body26, !dbg !2387

do.body26:                                        ; preds = %do.end25
  %36 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !2388
  %mw_hardregs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %36, i32 0, i32 4, !dbg !2388
  %37 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs, align 8, !dbg !2388
  %tobool27 = icmp ne %struct.df_mw_hardreg** %37, null, !dbg !2388
  br i1 %tobool27, label %land.lhs.true28, label %if.end33, !dbg !2388

land.lhs.true28:                                  ; preds = %do.body26
  %38 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !2388
  %mw_hardregs29 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %38, i32 0, i32 4, !dbg !2388
  %39 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs29, align 8, !dbg !2388
  %40 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %39, align 8, !dbg !2388
  %tobool30 = icmp ne %struct.df_mw_hardreg* %40, null, !dbg !2388
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !2391

if.then31:                                        ; preds = %land.lhs.true28
  %41 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !2388
  %mw_hardregs32 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %41, i32 0, i32 4, !dbg !2388
  %42 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs32, align 8, !dbg !2388
  %43 = bitcast %struct.df_mw_hardreg** %42 to i8*, !dbg !2388
  call void @free(i8* %43), !dbg !2388
  br label %if.end33, !dbg !2388

if.end33:                                         ; preds = %if.then31, %land.lhs.true28, %do.body26
  br label %do.end34, !dbg !2391

do.end34:                                         ; preds = %if.end33
  br label %if.end35, !dbg !2392

if.end35:                                         ; preds = %do.end34, %for.body
  br label %for.inc, !dbg !2393

for.inc:                                          ; preds = %if.end35
  %44 = load i32, i32* %i, align 4, !dbg !2394
  %inc = add i32 %44, 1, !dbg !2394
  store i32 %inc, i32* %i, align 4, !dbg !2394
  br label %for.cond, !dbg !2395, !llvm.loop !2396

for.end:                                          ; preds = %for.cond
  %45 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2398
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %45, i64 0, !dbg !2398
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !2398
  %46 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2398
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %46, i32 0, i32 0, !dbg !2398
  %47 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2398
  store %struct.basic_block_def* %47, %struct.basic_block_def** %bb, align 8, !dbg !2398
  br label %for.cond36, !dbg !2398

for.cond36:                                       ; preds = %for.inc60, %for.end
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2400
  %tobool37 = icmp ne %struct.basic_block_def* %48, null, !dbg !2398
  br i1 %tobool37, label %for.body38, label %for.end61, !dbg !2398

for.body38:                                       ; preds = %for.cond36
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !2402, metadata !DIExpression()), !dbg !2404
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2405
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %49, i32 0, i32 9, !dbg !2406
  %50 = load i32, i32* %index, align 8, !dbg !2406
  store i32 %50, i32* %bb_index, align 4, !dbg !2404
  call void @llvm.dbg.declare(metadata %struct.df_scan_bb_info** %bb_info, metadata !2407, metadata !DIExpression()), !dbg !2408
  %51 = load i32, i32* %bb_index, align 4, !dbg !2409
  %call = call %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %51), !dbg !2410
  store %struct.df_scan_bb_info* %call, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !2408
  %52 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !2411
  %tobool39 = icmp ne %struct.df_scan_bb_info* %52, null, !dbg !2411
  br i1 %tobool39, label %if.then40, label %if.end59, !dbg !2413

if.then40:                                        ; preds = %for.body38
  br label %do.body41, !dbg !2414

do.body41:                                        ; preds = %if.then40
  %53 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !2416
  %artificial_defs = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %53, i32 0, i32 0, !dbg !2416
  %54 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_defs, align 8, !dbg !2416
  %tobool42 = icmp ne %union.df_ref_d** %54, null, !dbg !2416
  br i1 %tobool42, label %land.lhs.true43, label %if.end48, !dbg !2416

land.lhs.true43:                                  ; preds = %do.body41
  %55 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !2416
  %artificial_defs44 = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %55, i32 0, i32 0, !dbg !2416
  %56 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_defs44, align 8, !dbg !2416
  %57 = load %union.df_ref_d*, %union.df_ref_d** %56, align 8, !dbg !2416
  %tobool45 = icmp ne %union.df_ref_d* %57, null, !dbg !2416
  br i1 %tobool45, label %if.then46, label %if.end48, !dbg !2419

if.then46:                                        ; preds = %land.lhs.true43
  %58 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !2416
  %artificial_defs47 = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %58, i32 0, i32 0, !dbg !2416
  %59 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_defs47, align 8, !dbg !2416
  %60 = bitcast %union.df_ref_d** %59 to i8*, !dbg !2416
  call void @free(i8* %60), !dbg !2416
  br label %if.end48, !dbg !2416

if.end48:                                         ; preds = %if.then46, %land.lhs.true43, %do.body41
  br label %do.end49, !dbg !2419

do.end49:                                         ; preds = %if.end48
  br label %do.body50, !dbg !2420

do.body50:                                        ; preds = %do.end49
  %61 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !2421
  %artificial_uses = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %61, i32 0, i32 1, !dbg !2421
  %62 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_uses, align 8, !dbg !2421
  %tobool51 = icmp ne %union.df_ref_d** %62, null, !dbg !2421
  br i1 %tobool51, label %land.lhs.true52, label %if.end57, !dbg !2421

land.lhs.true52:                                  ; preds = %do.body50
  %63 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !2421
  %artificial_uses53 = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %63, i32 0, i32 1, !dbg !2421
  %64 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_uses53, align 8, !dbg !2421
  %65 = load %union.df_ref_d*, %union.df_ref_d** %64, align 8, !dbg !2421
  %tobool54 = icmp ne %union.df_ref_d* %65, null, !dbg !2421
  br i1 %tobool54, label %if.then55, label %if.end57, !dbg !2424

if.then55:                                        ; preds = %land.lhs.true52
  %66 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !2421
  %artificial_uses56 = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %66, i32 0, i32 1, !dbg !2421
  %67 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_uses56, align 8, !dbg !2421
  %68 = bitcast %union.df_ref_d** %67 to i8*, !dbg !2421
  call void @free(i8* %68), !dbg !2421
  br label %if.end57, !dbg !2421

if.end57:                                         ; preds = %if.then55, %land.lhs.true52, %do.body50
  br label %do.end58, !dbg !2424

do.end58:                                         ; preds = %if.end57
  br label %if.end59, !dbg !2425

if.end59:                                         ; preds = %do.end58, %for.body38
  br label %for.inc60, !dbg !2426

for.inc60:                                        ; preds = %if.end59
  %69 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2400
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %69, i32 0, i32 6, !dbg !2400
  %70 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !2400
  store %struct.basic_block_def* %70, %struct.basic_block_def** %bb, align 8, !dbg !2400
  br label %for.cond36, !dbg !2400, !llvm.loop !2427

for.end61:                                        ; preds = %for.cond36
  %71 = load %struct.df*, %struct.df** @df, align 8, !dbg !2429
  %def_info = getelementptr inbounds %struct.df, %struct.df* %71, i32 0, i32 3, !dbg !2430
  %refs = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info, i32 0, i32 0, !dbg !2431
  %72 = load %union.df_ref_d**, %union.df_ref_d*** %refs, align 8, !dbg !2431
  %73 = bitcast %union.df_ref_d** %72 to i8*, !dbg !2429
  call void @free(i8* %73), !dbg !2432
  %74 = load %struct.df*, %struct.df** @df, align 8, !dbg !2433
  %def_info62 = getelementptr inbounds %struct.df, %struct.df* %74, i32 0, i32 3, !dbg !2434
  %begin = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info62, i32 0, i32 1, !dbg !2435
  %75 = load i32*, i32** %begin, align 8, !dbg !2435
  %76 = bitcast i32* %75 to i8*, !dbg !2433
  call void @free(i8* %76), !dbg !2436
  %77 = load %struct.df*, %struct.df** @df, align 8, !dbg !2437
  %def_info63 = getelementptr inbounds %struct.df, %struct.df* %77, i32 0, i32 3, !dbg !2438
  %count = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info63, i32 0, i32 2, !dbg !2439
  %78 = load i32*, i32** %count, align 8, !dbg !2439
  %79 = bitcast i32* %78 to i8*, !dbg !2437
  call void @free(i8* %79), !dbg !2440
  %80 = load %struct.df*, %struct.df** @df, align 8, !dbg !2441
  %def_info64 = getelementptr inbounds %struct.df, %struct.df* %80, i32 0, i32 3, !dbg !2442
  %81 = bitcast %struct.df_ref_info* %def_info64 to i8*, !dbg !2443
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 40, i1 false), !dbg !2443
  %82 = load %struct.df*, %struct.df** @df, align 8, !dbg !2444
  %use_info = getelementptr inbounds %struct.df, %struct.df* %82, i32 0, i32 4, !dbg !2445
  %refs65 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %use_info, i32 0, i32 0, !dbg !2446
  %83 = load %union.df_ref_d**, %union.df_ref_d*** %refs65, align 8, !dbg !2446
  %84 = bitcast %union.df_ref_d** %83 to i8*, !dbg !2444
  call void @free(i8* %84), !dbg !2447
  %85 = load %struct.df*, %struct.df** @df, align 8, !dbg !2448
  %use_info66 = getelementptr inbounds %struct.df, %struct.df* %85, i32 0, i32 4, !dbg !2449
  %begin67 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %use_info66, i32 0, i32 1, !dbg !2450
  %86 = load i32*, i32** %begin67, align 8, !dbg !2450
  %87 = bitcast i32* %86 to i8*, !dbg !2448
  call void @free(i8* %87), !dbg !2451
  %88 = load %struct.df*, %struct.df** @df, align 8, !dbg !2452
  %use_info68 = getelementptr inbounds %struct.df, %struct.df* %88, i32 0, i32 4, !dbg !2453
  %count69 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %use_info68, i32 0, i32 2, !dbg !2454
  %89 = load i32*, i32** %count69, align 8, !dbg !2454
  %90 = bitcast i32* %89 to i8*, !dbg !2452
  call void @free(i8* %90), !dbg !2455
  %91 = load %struct.df*, %struct.df** @df, align 8, !dbg !2456
  %use_info70 = getelementptr inbounds %struct.df, %struct.df* %91, i32 0, i32 4, !dbg !2457
  %92 = bitcast %struct.df_ref_info* %use_info70 to i8*, !dbg !2458
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 40, i1 false), !dbg !2458
  %93 = load %struct.df*, %struct.df** @df, align 8, !dbg !2459
  %def_regs = getelementptr inbounds %struct.df, %struct.df* %93, i32 0, i32 5, !dbg !2460
  %94 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs, align 8, !dbg !2460
  %95 = bitcast %struct.df_reg_info** %94 to i8*, !dbg !2459
  call void @free(i8* %95), !dbg !2461
  %96 = load %struct.df*, %struct.df** @df, align 8, !dbg !2462
  %def_regs71 = getelementptr inbounds %struct.df, %struct.df* %96, i32 0, i32 5, !dbg !2463
  store %struct.df_reg_info** null, %struct.df_reg_info*** %def_regs71, align 8, !dbg !2464
  %97 = load %struct.df*, %struct.df** @df, align 8, !dbg !2465
  %use_regs = getelementptr inbounds %struct.df, %struct.df* %97, i32 0, i32 6, !dbg !2466
  %98 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs, align 8, !dbg !2466
  %99 = bitcast %struct.df_reg_info** %98 to i8*, !dbg !2465
  call void @free(i8* %99), !dbg !2467
  %100 = load %struct.df*, %struct.df** @df, align 8, !dbg !2468
  %use_regs72 = getelementptr inbounds %struct.df, %struct.df* %100, i32 0, i32 6, !dbg !2469
  store %struct.df_reg_info** null, %struct.df_reg_info*** %use_regs72, align 8, !dbg !2470
  %101 = load %struct.df*, %struct.df** @df, align 8, !dbg !2471
  %eq_use_regs = getelementptr inbounds %struct.df, %struct.df* %101, i32 0, i32 7, !dbg !2472
  %102 = load %struct.df_reg_info**, %struct.df_reg_info*** %eq_use_regs, align 8, !dbg !2472
  %103 = bitcast %struct.df_reg_info** %102 to i8*, !dbg !2471
  call void @free(i8* %103), !dbg !2473
  %104 = load %struct.df*, %struct.df** @df, align 8, !dbg !2474
  %eq_use_regs73 = getelementptr inbounds %struct.df, %struct.df* %104, i32 0, i32 7, !dbg !2475
  store %struct.df_reg_info** null, %struct.df_reg_info*** %eq_use_regs73, align 8, !dbg !2476
  %105 = load %struct.df*, %struct.df** @df, align 8, !dbg !2477
  %regs_size = getelementptr inbounds %struct.df, %struct.df* %105, i32 0, i32 8, !dbg !2478
  store i32 0, i32* %regs_size, align 8, !dbg !2479
  %106 = load %struct.df*, %struct.df** @df, align 8, !dbg !2480
  %regs_inited = getelementptr inbounds %struct.df, %struct.df* %106, i32 0, i32 9, !dbg !2480
  store i32 0, i32* %regs_inited, align 4, !dbg !2481
  %107 = load %struct.df*, %struct.df** @df, align 8, !dbg !2482
  %insns74 = getelementptr inbounds %struct.df, %struct.df* %107, i32 0, i32 10, !dbg !2483
  %108 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns74, align 8, !dbg !2483
  %109 = bitcast %struct.df_insn_info** %108 to i8*, !dbg !2482
  call void @free(i8* %109), !dbg !2484
  %110 = load %struct.df*, %struct.df** @df, align 8, !dbg !2485
  %insns75 = getelementptr inbounds %struct.df, %struct.df* %110, i32 0, i32 10, !dbg !2486
  store %struct.df_insn_info** null, %struct.df_insn_info*** %insns75, align 8, !dbg !2487
  %111 = load %struct.df*, %struct.df** @df, align 8, !dbg !2488
  %insns_size76 = getelementptr inbounds %struct.df, %struct.df* %111, i32 0, i32 11, !dbg !2488
  store i32 0, i32* %insns_size76, align 8, !dbg !2489
  %112 = load %struct.df*, %struct.df** @df, align 8, !dbg !2490
  %problems_by_index77 = getelementptr inbounds %struct.df, %struct.df* %112, i32 0, i32 1, !dbg !2490
  %arrayidx78 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index77, i64 0, i64 0, !dbg !2490
  %113 = load %struct.dataflow*, %struct.dataflow** %arrayidx78, align 8, !dbg !2490
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %113, i32 0, i32 1, !dbg !2491
  %114 = load i8**, i8*** %block_info, align 8, !dbg !2491
  %115 = bitcast i8** %114 to i8*, !dbg !2490
  call void @free(i8* %115), !dbg !2492
  %116 = load %struct.df*, %struct.df** @df, align 8, !dbg !2493
  %problems_by_index79 = getelementptr inbounds %struct.df, %struct.df* %116, i32 0, i32 1, !dbg !2493
  %arrayidx80 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index79, i64 0, i64 0, !dbg !2493
  %117 = load %struct.dataflow*, %struct.dataflow** %arrayidx80, align 8, !dbg !2493
  %block_info81 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %117, i32 0, i32 1, !dbg !2494
  store i8** null, i8*** %block_info81, align 8, !dbg !2495
  %118 = load %struct.df*, %struct.df** @df, align 8, !dbg !2496
  %problems_by_index82 = getelementptr inbounds %struct.df, %struct.df* %118, i32 0, i32 1, !dbg !2496
  %arrayidx83 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index82, i64 0, i64 0, !dbg !2496
  %119 = load %struct.dataflow*, %struct.dataflow** %arrayidx83, align 8, !dbg !2496
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %119, i32 0, i32 2, !dbg !2497
  store i32 0, i32* %block_info_size, align 8, !dbg !2498
  %120 = load %struct.df*, %struct.df** @df, align 8, !dbg !2499
  %hardware_regs_used = getelementptr inbounds %struct.df, %struct.df* %120, i32 0, i32 13, !dbg !2499
  %121 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used, align 8, !dbg !2499
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %121), !dbg !2499
  %122 = load %struct.df*, %struct.df** @df, align 8, !dbg !2499
  %hardware_regs_used84 = getelementptr inbounds %struct.df, %struct.df* %122, i32 0, i32 13, !dbg !2499
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %hardware_regs_used84, align 8, !dbg !2499
  %123 = load %struct.df*, %struct.df** @df, align 8, !dbg !2500
  %regular_block_artificial_uses = getelementptr inbounds %struct.df, %struct.df* %123, i32 0, i32 14, !dbg !2500
  %124 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses, align 8, !dbg !2500
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %124), !dbg !2500
  %125 = load %struct.df*, %struct.df** @df, align 8, !dbg !2500
  %regular_block_artificial_uses85 = getelementptr inbounds %struct.df, %struct.df* %125, i32 0, i32 14, !dbg !2500
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %regular_block_artificial_uses85, align 8, !dbg !2500
  %126 = load %struct.df*, %struct.df** @df, align 8, !dbg !2501
  %eh_block_artificial_uses = getelementptr inbounds %struct.df, %struct.df* %126, i32 0, i32 15, !dbg !2501
  %127 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %eh_block_artificial_uses, align 8, !dbg !2501
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %127), !dbg !2501
  %128 = load %struct.df*, %struct.df** @df, align 8, !dbg !2501
  %eh_block_artificial_uses86 = getelementptr inbounds %struct.df, %struct.df* %128, i32 0, i32 15, !dbg !2501
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %eh_block_artificial_uses86, align 8, !dbg !2501
  %129 = load %struct.df*, %struct.df** @df, align 8, !dbg !2502
  %entry_block_defs = getelementptr inbounds %struct.df, %struct.df* %129, i32 0, i32 16, !dbg !2502
  %130 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs, align 8, !dbg !2502
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %130), !dbg !2502
  %131 = load %struct.df*, %struct.df** @df, align 8, !dbg !2502
  %entry_block_defs87 = getelementptr inbounds %struct.df, %struct.df* %131, i32 0, i32 16, !dbg !2502
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %entry_block_defs87, align 8, !dbg !2502
  %132 = load %struct.df*, %struct.df** @df, align 8, !dbg !2503
  %exit_block_uses = getelementptr inbounds %struct.df, %struct.df* %132, i32 0, i32 17, !dbg !2503
  %133 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses, align 8, !dbg !2503
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %133), !dbg !2503
  %134 = load %struct.df*, %struct.df** @df, align 8, !dbg !2503
  %exit_block_uses88 = getelementptr inbounds %struct.df, %struct.df* %134, i32 0, i32 17, !dbg !2503
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %exit_block_uses88, align 8, !dbg !2503
  %135 = load %struct.df*, %struct.df** @df, align 8, !dbg !2504
  %insns_to_delete = getelementptr inbounds %struct.df, %struct.df* %135, i32 0, i32 18, !dbg !2504
  %136 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_delete, align 8, !dbg !2504
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %136), !dbg !2504
  %137 = load %struct.df*, %struct.df** @df, align 8, !dbg !2504
  %insns_to_delete89 = getelementptr inbounds %struct.df, %struct.df* %137, i32 0, i32 18, !dbg !2504
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %insns_to_delete89, align 8, !dbg !2504
  %138 = load %struct.df*, %struct.df** @df, align 8, !dbg !2505
  %insns_to_rescan = getelementptr inbounds %struct.df, %struct.df* %138, i32 0, i32 19, !dbg !2505
  %139 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_rescan, align 8, !dbg !2505
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %139), !dbg !2505
  %140 = load %struct.df*, %struct.df** @df, align 8, !dbg !2505
  %insns_to_rescan90 = getelementptr inbounds %struct.df, %struct.df* %140, i32 0, i32 19, !dbg !2505
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %insns_to_rescan90, align 8, !dbg !2505
  %141 = load %struct.df*, %struct.df** @df, align 8, !dbg !2506
  %insns_to_notes_rescan = getelementptr inbounds %struct.df, %struct.df* %141, i32 0, i32 20, !dbg !2506
  %142 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_notes_rescan, align 8, !dbg !2506
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %142), !dbg !2506
  %143 = load %struct.df*, %struct.df** @df, align 8, !dbg !2506
  %insns_to_notes_rescan91 = getelementptr inbounds %struct.df, %struct.df* %143, i32 0, i32 20, !dbg !2506
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %insns_to_notes_rescan91, align 8, !dbg !2506
  %144 = load %struct.df*, %struct.df** @df, align 8, !dbg !2507
  %problems_by_index92 = getelementptr inbounds %struct.df, %struct.df* %144, i32 0, i32 1, !dbg !2507
  %arrayidx93 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index92, i64 0, i64 0, !dbg !2507
  %145 = load %struct.dataflow*, %struct.dataflow** %arrayidx93, align 8, !dbg !2507
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %145, i32 0, i32 3, !dbg !2508
  %146 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !2508
  call void @free_alloc_pool(%struct.alloc_pool_def* %146), !dbg !2509
  %147 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2510
  %ref_base_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %147, i32 0, i32 0, !dbg !2511
  %148 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %ref_base_pool, align 8, !dbg !2511
  call void @free_alloc_pool(%struct.alloc_pool_def* %148), !dbg !2512
  %149 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2513
  %ref_artificial_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %149, i32 0, i32 1, !dbg !2514
  %150 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %ref_artificial_pool, align 8, !dbg !2514
  call void @free_alloc_pool(%struct.alloc_pool_def* %150), !dbg !2515
  %151 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2516
  %ref_regular_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %151, i32 0, i32 2, !dbg !2517
  %152 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %ref_regular_pool, align 8, !dbg !2517
  call void @free_alloc_pool(%struct.alloc_pool_def* %152), !dbg !2518
  %153 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2519
  %ref_extract_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %153, i32 0, i32 3, !dbg !2520
  %154 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %ref_extract_pool, align 8, !dbg !2520
  call void @free_alloc_pool(%struct.alloc_pool_def* %154), !dbg !2521
  %155 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2522
  %insn_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %155, i32 0, i32 4, !dbg !2523
  %156 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %insn_pool, align 8, !dbg !2523
  call void @free_alloc_pool(%struct.alloc_pool_def* %156), !dbg !2524
  %157 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2525
  %reg_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %157, i32 0, i32 5, !dbg !2526
  %158 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %reg_pool, align 8, !dbg !2526
  call void @free_alloc_pool(%struct.alloc_pool_def* %158), !dbg !2527
  %159 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2528
  %mw_reg_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %159, i32 0, i32 6, !dbg !2529
  %160 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %mw_reg_pool, align 8, !dbg !2529
  call void @free_alloc_pool(%struct.alloc_pool_def* %160), !dbg !2530
  %161 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2531
  %reg_bitmaps = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %161, i32 0, i32 7, !dbg !2532
  call void @bitmap_obstack_release(%struct.bitmap_obstack* %reg_bitmaps), !dbg !2533
  %162 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2534
  %insn_bitmaps = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %162, i32 0, i32 8, !dbg !2535
  call void @bitmap_obstack_release(%struct.bitmap_obstack* %insn_bitmaps), !dbg !2536
  %163 = load %struct.df*, %struct.df** @df, align 8, !dbg !2537
  %problems_by_index94 = getelementptr inbounds %struct.df, %struct.df* %163, i32 0, i32 1, !dbg !2537
  %arrayidx95 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index94, i64 0, i64 0, !dbg !2537
  %164 = load %struct.dataflow*, %struct.dataflow** %arrayidx95, align 8, !dbg !2537
  %problem_data96 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %164, i32 0, i32 5, !dbg !2538
  %165 = load i8*, i8** %problem_data96, align 8, !dbg !2538
  call void @free(i8* %165), !dbg !2539
  ret void, !dbg !2540
}

declare dso_local %struct.alloc_pool_def* @create_alloc_pool(i8*, i64, i64) #2

declare dso_local i8* @xmalloc(i64) #2

declare dso_local void @bitmap_obstack_initialize(%struct.bitmap_obstack*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_grow_reg_info() #0 !dbg !2541 {
entry:
  %max_reg = alloca i32, align 4
  %new_size = alloca i32, align 4
  %problem_data = alloca %struct.df_scan_problem_data*, align 8
  %i = alloca i32, align 4
  %reg_info = alloca %struct.df_reg_info*, align 8
  call void @llvm.dbg.declare(metadata i32* %max_reg, metadata !2542, metadata !DIExpression()), !dbg !2543
  %call = call i32 @max_reg_num(), !dbg !2544
  store i32 %call, i32* %max_reg, align 4, !dbg !2543
  call void @llvm.dbg.declare(metadata i32* %new_size, metadata !2545, metadata !DIExpression()), !dbg !2546
  %0 = load i32, i32* %max_reg, align 4, !dbg !2547
  store i32 %0, i32* %new_size, align 4, !dbg !2546
  call void @llvm.dbg.declare(metadata %struct.df_scan_problem_data** %problem_data, metadata !2548, metadata !DIExpression()), !dbg !2549
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !2550
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 1, !dbg !2550
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !2550
  %2 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2550
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i32 0, i32 5, !dbg !2551
  %3 = load i8*, i8** %problem_data1, align 8, !dbg !2551
  %4 = bitcast i8* %3 to %struct.df_scan_problem_data*, !dbg !2552
  store %struct.df_scan_problem_data* %4, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2549
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2553, metadata !DIExpression()), !dbg !2554
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !2555
  %regs_size = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 8, !dbg !2557
  %6 = load i32, i32* %regs_size, align 8, !dbg !2557
  %7 = load i32, i32* %new_size, align 4, !dbg !2558
  %cmp = icmp ult i32 %6, %7, !dbg !2559
  br i1 %cmp, label %if.then, label %if.end, !dbg !2560

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %new_size, align 4, !dbg !2561
  %div = udiv i32 %8, 4, !dbg !2563
  %9 = load i32, i32* %new_size, align 4, !dbg !2564
  %add = add i32 %9, %div, !dbg !2564
  store i32 %add, i32* %new_size, align 4, !dbg !2564
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !2565
  %def_regs = getelementptr inbounds %struct.df, %struct.df* %10, i32 0, i32 5, !dbg !2565
  %11 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs, align 8, !dbg !2565
  %12 = bitcast %struct.df_reg_info** %11 to i8*, !dbg !2565
  %13 = load i32, i32* %new_size, align 4, !dbg !2565
  %conv = zext i32 %13 to i64, !dbg !2565
  %mul = mul i64 8, %conv, !dbg !2565
  %call2 = call i8* @xrealloc(i8* %12, i64 %mul), !dbg !2565
  %14 = bitcast i8* %call2 to %struct.df_reg_info**, !dbg !2565
  %15 = load %struct.df*, %struct.df** @df, align 8, !dbg !2566
  %def_regs3 = getelementptr inbounds %struct.df, %struct.df* %15, i32 0, i32 5, !dbg !2567
  store %struct.df_reg_info** %14, %struct.df_reg_info*** %def_regs3, align 8, !dbg !2568
  %16 = load %struct.df*, %struct.df** @df, align 8, !dbg !2569
  %use_regs = getelementptr inbounds %struct.df, %struct.df* %16, i32 0, i32 6, !dbg !2569
  %17 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs, align 8, !dbg !2569
  %18 = bitcast %struct.df_reg_info** %17 to i8*, !dbg !2569
  %19 = load i32, i32* %new_size, align 4, !dbg !2569
  %conv4 = zext i32 %19 to i64, !dbg !2569
  %mul5 = mul i64 8, %conv4, !dbg !2569
  %call6 = call i8* @xrealloc(i8* %18, i64 %mul5), !dbg !2569
  %20 = bitcast i8* %call6 to %struct.df_reg_info**, !dbg !2569
  %21 = load %struct.df*, %struct.df** @df, align 8, !dbg !2570
  %use_regs7 = getelementptr inbounds %struct.df, %struct.df* %21, i32 0, i32 6, !dbg !2571
  store %struct.df_reg_info** %20, %struct.df_reg_info*** %use_regs7, align 8, !dbg !2572
  %22 = load %struct.df*, %struct.df** @df, align 8, !dbg !2573
  %eq_use_regs = getelementptr inbounds %struct.df, %struct.df* %22, i32 0, i32 7, !dbg !2573
  %23 = load %struct.df_reg_info**, %struct.df_reg_info*** %eq_use_regs, align 8, !dbg !2573
  %24 = bitcast %struct.df_reg_info** %23 to i8*, !dbg !2573
  %25 = load i32, i32* %new_size, align 4, !dbg !2573
  %conv8 = zext i32 %25 to i64, !dbg !2573
  %mul9 = mul i64 8, %conv8, !dbg !2573
  %call10 = call i8* @xrealloc(i8* %24, i64 %mul9), !dbg !2573
  %26 = bitcast i8* %call10 to %struct.df_reg_info**, !dbg !2573
  %27 = load %struct.df*, %struct.df** @df, align 8, !dbg !2574
  %eq_use_regs11 = getelementptr inbounds %struct.df, %struct.df* %27, i32 0, i32 7, !dbg !2575
  store %struct.df_reg_info** %26, %struct.df_reg_info*** %eq_use_regs11, align 8, !dbg !2576
  %28 = load %struct.df*, %struct.df** @df, align 8, !dbg !2577
  %def_info = getelementptr inbounds %struct.df, %struct.df* %28, i32 0, i32 3, !dbg !2577
  %begin = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info, i32 0, i32 1, !dbg !2577
  %29 = load i32*, i32** %begin, align 8, !dbg !2577
  %30 = bitcast i32* %29 to i8*, !dbg !2577
  %31 = load i32, i32* %new_size, align 4, !dbg !2577
  %conv12 = zext i32 %31 to i64, !dbg !2577
  %mul13 = mul i64 4, %conv12, !dbg !2577
  %call14 = call i8* @xrealloc(i8* %30, i64 %mul13), !dbg !2577
  %32 = bitcast i8* %call14 to i32*, !dbg !2577
  %33 = load %struct.df*, %struct.df** @df, align 8, !dbg !2578
  %def_info15 = getelementptr inbounds %struct.df, %struct.df* %33, i32 0, i32 3, !dbg !2579
  %begin16 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info15, i32 0, i32 1, !dbg !2580
  store i32* %32, i32** %begin16, align 8, !dbg !2581
  %34 = load %struct.df*, %struct.df** @df, align 8, !dbg !2582
  %def_info17 = getelementptr inbounds %struct.df, %struct.df* %34, i32 0, i32 3, !dbg !2582
  %count = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info17, i32 0, i32 2, !dbg !2582
  %35 = load i32*, i32** %count, align 8, !dbg !2582
  %36 = bitcast i32* %35 to i8*, !dbg !2582
  %37 = load i32, i32* %new_size, align 4, !dbg !2582
  %conv18 = zext i32 %37 to i64, !dbg !2582
  %mul19 = mul i64 4, %conv18, !dbg !2582
  %call20 = call i8* @xrealloc(i8* %36, i64 %mul19), !dbg !2582
  %38 = bitcast i8* %call20 to i32*, !dbg !2582
  %39 = load %struct.df*, %struct.df** @df, align 8, !dbg !2583
  %def_info21 = getelementptr inbounds %struct.df, %struct.df* %39, i32 0, i32 3, !dbg !2584
  %count22 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info21, i32 0, i32 2, !dbg !2585
  store i32* %38, i32** %count22, align 8, !dbg !2586
  %40 = load %struct.df*, %struct.df** @df, align 8, !dbg !2587
  %use_info = getelementptr inbounds %struct.df, %struct.df* %40, i32 0, i32 4, !dbg !2587
  %begin23 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %use_info, i32 0, i32 1, !dbg !2587
  %41 = load i32*, i32** %begin23, align 8, !dbg !2587
  %42 = bitcast i32* %41 to i8*, !dbg !2587
  %43 = load i32, i32* %new_size, align 4, !dbg !2587
  %conv24 = zext i32 %43 to i64, !dbg !2587
  %mul25 = mul i64 4, %conv24, !dbg !2587
  %call26 = call i8* @xrealloc(i8* %42, i64 %mul25), !dbg !2587
  %44 = bitcast i8* %call26 to i32*, !dbg !2587
  %45 = load %struct.df*, %struct.df** @df, align 8, !dbg !2588
  %use_info27 = getelementptr inbounds %struct.df, %struct.df* %45, i32 0, i32 4, !dbg !2589
  %begin28 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %use_info27, i32 0, i32 1, !dbg !2590
  store i32* %44, i32** %begin28, align 8, !dbg !2591
  %46 = load %struct.df*, %struct.df** @df, align 8, !dbg !2592
  %use_info29 = getelementptr inbounds %struct.df, %struct.df* %46, i32 0, i32 4, !dbg !2592
  %count30 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %use_info29, i32 0, i32 2, !dbg !2592
  %47 = load i32*, i32** %count30, align 8, !dbg !2592
  %48 = bitcast i32* %47 to i8*, !dbg !2592
  %49 = load i32, i32* %new_size, align 4, !dbg !2592
  %conv31 = zext i32 %49 to i64, !dbg !2592
  %mul32 = mul i64 4, %conv31, !dbg !2592
  %call33 = call i8* @xrealloc(i8* %48, i64 %mul32), !dbg !2592
  %50 = bitcast i8* %call33 to i32*, !dbg !2592
  %51 = load %struct.df*, %struct.df** @df, align 8, !dbg !2593
  %use_info34 = getelementptr inbounds %struct.df, %struct.df* %51, i32 0, i32 4, !dbg !2594
  %count35 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %use_info34, i32 0, i32 2, !dbg !2595
  store i32* %50, i32** %count35, align 8, !dbg !2596
  %52 = load i32, i32* %new_size, align 4, !dbg !2597
  %53 = load %struct.df*, %struct.df** @df, align 8, !dbg !2598
  %regs_size36 = getelementptr inbounds %struct.df, %struct.df* %53, i32 0, i32 8, !dbg !2599
  store i32 %52, i32* %regs_size36, align 8, !dbg !2600
  br label %if.end, !dbg !2601

if.end:                                           ; preds = %if.then, %entry
  %54 = load %struct.df*, %struct.df** @df, align 8, !dbg !2602
  %regs_inited = getelementptr inbounds %struct.df, %struct.df* %54, i32 0, i32 9, !dbg !2604
  %55 = load i32, i32* %regs_inited, align 4, !dbg !2604
  store i32 %55, i32* %i, align 4, !dbg !2605
  br label %for.cond, !dbg !2606

for.cond:                                         ; preds = %for.inc, %if.end
  %56 = load i32, i32* %i, align 4, !dbg !2607
  %57 = load i32, i32* %max_reg, align 4, !dbg !2609
  %cmp37 = icmp ult i32 %56, %57, !dbg !2610
  br i1 %cmp37, label %for.body, label %for.end, !dbg !2611

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_reg_info** %reg_info, metadata !2612, metadata !DIExpression()), !dbg !2614
  %58 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2615
  %reg_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %58, i32 0, i32 5, !dbg !2616
  %59 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %reg_pool, align 8, !dbg !2616
  %call39 = call i8* @pool_alloc(%struct.alloc_pool_def* %59), !dbg !2617
  %60 = bitcast i8* %call39 to %struct.df_reg_info*, !dbg !2618
  store %struct.df_reg_info* %60, %struct.df_reg_info** %reg_info, align 8, !dbg !2619
  %61 = load %struct.df_reg_info*, %struct.df_reg_info** %reg_info, align 8, !dbg !2620
  %62 = bitcast %struct.df_reg_info* %61 to i8*, !dbg !2621
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false), !dbg !2621
  %63 = load %struct.df_reg_info*, %struct.df_reg_info** %reg_info, align 8, !dbg !2622
  %64 = load %struct.df*, %struct.df** @df, align 8, !dbg !2623
  %def_regs40 = getelementptr inbounds %struct.df, %struct.df* %64, i32 0, i32 5, !dbg !2624
  %65 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs40, align 8, !dbg !2624
  %66 = load i32, i32* %i, align 4, !dbg !2625
  %idxprom = zext i32 %66 to i64, !dbg !2623
  %arrayidx41 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %65, i64 %idxprom, !dbg !2623
  store %struct.df_reg_info* %63, %struct.df_reg_info** %arrayidx41, align 8, !dbg !2626
  %67 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2627
  %reg_pool42 = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %67, i32 0, i32 5, !dbg !2628
  %68 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %reg_pool42, align 8, !dbg !2628
  %call43 = call i8* @pool_alloc(%struct.alloc_pool_def* %68), !dbg !2629
  %69 = bitcast i8* %call43 to %struct.df_reg_info*, !dbg !2630
  store %struct.df_reg_info* %69, %struct.df_reg_info** %reg_info, align 8, !dbg !2631
  %70 = load %struct.df_reg_info*, %struct.df_reg_info** %reg_info, align 8, !dbg !2632
  %71 = bitcast %struct.df_reg_info* %70 to i8*, !dbg !2633
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false), !dbg !2633
  %72 = load %struct.df_reg_info*, %struct.df_reg_info** %reg_info, align 8, !dbg !2634
  %73 = load %struct.df*, %struct.df** @df, align 8, !dbg !2635
  %use_regs44 = getelementptr inbounds %struct.df, %struct.df* %73, i32 0, i32 6, !dbg !2636
  %74 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs44, align 8, !dbg !2636
  %75 = load i32, i32* %i, align 4, !dbg !2637
  %idxprom45 = zext i32 %75 to i64, !dbg !2635
  %arrayidx46 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %74, i64 %idxprom45, !dbg !2635
  store %struct.df_reg_info* %72, %struct.df_reg_info** %arrayidx46, align 8, !dbg !2638
  %76 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !2639
  %reg_pool47 = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %76, i32 0, i32 5, !dbg !2640
  %77 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %reg_pool47, align 8, !dbg !2640
  %call48 = call i8* @pool_alloc(%struct.alloc_pool_def* %77), !dbg !2641
  %78 = bitcast i8* %call48 to %struct.df_reg_info*, !dbg !2642
  store %struct.df_reg_info* %78, %struct.df_reg_info** %reg_info, align 8, !dbg !2643
  %79 = load %struct.df_reg_info*, %struct.df_reg_info** %reg_info, align 8, !dbg !2644
  %80 = bitcast %struct.df_reg_info* %79 to i8*, !dbg !2645
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false), !dbg !2645
  %81 = load %struct.df_reg_info*, %struct.df_reg_info** %reg_info, align 8, !dbg !2646
  %82 = load %struct.df*, %struct.df** @df, align 8, !dbg !2647
  %eq_use_regs49 = getelementptr inbounds %struct.df, %struct.df* %82, i32 0, i32 7, !dbg !2648
  %83 = load %struct.df_reg_info**, %struct.df_reg_info*** %eq_use_regs49, align 8, !dbg !2648
  %84 = load i32, i32* %i, align 4, !dbg !2649
  %idxprom50 = zext i32 %84 to i64, !dbg !2647
  %arrayidx51 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %83, i64 %idxprom50, !dbg !2647
  store %struct.df_reg_info* %81, %struct.df_reg_info** %arrayidx51, align 8, !dbg !2650
  %85 = load %struct.df*, %struct.df** @df, align 8, !dbg !2651
  %def_info52 = getelementptr inbounds %struct.df, %struct.df* %85, i32 0, i32 3, !dbg !2652
  %begin53 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info52, i32 0, i32 1, !dbg !2653
  %86 = load i32*, i32** %begin53, align 8, !dbg !2653
  %87 = load i32, i32* %i, align 4, !dbg !2654
  %idxprom54 = zext i32 %87 to i64, !dbg !2651
  %arrayidx55 = getelementptr inbounds i32, i32* %86, i64 %idxprom54, !dbg !2651
  store i32 0, i32* %arrayidx55, align 4, !dbg !2655
  %88 = load %struct.df*, %struct.df** @df, align 8, !dbg !2656
  %def_info56 = getelementptr inbounds %struct.df, %struct.df* %88, i32 0, i32 3, !dbg !2657
  %count57 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info56, i32 0, i32 2, !dbg !2658
  %89 = load i32*, i32** %count57, align 8, !dbg !2658
  %90 = load i32, i32* %i, align 4, !dbg !2659
  %idxprom58 = zext i32 %90 to i64, !dbg !2656
  %arrayidx59 = getelementptr inbounds i32, i32* %89, i64 %idxprom58, !dbg !2656
  store i32 0, i32* %arrayidx59, align 4, !dbg !2660
  %91 = load %struct.df*, %struct.df** @df, align 8, !dbg !2661
  %use_info60 = getelementptr inbounds %struct.df, %struct.df* %91, i32 0, i32 4, !dbg !2662
  %begin61 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %use_info60, i32 0, i32 1, !dbg !2663
  %92 = load i32*, i32** %begin61, align 8, !dbg !2663
  %93 = load i32, i32* %i, align 4, !dbg !2664
  %idxprom62 = zext i32 %93 to i64, !dbg !2661
  %arrayidx63 = getelementptr inbounds i32, i32* %92, i64 %idxprom62, !dbg !2661
  store i32 0, i32* %arrayidx63, align 4, !dbg !2665
  %94 = load %struct.df*, %struct.df** @df, align 8, !dbg !2666
  %use_info64 = getelementptr inbounds %struct.df, %struct.df* %94, i32 0, i32 4, !dbg !2667
  %count65 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %use_info64, i32 0, i32 2, !dbg !2668
  %95 = load i32*, i32** %count65, align 8, !dbg !2668
  %96 = load i32, i32* %i, align 4, !dbg !2669
  %idxprom66 = zext i32 %96 to i64, !dbg !2666
  %arrayidx67 = getelementptr inbounds i32, i32* %95, i64 %idxprom66, !dbg !2666
  store i32 0, i32* %arrayidx67, align 4, !dbg !2670
  br label %for.inc, !dbg !2671

for.inc:                                          ; preds = %for.body
  %97 = load i32, i32* %i, align 4, !dbg !2672
  %inc = add i32 %97, 1, !dbg !2672
  store i32 %inc, i32* %i, align 4, !dbg !2672
  br label %for.cond, !dbg !2673, !llvm.loop !2674

for.end:                                          ; preds = %for.cond
  %98 = load i32, i32* %max_reg, align 4, !dbg !2676
  %99 = load %struct.df*, %struct.df** @df, align 8, !dbg !2677
  %regs_inited68 = getelementptr inbounds %struct.df, %struct.df* %99, i32 0, i32 9, !dbg !2678
  store i32 %98, i32* %regs_inited68, align 4, !dbg !2679
  ret void, !dbg !2680
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_grow_insn_info() #0 !dbg !2681 {
entry:
  %new_size = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new_size, metadata !2682, metadata !DIExpression()), !dbg !2683
  %call = call i32 @get_max_uid(), !dbg !2684
  %add = add nsw i32 %call, 1, !dbg !2685
  store i32 %add, i32* %new_size, align 4, !dbg !2683
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2686
  %insns_size = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 11, !dbg !2686
  %1 = load i32, i32* %insns_size, align 8, !dbg !2686
  %2 = load i32, i32* %new_size, align 4, !dbg !2688
  %cmp = icmp ult i32 %1, %2, !dbg !2689
  br i1 %cmp, label %if.then, label %if.end, !dbg !2690

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %new_size, align 4, !dbg !2691
  %div = udiv i32 %3, 4, !dbg !2693
  %4 = load i32, i32* %new_size, align 4, !dbg !2694
  %add1 = add i32 %4, %div, !dbg !2694
  store i32 %add1, i32* %new_size, align 4, !dbg !2694
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !2695
  %insns = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 10, !dbg !2695
  %6 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !2695
  %7 = bitcast %struct.df_insn_info** %6 to i8*, !dbg !2695
  %8 = load i32, i32* %new_size, align 4, !dbg !2695
  %conv = zext i32 %8 to i64, !dbg !2695
  %mul = mul i64 8, %conv, !dbg !2695
  %call2 = call i8* @xrealloc(i8* %7, i64 %mul), !dbg !2695
  %9 = bitcast i8* %call2 to %struct.df_insn_info**, !dbg !2695
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !2696
  %insns3 = getelementptr inbounds %struct.df, %struct.df* %10, i32 0, i32 10, !dbg !2697
  store %struct.df_insn_info** %9, %struct.df_insn_info*** %insns3, align 8, !dbg !2698
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !2699
  %insns4 = getelementptr inbounds %struct.df, %struct.df* %11, i32 0, i32 10, !dbg !2700
  %12 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns4, align 8, !dbg !2700
  %13 = load %struct.df*, %struct.df** @df, align 8, !dbg !2701
  %insns_size5 = getelementptr inbounds %struct.df, %struct.df* %13, i32 0, i32 11, !dbg !2702
  %14 = load i32, i32* %insns_size5, align 8, !dbg !2702
  %idx.ext = zext i32 %14 to i64, !dbg !2703
  %add.ptr = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %12, i64 %idx.ext, !dbg !2703
  %15 = bitcast %struct.df_insn_info** %add.ptr to i8*, !dbg !2704
  %16 = load i32, i32* %new_size, align 4, !dbg !2705
  %17 = load %struct.df*, %struct.df** @df, align 8, !dbg !2706
  %insns_size6 = getelementptr inbounds %struct.df, %struct.df* %17, i32 0, i32 11, !dbg !2706
  %18 = load i32, i32* %insns_size6, align 8, !dbg !2706
  %sub = sub i32 %16, %18, !dbg !2707
  %conv7 = zext i32 %sub to i64, !dbg !2708
  %mul8 = mul i64 %conv7, 8, !dbg !2709
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 %mul8, i1 false), !dbg !2704
  %19 = load i32, i32* %new_size, align 4, !dbg !2710
  %20 = load %struct.df*, %struct.df** @df, align 8, !dbg !2711
  %insns_size9 = getelementptr inbounds %struct.df, %struct.df* %20, i32 0, i32 11, !dbg !2711
  store i32 %19, i32* %insns_size9, align 8, !dbg !2712
  br label %if.end, !dbg !2713

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2714
}

declare dso_local void @df_grow_bb_info(%struct.dataflow*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %index) #0 !dbg !2715 {
entry:
  %retval = alloca %struct.df_scan_bb_info*, align 8
  %index.addr = alloca i32, align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !2718, metadata !DIExpression()), !dbg !2719
  %0 = load i32, i32* %index.addr, align 4, !dbg !2720
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !2722
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 1, !dbg !2722
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !2722
  %2 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2722
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i32 0, i32 2, !dbg !2723
  %3 = load i32, i32* %block_info_size, align 8, !dbg !2723
  %cmp = icmp ult i32 %0, %3, !dbg !2724
  br i1 %cmp, label %if.then, label %if.else, !dbg !2725

if.then:                                          ; preds = %entry
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !2726
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 1, !dbg !2726
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 0, !dbg !2726
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !2726
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i32 0, i32 1, !dbg !2727
  %6 = load i8**, i8*** %block_info, align 8, !dbg !2727
  %7 = load i32, i32* %index.addr, align 4, !dbg !2728
  %idxprom = zext i32 %7 to i64, !dbg !2726
  %arrayidx3 = getelementptr inbounds i8*, i8** %6, i64 %idxprom, !dbg !2726
  %8 = load i8*, i8** %arrayidx3, align 8, !dbg !2726
  %9 = bitcast i8* %8 to %struct.df_scan_bb_info*, !dbg !2729
  store %struct.df_scan_bb_info* %9, %struct.df_scan_bb_info** %retval, align 8, !dbg !2730
  br label %return, !dbg !2730

if.else:                                          ; preds = %entry
  store %struct.df_scan_bb_info* null, %struct.df_scan_bb_info** %retval, align 8, !dbg !2731
  br label %return, !dbg !2731

return:                                           ; preds = %if.else, %if.then
  %10 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %retval, align 8, !dbg !2732
  ret %struct.df_scan_bb_info* %10, !dbg !2732
}

declare dso_local i8* @pool_alloc(%struct.alloc_pool_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_scan_set_bb_info(i32 %index, %struct.df_scan_bb_info* %bb_info) #0 !dbg !2733 {
entry:
  %index.addr = alloca i32, align 4
  %bb_info.addr = alloca %struct.df_scan_bb_info*, align 8
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !2736, metadata !DIExpression()), !dbg !2737
  store %struct.df_scan_bb_info* %bb_info, %struct.df_scan_bb_info** %bb_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_scan_bb_info** %bb_info.addr, metadata !2738, metadata !DIExpression()), !dbg !2739
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2740
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !2740
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !2740
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2740
  call void @df_grow_bb_info(%struct.dataflow* %1), !dbg !2741
  %2 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info.addr, align 8, !dbg !2742
  %3 = bitcast %struct.df_scan_bb_info* %2 to i8*, !dbg !2743
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !2744
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 1, !dbg !2744
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 0, !dbg !2744
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !2744
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i32 0, i32 1, !dbg !2745
  %6 = load i8**, i8*** %block_info, align 8, !dbg !2745
  %7 = load i32, i32* %index.addr, align 4, !dbg !2746
  %idxprom = zext i32 %7 to i64, !dbg !2744
  %arrayidx3 = getelementptr inbounds i8*, i8** %6, i64 %idxprom, !dbg !2744
  store i8* %3, i8** %arrayidx3, align 8, !dbg !2747
  ret void, !dbg !2748
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_scan_add_problem() #0 !dbg !2749 {
entry:
  call void @df_add_problem(%struct.df_problem* @problem_SCAN), !dbg !2750
  ret void, !dbg !2751
}

declare dso_local void @df_add_problem(%struct.df_problem*) #2

declare dso_local i32 @max_reg_num() #2

declare dso_local i8* @xrealloc(i8*, i64) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_scan_blocks() #0 !dbg !2752 {
entry:
  %bb = alloca %struct.basic_block_def*, align 8
  %bb_index = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !2753, metadata !DIExpression()), !dbg !2754
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2755
  %def_info = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 3, !dbg !2756
  %ref_order = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info, i32 0, i32 6, !dbg !2757
  store i32 0, i32* %ref_order, align 4, !dbg !2758
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !2759
  %use_info = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 4, !dbg !2760
  %ref_order1 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %use_info, i32 0, i32 6, !dbg !2761
  store i32 0, i32* %ref_order1, align 4, !dbg !2762
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !2763
  %regular_block_artificial_uses = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 14, !dbg !2764
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses, align 8, !dbg !2764
  call void @df_get_regular_block_artificial_uses(%struct.bitmap_head_def* %3), !dbg !2765
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !2766
  %eh_block_artificial_uses = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 15, !dbg !2767
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %eh_block_artificial_uses, align 8, !dbg !2767
  call void @df_get_eh_block_artificial_uses(%struct.bitmap_head_def* %5), !dbg !2768
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !2769
  %eh_block_artificial_uses2 = getelementptr inbounds %struct.df, %struct.df* %6, i32 0, i32 15, !dbg !2770
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %eh_block_artificial_uses2, align 8, !dbg !2770
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !2771
  %regular_block_artificial_uses3 = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 14, !dbg !2772
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses3, align 8, !dbg !2772
  %call = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %7, %struct.bitmap_head_def* %9), !dbg !2773
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !2774
  %entry_block_defs = getelementptr inbounds %struct.df, %struct.df* %10, i32 0, i32 16, !dbg !2775
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs, align 8, !dbg !2775
  call void @df_get_entry_block_def_set(%struct.bitmap_head_def* %11), !dbg !2776
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !2777
  %entry_block_defs4 = getelementptr inbounds %struct.df, %struct.df* %12, i32 0, i32 16, !dbg !2778
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs4, align 8, !dbg !2778
  call void @df_record_entry_block_defs(%struct.bitmap_head_def* %13), !dbg !2779
  %14 = load %struct.df*, %struct.df** @df, align 8, !dbg !2780
  %exit_block_uses = getelementptr inbounds %struct.df, %struct.df* %14, i32 0, i32 17, !dbg !2781
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses, align 8, !dbg !2781
  call void @df_get_exit_block_use_set(%struct.bitmap_head_def* %15), !dbg !2782
  %16 = load %struct.df*, %struct.df** @df, align 8, !dbg !2783
  %exit_block_uses5 = getelementptr inbounds %struct.df, %struct.df* %16, i32 0, i32 17, !dbg !2784
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses5, align 8, !dbg !2784
  call void @df_record_exit_block_uses(%struct.bitmap_head_def* %17), !dbg !2785
  %18 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2786
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %18, i64 0, !dbg !2786
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !2786
  %19 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2786
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %19, i32 0, i32 2, !dbg !2786
  %20 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !2786
  %tobool = icmp ne %struct.VEC_basic_block_gc* %20, null, !dbg !2786
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2786

cond.true:                                        ; preds = %entry
  %21 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2786
  %add.ptr6 = getelementptr inbounds %struct.function, %struct.function* %21, i64 0, !dbg !2786
  %cfg7 = getelementptr inbounds %struct.function, %struct.function* %add.ptr6, i32 0, i32 1, !dbg !2786
  %22 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg7, align 8, !dbg !2786
  %x_basic_block_info8 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %22, i32 0, i32 2, !dbg !2786
  %23 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info8, align 8, !dbg !2786
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %23, i32 0, i32 0, !dbg !2786
  br label %cond.end, !dbg !2786

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2786

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !2786
  %call9 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 0), !dbg !2786
  call void @df_set_bb_dirty(%struct.basic_block_def* %call9), !dbg !2787
  %24 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2788
  %add.ptr10 = getelementptr inbounds %struct.function, %struct.function* %24, i64 0, !dbg !2788
  %cfg11 = getelementptr inbounds %struct.function, %struct.function* %add.ptr10, i32 0, i32 1, !dbg !2788
  %25 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg11, align 8, !dbg !2788
  %x_basic_block_info12 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %25, i32 0, i32 2, !dbg !2788
  %26 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info12, align 8, !dbg !2788
  %tobool13 = icmp ne %struct.VEC_basic_block_gc* %26, null, !dbg !2788
  br i1 %tobool13, label %cond.true14, label %cond.false19, !dbg !2788

cond.true14:                                      ; preds = %cond.end
  %27 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2788
  %add.ptr15 = getelementptr inbounds %struct.function, %struct.function* %27, i64 0, !dbg !2788
  %cfg16 = getelementptr inbounds %struct.function, %struct.function* %add.ptr15, i32 0, i32 1, !dbg !2788
  %28 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg16, align 8, !dbg !2788
  %x_basic_block_info17 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %28, i32 0, i32 2, !dbg !2788
  %29 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info17, align 8, !dbg !2788
  %base18 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %29, i32 0, i32 0, !dbg !2788
  br label %cond.end20, !dbg !2788

cond.false19:                                     ; preds = %cond.end
  br label %cond.end20, !dbg !2788

cond.end20:                                       ; preds = %cond.false19, %cond.true14
  %cond21 = phi %struct.VEC_basic_block_base* [ %base18, %cond.true14 ], [ null, %cond.false19 ], !dbg !2788
  %call22 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond21, i32 1), !dbg !2788
  call void @df_set_bb_dirty(%struct.basic_block_def* %call22), !dbg !2789
  %30 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2790
  %add.ptr23 = getelementptr inbounds %struct.function, %struct.function* %30, i64 0, !dbg !2790
  %cfg24 = getelementptr inbounds %struct.function, %struct.function* %add.ptr23, i32 0, i32 1, !dbg !2790
  %31 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg24, align 8, !dbg !2790
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %31, i32 0, i32 0, !dbg !2790
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2790
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %32, i32 0, i32 6, !dbg !2790
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !2790
  store %struct.basic_block_def* %33, %struct.basic_block_def** %bb, align 8, !dbg !2790
  br label %for.cond, !dbg !2790

for.cond:                                         ; preds = %for.inc, %cond.end20
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2792
  %35 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2792
  %add.ptr25 = getelementptr inbounds %struct.function, %struct.function* %35, i64 0, !dbg !2792
  %cfg26 = getelementptr inbounds %struct.function, %struct.function* %add.ptr25, i32 0, i32 1, !dbg !2792
  %36 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg26, align 8, !dbg !2792
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %36, i32 0, i32 1, !dbg !2792
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2792
  %cmp = icmp ne %struct.basic_block_def* %34, %37, !dbg !2792
  br i1 %cmp, label %for.body, label %for.end, !dbg !2790

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !2794, metadata !DIExpression()), !dbg !2796
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2797
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %38, i32 0, i32 9, !dbg !2798
  %39 = load i32, i32* %index, align 8, !dbg !2798
  store i32 %39, i32* %bb_index, align 4, !dbg !2796
  %40 = load i32, i32* %bb_index, align 4, !dbg !2799
  call void @df_bb_refs_record(i32 %40, i8 zeroext 1), !dbg !2800
  br label %for.inc, !dbg !2801

for.inc:                                          ; preds = %for.body
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2792
  %next_bb27 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %41, i32 0, i32 6, !dbg !2792
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb27, align 8, !dbg !2792
  store %struct.basic_block_def* %42, %struct.basic_block_def** %bb, align 8, !dbg !2792
  br label %for.cond, !dbg !2792, !llvm.loop !2802

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2804
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_get_regular_block_artificial_uses(%struct.bitmap_head_def* %regular_block_artificial_uses) #0 !dbg !2805 {
entry:
  %regular_block_artificial_uses.addr = alloca %struct.bitmap_head_def*, align 8
  store %struct.bitmap_head_def* %regular_block_artificial_uses, %struct.bitmap_head_def** %regular_block_artificial_uses.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %regular_block_artificial_uses.addr, metadata !2806, metadata !DIExpression()), !dbg !2807
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses.addr, align 8, !dbg !2808
  call void @bitmap_clear(%struct.bitmap_head_def* %0), !dbg !2809
  %1 = load i32, i32* @reload_completed, align 4, !dbg !2810
  %tobool = icmp ne i32 %1, 0, !dbg !2810
  br i1 %tobool, label %if.then, label %if.else, !dbg !2812

if.then:                                          ; preds = %entry
  %2 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !2813
  %tobool1 = icmp ne i8 %2, 0, !dbg !2813
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !2816

if.then2:                                         ; preds = %if.then
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses.addr, align 8, !dbg !2817
  %call = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %3, i32 6), !dbg !2818
  br label %if.end, !dbg !2818

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end42, !dbg !2819

if.else:                                          ; preds = %entry
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses.addr, align 8, !dbg !2820
  %call3 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %4, i32 20), !dbg !2822
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses.addr, align 8, !dbg !2823
  %call4 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %5, i32 6), !dbg !2824
  %6 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16, !dbg !2825
  %tobool5 = icmp ne i8 %6, 0, !dbg !2825
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !2827

if.then6:                                         ; preds = %if.else
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses.addr, align 8, !dbg !2828
  %call7 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %7, i32 16), !dbg !2829
  br label %if.end8, !dbg !2829

if.end8:                                          ; preds = %if.then6, %if.else
  %8 = load i32, i32* @flag_pic, align 4, !dbg !2830
  %tobool9 = icmp ne i32 %8, 0, !dbg !2830
  br i1 %tobool9, label %cond.false, label %cond.true, !dbg !2830

cond.true:                                        ; preds = %if.end8
  br label %cond.end14, !dbg !2830

cond.false:                                       ; preds = %if.end8
  %9 = load i32, i32* @reload_completed, align 4, !dbg !2830
  %tobool10 = icmp ne i32 %9, 0, !dbg !2830
  br i1 %tobool10, label %cond.true11, label %cond.false13, !dbg !2830

cond.true11:                                      ; preds = %cond.false
  %10 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !2830
  %call12 = call i32 @rhs_regno(%struct.rtx_def* %10), !dbg !2830
  br label %cond.end, !dbg !2830

cond.false13:                                     ; preds = %cond.false
  br label %cond.end, !dbg !2830

cond.end:                                         ; preds = %cond.false13, %cond.true11
  %cond = phi i32 [ %call12, %cond.true11 ], [ 3, %cond.false13 ], !dbg !2830
  br label %cond.end14, !dbg !2830

cond.end14:                                       ; preds = %cond.end, %cond.true
  %cond15 = phi i32 [ -1, %cond.true ], [ %cond, %cond.end ], !dbg !2830
  %cmp = icmp ne i32 %cond15, -1, !dbg !2832
  br i1 %cmp, label %land.lhs.true, label %if.end41, !dbg !2833

land.lhs.true:                                    ; preds = %cond.end14
  %11 = load i32, i32* @flag_pic, align 4, !dbg !2834
  %tobool16 = icmp ne i32 %11, 0, !dbg !2834
  br i1 %tobool16, label %cond.false18, label %cond.true17, !dbg !2834

cond.true17:                                      ; preds = %land.lhs.true
  br label %cond.end25, !dbg !2834

cond.false18:                                     ; preds = %land.lhs.true
  %12 = load i32, i32* @reload_completed, align 4, !dbg !2834
  %tobool19 = icmp ne i32 %12, 0, !dbg !2834
  br i1 %tobool19, label %cond.true20, label %cond.false22, !dbg !2834

cond.true20:                                      ; preds = %cond.false18
  %13 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !2834
  %call21 = call i32 @rhs_regno(%struct.rtx_def* %13), !dbg !2834
  br label %cond.end23, !dbg !2834

cond.false22:                                     ; preds = %cond.false18
  br label %cond.end23, !dbg !2834

cond.end23:                                       ; preds = %cond.false22, %cond.true20
  %cond24 = phi i32 [ %call21, %cond.true20 ], [ 3, %cond.false22 ], !dbg !2834
  br label %cond.end25, !dbg !2834

cond.end25:                                       ; preds = %cond.end23, %cond.true17
  %cond26 = phi i32 [ -1, %cond.true17 ], [ %cond24, %cond.end23 ], !dbg !2834
  %idxprom = zext i32 %cond26 to i64, !dbg !2835
  %arrayidx = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom, !dbg !2835
  %14 = load i8, i8* %arrayidx, align 1, !dbg !2835
  %conv = sext i8 %14 to i32, !dbg !2835
  %tobool27 = icmp ne i32 %conv, 0, !dbg !2835
  br i1 %tobool27, label %if.then28, label %if.end41, !dbg !2836

if.then28:                                        ; preds = %cond.end25
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses.addr, align 8, !dbg !2837
  %16 = load i32, i32* @flag_pic, align 4, !dbg !2838
  %tobool29 = icmp ne i32 %16, 0, !dbg !2838
  br i1 %tobool29, label %cond.false31, label %cond.true30, !dbg !2838

cond.true30:                                      ; preds = %if.then28
  br label %cond.end38, !dbg !2838

cond.false31:                                     ; preds = %if.then28
  %17 = load i32, i32* @reload_completed, align 4, !dbg !2838
  %tobool32 = icmp ne i32 %17, 0, !dbg !2838
  br i1 %tobool32, label %cond.true33, label %cond.false35, !dbg !2838

cond.true33:                                      ; preds = %cond.false31
  %18 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !2838
  %call34 = call i32 @rhs_regno(%struct.rtx_def* %18), !dbg !2838
  br label %cond.end36, !dbg !2838

cond.false35:                                     ; preds = %cond.false31
  br label %cond.end36, !dbg !2838

cond.end36:                                       ; preds = %cond.false35, %cond.true33
  %cond37 = phi i32 [ %call34, %cond.true33 ], [ 3, %cond.false35 ], !dbg !2838
  br label %cond.end38, !dbg !2838

cond.end38:                                       ; preds = %cond.end36, %cond.true30
  %cond39 = phi i32 [ -1, %cond.true30 ], [ %cond37, %cond.end36 ], !dbg !2838
  %call40 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %15, i32 %cond39), !dbg !2839
  br label %if.end41, !dbg !2839

if.end41:                                         ; preds = %cond.end38, %cond.end25, %cond.end14
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses.addr, align 8, !dbg !2840
  %call43 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %19, i32 7), !dbg !2841
  ret void, !dbg !2842
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_get_eh_block_artificial_uses(%struct.bitmap_head_def* %eh_block_artificial_uses) #0 !dbg !2843 {
entry:
  %eh_block_artificial_uses.addr = alloca %struct.bitmap_head_def*, align 8
  store %struct.bitmap_head_def* %eh_block_artificial_uses, %struct.bitmap_head_def** %eh_block_artificial_uses.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %eh_block_artificial_uses.addr, metadata !2844, metadata !DIExpression()), !dbg !2845
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %eh_block_artificial_uses.addr, align 8, !dbg !2846
  call void @bitmap_clear(%struct.bitmap_head_def* %0), !dbg !2847
  %1 = load i32, i32* @reload_completed, align 4, !dbg !2848
  %tobool = icmp ne i32 %1, 0, !dbg !2848
  br i1 %tobool, label %if.then, label %if.end8, !dbg !2850

if.then:                                          ; preds = %entry
  %2 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !2851
  %tobool1 = icmp ne i8 %2, 0, !dbg !2851
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !2854

if.then2:                                         ; preds = %if.then
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %eh_block_artificial_uses.addr, align 8, !dbg !2855
  %call = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %3, i32 20), !dbg !2857
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %eh_block_artificial_uses.addr, align 8, !dbg !2858
  %call3 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %4, i32 6), !dbg !2859
  br label %if.end, !dbg !2860

if.end:                                           ; preds = %if.then2, %if.then
  %5 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16, !dbg !2861
  %tobool4 = icmp ne i8 %5, 0, !dbg !2861
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !2863

if.then5:                                         ; preds = %if.end
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %eh_block_artificial_uses.addr, align 8, !dbg !2864
  %call6 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %6, i32 16), !dbg !2865
  br label %if.end7, !dbg !2865

if.end7:                                          ; preds = %if.then5, %if.end
  br label %if.end8, !dbg !2866

if.end8:                                          ; preds = %if.end7, %entry
  ret void, !dbg !2867
}

declare dso_local zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_get_entry_block_def_set(%struct.bitmap_head_def* %entry_block_defs) #0 !dbg !2868 {
entry:
  %entry_block_defs.addr = alloca %struct.bitmap_head_def*, align 8
  %r = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  store %struct.bitmap_head_def* %entry_block_defs, %struct.bitmap_head_def** %entry_block_defs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %entry_block_defs.addr, metadata !2869, metadata !DIExpression()), !dbg !2870
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %r, metadata !2871, metadata !DIExpression()), !dbg !2872
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2873, metadata !DIExpression()), !dbg !2874
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs.addr, align 8, !dbg !2875
  call void @bitmap_clear(%struct.bitmap_head_def* %0), !dbg !2876
  store i32 0, i32* %i, align 4, !dbg !2877
  br label %for.cond, !dbg !2879

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !2880
  %cmp = icmp slt i32 %1, 53, !dbg !2882
  br i1 %cmp, label %for.body, label %for.end, !dbg !2883

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !2884
  %call = call zeroext i8 @ix86_function_arg_regno_p(i32 %2), !dbg !2884
  %tobool = icmp ne i8 %call, 0, !dbg !2884
  br i1 %tobool, label %if.then, label %if.end, !dbg !2887

if.then:                                          ; preds = %for.body
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs.addr, align 8, !dbg !2888
  %4 = load i32, i32* %i, align 4, !dbg !2889
  %call1 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %3, i32 %4), !dbg !2890
  br label %if.end, !dbg !2890

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !2891

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %i, align 4, !dbg !2892
  %inc = add nsw i32 %5, 1, !dbg !2892
  store i32 %inc, i32* %i, align 4, !dbg !2892
  br label %for.cond, !dbg !2893, !llvm.loop !2894

for.end:                                          ; preds = %for.cond
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs.addr, align 8, !dbg !2896
  %call2 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %6, i32 7), !dbg !2897
  %7 = load i32, i32* @epilogue_completed, align 4, !dbg !2898
  %tobool3 = icmp ne i32 %7, 0, !dbg !2898
  br i1 %tobool3, label %if.then4, label %if.end19, !dbg !2900

if.then4:                                         ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !2901
  br label %for.cond5, !dbg !2904

for.cond5:                                        ; preds = %for.inc16, %if.then4
  %8 = load i32, i32* %i, align 4, !dbg !2905
  %cmp6 = icmp slt i32 %8, 53, !dbg !2907
  br i1 %cmp6, label %for.body7, label %for.end18, !dbg !2908

for.body7:                                        ; preds = %for.cond5
  %9 = load i32, i32* %i, align 4, !dbg !2909
  %idxprom = sext i32 %9 to i64, !dbg !2911
  %arrayidx = getelementptr inbounds [53 x i8], [53 x i8]* @call_used_regs, i64 0, i64 %idxprom, !dbg !2911
  %10 = load i8, i8* %arrayidx, align 1, !dbg !2911
  %conv = sext i8 %10 to i32, !dbg !2911
  %cmp8 = icmp eq i32 %conv, 0, !dbg !2912
  br i1 %cmp8, label %land.lhs.true, label %if.end15, !dbg !2913

land.lhs.true:                                    ; preds = %for.body7
  %11 = load i32, i32* %i, align 4, !dbg !2914
  %call10 = call zeroext i8 @df_regs_ever_live_p(i32 %11), !dbg !2915
  %conv11 = zext i8 %call10 to i32, !dbg !2916
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !2916
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !2917

if.then13:                                        ; preds = %land.lhs.true
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs.addr, align 8, !dbg !2918
  %13 = load i32, i32* %i, align 4, !dbg !2919
  %call14 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %12, i32 %13), !dbg !2920
  br label %if.end15, !dbg !2920

if.end15:                                         ; preds = %if.then13, %land.lhs.true, %for.body7
  br label %for.inc16, !dbg !2921

for.inc16:                                        ; preds = %if.end15
  %14 = load i32, i32* %i, align 4, !dbg !2922
  %inc17 = add nsw i32 %14, 1, !dbg !2922
  store i32 %inc17, i32* %i, align 4, !dbg !2922
  br label %for.cond5, !dbg !2923, !llvm.loop !2924

for.end18:                                        ; preds = %for.cond5
  br label %if.end19, !dbg !2926

if.end19:                                         ; preds = %for.end18, %for.end
  %15 = load %struct.rtx_def* (%union.tree_node*, i32)*, %struct.rtx_def* (%union.tree_node*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 88, i32 2), align 8, !dbg !2927
  %16 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !2928
  %call20 = call %struct.rtx_def* %15(%union.tree_node* %16, i32 1), !dbg !2929
  store %struct.rtx_def* %call20, %struct.rtx_def** %r, align 8, !dbg !2930
  %17 = load %struct.rtx_def*, %struct.rtx_def** %r, align 8, !dbg !2931
  %tobool21 = icmp ne %struct.rtx_def* %17, null, !dbg !2931
  br i1 %tobool21, label %land.lhs.true22, label %if.end28, !dbg !2933

land.lhs.true22:                                  ; preds = %if.end19
  %18 = load %struct.rtx_def*, %struct.rtx_def** %r, align 8, !dbg !2934
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !2934
  %bf.load = load i32, i32* %19, align 8, !dbg !2934
  %bf.clear = and i32 %bf.load, 65535, !dbg !2934
  %cmp23 = icmp eq i32 %bf.clear, 37, !dbg !2934
  br i1 %cmp23, label %if.then25, label %if.end28, !dbg !2935

if.then25:                                        ; preds = %land.lhs.true22
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs.addr, align 8, !dbg !2936
  %21 = load %struct.rtx_def*, %struct.rtx_def** %r, align 8, !dbg !2937
  %call26 = call i32 @rhs_regno(%struct.rtx_def* %21), !dbg !2937
  %call27 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %20, i32 %call26), !dbg !2938
  br label %if.end28, !dbg !2938

if.end28:                                         ; preds = %if.then25, %land.lhs.true22, %if.end19
  %22 = load %struct.rtx_def* (%union.tree_node*, i8)*, %struct.rtx_def* (%union.tree_node*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 88, i32 21), align 8, !dbg !2939
  %23 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !2940
  %call29 = call %struct.rtx_def* %22(%union.tree_node* %23, i8 zeroext 1), !dbg !2941
  store %struct.rtx_def* %call29, %struct.rtx_def** %r, align 8, !dbg !2942
  %24 = load %struct.rtx_def*, %struct.rtx_def** %r, align 8, !dbg !2943
  %tobool30 = icmp ne %struct.rtx_def* %24, null, !dbg !2943
  br i1 %tobool30, label %land.lhs.true31, label %if.end39, !dbg !2945

land.lhs.true31:                                  ; preds = %if.end28
  %25 = load %struct.rtx_def*, %struct.rtx_def** %r, align 8, !dbg !2946
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !2946
  %bf.load32 = load i32, i32* %26, align 8, !dbg !2946
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !2946
  %cmp34 = icmp eq i32 %bf.clear33, 37, !dbg !2946
  br i1 %cmp34, label %if.then36, label %if.end39, !dbg !2947

if.then36:                                        ; preds = %land.lhs.true31
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs.addr, align 8, !dbg !2948
  %28 = load %struct.rtx_def*, %struct.rtx_def** %r, align 8, !dbg !2949
  %call37 = call i32 @rhs_regno(%struct.rtx_def* %28), !dbg !2949
  %call38 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %27, i32 %call37), !dbg !2950
  br label %if.end39, !dbg !2950

if.end39:                                         ; preds = %if.then36, %land.lhs.true31, %if.end28
  %29 = load i32, i32* @reload_completed, align 4, !dbg !2951
  %tobool40 = icmp ne i32 %29, 0, !dbg !2951
  br i1 %tobool40, label %lor.lhs.false, label %if.then43, !dbg !2953

lor.lhs.false:                                    ; preds = %if.end39
  %30 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !2954
  %conv41 = zext i8 %30 to i32, !dbg !2954
  %tobool42 = icmp ne i32 %conv41, 0, !dbg !2954
  br i1 %tobool42, label %if.then43, label %if.end46, !dbg !2955

if.then43:                                        ; preds = %lor.lhs.false, %if.end39
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs.addr, align 8, !dbg !2956
  %call44 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %31, i32 20), !dbg !2958
  %32 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs.addr, align 8, !dbg !2959
  %call45 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %32, i32 6), !dbg !2961
  br label %if.end46, !dbg !2962

if.end46:                                         ; preds = %if.then43, %lor.lhs.false
  %33 = load i32, i32* @reload_completed, align 4, !dbg !2963
  %tobool47 = icmp ne i32 %33, 0, !dbg !2963
  br i1 %tobool47, label %if.end92, label %if.then48, !dbg !2965

if.then48:                                        ; preds = %if.end46
  %34 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16, !dbg !2966
  %tobool49 = icmp ne i8 %34, 0, !dbg !2966
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !2969

if.then50:                                        ; preds = %if.then48
  %35 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs.addr, align 8, !dbg !2970
  %call51 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %35, i32 16), !dbg !2971
  br label %if.end52, !dbg !2971

if.end52:                                         ; preds = %if.then50, %if.then48
  %36 = load i32, i32* @flag_pic, align 4, !dbg !2972
  %tobool53 = icmp ne i32 %36, 0, !dbg !2972
  br i1 %tobool53, label %cond.false, label %cond.true, !dbg !2972

cond.true:                                        ; preds = %if.end52
  br label %cond.end58, !dbg !2972

cond.false:                                       ; preds = %if.end52
  %37 = load i32, i32* @reload_completed, align 4, !dbg !2972
  %tobool54 = icmp ne i32 %37, 0, !dbg !2972
  br i1 %tobool54, label %cond.true55, label %cond.false57, !dbg !2972

cond.true55:                                      ; preds = %cond.false
  %38 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !2972
  %call56 = call i32 @rhs_regno(%struct.rtx_def* %38), !dbg !2972
  br label %cond.end, !dbg !2972

cond.false57:                                     ; preds = %cond.false
  br label %cond.end, !dbg !2972

cond.end:                                         ; preds = %cond.false57, %cond.true55
  %cond = phi i32 [ %call56, %cond.true55 ], [ 3, %cond.false57 ], !dbg !2972
  br label %cond.end58, !dbg !2972

cond.end58:                                       ; preds = %cond.end, %cond.true
  %cond59 = phi i32 [ -1, %cond.true ], [ %cond, %cond.end ], !dbg !2972
  %cmp60 = icmp ne i32 %cond59, -1, !dbg !2974
  br i1 %cmp60, label %land.lhs.true62, label %if.end91, !dbg !2975

land.lhs.true62:                                  ; preds = %cond.end58
  %39 = load i32, i32* @flag_pic, align 4, !dbg !2976
  %tobool63 = icmp ne i32 %39, 0, !dbg !2976
  br i1 %tobool63, label %cond.false65, label %cond.true64, !dbg !2976

cond.true64:                                      ; preds = %land.lhs.true62
  br label %cond.end72, !dbg !2976

cond.false65:                                     ; preds = %land.lhs.true62
  %40 = load i32, i32* @reload_completed, align 4, !dbg !2976
  %tobool66 = icmp ne i32 %40, 0, !dbg !2976
  br i1 %tobool66, label %cond.true67, label %cond.false69, !dbg !2976

cond.true67:                                      ; preds = %cond.false65
  %41 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !2976
  %call68 = call i32 @rhs_regno(%struct.rtx_def* %41), !dbg !2976
  br label %cond.end70, !dbg !2976

cond.false69:                                     ; preds = %cond.false65
  br label %cond.end70, !dbg !2976

cond.end70:                                       ; preds = %cond.false69, %cond.true67
  %cond71 = phi i32 [ %call68, %cond.true67 ], [ 3, %cond.false69 ], !dbg !2976
  br label %cond.end72, !dbg !2976

cond.end72:                                       ; preds = %cond.end70, %cond.true64
  %cond73 = phi i32 [ -1, %cond.true64 ], [ %cond71, %cond.end70 ], !dbg !2976
  %idxprom74 = zext i32 %cond73 to i64, !dbg !2977
  %arrayidx75 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom74, !dbg !2977
  %42 = load i8, i8* %arrayidx75, align 1, !dbg !2977
  %conv76 = sext i8 %42 to i32, !dbg !2977
  %tobool77 = icmp ne i32 %conv76, 0, !dbg !2977
  br i1 %tobool77, label %if.then78, label %if.end91, !dbg !2978

if.then78:                                        ; preds = %cond.end72
  %43 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs.addr, align 8, !dbg !2979
  %44 = load i32, i32* @flag_pic, align 4, !dbg !2980
  %tobool79 = icmp ne i32 %44, 0, !dbg !2980
  br i1 %tobool79, label %cond.false81, label %cond.true80, !dbg !2980

cond.true80:                                      ; preds = %if.then78
  br label %cond.end88, !dbg !2980

cond.false81:                                     ; preds = %if.then78
  %45 = load i32, i32* @reload_completed, align 4, !dbg !2980
  %tobool82 = icmp ne i32 %45, 0, !dbg !2980
  br i1 %tobool82, label %cond.true83, label %cond.false85, !dbg !2980

cond.true83:                                      ; preds = %cond.false81
  %46 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !2980
  %call84 = call i32 @rhs_regno(%struct.rtx_def* %46), !dbg !2980
  br label %cond.end86, !dbg !2980

cond.false85:                                     ; preds = %cond.false81
  br label %cond.end86, !dbg !2980

cond.end86:                                       ; preds = %cond.false85, %cond.true83
  %cond87 = phi i32 [ %call84, %cond.true83 ], [ 3, %cond.false85 ], !dbg !2980
  br label %cond.end88, !dbg !2980

cond.end88:                                       ; preds = %cond.end86, %cond.true80
  %cond89 = phi i32 [ -1, %cond.true80 ], [ %cond87, %cond.end86 ], !dbg !2980
  %call90 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %43, i32 %cond89), !dbg !2981
  br label %if.end91, !dbg !2981

if.end91:                                         ; preds = %cond.end88, %cond.end72, %cond.end58
  br label %if.end92, !dbg !2982

if.end92:                                         ; preds = %if.end91, %if.end46
  %call93 = call %struct.rtx_def* @gen_rtx_REG(i32 0, i32 7), !dbg !2983
  %call94 = call %struct.rtx_def* @gen_rtx_MEM(i32 0, %struct.rtx_def* %call93), !dbg !2983
  %47 = bitcast %struct.rtx_def* %call94 to i32*, !dbg !2983
  %bf.load95 = load i32, i32* %47, align 8, !dbg !2983
  %bf.clear96 = and i32 %bf.load95, 65535, !dbg !2983
  %cmp97 = icmp eq i32 %bf.clear96, 37, !dbg !2983
  br i1 %cmp97, label %if.then99, label %if.end104, !dbg !2985

if.then99:                                        ; preds = %if.end92
  %48 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs.addr, align 8, !dbg !2986
  %call100 = call %struct.rtx_def* @gen_rtx_REG(i32 0, i32 7), !dbg !2987
  %call101 = call %struct.rtx_def* @gen_rtx_MEM(i32 0, %struct.rtx_def* %call100), !dbg !2987
  %call102 = call i32 @rhs_regno(%struct.rtx_def* %call101), !dbg !2987
  %call103 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %48, i32 %call102), !dbg !2988
  br label %if.end104, !dbg !2988

if.end104:                                        ; preds = %if.then99, %if.end92
  %49 = load void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 108), align 8, !dbg !2989
  %50 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs.addr, align 8, !dbg !2990
  call void %49(%struct.bitmap_head_def* %50), !dbg !2991
  ret void, !dbg !2992
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_record_entry_block_defs(%struct.bitmap_head_def* %entry_block_defs) #0 !dbg !2993 {
entry:
  %entry_block_defs.addr = alloca %struct.bitmap_head_def*, align 8
  %collection_rec = alloca %struct.df_collection_rec, align 8
  store %struct.bitmap_head_def* %entry_block_defs, %struct.bitmap_head_def** %entry_block_defs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %entry_block_defs.addr, metadata !2994, metadata !DIExpression()), !dbg !2995
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec* %collection_rec, metadata !2996, metadata !DIExpression()), !dbg !3003
  %0 = bitcast %struct.df_collection_rec* %collection_rec to i8*, !dbg !3004
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !3004
  %call = call i64 @VEC_df_ref_base_embedded_size(i32 53), !dbg !3005
  %1 = alloca i8, i64 %call, align 16, !dbg !3005
  %2 = bitcast i8* %1 to %struct.VEC_df_ref_stack*, !dbg !3005
  %call1 = call %struct.VEC_df_ref_stack* @VEC_df_ref_stack_alloc1(i32 53, %struct.VEC_df_ref_stack* %2), !dbg !3005
  %def_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 0, !dbg !3006
  store %struct.VEC_df_ref_stack* %call1, %struct.VEC_df_ref_stack** %def_vec, align 8, !dbg !3007
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs.addr, align 8, !dbg !3008
  call void @df_entry_block_defs_collect(%struct.df_collection_rec* %collection_rec, %struct.bitmap_head_def* %3), !dbg !3009
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3010
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, !dbg !3010
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !3010
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3010
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i32 0, i32 2, !dbg !3010
  %6 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !3010
  %tobool = icmp ne %struct.VEC_basic_block_gc* %6, null, !dbg !3010
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3010

cond.true:                                        ; preds = %entry
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3010
  %add.ptr2 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, !dbg !3010
  %cfg3 = getelementptr inbounds %struct.function, %struct.function* %add.ptr2, i32 0, i32 1, !dbg !3010
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg3, align 8, !dbg !3010
  %x_basic_block_info4 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i32 0, i32 2, !dbg !3010
  %9 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info4, align 8, !dbg !3010
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %9, i32 0, i32 0, !dbg !3010
  br label %cond.end, !dbg !3010

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3010

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3010
  %call5 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 0), !dbg !3010
  call void @df_refs_add_to_chains(%struct.df_collection_rec* %collection_rec, %struct.basic_block_def* %call5, %struct.rtx_def* null), !dbg !3011
  %def_vec6 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 0, !dbg !3012
  call void @VEC_df_ref_stack_free(%struct.VEC_df_ref_stack** %def_vec6), !dbg !3012
  ret void, !dbg !3013
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_get_exit_block_use_set(%struct.bitmap_head_def* %exit_block_uses) #0 !dbg !3014 {
entry:
  %exit_block_uses.addr = alloca %struct.bitmap_head_def*, align 8
  %i = alloca i32, align 4
  %regno = alloca i32, align 4
  %tmp = alloca %struct.rtx_def*, align 8
  store %struct.bitmap_head_def* %exit_block_uses, %struct.bitmap_head_def** %exit_block_uses.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %exit_block_uses.addr, metadata !3015, metadata !DIExpression()), !dbg !3016
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3017, metadata !DIExpression()), !dbg !3018
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses.addr, align 8, !dbg !3019
  call void @bitmap_clear(%struct.bitmap_head_def* %0), !dbg !3020
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses.addr, align 8, !dbg !3021
  %call = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %1, i32 7), !dbg !3022
  %2 = load i32, i32* @reload_completed, align 4, !dbg !3023
  %tobool = icmp ne i32 %2, 0, !dbg !3023
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !3025

lor.lhs.false:                                    ; preds = %entry
  %3 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !3026
  %conv = zext i8 %3 to i32, !dbg !3026
  %tobool1 = icmp ne i32 %conv, 0, !dbg !3026
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3027

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses.addr, align 8, !dbg !3028
  %call2 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %4, i32 20), !dbg !3030
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses.addr, align 8, !dbg !3031
  %call3 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %5, i32 6), !dbg !3033
  br label %if.end, !dbg !3034

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %6 = load i32, i32* @flag_pic, align 4, !dbg !3035
  %tobool4 = icmp ne i32 %6, 0, !dbg !3035
  br i1 %tobool4, label %cond.false, label %cond.true, !dbg !3035

cond.true:                                        ; preds = %if.end
  br label %cond.end9, !dbg !3035

cond.false:                                       ; preds = %if.end
  %7 = load i32, i32* @reload_completed, align 4, !dbg !3035
  %tobool5 = icmp ne i32 %7, 0, !dbg !3035
  br i1 %tobool5, label %cond.true6, label %cond.false8, !dbg !3035

cond.true6:                                       ; preds = %cond.false
  %8 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !3035
  %call7 = call i32 @rhs_regno(%struct.rtx_def* %8), !dbg !3035
  br label %cond.end, !dbg !3035

cond.false8:                                      ; preds = %cond.false
  br label %cond.end, !dbg !3035

cond.end:                                         ; preds = %cond.false8, %cond.true6
  %cond = phi i32 [ %call7, %cond.true6 ], [ 3, %cond.false8 ], !dbg !3035
  br label %cond.end9, !dbg !3035

cond.end9:                                        ; preds = %cond.end, %cond.true
  %cond10 = phi i32 [ -1, %cond.true ], [ %cond, %cond.end ], !dbg !3035
  %cmp = icmp ne i32 %cond10, -1, !dbg !3037
  br i1 %cmp, label %land.lhs.true, label %if.end38, !dbg !3038

land.lhs.true:                                    ; preds = %cond.end9
  %9 = load i32, i32* @flag_pic, align 4, !dbg !3039
  %tobool12 = icmp ne i32 %9, 0, !dbg !3039
  br i1 %tobool12, label %cond.false14, label %cond.true13, !dbg !3039

cond.true13:                                      ; preds = %land.lhs.true
  br label %cond.end21, !dbg !3039

cond.false14:                                     ; preds = %land.lhs.true
  %10 = load i32, i32* @reload_completed, align 4, !dbg !3039
  %tobool15 = icmp ne i32 %10, 0, !dbg !3039
  br i1 %tobool15, label %cond.true16, label %cond.false18, !dbg !3039

cond.true16:                                      ; preds = %cond.false14
  %11 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !3039
  %call17 = call i32 @rhs_regno(%struct.rtx_def* %11), !dbg !3039
  br label %cond.end19, !dbg !3039

cond.false18:                                     ; preds = %cond.false14
  br label %cond.end19, !dbg !3039

cond.end19:                                       ; preds = %cond.false18, %cond.true16
  %cond20 = phi i32 [ %call17, %cond.true16 ], [ 3, %cond.false18 ], !dbg !3039
  br label %cond.end21, !dbg !3039

cond.end21:                                       ; preds = %cond.end19, %cond.true13
  %cond22 = phi i32 [ -1, %cond.true13 ], [ %cond20, %cond.end19 ], !dbg !3039
  %idxprom = zext i32 %cond22 to i64, !dbg !3040
  %arrayidx = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom, !dbg !3040
  %12 = load i8, i8* %arrayidx, align 1, !dbg !3040
  %conv23 = sext i8 %12 to i32, !dbg !3040
  %tobool24 = icmp ne i32 %conv23, 0, !dbg !3040
  br i1 %tobool24, label %if.then25, label %if.end38, !dbg !3041

if.then25:                                        ; preds = %cond.end21
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses.addr, align 8, !dbg !3042
  %14 = load i32, i32* @flag_pic, align 4, !dbg !3043
  %tobool26 = icmp ne i32 %14, 0, !dbg !3043
  br i1 %tobool26, label %cond.false28, label %cond.true27, !dbg !3043

cond.true27:                                      ; preds = %if.then25
  br label %cond.end35, !dbg !3043

cond.false28:                                     ; preds = %if.then25
  %15 = load i32, i32* @reload_completed, align 4, !dbg !3043
  %tobool29 = icmp ne i32 %15, 0, !dbg !3043
  br i1 %tobool29, label %cond.true30, label %cond.false32, !dbg !3043

cond.true30:                                      ; preds = %cond.false28
  %16 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !3043
  %call31 = call i32 @rhs_regno(%struct.rtx_def* %16), !dbg !3043
  br label %cond.end33, !dbg !3043

cond.false32:                                     ; preds = %cond.false28
  br label %cond.end33, !dbg !3043

cond.end33:                                       ; preds = %cond.false32, %cond.true30
  %cond34 = phi i32 [ %call31, %cond.true30 ], [ 3, %cond.false32 ], !dbg !3043
  br label %cond.end35, !dbg !3043

cond.end35:                                       ; preds = %cond.end33, %cond.true27
  %cond36 = phi i32 [ -1, %cond.true27 ], [ %cond34, %cond.end33 ], !dbg !3043
  %call37 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %13, i32 %cond36), !dbg !3044
  br label %if.end38, !dbg !3044

if.end38:                                         ; preds = %cond.end35, %cond.end21, %cond.end9
  store i32 0, i32* %i, align 4, !dbg !3045
  br label %for.cond, !dbg !3047

for.cond:                                         ; preds = %for.inc, %if.end38
  %17 = load i32, i32* %i, align 4, !dbg !3048
  %cmp39 = icmp ult i32 %17, 53, !dbg !3050
  br i1 %cmp39, label %for.body, label %for.end, !dbg !3051

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %i, align 4, !dbg !3052
  %idxprom41 = zext i32 %18 to i64, !dbg !3054
  %arrayidx42 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %idxprom41, !dbg !3054
  %19 = load i8, i8* %arrayidx42, align 1, !dbg !3054
  %conv43 = sext i8 %19 to i32, !dbg !3054
  %tobool44 = icmp ne i32 %conv43, 0, !dbg !3054
  br i1 %tobool44, label %if.then45, label %if.end47, !dbg !3055

if.then45:                                        ; preds = %for.body
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses.addr, align 8, !dbg !3056
  %21 = load i32, i32* %i, align 4, !dbg !3057
  %call46 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %20, i32 %21), !dbg !3058
  br label %if.end47, !dbg !3058

if.end47:                                         ; preds = %if.then45, %for.body
  br label %for.inc, !dbg !3059

for.inc:                                          ; preds = %if.end47
  %22 = load i32, i32* %i, align 4, !dbg !3060
  %inc = add i32 %22, 1, !dbg !3060
  store i32 %inc, i32* %i, align 4, !dbg !3060
  br label %for.cond, !dbg !3061, !llvm.loop !3062

for.end:                                          ; preds = %for.cond
  %23 = load i32, i32* @epilogue_completed, align 4, !dbg !3064
  %tobool48 = icmp ne i32 %23, 0, !dbg !3064
  br i1 %tobool48, label %if.then49, label %if.end65, !dbg !3066

if.then49:                                        ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !3067
  br label %for.cond50, !dbg !3070

for.cond50:                                       ; preds = %for.inc62, %if.then49
  %24 = load i32, i32* %i, align 4, !dbg !3071
  %cmp51 = icmp ult i32 %24, 53, !dbg !3073
  br i1 %cmp51, label %for.body53, label %for.end64, !dbg !3074

for.body53:                                       ; preds = %for.cond50
  %25 = load i32, i32* %i, align 4, !dbg !3075
  %call54 = call zeroext i8 @df_regs_ever_live_p(i32 %25), !dbg !3077
  %conv55 = zext i8 %call54 to i32, !dbg !3077
  %tobool56 = icmp ne i32 %conv55, 0, !dbg !3077
  br i1 %tobool56, label %land.lhs.true57, label %if.end61, !dbg !3078

land.lhs.true57:                                  ; preds = %for.body53
  %26 = load i64, i64* @regs_invalidated_by_call, align 8, !dbg !3079
  %27 = load i32, i32* %i, align 4, !dbg !3079
  %sh_prom = zext i32 %27 to i64, !dbg !3079
  %shl = shl i64 1, %sh_prom, !dbg !3079
  %and = and i64 %26, %shl, !dbg !3079
  %tobool58 = icmp ne i64 %and, 0, !dbg !3079
  br i1 %tobool58, label %if.end61, label %if.then59, !dbg !3080

if.then59:                                        ; preds = %land.lhs.true57
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses.addr, align 8, !dbg !3081
  %29 = load i32, i32* %i, align 4, !dbg !3082
  %call60 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %28, i32 %29), !dbg !3083
  br label %if.end61, !dbg !3083

if.end61:                                         ; preds = %if.then59, %land.lhs.true57, %for.body53
  br label %for.inc62, !dbg !3079

for.inc62:                                        ; preds = %if.end61
  %30 = load i32, i32* %i, align 4, !dbg !3084
  %inc63 = add i32 %30, 1, !dbg !3084
  store i32 %inc63, i32* %i, align 4, !dbg !3084
  br label %for.cond50, !dbg !3085, !llvm.loop !3086

for.end64:                                        ; preds = %for.cond50
  br label %if.end65, !dbg !3088

if.end65:                                         ; preds = %for.end64, %for.end
  %31 = load i32, i32* @reload_completed, align 4, !dbg !3089
  %tobool66 = icmp ne i32 %31, 0, !dbg !3089
  br i1 %tobool66, label %land.lhs.true67, label %if.end86, !dbg !3091

land.lhs.true67:                                  ; preds = %if.end65
  %32 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 29), align 1, !dbg !3092
  %conv68 = zext i8 %32 to i32, !dbg !3093
  %tobool69 = icmp ne i32 %conv68, 0, !dbg !3093
  br i1 %tobool69, label %if.then70, label %if.end86, !dbg !3094

if.then70:                                        ; preds = %land.lhs.true67
  store i32 0, i32* %i, align 4, !dbg !3095
  br label %for.cond71, !dbg !3097

for.cond71:                                       ; preds = %for.inc83, %if.then70
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !3098, metadata !DIExpression()), !dbg !3101
  %33 = load i32, i32* %i, align 4, !dbg !3102
  %cmp72 = icmp ult i32 %33, 2, !dbg !3102
  br i1 %cmp72, label %cond.true74, label %cond.false75, !dbg !3102

cond.true74:                                      ; preds = %for.cond71
  %34 = load i32, i32* %i, align 4, !dbg !3102
  br label %cond.end76, !dbg !3102

cond.false75:                                     ; preds = %for.cond71
  br label %cond.end76, !dbg !3102

cond.end76:                                       ; preds = %cond.false75, %cond.true74
  %cond77 = phi i32 [ %34, %cond.true74 ], [ -1, %cond.false75 ], !dbg !3102
  store i32 %cond77, i32* %regno, align 4, !dbg !3101
  %35 = load i32, i32* %regno, align 4, !dbg !3103
  %cmp78 = icmp eq i32 %35, -1, !dbg !3105
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !3106

if.then80:                                        ; preds = %cond.end76
  br label %for.end85, !dbg !3107

if.end81:                                         ; preds = %cond.end76
  %36 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses.addr, align 8, !dbg !3108
  %37 = load i32, i32* %regno, align 4, !dbg !3109
  %call82 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %36, i32 %37), !dbg !3110
  br label %for.inc83, !dbg !3111

for.inc83:                                        ; preds = %if.end81
  %38 = load i32, i32* %i, align 4, !dbg !3112
  %inc84 = add i32 %38, 1, !dbg !3112
  store i32 %inc84, i32* %i, align 4, !dbg !3112
  br label %for.cond71, !dbg !3113, !llvm.loop !3114

for.end85:                                        ; preds = %if.then80
  br label %if.end86, !dbg !3116

if.end86:                                         ; preds = %for.end85, %land.lhs.true67, %if.end65
  %39 = load i32, i32* @epilogue_completed, align 4, !dbg !3117
  %tobool87 = icmp ne i32 %39, 0, !dbg !3117
  br i1 %tobool87, label %if.end99, label %land.lhs.true88, !dbg !3119

land.lhs.true88:                                  ; preds = %if.end86
  %40 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 29), align 1, !dbg !3120
  %conv89 = zext i8 %40 to i32, !dbg !3121
  %tobool90 = icmp ne i32 %conv89, 0, !dbg !3121
  br i1 %tobool90, label %if.then91, label %if.end99, !dbg !3122

if.then91:                                        ; preds = %land.lhs.true88
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tmp, metadata !3123, metadata !DIExpression()), !dbg !3125
  %call92 = call %struct.rtx_def* @gen_rtx_REG(i32 16, i32 2), !dbg !3126
  store %struct.rtx_def* %call92, %struct.rtx_def** %tmp, align 8, !dbg !3125
  %41 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !3127
  %tobool93 = icmp ne %struct.rtx_def* %41, null, !dbg !3127
  br i1 %tobool93, label %land.lhs.true94, label %if.end98, !dbg !3129

land.lhs.true94:                                  ; preds = %if.then91
  %42 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !3130
  %43 = bitcast %struct.rtx_def* %42 to i32*, !dbg !3130
  %bf.load = load i32, i32* %43, align 8, !dbg !3130
  %bf.clear = and i32 %bf.load, 65535, !dbg !3130
  %cmp95 = icmp eq i32 %bf.clear, 37, !dbg !3130
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !3131

if.then97:                                        ; preds = %land.lhs.true94
  %44 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !3132
  %45 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses.addr, align 8, !dbg !3133
  %46 = bitcast %struct.bitmap_head_def* %45 to i8*, !dbg !3133
  call void @df_mark_reg(%struct.rtx_def* %44, i8* %46), !dbg !3134
  br label %if.end98, !dbg !3134

if.end98:                                         ; preds = %if.then97, %land.lhs.true94, %if.then91
  br label %if.end99, !dbg !3135

if.end99:                                         ; preds = %if.end98, %land.lhs.true88, %if.end86
  %47 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses.addr, align 8, !dbg !3136
  %48 = bitcast %struct.bitmap_head_def* %47 to i8*, !dbg !3137
  call void @diddle_return_value(void (%struct.rtx_def*, i8*)* @df_mark_reg, i8* %48), !dbg !3138
  ret void, !dbg !3139
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_record_exit_block_uses(%struct.bitmap_head_def* %exit_block_uses) #0 !dbg !3140 {
entry:
  %exit_block_uses.addr = alloca %struct.bitmap_head_def*, align 8
  %collection_rec = alloca %struct.df_collection_rec, align 8
  store %struct.bitmap_head_def* %exit_block_uses, %struct.bitmap_head_def** %exit_block_uses.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %exit_block_uses.addr, metadata !3141, metadata !DIExpression()), !dbg !3142
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec* %collection_rec, metadata !3143, metadata !DIExpression()), !dbg !3144
  %0 = bitcast %struct.df_collection_rec* %collection_rec to i8*, !dbg !3145
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !3145
  %call = call i64 @VEC_df_ref_base_embedded_size(i32 53), !dbg !3146
  %1 = alloca i8, i64 %call, align 16, !dbg !3146
  %2 = bitcast i8* %1 to %struct.VEC_df_ref_stack*, !dbg !3146
  %call1 = call %struct.VEC_df_ref_stack* @VEC_df_ref_stack_alloc1(i32 53, %struct.VEC_df_ref_stack* %2), !dbg !3146
  %use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 1, !dbg !3147
  store %struct.VEC_df_ref_stack* %call1, %struct.VEC_df_ref_stack** %use_vec, align 8, !dbg !3148
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses.addr, align 8, !dbg !3149
  call void @df_exit_block_uses_collect(%struct.df_collection_rec* %collection_rec, %struct.bitmap_head_def* %3), !dbg !3150
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3151
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, !dbg !3151
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !3151
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3151
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i32 0, i32 2, !dbg !3151
  %6 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !3151
  %tobool = icmp ne %struct.VEC_basic_block_gc* %6, null, !dbg !3151
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3151

cond.true:                                        ; preds = %entry
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3151
  %add.ptr2 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, !dbg !3151
  %cfg3 = getelementptr inbounds %struct.function, %struct.function* %add.ptr2, i32 0, i32 1, !dbg !3151
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg3, align 8, !dbg !3151
  %x_basic_block_info4 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i32 0, i32 2, !dbg !3151
  %9 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info4, align 8, !dbg !3151
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %9, i32 0, i32 0, !dbg !3151
  br label %cond.end, !dbg !3151

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3151

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3151
  %call5 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 1), !dbg !3151
  call void @df_refs_add_to_chains(%struct.df_collection_rec* %collection_rec, %struct.basic_block_def* %call5, %struct.rtx_def* null), !dbg !3152
  %use_vec6 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 1, !dbg !3153
  call void @VEC_df_ref_stack_free(%struct.VEC_df_ref_stack** %use_vec6), !dbg !3153
  ret void, !dbg !3154
}

declare dso_local void @df_set_bb_dirty(%struct.basic_block_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %vec_, i32 %ix_) #0 !dbg !3155 {
entry:
  %vec_.addr = alloca %struct.VEC_basic_block_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_basic_block_base* %vec_, %struct.VEC_basic_block_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_basic_block_base** %vec_.addr, metadata !3160, metadata !DIExpression()), !dbg !3161
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !3162, metadata !DIExpression()), !dbg !3161
  %0 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !3161
  %tobool = icmp ne %struct.VEC_basic_block_base* %0, null, !dbg !3161
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3161

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !3161
  %2 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !3161
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %2, i32 0, i32 0, !dbg !3161
  %3 = load i32, i32* %num, align 8, !dbg !3161
  %cmp = icmp ult i32 %1, %3, !dbg !3161
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !3163
  %land.ext = zext i1 %4 to i32, !dbg !3161
  %5 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !3161
  %vec = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %5, i32 0, i32 2, !dbg !3161
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !3161
  %idxprom = zext i32 %6 to i64, !dbg !3161
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %vec, i64 0, i64 %idxprom, !dbg !3161
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !3161
  ret %struct.basic_block_def* %7, !dbg !3161
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_bb_refs_record(i32 %bb_index, i8 zeroext %scan_insns) #0 !dbg !3164 {
entry:
  %bb_index.addr = alloca i32, align 4
  %scan_insns.addr = alloca i8, align 1
  %bb = alloca %struct.basic_block_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %luid = alloca i32, align 4
  %bb_info = alloca %struct.df_scan_bb_info*, align 8
  %collection_rec = alloca %struct.df_collection_rec, align 8
  %insn_info = alloca %struct.df_insn_info*, align 8
  store i32 %bb_index, i32* %bb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bb_index.addr, metadata !3167, metadata !DIExpression()), !dbg !3168
  store i8 %scan_insns, i8* %scan_insns.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %scan_insns.addr, metadata !3169, metadata !DIExpression()), !dbg !3170
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !3171, metadata !DIExpression()), !dbg !3172
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3173
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !3173
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !3173
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3173
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i32 0, i32 2, !dbg !3173
  %2 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !3173
  %tobool = icmp ne %struct.VEC_basic_block_gc* %2, null, !dbg !3173
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3173

cond.true:                                        ; preds = %entry
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3173
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, !dbg !3173
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !3173
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !3173
  %x_basic_block_info3 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i32 0, i32 2, !dbg !3173
  %5 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info3, align 8, !dbg !3173
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %5, i32 0, i32 0, !dbg !3173
  br label %cond.end, !dbg !3173

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3173

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3173
  %6 = load i32, i32* %bb_index.addr, align 4, !dbg !3173
  %call = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %6), !dbg !3173
  store %struct.basic_block_def* %call, %struct.basic_block_def** %bb, align 8, !dbg !3172
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !3174, metadata !DIExpression()), !dbg !3175
  call void @llvm.dbg.declare(metadata i32* %luid, metadata !3176, metadata !DIExpression()), !dbg !3177
  store i32 0, i32* %luid, align 4, !dbg !3177
  call void @llvm.dbg.declare(metadata %struct.df_scan_bb_info** %bb_info, metadata !3178, metadata !DIExpression()), !dbg !3179
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec* %collection_rec, metadata !3180, metadata !DIExpression()), !dbg !3181
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !3182
  %tobool4 = icmp ne %struct.df* %7, null, !dbg !3182
  br i1 %tobool4, label %if.end, label %if.then, !dbg !3184

if.then:                                          ; preds = %cond.end
  br label %return, !dbg !3185

if.end:                                           ; preds = %cond.end
  %8 = load i32, i32* %bb_index.addr, align 4, !dbg !3186
  %call5 = call %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %8), !dbg !3187
  store %struct.df_scan_bb_info* %call5, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !3188
  %9 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !3189
  %tobool6 = icmp ne %struct.df_scan_bb_info* %9, null, !dbg !3189
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !3191

if.then7:                                         ; preds = %if.end
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !3192
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %10, i32 0, i32 1, !dbg !3192
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !3192
  %11 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3192
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %11, i32 0, i32 3, !dbg !3194
  %12 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !3194
  %call8 = call i8* @pool_alloc(%struct.alloc_pool_def* %12), !dbg !3195
  %13 = bitcast i8* %call8 to %struct.df_scan_bb_info*, !dbg !3196
  store %struct.df_scan_bb_info* %13, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !3197
  %14 = load i32, i32* %bb_index.addr, align 4, !dbg !3198
  %15 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !3199
  call void @df_scan_set_bb_info(i32 %14, %struct.df_scan_bb_info* %15), !dbg !3200
  %16 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !3201
  %artificial_defs = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %16, i32 0, i32 0, !dbg !3202
  store %union.df_ref_d** null, %union.df_ref_d*** %artificial_defs, align 8, !dbg !3203
  %17 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !3204
  %artificial_uses = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %17, i32 0, i32 1, !dbg !3205
  store %union.df_ref_d** null, %union.df_ref_d*** %artificial_uses, align 8, !dbg !3206
  br label %if.end9, !dbg !3207

if.end9:                                          ; preds = %if.then7, %if.end
  %call10 = call i64 @VEC_df_ref_base_embedded_size(i32 128), !dbg !3208
  %18 = alloca i8, i64 %call10, align 16, !dbg !3208
  %19 = bitcast i8* %18 to %struct.VEC_df_ref_stack*, !dbg !3208
  %call11 = call %struct.VEC_df_ref_stack* @VEC_df_ref_stack_alloc1(i32 128, %struct.VEC_df_ref_stack* %19), !dbg !3208
  %def_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 0, !dbg !3209
  store %struct.VEC_df_ref_stack* %call11, %struct.VEC_df_ref_stack** %def_vec, align 8, !dbg !3210
  %call12 = call i64 @VEC_df_ref_base_embedded_size(i32 32), !dbg !3211
  %20 = alloca i8, i64 %call12, align 16, !dbg !3211
  %21 = bitcast i8* %20 to %struct.VEC_df_ref_stack*, !dbg !3211
  %call13 = call %struct.VEC_df_ref_stack* @VEC_df_ref_stack_alloc1(i32 32, %struct.VEC_df_ref_stack* %21), !dbg !3211
  %use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 1, !dbg !3212
  store %struct.VEC_df_ref_stack* %call13, %struct.VEC_df_ref_stack** %use_vec, align 8, !dbg !3213
  %call14 = call i64 @VEC_df_ref_base_embedded_size(i32 32), !dbg !3214
  %22 = alloca i8, i64 %call14, align 16, !dbg !3214
  %23 = bitcast i8* %22 to %struct.VEC_df_ref_stack*, !dbg !3214
  %call15 = call %struct.VEC_df_ref_stack* @VEC_df_ref_stack_alloc1(i32 32, %struct.VEC_df_ref_stack* %23), !dbg !3214
  %eq_use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 2, !dbg !3215
  store %struct.VEC_df_ref_stack* %call15, %struct.VEC_df_ref_stack** %eq_use_vec, align 8, !dbg !3216
  %call16 = call i64 @VEC_df_mw_hardreg_ptr_base_embedded_size(i32 32), !dbg !3217
  %24 = alloca i8, i64 %call16, align 16, !dbg !3217
  %25 = bitcast i8* %24 to %struct.VEC_df_mw_hardreg_ptr_stack*, !dbg !3217
  %call17 = call %struct.VEC_df_mw_hardreg_ptr_stack* @VEC_df_mw_hardreg_ptr_stack_alloc1(i32 32, %struct.VEC_df_mw_hardreg_ptr_stack* %25), !dbg !3217
  %mw_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 3, !dbg !3218
  store %struct.VEC_df_mw_hardreg_ptr_stack* %call17, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec, align 8, !dbg !3219
  %26 = load i8, i8* %scan_insns.addr, align 1, !dbg !3220
  %tobool18 = icmp ne i8 %26, 0, !dbg !3220
  br i1 %tobool18, label %if.then19, label %if.end61, !dbg !3222

if.then19:                                        ; preds = %if.end9
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3223
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %27, i32 0, i32 7, !dbg !3223
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3223
  %28 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3223
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %28, i32 0, i32 0, !dbg !3223
  %29 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3223
  store %struct.rtx_def* %29, %struct.rtx_def** %insn, align 8, !dbg !3223
  br label %for.cond, !dbg !3223

for.cond:                                         ; preds = %for.inc, %if.then19
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3225
  %tobool20 = icmp ne %struct.rtx_def* %30, null, !dbg !3225
  br i1 %tobool20, label %land.rhs, label %land.end, !dbg !3225

land.rhs:                                         ; preds = %for.cond
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3225
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3225
  %il21 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %32, i32 0, i32 7, !dbg !3225
  %rtl22 = bitcast %union.basic_block_il_dependent* %il21 to %struct.rtl_bb_info**, !dbg !3225
  %33 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl22, align 8, !dbg !3225
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %33, i32 0, i32 1, !dbg !3225
  %34 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3225
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !3225
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3225
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !3225
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !3225
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3225
  %cmp = icmp ne %struct.rtx_def* %31, %35, !dbg !3225
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %36 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ], !dbg !3227
  br i1 %36, label %for.body, label %for.end, !dbg !3223

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info, metadata !3228, metadata !DIExpression()), !dbg !3230
  %37 = load %struct.df*, %struct.df** @df, align 8, !dbg !3231
  %insns = getelementptr inbounds %struct.df, %struct.df* %37, i32 0, i32 10, !dbg !3231
  %38 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !3231
  %39 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3231
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !3231
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !3231
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 0, !dbg !3231
  %rt_int = bitcast %union.rtunion_def* %arrayidx26 to i32*, !dbg !3231
  %40 = load i32, i32* %rt_int, align 8, !dbg !3231
  %idxprom = sext i32 %40 to i64, !dbg !3231
  %arrayidx27 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %38, i64 %idxprom, !dbg !3231
  %41 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx27, align 8, !dbg !3231
  store %struct.df_insn_info* %41, %struct.df_insn_info** %insn_info, align 8, !dbg !3230
  %42 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !3232
  %tobool28 = icmp ne %struct.df_insn_info* %42, null, !dbg !3232
  br i1 %tobool28, label %cond.true29, label %cond.false30, !dbg !3232

cond.true29:                                      ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 3744, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !3232
  br label %cond.end31, !dbg !3232

cond.false30:                                     ; preds = %for.body
  br label %cond.end31, !dbg !3232

cond.end31:                                       ; preds = %cond.false30, %cond.true29
  %cond32 = phi i32 [ 0, %cond.true29 ], [ 0, %cond.false30 ], !dbg !3232
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3233
  %call33 = call %struct.df_insn_info* @df_insn_create_insn_record(%struct.rtx_def* %43), !dbg !3234
  store %struct.df_insn_info* %call33, %struct.df_insn_info** %insn_info, align 8, !dbg !3235
  %44 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3236
  %45 = bitcast %struct.rtx_def* %44 to i32*, !dbg !3236
  %bf.load = load i32, i32* %45, align 8, !dbg !3236
  %bf.clear = and i32 %bf.load, 65535, !dbg !3236
  %cmp34 = icmp eq i32 %bf.clear, 8, !dbg !3236
  br i1 %cmp34, label %if.then46, label %lor.lhs.false, !dbg !3236

lor.lhs.false:                                    ; preds = %cond.end31
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3236
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !3236
  %bf.load35 = load i32, i32* %47, align 8, !dbg !3236
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !3236
  %cmp37 = icmp eq i32 %bf.clear36, 7, !dbg !3236
  br i1 %cmp37, label %if.then46, label %lor.lhs.false38, !dbg !3236

lor.lhs.false38:                                  ; preds = %lor.lhs.false
  %48 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3236
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !3236
  %bf.load39 = load i32, i32* %49, align 8, !dbg !3236
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !3236
  %cmp41 = icmp eq i32 %bf.clear40, 9, !dbg !3236
  br i1 %cmp41, label %if.then46, label %lor.lhs.false42, !dbg !3236

lor.lhs.false42:                                  ; preds = %lor.lhs.false38
  %50 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3236
  %51 = bitcast %struct.rtx_def* %50 to i32*, !dbg !3236
  %bf.load43 = load i32, i32* %51, align 8, !dbg !3236
  %bf.clear44 = and i32 %bf.load43, 65535, !dbg !3236
  %cmp45 = icmp eq i32 %bf.clear44, 10, !dbg !3236
  br i1 %cmp45, label %if.then46, label %if.end55, !dbg !3238

if.then46:                                        ; preds = %lor.lhs.false42, %lor.lhs.false38, %lor.lhs.false, %cond.end31
  %52 = load i32, i32* %luid, align 4, !dbg !3239
  %inc = add nsw i32 %52, 1, !dbg !3239
  store i32 %inc, i32* %luid, align 4, !dbg !3239
  %53 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !3241
  %luid47 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %53, i32 0, i32 5, !dbg !3241
  store i32 %52, i32* %luid47, align 8, !dbg !3242
  %54 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3243
  %55 = load %struct.df*, %struct.df** @df, align 8, !dbg !3244
  %insns48 = getelementptr inbounds %struct.df, %struct.df* %55, i32 0, i32 10, !dbg !3244
  %56 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns48, align 8, !dbg !3244
  %57 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3244
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !3244
  %fld50 = bitcast %union.u* %u49 to [1 x %union.rtunion_def]*, !dbg !3244
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i64 0, i64 0, !dbg !3244
  %rt_int52 = bitcast %union.rtunion_def* %arrayidx51 to i32*, !dbg !3244
  %58 = load i32, i32* %rt_int52, align 8, !dbg !3244
  %idxprom53 = sext i32 %58 to i64, !dbg !3244
  %arrayidx54 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %56, i64 %idxprom53, !dbg !3244
  %59 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx54, align 8, !dbg !3244
  call void @df_insn_refs_collect(%struct.df_collection_rec* %collection_rec, %struct.basic_block_def* %54, %struct.df_insn_info* %59), !dbg !3245
  %60 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3246
  %61 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3247
  call void @df_refs_add_to_chains(%struct.df_collection_rec* %collection_rec, %struct.basic_block_def* %60, %struct.rtx_def* %61), !dbg !3248
  br label %if.end55, !dbg !3249

if.end55:                                         ; preds = %if.then46, %lor.lhs.false42
  %62 = load i32, i32* %luid, align 4, !dbg !3250
  %63 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !3251
  %luid56 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %63, i32 0, i32 5, !dbg !3251
  store i32 %62, i32* %luid56, align 8, !dbg !3252
  br label %for.inc, !dbg !3253

for.inc:                                          ; preds = %if.end55
  %64 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3225
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1, !dbg !3225
  %fld58 = bitcast %union.u* %u57 to [1 x %union.rtunion_def]*, !dbg !3225
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i64 0, i64 2, !dbg !3225
  %rt_rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**, !dbg !3225
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx60, align 8, !dbg !3225
  store %struct.rtx_def* %65, %struct.rtx_def** %insn, align 8, !dbg !3225
  br label %for.cond, !dbg !3225, !llvm.loop !3254

for.end:                                          ; preds = %land.end
  br label %if.end61, !dbg !3255

if.end61:                                         ; preds = %for.end, %if.end9
  %66 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3256
  call void @df_bb_refs_collect(%struct.df_collection_rec* %collection_rec, %struct.basic_block_def* %66), !dbg !3257
  %67 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3258
  call void @df_refs_add_to_chains(%struct.df_collection_rec* %collection_rec, %struct.basic_block_def* %67, %struct.rtx_def* null), !dbg !3259
  %def_vec62 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 0, !dbg !3260
  call void @VEC_df_ref_stack_free(%struct.VEC_df_ref_stack** %def_vec62), !dbg !3260
  %use_vec63 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 1, !dbg !3261
  call void @VEC_df_ref_stack_free(%struct.VEC_df_ref_stack** %use_vec63), !dbg !3261
  %eq_use_vec64 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 2, !dbg !3262
  call void @VEC_df_ref_stack_free(%struct.VEC_df_ref_stack** %eq_use_vec64), !dbg !3262
  %mw_vec65 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 3, !dbg !3263
  call void @VEC_df_mw_hardreg_ptr_stack_free(%struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec65), !dbg !3263
  %68 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3264
  call void @df_set_bb_dirty(%struct.basic_block_def* %68), !dbg !3265
  br label %return, !dbg !3266

return:                                           ; preds = %if.end61, %if.then
  ret void, !dbg !3266
}

; Function Attrs: noinline nounwind uwtable
define dso_local %union.df_ref_d* @df_ref_create(%struct.rtx_def* %reg, %struct.rtx_def** %loc, %struct.rtx_def* %insn, %struct.basic_block_def* %bb, i32 %ref_type, i32 %ref_flags, i32 %width, i32 %offset, i32 %mode) #0 !dbg !3267 {
entry:
  %reg.addr = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def**, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %ref_type.addr = alloca i32, align 4
  %ref_flags.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ref = alloca %union.df_ref_d*, align 8
  %reg_info = alloca %struct.df_reg_info**, align 8
  %ref_info = alloca %struct.df_ref_info*, align 8
  %ref_rec = alloca %union.df_ref_d**, align 8
  %ref_rec_ptr = alloca %union.df_ref_d***, align 8
  %count = alloca i32, align 4
  %add_to_table = alloca i8, align 1
  %cl = alloca i32, align 4
  %ref_rec79 = alloca %union.df_ref_d**, align 8
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg.addr, metadata !3270, metadata !DIExpression()), !dbg !3271
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc.addr, metadata !3272, metadata !DIExpression()), !dbg !3273
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3274, metadata !DIExpression()), !dbg !3275
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !3276, metadata !DIExpression()), !dbg !3277
  store i32 %ref_type, i32* %ref_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ref_type.addr, metadata !3278, metadata !DIExpression()), !dbg !3279
  store i32 %ref_flags, i32* %ref_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ref_flags.addr, metadata !3280, metadata !DIExpression()), !dbg !3281
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !3282, metadata !DIExpression()), !dbg !3283
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !3284, metadata !DIExpression()), !dbg !3285
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3286, metadata !DIExpression()), !dbg !3287
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref, metadata !3288, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.declare(metadata %struct.df_reg_info*** %reg_info, metadata !3290, metadata !DIExpression()), !dbg !3291
  call void @llvm.dbg.declare(metadata %struct.df_ref_info** %ref_info, metadata !3292, metadata !DIExpression()), !dbg !3303
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %ref_rec, metadata !3304, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.declare(metadata %union.df_ref_d**** %ref_rec_ptr, metadata !3306, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.declare(metadata i32* %count, metadata !3309, metadata !DIExpression()), !dbg !3310
  store i32 0, i32* %count, align 4, !dbg !3310
  call void @llvm.dbg.declare(metadata i8* %add_to_table, metadata !3311, metadata !DIExpression()), !dbg !3312
  call void @llvm.dbg.declare(metadata i32* %cl, metadata !3313, metadata !DIExpression()), !dbg !3314
  call void @df_grow_reg_info(), !dbg !3315
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3316
  %tobool = icmp ne %struct.rtx_def* %0, null, !dbg !3316
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3316

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 734, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !3316
  br label %cond.end, !dbg !3316

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3316

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3316
  %1 = load i32, i32* %width.addr, align 4, !dbg !3317
  %cmp = icmp ne i32 %1, -1, !dbg !3319
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3320

lor.lhs.false:                                    ; preds = %cond.end
  %2 = load i32, i32* %offset.addr, align 4, !dbg !3321
  %cmp1 = icmp ne i32 %2, -1, !dbg !3322
  br i1 %cmp1, label %if.then, label %if.else, !dbg !3323

if.then:                                          ; preds = %lor.lhs.false, %cond.end
  store i32 3, i32* %cl, align 4, !dbg !3324
  br label %if.end5, !dbg !3325

if.else:                                          ; preds = %lor.lhs.false
  %3 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !3326
  %tobool2 = icmp ne %struct.rtx_def** %3, null, !dbg !3326
  br i1 %tobool2, label %if.then3, label %if.else4, !dbg !3328

if.then3:                                         ; preds = %if.else
  store i32 2, i32* %cl, align 4, !dbg !3329
  br label %if.end, !dbg !3330

if.else4:                                         ; preds = %if.else
  store i32 0, i32* %cl, align 4, !dbg !3331
  br label %if.end

if.end:                                           ; preds = %if.else4, %if.then3
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %4 = load i32, i32* %cl, align 4, !dbg !3332
  %5 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !3333
  %6 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !3334
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !3335
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !3336
  %insns = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 10, !dbg !3336
  %9 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !3336
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3336
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !3336
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3336
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3336
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3336
  %11 = load i32, i32* %rt_int, align 8, !dbg !3336
  %idxprom = sext i32 %11 to i64, !dbg !3336
  %arrayidx6 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %9, i64 %idxprom, !dbg !3336
  %12 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx6, align 8, !dbg !3336
  %13 = load i32, i32* %ref_type.addr, align 4, !dbg !3337
  %14 = load i32, i32* %ref_flags.addr, align 4, !dbg !3338
  %15 = load i32, i32* %width.addr, align 4, !dbg !3339
  %16 = load i32, i32* %offset.addr, align 4, !dbg !3340
  %17 = load i32, i32* %mode.addr, align 4, !dbg !3341
  %call = call %union.df_ref_d* @df_ref_create_structure(i32 %4, %struct.df_collection_rec* null, %struct.rtx_def* %5, %struct.rtx_def** %6, %struct.basic_block_def* %7, %struct.df_insn_info* %12, i32 %13, i32 %14, i32 %15, i32 %16, i32 %17), !dbg !3342
  store %union.df_ref_d* %call, %union.df_ref_d** %ref, align 8, !dbg !3343
  %18 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !3344
  %base = bitcast %union.df_ref_d* %18 to %struct.df_base_ref*, !dbg !3344
  %19 = bitcast %struct.df_base_ref* %base to i32*, !dbg !3344
  %bf.load = load i32, i32* %19, align 8, !dbg !3344
  %bf.lshr = lshr i32 %bf.load, 8, !dbg !3344
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3344
  %cmp7 = icmp eq i32 %bf.clear, 0, !dbg !3344
  br i1 %cmp7, label %if.then8, label %if.else18, !dbg !3346

if.then8:                                         ; preds = %if.end5
  %20 = load %struct.df*, %struct.df** @df, align 8, !dbg !3347
  %def_regs = getelementptr inbounds %struct.df, %struct.df* %20, i32 0, i32 5, !dbg !3349
  %21 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs, align 8, !dbg !3349
  store %struct.df_reg_info** %21, %struct.df_reg_info*** %reg_info, align 8, !dbg !3350
  %22 = load %struct.df*, %struct.df** @df, align 8, !dbg !3351
  %def_info = getelementptr inbounds %struct.df, %struct.df* %22, i32 0, i32 3, !dbg !3352
  store %struct.df_ref_info* %def_info, %struct.df_ref_info** %ref_info, align 8, !dbg !3353
  %23 = load %struct.df*, %struct.df** @df, align 8, !dbg !3354
  %insns9 = getelementptr inbounds %struct.df, %struct.df* %23, i32 0, i32 10, !dbg !3354
  %24 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns9, align 8, !dbg !3354
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3354
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !3354
  %fld11 = bitcast %union.u* %u10 to [1 x %union.rtunion_def]*, !dbg !3354
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i64 0, i64 0, !dbg !3354
  %rt_int13 = bitcast %union.rtunion_def* %arrayidx12 to i32*, !dbg !3354
  %26 = load i32, i32* %rt_int13, align 8, !dbg !3354
  %idxprom14 = sext i32 %26 to i64, !dbg !3354
  %arrayidx15 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %24, i64 %idxprom14, !dbg !3354
  %27 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx15, align 8, !dbg !3354
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %27, i32 0, i32 1, !dbg !3354
  store %union.df_ref_d*** %defs, %union.df_ref_d**** %ref_rec_ptr, align 8, !dbg !3355
  %28 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info, align 8, !dbg !3356
  %ref_order = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %28, i32 0, i32 6, !dbg !3357
  %29 = load i32, i32* %ref_order, align 4, !dbg !3357
  %cmp16 = icmp ne i32 %29, 0, !dbg !3358
  %conv = zext i1 %cmp16 to i32, !dbg !3358
  %conv17 = trunc i32 %conv to i8, !dbg !3356
  store i8 %conv17, i8* %add_to_table, align 1, !dbg !3359
  br label %if.end45, !dbg !3360

if.else18:                                        ; preds = %if.end5
  %30 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !3361
  %base19 = bitcast %union.df_ref_d* %30 to %struct.df_base_ref*, !dbg !3361
  %31 = bitcast %struct.df_base_ref* %base19 to i32*, !dbg !3361
  %bf.load20 = load i32, i32* %31, align 8, !dbg !3361
  %bf.ashr = ashr i32 %bf.load20, 16, !dbg !3361
  %and = and i32 %bf.ashr, 4, !dbg !3363
  %tobool21 = icmp ne i32 %and, 0, !dbg !3363
  br i1 %tobool21, label %if.then22, label %if.else31, !dbg !3364

if.then22:                                        ; preds = %if.else18
  %32 = load %struct.df*, %struct.df** @df, align 8, !dbg !3365
  %eq_use_regs = getelementptr inbounds %struct.df, %struct.df* %32, i32 0, i32 7, !dbg !3367
  %33 = load %struct.df_reg_info**, %struct.df_reg_info*** %eq_use_regs, align 8, !dbg !3367
  store %struct.df_reg_info** %33, %struct.df_reg_info*** %reg_info, align 8, !dbg !3368
  %34 = load %struct.df*, %struct.df** @df, align 8, !dbg !3369
  %use_info = getelementptr inbounds %struct.df, %struct.df* %34, i32 0, i32 4, !dbg !3370
  store %struct.df_ref_info* %use_info, %struct.df_ref_info** %ref_info, align 8, !dbg !3371
  %35 = load %struct.df*, %struct.df** @df, align 8, !dbg !3372
  %insns23 = getelementptr inbounds %struct.df, %struct.df* %35, i32 0, i32 10, !dbg !3372
  %36 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns23, align 8, !dbg !3372
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3372
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !3372
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !3372
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 0, !dbg !3372
  %rt_int27 = bitcast %union.rtunion_def* %arrayidx26 to i32*, !dbg !3372
  %38 = load i32, i32* %rt_int27, align 8, !dbg !3372
  %idxprom28 = sext i32 %38 to i64, !dbg !3372
  %arrayidx29 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %36, i64 %idxprom28, !dbg !3372
  %39 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx29, align 8, !dbg !3372
  %eq_uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %39, i32 0, i32 3, !dbg !3372
  store %union.df_ref_d*** %eq_uses, %union.df_ref_d**** %ref_rec_ptr, align 8, !dbg !3373
  %40 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info, align 8, !dbg !3374
  %ref_order30 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %40, i32 0, i32 6, !dbg !3375
  %41 = load i32, i32* %ref_order30, align 4, !dbg !3375
  switch i32 %41, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
  ], !dbg !3376

sw.bb:                                            ; preds = %if.then22, %if.then22, %if.then22
  store i8 1, i8* %add_to_table, align 1, !dbg !3377
  br label %sw.epilog, !dbg !3379

sw.default:                                       ; preds = %if.then22
  store i8 0, i8* %add_to_table, align 1, !dbg !3380
  br label %sw.epilog, !dbg !3381

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %if.end44, !dbg !3382

if.else31:                                        ; preds = %if.else18
  %42 = load %struct.df*, %struct.df** @df, align 8, !dbg !3383
  %use_regs = getelementptr inbounds %struct.df, %struct.df* %42, i32 0, i32 6, !dbg !3385
  %43 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs, align 8, !dbg !3385
  store %struct.df_reg_info** %43, %struct.df_reg_info*** %reg_info, align 8, !dbg !3386
  %44 = load %struct.df*, %struct.df** @df, align 8, !dbg !3387
  %use_info32 = getelementptr inbounds %struct.df, %struct.df* %44, i32 0, i32 4, !dbg !3388
  store %struct.df_ref_info* %use_info32, %struct.df_ref_info** %ref_info, align 8, !dbg !3389
  %45 = load %struct.df*, %struct.df** @df, align 8, !dbg !3390
  %insns33 = getelementptr inbounds %struct.df, %struct.df* %45, i32 0, i32 10, !dbg !3390
  %46 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns33, align 8, !dbg !3390
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3390
  %u34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !3390
  %fld35 = bitcast %union.u* %u34 to [1 x %union.rtunion_def]*, !dbg !3390
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i64 0, i64 0, !dbg !3390
  %rt_int37 = bitcast %union.rtunion_def* %arrayidx36 to i32*, !dbg !3390
  %48 = load i32, i32* %rt_int37, align 8, !dbg !3390
  %idxprom38 = sext i32 %48 to i64, !dbg !3390
  %arrayidx39 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %46, i64 %idxprom38, !dbg !3390
  %49 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx39, align 8, !dbg !3390
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %49, i32 0, i32 2, !dbg !3390
  store %union.df_ref_d*** %uses, %union.df_ref_d**** %ref_rec_ptr, align 8, !dbg !3391
  %50 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info, align 8, !dbg !3392
  %ref_order40 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %50, i32 0, i32 6, !dbg !3393
  %51 = load i32, i32* %ref_order40, align 4, !dbg !3393
  %cmp41 = icmp ne i32 %51, 0, !dbg !3394
  %conv42 = zext i1 %cmp41 to i32, !dbg !3394
  %conv43 = trunc i32 %conv42 to i8, !dbg !3392
  store i8 %conv43, i8* %add_to_table, align 1, !dbg !3395
  br label %if.end44

if.end44:                                         ; preds = %if.else31, %sw.epilog
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then8
  %52 = load i8, i8* %add_to_table, align 1, !dbg !3396
  %conv46 = zext i8 %52 to i32, !dbg !3396
  %tobool47 = icmp ne i32 %conv46, 0, !dbg !3396
  br i1 %tobool47, label %land.lhs.true, label %if.end53, !dbg !3398

land.lhs.true:                                    ; preds = %if.end45
  %53 = load %struct.df*, %struct.df** @df, align 8, !dbg !3399
  %analyze_subset = getelementptr inbounds %struct.df, %struct.df* %53, i32 0, i32 28, !dbg !3400
  %54 = load i8, i8* %analyze_subset, align 1, !dbg !3400
  %conv48 = zext i8 %54 to i32, !dbg !3399
  %tobool49 = icmp ne i32 %conv48, 0, !dbg !3399
  br i1 %tobool49, label %if.then50, label %if.end53, !dbg !3401

if.then50:                                        ; preds = %land.lhs.true
  %55 = load %struct.df*, %struct.df** @df, align 8, !dbg !3402
  %blocks_to_analyze = getelementptr inbounds %struct.df, %struct.df* %55, i32 0, i32 2, !dbg !3403
  %56 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %blocks_to_analyze, align 8, !dbg !3403
  %57 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !3404
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %57, i32 0, i32 9, !dbg !3405
  %58 = load i32, i32* %index, align 8, !dbg !3405
  %call51 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %56, i32 %58), !dbg !3406
  %conv52 = trunc i32 %call51 to i8, !dbg !3406
  store i8 %conv52, i8* %add_to_table, align 1, !dbg !3407
  br label %if.end53, !dbg !3408

if.end53:                                         ; preds = %if.then50, %land.lhs.true, %if.end45
  %59 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !3409
  %60 = load %struct.df_reg_info**, %struct.df_reg_info*** %reg_info, align 8, !dbg !3410
  %61 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !3411
  %base54 = bitcast %union.df_ref_d* %61 to %struct.df_base_ref*, !dbg !3411
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base54, i32 0, i32 6, !dbg !3411
  %62 = load i32, i32* %regno, align 8, !dbg !3411
  %idxprom55 = zext i32 %62 to i64, !dbg !3410
  %arrayidx56 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %60, i64 %idxprom55, !dbg !3410
  %63 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx56, align 8, !dbg !3410
  %64 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info, align 8, !dbg !3412
  %65 = load i8, i8* %add_to_table, align 1, !dbg !3413
  call void @df_install_ref(%union.df_ref_d* %59, %struct.df_reg_info* %63, %struct.df_ref_info* %64, i8 zeroext %65), !dbg !3414
  %66 = load i8, i8* %add_to_table, align 1, !dbg !3415
  %tobool57 = icmp ne i8 %66, 0, !dbg !3415
  br i1 %tobool57, label %if.then58, label %if.end65, !dbg !3417

if.then58:                                        ; preds = %if.end53
  %67 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info, align 8, !dbg !3418
  %ref_order59 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %67, i32 0, i32 6, !dbg !3419
  %68 = load i32, i32* %ref_order59, align 4, !dbg !3419
  switch i32 %68, label %sw.default62 [
    i32 2, label %sw.bb60
    i32 4, label %sw.bb60
    i32 6, label %sw.bb60
  ], !dbg !3420

sw.bb60:                                          ; preds = %if.then58, %if.then58, %if.then58
  %69 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info, align 8, !dbg !3421
  %ref_order61 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %69, i32 0, i32 6, !dbg !3423
  store i32 2, i32* %ref_order61, align 4, !dbg !3424
  br label %sw.epilog64, !dbg !3425

sw.default62:                                     ; preds = %if.then58
  %70 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info, align 8, !dbg !3426
  %ref_order63 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %70, i32 0, i32 6, !dbg !3427
  store i32 1, i32* %ref_order63, align 4, !dbg !3428
  br label %sw.epilog64, !dbg !3429

sw.epilog64:                                      ; preds = %sw.default62, %sw.bb60
  br label %if.end65, !dbg !3430

if.end65:                                         ; preds = %sw.epilog64, %if.end53
  %71 = load %union.df_ref_d***, %union.df_ref_d**** %ref_rec_ptr, align 8, !dbg !3431
  %72 = load %union.df_ref_d**, %union.df_ref_d*** %71, align 8, !dbg !3432
  store %union.df_ref_d** %72, %union.df_ref_d*** %ref_rec, align 8, !dbg !3433
  br label %while.cond, !dbg !3434

while.cond:                                       ; preds = %while.body, %if.end65
  %73 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !3435
  %74 = load %union.df_ref_d*, %union.df_ref_d** %73, align 8, !dbg !3436
  %tobool66 = icmp ne %union.df_ref_d* %74, null, !dbg !3434
  br i1 %tobool66, label %while.body, label %while.end, !dbg !3434

while.body:                                       ; preds = %while.cond
  %75 = load i32, i32* %count, align 4, !dbg !3437
  %inc = add i32 %75, 1, !dbg !3437
  store i32 %inc, i32* %count, align 4, !dbg !3437
  %76 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !3439
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %76, i32 1, !dbg !3439
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %ref_rec, align 8, !dbg !3439
  br label %while.cond, !dbg !3434, !llvm.loop !3440

while.end:                                        ; preds = %while.cond
  %77 = load %union.df_ref_d***, %union.df_ref_d**** %ref_rec_ptr, align 8, !dbg !3442
  %78 = load %union.df_ref_d**, %union.df_ref_d*** %77, align 8, !dbg !3443
  store %union.df_ref_d** %78, %union.df_ref_d*** %ref_rec, align 8, !dbg !3444
  %79 = load i32, i32* %count, align 4, !dbg !3445
  %tobool67 = icmp ne i32 %79, 0, !dbg !3445
  br i1 %tobool67, label %if.then68, label %if.else78, !dbg !3447

if.then68:                                        ; preds = %while.end
  %80 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !3448
  %81 = bitcast %union.df_ref_d** %80 to i8*, !dbg !3448
  %82 = load i32, i32* %count, align 4, !dbg !3448
  %add = add i32 %82, 2, !dbg !3448
  %conv69 = zext i32 %add to i64, !dbg !3448
  %mul = mul i64 8, %conv69, !dbg !3448
  %call70 = call i8* @xrealloc(i8* %81, i64 %mul), !dbg !3448
  %83 = bitcast i8* %call70 to %union.df_ref_d**, !dbg !3448
  store %union.df_ref_d** %83, %union.df_ref_d*** %ref_rec, align 8, !dbg !3450
  %84 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !3451
  %85 = load %union.df_ref_d***, %union.df_ref_d**** %ref_rec_ptr, align 8, !dbg !3452
  store %union.df_ref_d** %84, %union.df_ref_d*** %85, align 8, !dbg !3453
  %86 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !3454
  %87 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !3455
  %88 = load i32, i32* %count, align 4, !dbg !3456
  %idxprom71 = zext i32 %88 to i64, !dbg !3455
  %arrayidx72 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %87, i64 %idxprom71, !dbg !3455
  store %union.df_ref_d* %86, %union.df_ref_d** %arrayidx72, align 8, !dbg !3457
  %89 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !3458
  %90 = load i32, i32* %count, align 4, !dbg !3459
  %add73 = add i32 %90, 1, !dbg !3460
  %idxprom74 = zext i32 %add73 to i64, !dbg !3458
  %arrayidx75 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %89, i64 %idxprom74, !dbg !3458
  store %union.df_ref_d* null, %union.df_ref_d** %arrayidx75, align 8, !dbg !3461
  %91 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !3462
  %92 = bitcast %union.df_ref_d** %91 to i8*, !dbg !3462
  %93 = load i32, i32* %count, align 4, !dbg !3463
  %add76 = add i32 %93, 1, !dbg !3464
  %conv77 = zext i32 %add76 to i64, !dbg !3463
  call void @spec_qsort(i8* %92, i64 %conv77, i64 8, i32 (i8*, i8*)* @df_ref_compare), !dbg !3465
  br label %if.end83, !dbg !3466

if.else78:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %ref_rec79, metadata !3467, metadata !DIExpression()), !dbg !3469
  %call80 = call i8* @xmalloc(i64 16), !dbg !3470
  %94 = bitcast i8* %call80 to %union.df_ref_d**, !dbg !3470
  store %union.df_ref_d** %94, %union.df_ref_d*** %ref_rec79, align 8, !dbg !3469
  %95 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !3471
  %96 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec79, align 8, !dbg !3472
  %arrayidx81 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %96, i64 0, !dbg !3472
  store %union.df_ref_d* %95, %union.df_ref_d** %arrayidx81, align 8, !dbg !3473
  %97 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec79, align 8, !dbg !3474
  %arrayidx82 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %97, i64 1, !dbg !3474
  store %union.df_ref_d* null, %union.df_ref_d** %arrayidx82, align 8, !dbg !3475
  %98 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec79, align 8, !dbg !3476
  %99 = load %union.df_ref_d***, %union.df_ref_d**** %ref_rec_ptr, align 8, !dbg !3477
  store %union.df_ref_d** %98, %union.df_ref_d*** %99, align 8, !dbg !3478
  br label %if.end83

if.end83:                                         ; preds = %if.else78, %if.then68
  %100 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !3479
  %base84 = bitcast %union.df_ref_d* %100 to %struct.df_base_ref*, !dbg !3479
  %insn_info = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base84, i32 0, i32 3, !dbg !3479
  %101 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !3479
  %insn85 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %101, i32 0, i32 0, !dbg !3479
  %102 = load %struct.rtx_def*, %struct.rtx_def** %insn85, align 8, !dbg !3479
  %103 = bitcast %struct.rtx_def* %102 to i32*, !dbg !3479
  %bf.load86 = load i32, i32* %103, align 8, !dbg !3479
  %bf.clear87 = and i32 %bf.load86, 65535, !dbg !3479
  %cmp88 = icmp eq i32 %bf.clear87, 7, !dbg !3479
  br i1 %cmp88, label %if.end91, label %if.then90, !dbg !3481

if.then90:                                        ; preds = %if.end83
  %104 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !3482
  call void @df_set_bb_dirty(%struct.basic_block_def* %104), !dbg !3483
  br label %if.end91, !dbg !3483

if.end91:                                         ; preds = %if.then90, %if.end83
  %105 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !3484
  ret %union.df_ref_d* %105, !dbg !3485
}

declare dso_local void @fancy_abort(i8*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal %union.df_ref_d* @df_ref_create_structure(i32 %cl, %struct.df_collection_rec* %collection_rec, %struct.rtx_def* %reg, %struct.rtx_def** %loc, %struct.basic_block_def* %bb, %struct.df_insn_info* %info, i32 %ref_type, i32 %ref_flags, i32 %width, i32 %offset, i32 %mode) #0 !dbg !3486 {
entry:
  %cl.addr = alloca i32, align 4
  %collection_rec.addr = alloca %struct.df_collection_rec*, align 8
  %reg.addr = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def**, align 8
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %info.addr = alloca %struct.df_insn_info*, align 8
  %ref_type.addr = alloca i32, align 4
  %ref_flags.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %this_ref = alloca %union.df_ref_d*, align 8
  %regno = alloca i32, align 4
  %problem_data = alloca %struct.df_scan_problem_data*, align 8
  store i32 %cl, i32* %cl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cl.addr, metadata !3490, metadata !DIExpression()), !dbg !3491
  store %struct.df_collection_rec* %collection_rec, %struct.df_collection_rec** %collection_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec** %collection_rec.addr, metadata !3492, metadata !DIExpression()), !dbg !3493
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg.addr, metadata !3494, metadata !DIExpression()), !dbg !3495
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc.addr, metadata !3496, metadata !DIExpression()), !dbg !3497
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !3498, metadata !DIExpression()), !dbg !3499
  store %struct.df_insn_info* %info, %struct.df_insn_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %info.addr, metadata !3500, metadata !DIExpression()), !dbg !3501
  store i32 %ref_type, i32* %ref_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ref_type.addr, metadata !3502, metadata !DIExpression()), !dbg !3503
  store i32 %ref_flags, i32* %ref_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ref_flags.addr, metadata !3504, metadata !DIExpression()), !dbg !3505
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !3506, metadata !DIExpression()), !dbg !3507
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !3508, metadata !DIExpression()), !dbg !3509
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3510, metadata !DIExpression()), !dbg !3511
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %this_ref, metadata !3512, metadata !DIExpression()), !dbg !3513
  store %union.df_ref_d* null, %union.df_ref_d** %this_ref, align 8, !dbg !3513
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !3514, metadata !DIExpression()), !dbg !3515
  %0 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !3516
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !3516
  %bf.load = load i32, i32* %1, align 8, !dbg !3516
  %bf.clear = and i32 %bf.load, 65535, !dbg !3516
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !3516
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3516

cond.true:                                        ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !3516
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !3516
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3516
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3516
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3516
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3516
  br label %cond.end, !dbg !3516

cond.false:                                       ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !3516
  br label %cond.end, !dbg !3516

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %3, %cond.true ], [ %4, %cond.false ], !dbg !3516
  %call = call i32 @rhs_regno(%struct.rtx_def* %cond), !dbg !3516
  store i32 %call, i32* %regno, align 4, !dbg !3515
  call void @llvm.dbg.declare(metadata %struct.df_scan_problem_data** %problem_data, metadata !3517, metadata !DIExpression()), !dbg !3518
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !3519
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 1, !dbg !3519
  %arrayidx1 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !3519
  %6 = load %struct.dataflow*, %struct.dataflow** %arrayidx1, align 8, !dbg !3519
  %problem_data2 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %6, i32 0, i32 5, !dbg !3520
  %7 = load i8*, i8** %problem_data2, align 8, !dbg !3520
  %8 = bitcast i8* %7 to %struct.df_scan_problem_data*, !dbg !3521
  store %struct.df_scan_problem_data* %8, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !3518
  %9 = load i32, i32* %cl.addr, align 4, !dbg !3522
  switch i32 %9, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb9
    i32 2, label %sw.bb17
    i32 3, label %sw.bb24
  ], !dbg !3523

sw.bb:                                            ; preds = %cond.end
  %10 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !3524
  %ref_base_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %10, i32 0, i32 0, !dbg !3526
  %11 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %ref_base_pool, align 8, !dbg !3526
  %call3 = call i8* @pool_alloc(%struct.alloc_pool_def* %11), !dbg !3527
  %12 = bitcast i8* %call3 to %union.df_ref_d*, !dbg !3528
  store %union.df_ref_d* %12, %union.df_ref_d** %this_ref, align 8, !dbg !3529
  %13 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !3530
  %cmp4 = icmp eq %struct.rtx_def** %13, null, !dbg !3530
  br i1 %cmp4, label %cond.false6, label %cond.true5, !dbg !3530

cond.true5:                                       ; preds = %sw.bb
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 2827, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !3530
  br label %cond.end7, !dbg !3530

cond.false6:                                      ; preds = %sw.bb
  br label %cond.end7, !dbg !3530

cond.end7:                                        ; preds = %cond.false6, %cond.true5
  %cond8 = phi i32 [ 0, %cond.true5 ], [ 0, %cond.false6 ], !dbg !3530
  br label %sw.epilog, !dbg !3531

sw.bb9:                                           ; preds = %cond.end
  %14 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !3532
  %ref_artificial_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %14, i32 0, i32 1, !dbg !3533
  %15 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %ref_artificial_pool, align 8, !dbg !3533
  %call10 = call i8* @pool_alloc(%struct.alloc_pool_def* %15), !dbg !3534
  %16 = bitcast i8* %call10 to %union.df_ref_d*, !dbg !3535
  store %union.df_ref_d* %16, %union.df_ref_d** %this_ref, align 8, !dbg !3536
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !3537
  %18 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3538
  %artificial_ref = bitcast %union.df_ref_d* %18 to %struct.df_artificial_ref*, !dbg !3539
  %bb11 = getelementptr inbounds %struct.df_artificial_ref, %struct.df_artificial_ref* %artificial_ref, i32 0, i32 1, !dbg !3540
  store %struct.basic_block_def* %17, %struct.basic_block_def** %bb11, align 8, !dbg !3541
  %19 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !3542
  %cmp12 = icmp eq %struct.rtx_def** %19, null, !dbg !3542
  br i1 %cmp12, label %cond.false14, label %cond.true13, !dbg !3542

cond.true13:                                      ; preds = %sw.bb9
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 2833, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !3542
  br label %cond.end15, !dbg !3542

cond.false14:                                     ; preds = %sw.bb9
  br label %cond.end15, !dbg !3542

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i32 [ 0, %cond.true13 ], [ 0, %cond.false14 ], !dbg !3542
  br label %sw.epilog, !dbg !3543

sw.bb17:                                          ; preds = %cond.end
  %20 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !3544
  %ref_regular_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %20, i32 0, i32 2, !dbg !3545
  %21 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %ref_regular_pool, align 8, !dbg !3545
  %call18 = call i8* @pool_alloc(%struct.alloc_pool_def* %21), !dbg !3546
  %22 = bitcast i8* %call18 to %union.df_ref_d*, !dbg !3547
  store %union.df_ref_d* %22, %union.df_ref_d** %this_ref, align 8, !dbg !3548
  %23 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !3549
  %24 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3550
  %regular_ref = bitcast %union.df_ref_d* %24 to %struct.df_regular_ref*, !dbg !3551
  %loc19 = getelementptr inbounds %struct.df_regular_ref, %struct.df_regular_ref* %regular_ref, i32 0, i32 1, !dbg !3552
  store %struct.rtx_def** %23, %struct.rtx_def*** %loc19, align 8, !dbg !3553
  %25 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !3554
  %tobool = icmp ne %struct.rtx_def** %25, null, !dbg !3554
  br i1 %tobool, label %cond.false21, label %cond.true20, !dbg !3554

cond.true20:                                      ; preds = %sw.bb17
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 2839, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !3554
  br label %cond.end22, !dbg !3554

cond.false21:                                     ; preds = %sw.bb17
  br label %cond.end22, !dbg !3554

cond.end22:                                       ; preds = %cond.false21, %cond.true20
  %cond23 = phi i32 [ 0, %cond.true20 ], [ 0, %cond.false21 ], !dbg !3554
  br label %sw.epilog, !dbg !3555

sw.bb24:                                          ; preds = %cond.end
  %26 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !3556
  %ref_extract_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %26, i32 0, i32 3, !dbg !3557
  %27 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %ref_extract_pool, align 8, !dbg !3557
  %call25 = call i8* @pool_alloc(%struct.alloc_pool_def* %27), !dbg !3558
  %28 = bitcast i8* %call25 to %union.df_ref_d*, !dbg !3559
  store %union.df_ref_d* %28, %union.df_ref_d** %this_ref, align 8, !dbg !3560
  %29 = load i32, i32* %width.addr, align 4, !dbg !3561
  %30 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3562
  %extract_ref = bitcast %union.df_ref_d* %30 to %struct.df_extract_ref*, !dbg !3562
  %width26 = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref, i32 0, i32 1, !dbg !3562
  store i32 %29, i32* %width26, align 8, !dbg !3563
  %31 = load i32, i32* %offset.addr, align 4, !dbg !3564
  %32 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3565
  %extract_ref27 = bitcast %union.df_ref_d* %32 to %struct.df_extract_ref*, !dbg !3565
  %offset28 = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref27, i32 0, i32 2, !dbg !3565
  store i32 %31, i32* %offset28, align 4, !dbg !3566
  %33 = load i32, i32* %mode.addr, align 4, !dbg !3567
  %34 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3568
  %extract_ref29 = bitcast %union.df_ref_d* %34 to %struct.df_extract_ref*, !dbg !3568
  %mode30 = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref29, i32 0, i32 3, !dbg !3568
  store i32 %33, i32* %mode30, align 8, !dbg !3569
  %35 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !3570
  %36 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3571
  %regular_ref31 = bitcast %union.df_ref_d* %36 to %struct.df_regular_ref*, !dbg !3572
  %loc32 = getelementptr inbounds %struct.df_regular_ref, %struct.df_regular_ref* %regular_ref31, i32 0, i32 1, !dbg !3573
  store %struct.rtx_def** %35, %struct.rtx_def*** %loc32, align 8, !dbg !3574
  %37 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !3575
  %tobool33 = icmp ne %struct.rtx_def** %37, null, !dbg !3575
  br i1 %tobool33, label %cond.false35, label %cond.true34, !dbg !3575

cond.true34:                                      ; preds = %sw.bb24
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 2848, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !3575
  br label %cond.end36, !dbg !3575

cond.false35:                                     ; preds = %sw.bb24
  br label %cond.end36, !dbg !3575

cond.end36:                                       ; preds = %cond.false35, %cond.true34
  %cond37 = phi i32 [ 0, %cond.true34 ], [ 0, %cond.false35 ], !dbg !3575
  br label %sw.epilog, !dbg !3576

sw.epilog:                                        ; preds = %cond.end, %cond.end36, %cond.end22, %cond.end15, %cond.end7
  %38 = load i32, i32* %cl.addr, align 4, !dbg !3577
  %39 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3578
  %base = bitcast %union.df_ref_d* %39 to %struct.df_base_ref*, !dbg !3578
  %40 = bitcast %struct.df_base_ref* %base to i32*, !dbg !3578
  %bf.load38 = load i32, i32* %40, align 8, !dbg !3579
  %bf.value = and i32 %38, 255, !dbg !3579
  %bf.clear39 = and i32 %bf.load38, -256, !dbg !3579
  %bf.set = or i32 %bf.clear39, %bf.value, !dbg !3579
  store i32 %bf.set, i32* %40, align 8, !dbg !3579
  %41 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3580
  %base40 = bitcast %union.df_ref_d* %41 to %struct.df_base_ref*, !dbg !3580
  %id = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base40, i32 0, i32 7, !dbg !3580
  store i32 -1, i32* %id, align 4, !dbg !3581
  %42 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !3582
  %43 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3583
  %base41 = bitcast %union.df_ref_d* %43 to %struct.df_base_ref*, !dbg !3583
  %reg42 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base41, i32 0, i32 1, !dbg !3583
  store %struct.rtx_def* %42, %struct.rtx_def** %reg42, align 8, !dbg !3584
  %44 = load i32, i32* %regno, align 4, !dbg !3585
  %45 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3586
  %base43 = bitcast %union.df_ref_d* %45 to %struct.df_base_ref*, !dbg !3586
  %regno44 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base43, i32 0, i32 6, !dbg !3586
  store i32 %44, i32* %regno44, align 8, !dbg !3587
  %46 = load i32, i32* %ref_type.addr, align 4, !dbg !3588
  %47 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3589
  %base45 = bitcast %union.df_ref_d* %47 to %struct.df_base_ref*, !dbg !3589
  %48 = bitcast %struct.df_base_ref* %base45 to i32*, !dbg !3589
  %bf.load46 = load i32, i32* %48, align 8, !dbg !3590
  %bf.value47 = and i32 %46, 255, !dbg !3590
  %bf.shl = shl i32 %bf.value47, 8, !dbg !3590
  %bf.clear48 = and i32 %bf.load46, -65281, !dbg !3590
  %bf.set49 = or i32 %bf.clear48, %bf.shl, !dbg !3590
  store i32 %bf.set49, i32* %48, align 8, !dbg !3590
  %49 = load %struct.df_insn_info*, %struct.df_insn_info** %info.addr, align 8, !dbg !3591
  %50 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3592
  %base50 = bitcast %union.df_ref_d* %50 to %struct.df_base_ref*, !dbg !3592
  %insn_info = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base50, i32 0, i32 3, !dbg !3592
  store %struct.df_insn_info* %49, %struct.df_insn_info** %insn_info, align 8, !dbg !3593
  %51 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3594
  %base51 = bitcast %union.df_ref_d* %51 to %struct.df_base_ref*, !dbg !3594
  %chain = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base51, i32 0, i32 2, !dbg !3594
  store %struct.df_link* null, %struct.df_link** %chain, align 8, !dbg !3595
  %52 = load i32, i32* %ref_flags.addr, align 4, !dbg !3596
  %53 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3597
  %base52 = bitcast %union.df_ref_d* %53 to %struct.df_base_ref*, !dbg !3597
  %54 = bitcast %struct.df_base_ref* %base52 to i32*, !dbg !3597
  %bf.load53 = load i32, i32* %54, align 8, !dbg !3598
  %bf.value54 = and i32 %52, 65535, !dbg !3598
  %bf.shl55 = shl i32 %bf.value54, 16, !dbg !3598
  %bf.clear56 = and i32 %bf.load53, 65535, !dbg !3598
  %bf.set57 = or i32 %bf.clear56, %bf.shl55, !dbg !3598
  store i32 %bf.set57, i32* %54, align 8, !dbg !3598
  %bf.result.shl = shl i32 %bf.value54, 16, !dbg !3598
  %bf.result.ashr = ashr i32 %bf.result.shl, 16, !dbg !3598
  %55 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3599
  %base58 = bitcast %union.df_ref_d* %55 to %struct.df_base_ref*, !dbg !3599
  %next_reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base58, i32 0, i32 4, !dbg !3599
  store %union.df_ref_d* null, %union.df_ref_d** %next_reg, align 8, !dbg !3600
  %56 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3601
  %base59 = bitcast %union.df_ref_d* %56 to %struct.df_base_ref*, !dbg !3601
  %prev_reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base59, i32 0, i32 5, !dbg !3601
  store %union.df_ref_d* null, %union.df_ref_d** %prev_reg, align 8, !dbg !3602
  %57 = load %struct.df*, %struct.df** @df, align 8, !dbg !3603
  %ref_order = getelementptr inbounds %struct.df, %struct.df* %57, i32 0, i32 26, !dbg !3604
  %58 = load i32, i32* %ref_order, align 8, !dbg !3605
  %inc = add i32 %58, 1, !dbg !3605
  store i32 %inc, i32* %ref_order, align 8, !dbg !3605
  %59 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3606
  %base60 = bitcast %union.df_ref_d* %59 to %struct.df_base_ref*, !dbg !3606
  %ref_order61 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base60, i32 0, i32 8, !dbg !3606
  store i32 %58, i32* %ref_order61, align 8, !dbg !3607
  %60 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3608
  %base62 = bitcast %union.df_ref_d* %60 to %struct.df_base_ref*, !dbg !3608
  %61 = bitcast %struct.df_base_ref* %base62 to i32*, !dbg !3608
  %bf.load63 = load i32, i32* %61, align 8, !dbg !3608
  %bf.ashr = ashr i32 %bf.load63, 16, !dbg !3608
  %and = and i32 %bf.ashr, -9, !dbg !3608
  %bf.load64 = load i32, i32* %61, align 8, !dbg !3608
  %bf.value65 = and i32 %and, 65535, !dbg !3608
  %bf.shl66 = shl i32 %bf.value65, 16, !dbg !3608
  %bf.clear67 = and i32 %bf.load64, 65535, !dbg !3608
  %bf.set68 = or i32 %bf.clear67, %bf.shl66, !dbg !3608
  store i32 %bf.set68, i32* %61, align 8, !dbg !3608
  %bf.result.shl69 = shl i32 %bf.value65, 16, !dbg !3608
  %bf.result.ashr70 = ashr i32 %bf.result.shl69, 16, !dbg !3608
  %62 = load i32, i32* %regno, align 4, !dbg !3609
  %cmp71 = icmp slt i32 %62, 53, !dbg !3611
  br i1 %cmp71, label %land.lhs.true, label %if.end116, !dbg !3612

land.lhs.true:                                    ; preds = %sw.epilog
  %63 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3613
  %base72 = bitcast %union.df_ref_d* %63 to %struct.df_base_ref*, !dbg !3613
  %64 = bitcast %struct.df_base_ref* %base72 to i32*, !dbg !3613
  %bf.load73 = load i32, i32* %64, align 8, !dbg !3613
  %bf.clear74 = and i32 %bf.load73, 255, !dbg !3613
  %cmp75 = icmp eq i32 %bf.clear74, 1, !dbg !3613
  br i1 %cmp75, label %if.end116, label %if.then, !dbg !3614

if.then:                                          ; preds = %land.lhs.true
  %65 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3615
  %base76 = bitcast %union.df_ref_d* %65 to %struct.df_base_ref*, !dbg !3615
  %66 = bitcast %struct.df_base_ref* %base76 to i32*, !dbg !3615
  %bf.load77 = load i32, i32* %66, align 8, !dbg !3615
  %bf.lshr = lshr i32 %bf.load77, 8, !dbg !3615
  %bf.clear78 = and i32 %bf.lshr, 255, !dbg !3615
  %cmp79 = icmp eq i32 %bf.clear78, 0, !dbg !3615
  br i1 %cmp79, label %if.then80, label %if.else, !dbg !3618

if.then80:                                        ; preds = %if.then
  %67 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3619
  %base81 = bitcast %union.df_ref_d* %67 to %struct.df_base_ref*, !dbg !3619
  %68 = bitcast %struct.df_base_ref* %base81 to i32*, !dbg !3619
  %bf.load82 = load i32, i32* %68, align 8, !dbg !3619
  %bf.ashr83 = ashr i32 %bf.load82, 16, !dbg !3619
  %and84 = and i32 %bf.ashr83, 64, !dbg !3619
  %cmp85 = icmp ne i32 %and84, 0, !dbg !3619
  br i1 %cmp85, label %if.end, label %if.then86, !dbg !3622

if.then86:                                        ; preds = %if.then80
  %69 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3623
  %base87 = bitcast %union.df_ref_d* %69 to %struct.df_base_ref*, !dbg !3623
  %70 = bitcast %struct.df_base_ref* %base87 to i32*, !dbg !3623
  %bf.load88 = load i32, i32* %70, align 8, !dbg !3623
  %bf.ashr89 = ashr i32 %bf.load88, 16, !dbg !3623
  %or = or i32 %bf.ashr89, 8, !dbg !3623
  %bf.load90 = load i32, i32* %70, align 8, !dbg !3623
  %bf.value91 = and i32 %or, 65535, !dbg !3623
  %bf.shl92 = shl i32 %bf.value91, 16, !dbg !3623
  %bf.clear93 = and i32 %bf.load90, 65535, !dbg !3623
  %bf.set94 = or i32 %bf.clear93, %bf.shl92, !dbg !3623
  store i32 %bf.set94, i32* %70, align 8, !dbg !3623
  %bf.result.shl95 = shl i32 %bf.value91, 16, !dbg !3623
  %bf.result.ashr96 = ashr i32 %bf.result.shl95, 16, !dbg !3623
  br label %if.end, !dbg !3623

if.end:                                           ; preds = %if.then86, %if.then80
  br label %if.end115, !dbg !3624

if.else:                                          ; preds = %if.then
  %71 = load i64, i64* @elim_reg_set, align 8, !dbg !3625
  %72 = load i32, i32* %regno, align 4, !dbg !3625
  %sh_prom = zext i32 %72 to i64, !dbg !3625
  %shl = shl i64 1, %sh_prom, !dbg !3625
  %and97 = and i64 %71, %shl, !dbg !3625
  %tobool98 = icmp ne i64 %and97, 0, !dbg !3625
  br i1 %tobool98, label %land.lhs.true99, label %if.then102, !dbg !3627

land.lhs.true99:                                  ; preds = %if.else
  %73 = load i32, i32* %regno, align 4, !dbg !3628
  %cmp100 = icmp eq i32 %73, 20, !dbg !3629
  br i1 %cmp100, label %if.end114, label %lor.lhs.false, !dbg !3630

lor.lhs.false:                                    ; preds = %land.lhs.true99
  %74 = load i32, i32* %regno, align 4, !dbg !3631
  %cmp101 = icmp eq i32 %74, 16, !dbg !3632
  br i1 %cmp101, label %if.end114, label %if.then102, !dbg !3633

if.then102:                                       ; preds = %lor.lhs.false, %if.else
  %75 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3634
  %base103 = bitcast %union.df_ref_d* %75 to %struct.df_base_ref*, !dbg !3634
  %76 = bitcast %struct.df_base_ref* %base103 to i32*, !dbg !3634
  %bf.load104 = load i32, i32* %76, align 8, !dbg !3634
  %bf.ashr105 = ashr i32 %bf.load104, 16, !dbg !3634
  %or106 = or i32 %bf.ashr105, 8, !dbg !3634
  %bf.load107 = load i32, i32* %76, align 8, !dbg !3634
  %bf.value108 = and i32 %or106, 65535, !dbg !3634
  %bf.shl109 = shl i32 %bf.value108, 16, !dbg !3634
  %bf.clear110 = and i32 %bf.load107, 65535, !dbg !3634
  %bf.set111 = or i32 %bf.clear110, %bf.shl109, !dbg !3634
  store i32 %bf.set111, i32* %76, align 8, !dbg !3634
  %bf.result.shl112 = shl i32 %bf.value108, 16, !dbg !3634
  %bf.result.ashr113 = ashr i32 %bf.result.shl112, 16, !dbg !3634
  br label %if.end114, !dbg !3634

if.end114:                                        ; preds = %if.then102, %lor.lhs.false, %land.lhs.true99
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.end
  br label %if.end116, !dbg !3635

if.end116:                                        ; preds = %if.end115, %land.lhs.true, %sw.epilog
  %77 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !3636
  %tobool117 = icmp ne %struct.df_collection_rec* %77, null, !dbg !3636
  br i1 %tobool117, label %if.then118, label %if.end138, !dbg !3638

if.then118:                                       ; preds = %if.end116
  %78 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3639
  %base119 = bitcast %union.df_ref_d* %78 to %struct.df_base_ref*, !dbg !3639
  %79 = bitcast %struct.df_base_ref* %base119 to i32*, !dbg !3639
  %bf.load120 = load i32, i32* %79, align 8, !dbg !3639
  %bf.lshr121 = lshr i32 %bf.load120, 8, !dbg !3639
  %bf.clear122 = and i32 %bf.lshr121, 255, !dbg !3639
  %cmp123 = icmp eq i32 %bf.clear122, 0, !dbg !3639
  br i1 %cmp123, label %if.then124, label %if.else126, !dbg !3642

if.then124:                                       ; preds = %if.then118
  %80 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !3643
  %def_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %80, i32 0, i32 0, !dbg !3643
  %81 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3643
  %call125 = call %union.df_ref_d** @VEC_df_ref_stack_safe_push(%struct.VEC_df_ref_stack** %def_vec, %union.df_ref_d* %81), !dbg !3643
  br label %if.end137, !dbg !3643

if.else126:                                       ; preds = %if.then118
  %82 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3644
  %base127 = bitcast %union.df_ref_d* %82 to %struct.df_base_ref*, !dbg !3644
  %83 = bitcast %struct.df_base_ref* %base127 to i32*, !dbg !3644
  %bf.load128 = load i32, i32* %83, align 8, !dbg !3644
  %bf.ashr129 = ashr i32 %bf.load128, 16, !dbg !3644
  %and130 = and i32 %bf.ashr129, 4, !dbg !3646
  %tobool131 = icmp ne i32 %and130, 0, !dbg !3646
  br i1 %tobool131, label %if.then132, label %if.else134, !dbg !3647

if.then132:                                       ; preds = %if.else126
  %84 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !3648
  %eq_use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %84, i32 0, i32 2, !dbg !3648
  %85 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3648
  %call133 = call %union.df_ref_d** @VEC_df_ref_stack_safe_push(%struct.VEC_df_ref_stack** %eq_use_vec, %union.df_ref_d* %85), !dbg !3648
  br label %if.end136, !dbg !3648

if.else134:                                       ; preds = %if.else126
  %86 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !3649
  %use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %86, i32 0, i32 1, !dbg !3649
  %87 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3649
  %call135 = call %union.df_ref_d** @VEC_df_ref_stack_safe_push(%struct.VEC_df_ref_stack** %use_vec, %union.df_ref_d* %87), !dbg !3649
  br label %if.end136

if.end136:                                        ; preds = %if.else134, %if.then132
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.then124
  br label %if.end138, !dbg !3650

if.end138:                                        ; preds = %if.end137, %if.end116
  %88 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !3651
  ret %union.df_ref_d* %88, !dbg !3652
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_install_ref(%union.df_ref_d* %this_ref, %struct.df_reg_info* %reg_info, %struct.df_ref_info* %ref_info, i8 zeroext %add_to_table) #0 !dbg !3653 {
entry:
  %this_ref.addr = alloca %union.df_ref_d*, align 8
  %reg_info.addr = alloca %struct.df_reg_info*, align 8
  %ref_info.addr = alloca %struct.df_ref_info*, align 8
  %add_to_table.addr = alloca i8, align 1
  %regno = alloca i32, align 4
  %head = alloca %union.df_ref_d*, align 8
  store %union.df_ref_d* %this_ref, %union.df_ref_d** %this_ref.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %this_ref.addr, metadata !3656, metadata !DIExpression()), !dbg !3657
  store %struct.df_reg_info* %reg_info, %struct.df_reg_info** %reg_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_reg_info** %reg_info.addr, metadata !3658, metadata !DIExpression()), !dbg !3659
  store %struct.df_ref_info* %ref_info, %struct.df_ref_info** %ref_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_ref_info** %ref_info.addr, metadata !3660, metadata !DIExpression()), !dbg !3661
  store i8 %add_to_table, i8* %add_to_table.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %add_to_table.addr, metadata !3662, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !3664, metadata !DIExpression()), !dbg !3665
  %0 = load %union.df_ref_d*, %union.df_ref_d** %this_ref.addr, align 8, !dbg !3666
  %base = bitcast %union.df_ref_d* %0 to %struct.df_base_ref*, !dbg !3666
  %regno1 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 6, !dbg !3666
  %1 = load i32, i32* %regno1, align 8, !dbg !3666
  store i32 %1, i32* %regno, align 4, !dbg !3665
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %head, metadata !3667, metadata !DIExpression()), !dbg !3668
  %2 = load %struct.df_reg_info*, %struct.df_reg_info** %reg_info.addr, align 8, !dbg !3669
  %reg_chain = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %2, i32 0, i32 0, !dbg !3670
  %3 = load %union.df_ref_d*, %union.df_ref_d** %reg_chain, align 8, !dbg !3670
  store %union.df_ref_d* %3, %union.df_ref_d** %head, align 8, !dbg !3668
  %4 = load %union.df_ref_d*, %union.df_ref_d** %this_ref.addr, align 8, !dbg !3671
  %5 = load %struct.df_reg_info*, %struct.df_reg_info** %reg_info.addr, align 8, !dbg !3672
  %reg_chain2 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %5, i32 0, i32 0, !dbg !3673
  store %union.df_ref_d* %4, %union.df_ref_d** %reg_chain2, align 8, !dbg !3674
  %6 = load %struct.df_reg_info*, %struct.df_reg_info** %reg_info.addr, align 8, !dbg !3675
  %n_refs = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %6, i32 0, i32 1, !dbg !3676
  %7 = load i32, i32* %n_refs, align 8, !dbg !3677
  %inc = add i32 %7, 1, !dbg !3677
  store i32 %inc, i32* %n_refs, align 8, !dbg !3677
  %8 = load %union.df_ref_d*, %union.df_ref_d** %this_ref.addr, align 8, !dbg !3678
  %base3 = bitcast %union.df_ref_d* %8 to %struct.df_base_ref*, !dbg !3678
  %9 = bitcast %struct.df_base_ref* %base3 to i32*, !dbg !3678
  %bf.load = load i32, i32* %9, align 8, !dbg !3678
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !3678
  %and = and i32 %bf.ashr, 8, !dbg !3678
  %cmp = icmp ne i32 %and, 0, !dbg !3678
  br i1 %cmp, label %if.then, label %if.end, !dbg !3680

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %regno, align 4, !dbg !3681
  %cmp4 = icmp ult i32 %10, 53, !dbg !3681
  br i1 %cmp4, label %cond.false, label %cond.true, !dbg !3681

cond.true:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 2627, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !3681
  br label %cond.end, !dbg !3681

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !3681

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3681
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !3683
  %hard_regs_live_count = getelementptr inbounds %struct.df, %struct.df* %11, i32 0, i32 25, !dbg !3684
  %12 = load i32*, i32** %hard_regs_live_count, align 8, !dbg !3684
  %13 = load i32, i32* %regno, align 4, !dbg !3685
  %idxprom = zext i32 %13 to i64, !dbg !3683
  %arrayidx = getelementptr inbounds i32, i32* %12, i64 %idxprom, !dbg !3683
  %14 = load i32, i32* %arrayidx, align 4, !dbg !3686
  %inc5 = add i32 %14, 1, !dbg !3686
  store i32 %inc5, i32* %arrayidx, align 4, !dbg !3686
  br label %if.end, !dbg !3687

if.end:                                           ; preds = %cond.end, %entry
  %15 = load %union.df_ref_d*, %union.df_ref_d** %this_ref.addr, align 8, !dbg !3688
  %base6 = bitcast %union.df_ref_d* %15 to %struct.df_base_ref*, !dbg !3688
  %next_reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base6, i32 0, i32 4, !dbg !3688
  %16 = load %union.df_ref_d*, %union.df_ref_d** %next_reg, align 8, !dbg !3688
  %cmp7 = icmp eq %union.df_ref_d* %16, null, !dbg !3688
  br i1 %cmp7, label %land.lhs.true, label %cond.true10, !dbg !3688

land.lhs.true:                                    ; preds = %if.end
  %17 = load %union.df_ref_d*, %union.df_ref_d** %this_ref.addr, align 8, !dbg !3688
  %base8 = bitcast %union.df_ref_d* %17 to %struct.df_base_ref*, !dbg !3688
  %prev_reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base8, i32 0, i32 5, !dbg !3688
  %18 = load %union.df_ref_d*, %union.df_ref_d** %prev_reg, align 8, !dbg !3688
  %cmp9 = icmp eq %union.df_ref_d* %18, null, !dbg !3688
  br i1 %cmp9, label %cond.false11, label %cond.true10, !dbg !3688

cond.true10:                                      ; preds = %land.lhs.true, %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 2632, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !3688
  br label %cond.end12, !dbg !3688

cond.false11:                                     ; preds = %land.lhs.true
  br label %cond.end12, !dbg !3688

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond13 = phi i32 [ 0, %cond.true10 ], [ 0, %cond.false11 ], !dbg !3688
  %19 = load %union.df_ref_d*, %union.df_ref_d** %head, align 8, !dbg !3689
  %20 = load %union.df_ref_d*, %union.df_ref_d** %this_ref.addr, align 8, !dbg !3690
  %base14 = bitcast %union.df_ref_d* %20 to %struct.df_base_ref*, !dbg !3690
  %next_reg15 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base14, i32 0, i32 4, !dbg !3690
  store %union.df_ref_d* %19, %union.df_ref_d** %next_reg15, align 8, !dbg !3691
  %21 = load %union.df_ref_d*, %union.df_ref_d** %this_ref.addr, align 8, !dbg !3692
  %base16 = bitcast %union.df_ref_d* %21 to %struct.df_base_ref*, !dbg !3692
  %prev_reg17 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base16, i32 0, i32 5, !dbg !3692
  store %union.df_ref_d* null, %union.df_ref_d** %prev_reg17, align 8, !dbg !3693
  %22 = load %union.df_ref_d*, %union.df_ref_d** %head, align 8, !dbg !3694
  %tobool = icmp ne %union.df_ref_d* %22, null, !dbg !3694
  br i1 %tobool, label %if.then18, label %if.end21, !dbg !3696

if.then18:                                        ; preds = %cond.end12
  %23 = load %union.df_ref_d*, %union.df_ref_d** %this_ref.addr, align 8, !dbg !3697
  %24 = load %union.df_ref_d*, %union.df_ref_d** %head, align 8, !dbg !3698
  %base19 = bitcast %union.df_ref_d* %24 to %struct.df_base_ref*, !dbg !3698
  %prev_reg20 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base19, i32 0, i32 5, !dbg !3698
  store %union.df_ref_d* %23, %union.df_ref_d** %prev_reg20, align 8, !dbg !3699
  br label %if.end21, !dbg !3698

if.end21:                                         ; preds = %if.then18, %cond.end12
  %25 = load i8, i8* %add_to_table.addr, align 1, !dbg !3700
  %tobool22 = icmp ne i8 %25, 0, !dbg !3700
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !3702

if.then23:                                        ; preds = %if.end21
  %26 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !3703
  %ref_order = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %26, i32 0, i32 6, !dbg !3703
  %27 = load i32, i32* %ref_order, align 4, !dbg !3703
  %cmp24 = icmp ne i32 %27, 0, !dbg !3703
  br i1 %cmp24, label %cond.false26, label %cond.true25, !dbg !3703

cond.true25:                                      ; preds = %if.then23
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 2644, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !3703
  br label %cond.end27, !dbg !3703

cond.false26:                                     ; preds = %if.then23
  br label %cond.end27, !dbg !3703

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond28 = phi i32 [ 0, %cond.true25 ], [ 0, %cond.false26 ], !dbg !3703
  %28 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !3705
  call void @df_check_and_grow_ref_info(%struct.df_ref_info* %28, i32 1), !dbg !3706
  %29 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !3707
  %table_size = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %29, i32 0, i32 4, !dbg !3708
  %30 = load i32, i32* %table_size, align 4, !dbg !3708
  %31 = load %union.df_ref_d*, %union.df_ref_d** %this_ref.addr, align 8, !dbg !3709
  %base29 = bitcast %union.df_ref_d* %31 to %struct.df_base_ref*, !dbg !3709
  %id = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base29, i32 0, i32 7, !dbg !3709
  store i32 %30, i32* %id, align 4, !dbg !3710
  %32 = load %union.df_ref_d*, %union.df_ref_d** %this_ref.addr, align 8, !dbg !3711
  %33 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !3712
  %refs = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %33, i32 0, i32 0, !dbg !3713
  %34 = load %union.df_ref_d**, %union.df_ref_d*** %refs, align 8, !dbg !3713
  %35 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !3714
  %table_size30 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %35, i32 0, i32 4, !dbg !3715
  %36 = load i32, i32* %table_size30, align 4, !dbg !3715
  %idxprom31 = zext i32 %36 to i64, !dbg !3712
  %arrayidx32 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %34, i64 %idxprom31, !dbg !3712
  store %union.df_ref_d* %32, %union.df_ref_d** %arrayidx32, align 8, !dbg !3716
  %37 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !3717
  %table_size33 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %37, i32 0, i32 4, !dbg !3718
  %38 = load i32, i32* %table_size33, align 4, !dbg !3719
  %inc34 = add i32 %38, 1, !dbg !3719
  store i32 %inc34, i32* %table_size33, align 4, !dbg !3719
  br label %if.end37, !dbg !3720

if.else:                                          ; preds = %if.end21
  %39 = load %union.df_ref_d*, %union.df_ref_d** %this_ref.addr, align 8, !dbg !3721
  %base35 = bitcast %union.df_ref_d* %39 to %struct.df_base_ref*, !dbg !3721
  %id36 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base35, i32 0, i32 7, !dbg !3721
  store i32 -1, i32* %id36, align 4, !dbg !3722
  br label %if.end37

if.end37:                                         ; preds = %if.else, %cond.end27
  %40 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !3723
  %total_size = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %40, i32 0, i32 5, !dbg !3724
  %41 = load i32, i32* %total_size, align 8, !dbg !3725
  %inc38 = add i32 %41, 1, !dbg !3725
  store i32 %inc38, i32* %total_size, align 8, !dbg !3725
  ret void, !dbg !3726
}

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @df_ref_compare(i8* %r1, i8* %r2) #0 !dbg !3727 {
entry:
  %retval = alloca i32, align 4
  %r1.addr = alloca i8*, align 8
  %r2.addr = alloca i8*, align 8
  %ref1 = alloca %union.df_ref_d*, align 8
  %ref2 = alloca %union.df_ref_d*, align 8
  store i8* %r1, i8** %r1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r1.addr, metadata !3728, metadata !DIExpression()), !dbg !3729
  store i8* %r2, i8** %r2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r2.addr, metadata !3730, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref1, metadata !3732, metadata !DIExpression()), !dbg !3733
  %0 = load i8*, i8** %r1.addr, align 8, !dbg !3734
  %1 = bitcast i8* %0 to %union.df_ref_d**, !dbg !3735
  %2 = load %union.df_ref_d*, %union.df_ref_d** %1, align 8, !dbg !3736
  store %union.df_ref_d* %2, %union.df_ref_d** %ref1, align 8, !dbg !3733
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref2, metadata !3737, metadata !DIExpression()), !dbg !3738
  %3 = load i8*, i8** %r2.addr, align 8, !dbg !3739
  %4 = bitcast i8* %3 to %union.df_ref_d**, !dbg !3740
  %5 = load %union.df_ref_d*, %union.df_ref_d** %4, align 8, !dbg !3741
  store %union.df_ref_d* %5, %union.df_ref_d** %ref2, align 8, !dbg !3738
  %6 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3742
  %7 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3744
  %cmp = icmp eq %union.df_ref_d* %6, %7, !dbg !3745
  br i1 %cmp, label %if.then, label %if.end, !dbg !3746

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3747
  br label %return, !dbg !3747

if.end:                                           ; preds = %entry
  %8 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3748
  %base = bitcast %union.df_ref_d* %8 to %struct.df_base_ref*, !dbg !3748
  %9 = bitcast %struct.df_base_ref* %base to i32*, !dbg !3748
  %bf.load = load i32, i32* %9, align 8, !dbg !3748
  %bf.clear = and i32 %bf.load, 255, !dbg !3748
  %10 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3750
  %base1 = bitcast %union.df_ref_d* %10 to %struct.df_base_ref*, !dbg !3750
  %11 = bitcast %struct.df_base_ref* %base1 to i32*, !dbg !3750
  %bf.load2 = load i32, i32* %11, align 8, !dbg !3750
  %bf.clear3 = and i32 %bf.load2, 255, !dbg !3750
  %cmp4 = icmp ne i32 %bf.clear, %bf.clear3, !dbg !3751
  br i1 %cmp4, label %if.then5, label %if.end12, !dbg !3752

if.then5:                                         ; preds = %if.end
  %12 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3753
  %base6 = bitcast %union.df_ref_d* %12 to %struct.df_base_ref*, !dbg !3753
  %13 = bitcast %struct.df_base_ref* %base6 to i32*, !dbg !3753
  %bf.load7 = load i32, i32* %13, align 8, !dbg !3753
  %bf.clear8 = and i32 %bf.load7, 255, !dbg !3753
  %14 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3754
  %base9 = bitcast %union.df_ref_d* %14 to %struct.df_base_ref*, !dbg !3754
  %15 = bitcast %struct.df_base_ref* %base9 to i32*, !dbg !3754
  %bf.load10 = load i32, i32* %15, align 8, !dbg !3754
  %bf.clear11 = and i32 %bf.load10, 255, !dbg !3754
  %sub = sub nsw i32 %bf.clear8, %bf.clear11, !dbg !3755
  store i32 %sub, i32* %retval, align 4, !dbg !3756
  br label %return, !dbg !3756

if.end12:                                         ; preds = %if.end
  %16 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3757
  %base13 = bitcast %union.df_ref_d* %16 to %struct.df_base_ref*, !dbg !3757
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base13, i32 0, i32 6, !dbg !3757
  %17 = load i32, i32* %regno, align 8, !dbg !3757
  %18 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3759
  %base14 = bitcast %union.df_ref_d* %18 to %struct.df_base_ref*, !dbg !3759
  %regno15 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base14, i32 0, i32 6, !dbg !3759
  %19 = load i32, i32* %regno15, align 8, !dbg !3759
  %cmp16 = icmp ne i32 %17, %19, !dbg !3760
  br i1 %cmp16, label %if.then17, label %if.end23, !dbg !3761

if.then17:                                        ; preds = %if.end12
  %20 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3762
  %base18 = bitcast %union.df_ref_d* %20 to %struct.df_base_ref*, !dbg !3762
  %regno19 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base18, i32 0, i32 6, !dbg !3762
  %21 = load i32, i32* %regno19, align 8, !dbg !3762
  %22 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3763
  %base20 = bitcast %union.df_ref_d* %22 to %struct.df_base_ref*, !dbg !3763
  %regno21 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base20, i32 0, i32 6, !dbg !3763
  %23 = load i32, i32* %regno21, align 8, !dbg !3763
  %sub22 = sub nsw i32 %21, %23, !dbg !3764
  store i32 %sub22, i32* %retval, align 4, !dbg !3765
  br label %return, !dbg !3765

if.end23:                                         ; preds = %if.end12
  %24 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3766
  %base24 = bitcast %union.df_ref_d* %24 to %struct.df_base_ref*, !dbg !3766
  %25 = bitcast %struct.df_base_ref* %base24 to i32*, !dbg !3766
  %bf.load25 = load i32, i32* %25, align 8, !dbg !3766
  %bf.lshr = lshr i32 %bf.load25, 8, !dbg !3766
  %bf.clear26 = and i32 %bf.lshr, 255, !dbg !3766
  %26 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3768
  %base27 = bitcast %union.df_ref_d* %26 to %struct.df_base_ref*, !dbg !3768
  %27 = bitcast %struct.df_base_ref* %base27 to i32*, !dbg !3768
  %bf.load28 = load i32, i32* %27, align 8, !dbg !3768
  %bf.lshr29 = lshr i32 %bf.load28, 8, !dbg !3768
  %bf.clear30 = and i32 %bf.lshr29, 255, !dbg !3768
  %cmp31 = icmp ne i32 %bf.clear26, %bf.clear30, !dbg !3769
  br i1 %cmp31, label %if.then32, label %if.end42, !dbg !3770

if.then32:                                        ; preds = %if.end23
  %28 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3771
  %base33 = bitcast %union.df_ref_d* %28 to %struct.df_base_ref*, !dbg !3771
  %29 = bitcast %struct.df_base_ref* %base33 to i32*, !dbg !3771
  %bf.load34 = load i32, i32* %29, align 8, !dbg !3771
  %bf.lshr35 = lshr i32 %bf.load34, 8, !dbg !3771
  %bf.clear36 = and i32 %bf.lshr35, 255, !dbg !3771
  %30 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3772
  %base37 = bitcast %union.df_ref_d* %30 to %struct.df_base_ref*, !dbg !3772
  %31 = bitcast %struct.df_base_ref* %base37 to i32*, !dbg !3772
  %bf.load38 = load i32, i32* %31, align 8, !dbg !3772
  %bf.lshr39 = lshr i32 %bf.load38, 8, !dbg !3772
  %bf.clear40 = and i32 %bf.lshr39, 255, !dbg !3772
  %sub41 = sub nsw i32 %bf.clear36, %bf.clear40, !dbg !3773
  store i32 %sub41, i32* %retval, align 4, !dbg !3774
  br label %return, !dbg !3774

if.end42:                                         ; preds = %if.end23
  %32 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3775
  %base43 = bitcast %union.df_ref_d* %32 to %struct.df_base_ref*, !dbg !3775
  %reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base43, i32 0, i32 1, !dbg !3775
  %33 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !3775
  %34 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3777
  %base44 = bitcast %union.df_ref_d* %34 to %struct.df_base_ref*, !dbg !3777
  %reg45 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base44, i32 0, i32 1, !dbg !3777
  %35 = load %struct.rtx_def*, %struct.rtx_def** %reg45, align 8, !dbg !3777
  %cmp46 = icmp ne %struct.rtx_def* %33, %35, !dbg !3778
  br i1 %cmp46, label %if.then47, label %if.end52, !dbg !3779

if.then47:                                        ; preds = %if.end42
  %36 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3780
  %base48 = bitcast %union.df_ref_d* %36 to %struct.df_base_ref*, !dbg !3780
  %ref_order = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base48, i32 0, i32 8, !dbg !3780
  %37 = load i32, i32* %ref_order, align 8, !dbg !3780
  %38 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3781
  %base49 = bitcast %union.df_ref_d* %38 to %struct.df_base_ref*, !dbg !3781
  %ref_order50 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base49, i32 0, i32 8, !dbg !3781
  %39 = load i32, i32* %ref_order50, align 8, !dbg !3781
  %sub51 = sub nsw i32 %37, %39, !dbg !3782
  store i32 %sub51, i32* %retval, align 4, !dbg !3783
  br label %return, !dbg !3783

if.end52:                                         ; preds = %if.end42
  %40 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3784
  %base53 = bitcast %union.df_ref_d* %40 to %struct.df_base_ref*, !dbg !3784
  %41 = bitcast %struct.df_base_ref* %base53 to i32*, !dbg !3784
  %bf.load54 = load i32, i32* %41, align 8, !dbg !3784
  %bf.clear55 = and i32 %bf.load54, 255, !dbg !3784
  %cmp56 = icmp ne i32 %bf.clear55, 1, !dbg !3786
  br i1 %cmp56, label %land.lhs.true, label %if.end87, !dbg !3787

land.lhs.true:                                    ; preds = %if.end52
  %42 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3788
  %base57 = bitcast %union.df_ref_d* %42 to %struct.df_base_ref*, !dbg !3788
  %43 = bitcast %struct.df_base_ref* %base57 to i32*, !dbg !3788
  %bf.load58 = load i32, i32* %43, align 8, !dbg !3788
  %bf.clear59 = and i32 %bf.load58, 255, !dbg !3788
  %cmp60 = icmp eq i32 %bf.clear59, 2, !dbg !3788
  br i1 %cmp60, label %cond.true, label %lor.lhs.false, !dbg !3788

lor.lhs.false:                                    ; preds = %land.lhs.true
  %44 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3788
  %base61 = bitcast %union.df_ref_d* %44 to %struct.df_base_ref*, !dbg !3788
  %45 = bitcast %struct.df_base_ref* %base61 to i32*, !dbg !3788
  %bf.load62 = load i32, i32* %45, align 8, !dbg !3788
  %bf.clear63 = and i32 %bf.load62, 255, !dbg !3788
  %cmp64 = icmp eq i32 %bf.clear63, 3, !dbg !3788
  br i1 %cmp64, label %cond.true, label %cond.false, !dbg !3788

cond.true:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %46 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3788
  %regular_ref = bitcast %union.df_ref_d* %46 to %struct.df_regular_ref*, !dbg !3788
  %loc = getelementptr inbounds %struct.df_regular_ref, %struct.df_regular_ref* %regular_ref, i32 0, i32 1, !dbg !3788
  %47 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !3788
  br label %cond.end, !dbg !3788

cond.false:                                       ; preds = %lor.lhs.false
  br label %cond.end, !dbg !3788

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def** [ %47, %cond.true ], [ null, %cond.false ], !dbg !3788
  %48 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3789
  %base65 = bitcast %union.df_ref_d* %48 to %struct.df_base_ref*, !dbg !3789
  %49 = bitcast %struct.df_base_ref* %base65 to i32*, !dbg !3789
  %bf.load66 = load i32, i32* %49, align 8, !dbg !3789
  %bf.clear67 = and i32 %bf.load66, 255, !dbg !3789
  %cmp68 = icmp eq i32 %bf.clear67, 2, !dbg !3789
  br i1 %cmp68, label %cond.true74, label %lor.lhs.false69, !dbg !3789

lor.lhs.false69:                                  ; preds = %cond.end
  %50 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3789
  %base70 = bitcast %union.df_ref_d* %50 to %struct.df_base_ref*, !dbg !3789
  %51 = bitcast %struct.df_base_ref* %base70 to i32*, !dbg !3789
  %bf.load71 = load i32, i32* %51, align 8, !dbg !3789
  %bf.clear72 = and i32 %bf.load71, 255, !dbg !3789
  %cmp73 = icmp eq i32 %bf.clear72, 3, !dbg !3789
  br i1 %cmp73, label %cond.true74, label %cond.false77, !dbg !3789

cond.true74:                                      ; preds = %lor.lhs.false69, %cond.end
  %52 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3789
  %regular_ref75 = bitcast %union.df_ref_d* %52 to %struct.df_regular_ref*, !dbg !3789
  %loc76 = getelementptr inbounds %struct.df_regular_ref, %struct.df_regular_ref* %regular_ref75, i32 0, i32 1, !dbg !3789
  %53 = load %struct.rtx_def**, %struct.rtx_def*** %loc76, align 8, !dbg !3789
  br label %cond.end78, !dbg !3789

cond.false77:                                     ; preds = %lor.lhs.false69
  br label %cond.end78, !dbg !3789

cond.end78:                                       ; preds = %cond.false77, %cond.true74
  %cond79 = phi %struct.rtx_def** [ %53, %cond.true74 ], [ null, %cond.false77 ], !dbg !3789
  %cmp80 = icmp ne %struct.rtx_def** %cond, %cond79, !dbg !3790
  br i1 %cmp80, label %if.then81, label %if.end87, !dbg !3791

if.then81:                                        ; preds = %cond.end78
  %54 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3792
  %base82 = bitcast %union.df_ref_d* %54 to %struct.df_base_ref*, !dbg !3792
  %ref_order83 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base82, i32 0, i32 8, !dbg !3792
  %55 = load i32, i32* %ref_order83, align 8, !dbg !3792
  %56 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3793
  %base84 = bitcast %union.df_ref_d* %56 to %struct.df_base_ref*, !dbg !3793
  %ref_order85 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base84, i32 0, i32 8, !dbg !3793
  %57 = load i32, i32* %ref_order85, align 8, !dbg !3793
  %sub86 = sub nsw i32 %55, %57, !dbg !3794
  store i32 %sub86, i32* %retval, align 4, !dbg !3795
  br label %return, !dbg !3795

if.end87:                                         ; preds = %cond.end78, %if.end52
  %58 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3796
  %base88 = bitcast %union.df_ref_d* %58 to %struct.df_base_ref*, !dbg !3796
  %59 = bitcast %struct.df_base_ref* %base88 to i32*, !dbg !3796
  %bf.load89 = load i32, i32* %59, align 8, !dbg !3796
  %bf.ashr = ashr i32 %bf.load89, 16, !dbg !3796
  %60 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3798
  %base90 = bitcast %union.df_ref_d* %60 to %struct.df_base_ref*, !dbg !3798
  %61 = bitcast %struct.df_base_ref* %base90 to i32*, !dbg !3798
  %bf.load91 = load i32, i32* %61, align 8, !dbg !3798
  %bf.ashr92 = ashr i32 %bf.load91, 16, !dbg !3798
  %cmp93 = icmp ne i32 %bf.ashr, %bf.ashr92, !dbg !3799
  br i1 %cmp93, label %if.then94, label %if.end123, !dbg !3800

if.then94:                                        ; preds = %if.end87
  %62 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3801
  %base95 = bitcast %union.df_ref_d* %62 to %struct.df_base_ref*, !dbg !3801
  %63 = bitcast %struct.df_base_ref* %base95 to i32*, !dbg !3801
  %bf.load96 = load i32, i32* %63, align 8, !dbg !3801
  %bf.ashr97 = ashr i32 %bf.load96, 16, !dbg !3801
  %and = and i32 %bf.ashr97, 4096, !dbg !3801
  %cmp98 = icmp ne i32 %and, 0, !dbg !3801
  %conv = zext i1 %cmp98 to i32, !dbg !3801
  %64 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3804
  %base99 = bitcast %union.df_ref_d* %64 to %struct.df_base_ref*, !dbg !3804
  %65 = bitcast %struct.df_base_ref* %base99 to i32*, !dbg !3804
  %bf.load100 = load i32, i32* %65, align 8, !dbg !3804
  %bf.ashr101 = ashr i32 %bf.load100, 16, !dbg !3804
  %and102 = and i32 %bf.ashr101, 4096, !dbg !3804
  %cmp103 = icmp ne i32 %and102, 0, !dbg !3804
  %conv104 = zext i1 %cmp103 to i32, !dbg !3804
  %cmp105 = icmp eq i32 %conv, %conv104, !dbg !3805
  br i1 %cmp105, label %if.then107, label %if.else, !dbg !3806

if.then107:                                       ; preds = %if.then94
  %66 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3807
  %base108 = bitcast %union.df_ref_d* %66 to %struct.df_base_ref*, !dbg !3807
  %67 = bitcast %struct.df_base_ref* %base108 to i32*, !dbg !3807
  %bf.load109 = load i32, i32* %67, align 8, !dbg !3807
  %bf.ashr110 = ashr i32 %bf.load109, 16, !dbg !3807
  %68 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3808
  %base111 = bitcast %union.df_ref_d* %68 to %struct.df_base_ref*, !dbg !3808
  %69 = bitcast %struct.df_base_ref* %base111 to i32*, !dbg !3808
  %bf.load112 = load i32, i32* %69, align 8, !dbg !3808
  %bf.ashr113 = ashr i32 %bf.load112, 16, !dbg !3808
  %sub114 = sub nsw i32 %bf.ashr110, %bf.ashr113, !dbg !3809
  store i32 %sub114, i32* %retval, align 4, !dbg !3810
  br label %return, !dbg !3810

if.else:                                          ; preds = %if.then94
  %70 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3811
  %base115 = bitcast %union.df_ref_d* %70 to %struct.df_base_ref*, !dbg !3811
  %71 = bitcast %struct.df_base_ref* %base115 to i32*, !dbg !3811
  %bf.load116 = load i32, i32* %71, align 8, !dbg !3811
  %bf.ashr117 = ashr i32 %bf.load116, 16, !dbg !3811
  %and118 = and i32 %bf.ashr117, 4096, !dbg !3811
  %cmp119 = icmp ne i32 %and118, 0, !dbg !3811
  br i1 %cmp119, label %if.then121, label %if.else122, !dbg !3813

if.then121:                                       ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !3814
  br label %return, !dbg !3814

if.else122:                                       ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !3815
  br label %return, !dbg !3815

if.end123:                                        ; preds = %if.end87
  %72 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3816
  %base124 = bitcast %union.df_ref_d* %72 to %struct.df_base_ref*, !dbg !3816
  %73 = bitcast %struct.df_base_ref* %base124 to i32*, !dbg !3816
  %bf.load125 = load i32, i32* %73, align 8, !dbg !3816
  %bf.clear126 = and i32 %bf.load125, 255, !dbg !3816
  %cmp127 = icmp eq i32 %bf.clear126, 3, !dbg !3818
  br i1 %cmp127, label %if.then129, label %if.end165, !dbg !3819

if.then129:                                       ; preds = %if.end123
  %74 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3820
  %extract_ref = bitcast %union.df_ref_d* %74 to %struct.df_extract_ref*, !dbg !3820
  %offset = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref, i32 0, i32 2, !dbg !3820
  %75 = load i32, i32* %offset, align 4, !dbg !3820
  %76 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3823
  %extract_ref130 = bitcast %union.df_ref_d* %76 to %struct.df_extract_ref*, !dbg !3823
  %offset131 = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref130, i32 0, i32 2, !dbg !3823
  %77 = load i32, i32* %offset131, align 4, !dbg !3823
  %cmp132 = icmp ne i32 %75, %77, !dbg !3824
  br i1 %cmp132, label %if.then134, label %if.end140, !dbg !3825

if.then134:                                       ; preds = %if.then129
  %78 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3826
  %extract_ref135 = bitcast %union.df_ref_d* %78 to %struct.df_extract_ref*, !dbg !3826
  %offset136 = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref135, i32 0, i32 2, !dbg !3826
  %79 = load i32, i32* %offset136, align 4, !dbg !3826
  %80 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3827
  %extract_ref137 = bitcast %union.df_ref_d* %80 to %struct.df_extract_ref*, !dbg !3827
  %offset138 = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref137, i32 0, i32 2, !dbg !3827
  %81 = load i32, i32* %offset138, align 4, !dbg !3827
  %sub139 = sub nsw i32 %79, %81, !dbg !3828
  store i32 %sub139, i32* %retval, align 4, !dbg !3829
  br label %return, !dbg !3829

if.end140:                                        ; preds = %if.then129
  %82 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3830
  %extract_ref141 = bitcast %union.df_ref_d* %82 to %struct.df_extract_ref*, !dbg !3830
  %width = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref141, i32 0, i32 1, !dbg !3830
  %83 = load i32, i32* %width, align 8, !dbg !3830
  %84 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3832
  %extract_ref142 = bitcast %union.df_ref_d* %84 to %struct.df_extract_ref*, !dbg !3832
  %width143 = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref142, i32 0, i32 1, !dbg !3832
  %85 = load i32, i32* %width143, align 8, !dbg !3832
  %cmp144 = icmp ne i32 %83, %85, !dbg !3833
  br i1 %cmp144, label %if.then146, label %if.end152, !dbg !3834

if.then146:                                       ; preds = %if.end140
  %86 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3835
  %extract_ref147 = bitcast %union.df_ref_d* %86 to %struct.df_extract_ref*, !dbg !3835
  %width148 = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref147, i32 0, i32 1, !dbg !3835
  %87 = load i32, i32* %width148, align 8, !dbg !3835
  %88 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3836
  %extract_ref149 = bitcast %union.df_ref_d* %88 to %struct.df_extract_ref*, !dbg !3836
  %width150 = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref149, i32 0, i32 1, !dbg !3836
  %89 = load i32, i32* %width150, align 8, !dbg !3836
  %sub151 = sub nsw i32 %87, %89, !dbg !3837
  store i32 %sub151, i32* %retval, align 4, !dbg !3838
  br label %return, !dbg !3838

if.end152:                                        ; preds = %if.end140
  %90 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3839
  %extract_ref153 = bitcast %union.df_ref_d* %90 to %struct.df_extract_ref*, !dbg !3839
  %mode = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref153, i32 0, i32 3, !dbg !3839
  %91 = load i32, i32* %mode, align 8, !dbg !3839
  %92 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3841
  %extract_ref154 = bitcast %union.df_ref_d* %92 to %struct.df_extract_ref*, !dbg !3841
  %mode155 = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref154, i32 0, i32 3, !dbg !3841
  %93 = load i32, i32* %mode155, align 8, !dbg !3841
  %cmp156 = icmp ne i32 %91, %93, !dbg !3842
  br i1 %cmp156, label %if.then158, label %if.end164, !dbg !3843

if.then158:                                       ; preds = %if.end152
  %94 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !3844
  %extract_ref159 = bitcast %union.df_ref_d* %94 to %struct.df_extract_ref*, !dbg !3844
  %mode160 = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref159, i32 0, i32 3, !dbg !3844
  %95 = load i32, i32* %mode160, align 8, !dbg !3844
  %96 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3845
  %extract_ref161 = bitcast %union.df_ref_d* %96 to %struct.df_extract_ref*, !dbg !3845
  %mode162 = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref161, i32 0, i32 3, !dbg !3845
  %97 = load i32, i32* %mode162, align 8, !dbg !3845
  %sub163 = sub i32 %95, %97, !dbg !3846
  store i32 %sub163, i32* %retval, align 4, !dbg !3847
  br label %return, !dbg !3847

if.end164:                                        ; preds = %if.end152
  br label %if.end165, !dbg !3848

if.end165:                                        ; preds = %if.end164, %if.end123
  store i32 0, i32* %retval, align 4, !dbg !3849
  br label %return, !dbg !3849

return:                                           ; preds = %if.end165, %if.then158, %if.then146, %if.then134, %if.else122, %if.then121, %if.then107, %if.then81, %if.then47, %if.then32, %if.then17, %if.then5, %if.then
  %98 = load i32, i32* %retval, align 4, !dbg !3850
  ret i32 %98, !dbg !3850
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_ref_remove(%union.df_ref_d* %ref) #0 !dbg !3851 {
entry:
  %ref.addr = alloca %union.df_ref_d*, align 8
  %bb_info = alloca %struct.df_scan_bb_info*, align 8
  %uid = alloca i32, align 4
  %insn_rec = alloca %struct.df_insn_info*, align 8
  %bb_info24 = alloca %struct.df_scan_bb_info*, align 8
  %uid45 = alloca i32, align 4
  %insn_rec53 = alloca %struct.df_insn_info*, align 8
  store %union.df_ref_d* %ref, %union.df_ref_d** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref.addr, metadata !3854, metadata !DIExpression()), !dbg !3855
  %0 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3856
  %base = bitcast %union.df_ref_d* %0 to %struct.df_base_ref*, !dbg !3856
  %1 = bitcast %struct.df_base_ref* %base to i32*, !dbg !3856
  %bf.load = load i32, i32* %1, align 8, !dbg !3856
  %bf.lshr = lshr i32 %bf.load, 8, !dbg !3856
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3856
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !3856
  br i1 %cmp, label %if.then, label %if.else18, !dbg !3858

if.then:                                          ; preds = %entry
  %2 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3859
  %base1 = bitcast %union.df_ref_d* %2 to %struct.df_base_ref*, !dbg !3859
  %3 = bitcast %struct.df_base_ref* %base1 to i32*, !dbg !3859
  %bf.load2 = load i32, i32* %3, align 8, !dbg !3859
  %bf.clear3 = and i32 %bf.load2, 255, !dbg !3859
  %cmp4 = icmp eq i32 %bf.clear3, 1, !dbg !3859
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !3862

if.then5:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.df_scan_bb_info** %bb_info, metadata !3863, metadata !DIExpression()), !dbg !3865
  %4 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3866
  %base6 = bitcast %union.df_ref_d* %4 to %struct.df_base_ref*, !dbg !3866
  %5 = bitcast %struct.df_base_ref* %base6 to i32*, !dbg !3866
  %bf.load7 = load i32, i32* %5, align 8, !dbg !3866
  %bf.clear8 = and i32 %bf.load7, 255, !dbg !3866
  %cmp9 = icmp eq i32 %bf.clear8, 1, !dbg !3866
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !3866

cond.true:                                        ; preds = %if.then5
  %6 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3866
  %artificial_ref = bitcast %union.df_ref_d* %6 to %struct.df_artificial_ref*, !dbg !3866
  %bb = getelementptr inbounds %struct.df_artificial_ref, %struct.df_artificial_ref* %artificial_ref, i32 0, i32 1, !dbg !3866
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3866
  br label %cond.end, !dbg !3866

cond.false:                                       ; preds = %if.then5
  %8 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3866
  %base10 = bitcast %union.df_ref_d* %8 to %struct.df_base_ref*, !dbg !3866
  %insn_info = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base10, i32 0, i32 3, !dbg !3866
  %9 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !3866
  %insn = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %9, i32 0, i32 0, !dbg !3866
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3866
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !3866
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3866
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !3866
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !3866
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3866
  br label %cond.end, !dbg !3866

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.basic_block_def* [ %7, %cond.true ], [ %11, %cond.false ], !dbg !3866
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %cond, i32 0, i32 9, !dbg !3866
  %12 = load i32, i32* %index, align 8, !dbg !3866
  %call = call %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %12), !dbg !3867
  store %struct.df_scan_bb_info* %call, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !3865
  %13 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !3868
  %artificial_defs = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %13, i32 0, i32 0, !dbg !3869
  %14 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3870
  call void @df_ref_compress_rec(%union.df_ref_d*** %artificial_defs, %union.df_ref_d* %14), !dbg !3871
  br label %if.end, !dbg !3872

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !3873, metadata !DIExpression()), !dbg !3875
  %15 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3876
  %base11 = bitcast %union.df_ref_d* %15 to %struct.df_base_ref*, !dbg !3876
  %insn_info12 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base11, i32 0, i32 3, !dbg !3876
  %16 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info12, align 8, !dbg !3876
  %insn13 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %16, i32 0, i32 0, !dbg !3876
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn13, align 8, !dbg !3876
  %u14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !3876
  %fld15 = bitcast %union.u* %u14 to [1 x %union.rtunion_def]*, !dbg !3876
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i64 0, i64 0, !dbg !3876
  %rt_int = bitcast %union.rtunion_def* %arrayidx16 to i32*, !dbg !3876
  %18 = load i32, i32* %rt_int, align 8, !dbg !3876
  store i32 %18, i32* %uid, align 4, !dbg !3875
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_rec, metadata !3877, metadata !DIExpression()), !dbg !3878
  %19 = load %struct.df*, %struct.df** @df, align 8, !dbg !3879
  %insns = getelementptr inbounds %struct.df, %struct.df* %19, i32 0, i32 10, !dbg !3879
  %20 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !3879
  %21 = load i32, i32* %uid, align 4, !dbg !3879
  %idxprom = zext i32 %21 to i64, !dbg !3879
  %arrayidx17 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %20, i64 %idxprom, !dbg !3879
  %22 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx17, align 8, !dbg !3879
  store %struct.df_insn_info* %22, %struct.df_insn_info** %insn_rec, align 8, !dbg !3878
  %23 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !3880
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %23, i32 0, i32 1, !dbg !3881
  %24 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3882
  call void @df_ref_compress_rec(%union.df_ref_d*** %defs, %union.df_ref_d* %24), !dbg !3883
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  br label %if.end63, !dbg !3884

if.else18:                                        ; preds = %entry
  %25 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3885
  %base19 = bitcast %union.df_ref_d* %25 to %struct.df_base_ref*, !dbg !3885
  %26 = bitcast %struct.df_base_ref* %base19 to i32*, !dbg !3885
  %bf.load20 = load i32, i32* %26, align 8, !dbg !3885
  %bf.clear21 = and i32 %bf.load20, 255, !dbg !3885
  %cmp22 = icmp eq i32 %bf.clear21, 1, !dbg !3885
  br i1 %cmp22, label %if.then23, label %if.else44, !dbg !3888

if.then23:                                        ; preds = %if.else18
  call void @llvm.dbg.declare(metadata %struct.df_scan_bb_info** %bb_info24, metadata !3889, metadata !DIExpression()), !dbg !3891
  %27 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3892
  %base25 = bitcast %union.df_ref_d* %27 to %struct.df_base_ref*, !dbg !3892
  %28 = bitcast %struct.df_base_ref* %base25 to i32*, !dbg !3892
  %bf.load26 = load i32, i32* %28, align 8, !dbg !3892
  %bf.clear27 = and i32 %bf.load26, 255, !dbg !3892
  %cmp28 = icmp eq i32 %bf.clear27, 1, !dbg !3892
  br i1 %cmp28, label %cond.true29, label %cond.false32, !dbg !3892

cond.true29:                                      ; preds = %if.then23
  %29 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3892
  %artificial_ref30 = bitcast %union.df_ref_d* %29 to %struct.df_artificial_ref*, !dbg !3892
  %bb31 = getelementptr inbounds %struct.df_artificial_ref, %struct.df_artificial_ref* %artificial_ref30, i32 0, i32 1, !dbg !3892
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %bb31, align 8, !dbg !3892
  br label %cond.end40, !dbg !3892

cond.false32:                                     ; preds = %if.then23
  %31 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3892
  %base33 = bitcast %union.df_ref_d* %31 to %struct.df_base_ref*, !dbg !3892
  %insn_info34 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base33, i32 0, i32 3, !dbg !3892
  %32 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info34, align 8, !dbg !3892
  %insn35 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %32, i32 0, i32 0, !dbg !3892
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn35, align 8, !dbg !3892
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !3892
  %fld37 = bitcast %union.u* %u36 to [1 x %union.rtunion_def]*, !dbg !3892
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i64 0, i64 3, !dbg !3892
  %rt_bb39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.basic_block_def**, !dbg !3892
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb39, align 8, !dbg !3892
  br label %cond.end40, !dbg !3892

cond.end40:                                       ; preds = %cond.false32, %cond.true29
  %cond41 = phi %struct.basic_block_def* [ %30, %cond.true29 ], [ %34, %cond.false32 ], !dbg !3892
  %index42 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %cond41, i32 0, i32 9, !dbg !3892
  %35 = load i32, i32* %index42, align 8, !dbg !3892
  %call43 = call %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %35), !dbg !3893
  store %struct.df_scan_bb_info* %call43, %struct.df_scan_bb_info** %bb_info24, align 8, !dbg !3891
  %36 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info24, align 8, !dbg !3894
  %artificial_uses = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %36, i32 0, i32 1, !dbg !3895
  %37 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3896
  call void @df_ref_compress_rec(%union.df_ref_d*** %artificial_uses, %union.df_ref_d* %37), !dbg !3897
  br label %if.end62, !dbg !3898

if.else44:                                        ; preds = %if.else18
  call void @llvm.dbg.declare(metadata i32* %uid45, metadata !3899, metadata !DIExpression()), !dbg !3901
  %38 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3902
  %base46 = bitcast %union.df_ref_d* %38 to %struct.df_base_ref*, !dbg !3902
  %insn_info47 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base46, i32 0, i32 3, !dbg !3902
  %39 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info47, align 8, !dbg !3902
  %insn48 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %39, i32 0, i32 0, !dbg !3902
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn48, align 8, !dbg !3902
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !3902
  %fld50 = bitcast %union.u* %u49 to [1 x %union.rtunion_def]*, !dbg !3902
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i64 0, i64 0, !dbg !3902
  %rt_int52 = bitcast %union.rtunion_def* %arrayidx51 to i32*, !dbg !3902
  %41 = load i32, i32* %rt_int52, align 8, !dbg !3902
  store i32 %41, i32* %uid45, align 4, !dbg !3901
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_rec53, metadata !3903, metadata !DIExpression()), !dbg !3904
  %42 = load %struct.df*, %struct.df** @df, align 8, !dbg !3905
  %insns54 = getelementptr inbounds %struct.df, %struct.df* %42, i32 0, i32 10, !dbg !3905
  %43 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns54, align 8, !dbg !3905
  %44 = load i32, i32* %uid45, align 4, !dbg !3905
  %idxprom55 = zext i32 %44 to i64, !dbg !3905
  %arrayidx56 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %43, i64 %idxprom55, !dbg !3905
  %45 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx56, align 8, !dbg !3905
  store %struct.df_insn_info* %45, %struct.df_insn_info** %insn_rec53, align 8, !dbg !3904
  %46 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3906
  %base57 = bitcast %union.df_ref_d* %46 to %struct.df_base_ref*, !dbg !3906
  %47 = bitcast %struct.df_base_ref* %base57 to i32*, !dbg !3906
  %bf.load58 = load i32, i32* %47, align 8, !dbg !3906
  %bf.ashr = ashr i32 %bf.load58, 16, !dbg !3906
  %and = and i32 %bf.ashr, 4, !dbg !3908
  %tobool = icmp ne i32 %and, 0, !dbg !3908
  br i1 %tobool, label %if.then59, label %if.else60, !dbg !3909

if.then59:                                        ; preds = %if.else44
  %48 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec53, align 8, !dbg !3910
  %eq_uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %48, i32 0, i32 3, !dbg !3911
  %49 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3912
  call void @df_ref_compress_rec(%union.df_ref_d*** %eq_uses, %union.df_ref_d* %49), !dbg !3913
  br label %if.end61, !dbg !3913

if.else60:                                        ; preds = %if.else44
  %50 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec53, align 8, !dbg !3914
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %50, i32 0, i32 2, !dbg !3915
  %51 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3916
  call void @df_ref_compress_rec(%union.df_ref_d*** %uses, %union.df_ref_d* %51), !dbg !3917
  br label %if.end61

if.end61:                                         ; preds = %if.else60, %if.then59
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %cond.end40
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.end
  %52 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3918
  %base64 = bitcast %union.df_ref_d* %52 to %struct.df_base_ref*, !dbg !3918
  %insn_info65 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base64, i32 0, i32 3, !dbg !3918
  %53 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info65, align 8, !dbg !3918
  %insn66 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %53, i32 0, i32 0, !dbg !3918
  %54 = load %struct.rtx_def*, %struct.rtx_def** %insn66, align 8, !dbg !3918
  %55 = bitcast %struct.rtx_def* %54 to i32*, !dbg !3918
  %bf.load67 = load i32, i32* %55, align 8, !dbg !3918
  %bf.clear68 = and i32 %bf.load67, 65535, !dbg !3918
  %cmp69 = icmp eq i32 %bf.clear68, 7, !dbg !3918
  br i1 %cmp69, label %if.end88, label %if.then70, !dbg !3920

if.then70:                                        ; preds = %if.end63
  %56 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3921
  %base71 = bitcast %union.df_ref_d* %56 to %struct.df_base_ref*, !dbg !3921
  %57 = bitcast %struct.df_base_ref* %base71 to i32*, !dbg !3921
  %bf.load72 = load i32, i32* %57, align 8, !dbg !3921
  %bf.clear73 = and i32 %bf.load72, 255, !dbg !3921
  %cmp74 = icmp eq i32 %bf.clear73, 1, !dbg !3921
  br i1 %cmp74, label %cond.true75, label %cond.false78, !dbg !3921

cond.true75:                                      ; preds = %if.then70
  %58 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3921
  %artificial_ref76 = bitcast %union.df_ref_d* %58 to %struct.df_artificial_ref*, !dbg !3921
  %bb77 = getelementptr inbounds %struct.df_artificial_ref, %struct.df_artificial_ref* %artificial_ref76, i32 0, i32 1, !dbg !3921
  %59 = load %struct.basic_block_def*, %struct.basic_block_def** %bb77, align 8, !dbg !3921
  br label %cond.end86, !dbg !3921

cond.false78:                                     ; preds = %if.then70
  %60 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3921
  %base79 = bitcast %union.df_ref_d* %60 to %struct.df_base_ref*, !dbg !3921
  %insn_info80 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base79, i32 0, i32 3, !dbg !3921
  %61 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info80, align 8, !dbg !3921
  %insn81 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %61, i32 0, i32 0, !dbg !3921
  %62 = load %struct.rtx_def*, %struct.rtx_def** %insn81, align 8, !dbg !3921
  %u82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1, !dbg !3921
  %fld83 = bitcast %union.u* %u82 to [1 x %union.rtunion_def]*, !dbg !3921
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i64 0, i64 3, !dbg !3921
  %rt_bb85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.basic_block_def**, !dbg !3921
  %63 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb85, align 8, !dbg !3921
  br label %cond.end86, !dbg !3921

cond.end86:                                       ; preds = %cond.false78, %cond.true75
  %cond87 = phi %struct.basic_block_def* [ %59, %cond.true75 ], [ %63, %cond.false78 ], !dbg !3921
  call void @df_set_bb_dirty(%struct.basic_block_def* %cond87), !dbg !3922
  br label %if.end88, !dbg !3922

if.end88:                                         ; preds = %cond.end86, %if.end63
  %64 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3923
  call void @df_reg_chain_unlink(%union.df_ref_d* %64), !dbg !3924
  ret void, !dbg !3925
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_ref_compress_rec(%union.df_ref_d*** %vec_ptr, %union.df_ref_d* %ref) #0 !dbg !3926 {
entry:
  %vec_ptr.addr = alloca %union.df_ref_d***, align 8
  %ref.addr = alloca %union.df_ref_d*, align 8
  %vec = alloca %union.df_ref_d**, align 8
  store %union.df_ref_d*** %vec_ptr, %union.df_ref_d**** %vec_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d**** %vec_ptr.addr, metadata !3929, metadata !DIExpression()), !dbg !3930
  store %union.df_ref_d* %ref, %union.df_ref_d** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref.addr, metadata !3931, metadata !DIExpression()), !dbg !3932
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %vec, metadata !3933, metadata !DIExpression()), !dbg !3934
  %0 = load %union.df_ref_d***, %union.df_ref_d**** %vec_ptr.addr, align 8, !dbg !3935
  %1 = load %union.df_ref_d**, %union.df_ref_d*** %0, align 8, !dbg !3936
  store %union.df_ref_d** %1, %union.df_ref_d*** %vec, align 8, !dbg !3934
  %2 = load %union.df_ref_d**, %union.df_ref_d*** %vec, align 8, !dbg !3937
  %arrayidx = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %2, i64 1, !dbg !3937
  %3 = load %union.df_ref_d*, %union.df_ref_d** %arrayidx, align 8, !dbg !3937
  %tobool = icmp ne %union.df_ref_d* %3, null, !dbg !3937
  br i1 %tobool, label %if.then, label %if.else, !dbg !3939

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !3940

while.cond:                                       ; preds = %while.body, %if.then
  %4 = load %union.df_ref_d**, %union.df_ref_d*** %vec, align 8, !dbg !3942
  %5 = load %union.df_ref_d*, %union.df_ref_d** %4, align 8, !dbg !3943
  %tobool1 = icmp ne %union.df_ref_d* %5, null, !dbg !3943
  br i1 %tobool1, label %land.rhs, label %land.end, !dbg !3944

land.rhs:                                         ; preds = %while.cond
  %6 = load %union.df_ref_d**, %union.df_ref_d*** %vec, align 8, !dbg !3945
  %7 = load %union.df_ref_d*, %union.df_ref_d** %6, align 8, !dbg !3946
  %8 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3947
  %cmp = icmp ne %union.df_ref_d* %7, %8, !dbg !3948
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %9 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !3949
  br i1 %9, label %while.body, label %while.end, !dbg !3940

while.body:                                       ; preds = %land.end
  %10 = load %union.df_ref_d**, %union.df_ref_d*** %vec, align 8, !dbg !3950
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %10, i32 1, !dbg !3950
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %vec, align 8, !dbg !3950
  br label %while.cond, !dbg !3940, !llvm.loop !3951

while.end:                                        ; preds = %land.end
  br label %while.cond2, !dbg !3952

while.cond2:                                      ; preds = %while.body4, %while.end
  %11 = load %union.df_ref_d**, %union.df_ref_d*** %vec, align 8, !dbg !3953
  %12 = load %union.df_ref_d*, %union.df_ref_d** %11, align 8, !dbg !3954
  %tobool3 = icmp ne %union.df_ref_d* %12, null, !dbg !3952
  br i1 %tobool3, label %while.body4, label %while.end6, !dbg !3952

while.body4:                                      ; preds = %while.cond2
  %13 = load %union.df_ref_d**, %union.df_ref_d*** %vec, align 8, !dbg !3955
  %add.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %13, i64 1, !dbg !3957
  %14 = load %union.df_ref_d*, %union.df_ref_d** %add.ptr, align 8, !dbg !3958
  %15 = load %union.df_ref_d**, %union.df_ref_d*** %vec, align 8, !dbg !3959
  store %union.df_ref_d* %14, %union.df_ref_d** %15, align 8, !dbg !3960
  %16 = load %union.df_ref_d**, %union.df_ref_d*** %vec, align 8, !dbg !3961
  %incdec.ptr5 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %16, i32 1, !dbg !3961
  store %union.df_ref_d** %incdec.ptr5, %union.df_ref_d*** %vec, align 8, !dbg !3961
  br label %while.cond2, !dbg !3952, !llvm.loop !3962

while.end6:                                       ; preds = %while.cond2
  br label %if.end, !dbg !3964

if.else:                                          ; preds = %entry
  %17 = load %union.df_ref_d**, %union.df_ref_d*** %vec, align 8, !dbg !3965
  %18 = bitcast %union.df_ref_d** %17 to i8*, !dbg !3965
  call void @free(i8* %18), !dbg !3967
  %19 = load %union.df_ref_d***, %union.df_ref_d**** %vec_ptr.addr, align 8, !dbg !3968
  store %union.df_ref_d** getelementptr inbounds ([1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* @df_null_ref_rec, i64 0, i64 0), %union.df_ref_d*** %19, align 8, !dbg !3969
  br label %if.end

if.end:                                           ; preds = %if.else, %while.end6
  ret void, !dbg !3970
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_reg_chain_unlink(%union.df_ref_d* %ref) #0 !dbg !3971 {
entry:
  %ref.addr = alloca %union.df_ref_d*, align 8
  %next = alloca %union.df_ref_d*, align 8
  %prev = alloca %union.df_ref_d*, align 8
  %id = alloca i32, align 4
  %reg_info = alloca %struct.df_reg_info*, align 8
  %refs = alloca %union.df_ref_d**, align 8
  %regno = alloca i32, align 4
  store %union.df_ref_d* %ref, %union.df_ref_d** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref.addr, metadata !3972, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %next, metadata !3974, metadata !DIExpression()), !dbg !3975
  %0 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3976
  %base = bitcast %union.df_ref_d* %0 to %struct.df_base_ref*, !dbg !3976
  %next_reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 4, !dbg !3976
  %1 = load %union.df_ref_d*, %union.df_ref_d** %next_reg, align 8, !dbg !3976
  store %union.df_ref_d* %1, %union.df_ref_d** %next, align 8, !dbg !3975
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %prev, metadata !3977, metadata !DIExpression()), !dbg !3978
  %2 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3979
  %base1 = bitcast %union.df_ref_d* %2 to %struct.df_base_ref*, !dbg !3979
  %prev_reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base1, i32 0, i32 5, !dbg !3979
  %3 = load %union.df_ref_d*, %union.df_ref_d** %prev_reg, align 8, !dbg !3979
  store %union.df_ref_d* %3, %union.df_ref_d** %prev, align 8, !dbg !3978
  call void @llvm.dbg.declare(metadata i32* %id, metadata !3980, metadata !DIExpression()), !dbg !3981
  %4 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3982
  %base2 = bitcast %union.df_ref_d* %4 to %struct.df_base_ref*, !dbg !3982
  %id3 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base2, i32 0, i32 7, !dbg !3982
  %5 = load i32, i32* %id3, align 4, !dbg !3982
  store i32 %5, i32* %id, align 4, !dbg !3981
  call void @llvm.dbg.declare(metadata %struct.df_reg_info** %reg_info, metadata !3983, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %refs, metadata !3985, metadata !DIExpression()), !dbg !3986
  store %union.df_ref_d** null, %union.df_ref_d*** %refs, align 8, !dbg !3986
  %6 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3987
  %base4 = bitcast %union.df_ref_d* %6 to %struct.df_base_ref*, !dbg !3987
  %7 = bitcast %struct.df_base_ref* %base4 to i32*, !dbg !3987
  %bf.load = load i32, i32* %7, align 8, !dbg !3987
  %bf.lshr = lshr i32 %bf.load, 8, !dbg !3987
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3987
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !3987
  br i1 %cmp, label %if.then, label %if.else, !dbg !3989

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !3990, metadata !DIExpression()), !dbg !3992
  %8 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3993
  %base5 = bitcast %union.df_ref_d* %8 to %struct.df_base_ref*, !dbg !3993
  %regno6 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base5, i32 0, i32 6, !dbg !3993
  %9 = load i32, i32* %regno6, align 8, !dbg !3993
  store i32 %9, i32* %regno, align 4, !dbg !3992
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !3994
  %def_regs = getelementptr inbounds %struct.df, %struct.df* %10, i32 0, i32 5, !dbg !3994
  %11 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs, align 8, !dbg !3994
  %12 = load i32, i32* %regno, align 4, !dbg !3994
  %idxprom = sext i32 %12 to i64, !dbg !3994
  %arrayidx = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %11, i64 %idxprom, !dbg !3994
  %13 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx, align 8, !dbg !3994
  store %struct.df_reg_info* %13, %struct.df_reg_info** %reg_info, align 8, !dbg !3995
  %14 = load %struct.df*, %struct.df** @df, align 8, !dbg !3996
  %def_info = getelementptr inbounds %struct.df, %struct.df* %14, i32 0, i32 3, !dbg !3997
  %refs7 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info, i32 0, i32 0, !dbg !3998
  %15 = load %union.df_ref_d**, %union.df_ref_d*** %refs7, align 8, !dbg !3998
  store %union.df_ref_d** %15, %union.df_ref_d*** %refs, align 8, !dbg !3999
  br label %if.end24, !dbg !4000

if.else:                                          ; preds = %entry
  %16 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !4001
  %base8 = bitcast %union.df_ref_d* %16 to %struct.df_base_ref*, !dbg !4001
  %17 = bitcast %struct.df_base_ref* %base8 to i32*, !dbg !4001
  %bf.load9 = load i32, i32* %17, align 8, !dbg !4001
  %bf.ashr = ashr i32 %bf.load9, 16, !dbg !4001
  %and = and i32 %bf.ashr, 4, !dbg !4004
  %tobool = icmp ne i32 %and, 0, !dbg !4004
  br i1 %tobool, label %if.then10, label %if.else17, !dbg !4005

if.then10:                                        ; preds = %if.else
  %18 = load %struct.df*, %struct.df** @df, align 8, !dbg !4006
  %eq_use_regs = getelementptr inbounds %struct.df, %struct.df* %18, i32 0, i32 7, !dbg !4006
  %19 = load %struct.df_reg_info**, %struct.df_reg_info*** %eq_use_regs, align 8, !dbg !4006
  %20 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !4006
  %base11 = bitcast %union.df_ref_d* %20 to %struct.df_base_ref*, !dbg !4006
  %regno12 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base11, i32 0, i32 6, !dbg !4006
  %21 = load i32, i32* %regno12, align 8, !dbg !4006
  %idxprom13 = zext i32 %21 to i64, !dbg !4006
  %arrayidx14 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %19, i64 %idxprom13, !dbg !4006
  %22 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx14, align 8, !dbg !4006
  store %struct.df_reg_info* %22, %struct.df_reg_info** %reg_info, align 8, !dbg !4008
  %23 = load %struct.df*, %struct.df** @df, align 8, !dbg !4009
  %use_info = getelementptr inbounds %struct.df, %struct.df* %23, i32 0, i32 4, !dbg !4010
  %ref_order = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %use_info, i32 0, i32 6, !dbg !4011
  %24 = load i32, i32* %ref_order, align 4, !dbg !4011
  switch i32 %24, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
  ], !dbg !4012

sw.bb:                                            ; preds = %if.then10, %if.then10, %if.then10
  %25 = load %struct.df*, %struct.df** @df, align 8, !dbg !4013
  %use_info15 = getelementptr inbounds %struct.df, %struct.df* %25, i32 0, i32 4, !dbg !4015
  %refs16 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %use_info15, i32 0, i32 0, !dbg !4016
  %26 = load %union.df_ref_d**, %union.df_ref_d*** %refs16, align 8, !dbg !4016
  store %union.df_ref_d** %26, %union.df_ref_d*** %refs, align 8, !dbg !4017
  br label %sw.epilog, !dbg !4018

sw.default:                                       ; preds = %if.then10
  br label %sw.epilog, !dbg !4019

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %if.end, !dbg !4020

if.else17:                                        ; preds = %if.else
  %27 = load %struct.df*, %struct.df** @df, align 8, !dbg !4021
  %use_regs = getelementptr inbounds %struct.df, %struct.df* %27, i32 0, i32 6, !dbg !4021
  %28 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs, align 8, !dbg !4021
  %29 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !4021
  %base18 = bitcast %union.df_ref_d* %29 to %struct.df_base_ref*, !dbg !4021
  %regno19 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base18, i32 0, i32 6, !dbg !4021
  %30 = load i32, i32* %regno19, align 8, !dbg !4021
  %idxprom20 = zext i32 %30 to i64, !dbg !4021
  %arrayidx21 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %28, i64 %idxprom20, !dbg !4021
  %31 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx21, align 8, !dbg !4021
  store %struct.df_reg_info* %31, %struct.df_reg_info** %reg_info, align 8, !dbg !4023
  %32 = load %struct.df*, %struct.df** @df, align 8, !dbg !4024
  %use_info22 = getelementptr inbounds %struct.df, %struct.df* %32, i32 0, i32 4, !dbg !4025
  %refs23 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %use_info22, i32 0, i32 0, !dbg !4026
  %33 = load %union.df_ref_d**, %union.df_ref_d*** %refs23, align 8, !dbg !4026
  store %union.df_ref_d** %33, %union.df_ref_d*** %refs, align 8, !dbg !4027
  br label %if.end

if.end:                                           ; preds = %if.else17, %sw.epilog
  br label %if.end24

if.end24:                                         ; preds = %if.end, %if.then
  %34 = load %union.df_ref_d**, %union.df_ref_d*** %refs, align 8, !dbg !4028
  %tobool25 = icmp ne %union.df_ref_d** %34, null, !dbg !4028
  br i1 %tobool25, label %if.then26, label %if.end44, !dbg !4030

if.then26:                                        ; preds = %if.end24
  %35 = load %struct.df*, %struct.df** @df, align 8, !dbg !4031
  %analyze_subset = getelementptr inbounds %struct.df, %struct.df* %35, i32 0, i32 28, !dbg !4034
  %36 = load i8, i8* %analyze_subset, align 1, !dbg !4034
  %tobool27 = icmp ne i8 %36, 0, !dbg !4031
  br i1 %tobool27, label %if.then28, label %if.else40, !dbg !4035

if.then28:                                        ; preds = %if.then26
  %37 = load %struct.df*, %struct.df** @df, align 8, !dbg !4036
  %blocks_to_analyze = getelementptr inbounds %struct.df, %struct.df* %37, i32 0, i32 2, !dbg !4039
  %38 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %blocks_to_analyze, align 8, !dbg !4039
  %39 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !4040
  %base29 = bitcast %union.df_ref_d* %39 to %struct.df_base_ref*, !dbg !4040
  %40 = bitcast %struct.df_base_ref* %base29 to i32*, !dbg !4040
  %bf.load30 = load i32, i32* %40, align 8, !dbg !4040
  %bf.clear31 = and i32 %bf.load30, 255, !dbg !4040
  %cmp32 = icmp eq i32 %bf.clear31, 1, !dbg !4040
  br i1 %cmp32, label %cond.true, label %cond.false, !dbg !4040

cond.true:                                        ; preds = %if.then28
  %41 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !4040
  %artificial_ref = bitcast %union.df_ref_d* %41 to %struct.df_artificial_ref*, !dbg !4040
  %bb = getelementptr inbounds %struct.df_artificial_ref, %struct.df_artificial_ref* %artificial_ref, i32 0, i32 1, !dbg !4040
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4040
  br label %cond.end, !dbg !4040

cond.false:                                       ; preds = %if.then28
  %43 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !4040
  %base33 = bitcast %union.df_ref_d* %43 to %struct.df_base_ref*, !dbg !4040
  %insn_info = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base33, i32 0, i32 3, !dbg !4040
  %44 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4040
  %insn = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %44, i32 0, i32 0, !dbg !4040
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4040
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !4040
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4040
  %arrayidx34 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !4040
  %rt_bb = bitcast %union.rtunion_def* %arrayidx34 to %struct.basic_block_def**, !dbg !4040
  %46 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4040
  br label %cond.end, !dbg !4040

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.basic_block_def* [ %42, %cond.true ], [ %46, %cond.false ], !dbg !4040
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %cond, i32 0, i32 9, !dbg !4040
  %47 = load i32, i32* %index, align 8, !dbg !4040
  %call = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %38, i32 %47), !dbg !4041
  %tobool35 = icmp ne i32 %call, 0, !dbg !4041
  br i1 %tobool35, label %if.then36, label %if.end39, !dbg !4042

if.then36:                                        ; preds = %cond.end
  %48 = load %union.df_ref_d**, %union.df_ref_d*** %refs, align 8, !dbg !4043
  %49 = load i32, i32* %id, align 4, !dbg !4044
  %idxprom37 = sext i32 %49 to i64, !dbg !4043
  %arrayidx38 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %48, i64 %idxprom37, !dbg !4043
  store %union.df_ref_d* null, %union.df_ref_d** %arrayidx38, align 8, !dbg !4045
  br label %if.end39, !dbg !4043

if.end39:                                         ; preds = %if.then36, %cond.end
  br label %if.end43, !dbg !4046

if.else40:                                        ; preds = %if.then26
  %50 = load %union.df_ref_d**, %union.df_ref_d*** %refs, align 8, !dbg !4047
  %51 = load i32, i32* %id, align 4, !dbg !4048
  %idxprom41 = sext i32 %51 to i64, !dbg !4047
  %arrayidx42 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %50, i64 %idxprom41, !dbg !4047
  store %union.df_ref_d* null, %union.df_ref_d** %arrayidx42, align 8, !dbg !4049
  br label %if.end43

if.end43:                                         ; preds = %if.else40, %if.end39
  br label %if.end44, !dbg !4050

if.end44:                                         ; preds = %if.end43, %if.end24
  %52 = load %struct.df*, %struct.df** @df, align 8, !dbg !4051
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %52, i32 0, i32 1, !dbg !4051
  %arrayidx45 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 4, !dbg !4051
  %53 = load %struct.dataflow*, %struct.dataflow** %arrayidx45, align 8, !dbg !4051
  %tobool46 = icmp ne %struct.dataflow* %53, null, !dbg !4051
  br i1 %tobool46, label %land.lhs.true, label %if.end50, !dbg !4053

land.lhs.true:                                    ; preds = %if.end44
  %54 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !4054
  %base47 = bitcast %union.df_ref_d* %54 to %struct.df_base_ref*, !dbg !4054
  %chain = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base47, i32 0, i32 2, !dbg !4054
  %55 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !4054
  %tobool48 = icmp ne %struct.df_link* %55, null, !dbg !4054
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !4055

if.then49:                                        ; preds = %land.lhs.true
  %56 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !4056
  call void @df_chain_unlink(%union.df_ref_d* %56), !dbg !4057
  br label %if.end50, !dbg !4057

if.end50:                                         ; preds = %if.then49, %land.lhs.true, %if.end44
  %57 = load %struct.df_reg_info*, %struct.df_reg_info** %reg_info, align 8, !dbg !4058
  %n_refs = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %57, i32 0, i32 1, !dbg !4059
  %58 = load i32, i32* %n_refs, align 8, !dbg !4060
  %dec = add i32 %58, -1, !dbg !4060
  store i32 %dec, i32* %n_refs, align 8, !dbg !4060
  %59 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !4061
  %base51 = bitcast %union.df_ref_d* %59 to %struct.df_base_ref*, !dbg !4061
  %60 = bitcast %struct.df_base_ref* %base51 to i32*, !dbg !4061
  %bf.load52 = load i32, i32* %60, align 8, !dbg !4061
  %bf.ashr53 = ashr i32 %bf.load52, 16, !dbg !4061
  %and54 = and i32 %bf.ashr53, 8, !dbg !4061
  %cmp55 = icmp ne i32 %and54, 0, !dbg !4061
  br i1 %cmp55, label %if.then56, label %if.end69, !dbg !4063

if.then56:                                        ; preds = %if.end50
  %61 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !4064
  %base57 = bitcast %union.df_ref_d* %61 to %struct.df_base_ref*, !dbg !4064
  %regno58 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base57, i32 0, i32 6, !dbg !4064
  %62 = load i32, i32* %regno58, align 8, !dbg !4064
  %cmp59 = icmp ult i32 %62, 53, !dbg !4064
  br i1 %cmp59, label %cond.false61, label %cond.true60, !dbg !4064

cond.true60:                                      ; preds = %if.then56
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 937, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !4064
  br label %cond.end62, !dbg !4064

cond.false61:                                     ; preds = %if.then56
  br label %cond.end62, !dbg !4064

cond.end62:                                       ; preds = %cond.false61, %cond.true60
  %cond63 = phi i32 [ 0, %cond.true60 ], [ 0, %cond.false61 ], !dbg !4064
  %63 = load %struct.df*, %struct.df** @df, align 8, !dbg !4066
  %hard_regs_live_count = getelementptr inbounds %struct.df, %struct.df* %63, i32 0, i32 25, !dbg !4067
  %64 = load i32*, i32** %hard_regs_live_count, align 8, !dbg !4067
  %65 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !4068
  %base64 = bitcast %union.df_ref_d* %65 to %struct.df_base_ref*, !dbg !4068
  %regno65 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base64, i32 0, i32 6, !dbg !4068
  %66 = load i32, i32* %regno65, align 8, !dbg !4068
  %idxprom66 = zext i32 %66 to i64, !dbg !4066
  %arrayidx67 = getelementptr inbounds i32, i32* %64, i64 %idxprom66, !dbg !4066
  %67 = load i32, i32* %arrayidx67, align 4, !dbg !4069
  %dec68 = add i32 %67, -1, !dbg !4069
  store i32 %dec68, i32* %arrayidx67, align 4, !dbg !4069
  br label %if.end69, !dbg !4070

if.end69:                                         ; preds = %cond.end62, %if.end50
  %68 = load %union.df_ref_d*, %union.df_ref_d** %prev, align 8, !dbg !4071
  %tobool70 = icmp ne %union.df_ref_d* %68, null, !dbg !4071
  br i1 %tobool70, label %if.then71, label %if.else74, !dbg !4073

if.then71:                                        ; preds = %if.end69
  %69 = load %union.df_ref_d*, %union.df_ref_d** %next, align 8, !dbg !4074
  %70 = load %union.df_ref_d*, %union.df_ref_d** %prev, align 8, !dbg !4075
  %base72 = bitcast %union.df_ref_d* %70 to %struct.df_base_ref*, !dbg !4075
  %next_reg73 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base72, i32 0, i32 4, !dbg !4075
  store %union.df_ref_d* %69, %union.df_ref_d** %next_reg73, align 8, !dbg !4076
  br label %if.end81, !dbg !4075

if.else74:                                        ; preds = %if.end69
  %71 = load %struct.df_reg_info*, %struct.df_reg_info** %reg_info, align 8, !dbg !4077
  %reg_chain = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %71, i32 0, i32 0, !dbg !4077
  %72 = load %union.df_ref_d*, %union.df_ref_d** %reg_chain, align 8, !dbg !4077
  %73 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !4077
  %cmp75 = icmp eq %union.df_ref_d* %72, %73, !dbg !4077
  br i1 %cmp75, label %cond.false77, label %cond.true76, !dbg !4077

cond.true76:                                      ; preds = %if.else74
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 947, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !4077
  br label %cond.end78, !dbg !4077

cond.false77:                                     ; preds = %if.else74
  br label %cond.end78, !dbg !4077

cond.end78:                                       ; preds = %cond.false77, %cond.true76
  %cond79 = phi i32 [ 0, %cond.true76 ], [ 0, %cond.false77 ], !dbg !4077
  %74 = load %union.df_ref_d*, %union.df_ref_d** %next, align 8, !dbg !4079
  %75 = load %struct.df_reg_info*, %struct.df_reg_info** %reg_info, align 8, !dbg !4080
  %reg_chain80 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %75, i32 0, i32 0, !dbg !4081
  store %union.df_ref_d* %74, %union.df_ref_d** %reg_chain80, align 8, !dbg !4082
  br label %if.end81

if.end81:                                         ; preds = %cond.end78, %if.then71
  %76 = load %union.df_ref_d*, %union.df_ref_d** %next, align 8, !dbg !4083
  %tobool82 = icmp ne %union.df_ref_d* %76, null, !dbg !4083
  br i1 %tobool82, label %if.then83, label %if.end86, !dbg !4085

if.then83:                                        ; preds = %if.end81
  %77 = load %union.df_ref_d*, %union.df_ref_d** %prev, align 8, !dbg !4086
  %78 = load %union.df_ref_d*, %union.df_ref_d** %next, align 8, !dbg !4087
  %base84 = bitcast %union.df_ref_d* %78 to %struct.df_base_ref*, !dbg !4087
  %prev_reg85 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base84, i32 0, i32 5, !dbg !4087
  store %union.df_ref_d* %77, %union.df_ref_d** %prev_reg85, align 8, !dbg !4088
  br label %if.end86, !dbg !4087

if.end86:                                         ; preds = %if.then83, %if.end81
  %79 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !4089
  call void @df_free_ref(%union.df_ref_d* %79), !dbg !4090
  ret void, !dbg !4091
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.df_insn_info* @df_insn_create_insn_record(%struct.rtx_def* %insn) #0 !dbg !4092 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %problem_data = alloca %struct.df_scan_problem_data*, align 8
  %insn_rec = alloca %struct.df_insn_info*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4095, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.declare(metadata %struct.df_scan_problem_data** %problem_data, metadata !4097, metadata !DIExpression()), !dbg !4098
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !4099
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !4099
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !4099
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4099
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !4100
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !4100
  %3 = bitcast i8* %2 to %struct.df_scan_problem_data*, !dbg !4101
  store %struct.df_scan_problem_data* %3, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !4098
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_rec, metadata !4102, metadata !DIExpression()), !dbg !4103
  call void @df_grow_insn_info(), !dbg !4104
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !4105
  %insns = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 10, !dbg !4105
  %5 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !4105
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4105
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !4105
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4105
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4105
  %rt_int = bitcast %union.rtunion_def* %arrayidx2 to i32*, !dbg !4105
  %7 = load i32, i32* %rt_int, align 8, !dbg !4105
  %idxprom = sext i32 %7 to i64, !dbg !4105
  %arrayidx3 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %5, i64 %idxprom, !dbg !4105
  %8 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx3, align 8, !dbg !4105
  store %struct.df_insn_info* %8, %struct.df_insn_info** %insn_rec, align 8, !dbg !4106
  %9 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4107
  %tobool = icmp ne %struct.df_insn_info* %9, null, !dbg !4107
  br i1 %tobool, label %if.end, label %if.then, !dbg !4109

if.then:                                          ; preds = %entry
  %10 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !4110
  %insn_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %10, i32 0, i32 4, !dbg !4112
  %11 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %insn_pool, align 8, !dbg !4112
  %call = call i8* @pool_alloc(%struct.alloc_pool_def* %11), !dbg !4113
  %12 = bitcast i8* %call to %struct.df_insn_info*, !dbg !4114
  store %struct.df_insn_info* %12, %struct.df_insn_info** %insn_rec, align 8, !dbg !4115
  %13 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4116
  %14 = load %struct.df*, %struct.df** @df, align 8, !dbg !4116
  %insns4 = getelementptr inbounds %struct.df, %struct.df* %14, i32 0, i32 10, !dbg !4116
  %15 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns4, align 8, !dbg !4116
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4116
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !4116
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !4116
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 0, !dbg !4116
  %rt_int8 = bitcast %union.rtunion_def* %arrayidx7 to i32*, !dbg !4116
  %17 = load i32, i32* %rt_int8, align 8, !dbg !4116
  %idxprom9 = sext i32 %17 to i64, !dbg !4116
  %arrayidx10 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %15, i64 %idxprom9, !dbg !4116
  store %struct.df_insn_info* %13, %struct.df_insn_info** %arrayidx10, align 8, !dbg !4116
  br label %if.end, !dbg !4117

if.end:                                           ; preds = %if.then, %entry
  %18 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4118
  %19 = bitcast %struct.df_insn_info* %18 to i8*, !dbg !4119
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 48, i1 false), !dbg !4119
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4120
  %21 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4121
  %insn11 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %21, i32 0, i32 0, !dbg !4122
  store %struct.rtx_def* %20, %struct.rtx_def** %insn11, align 8, !dbg !4123
  %22 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4124
  ret %struct.df_insn_info* %22, !dbg !4125
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_insn_delete(%struct.basic_block_def* %bb, i32 %uid) #0 !dbg !4126 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %uid.addr = alloca i32, align 4
  %insn_info = alloca %struct.df_insn_info*, align 8
  %problem_data = alloca %struct.df_scan_problem_data*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !4129, metadata !DIExpression()), !dbg !4130
  store i32 %uid, i32* %uid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uid.addr, metadata !4131, metadata !DIExpression()), !dbg !4132
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info, metadata !4133, metadata !DIExpression()), !dbg !4134
  store %struct.df_insn_info* null, %struct.df_insn_info** %insn_info, align 8, !dbg !4134
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !4135
  %tobool = icmp ne %struct.df* %0, null, !dbg !4135
  br i1 %tobool, label %if.end, label %if.then, !dbg !4137

if.then:                                          ; preds = %entry
  br label %if.end47, !dbg !4138

if.end:                                           ; preds = %entry
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !4139
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 1, !dbg !4139
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !4139
  %2 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4139
  call void @df_grow_bb_info(%struct.dataflow* %2), !dbg !4140
  call void @df_grow_reg_info(), !dbg !4141
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4142
  %tobool1 = icmp ne %struct.basic_block_def* %3, null, !dbg !4142
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !4144

if.then2:                                         ; preds = %if.end
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4145
  call void @df_set_bb_dirty(%struct.basic_block_def* %4), !dbg !4146
  br label %if.end3, !dbg !4146

if.end3:                                          ; preds = %if.then2, %if.end
  %5 = load i32, i32* %uid.addr, align 4, !dbg !4147
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !4147
  %insns_size = getelementptr inbounds %struct.df, %struct.df* %6, i32 0, i32 11, !dbg !4147
  %7 = load i32, i32* %insns_size, align 8, !dbg !4147
  %cmp = icmp ult i32 %5, %7, !dbg !4147
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4147

cond.true:                                        ; preds = %if.end3
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !4147
  %insns = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 10, !dbg !4147
  %9 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !4147
  %10 = load i32, i32* %uid.addr, align 4, !dbg !4147
  %idxprom = zext i32 %10 to i64, !dbg !4147
  %arrayidx4 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %9, i64 %idxprom, !dbg !4147
  %11 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx4, align 8, !dbg !4147
  br label %cond.end, !dbg !4147

cond.false:                                       ; preds = %if.end3
  br label %cond.end, !dbg !4147

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.df_insn_info* [ %11, %cond.true ], [ null, %cond.false ], !dbg !4147
  store %struct.df_insn_info* %cond, %struct.df_insn_info** %insn_info, align 8, !dbg !4148
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !4149
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %12, i32 0, i32 27, !dbg !4151
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !4151
  %bf.cast = sext i8 %bf.load to i32, !dbg !4151
  %and = and i32 %bf.cast, 32, !dbg !4152
  %tobool5 = icmp ne i32 %and, 0, !dbg !4152
  br i1 %tobool5, label %if.then6, label %if.end16, !dbg !4153

if.then6:                                         ; preds = %cond.end
  %13 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4154
  %tobool7 = icmp ne %struct.df_insn_info* %13, null, !dbg !4154
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !4157

if.then8:                                         ; preds = %if.then6
  %14 = load %struct.df*, %struct.df** @df, align 8, !dbg !4158
  %insns_to_rescan = getelementptr inbounds %struct.df, %struct.df* %14, i32 0, i32 19, !dbg !4160
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_rescan, align 8, !dbg !4160
  %16 = load i32, i32* %uid.addr, align 4, !dbg !4161
  %call = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %15, i32 %16), !dbg !4162
  %17 = load %struct.df*, %struct.df** @df, align 8, !dbg !4163
  %insns_to_notes_rescan = getelementptr inbounds %struct.df, %struct.df* %17, i32 0, i32 20, !dbg !4164
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_notes_rescan, align 8, !dbg !4164
  %19 = load i32, i32* %uid.addr, align 4, !dbg !4165
  %call9 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %18, i32 %19), !dbg !4166
  %20 = load %struct.df*, %struct.df** @df, align 8, !dbg !4167
  %insns_to_delete = getelementptr inbounds %struct.df, %struct.df* %20, i32 0, i32 18, !dbg !4168
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_delete, align 8, !dbg !4168
  %22 = load i32, i32* %uid.addr, align 4, !dbg !4169
  %call10 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %21, i32 %22), !dbg !4170
  br label %if.end11, !dbg !4171

if.end11:                                         ; preds = %if.then8, %if.then6
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4172
  %tobool12 = icmp ne %struct._IO_FILE* %23, null, !dbg !4172
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !4174

if.then13:                                        ; preds = %if.end11
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4175
  %25 = load i32, i32* %uid.addr, align 4, !dbg !4176
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0), i32 %25), !dbg !4177
  br label %if.end15, !dbg !4177

if.end15:                                         ; preds = %if.then13, %if.end11
  br label %if.end47, !dbg !4178

if.end16:                                         ; preds = %cond.end
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4179
  %tobool17 = icmp ne %struct._IO_FILE* %26, null, !dbg !4179
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !4181

if.then18:                                        ; preds = %if.end16
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4182
  %28 = load i32, i32* %uid.addr, align 4, !dbg !4183
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0), i32 %28), !dbg !4184
  br label %if.end20, !dbg !4184

if.end20:                                         ; preds = %if.then18, %if.end16
  %29 = load %struct.df*, %struct.df** @df, align 8, !dbg !4185
  %insns_to_delete21 = getelementptr inbounds %struct.df, %struct.df* %29, i32 0, i32 18, !dbg !4186
  %30 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_delete21, align 8, !dbg !4186
  %31 = load i32, i32* %uid.addr, align 4, !dbg !4187
  %call22 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %30, i32 %31), !dbg !4188
  %32 = load %struct.df*, %struct.df** @df, align 8, !dbg !4189
  %insns_to_rescan23 = getelementptr inbounds %struct.df, %struct.df* %32, i32 0, i32 19, !dbg !4190
  %33 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_rescan23, align 8, !dbg !4190
  %34 = load i32, i32* %uid.addr, align 4, !dbg !4191
  %call24 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %33, i32 %34), !dbg !4192
  %35 = load %struct.df*, %struct.df** @df, align 8, !dbg !4193
  %insns_to_notes_rescan25 = getelementptr inbounds %struct.df, %struct.df* %35, i32 0, i32 20, !dbg !4194
  %36 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_notes_rescan25, align 8, !dbg !4194
  %37 = load i32, i32* %uid.addr, align 4, !dbg !4195
  %call26 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %36, i32 %37), !dbg !4196
  %38 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4197
  %tobool27 = icmp ne %struct.df_insn_info* %38, null, !dbg !4197
  br i1 %tobool27, label %if.then28, label %if.end47, !dbg !4199

if.then28:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.df_scan_problem_data** %problem_data, metadata !4200, metadata !DIExpression()), !dbg !4202
  %39 = load %struct.df*, %struct.df** @df, align 8, !dbg !4203
  %problems_by_index29 = getelementptr inbounds %struct.df, %struct.df* %39, i32 0, i32 1, !dbg !4203
  %arrayidx30 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index29, i64 0, i64 0, !dbg !4203
  %40 = load %struct.dataflow*, %struct.dataflow** %arrayidx30, align 8, !dbg !4203
  %problem_data31 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %40, i32 0, i32 5, !dbg !4204
  %41 = load i8*, i8** %problem_data31, align 8, !dbg !4204
  %42 = bitcast i8* %41 to %struct.df_scan_problem_data*, !dbg !4205
  store %struct.df_scan_problem_data* %42, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !4202
  %43 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4206
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %43, i32 0, i32 1, !dbg !4208
  %44 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !4208
  %tobool32 = icmp ne %union.df_ref_d** %44, null, !dbg !4206
  br i1 %tobool32, label %if.then33, label %if.end43, !dbg !4209

if.then33:                                        ; preds = %if.then28
  %45 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4210
  %mw_hardregs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %45, i32 0, i32 4, !dbg !4212
  %46 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs, align 8, !dbg !4212
  call void @df_mw_hardreg_chain_delete(%struct.df_mw_hardreg** %46), !dbg !4213
  %47 = load %struct.df*, %struct.df** @df, align 8, !dbg !4214
  %problems_by_index34 = getelementptr inbounds %struct.df, %struct.df* %47, i32 0, i32 1, !dbg !4214
  %arrayidx35 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index34, i64 0, i64 4, !dbg !4214
  %48 = load %struct.dataflow*, %struct.dataflow** %arrayidx35, align 8, !dbg !4214
  %tobool36 = icmp ne %struct.dataflow* %48, null, !dbg !4214
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !4216

if.then37:                                        ; preds = %if.then33
  %49 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4217
  %defs38 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %49, i32 0, i32 1, !dbg !4219
  %50 = load %union.df_ref_d**, %union.df_ref_d*** %defs38, align 8, !dbg !4219
  call void @df_ref_chain_delete_du_chain(%union.df_ref_d** %50), !dbg !4220
  %51 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4221
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %51, i32 0, i32 2, !dbg !4222
  %52 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !4222
  call void @df_ref_chain_delete_du_chain(%union.df_ref_d** %52), !dbg !4223
  %53 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4224
  %eq_uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %53, i32 0, i32 3, !dbg !4225
  %54 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses, align 8, !dbg !4225
  call void @df_ref_chain_delete_du_chain(%union.df_ref_d** %54), !dbg !4226
  br label %if.end39, !dbg !4227

if.end39:                                         ; preds = %if.then37, %if.then33
  %55 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4228
  %defs40 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %55, i32 0, i32 1, !dbg !4229
  %56 = load %union.df_ref_d**, %union.df_ref_d*** %defs40, align 8, !dbg !4229
  call void @df_ref_chain_delete(%union.df_ref_d** %56), !dbg !4230
  %57 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4231
  %uses41 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %57, i32 0, i32 2, !dbg !4232
  %58 = load %union.df_ref_d**, %union.df_ref_d*** %uses41, align 8, !dbg !4232
  call void @df_ref_chain_delete(%union.df_ref_d** %58), !dbg !4233
  %59 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4234
  %eq_uses42 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %59, i32 0, i32 3, !dbg !4235
  %60 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses42, align 8, !dbg !4235
  call void @df_ref_chain_delete(%union.df_ref_d** %60), !dbg !4236
  br label %if.end43, !dbg !4237

if.end43:                                         ; preds = %if.end39, %if.then28
  %61 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !4238
  %insn_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %61, i32 0, i32 4, !dbg !4239
  %62 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %insn_pool, align 8, !dbg !4239
  %63 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4240
  %64 = bitcast %struct.df_insn_info* %63 to i8*, !dbg !4240
  call void @pool_free(%struct.alloc_pool_def* %62, i8* %64), !dbg !4241
  %65 = load %struct.df*, %struct.df** @df, align 8, !dbg !4242
  %insns44 = getelementptr inbounds %struct.df, %struct.df* %65, i32 0, i32 10, !dbg !4242
  %66 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns44, align 8, !dbg !4242
  %67 = load i32, i32* %uid.addr, align 4, !dbg !4242
  %idxprom45 = zext i32 %67 to i64, !dbg !4242
  %arrayidx46 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %66, i64 %idxprom45, !dbg !4242
  store %struct.df_insn_info* null, %struct.df_insn_info** %arrayidx46, align 8, !dbg !4242
  br label %if.end47, !dbg !4243

if.end47:                                         ; preds = %if.then, %if.end15, %if.end43, %if.end20
  ret void, !dbg !4244
}

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_mw_hardreg_chain_delete(%struct.df_mw_hardreg** %hardregs) #0 !dbg !4245 {
entry:
  %hardregs.addr = alloca %struct.df_mw_hardreg**, align 8
  %problem_data = alloca %struct.df_scan_problem_data*, align 8
  store %struct.df_mw_hardreg** %hardregs, %struct.df_mw_hardreg*** %hardregs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg*** %hardregs.addr, metadata !4248, metadata !DIExpression()), !dbg !4249
  call void @llvm.dbg.declare(metadata %struct.df_scan_problem_data** %problem_data, metadata !4250, metadata !DIExpression()), !dbg !4251
  %0 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %hardregs.addr, align 8, !dbg !4252
  %tobool = icmp ne %struct.df_mw_hardreg** %0, null, !dbg !4252
  br i1 %tobool, label %if.end, label %if.then, !dbg !4254

if.then:                                          ; preds = %entry
  br label %while.end, !dbg !4255

if.end:                                           ; preds = %entry
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !4256
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 1, !dbg !4256
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !4256
  %2 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4256
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i32 0, i32 5, !dbg !4257
  %3 = load i8*, i8** %problem_data1, align 8, !dbg !4257
  %4 = bitcast i8* %3 to %struct.df_scan_problem_data*, !dbg !4258
  store %struct.df_scan_problem_data* %4, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !4259
  br label %while.cond, !dbg !4260

while.cond:                                       ; preds = %while.body, %if.end
  %5 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %hardregs.addr, align 8, !dbg !4261
  %6 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %5, align 8, !dbg !4262
  %tobool2 = icmp ne %struct.df_mw_hardreg* %6, null, !dbg !4260
  br i1 %tobool2, label %while.body, label %while.end, !dbg !4260

while.body:                                       ; preds = %while.cond
  %7 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !4263
  %mw_reg_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %7, i32 0, i32 6, !dbg !4265
  %8 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %mw_reg_pool, align 8, !dbg !4265
  %9 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %hardregs.addr, align 8, !dbg !4266
  %10 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %9, align 8, !dbg !4267
  %11 = bitcast %struct.df_mw_hardreg* %10 to i8*, !dbg !4267
  call void @pool_free(%struct.alloc_pool_def* %8, i8* %11), !dbg !4268
  %12 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %hardregs.addr, align 8, !dbg !4269
  %incdec.ptr = getelementptr inbounds %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %12, i32 1, !dbg !4269
  store %struct.df_mw_hardreg** %incdec.ptr, %struct.df_mw_hardreg*** %hardregs.addr, align 8, !dbg !4269
  br label %while.cond, !dbg !4260, !llvm.loop !4270

while.end:                                        ; preds = %if.then, %while.cond
  ret void, !dbg !4272
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_ref_chain_delete_du_chain(%union.df_ref_d** %ref_rec) #0 !dbg !4273 {
entry:
  %ref_rec.addr = alloca %union.df_ref_d**, align 8
  %ref = alloca %union.df_ref_d*, align 8
  store %union.df_ref_d** %ref_rec, %union.df_ref_d*** %ref_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %ref_rec.addr, metadata !4276, metadata !DIExpression()), !dbg !4277
  br label %while.cond, !dbg !4278

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec.addr, align 8, !dbg !4279
  %1 = load %union.df_ref_d*, %union.df_ref_d** %0, align 8, !dbg !4280
  %tobool = icmp ne %union.df_ref_d* %1, null, !dbg !4278
  br i1 %tobool, label %while.body, label %while.end, !dbg !4278

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref, metadata !4281, metadata !DIExpression()), !dbg !4283
  %2 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec.addr, align 8, !dbg !4284
  %3 = load %union.df_ref_d*, %union.df_ref_d** %2, align 8, !dbg !4285
  store %union.df_ref_d* %3, %union.df_ref_d** %ref, align 8, !dbg !4283
  %4 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !4286
  %base = bitcast %union.df_ref_d* %4 to %struct.df_base_ref*, !dbg !4286
  %chain = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 2, !dbg !4286
  %5 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !4286
  %tobool1 = icmp ne %struct.df_link* %5, null, !dbg !4286
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4288

if.then:                                          ; preds = %while.body
  %6 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !4289
  call void @df_chain_unlink(%union.df_ref_d* %6), !dbg !4290
  br label %if.end, !dbg !4290

if.end:                                           ; preds = %if.then, %while.body
  %7 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec.addr, align 8, !dbg !4291
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %7, i32 1, !dbg !4291
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %ref_rec.addr, align 8, !dbg !4291
  br label %while.cond, !dbg !4278, !llvm.loop !4292

while.end:                                        ; preds = %while.cond
  ret void, !dbg !4294
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_ref_chain_delete(%union.df_ref_d** %ref_rec) #0 !dbg !4295 {
entry:
  %ref_rec.addr = alloca %union.df_ref_d**, align 8
  %start = alloca %union.df_ref_d**, align 8
  store %union.df_ref_d** %ref_rec, %union.df_ref_d*** %ref_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %ref_rec.addr, metadata !4296, metadata !DIExpression()), !dbg !4297
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %start, metadata !4298, metadata !DIExpression()), !dbg !4299
  %0 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec.addr, align 8, !dbg !4300
  store %union.df_ref_d** %0, %union.df_ref_d*** %start, align 8, !dbg !4299
  br label %while.cond, !dbg !4301

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec.addr, align 8, !dbg !4302
  %2 = load %union.df_ref_d*, %union.df_ref_d** %1, align 8, !dbg !4303
  %tobool = icmp ne %union.df_ref_d* %2, null, !dbg !4301
  br i1 %tobool, label %while.body, label %while.end, !dbg !4301

while.body:                                       ; preds = %while.cond
  %3 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec.addr, align 8, !dbg !4304
  %4 = load %union.df_ref_d*, %union.df_ref_d** %3, align 8, !dbg !4306
  call void @df_reg_chain_unlink(%union.df_ref_d* %4), !dbg !4307
  %5 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec.addr, align 8, !dbg !4308
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %5, i32 1, !dbg !4308
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %ref_rec.addr, align 8, !dbg !4308
  br label %while.cond, !dbg !4301, !llvm.loop !4309

while.end:                                        ; preds = %while.cond
  %6 = load %union.df_ref_d**, %union.df_ref_d*** %start, align 8, !dbg !4311
  %7 = load %union.df_ref_d*, %union.df_ref_d** %6, align 8, !dbg !4313
  %tobool1 = icmp ne %union.df_ref_d* %7, null, !dbg !4313
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4314

if.then:                                          ; preds = %while.end
  %8 = load %union.df_ref_d**, %union.df_ref_d*** %start, align 8, !dbg !4315
  %9 = bitcast %union.df_ref_d** %8 to i8*, !dbg !4315
  call void @free(i8* %9), !dbg !4316
  br label %if.end, !dbg !4316

if.end:                                           ; preds = %if.then, %while.end
  ret void, !dbg !4317
}

declare dso_local void @pool_free(%struct.alloc_pool_def*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @df_insn_rescan(%struct.rtx_def* %insn) #0 !dbg !4318 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %uid = alloca i32, align 4
  %insn_info = alloca %struct.df_insn_info*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %collection_rec = alloca %struct.df_collection_rec, align 8
  %luid = alloca i32, align 4
  %the_same = alloca i8, align 1
  %insn_info96 = alloca %struct.df_insn_info*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4321, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !4323, metadata !DIExpression()), !dbg !4324
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4325
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !4325
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4325
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4325
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4325
  %1 = load i32, i32* %rt_int, align 8, !dbg !4325
  store i32 %1, i32* %uid, align 4, !dbg !4324
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info, metadata !4326, metadata !DIExpression()), !dbg !4327
  store %struct.df_insn_info* null, %struct.df_insn_info** %insn_info, align 8, !dbg !4327
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !4328, metadata !DIExpression()), !dbg !4329
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4330
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !4330
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !4330
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 3, !dbg !4330
  %rt_bb = bitcast %union.rtunion_def* %arrayidx3 to %struct.basic_block_def**, !dbg !4330
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4330
  store %struct.basic_block_def* %3, %struct.basic_block_def** %bb, align 8, !dbg !4329
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec* %collection_rec, metadata !4331, metadata !DIExpression()), !dbg !4332
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !4333
  %tobool = icmp ne %struct.df* %4, null, !dbg !4333
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4335

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4336
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !4336
  %bf.load = load i32, i32* %6, align 8, !dbg !4336
  %bf.clear = and i32 %bf.load, 65535, !dbg !4336
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4336
  br i1 %cmp, label %if.end, label %lor.lhs.false4, !dbg !4336

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4336
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !4336
  %bf.load5 = load i32, i32* %8, align 8, !dbg !4336
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !4336
  %cmp7 = icmp eq i32 %bf.clear6, 7, !dbg !4336
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !4336

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4336
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !4336
  %bf.load9 = load i32, i32* %10, align 8, !dbg !4336
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !4336
  %cmp11 = icmp eq i32 %bf.clear10, 9, !dbg !4336
  br i1 %cmp11, label %if.end, label %lor.lhs.false12, !dbg !4336

lor.lhs.false12:                                  ; preds = %lor.lhs.false8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4336
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !4336
  %bf.load13 = load i32, i32* %12, align 8, !dbg !4336
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !4336
  %cmp15 = icmp eq i32 %bf.clear14, 10, !dbg !4336
  br i1 %cmp15, label %if.end, label %if.then, !dbg !4337

if.then:                                          ; preds = %lor.lhs.false12, %entry
  store i8 0, i8* %retval, align 1, !dbg !4338
  br label %return, !dbg !4338

if.end:                                           ; preds = %lor.lhs.false12, %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4339
  %tobool16 = icmp ne %struct.basic_block_def* %13, null, !dbg !4339
  br i1 %tobool16, label %if.end21, label %if.then17, !dbg !4341

if.then17:                                        ; preds = %if.end
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4342
  %tobool18 = icmp ne %struct._IO_FILE* %14, null, !dbg !4342
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !4345

if.then19:                                        ; preds = %if.then17
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4346
  %16 = load i32, i32* %uid, align 4, !dbg !4347
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i64 0, i64 0), i32 %16), !dbg !4348
  br label %if.end20, !dbg !4348

if.end20:                                         ; preds = %if.then19, %if.then17
  store i8 0, i8* %retval, align 1, !dbg !4349
  br label %return, !dbg !4349

if.end21:                                         ; preds = %if.end
  %17 = load %struct.df*, %struct.df** @df, align 8, !dbg !4350
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %17, i32 0, i32 27, !dbg !4352
  %bf.load22 = load i8, i8* %changeable_flags, align 4, !dbg !4352
  %bf.cast = sext i8 %bf.load22 to i32, !dbg !4352
  %and = and i32 %bf.cast, 16, !dbg !4353
  %tobool23 = icmp ne i32 %and, 0, !dbg !4353
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !4354

if.then24:                                        ; preds = %if.end21
  store i8 0, i8* %retval, align 1, !dbg !4355
  br label %return, !dbg !4355

if.end25:                                         ; preds = %if.end21
  %18 = load %struct.df*, %struct.df** @df, align 8, !dbg !4356
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %18, i32 0, i32 1, !dbg !4356
  %arrayidx26 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !4356
  %19 = load %struct.dataflow*, %struct.dataflow** %arrayidx26, align 8, !dbg !4356
  call void @df_grow_bb_info(%struct.dataflow* %19), !dbg !4357
  call void @df_grow_reg_info(), !dbg !4358
  %20 = load i32, i32* %uid, align 4, !dbg !4359
  %21 = load %struct.df*, %struct.df** @df, align 8, !dbg !4359
  %insns_size = getelementptr inbounds %struct.df, %struct.df* %21, i32 0, i32 11, !dbg !4359
  %22 = load i32, i32* %insns_size, align 8, !dbg !4359
  %cmp27 = icmp ult i32 %20, %22, !dbg !4359
  br i1 %cmp27, label %cond.true, label %cond.false, !dbg !4359

cond.true:                                        ; preds = %if.end25
  %23 = load %struct.df*, %struct.df** @df, align 8, !dbg !4359
  %insns = getelementptr inbounds %struct.df, %struct.df* %23, i32 0, i32 10, !dbg !4359
  %24 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !4359
  %25 = load i32, i32* %uid, align 4, !dbg !4359
  %idxprom = zext i32 %25 to i64, !dbg !4359
  %arrayidx28 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %24, i64 %idxprom, !dbg !4359
  %26 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx28, align 8, !dbg !4359
  br label %cond.end, !dbg !4359

cond.false:                                       ; preds = %if.end25
  br label %cond.end, !dbg !4359

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.df_insn_info* [ %26, %cond.true ], [ null, %cond.false ], !dbg !4359
  store %struct.df_insn_info* %cond, %struct.df_insn_info** %insn_info, align 8, !dbg !4360
  %27 = load %struct.df*, %struct.df** @df, align 8, !dbg !4361
  %changeable_flags29 = getelementptr inbounds %struct.df, %struct.df* %27, i32 0, i32 27, !dbg !4363
  %bf.load30 = load i8, i8* %changeable_flags29, align 4, !dbg !4363
  %bf.cast31 = sext i8 %bf.load30 to i32, !dbg !4363
  %and32 = and i32 %bf.cast31, 32, !dbg !4364
  %tobool33 = icmp ne i32 %and32, 0, !dbg !4364
  br i1 %tobool33, label %if.then34, label %if.end50, !dbg !4365

if.then34:                                        ; preds = %cond.end
  %28 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4366
  %tobool35 = icmp ne %struct.df_insn_info* %28, null, !dbg !4366
  br i1 %tobool35, label %if.end38, label %if.then36, !dbg !4369

if.then36:                                        ; preds = %if.then34
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4370
  %call37 = call %struct.df_insn_info* @df_insn_create_insn_record(%struct.rtx_def* %29), !dbg !4372
  store %struct.df_insn_info* %call37, %struct.df_insn_info** %insn_info, align 8, !dbg !4373
  %30 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4374
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %30, i32 0, i32 1, !dbg !4375
  store %union.df_ref_d** getelementptr inbounds ([1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* @df_null_ref_rec, i64 0, i64 0), %union.df_ref_d*** %defs, align 8, !dbg !4376
  %31 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4377
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %31, i32 0, i32 2, !dbg !4378
  store %union.df_ref_d** getelementptr inbounds ([1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* @df_null_ref_rec, i64 0, i64 0), %union.df_ref_d*** %uses, align 8, !dbg !4379
  %32 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4380
  %eq_uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %32, i32 0, i32 3, !dbg !4381
  store %union.df_ref_d** getelementptr inbounds ([1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* @df_null_ref_rec, i64 0, i64 0), %union.df_ref_d*** %eq_uses, align 8, !dbg !4382
  %33 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4383
  %mw_hardregs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %33, i32 0, i32 4, !dbg !4384
  store %struct.df_mw_hardreg** getelementptr inbounds ([1 x %struct.df_mw_hardreg*], [1 x %struct.df_mw_hardreg*]* @df_null_mw_rec, i64 0, i64 0), %struct.df_mw_hardreg*** %mw_hardregs, align 8, !dbg !4385
  br label %if.end38, !dbg !4386

if.end38:                                         ; preds = %if.then36, %if.then34
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4387
  %tobool39 = icmp ne %struct._IO_FILE* %34, null, !dbg !4387
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !4389

if.then40:                                        ; preds = %if.end38
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4390
  %36 = load i32, i32* %uid, align 4, !dbg !4391
  %call41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i64 0, i64 0), i32 %36), !dbg !4392
  br label %if.end42, !dbg !4392

if.end42:                                         ; preds = %if.then40, %if.end38
  %37 = load %struct.df*, %struct.df** @df, align 8, !dbg !4393
  %insns_to_delete = getelementptr inbounds %struct.df, %struct.df* %37, i32 0, i32 18, !dbg !4394
  %38 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_delete, align 8, !dbg !4394
  %39 = load i32, i32* %uid, align 4, !dbg !4395
  %call43 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %38, i32 %39), !dbg !4396
  %40 = load %struct.df*, %struct.df** @df, align 8, !dbg !4397
  %insns_to_notes_rescan = getelementptr inbounds %struct.df, %struct.df* %40, i32 0, i32 20, !dbg !4398
  %41 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_notes_rescan, align 8, !dbg !4398
  %42 = load i32, i32* %uid, align 4, !dbg !4399
  %call44 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %41, i32 %42), !dbg !4400
  %43 = load %struct.df*, %struct.df** @df, align 8, !dbg !4401
  %insns_to_rescan = getelementptr inbounds %struct.df, %struct.df* %43, i32 0, i32 19, !dbg !4402
  %44 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_rescan, align 8, !dbg !4402
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4403
  %u45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !4403
  %fld46 = bitcast %union.u* %u45 to [1 x %union.rtunion_def]*, !dbg !4403
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i64 0, i64 0, !dbg !4403
  %rt_int48 = bitcast %union.rtunion_def* %arrayidx47 to i32*, !dbg !4403
  %46 = load i32, i32* %rt_int48, align 8, !dbg !4403
  %call49 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %44, i32 %46), !dbg !4404
  store i8 0, i8* %retval, align 1, !dbg !4405
  br label %return, !dbg !4405

if.end50:                                         ; preds = %cond.end
  %call51 = call i64 @VEC_df_ref_base_embedded_size(i32 128), !dbg !4406
  %47 = alloca i8, i64 %call51, align 16, !dbg !4406
  %48 = bitcast i8* %47 to %struct.VEC_df_ref_stack*, !dbg !4406
  %call52 = call %struct.VEC_df_ref_stack* @VEC_df_ref_stack_alloc1(i32 128, %struct.VEC_df_ref_stack* %48), !dbg !4406
  %def_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 0, !dbg !4407
  store %struct.VEC_df_ref_stack* %call52, %struct.VEC_df_ref_stack** %def_vec, align 8, !dbg !4408
  %call53 = call i64 @VEC_df_ref_base_embedded_size(i32 32), !dbg !4409
  %49 = alloca i8, i64 %call53, align 16, !dbg !4409
  %50 = bitcast i8* %49 to %struct.VEC_df_ref_stack*, !dbg !4409
  %call54 = call %struct.VEC_df_ref_stack* @VEC_df_ref_stack_alloc1(i32 32, %struct.VEC_df_ref_stack* %50), !dbg !4409
  %use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 1, !dbg !4410
  store %struct.VEC_df_ref_stack* %call54, %struct.VEC_df_ref_stack** %use_vec, align 8, !dbg !4411
  %call55 = call i64 @VEC_df_ref_base_embedded_size(i32 32), !dbg !4412
  %51 = alloca i8, i64 %call55, align 16, !dbg !4412
  %52 = bitcast i8* %51 to %struct.VEC_df_ref_stack*, !dbg !4412
  %call56 = call %struct.VEC_df_ref_stack* @VEC_df_ref_stack_alloc1(i32 32, %struct.VEC_df_ref_stack* %52), !dbg !4412
  %eq_use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 2, !dbg !4413
  store %struct.VEC_df_ref_stack* %call56, %struct.VEC_df_ref_stack** %eq_use_vec, align 8, !dbg !4414
  %call57 = call i64 @VEC_df_mw_hardreg_ptr_base_embedded_size(i32 32), !dbg !4415
  %53 = alloca i8, i64 %call57, align 16, !dbg !4415
  %54 = bitcast i8* %53 to %struct.VEC_df_mw_hardreg_ptr_stack*, !dbg !4415
  %call58 = call %struct.VEC_df_mw_hardreg_ptr_stack* @VEC_df_mw_hardreg_ptr_stack_alloc1(i32 32, %struct.VEC_df_mw_hardreg_ptr_stack* %54), !dbg !4415
  %mw_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 3, !dbg !4416
  store %struct.VEC_df_mw_hardreg_ptr_stack* %call58, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec, align 8, !dbg !4417
  %55 = load %struct.df*, %struct.df** @df, align 8, !dbg !4418
  %insns_to_delete59 = getelementptr inbounds %struct.df, %struct.df* %55, i32 0, i32 18, !dbg !4419
  %56 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_delete59, align 8, !dbg !4419
  %57 = load i32, i32* %uid, align 4, !dbg !4420
  %call60 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %56, i32 %57), !dbg !4421
  %58 = load %struct.df*, %struct.df** @df, align 8, !dbg !4422
  %insns_to_rescan61 = getelementptr inbounds %struct.df, %struct.df* %58, i32 0, i32 19, !dbg !4423
  %59 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_rescan61, align 8, !dbg !4423
  %60 = load i32, i32* %uid, align 4, !dbg !4424
  %call62 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %59, i32 %60), !dbg !4425
  %61 = load %struct.df*, %struct.df** @df, align 8, !dbg !4426
  %insns_to_notes_rescan63 = getelementptr inbounds %struct.df, %struct.df* %61, i32 0, i32 20, !dbg !4427
  %62 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_notes_rescan63, align 8, !dbg !4427
  %63 = load i32, i32* %uid, align 4, !dbg !4428
  %call64 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %62, i32 %63), !dbg !4429
  %64 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4430
  %tobool65 = icmp ne %struct.df_insn_info* %64, null, !dbg !4430
  br i1 %tobool65, label %if.then66, label %if.else, !dbg !4432

if.then66:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata i32* %luid, metadata !4433, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.declare(metadata i8* %the_same, metadata !4436, metadata !DIExpression()), !dbg !4437
  %65 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4438
  %66 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4439
  %call67 = call zeroext i8 @df_insn_refs_verify(%struct.df_collection_rec* %collection_rec, %struct.basic_block_def* %65, %struct.rtx_def* %66, i8 zeroext 0), !dbg !4440
  store i8 %call67, i8* %the_same, align 1, !dbg !4437
  %67 = load i8, i8* %the_same, align 1, !dbg !4441
  %tobool68 = icmp ne i8 %67, 0, !dbg !4441
  br i1 %tobool68, label %if.then69, label %if.end74, !dbg !4443

if.then69:                                        ; preds = %if.then66
  call void @df_free_collection_rec(%struct.df_collection_rec* %collection_rec), !dbg !4444
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4446
  %tobool70 = icmp ne %struct._IO_FILE* %68, null, !dbg !4446
  br i1 %tobool70, label %if.then71, label %if.end73, !dbg !4448

if.then71:                                        ; preds = %if.then69
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4449
  %70 = load i32, i32* %uid, align 4, !dbg !4450
  %call72 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %69, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.14, i64 0, i64 0), i32 %70), !dbg !4451
  br label %if.end73, !dbg !4451

if.end73:                                         ; preds = %if.then71, %if.then69
  store i8 0, i8* %retval, align 1, !dbg !4452
  br label %return, !dbg !4452

if.end74:                                         ; preds = %if.then66
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4453
  %tobool75 = icmp ne %struct._IO_FILE* %71, null, !dbg !4453
  br i1 %tobool75, label %if.then76, label %if.end78, !dbg !4455

if.then76:                                        ; preds = %if.end74
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4456
  %73 = load i32, i32* %uid, align 4, !dbg !4457
  %call77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %72, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0), i32 %73), !dbg !4458
  br label %if.end78, !dbg !4458

if.end78:                                         ; preds = %if.then76, %if.end74
  %74 = load %struct.df*, %struct.df** @df, align 8, !dbg !4459
  %insns79 = getelementptr inbounds %struct.df, %struct.df* %74, i32 0, i32 10, !dbg !4459
  %75 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns79, align 8, !dbg !4459
  %76 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4459
  %u80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1, !dbg !4459
  %fld81 = bitcast %union.u* %u80 to [1 x %union.rtunion_def]*, !dbg !4459
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld81, i64 0, i64 0, !dbg !4459
  %rt_int83 = bitcast %union.rtunion_def* %arrayidx82 to i32*, !dbg !4459
  %77 = load i32, i32* %rt_int83, align 8, !dbg !4459
  %idxprom84 = sext i32 %77 to i64, !dbg !4459
  %arrayidx85 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %75, i64 %idxprom84, !dbg !4459
  %78 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx85, align 8, !dbg !4459
  %luid86 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %78, i32 0, i32 5, !dbg !4459
  %79 = load i32, i32* %luid86, align 8, !dbg !4459
  store i32 %79, i32* %luid, align 4, !dbg !4460
  %80 = load i32, i32* %uid, align 4, !dbg !4461
  call void @df_insn_delete(%struct.basic_block_def* null, i32 %80), !dbg !4462
  %81 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4463
  %call87 = call %struct.df_insn_info* @df_insn_create_insn_record(%struct.rtx_def* %81), !dbg !4464
  %82 = load i32, i32* %luid, align 4, !dbg !4465
  %83 = load %struct.df*, %struct.df** @df, align 8, !dbg !4466
  %insns88 = getelementptr inbounds %struct.df, %struct.df* %83, i32 0, i32 10, !dbg !4466
  %84 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns88, align 8, !dbg !4466
  %85 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4466
  %u89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1, !dbg !4466
  %fld90 = bitcast %union.u* %u89 to [1 x %union.rtunion_def]*, !dbg !4466
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld90, i64 0, i64 0, !dbg !4466
  %rt_int92 = bitcast %union.rtunion_def* %arrayidx91 to i32*, !dbg !4466
  %86 = load i32, i32* %rt_int92, align 8, !dbg !4466
  %idxprom93 = sext i32 %86 to i64, !dbg !4466
  %arrayidx94 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %84, i64 %idxprom93, !dbg !4466
  %87 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx94, align 8, !dbg !4466
  %luid95 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %87, i32 0, i32 5, !dbg !4466
  store i32 %82, i32* %luid95, align 8, !dbg !4467
  br label %if.end102, !dbg !4468

if.else:                                          ; preds = %if.end50
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info96, metadata !4469, metadata !DIExpression()), !dbg !4471
  %88 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4472
  %call97 = call %struct.df_insn_info* @df_insn_create_insn_record(%struct.rtx_def* %88), !dbg !4473
  store %struct.df_insn_info* %call97, %struct.df_insn_info** %insn_info96, align 8, !dbg !4471
  %89 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4474
  %90 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info96, align 8, !dbg !4475
  call void @df_insn_refs_collect(%struct.df_collection_rec* %collection_rec, %struct.basic_block_def* %89, %struct.df_insn_info* %90), !dbg !4476
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4477
  %tobool98 = icmp ne %struct._IO_FILE* %91, null, !dbg !4477
  br i1 %tobool98, label %if.then99, label %if.end101, !dbg !4479

if.then99:                                        ; preds = %if.else
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4480
  %93 = load i32, i32* %uid, align 4, !dbg !4481
  %call100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %92, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16, i64 0, i64 0), i32 %93), !dbg !4482
  br label %if.end101, !dbg !4482

if.end101:                                        ; preds = %if.then99, %if.else
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.end78
  %94 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4483
  %95 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4484
  call void @df_refs_add_to_chains(%struct.df_collection_rec* %collection_rec, %struct.basic_block_def* %94, %struct.rtx_def* %95), !dbg !4485
  %96 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4486
  %97 = bitcast %struct.rtx_def* %96 to i32*, !dbg !4486
  %bf.load103 = load i32, i32* %97, align 8, !dbg !4486
  %bf.clear104 = and i32 %bf.load103, 65535, !dbg !4486
  %cmp105 = icmp eq i32 %bf.clear104, 7, !dbg !4486
  br i1 %cmp105, label %if.then106, label %if.else107, !dbg !4488

if.then106:                                       ; preds = %if.end102
  %98 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4489
  call void @df_set_bb_dirty_nonlr(%struct.basic_block_def* %98), !dbg !4490
  br label %if.end108, !dbg !4490

if.else107:                                       ; preds = %if.end102
  %99 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4491
  call void @df_set_bb_dirty(%struct.basic_block_def* %99), !dbg !4492
  br label %if.end108

if.end108:                                        ; preds = %if.else107, %if.then106
  %def_vec109 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 0, !dbg !4493
  call void @VEC_df_ref_stack_free(%struct.VEC_df_ref_stack** %def_vec109), !dbg !4493
  %use_vec110 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 1, !dbg !4494
  call void @VEC_df_ref_stack_free(%struct.VEC_df_ref_stack** %use_vec110), !dbg !4494
  %eq_use_vec111 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 2, !dbg !4495
  call void @VEC_df_ref_stack_free(%struct.VEC_df_ref_stack** %eq_use_vec111), !dbg !4495
  %mw_vec112 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 3, !dbg !4496
  call void @VEC_df_mw_hardreg_ptr_stack_free(%struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec112), !dbg !4496
  store i8 1, i8* %retval, align 1, !dbg !4497
  br label %return, !dbg !4497

return:                                           ; preds = %if.end108, %if.end73, %if.end42, %if.then24, %if.end20, %if.then
  %100 = load i8, i8* %retval, align 1, !dbg !4498
  ret i8 %100, !dbg !4498
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.VEC_df_ref_stack* @VEC_df_ref_stack_alloc1(i32 %alloc_, %struct.VEC_df_ref_stack* %space) #0 !dbg !4499 {
entry:
  %alloc_.addr = alloca i32, align 4
  %space.addr = alloca %struct.VEC_df_ref_stack*, align 8
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !4502, metadata !DIExpression()), !dbg !4503
  store %struct.VEC_df_ref_stack* %space, %struct.VEC_df_ref_stack** %space.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_ref_stack** %space.addr, metadata !4504, metadata !DIExpression()), !dbg !4503
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !4503
  %1 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %space.addr, align 8, !dbg !4503
  %2 = bitcast %struct.VEC_df_ref_stack* %1 to i8*, !dbg !4503
  %call = call i8* @vec_stack_p_reserve_exact_1(i32 %0, i8* %2), !dbg !4503
  %3 = bitcast i8* %call to %struct.VEC_df_ref_stack*, !dbg !4503
  ret %struct.VEC_df_ref_stack* %3, !dbg !4503
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @VEC_df_ref_base_embedded_size(i32 %alloc_) #0 !dbg !4505 {
entry:
  %alloc_.addr = alloca i32, align 4
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !4508, metadata !DIExpression()), !dbg !4509
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !4509
  %conv = sext i32 %0 to i64, !dbg !4509
  %mul = mul i64 %conv, 8, !dbg !4509
  %add = add i64 8, %mul, !dbg !4509
  ret i64 %add, !dbg !4509
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.VEC_df_mw_hardreg_ptr_stack* @VEC_df_mw_hardreg_ptr_stack_alloc1(i32 %alloc_, %struct.VEC_df_mw_hardreg_ptr_stack* %space) #0 !dbg !4510 {
entry:
  %alloc_.addr = alloca i32, align 4
  %space.addr = alloca %struct.VEC_df_mw_hardreg_ptr_stack*, align 8
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !4513, metadata !DIExpression()), !dbg !4514
  store %struct.VEC_df_mw_hardreg_ptr_stack* %space, %struct.VEC_df_mw_hardreg_ptr_stack** %space.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_mw_hardreg_ptr_stack** %space.addr, metadata !4515, metadata !DIExpression()), !dbg !4514
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !4514
  %1 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %space.addr, align 8, !dbg !4514
  %2 = bitcast %struct.VEC_df_mw_hardreg_ptr_stack* %1 to i8*, !dbg !4514
  %call = call i8* @vec_stack_p_reserve_exact_1(i32 %0, i8* %2), !dbg !4514
  %3 = bitcast i8* %call to %struct.VEC_df_mw_hardreg_ptr_stack*, !dbg !4514
  ret %struct.VEC_df_mw_hardreg_ptr_stack* %3, !dbg !4514
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @VEC_df_mw_hardreg_ptr_base_embedded_size(i32 %alloc_) #0 !dbg !4516 {
entry:
  %alloc_.addr = alloca i32, align 4
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !4517, metadata !DIExpression()), !dbg !4518
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !4518
  %conv = sext i32 %0 to i64, !dbg !4518
  %mul = mul i64 %conv, 8, !dbg !4518
  %add = add i64 8, %mul, !dbg !4518
  ret i64 %add, !dbg !4518
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @df_insn_refs_verify(%struct.df_collection_rec* %collection_rec, %struct.basic_block_def* %bb, %struct.rtx_def* %insn, i8 zeroext %abort_if_fail) #0 !dbg !4519 {
entry:
  %retval = alloca i8, align 1
  %collection_rec.addr = alloca %struct.df_collection_rec*, align 8
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %abort_if_fail.addr = alloca i8, align 1
  %ret1 = alloca i8, align 1
  %ret2 = alloca i8, align 1
  %ret3 = alloca i8, align 1
  %ret4 = alloca i8, align 1
  %uid = alloca i32, align 4
  %insn_info = alloca %struct.df_insn_info*, align 8
  store %struct.df_collection_rec* %collection_rec, %struct.df_collection_rec** %collection_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec** %collection_rec.addr, metadata !4522, metadata !DIExpression()), !dbg !4523
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !4524, metadata !DIExpression()), !dbg !4525
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4526, metadata !DIExpression()), !dbg !4527
  store i8 %abort_if_fail, i8* %abort_if_fail.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %abort_if_fail.addr, metadata !4528, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.declare(metadata i8* %ret1, metadata !4530, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.declare(metadata i8* %ret2, metadata !4532, metadata !DIExpression()), !dbg !4533
  call void @llvm.dbg.declare(metadata i8* %ret3, metadata !4534, metadata !DIExpression()), !dbg !4535
  call void @llvm.dbg.declare(metadata i8* %ret4, metadata !4536, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !4538, metadata !DIExpression()), !dbg !4539
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4540
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !4540
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4540
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4540
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4540
  %1 = load i32, i32* %rt_int, align 8, !dbg !4540
  store i32 %1, i32* %uid, align 4, !dbg !4539
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info, metadata !4541, metadata !DIExpression()), !dbg !4542
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !4543
  %insns = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 10, !dbg !4543
  %3 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !4543
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4543
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !4543
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !4543
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 0, !dbg !4543
  %rt_int4 = bitcast %union.rtunion_def* %arrayidx3 to i32*, !dbg !4543
  %5 = load i32, i32* %rt_int4, align 8, !dbg !4543
  %idxprom = sext i32 %5 to i64, !dbg !4543
  %arrayidx5 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %3, i64 %idxprom, !dbg !4543
  %6 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx5, align 8, !dbg !4543
  store %struct.df_insn_info* %6, %struct.df_insn_info** %insn_info, align 8, !dbg !4542
  %7 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4544
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4545
  %9 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4546
  call void @df_insn_refs_collect(%struct.df_collection_rec* %7, %struct.basic_block_def* %8, %struct.df_insn_info* %9), !dbg !4547
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !4548
  %insns6 = getelementptr inbounds %struct.df, %struct.df* %10, i32 0, i32 10, !dbg !4548
  %11 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns6, align 8, !dbg !4548
  %12 = load i32, i32* %uid, align 4, !dbg !4548
  %idxprom7 = zext i32 %12 to i64, !dbg !4548
  %arrayidx8 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %11, i64 %idxprom7, !dbg !4548
  %13 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx8, align 8, !dbg !4548
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %13, i32 0, i32 1, !dbg !4548
  %14 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !4548
  %tobool = icmp ne %union.df_ref_d** %14, null, !dbg !4548
  br i1 %tobool, label %if.end11, label %if.then, !dbg !4550

if.then:                                          ; preds = %entry
  %15 = load i8, i8* %abort_if_fail.addr, align 1, !dbg !4551
  %tobool9 = icmp ne i8 %15, 0, !dbg !4551
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !4554

if.then10:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4512, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !4555
  br label %if.end, !dbg !4555

if.else:                                          ; preds = %if.then
  store i8 0, i8* %retval, align 1, !dbg !4556
  br label %return, !dbg !4556

if.end:                                           ; preds = %if.then10
  br label %if.end11, !dbg !4557

if.end11:                                         ; preds = %if.end, %entry
  %16 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4558
  %def_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %16, i32 0, i32 0, !dbg !4559
  %17 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %def_vec, align 8, !dbg !4559
  %18 = load %struct.df*, %struct.df** @df, align 8, !dbg !4560
  %insns12 = getelementptr inbounds %struct.df, %struct.df* %18, i32 0, i32 10, !dbg !4560
  %19 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns12, align 8, !dbg !4560
  %20 = load i32, i32* %uid, align 4, !dbg !4560
  %idxprom13 = zext i32 %20 to i64, !dbg !4560
  %arrayidx14 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %19, i64 %idxprom13, !dbg !4560
  %21 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx14, align 8, !dbg !4560
  %defs15 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %21, i32 0, i32 1, !dbg !4560
  %22 = load %union.df_ref_d**, %union.df_ref_d*** %defs15, align 8, !dbg !4560
  %23 = load i8, i8* %abort_if_fail.addr, align 1, !dbg !4561
  %call = call zeroext i8 @df_refs_verify(%struct.VEC_df_ref_stack* %17, %union.df_ref_d** %22, i8 zeroext %23), !dbg !4562
  store i8 %call, i8* %ret1, align 1, !dbg !4563
  %24 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4564
  %use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %24, i32 0, i32 1, !dbg !4565
  %25 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %use_vec, align 8, !dbg !4565
  %26 = load %struct.df*, %struct.df** @df, align 8, !dbg !4566
  %insns16 = getelementptr inbounds %struct.df, %struct.df* %26, i32 0, i32 10, !dbg !4566
  %27 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns16, align 8, !dbg !4566
  %28 = load i32, i32* %uid, align 4, !dbg !4566
  %idxprom17 = zext i32 %28 to i64, !dbg !4566
  %arrayidx18 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %27, i64 %idxprom17, !dbg !4566
  %29 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx18, align 8, !dbg !4566
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %29, i32 0, i32 2, !dbg !4566
  %30 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !4566
  %31 = load i8, i8* %abort_if_fail.addr, align 1, !dbg !4567
  %call19 = call zeroext i8 @df_refs_verify(%struct.VEC_df_ref_stack* %25, %union.df_ref_d** %30, i8 zeroext %31), !dbg !4568
  store i8 %call19, i8* %ret2, align 1, !dbg !4569
  %32 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4570
  %eq_use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %32, i32 0, i32 2, !dbg !4571
  %33 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %eq_use_vec, align 8, !dbg !4571
  %34 = load %struct.df*, %struct.df** @df, align 8, !dbg !4572
  %insns20 = getelementptr inbounds %struct.df, %struct.df* %34, i32 0, i32 10, !dbg !4572
  %35 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns20, align 8, !dbg !4572
  %36 = load i32, i32* %uid, align 4, !dbg !4572
  %idxprom21 = zext i32 %36 to i64, !dbg !4572
  %arrayidx22 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %35, i64 %idxprom21, !dbg !4572
  %37 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx22, align 8, !dbg !4572
  %eq_uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %37, i32 0, i32 3, !dbg !4572
  %38 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses, align 8, !dbg !4572
  %39 = load i8, i8* %abort_if_fail.addr, align 1, !dbg !4573
  %call23 = call zeroext i8 @df_refs_verify(%struct.VEC_df_ref_stack* %33, %union.df_ref_d** %38, i8 zeroext %39), !dbg !4574
  store i8 %call23, i8* %ret3, align 1, !dbg !4575
  %40 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4576
  %mw_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %40, i32 0, i32 3, !dbg !4577
  %41 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec, align 8, !dbg !4577
  %42 = load %struct.df*, %struct.df** @df, align 8, !dbg !4578
  %insns24 = getelementptr inbounds %struct.df, %struct.df* %42, i32 0, i32 10, !dbg !4578
  %43 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns24, align 8, !dbg !4578
  %44 = load i32, i32* %uid, align 4, !dbg !4578
  %idxprom25 = zext i32 %44 to i64, !dbg !4578
  %arrayidx26 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %43, i64 %idxprom25, !dbg !4578
  %45 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx26, align 8, !dbg !4578
  %mw_hardregs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %45, i32 0, i32 4, !dbg !4578
  %46 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs, align 8, !dbg !4578
  %47 = load i8, i8* %abort_if_fail.addr, align 1, !dbg !4579
  %call27 = call zeroext i8 @df_mws_verify(%struct.VEC_df_mw_hardreg_ptr_stack* %41, %struct.df_mw_hardreg** %46, i8 zeroext %47), !dbg !4580
  store i8 %call27, i8* %ret4, align 1, !dbg !4581
  %48 = load i8, i8* %ret1, align 1, !dbg !4582
  %conv = zext i8 %48 to i32, !dbg !4582
  %tobool28 = icmp ne i32 %conv, 0, !dbg !4582
  br i1 %tobool28, label %land.lhs.true, label %land.end, !dbg !4583

land.lhs.true:                                    ; preds = %if.end11
  %49 = load i8, i8* %ret2, align 1, !dbg !4584
  %conv29 = zext i8 %49 to i32, !dbg !4584
  %tobool30 = icmp ne i32 %conv29, 0, !dbg !4584
  br i1 %tobool30, label %land.lhs.true31, label %land.end, !dbg !4585

land.lhs.true31:                                  ; preds = %land.lhs.true
  %50 = load i8, i8* %ret3, align 1, !dbg !4586
  %conv32 = zext i8 %50 to i32, !dbg !4586
  %tobool33 = icmp ne i32 %conv32, 0, !dbg !4586
  br i1 %tobool33, label %land.rhs, label %land.end, !dbg !4587

land.rhs:                                         ; preds = %land.lhs.true31
  %51 = load i8, i8* %ret4, align 1, !dbg !4588
  %conv34 = zext i8 %51 to i32, !dbg !4588
  %tobool35 = icmp ne i32 %conv34, 0, !dbg !4587
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true31, %land.lhs.true, %if.end11
  %52 = phi i1 [ false, %land.lhs.true31 ], [ false, %land.lhs.true ], [ false, %if.end11 ], [ %tobool35, %land.rhs ], !dbg !4589
  %land.ext = zext i1 %52 to i32, !dbg !4587
  %conv36 = trunc i32 %land.ext to i8, !dbg !4590
  store i8 %conv36, i8* %retval, align 1, !dbg !4591
  br label %return, !dbg !4591

return:                                           ; preds = %land.end, %if.else
  %53 = load i8, i8* %retval, align 1, !dbg !4592
  ret i8 %53, !dbg !4592
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_free_collection_rec(%struct.df_collection_rec* %collection_rec) #0 !dbg !4593 {
entry:
  %collection_rec.addr = alloca %struct.df_collection_rec*, align 8
  %ix = alloca i32, align 4
  %problem_data = alloca %struct.df_scan_problem_data*, align 8
  %ref = alloca %union.df_ref_d*, align 8
  %mw = alloca %struct.df_mw_hardreg*, align 8
  store %struct.df_collection_rec* %collection_rec, %struct.df_collection_rec** %collection_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec** %collection_rec.addr, metadata !4596, metadata !DIExpression()), !dbg !4597
  call void @llvm.dbg.declare(metadata i32* %ix, metadata !4598, metadata !DIExpression()), !dbg !4599
  call void @llvm.dbg.declare(metadata %struct.df_scan_problem_data** %problem_data, metadata !4600, metadata !DIExpression()), !dbg !4601
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !4602
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !4602
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !4602
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4602
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !4603
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !4603
  %3 = bitcast i8* %2 to %struct.df_scan_problem_data*, !dbg !4604
  store %struct.df_scan_problem_data* %3, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !4601
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref, metadata !4605, metadata !DIExpression()), !dbg !4606
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %mw, metadata !4607, metadata !DIExpression()), !dbg !4608
  store i32 0, i32* %ix, align 4, !dbg !4609
  br label %for.cond, !dbg !4611

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4612
  %def_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %4, i32 0, i32 0, !dbg !4612
  %5 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %def_vec, align 8, !dbg !4612
  %tobool = icmp ne %struct.VEC_df_ref_stack* %5, null, !dbg !4612
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4612

cond.true:                                        ; preds = %for.cond
  %6 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4612
  %def_vec2 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %6, i32 0, i32 0, !dbg !4612
  %7 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %def_vec2, align 8, !dbg !4612
  %base = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %7, i32 0, i32 0, !dbg !4612
  br label %cond.end, !dbg !4612

cond.false:                                       ; preds = %for.cond
  br label %cond.end, !dbg !4612

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_df_ref_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !4612
  %8 = load i32, i32* %ix, align 4, !dbg !4612
  %call = call i32 @VEC_df_ref_base_iterate(%struct.VEC_df_ref_base* %cond, i32 %8, %union.df_ref_d** %ref), !dbg !4612
  %tobool3 = icmp ne i32 %call, 0, !dbg !4614
  br i1 %tobool3, label %for.body, label %for.end, !dbg !4614

for.body:                                         ; preds = %cond.end
  %9 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !4615
  call void @df_free_ref(%union.df_ref_d* %9), !dbg !4616
  br label %for.inc, !dbg !4616

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %ix, align 4, !dbg !4617
  %inc = add i32 %10, 1, !dbg !4617
  store i32 %inc, i32* %ix, align 4, !dbg !4617
  br label %for.cond, !dbg !4618, !llvm.loop !4619

for.end:                                          ; preds = %cond.end
  store i32 0, i32* %ix, align 4, !dbg !4621
  br label %for.cond4, !dbg !4623

for.cond4:                                        ; preds = %for.inc15, %for.end
  %11 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4624
  %use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %11, i32 0, i32 1, !dbg !4624
  %12 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %use_vec, align 8, !dbg !4624
  %tobool5 = icmp ne %struct.VEC_df_ref_stack* %12, null, !dbg !4624
  br i1 %tobool5, label %cond.true6, label %cond.false9, !dbg !4624

cond.true6:                                       ; preds = %for.cond4
  %13 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4624
  %use_vec7 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %13, i32 0, i32 1, !dbg !4624
  %14 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %use_vec7, align 8, !dbg !4624
  %base8 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %14, i32 0, i32 0, !dbg !4624
  br label %cond.end10, !dbg !4624

cond.false9:                                      ; preds = %for.cond4
  br label %cond.end10, !dbg !4624

cond.end10:                                       ; preds = %cond.false9, %cond.true6
  %cond11 = phi %struct.VEC_df_ref_base* [ %base8, %cond.true6 ], [ null, %cond.false9 ], !dbg !4624
  %15 = load i32, i32* %ix, align 4, !dbg !4624
  %call12 = call i32 @VEC_df_ref_base_iterate(%struct.VEC_df_ref_base* %cond11, i32 %15, %union.df_ref_d** %ref), !dbg !4624
  %tobool13 = icmp ne i32 %call12, 0, !dbg !4626
  br i1 %tobool13, label %for.body14, label %for.end17, !dbg !4626

for.body14:                                       ; preds = %cond.end10
  %16 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !4627
  call void @df_free_ref(%union.df_ref_d* %16), !dbg !4628
  br label %for.inc15, !dbg !4628

for.inc15:                                        ; preds = %for.body14
  %17 = load i32, i32* %ix, align 4, !dbg !4629
  %inc16 = add i32 %17, 1, !dbg !4629
  store i32 %inc16, i32* %ix, align 4, !dbg !4629
  br label %for.cond4, !dbg !4630, !llvm.loop !4631

for.end17:                                        ; preds = %cond.end10
  store i32 0, i32* %ix, align 4, !dbg !4633
  br label %for.cond18, !dbg !4635

for.cond18:                                       ; preds = %for.inc29, %for.end17
  %18 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4636
  %eq_use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %18, i32 0, i32 2, !dbg !4636
  %19 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %eq_use_vec, align 8, !dbg !4636
  %tobool19 = icmp ne %struct.VEC_df_ref_stack* %19, null, !dbg !4636
  br i1 %tobool19, label %cond.true20, label %cond.false23, !dbg !4636

cond.true20:                                      ; preds = %for.cond18
  %20 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4636
  %eq_use_vec21 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %20, i32 0, i32 2, !dbg !4636
  %21 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %eq_use_vec21, align 8, !dbg !4636
  %base22 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %21, i32 0, i32 0, !dbg !4636
  br label %cond.end24, !dbg !4636

cond.false23:                                     ; preds = %for.cond18
  br label %cond.end24, !dbg !4636

cond.end24:                                       ; preds = %cond.false23, %cond.true20
  %cond25 = phi %struct.VEC_df_ref_base* [ %base22, %cond.true20 ], [ null, %cond.false23 ], !dbg !4636
  %22 = load i32, i32* %ix, align 4, !dbg !4636
  %call26 = call i32 @VEC_df_ref_base_iterate(%struct.VEC_df_ref_base* %cond25, i32 %22, %union.df_ref_d** %ref), !dbg !4636
  %tobool27 = icmp ne i32 %call26, 0, !dbg !4638
  br i1 %tobool27, label %for.body28, label %for.end31, !dbg !4638

for.body28:                                       ; preds = %cond.end24
  %23 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !4639
  call void @df_free_ref(%union.df_ref_d* %23), !dbg !4640
  br label %for.inc29, !dbg !4640

for.inc29:                                        ; preds = %for.body28
  %24 = load i32, i32* %ix, align 4, !dbg !4641
  %inc30 = add i32 %24, 1, !dbg !4641
  store i32 %inc30, i32* %ix, align 4, !dbg !4641
  br label %for.cond18, !dbg !4642, !llvm.loop !4643

for.end31:                                        ; preds = %cond.end24
  store i32 0, i32* %ix, align 4, !dbg !4645
  br label %for.cond32, !dbg !4647

for.cond32:                                       ; preds = %for.inc43, %for.end31
  %25 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4648
  %mw_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %25, i32 0, i32 3, !dbg !4648
  %26 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec, align 8, !dbg !4648
  %tobool33 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %26, null, !dbg !4648
  br i1 %tobool33, label %cond.true34, label %cond.false37, !dbg !4648

cond.true34:                                      ; preds = %for.cond32
  %27 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4648
  %mw_vec35 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %27, i32 0, i32 3, !dbg !4648
  %28 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec35, align 8, !dbg !4648
  %base36 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %28, i32 0, i32 0, !dbg !4648
  br label %cond.end38, !dbg !4648

cond.false37:                                     ; preds = %for.cond32
  br label %cond.end38, !dbg !4648

cond.end38:                                       ; preds = %cond.false37, %cond.true34
  %cond39 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base36, %cond.true34 ], [ null, %cond.false37 ], !dbg !4648
  %29 = load i32, i32* %ix, align 4, !dbg !4648
  %call40 = call i32 @VEC_df_mw_hardreg_ptr_base_iterate(%struct.VEC_df_mw_hardreg_ptr_base* %cond39, i32 %29, %struct.df_mw_hardreg** %mw), !dbg !4648
  %tobool41 = icmp ne i32 %call40, 0, !dbg !4650
  br i1 %tobool41, label %for.body42, label %for.end45, !dbg !4650

for.body42:                                       ; preds = %cond.end38
  %30 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !4651
  %mw_reg_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %30, i32 0, i32 6, !dbg !4652
  %31 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %mw_reg_pool, align 8, !dbg !4652
  %32 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw, align 8, !dbg !4653
  %33 = bitcast %struct.df_mw_hardreg* %32 to i8*, !dbg !4653
  call void @pool_free(%struct.alloc_pool_def* %31, i8* %33), !dbg !4654
  br label %for.inc43, !dbg !4654

for.inc43:                                        ; preds = %for.body42
  %34 = load i32, i32* %ix, align 4, !dbg !4655
  %inc44 = add i32 %34, 1, !dbg !4655
  store i32 %inc44, i32* %ix, align 4, !dbg !4655
  br label %for.cond32, !dbg !4656, !llvm.loop !4657

for.end45:                                        ; preds = %cond.end38
  %35 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4659
  %def_vec46 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %35, i32 0, i32 0, !dbg !4659
  call void @VEC_df_ref_stack_free(%struct.VEC_df_ref_stack** %def_vec46), !dbg !4659
  %36 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4660
  %use_vec47 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %36, i32 0, i32 1, !dbg !4660
  call void @VEC_df_ref_stack_free(%struct.VEC_df_ref_stack** %use_vec47), !dbg !4660
  %37 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4661
  %eq_use_vec48 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %37, i32 0, i32 2, !dbg !4661
  call void @VEC_df_ref_stack_free(%struct.VEC_df_ref_stack** %eq_use_vec48), !dbg !4661
  %38 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4662
  %mw_vec49 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %38, i32 0, i32 3, !dbg !4662
  call void @VEC_df_mw_hardreg_ptr_stack_free(%struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec49), !dbg !4662
  ret void, !dbg !4663
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_insn_refs_collect(%struct.df_collection_rec* %collection_rec, %struct.basic_block_def* %bb, %struct.df_insn_info* %insn_info) #0 !dbg !4664 {
entry:
  %collection_rec.addr = alloca %struct.df_collection_rec*, align 8
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %insn_info.addr = alloca %struct.df_insn_info*, align 8
  %note = alloca %struct.rtx_def*, align 8
  %is_cond_exec = alloca i8, align 1
  store %struct.df_collection_rec* %collection_rec, %struct.df_collection_rec** %collection_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec** %collection_rec.addr, metadata !4667, metadata !DIExpression()), !dbg !4668
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !4669, metadata !DIExpression()), !dbg !4670
  store %struct.df_insn_info* %insn_info, %struct.df_insn_info** %insn_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info.addr, metadata !4671, metadata !DIExpression()), !dbg !4672
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note, metadata !4673, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.declare(metadata i8* %is_cond_exec, metadata !4675, metadata !DIExpression()), !dbg !4676
  %0 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !4677
  %insn = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %0, i32 0, i32 0, !dbg !4677
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4677
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i32 0, i32 1, !dbg !4677
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4677
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !4677
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4677
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4677
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !4677
  %bf.load = load i32, i32* %3, align 8, !dbg !4677
  %bf.clear = and i32 %bf.load, 65535, !dbg !4677
  %cmp = icmp eq i32 %bf.clear, 14, !dbg !4678
  %conv = zext i1 %cmp to i32, !dbg !4678
  %conv1 = trunc i32 %conv to i8, !dbg !4679
  store i8 %conv1, i8* %is_cond_exec, align 1, !dbg !4676
  %4 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4680
  %def_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %4, i32 0, i32 0, !dbg !4680
  %5 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %def_vec, align 8, !dbg !4680
  %tobool = icmp ne %struct.VEC_df_ref_stack* %5, null, !dbg !4680
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4680

cond.true:                                        ; preds = %entry
  %6 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4680
  %def_vec2 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %6, i32 0, i32 0, !dbg !4680
  %7 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %def_vec2, align 8, !dbg !4680
  %base = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %7, i32 0, i32 0, !dbg !4680
  br label %cond.end, !dbg !4680

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4680

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_df_ref_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !4680
  call void @VEC_df_ref_base_truncate(%struct.VEC_df_ref_base* %cond, i32 0), !dbg !4680
  %8 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4681
  %use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %8, i32 0, i32 1, !dbg !4681
  %9 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %use_vec, align 8, !dbg !4681
  %tobool3 = icmp ne %struct.VEC_df_ref_stack* %9, null, !dbg !4681
  br i1 %tobool3, label %cond.true4, label %cond.false7, !dbg !4681

cond.true4:                                       ; preds = %cond.end
  %10 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4681
  %use_vec5 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %10, i32 0, i32 1, !dbg !4681
  %11 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %use_vec5, align 8, !dbg !4681
  %base6 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %11, i32 0, i32 0, !dbg !4681
  br label %cond.end8, !dbg !4681

cond.false7:                                      ; preds = %cond.end
  br label %cond.end8, !dbg !4681

cond.end8:                                        ; preds = %cond.false7, %cond.true4
  %cond9 = phi %struct.VEC_df_ref_base* [ %base6, %cond.true4 ], [ null, %cond.false7 ], !dbg !4681
  call void @VEC_df_ref_base_truncate(%struct.VEC_df_ref_base* %cond9, i32 0), !dbg !4681
  %12 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4682
  %eq_use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %12, i32 0, i32 2, !dbg !4682
  %13 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %eq_use_vec, align 8, !dbg !4682
  %tobool10 = icmp ne %struct.VEC_df_ref_stack* %13, null, !dbg !4682
  br i1 %tobool10, label %cond.true11, label %cond.false14, !dbg !4682

cond.true11:                                      ; preds = %cond.end8
  %14 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4682
  %eq_use_vec12 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %14, i32 0, i32 2, !dbg !4682
  %15 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %eq_use_vec12, align 8, !dbg !4682
  %base13 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %15, i32 0, i32 0, !dbg !4682
  br label %cond.end15, !dbg !4682

cond.false14:                                     ; preds = %cond.end8
  br label %cond.end15, !dbg !4682

cond.end15:                                       ; preds = %cond.false14, %cond.true11
  %cond16 = phi %struct.VEC_df_ref_base* [ %base13, %cond.true11 ], [ null, %cond.false14 ], !dbg !4682
  call void @VEC_df_ref_base_truncate(%struct.VEC_df_ref_base* %cond16, i32 0), !dbg !4682
  %16 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4683
  %mw_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %16, i32 0, i32 3, !dbg !4683
  %17 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec, align 8, !dbg !4683
  %tobool17 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %17, null, !dbg !4683
  br i1 %tobool17, label %cond.true18, label %cond.false21, !dbg !4683

cond.true18:                                      ; preds = %cond.end15
  %18 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4683
  %mw_vec19 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %18, i32 0, i32 3, !dbg !4683
  %19 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec19, align 8, !dbg !4683
  %base20 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %19, i32 0, i32 0, !dbg !4683
  br label %cond.end22, !dbg !4683

cond.false21:                                     ; preds = %cond.end15
  br label %cond.end22, !dbg !4683

cond.end22:                                       ; preds = %cond.false21, %cond.true18
  %cond23 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base20, %cond.true18 ], [ null, %cond.false21 ], !dbg !4683
  call void @VEC_df_mw_hardreg_ptr_base_truncate(%struct.VEC_df_mw_hardreg_ptr_base* %cond23, i32 0), !dbg !4683
  %20 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4684
  %21 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !4685
  %insn24 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %21, i32 0, i32 0, !dbg !4685
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn24, align 8, !dbg !4685
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !4685
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !4685
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 5, !dbg !4685
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !4685
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !4685
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4686
  %25 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !4687
  call void @df_defs_record(%struct.df_collection_rec* %20, %struct.rtx_def* %23, %struct.basic_block_def* %24, %struct.df_insn_info* %25, i32 0), !dbg !4688
  %26 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !4689
  %insn29 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %26, i32 0, i32 0, !dbg !4689
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn29, align 8, !dbg !4689
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !4689
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !4689
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 7, !dbg !4689
  %rt_rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !4689
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !4689
  store %struct.rtx_def* %28, %struct.rtx_def** %note, align 8, !dbg !4691
  br label %for.cond, !dbg !4692

for.cond:                                         ; preds = %for.inc, %cond.end22
  %29 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4693
  %tobool34 = icmp ne %struct.rtx_def* %29, null, !dbg !4695
  br i1 %tobool34, label %for.body, label %for.end, !dbg !4695

for.body:                                         ; preds = %for.cond
  %30 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4696
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !4696
  %bf.load35 = load i32, i32* %31, align 8, !dbg !4696
  %bf.lshr = lshr i32 %bf.load35, 16, !dbg !4696
  %bf.clear36 = and i32 %bf.lshr, 255, !dbg !4696
  switch i32 %bf.clear36, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 28, label %sw.bb41
  ], !dbg !4698

sw.bb:                                            ; preds = %for.body, %for.body
  %32 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4699
  %33 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4701
  %u37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !4701
  %fld38 = bitcast %union.u* %u37 to [1 x %union.rtunion_def]*, !dbg !4701
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i64 0, i64 0, !dbg !4701
  %rt_rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**, !dbg !4701
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4702
  %35 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !4703
  call void @df_uses_record(i32 2, %struct.df_collection_rec* %32, %struct.rtx_def** %rt_rtx40, i32 1, %struct.basic_block_def* %34, %struct.df_insn_info* %35, i32 4, i32 -1, i32 -1, i32 0), !dbg !4704
  br label %sw.epilog, !dbg !4705

sw.bb41:                                          ; preds = %for.body
  %36 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4706
  %37 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !4707
  %arrayidx42 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %37, i64 20, !dbg !4707
  %38 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx42, align 8, !dbg !4707
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4708
  %40 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !4709
  call void @df_ref_record(i32 0, %struct.df_collection_rec* %36, %struct.rtx_def* %38, %struct.rtx_def** null, %struct.basic_block_def* %39, %struct.df_insn_info* %40, i32 1, i32 0, i32 -1, i32 -1, i32 0), !dbg !4710
  %41 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4711
  %42 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !4712
  %arrayidx43 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %42, i64 6, !dbg !4712
  %43 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx43, align 8, !dbg !4712
  %44 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4713
  %45 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !4714
  call void @df_ref_record(i32 0, %struct.df_collection_rec* %41, %struct.rtx_def* %43, %struct.rtx_def** null, %struct.basic_block_def* %44, %struct.df_insn_info* %45, i32 1, i32 0, i32 -1, i32 -1, i32 0), !dbg !4715
  br label %sw.epilog, !dbg !4716

sw.default:                                       ; preds = %for.body
  br label %sw.epilog, !dbg !4717

sw.epilog:                                        ; preds = %sw.default, %sw.bb41, %sw.bb
  br label %for.inc, !dbg !4718

for.inc:                                          ; preds = %sw.epilog
  %46 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4719
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !4719
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !4719
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 1, !dbg !4719
  %rt_rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**, !dbg !4719
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx47, align 8, !dbg !4719
  store %struct.rtx_def* %47, %struct.rtx_def** %note, align 8, !dbg !4720
  br label %for.cond, !dbg !4721, !llvm.loop !4722

for.end:                                          ; preds = %for.cond
  %48 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !4724
  %insn48 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %48, i32 0, i32 0, !dbg !4724
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn48, align 8, !dbg !4724
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !4724
  %bf.load49 = load i32, i32* %50, align 8, !dbg !4724
  %bf.clear50 = and i32 %bf.load49, 65535, !dbg !4724
  %cmp51 = icmp eq i32 %bf.clear50, 10, !dbg !4724
  br i1 %cmp51, label %if.then, label %if.end, !dbg !4726

if.then:                                          ; preds = %for.end
  %51 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4727
  %52 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4728
  %53 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !4729
  %54 = load i8, i8* %is_cond_exec, align 1, !dbg !4730
  %conv53 = zext i8 %54 to i32, !dbg !4731
  %tobool54 = icmp ne i32 %conv53, 0, !dbg !4731
  %55 = zext i1 %tobool54 to i64, !dbg !4731
  %cond55 = select i1 %tobool54, i32 1, i32 0, !dbg !4731
  call void @df_get_call_refs(%struct.df_collection_rec* %51, %struct.basic_block_def* %52, %struct.df_insn_info* %53, i32 %cond55), !dbg !4732
  br label %if.end, !dbg !4732

if.end:                                           ; preds = %if.then, %for.end
  %56 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4733
  %57 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !4734
  %insn56 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %57, i32 0, i32 0, !dbg !4734
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn56, align 8, !dbg !4734
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1, !dbg !4734
  %fld58 = bitcast %union.u* %u57 to [1 x %union.rtunion_def]*, !dbg !4734
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i64 0, i64 5, !dbg !4734
  %rt_rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**, !dbg !4734
  %59 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4735
  %60 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !4736
  call void @df_uses_record(i32 2, %struct.df_collection_rec* %56, %struct.rtx_def** %rt_rtx60, i32 1, %struct.basic_block_def* %59, %struct.df_insn_info* %60, i32 0, i32 -1, i32 -1, i32 0), !dbg !4737
  %61 = load i8, i8* %is_cond_exec, align 1, !dbg !4738
  %tobool61 = icmp ne i8 %61, 0, !dbg !4738
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !4740

if.then62:                                        ; preds = %if.end
  %62 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4741
  call void @df_get_conditional_uses(%struct.df_collection_rec* %62), !dbg !4742
  br label %if.end63, !dbg !4742

if.end63:                                         ; preds = %if.then62, %if.end
  %63 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4743
  call void @df_canonize_collection_rec(%struct.df_collection_rec* %63), !dbg !4744
  ret void, !dbg !4745
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_refs_add_to_chains(%struct.df_collection_rec* %collection_rec, %struct.basic_block_def* %bb, %struct.rtx_def* %insn) #0 !dbg !4746 {
entry:
  %collection_rec.addr = alloca %struct.df_collection_rec*, align 8
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %insn_rec = alloca %struct.df_insn_info*, align 8
  %bb_info = alloca %struct.df_scan_bb_info*, align 8
  store %struct.df_collection_rec* %collection_rec, %struct.df_collection_rec** %collection_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec** %collection_rec.addr, metadata !4749, metadata !DIExpression()), !dbg !4750
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !4751, metadata !DIExpression()), !dbg !4752
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4753, metadata !DIExpression()), !dbg !4754
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4755
  %tobool = icmp ne %struct.rtx_def* %0, null, !dbg !4755
  br i1 %tobool, label %if.then, label %if.else, !dbg !4757

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_rec, metadata !4758, metadata !DIExpression()), !dbg !4760
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !4761
  %insns = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 10, !dbg !4761
  %2 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !4761
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4761
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !4761
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4761
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4761
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4761
  %4 = load i32, i32* %rt_int, align 8, !dbg !4761
  %idxprom = sext i32 %4 to i64, !dbg !4761
  %arrayidx1 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %2, i64 %idxprom, !dbg !4761
  %5 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx1, align 8, !dbg !4761
  store %struct.df_insn_info* %5, %struct.df_insn_info** %insn_rec, align 8, !dbg !4760
  %6 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4762
  %def_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %6, i32 0, i32 0, !dbg !4764
  %7 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %def_vec, align 8, !dbg !4764
  %tobool2 = icmp ne %struct.VEC_df_ref_stack* %7, null, !dbg !4762
  br i1 %tobool2, label %if.then3, label %if.end11, !dbg !4765

if.then3:                                         ; preds = %if.then
  br label %do.body, !dbg !4766

do.body:                                          ; preds = %if.then3
  %8 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4768
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %8, i32 0, i32 1, !dbg !4768
  %9 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !4768
  %tobool4 = icmp ne %union.df_ref_d** %9, null, !dbg !4768
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !4768

land.lhs.true:                                    ; preds = %do.body
  %10 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4768
  %defs5 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %10, i32 0, i32 1, !dbg !4768
  %11 = load %union.df_ref_d**, %union.df_ref_d*** %defs5, align 8, !dbg !4768
  %12 = load %union.df_ref_d*, %union.df_ref_d** %11, align 8, !dbg !4768
  %tobool6 = icmp ne %union.df_ref_d* %12, null, !dbg !4768
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !4771

if.then7:                                         ; preds = %land.lhs.true
  %13 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4768
  %defs8 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %13, i32 0, i32 1, !dbg !4768
  %14 = load %union.df_ref_d**, %union.df_ref_d*** %defs8, align 8, !dbg !4768
  %15 = bitcast %union.df_ref_d** %14 to i8*, !dbg !4768
  call void @free(i8* %15), !dbg !4768
  br label %if.end, !dbg !4768

if.end:                                           ; preds = %if.then7, %land.lhs.true, %do.body
  br label %do.end, !dbg !4771

do.end:                                           ; preds = %if.end
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4772
  %17 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4773
  %def_vec9 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %17, i32 0, i32 0, !dbg !4774
  %18 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %def_vec9, align 8, !dbg !4774
  %19 = load %struct.df*, %struct.df** @df, align 8, !dbg !4775
  %def_regs = getelementptr inbounds %struct.df, %struct.df* %19, i32 0, i32 5, !dbg !4776
  %20 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs, align 8, !dbg !4776
  %21 = load %struct.df*, %struct.df** @df, align 8, !dbg !4777
  %def_info = getelementptr inbounds %struct.df, %struct.df* %21, i32 0, i32 3, !dbg !4778
  %call = call %union.df_ref_d** @df_install_refs(%struct.basic_block_def* %16, %struct.VEC_df_ref_stack* %18, %struct.df_reg_info** %20, %struct.df_ref_info* %def_info, i8 zeroext 0), !dbg !4779
  %22 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4780
  %defs10 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %22, i32 0, i32 1, !dbg !4781
  store %union.df_ref_d** %call, %union.df_ref_d*** %defs10, align 8, !dbg !4782
  br label %if.end11, !dbg !4783

if.end11:                                         ; preds = %do.end, %if.then
  %23 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4784
  %use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %23, i32 0, i32 1, !dbg !4786
  %24 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %use_vec, align 8, !dbg !4786
  %tobool12 = icmp ne %struct.VEC_df_ref_stack* %24, null, !dbg !4784
  br i1 %tobool12, label %if.then13, label %if.end26, !dbg !4787

if.then13:                                        ; preds = %if.end11
  br label %do.body14, !dbg !4788

do.body14:                                        ; preds = %if.then13
  %25 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4790
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %25, i32 0, i32 2, !dbg !4790
  %26 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !4790
  %tobool15 = icmp ne %union.df_ref_d** %26, null, !dbg !4790
  br i1 %tobool15, label %land.lhs.true16, label %if.end21, !dbg !4790

land.lhs.true16:                                  ; preds = %do.body14
  %27 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4790
  %uses17 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %27, i32 0, i32 2, !dbg !4790
  %28 = load %union.df_ref_d**, %union.df_ref_d*** %uses17, align 8, !dbg !4790
  %29 = load %union.df_ref_d*, %union.df_ref_d** %28, align 8, !dbg !4790
  %tobool18 = icmp ne %union.df_ref_d* %29, null, !dbg !4790
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !4793

if.then19:                                        ; preds = %land.lhs.true16
  %30 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4790
  %uses20 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %30, i32 0, i32 2, !dbg !4790
  %31 = load %union.df_ref_d**, %union.df_ref_d*** %uses20, align 8, !dbg !4790
  %32 = bitcast %union.df_ref_d** %31 to i8*, !dbg !4790
  call void @free(i8* %32), !dbg !4790
  br label %if.end21, !dbg !4790

if.end21:                                         ; preds = %if.then19, %land.lhs.true16, %do.body14
  br label %do.end22, !dbg !4793

do.end22:                                         ; preds = %if.end21
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4794
  %34 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4795
  %use_vec23 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %34, i32 0, i32 1, !dbg !4796
  %35 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %use_vec23, align 8, !dbg !4796
  %36 = load %struct.df*, %struct.df** @df, align 8, !dbg !4797
  %use_regs = getelementptr inbounds %struct.df, %struct.df* %36, i32 0, i32 6, !dbg !4798
  %37 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs, align 8, !dbg !4798
  %38 = load %struct.df*, %struct.df** @df, align 8, !dbg !4799
  %use_info = getelementptr inbounds %struct.df, %struct.df* %38, i32 0, i32 4, !dbg !4800
  %call24 = call %union.df_ref_d** @df_install_refs(%struct.basic_block_def* %33, %struct.VEC_df_ref_stack* %35, %struct.df_reg_info** %37, %struct.df_ref_info* %use_info, i8 zeroext 0), !dbg !4801
  %39 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4802
  %uses25 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %39, i32 0, i32 2, !dbg !4803
  store %union.df_ref_d** %call24, %union.df_ref_d*** %uses25, align 8, !dbg !4804
  br label %if.end26, !dbg !4805

if.end26:                                         ; preds = %do.end22, %if.end11
  %40 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4806
  %eq_use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %40, i32 0, i32 2, !dbg !4808
  %41 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %eq_use_vec, align 8, !dbg !4808
  %tobool27 = icmp ne %struct.VEC_df_ref_stack* %41, null, !dbg !4806
  br i1 %tobool27, label %if.then28, label %if.end42, !dbg !4809

if.then28:                                        ; preds = %if.end26
  br label %do.body29, !dbg !4810

do.body29:                                        ; preds = %if.then28
  %42 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4812
  %eq_uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %42, i32 0, i32 3, !dbg !4812
  %43 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses, align 8, !dbg !4812
  %tobool30 = icmp ne %union.df_ref_d** %43, null, !dbg !4812
  br i1 %tobool30, label %land.lhs.true31, label %if.end36, !dbg !4812

land.lhs.true31:                                  ; preds = %do.body29
  %44 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4812
  %eq_uses32 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %44, i32 0, i32 3, !dbg !4812
  %45 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses32, align 8, !dbg !4812
  %46 = load %union.df_ref_d*, %union.df_ref_d** %45, align 8, !dbg !4812
  %tobool33 = icmp ne %union.df_ref_d* %46, null, !dbg !4812
  br i1 %tobool33, label %if.then34, label %if.end36, !dbg !4815

if.then34:                                        ; preds = %land.lhs.true31
  %47 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4812
  %eq_uses35 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %47, i32 0, i32 3, !dbg !4812
  %48 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses35, align 8, !dbg !4812
  %49 = bitcast %union.df_ref_d** %48 to i8*, !dbg !4812
  call void @free(i8* %49), !dbg !4812
  br label %if.end36, !dbg !4812

if.end36:                                         ; preds = %if.then34, %land.lhs.true31, %do.body29
  br label %do.end37, !dbg !4815

do.end37:                                         ; preds = %if.end36
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4816
  %51 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4817
  %eq_use_vec38 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %51, i32 0, i32 2, !dbg !4818
  %52 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %eq_use_vec38, align 8, !dbg !4818
  %53 = load %struct.df*, %struct.df** @df, align 8, !dbg !4819
  %eq_use_regs = getelementptr inbounds %struct.df, %struct.df* %53, i32 0, i32 7, !dbg !4820
  %54 = load %struct.df_reg_info**, %struct.df_reg_info*** %eq_use_regs, align 8, !dbg !4820
  %55 = load %struct.df*, %struct.df** @df, align 8, !dbg !4821
  %use_info39 = getelementptr inbounds %struct.df, %struct.df* %55, i32 0, i32 4, !dbg !4822
  %call40 = call %union.df_ref_d** @df_install_refs(%struct.basic_block_def* %50, %struct.VEC_df_ref_stack* %52, %struct.df_reg_info** %54, %struct.df_ref_info* %use_info39, i8 zeroext 1), !dbg !4823
  %56 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4824
  %eq_uses41 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %56, i32 0, i32 3, !dbg !4825
  store %union.df_ref_d** %call40, %union.df_ref_d*** %eq_uses41, align 8, !dbg !4826
  br label %if.end42, !dbg !4827

if.end42:                                         ; preds = %do.end37, %if.end26
  %57 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4828
  %mw_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %57, i32 0, i32 3, !dbg !4830
  %58 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec, align 8, !dbg !4830
  %tobool43 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %58, null, !dbg !4828
  br i1 %tobool43, label %if.then44, label %if.end57, !dbg !4831

if.then44:                                        ; preds = %if.end42
  br label %do.body45, !dbg !4832

do.body45:                                        ; preds = %if.then44
  %59 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4834
  %mw_hardregs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %59, i32 0, i32 4, !dbg !4834
  %60 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs, align 8, !dbg !4834
  %tobool46 = icmp ne %struct.df_mw_hardreg** %60, null, !dbg !4834
  br i1 %tobool46, label %land.lhs.true47, label %if.end52, !dbg !4834

land.lhs.true47:                                  ; preds = %do.body45
  %61 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4834
  %mw_hardregs48 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %61, i32 0, i32 4, !dbg !4834
  %62 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs48, align 8, !dbg !4834
  %63 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %62, align 8, !dbg !4834
  %tobool49 = icmp ne %struct.df_mw_hardreg* %63, null, !dbg !4834
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !4837

if.then50:                                        ; preds = %land.lhs.true47
  %64 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4834
  %mw_hardregs51 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %64, i32 0, i32 4, !dbg !4834
  %65 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs51, align 8, !dbg !4834
  %66 = bitcast %struct.df_mw_hardreg** %65 to i8*, !dbg !4834
  call void @free(i8* %66), !dbg !4834
  br label %if.end52, !dbg !4834

if.end52:                                         ; preds = %if.then50, %land.lhs.true47, %do.body45
  br label %do.end53, !dbg !4837

do.end53:                                         ; preds = %if.end52
  %67 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4838
  %mw_vec54 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %67, i32 0, i32 3, !dbg !4839
  %68 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec54, align 8, !dbg !4839
  %call55 = call %struct.df_mw_hardreg** @df_install_mws(%struct.VEC_df_mw_hardreg_ptr_stack* %68), !dbg !4840
  %69 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_rec, align 8, !dbg !4841
  %mw_hardregs56 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %69, i32 0, i32 4, !dbg !4842
  store %struct.df_mw_hardreg** %call55, %struct.df_mw_hardreg*** %mw_hardregs56, align 8, !dbg !4843
  br label %if.end57, !dbg !4844

if.end57:                                         ; preds = %do.end53, %if.end42
  br label %if.end87, !dbg !4845

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.df_scan_bb_info** %bb_info, metadata !4846, metadata !DIExpression()), !dbg !4848
  %70 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4849
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %70, i32 0, i32 9, !dbg !4850
  %71 = load i32, i32* %index, align 8, !dbg !4850
  %call58 = call %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %71), !dbg !4851
  store %struct.df_scan_bb_info* %call58, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !4848
  br label %do.body59, !dbg !4852

do.body59:                                        ; preds = %if.else
  %72 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !4853
  %artificial_defs = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %72, i32 0, i32 0, !dbg !4853
  %73 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_defs, align 8, !dbg !4853
  %tobool60 = icmp ne %union.df_ref_d** %73, null, !dbg !4853
  br i1 %tobool60, label %land.lhs.true61, label %if.end66, !dbg !4853

land.lhs.true61:                                  ; preds = %do.body59
  %74 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !4853
  %artificial_defs62 = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %74, i32 0, i32 0, !dbg !4853
  %75 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_defs62, align 8, !dbg !4853
  %76 = load %union.df_ref_d*, %union.df_ref_d** %75, align 8, !dbg !4853
  %tobool63 = icmp ne %union.df_ref_d* %76, null, !dbg !4853
  br i1 %tobool63, label %if.then64, label %if.end66, !dbg !4856

if.then64:                                        ; preds = %land.lhs.true61
  %77 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !4853
  %artificial_defs65 = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %77, i32 0, i32 0, !dbg !4853
  %78 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_defs65, align 8, !dbg !4853
  %79 = bitcast %union.df_ref_d** %78 to i8*, !dbg !4853
  call void @free(i8* %79), !dbg !4853
  br label %if.end66, !dbg !4853

if.end66:                                         ; preds = %if.then64, %land.lhs.true61, %do.body59
  br label %do.end67, !dbg !4856

do.end67:                                         ; preds = %if.end66
  %80 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4857
  %81 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4858
  %def_vec68 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %81, i32 0, i32 0, !dbg !4859
  %82 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %def_vec68, align 8, !dbg !4859
  %83 = load %struct.df*, %struct.df** @df, align 8, !dbg !4860
  %def_regs69 = getelementptr inbounds %struct.df, %struct.df* %83, i32 0, i32 5, !dbg !4861
  %84 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs69, align 8, !dbg !4861
  %85 = load %struct.df*, %struct.df** @df, align 8, !dbg !4862
  %def_info70 = getelementptr inbounds %struct.df, %struct.df* %85, i32 0, i32 3, !dbg !4863
  %call71 = call %union.df_ref_d** @df_install_refs(%struct.basic_block_def* %80, %struct.VEC_df_ref_stack* %82, %struct.df_reg_info** %84, %struct.df_ref_info* %def_info70, i8 zeroext 0), !dbg !4864
  %86 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !4865
  %artificial_defs72 = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %86, i32 0, i32 0, !dbg !4866
  store %union.df_ref_d** %call71, %union.df_ref_d*** %artificial_defs72, align 8, !dbg !4867
  br label %do.body73, !dbg !4868

do.body73:                                        ; preds = %do.end67
  %87 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !4869
  %artificial_uses = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %87, i32 0, i32 1, !dbg !4869
  %88 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_uses, align 8, !dbg !4869
  %tobool74 = icmp ne %union.df_ref_d** %88, null, !dbg !4869
  br i1 %tobool74, label %land.lhs.true75, label %if.end80, !dbg !4869

land.lhs.true75:                                  ; preds = %do.body73
  %89 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !4869
  %artificial_uses76 = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %89, i32 0, i32 1, !dbg !4869
  %90 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_uses76, align 8, !dbg !4869
  %91 = load %union.df_ref_d*, %union.df_ref_d** %90, align 8, !dbg !4869
  %tobool77 = icmp ne %union.df_ref_d* %91, null, !dbg !4869
  br i1 %tobool77, label %if.then78, label %if.end80, !dbg !4872

if.then78:                                        ; preds = %land.lhs.true75
  %92 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !4869
  %artificial_uses79 = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %92, i32 0, i32 1, !dbg !4869
  %93 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_uses79, align 8, !dbg !4869
  %94 = bitcast %union.df_ref_d** %93 to i8*, !dbg !4869
  call void @free(i8* %94), !dbg !4869
  br label %if.end80, !dbg !4869

if.end80:                                         ; preds = %if.then78, %land.lhs.true75, %do.body73
  br label %do.end81, !dbg !4872

do.end81:                                         ; preds = %if.end80
  %95 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4873
  %96 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !4874
  %use_vec82 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %96, i32 0, i32 1, !dbg !4875
  %97 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %use_vec82, align 8, !dbg !4875
  %98 = load %struct.df*, %struct.df** @df, align 8, !dbg !4876
  %use_regs83 = getelementptr inbounds %struct.df, %struct.df* %98, i32 0, i32 6, !dbg !4877
  %99 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs83, align 8, !dbg !4877
  %100 = load %struct.df*, %struct.df** @df, align 8, !dbg !4878
  %use_info84 = getelementptr inbounds %struct.df, %struct.df* %100, i32 0, i32 4, !dbg !4879
  %call85 = call %union.df_ref_d** @df_install_refs(%struct.basic_block_def* %95, %struct.VEC_df_ref_stack* %97, %struct.df_reg_info** %99, %struct.df_ref_info* %use_info84, i8 zeroext 0), !dbg !4880
  %101 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !4881
  %artificial_uses86 = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %101, i32 0, i32 1, !dbg !4882
  store %union.df_ref_d** %call85, %union.df_ref_d*** %artificial_uses86, align 8, !dbg !4883
  br label %if.end87

if.end87:                                         ; preds = %do.end81, %if.end57
  ret void, !dbg !4884
}

declare dso_local void @df_set_bb_dirty_nonlr(%struct.basic_block_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_df_ref_stack_free(%struct.VEC_df_ref_stack** %vec_) #0 !dbg !4885 {
entry:
  %vec_.addr = alloca %struct.VEC_df_ref_stack**, align 8
  store %struct.VEC_df_ref_stack** %vec_, %struct.VEC_df_ref_stack*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_ref_stack*** %vec_.addr, metadata !4889, metadata !DIExpression()), !dbg !4890
  %0 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %vec_.addr, align 8, !dbg !4891
  %1 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %0, align 8, !dbg !4891
  %tobool = icmp ne %struct.VEC_df_ref_stack* %1, null, !dbg !4891
  br i1 %tobool, label %if.then, label %if.end, !dbg !4890

if.then:                                          ; preds = %entry
  %2 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %vec_.addr, align 8, !dbg !4891
  %3 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %2, align 8, !dbg !4891
  %4 = bitcast %struct.VEC_df_ref_stack* %3 to i8*, !dbg !4891
  call void @vec_stack_free(i8* %4), !dbg !4891
  br label %if.end, !dbg !4891

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %vec_.addr, align 8, !dbg !4890
  store %struct.VEC_df_ref_stack* null, %struct.VEC_df_ref_stack** %5, align 8, !dbg !4890
  ret void, !dbg !4890
}

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_df_mw_hardreg_ptr_stack_free(%struct.VEC_df_mw_hardreg_ptr_stack** %vec_) #0 !dbg !4893 {
entry:
  %vec_.addr = alloca %struct.VEC_df_mw_hardreg_ptr_stack**, align 8
  store %struct.VEC_df_mw_hardreg_ptr_stack** %vec_, %struct.VEC_df_mw_hardreg_ptr_stack*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_mw_hardreg_ptr_stack*** %vec_.addr, metadata !4897, metadata !DIExpression()), !dbg !4898
  %0 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %vec_.addr, align 8, !dbg !4899
  %1 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %0, align 8, !dbg !4899
  %tobool = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %1, null, !dbg !4899
  br i1 %tobool, label %if.then, label %if.end, !dbg !4898

if.then:                                          ; preds = %entry
  %2 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %vec_.addr, align 8, !dbg !4899
  %3 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %2, align 8, !dbg !4899
  %4 = bitcast %struct.VEC_df_mw_hardreg_ptr_stack* %3 to i8*, !dbg !4899
  call void @vec_stack_free(i8* %4), !dbg !4899
  br label %if.end, !dbg !4899

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %vec_.addr, align 8, !dbg !4898
  store %struct.VEC_df_mw_hardreg_ptr_stack* null, %struct.VEC_df_mw_hardreg_ptr_stack** %5, align 8, !dbg !4898
  ret void, !dbg !4898
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @df_insn_rescan_debug_internal(%struct.rtx_def* %insn) #0 !dbg !4901 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %uid = alloca i32, align 4
  %insn_info = alloca %struct.df_insn_info*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4902, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !4904, metadata !DIExpression()), !dbg !4905
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4906
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !4906
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4906
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4906
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4906
  %1 = load i32, i32* %rt_int, align 8, !dbg !4906
  store i32 %1, i32* %uid, align 4, !dbg !4905
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info, metadata !4907, metadata !DIExpression()), !dbg !4908
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4909
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !4909
  %bf.load = load i32, i32* %3, align 8, !dbg !4909
  %bf.clear = and i32 %bf.load, 65535, !dbg !4909
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !4909
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !4909

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4909
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !4909
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !4909
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 5, !dbg !4909
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !4909
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4909
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !4909
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !4909
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 1, !dbg !4909
  %rt_rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**, !dbg !4909
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx7, align 8, !dbg !4909
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !4909
  %bf.load8 = load i32, i32* %7, align 8, !dbg !4909
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !4909
  %cmp10 = icmp eq i32 %bf.clear9, 25, !dbg !4909
  br i1 %cmp10, label %land.lhs.true11, label %cond.true, !dbg !4909

land.lhs.true11:                                  ; preds = %land.lhs.true
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4909
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !4909
  %fld13 = bitcast %union.u* %u12 to [1 x %union.rtunion_def]*, !dbg !4909
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i64 0, i64 5, !dbg !4909
  %rt_rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !4909
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !4909
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !4909
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !4909
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 1, !dbg !4909
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !4909
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !4909
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !4909
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !4909
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 0, !dbg !4909
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !4909
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !4909
  %12 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4909
  %cmp24 = icmp eq %struct.rtx_def* %11, %12, !dbg !4909
  br i1 %cmp24, label %cond.false, label %cond.true, !dbg !4909

cond.true:                                        ; preds = %land.lhs.true11, %land.lhs.true, %entry
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 1331, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !4909
  br label %cond.end, !dbg !4909

cond.false:                                       ; preds = %land.lhs.true11
  br label %cond.end, !dbg !4909

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !4909
  %13 = load %struct.df*, %struct.df** @df, align 8, !dbg !4910
  %tobool = icmp ne %struct.df* %13, null, !dbg !4910
  br i1 %tobool, label %if.end, label %if.then, !dbg !4912

if.then:                                          ; preds = %cond.end
  store i8 0, i8* %retval, align 1, !dbg !4913
  br label %return, !dbg !4913

if.end:                                           ; preds = %cond.end
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4914
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !4914
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !4914
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 0, !dbg !4914
  %rt_int28 = bitcast %union.rtunion_def* %arrayidx27 to i32*, !dbg !4914
  %15 = load i32, i32* %rt_int28, align 8, !dbg !4914
  %16 = load %struct.df*, %struct.df** @df, align 8, !dbg !4914
  %insns_size = getelementptr inbounds %struct.df, %struct.df* %16, i32 0, i32 11, !dbg !4914
  %17 = load i32, i32* %insns_size, align 8, !dbg !4914
  %cmp29 = icmp ult i32 %15, %17, !dbg !4914
  br i1 %cmp29, label %cond.true30, label %cond.false36, !dbg !4914

cond.true30:                                      ; preds = %if.end
  %18 = load %struct.df*, %struct.df** @df, align 8, !dbg !4914
  %insns = getelementptr inbounds %struct.df, %struct.df* %18, i32 0, i32 10, !dbg !4914
  %19 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !4914
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4914
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !4914
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !4914
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 0, !dbg !4914
  %rt_int34 = bitcast %union.rtunion_def* %arrayidx33 to i32*, !dbg !4914
  %21 = load i32, i32* %rt_int34, align 8, !dbg !4914
  %idxprom = sext i32 %21 to i64, !dbg !4914
  %arrayidx35 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %19, i64 %idxprom, !dbg !4914
  %22 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx35, align 8, !dbg !4914
  br label %cond.end37, !dbg !4914

cond.false36:                                     ; preds = %if.end
  br label %cond.end37, !dbg !4914

cond.end37:                                       ; preds = %cond.false36, %cond.true30
  %cond38 = phi %struct.df_insn_info* [ %22, %cond.true30 ], [ null, %cond.false36 ], !dbg !4914
  store %struct.df_insn_info* %cond38, %struct.df_insn_info** %insn_info, align 8, !dbg !4915
  %23 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4916
  %tobool39 = icmp ne %struct.df_insn_info* %23, null, !dbg !4916
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !4918

if.then40:                                        ; preds = %cond.end37
  store i8 0, i8* %retval, align 1, !dbg !4919
  br label %return, !dbg !4919

if.end41:                                         ; preds = %cond.end37
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4920
  %tobool42 = icmp ne %struct._IO_FILE* %24, null, !dbg !4920
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !4922

if.then43:                                        ; preds = %if.end41
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4923
  %26 = load i32, i32* %uid, align 4, !dbg !4924
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.17, i64 0, i64 0), i32 %26), !dbg !4925
  br label %if.end44, !dbg !4925

if.end44:                                         ; preds = %if.then43, %if.end41
  %27 = load %struct.df*, %struct.df** @df, align 8, !dbg !4926
  %insns_to_delete = getelementptr inbounds %struct.df, %struct.df* %27, i32 0, i32 18, !dbg !4927
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_delete, align 8, !dbg !4927
  %29 = load i32, i32* %uid, align 4, !dbg !4928
  %call45 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %28, i32 %29), !dbg !4929
  %30 = load %struct.df*, %struct.df** @df, align 8, !dbg !4930
  %insns_to_rescan = getelementptr inbounds %struct.df, %struct.df* %30, i32 0, i32 19, !dbg !4931
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_rescan, align 8, !dbg !4931
  %32 = load i32, i32* %uid, align 4, !dbg !4932
  %call46 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %31, i32 %32), !dbg !4933
  %33 = load %struct.df*, %struct.df** @df, align 8, !dbg !4934
  %insns_to_notes_rescan = getelementptr inbounds %struct.df, %struct.df* %33, i32 0, i32 20, !dbg !4935
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_notes_rescan, align 8, !dbg !4935
  %35 = load i32, i32* %uid, align 4, !dbg !4936
  %call47 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %34, i32 %35), !dbg !4937
  %36 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4938
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %36, i32 0, i32 1, !dbg !4940
  %37 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !4940
  %tobool48 = icmp ne %union.df_ref_d** %37, null, !dbg !4938
  br i1 %tobool48, label %if.end50, label %if.then49, !dbg !4941

if.then49:                                        ; preds = %if.end44
  store i8 0, i8* %retval, align 1, !dbg !4942
  br label %return, !dbg !4942

if.end50:                                         ; preds = %if.end44
  %38 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4943
  %defs51 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %38, i32 0, i32 1, !dbg !4945
  %39 = load %union.df_ref_d**, %union.df_ref_d*** %defs51, align 8, !dbg !4945
  %cmp52 = icmp eq %union.df_ref_d** %39, getelementptr inbounds ([1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* @df_null_ref_rec, i64 0, i64 0), !dbg !4946
  br i1 %cmp52, label %land.lhs.true53, label %if.end60, !dbg !4947

land.lhs.true53:                                  ; preds = %if.end50
  %40 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4948
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %40, i32 0, i32 2, !dbg !4949
  %41 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !4949
  %cmp54 = icmp eq %union.df_ref_d** %41, getelementptr inbounds ([1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* @df_null_ref_rec, i64 0, i64 0), !dbg !4950
  br i1 %cmp54, label %land.lhs.true55, label %if.end60, !dbg !4951

land.lhs.true55:                                  ; preds = %land.lhs.true53
  %42 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4952
  %eq_uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %42, i32 0, i32 3, !dbg !4953
  %43 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses, align 8, !dbg !4953
  %cmp56 = icmp eq %union.df_ref_d** %43, getelementptr inbounds ([1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* @df_null_ref_rec, i64 0, i64 0), !dbg !4954
  br i1 %cmp56, label %land.lhs.true57, label %if.end60, !dbg !4955

land.lhs.true57:                                  ; preds = %land.lhs.true55
  %44 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4956
  %mw_hardregs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %44, i32 0, i32 4, !dbg !4957
  %45 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs, align 8, !dbg !4957
  %cmp58 = icmp eq %struct.df_mw_hardreg** %45, getelementptr inbounds ([1 x %struct.df_mw_hardreg*], [1 x %struct.df_mw_hardreg*]* @df_null_mw_rec, i64 0, i64 0), !dbg !4958
  br i1 %cmp58, label %if.then59, label %if.end60, !dbg !4959

if.then59:                                        ; preds = %land.lhs.true57
  store i8 0, i8* %retval, align 1, !dbg !4960
  br label %return, !dbg !4960

if.end60:                                         ; preds = %land.lhs.true57, %land.lhs.true55, %land.lhs.true53, %if.end50
  %46 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4961
  %mw_hardregs61 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %46, i32 0, i32 4, !dbg !4962
  %47 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs61, align 8, !dbg !4962
  call void @df_mw_hardreg_chain_delete(%struct.df_mw_hardreg** %47), !dbg !4963
  %48 = load %struct.df*, %struct.df** @df, align 8, !dbg !4964
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %48, i32 0, i32 1, !dbg !4964
  %arrayidx62 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 4, !dbg !4964
  %49 = load %struct.dataflow*, %struct.dataflow** %arrayidx62, align 8, !dbg !4964
  %tobool63 = icmp ne %struct.dataflow* %49, null, !dbg !4964
  br i1 %tobool63, label %if.then64, label %if.end68, !dbg !4966

if.then64:                                        ; preds = %if.end60
  %50 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4967
  %defs65 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %50, i32 0, i32 1, !dbg !4969
  %51 = load %union.df_ref_d**, %union.df_ref_d*** %defs65, align 8, !dbg !4969
  call void @df_ref_chain_delete_du_chain(%union.df_ref_d** %51), !dbg !4970
  %52 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4971
  %uses66 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %52, i32 0, i32 2, !dbg !4972
  %53 = load %union.df_ref_d**, %union.df_ref_d*** %uses66, align 8, !dbg !4972
  call void @df_ref_chain_delete_du_chain(%union.df_ref_d** %53), !dbg !4973
  %54 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4974
  %eq_uses67 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %54, i32 0, i32 3, !dbg !4975
  %55 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses67, align 8, !dbg !4975
  call void @df_ref_chain_delete_du_chain(%union.df_ref_d** %55), !dbg !4976
  br label %if.end68, !dbg !4977

if.end68:                                         ; preds = %if.then64, %if.end60
  %56 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4978
  %defs69 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %56, i32 0, i32 1, !dbg !4979
  %57 = load %union.df_ref_d**, %union.df_ref_d*** %defs69, align 8, !dbg !4979
  call void @df_ref_chain_delete(%union.df_ref_d** %57), !dbg !4980
  %58 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4981
  %uses70 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %58, i32 0, i32 2, !dbg !4982
  %59 = load %union.df_ref_d**, %union.df_ref_d*** %uses70, align 8, !dbg !4982
  call void @df_ref_chain_delete(%union.df_ref_d** %59), !dbg !4983
  %60 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4984
  %eq_uses71 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %60, i32 0, i32 3, !dbg !4985
  %61 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses71, align 8, !dbg !4985
  call void @df_ref_chain_delete(%union.df_ref_d** %61), !dbg !4986
  %62 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4987
  %defs72 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %62, i32 0, i32 1, !dbg !4988
  store %union.df_ref_d** getelementptr inbounds ([1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* @df_null_ref_rec, i64 0, i64 0), %union.df_ref_d*** %defs72, align 8, !dbg !4989
  %63 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4990
  %uses73 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %63, i32 0, i32 2, !dbg !4991
  store %union.df_ref_d** getelementptr inbounds ([1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* @df_null_ref_rec, i64 0, i64 0), %union.df_ref_d*** %uses73, align 8, !dbg !4992
  %64 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4993
  %eq_uses74 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %64, i32 0, i32 3, !dbg !4994
  store %union.df_ref_d** getelementptr inbounds ([1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* @df_null_ref_rec, i64 0, i64 0), %union.df_ref_d*** %eq_uses74, align 8, !dbg !4995
  %65 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !4996
  %mw_hardregs75 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %65, i32 0, i32 4, !dbg !4997
  store %struct.df_mw_hardreg** getelementptr inbounds ([1 x %struct.df_mw_hardreg*], [1 x %struct.df_mw_hardreg*]* @df_null_mw_rec, i64 0, i64 0), %struct.df_mw_hardreg*** %mw_hardregs75, align 8, !dbg !4998
  store i8 1, i8* %retval, align 1, !dbg !4999
  br label %return, !dbg !4999

return:                                           ; preds = %if.end68, %if.then59, %if.then49, %if.then40, %if.then
  %66 = load i8, i8* %retval, align 1, !dbg !5000
  ret i8 %66, !dbg !5000
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_insn_rescan_all() #0 !dbg !5001 {
entry:
  %no_insn_rescan = alloca i8, align 1
  %defer_insn_rescan = alloca i8, align 1
  %bb = alloca %struct.basic_block_def*, align 8
  %bi = alloca %struct.bitmap_iterator, align 8
  %uid = alloca i32, align 4
  %tmp = alloca %struct.bitmap_head_def*, align 8
  %insn_info = alloca %struct.df_insn_info*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.declare(metadata i8* %no_insn_rescan, metadata !5002, metadata !DIExpression()), !dbg !5003
  store i8 0, i8* %no_insn_rescan, align 1, !dbg !5003
  call void @llvm.dbg.declare(metadata i8* %defer_insn_rescan, metadata !5004, metadata !DIExpression()), !dbg !5005
  store i8 0, i8* %defer_insn_rescan, align 1, !dbg !5005
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !5006, metadata !DIExpression()), !dbg !5007
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !5008, metadata !DIExpression()), !dbg !5016
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !5017, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %tmp, metadata !5019, metadata !DIExpression()), !dbg !5020
  %call = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @df_bitmap_obstack), !dbg !5021
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %tmp, align 8, !dbg !5020
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5022
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 27, !dbg !5024
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !5024
  %bf.cast = sext i8 %bf.load to i32, !dbg !5024
  %and = and i32 %bf.cast, 16, !dbg !5025
  %tobool = icmp ne i32 %and, 0, !dbg !5025
  br i1 %tobool, label %if.then, label %if.end, !dbg !5026

if.then:                                          ; preds = %entry
  %call1 = call i32 @df_clear_flags(i32 16), !dbg !5027
  store i8 1, i8* %no_insn_rescan, align 1, !dbg !5029
  br label %if.end, !dbg !5030

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !5031
  %changeable_flags2 = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 27, !dbg !5033
  %bf.load3 = load i8, i8* %changeable_flags2, align 4, !dbg !5033
  %bf.cast4 = sext i8 %bf.load3 to i32, !dbg !5033
  %and5 = and i32 %bf.cast4, 32, !dbg !5034
  %tobool6 = icmp ne i32 %and5, 0, !dbg !5034
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !5035

if.then7:                                         ; preds = %if.end
  %call8 = call i32 @df_clear_flags(i32 32), !dbg !5036
  store i8 1, i8* %defer_insn_rescan, align 1, !dbg !5038
  br label %if.end9, !dbg !5039

if.end9:                                          ; preds = %if.then7, %if.end
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !5040
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !5041
  %insns_to_delete = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 18, !dbg !5042
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_delete, align 8, !dbg !5042
  call void @bitmap_copy(%struct.bitmap_head_def* %2, %struct.bitmap_head_def* %4), !dbg !5043
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !5044
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %5, i32 0, i32* %uid), !dbg !5044
  br label %for.cond, !dbg !5044

for.cond:                                         ; preds = %for.inc, %if.end9
  %call10 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %uid), !dbg !5046
  %tobool11 = icmp ne i8 %call10, 0, !dbg !5044
  br i1 %tobool11, label %for.body, label %for.end, !dbg !5044

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info, metadata !5048, metadata !DIExpression()), !dbg !5050
  %6 = load i32, i32* %uid, align 4, !dbg !5051
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !5051
  %insns_size = getelementptr inbounds %struct.df, %struct.df* %7, i32 0, i32 11, !dbg !5051
  %8 = load i32, i32* %insns_size, align 8, !dbg !5051
  %cmp = icmp ult i32 %6, %8, !dbg !5051
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5051

cond.true:                                        ; preds = %for.body
  %9 = load %struct.df*, %struct.df** @df, align 8, !dbg !5051
  %insns = getelementptr inbounds %struct.df, %struct.df* %9, i32 0, i32 10, !dbg !5051
  %10 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !5051
  %11 = load i32, i32* %uid, align 4, !dbg !5051
  %idxprom = zext i32 %11 to i64, !dbg !5051
  %arrayidx = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %10, i64 %idxprom, !dbg !5051
  %12 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx, align 8, !dbg !5051
  br label %cond.end, !dbg !5051

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !5051

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.df_insn_info* [ %12, %cond.true ], [ null, %cond.false ], !dbg !5051
  store %struct.df_insn_info* %cond, %struct.df_insn_info** %insn_info, align 8, !dbg !5050
  %13 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5052
  %tobool12 = icmp ne %struct.df_insn_info* %13, null, !dbg !5052
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !5054

if.then13:                                        ; preds = %cond.end
  %14 = load i32, i32* %uid, align 4, !dbg !5055
  call void @df_insn_delete(%struct.basic_block_def* null, i32 %14), !dbg !5056
  br label %if.end14, !dbg !5056

if.end14:                                         ; preds = %if.then13, %cond.end
  br label %for.inc, !dbg !5057

for.inc:                                          ; preds = %if.end14
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %uid), !dbg !5046
  br label %for.cond, !dbg !5046, !llvm.loop !5058

for.end:                                          ; preds = %for.cond
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !5060
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %15), !dbg !5060
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %tmp, align 8, !dbg !5060
  %16 = load %struct.df*, %struct.df** @df, align 8, !dbg !5061
  %insns_to_delete15 = getelementptr inbounds %struct.df, %struct.df* %16, i32 0, i32 18, !dbg !5062
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_delete15, align 8, !dbg !5062
  call void @bitmap_clear(%struct.bitmap_head_def* %17), !dbg !5063
  %18 = load %struct.df*, %struct.df** @df, align 8, !dbg !5064
  %insns_to_rescan = getelementptr inbounds %struct.df, %struct.df* %18, i32 0, i32 19, !dbg !5065
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_rescan, align 8, !dbg !5065
  call void @bitmap_clear(%struct.bitmap_head_def* %19), !dbg !5066
  %20 = load %struct.df*, %struct.df** @df, align 8, !dbg !5067
  %insns_to_notes_rescan = getelementptr inbounds %struct.df, %struct.df* %20, i32 0, i32 20, !dbg !5068
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_notes_rescan, align 8, !dbg !5068
  call void @bitmap_clear(%struct.bitmap_head_def* %21), !dbg !5069
  %22 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5070
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %22, i64 0, !dbg !5070
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !5070
  %23 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5070
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %23, i32 0, i32 0, !dbg !5070
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5070
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %24, i32 0, i32 6, !dbg !5070
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !5070
  store %struct.basic_block_def* %25, %struct.basic_block_def** %bb, align 8, !dbg !5070
  br label %for.cond16, !dbg !5070

for.cond16:                                       ; preds = %for.inc35, %for.end
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5072
  %27 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5072
  %add.ptr17 = getelementptr inbounds %struct.function, %struct.function* %27, i64 0, !dbg !5072
  %cfg18 = getelementptr inbounds %struct.function, %struct.function* %add.ptr17, i32 0, i32 1, !dbg !5072
  %28 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg18, align 8, !dbg !5072
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %28, i32 0, i32 1, !dbg !5072
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5072
  %cmp19 = icmp ne %struct.basic_block_def* %26, %29, !dbg !5072
  br i1 %cmp19, label %for.body20, label %for.end37, !dbg !5070

for.body20:                                       ; preds = %for.cond16
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !5074, metadata !DIExpression()), !dbg !5076
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5077
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %30, i32 0, i32 7, !dbg !5077
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5077
  %31 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5077
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %31, i32 0, i32 0, !dbg !5077
  %32 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !5077
  store %struct.rtx_def* %32, %struct.rtx_def** %insn, align 8, !dbg !5077
  br label %for.cond21, !dbg !5077

for.cond21:                                       ; preds = %for.inc29, %for.body20
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5079
  %tobool22 = icmp ne %struct.rtx_def* %33, null, !dbg !5079
  br i1 %tobool22, label %land.rhs, label %land.end, !dbg !5079

land.rhs:                                         ; preds = %for.cond21
  %34 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5079
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5079
  %il23 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %35, i32 0, i32 7, !dbg !5079
  %rtl24 = bitcast %union.basic_block_il_dependent* %il23 to %struct.rtl_bb_info**, !dbg !5079
  %36 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl24, align 8, !dbg !5079
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %36, i32 0, i32 1, !dbg !5079
  %37 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5079
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !5079
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5079
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !5079
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !5079
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5079
  %cmp26 = icmp ne %struct.rtx_def* %34, %38, !dbg !5079
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond21
  %39 = phi i1 [ false, %for.cond21 ], [ %cmp26, %land.rhs ], !dbg !5081
  br i1 %39, label %for.body27, label %for.end34, !dbg !5077

for.body27:                                       ; preds = %land.end
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5082
  %call28 = call zeroext i8 @df_insn_rescan(%struct.rtx_def* %40), !dbg !5084
  br label %for.inc29, !dbg !5085

for.inc29:                                        ; preds = %for.body27
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5079
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !5079
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !5079
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 2, !dbg !5079
  %rt_rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !5079
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !5079
  store %struct.rtx_def* %42, %struct.rtx_def** %insn, align 8, !dbg !5079
  br label %for.cond21, !dbg !5079, !llvm.loop !5086

for.end34:                                        ; preds = %land.end
  br label %for.inc35, !dbg !5088

for.inc35:                                        ; preds = %for.end34
  %43 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5072
  %next_bb36 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %43, i32 0, i32 6, !dbg !5072
  %44 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb36, align 8, !dbg !5072
  store %struct.basic_block_def* %44, %struct.basic_block_def** %bb, align 8, !dbg !5072
  br label %for.cond16, !dbg !5072, !llvm.loop !5089

for.end37:                                        ; preds = %for.cond16
  %45 = load i8, i8* %no_insn_rescan, align 1, !dbg !5091
  %tobool38 = icmp ne i8 %45, 0, !dbg !5091
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !5093

if.then39:                                        ; preds = %for.end37
  %call40 = call i32 @df_set_flags(i32 16), !dbg !5094
  br label %if.end41, !dbg !5094

if.end41:                                         ; preds = %if.then39, %for.end37
  %46 = load i8, i8* %defer_insn_rescan, align 1, !dbg !5095
  %tobool42 = icmp ne i8 %46, 0, !dbg !5095
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !5097

if.then43:                                        ; preds = %if.end41
  %call44 = call i32 @df_set_flags(i32 32), !dbg !5098
  br label %if.end45, !dbg !5098

if.end45:                                         ; preds = %if.then43, %if.end41
  ret void, !dbg !5099
}

declare dso_local i32 @df_clear_flags(i32) #2

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) #0 !dbg !5100 {
entry:
  %bi.addr = alloca %struct.bitmap_iterator*, align 8
  %map.addr = alloca %struct.bitmap_head_def*, align 8
  %start_bit.addr = alloca i32, align 4
  %bit_no.addr = alloca i32*, align 8
  store %struct.bitmap_iterator* %bi, %struct.bitmap_iterator** %bi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator** %bi.addr, metadata !5107, metadata !DIExpression()), !dbg !5108
  store %struct.bitmap_head_def* %map, %struct.bitmap_head_def** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %map.addr, metadata !5109, metadata !DIExpression()), !dbg !5110
  store i32 %start_bit, i32* %start_bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_bit.addr, metadata !5111, metadata !DIExpression()), !dbg !5112
  store i32* %bit_no, i32** %bit_no.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_no.addr, metadata !5113, metadata !DIExpression()), !dbg !5114
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %map.addr, align 8, !dbg !5115
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %0, i32 0, i32 0, !dbg !5116
  %1 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !5116
  %2 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5117
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %2, i32 0, i32 0, !dbg !5118
  store %struct.bitmap_element_def* %1, %struct.bitmap_element_def** %elt1, align 8, !dbg !5119
  %3 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5120
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %3, i32 0, i32 1, !dbg !5121
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !5122
  br label %while.body, !dbg !5123

while.body:                                       ; preds = %entry, %if.end5
  %4 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5124
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %4, i32 0, i32 0, !dbg !5127
  %5 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt11, align 8, !dbg !5127
  %tobool = icmp ne %struct.bitmap_element_def* %5, null, !dbg !5124
  br i1 %tobool, label %if.end, label %if.then, !dbg !5128

if.then:                                          ; preds = %while.body
  %6 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5129
  %elt12 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %6, i32 0, i32 0, !dbg !5131
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt12, align 8, !dbg !5132
  br label %while.end, !dbg !5133

if.end:                                           ; preds = %while.body
  %7 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5134
  %elt13 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %7, i32 0, i32 0, !dbg !5136
  %8 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt13, align 8, !dbg !5136
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %8, i32 0, i32 2, !dbg !5137
  %9 = load i32, i32* %indx, align 8, !dbg !5137
  %10 = load i32, i32* %start_bit.addr, align 4, !dbg !5138
  %div = udiv i32 %10, 128, !dbg !5139
  %cmp = icmp uge i32 %9, %div, !dbg !5140
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !5141

if.then4:                                         ; preds = %if.end
  br label %while.end, !dbg !5142

if.end5:                                          ; preds = %if.end
  %11 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5143
  %elt16 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %11, i32 0, i32 0, !dbg !5144
  %12 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt16, align 8, !dbg !5144
  %next = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %12, i32 0, i32 0, !dbg !5145
  %13 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next, align 8, !dbg !5145
  %14 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5146
  %elt17 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %14, i32 0, i32 0, !dbg !5147
  store %struct.bitmap_element_def* %13, %struct.bitmap_element_def** %elt17, align 8, !dbg !5148
  br label %while.body, !dbg !5123, !llvm.loop !5149

while.end:                                        ; preds = %if.then4, %if.then
  %15 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5151
  %elt18 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %15, i32 0, i32 0, !dbg !5153
  %16 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt18, align 8, !dbg !5153
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %16, i32 0, i32 2, !dbg !5154
  %17 = load i32, i32* %indx9, align 8, !dbg !5154
  %18 = load i32, i32* %start_bit.addr, align 4, !dbg !5155
  %div10 = udiv i32 %18, 128, !dbg !5156
  %cmp11 = icmp ne i32 %17, %div10, !dbg !5157
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !5158

if.then12:                                        ; preds = %while.end
  %19 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5159
  %elt113 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %19, i32 0, i32 0, !dbg !5160
  %20 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt113, align 8, !dbg !5160
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %20, i32 0, i32 2, !dbg !5161
  %21 = load i32, i32* %indx14, align 8, !dbg !5161
  %mul = mul i32 %21, 128, !dbg !5162
  store i32 %mul, i32* %start_bit.addr, align 4, !dbg !5163
  br label %if.end15, !dbg !5164

if.end15:                                         ; preds = %if.then12, %while.end
  %22 = load i32, i32* %start_bit.addr, align 4, !dbg !5165
  %div16 = udiv i32 %22, 64, !dbg !5166
  %rem = urem i32 %div16, 2, !dbg !5167
  %23 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5168
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %23, i32 0, i32 2, !dbg !5169
  store i32 %rem, i32* %word_no, align 8, !dbg !5170
  %24 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5171
  %elt117 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %24, i32 0, i32 0, !dbg !5172
  %25 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt117, align 8, !dbg !5172
  %bits = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %25, i32 0, i32 3, !dbg !5173
  %26 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5174
  %word_no18 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %26, i32 0, i32 2, !dbg !5175
  %27 = load i32, i32* %word_no18, align 8, !dbg !5175
  %idxprom = zext i32 %27 to i64, !dbg !5171
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* %bits, i64 0, i64 %idxprom, !dbg !5171
  %28 = load i64, i64* %arrayidx, align 8, !dbg !5171
  %29 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5176
  %bits19 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %29, i32 0, i32 3, !dbg !5177
  store i64 %28, i64* %bits19, align 8, !dbg !5178
  %30 = load i32, i32* %start_bit.addr, align 4, !dbg !5179
  %rem20 = urem i32 %30, 64, !dbg !5180
  %31 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5181
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %31, i32 0, i32 3, !dbg !5182
  %32 = load i64, i64* %bits21, align 8, !dbg !5183
  %sh_prom = zext i32 %rem20 to i64, !dbg !5183
  %shr = lshr i64 %32, %sh_prom, !dbg !5183
  store i64 %shr, i64* %bits21, align 8, !dbg !5183
  %33 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5184
  %bits22 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %33, i32 0, i32 3, !dbg !5185
  %34 = load i64, i64* %bits22, align 8, !dbg !5185
  %tobool23 = icmp ne i64 %34, 0, !dbg !5186
  %lnot = xor i1 %tobool23, true, !dbg !5186
  %lnot.ext = zext i1 %lnot to i32, !dbg !5186
  %35 = load i32, i32* %start_bit.addr, align 4, !dbg !5187
  %add = add i32 %35, %lnot.ext, !dbg !5187
  store i32 %add, i32* %start_bit.addr, align 4, !dbg !5187
  %36 = load i32, i32* %start_bit.addr, align 4, !dbg !5188
  %37 = load i32*, i32** %bit_no.addr, align 8, !dbg !5189
  store i32 %36, i32* %37, align 4, !dbg !5190
  ret void, !dbg !5191
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) #0 !dbg !5192 {
entry:
  %retval = alloca i8, align 1
  %bi.addr = alloca %struct.bitmap_iterator*, align 8
  %bit_no.addr = alloca i32*, align 8
  store %struct.bitmap_iterator* %bi, %struct.bitmap_iterator** %bi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator** %bi.addr, metadata !5195, metadata !DIExpression()), !dbg !5196
  store i32* %bit_no, i32** %bit_no.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_no.addr, metadata !5197, metadata !DIExpression()), !dbg !5198
  %0 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5199
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %0, i32 0, i32 3, !dbg !5201
  %1 = load i64, i64* %bits, align 8, !dbg !5201
  %tobool = icmp ne i64 %1, 0, !dbg !5199
  br i1 %tobool, label %if.then, label %if.end, !dbg !5202

if.then:                                          ; preds = %entry
  br label %next_bit, !dbg !5203

next_bit:                                         ; preds = %if.then15, %if.then
  call void @llvm.dbg.label(metadata !5204), !dbg !5206
  br label %while.cond, !dbg !5207

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5208
  %bits1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %2, i32 0, i32 3, !dbg !5209
  %3 = load i64, i64* %bits1, align 8, !dbg !5209
  %and = and i64 %3, 1, !dbg !5210
  %tobool2 = icmp ne i64 %and, 0, !dbg !5211
  %lnot = xor i1 %tobool2, true, !dbg !5211
  br i1 %lnot, label %while.body, label %while.end, !dbg !5207

while.body:                                       ; preds = %while.cond
  %4 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5212
  %bits3 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %4, i32 0, i32 3, !dbg !5214
  %5 = load i64, i64* %bits3, align 8, !dbg !5215
  %shr = lshr i64 %5, 1, !dbg !5215
  store i64 %shr, i64* %bits3, align 8, !dbg !5215
  %6 = load i32*, i32** %bit_no.addr, align 8, !dbg !5216
  %7 = load i32, i32* %6, align 4, !dbg !5217
  %add = add i32 %7, 1, !dbg !5217
  store i32 %add, i32* %6, align 4, !dbg !5217
  br label %while.cond, !dbg !5207, !llvm.loop !5218

while.end:                                        ; preds = %while.cond
  store i8 1, i8* %retval, align 1, !dbg !5220
  br label %return, !dbg !5220

if.end:                                           ; preds = %entry
  %8 = load i32*, i32** %bit_no.addr, align 8, !dbg !5221
  %9 = load i32, i32* %8, align 4, !dbg !5222
  %add4 = add i32 %9, 64, !dbg !5223
  %sub = sub i32 %add4, 1, !dbg !5224
  %div = udiv i32 %sub, 64, !dbg !5225
  %mul = mul i32 %div, 64, !dbg !5226
  %10 = load i32*, i32** %bit_no.addr, align 8, !dbg !5227
  store i32 %mul, i32* %10, align 4, !dbg !5228
  %11 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5229
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %11, i32 0, i32 2, !dbg !5230
  %12 = load i32, i32* %word_no, align 8, !dbg !5231
  %inc = add i32 %12, 1, !dbg !5231
  store i32 %inc, i32* %word_no, align 8, !dbg !5231
  br label %while.body6, !dbg !5232

while.body6:                                      ; preds = %if.end, %if.end26
  br label %while.cond7, !dbg !5233

while.cond7:                                      ; preds = %if.end16, %while.body6
  %13 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5235
  %word_no8 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %13, i32 0, i32 2, !dbg !5236
  %14 = load i32, i32* %word_no8, align 8, !dbg !5236
  %cmp = icmp ne i32 %14, 2, !dbg !5237
  br i1 %cmp, label %while.body9, label %while.end20, !dbg !5233

while.body9:                                      ; preds = %while.cond7
  %15 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5238
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %15, i32 0, i32 0, !dbg !5240
  %16 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !5240
  %bits10 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %16, i32 0, i32 3, !dbg !5241
  %17 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5242
  %word_no11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %17, i32 0, i32 2, !dbg !5243
  %18 = load i32, i32* %word_no11, align 8, !dbg !5243
  %idxprom = zext i32 %18 to i64, !dbg !5238
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* %bits10, i64 0, i64 %idxprom, !dbg !5238
  %19 = load i64, i64* %arrayidx, align 8, !dbg !5238
  %20 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5244
  %bits12 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %20, i32 0, i32 3, !dbg !5245
  store i64 %19, i64* %bits12, align 8, !dbg !5246
  %21 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5247
  %bits13 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %21, i32 0, i32 3, !dbg !5249
  %22 = load i64, i64* %bits13, align 8, !dbg !5249
  %tobool14 = icmp ne i64 %22, 0, !dbg !5247
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !5250

if.then15:                                        ; preds = %while.body9
  br label %next_bit, !dbg !5251

if.end16:                                         ; preds = %while.body9
  %23 = load i32*, i32** %bit_no.addr, align 8, !dbg !5252
  %24 = load i32, i32* %23, align 4, !dbg !5253
  %add17 = add i32 %24, 64, !dbg !5253
  store i32 %add17, i32* %23, align 4, !dbg !5253
  %25 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5254
  %word_no18 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %25, i32 0, i32 2, !dbg !5255
  %26 = load i32, i32* %word_no18, align 8, !dbg !5256
  %inc19 = add i32 %26, 1, !dbg !5256
  store i32 %inc19, i32* %word_no18, align 8, !dbg !5256
  br label %while.cond7, !dbg !5233, !llvm.loop !5257

while.end20:                                      ; preds = %while.cond7
  %27 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5259
  %elt121 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %27, i32 0, i32 0, !dbg !5260
  %28 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt121, align 8, !dbg !5260
  %next = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %28, i32 0, i32 0, !dbg !5261
  %29 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next, align 8, !dbg !5261
  %30 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5262
  %elt122 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %30, i32 0, i32 0, !dbg !5263
  store %struct.bitmap_element_def* %29, %struct.bitmap_element_def** %elt122, align 8, !dbg !5264
  %31 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5265
  %elt123 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %31, i32 0, i32 0, !dbg !5267
  %32 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt123, align 8, !dbg !5267
  %tobool24 = icmp ne %struct.bitmap_element_def* %32, null, !dbg !5265
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !5268

if.then25:                                        ; preds = %while.end20
  store i8 0, i8* %retval, align 1, !dbg !5269
  br label %return, !dbg !5269

if.end26:                                         ; preds = %while.end20
  %33 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5270
  %elt127 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %33, i32 0, i32 0, !dbg !5271
  %34 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt127, align 8, !dbg !5271
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %34, i32 0, i32 2, !dbg !5272
  %35 = load i32, i32* %indx, align 8, !dbg !5272
  %mul28 = mul i32 %35, 128, !dbg !5273
  %36 = load i32*, i32** %bit_no.addr, align 8, !dbg !5274
  store i32 %mul28, i32* %36, align 4, !dbg !5275
  %37 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5276
  %word_no29 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %37, i32 0, i32 2, !dbg !5277
  store i32 0, i32* %word_no29, align 8, !dbg !5278
  br label %while.body6, !dbg !5232, !llvm.loop !5279

return:                                           ; preds = %if.then25, %while.end
  %38 = load i8, i8* %retval, align 1, !dbg !5281
  ret i8 %38, !dbg !5281
}

; Function Attrs: noinline nounwind uwtable
define internal void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) #0 !dbg !5282 {
entry:
  %bi.addr = alloca %struct.bitmap_iterator*, align 8
  %bit_no.addr = alloca i32*, align 8
  store %struct.bitmap_iterator* %bi, %struct.bitmap_iterator** %bi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator** %bi.addr, metadata !5285, metadata !DIExpression()), !dbg !5286
  store i32* %bit_no, i32** %bit_no.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_no.addr, metadata !5287, metadata !DIExpression()), !dbg !5288
  %0 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5289
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %0, i32 0, i32 3, !dbg !5290
  %1 = load i64, i64* %bits, align 8, !dbg !5291
  %shr = lshr i64 %1, 1, !dbg !5291
  store i64 %shr, i64* %bits, align 8, !dbg !5291
  %2 = load i32*, i32** %bit_no.addr, align 8, !dbg !5292
  %3 = load i32, i32* %2, align 4, !dbg !5293
  %add = add i32 %3, 1, !dbg !5293
  store i32 %add, i32* %2, align 4, !dbg !5293
  ret void, !dbg !5294
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) #2

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) #2

declare dso_local i32 @df_set_flags(i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_process_deferred_rescans() #0 !dbg !5295 {
entry:
  %no_insn_rescan = alloca i8, align 1
  %defer_insn_rescan = alloca i8, align 1
  %bi = alloca %struct.bitmap_iterator, align 8
  %uid = alloca i32, align 4
  %tmp = alloca %struct.bitmap_head_def*, align 8
  %insn_info = alloca %struct.df_insn_info*, align 8
  %insn_info23 = alloca %struct.df_insn_info*, align 8
  %insn_info43 = alloca %struct.df_insn_info*, align 8
  call void @llvm.dbg.declare(metadata i8* %no_insn_rescan, metadata !5296, metadata !DIExpression()), !dbg !5297
  store i8 0, i8* %no_insn_rescan, align 1, !dbg !5297
  call void @llvm.dbg.declare(metadata i8* %defer_insn_rescan, metadata !5298, metadata !DIExpression()), !dbg !5299
  store i8 0, i8* %defer_insn_rescan, align 1, !dbg !5299
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !5300, metadata !DIExpression()), !dbg !5301
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !5302, metadata !DIExpression()), !dbg !5303
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %tmp, metadata !5304, metadata !DIExpression()), !dbg !5305
  %call = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @df_bitmap_obstack), !dbg !5306
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %tmp, align 8, !dbg !5305
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5307
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 27, !dbg !5309
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !5309
  %bf.cast = sext i8 %bf.load to i32, !dbg !5309
  %and = and i32 %bf.cast, 16, !dbg !5310
  %tobool = icmp ne i32 %and, 0, !dbg !5310
  br i1 %tobool, label %if.then, label %if.end, !dbg !5311

if.then:                                          ; preds = %entry
  %call1 = call i32 @df_clear_flags(i32 16), !dbg !5312
  store i8 1, i8* %no_insn_rescan, align 1, !dbg !5314
  br label %if.end, !dbg !5315

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !5316
  %changeable_flags2 = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 27, !dbg !5318
  %bf.load3 = load i8, i8* %changeable_flags2, align 4, !dbg !5318
  %bf.cast4 = sext i8 %bf.load3 to i32, !dbg !5318
  %and5 = and i32 %bf.cast4, 32, !dbg !5319
  %tobool6 = icmp ne i32 %and5, 0, !dbg !5319
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !5320

if.then7:                                         ; preds = %if.end
  %call8 = call i32 @df_clear_flags(i32 32), !dbg !5321
  store i8 1, i8* %defer_insn_rescan, align 1, !dbg !5323
  br label %if.end9, !dbg !5324

if.end9:                                          ; preds = %if.then7, %if.end
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5325
  %tobool10 = icmp ne %struct._IO_FILE* %2, null, !dbg !5325
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !5327

if.then11:                                        ; preds = %if.end9
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5328
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.18, i64 0, i64 0)), !dbg !5329
  br label %if.end13, !dbg !5329

if.end13:                                         ; preds = %if.then11, %if.end9
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !5330
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !5331
  %insns_to_delete = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 18, !dbg !5332
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_delete, align 8, !dbg !5332
  call void @bitmap_copy(%struct.bitmap_head_def* %4, %struct.bitmap_head_def* %6), !dbg !5333
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !5334
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %7, i32 0, i32* %uid), !dbg !5334
  br label %for.cond, !dbg !5334

for.cond:                                         ; preds = %for.inc, %if.end13
  %call14 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %uid), !dbg !5336
  %tobool15 = icmp ne i8 %call14, 0, !dbg !5334
  br i1 %tobool15, label %for.body, label %for.end, !dbg !5334

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info, metadata !5338, metadata !DIExpression()), !dbg !5340
  %8 = load i32, i32* %uid, align 4, !dbg !5341
  %9 = load %struct.df*, %struct.df** @df, align 8, !dbg !5341
  %insns_size = getelementptr inbounds %struct.df, %struct.df* %9, i32 0, i32 11, !dbg !5341
  %10 = load i32, i32* %insns_size, align 8, !dbg !5341
  %cmp = icmp ult i32 %8, %10, !dbg !5341
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5341

cond.true:                                        ; preds = %for.body
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !5341
  %insns = getelementptr inbounds %struct.df, %struct.df* %11, i32 0, i32 10, !dbg !5341
  %12 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !5341
  %13 = load i32, i32* %uid, align 4, !dbg !5341
  %idxprom = zext i32 %13 to i64, !dbg !5341
  %arrayidx = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %12, i64 %idxprom, !dbg !5341
  %14 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx, align 8, !dbg !5341
  br label %cond.end, !dbg !5341

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !5341

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.df_insn_info* [ %14, %cond.true ], [ null, %cond.false ], !dbg !5341
  store %struct.df_insn_info* %cond, %struct.df_insn_info** %insn_info, align 8, !dbg !5340
  %15 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5342
  %tobool16 = icmp ne %struct.df_insn_info* %15, null, !dbg !5342
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !5344

if.then17:                                        ; preds = %cond.end
  %16 = load i32, i32* %uid, align 4, !dbg !5345
  call void @df_insn_delete(%struct.basic_block_def* null, i32 %16), !dbg !5346
  br label %if.end18, !dbg !5346

if.end18:                                         ; preds = %if.then17, %cond.end
  br label %for.inc, !dbg !5347

for.inc:                                          ; preds = %if.end18
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %uid), !dbg !5336
  br label %for.cond, !dbg !5336, !llvm.loop !5348

for.end:                                          ; preds = %for.cond
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !5350
  %18 = load %struct.df*, %struct.df** @df, align 8, !dbg !5351
  %insns_to_rescan = getelementptr inbounds %struct.df, %struct.df* %18, i32 0, i32 19, !dbg !5352
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_rescan, align 8, !dbg !5352
  call void @bitmap_copy(%struct.bitmap_head_def* %17, %struct.bitmap_head_def* %19), !dbg !5353
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !5354
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %20, i32 0, i32* %uid), !dbg !5354
  br label %for.cond19, !dbg !5354

for.cond19:                                       ; preds = %for.inc37, %for.end
  %call20 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %uid), !dbg !5356
  %tobool21 = icmp ne i8 %call20, 0, !dbg !5354
  br i1 %tobool21, label %for.body22, label %for.end38, !dbg !5354

for.body22:                                       ; preds = %for.cond19
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info23, metadata !5358, metadata !DIExpression()), !dbg !5360
  %21 = load i32, i32* %uid, align 4, !dbg !5361
  %22 = load %struct.df*, %struct.df** @df, align 8, !dbg !5361
  %insns_size24 = getelementptr inbounds %struct.df, %struct.df* %22, i32 0, i32 11, !dbg !5361
  %23 = load i32, i32* %insns_size24, align 8, !dbg !5361
  %cmp25 = icmp ult i32 %21, %23, !dbg !5361
  br i1 %cmp25, label %cond.true26, label %cond.false30, !dbg !5361

cond.true26:                                      ; preds = %for.body22
  %24 = load %struct.df*, %struct.df** @df, align 8, !dbg !5361
  %insns27 = getelementptr inbounds %struct.df, %struct.df* %24, i32 0, i32 10, !dbg !5361
  %25 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns27, align 8, !dbg !5361
  %26 = load i32, i32* %uid, align 4, !dbg !5361
  %idxprom28 = zext i32 %26 to i64, !dbg !5361
  %arrayidx29 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %25, i64 %idxprom28, !dbg !5361
  %27 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx29, align 8, !dbg !5361
  br label %cond.end31, !dbg !5361

cond.false30:                                     ; preds = %for.body22
  br label %cond.end31, !dbg !5361

cond.end31:                                       ; preds = %cond.false30, %cond.true26
  %cond32 = phi %struct.df_insn_info* [ %27, %cond.true26 ], [ null, %cond.false30 ], !dbg !5361
  store %struct.df_insn_info* %cond32, %struct.df_insn_info** %insn_info23, align 8, !dbg !5360
  %28 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info23, align 8, !dbg !5362
  %tobool33 = icmp ne %struct.df_insn_info* %28, null, !dbg !5362
  br i1 %tobool33, label %if.then34, label %if.end36, !dbg !5364

if.then34:                                        ; preds = %cond.end31
  %29 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info23, align 8, !dbg !5365
  %insn = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %29, i32 0, i32 0, !dbg !5366
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5366
  %call35 = call zeroext i8 @df_insn_rescan(%struct.rtx_def* %30), !dbg !5367
  br label %if.end36, !dbg !5367

if.end36:                                         ; preds = %if.then34, %cond.end31
  br label %for.inc37, !dbg !5368

for.inc37:                                        ; preds = %if.end36
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %uid), !dbg !5356
  br label %for.cond19, !dbg !5356, !llvm.loop !5369

for.end38:                                        ; preds = %for.cond19
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !5371
  %32 = load %struct.df*, %struct.df** @df, align 8, !dbg !5372
  %insns_to_notes_rescan = getelementptr inbounds %struct.df, %struct.df* %32, i32 0, i32 20, !dbg !5373
  %33 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_notes_rescan, align 8, !dbg !5373
  call void @bitmap_copy(%struct.bitmap_head_def* %31, %struct.bitmap_head_def* %33), !dbg !5374
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !5375
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %34, i32 0, i32* %uid), !dbg !5375
  br label %for.cond39, !dbg !5375

for.cond39:                                       ; preds = %for.inc57, %for.end38
  %call40 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %uid), !dbg !5377
  %tobool41 = icmp ne i8 %call40, 0, !dbg !5375
  br i1 %tobool41, label %for.body42, label %for.end58, !dbg !5375

for.body42:                                       ; preds = %for.cond39
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info43, metadata !5379, metadata !DIExpression()), !dbg !5381
  %35 = load i32, i32* %uid, align 4, !dbg !5382
  %36 = load %struct.df*, %struct.df** @df, align 8, !dbg !5382
  %insns_size44 = getelementptr inbounds %struct.df, %struct.df* %36, i32 0, i32 11, !dbg !5382
  %37 = load i32, i32* %insns_size44, align 8, !dbg !5382
  %cmp45 = icmp ult i32 %35, %37, !dbg !5382
  br i1 %cmp45, label %cond.true46, label %cond.false50, !dbg !5382

cond.true46:                                      ; preds = %for.body42
  %38 = load %struct.df*, %struct.df** @df, align 8, !dbg !5382
  %insns47 = getelementptr inbounds %struct.df, %struct.df* %38, i32 0, i32 10, !dbg !5382
  %39 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns47, align 8, !dbg !5382
  %40 = load i32, i32* %uid, align 4, !dbg !5382
  %idxprom48 = zext i32 %40 to i64, !dbg !5382
  %arrayidx49 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %39, i64 %idxprom48, !dbg !5382
  %41 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx49, align 8, !dbg !5382
  br label %cond.end51, !dbg !5382

cond.false50:                                     ; preds = %for.body42
  br label %cond.end51, !dbg !5382

cond.end51:                                       ; preds = %cond.false50, %cond.true46
  %cond52 = phi %struct.df_insn_info* [ %41, %cond.true46 ], [ null, %cond.false50 ], !dbg !5382
  store %struct.df_insn_info* %cond52, %struct.df_insn_info** %insn_info43, align 8, !dbg !5381
  %42 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info43, align 8, !dbg !5383
  %tobool53 = icmp ne %struct.df_insn_info* %42, null, !dbg !5383
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !5385

if.then54:                                        ; preds = %cond.end51
  %43 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info43, align 8, !dbg !5386
  %insn55 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %43, i32 0, i32 0, !dbg !5387
  %44 = load %struct.rtx_def*, %struct.rtx_def** %insn55, align 8, !dbg !5387
  call void @df_notes_rescan(%struct.rtx_def* %44), !dbg !5388
  br label %if.end56, !dbg !5388

if.end56:                                         ; preds = %if.then54, %cond.end51
  br label %for.inc57, !dbg !5389

for.inc57:                                        ; preds = %if.end56
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %uid), !dbg !5377
  br label %for.cond39, !dbg !5377, !llvm.loop !5390

for.end58:                                        ; preds = %for.cond39
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5392
  %tobool59 = icmp ne %struct._IO_FILE* %45, null, !dbg !5392
  br i1 %tobool59, label %if.then60, label %if.end62, !dbg !5394

if.then60:                                        ; preds = %for.end58
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5395
  %call61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.19, i64 0, i64 0)), !dbg !5396
  br label %if.end62, !dbg !5396

if.end62:                                         ; preds = %if.then60, %for.end58
  %47 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !5397
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %47), !dbg !5397
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %tmp, align 8, !dbg !5397
  %48 = load %struct.df*, %struct.df** @df, align 8, !dbg !5398
  %insns_to_delete63 = getelementptr inbounds %struct.df, %struct.df* %48, i32 0, i32 18, !dbg !5399
  %49 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_delete63, align 8, !dbg !5399
  call void @bitmap_clear(%struct.bitmap_head_def* %49), !dbg !5400
  %50 = load %struct.df*, %struct.df** @df, align 8, !dbg !5401
  %insns_to_rescan64 = getelementptr inbounds %struct.df, %struct.df* %50, i32 0, i32 19, !dbg !5402
  %51 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_rescan64, align 8, !dbg !5402
  call void @bitmap_clear(%struct.bitmap_head_def* %51), !dbg !5403
  %52 = load %struct.df*, %struct.df** @df, align 8, !dbg !5404
  %insns_to_notes_rescan65 = getelementptr inbounds %struct.df, %struct.df* %52, i32 0, i32 20, !dbg !5405
  %53 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_notes_rescan65, align 8, !dbg !5405
  call void @bitmap_clear(%struct.bitmap_head_def* %53), !dbg !5406
  %54 = load i8, i8* %no_insn_rescan, align 1, !dbg !5407
  %tobool66 = icmp ne i8 %54, 0, !dbg !5407
  br i1 %tobool66, label %if.then67, label %if.end69, !dbg !5409

if.then67:                                        ; preds = %if.end62
  %call68 = call i32 @df_set_flags(i32 16), !dbg !5410
  br label %if.end69, !dbg !5410

if.end69:                                         ; preds = %if.then67, %if.end62
  %55 = load i8, i8* %defer_insn_rescan, align 1, !dbg !5411
  %tobool70 = icmp ne i8 %55, 0, !dbg !5411
  br i1 %tobool70, label %if.then71, label %if.end73, !dbg !5413

if.then71:                                        ; preds = %if.end69
  %call72 = call i32 @df_set_flags(i32 32), !dbg !5414
  br label %if.end73, !dbg !5414

if.end73:                                         ; preds = %if.then71, %if.end69
  %56 = load %struct.df*, %struct.df** @df, align 8, !dbg !5415
  %redo_entry_and_exit = getelementptr inbounds %struct.df, %struct.df* %56, i32 0, i32 29, !dbg !5417
  %57 = load i8, i8* %redo_entry_and_exit, align 2, !dbg !5417
  %tobool74 = icmp ne i8 %57, 0, !dbg !5415
  br i1 %tobool74, label %if.then75, label %if.end77, !dbg !5418

if.then75:                                        ; preds = %if.end73
  call void @df_update_entry_exit_and_calls(), !dbg !5419
  %58 = load %struct.df*, %struct.df** @df, align 8, !dbg !5421
  %redo_entry_and_exit76 = getelementptr inbounds %struct.df, %struct.df* %58, i32 0, i32 29, !dbg !5422
  store i8 0, i8* %redo_entry_and_exit76, align 2, !dbg !5423
  br label %if.end77, !dbg !5424

if.end77:                                         ; preds = %if.then75, %if.end73
  ret void, !dbg !5425
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_notes_rescan(%struct.rtx_def* %insn) #0 !dbg !5426 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %insn_info = alloca %struct.df_insn_info*, align 8
  %uid = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %note = alloca %struct.rtx_def*, align 8
  %collection_rec = alloca %struct.df_collection_rec, align 8
  %num_deleted = alloca i32, align 4
  %mw_len = alloca i32, align 4
  %count = alloca i32, align 4
  %mw_rec = alloca %struct.df_mw_hardreg**, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5429, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info, metadata !5431, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !5433, metadata !DIExpression()), !dbg !5434
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5435
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !5435
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5435
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5435
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5435
  %1 = load i32, i32* %rt_int, align 8, !dbg !5435
  store i32 %1, i32* %uid, align 4, !dbg !5434
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !5436
  %tobool = icmp ne %struct.df* %2, null, !dbg !5436
  br i1 %tobool, label %if.end, label %if.then, !dbg !5438

if.then:                                          ; preds = %entry
  br label %if.end138, !dbg !5439

if.end:                                           ; preds = %entry
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !5440
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 27, !dbg !5442
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !5442
  %bf.cast = sext i8 %bf.load to i32, !dbg !5442
  %and = and i32 %bf.cast, 16, !dbg !5443
  %tobool1 = icmp ne i32 %and, 0, !dbg !5443
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !5444

if.then2:                                         ; preds = %if.end
  br label %if.end138, !dbg !5445

if.end3:                                          ; preds = %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5446
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !5446
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !5446
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 3, !dbg !5446
  %rt_bb = bitcast %union.rtunion_def* %arrayidx6 to %struct.basic_block_def**, !dbg !5446
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5446
  %tobool7 = icmp ne %struct.basic_block_def* %5, null, !dbg !5446
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !5448

if.then8:                                         ; preds = %if.end3
  br label %if.end138, !dbg !5449

if.end9:                                          ; preds = %if.end3
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !5450
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %6, i32 0, i32 1, !dbg !5450
  %arrayidx10 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !5450
  %7 = load %struct.dataflow*, %struct.dataflow** %arrayidx10, align 8, !dbg !5450
  call void @df_grow_bb_info(%struct.dataflow* %7), !dbg !5451
  call void @df_grow_reg_info(), !dbg !5452
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5453
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !5453
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !5453
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 0, !dbg !5453
  %rt_int14 = bitcast %union.rtunion_def* %arrayidx13 to i32*, !dbg !5453
  %9 = load i32, i32* %rt_int14, align 8, !dbg !5453
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !5453
  %insns_size = getelementptr inbounds %struct.df, %struct.df* %10, i32 0, i32 11, !dbg !5453
  %11 = load i32, i32* %insns_size, align 8, !dbg !5453
  %cmp = icmp ult i32 %9, %11, !dbg !5453
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5453

cond.true:                                        ; preds = %if.end9
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !5453
  %insns = getelementptr inbounds %struct.df, %struct.df* %12, i32 0, i32 10, !dbg !5453
  %13 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !5453
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5453
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !5453
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !5453
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 0, !dbg !5453
  %rt_int18 = bitcast %union.rtunion_def* %arrayidx17 to i32*, !dbg !5453
  %15 = load i32, i32* %rt_int18, align 8, !dbg !5453
  %idxprom = sext i32 %15 to i64, !dbg !5453
  %arrayidx19 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %13, i64 %idxprom, !dbg !5453
  %16 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx19, align 8, !dbg !5453
  br label %cond.end, !dbg !5453

cond.false:                                       ; preds = %if.end9
  br label %cond.end, !dbg !5453

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.df_insn_info* [ %16, %cond.true ], [ null, %cond.false ], !dbg !5453
  store %struct.df_insn_info* %cond, %struct.df_insn_info** %insn_info, align 8, !dbg !5454
  %17 = load %struct.df*, %struct.df** @df, align 8, !dbg !5455
  %changeable_flags20 = getelementptr inbounds %struct.df, %struct.df* %17, i32 0, i32 27, !dbg !5457
  %bf.load21 = load i8, i8* %changeable_flags20, align 4, !dbg !5457
  %bf.cast22 = sext i8 %bf.load21 to i32, !dbg !5457
  %and23 = and i32 %bf.cast22, 32, !dbg !5458
  %tobool24 = icmp ne i32 %and23, 0, !dbg !5458
  br i1 %tobool24, label %if.then25, label %if.end39, !dbg !5459

if.then25:                                        ; preds = %cond.end
  %18 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5460
  %tobool26 = icmp ne %struct.df_insn_info* %18, null, !dbg !5460
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !5463

if.then27:                                        ; preds = %if.then25
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5464
  %call = call %struct.df_insn_info* @df_insn_create_insn_record(%struct.rtx_def* %19), !dbg !5466
  store %struct.df_insn_info* %call, %struct.df_insn_info** %insn_info, align 8, !dbg !5467
  %20 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5468
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %20, i32 0, i32 1, !dbg !5469
  store %union.df_ref_d** getelementptr inbounds ([1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* @df_null_ref_rec, i64 0, i64 0), %union.df_ref_d*** %defs, align 8, !dbg !5470
  %21 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5471
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %21, i32 0, i32 2, !dbg !5472
  store %union.df_ref_d** getelementptr inbounds ([1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* @df_null_ref_rec, i64 0, i64 0), %union.df_ref_d*** %uses, align 8, !dbg !5473
  %22 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5474
  %eq_uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %22, i32 0, i32 3, !dbg !5475
  store %union.df_ref_d** getelementptr inbounds ([1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* @df_null_ref_rec, i64 0, i64 0), %union.df_ref_d*** %eq_uses, align 8, !dbg !5476
  %23 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5477
  %mw_hardregs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %23, i32 0, i32 4, !dbg !5478
  store %struct.df_mw_hardreg** getelementptr inbounds ([1 x %struct.df_mw_hardreg*], [1 x %struct.df_mw_hardreg*]* @df_null_mw_rec, i64 0, i64 0), %struct.df_mw_hardreg*** %mw_hardregs, align 8, !dbg !5479
  br label %if.end28, !dbg !5480

if.end28:                                         ; preds = %if.then27, %if.then25
  %24 = load %struct.df*, %struct.df** @df, align 8, !dbg !5481
  %insns_to_delete = getelementptr inbounds %struct.df, %struct.df* %24, i32 0, i32 18, !dbg !5482
  %25 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_delete, align 8, !dbg !5482
  %26 = load i32, i32* %uid, align 4, !dbg !5483
  %call29 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %25, i32 %26), !dbg !5484
  %27 = load %struct.df*, %struct.df** @df, align 8, !dbg !5485
  %insns_to_rescan = getelementptr inbounds %struct.df, %struct.df* %27, i32 0, i32 19, !dbg !5487
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_rescan, align 8, !dbg !5487
  %29 = load i32, i32* %uid, align 4, !dbg !5488
  %call30 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %28, i32 %29), !dbg !5489
  %tobool31 = icmp ne i32 %call30, 0, !dbg !5489
  br i1 %tobool31, label %if.end38, label %if.then32, !dbg !5490

if.then32:                                        ; preds = %if.end28
  %30 = load %struct.df*, %struct.df** @df, align 8, !dbg !5491
  %insns_to_notes_rescan = getelementptr inbounds %struct.df, %struct.df* %30, i32 0, i32 20, !dbg !5492
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_notes_rescan, align 8, !dbg !5492
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5493
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !5493
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !5493
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 0, !dbg !5493
  %rt_int36 = bitcast %union.rtunion_def* %arrayidx35 to i32*, !dbg !5493
  %33 = load i32, i32* %rt_int36, align 8, !dbg !5493
  %call37 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %31, i32 %33), !dbg !5494
  br label %if.end38, !dbg !5494

if.end38:                                         ; preds = %if.then32, %if.end28
  br label %if.end138, !dbg !5495

if.end39:                                         ; preds = %cond.end
  %34 = load %struct.df*, %struct.df** @df, align 8, !dbg !5496
  %insns_to_delete40 = getelementptr inbounds %struct.df, %struct.df* %34, i32 0, i32 18, !dbg !5497
  %35 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_delete40, align 8, !dbg !5497
  %36 = load i32, i32* %uid, align 4, !dbg !5498
  %call41 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %35, i32 %36), !dbg !5499
  %37 = load %struct.df*, %struct.df** @df, align 8, !dbg !5500
  %insns_to_notes_rescan42 = getelementptr inbounds %struct.df, %struct.df* %37, i32 0, i32 20, !dbg !5501
  %38 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %insns_to_notes_rescan42, align 8, !dbg !5501
  %39 = load i32, i32* %uid, align 4, !dbg !5502
  %call43 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %38, i32 %39), !dbg !5503
  %40 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5504
  %tobool44 = icmp ne %struct.df_insn_info* %40, null, !dbg !5504
  br i1 %tobool44, label %if.then45, label %if.else136, !dbg !5506

if.then45:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !5507, metadata !DIExpression()), !dbg !5509
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5510
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !5510
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !5510
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 3, !dbg !5510
  %rt_bb49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.basic_block_def**, !dbg !5510
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb49, align 8, !dbg !5510
  store %struct.basic_block_def* %42, %struct.basic_block_def** %bb, align 8, !dbg !5509
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note, metadata !5511, metadata !DIExpression()), !dbg !5512
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec* %collection_rec, metadata !5513, metadata !DIExpression()), !dbg !5514
  call void @llvm.dbg.declare(metadata i32* %num_deleted, metadata !5515, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.declare(metadata i32* %mw_len, metadata !5517, metadata !DIExpression()), !dbg !5518
  %43 = bitcast %struct.df_collection_rec* %collection_rec to i8*, !dbg !5519
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 32, i1 false), !dbg !5519
  %call50 = call i64 @VEC_df_ref_base_embedded_size(i32 32), !dbg !5520
  %44 = alloca i8, i64 %call50, align 16, !dbg !5520
  %45 = bitcast i8* %44 to %struct.VEC_df_ref_stack*, !dbg !5520
  %call51 = call %struct.VEC_df_ref_stack* @VEC_df_ref_stack_alloc1(i32 32, %struct.VEC_df_ref_stack* %45), !dbg !5520
  %eq_use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 2, !dbg !5521
  store %struct.VEC_df_ref_stack* %call51, %struct.VEC_df_ref_stack** %eq_use_vec, align 8, !dbg !5522
  %call52 = call i64 @VEC_df_mw_hardreg_ptr_base_embedded_size(i32 32), !dbg !5523
  %46 = alloca i8, i64 %call52, align 16, !dbg !5523
  %47 = bitcast i8* %46 to %struct.VEC_df_mw_hardreg_ptr_stack*, !dbg !5523
  %call53 = call %struct.VEC_df_mw_hardreg_ptr_stack* @VEC_df_mw_hardreg_ptr_stack_alloc1(i32 32, %struct.VEC_df_mw_hardreg_ptr_stack* %47), !dbg !5523
  %mw_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 3, !dbg !5524
  store %struct.VEC_df_mw_hardreg_ptr_stack* %call53, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec, align 8, !dbg !5525
  %48 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5526
  %call54 = call i32 @df_mw_hardreg_chain_delete_eq_uses(%struct.df_insn_info* %48), !dbg !5527
  store i32 %call54, i32* %num_deleted, align 4, !dbg !5528
  %49 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5529
  %eq_uses55 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %49, i32 0, i32 3, !dbg !5530
  %50 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses55, align 8, !dbg !5530
  call void @df_ref_chain_delete(%union.df_ref_d** %50), !dbg !5531
  %51 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5532
  %eq_uses56 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %51, i32 0, i32 3, !dbg !5533
  store %union.df_ref_d** null, %union.df_ref_d*** %eq_uses56, align 8, !dbg !5534
  %52 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5535
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1, !dbg !5535
  %fld58 = bitcast %union.u* %u57 to [1 x %union.rtunion_def]*, !dbg !5535
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i64 0, i64 7, !dbg !5535
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**, !dbg !5535
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5535
  store %struct.rtx_def* %53, %struct.rtx_def** %note, align 8, !dbg !5537
  br label %for.cond, !dbg !5538

for.cond:                                         ; preds = %for.inc, %if.then45
  %54 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !5539
  %tobool60 = icmp ne %struct.rtx_def* %54, null, !dbg !5541
  br i1 %tobool60, label %for.body, label %for.end, !dbg !5541

for.body:                                         ; preds = %for.cond
  %55 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !5542
  %56 = bitcast %struct.rtx_def* %55 to i32*, !dbg !5542
  %bf.load61 = load i32, i32* %56, align 8, !dbg !5542
  %bf.lshr = lshr i32 %bf.load61, 16, !dbg !5542
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5542
  switch i32 %bf.clear, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb
  ], !dbg !5544

sw.bb:                                            ; preds = %for.body, %for.body
  %57 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !5545
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !5545
  %fld63 = bitcast %union.u* %u62 to [1 x %union.rtunion_def]*, !dbg !5545
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 0, !dbg !5545
  %rt_rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**, !dbg !5545
  %58 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5547
  %59 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5548
  call void @df_uses_record(i32 2, %struct.df_collection_rec* %collection_rec, %struct.rtx_def** %rt_rtx65, i32 1, %struct.basic_block_def* %58, %struct.df_insn_info* %59, i32 4, i32 -1, i32 -1, i32 0), !dbg !5549
  br label %sw.default, !dbg !5549

sw.default:                                       ; preds = %for.body, %sw.bb
  br label %sw.epilog, !dbg !5550

sw.epilog:                                        ; preds = %sw.default
  br label %for.inc, !dbg !5551

for.inc:                                          ; preds = %sw.epilog
  %60 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !5552
  %u66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1, !dbg !5552
  %fld67 = bitcast %union.u* %u66 to [1 x %union.rtunion_def]*, !dbg !5552
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i64 0, i64 1, !dbg !5552
  %rt_rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**, !dbg !5552
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx69, align 8, !dbg !5552
  store %struct.rtx_def* %61, %struct.rtx_def** %note, align 8, !dbg !5553
  br label %for.cond, !dbg !5554, !llvm.loop !5555

for.end:                                          ; preds = %for.cond
  call void @df_canonize_collection_rec(%struct.df_collection_rec* %collection_rec), !dbg !5557
  %mw_vec70 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 3, !dbg !5558
  %62 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec70, align 8, !dbg !5558
  %tobool71 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %62, null, !dbg !5558
  br i1 %tobool71, label %cond.true72, label %cond.false74, !dbg !5558

cond.true72:                                      ; preds = %for.end
  %mw_vec73 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 3, !dbg !5558
  %63 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec73, align 8, !dbg !5558
  %base = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %63, i32 0, i32 0, !dbg !5558
  br label %cond.end75, !dbg !5558

cond.false74:                                     ; preds = %for.end
  br label %cond.end75, !dbg !5558

cond.end75:                                       ; preds = %cond.false74, %cond.true72
  %cond76 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base, %cond.true72 ], [ null, %cond.false74 ], !dbg !5558
  %call77 = call i32 @VEC_df_mw_hardreg_ptr_base_length(%struct.VEC_df_mw_hardreg_ptr_base* %cond76), !dbg !5558
  store i32 %call77, i32* %mw_len, align 4, !dbg !5559
  %64 = load i32, i32* %mw_len, align 4, !dbg !5560
  %tobool78 = icmp ne i32 %64, 0, !dbg !5560
  br i1 %tobool78, label %if.then79, label %if.end133, !dbg !5562

if.then79:                                        ; preds = %cond.end75
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5563, metadata !DIExpression()), !dbg !5565
  store i32 0, i32* %count, align 4, !dbg !5565
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg*** %mw_rec, metadata !5566, metadata !DIExpression()), !dbg !5567
  %65 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5568
  %mw_hardregs80 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %65, i32 0, i32 4, !dbg !5569
  %66 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs80, align 8, !dbg !5569
  store %struct.df_mw_hardreg** %66, %struct.df_mw_hardreg*** %mw_rec, align 8, !dbg !5567
  br label %while.cond, !dbg !5570

while.cond:                                       ; preds = %while.body, %if.then79
  %67 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_rec, align 8, !dbg !5571
  %68 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %67, align 8, !dbg !5572
  %tobool81 = icmp ne %struct.df_mw_hardreg* %68, null, !dbg !5570
  br i1 %tobool81, label %while.body, label %while.end, !dbg !5570

while.body:                                       ; preds = %while.cond
  %69 = load i32, i32* %count, align 4, !dbg !5573
  %inc = add i32 %69, 1, !dbg !5573
  store i32 %inc, i32* %count, align 4, !dbg !5573
  %70 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_rec, align 8, !dbg !5575
  %incdec.ptr = getelementptr inbounds %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %70, i32 1, !dbg !5575
  store %struct.df_mw_hardreg** %incdec.ptr, %struct.df_mw_hardreg*** %mw_rec, align 8, !dbg !5575
  br label %while.cond, !dbg !5570, !llvm.loop !5576

while.end:                                        ; preds = %while.cond
  %71 = load i32, i32* %count, align 4, !dbg !5578
  %tobool82 = icmp ne i32 %71, 0, !dbg !5578
  br i1 %tobool82, label %if.then83, label %if.else, !dbg !5580

if.then83:                                        ; preds = %while.end
  %72 = load i32, i32* %mw_len, align 4, !dbg !5581
  %73 = load i32, i32* %num_deleted, align 4, !dbg !5584
  %cmp84 = icmp ugt i32 %72, %73, !dbg !5585
  br i1 %cmp84, label %if.then85, label %if.end90, !dbg !5586

if.then85:                                        ; preds = %if.then83
  %74 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5587
  %mw_hardregs86 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %74, i32 0, i32 4, !dbg !5587
  %75 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs86, align 8, !dbg !5587
  %76 = bitcast %struct.df_mw_hardreg** %75 to i8*, !dbg !5587
  %77 = load i32, i32* %count, align 4, !dbg !5587
  %add = add i32 %77, 1, !dbg !5587
  %78 = load i32, i32* %mw_len, align 4, !dbg !5587
  %add87 = add i32 %add, %78, !dbg !5587
  %conv = zext i32 %add87 to i64, !dbg !5587
  %mul = mul i64 8, %conv, !dbg !5587
  %call88 = call i8* @xrealloc(i8* %76, i64 %mul), !dbg !5587
  %79 = bitcast i8* %call88 to %struct.df_mw_hardreg**, !dbg !5587
  %80 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5589
  %mw_hardregs89 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %80, i32 0, i32 4, !dbg !5590
  store %struct.df_mw_hardreg** %79, %struct.df_mw_hardreg*** %mw_hardregs89, align 8, !dbg !5591
  br label %if.end90, !dbg !5592

if.end90:                                         ; preds = %if.then85, %if.then83
  %81 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5593
  %mw_hardregs91 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %81, i32 0, i32 4, !dbg !5594
  %82 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs91, align 8, !dbg !5594
  %83 = load i32, i32* %count, align 4, !dbg !5595
  %idxprom92 = zext i32 %83 to i64, !dbg !5593
  %arrayidx93 = getelementptr inbounds %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %82, i64 %idxprom92, !dbg !5593
  %84 = bitcast %struct.df_mw_hardreg** %arrayidx93 to i8*, !dbg !5596
  %mw_vec94 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 3, !dbg !5597
  %85 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec94, align 8, !dbg !5597
  %tobool95 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %85, null, !dbg !5597
  br i1 %tobool95, label %cond.true96, label %cond.false99, !dbg !5597

cond.true96:                                      ; preds = %if.end90
  %mw_vec97 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 3, !dbg !5597
  %86 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec97, align 8, !dbg !5597
  %base98 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %86, i32 0, i32 0, !dbg !5597
  br label %cond.end100, !dbg !5597

cond.false99:                                     ; preds = %if.end90
  br label %cond.end100, !dbg !5597

cond.end100:                                      ; preds = %cond.false99, %cond.true96
  %cond101 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base98, %cond.true96 ], [ null, %cond.false99 ], !dbg !5597
  %call102 = call %struct.df_mw_hardreg** @VEC_df_mw_hardreg_ptr_base_address(%struct.VEC_df_mw_hardreg_ptr_base* %cond101), !dbg !5597
  %87 = bitcast %struct.df_mw_hardreg** %call102 to i8*, !dbg !5596
  %88 = load i32, i32* %mw_len, align 4, !dbg !5598
  %conv103 = zext i32 %88 to i64, !dbg !5598
  %mul104 = mul i64 %conv103, 8, !dbg !5599
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %87, i64 %mul104, i1 false), !dbg !5596
  %89 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5600
  %mw_hardregs105 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %89, i32 0, i32 4, !dbg !5601
  %90 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs105, align 8, !dbg !5601
  %91 = load i32, i32* %count, align 4, !dbg !5602
  %92 = load i32, i32* %mw_len, align 4, !dbg !5603
  %add106 = add i32 %91, %92, !dbg !5604
  %idxprom107 = zext i32 %add106 to i64, !dbg !5600
  %arrayidx108 = getelementptr inbounds %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %90, i64 %idxprom107, !dbg !5600
  store %struct.df_mw_hardreg* null, %struct.df_mw_hardreg** %arrayidx108, align 8, !dbg !5605
  %93 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5606
  %mw_hardregs109 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %93, i32 0, i32 4, !dbg !5607
  %94 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs109, align 8, !dbg !5607
  %95 = bitcast %struct.df_mw_hardreg** %94 to i8*, !dbg !5606
  %96 = load i32, i32* %count, align 4, !dbg !5608
  %97 = load i32, i32* %mw_len, align 4, !dbg !5609
  %add110 = add i32 %96, %97, !dbg !5610
  %conv111 = zext i32 %add110 to i64, !dbg !5608
  call void @spec_qsort(i8* %95, i64 %conv111, i64 8, i32 (i8*, i8*)* @df_mw_compare), !dbg !5611
  br label %if.end132, !dbg !5612

if.else:                                          ; preds = %while.end
  %98 = load i32, i32* %mw_len, align 4, !dbg !5613
  %add112 = add i32 1, %98, !dbg !5613
  %conv113 = zext i32 %add112 to i64, !dbg !5613
  %mul114 = mul i64 8, %conv113, !dbg !5613
  %call115 = call i8* @xmalloc(i64 %mul114), !dbg !5613
  %99 = bitcast i8* %call115 to %struct.df_mw_hardreg**, !dbg !5613
  %100 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5615
  %mw_hardregs116 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %100, i32 0, i32 4, !dbg !5616
  store %struct.df_mw_hardreg** %99, %struct.df_mw_hardreg*** %mw_hardregs116, align 8, !dbg !5617
  %101 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5618
  %mw_hardregs117 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %101, i32 0, i32 4, !dbg !5619
  %102 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs117, align 8, !dbg !5619
  %103 = bitcast %struct.df_mw_hardreg** %102 to i8*, !dbg !5620
  %mw_vec118 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 3, !dbg !5621
  %104 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec118, align 8, !dbg !5621
  %tobool119 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %104, null, !dbg !5621
  br i1 %tobool119, label %cond.true120, label %cond.false123, !dbg !5621

cond.true120:                                     ; preds = %if.else
  %mw_vec121 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 3, !dbg !5621
  %105 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec121, align 8, !dbg !5621
  %base122 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %105, i32 0, i32 0, !dbg !5621
  br label %cond.end124, !dbg !5621

cond.false123:                                    ; preds = %if.else
  br label %cond.end124, !dbg !5621

cond.end124:                                      ; preds = %cond.false123, %cond.true120
  %cond125 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base122, %cond.true120 ], [ null, %cond.false123 ], !dbg !5621
  %call126 = call %struct.df_mw_hardreg** @VEC_df_mw_hardreg_ptr_base_address(%struct.VEC_df_mw_hardreg_ptr_base* %cond125), !dbg !5621
  %106 = bitcast %struct.df_mw_hardreg** %call126 to i8*, !dbg !5620
  %107 = load i32, i32* %mw_len, align 4, !dbg !5622
  %conv127 = zext i32 %107 to i64, !dbg !5622
  %mul128 = mul i64 %conv127, 8, !dbg !5623
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %106, i64 %mul128, i1 false), !dbg !5620
  %108 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5624
  %mw_hardregs129 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %108, i32 0, i32 4, !dbg !5625
  %109 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs129, align 8, !dbg !5625
  %110 = load i32, i32* %mw_len, align 4, !dbg !5626
  %idxprom130 = zext i32 %110 to i64, !dbg !5624
  %arrayidx131 = getelementptr inbounds %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %109, i64 %idxprom130, !dbg !5624
  store %struct.df_mw_hardreg* null, %struct.df_mw_hardreg** %arrayidx131, align 8, !dbg !5627
  br label %if.end132

if.end132:                                        ; preds = %cond.end124, %cond.end100
  br label %if.end133, !dbg !5628

if.end133:                                        ; preds = %if.end132, %cond.end75
  %mw_vec134 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 3, !dbg !5629
  call void @VEC_df_mw_hardreg_ptr_stack_free(%struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec134), !dbg !5629
  %111 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5630
  %112 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5631
  call void @df_refs_add_to_chains(%struct.df_collection_rec* %collection_rec, %struct.basic_block_def* %111, %struct.rtx_def* %112), !dbg !5632
  %eq_use_vec135 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 2, !dbg !5633
  call void @VEC_df_ref_stack_free(%struct.VEC_df_ref_stack** %eq_use_vec135), !dbg !5633
  br label %if.end138, !dbg !5634

if.else136:                                       ; preds = %if.end39
  %113 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5635
  %call137 = call zeroext i8 @df_insn_rescan(%struct.rtx_def* %113), !dbg !5636
  br label %if.end138

if.end138:                                        ; preds = %if.then, %if.then2, %if.then8, %if.end38, %if.else136, %if.end133
  ret void, !dbg !5637
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_update_entry_exit_and_calls() #0 !dbg !5638 {
entry:
  %bb = alloca %struct.basic_block_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !5639, metadata !DIExpression()), !dbg !5640
  call void @df_update_entry_block_defs(), !dbg !5641
  call void @df_update_exit_block_uses(), !dbg !5642
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5643
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !5643
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !5643
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5643
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i32 0, i32 0, !dbg !5643
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5643
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i32 0, i32 6, !dbg !5643
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !5643
  store %struct.basic_block_def* %3, %struct.basic_block_def** %bb, align 8, !dbg !5643
  br label %for.cond, !dbg !5643

for.cond:                                         ; preds = %for.inc27, %entry
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5645
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5645
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, !dbg !5645
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !5645
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !5645
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i32 0, i32 1, !dbg !5645
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5645
  %cmp = icmp ne %struct.basic_block_def* %4, %7, !dbg !5645
  br i1 %cmp, label %for.body, label %for.end29, !dbg !5643

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !5647, metadata !DIExpression()), !dbg !5649
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5650
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i32 0, i32 7, !dbg !5650
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5650
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5650
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i32 0, i32 0, !dbg !5650
  %10 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !5650
  store %struct.rtx_def* %10, %struct.rtx_def** %insn, align 8, !dbg !5650
  br label %for.cond3, !dbg !5650

for.cond3:                                        ; preds = %for.inc, %for.body
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5652
  %tobool = icmp ne %struct.rtx_def* %11, null, !dbg !5652
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5652

land.rhs:                                         ; preds = %for.cond3
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5652
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5652
  %il4 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i32 0, i32 7, !dbg !5652
  %rtl5 = bitcast %union.basic_block_il_dependent* %il4 to %struct.rtl_bb_info**, !dbg !5652
  %14 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl5, align 8, !dbg !5652
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i32 0, i32 1, !dbg !5652
  %15 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5652
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !5652
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5652
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !5652
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5652
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5652
  %cmp6 = icmp ne %struct.rtx_def* %12, %16, !dbg !5652
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond3
  %17 = phi i1 [ false, %for.cond3 ], [ %cmp6, %land.rhs ], !dbg !5654
  br i1 %17, label %for.body7, label %for.end, !dbg !5650

for.body7:                                        ; preds = %land.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5655
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !5655
  %bf.load = load i32, i32* %19, align 8, !dbg !5655
  %bf.clear = and i32 %bf.load, 65535, !dbg !5655
  %cmp8 = icmp eq i32 %bf.clear, 8, !dbg !5655
  br i1 %cmp8, label %land.lhs.true, label %lor.lhs.false, !dbg !5655

lor.lhs.false:                                    ; preds = %for.body7
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5655
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !5655
  %bf.load9 = load i32, i32* %21, align 8, !dbg !5655
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !5655
  %cmp11 = icmp eq i32 %bf.clear10, 7, !dbg !5655
  br i1 %cmp11, label %land.lhs.true, label %lor.lhs.false12, !dbg !5655

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5655
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !5655
  %bf.load13 = load i32, i32* %23, align 8, !dbg !5655
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !5655
  %cmp15 = icmp eq i32 %bf.clear14, 9, !dbg !5655
  br i1 %cmp15, label %land.lhs.true, label %lor.lhs.false16, !dbg !5655

lor.lhs.false16:                                  ; preds = %lor.lhs.false12
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5655
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !5655
  %bf.load17 = load i32, i32* %25, align 8, !dbg !5655
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !5655
  %cmp19 = icmp eq i32 %bf.clear18, 10, !dbg !5655
  br i1 %cmp19, label %land.lhs.true, label %if.end, !dbg !5658

land.lhs.true:                                    ; preds = %lor.lhs.false16, %lor.lhs.false12, %lor.lhs.false, %for.body7
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5659
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !5659
  %bf.load20 = load i32, i32* %27, align 8, !dbg !5659
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !5659
  %cmp22 = icmp eq i32 %bf.clear21, 10, !dbg !5659
  br i1 %cmp22, label %if.then, label %if.end, !dbg !5660

if.then:                                          ; preds = %land.lhs.true
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5661
  %call = call zeroext i8 @df_insn_rescan(%struct.rtx_def* %28), !dbg !5662
  br label %if.end, !dbg !5662

if.end:                                           ; preds = %if.then, %land.lhs.true, %lor.lhs.false16
  br label %for.inc, !dbg !5663

for.inc:                                          ; preds = %if.end
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5652
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !5652
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !5652
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 2, !dbg !5652
  %rt_rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !5652
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !5652
  store %struct.rtx_def* %30, %struct.rtx_def** %insn, align 8, !dbg !5652
  br label %for.cond3, !dbg !5652, !llvm.loop !5664

for.end:                                          ; preds = %land.end
  br label %for.inc27, !dbg !5666

for.inc27:                                        ; preds = %for.end
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5645
  %next_bb28 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %31, i32 0, i32 6, !dbg !5645
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb28, align 8, !dbg !5645
  store %struct.basic_block_def* %32, %struct.basic_block_def** %bb, align 8, !dbg !5645
  br label %for.cond, !dbg !5645, !llvm.loop !5667

for.end29:                                        ; preds = %for.cond
  ret void, !dbg !5669
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_maybe_reorganize_use_refs(i32 %order) #0 !dbg !5670 {
entry:
  %order.addr = alloca i32, align 4
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !5673, metadata !DIExpression()), !dbg !5674
  %0 = load i32, i32* %order.addr, align 4, !dbg !5675
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !5677
  %use_info = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 4, !dbg !5678
  %ref_order = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %use_info, i32 0, i32 6, !dbg !5679
  %2 = load i32, i32* %ref_order, align 4, !dbg !5679
  %cmp = icmp eq i32 %0, %2, !dbg !5680
  br i1 %cmp, label %if.then, label %if.end, !dbg !5681

if.then:                                          ; preds = %entry
  br label %return, !dbg !5682

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %order.addr, align 4, !dbg !5683
  switch i32 %3, label %sw.epilog [
    i32 3, label %sw.bb
    i32 4, label %sw.bb2
    i32 5, label %sw.bb4
    i32 6, label %sw.bb6
    i32 0, label %sw.bb8
    i32 1, label %sw.bb13
    i32 2, label %sw.bb13
  ], !dbg !5684

sw.bb:                                            ; preds = %if.end
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !5685
  %use_info1 = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 4, !dbg !5687
  call void @df_reorganize_refs_by_reg(%struct.df_ref_info* %use_info1, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0), !dbg !5688
  br label %sw.epilog, !dbg !5689

sw.bb2:                                           ; preds = %if.end
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !5690
  %use_info3 = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 4, !dbg !5691
  call void @df_reorganize_refs_by_reg(%struct.df_ref_info* %use_info3, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1), !dbg !5692
  br label %sw.epilog, !dbg !5693

sw.bb4:                                           ; preds = %if.end
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !5694
  %use_info5 = getelementptr inbounds %struct.df, %struct.df* %6, i32 0, i32 4, !dbg !5695
  call void @df_reorganize_refs_by_insn(%struct.df_ref_info* %use_info5, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0), !dbg !5696
  br label %sw.epilog, !dbg !5697

sw.bb6:                                           ; preds = %if.end
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !5698
  %use_info7 = getelementptr inbounds %struct.df, %struct.df* %7, i32 0, i32 4, !dbg !5699
  call void @df_reorganize_refs_by_insn(%struct.df_ref_info* %use_info7, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1), !dbg !5700
  br label %sw.epilog, !dbg !5701

sw.bb8:                                           ; preds = %if.end
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !5702
  %use_info9 = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 4, !dbg !5703
  %refs = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %use_info9, i32 0, i32 0, !dbg !5704
  %9 = load %union.df_ref_d**, %union.df_ref_d*** %refs, align 8, !dbg !5704
  %10 = bitcast %union.df_ref_d** %9 to i8*, !dbg !5702
  call void @free(i8* %10), !dbg !5705
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !5706
  %use_info10 = getelementptr inbounds %struct.df, %struct.df* %11, i32 0, i32 4, !dbg !5707
  %refs11 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %use_info10, i32 0, i32 0, !dbg !5708
  store %union.df_ref_d** null, %union.df_ref_d*** %refs11, align 8, !dbg !5709
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !5710
  %use_info12 = getelementptr inbounds %struct.df, %struct.df* %12, i32 0, i32 4, !dbg !5711
  %refs_size = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %use_info12, i32 0, i32 3, !dbg !5712
  store i32 0, i32* %refs_size, align 8, !dbg !5713
  br label %sw.epilog, !dbg !5714

sw.bb13:                                          ; preds = %if.end, %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 1928, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !5715
  br label %sw.epilog, !dbg !5716

sw.epilog:                                        ; preds = %if.end, %sw.bb13, %sw.bb8, %sw.bb6, %sw.bb4, %sw.bb2, %sw.bb
  %13 = load i32, i32* %order.addr, align 4, !dbg !5717
  %14 = load %struct.df*, %struct.df** @df, align 8, !dbg !5718
  %use_info14 = getelementptr inbounds %struct.df, %struct.df* %14, i32 0, i32 4, !dbg !5719
  %ref_order15 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %use_info14, i32 0, i32 6, !dbg !5720
  store i32 %13, i32* %ref_order15, align 4, !dbg !5721
  br label %return, !dbg !5722

return:                                           ; preds = %sw.epilog, %if.then
  ret void, !dbg !5722
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_reorganize_refs_by_reg(%struct.df_ref_info* %ref_info, i8 zeroext %include_defs, i8 zeroext %include_uses, i8 zeroext %include_eq_uses) #0 !dbg !5723 {
entry:
  %ref_info.addr = alloca %struct.df_ref_info*, align 8
  %include_defs.addr = alloca i8, align 1
  %include_uses.addr = alloca i8, align 1
  %include_eq_uses.addr = alloca i8, align 1
  store %struct.df_ref_info* %ref_info, %struct.df_ref_info** %ref_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_ref_info** %ref_info.addr, metadata !5726, metadata !DIExpression()), !dbg !5727
  store i8 %include_defs, i8* %include_defs.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %include_defs.addr, metadata !5728, metadata !DIExpression()), !dbg !5729
  store i8 %include_uses, i8* %include_uses.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %include_uses.addr, metadata !5730, metadata !DIExpression()), !dbg !5731
  store i8 %include_eq_uses, i8* %include_eq_uses.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %include_eq_uses.addr, metadata !5732, metadata !DIExpression()), !dbg !5733
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5734
  %analyze_subset = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 28, !dbg !5736
  %1 = load i8, i8* %analyze_subset, align 1, !dbg !5736
  %tobool = icmp ne i8 %1, 0, !dbg !5734
  br i1 %tobool, label %if.then, label %if.else, !dbg !5737

if.then:                                          ; preds = %entry
  %2 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !5738
  %3 = load i8, i8* %include_defs.addr, align 1, !dbg !5739
  %4 = load i8, i8* %include_uses.addr, align 1, !dbg !5740
  %5 = load i8, i8* %include_eq_uses.addr, align 1, !dbg !5741
  call void @df_reorganize_refs_by_reg_by_insn(%struct.df_ref_info* %2, i8 zeroext %3, i8 zeroext %4, i8 zeroext %5), !dbg !5742
  br label %if.end, !dbg !5742

if.else:                                          ; preds = %entry
  %6 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !5743
  %7 = load i8, i8* %include_defs.addr, align 1, !dbg !5744
  %8 = load i8, i8* %include_uses.addr, align 1, !dbg !5745
  %9 = load i8, i8* %include_eq_uses.addr, align 1, !dbg !5746
  call void @df_reorganize_refs_by_reg_by_reg(%struct.df_ref_info* %6, i8 zeroext %7, i8 zeroext %8, i8 zeroext %9), !dbg !5747
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5748
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_reorganize_refs_by_insn(%struct.df_ref_info* %ref_info, i8 zeroext %include_defs, i8 zeroext %include_uses, i8 zeroext %include_eq_uses) #0 !dbg !5749 {
entry:
  %ref_info.addr = alloca %struct.df_ref_info*, align 8
  %include_defs.addr = alloca i8, align 1
  %include_uses.addr = alloca i8, align 1
  %include_eq_uses.addr = alloca i8, align 1
  %bb = alloca %struct.basic_block_def*, align 8
  %offset = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %index = alloca i32, align 4
  store %struct.df_ref_info* %ref_info, %struct.df_ref_info** %ref_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_ref_info** %ref_info.addr, metadata !5750, metadata !DIExpression()), !dbg !5751
  store i8 %include_defs, i8* %include_defs.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %include_defs.addr, metadata !5752, metadata !DIExpression()), !dbg !5753
  store i8 %include_uses, i8* %include_uses.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %include_uses.addr, metadata !5754, metadata !DIExpression()), !dbg !5755
  store i8 %include_eq_uses, i8* %include_eq_uses.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %include_eq_uses.addr, metadata !5756, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !5758, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !5760, metadata !DIExpression()), !dbg !5761
  store i32 0, i32* %offset, align 4, !dbg !5761
  %0 = load i8, i8* %include_defs.addr, align 1, !dbg !5762
  %1 = load i8, i8* %include_uses.addr, align 1, !dbg !5763
  %2 = load i8, i8* %include_eq_uses.addr, align 1, !dbg !5764
  %call = call i32 @df_count_refs(i8 zeroext %0, i8 zeroext %1, i8 zeroext %2), !dbg !5765
  %3 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !5766
  %total_size = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %3, i32 0, i32 5, !dbg !5767
  store i32 %call, i32* %total_size, align 8, !dbg !5768
  %4 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !5769
  call void @df_check_and_grow_ref_info(%struct.df_ref_info* %4, i32 1), !dbg !5770
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !5771
  %blocks_to_analyze = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 2, !dbg !5773
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %blocks_to_analyze, align 8, !dbg !5773
  %tobool = icmp ne %struct.bitmap_head_def* %6, null, !dbg !5771
  br i1 %tobool, label %if.then, label %if.else, !dbg !5774

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !5775, metadata !DIExpression()), !dbg !5777
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5778, metadata !DIExpression()), !dbg !5779
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !5780
  %blocks_to_analyze1 = getelementptr inbounds %struct.df, %struct.df* %7, i32 0, i32 2, !dbg !5780
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %blocks_to_analyze1, align 8, !dbg !5780
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %8, i32 0, i32* %index), !dbg !5780
  br label %for.cond, !dbg !5780

for.cond:                                         ; preds = %for.inc, %if.then
  %call2 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %index), !dbg !5782
  %tobool3 = icmp ne i8 %call2, 0, !dbg !5780
  br i1 %tobool3, label %for.body, label %for.end, !dbg !5780

for.body:                                         ; preds = %for.cond
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5784
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, !dbg !5784
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !5784
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5784
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i32 0, i32 2, !dbg !5784
  %11 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !5784
  %tobool4 = icmp ne %struct.VEC_basic_block_gc* %11, null, !dbg !5784
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !5784

cond.true:                                        ; preds = %for.body
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5784
  %add.ptr5 = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, !dbg !5784
  %cfg6 = getelementptr inbounds %struct.function, %struct.function* %add.ptr5, i32 0, i32 1, !dbg !5784
  %13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg6, align 8, !dbg !5784
  %x_basic_block_info7 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i32 0, i32 2, !dbg !5784
  %14 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info7, align 8, !dbg !5784
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %14, i32 0, i32 0, !dbg !5784
  br label %cond.end, !dbg !5784

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !5784

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !5784
  %15 = load i32, i32* %index, align 4, !dbg !5784
  %call8 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %15), !dbg !5784
  %16 = load i32, i32* %offset, align 4, !dbg !5786
  %17 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !5787
  %18 = load i8, i8* %include_defs.addr, align 1, !dbg !5788
  %19 = load i8, i8* %include_uses.addr, align 1, !dbg !5789
  %20 = load i8, i8* %include_eq_uses.addr, align 1, !dbg !5790
  %call9 = call i32 @df_reorganize_refs_by_insn_bb(%struct.basic_block_def* %call8, i32 %16, %struct.df_ref_info* %17, i8 zeroext %18, i8 zeroext %19, i8 zeroext %20), !dbg !5791
  store i32 %call9, i32* %offset, align 4, !dbg !5792
  br label %for.inc, !dbg !5793

for.inc:                                          ; preds = %cond.end
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %index), !dbg !5782
  br label %for.cond, !dbg !5782, !llvm.loop !5794

for.end:                                          ; preds = %for.cond
  %21 = load i32, i32* %offset, align 4, !dbg !5796
  %22 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !5797
  %table_size = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %22, i32 0, i32 4, !dbg !5798
  store i32 %21, i32* %table_size, align 4, !dbg !5799
  br label %if.end, !dbg !5800

if.else:                                          ; preds = %entry
  %23 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5801
  %add.ptr10 = getelementptr inbounds %struct.function, %struct.function* %23, i64 0, !dbg !5801
  %cfg11 = getelementptr inbounds %struct.function, %struct.function* %add.ptr10, i32 0, i32 1, !dbg !5801
  %24 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg11, align 8, !dbg !5801
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %24, i32 0, i32 0, !dbg !5801
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5801
  store %struct.basic_block_def* %25, %struct.basic_block_def** %bb, align 8, !dbg !5801
  br label %for.cond12, !dbg !5801

for.cond12:                                       ; preds = %for.inc16, %if.else
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5804
  %tobool13 = icmp ne %struct.basic_block_def* %26, null, !dbg !5801
  br i1 %tobool13, label %for.body14, label %for.end17, !dbg !5801

for.body14:                                       ; preds = %for.cond12
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5806
  %28 = load i32, i32* %offset, align 4, !dbg !5807
  %29 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !5808
  %30 = load i8, i8* %include_defs.addr, align 1, !dbg !5809
  %31 = load i8, i8* %include_uses.addr, align 1, !dbg !5810
  %32 = load i8, i8* %include_eq_uses.addr, align 1, !dbg !5811
  %call15 = call i32 @df_reorganize_refs_by_insn_bb(%struct.basic_block_def* %27, i32 %28, %struct.df_ref_info* %29, i8 zeroext %30, i8 zeroext %31, i8 zeroext %32), !dbg !5812
  store i32 %call15, i32* %offset, align 4, !dbg !5813
  br label %for.inc16, !dbg !5814

for.inc16:                                        ; preds = %for.body14
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5804
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %33, i32 0, i32 6, !dbg !5804
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !5804
  store %struct.basic_block_def* %34, %struct.basic_block_def** %bb, align 8, !dbg !5804
  br label %for.cond12, !dbg !5804, !llvm.loop !5815

for.end17:                                        ; preds = %for.cond12
  %35 = load i32, i32* %offset, align 4, !dbg !5817
  %36 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !5818
  %table_size18 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %36, i32 0, i32 4, !dbg !5819
  store i32 %35, i32* %table_size18, align 4, !dbg !5820
  br label %if.end

if.end:                                           ; preds = %for.end17, %for.end
  ret void, !dbg !5821
}

declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_maybe_reorganize_def_refs(i32 %order) #0 !dbg !5822 {
entry:
  %order.addr = alloca i32, align 4
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !5823, metadata !DIExpression()), !dbg !5824
  %0 = load i32, i32* %order.addr, align 4, !dbg !5825
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !5827
  %def_info = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 3, !dbg !5828
  %ref_order = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info, i32 0, i32 6, !dbg !5829
  %2 = load i32, i32* %ref_order, align 4, !dbg !5829
  %cmp = icmp eq i32 %0, %2, !dbg !5830
  br i1 %cmp, label %if.then, label %if.end, !dbg !5831

if.then:                                          ; preds = %entry
  br label %return, !dbg !5832

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %order.addr, align 4, !dbg !5833
  switch i32 %3, label %sw.epilog [
    i32 3, label %sw.bb
    i32 5, label %sw.bb2
    i32 0, label %sw.bb4
    i32 6, label %sw.bb9
    i32 4, label %sw.bb9
    i32 1, label %sw.bb9
    i32 2, label %sw.bb9
  ], !dbg !5834

sw.bb:                                            ; preds = %if.end
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !5835
  %def_info1 = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 3, !dbg !5837
  call void @df_reorganize_refs_by_reg(%struct.df_ref_info* %def_info1, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0), !dbg !5838
  br label %sw.epilog, !dbg !5839

sw.bb2:                                           ; preds = %if.end
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !5840
  %def_info3 = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 3, !dbg !5841
  call void @df_reorganize_refs_by_insn(%struct.df_ref_info* %def_info3, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0), !dbg !5842
  br label %sw.epilog, !dbg !5843

sw.bb4:                                           ; preds = %if.end
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !5844
  %def_info5 = getelementptr inbounds %struct.df, %struct.df* %6, i32 0, i32 3, !dbg !5845
  %refs = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info5, i32 0, i32 0, !dbg !5846
  %7 = load %union.df_ref_d**, %union.df_ref_d*** %refs, align 8, !dbg !5846
  %8 = bitcast %union.df_ref_d** %7 to i8*, !dbg !5844
  call void @free(i8* %8), !dbg !5847
  %9 = load %struct.df*, %struct.df** @df, align 8, !dbg !5848
  %def_info6 = getelementptr inbounds %struct.df, %struct.df* %9, i32 0, i32 3, !dbg !5849
  %refs7 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info6, i32 0, i32 0, !dbg !5850
  store %union.df_ref_d** null, %union.df_ref_d*** %refs7, align 8, !dbg !5851
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !5852
  %def_info8 = getelementptr inbounds %struct.df, %struct.df* %10, i32 0, i32 3, !dbg !5853
  %refs_size = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info8, i32 0, i32 3, !dbg !5854
  store i32 0, i32* %refs_size, align 8, !dbg !5855
  br label %sw.epilog, !dbg !5856

sw.bb9:                                           ; preds = %if.end, %if.end, %if.end, %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 1964, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !5857
  br label %sw.epilog, !dbg !5858

sw.epilog:                                        ; preds = %if.end, %sw.bb9, %sw.bb4, %sw.bb2, %sw.bb
  %11 = load i32, i32* %order.addr, align 4, !dbg !5859
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !5860
  %def_info10 = getelementptr inbounds %struct.df, %struct.df* %12, i32 0, i32 3, !dbg !5861
  %ref_order11 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info10, i32 0, i32 6, !dbg !5862
  store i32 %11, i32* %ref_order11, align 4, !dbg !5863
  br label %return, !dbg !5864

return:                                           ; preds = %sw.epilog, %if.then
  ret void, !dbg !5864
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_insn_change_bb(%struct.rtx_def* %insn, %struct.basic_block_def* %new_bb) #0 !dbg !5865 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %new_bb.addr = alloca %struct.basic_block_def*, align 8
  %old_bb = alloca %struct.basic_block_def*, align 8
  %insn_info = alloca %struct.df_insn_info*, align 8
  %uid = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5868, metadata !DIExpression()), !dbg !5869
  store %struct.basic_block_def* %new_bb, %struct.basic_block_def** %new_bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %new_bb.addr, metadata !5870, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %old_bb, metadata !5872, metadata !DIExpression()), !dbg !5873
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5874
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !5874
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5874
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !5874
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !5874
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5874
  store %struct.basic_block_def* %1, %struct.basic_block_def** %old_bb, align 8, !dbg !5873
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info, metadata !5875, metadata !DIExpression()), !dbg !5876
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !5877, metadata !DIExpression()), !dbg !5878
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5879
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !5879
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !5879
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 0, !dbg !5879
  %rt_int = bitcast %union.rtunion_def* %arrayidx3 to i32*, !dbg !5879
  %3 = load i32, i32* %rt_int, align 8, !dbg !5879
  store i32 %3, i32* %uid, align 4, !dbg !5878
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %old_bb, align 8, !dbg !5880
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb.addr, align 8, !dbg !5882
  %cmp = icmp eq %struct.basic_block_def* %4, %5, !dbg !5883
  br i1 %cmp, label %if.then, label %if.end, !dbg !5884

if.then:                                          ; preds = %entry
  br label %if.end49, !dbg !5885

if.end:                                           ; preds = %entry
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb.addr, align 8, !dbg !5886
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5886
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !5886
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !5886
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 3, !dbg !5886
  %rt_bb7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.basic_block_def**, !dbg !5886
  store %struct.basic_block_def* %6, %struct.basic_block_def** %rt_bb7, align 8, !dbg !5886
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !5887
  %tobool = icmp ne %struct.df* %8, null, !dbg !5887
  br i1 %tobool, label %if.end9, label %if.then8, !dbg !5889

if.then8:                                         ; preds = %if.end
  br label %if.end49, !dbg !5890

if.end9:                                          ; preds = %if.end
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5891
  %tobool10 = icmp ne %struct._IO_FILE* %9, null, !dbg !5891
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !5893

if.then11:                                        ; preds = %if.end9
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5894
  %11 = load i32, i32* %uid, align 4, !dbg !5895
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i32 %11), !dbg !5896
  br label %if.end12, !dbg !5896

if.end12:                                         ; preds = %if.then11, %if.end9
  %12 = load i32, i32* %uid, align 4, !dbg !5897
  %13 = load %struct.df*, %struct.df** @df, align 8, !dbg !5897
  %insns_size = getelementptr inbounds %struct.df, %struct.df* %13, i32 0, i32 11, !dbg !5897
  %14 = load i32, i32* %insns_size, align 8, !dbg !5897
  %cmp13 = icmp ult i32 %12, %14, !dbg !5897
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !5897

cond.true:                                        ; preds = %if.end12
  %15 = load %struct.df*, %struct.df** @df, align 8, !dbg !5897
  %insns = getelementptr inbounds %struct.df, %struct.df* %15, i32 0, i32 10, !dbg !5897
  %16 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !5897
  %17 = load i32, i32* %uid, align 4, !dbg !5897
  %idxprom = zext i32 %17 to i64, !dbg !5897
  %arrayidx14 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %16, i64 %idxprom, !dbg !5897
  %18 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx14, align 8, !dbg !5897
  br label %cond.end, !dbg !5897

cond.false:                                       ; preds = %if.end12
  br label %cond.end, !dbg !5897

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.df_insn_info* [ %18, %cond.true ], [ null, %cond.false ], !dbg !5897
  store %struct.df_insn_info* %cond, %struct.df_insn_info** %insn_info, align 8, !dbg !5898
  %19 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5899
  %cmp15 = icmp eq %struct.df_insn_info* %19, null, !dbg !5901
  br i1 %cmp15, label %if.then16, label %if.end22, !dbg !5902

if.then16:                                        ; preds = %cond.end
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5903
  %tobool17 = icmp ne %struct._IO_FILE* %20, null, !dbg !5903
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !5906

if.then18:                                        ; preds = %if.then16
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5907
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0)), !dbg !5908
  br label %if.end20, !dbg !5908

if.end20:                                         ; preds = %if.then18, %if.then16
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5909
  %call21 = call zeroext i8 @df_insn_rescan(%struct.rtx_def* %22), !dbg !5910
  br label %if.end49, !dbg !5911

if.end22:                                         ; preds = %cond.end
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5912
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !5912
  %bf.load = load i32, i32* %24, align 8, !dbg !5912
  %bf.clear = and i32 %bf.load, 65535, !dbg !5912
  %cmp23 = icmp eq i32 %bf.clear, 8, !dbg !5912
  br i1 %cmp23, label %if.end36, label %lor.lhs.false, !dbg !5912

lor.lhs.false:                                    ; preds = %if.end22
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5912
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !5912
  %bf.load24 = load i32, i32* %26, align 8, !dbg !5912
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !5912
  %cmp26 = icmp eq i32 %bf.clear25, 7, !dbg !5912
  br i1 %cmp26, label %if.end36, label %lor.lhs.false27, !dbg !5912

lor.lhs.false27:                                  ; preds = %lor.lhs.false
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5912
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !5912
  %bf.load28 = load i32, i32* %28, align 8, !dbg !5912
  %bf.clear29 = and i32 %bf.load28, 65535, !dbg !5912
  %cmp30 = icmp eq i32 %bf.clear29, 9, !dbg !5912
  br i1 %cmp30, label %if.end36, label %lor.lhs.false31, !dbg !5912

lor.lhs.false31:                                  ; preds = %lor.lhs.false27
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5912
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !5912
  %bf.load32 = load i32, i32* %30, align 8, !dbg !5912
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !5912
  %cmp34 = icmp eq i32 %bf.clear33, 10, !dbg !5912
  br i1 %cmp34, label %if.end36, label %if.then35, !dbg !5914

if.then35:                                        ; preds = %lor.lhs.false31
  br label %if.end49, !dbg !5915

if.end36:                                         ; preds = %lor.lhs.false31, %lor.lhs.false27, %lor.lhs.false, %if.end22
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb.addr, align 8, !dbg !5916
  call void @df_set_bb_dirty(%struct.basic_block_def* %31), !dbg !5917
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %old_bb, align 8, !dbg !5918
  %tobool37 = icmp ne %struct.basic_block_def* %32, null, !dbg !5918
  br i1 %tobool37, label %if.then38, label %if.else, !dbg !5920

if.then38:                                        ; preds = %if.end36
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5921
  %tobool39 = icmp ne %struct._IO_FILE* %33, null, !dbg !5921
  br i1 %tobool39, label %if.then40, label %if.end43, !dbg !5924

if.then40:                                        ; preds = %if.then38
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5925
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %old_bb, align 8, !dbg !5926
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %35, i32 0, i32 9, !dbg !5927
  %36 = load i32, i32* %index, align 8, !dbg !5927
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb.addr, align 8, !dbg !5928
  %index41 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %37, i32 0, i32 9, !dbg !5929
  %38 = load i32, i32* %index41, align 8, !dbg !5929
  %call42 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0), i32 %36, i32 %38), !dbg !5930
  br label %if.end43, !dbg !5930

if.end43:                                         ; preds = %if.then40, %if.then38
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %old_bb, align 8, !dbg !5931
  call void @df_set_bb_dirty(%struct.basic_block_def* %39), !dbg !5932
  br label %if.end49, !dbg !5933

if.else:                                          ; preds = %if.end36
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5934
  %tobool44 = icmp ne %struct._IO_FILE* %40, null, !dbg !5934
  br i1 %tobool44, label %if.then45, label %if.end48, !dbg !5936

if.then45:                                        ; preds = %if.else
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5937
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %new_bb.addr, align 8, !dbg !5938
  %index46 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %42, i32 0, i32 9, !dbg !5939
  %43 = load i32, i32* %index46, align 8, !dbg !5939
  %call47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0), i32 %43), !dbg !5940
  br label %if.end48, !dbg !5940

if.end48:                                         ; preds = %if.then45, %if.else
  br label %if.end49

if.end49:                                         ; preds = %if.then, %if.then8, %if.end20, %if.then35, %if.end48, %if.end43
  ret void, !dbg !5941
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_ref_change_reg_with_loc(i32 %old_regno, i32 %new_regno, %struct.rtx_def* %loc) #0 !dbg !5942 {
entry:
  %old_regno.addr = alloca i32, align 4
  %new_regno.addr = alloca i32, align 4
  %loc.addr = alloca %struct.rtx_def*, align 8
  store i32 %old_regno, i32* %old_regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %old_regno.addr, metadata !5945, metadata !DIExpression()), !dbg !5946
  store i32 %new_regno, i32* %new_regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_regno.addr, metadata !5947, metadata !DIExpression()), !dbg !5948
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !5949, metadata !DIExpression()), !dbg !5950
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5951
  %tobool = icmp ne %struct.df* %0, null, !dbg !5951
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5953

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %old_regno.addr, align 4, !dbg !5954
  %cmp = icmp eq i32 %1, -1, !dbg !5955
  br i1 %cmp, label %if.then, label %lor.lhs.false1, !dbg !5956

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %old_regno.addr, align 4, !dbg !5957
  %3 = load i32, i32* %new_regno.addr, align 4, !dbg !5958
  %cmp2 = icmp eq i32 %2, %3, !dbg !5959
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5960

if.then:                                          ; preds = %lor.lhs.false1, %lor.lhs.false, %entry
  br label %return, !dbg !5961

if.end:                                           ; preds = %lor.lhs.false1
  call void @df_grow_reg_info(), !dbg !5962
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !5963
  %def_regs = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 5, !dbg !5963
  %5 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs, align 8, !dbg !5963
  %6 = load i32, i32* %old_regno.addr, align 4, !dbg !5963
  %idxprom = sext i32 %6 to i64, !dbg !5963
  %arrayidx = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %5, i64 %idxprom, !dbg !5963
  %7 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx, align 8, !dbg !5963
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !5964
  %def_regs3 = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 5, !dbg !5964
  %9 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs3, align 8, !dbg !5964
  %10 = load i32, i32* %new_regno.addr, align 4, !dbg !5964
  %idxprom4 = sext i32 %10 to i64, !dbg !5964
  %arrayidx5 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %9, i64 %idxprom4, !dbg !5964
  %11 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx5, align 8, !dbg !5964
  %12 = load i32, i32* %new_regno.addr, align 4, !dbg !5965
  %13 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5966
  call void @df_ref_change_reg_with_loc_1(%struct.df_reg_info* %7, %struct.df_reg_info* %11, i32 %12, %struct.rtx_def* %13), !dbg !5967
  %14 = load %struct.df*, %struct.df** @df, align 8, !dbg !5968
  %use_regs = getelementptr inbounds %struct.df, %struct.df* %14, i32 0, i32 6, !dbg !5968
  %15 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs, align 8, !dbg !5968
  %16 = load i32, i32* %old_regno.addr, align 4, !dbg !5968
  %idxprom6 = sext i32 %16 to i64, !dbg !5968
  %arrayidx7 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %15, i64 %idxprom6, !dbg !5968
  %17 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx7, align 8, !dbg !5968
  %18 = load %struct.df*, %struct.df** @df, align 8, !dbg !5969
  %use_regs8 = getelementptr inbounds %struct.df, %struct.df* %18, i32 0, i32 6, !dbg !5969
  %19 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs8, align 8, !dbg !5969
  %20 = load i32, i32* %new_regno.addr, align 4, !dbg !5969
  %idxprom9 = sext i32 %20 to i64, !dbg !5969
  %arrayidx10 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %19, i64 %idxprom9, !dbg !5969
  %21 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx10, align 8, !dbg !5969
  %22 = load i32, i32* %new_regno.addr, align 4, !dbg !5970
  %23 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5971
  call void @df_ref_change_reg_with_loc_1(%struct.df_reg_info* %17, %struct.df_reg_info* %21, i32 %22, %struct.rtx_def* %23), !dbg !5972
  %24 = load %struct.df*, %struct.df** @df, align 8, !dbg !5973
  %eq_use_regs = getelementptr inbounds %struct.df, %struct.df* %24, i32 0, i32 7, !dbg !5973
  %25 = load %struct.df_reg_info**, %struct.df_reg_info*** %eq_use_regs, align 8, !dbg !5973
  %26 = load i32, i32* %old_regno.addr, align 4, !dbg !5973
  %idxprom11 = sext i32 %26 to i64, !dbg !5973
  %arrayidx12 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %25, i64 %idxprom11, !dbg !5973
  %27 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx12, align 8, !dbg !5973
  %28 = load %struct.df*, %struct.df** @df, align 8, !dbg !5974
  %eq_use_regs13 = getelementptr inbounds %struct.df, %struct.df* %28, i32 0, i32 7, !dbg !5974
  %29 = load %struct.df_reg_info**, %struct.df_reg_info*** %eq_use_regs13, align 8, !dbg !5974
  %30 = load i32, i32* %new_regno.addr, align 4, !dbg !5974
  %idxprom14 = sext i32 %30 to i64, !dbg !5974
  %arrayidx15 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %29, i64 %idxprom14, !dbg !5974
  %31 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx15, align 8, !dbg !5974
  %32 = load i32, i32* %new_regno.addr, align 4, !dbg !5975
  %33 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5976
  call void @df_ref_change_reg_with_loc_1(%struct.df_reg_info* %27, %struct.df_reg_info* %31, i32 %32, %struct.rtx_def* %33), !dbg !5977
  br label %return, !dbg !5978

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5978
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_ref_change_reg_with_loc_1(%struct.df_reg_info* %old_df, %struct.df_reg_info* %new_df, i32 %new_regno, %struct.rtx_def* %loc) #0 !dbg !5979 {
entry:
  %old_df.addr = alloca %struct.df_reg_info*, align 8
  %new_df.addr = alloca %struct.df_reg_info*, align 8
  %new_regno.addr = alloca i32, align 4
  %loc.addr = alloca %struct.rtx_def*, align 8
  %the_ref = alloca %union.df_ref_d*, align 8
  %next_ref = alloca %union.df_ref_d*, align 8
  %prev_ref = alloca %union.df_ref_d*, align 8
  %ref_vec = alloca %union.df_ref_d**, align 8
  %ref_vec_t = alloca %union.df_ref_d**, align 8
  %insn_info = alloca %struct.df_insn_info*, align 8
  %count = alloca i32, align 4
  store %struct.df_reg_info* %old_df, %struct.df_reg_info** %old_df.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_reg_info** %old_df.addr, metadata !5982, metadata !DIExpression()), !dbg !5983
  store %struct.df_reg_info* %new_df, %struct.df_reg_info** %new_df.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_reg_info** %new_df.addr, metadata !5984, metadata !DIExpression()), !dbg !5985
  store i32 %new_regno, i32* %new_regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_regno.addr, metadata !5986, metadata !DIExpression()), !dbg !5987
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !5988, metadata !DIExpression()), !dbg !5989
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %the_ref, metadata !5990, metadata !DIExpression()), !dbg !5991
  %0 = load %struct.df_reg_info*, %struct.df_reg_info** %old_df.addr, align 8, !dbg !5992
  %reg_chain = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %0, i32 0, i32 0, !dbg !5993
  %1 = load %union.df_ref_d*, %union.df_ref_d** %reg_chain, align 8, !dbg !5993
  store %union.df_ref_d* %1, %union.df_ref_d** %the_ref, align 8, !dbg !5991
  br label %while.cond, !dbg !5994

while.cond:                                       ; preds = %if.end108, %entry
  %2 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !5995
  %tobool = icmp ne %union.df_ref_d* %2, null, !dbg !5994
  br i1 %tobool, label %while.body, label %while.end109, !dbg !5994

while.body:                                       ; preds = %while.cond
  %3 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !5996
  %base = bitcast %union.df_ref_d* %3 to %struct.df_base_ref*, !dbg !5996
  %4 = bitcast %struct.df_base_ref* %base to i32*, !dbg !5996
  %bf.load = load i32, i32* %4, align 8, !dbg !5996
  %bf.clear = and i32 %bf.load, 255, !dbg !5996
  %cmp = icmp eq i32 %bf.clear, 1, !dbg !5996
  br i1 %cmp, label %if.else105, label %land.lhs.true, !dbg !5999

land.lhs.true:                                    ; preds = %while.body
  %5 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6000
  %base1 = bitcast %union.df_ref_d* %5 to %struct.df_base_ref*, !dbg !6000
  %6 = bitcast %struct.df_base_ref* %base1 to i32*, !dbg !6000
  %bf.load2 = load i32, i32* %6, align 8, !dbg !6000
  %bf.clear3 = and i32 %bf.load2, 255, !dbg !6000
  %cmp4 = icmp eq i32 %bf.clear3, 2, !dbg !6000
  br i1 %cmp4, label %cond.true, label %lor.lhs.false, !dbg !6000

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6000
  %base5 = bitcast %union.df_ref_d* %7 to %struct.df_base_ref*, !dbg !6000
  %8 = bitcast %struct.df_base_ref* %base5 to i32*, !dbg !6000
  %bf.load6 = load i32, i32* %8, align 8, !dbg !6000
  %bf.clear7 = and i32 %bf.load6, 255, !dbg !6000
  %cmp8 = icmp eq i32 %bf.clear7, 3, !dbg !6000
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !6001

cond.true:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %9 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6000
  %regular_ref = bitcast %union.df_ref_d* %9 to %struct.df_regular_ref*, !dbg !6000
  %loc9 = getelementptr inbounds %struct.df_regular_ref, %struct.df_regular_ref* %regular_ref, i32 0, i32 1, !dbg !6000
  %10 = load %struct.rtx_def**, %struct.rtx_def*** %loc9, align 8, !dbg !6000
  %tobool10 = icmp ne %struct.rtx_def** %10, null, !dbg !6000
  br i1 %tobool10, label %land.lhs.true11, label %if.else105, !dbg !6000

cond.false:                                       ; preds = %lor.lhs.false
  br i1 false, label %land.lhs.true11, label %if.else105, !dbg !6001

land.lhs.true11:                                  ; preds = %cond.false, %cond.true
  %11 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6002
  %base12 = bitcast %union.df_ref_d* %11 to %struct.df_base_ref*, !dbg !6002
  %12 = bitcast %struct.df_base_ref* %base12 to i32*, !dbg !6002
  %bf.load13 = load i32, i32* %12, align 8, !dbg !6002
  %bf.clear14 = and i32 %bf.load13, 255, !dbg !6002
  %cmp15 = icmp eq i32 %bf.clear14, 2, !dbg !6002
  br i1 %cmp15, label %cond.true21, label %lor.lhs.false16, !dbg !6002

lor.lhs.false16:                                  ; preds = %land.lhs.true11
  %13 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6002
  %base17 = bitcast %union.df_ref_d* %13 to %struct.df_base_ref*, !dbg !6002
  %14 = bitcast %struct.df_base_ref* %base17 to i32*, !dbg !6002
  %bf.load18 = load i32, i32* %14, align 8, !dbg !6002
  %bf.clear19 = and i32 %bf.load18, 255, !dbg !6002
  %cmp20 = icmp eq i32 %bf.clear19, 3, !dbg !6002
  br i1 %cmp20, label %cond.true21, label %cond.false24, !dbg !6002

cond.true21:                                      ; preds = %lor.lhs.false16, %land.lhs.true11
  %15 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6002
  %regular_ref22 = bitcast %union.df_ref_d* %15 to %struct.df_regular_ref*, !dbg !6002
  %loc23 = getelementptr inbounds %struct.df_regular_ref, %struct.df_regular_ref* %regular_ref22, i32 0, i32 1, !dbg !6002
  %16 = load %struct.rtx_def**, %struct.rtx_def*** %loc23, align 8, !dbg !6002
  br label %cond.end, !dbg !6002

cond.false24:                                     ; preds = %lor.lhs.false16
  br label %cond.end, !dbg !6002

cond.end:                                         ; preds = %cond.false24, %cond.true21
  %cond = phi %struct.rtx_def** [ %16, %cond.true21 ], [ null, %cond.false24 ], !dbg !6002
  %17 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8, !dbg !6003
  %18 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !6004
  %cmp25 = icmp eq %struct.rtx_def* %17, %18, !dbg !6005
  br i1 %cmp25, label %if.then, label %if.else105, !dbg !6006

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %next_ref, metadata !6007, metadata !DIExpression()), !dbg !6009
  %19 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6010
  %base26 = bitcast %union.df_ref_d* %19 to %struct.df_base_ref*, !dbg !6010
  %next_reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base26, i32 0, i32 4, !dbg !6010
  %20 = load %union.df_ref_d*, %union.df_ref_d** %next_reg, align 8, !dbg !6010
  store %union.df_ref_d* %20, %union.df_ref_d** %next_ref, align 8, !dbg !6009
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %prev_ref, metadata !6011, metadata !DIExpression()), !dbg !6012
  %21 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6013
  %base27 = bitcast %union.df_ref_d* %21 to %struct.df_base_ref*, !dbg !6013
  %prev_reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base27, i32 0, i32 5, !dbg !6013
  %22 = load %union.df_ref_d*, %union.df_ref_d** %prev_reg, align 8, !dbg !6013
  store %union.df_ref_d* %22, %union.df_ref_d** %prev_ref, align 8, !dbg !6012
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %ref_vec, metadata !6014, metadata !DIExpression()), !dbg !6015
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %ref_vec_t, metadata !6016, metadata !DIExpression()), !dbg !6017
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info, metadata !6018, metadata !DIExpression()), !dbg !6019
  %23 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6020
  %base28 = bitcast %union.df_ref_d* %23 to %struct.df_base_ref*, !dbg !6020
  %insn_info29 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base28, i32 0, i32 3, !dbg !6020
  %24 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info29, align 8, !dbg !6020
  store %struct.df_insn_info* %24, %struct.df_insn_info** %insn_info, align 8, !dbg !6019
  call void @llvm.dbg.declare(metadata i32* %count, metadata !6021, metadata !DIExpression()), !dbg !6022
  store i32 0, i32* %count, align 4, !dbg !6022
  %25 = load i32, i32* %new_regno.addr, align 4, !dbg !6023
  %26 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6024
  %base30 = bitcast %union.df_ref_d* %26 to %struct.df_base_ref*, !dbg !6024
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base30, i32 0, i32 6, !dbg !6024
  store i32 %25, i32* %regno, align 8, !dbg !6025
  %27 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !6026
  %28 = load i32, i32* %new_regno.addr, align 4, !dbg !6027
  %idxprom = sext i32 %28 to i64, !dbg !6026
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %27, i64 %idxprom, !dbg !6026
  %29 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !6026
  %30 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6028
  %base31 = bitcast %union.df_ref_d* %30 to %struct.df_base_ref*, !dbg !6028
  %reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base31, i32 0, i32 1, !dbg !6028
  store %struct.rtx_def* %29, %struct.rtx_def** %reg, align 8, !dbg !6029
  %31 = load %union.df_ref_d*, %union.df_ref_d** %prev_ref, align 8, !dbg !6030
  %tobool32 = icmp ne %union.df_ref_d* %31, null, !dbg !6030
  br i1 %tobool32, label %if.then33, label %if.else, !dbg !6032

if.then33:                                        ; preds = %if.then
  %32 = load %union.df_ref_d*, %union.df_ref_d** %next_ref, align 8, !dbg !6033
  %33 = load %union.df_ref_d*, %union.df_ref_d** %prev_ref, align 8, !dbg !6034
  %base34 = bitcast %union.df_ref_d* %33 to %struct.df_base_ref*, !dbg !6034
  %next_reg35 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base34, i32 0, i32 4, !dbg !6034
  store %union.df_ref_d* %32, %union.df_ref_d** %next_reg35, align 8, !dbg !6035
  br label %if.end, !dbg !6034

if.else:                                          ; preds = %if.then
  %34 = load %union.df_ref_d*, %union.df_ref_d** %next_ref, align 8, !dbg !6036
  %35 = load %struct.df_reg_info*, %struct.df_reg_info** %old_df.addr, align 8, !dbg !6037
  %reg_chain36 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %35, i32 0, i32 0, !dbg !6038
  store %union.df_ref_d* %34, %union.df_ref_d** %reg_chain36, align 8, !dbg !6039
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then33
  %36 = load %union.df_ref_d*, %union.df_ref_d** %next_ref, align 8, !dbg !6040
  %tobool37 = icmp ne %union.df_ref_d* %36, null, !dbg !6040
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !6042

if.then38:                                        ; preds = %if.end
  %37 = load %union.df_ref_d*, %union.df_ref_d** %prev_ref, align 8, !dbg !6043
  %38 = load %union.df_ref_d*, %union.df_ref_d** %next_ref, align 8, !dbg !6044
  %base39 = bitcast %union.df_ref_d* %38 to %struct.df_base_ref*, !dbg !6044
  %prev_reg40 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base39, i32 0, i32 5, !dbg !6044
  store %union.df_ref_d* %37, %union.df_ref_d** %prev_reg40, align 8, !dbg !6045
  br label %if.end41, !dbg !6044

if.end41:                                         ; preds = %if.then38, %if.end
  %39 = load %struct.df_reg_info*, %struct.df_reg_info** %old_df.addr, align 8, !dbg !6046
  %n_refs = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %39, i32 0, i32 1, !dbg !6047
  %40 = load i32, i32* %n_refs, align 8, !dbg !6048
  %dec = add i32 %40, -1, !dbg !6048
  store i32 %dec, i32* %n_refs, align 8, !dbg !6048
  %41 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6049
  %base42 = bitcast %union.df_ref_d* %41 to %struct.df_base_ref*, !dbg !6049
  %prev_reg43 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base42, i32 0, i32 5, !dbg !6049
  store %union.df_ref_d* null, %union.df_ref_d** %prev_reg43, align 8, !dbg !6050
  %42 = load %struct.df_reg_info*, %struct.df_reg_info** %new_df.addr, align 8, !dbg !6051
  %reg_chain44 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %42, i32 0, i32 0, !dbg !6052
  %43 = load %union.df_ref_d*, %union.df_ref_d** %reg_chain44, align 8, !dbg !6052
  %44 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6053
  %base45 = bitcast %union.df_ref_d* %44 to %struct.df_base_ref*, !dbg !6053
  %next_reg46 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base45, i32 0, i32 4, !dbg !6053
  store %union.df_ref_d* %43, %union.df_ref_d** %next_reg46, align 8, !dbg !6054
  %45 = load %struct.df_reg_info*, %struct.df_reg_info** %new_df.addr, align 8, !dbg !6055
  %reg_chain47 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %45, i32 0, i32 0, !dbg !6057
  %46 = load %union.df_ref_d*, %union.df_ref_d** %reg_chain47, align 8, !dbg !6057
  %tobool48 = icmp ne %union.df_ref_d* %46, null, !dbg !6055
  br i1 %tobool48, label %if.then49, label %if.end53, !dbg !6058

if.then49:                                        ; preds = %if.end41
  %47 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6059
  %48 = load %struct.df_reg_info*, %struct.df_reg_info** %new_df.addr, align 8, !dbg !6060
  %reg_chain50 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %48, i32 0, i32 0, !dbg !6060
  %49 = load %union.df_ref_d*, %union.df_ref_d** %reg_chain50, align 8, !dbg !6060
  %base51 = bitcast %union.df_ref_d* %49 to %struct.df_base_ref*, !dbg !6060
  %prev_reg52 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base51, i32 0, i32 5, !dbg !6060
  store %union.df_ref_d* %47, %union.df_ref_d** %prev_reg52, align 8, !dbg !6061
  br label %if.end53, !dbg !6060

if.end53:                                         ; preds = %if.then49, %if.end41
  %50 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6062
  %51 = load %struct.df_reg_info*, %struct.df_reg_info** %new_df.addr, align 8, !dbg !6063
  %reg_chain54 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %51, i32 0, i32 0, !dbg !6064
  store %union.df_ref_d* %50, %union.df_ref_d** %reg_chain54, align 8, !dbg !6065
  %52 = load %struct.df_reg_info*, %struct.df_reg_info** %new_df.addr, align 8, !dbg !6066
  %n_refs55 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %52, i32 0, i32 1, !dbg !6067
  %53 = load i32, i32* %n_refs55, align 8, !dbg !6068
  %inc = add i32 %53, 1, !dbg !6068
  store i32 %inc, i32* %n_refs55, align 8, !dbg !6068
  %54 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6069
  %base56 = bitcast %union.df_ref_d* %54 to %struct.df_base_ref*, !dbg !6069
  %55 = bitcast %struct.df_base_ref* %base56 to i32*, !dbg !6069
  %bf.load57 = load i32, i32* %55, align 8, !dbg !6069
  %bf.clear58 = and i32 %bf.load57, 255, !dbg !6069
  %cmp59 = icmp eq i32 %bf.clear58, 1, !dbg !6069
  br i1 %cmp59, label %cond.true60, label %cond.false62, !dbg !6071

cond.true60:                                      ; preds = %if.end53
  %56 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6069
  %artificial_ref = bitcast %union.df_ref_d* %56 to %struct.df_artificial_ref*, !dbg !6069
  %bb = getelementptr inbounds %struct.df_artificial_ref, %struct.df_artificial_ref* %artificial_ref, i32 0, i32 1, !dbg !6069
  %57 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6069
  %tobool61 = icmp ne %struct.basic_block_def* %57, null, !dbg !6069
  br i1 %tobool61, label %if.then67, label %if.end85, !dbg !6069

cond.false62:                                     ; preds = %if.end53
  %58 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6069
  %base63 = bitcast %union.df_ref_d* %58 to %struct.df_base_ref*, !dbg !6069
  %insn_info64 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base63, i32 0, i32 3, !dbg !6069
  %59 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info64, align 8, !dbg !6069
  %insn = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %59, i32 0, i32 0, !dbg !6069
  %60 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6069
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1, !dbg !6069
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6069
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !6069
  %rt_bb = bitcast %union.rtunion_def* %arrayidx65 to %struct.basic_block_def**, !dbg !6069
  %61 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6069
  %tobool66 = icmp ne %struct.basic_block_def* %61, null, !dbg !6069
  br i1 %tobool66, label %if.then67, label %if.end85, !dbg !6071

if.then67:                                        ; preds = %cond.false62, %cond.true60
  %62 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6072
  %base68 = bitcast %union.df_ref_d* %62 to %struct.df_base_ref*, !dbg !6072
  %63 = bitcast %struct.df_base_ref* %base68 to i32*, !dbg !6072
  %bf.load69 = load i32, i32* %63, align 8, !dbg !6072
  %bf.clear70 = and i32 %bf.load69, 255, !dbg !6072
  %cmp71 = icmp eq i32 %bf.clear70, 1, !dbg !6072
  br i1 %cmp71, label %cond.true72, label %cond.false75, !dbg !6072

cond.true72:                                      ; preds = %if.then67
  %64 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6072
  %artificial_ref73 = bitcast %union.df_ref_d* %64 to %struct.df_artificial_ref*, !dbg !6072
  %bb74 = getelementptr inbounds %struct.df_artificial_ref, %struct.df_artificial_ref* %artificial_ref73, i32 0, i32 1, !dbg !6072
  %65 = load %struct.basic_block_def*, %struct.basic_block_def** %bb74, align 8, !dbg !6072
  br label %cond.end83, !dbg !6072

cond.false75:                                     ; preds = %if.then67
  %66 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6072
  %base76 = bitcast %union.df_ref_d* %66 to %struct.df_base_ref*, !dbg !6072
  %insn_info77 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base76, i32 0, i32 3, !dbg !6072
  %67 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info77, align 8, !dbg !6072
  %insn78 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %67, i32 0, i32 0, !dbg !6072
  %68 = load %struct.rtx_def*, %struct.rtx_def** %insn78, align 8, !dbg !6072
  %u79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !6072
  %fld80 = bitcast %union.u* %u79 to [1 x %union.rtunion_def]*, !dbg !6072
  %arrayidx81 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i64 0, i64 3, !dbg !6072
  %rt_bb82 = bitcast %union.rtunion_def* %arrayidx81 to %struct.basic_block_def**, !dbg !6072
  %69 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb82, align 8, !dbg !6072
  br label %cond.end83, !dbg !6072

cond.end83:                                       ; preds = %cond.false75, %cond.true72
  %cond84 = phi %struct.basic_block_def* [ %65, %cond.true72 ], [ %69, %cond.false75 ], !dbg !6072
  call void @df_set_bb_dirty(%struct.basic_block_def* %cond84), !dbg !6073
  br label %if.end85, !dbg !6073

if.end85:                                         ; preds = %cond.end83, %cond.false62, %cond.true60
  %70 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6074
  %base86 = bitcast %union.df_ref_d* %70 to %struct.df_base_ref*, !dbg !6074
  %71 = bitcast %struct.df_base_ref* %base86 to i32*, !dbg !6074
  %bf.load87 = load i32, i32* %71, align 8, !dbg !6074
  %bf.ashr = ashr i32 %bf.load87, 16, !dbg !6074
  %and = and i32 %bf.ashr, 4, !dbg !6076
  %tobool88 = icmp ne i32 %and, 0, !dbg !6076
  br i1 %tobool88, label %if.then89, label %if.else90, !dbg !6077

if.then89:                                        ; preds = %if.end85
  %72 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !6078
  %eq_uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %72, i32 0, i32 3, !dbg !6079
  %73 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses, align 8, !dbg !6079
  store %union.df_ref_d** %73, %union.df_ref_d*** %ref_vec, align 8, !dbg !6080
  br label %if.end91, !dbg !6081

if.else90:                                        ; preds = %if.end85
  %74 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !6082
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %74, i32 0, i32 2, !dbg !6083
  %75 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !6083
  store %union.df_ref_d** %75, %union.df_ref_d*** %ref_vec, align 8, !dbg !6084
  br label %if.end91

if.end91:                                         ; preds = %if.else90, %if.then89
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6085
  %tobool92 = icmp ne %struct._IO_FILE* %76, null, !dbg !6085
  br i1 %tobool92, label %if.then93, label %if.end100, !dbg !6087

if.then93:                                        ; preds = %if.end91
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6088
  %78 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6089
  %base94 = bitcast %union.df_ref_d* %78 to %struct.df_base_ref*, !dbg !6089
  %insn_info95 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base94, i32 0, i32 3, !dbg !6089
  %79 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info95, align 8, !dbg !6089
  %insn96 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %79, i32 0, i32 0, !dbg !6089
  %80 = load %struct.rtx_def*, %struct.rtx_def** %insn96, align 8, !dbg !6089
  %u97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1, !dbg !6089
  %fld98 = bitcast %union.u* %u97 to [1 x %union.rtunion_def]*, !dbg !6089
  %arrayidx99 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld98, i64 0, i64 0, !dbg !6089
  %rt_int = bitcast %union.rtunion_def* %arrayidx99 to i32*, !dbg !6089
  %81 = load i32, i32* %rt_int, align 8, !dbg !6089
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %77, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.44, i64 0, i64 0), i32 %81), !dbg !6090
  br label %if.end100, !dbg !6090

if.end100:                                        ; preds = %if.then93, %if.end91
  %82 = load %union.df_ref_d**, %union.df_ref_d*** %ref_vec, align 8, !dbg !6091
  store %union.df_ref_d** %82, %union.df_ref_d*** %ref_vec_t, align 8, !dbg !6092
  br label %while.cond101, !dbg !6093

while.cond101:                                    ; preds = %while.body103, %if.end100
  %83 = load %union.df_ref_d**, %union.df_ref_d*** %ref_vec_t, align 8, !dbg !6094
  %84 = load %union.df_ref_d*, %union.df_ref_d** %83, align 8, !dbg !6095
  %tobool102 = icmp ne %union.df_ref_d* %84, null, !dbg !6093
  br i1 %tobool102, label %while.body103, label %while.end, !dbg !6093

while.body103:                                    ; preds = %while.cond101
  %85 = load i32, i32* %count, align 4, !dbg !6096
  %inc104 = add i32 %85, 1, !dbg !6096
  store i32 %inc104, i32* %count, align 4, !dbg !6096
  %86 = load %union.df_ref_d**, %union.df_ref_d*** %ref_vec_t, align 8, !dbg !6098
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %86, i32 1, !dbg !6098
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %ref_vec_t, align 8, !dbg !6098
  br label %while.cond101, !dbg !6093, !llvm.loop !6099

while.end:                                        ; preds = %while.cond101
  %87 = load %union.df_ref_d**, %union.df_ref_d*** %ref_vec, align 8, !dbg !6101
  %88 = bitcast %union.df_ref_d** %87 to i8*, !dbg !6101
  %89 = load i32, i32* %count, align 4, !dbg !6102
  %conv = zext i32 %89 to i64, !dbg !6102
  call void @spec_qsort(i8* %88, i64 %conv, i64 8, i32 (i8*, i8*)* @df_ref_compare), !dbg !6103
  %90 = load %union.df_ref_d*, %union.df_ref_d** %next_ref, align 8, !dbg !6104
  store %union.df_ref_d* %90, %union.df_ref_d** %the_ref, align 8, !dbg !6105
  br label %if.end108, !dbg !6106

if.else105:                                       ; preds = %cond.end, %cond.false, %cond.true, %while.body
  %91 = load %union.df_ref_d*, %union.df_ref_d** %the_ref, align 8, !dbg !6107
  %base106 = bitcast %union.df_ref_d* %91 to %struct.df_base_ref*, !dbg !6107
  %next_reg107 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base106, i32 0, i32 4, !dbg !6107
  %92 = load %union.df_ref_d*, %union.df_ref_d** %next_reg107, align 8, !dbg !6107
  store %union.df_ref_d* %92, %union.df_ref_d** %the_ref, align 8, !dbg !6108
  br label %if.end108

if.end108:                                        ; preds = %if.else105, %while.end
  br label %while.cond, !dbg !5994, !llvm.loop !6109

while.end109:                                     ; preds = %while.cond
  ret void, !dbg !6111
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @df_mw_hardreg_chain_delete_eq_uses(%struct.df_insn_info* %insn_info) #0 !dbg !6112 {
entry:
  %retval = alloca i32, align 4
  %insn_info.addr = alloca %struct.df_insn_info*, align 8
  %mw_vec = alloca %struct.df_mw_hardreg**, align 8
  %deleted = alloca i32, align 4
  %count = alloca i32, align 4
  %problem_data = alloca %struct.df_scan_problem_data*, align 8
  %temp_vec = alloca %struct.df_mw_hardreg**, align 8
  store %struct.df_insn_info* %insn_info, %struct.df_insn_info** %insn_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info.addr, metadata !6115, metadata !DIExpression()), !dbg !6116
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg*** %mw_vec, metadata !6117, metadata !DIExpression()), !dbg !6118
  %0 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6119
  %mw_hardregs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %0, i32 0, i32 4, !dbg !6120
  %1 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs, align 8, !dbg !6120
  store %struct.df_mw_hardreg** %1, %struct.df_mw_hardreg*** %mw_vec, align 8, !dbg !6118
  call void @llvm.dbg.declare(metadata i32* %deleted, metadata !6121, metadata !DIExpression()), !dbg !6122
  store i32 0, i32* %deleted, align 4, !dbg !6122
  call void @llvm.dbg.declare(metadata i32* %count, metadata !6123, metadata !DIExpression()), !dbg !6124
  store i32 0, i32* %count, align 4, !dbg !6124
  call void @llvm.dbg.declare(metadata %struct.df_scan_problem_data** %problem_data, metadata !6125, metadata !DIExpression()), !dbg !6126
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !6127
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 1, !dbg !6127
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !6127
  %3 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6127
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %3, i32 0, i32 5, !dbg !6128
  %4 = load i8*, i8** %problem_data1, align 8, !dbg !6128
  %5 = bitcast i8* %4 to %struct.df_scan_problem_data*, !dbg !6129
  store %struct.df_scan_problem_data* %5, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !6126
  %6 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_vec, align 8, !dbg !6130
  %7 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %6, align 8, !dbg !6132
  %tobool = icmp ne %struct.df_mw_hardreg* %7, null, !dbg !6132
  br i1 %tobool, label %if.end, label %if.then, !dbg !6133

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6134
  br label %return, !dbg !6134

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !6135

while.cond:                                       ; preds = %if.end10, %if.end
  %8 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_vec, align 8, !dbg !6136
  %9 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %8, align 8, !dbg !6137
  %tobool2 = icmp ne %struct.df_mw_hardreg* %9, null, !dbg !6135
  br i1 %tobool2, label %while.body, label %while.end11, !dbg !6135

while.body:                                       ; preds = %while.cond
  %10 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_vec, align 8, !dbg !6138
  %11 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %10, align 8, !dbg !6141
  %flags = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %11, i32 0, i32 1, !dbg !6142
  %bf.load = load i32, i32* %flags, align 8, !dbg !6142
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !6142
  %and = and i32 %bf.ashr, 4, !dbg !6143
  %tobool3 = icmp ne i32 %and, 0, !dbg !6143
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !6144

if.then4:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg*** %temp_vec, metadata !6145, metadata !DIExpression()), !dbg !6147
  %12 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_vec, align 8, !dbg !6148
  store %struct.df_mw_hardreg** %12, %struct.df_mw_hardreg*** %temp_vec, align 8, !dbg !6147
  %13 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !6149
  %mw_reg_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %13, i32 0, i32 6, !dbg !6150
  %14 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %mw_reg_pool, align 8, !dbg !6150
  %15 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_vec, align 8, !dbg !6151
  %16 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %15, align 8, !dbg !6152
  %17 = bitcast %struct.df_mw_hardreg* %16 to i8*, !dbg !6152
  call void @pool_free(%struct.alloc_pool_def* %14, i8* %17), !dbg !6153
  %18 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_vec, align 8, !dbg !6154
  store %struct.df_mw_hardreg** %18, %struct.df_mw_hardreg*** %temp_vec, align 8, !dbg !6155
  br label %while.cond5, !dbg !6156

while.cond5:                                      ; preds = %while.body7, %if.then4
  %19 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %temp_vec, align 8, !dbg !6157
  %20 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %19, align 8, !dbg !6158
  %tobool6 = icmp ne %struct.df_mw_hardreg* %20, null, !dbg !6156
  br i1 %tobool6, label %while.body7, label %while.end, !dbg !6156

while.body7:                                      ; preds = %while.cond5
  %21 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %temp_vec, align 8, !dbg !6159
  %add.ptr = getelementptr inbounds %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %21, i64 1, !dbg !6161
  %22 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %add.ptr, align 8, !dbg !6162
  %23 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %temp_vec, align 8, !dbg !6163
  store %struct.df_mw_hardreg* %22, %struct.df_mw_hardreg** %23, align 8, !dbg !6164
  %24 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %temp_vec, align 8, !dbg !6165
  %incdec.ptr = getelementptr inbounds %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %24, i32 1, !dbg !6165
  store %struct.df_mw_hardreg** %incdec.ptr, %struct.df_mw_hardreg*** %temp_vec, align 8, !dbg !6165
  br label %while.cond5, !dbg !6156, !llvm.loop !6166

while.end:                                        ; preds = %while.cond5
  %25 = load i32, i32* %deleted, align 4, !dbg !6168
  %inc = add i32 %25, 1, !dbg !6168
  store i32 %inc, i32* %deleted, align 4, !dbg !6168
  br label %if.end10, !dbg !6169

if.else:                                          ; preds = %while.body
  %26 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_vec, align 8, !dbg !6170
  %incdec.ptr8 = getelementptr inbounds %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %26, i32 1, !dbg !6170
  store %struct.df_mw_hardreg** %incdec.ptr8, %struct.df_mw_hardreg*** %mw_vec, align 8, !dbg !6170
  %27 = load i32, i32* %count, align 4, !dbg !6172
  %inc9 = add i32 %27, 1, !dbg !6172
  store i32 %inc9, i32* %count, align 4, !dbg !6172
  br label %if.end10

if.end10:                                         ; preds = %if.else, %while.end
  br label %while.cond, !dbg !6135, !llvm.loop !6173

while.end11:                                      ; preds = %while.cond
  %28 = load i32, i32* %count, align 4, !dbg !6175
  %cmp = icmp eq i32 %28, 0, !dbg !6177
  br i1 %cmp, label %if.then12, label %if.end21, !dbg !6178

if.then12:                                        ; preds = %while.end11
  br label %do.body, !dbg !6179

do.body:                                          ; preds = %if.then12
  %29 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6181
  %mw_hardregs13 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %29, i32 0, i32 4, !dbg !6181
  %30 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs13, align 8, !dbg !6181
  %tobool14 = icmp ne %struct.df_mw_hardreg** %30, null, !dbg !6181
  br i1 %tobool14, label %land.lhs.true, label %if.end19, !dbg !6181

land.lhs.true:                                    ; preds = %do.body
  %31 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6181
  %mw_hardregs15 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %31, i32 0, i32 4, !dbg !6181
  %32 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs15, align 8, !dbg !6181
  %33 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %32, align 8, !dbg !6181
  %tobool16 = icmp ne %struct.df_mw_hardreg* %33, null, !dbg !6181
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !6184

if.then17:                                        ; preds = %land.lhs.true
  %34 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6181
  %mw_hardregs18 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %34, i32 0, i32 4, !dbg !6181
  %35 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs18, align 8, !dbg !6181
  %36 = bitcast %struct.df_mw_hardreg** %35 to i8*, !dbg !6181
  call void @free(i8* %36), !dbg !6181
  br label %if.end19, !dbg !6181

if.end19:                                         ; preds = %if.then17, %land.lhs.true, %do.body
  br label %do.end, !dbg !6184

do.end:                                           ; preds = %if.end19
  %37 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6185
  %mw_hardregs20 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %37, i32 0, i32 4, !dbg !6186
  store %struct.df_mw_hardreg** getelementptr inbounds ([1 x %struct.df_mw_hardreg*], [1 x %struct.df_mw_hardreg*]* @df_null_mw_rec, i64 0, i64 0), %struct.df_mw_hardreg*** %mw_hardregs20, align 8, !dbg !6187
  store i32 0, i32* %retval, align 4, !dbg !6188
  br label %return, !dbg !6188

if.end21:                                         ; preds = %while.end11
  %38 = load i32, i32* %deleted, align 4, !dbg !6189
  store i32 %38, i32* %retval, align 4, !dbg !6190
  br label %return, !dbg !6190

return:                                           ; preds = %if.end21, %do.end, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !6191
  ret i32 %39, !dbg !6191
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_uses_record(i32 %cl, %struct.df_collection_rec* %collection_rec, %struct.rtx_def** %loc, i32 %ref_type, %struct.basic_block_def* %bb, %struct.df_insn_info* %insn_info, i32 %flags, i32 %width, i32 %offset, i32 %mode) #0 !dbg !6192 {
entry:
  %cl.addr = alloca i32, align 4
  %collection_rec.addr = alloca %struct.df_collection_rec*, align 8
  %loc.addr = alloca %struct.rtx_def**, align 8
  %ref_type.addr = alloca i32, align 4
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %insn_info.addr = alloca %struct.df_insn_info*, align 8
  %flags.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %x = alloca %struct.rtx_def*, align 8
  %dst = alloca %struct.rtx_def*, align 8
  %temp = alloca %struct.rtx_def**, align 8
  %j = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %j279 = alloca i32, align 4
  store i32 %cl, i32* %cl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cl.addr, metadata !6195, metadata !DIExpression()), !dbg !6196
  store %struct.df_collection_rec* %collection_rec, %struct.df_collection_rec** %collection_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec** %collection_rec.addr, metadata !6197, metadata !DIExpression()), !dbg !6198
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc.addr, metadata !6199, metadata !DIExpression()), !dbg !6200
  store i32 %ref_type, i32* %ref_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ref_type.addr, metadata !6201, metadata !DIExpression()), !dbg !6202
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !6203, metadata !DIExpression()), !dbg !6204
  store %struct.df_insn_info* %insn_info, %struct.df_insn_info** %insn_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info.addr, metadata !6205, metadata !DIExpression()), !dbg !6206
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6207, metadata !DIExpression()), !dbg !6208
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6209, metadata !DIExpression()), !dbg !6210
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !6211, metadata !DIExpression()), !dbg !6212
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6213, metadata !DIExpression()), !dbg !6214
  call void @llvm.dbg.declare(metadata i32* %code, metadata !6215, metadata !DIExpression()), !dbg !6216
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !6217, metadata !DIExpression()), !dbg !6218
  br label %retry, !dbg !6219

retry:                                            ; preds = %if.then261, %entry
  call void @llvm.dbg.label(metadata !6220), !dbg !6221
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !6222
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !6223
  store %struct.rtx_def* %1, %struct.rtx_def** %x, align 8, !dbg !6224
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6225
  %tobool = icmp ne %struct.rtx_def* %2, null, !dbg !6225
  br i1 %tobool, label %if.end, label %if.then, !dbg !6227

if.then:                                          ; preds = %retry
  br label %return, !dbg !6228

if.end:                                           ; preds = %retry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6229
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !6229
  %bf.load = load i32, i32* %4, align 8, !dbg !6229
  %bf.clear = and i32 %bf.load, 65535, !dbg !6229
  store i32 %bf.clear, i32* %code, align 4, !dbg !6230
  %5 = load i32, i32* %code, align 4, !dbg !6231
  switch i32 %5, label %sw.default242 [
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 30, label %sw.bb
    i32 35, label %sw.bb
    i32 32, label %sw.bb
    i32 31, label %sw.bb
    i32 33, label %sw.bb
    i32 36, label %sw.bb
    i32 46, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 25, label %sw.bb1
    i32 43, label %sw.bb14
    i32 39, label %sw.bb19
    i32 37, label %sw.bb33
    i32 119, label %sw.bb34
    i32 120, label %sw.bb34
    i32 23, label %sw.bb77
    i32 27, label %sw.bb202
    i32 17, label %sw.bb203
    i32 19, label %sw.bb203
    i32 29, label %sw.bb203
    i32 16, label %sw.bb203
    i32 138, label %sw.bb218
    i32 74, label %sw.bb223
    i32 76, label %sw.bb223
    i32 75, label %sw.bb223
    i32 77, label %sw.bb223
    i32 78, label %sw.bb223
    i32 79, label %sw.bb223
  ], !dbg !6232

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  br label %return, !dbg !6233

sw.bb1:                                           ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6235
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !6235
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6235
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !6235
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6235
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6235
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !6235
  %bf.load2 = load i32, i32* %8, align 8, !dbg !6235
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !6235
  %cmp = icmp eq i32 %bf.clear3, 43, !dbg !6235
  br i1 %cmp, label %if.then4, label %if.end13, !dbg !6237

if.then4:                                         ; preds = %sw.bb1
  %9 = load i32, i32* %cl.addr, align 4, !dbg !6238
  %10 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6239
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6240
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !6240
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !6240
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 0, !dbg !6240
  %rt_rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !6240
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !6240
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !6240
  %fld10 = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !6240
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i64 0, i64 0, !dbg !6240
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !6240
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6241
  %14 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6242
  %15 = load i32, i32* %flags.addr, align 4, !dbg !6243
  %16 = load i32, i32* %width.addr, align 4, !dbg !6244
  %17 = load i32, i32* %offset.addr, align 4, !dbg !6245
  %18 = load i32, i32* %mode.addr, align 4, !dbg !6246
  call void @df_uses_record(i32 %9, %struct.df_collection_rec* %10, %struct.rtx_def** %rt_rtx12, i32 3, %struct.basic_block_def* %13, %struct.df_insn_info* %14, i32 %15, i32 %16, i32 %17, i32 %18), !dbg !6247
  br label %if.end13, !dbg !6247

if.end13:                                         ; preds = %if.then4, %sw.bb1
  br label %return, !dbg !6248

sw.bb14:                                          ; preds = %if.end
  %19 = load i32, i32* %cl.addr, align 4, !dbg !6249
  %20 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6250
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6251
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !6251
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !6251
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 0, !dbg !6251
  %rt_rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !6251
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6252
  %23 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6253
  %24 = load i32, i32* %flags.addr, align 4, !dbg !6254
  %and = and i32 %24, 4, !dbg !6255
  %25 = load i32, i32* %width.addr, align 4, !dbg !6256
  %26 = load i32, i32* %offset.addr, align 4, !dbg !6257
  %27 = load i32, i32* %mode.addr, align 4, !dbg !6258
  call void @df_uses_record(i32 %19, %struct.df_collection_rec* %20, %struct.rtx_def** %rt_rtx18, i32 2, %struct.basic_block_def* %22, %struct.df_insn_info* %23, i32 %and, i32 %25, i32 %26, i32 %27), !dbg !6259
  br label %return, !dbg !6260

sw.bb19:                                          ; preds = %if.end
  %28 = load i32, i32* %flags.addr, align 4, !dbg !6261
  %or = or i32 %28, 16, !dbg !6261
  store i32 %or, i32* %flags.addr, align 4, !dbg !6261
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6262
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !6262
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !6262
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 0, !dbg !6262
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !6262
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !6262
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !6262
  %bf.load24 = load i32, i32* %31, align 8, !dbg !6262
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !6262
  %cmp26 = icmp eq i32 %bf.clear25, 37, !dbg !6262
  br i1 %cmp26, label %if.end32, label %if.then27, !dbg !6264

if.then27:                                        ; preds = %sw.bb19
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6265
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !6265
  %fld29 = bitcast %union.u* %u28 to [1 x %union.rtunion_def]*, !dbg !6265
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i64 0, i64 0, !dbg !6265
  %rt_rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**, !dbg !6265
  store %struct.rtx_def** %rt_rtx31, %struct.rtx_def*** %loc.addr, align 8, !dbg !6267
  %33 = load i32, i32* %cl.addr, align 4, !dbg !6268
  %34 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6269
  %35 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !6270
  %36 = load i32, i32* %ref_type.addr, align 4, !dbg !6271
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6272
  %38 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6273
  %39 = load i32, i32* %flags.addr, align 4, !dbg !6274
  %40 = load i32, i32* %width.addr, align 4, !dbg !6275
  %41 = load i32, i32* %offset.addr, align 4, !dbg !6276
  %42 = load i32, i32* %mode.addr, align 4, !dbg !6277
  call void @df_uses_record(i32 %33, %struct.df_collection_rec* %34, %struct.rtx_def** %35, i32 %36, %struct.basic_block_def* %37, %struct.df_insn_info* %38, i32 %39, i32 %40, i32 %41, i32 %42), !dbg !6278
  br label %return, !dbg !6279

if.end32:                                         ; preds = %sw.bb19
  br label %sw.bb33, !dbg !6262

sw.bb33:                                          ; preds = %if.end, %if.end32
  %43 = load i32, i32* %cl.addr, align 4, !dbg !6280
  %44 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6281
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6282
  %46 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !6283
  %47 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6284
  %48 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6285
  %49 = load i32, i32* %ref_type.addr, align 4, !dbg !6286
  %50 = load i32, i32* %flags.addr, align 4, !dbg !6287
  %51 = load i32, i32* %width.addr, align 4, !dbg !6288
  %52 = load i32, i32* %offset.addr, align 4, !dbg !6289
  %53 = load i32, i32* %mode.addr, align 4, !dbg !6290
  call void @df_ref_record(i32 %43, %struct.df_collection_rec* %44, %struct.rtx_def* %45, %struct.rtx_def** %46, %struct.basic_block_def* %47, %struct.df_insn_info* %48, i32 %49, i32 %50, i32 %51, i32 %52, i32 %53), !dbg !6291
  br label %return, !dbg !6292

sw.bb34:                                          ; preds = %if.end, %if.end
  %54 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6293
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !6293
  %fld36 = bitcast %union.u* %u35 to [1 x %union.rtunion_def]*, !dbg !6293
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i64 0, i64 1, !dbg !6293
  %rt_rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**, !dbg !6293
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx38, align 8, !dbg !6293
  %56 = bitcast %struct.rtx_def* %55 to i32*, !dbg !6293
  %bf.load39 = load i32, i32* %56, align 8, !dbg !6293
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !6293
  %cmp41 = icmp eq i32 %bf.clear40, 30, !dbg !6293
  br i1 %cmp41, label %land.lhs.true, label %if.end76, !dbg !6296

land.lhs.true:                                    ; preds = %sw.bb34
  %57 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6297
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !6297
  %fld43 = bitcast %union.u* %u42 to [1 x %union.rtunion_def]*, !dbg !6297
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i64 0, i64 2, !dbg !6297
  %rt_rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**, !dbg !6297
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx45, align 8, !dbg !6297
  %59 = bitcast %struct.rtx_def* %58 to i32*, !dbg !6297
  %bf.load46 = load i32, i32* %59, align 8, !dbg !6297
  %bf.clear47 = and i32 %bf.load46, 65535, !dbg !6297
  %cmp48 = icmp eq i32 %bf.clear47, 30, !dbg !6297
  br i1 %cmp48, label %if.then49, label %if.end76, !dbg !6298

if.then49:                                        ; preds = %land.lhs.true
  %60 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6299
  %u50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1, !dbg !6299
  %fld51 = bitcast %union.u* %u50 to [1 x %union.rtunion_def]*, !dbg !6299
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i64 0, i64 1, !dbg !6299
  %rt_rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**, !dbg !6299
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx53, align 8, !dbg !6299
  %u54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1, !dbg !6299
  %hwint = bitcast %union.u* %u54 to [1 x i64]*, !dbg !6299
  %arrayidx55 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !6299
  %62 = load i64, i64* %arrayidx55, align 8, !dbg !6299
  %conv = trunc i64 %62 to i32, !dbg !6299
  store i32 %conv, i32* %width.addr, align 4, !dbg !6301
  %63 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6302
  %u56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1, !dbg !6302
  %fld57 = bitcast %union.u* %u56 to [1 x %union.rtunion_def]*, !dbg !6302
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i64 0, i64 2, !dbg !6302
  %rt_rtx59 = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**, !dbg !6302
  %64 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx59, align 8, !dbg !6302
  %u60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1, !dbg !6302
  %hwint61 = bitcast %union.u* %u60 to [1 x i64]*, !dbg !6302
  %arrayidx62 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint61, i64 0, i64 0, !dbg !6302
  %65 = load i64, i64* %arrayidx62, align 8, !dbg !6302
  %conv63 = trunc i64 %65 to i32, !dbg !6302
  store i32 %conv63, i32* %offset.addr, align 4, !dbg !6303
  %66 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6304
  %67 = bitcast %struct.rtx_def* %66 to i32*, !dbg !6304
  %bf.load64 = load i32, i32* %67, align 8, !dbg !6304
  %bf.lshr = lshr i32 %bf.load64, 16, !dbg !6304
  %bf.clear65 = and i32 %bf.lshr, 255, !dbg !6304
  store i32 %bf.clear65, i32* %mode.addr, align 4, !dbg !6305
  %68 = load i32, i32* %code, align 4, !dbg !6306
  %cmp66 = icmp eq i32 %68, 120, !dbg !6308
  br i1 %cmp66, label %if.then68, label %if.else, !dbg !6309

if.then68:                                        ; preds = %if.then49
  %69 = load i32, i32* %flags.addr, align 4, !dbg !6310
  %or69 = or i32 %69, 512, !dbg !6310
  store i32 %or69, i32* %flags.addr, align 4, !dbg !6310
  br label %if.end71, !dbg !6311

if.else:                                          ; preds = %if.then49
  %70 = load i32, i32* %flags.addr, align 4, !dbg !6312
  %or70 = or i32 %70, 256, !dbg !6312
  store i32 %or70, i32* %flags.addr, align 4, !dbg !6312
  br label %if.end71

if.end71:                                         ; preds = %if.else, %if.then68
  %71 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6313
  %72 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6314
  %u72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1, !dbg !6314
  %fld73 = bitcast %union.u* %u72 to [1 x %union.rtunion_def]*, !dbg !6314
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i64 0, i64 0, !dbg !6314
  %rt_rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**, !dbg !6314
  %73 = load i32, i32* %ref_type.addr, align 4, !dbg !6315
  %74 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6316
  %75 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6317
  %76 = load i32, i32* %flags.addr, align 4, !dbg !6318
  %77 = load i32, i32* %width.addr, align 4, !dbg !6319
  %78 = load i32, i32* %offset.addr, align 4, !dbg !6320
  %79 = load i32, i32* %mode.addr, align 4, !dbg !6321
  call void @df_uses_record(i32 3, %struct.df_collection_rec* %71, %struct.rtx_def** %rt_rtx75, i32 %73, %struct.basic_block_def* %74, %struct.df_insn_info* %75, i32 %76, i32 %77, i32 %78, i32 %79), !dbg !6322
  br label %return, !dbg !6323

if.end76:                                         ; preds = %land.lhs.true, %sw.bb34
  br label %sw.epilog243, !dbg !6324

sw.bb77:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dst, metadata !6325, metadata !DIExpression()), !dbg !6327
  %80 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6328
  %u78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1, !dbg !6328
  %fld79 = bitcast %union.u* %u78 to [1 x %union.rtunion_def]*, !dbg !6328
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i64 0, i64 0, !dbg !6328
  %rt_rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**, !dbg !6328
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx81, align 8, !dbg !6328
  store %struct.rtx_def* %81, %struct.rtx_def** %dst, align 8, !dbg !6327
  %82 = load i32, i32* %flags.addr, align 4, !dbg !6329
  %and82 = and i32 %82, 4, !dbg !6329
  %tobool83 = icmp ne i32 %and82, 0, !dbg !6329
  br i1 %tobool83, label %cond.true, label %cond.false, !dbg !6329

cond.true:                                        ; preds = %sw.bb77
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 3229, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !6329
  br label %cond.end, !dbg !6329

cond.false:                                       ; preds = %sw.bb77
  br label %cond.end, !dbg !6329

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6329
  %83 = load i32, i32* %cl.addr, align 4, !dbg !6330
  %84 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6331
  %85 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6332
  %u84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1, !dbg !6332
  %fld85 = bitcast %union.u* %u84 to [1 x %union.rtunion_def]*, !dbg !6332
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i64 0, i64 1, !dbg !6332
  %rt_rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**, !dbg !6332
  %86 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6333
  %87 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6334
  %88 = load i32, i32* %flags.addr, align 4, !dbg !6335
  %89 = load i32, i32* %width.addr, align 4, !dbg !6336
  %90 = load i32, i32* %offset.addr, align 4, !dbg !6337
  %91 = load i32, i32* %mode.addr, align 4, !dbg !6338
  call void @df_uses_record(i32 %83, %struct.df_collection_rec* %84, %struct.rtx_def** %rt_rtx87, i32 1, %struct.basic_block_def* %86, %struct.df_insn_info* %87, i32 %88, i32 %89, i32 %90, i32 %91), !dbg !6339
  %92 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6340
  %93 = bitcast %struct.rtx_def* %92 to i32*, !dbg !6340
  %bf.load88 = load i32, i32* %93, align 8, !dbg !6340
  %bf.clear89 = and i32 %bf.load88, 65535, !dbg !6340
  switch i32 %bf.clear89, label %sw.default [
    i32 39, label %sw.bb90
    i32 37, label %sw.bb100
    i32 15, label %sw.bb100
    i32 38, label %sw.bb100
    i32 36, label %sw.bb100
    i32 46, label %sw.bb100
    i32 43, label %sw.bb101
    i32 40, label %sw.bb106
    i32 120, label %sw.bb127
  ], !dbg !6341

sw.bb90:                                          ; preds = %cond.end
  %94 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6342
  %call = call zeroext i8 @df_read_modify_subreg_p(%struct.rtx_def* %94), !dbg !6345
  %tobool91 = icmp ne i8 %call, 0, !dbg !6345
  br i1 %tobool91, label %if.then92, label %if.end99, !dbg !6346

if.then92:                                        ; preds = %sw.bb90
  %95 = load i32, i32* %cl.addr, align 4, !dbg !6347
  %96 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6349
  %97 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6350
  %u93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1, !dbg !6350
  %fld94 = bitcast %union.u* %u93 to [1 x %union.rtunion_def]*, !dbg !6350
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i64 0, i64 0, !dbg !6350
  %rt_rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**, !dbg !6350
  %98 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6351
  %99 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6352
  %100 = load i32, i32* %flags.addr, align 4, !dbg !6353
  %or97 = or i32 %100, 32, !dbg !6354
  %or98 = or i32 %or97, 2048, !dbg !6355
  %101 = load i32, i32* %width.addr, align 4, !dbg !6356
  %102 = load i32, i32* %offset.addr, align 4, !dbg !6357
  %103 = load i32, i32* %mode.addr, align 4, !dbg !6358
  call void @df_uses_record(i32 %95, %struct.df_collection_rec* %96, %struct.rtx_def** %rt_rtx96, i32 1, %struct.basic_block_def* %98, %struct.df_insn_info* %99, i32 %or98, i32 %101, i32 %102, i32 %103), !dbg !6359
  br label %sw.epilog, !dbg !6360

if.end99:                                         ; preds = %sw.bb90
  br label %sw.bb100, !dbg !6361

sw.bb100:                                         ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %if.end99
  br label %sw.epilog, !dbg !6362

sw.bb101:                                         ; preds = %cond.end
  %104 = load i32, i32* %cl.addr, align 4, !dbg !6363
  %105 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6364
  %106 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6365
  %u102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1, !dbg !6365
  %fld103 = bitcast %union.u* %u102 to [1 x %union.rtunion_def]*, !dbg !6365
  %arrayidx104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i64 0, i64 0, !dbg !6365
  %rt_rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**, !dbg !6365
  %107 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6366
  %108 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6367
  %109 = load i32, i32* %flags.addr, align 4, !dbg !6368
  %110 = load i32, i32* %width.addr, align 4, !dbg !6369
  %111 = load i32, i32* %offset.addr, align 4, !dbg !6370
  %112 = load i32, i32* %mode.addr, align 4, !dbg !6371
  call void @df_uses_record(i32 %104, %struct.df_collection_rec* %105, %struct.rtx_def** %rt_rtx105, i32 3, %struct.basic_block_def* %107, %struct.df_insn_info* %108, i32 %109, i32 %110, i32 %111, i32 %112), !dbg !6372
  br label %sw.epilog, !dbg !6373

sw.bb106:                                         ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %temp, metadata !6374, metadata !DIExpression()), !dbg !6376
  %113 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6377
  %u107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i32 0, i32 1, !dbg !6377
  %fld108 = bitcast %union.u* %u107 to [1 x %union.rtunion_def]*, !dbg !6377
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i64 0, i64 0, !dbg !6377
  %rt_rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**, !dbg !6377
  store %struct.rtx_def** %rt_rtx110, %struct.rtx_def*** %temp, align 8, !dbg !6376
  %114 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6378
  %u111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1, !dbg !6378
  %fld112 = bitcast %union.u* %u111 to [1 x %union.rtunion_def]*, !dbg !6378
  %arrayidx113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i64 0, i64 0, !dbg !6378
  %rt_rtx114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtx_def**, !dbg !6378
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx114, align 8, !dbg !6378
  store %struct.rtx_def* %115, %struct.rtx_def** %dst, align 8, !dbg !6379
  %116 = load i32, i32* %cl.addr, align 4, !dbg !6380
  %117 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6381
  %118 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6382
  %119 = bitcast %struct.rtx_def* %118 to i32*, !dbg !6382
  %bf.load115 = load i32, i32* %119, align 8, !dbg !6382
  %bf.clear116 = and i32 %bf.load115, 65535, !dbg !6382
  %cmp117 = icmp eq i32 %bf.clear116, 39, !dbg !6383
  br i1 %cmp117, label %cond.true119, label %cond.false124, !dbg !6384

cond.true119:                                     ; preds = %sw.bb106
  %120 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6385
  %u120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1, !dbg !6385
  %fld121 = bitcast %union.u* %u120 to [1 x %union.rtunion_def]*, !dbg !6385
  %arrayidx122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld121, i64 0, i64 0, !dbg !6385
  %rt_rtx123 = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtx_def**, !dbg !6385
  br label %cond.end125, !dbg !6384

cond.false124:                                    ; preds = %sw.bb106
  %121 = load %struct.rtx_def**, %struct.rtx_def*** %temp, align 8, !dbg !6386
  br label %cond.end125, !dbg !6384

cond.end125:                                      ; preds = %cond.false124, %cond.true119
  %cond126 = phi %struct.rtx_def** [ %rt_rtx123, %cond.true119 ], [ %121, %cond.false124 ], !dbg !6384
  %122 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6387
  %123 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6388
  %124 = load i32, i32* %width.addr, align 4, !dbg !6389
  %125 = load i32, i32* %offset.addr, align 4, !dbg !6390
  %126 = load i32, i32* %mode.addr, align 4, !dbg !6391
  call void @df_uses_record(i32 %116, %struct.df_collection_rec* %117, %struct.rtx_def** %cond126, i32 1, %struct.basic_block_def* %122, %struct.df_insn_info* %123, i32 1056, i32 %124, i32 %125, i32 %126), !dbg !6392
  br label %sw.epilog, !dbg !6393

sw.bb127:                                         ; preds = %cond.end
  %127 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6394
  %u128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1, !dbg !6394
  %fld129 = bitcast %union.u* %u128 to [1 x %union.rtunion_def]*, !dbg !6394
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld129, i64 0, i64 1, !dbg !6394
  %rt_rtx131 = bitcast %union.rtunion_def* %arrayidx130 to %struct.rtx_def**, !dbg !6394
  %128 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx131, align 8, !dbg !6394
  %129 = bitcast %struct.rtx_def* %128 to i32*, !dbg !6394
  %bf.load132 = load i32, i32* %129, align 8, !dbg !6394
  %bf.clear133 = and i32 %bf.load132, 65535, !dbg !6394
  %cmp134 = icmp eq i32 %bf.clear133, 30, !dbg !6394
  br i1 %cmp134, label %land.lhs.true136, label %if.else188, !dbg !6397

land.lhs.true136:                                 ; preds = %sw.bb127
  %130 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6398
  %u137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1, !dbg !6398
  %fld138 = bitcast %union.u* %u137 to [1 x %union.rtunion_def]*, !dbg !6398
  %arrayidx139 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld138, i64 0, i64 2, !dbg !6398
  %rt_rtx140 = bitcast %union.rtunion_def* %arrayidx139 to %struct.rtx_def**, !dbg !6398
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx140, align 8, !dbg !6398
  %132 = bitcast %struct.rtx_def* %131 to i32*, !dbg !6398
  %bf.load141 = load i32, i32* %132, align 8, !dbg !6398
  %bf.clear142 = and i32 %bf.load141, 65535, !dbg !6398
  %cmp143 = icmp eq i32 %bf.clear142, 30, !dbg !6398
  br i1 %cmp143, label %if.then145, label %if.else188, !dbg !6399

if.then145:                                       ; preds = %land.lhs.true136
  %133 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6400
  %u146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1, !dbg !6400
  %fld147 = bitcast %union.u* %u146 to [1 x %union.rtunion_def]*, !dbg !6400
  %arrayidx148 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld147, i64 0, i64 1, !dbg !6400
  %rt_rtx149 = bitcast %union.rtunion_def* %arrayidx148 to %struct.rtx_def**, !dbg !6400
  %134 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx149, align 8, !dbg !6400
  %u150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %134, i32 0, i32 1, !dbg !6400
  %hwint151 = bitcast %union.u* %u150 to [1 x i64]*, !dbg !6400
  %arrayidx152 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint151, i64 0, i64 0, !dbg !6400
  %135 = load i64, i64* %arrayidx152, align 8, !dbg !6400
  %conv153 = trunc i64 %135 to i32, !dbg !6400
  store i32 %conv153, i32* %width.addr, align 4, !dbg !6402
  %136 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6403
  %u154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1, !dbg !6403
  %fld155 = bitcast %union.u* %u154 to [1 x %union.rtunion_def]*, !dbg !6403
  %arrayidx156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld155, i64 0, i64 2, !dbg !6403
  %rt_rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**, !dbg !6403
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx157, align 8, !dbg !6403
  %u158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %137, i32 0, i32 1, !dbg !6403
  %hwint159 = bitcast %union.u* %u158 to [1 x i64]*, !dbg !6403
  %arrayidx160 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint159, i64 0, i64 0, !dbg !6403
  %138 = load i64, i64* %arrayidx160, align 8, !dbg !6403
  %conv161 = trunc i64 %138 to i32, !dbg !6403
  store i32 %conv161, i32* %offset.addr, align 4, !dbg !6404
  %139 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6405
  %140 = bitcast %struct.rtx_def* %139 to i32*, !dbg !6405
  %bf.load162 = load i32, i32* %140, align 8, !dbg !6405
  %bf.lshr163 = lshr i32 %bf.load162, 16, !dbg !6405
  %bf.clear164 = and i32 %bf.lshr163, 255, !dbg !6405
  store i32 %bf.clear164, i32* %mode.addr, align 4, !dbg !6406
  %141 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6407
  %u165 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %141, i32 0, i32 1, !dbg !6407
  %fld166 = bitcast %union.u* %u165 to [1 x %union.rtunion_def]*, !dbg !6407
  %arrayidx167 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld166, i64 0, i64 0, !dbg !6407
  %rt_rtx168 = bitcast %union.rtunion_def* %arrayidx167 to %struct.rtx_def**, !dbg !6407
  %142 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx168, align 8, !dbg !6407
  %143 = bitcast %struct.rtx_def* %142 to i32*, !dbg !6407
  %bf.load169 = load i32, i32* %143, align 8, !dbg !6407
  %bf.clear170 = and i32 %bf.load169, 65535, !dbg !6407
  %cmp171 = icmp eq i32 %bf.clear170, 43, !dbg !6409
  br i1 %cmp171, label %if.then173, label %if.else182, !dbg !6410

if.then173:                                       ; preds = %if.then145
  %144 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6411
  %145 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6413
  %u174 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %145, i32 0, i32 1, !dbg !6413
  %fld175 = bitcast %union.u* %u174 to [1 x %union.rtunion_def]*, !dbg !6413
  %arrayidx176 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld175, i64 0, i64 0, !dbg !6413
  %rt_rtx177 = bitcast %union.rtunion_def* %arrayidx176 to %struct.rtx_def**, !dbg !6413
  %146 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx177, align 8, !dbg !6413
  %u178 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1, !dbg !6413
  %fld179 = bitcast %union.u* %u178 to [1 x %union.rtunion_def]*, !dbg !6413
  %arrayidx180 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld179, i64 0, i64 0, !dbg !6413
  %rt_rtx181 = bitcast %union.rtunion_def* %arrayidx180 to %struct.rtx_def**, !dbg !6413
  %147 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6414
  %148 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6415
  %149 = load i32, i32* %width.addr, align 4, !dbg !6416
  %150 = load i32, i32* %offset.addr, align 4, !dbg !6417
  %151 = load i32, i32* %mode.addr, align 4, !dbg !6418
  call void @df_uses_record(i32 3, %struct.df_collection_rec* %144, %struct.rtx_def** %rt_rtx181, i32 3, %struct.basic_block_def* %147, %struct.df_insn_info* %148, i32 512, i32 %149, i32 %150, i32 %151), !dbg !6419
  br label %if.end187, !dbg !6420

if.else182:                                       ; preds = %if.then145
  %152 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6421
  %153 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6423
  %u183 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1, !dbg !6423
  %fld184 = bitcast %union.u* %u183 to [1 x %union.rtunion_def]*, !dbg !6423
  %arrayidx185 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld184, i64 0, i64 0, !dbg !6423
  %rt_rtx186 = bitcast %union.rtunion_def* %arrayidx185 to %struct.rtx_def**, !dbg !6423
  %154 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6424
  %155 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6425
  %156 = load i32, i32* %width.addr, align 4, !dbg !6426
  %157 = load i32, i32* %offset.addr, align 4, !dbg !6427
  %158 = load i32, i32* %mode.addr, align 4, !dbg !6428
  call void @df_uses_record(i32 3, %struct.df_collection_rec* %152, %struct.rtx_def** %rt_rtx186, i32 1, %struct.basic_block_def* %154, %struct.df_insn_info* %155, i32 544, i32 %156, i32 %157, i32 %158), !dbg !6429
  br label %if.end187

if.end187:                                        ; preds = %if.else182, %if.then173
  br label %if.end201, !dbg !6430

if.else188:                                       ; preds = %land.lhs.true136, %sw.bb127
  %159 = load i32, i32* %cl.addr, align 4, !dbg !6431
  %160 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6433
  %161 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6434
  %u189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %161, i32 0, i32 1, !dbg !6434
  %fld190 = bitcast %union.u* %u189 to [1 x %union.rtunion_def]*, !dbg !6434
  %arrayidx191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld190, i64 0, i64 1, !dbg !6434
  %rt_rtx192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtx_def**, !dbg !6434
  %162 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6435
  %163 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6436
  %164 = load i32, i32* %flags.addr, align 4, !dbg !6437
  %165 = load i32, i32* %width.addr, align 4, !dbg !6438
  %166 = load i32, i32* %offset.addr, align 4, !dbg !6439
  %167 = load i32, i32* %mode.addr, align 4, !dbg !6440
  call void @df_uses_record(i32 %159, %struct.df_collection_rec* %160, %struct.rtx_def** %rt_rtx192, i32 1, %struct.basic_block_def* %162, %struct.df_insn_info* %163, i32 %164, i32 %165, i32 %166, i32 %167), !dbg !6441
  %168 = load i32, i32* %cl.addr, align 4, !dbg !6442
  %169 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6443
  %170 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6444
  %u193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1, !dbg !6444
  %fld194 = bitcast %union.u* %u193 to [1 x %union.rtunion_def]*, !dbg !6444
  %arrayidx195 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld194, i64 0, i64 2, !dbg !6444
  %rt_rtx196 = bitcast %union.rtunion_def* %arrayidx195 to %struct.rtx_def**, !dbg !6444
  %171 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6445
  %172 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6446
  %173 = load i32, i32* %flags.addr, align 4, !dbg !6447
  %174 = load i32, i32* %width.addr, align 4, !dbg !6448
  %175 = load i32, i32* %offset.addr, align 4, !dbg !6449
  %176 = load i32, i32* %mode.addr, align 4, !dbg !6450
  call void @df_uses_record(i32 %168, %struct.df_collection_rec* %169, %struct.rtx_def** %rt_rtx196, i32 1, %struct.basic_block_def* %171, %struct.df_insn_info* %172, i32 %173, i32 %174, i32 %175, i32 %176), !dbg !6451
  %177 = load i32, i32* %cl.addr, align 4, !dbg !6452
  %178 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6453
  %179 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !6454
  %u197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %179, i32 0, i32 1, !dbg !6454
  %fld198 = bitcast %union.u* %u197 to [1 x %union.rtunion_def]*, !dbg !6454
  %arrayidx199 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld198, i64 0, i64 0, !dbg !6454
  %rt_rtx200 = bitcast %union.rtunion_def* %arrayidx199 to %struct.rtx_def**, !dbg !6454
  %180 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6455
  %181 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6456
  %182 = load i32, i32* %width.addr, align 4, !dbg !6457
  %183 = load i32, i32* %offset.addr, align 4, !dbg !6458
  %184 = load i32, i32* %mode.addr, align 4, !dbg !6459
  call void @df_uses_record(i32 %177, %struct.df_collection_rec* %178, %struct.rtx_def** %rt_rtx200, i32 1, %struct.basic_block_def* %180, %struct.df_insn_info* %181, i32 544, i32 %182, i32 %183, i32 %184), !dbg !6460
  br label %if.end201

if.end201:                                        ; preds = %if.else188, %if.end187
  br label %sw.epilog, !dbg !6461

sw.default:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 3314, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !6462
  br label %sw.epilog, !dbg !6463

sw.epilog:                                        ; preds = %sw.default, %if.end201, %cond.end125, %sw.bb101, %sw.bb100, %if.then92
  br label %return, !dbg !6464

sw.bb202:                                         ; preds = %if.end
  br label %sw.epilog243, !dbg !6465

sw.bb203:                                         ; preds = %if.end, %if.end, %if.end, %if.end
  %185 = load i32, i32* %code, align 4, !dbg !6466
  %cmp204 = icmp eq i32 %185, 17, !dbg !6469
  br i1 %cmp204, label %if.then206, label %if.end217, !dbg !6470

if.then206:                                       ; preds = %sw.bb203
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6471, metadata !DIExpression()), !dbg !6473
  store i32 0, i32* %j, align 4, !dbg !6474
  br label %for.cond, !dbg !6476

for.cond:                                         ; preds = %for.inc, %if.then206
  %186 = load i32, i32* %j, align 4, !dbg !6477
  %187 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6479
  %u207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %187, i32 0, i32 1, !dbg !6479
  %fld208 = bitcast %union.u* %u207 to [1 x %union.rtunion_def]*, !dbg !6479
  %arrayidx209 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld208, i64 0, i64 3, !dbg !6479
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx209 to %struct.rtvec_def**, !dbg !6479
  %188 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6479
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %188, i32 0, i32 0, !dbg !6479
  %189 = load i32, i32* %num_elem, align 8, !dbg !6479
  %cmp210 = icmp slt i32 %186, %189, !dbg !6480
  br i1 %cmp210, label %for.body, label %for.end, !dbg !6481

for.body:                                         ; preds = %for.cond
  %190 = load i32, i32* %cl.addr, align 4, !dbg !6482
  %191 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6483
  %192 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6484
  %u212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %192, i32 0, i32 1, !dbg !6484
  %fld213 = bitcast %union.u* %u212 to [1 x %union.rtunion_def]*, !dbg !6484
  %arrayidx214 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld213, i64 0, i64 3, !dbg !6484
  %rt_rtvec215 = bitcast %union.rtunion_def* %arrayidx214 to %struct.rtvec_def**, !dbg !6484
  %193 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec215, align 8, !dbg !6484
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %193, i32 0, i32 1, !dbg !6484
  %194 = load i32, i32* %j, align 4, !dbg !6484
  %idxprom = sext i32 %194 to i64, !dbg !6484
  %arrayidx216 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !6484
  %195 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6485
  %196 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6486
  %197 = load i32, i32* %flags.addr, align 4, !dbg !6487
  %198 = load i32, i32* %width.addr, align 4, !dbg !6488
  %199 = load i32, i32* %offset.addr, align 4, !dbg !6489
  %200 = load i32, i32* %mode.addr, align 4, !dbg !6490
  call void @df_uses_record(i32 %190, %struct.df_collection_rec* %191, %struct.rtx_def** %arrayidx216, i32 1, %struct.basic_block_def* %195, %struct.df_insn_info* %196, i32 %197, i32 %198, i32 %199, i32 %200), !dbg !6491
  br label %for.inc, !dbg !6491

for.inc:                                          ; preds = %for.body
  %201 = load i32, i32* %j, align 4, !dbg !6492
  %inc = add nsw i32 %201, 1, !dbg !6492
  store i32 %inc, i32* %j, align 4, !dbg !6492
  br label %for.cond, !dbg !6493, !llvm.loop !6494

for.end:                                          ; preds = %for.cond
  br label %return, !dbg !6496

if.end217:                                        ; preds = %sw.bb203
  br label %sw.epilog243, !dbg !6497

sw.bb218:                                         ; preds = %if.end
  %202 = load i32, i32* %cl.addr, align 4, !dbg !6498
  %203 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6499
  %204 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6500
  %u219 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1, !dbg !6500
  %fld220 = bitcast %union.u* %u219 to [1 x %union.rtunion_def]*, !dbg !6500
  %arrayidx221 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld220, i64 0, i64 1, !dbg !6500
  %rt_rtx222 = bitcast %union.rtunion_def* %arrayidx221 to %struct.rtx_def**, !dbg !6500
  %205 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6501
  %206 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6502
  %207 = load i32, i32* %flags.addr, align 4, !dbg !6503
  %208 = load i32, i32* %width.addr, align 4, !dbg !6504
  %209 = load i32, i32* %offset.addr, align 4, !dbg !6505
  %210 = load i32, i32* %mode.addr, align 4, !dbg !6506
  call void @df_uses_record(i32 %202, %struct.df_collection_rec* %203, %struct.rtx_def** %rt_rtx222, i32 1, %struct.basic_block_def* %205, %struct.df_insn_info* %206, i32 %207, i32 %208, i32 %209, i32 %210), !dbg !6507
  br label %return, !dbg !6508

sw.bb223:                                         ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %211 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6509
  %insn = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %211, i32 0, i32 0, !dbg !6509
  %212 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6509
  %213 = bitcast %struct.rtx_def* %212 to i32*, !dbg !6509
  %bf.load224 = load i32, i32* %213, align 8, !dbg !6509
  %bf.clear225 = and i32 %bf.load224, 65535, !dbg !6509
  %cmp226 = icmp eq i32 %bf.clear225, 7, !dbg !6509
  br i1 %cmp226, label %cond.true228, label %cond.false229, !dbg !6509

cond.true228:                                     ; preds = %sw.bb223
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 3379, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !6509
  br label %cond.end230, !dbg !6509

cond.false229:                                    ; preds = %sw.bb223
  br label %cond.end230, !dbg !6509

cond.end230:                                      ; preds = %cond.false229, %cond.true228
  %cond231 = phi i32 [ 0, %cond.true228 ], [ 0, %cond.false229 ], !dbg !6509
  %214 = load i32, i32* %cl.addr, align 4, !dbg !6510
  %215 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6511
  %216 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6512
  %u232 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %216, i32 0, i32 1, !dbg !6512
  %fld233 = bitcast %union.u* %u232 to [1 x %union.rtunion_def]*, !dbg !6512
  %arrayidx234 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld233, i64 0, i64 0, !dbg !6512
  %rt_rtx235 = bitcast %union.rtunion_def* %arrayidx234 to %struct.rtx_def**, !dbg !6512
  %217 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx235, align 8, !dbg !6512
  %218 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6513
  %u236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %218, i32 0, i32 1, !dbg !6513
  %fld237 = bitcast %union.u* %u236 to [1 x %union.rtunion_def]*, !dbg !6513
  %arrayidx238 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld237, i64 0, i64 0, !dbg !6513
  %rt_rtx239 = bitcast %union.rtunion_def* %arrayidx238 to %struct.rtx_def**, !dbg !6513
  %219 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6514
  %220 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6515
  %221 = load i32, i32* %flags.addr, align 4, !dbg !6516
  %or240 = or i32 %221, 32, !dbg !6517
  %or241 = or i32 %or240, 32768, !dbg !6518
  %222 = load i32, i32* %width.addr, align 4, !dbg !6519
  %223 = load i32, i32* %offset.addr, align 4, !dbg !6520
  %224 = load i32, i32* %mode.addr, align 4, !dbg !6521
  call void @df_ref_record(i32 %214, %struct.df_collection_rec* %215, %struct.rtx_def* %217, %struct.rtx_def** %rt_rtx239, %struct.basic_block_def* %219, %struct.df_insn_info* %220, i32 0, i32 %or241, i32 %222, i32 %223, i32 %224), !dbg !6522
  br label %sw.default242, !dbg !6522

sw.default242:                                    ; preds = %if.end, %cond.end230
  br label %sw.epilog243, !dbg !6523

sw.epilog243:                                     ; preds = %sw.default242, %if.end217, %sw.bb202, %if.end76
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !6524, metadata !DIExpression()), !dbg !6526
  %225 = load i32, i32* %code, align 4, !dbg !6527
  %idxprom244 = sext i32 %225 to i64, !dbg !6527
  %arrayidx245 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom244, !dbg !6527
  %226 = load i8*, i8** %arrayidx245, align 8, !dbg !6527
  store i8* %226, i8** %fmt, align 8, !dbg !6526
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6528, metadata !DIExpression()), !dbg !6529
  %227 = load i32, i32* %code, align 4, !dbg !6530
  %idxprom246 = sext i32 %227 to i64, !dbg !6530
  %arrayidx247 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom246, !dbg !6530
  %228 = load i8, i8* %arrayidx247, align 1, !dbg !6530
  %conv248 = zext i8 %228 to i32, !dbg !6530
  %sub = sub nsw i32 %conv248, 1, !dbg !6532
  store i32 %sub, i32* %i, align 4, !dbg !6533
  br label %for.cond249, !dbg !6534

for.cond249:                                      ; preds = %for.inc303, %sw.epilog243
  %229 = load i32, i32* %i, align 4, !dbg !6535
  %cmp250 = icmp sge i32 %229, 0, !dbg !6537
  br i1 %cmp250, label %for.body252, label %for.end304, !dbg !6538

for.body252:                                      ; preds = %for.cond249
  %230 = load i8*, i8** %fmt, align 8, !dbg !6539
  %231 = load i32, i32* %i, align 4, !dbg !6542
  %idxprom253 = sext i32 %231 to i64, !dbg !6539
  %arrayidx254 = getelementptr inbounds i8, i8* %230, i64 %idxprom253, !dbg !6539
  %232 = load i8, i8* %arrayidx254, align 1, !dbg !6539
  %conv255 = sext i8 %232 to i32, !dbg !6539
  %cmp256 = icmp eq i32 %conv255, 101, !dbg !6543
  br i1 %cmp256, label %if.then258, label %if.else272, !dbg !6544

if.then258:                                       ; preds = %for.body252
  %233 = load i32, i32* %i, align 4, !dbg !6545
  %cmp259 = icmp eq i32 %233, 0, !dbg !6548
  br i1 %cmp259, label %if.then261, label %if.end266, !dbg !6549

if.then261:                                       ; preds = %if.then258
  %234 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6550
  %u262 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %234, i32 0, i32 1, !dbg !6550
  %fld263 = bitcast %union.u* %u262 to [1 x %union.rtunion_def]*, !dbg !6550
  %arrayidx264 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld263, i64 0, i64 0, !dbg !6550
  %rt_rtx265 = bitcast %union.rtunion_def* %arrayidx264 to %struct.rtx_def**, !dbg !6550
  store %struct.rtx_def** %rt_rtx265, %struct.rtx_def*** %loc.addr, align 8, !dbg !6552
  br label %retry, !dbg !6553

if.end266:                                        ; preds = %if.then258
  %235 = load i32, i32* %cl.addr, align 4, !dbg !6554
  %236 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6555
  %237 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6556
  %u267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %237, i32 0, i32 1, !dbg !6556
  %fld268 = bitcast %union.u* %u267 to [1 x %union.rtunion_def]*, !dbg !6556
  %238 = load i32, i32* %i, align 4, !dbg !6556
  %idxprom269 = sext i32 %238 to i64, !dbg !6556
  %arrayidx270 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld268, i64 0, i64 %idxprom269, !dbg !6556
  %rt_rtx271 = bitcast %union.rtunion_def* %arrayidx270 to %struct.rtx_def**, !dbg !6556
  %239 = load i32, i32* %ref_type.addr, align 4, !dbg !6557
  %240 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6558
  %241 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6559
  %242 = load i32, i32* %flags.addr, align 4, !dbg !6560
  %243 = load i32, i32* %width.addr, align 4, !dbg !6561
  %244 = load i32, i32* %offset.addr, align 4, !dbg !6562
  %245 = load i32, i32* %mode.addr, align 4, !dbg !6563
  call void @df_uses_record(i32 %235, %struct.df_collection_rec* %236, %struct.rtx_def** %rt_rtx271, i32 %239, %struct.basic_block_def* %240, %struct.df_insn_info* %241, i32 %242, i32 %243, i32 %244, i32 %245), !dbg !6564
  br label %if.end302, !dbg !6565

if.else272:                                       ; preds = %for.body252
  %246 = load i8*, i8** %fmt, align 8, !dbg !6566
  %247 = load i32, i32* %i, align 4, !dbg !6568
  %idxprom273 = sext i32 %247 to i64, !dbg !6566
  %arrayidx274 = getelementptr inbounds i8, i8* %246, i64 %idxprom273, !dbg !6566
  %248 = load i8, i8* %arrayidx274, align 1, !dbg !6566
  %conv275 = sext i8 %248 to i32, !dbg !6566
  %cmp276 = icmp eq i32 %conv275, 69, !dbg !6569
  br i1 %cmp276, label %if.then278, label %if.end301, !dbg !6570

if.then278:                                       ; preds = %if.else272
  call void @llvm.dbg.declare(metadata i32* %j279, metadata !6571, metadata !DIExpression()), !dbg !6573
  store i32 0, i32* %j279, align 4, !dbg !6574
  br label %for.cond280, !dbg !6576

for.cond280:                                      ; preds = %for.inc298, %if.then278
  %249 = load i32, i32* %j279, align 4, !dbg !6577
  %250 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6579
  %u281 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %250, i32 0, i32 1, !dbg !6579
  %fld282 = bitcast %union.u* %u281 to [1 x %union.rtunion_def]*, !dbg !6579
  %251 = load i32, i32* %i, align 4, !dbg !6579
  %idxprom283 = sext i32 %251 to i64, !dbg !6579
  %arrayidx284 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld282, i64 0, i64 %idxprom283, !dbg !6579
  %rt_rtvec285 = bitcast %union.rtunion_def* %arrayidx284 to %struct.rtvec_def**, !dbg !6579
  %252 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec285, align 8, !dbg !6579
  %num_elem286 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %252, i32 0, i32 0, !dbg !6579
  %253 = load i32, i32* %num_elem286, align 8, !dbg !6579
  %cmp287 = icmp slt i32 %249, %253, !dbg !6580
  br i1 %cmp287, label %for.body289, label %for.end300, !dbg !6581

for.body289:                                      ; preds = %for.cond280
  %254 = load i32, i32* %cl.addr, align 4, !dbg !6582
  %255 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6583
  %256 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6584
  %u290 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %256, i32 0, i32 1, !dbg !6584
  %fld291 = bitcast %union.u* %u290 to [1 x %union.rtunion_def]*, !dbg !6584
  %257 = load i32, i32* %i, align 4, !dbg !6584
  %idxprom292 = sext i32 %257 to i64, !dbg !6584
  %arrayidx293 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld291, i64 0, i64 %idxprom292, !dbg !6584
  %rt_rtvec294 = bitcast %union.rtunion_def* %arrayidx293 to %struct.rtvec_def**, !dbg !6584
  %258 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec294, align 8, !dbg !6584
  %elem295 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %258, i32 0, i32 1, !dbg !6584
  %259 = load i32, i32* %j279, align 4, !dbg !6584
  %idxprom296 = sext i32 %259 to i64, !dbg !6584
  %arrayidx297 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem295, i64 0, i64 %idxprom296, !dbg !6584
  %260 = load i32, i32* %ref_type.addr, align 4, !dbg !6585
  %261 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6586
  %262 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !6587
  %263 = load i32, i32* %flags.addr, align 4, !dbg !6588
  %264 = load i32, i32* %width.addr, align 4, !dbg !6589
  %265 = load i32, i32* %offset.addr, align 4, !dbg !6590
  %266 = load i32, i32* %mode.addr, align 4, !dbg !6591
  call void @df_uses_record(i32 %254, %struct.df_collection_rec* %255, %struct.rtx_def** %arrayidx297, i32 %260, %struct.basic_block_def* %261, %struct.df_insn_info* %262, i32 %263, i32 %264, i32 %265, i32 %266), !dbg !6592
  br label %for.inc298, !dbg !6592

for.inc298:                                       ; preds = %for.body289
  %267 = load i32, i32* %j279, align 4, !dbg !6593
  %inc299 = add nsw i32 %267, 1, !dbg !6593
  store i32 %inc299, i32* %j279, align 4, !dbg !6593
  br label %for.cond280, !dbg !6594, !llvm.loop !6595

for.end300:                                       ; preds = %for.cond280
  br label %if.end301, !dbg !6597

if.end301:                                        ; preds = %for.end300, %if.else272
  br label %if.end302

if.end302:                                        ; preds = %if.end301, %if.end266
  br label %for.inc303, !dbg !6598

for.inc303:                                       ; preds = %if.end302
  %268 = load i32, i32* %i, align 4, !dbg !6599
  %dec = add nsw i32 %268, -1, !dbg !6599
  store i32 %dec, i32* %i, align 4, !dbg !6599
  br label %for.cond249, !dbg !6600, !llvm.loop !6601

for.end304:                                       ; preds = %for.cond249
  br label %return, !dbg !6603

return:                                           ; preds = %for.end304, %sw.bb218, %for.end, %sw.epilog, %if.end71, %sw.bb33, %if.then27, %sw.bb14, %if.end13, %sw.bb, %if.then
  ret void, !dbg !6604
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_canonize_collection_rec(%struct.df_collection_rec* %collection_rec) #0 !dbg !6605 {
entry:
  %collection_rec.addr = alloca %struct.df_collection_rec*, align 8
  store %struct.df_collection_rec* %collection_rec, %struct.df_collection_rec** %collection_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec** %collection_rec.addr, metadata !6606, metadata !DIExpression()), !dbg !6607
  %0 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6608
  %def_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %0, i32 0, i32 0, !dbg !6609
  call void @df_sort_and_compress_refs(%struct.VEC_df_ref_stack** %def_vec), !dbg !6610
  %1 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6611
  %use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %1, i32 0, i32 1, !dbg !6612
  call void @df_sort_and_compress_refs(%struct.VEC_df_ref_stack** %use_vec), !dbg !6613
  %2 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6614
  %eq_use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %2, i32 0, i32 2, !dbg !6615
  call void @df_sort_and_compress_refs(%struct.VEC_df_ref_stack** %eq_use_vec), !dbg !6616
  %3 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6617
  %mw_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %3, i32 0, i32 3, !dbg !6618
  call void @df_sort_and_compress_mws(%struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec), !dbg !6619
  ret void, !dbg !6620
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_df_mw_hardreg_ptr_base_length(%struct.VEC_df_mw_hardreg_ptr_base* %vec_) #0 !dbg !6621 {
entry:
  %vec_.addr = alloca %struct.VEC_df_mw_hardreg_ptr_base*, align 8
  store %struct.VEC_df_mw_hardreg_ptr_base* %vec_, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, metadata !6626, metadata !DIExpression()), !dbg !6627
  %0 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !6627
  %tobool = icmp ne %struct.VEC_df_mw_hardreg_ptr_base* %0, null, !dbg !6627
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6627

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !6627
  %num = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_base, %struct.VEC_df_mw_hardreg_ptr_base* %1, i32 0, i32 0, !dbg !6627
  %2 = load i32, i32* %num, align 8, !dbg !6627
  br label %cond.end, !dbg !6627

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6627

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !6627
  ret i32 %cond, !dbg !6627
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.df_mw_hardreg** @VEC_df_mw_hardreg_ptr_base_address(%struct.VEC_df_mw_hardreg_ptr_base* %vec_) #0 !dbg !6628 {
entry:
  %vec_.addr = alloca %struct.VEC_df_mw_hardreg_ptr_base*, align 8
  store %struct.VEC_df_mw_hardreg_ptr_base* %vec_, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, metadata !6633, metadata !DIExpression()), !dbg !6634
  %0 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !6634
  %tobool = icmp ne %struct.VEC_df_mw_hardreg_ptr_base* %0, null, !dbg !6634
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6634

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !6634
  %vec = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_base, %struct.VEC_df_mw_hardreg_ptr_base* %1, i32 0, i32 2, !dbg !6634
  %arraydecay = getelementptr inbounds [1 x %struct.df_mw_hardreg*], [1 x %struct.df_mw_hardreg*]* %vec, i64 0, i64 0, !dbg !6634
  br label %cond.end, !dbg !6634

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6634

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.df_mw_hardreg** [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !6634
  ret %struct.df_mw_hardreg** %cond, !dbg !6634
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @df_mw_compare(i8* %m1, i8* %m2) #0 !dbg !6635 {
entry:
  %retval = alloca i32, align 4
  %m1.addr = alloca i8*, align 8
  %m2.addr = alloca i8*, align 8
  %mw1 = alloca %struct.df_mw_hardreg*, align 8
  %mw2 = alloca %struct.df_mw_hardreg*, align 8
  store i8* %m1, i8** %m1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %m1.addr, metadata !6636, metadata !DIExpression()), !dbg !6637
  store i8* %m2, i8** %m2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %m2.addr, metadata !6638, metadata !DIExpression()), !dbg !6639
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %mw1, metadata !6640, metadata !DIExpression()), !dbg !6641
  %0 = load i8*, i8** %m1.addr, align 8, !dbg !6642
  %1 = bitcast i8* %0 to %struct.df_mw_hardreg**, !dbg !6643
  %2 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %1, align 8, !dbg !6644
  store %struct.df_mw_hardreg* %2, %struct.df_mw_hardreg** %mw1, align 8, !dbg !6641
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %mw2, metadata !6645, metadata !DIExpression()), !dbg !6646
  %3 = load i8*, i8** %m2.addr, align 8, !dbg !6647
  %4 = bitcast i8* %3 to %struct.df_mw_hardreg**, !dbg !6648
  %5 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %4, align 8, !dbg !6649
  store %struct.df_mw_hardreg* %5, %struct.df_mw_hardreg** %mw2, align 8, !dbg !6646
  %6 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw1, align 8, !dbg !6650
  %7 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw2, align 8, !dbg !6652
  %cmp = icmp eq %struct.df_mw_hardreg* %6, %7, !dbg !6653
  br i1 %cmp, label %if.then, label %if.end, !dbg !6654

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6655
  br label %return, !dbg !6655

if.end:                                           ; preds = %entry
  %8 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw1, align 8, !dbg !6656
  %type = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %8, i32 0, i32 1, !dbg !6658
  %bf.load = load i32, i32* %type, align 8, !dbg !6658
  %bf.clear = and i32 %bf.load, 65535, !dbg !6658
  %9 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw2, align 8, !dbg !6659
  %type1 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %9, i32 0, i32 1, !dbg !6660
  %bf.load2 = load i32, i32* %type1, align 8, !dbg !6660
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !6660
  %cmp4 = icmp ne i32 %bf.clear, %bf.clear3, !dbg !6661
  br i1 %cmp4, label %if.then5, label %if.end12, !dbg !6662

if.then5:                                         ; preds = %if.end
  %10 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw1, align 8, !dbg !6663
  %type6 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %10, i32 0, i32 1, !dbg !6664
  %bf.load7 = load i32, i32* %type6, align 8, !dbg !6664
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !6664
  %11 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw2, align 8, !dbg !6665
  %type9 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %11, i32 0, i32 1, !dbg !6666
  %bf.load10 = load i32, i32* %type9, align 8, !dbg !6666
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !6666
  %sub = sub nsw i32 %bf.clear8, %bf.clear11, !dbg !6667
  store i32 %sub, i32* %retval, align 4, !dbg !6668
  br label %return, !dbg !6668

if.end12:                                         ; preds = %if.end
  %12 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw1, align 8, !dbg !6669
  %flags = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %12, i32 0, i32 1, !dbg !6671
  %bf.load13 = load i32, i32* %flags, align 8, !dbg !6671
  %bf.ashr = ashr i32 %bf.load13, 16, !dbg !6671
  %13 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw2, align 8, !dbg !6672
  %flags14 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %13, i32 0, i32 1, !dbg !6673
  %bf.load15 = load i32, i32* %flags14, align 8, !dbg !6673
  %bf.ashr16 = ashr i32 %bf.load15, 16, !dbg !6673
  %cmp17 = icmp ne i32 %bf.ashr, %bf.ashr16, !dbg !6674
  br i1 %cmp17, label %if.then18, label %if.end26, !dbg !6675

if.then18:                                        ; preds = %if.end12
  %14 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw1, align 8, !dbg !6676
  %flags19 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %14, i32 0, i32 1, !dbg !6677
  %bf.load20 = load i32, i32* %flags19, align 8, !dbg !6677
  %bf.ashr21 = ashr i32 %bf.load20, 16, !dbg !6677
  %15 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw2, align 8, !dbg !6678
  %flags22 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %15, i32 0, i32 1, !dbg !6679
  %bf.load23 = load i32, i32* %flags22, align 8, !dbg !6679
  %bf.ashr24 = ashr i32 %bf.load23, 16, !dbg !6679
  %sub25 = sub nsw i32 %bf.ashr21, %bf.ashr24, !dbg !6680
  store i32 %sub25, i32* %retval, align 4, !dbg !6681
  br label %return, !dbg !6681

if.end26:                                         ; preds = %if.end12
  %16 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw1, align 8, !dbg !6682
  %start_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %16, i32 0, i32 2, !dbg !6684
  %17 = load i32, i32* %start_regno, align 4, !dbg !6684
  %18 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw2, align 8, !dbg !6685
  %start_regno27 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %18, i32 0, i32 2, !dbg !6686
  %19 = load i32, i32* %start_regno27, align 4, !dbg !6686
  %cmp28 = icmp ne i32 %17, %19, !dbg !6687
  br i1 %cmp28, label %if.then29, label %if.end33, !dbg !6688

if.then29:                                        ; preds = %if.end26
  %20 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw1, align 8, !dbg !6689
  %start_regno30 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %20, i32 0, i32 2, !dbg !6690
  %21 = load i32, i32* %start_regno30, align 4, !dbg !6690
  %22 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw2, align 8, !dbg !6691
  %start_regno31 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %22, i32 0, i32 2, !dbg !6692
  %23 = load i32, i32* %start_regno31, align 4, !dbg !6692
  %sub32 = sub i32 %21, %23, !dbg !6693
  store i32 %sub32, i32* %retval, align 4, !dbg !6694
  br label %return, !dbg !6694

if.end33:                                         ; preds = %if.end26
  %24 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw1, align 8, !dbg !6695
  %end_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %24, i32 0, i32 3, !dbg !6697
  %25 = load i32, i32* %end_regno, align 8, !dbg !6697
  %26 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw2, align 8, !dbg !6698
  %end_regno34 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %26, i32 0, i32 3, !dbg !6699
  %27 = load i32, i32* %end_regno34, align 8, !dbg !6699
  %cmp35 = icmp ne i32 %25, %27, !dbg !6700
  br i1 %cmp35, label %if.then36, label %if.end40, !dbg !6701

if.then36:                                        ; preds = %if.end33
  %28 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw1, align 8, !dbg !6702
  %end_regno37 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %28, i32 0, i32 3, !dbg !6703
  %29 = load i32, i32* %end_regno37, align 8, !dbg !6703
  %30 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw2, align 8, !dbg !6704
  %end_regno38 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %30, i32 0, i32 3, !dbg !6705
  %31 = load i32, i32* %end_regno38, align 8, !dbg !6705
  %sub39 = sub i32 %29, %31, !dbg !6706
  store i32 %sub39, i32* %retval, align 4, !dbg !6707
  br label %return, !dbg !6707

if.end40:                                         ; preds = %if.end33
  %32 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw1, align 8, !dbg !6708
  %mw_reg = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %32, i32 0, i32 0, !dbg !6710
  %33 = load %struct.rtx_def*, %struct.rtx_def** %mw_reg, align 8, !dbg !6710
  %34 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw2, align 8, !dbg !6711
  %mw_reg41 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %34, i32 0, i32 0, !dbg !6712
  %35 = load %struct.rtx_def*, %struct.rtx_def** %mw_reg41, align 8, !dbg !6712
  %cmp42 = icmp ne %struct.rtx_def* %33, %35, !dbg !6713
  br i1 %cmp42, label %if.then43, label %if.end46, !dbg !6714

if.then43:                                        ; preds = %if.end40
  %36 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw1, align 8, !dbg !6715
  %mw_order = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %36, i32 0, i32 4, !dbg !6716
  %37 = load i32, i32* %mw_order, align 4, !dbg !6716
  %38 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw2, align 8, !dbg !6717
  %mw_order44 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %38, i32 0, i32 4, !dbg !6718
  %39 = load i32, i32* %mw_order44, align 4, !dbg !6718
  %sub45 = sub i32 %37, %39, !dbg !6719
  store i32 %sub45, i32* %retval, align 4, !dbg !6720
  br label %return, !dbg !6720

if.end46:                                         ; preds = %if.end40
  store i32 0, i32* %retval, align 4, !dbg !6721
  br label %return, !dbg !6721

return:                                           ; preds = %if.end46, %if.then43, %if.then36, %if.then29, %if.then18, %if.then5, %if.then
  %40 = load i32, i32* %retval, align 4, !dbg !6722
  ret i32 %40, !dbg !6722
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @df_read_modify_subreg_p(%struct.rtx_def* %x) #0 !dbg !6723 {
entry:
  %retval = alloca i8, align 1
  %x.addr = alloca %struct.rtx_def*, align 8
  %isize = alloca i32, align 4
  %osize = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !6724, metadata !DIExpression()), !dbg !6725
  call void @llvm.dbg.declare(metadata i32* %isize, metadata !6726, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.declare(metadata i32* %osize, metadata !6728, metadata !DIExpression()), !dbg !6729
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6730
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !6730
  %bf.load = load i32, i32* %1, align 8, !dbg !6730
  %bf.clear = and i32 %bf.load, 65535, !dbg !6730
  %cmp = icmp ne i32 %bf.clear, 39, !dbg !6732
  br i1 %cmp, label %if.then, label %if.end, !dbg !6733

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !6734
  br label %return, !dbg !6734

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6735
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !6735
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6735
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !6735
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6735
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6735
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !6735
  %bf.load1 = load i32, i32* %4, align 8, !dbg !6735
  %bf.lshr = lshr i32 %bf.load1, 16, !dbg !6735
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !6735
  %idxprom = zext i32 %bf.clear2 to i64, !dbg !6735
  %arrayidx3 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6735
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !6735
  %conv = zext i8 %5 to i16, !dbg !6735
  %conv4 = zext i16 %conv to i32, !dbg !6735
  store i32 %conv4, i32* %isize, align 4, !dbg !6736
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6737
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !6737
  %bf.load5 = load i32, i32* %7, align 8, !dbg !6737
  %bf.lshr6 = lshr i32 %bf.load5, 16, !dbg !6737
  %bf.clear7 = and i32 %bf.lshr6, 255, !dbg !6737
  %idxprom8 = zext i32 %bf.clear7 to i64, !dbg !6737
  %arrayidx9 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom8, !dbg !6737
  %8 = load i8, i8* %arrayidx9, align 1, !dbg !6737
  %conv10 = zext i8 %8 to i16, !dbg !6737
  %conv11 = zext i16 %conv10 to i32, !dbg !6737
  store i32 %conv11, i32* %osize, align 4, !dbg !6738
  %9 = load i32, i32* %isize, align 4, !dbg !6739
  %10 = load i32, i32* %osize, align 4, !dbg !6740
  %cmp12 = icmp ugt i32 %9, %10, !dbg !6741
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !6742

land.rhs:                                         ; preds = %if.end
  %11 = load i32, i32* %isize, align 4, !dbg !6743
  %cmp14 = icmp ugt i32 %11, 4, !dbg !6744
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %12 = phi i1 [ false, %if.end ], [ %cmp14, %land.rhs ], !dbg !6745
  %land.ext = zext i1 %12 to i32, !dbg !6742
  %conv16 = trunc i32 %land.ext to i8, !dbg !6739
  store i8 %conv16, i8* %retval, align 1, !dbg !6746
  br label %return, !dbg !6746

return:                                           ; preds = %land.end, %if.then
  %13 = load i8, i8* %retval, align 1, !dbg !6747
  ret i8 %13, !dbg !6747
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_recompute_luids(%struct.basic_block_def* %bb) #0 !dbg !6748 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %luid = alloca i32, align 4
  %insn_info = alloca %struct.df_insn_info*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !6749, metadata !DIExpression()), !dbg !6750
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !6751, metadata !DIExpression()), !dbg !6752
  call void @llvm.dbg.declare(metadata i32* %luid, metadata !6753, metadata !DIExpression()), !dbg !6754
  store i32 0, i32* %luid, align 4, !dbg !6754
  call void @df_grow_insn_info(), !dbg !6755
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6756
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 7, !dbg !6756
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6756
  %1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6756
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i32 0, i32 0, !dbg !6756
  %2 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !6756
  store %struct.rtx_def* %2, %struct.rtx_def** %insn, align 8, !dbg !6756
  br label %for.cond, !dbg !6756

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6758
  %tobool = icmp ne %struct.rtx_def* %3, null, !dbg !6758
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !6758

land.rhs:                                         ; preds = %for.cond
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6758
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6758
  %il1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i32 0, i32 7, !dbg !6758
  %rtl2 = bitcast %union.basic_block_il_dependent* %il1 to %struct.rtl_bb_info**, !dbg !6758
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl2, align 8, !dbg !6758
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i32 0, i32 1, !dbg !6758
  %7 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6758
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !6758
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6758
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !6758
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6758
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6758
  %cmp = icmp ne %struct.rtx_def* %4, %8, !dbg !6758
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ], !dbg !6760
  br i1 %9, label %for.body, label %for.end, !dbg !6756

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info, metadata !6761, metadata !DIExpression()), !dbg !6763
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !6764
  %insns = getelementptr inbounds %struct.df, %struct.df* %10, i32 0, i32 10, !dbg !6764
  %11 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !6764
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6764
  %u3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !6764
  %fld4 = bitcast %union.u* %u3 to [1 x %union.rtunion_def]*, !dbg !6764
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i64 0, i64 0, !dbg !6764
  %rt_int = bitcast %union.rtunion_def* %arrayidx5 to i32*, !dbg !6764
  %13 = load i32, i32* %rt_int, align 8, !dbg !6764
  %idxprom = sext i32 %13 to i64, !dbg !6764
  %arrayidx6 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %11, i64 %idxprom, !dbg !6764
  %14 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx6, align 8, !dbg !6764
  store %struct.df_insn_info* %14, %struct.df_insn_info** %insn_info, align 8, !dbg !6763
  %15 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !6765
  %tobool7 = icmp ne %struct.df_insn_info* %15, null, !dbg !6765
  br i1 %tobool7, label %if.end, label %if.then, !dbg !6767

if.then:                                          ; preds = %for.body
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6768
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !6768
  %bf.load = load i32, i32* %17, align 8, !dbg !6768
  %bf.clear = and i32 %bf.load, 65535, !dbg !6768
  %cmp8 = icmp eq i32 %bf.clear, 8, !dbg !6768
  br i1 %cmp8, label %cond.true, label %lor.lhs.false, !dbg !6768

lor.lhs.false:                                    ; preds = %if.then
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6768
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !6768
  %bf.load9 = load i32, i32* %19, align 8, !dbg !6768
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !6768
  %cmp11 = icmp eq i32 %bf.clear10, 7, !dbg !6768
  br i1 %cmp11, label %cond.true, label %lor.lhs.false12, !dbg !6768

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6768
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !6768
  %bf.load13 = load i32, i32* %21, align 8, !dbg !6768
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !6768
  %cmp15 = icmp eq i32 %bf.clear14, 9, !dbg !6768
  br i1 %cmp15, label %cond.true, label %lor.lhs.false16, !dbg !6768

lor.lhs.false16:                                  ; preds = %lor.lhs.false12
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6768
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !6768
  %bf.load17 = load i32, i32* %23, align 8, !dbg !6768
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !6768
  %cmp19 = icmp eq i32 %bf.clear18, 10, !dbg !6768
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !6768

cond.true:                                        ; preds = %lor.lhs.false16, %lor.lhs.false12, %lor.lhs.false, %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 3633, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !6768
  br label %cond.end, !dbg !6768

cond.false:                                       ; preds = %lor.lhs.false16
  br label %cond.end, !dbg !6768

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6768
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6770
  %call = call %struct.df_insn_info* @df_insn_create_insn_record(%struct.rtx_def* %24), !dbg !6771
  store %struct.df_insn_info* %call, %struct.df_insn_info** %insn_info, align 8, !dbg !6772
  br label %if.end, !dbg !6773

if.end:                                           ; preds = %cond.end, %for.body
  %25 = load i32, i32* %luid, align 4, !dbg !6774
  %26 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !6775
  %luid20 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %26, i32 0, i32 5, !dbg !6775
  store i32 %25, i32* %luid20, align 8, !dbg !6776
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6777
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !6777
  %bf.load21 = load i32, i32* %28, align 8, !dbg !6777
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !6777
  %cmp23 = icmp eq i32 %bf.clear22, 8, !dbg !6777
  br i1 %cmp23, label %if.then36, label %lor.lhs.false24, !dbg !6777

lor.lhs.false24:                                  ; preds = %if.end
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6777
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !6777
  %bf.load25 = load i32, i32* %30, align 8, !dbg !6777
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !6777
  %cmp27 = icmp eq i32 %bf.clear26, 7, !dbg !6777
  br i1 %cmp27, label %if.then36, label %lor.lhs.false28, !dbg !6777

lor.lhs.false28:                                  ; preds = %lor.lhs.false24
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6777
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !6777
  %bf.load29 = load i32, i32* %32, align 8, !dbg !6777
  %bf.clear30 = and i32 %bf.load29, 65535, !dbg !6777
  %cmp31 = icmp eq i32 %bf.clear30, 9, !dbg !6777
  br i1 %cmp31, label %if.then36, label %lor.lhs.false32, !dbg !6777

lor.lhs.false32:                                  ; preds = %lor.lhs.false28
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6777
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !6777
  %bf.load33 = load i32, i32* %34, align 8, !dbg !6777
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !6777
  %cmp35 = icmp eq i32 %bf.clear34, 10, !dbg !6777
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !6779

if.then36:                                        ; preds = %lor.lhs.false32, %lor.lhs.false28, %lor.lhs.false24, %if.end
  %35 = load i32, i32* %luid, align 4, !dbg !6780
  %inc = add nsw i32 %35, 1, !dbg !6780
  store i32 %inc, i32* %luid, align 4, !dbg !6780
  br label %if.end37, !dbg !6781

if.end37:                                         ; preds = %if.then36, %lor.lhs.false32
  br label %for.inc, !dbg !6782

for.inc:                                          ; preds = %if.end37
  %36 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6758
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !6758
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !6758
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 2, !dbg !6758
  %rt_rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**, !dbg !6758
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx41, align 8, !dbg !6758
  store %struct.rtx_def* %37, %struct.rtx_def** %insn, align 8, !dbg !6758
  br label %for.cond, !dbg !6758, !llvm.loop !6783

for.end:                                          ; preds = %land.end
  ret void, !dbg !6785
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_bb_refs_collect(%struct.df_collection_rec* %collection_rec, %struct.basic_block_def* %bb) #0 !dbg !6786 {
entry:
  %collection_rec.addr = alloca %struct.df_collection_rec*, align 8
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %i = alloca i32, align 4
  %regno = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %regno44 = alloca i32, align 4
  %au = alloca %struct.bitmap_head_def*, align 8
  store %struct.df_collection_rec* %collection_rec, %struct.df_collection_rec** %collection_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec** %collection_rec.addr, metadata !6789, metadata !DIExpression()), !dbg !6790
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !6791, metadata !DIExpression()), !dbg !6792
  %0 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6793
  %def_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %0, i32 0, i32 0, !dbg !6793
  %1 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %def_vec, align 8, !dbg !6793
  %tobool = icmp ne %struct.VEC_df_ref_stack* %1, null, !dbg !6793
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6793

cond.true:                                        ; preds = %entry
  %2 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6793
  %def_vec1 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %2, i32 0, i32 0, !dbg !6793
  %3 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %def_vec1, align 8, !dbg !6793
  %base = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %3, i32 0, i32 0, !dbg !6793
  br label %cond.end, !dbg !6793

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6793

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_df_ref_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !6793
  call void @VEC_df_ref_base_truncate(%struct.VEC_df_ref_base* %cond, i32 0), !dbg !6793
  %4 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6794
  %use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %4, i32 0, i32 1, !dbg !6794
  %5 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %use_vec, align 8, !dbg !6794
  %tobool2 = icmp ne %struct.VEC_df_ref_stack* %5, null, !dbg !6794
  br i1 %tobool2, label %cond.true3, label %cond.false6, !dbg !6794

cond.true3:                                       ; preds = %cond.end
  %6 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6794
  %use_vec4 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %6, i32 0, i32 1, !dbg !6794
  %7 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %use_vec4, align 8, !dbg !6794
  %base5 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %7, i32 0, i32 0, !dbg !6794
  br label %cond.end7, !dbg !6794

cond.false6:                                      ; preds = %cond.end
  br label %cond.end7, !dbg !6794

cond.end7:                                        ; preds = %cond.false6, %cond.true3
  %cond8 = phi %struct.VEC_df_ref_base* [ %base5, %cond.true3 ], [ null, %cond.false6 ], !dbg !6794
  call void @VEC_df_ref_base_truncate(%struct.VEC_df_ref_base* %cond8, i32 0), !dbg !6794
  %8 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6795
  %eq_use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %8, i32 0, i32 2, !dbg !6795
  %9 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %eq_use_vec, align 8, !dbg !6795
  %tobool9 = icmp ne %struct.VEC_df_ref_stack* %9, null, !dbg !6795
  br i1 %tobool9, label %cond.true10, label %cond.false13, !dbg !6795

cond.true10:                                      ; preds = %cond.end7
  %10 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6795
  %eq_use_vec11 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %10, i32 0, i32 2, !dbg !6795
  %11 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %eq_use_vec11, align 8, !dbg !6795
  %base12 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %11, i32 0, i32 0, !dbg !6795
  br label %cond.end14, !dbg !6795

cond.false13:                                     ; preds = %cond.end7
  br label %cond.end14, !dbg !6795

cond.end14:                                       ; preds = %cond.false13, %cond.true10
  %cond15 = phi %struct.VEC_df_ref_base* [ %base12, %cond.true10 ], [ null, %cond.false13 ], !dbg !6795
  call void @VEC_df_ref_base_truncate(%struct.VEC_df_ref_base* %cond15, i32 0), !dbg !6795
  %12 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6796
  %mw_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %12, i32 0, i32 3, !dbg !6796
  %13 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec, align 8, !dbg !6796
  %tobool16 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %13, null, !dbg !6796
  br i1 %tobool16, label %cond.true17, label %cond.false20, !dbg !6796

cond.true17:                                      ; preds = %cond.end14
  %14 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6796
  %mw_vec18 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %14, i32 0, i32 3, !dbg !6796
  %15 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec18, align 8, !dbg !6796
  %base19 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %15, i32 0, i32 0, !dbg !6796
  br label %cond.end21, !dbg !6796

cond.false20:                                     ; preds = %cond.end14
  br label %cond.end21, !dbg !6796

cond.end21:                                       ; preds = %cond.false20, %cond.true17
  %cond22 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base19, %cond.true17 ], [ null, %cond.false20 ], !dbg !6796
  call void @VEC_df_mw_hardreg_ptr_base_truncate(%struct.VEC_df_mw_hardreg_ptr_base* %cond22, i32 0), !dbg !6796
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6797
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i32 0, i32 9, !dbg !6799
  %17 = load i32, i32* %index, align 8, !dbg !6799
  %cmp = icmp eq i32 %17, 0, !dbg !6800
  br i1 %cmp, label %if.then, label %if.else, !dbg !6801

if.then:                                          ; preds = %cond.end21
  %18 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6802
  %19 = load %struct.df*, %struct.df** @df, align 8, !dbg !6804
  %entry_block_defs = getelementptr inbounds %struct.df, %struct.df* %19, i32 0, i32 16, !dbg !6805
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs, align 8, !dbg !6805
  call void @df_entry_block_defs_collect(%struct.df_collection_rec* %18, %struct.bitmap_head_def* %20), !dbg !6806
  br label %return, !dbg !6807

if.else:                                          ; preds = %cond.end21
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6808
  %index23 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %21, i32 0, i32 9, !dbg !6810
  %22 = load i32, i32* %index23, align 8, !dbg !6810
  %cmp24 = icmp eq i32 %22, 1, !dbg !6811
  br i1 %cmp24, label %if.then25, label %if.end, !dbg !6812

if.then25:                                        ; preds = %if.else
  %23 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6813
  %24 = load %struct.df*, %struct.df** @df, align 8, !dbg !6815
  %exit_block_uses = getelementptr inbounds %struct.df, %struct.df* %24, i32 0, i32 17, !dbg !6816
  %25 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses, align 8, !dbg !6816
  call void @df_exit_block_uses_collect(%struct.df_collection_rec* %23, %struct.bitmap_head_def* %25), !dbg !6817
  br label %return, !dbg !6818

if.end:                                           ; preds = %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6819
  %call = call zeroext i8 @bb_has_eh_pred(%struct.basic_block_def* %26), !dbg !6821
  %tobool27 = icmp ne i8 %call, 0, !dbg !6821
  br i1 %tobool27, label %if.then28, label %if.end37, !dbg !6822

if.then28:                                        ; preds = %if.end26
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6823, metadata !DIExpression()), !dbg !6825
  store i32 0, i32* %i, align 4, !dbg !6826
  br label %for.cond, !dbg !6828

for.cond:                                         ; preds = %for.inc, %if.then28
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !6829, metadata !DIExpression()), !dbg !6832
  %27 = load i32, i32* %i, align 4, !dbg !6833
  %cmp29 = icmp ult i32 %27, 2, !dbg !6833
  br i1 %cmp29, label %cond.true30, label %cond.false31, !dbg !6833

cond.true30:                                      ; preds = %for.cond
  %28 = load i32, i32* %i, align 4, !dbg !6833
  br label %cond.end32, !dbg !6833

cond.false31:                                     ; preds = %for.cond
  br label %cond.end32, !dbg !6833

cond.end32:                                       ; preds = %cond.false31, %cond.true30
  %cond33 = phi i32 [ %28, %cond.true30 ], [ -1, %cond.false31 ], !dbg !6833
  store i32 %cond33, i32* %regno, align 4, !dbg !6832
  %29 = load i32, i32* %regno, align 4, !dbg !6834
  %cmp34 = icmp eq i32 %29, -1, !dbg !6836
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !6837

if.then35:                                        ; preds = %cond.end32
  br label %for.end, !dbg !6838

if.end36:                                         ; preds = %cond.end32
  %30 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6839
  %31 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !6840
  %32 = load i32, i32* %regno, align 4, !dbg !6841
  %idxprom = zext i32 %32 to i64, !dbg !6840
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %31, i64 %idxprom, !dbg !6840
  %33 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !6840
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6842
  call void @df_ref_record(i32 1, %struct.df_collection_rec* %30, %struct.rtx_def* %33, %struct.rtx_def** null, %struct.basic_block_def* %34, %struct.df_insn_info* null, i32 0, i32 2, i32 -1, i32 -1, i32 0), !dbg !6843
  br label %for.inc, !dbg !6844

for.inc:                                          ; preds = %if.end36
  %35 = load i32, i32* %i, align 4, !dbg !6845
  %inc = add i32 %35, 1, !dbg !6845
  store i32 %inc, i32* %i, align 4, !dbg !6845
  br label %for.cond, !dbg !6846, !llvm.loop !6847

for.end:                                          ; preds = %if.then35
  br label %if.end37, !dbg !6850

if.end37:                                         ; preds = %for.end, %if.end26
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6851
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %36, i32 0, i32 13, !dbg !6853
  %37 = load i32, i32* %flags, align 8, !dbg !6853
  %and = and i32 %37, 256, !dbg !6854
  %tobool38 = icmp ne i32 %and, 0, !dbg !6854
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !6855

if.then39:                                        ; preds = %if.end37
  %38 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6856
  %39 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !6857
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6858
  call void @df_ref_record(i32 1, %struct.df_collection_rec* %38, %struct.rtx_def* %39, %struct.rtx_def** null, %struct.basic_block_def* %40, %struct.df_insn_info* null, i32 0, i32 2, i32 -1, i32 -1, i32 0), !dbg !6859
  br label %if.end40, !dbg !6859

if.end40:                                         ; preds = %if.then39, %if.end37
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6860
  %index41 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %41, i32 0, i32 9, !dbg !6862
  %42 = load i32, i32* %index41, align 8, !dbg !6862
  %cmp42 = icmp sge i32 %42, 2, !dbg !6863
  br i1 %cmp42, label %if.then43, label %if.end58, !dbg !6864

if.then43:                                        ; preds = %if.end40
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !6865, metadata !DIExpression()), !dbg !6867
  call void @llvm.dbg.declare(metadata i32* %regno44, metadata !6868, metadata !DIExpression()), !dbg !6869
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %au, metadata !6870, metadata !DIExpression()), !dbg !6871
  %43 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6872
  %call45 = call zeroext i8 @bb_has_eh_pred(%struct.basic_block_def* %43), !dbg !6873
  %conv = zext i8 %call45 to i32, !dbg !6873
  %tobool46 = icmp ne i32 %conv, 0, !dbg !6873
  br i1 %tobool46, label %cond.true47, label %cond.false48, !dbg !6873

cond.true47:                                      ; preds = %if.then43
  %44 = load %struct.df*, %struct.df** @df, align 8, !dbg !6874
  %eh_block_artificial_uses = getelementptr inbounds %struct.df, %struct.df* %44, i32 0, i32 15, !dbg !6875
  %45 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %eh_block_artificial_uses, align 8, !dbg !6875
  br label %cond.end49, !dbg !6873

cond.false48:                                     ; preds = %if.then43
  %46 = load %struct.df*, %struct.df** @df, align 8, !dbg !6876
  %regular_block_artificial_uses = getelementptr inbounds %struct.df, %struct.df* %46, i32 0, i32 14, !dbg !6877
  %47 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses, align 8, !dbg !6877
  br label %cond.end49, !dbg !6873

cond.end49:                                       ; preds = %cond.false48, %cond.true47
  %cond50 = phi %struct.bitmap_head_def* [ %45, %cond.true47 ], [ %47, %cond.false48 ], !dbg !6873
  store %struct.bitmap_head_def* %cond50, %struct.bitmap_head_def** %au, align 8, !dbg !6871
  %48 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %au, align 8, !dbg !6878
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %48, i32 0, i32* %regno44), !dbg !6878
  br label %for.cond51, !dbg !6878

for.cond51:                                       ; preds = %for.inc56, %cond.end49
  %call52 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %regno44), !dbg !6880
  %tobool53 = icmp ne i8 %call52, 0, !dbg !6878
  br i1 %tobool53, label %for.body, label %for.end57, !dbg !6878

for.body:                                         ; preds = %for.cond51
  %49 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6882
  %50 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !6884
  %51 = load i32, i32* %regno44, align 4, !dbg !6885
  %idxprom54 = zext i32 %51 to i64, !dbg !6884
  %arrayidx55 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %50, i64 %idxprom54, !dbg !6884
  %52 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx55, align 8, !dbg !6884
  %53 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6886
  call void @df_ref_record(i32 1, %struct.df_collection_rec* %49, %struct.rtx_def* %52, %struct.rtx_def** null, %struct.basic_block_def* %53, %struct.df_insn_info* null, i32 1, i32 0, i32 -1, i32 -1, i32 0), !dbg !6887
  br label %for.inc56, !dbg !6888

for.inc56:                                        ; preds = %for.body
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %regno44), !dbg !6880
  br label %for.cond51, !dbg !6880, !llvm.loop !6889

for.end57:                                        ; preds = %for.cond51
  br label %if.end58, !dbg !6891

if.end58:                                         ; preds = %for.end57, %if.end40
  %54 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !6892
  call void @df_canonize_collection_rec(%struct.df_collection_rec* %54), !dbg !6893
  br label %return, !dbg !6894

return:                                           ; preds = %if.end58, %if.then25, %if.then
  ret void, !dbg !6894
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_update_entry_block_defs() #0 !dbg !6895 {
entry:
  %refs = alloca %struct.bitmap_head_def*, align 8
  %changed = alloca i8, align 1
  %bb_info = alloca %struct.df_scan_bb_info*, align 8
  %problem_data = alloca %struct.df_scan_problem_data*, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %refs, metadata !6896, metadata !DIExpression()), !dbg !6897
  %call = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @df_bitmap_obstack), !dbg !6898
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %refs, align 8, !dbg !6897
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !6899, metadata !DIExpression()), !dbg !6900
  store i8 0, i8* %changed, align 1, !dbg !6900
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %refs, align 8, !dbg !6901
  call void @df_get_entry_block_def_set(%struct.bitmap_head_def* %0), !dbg !6902
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !6903
  %entry_block_defs = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 16, !dbg !6905
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs, align 8, !dbg !6905
  %tobool = icmp ne %struct.bitmap_head_def* %2, null, !dbg !6903
  br i1 %tobool, label %if.then, label %if.else, !dbg !6906

if.then:                                          ; preds = %entry
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !6907
  %entry_block_defs1 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 16, !dbg !6910
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs1, align 8, !dbg !6910
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %refs, align 8, !dbg !6911
  %call2 = call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %4, %struct.bitmap_head_def* %5), !dbg !6912
  %tobool3 = icmp ne i8 %call2, 0, !dbg !6912
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !6913

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.df_scan_bb_info** %bb_info, metadata !6914, metadata !DIExpression()), !dbg !6916
  %call5 = call %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 0), !dbg !6917
  store %struct.df_scan_bb_info* %call5, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !6916
  %6 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !6918
  %artificial_defs = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %6, i32 0, i32 0, !dbg !6919
  %7 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_defs, align 8, !dbg !6919
  call void @df_ref_chain_delete_du_chain(%union.df_ref_d** %7), !dbg !6920
  %8 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !6921
  %artificial_defs6 = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %8, i32 0, i32 0, !dbg !6922
  %9 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_defs6, align 8, !dbg !6922
  call void @df_ref_chain_delete(%union.df_ref_d** %9), !dbg !6923
  %10 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !6924
  %artificial_defs7 = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %10, i32 0, i32 0, !dbg !6925
  store %union.df_ref_d** null, %union.df_ref_d*** %artificial_defs7, align 8, !dbg !6926
  store i8 1, i8* %changed, align 1, !dbg !6927
  br label %if.end, !dbg !6928

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end11, !dbg !6929

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.df_scan_problem_data** %problem_data, metadata !6930, metadata !DIExpression()), !dbg !6932
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !6933
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %11, i32 0, i32 1, !dbg !6933
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !6933
  %12 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6933
  %problem_data8 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %12, i32 0, i32 5, !dbg !6934
  %13 = load i8*, i8** %problem_data8, align 8, !dbg !6934
  %14 = bitcast i8* %13 to %struct.df_scan_problem_data*, !dbg !6935
  store %struct.df_scan_problem_data* %14, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !6932
  %15 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !6936
  %reg_bitmaps = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %15, i32 0, i32 7, !dbg !6936
  %call9 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %reg_bitmaps), !dbg !6936
  %16 = load %struct.df*, %struct.df** @df, align 8, !dbg !6937
  %entry_block_defs10 = getelementptr inbounds %struct.df, %struct.df* %16, i32 0, i32 16, !dbg !6938
  store %struct.bitmap_head_def* %call9, %struct.bitmap_head_def** %entry_block_defs10, align 8, !dbg !6939
  store i8 1, i8* %changed, align 1, !dbg !6940
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.end
  %17 = load i8, i8* %changed, align 1, !dbg !6941
  %tobool12 = icmp ne i8 %17, 0, !dbg !6941
  br i1 %tobool12, label %if.then13, label %if.end20, !dbg !6943

if.then13:                                        ; preds = %if.end11
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %refs, align 8, !dbg !6944
  call void @df_record_entry_block_defs(%struct.bitmap_head_def* %18), !dbg !6946
  %19 = load %struct.df*, %struct.df** @df, align 8, !dbg !6947
  %entry_block_defs14 = getelementptr inbounds %struct.df, %struct.df* %19, i32 0, i32 16, !dbg !6948
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs14, align 8, !dbg !6948
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %refs, align 8, !dbg !6949
  call void @bitmap_copy(%struct.bitmap_head_def* %20, %struct.bitmap_head_def* %21), !dbg !6950
  %22 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6951
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %22, i64 0, !dbg !6951
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !6951
  %23 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6951
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %23, i32 0, i32 2, !dbg !6951
  %24 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !6951
  %tobool15 = icmp ne %struct.VEC_basic_block_gc* %24, null, !dbg !6951
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !6951

cond.true:                                        ; preds = %if.then13
  %25 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6951
  %add.ptr16 = getelementptr inbounds %struct.function, %struct.function* %25, i64 0, !dbg !6951
  %cfg17 = getelementptr inbounds %struct.function, %struct.function* %add.ptr16, i32 0, i32 1, !dbg !6951
  %26 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg17, align 8, !dbg !6951
  %x_basic_block_info18 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %26, i32 0, i32 2, !dbg !6951
  %27 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info18, align 8, !dbg !6951
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %27, i32 0, i32 0, !dbg !6951
  br label %cond.end, !dbg !6951

cond.false:                                       ; preds = %if.then13
  br label %cond.end, !dbg !6951

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !6951
  %call19 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 0), !dbg !6951
  call void @df_set_bb_dirty(%struct.basic_block_def* %call19), !dbg !6952
  br label %if.end20, !dbg !6953

if.end20:                                         ; preds = %cond.end, %if.end11
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %refs, align 8, !dbg !6954
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %28), !dbg !6954
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %refs, align 8, !dbg !6954
  ret void, !dbg !6955
}

declare dso_local zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_update_exit_block_uses() #0 !dbg !6956 {
entry:
  %refs = alloca %struct.bitmap_head_def*, align 8
  %changed = alloca i8, align 1
  %bb_info = alloca %struct.df_scan_bb_info*, align 8
  %problem_data = alloca %struct.df_scan_problem_data*, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %refs, metadata !6957, metadata !DIExpression()), !dbg !6958
  %call = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @df_bitmap_obstack), !dbg !6959
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %refs, align 8, !dbg !6958
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !6960, metadata !DIExpression()), !dbg !6961
  store i8 0, i8* %changed, align 1, !dbg !6961
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %refs, align 8, !dbg !6962
  call void @df_get_exit_block_use_set(%struct.bitmap_head_def* %0), !dbg !6963
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !6964
  %exit_block_uses = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 17, !dbg !6966
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses, align 8, !dbg !6966
  %tobool = icmp ne %struct.bitmap_head_def* %2, null, !dbg !6964
  br i1 %tobool, label %if.then, label %if.else, !dbg !6967

if.then:                                          ; preds = %entry
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !6968
  %exit_block_uses1 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 17, !dbg !6971
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses1, align 8, !dbg !6971
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %refs, align 8, !dbg !6972
  %call2 = call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %4, %struct.bitmap_head_def* %5), !dbg !6973
  %tobool3 = icmp ne i8 %call2, 0, !dbg !6973
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !6974

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.df_scan_bb_info** %bb_info, metadata !6975, metadata !DIExpression()), !dbg !6977
  %call5 = call %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 1), !dbg !6978
  store %struct.df_scan_bb_info* %call5, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !6977
  %6 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !6979
  %artificial_uses = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %6, i32 0, i32 1, !dbg !6980
  %7 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_uses, align 8, !dbg !6980
  call void @df_ref_chain_delete_du_chain(%union.df_ref_d** %7), !dbg !6981
  %8 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !6982
  %artificial_uses6 = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %8, i32 0, i32 1, !dbg !6983
  %9 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_uses6, align 8, !dbg !6983
  call void @df_ref_chain_delete(%union.df_ref_d** %9), !dbg !6984
  %10 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !6985
  %artificial_uses7 = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %10, i32 0, i32 1, !dbg !6986
  store %union.df_ref_d** null, %union.df_ref_d*** %artificial_uses7, align 8, !dbg !6987
  store i8 1, i8* %changed, align 1, !dbg !6988
  br label %if.end, !dbg !6989

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end11, !dbg !6990

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.df_scan_problem_data** %problem_data, metadata !6991, metadata !DIExpression()), !dbg !6993
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !6994
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %11, i32 0, i32 1, !dbg !6994
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !6994
  %12 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6994
  %problem_data8 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %12, i32 0, i32 5, !dbg !6995
  %13 = load i8*, i8** %problem_data8, align 8, !dbg !6995
  %14 = bitcast i8* %13 to %struct.df_scan_problem_data*, !dbg !6996
  store %struct.df_scan_problem_data* %14, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !6993
  %15 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !6997
  %reg_bitmaps = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %15, i32 0, i32 7, !dbg !6997
  %call9 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %reg_bitmaps), !dbg !6997
  %16 = load %struct.df*, %struct.df** @df, align 8, !dbg !6998
  %exit_block_uses10 = getelementptr inbounds %struct.df, %struct.df* %16, i32 0, i32 17, !dbg !6999
  store %struct.bitmap_head_def* %call9, %struct.bitmap_head_def** %exit_block_uses10, align 8, !dbg !7000
  store i8 1, i8* %changed, align 1, !dbg !7001
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.end
  %17 = load i8, i8* %changed, align 1, !dbg !7002
  %tobool12 = icmp ne i8 %17, 0, !dbg !7002
  br i1 %tobool12, label %if.then13, label %if.end20, !dbg !7004

if.then13:                                        ; preds = %if.end11
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %refs, align 8, !dbg !7005
  call void @df_record_exit_block_uses(%struct.bitmap_head_def* %18), !dbg !7007
  %19 = load %struct.df*, %struct.df** @df, align 8, !dbg !7008
  %exit_block_uses14 = getelementptr inbounds %struct.df, %struct.df* %19, i32 0, i32 17, !dbg !7009
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses14, align 8, !dbg !7009
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %refs, align 8, !dbg !7010
  call void @bitmap_copy(%struct.bitmap_head_def* %20, %struct.bitmap_head_def* %21), !dbg !7011
  %22 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7012
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %22, i64 0, !dbg !7012
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !7012
  %23 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7012
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %23, i32 0, i32 2, !dbg !7012
  %24 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !7012
  %tobool15 = icmp ne %struct.VEC_basic_block_gc* %24, null, !dbg !7012
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !7012

cond.true:                                        ; preds = %if.then13
  %25 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7012
  %add.ptr16 = getelementptr inbounds %struct.function, %struct.function* %25, i64 0, !dbg !7012
  %cfg17 = getelementptr inbounds %struct.function, %struct.function* %add.ptr16, i32 0, i32 1, !dbg !7012
  %26 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg17, align 8, !dbg !7012
  %x_basic_block_info18 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %26, i32 0, i32 2, !dbg !7012
  %27 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info18, align 8, !dbg !7012
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %27, i32 0, i32 0, !dbg !7012
  br label %cond.end, !dbg !7012

cond.false:                                       ; preds = %if.then13
  br label %cond.end, !dbg !7012

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7012
  %call19 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 1), !dbg !7012
  call void @df_set_bb_dirty(%struct.basic_block_def* %call19), !dbg !7013
  br label %if.end20, !dbg !7014

if.end20:                                         ; preds = %cond.end, %if.end11
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %refs, align 8, !dbg !7015
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %28), !dbg !7015
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %refs, align 8, !dbg !7015
  ret void, !dbg !7016
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_hard_reg_init() #0 !dbg !2035 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7017, metadata !DIExpression()), !dbg !7018
  %0 = load i8, i8* @initialized, align 1, !dbg !7019
  %tobool = icmp ne i8 %0, 0, !dbg !7019
  br i1 %tobool, label %if.then, label %if.end, !dbg !7021

if.then:                                          ; preds = %entry
  br label %return, !dbg !7022

if.end:                                           ; preds = %entry
  store i64 0, i64* @elim_reg_set, align 8, !dbg !7023
  store i32 0, i32* %i, align 4, !dbg !7024
  br label %for.cond, !dbg !7026

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %i, align 4, !dbg !7027
  %cmp = icmp slt i32 %1, 4, !dbg !7029
  br i1 %cmp, label %for.body, label %for.end, !dbg !7030

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !7031
  %idxprom = sext i32 %2 to i64, !dbg !7031
  %arrayidx = getelementptr inbounds [4 x %struct.anon], [4 x %struct.anon]* @df_hard_reg_init.eliminables, i64 0, i64 %idxprom, !dbg !7031
  %from = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx, i32 0, i32 0, !dbg !7031
  %3 = load i32, i32* %from, align 8, !dbg !7031
  %sh_prom = zext i32 %3 to i64, !dbg !7031
  %shl = shl i64 1, %sh_prom, !dbg !7031
  %4 = load i64, i64* @elim_reg_set, align 8, !dbg !7031
  %or = or i64 %4, %shl, !dbg !7031
  store i64 %or, i64* @elim_reg_set, align 8, !dbg !7031
  br label %for.inc, !dbg !7031

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !7032
  %inc = add nsw i32 %5, 1, !dbg !7032
  store i32 %inc, i32* %i, align 4, !dbg !7032
  br label %for.cond, !dbg !7033, !llvm.loop !7034

for.end:                                          ; preds = %for.cond
  store i8 1, i8* @initialized, align 1, !dbg !7036
  br label %return, !dbg !7037

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !7037
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @df_hard_reg_used_p(i32 %reg) #0 !dbg !7038 {
entry:
  %reg.addr = alloca i32, align 4
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !7041, metadata !DIExpression()), !dbg !7042
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7043
  %hard_regs_live_count = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 25, !dbg !7044
  %1 = load i32*, i32** %hard_regs_live_count, align 8, !dbg !7044
  %2 = load i32, i32* %reg.addr, align 4, !dbg !7045
  %idxprom = zext i32 %2 to i64, !dbg !7043
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !7043
  %3 = load i32, i32* %arrayidx, align 4, !dbg !7043
  %cmp = icmp ne i32 %3, 0, !dbg !7046
  %conv = zext i1 %cmp to i32, !dbg !7046
  %conv1 = trunc i32 %conv to i8, !dbg !7043
  ret i8 %conv1, !dbg !7047
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @df_hard_reg_used_count(i32 %reg) #0 !dbg !7048 {
entry:
  %reg.addr = alloca i32, align 4
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !7051, metadata !DIExpression()), !dbg !7052
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7053
  %hard_regs_live_count = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 25, !dbg !7054
  %1 = load i32*, i32** %hard_regs_live_count, align 8, !dbg !7054
  %2 = load i32, i32* %reg.addr, align 4, !dbg !7055
  %idxprom = zext i32 %2 to i64, !dbg !7053
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !7053
  %3 = load i32, i32* %arrayidx, align 4, !dbg !7053
  ret i32 %3, !dbg !7056
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @df_regs_ever_live_p(i32 %regno) #0 !dbg !7057 {
entry:
  %regno.addr = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !7058, metadata !DIExpression()), !dbg !7059
  %0 = load i32, i32* %regno.addr, align 4, !dbg !7060
  %idxprom = zext i32 %0 to i64, !dbg !7061
  %arrayidx = getelementptr inbounds [53 x i8], [53 x i8]* @regs_ever_live, i64 0, i64 %idxprom, !dbg !7061
  %1 = load i8, i8* %arrayidx, align 1, !dbg !7061
  ret i8 %1, !dbg !7062
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_set_regs_ever_live(i32 %regno, i8 zeroext %value) #0 !dbg !7063 {
entry:
  %regno.addr = alloca i32, align 4
  %value.addr = alloca i8, align 1
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !7066, metadata !DIExpression()), !dbg !7067
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !7068, metadata !DIExpression()), !dbg !7069
  %0 = load i32, i32* %regno.addr, align 4, !dbg !7070
  %idxprom = zext i32 %0 to i64, !dbg !7072
  %arrayidx = getelementptr inbounds [53 x i8], [53 x i8]* @regs_ever_live, i64 0, i64 %idxprom, !dbg !7072
  %1 = load i8, i8* %arrayidx, align 1, !dbg !7072
  %conv = zext i8 %1 to i32, !dbg !7072
  %2 = load i8, i8* %value.addr, align 1, !dbg !7073
  %conv1 = zext i8 %2 to i32, !dbg !7073
  %cmp = icmp eq i32 %conv, %conv1, !dbg !7074
  br i1 %cmp, label %if.then, label %if.end, !dbg !7075

if.then:                                          ; preds = %entry
  br label %if.end6, !dbg !7076

if.end:                                           ; preds = %entry
  %3 = load i8, i8* %value.addr, align 1, !dbg !7077
  %4 = load i32, i32* %regno.addr, align 4, !dbg !7078
  %idxprom3 = zext i32 %4 to i64, !dbg !7079
  %arrayidx4 = getelementptr inbounds [53 x i8], [53 x i8]* @regs_ever_live, i64 0, i64 %idxprom3, !dbg !7079
  store i8 %3, i8* %arrayidx4, align 1, !dbg !7080
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !7081
  %tobool = icmp ne %struct.df* %5, null, !dbg !7081
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !7083

if.then5:                                         ; preds = %if.end
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !7084
  %redo_entry_and_exit = getelementptr inbounds %struct.df, %struct.df* %6, i32 0, i32 29, !dbg !7085
  store i8 1, i8* %redo_entry_and_exit, align 2, !dbg !7086
  br label %if.end6, !dbg !7084

if.end6:                                          ; preds = %if.then, %if.then5, %if.end
  ret void, !dbg !7087
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_compute_regs_ever_live(i8 zeroext %reset) #0 !dbg !7088 {
entry:
  %reset.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %changed = alloca i8, align 1
  store i8 %reset, i8* %reset.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reset.addr, metadata !7091, metadata !DIExpression()), !dbg !7092
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7093, metadata !DIExpression()), !dbg !7094
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !7095, metadata !DIExpression()), !dbg !7096
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7097
  %redo_entry_and_exit = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 29, !dbg !7098
  %1 = load i8, i8* %redo_entry_and_exit, align 2, !dbg !7098
  store i8 %1, i8* %changed, align 1, !dbg !7096
  %2 = load i8, i8* %reset.addr, align 1, !dbg !7099
  %tobool = icmp ne i8 %2, 0, !dbg !7099
  br i1 %tobool, label %if.then, label %if.end, !dbg !7101

if.then:                                          ; preds = %entry
  call void @llvm.memset.p0i8.i64(i8* align 16 getelementptr inbounds ([53 x i8], [53 x i8]* @regs_ever_live, i64 0, i64 0), i8 0, i64 53, i1 false), !dbg !7102
  br label %if.end, !dbg !7102

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !7103
  br label %for.cond, !dbg !7105

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !7106
  %cmp = icmp ult i32 %3, 53, !dbg !7108
  br i1 %cmp, label %for.body, label %for.end, !dbg !7109

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !7110
  %idxprom = zext i32 %4 to i64, !dbg !7112
  %arrayidx = getelementptr inbounds [53 x i8], [53 x i8]* @regs_ever_live, i64 0, i64 %idxprom, !dbg !7112
  %5 = load i8, i8* %arrayidx, align 1, !dbg !7112
  %tobool1 = icmp ne i8 %5, 0, !dbg !7112
  br i1 %tobool1, label %if.end6, label %land.lhs.true, !dbg !7113

land.lhs.true:                                    ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !7114
  %call = call zeroext i8 @df_hard_reg_used_p(i32 %6), !dbg !7115
  %conv = zext i8 %call to i32, !dbg !7115
  %tobool2 = icmp ne i32 %conv, 0, !dbg !7115
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !7116

if.then3:                                         ; preds = %land.lhs.true
  %7 = load i32, i32* %i, align 4, !dbg !7117
  %idxprom4 = zext i32 %7 to i64, !dbg !7119
  %arrayidx5 = getelementptr inbounds [53 x i8], [53 x i8]* @regs_ever_live, i64 0, i64 %idxprom4, !dbg !7119
  store i8 1, i8* %arrayidx5, align 1, !dbg !7120
  store i8 1, i8* %changed, align 1, !dbg !7121
  br label %if.end6, !dbg !7122

if.end6:                                          ; preds = %if.then3, %land.lhs.true, %for.body
  br label %for.inc, !dbg !7123

for.inc:                                          ; preds = %if.end6
  %8 = load i32, i32* %i, align 4, !dbg !7124
  %inc = add i32 %8, 1, !dbg !7124
  store i32 %inc, i32* %i, align 4, !dbg !7124
  br label %for.cond, !dbg !7125, !llvm.loop !7126

for.end:                                          ; preds = %for.cond
  %9 = load i8, i8* %changed, align 1, !dbg !7128
  %tobool7 = icmp ne i8 %9, 0, !dbg !7128
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !7130

if.then8:                                         ; preds = %for.end
  call void @df_update_entry_exit_and_calls(), !dbg !7131
  br label %if.end9, !dbg !7131

if.end9:                                          ; preds = %if.then8, %for.end
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !7132
  %redo_entry_and_exit10 = getelementptr inbounds %struct.df, %struct.df* %10, i32 0, i32 29, !dbg !7133
  store i8 0, i8* %redo_entry_and_exit10, align 2, !dbg !7134
  ret void, !dbg !7135
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_scan_verify() #0 !dbg !7136 {
entry:
  %i = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %regular_block_artificial_uses = alloca %struct.bitmap_head_def*, align 8
  %eh_block_artificial_uses = alloca %struct.bitmap_head_def*, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7137, metadata !DIExpression()), !dbg !7138
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !7139, metadata !DIExpression()), !dbg !7140
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %regular_block_artificial_uses, metadata !7141, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %eh_block_artificial_uses, metadata !7143, metadata !DIExpression()), !dbg !7144
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7145
  %tobool = icmp ne %struct.df* %0, null, !dbg !7145
  br i1 %tobool, label %if.end, label %if.then, !dbg !7147

if.then:                                          ; preds = %entry
  br label %for.end74, !dbg !7148

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !7149
  br label %for.cond, !dbg !7151

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %i, align 4, !dbg !7152
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !7154
  %regs_inited = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 9, !dbg !7154
  %3 = load i32, i32* %regs_inited, align 4, !dbg !7154
  %cmp = icmp ult i32 %1, %3, !dbg !7155
  br i1 %cmp, label %for.body, label %for.end, !dbg !7156

for.body:                                         ; preds = %for.cond
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !7157
  %def_regs = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 5, !dbg !7157
  %5 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs, align 8, !dbg !7157
  %6 = load i32, i32* %i, align 4, !dbg !7157
  %idxprom = zext i32 %6 to i64, !dbg !7157
  %arrayidx = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %5, i64 %idxprom, !dbg !7157
  %7 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx, align 8, !dbg !7157
  %reg_chain = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %7, i32 0, i32 0, !dbg !7157
  %8 = load %union.df_ref_d*, %union.df_ref_d** %reg_chain, align 8, !dbg !7157
  %9 = load i32, i32* %i, align 4, !dbg !7157
  %call = call i32 @df_reg_chain_mark(%union.df_ref_d* %8, i32 %9, i8 zeroext 1, i8 zeroext 0), !dbg !7157
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !7157
  %def_regs1 = getelementptr inbounds %struct.df, %struct.df* %10, i32 0, i32 5, !dbg !7157
  %11 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs1, align 8, !dbg !7157
  %12 = load i32, i32* %i, align 4, !dbg !7157
  %idxprom2 = zext i32 %12 to i64, !dbg !7157
  %arrayidx3 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %11, i64 %idxprom2, !dbg !7157
  %13 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx3, align 8, !dbg !7157
  %n_refs = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %13, i32 0, i32 1, !dbg !7157
  %14 = load i32, i32* %n_refs, align 8, !dbg !7157
  %cmp4 = icmp eq i32 %call, %14, !dbg !7157
  br i1 %cmp4, label %cond.false, label %cond.true, !dbg !7157

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4647, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !7157
  br label %cond.end, !dbg !7157

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !7157

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7157
  %15 = load %struct.df*, %struct.df** @df, align 8, !dbg !7159
  %use_regs = getelementptr inbounds %struct.df, %struct.df* %15, i32 0, i32 6, !dbg !7159
  %16 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs, align 8, !dbg !7159
  %17 = load i32, i32* %i, align 4, !dbg !7159
  %idxprom5 = zext i32 %17 to i64, !dbg !7159
  %arrayidx6 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %16, i64 %idxprom5, !dbg !7159
  %18 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx6, align 8, !dbg !7159
  %reg_chain7 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %18, i32 0, i32 0, !dbg !7159
  %19 = load %union.df_ref_d*, %union.df_ref_d** %reg_chain7, align 8, !dbg !7159
  %20 = load i32, i32* %i, align 4, !dbg !7159
  %call8 = call i32 @df_reg_chain_mark(%union.df_ref_d* %19, i32 %20, i8 zeroext 0, i8 zeroext 0), !dbg !7159
  %21 = load %struct.df*, %struct.df** @df, align 8, !dbg !7159
  %use_regs9 = getelementptr inbounds %struct.df, %struct.df* %21, i32 0, i32 6, !dbg !7159
  %22 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs9, align 8, !dbg !7159
  %23 = load i32, i32* %i, align 4, !dbg !7159
  %idxprom10 = zext i32 %23 to i64, !dbg !7159
  %arrayidx11 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %22, i64 %idxprom10, !dbg !7159
  %24 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx11, align 8, !dbg !7159
  %n_refs12 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %24, i32 0, i32 1, !dbg !7159
  %25 = load i32, i32* %n_refs12, align 8, !dbg !7159
  %cmp13 = icmp eq i32 %call8, %25, !dbg !7159
  br i1 %cmp13, label %cond.false15, label %cond.true14, !dbg !7159

cond.true14:                                      ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4649, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !7159
  br label %cond.end16, !dbg !7159

cond.false15:                                     ; preds = %cond.end
  br label %cond.end16, !dbg !7159

cond.end16:                                       ; preds = %cond.false15, %cond.true14
  %cond17 = phi i32 [ 0, %cond.true14 ], [ 0, %cond.false15 ], !dbg !7159
  %26 = load %struct.df*, %struct.df** @df, align 8, !dbg !7160
  %eq_use_regs = getelementptr inbounds %struct.df, %struct.df* %26, i32 0, i32 7, !dbg !7160
  %27 = load %struct.df_reg_info**, %struct.df_reg_info*** %eq_use_regs, align 8, !dbg !7160
  %28 = load i32, i32* %i, align 4, !dbg !7160
  %idxprom18 = zext i32 %28 to i64, !dbg !7160
  %arrayidx19 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %27, i64 %idxprom18, !dbg !7160
  %29 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx19, align 8, !dbg !7160
  %reg_chain20 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %29, i32 0, i32 0, !dbg !7160
  %30 = load %union.df_ref_d*, %union.df_ref_d** %reg_chain20, align 8, !dbg !7160
  %31 = load i32, i32* %i, align 4, !dbg !7160
  %call21 = call i32 @df_reg_chain_mark(%union.df_ref_d* %30, i32 %31, i8 zeroext 0, i8 zeroext 1), !dbg !7160
  %32 = load %struct.df*, %struct.df** @df, align 8, !dbg !7160
  %eq_use_regs22 = getelementptr inbounds %struct.df, %struct.df* %32, i32 0, i32 7, !dbg !7160
  %33 = load %struct.df_reg_info**, %struct.df_reg_info*** %eq_use_regs22, align 8, !dbg !7160
  %34 = load i32, i32* %i, align 4, !dbg !7160
  %idxprom23 = zext i32 %34 to i64, !dbg !7160
  %arrayidx24 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %33, i64 %idxprom23, !dbg !7160
  %35 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx24, align 8, !dbg !7160
  %n_refs25 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %35, i32 0, i32 1, !dbg !7160
  %36 = load i32, i32* %n_refs25, align 8, !dbg !7160
  %cmp26 = icmp eq i32 %call21, %36, !dbg !7160
  br i1 %cmp26, label %cond.false28, label %cond.true27, !dbg !7160

cond.true27:                                      ; preds = %cond.end16
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4651, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !7160
  br label %cond.end29, !dbg !7160

cond.false28:                                     ; preds = %cond.end16
  br label %cond.end29, !dbg !7160

cond.end29:                                       ; preds = %cond.false28, %cond.true27
  %cond30 = phi i32 [ 0, %cond.true27 ], [ 0, %cond.false28 ], !dbg !7160
  br label %for.inc, !dbg !7161

for.inc:                                          ; preds = %cond.end29
  %37 = load i32, i32* %i, align 4, !dbg !7162
  %inc = add i32 %37, 1, !dbg !7162
  store i32 %inc, i32* %i, align 4, !dbg !7162
  br label %for.cond, !dbg !7163, !llvm.loop !7164

for.end:                                          ; preds = %for.cond
  %call31 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @df_bitmap_obstack), !dbg !7166
  store %struct.bitmap_head_def* %call31, %struct.bitmap_head_def** %regular_block_artificial_uses, align 8, !dbg !7167
  %call32 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @df_bitmap_obstack), !dbg !7168
  store %struct.bitmap_head_def* %call32, %struct.bitmap_head_def** %eh_block_artificial_uses, align 8, !dbg !7169
  %38 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses, align 8, !dbg !7170
  call void @df_get_regular_block_artificial_uses(%struct.bitmap_head_def* %38), !dbg !7171
  %39 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %eh_block_artificial_uses, align 8, !dbg !7172
  call void @df_get_eh_block_artificial_uses(%struct.bitmap_head_def* %39), !dbg !7173
  %40 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %eh_block_artificial_uses, align 8, !dbg !7174
  %41 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses, align 8, !dbg !7175
  %call33 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %40, %struct.bitmap_head_def* %41), !dbg !7176
  %42 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses, align 8, !dbg !7177
  %43 = load %struct.df*, %struct.df** @df, align 8, !dbg !7177
  %regular_block_artificial_uses34 = getelementptr inbounds %struct.df, %struct.df* %43, i32 0, i32 14, !dbg !7177
  %44 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses34, align 8, !dbg !7177
  %call35 = call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %42, %struct.bitmap_head_def* %44), !dbg !7177
  %tobool36 = icmp ne i8 %call35, 0, !dbg !7177
  br i1 %tobool36, label %cond.false38, label %cond.true37, !dbg !7177

cond.true37:                                      ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4668, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !7177
  br label %cond.end39, !dbg !7177

cond.false38:                                     ; preds = %for.end
  br label %cond.end39, !dbg !7177

cond.end39:                                       ; preds = %cond.false38, %cond.true37
  %cond40 = phi i32 [ 0, %cond.true37 ], [ 0, %cond.false38 ], !dbg !7177
  %45 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %eh_block_artificial_uses, align 8, !dbg !7178
  %46 = load %struct.df*, %struct.df** @df, align 8, !dbg !7178
  %eh_block_artificial_uses41 = getelementptr inbounds %struct.df, %struct.df* %46, i32 0, i32 15, !dbg !7178
  %47 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %eh_block_artificial_uses41, align 8, !dbg !7178
  %call42 = call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %45, %struct.bitmap_head_def* %47), !dbg !7178
  %tobool43 = icmp ne i8 %call42, 0, !dbg !7178
  br i1 %tobool43, label %cond.false45, label %cond.true44, !dbg !7178

cond.true44:                                      ; preds = %cond.end39
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4670, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !7178
  br label %cond.end46, !dbg !7178

cond.false45:                                     ; preds = %cond.end39
  br label %cond.end46, !dbg !7178

cond.end46:                                       ; preds = %cond.false45, %cond.true44
  %cond47 = phi i32 [ 0, %cond.true44 ], [ 0, %cond.false45 ], !dbg !7178
  %48 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses, align 8, !dbg !7179
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %48), !dbg !7179
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %regular_block_artificial_uses, align 8, !dbg !7179
  %49 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %eh_block_artificial_uses, align 8, !dbg !7180
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %49), !dbg !7180
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %eh_block_artificial_uses, align 8, !dbg !7180
  %call48 = call zeroext i8 @df_entry_block_bitmap_verify(i8 zeroext 1), !dbg !7181
  %call49 = call zeroext i8 @df_exit_block_bitmap_verify(i8 zeroext 1), !dbg !7182
  %50 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7183
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %50, i64 0, !dbg !7183
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !7183
  %51 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7183
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %51, i32 0, i32 0, !dbg !7183
  %52 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !7183
  store %struct.basic_block_def* %52, %struct.basic_block_def** %bb, align 8, !dbg !7183
  br label %for.cond50, !dbg !7183

for.cond50:                                       ; preds = %for.inc54, %cond.end46
  %53 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7185
  %tobool51 = icmp ne %struct.basic_block_def* %53, null, !dbg !7183
  br i1 %tobool51, label %for.body52, label %for.end55, !dbg !7183

for.body52:                                       ; preds = %for.cond50
  %54 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7187
  %call53 = call zeroext i8 @df_bb_verify(%struct.basic_block_def* %54), !dbg !7188
  br label %for.inc54, !dbg !7188

for.inc54:                                        ; preds = %for.body52
  %55 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7185
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %55, i32 0, i32 6, !dbg !7185
  %56 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !7185
  store %struct.basic_block_def* %56, %struct.basic_block_def** %bb, align 8, !dbg !7185
  br label %for.cond50, !dbg !7185, !llvm.loop !7189

for.end55:                                        ; preds = %for.cond50
  store i32 0, i32* %i, align 4, !dbg !7191
  br label %for.cond56, !dbg !7193

for.cond56:                                       ; preds = %for.inc72, %for.end55
  %57 = load i32, i32* %i, align 4, !dbg !7194
  %58 = load %struct.df*, %struct.df** @df, align 8, !dbg !7196
  %regs_inited57 = getelementptr inbounds %struct.df, %struct.df* %58, i32 0, i32 9, !dbg !7196
  %59 = load i32, i32* %regs_inited57, align 4, !dbg !7196
  %cmp58 = icmp ult i32 %57, %59, !dbg !7197
  br i1 %cmp58, label %for.body59, label %for.end74, !dbg !7198

for.body59:                                       ; preds = %for.cond56
  %60 = load %struct.df*, %struct.df** @df, align 8, !dbg !7199
  %def_regs60 = getelementptr inbounds %struct.df, %struct.df* %60, i32 0, i32 5, !dbg !7199
  %61 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs60, align 8, !dbg !7199
  %62 = load i32, i32* %i, align 4, !dbg !7199
  %idxprom61 = zext i32 %62 to i64, !dbg !7199
  %arrayidx62 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %61, i64 %idxprom61, !dbg !7199
  %63 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx62, align 8, !dbg !7199
  %reg_chain63 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %63, i32 0, i32 0, !dbg !7199
  %64 = load %union.df_ref_d*, %union.df_ref_d** %reg_chain63, align 8, !dbg !7199
  call void @df_reg_chain_verify_unmarked(%union.df_ref_d* %64), !dbg !7201
  %65 = load %struct.df*, %struct.df** @df, align 8, !dbg !7202
  %use_regs64 = getelementptr inbounds %struct.df, %struct.df* %65, i32 0, i32 6, !dbg !7202
  %66 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs64, align 8, !dbg !7202
  %67 = load i32, i32* %i, align 4, !dbg !7202
  %idxprom65 = zext i32 %67 to i64, !dbg !7202
  %arrayidx66 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %66, i64 %idxprom65, !dbg !7202
  %68 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx66, align 8, !dbg !7202
  %reg_chain67 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %68, i32 0, i32 0, !dbg !7202
  %69 = load %union.df_ref_d*, %union.df_ref_d** %reg_chain67, align 8, !dbg !7202
  call void @df_reg_chain_verify_unmarked(%union.df_ref_d* %69), !dbg !7203
  %70 = load %struct.df*, %struct.df** @df, align 8, !dbg !7204
  %eq_use_regs68 = getelementptr inbounds %struct.df, %struct.df* %70, i32 0, i32 7, !dbg !7204
  %71 = load %struct.df_reg_info**, %struct.df_reg_info*** %eq_use_regs68, align 8, !dbg !7204
  %72 = load i32, i32* %i, align 4, !dbg !7204
  %idxprom69 = zext i32 %72 to i64, !dbg !7204
  %arrayidx70 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %71, i64 %idxprom69, !dbg !7204
  %73 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx70, align 8, !dbg !7204
  %reg_chain71 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %73, i32 0, i32 0, !dbg !7204
  %74 = load %union.df_ref_d*, %union.df_ref_d** %reg_chain71, align 8, !dbg !7204
  call void @df_reg_chain_verify_unmarked(%union.df_ref_d* %74), !dbg !7205
  br label %for.inc72, !dbg !7206

for.inc72:                                        ; preds = %for.body59
  %75 = load i32, i32* %i, align 4, !dbg !7207
  %inc73 = add i32 %75, 1, !dbg !7207
  store i32 %inc73, i32* %i, align 4, !dbg !7207
  br label %for.cond56, !dbg !7208, !llvm.loop !7209

for.end74:                                        ; preds = %if.then, %for.cond56
  ret void, !dbg !7211
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @df_reg_chain_mark(%union.df_ref_d* %refs, i32 %regno, i8 zeroext %is_def, i8 zeroext %is_eq_use) #0 !dbg !7212 {
entry:
  %refs.addr = alloca %union.df_ref_d*, align 8
  %regno.addr = alloca i32, align 4
  %is_def.addr = alloca i8, align 1
  %is_eq_use.addr = alloca i8, align 1
  %count = alloca i32, align 4
  %ref = alloca %union.df_ref_d*, align 8
  store %union.df_ref_d* %refs, %union.df_ref_d** %refs.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %refs.addr, metadata !7215, metadata !DIExpression()), !dbg !7216
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !7217, metadata !DIExpression()), !dbg !7218
  store i8 %is_def, i8* %is_def.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_def.addr, metadata !7219, metadata !DIExpression()), !dbg !7220
  store i8 %is_eq_use, i8* %is_eq_use.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_eq_use.addr, metadata !7221, metadata !DIExpression()), !dbg !7222
  call void @llvm.dbg.declare(metadata i32* %count, metadata !7223, metadata !DIExpression()), !dbg !7224
  store i32 0, i32* %count, align 4, !dbg !7224
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref, metadata !7225, metadata !DIExpression()), !dbg !7226
  %0 = load %union.df_ref_d*, %union.df_ref_d** %refs.addr, align 8, !dbg !7227
  store %union.df_ref_d* %0, %union.df_ref_d** %ref, align 8, !dbg !7229
  br label %for.cond, !dbg !7230

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7231
  %tobool = icmp ne %union.df_ref_d* %1, null, !dbg !7233
  br i1 %tobool, label %for.body, label %for.end, !dbg !7233

for.body:                                         ; preds = %for.cond
  %2 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7234
  %base = bitcast %union.df_ref_d* %2 to %struct.df_base_ref*, !dbg !7234
  %3 = bitcast %struct.df_base_ref* %base to i32*, !dbg !7234
  %bf.load = load i32, i32* %3, align 8, !dbg !7234
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !7234
  %and = and i32 %bf.ashr, 16384, !dbg !7234
  %cmp = icmp ne i32 %and, 0, !dbg !7234
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7234

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4378, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !7234
  br label %cond.end, !dbg !7234

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !7234

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7234
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !7236
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 1, !dbg !7236
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 4, !dbg !7236
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7236
  %tobool1 = icmp ne %struct.dataflow* %5, null, !dbg !7236
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7238

if.then:                                          ; preds = %cond.end
  %6 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7239
  %base2 = bitcast %union.df_ref_d* %6 to %struct.df_base_ref*, !dbg !7239
  %chain = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base2, i32 0, i32 2, !dbg !7239
  %7 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !7239
  %tobool3 = icmp ne %struct.df_link* %7, null, !dbg !7239
  br i1 %tobool3, label %cond.true4, label %cond.false5, !dbg !7239

cond.true4:                                       ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4383, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !7239
  br label %cond.end6, !dbg !7239

cond.false5:                                      ; preds = %if.then
  br label %cond.end6, !dbg !7239

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi i32 [ 0, %cond.true4 ], [ 0, %cond.false5 ], !dbg !7239
  br label %if.end, !dbg !7239

if.end:                                           ; preds = %cond.end6, %cond.end
  %8 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7240
  %base8 = bitcast %union.df_ref_d* %8 to %struct.df_base_ref*, !dbg !7240
  %regno9 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base8, i32 0, i32 6, !dbg !7240
  %9 = load i32, i32* %regno9, align 8, !dbg !7240
  %10 = load i32, i32* %regno.addr, align 4, !dbg !7240
  %cmp10 = icmp eq i32 %9, %10, !dbg !7240
  br i1 %cmp10, label %cond.false12, label %cond.true11, !dbg !7240

cond.true11:                                      ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4386, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !7240
  br label %cond.end13, !dbg !7240

cond.false12:                                     ; preds = %if.end
  br label %cond.end13, !dbg !7240

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i32 [ 0, %cond.true11 ], [ 0, %cond.false12 ], !dbg !7240
  %11 = load i8, i8* %is_def.addr, align 1, !dbg !7241
  %tobool15 = icmp ne i8 %11, 0, !dbg !7241
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !7243

if.then16:                                        ; preds = %cond.end13
  %12 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7244
  %base17 = bitcast %union.df_ref_d* %12 to %struct.df_base_ref*, !dbg !7244
  %13 = bitcast %struct.df_base_ref* %base17 to i32*, !dbg !7244
  %bf.load18 = load i32, i32* %13, align 8, !dbg !7244
  %bf.lshr = lshr i32 %bf.load18, 8, !dbg !7244
  %bf.clear = and i32 %bf.lshr, 255, !dbg !7244
  %cmp19 = icmp eq i32 %bf.clear, 0, !dbg !7244
  br i1 %cmp19, label %cond.false21, label %cond.true20, !dbg !7244

cond.true20:                                      ; preds = %if.then16
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4388, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !7244
  br label %cond.end22, !dbg !7244

cond.false21:                                     ; preds = %if.then16
  br label %cond.end22, !dbg !7244

cond.end22:                                       ; preds = %cond.false21, %cond.true20
  %cond23 = phi i32 [ 0, %cond.true20 ], [ 0, %cond.false21 ], !dbg !7244
  br label %if.end33, !dbg !7244

if.else:                                          ; preds = %cond.end13
  %14 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7245
  %base24 = bitcast %union.df_ref_d* %14 to %struct.df_base_ref*, !dbg !7245
  %15 = bitcast %struct.df_base_ref* %base24 to i32*, !dbg !7245
  %bf.load25 = load i32, i32* %15, align 8, !dbg !7245
  %bf.lshr26 = lshr i32 %bf.load25, 8, !dbg !7245
  %bf.clear27 = and i32 %bf.lshr26, 255, !dbg !7245
  %cmp28 = icmp eq i32 %bf.clear27, 0, !dbg !7245
  br i1 %cmp28, label %cond.true29, label %cond.false30, !dbg !7245

cond.true29:                                      ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4390, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !7245
  br label %cond.end31, !dbg !7245

cond.false30:                                     ; preds = %if.else
  br label %cond.end31, !dbg !7245

cond.end31:                                       ; preds = %cond.false30, %cond.true29
  %cond32 = phi i32 [ 0, %cond.true29 ], [ 0, %cond.false30 ], !dbg !7245
  br label %if.end33

if.end33:                                         ; preds = %cond.end31, %cond.end22
  %16 = load i8, i8* %is_eq_use.addr, align 1, !dbg !7246
  %tobool34 = icmp ne i8 %16, 0, !dbg !7246
  br i1 %tobool34, label %if.then35, label %if.else45, !dbg !7248

if.then35:                                        ; preds = %if.end33
  %17 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7249
  %base36 = bitcast %union.df_ref_d* %17 to %struct.df_base_ref*, !dbg !7249
  %18 = bitcast %struct.df_base_ref* %base36 to i32*, !dbg !7249
  %bf.load37 = load i32, i32* %18, align 8, !dbg !7249
  %bf.ashr38 = ashr i32 %bf.load37, 16, !dbg !7249
  %and39 = and i32 %bf.ashr38, 4, !dbg !7249
  %tobool40 = icmp ne i32 %and39, 0, !dbg !7249
  br i1 %tobool40, label %cond.false42, label %cond.true41, !dbg !7249

cond.true41:                                      ; preds = %if.then35
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4393, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !7249
  br label %cond.end43, !dbg !7249

cond.false42:                                     ; preds = %if.then35
  br label %cond.end43, !dbg !7249

cond.end43:                                       ; preds = %cond.false42, %cond.true41
  %cond44 = phi i32 [ 0, %cond.true41 ], [ 0, %cond.false42 ], !dbg !7249
  br label %if.end55, !dbg !7249

if.else45:                                        ; preds = %if.end33
  %19 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7250
  %base46 = bitcast %union.df_ref_d* %19 to %struct.df_base_ref*, !dbg !7250
  %20 = bitcast %struct.df_base_ref* %base46 to i32*, !dbg !7250
  %bf.load47 = load i32, i32* %20, align 8, !dbg !7250
  %bf.ashr48 = ashr i32 %bf.load47, 16, !dbg !7250
  %and49 = and i32 %bf.ashr48, 4, !dbg !7250
  %cmp50 = icmp eq i32 %and49, 0, !dbg !7250
  br i1 %cmp50, label %cond.false52, label %cond.true51, !dbg !7250

cond.true51:                                      ; preds = %if.else45
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4395, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !7250
  br label %cond.end53, !dbg !7250

cond.false52:                                     ; preds = %if.else45
  br label %cond.end53, !dbg !7250

cond.end53:                                       ; preds = %cond.false52, %cond.true51
  %cond54 = phi i32 [ 0, %cond.true51 ], [ 0, %cond.false52 ], !dbg !7250
  br label %if.end55

if.end55:                                         ; preds = %cond.end53, %cond.end43
  %21 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7251
  %base56 = bitcast %union.df_ref_d* %21 to %struct.df_base_ref*, !dbg !7251
  %next_reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base56, i32 0, i32 4, !dbg !7251
  %22 = load %union.df_ref_d*, %union.df_ref_d** %next_reg, align 8, !dbg !7251
  %tobool57 = icmp ne %union.df_ref_d* %22, null, !dbg !7251
  br i1 %tobool57, label %if.then58, label %if.end67, !dbg !7253

if.then58:                                        ; preds = %if.end55
  %23 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7254
  %base59 = bitcast %union.df_ref_d* %23 to %struct.df_base_ref*, !dbg !7254
  %next_reg60 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base59, i32 0, i32 4, !dbg !7254
  %24 = load %union.df_ref_d*, %union.df_ref_d** %next_reg60, align 8, !dbg !7254
  %base61 = bitcast %union.df_ref_d* %24 to %struct.df_base_ref*, !dbg !7254
  %prev_reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base61, i32 0, i32 5, !dbg !7254
  %25 = load %union.df_ref_d*, %union.df_ref_d** %prev_reg, align 8, !dbg !7254
  %26 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7254
  %cmp62 = icmp eq %union.df_ref_d* %25, %26, !dbg !7254
  br i1 %cmp62, label %cond.false64, label %cond.true63, !dbg !7254

cond.true63:                                      ; preds = %if.then58
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4398, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !7254
  br label %cond.end65, !dbg !7254

cond.false64:                                     ; preds = %if.then58
  br label %cond.end65, !dbg !7254

cond.end65:                                       ; preds = %cond.false64, %cond.true63
  %cond66 = phi i32 [ 0, %cond.true63 ], [ 0, %cond.false64 ], !dbg !7254
  br label %if.end67, !dbg !7254

if.end67:                                         ; preds = %cond.end65, %if.end55
  %27 = load i32, i32* %count, align 4, !dbg !7255
  %inc = add i32 %27, 1, !dbg !7255
  store i32 %inc, i32* %count, align 4, !dbg !7255
  %28 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7256
  %base68 = bitcast %union.df_ref_d* %28 to %struct.df_base_ref*, !dbg !7256
  %29 = bitcast %struct.df_base_ref* %base68 to i32*, !dbg !7256
  %bf.load69 = load i32, i32* %29, align 8, !dbg !7256
  %bf.ashr70 = ashr i32 %bf.load69, 16, !dbg !7256
  %or = or i32 %bf.ashr70, 16384, !dbg !7256
  %bf.load71 = load i32, i32* %29, align 8, !dbg !7256
  %bf.value = and i32 %or, 65535, !dbg !7256
  %bf.shl = shl i32 %bf.value, 16, !dbg !7256
  %bf.clear72 = and i32 %bf.load71, 65535, !dbg !7256
  %bf.set = or i32 %bf.clear72, %bf.shl, !dbg !7256
  store i32 %bf.set, i32* %29, align 8, !dbg !7256
  %bf.result.shl = shl i32 %bf.value, 16, !dbg !7256
  %bf.result.ashr = ashr i32 %bf.result.shl, 16, !dbg !7256
  br label %for.inc, !dbg !7257

for.inc:                                          ; preds = %if.end67
  %30 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7258
  %base73 = bitcast %union.df_ref_d* %30 to %struct.df_base_ref*, !dbg !7258
  %next_reg74 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base73, i32 0, i32 4, !dbg !7258
  %31 = load %union.df_ref_d*, %union.df_ref_d** %next_reg74, align 8, !dbg !7258
  store %union.df_ref_d* %31, %union.df_ref_d** %ref, align 8, !dbg !7259
  br label %for.cond, !dbg !7260, !llvm.loop !7261

for.end:                                          ; preds = %for.cond
  %32 = load i32, i32* %count, align 4, !dbg !7263
  ret i32 %32, !dbg !7264
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @df_entry_block_bitmap_verify(i8 zeroext %abort_if_fail) #0 !dbg !7265 {
entry:
  %abort_if_fail.addr = alloca i8, align 1
  %entry_block_defs = alloca %struct.bitmap_head_def*, align 8
  %is_eq = alloca i8, align 1
  store i8 %abort_if_fail, i8* %abort_if_fail.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %abort_if_fail.addr, metadata !7268, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %entry_block_defs, metadata !7270, metadata !DIExpression()), !dbg !7271
  %call = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @df_bitmap_obstack), !dbg !7272
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %entry_block_defs, align 8, !dbg !7271
  call void @llvm.dbg.declare(metadata i8* %is_eq, metadata !7273, metadata !DIExpression()), !dbg !7274
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs, align 8, !dbg !7275
  call void @df_get_entry_block_def_set(%struct.bitmap_head_def* %0), !dbg !7276
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs, align 8, !dbg !7277
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !7278
  %entry_block_defs1 = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 16, !dbg !7279
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs1, align 8, !dbg !7279
  %call2 = call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %1, %struct.bitmap_head_def* %3), !dbg !7280
  store i8 %call2, i8* %is_eq, align 1, !dbg !7281
  %4 = load i8, i8* %is_eq, align 1, !dbg !7282
  %tobool = icmp ne i8 %4, 0, !dbg !7282
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7284

land.lhs.true:                                    ; preds = %entry
  %5 = load i8, i8* %abort_if_fail.addr, align 1, !dbg !7285
  %conv = zext i8 %5 to i32, !dbg !7285
  %tobool3 = icmp ne i32 %conv, 0, !dbg !7285
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7286

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7287
  call void @print_current_pass(%struct._IO_FILE* %6), !dbg !7289
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7290
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.46, i64 0, i64 0)), !dbg !7291
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7292
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs, align 8, !dbg !7293
  call void @df_print_regset(%struct._IO_FILE* %8, %struct.bitmap_head_def* %9), !dbg !7294
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7295
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.47, i64 0, i64 0)), !dbg !7296
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7297
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !7298
  %entry_block_defs6 = getelementptr inbounds %struct.df, %struct.df* %12, i32 0, i32 16, !dbg !7299
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs6, align 8, !dbg !7299
  call void @df_print_regset(%struct._IO_FILE* %11, %struct.bitmap_head_def* %13), !dbg !7300
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4589, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !7301
  br label %if.end, !dbg !7302

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs, align 8, !dbg !7303
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %14), !dbg !7303
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %entry_block_defs, align 8, !dbg !7303
  %15 = load i8, i8* %is_eq, align 1, !dbg !7304
  ret i8 %15, !dbg !7305
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @df_exit_block_bitmap_verify(i8 zeroext %abort_if_fail) #0 !dbg !7306 {
entry:
  %abort_if_fail.addr = alloca i8, align 1
  %exit_block_uses = alloca %struct.bitmap_head_def*, align 8
  %is_eq = alloca i8, align 1
  store i8 %abort_if_fail, i8* %abort_if_fail.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %abort_if_fail.addr, metadata !7307, metadata !DIExpression()), !dbg !7308
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %exit_block_uses, metadata !7309, metadata !DIExpression()), !dbg !7310
  %call = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @df_bitmap_obstack), !dbg !7311
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %exit_block_uses, align 8, !dbg !7310
  call void @llvm.dbg.declare(metadata i8* %is_eq, metadata !7312, metadata !DIExpression()), !dbg !7313
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses, align 8, !dbg !7314
  call void @df_get_exit_block_use_set(%struct.bitmap_head_def* %0), !dbg !7315
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses, align 8, !dbg !7316
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !7317
  %exit_block_uses1 = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 17, !dbg !7318
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses1, align 8, !dbg !7318
  %call2 = call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %1, %struct.bitmap_head_def* %3), !dbg !7319
  store i8 %call2, i8* %is_eq, align 1, !dbg !7320
  %4 = load i8, i8* %is_eq, align 1, !dbg !7321
  %tobool = icmp ne i8 %4, 0, !dbg !7321
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7323

land.lhs.true:                                    ; preds = %entry
  %5 = load i8, i8* %abort_if_fail.addr, align 1, !dbg !7324
  %conv = zext i8 %5 to i32, !dbg !7324
  %tobool3 = icmp ne i32 %conv, 0, !dbg !7324
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7325

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7326
  call void @print_current_pass(%struct._IO_FILE* %6), !dbg !7328
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7329
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.48, i64 0, i64 0)), !dbg !7330
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7331
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses, align 8, !dbg !7332
  call void @df_print_regset(%struct._IO_FILE* %8, %struct.bitmap_head_def* %9), !dbg !7333
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7334
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.49, i64 0, i64 0)), !dbg !7335
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7336
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !7337
  %exit_block_uses6 = getelementptr inbounds %struct.df, %struct.df* %12, i32 0, i32 17, !dbg !7338
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses6, align 8, !dbg !7338
  call void @df_print_regset(%struct._IO_FILE* %11, %struct.bitmap_head_def* %13), !dbg !7339
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4618, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !7340
  br label %if.end, !dbg !7341

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses, align 8, !dbg !7342
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %14), !dbg !7342
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %exit_block_uses, align 8, !dbg !7342
  %15 = load i8, i8* %is_eq, align 1, !dbg !7343
  ret i8 %15, !dbg !7344
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @df_bb_verify(%struct.basic_block_def* %bb) #0 !dbg !7345 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %bb_info = alloca %struct.df_scan_bb_info*, align 8
  %collection_rec = alloca %struct.df_collection_rec, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !7348, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !7350, metadata !DIExpression()), !dbg !7351
  call void @llvm.dbg.declare(metadata %struct.df_scan_bb_info** %bb_info, metadata !7352, metadata !DIExpression()), !dbg !7353
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7354
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !7355
  %1 = load i32, i32* %index, align 8, !dbg !7355
  %call = call %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %1), !dbg !7356
  store %struct.df_scan_bb_info* %call, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !7353
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec* %collection_rec, metadata !7357, metadata !DIExpression()), !dbg !7358
  %2 = bitcast %struct.df_collection_rec* %collection_rec to i8*, !dbg !7359
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false), !dbg !7359
  %call1 = call i64 @VEC_df_ref_base_embedded_size(i32 128), !dbg !7360
  %3 = alloca i8, i64 %call1, align 16, !dbg !7360
  %4 = bitcast i8* %3 to %struct.VEC_df_ref_stack*, !dbg !7360
  %call2 = call %struct.VEC_df_ref_stack* @VEC_df_ref_stack_alloc1(i32 128, %struct.VEC_df_ref_stack* %4), !dbg !7360
  %def_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 0, !dbg !7361
  store %struct.VEC_df_ref_stack* %call2, %struct.VEC_df_ref_stack** %def_vec, align 8, !dbg !7362
  %call3 = call i64 @VEC_df_ref_base_embedded_size(i32 32), !dbg !7363
  %5 = alloca i8, i64 %call3, align 16, !dbg !7363
  %6 = bitcast i8* %5 to %struct.VEC_df_ref_stack*, !dbg !7363
  %call4 = call %struct.VEC_df_ref_stack* @VEC_df_ref_stack_alloc1(i32 32, %struct.VEC_df_ref_stack* %6), !dbg !7363
  %use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 1, !dbg !7364
  store %struct.VEC_df_ref_stack* %call4, %struct.VEC_df_ref_stack** %use_vec, align 8, !dbg !7365
  %call5 = call i64 @VEC_df_ref_base_embedded_size(i32 32), !dbg !7366
  %7 = alloca i8, i64 %call5, align 16, !dbg !7366
  %8 = bitcast i8* %7 to %struct.VEC_df_ref_stack*, !dbg !7366
  %call6 = call %struct.VEC_df_ref_stack* @VEC_df_ref_stack_alloc1(i32 32, %struct.VEC_df_ref_stack* %8), !dbg !7366
  %eq_use_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 2, !dbg !7367
  store %struct.VEC_df_ref_stack* %call6, %struct.VEC_df_ref_stack** %eq_use_vec, align 8, !dbg !7368
  %call7 = call i64 @VEC_df_mw_hardreg_ptr_base_embedded_size(i32 32), !dbg !7369
  %9 = alloca i8, i64 %call7, align 16, !dbg !7369
  %10 = bitcast i8* %9 to %struct.VEC_df_mw_hardreg_ptr_stack*, !dbg !7369
  %call8 = call %struct.VEC_df_mw_hardreg_ptr_stack* @VEC_df_mw_hardreg_ptr_stack_alloc1(i32 32, %struct.VEC_df_mw_hardreg_ptr_stack* %10), !dbg !7369
  %mw_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 3, !dbg !7370
  store %struct.VEC_df_mw_hardreg_ptr_stack* %call8, %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec, align 8, !dbg !7371
  %11 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !7372
  %tobool = icmp ne %struct.df_scan_bb_info* %11, null, !dbg !7372
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7372

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4548, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !7372
  br label %cond.end, !dbg !7372

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7372

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7372
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7373
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i32 0, i32 7, !dbg !7373
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7373
  %13 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7373
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %13, i32 0, i32 1, !dbg !7373
  %14 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7373
  store %struct.rtx_def* %14, %struct.rtx_def** %insn, align 8, !dbg !7373
  br label %for.cond, !dbg !7373

for.cond:                                         ; preds = %for.inc, %cond.end
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7375
  %tobool9 = icmp ne %struct.rtx_def* %15, null, !dbg !7375
  br i1 %tobool9, label %land.rhs, label %land.end, !dbg !7375

land.rhs:                                         ; preds = %for.cond
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7375
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7375
  %il10 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i32 0, i32 7, !dbg !7375
  %rtl11 = bitcast %union.basic_block_il_dependent* %il10 to %struct.rtl_bb_info**, !dbg !7375
  %18 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl11, align 8, !dbg !7375
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %18, i32 0, i32 0, !dbg !7375
  %19 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !7375
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !7375
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7375
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !7375
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7375
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7375
  %cmp = icmp ne %struct.rtx_def* %16, %20, !dbg !7375
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %21 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ], !dbg !7377
  br i1 %21, label %for.body, label %for.end, !dbg !7373

for.body:                                         ; preds = %land.end
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7378
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !7378
  %bf.load = load i32, i32* %23, align 8, !dbg !7378
  %bf.clear = and i32 %bf.load, 65535, !dbg !7378
  %cmp12 = icmp eq i32 %bf.clear, 8, !dbg !7378
  br i1 %cmp12, label %if.end, label %lor.lhs.false, !dbg !7378

lor.lhs.false:                                    ; preds = %for.body
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7378
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !7378
  %bf.load13 = load i32, i32* %25, align 8, !dbg !7378
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !7378
  %cmp15 = icmp eq i32 %bf.clear14, 7, !dbg !7378
  br i1 %cmp15, label %if.end, label %lor.lhs.false16, !dbg !7378

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7378
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !7378
  %bf.load17 = load i32, i32* %27, align 8, !dbg !7378
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !7378
  %cmp19 = icmp eq i32 %bf.clear18, 9, !dbg !7378
  br i1 %cmp19, label %if.end, label %lor.lhs.false20, !dbg !7378

lor.lhs.false20:                                  ; preds = %lor.lhs.false16
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7378
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !7378
  %bf.load21 = load i32, i32* %29, align 8, !dbg !7378
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !7378
  %cmp23 = icmp eq i32 %bf.clear22, 10, !dbg !7378
  br i1 %cmp23, label %if.end, label %if.then, !dbg !7381

if.then:                                          ; preds = %lor.lhs.false20
  br label %for.inc, !dbg !7382

if.end:                                           ; preds = %lor.lhs.false20, %lor.lhs.false16, %lor.lhs.false, %for.body
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7383
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7384
  %call24 = call zeroext i8 @df_insn_refs_verify(%struct.df_collection_rec* %collection_rec, %struct.basic_block_def* %30, %struct.rtx_def* %31, i8 zeroext 1), !dbg !7385
  call void @df_free_collection_rec(%struct.df_collection_rec* %collection_rec), !dbg !7386
  br label %for.inc, !dbg !7387

for.inc:                                          ; preds = %if.end, %if.then
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7375
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !7375
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !7375
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 1, !dbg !7375
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !7375
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !7375
  store %struct.rtx_def* %33, %struct.rtx_def** %insn, align 8, !dbg !7375
  br label %for.cond, !dbg !7375, !llvm.loop !7388

for.end:                                          ; preds = %land.end
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7390
  call void @df_bb_refs_collect(%struct.df_collection_rec* %collection_rec, %struct.basic_block_def* %34), !dbg !7391
  %def_vec29 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 0, !dbg !7392
  %35 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %def_vec29, align 8, !dbg !7392
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7393
  %index30 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %36, i32 0, i32 9, !dbg !7394
  %37 = load i32, i32* %index30, align 8, !dbg !7394
  %call31 = call %union.df_ref_d** @df_get_artificial_defs(i32 %37), !dbg !7395
  %call32 = call zeroext i8 @df_refs_verify(%struct.VEC_df_ref_stack* %35, %union.df_ref_d** %call31, i8 zeroext 1), !dbg !7396
  %use_vec33 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %collection_rec, i32 0, i32 1, !dbg !7397
  %38 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %use_vec33, align 8, !dbg !7397
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7398
  %index34 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %39, i32 0, i32 9, !dbg !7399
  %40 = load i32, i32* %index34, align 8, !dbg !7399
  %call35 = call %union.df_ref_d** @df_get_artificial_uses(i32 %40), !dbg !7400
  %call36 = call zeroext i8 @df_refs_verify(%struct.VEC_df_ref_stack* %38, %union.df_ref_d** %call35, i8 zeroext 1), !dbg !7401
  call void @df_free_collection_rec(%struct.df_collection_rec* %collection_rec), !dbg !7402
  ret i8 1, !dbg !7403
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_reg_chain_verify_unmarked(%union.df_ref_d* %refs) #0 !dbg !7404 {
entry:
  %refs.addr = alloca %union.df_ref_d*, align 8
  %ref = alloca %union.df_ref_d*, align 8
  store %union.df_ref_d* %refs, %union.df_ref_d** %refs.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %refs.addr, metadata !7405, metadata !DIExpression()), !dbg !7406
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref, metadata !7407, metadata !DIExpression()), !dbg !7408
  %0 = load %union.df_ref_d*, %union.df_ref_d** %refs.addr, align 8, !dbg !7409
  store %union.df_ref_d* %0, %union.df_ref_d** %ref, align 8, !dbg !7411
  br label %for.cond, !dbg !7412

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7413
  %tobool = icmp ne %union.df_ref_d* %1, null, !dbg !7415
  br i1 %tobool, label %for.body, label %for.end, !dbg !7415

for.body:                                         ; preds = %for.cond
  %2 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7416
  %base = bitcast %union.df_ref_d* %2 to %struct.df_base_ref*, !dbg !7416
  %3 = bitcast %struct.df_base_ref* %base to i32*, !dbg !7416
  %bf.load = load i32, i32* %3, align 8, !dbg !7416
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !7416
  %and = and i32 %bf.ashr, 16384, !dbg !7416
  %cmp = icmp ne i32 %and, 0, !dbg !7416
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7416

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4413, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !7416
  br label %cond.end, !dbg !7416

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !7416

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7416
  br label %for.inc, !dbg !7416

for.inc:                                          ; preds = %cond.end
  %4 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7417
  %base1 = bitcast %union.df_ref_d* %4 to %struct.df_base_ref*, !dbg !7417
  %next_reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base1, i32 0, i32 4, !dbg !7417
  %5 = load %union.df_ref_d*, %union.df_ref_d** %next_reg, align 8, !dbg !7417
  store %union.df_ref_d* %5, %union.df_ref_d** %ref, align 8, !dbg !7418
  br label %for.cond, !dbg !7419, !llvm.loop !7420

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7422
}

declare dso_local void @free_alloc_pool(%struct.alloc_pool_def*) #2

declare dso_local void @bitmap_obstack_release(%struct.bitmap_obstack*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_scan_free_bb_info(%struct.basic_block_def* %bb, i8* %vbb_info) #0 !dbg !7423 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %vbb_info.addr = alloca i8*, align 8
  %bb_info = alloca %struct.df_scan_bb_info*, align 8
  %bb_index = alloca i32, align 4
  %insn = alloca %struct.rtx_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !7424, metadata !DIExpression()), !dbg !7425
  store i8* %vbb_info, i8** %vbb_info.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vbb_info.addr, metadata !7426, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.declare(metadata %struct.df_scan_bb_info** %bb_info, metadata !7428, metadata !DIExpression()), !dbg !7429
  %0 = load i8*, i8** %vbb_info.addr, align 8, !dbg !7430
  %1 = bitcast i8* %0 to %struct.df_scan_bb_info*, !dbg !7431
  store %struct.df_scan_bb_info* %1, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !7429
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !7432, metadata !DIExpression()), !dbg !7433
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7434
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i32 0, i32 9, !dbg !7435
  %3 = load i32, i32* %index, align 8, !dbg !7435
  store i32 %3, i32* %bb_index, align 4, !dbg !7433
  %4 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !7436
  %tobool = icmp ne %struct.df_scan_bb_info* %4, null, !dbg !7436
  br i1 %tobool, label %if.then, label %if.end34, !dbg !7438

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !7439, metadata !DIExpression()), !dbg !7441
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7442
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i32 0, i32 7, !dbg !7442
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7442
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7442
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i32 0, i32 0, !dbg !7442
  %7 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !7442
  store %struct.rtx_def* %7, %struct.rtx_def** %insn, align 8, !dbg !7442
  br label %for.cond, !dbg !7442

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7444
  %tobool1 = icmp ne %struct.rtx_def* %8, null, !dbg !7444
  br i1 %tobool1, label %land.rhs, label %land.end, !dbg !7444

land.rhs:                                         ; preds = %for.cond
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7444
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7444
  %il2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %10, i32 0, i32 7, !dbg !7444
  %rtl3 = bitcast %union.basic_block_il_dependent* %il2 to %struct.rtl_bb_info**, !dbg !7444
  %11 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl3, align 8, !dbg !7444
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %11, i32 0, i32 1, !dbg !7444
  %12 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7444
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !7444
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7444
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !7444
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7444
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7444
  %cmp = icmp ne %struct.rtx_def* %9, %13, !dbg !7444
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %14 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ], !dbg !7446
  br i1 %14, label %for.body, label %for.end, !dbg !7442

for.body:                                         ; preds = %land.end
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7447
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !7447
  %bf.load = load i32, i32* %16, align 8, !dbg !7447
  %bf.clear = and i32 %bf.load, 65535, !dbg !7447
  %cmp4 = icmp eq i32 %bf.clear, 8, !dbg !7447
  br i1 %cmp4, label %if.then16, label %lor.lhs.false, !dbg !7447

lor.lhs.false:                                    ; preds = %for.body
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7447
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !7447
  %bf.load5 = load i32, i32* %18, align 8, !dbg !7447
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !7447
  %cmp7 = icmp eq i32 %bf.clear6, 7, !dbg !7447
  br i1 %cmp7, label %if.then16, label %lor.lhs.false8, !dbg !7447

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7447
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !7447
  %bf.load9 = load i32, i32* %20, align 8, !dbg !7447
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !7447
  %cmp11 = icmp eq i32 %bf.clear10, 9, !dbg !7447
  br i1 %cmp11, label %if.then16, label %lor.lhs.false12, !dbg !7447

lor.lhs.false12:                                  ; preds = %lor.lhs.false8
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7447
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !7447
  %bf.load13 = load i32, i32* %22, align 8, !dbg !7447
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !7447
  %cmp15 = icmp eq i32 %bf.clear14, 10, !dbg !7447
  br i1 %cmp15, label %if.then16, label %if.end, !dbg !7450

if.then16:                                        ; preds = %lor.lhs.false12, %lor.lhs.false8, %lor.lhs.false, %for.body
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7451
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7452
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !7452
  %fld18 = bitcast %union.u* %u17 to [1 x %union.rtunion_def]*, !dbg !7452
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i64 0, i64 0, !dbg !7452
  %rt_int = bitcast %union.rtunion_def* %arrayidx19 to i32*, !dbg !7452
  %25 = load i32, i32* %rt_int, align 8, !dbg !7452
  call void @df_insn_delete(%struct.basic_block_def* %23, i32 %25), !dbg !7453
  br label %if.end, !dbg !7453

if.end:                                           ; preds = %if.then16, %lor.lhs.false12
  br label %for.inc, !dbg !7454

for.inc:                                          ; preds = %if.end
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7444
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !7444
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !7444
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 2, !dbg !7444
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !7444
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !7444
  store %struct.rtx_def* %27, %struct.rtx_def** %insn, align 8, !dbg !7444
  br label %for.cond, !dbg !7444, !llvm.loop !7455

for.end:                                          ; preds = %land.end
  %28 = load i32, i32* %bb_index, align 4, !dbg !7457
  %29 = load %struct.df*, %struct.df** @df, align 8, !dbg !7459
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %29, i32 0, i32 1, !dbg !7459
  %arrayidx24 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !7459
  %30 = load %struct.dataflow*, %struct.dataflow** %arrayidx24, align 8, !dbg !7459
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %30, i32 0, i32 2, !dbg !7460
  %31 = load i32, i32* %block_info_size, align 8, !dbg !7460
  %cmp25 = icmp ult i32 %28, %31, !dbg !7461
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !7462

if.then26:                                        ; preds = %for.end
  %32 = load i32, i32* %bb_index, align 4, !dbg !7463
  %call = call %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %32), !dbg !7464
  store %struct.df_scan_bb_info* %call, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !7465
  br label %if.end27, !dbg !7466

if.end27:                                         ; preds = %if.then26, %for.end
  %33 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !7467
  %artificial_defs = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %33, i32 0, i32 0, !dbg !7468
  %34 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_defs, align 8, !dbg !7468
  call void @df_ref_chain_delete_du_chain(%union.df_ref_d** %34), !dbg !7469
  %35 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !7470
  %artificial_uses = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %35, i32 0, i32 1, !dbg !7471
  %36 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_uses, align 8, !dbg !7471
  call void @df_ref_chain_delete_du_chain(%union.df_ref_d** %36), !dbg !7472
  %37 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !7473
  %artificial_defs28 = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %37, i32 0, i32 0, !dbg !7474
  %38 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_defs28, align 8, !dbg !7474
  call void @df_ref_chain_delete(%union.df_ref_d** %38), !dbg !7475
  %39 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !7476
  %artificial_uses29 = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %39, i32 0, i32 1, !dbg !7477
  %40 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_uses29, align 8, !dbg !7477
  call void @df_ref_chain_delete(%union.df_ref_d** %40), !dbg !7478
  %41 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !7479
  %artificial_defs30 = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %41, i32 0, i32 0, !dbg !7480
  store %union.df_ref_d** null, %union.df_ref_d*** %artificial_defs30, align 8, !dbg !7481
  %42 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !7482
  %artificial_uses31 = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %42, i32 0, i32 1, !dbg !7483
  store %union.df_ref_d** null, %union.df_ref_d*** %artificial_uses31, align 8, !dbg !7484
  %43 = load %struct.df*, %struct.df** @df, align 8, !dbg !7485
  %problems_by_index32 = getelementptr inbounds %struct.df, %struct.df* %43, i32 0, i32 1, !dbg !7485
  %arrayidx33 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index32, i64 0, i64 0, !dbg !7485
  %44 = load %struct.dataflow*, %struct.dataflow** %arrayidx33, align 8, !dbg !7485
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %44, i32 0, i32 3, !dbg !7486
  %45 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !7486
  %46 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !7487
  %47 = bitcast %struct.df_scan_bb_info* %46 to i8*, !dbg !7487
  call void @pool_free(%struct.alloc_pool_def* %45, i8* %47), !dbg !7488
  br label %if.end34, !dbg !7489

if.end34:                                         ; preds = %if.end27, %entry
  ret void, !dbg !7490
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_scan_free() #0 !dbg !7491 {
entry:
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7492
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !7492
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !7492
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7492
  %problem_data = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !7494
  %2 = load i8*, i8** %problem_data, align 8, !dbg !7494
  %tobool = icmp ne i8* %2, null, !dbg !7492
  br i1 %tobool, label %if.then, label %if.end, !dbg !7495

if.then:                                          ; preds = %entry
  call void @df_scan_free_internal(), !dbg !7496
  br label %if.end, !dbg !7496

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !7497
  %blocks_to_analyze = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 2, !dbg !7499
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %blocks_to_analyze, align 8, !dbg !7499
  %tobool1 = icmp ne %struct.bitmap_head_def* %4, null, !dbg !7497
  br i1 %tobool1, label %if.then2, label %if.end6, !dbg !7500

if.then2:                                         ; preds = %if.end
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !7501
  %blocks_to_analyze3 = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 2, !dbg !7501
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %blocks_to_analyze3, align 8, !dbg !7501
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %6), !dbg !7501
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !7501
  %blocks_to_analyze4 = getelementptr inbounds %struct.df, %struct.df* %7, i32 0, i32 2, !dbg !7501
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %blocks_to_analyze4, align 8, !dbg !7501
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !7503
  %blocks_to_analyze5 = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 2, !dbg !7504
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %blocks_to_analyze5, align 8, !dbg !7505
  br label %if.end6, !dbg !7506

if.end6:                                          ; preds = %if.then2, %if.end
  %9 = load %struct.df*, %struct.df** @df, align 8, !dbg !7507
  %problems_by_index7 = getelementptr inbounds %struct.df, %struct.df* %9, i32 0, i32 1, !dbg !7507
  %arrayidx8 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index7, i64 0, i64 0, !dbg !7507
  %10 = load %struct.dataflow*, %struct.dataflow** %arrayidx8, align 8, !dbg !7507
  %11 = bitcast %struct.dataflow* %10 to i8*, !dbg !7507
  call void @free(i8* %11), !dbg !7508
  ret void, !dbg !7509
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_scan_start_dump(%struct._IO_FILE* %file) #0 !dbg !7510 {
entry:
  %file.addr = alloca %struct._IO_FILE*, align 8
  %i = alloca i32, align 4
  %dcount = alloca i32, align 4
  %ucount = alloca i32, align 4
  %ecount = alloca i32, align 4
  %icount = alloca i32, align 4
  %ccount = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %sep = alloca i8*, align 8
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !7511, metadata !DIExpression()), !dbg !7512
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7513, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.declare(metadata i32* %dcount, metadata !7515, metadata !DIExpression()), !dbg !7516
  store i32 0, i32* %dcount, align 4, !dbg !7516
  call void @llvm.dbg.declare(metadata i32* %ucount, metadata !7517, metadata !DIExpression()), !dbg !7518
  store i32 0, i32* %ucount, align 4, !dbg !7518
  call void @llvm.dbg.declare(metadata i32* %ecount, metadata !7519, metadata !DIExpression()), !dbg !7520
  store i32 0, i32* %ecount, align 4, !dbg !7520
  call void @llvm.dbg.declare(metadata i32* %icount, metadata !7521, metadata !DIExpression()), !dbg !7522
  store i32 0, i32* %icount, align 4, !dbg !7522
  call void @llvm.dbg.declare(metadata i32* %ccount, metadata !7523, metadata !DIExpression()), !dbg !7524
  store i32 0, i32* %ccount, align 4, !dbg !7524
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !7525, metadata !DIExpression()), !dbg !7526
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !7527, metadata !DIExpression()), !dbg !7528
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7529
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)), !dbg !7530
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7531
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @regs_invalidated_by_call_regset, align 8, !dbg !7532
  call void @df_print_regset(%struct._IO_FILE* %1, %struct.bitmap_head_def* %2), !dbg !7533
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7534
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i64 0, i64 0)), !dbg !7535
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7536
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !7537
  %hardware_regs_used = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 13, !dbg !7538
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used, align 8, !dbg !7538
  call void @df_print_regset(%struct._IO_FILE* %4, %struct.bitmap_head_def* %6), !dbg !7539
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7540
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.26, i64 0, i64 0)), !dbg !7541
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7542
  %9 = load %struct.df*, %struct.df** @df, align 8, !dbg !7543
  %regular_block_artificial_uses = getelementptr inbounds %struct.df, %struct.df* %9, i32 0, i32 14, !dbg !7544
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses, align 8, !dbg !7544
  call void @df_print_regset(%struct._IO_FILE* %8, %struct.bitmap_head_def* %10), !dbg !7545
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7546
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i64 0, i64 0)), !dbg !7547
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7548
  %13 = load %struct.df*, %struct.df** @df, align 8, !dbg !7549
  %eh_block_artificial_uses = getelementptr inbounds %struct.df, %struct.df* %13, i32 0, i32 15, !dbg !7550
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %eh_block_artificial_uses, align 8, !dbg !7550
  call void @df_print_regset(%struct._IO_FILE* %12, %struct.bitmap_head_def* %14), !dbg !7551
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7552
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.28, i64 0, i64 0)), !dbg !7553
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7554
  %17 = load %struct.df*, %struct.df** @df, align 8, !dbg !7555
  %entry_block_defs = getelementptr inbounds %struct.df, %struct.df* %17, i32 0, i32 16, !dbg !7556
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs, align 8, !dbg !7556
  call void @df_print_regset(%struct._IO_FILE* %16, %struct.bitmap_head_def* %18), !dbg !7557
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7558
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i64 0, i64 0)), !dbg !7559
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7560
  %21 = load %struct.df*, %struct.df** @df, align 8, !dbg !7561
  %exit_block_uses = getelementptr inbounds %struct.df, %struct.df* %21, i32 0, i32 17, !dbg !7562
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses, align 8, !dbg !7562
  call void @df_print_regset(%struct._IO_FILE* %20, %struct.bitmap_head_def* %22), !dbg !7563
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7564
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.30, i64 0, i64 0)), !dbg !7565
  store i32 0, i32* %i, align 4, !dbg !7566
  br label %for.cond, !dbg !7568

for.cond:                                         ; preds = %for.inc, %entry
  %24 = load i32, i32* %i, align 4, !dbg !7569
  %cmp = icmp slt i32 %24, 53, !dbg !7571
  br i1 %cmp, label %for.body, label %for.end, !dbg !7572

for.body:                                         ; preds = %for.cond
  %25 = load i32, i32* %i, align 4, !dbg !7573
  %call7 = call zeroext i8 @df_regs_ever_live_p(i32 %25), !dbg !7575
  %tobool = icmp ne i8 %call7, 0, !dbg !7575
  br i1 %tobool, label %if.then, label %if.end, !dbg !7576

if.then:                                          ; preds = %for.body
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7577
  %27 = load i32, i32* %i, align 4, !dbg !7578
  %28 = load i32, i32* %i, align 4, !dbg !7579
  %idxprom = sext i32 %28 to i64, !dbg !7580
  %arrayidx = getelementptr inbounds [53 x i8*], [53 x i8*]* @reg_names, i64 0, i64 %idxprom, !dbg !7580
  %29 = load i8*, i8** %arrayidx, align 8, !dbg !7580
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i64 0, i64 0), i32 %27, i8* %29), !dbg !7581
  br label %if.end, !dbg !7581

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !7582

for.inc:                                          ; preds = %if.end
  %30 = load i32, i32* %i, align 4, !dbg !7583
  %inc = add nsw i32 %30, 1, !dbg !7583
  store i32 %inc, i32* %i, align 4, !dbg !7583
  br label %for.cond, !dbg !7584, !llvm.loop !7585

for.end:                                          ; preds = %for.cond
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7587
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i64 0, i64 0)), !dbg !7588
  store i32 0, i32* %i, align 4, !dbg !7589
  br label %for.cond10, !dbg !7591

for.cond10:                                       ; preds = %for.inc79, %for.end
  %32 = load i32, i32* %i, align 4, !dbg !7592
  %33 = load %struct.df*, %struct.df** @df, align 8, !dbg !7594
  %regs_inited = getelementptr inbounds %struct.df, %struct.df* %33, i32 0, i32 9, !dbg !7595
  %34 = load i32, i32* %regs_inited, align 4, !dbg !7595
  %cmp11 = icmp slt i32 %32, %34, !dbg !7596
  br i1 %cmp11, label %for.body12, label %for.end81, !dbg !7597

for.body12:                                       ; preds = %for.cond10
  %35 = load %struct.df*, %struct.df** @df, align 8, !dbg !7598
  %def_regs = getelementptr inbounds %struct.df, %struct.df* %35, i32 0, i32 5, !dbg !7598
  %36 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs, align 8, !dbg !7598
  %37 = load i32, i32* %i, align 4, !dbg !7598
  %idxprom13 = sext i32 %37 to i64, !dbg !7598
  %arrayidx14 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %36, i64 %idxprom13, !dbg !7598
  %38 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx14, align 8, !dbg !7598
  %n_refs = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %38, i32 0, i32 1, !dbg !7598
  %39 = load i32, i32* %n_refs, align 8, !dbg !7598
  %tobool15 = icmp ne i32 %39, 0, !dbg !7598
  br i1 %tobool15, label %if.then25, label %lor.lhs.false, !dbg !7600

lor.lhs.false:                                    ; preds = %for.body12
  %40 = load %struct.df*, %struct.df** @df, align 8, !dbg !7601
  %use_regs = getelementptr inbounds %struct.df, %struct.df* %40, i32 0, i32 6, !dbg !7601
  %41 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs, align 8, !dbg !7601
  %42 = load i32, i32* %i, align 4, !dbg !7601
  %idxprom16 = sext i32 %42 to i64, !dbg !7601
  %arrayidx17 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %41, i64 %idxprom16, !dbg !7601
  %43 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx17, align 8, !dbg !7601
  %n_refs18 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %43, i32 0, i32 1, !dbg !7601
  %44 = load i32, i32* %n_refs18, align 8, !dbg !7601
  %tobool19 = icmp ne i32 %44, 0, !dbg !7601
  br i1 %tobool19, label %if.then25, label %lor.lhs.false20, !dbg !7602

lor.lhs.false20:                                  ; preds = %lor.lhs.false
  %45 = load %struct.df*, %struct.df** @df, align 8, !dbg !7603
  %eq_use_regs = getelementptr inbounds %struct.df, %struct.df* %45, i32 0, i32 7, !dbg !7603
  %46 = load %struct.df_reg_info**, %struct.df_reg_info*** %eq_use_regs, align 8, !dbg !7603
  %47 = load i32, i32* %i, align 4, !dbg !7603
  %idxprom21 = sext i32 %47 to i64, !dbg !7603
  %arrayidx22 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %46, i64 %idxprom21, !dbg !7603
  %48 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx22, align 8, !dbg !7603
  %n_refs23 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %48, i32 0, i32 1, !dbg !7603
  %49 = load i32, i32* %n_refs23, align 8, !dbg !7603
  %tobool24 = icmp ne i32 %49, 0, !dbg !7603
  br i1 %tobool24, label %if.then25, label %if.end78, !dbg !7604

if.then25:                                        ; preds = %lor.lhs.false20, %lor.lhs.false, %for.body12
  call void @llvm.dbg.declare(metadata i8** %sep, metadata !7605, metadata !DIExpression()), !dbg !7607
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i64 0, i64 0), i8** %sep, align 8, !dbg !7607
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7608
  %51 = load i32, i32* %i, align 4, !dbg !7609
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0), i32 %51), !dbg !7610
  %52 = load %struct.df*, %struct.df** @df, align 8, !dbg !7611
  %def_regs27 = getelementptr inbounds %struct.df, %struct.df* %52, i32 0, i32 5, !dbg !7611
  %53 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs27, align 8, !dbg !7611
  %54 = load i32, i32* %i, align 4, !dbg !7611
  %idxprom28 = sext i32 %54 to i64, !dbg !7611
  %arrayidx29 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %53, i64 %idxprom28, !dbg !7611
  %55 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx29, align 8, !dbg !7611
  %n_refs30 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %55, i32 0, i32 1, !dbg !7611
  %56 = load i32, i32* %n_refs30, align 8, !dbg !7611
  %tobool31 = icmp ne i32 %56, 0, !dbg !7611
  br i1 %tobool31, label %if.then32, label %if.end42, !dbg !7613

if.then32:                                        ; preds = %if.then25
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7614
  %58 = load %struct.df*, %struct.df** @df, align 8, !dbg !7616
  %def_regs33 = getelementptr inbounds %struct.df, %struct.df* %58, i32 0, i32 5, !dbg !7616
  %59 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs33, align 8, !dbg !7616
  %60 = load i32, i32* %i, align 4, !dbg !7616
  %idxprom34 = sext i32 %60 to i64, !dbg !7616
  %arrayidx35 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %59, i64 %idxprom34, !dbg !7616
  %61 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx35, align 8, !dbg !7616
  %n_refs36 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %61, i32 0, i32 1, !dbg !7616
  %62 = load i32, i32* %n_refs36, align 8, !dbg !7616
  %call37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i32 %62), !dbg !7617
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0), i8** %sep, align 8, !dbg !7618
  %63 = load %struct.df*, %struct.df** @df, align 8, !dbg !7619
  %def_regs38 = getelementptr inbounds %struct.df, %struct.df* %63, i32 0, i32 5, !dbg !7619
  %64 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs38, align 8, !dbg !7619
  %65 = load i32, i32* %i, align 4, !dbg !7619
  %idxprom39 = sext i32 %65 to i64, !dbg !7619
  %arrayidx40 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %64, i64 %idxprom39, !dbg !7619
  %66 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx40, align 8, !dbg !7619
  %n_refs41 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %66, i32 0, i32 1, !dbg !7619
  %67 = load i32, i32* %n_refs41, align 8, !dbg !7619
  %68 = load i32, i32* %dcount, align 4, !dbg !7620
  %add = add i32 %68, %67, !dbg !7620
  store i32 %add, i32* %dcount, align 4, !dbg !7620
  br label %if.end42, !dbg !7621

if.end42:                                         ; preds = %if.then32, %if.then25
  %69 = load %struct.df*, %struct.df** @df, align 8, !dbg !7622
  %use_regs43 = getelementptr inbounds %struct.df, %struct.df* %69, i32 0, i32 6, !dbg !7622
  %70 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs43, align 8, !dbg !7622
  %71 = load i32, i32* %i, align 4, !dbg !7622
  %idxprom44 = sext i32 %71 to i64, !dbg !7622
  %arrayidx45 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %70, i64 %idxprom44, !dbg !7622
  %72 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx45, align 8, !dbg !7622
  %n_refs46 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %72, i32 0, i32 1, !dbg !7622
  %73 = load i32, i32* %n_refs46, align 8, !dbg !7622
  %tobool47 = icmp ne i32 %73, 0, !dbg !7622
  br i1 %tobool47, label %if.then48, label %if.end59, !dbg !7624

if.then48:                                        ; preds = %if.end42
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7625
  %75 = load i8*, i8** %sep, align 8, !dbg !7627
  %76 = load %struct.df*, %struct.df** @df, align 8, !dbg !7628
  %use_regs49 = getelementptr inbounds %struct.df, %struct.df* %76, i32 0, i32 6, !dbg !7628
  %77 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs49, align 8, !dbg !7628
  %78 = load i32, i32* %i, align 4, !dbg !7628
  %idxprom50 = sext i32 %78 to i64, !dbg !7628
  %arrayidx51 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %77, i64 %idxprom50, !dbg !7628
  %79 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx51, align 8, !dbg !7628
  %n_refs52 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %79, i32 0, i32 1, !dbg !7628
  %80 = load i32, i32* %n_refs52, align 8, !dbg !7628
  %call53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0), i8* %75, i32 %80), !dbg !7629
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0), i8** %sep, align 8, !dbg !7630
  %81 = load %struct.df*, %struct.df** @df, align 8, !dbg !7631
  %use_regs54 = getelementptr inbounds %struct.df, %struct.df* %81, i32 0, i32 6, !dbg !7631
  %82 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs54, align 8, !dbg !7631
  %83 = load i32, i32* %i, align 4, !dbg !7631
  %idxprom55 = sext i32 %83 to i64, !dbg !7631
  %arrayidx56 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %82, i64 %idxprom55, !dbg !7631
  %84 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx56, align 8, !dbg !7631
  %n_refs57 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %84, i32 0, i32 1, !dbg !7631
  %85 = load i32, i32* %n_refs57, align 8, !dbg !7631
  %86 = load i32, i32* %ucount, align 4, !dbg !7632
  %add58 = add i32 %86, %85, !dbg !7632
  store i32 %add58, i32* %ucount, align 4, !dbg !7632
  br label %if.end59, !dbg !7633

if.end59:                                         ; preds = %if.then48, %if.end42
  %87 = load %struct.df*, %struct.df** @df, align 8, !dbg !7634
  %eq_use_regs60 = getelementptr inbounds %struct.df, %struct.df* %87, i32 0, i32 7, !dbg !7634
  %88 = load %struct.df_reg_info**, %struct.df_reg_info*** %eq_use_regs60, align 8, !dbg !7634
  %89 = load i32, i32* %i, align 4, !dbg !7634
  %idxprom61 = sext i32 %89 to i64, !dbg !7634
  %arrayidx62 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %88, i64 %idxprom61, !dbg !7634
  %90 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx62, align 8, !dbg !7634
  %n_refs63 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %90, i32 0, i32 1, !dbg !7634
  %91 = load i32, i32* %n_refs63, align 8, !dbg !7634
  %tobool64 = icmp ne i32 %91, 0, !dbg !7634
  br i1 %tobool64, label %if.then65, label %if.end76, !dbg !7636

if.then65:                                        ; preds = %if.end59
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7637
  %93 = load i8*, i8** %sep, align 8, !dbg !7639
  %94 = load %struct.df*, %struct.df** @df, align 8, !dbg !7640
  %eq_use_regs66 = getelementptr inbounds %struct.df, %struct.df* %94, i32 0, i32 7, !dbg !7640
  %95 = load %struct.df_reg_info**, %struct.df_reg_info*** %eq_use_regs66, align 8, !dbg !7640
  %96 = load i32, i32* %i, align 4, !dbg !7640
  %idxprom67 = sext i32 %96 to i64, !dbg !7640
  %arrayidx68 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %95, i64 %idxprom67, !dbg !7640
  %97 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx68, align 8, !dbg !7640
  %n_refs69 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %97, i32 0, i32 1, !dbg !7640
  %98 = load i32, i32* %n_refs69, align 8, !dbg !7640
  %call70 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %92, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i64 0, i64 0), i8* %93, i32 %98), !dbg !7641
  %99 = load %struct.df*, %struct.df** @df, align 8, !dbg !7642
  %eq_use_regs71 = getelementptr inbounds %struct.df, %struct.df* %99, i32 0, i32 7, !dbg !7642
  %100 = load %struct.df_reg_info**, %struct.df_reg_info*** %eq_use_regs71, align 8, !dbg !7642
  %101 = load i32, i32* %i, align 4, !dbg !7642
  %idxprom72 = sext i32 %101 to i64, !dbg !7642
  %arrayidx73 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %100, i64 %idxprom72, !dbg !7642
  %102 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx73, align 8, !dbg !7642
  %n_refs74 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %102, i32 0, i32 1, !dbg !7642
  %103 = load i32, i32* %n_refs74, align 8, !dbg !7642
  %104 = load i32, i32* %ecount, align 4, !dbg !7643
  %add75 = add i32 %104, %103, !dbg !7643
  store i32 %add75, i32* %ecount, align 4, !dbg !7643
  br label %if.end76, !dbg !7644

if.end76:                                         ; preds = %if.then65, %if.end59
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7645
  %call77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %105, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0)), !dbg !7646
  br label %if.end78, !dbg !7647

if.end78:                                         ; preds = %if.end76, %lor.lhs.false20
  br label %for.inc79, !dbg !7603

for.inc79:                                        ; preds = %if.end78
  %106 = load i32, i32* %i, align 4, !dbg !7648
  %inc80 = add nsw i32 %106, 1, !dbg !7648
  store i32 %inc80, i32* %i, align 4, !dbg !7648
  br label %for.cond10, !dbg !7649, !llvm.loop !7650

for.end81:                                        ; preds = %for.cond10
  %107 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7652
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %107, i64 0, !dbg !7652
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !7652
  %108 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7652
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %108, i32 0, i32 0, !dbg !7652
  %109 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !7652
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %109, i32 0, i32 6, !dbg !7652
  %110 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !7652
  store %struct.basic_block_def* %110, %struct.basic_block_def** %bb, align 8, !dbg !7652
  br label %for.cond82, !dbg !7652

for.cond82:                                       ; preds = %for.inc122, %for.end81
  %111 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7654
  %112 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7654
  %add.ptr83 = getelementptr inbounds %struct.function, %struct.function* %112, i64 0, !dbg !7654
  %cfg84 = getelementptr inbounds %struct.function, %struct.function* %add.ptr83, i32 0, i32 1, !dbg !7654
  %113 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg84, align 8, !dbg !7654
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %113, i32 0, i32 1, !dbg !7654
  %114 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7654
  %cmp85 = icmp ne %struct.basic_block_def* %111, %114, !dbg !7654
  br i1 %cmp85, label %for.body86, label %for.end124, !dbg !7652

for.body86:                                       ; preds = %for.cond82
  %115 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7656
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %115, i32 0, i32 7, !dbg !7656
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7656
  %116 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7656
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %116, i32 0, i32 0, !dbg !7656
  %117 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !7656
  store %struct.rtx_def* %117, %struct.rtx_def** %insn, align 8, !dbg !7656
  br label %for.cond87, !dbg !7656

for.cond87:                                       ; preds = %for.inc116, %for.body86
  %118 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7658
  %tobool88 = icmp ne %struct.rtx_def* %118, null, !dbg !7658
  br i1 %tobool88, label %land.rhs, label %land.end, !dbg !7658

land.rhs:                                         ; preds = %for.cond87
  %119 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7658
  %120 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7658
  %il89 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %120, i32 0, i32 7, !dbg !7658
  %rtl90 = bitcast %union.basic_block_il_dependent* %il89 to %struct.rtl_bb_info**, !dbg !7658
  %121 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl90, align 8, !dbg !7658
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %121, i32 0, i32 1, !dbg !7658
  %122 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7658
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1, !dbg !7658
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7658
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !7658
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**, !dbg !7658
  %123 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7658
  %cmp92 = icmp ne %struct.rtx_def* %119, %123, !dbg !7658
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond87
  %124 = phi i1 [ false, %for.cond87 ], [ %cmp92, %land.rhs ], !dbg !7660
  br i1 %124, label %for.body93, label %for.end121, !dbg !7656

for.body93:                                       ; preds = %land.end
  %125 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7661
  %126 = bitcast %struct.rtx_def* %125 to i32*, !dbg !7661
  %bf.load = load i32, i32* %126, align 8, !dbg !7661
  %bf.clear = and i32 %bf.load, 65535, !dbg !7661
  %cmp94 = icmp eq i32 %bf.clear, 8, !dbg !7661
  br i1 %cmp94, label %if.then107, label %lor.lhs.false95, !dbg !7661

lor.lhs.false95:                                  ; preds = %for.body93
  %127 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7661
  %128 = bitcast %struct.rtx_def* %127 to i32*, !dbg !7661
  %bf.load96 = load i32, i32* %128, align 8, !dbg !7661
  %bf.clear97 = and i32 %bf.load96, 65535, !dbg !7661
  %cmp98 = icmp eq i32 %bf.clear97, 7, !dbg !7661
  br i1 %cmp98, label %if.then107, label %lor.lhs.false99, !dbg !7661

lor.lhs.false99:                                  ; preds = %lor.lhs.false95
  %129 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7661
  %130 = bitcast %struct.rtx_def* %129 to i32*, !dbg !7661
  %bf.load100 = load i32, i32* %130, align 8, !dbg !7661
  %bf.clear101 = and i32 %bf.load100, 65535, !dbg !7661
  %cmp102 = icmp eq i32 %bf.clear101, 9, !dbg !7661
  br i1 %cmp102, label %if.then107, label %lor.lhs.false103, !dbg !7661

lor.lhs.false103:                                 ; preds = %lor.lhs.false99
  %131 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7661
  %132 = bitcast %struct.rtx_def* %131 to i32*, !dbg !7661
  %bf.load104 = load i32, i32* %132, align 8, !dbg !7661
  %bf.clear105 = and i32 %bf.load104, 65535, !dbg !7661
  %cmp106 = icmp eq i32 %bf.clear105, 10, !dbg !7661
  br i1 %cmp106, label %if.then107, label %if.end115, !dbg !7663

if.then107:                                       ; preds = %lor.lhs.false103, %lor.lhs.false99, %lor.lhs.false95, %for.body93
  %133 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7664
  %134 = bitcast %struct.rtx_def* %133 to i32*, !dbg !7664
  %bf.load108 = load i32, i32* %134, align 8, !dbg !7664
  %bf.clear109 = and i32 %bf.load108, 65535, !dbg !7664
  %cmp110 = icmp eq i32 %bf.clear109, 10, !dbg !7664
  br i1 %cmp110, label %if.then111, label %if.else, !dbg !7667

if.then111:                                       ; preds = %if.then107
  %135 = load i32, i32* %ccount, align 4, !dbg !7668
  %inc112 = add nsw i32 %135, 1, !dbg !7668
  store i32 %inc112, i32* %ccount, align 4, !dbg !7668
  br label %if.end114, !dbg !7669

if.else:                                          ; preds = %if.then107
  %136 = load i32, i32* %icount, align 4, !dbg !7670
  %inc113 = add nsw i32 %136, 1, !dbg !7670
  store i32 %inc113, i32* %icount, align 4, !dbg !7670
  br label %if.end114

if.end114:                                        ; preds = %if.else, %if.then111
  br label %if.end115, !dbg !7671

if.end115:                                        ; preds = %if.end114, %lor.lhs.false103
  br label %for.inc116, !dbg !7661

for.inc116:                                       ; preds = %if.end115
  %137 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7658
  %u117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %137, i32 0, i32 1, !dbg !7658
  %fld118 = bitcast %union.u* %u117 to [1 x %union.rtunion_def]*, !dbg !7658
  %arrayidx119 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld118, i64 0, i64 2, !dbg !7658
  %rt_rtx120 = bitcast %union.rtunion_def* %arrayidx119 to %struct.rtx_def**, !dbg !7658
  %138 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx120, align 8, !dbg !7658
  store %struct.rtx_def* %138, %struct.rtx_def** %insn, align 8, !dbg !7658
  br label %for.cond87, !dbg !7658, !llvm.loop !7672

for.end121:                                       ; preds = %land.end
  br label %for.inc122, !dbg !7673

for.inc122:                                       ; preds = %for.end121
  %139 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7654
  %next_bb123 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %139, i32 0, i32 6, !dbg !7654
  %140 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb123, align 8, !dbg !7654
  store %struct.basic_block_def* %140, %struct.basic_block_def** %bb, align 8, !dbg !7654
  br label %for.cond82, !dbg !7654, !llvm.loop !7674

for.end124:                                       ; preds = %for.cond82
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7676
  %142 = load i32, i32* %dcount, align 4, !dbg !7677
  %143 = load i32, i32* %ucount, align 4, !dbg !7678
  %add125 = add nsw i32 %142, %143, !dbg !7679
  %144 = load i32, i32* %ecount, align 4, !dbg !7680
  %add126 = add nsw i32 %add125, %144, !dbg !7681
  %145 = load i32, i32* %dcount, align 4, !dbg !7682
  %146 = load i32, i32* %ucount, align 4, !dbg !7683
  %147 = load i32, i32* %ecount, align 4, !dbg !7684
  %148 = load i32, i32* %icount, align 4, !dbg !7685
  %149 = load i32, i32* %ccount, align 4, !dbg !7686
  %add127 = add nsw i32 %148, %149, !dbg !7687
  %150 = load i32, i32* %icount, align 4, !dbg !7688
  %151 = load i32, i32* %ccount, align 4, !dbg !7689
  %call128 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %141, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.40, i64 0, i64 0), i32 %add126, i32 %145, i32 %146, i32 %147, i32 %add127, i32 %150, i32 %151), !dbg !7690
  ret void, !dbg !7691
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_scan_start_block(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #0 !dbg !7692 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %bb_info = alloca %struct.df_scan_bb_info*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !7693, metadata !DIExpression()), !dbg !7694
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !7695, metadata !DIExpression()), !dbg !7696
  call void @llvm.dbg.declare(metadata %struct.df_scan_bb_info** %bb_info, metadata !7697, metadata !DIExpression()), !dbg !7698
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7699
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !7700
  %1 = load i32, i32* %index, align 8, !dbg !7700
  %call = call %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %1), !dbg !7701
  store %struct.df_scan_bb_info* %call, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !7698
  %2 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !7702
  %tobool = icmp ne %struct.df_scan_bb_info* %2, null, !dbg !7702
  br i1 %tobool, label %if.then, label %if.end, !dbg !7704

if.then:                                          ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7705
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7707
  %index1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i32 0, i32 9, !dbg !7708
  %5 = load i32, i32* %index1, align 8, !dbg !7708
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.41, i64 0, i64 0), i32 %5), !dbg !7709
  %6 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !7710
  %artificial_defs = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %6, i32 0, i32 0, !dbg !7711
  %7 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_defs, align 8, !dbg !7711
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7712
  call void @df_refs_chain_dump(%union.df_ref_d** %7, i8 zeroext 1, %struct._IO_FILE* %8), !dbg !7713
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7714
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7715
  %index3 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %10, i32 0, i32 9, !dbg !7716
  %11 = load i32, i32* %index3, align 8, !dbg !7716
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.42, i64 0, i64 0), i32 %11), !dbg !7717
  %12 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %bb_info, align 8, !dbg !7718
  %artificial_uses = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %12, i32 0, i32 1, !dbg !7719
  %13 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_uses, align 8, !dbg !7719
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7720
  call void @df_refs_chain_dump(%union.df_ref_d** %13, i8 zeroext 1, %struct._IO_FILE* %14), !dbg !7721
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7722
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0)), !dbg !7723
  br label %if.end, !dbg !7724

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7725
}

declare dso_local void @df_print_regset(%struct._IO_FILE*, %struct.bitmap_head_def*) #2

declare dso_local void @df_refs_chain_dump(%union.df_ref_d**, i8 zeroext, %struct._IO_FILE*) #2

declare dso_local void @df_chain_unlink(%union.df_ref_d*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_free_ref(%union.df_ref_d* %ref) #0 !dbg !7726 {
entry:
  %ref.addr = alloca %union.df_ref_d*, align 8
  %problem_data = alloca %struct.df_scan_problem_data*, align 8
  store %union.df_ref_d* %ref, %union.df_ref_d** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref.addr, metadata !7727, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.declare(metadata %struct.df_scan_problem_data** %problem_data, metadata !7729, metadata !DIExpression()), !dbg !7730
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7731
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !7731
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !7731
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7731
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !7732
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !7732
  %3 = bitcast i8* %2 to %struct.df_scan_problem_data*, !dbg !7733
  store %struct.df_scan_problem_data* %3, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !7730
  %4 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !7734
  %base = bitcast %union.df_ref_d* %4 to %struct.df_base_ref*, !dbg !7734
  %5 = bitcast %struct.df_base_ref* %base to i32*, !dbg !7734
  %bf.load = load i32, i32* %5, align 8, !dbg !7734
  %bf.clear = and i32 %bf.load, 255, !dbg !7734
  switch i32 %bf.clear, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb3
    i32 3, label %sw.bb4
  ], !dbg !7735

sw.bb:                                            ; preds = %entry
  %6 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !7736
  %ref_base_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %6, i32 0, i32 0, !dbg !7738
  %7 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %ref_base_pool, align 8, !dbg !7738
  %8 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !7739
  %9 = bitcast %union.df_ref_d* %8 to i8*, !dbg !7739
  call void @pool_free(%struct.alloc_pool_def* %7, i8* %9), !dbg !7740
  br label %sw.epilog, !dbg !7741

sw.bb2:                                           ; preds = %entry
  %10 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !7742
  %ref_artificial_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %10, i32 0, i32 1, !dbg !7743
  %11 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %ref_artificial_pool, align 8, !dbg !7743
  %12 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !7744
  %13 = bitcast %union.df_ref_d* %12 to i8*, !dbg !7744
  call void @pool_free(%struct.alloc_pool_def* %11, i8* %13), !dbg !7745
  br label %sw.epilog, !dbg !7746

sw.bb3:                                           ; preds = %entry
  %14 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !7747
  %ref_regular_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %14, i32 0, i32 2, !dbg !7748
  %15 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %ref_regular_pool, align 8, !dbg !7748
  %16 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !7749
  %17 = bitcast %union.df_ref_d* %16 to i8*, !dbg !7749
  call void @pool_free(%struct.alloc_pool_def* %15, i8* %17), !dbg !7750
  br label %sw.epilog, !dbg !7751

sw.bb4:                                           ; preds = %entry
  %18 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !7752
  %ref_extract_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %18, i32 0, i32 3, !dbg !7753
  %19 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %ref_extract_pool, align 8, !dbg !7753
  %20 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !7754
  %21 = bitcast %union.df_ref_d* %20 to i8*, !dbg !7754
  call void @pool_free(%struct.alloc_pool_def* %19, i8* %21), !dbg !7755
  br label %sw.epilog, !dbg !7756

sw.epilog:                                        ; preds = %entry, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb
  ret void, !dbg !7757
}

declare dso_local i8* @vec_stack_p_reserve_exact_1(i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_df_ref_base_iterate(%struct.VEC_df_ref_base* %vec_, i32 %ix_, %union.df_ref_d** %ptr) #0 !dbg !7758 {
entry:
  %retval = alloca i32, align 4
  %vec_.addr = alloca %struct.VEC_df_ref_base*, align 8
  %ix_.addr = alloca i32, align 4
  %ptr.addr = alloca %union.df_ref_d**, align 8
  store %struct.VEC_df_ref_base* %vec_, %struct.VEC_df_ref_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_ref_base** %vec_.addr, metadata !7763, metadata !DIExpression()), !dbg !7764
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !7765, metadata !DIExpression()), !dbg !7764
  store %union.df_ref_d** %ptr, %union.df_ref_d*** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %ptr.addr, metadata !7766, metadata !DIExpression()), !dbg !7764
  %0 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !7767
  %tobool = icmp ne %struct.VEC_df_ref_base* %0, null, !dbg !7767
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !7767

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !7767
  %2 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !7767
  %num = getelementptr inbounds %struct.VEC_df_ref_base, %struct.VEC_df_ref_base* %2, i32 0, i32 0, !dbg !7767
  %3 = load i32, i32* %num, align 8, !dbg !7767
  %cmp = icmp ult i32 %1, %3, !dbg !7767
  br i1 %cmp, label %if.then, label %if.else, !dbg !7764

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !7769
  %vec = getelementptr inbounds %struct.VEC_df_ref_base, %struct.VEC_df_ref_base* %4, i32 0, i32 2, !dbg !7769
  %5 = load i32, i32* %ix_.addr, align 4, !dbg !7769
  %idxprom = zext i32 %5 to i64, !dbg !7769
  %arrayidx = getelementptr inbounds [1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* %vec, i64 0, i64 %idxprom, !dbg !7769
  %6 = load %union.df_ref_d*, %union.df_ref_d** %arrayidx, align 8, !dbg !7769
  %7 = load %union.df_ref_d**, %union.df_ref_d*** %ptr.addr, align 8, !dbg !7769
  store %union.df_ref_d* %6, %union.df_ref_d** %7, align 8, !dbg !7769
  store i32 1, i32* %retval, align 4, !dbg !7769
  br label %return, !dbg !7769

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load %union.df_ref_d**, %union.df_ref_d*** %ptr.addr, align 8, !dbg !7771
  store %union.df_ref_d* null, %union.df_ref_d** %8, align 8, !dbg !7771
  store i32 0, i32* %retval, align 4, !dbg !7771
  br label %return, !dbg !7771

return:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7764
  ret i32 %9, !dbg !7764
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_df_mw_hardreg_ptr_base_iterate(%struct.VEC_df_mw_hardreg_ptr_base* %vec_, i32 %ix_, %struct.df_mw_hardreg** %ptr) #0 !dbg !7773 {
entry:
  %retval = alloca i32, align 4
  %vec_.addr = alloca %struct.VEC_df_mw_hardreg_ptr_base*, align 8
  %ix_.addr = alloca i32, align 4
  %ptr.addr = alloca %struct.df_mw_hardreg**, align 8
  store %struct.VEC_df_mw_hardreg_ptr_base* %vec_, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, metadata !7776, metadata !DIExpression()), !dbg !7777
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !7778, metadata !DIExpression()), !dbg !7777
  store %struct.df_mw_hardreg** %ptr, %struct.df_mw_hardreg*** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg*** %ptr.addr, metadata !7779, metadata !DIExpression()), !dbg !7777
  %0 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !7780
  %tobool = icmp ne %struct.VEC_df_mw_hardreg_ptr_base* %0, null, !dbg !7780
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !7780

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !7780
  %2 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !7780
  %num = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_base, %struct.VEC_df_mw_hardreg_ptr_base* %2, i32 0, i32 0, !dbg !7780
  %3 = load i32, i32* %num, align 8, !dbg !7780
  %cmp = icmp ult i32 %1, %3, !dbg !7780
  br i1 %cmp, label %if.then, label %if.else, !dbg !7777

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !7782
  %vec = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_base, %struct.VEC_df_mw_hardreg_ptr_base* %4, i32 0, i32 2, !dbg !7782
  %5 = load i32, i32* %ix_.addr, align 4, !dbg !7782
  %idxprom = zext i32 %5 to i64, !dbg !7782
  %arrayidx = getelementptr inbounds [1 x %struct.df_mw_hardreg*], [1 x %struct.df_mw_hardreg*]* %vec, i64 0, i64 %idxprom, !dbg !7782
  %6 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %arrayidx, align 8, !dbg !7782
  %7 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %ptr.addr, align 8, !dbg !7782
  store %struct.df_mw_hardreg* %6, %struct.df_mw_hardreg** %7, align 8, !dbg !7782
  store i32 1, i32* %retval, align 4, !dbg !7782
  br label %return, !dbg !7782

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %ptr.addr, align 8, !dbg !7784
  store %struct.df_mw_hardreg* null, %struct.df_mw_hardreg** %8, align 8, !dbg !7784
  store i32 0, i32* %retval, align 4, !dbg !7784
  br label %return, !dbg !7784

return:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7777
  ret i32 %9, !dbg !7777
}

declare dso_local void @vec_stack_free(i8*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal void @df_reorganize_refs_by_reg_by_insn(%struct.df_ref_info* %ref_info, i8 zeroext %include_defs, i8 zeroext %include_uses, i8 zeroext %include_eq_uses) #0 !dbg !7786 {
entry:
  %ref_info.addr = alloca %struct.df_ref_info*, align 8
  %include_defs.addr = alloca i8, align 1
  %include_uses.addr = alloca i8, align 1
  %include_eq_uses.addr = alloca i8, align 1
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_index = alloca i32, align 4
  %m = alloca i32, align 4
  %offset = alloca i32, align 4
  %r = alloca i32, align 4
  %start = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %ref_rec = alloca %union.df_ref_d**, align 8
  %regno = alloca i32, align 4
  %regno27 = alloca i32, align 4
  %uid = alloca i32, align 4
  %regno73 = alloca i32, align 4
  %regno92 = alloca i32, align 4
  %regno111 = alloca i32, align 4
  %bb152 = alloca %struct.basic_block_def*, align 8
  %insn166 = alloca %struct.rtx_def*, align 8
  %ref_rec167 = alloca %union.df_ref_d**, align 8
  %ref = alloca %union.df_ref_d*, align 8
  %regno174 = alloca i32, align 4
  %id = alloca i32, align 4
  %ref203 = alloca %union.df_ref_d*, align 8
  %regno204 = alloca i32, align 4
  %id210 = alloca i32, align 4
  %uid266 = alloca i32, align 4
  %ref280 = alloca %union.df_ref_d*, align 8
  %regno281 = alloca i32, align 4
  %id287 = alloca i32, align 4
  %ref315 = alloca %union.df_ref_d*, align 8
  %regno316 = alloca i32, align 4
  %id322 = alloca i32, align 4
  %ref350 = alloca %union.df_ref_d*, align 8
  %regno351 = alloca i32, align 4
  %id357 = alloca i32, align 4
  store %struct.df_ref_info* %ref_info, %struct.df_ref_info** %ref_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_ref_info** %ref_info.addr, metadata !7787, metadata !DIExpression()), !dbg !7788
  store i8 %include_defs, i8* %include_defs.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %include_defs.addr, metadata !7789, metadata !DIExpression()), !dbg !7790
  store i8 %include_uses, i8* %include_uses.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %include_uses.addr, metadata !7791, metadata !DIExpression()), !dbg !7792
  store i8 %include_eq_uses, i8* %include_eq_uses.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %include_eq_uses.addr, metadata !7793, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !7795, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !7797, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.declare(metadata i32* %m, metadata !7799, metadata !DIExpression()), !dbg !7800
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7801
  %regs_inited = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 9, !dbg !7802
  %1 = load i32, i32* %regs_inited, align 4, !dbg !7802
  store i32 %1, i32* %m, align 4, !dbg !7800
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !7803, metadata !DIExpression()), !dbg !7804
  store i32 0, i32* %offset, align 4, !dbg !7804
  call void @llvm.dbg.declare(metadata i32* %r, metadata !7805, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.declare(metadata i32* %start, metadata !7807, metadata !DIExpression()), !dbg !7808
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !7809
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 27, !dbg !7810
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !7810
  %bf.cast = sext i8 %bf.load to i32, !dbg !7810
  %and = and i32 %bf.cast, 2, !dbg !7811
  %tobool = icmp ne i32 %and, 0, !dbg !7812
  %3 = zext i1 %tobool to i64, !dbg !7812
  %cond = select i1 %tobool, i32 53, i32 0, !dbg !7812
  store i32 %cond, i32* %start, align 4, !dbg !7808
  %4 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !7813
  %begin = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %4, i32 0, i32 1, !dbg !7814
  %5 = load i32*, i32** %begin, align 8, !dbg !7814
  %6 = bitcast i32* %5 to i8*, !dbg !7815
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !7816
  %regs_inited1 = getelementptr inbounds %struct.df, %struct.df* %7, i32 0, i32 9, !dbg !7817
  %8 = load i32, i32* %regs_inited1, align 4, !dbg !7817
  %conv = zext i32 %8 to i64, !dbg !7816
  %mul = mul i64 4, %conv, !dbg !7818
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 %mul, i1 false), !dbg !7815
  %9 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !7819
  %count = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %9, i32 0, i32 2, !dbg !7820
  %10 = load i32*, i32** %count, align 8, !dbg !7820
  %11 = bitcast i32* %10 to i8*, !dbg !7821
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !7822
  %regs_inited2 = getelementptr inbounds %struct.df, %struct.df* %12, i32 0, i32 9, !dbg !7823
  %13 = load i32, i32* %regs_inited2, align 4, !dbg !7823
  %conv3 = zext i32 %13 to i64, !dbg !7822
  %mul4 = mul i64 4, %conv3, !dbg !7824
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 %mul4, i1 false), !dbg !7821
  %14 = load i8, i8* %include_defs.addr, align 1, !dbg !7825
  %15 = load i8, i8* %include_uses.addr, align 1, !dbg !7826
  %16 = load i8, i8* %include_eq_uses.addr, align 1, !dbg !7827
  %call = call i32 @df_count_refs(i8 zeroext %14, i8 zeroext %15, i8 zeroext %16), !dbg !7828
  %17 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !7829
  %total_size = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %17, i32 0, i32 5, !dbg !7830
  store i32 %call, i32* %total_size, align 8, !dbg !7831
  %18 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !7832
  call void @df_check_and_grow_ref_info(%struct.df_ref_info* %18, i32 1), !dbg !7833
  %19 = load %struct.df*, %struct.df** @df, align 8, !dbg !7834
  %blocks_to_analyze = getelementptr inbounds %struct.df, %struct.df* %19, i32 0, i32 2, !dbg !7834
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %blocks_to_analyze, align 8, !dbg !7834
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %20, i32 0, i32* %bb_index), !dbg !7834
  br label %for.cond, !dbg !7834

for.cond:                                         ; preds = %for.inc129, %entry
  %call5 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !7836
  %tobool6 = icmp ne i8 %call5, 0, !dbg !7834
  br i1 %tobool6, label %for.body, label %for.end130, !dbg !7834

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !7838, metadata !DIExpression()), !dbg !7840
  %21 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7841
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %21, i64 0, !dbg !7841
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !7841
  %22 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7841
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %22, i32 0, i32 2, !dbg !7841
  %23 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !7841
  %tobool7 = icmp ne %struct.VEC_basic_block_gc* %23, null, !dbg !7841
  br i1 %tobool7, label %cond.true, label %cond.false, !dbg !7841

cond.true:                                        ; preds = %for.body
  %24 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7841
  %add.ptr8 = getelementptr inbounds %struct.function, %struct.function* %24, i64 0, !dbg !7841
  %cfg9 = getelementptr inbounds %struct.function, %struct.function* %add.ptr8, i32 0, i32 1, !dbg !7841
  %25 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg9, align 8, !dbg !7841
  %x_basic_block_info10 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %25, i32 0, i32 2, !dbg !7841
  %26 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info10, align 8, !dbg !7841
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %26, i32 0, i32 0, !dbg !7841
  br label %cond.end, !dbg !7841

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !7841

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond11 = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7841
  %27 = load i32, i32* %bb_index, align 4, !dbg !7841
  %call12 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond11, i32 %27), !dbg !7841
  store %struct.basic_block_def* %call12, %struct.basic_block_def** %bb, align 8, !dbg !7840
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !7842, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %ref_rec, metadata !7844, metadata !DIExpression()), !dbg !7845
  %28 = load i8, i8* %include_defs.addr, align 1, !dbg !7846
  %tobool13 = icmp ne i8 %28, 0, !dbg !7846
  br i1 %tobool13, label %if.then, label %if.end, !dbg !7848

if.then:                                          ; preds = %cond.end
  %29 = load i32, i32* %bb_index, align 4, !dbg !7849
  %call14 = call %union.df_ref_d** @df_get_artificial_defs(i32 %29), !dbg !7851
  store %union.df_ref_d** %call14, %union.df_ref_d*** %ref_rec, align 8, !dbg !7852
  br label %for.cond15, !dbg !7853

for.cond15:                                       ; preds = %for.inc, %if.then
  %30 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !7854
  %31 = load %union.df_ref_d*, %union.df_ref_d** %30, align 8, !dbg !7856
  %tobool16 = icmp ne %union.df_ref_d* %31, null, !dbg !7857
  br i1 %tobool16, label %for.body17, label %for.end, !dbg !7857

for.body17:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !7858, metadata !DIExpression()), !dbg !7860
  %32 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !7861
  %33 = load %union.df_ref_d*, %union.df_ref_d** %32, align 8, !dbg !7861
  %base18 = bitcast %union.df_ref_d* %33 to %struct.df_base_ref*, !dbg !7861
  %regno19 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base18, i32 0, i32 6, !dbg !7861
  %34 = load i32, i32* %regno19, align 8, !dbg !7861
  store i32 %34, i32* %regno, align 4, !dbg !7860
  %35 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !7862
  %count20 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %35, i32 0, i32 2, !dbg !7863
  %36 = load i32*, i32** %count20, align 8, !dbg !7863
  %37 = load i32, i32* %regno, align 4, !dbg !7864
  %idxprom = zext i32 %37 to i64, !dbg !7862
  %arrayidx = getelementptr inbounds i32, i32* %36, i64 %idxprom, !dbg !7862
  %38 = load i32, i32* %arrayidx, align 4, !dbg !7865
  %inc = add i32 %38, 1, !dbg !7865
  store i32 %inc, i32* %arrayidx, align 4, !dbg !7865
  br label %for.inc, !dbg !7866

for.inc:                                          ; preds = %for.body17
  %39 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !7867
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %39, i32 1, !dbg !7867
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %ref_rec, align 8, !dbg !7867
  br label %for.cond15, !dbg !7868, !llvm.loop !7869

for.end:                                          ; preds = %for.cond15
  br label %if.end, !dbg !7870

if.end:                                           ; preds = %for.end, %cond.end
  %40 = load i8, i8* %include_uses.addr, align 1, !dbg !7871
  %tobool21 = icmp ne i8 %40, 0, !dbg !7871
  br i1 %tobool21, label %if.then22, label %if.end37, !dbg !7873

if.then22:                                        ; preds = %if.end
  %41 = load i32, i32* %bb_index, align 4, !dbg !7874
  %call23 = call %union.df_ref_d** @df_get_artificial_uses(i32 %41), !dbg !7876
  store %union.df_ref_d** %call23, %union.df_ref_d*** %ref_rec, align 8, !dbg !7877
  br label %for.cond24, !dbg !7878

for.cond24:                                       ; preds = %for.inc34, %if.then22
  %42 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !7879
  %43 = load %union.df_ref_d*, %union.df_ref_d** %42, align 8, !dbg !7881
  %tobool25 = icmp ne %union.df_ref_d* %43, null, !dbg !7882
  br i1 %tobool25, label %for.body26, label %for.end36, !dbg !7882

for.body26:                                       ; preds = %for.cond24
  call void @llvm.dbg.declare(metadata i32* %regno27, metadata !7883, metadata !DIExpression()), !dbg !7885
  %44 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !7886
  %45 = load %union.df_ref_d*, %union.df_ref_d** %44, align 8, !dbg !7886
  %base28 = bitcast %union.df_ref_d* %45 to %struct.df_base_ref*, !dbg !7886
  %regno29 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base28, i32 0, i32 6, !dbg !7886
  %46 = load i32, i32* %regno29, align 8, !dbg !7886
  store i32 %46, i32* %regno27, align 4, !dbg !7885
  %47 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !7887
  %count30 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %47, i32 0, i32 2, !dbg !7888
  %48 = load i32*, i32** %count30, align 8, !dbg !7888
  %49 = load i32, i32* %regno27, align 4, !dbg !7889
  %idxprom31 = zext i32 %49 to i64, !dbg !7887
  %arrayidx32 = getelementptr inbounds i32, i32* %48, i64 %idxprom31, !dbg !7887
  %50 = load i32, i32* %arrayidx32, align 4, !dbg !7890
  %inc33 = add i32 %50, 1, !dbg !7890
  store i32 %inc33, i32* %arrayidx32, align 4, !dbg !7890
  br label %for.inc34, !dbg !7891

for.inc34:                                        ; preds = %for.body26
  %51 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !7892
  %incdec.ptr35 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %51, i32 1, !dbg !7892
  store %union.df_ref_d** %incdec.ptr35, %union.df_ref_d*** %ref_rec, align 8, !dbg !7892
  br label %for.cond24, !dbg !7893, !llvm.loop !7894

for.end36:                                        ; preds = %for.cond24
  br label %if.end37, !dbg !7895

if.end37:                                         ; preds = %for.end36, %if.end
  %52 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7896
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %52, i32 0, i32 7, !dbg !7896
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7896
  %53 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7896
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %53, i32 0, i32 0, !dbg !7896
  %54 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !7896
  store %struct.rtx_def* %54, %struct.rtx_def** %insn, align 8, !dbg !7896
  br label %for.cond38, !dbg !7896

for.cond38:                                       ; preds = %for.inc123, %if.end37
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7898
  %tobool39 = icmp ne %struct.rtx_def* %55, null, !dbg !7898
  br i1 %tobool39, label %land.rhs, label %land.end, !dbg !7898

land.rhs:                                         ; preds = %for.cond38
  %56 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7898
  %57 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7898
  %il40 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %57, i32 0, i32 7, !dbg !7898
  %rtl41 = bitcast %union.basic_block_il_dependent* %il40 to %struct.rtl_bb_info**, !dbg !7898
  %58 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl41, align 8, !dbg !7898
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %58, i32 0, i32 1, !dbg !7898
  %59 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7898
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1, !dbg !7898
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7898
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !7898
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**, !dbg !7898
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7898
  %cmp = icmp ne %struct.rtx_def* %56, %60, !dbg !7898
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond38
  %61 = phi i1 [ false, %for.cond38 ], [ %cmp, %land.rhs ], !dbg !7900
  br i1 %61, label %for.body44, label %for.end128, !dbg !7896

for.body44:                                       ; preds = %land.end
  %62 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7901
  %63 = bitcast %struct.rtx_def* %62 to i32*, !dbg !7901
  %bf.load45 = load i32, i32* %63, align 8, !dbg !7901
  %bf.clear = and i32 %bf.load45, 65535, !dbg !7901
  %cmp46 = icmp eq i32 %bf.clear, 8, !dbg !7901
  br i1 %cmp46, label %if.then62, label %lor.lhs.false, !dbg !7901

lor.lhs.false:                                    ; preds = %for.body44
  %64 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7901
  %65 = bitcast %struct.rtx_def* %64 to i32*, !dbg !7901
  %bf.load48 = load i32, i32* %65, align 8, !dbg !7901
  %bf.clear49 = and i32 %bf.load48, 65535, !dbg !7901
  %cmp50 = icmp eq i32 %bf.clear49, 7, !dbg !7901
  br i1 %cmp50, label %if.then62, label %lor.lhs.false52, !dbg !7901

lor.lhs.false52:                                  ; preds = %lor.lhs.false
  %66 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7901
  %67 = bitcast %struct.rtx_def* %66 to i32*, !dbg !7901
  %bf.load53 = load i32, i32* %67, align 8, !dbg !7901
  %bf.clear54 = and i32 %bf.load53, 65535, !dbg !7901
  %cmp55 = icmp eq i32 %bf.clear54, 9, !dbg !7901
  br i1 %cmp55, label %if.then62, label %lor.lhs.false57, !dbg !7901

lor.lhs.false57:                                  ; preds = %lor.lhs.false52
  %68 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7901
  %69 = bitcast %struct.rtx_def* %68 to i32*, !dbg !7901
  %bf.load58 = load i32, i32* %69, align 8, !dbg !7901
  %bf.clear59 = and i32 %bf.load58, 65535, !dbg !7901
  %cmp60 = icmp eq i32 %bf.clear59, 10, !dbg !7901
  br i1 %cmp60, label %if.then62, label %if.end122, !dbg !7904

if.then62:                                        ; preds = %lor.lhs.false57, %lor.lhs.false52, %lor.lhs.false, %for.body44
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !7905, metadata !DIExpression()), !dbg !7907
  %70 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7908
  %u63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !7908
  %fld64 = bitcast %union.u* %u63 to [1 x %union.rtunion_def]*, !dbg !7908
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i64 0, i64 0, !dbg !7908
  %rt_int = bitcast %union.rtunion_def* %arrayidx65 to i32*, !dbg !7908
  %71 = load i32, i32* %rt_int, align 8, !dbg !7908
  store i32 %71, i32* %uid, align 4, !dbg !7907
  %72 = load i8, i8* %include_defs.addr, align 1, !dbg !7909
  %tobool66 = icmp ne i8 %72, 0, !dbg !7909
  br i1 %tobool66, label %if.then67, label %if.end83, !dbg !7911

if.then67:                                        ; preds = %if.then62
  %73 = load %struct.df*, %struct.df** @df, align 8, !dbg !7912
  %insns = getelementptr inbounds %struct.df, %struct.df* %73, i32 0, i32 10, !dbg !7912
  %74 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !7912
  %75 = load i32, i32* %uid, align 4, !dbg !7912
  %idxprom68 = zext i32 %75 to i64, !dbg !7912
  %arrayidx69 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %74, i64 %idxprom68, !dbg !7912
  %76 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx69, align 8, !dbg !7912
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %76, i32 0, i32 1, !dbg !7912
  %77 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !7912
  store %union.df_ref_d** %77, %union.df_ref_d*** %ref_rec, align 8, !dbg !7914
  br label %for.cond70, !dbg !7915

for.cond70:                                       ; preds = %for.inc80, %if.then67
  %78 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !7916
  %79 = load %union.df_ref_d*, %union.df_ref_d** %78, align 8, !dbg !7918
  %tobool71 = icmp ne %union.df_ref_d* %79, null, !dbg !7919
  br i1 %tobool71, label %for.body72, label %for.end82, !dbg !7919

for.body72:                                       ; preds = %for.cond70
  call void @llvm.dbg.declare(metadata i32* %regno73, metadata !7920, metadata !DIExpression()), !dbg !7922
  %80 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !7923
  %81 = load %union.df_ref_d*, %union.df_ref_d** %80, align 8, !dbg !7923
  %base74 = bitcast %union.df_ref_d* %81 to %struct.df_base_ref*, !dbg !7923
  %regno75 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base74, i32 0, i32 6, !dbg !7923
  %82 = load i32, i32* %regno75, align 8, !dbg !7923
  store i32 %82, i32* %regno73, align 4, !dbg !7922
  %83 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !7924
  %count76 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %83, i32 0, i32 2, !dbg !7925
  %84 = load i32*, i32** %count76, align 8, !dbg !7925
  %85 = load i32, i32* %regno73, align 4, !dbg !7926
  %idxprom77 = zext i32 %85 to i64, !dbg !7924
  %arrayidx78 = getelementptr inbounds i32, i32* %84, i64 %idxprom77, !dbg !7924
  %86 = load i32, i32* %arrayidx78, align 4, !dbg !7927
  %inc79 = add i32 %86, 1, !dbg !7927
  store i32 %inc79, i32* %arrayidx78, align 4, !dbg !7927
  br label %for.inc80, !dbg !7928

for.inc80:                                        ; preds = %for.body72
  %87 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !7929
  %incdec.ptr81 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %87, i32 1, !dbg !7929
  store %union.df_ref_d** %incdec.ptr81, %union.df_ref_d*** %ref_rec, align 8, !dbg !7929
  br label %for.cond70, !dbg !7930, !llvm.loop !7931

for.end82:                                        ; preds = %for.cond70
  br label %if.end83, !dbg !7932

if.end83:                                         ; preds = %for.end82, %if.then62
  %88 = load i8, i8* %include_uses.addr, align 1, !dbg !7933
  %tobool84 = icmp ne i8 %88, 0, !dbg !7933
  br i1 %tobool84, label %if.then85, label %if.end102, !dbg !7935

if.then85:                                        ; preds = %if.end83
  %89 = load %struct.df*, %struct.df** @df, align 8, !dbg !7936
  %insns86 = getelementptr inbounds %struct.df, %struct.df* %89, i32 0, i32 10, !dbg !7936
  %90 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns86, align 8, !dbg !7936
  %91 = load i32, i32* %uid, align 4, !dbg !7936
  %idxprom87 = zext i32 %91 to i64, !dbg !7936
  %arrayidx88 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %90, i64 %idxprom87, !dbg !7936
  %92 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx88, align 8, !dbg !7936
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %92, i32 0, i32 2, !dbg !7936
  %93 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !7936
  store %union.df_ref_d** %93, %union.df_ref_d*** %ref_rec, align 8, !dbg !7938
  br label %for.cond89, !dbg !7939

for.cond89:                                       ; preds = %for.inc99, %if.then85
  %94 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !7940
  %95 = load %union.df_ref_d*, %union.df_ref_d** %94, align 8, !dbg !7942
  %tobool90 = icmp ne %union.df_ref_d* %95, null, !dbg !7943
  br i1 %tobool90, label %for.body91, label %for.end101, !dbg !7943

for.body91:                                       ; preds = %for.cond89
  call void @llvm.dbg.declare(metadata i32* %regno92, metadata !7944, metadata !DIExpression()), !dbg !7946
  %96 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !7947
  %97 = load %union.df_ref_d*, %union.df_ref_d** %96, align 8, !dbg !7947
  %base93 = bitcast %union.df_ref_d* %97 to %struct.df_base_ref*, !dbg !7947
  %regno94 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base93, i32 0, i32 6, !dbg !7947
  %98 = load i32, i32* %regno94, align 8, !dbg !7947
  store i32 %98, i32* %regno92, align 4, !dbg !7946
  %99 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !7948
  %count95 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %99, i32 0, i32 2, !dbg !7949
  %100 = load i32*, i32** %count95, align 8, !dbg !7949
  %101 = load i32, i32* %regno92, align 4, !dbg !7950
  %idxprom96 = zext i32 %101 to i64, !dbg !7948
  %arrayidx97 = getelementptr inbounds i32, i32* %100, i64 %idxprom96, !dbg !7948
  %102 = load i32, i32* %arrayidx97, align 4, !dbg !7951
  %inc98 = add i32 %102, 1, !dbg !7951
  store i32 %inc98, i32* %arrayidx97, align 4, !dbg !7951
  br label %for.inc99, !dbg !7952

for.inc99:                                        ; preds = %for.body91
  %103 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !7953
  %incdec.ptr100 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %103, i32 1, !dbg !7953
  store %union.df_ref_d** %incdec.ptr100, %union.df_ref_d*** %ref_rec, align 8, !dbg !7953
  br label %for.cond89, !dbg !7954, !llvm.loop !7955

for.end101:                                       ; preds = %for.cond89
  br label %if.end102, !dbg !7956

if.end102:                                        ; preds = %for.end101, %if.end83
  %104 = load i8, i8* %include_eq_uses.addr, align 1, !dbg !7957
  %tobool103 = icmp ne i8 %104, 0, !dbg !7957
  br i1 %tobool103, label %if.then104, label %if.end121, !dbg !7959

if.then104:                                       ; preds = %if.end102
  %105 = load %struct.df*, %struct.df** @df, align 8, !dbg !7960
  %insns105 = getelementptr inbounds %struct.df, %struct.df* %105, i32 0, i32 10, !dbg !7960
  %106 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns105, align 8, !dbg !7960
  %107 = load i32, i32* %uid, align 4, !dbg !7960
  %idxprom106 = zext i32 %107 to i64, !dbg !7960
  %arrayidx107 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %106, i64 %idxprom106, !dbg !7960
  %108 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx107, align 8, !dbg !7960
  %eq_uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %108, i32 0, i32 3, !dbg !7960
  %109 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses, align 8, !dbg !7960
  store %union.df_ref_d** %109, %union.df_ref_d*** %ref_rec, align 8, !dbg !7962
  br label %for.cond108, !dbg !7963

for.cond108:                                      ; preds = %for.inc118, %if.then104
  %110 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !7964
  %111 = load %union.df_ref_d*, %union.df_ref_d** %110, align 8, !dbg !7966
  %tobool109 = icmp ne %union.df_ref_d* %111, null, !dbg !7967
  br i1 %tobool109, label %for.body110, label %for.end120, !dbg !7967

for.body110:                                      ; preds = %for.cond108
  call void @llvm.dbg.declare(metadata i32* %regno111, metadata !7968, metadata !DIExpression()), !dbg !7970
  %112 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !7971
  %113 = load %union.df_ref_d*, %union.df_ref_d** %112, align 8, !dbg !7971
  %base112 = bitcast %union.df_ref_d* %113 to %struct.df_base_ref*, !dbg !7971
  %regno113 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base112, i32 0, i32 6, !dbg !7971
  %114 = load i32, i32* %regno113, align 8, !dbg !7971
  store i32 %114, i32* %regno111, align 4, !dbg !7970
  %115 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !7972
  %count114 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %115, i32 0, i32 2, !dbg !7973
  %116 = load i32*, i32** %count114, align 8, !dbg !7973
  %117 = load i32, i32* %regno111, align 4, !dbg !7974
  %idxprom115 = zext i32 %117 to i64, !dbg !7972
  %arrayidx116 = getelementptr inbounds i32, i32* %116, i64 %idxprom115, !dbg !7972
  %118 = load i32, i32* %arrayidx116, align 4, !dbg !7975
  %inc117 = add i32 %118, 1, !dbg !7975
  store i32 %inc117, i32* %arrayidx116, align 4, !dbg !7975
  br label %for.inc118, !dbg !7976

for.inc118:                                       ; preds = %for.body110
  %119 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec, align 8, !dbg !7977
  %incdec.ptr119 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %119, i32 1, !dbg !7977
  store %union.df_ref_d** %incdec.ptr119, %union.df_ref_d*** %ref_rec, align 8, !dbg !7977
  br label %for.cond108, !dbg !7978, !llvm.loop !7979

for.end120:                                       ; preds = %for.cond108
  br label %if.end121, !dbg !7980

if.end121:                                        ; preds = %for.end120, %if.end102
  br label %if.end122, !dbg !7981

if.end122:                                        ; preds = %if.end121, %lor.lhs.false57
  br label %for.inc123, !dbg !7982

for.inc123:                                       ; preds = %if.end122
  %120 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7898
  %u124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1, !dbg !7898
  %fld125 = bitcast %union.u* %u124 to [1 x %union.rtunion_def]*, !dbg !7898
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i64 0, i64 2, !dbg !7898
  %rt_rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**, !dbg !7898
  %121 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx127, align 8, !dbg !7898
  store %struct.rtx_def* %121, %struct.rtx_def** %insn, align 8, !dbg !7898
  br label %for.cond38, !dbg !7898, !llvm.loop !7983

for.end128:                                       ; preds = %land.end
  br label %for.inc129, !dbg !7985

for.inc129:                                       ; preds = %for.end128
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !7836
  br label %for.cond, !dbg !7836, !llvm.loop !7986

for.end130:                                       ; preds = %for.cond
  %122 = load i32, i32* %start, align 4, !dbg !7988
  store i32 %122, i32* %r, align 4, !dbg !7990
  br label %for.cond131, !dbg !7991

for.cond131:                                      ; preds = %for.inc144, %for.end130
  %123 = load i32, i32* %r, align 4, !dbg !7992
  %124 = load i32, i32* %m, align 4, !dbg !7994
  %cmp132 = icmp ult i32 %123, %124, !dbg !7995
  br i1 %cmp132, label %for.body134, label %for.end146, !dbg !7996

for.body134:                                      ; preds = %for.cond131
  %125 = load i32, i32* %offset, align 4, !dbg !7997
  %126 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !7999
  %begin135 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %126, i32 0, i32 1, !dbg !8000
  %127 = load i32*, i32** %begin135, align 8, !dbg !8000
  %128 = load i32, i32* %r, align 4, !dbg !8001
  %idxprom136 = zext i32 %128 to i64, !dbg !7999
  %arrayidx137 = getelementptr inbounds i32, i32* %127, i64 %idxprom136, !dbg !7999
  store i32 %125, i32* %arrayidx137, align 4, !dbg !8002
  %129 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8003
  %count138 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %129, i32 0, i32 2, !dbg !8004
  %130 = load i32*, i32** %count138, align 8, !dbg !8004
  %131 = load i32, i32* %r, align 4, !dbg !8005
  %idxprom139 = zext i32 %131 to i64, !dbg !8003
  %arrayidx140 = getelementptr inbounds i32, i32* %130, i64 %idxprom139, !dbg !8003
  %132 = load i32, i32* %arrayidx140, align 4, !dbg !8003
  %133 = load i32, i32* %offset, align 4, !dbg !8006
  %add = add i32 %133, %132, !dbg !8006
  store i32 %add, i32* %offset, align 4, !dbg !8006
  %134 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8007
  %count141 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %134, i32 0, i32 2, !dbg !8008
  %135 = load i32*, i32** %count141, align 8, !dbg !8008
  %136 = load i32, i32* %r, align 4, !dbg !8009
  %idxprom142 = zext i32 %136 to i64, !dbg !8007
  %arrayidx143 = getelementptr inbounds i32, i32* %135, i64 %idxprom142, !dbg !8007
  store i32 0, i32* %arrayidx143, align 4, !dbg !8010
  br label %for.inc144, !dbg !8011

for.inc144:                                       ; preds = %for.body134
  %137 = load i32, i32* %r, align 4, !dbg !8012
  %inc145 = add i32 %137, 1, !dbg !8012
  store i32 %inc145, i32* %r, align 4, !dbg !8012
  br label %for.cond131, !dbg !8013, !llvm.loop !8014

for.end146:                                       ; preds = %for.cond131
  %138 = load %struct.df*, %struct.df** @df, align 8, !dbg !8016
  %blocks_to_analyze147 = getelementptr inbounds %struct.df, %struct.df* %138, i32 0, i32 2, !dbg !8016
  %139 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %blocks_to_analyze147, align 8, !dbg !8016
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %139, i32 0, i32* %bb_index), !dbg !8016
  br label %for.cond148, !dbg !8016

for.cond148:                                      ; preds = %for.inc383, %for.end146
  %call149 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !8018
  %tobool150 = icmp ne i8 %call149, 0, !dbg !8016
  br i1 %tobool150, label %for.body151, label %for.end384, !dbg !8016

for.body151:                                      ; preds = %for.cond148
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb152, metadata !8020, metadata !DIExpression()), !dbg !8022
  %140 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8023
  %add.ptr153 = getelementptr inbounds %struct.function, %struct.function* %140, i64 0, !dbg !8023
  %cfg154 = getelementptr inbounds %struct.function, %struct.function* %add.ptr153, i32 0, i32 1, !dbg !8023
  %141 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg154, align 8, !dbg !8023
  %x_basic_block_info155 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %141, i32 0, i32 2, !dbg !8023
  %142 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info155, align 8, !dbg !8023
  %tobool156 = icmp ne %struct.VEC_basic_block_gc* %142, null, !dbg !8023
  br i1 %tobool156, label %cond.true157, label %cond.false162, !dbg !8023

cond.true157:                                     ; preds = %for.body151
  %143 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8023
  %add.ptr158 = getelementptr inbounds %struct.function, %struct.function* %143, i64 0, !dbg !8023
  %cfg159 = getelementptr inbounds %struct.function, %struct.function* %add.ptr158, i32 0, i32 1, !dbg !8023
  %144 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg159, align 8, !dbg !8023
  %x_basic_block_info160 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %144, i32 0, i32 2, !dbg !8023
  %145 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info160, align 8, !dbg !8023
  %base161 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %145, i32 0, i32 0, !dbg !8023
  br label %cond.end163, !dbg !8023

cond.false162:                                    ; preds = %for.body151
  br label %cond.end163, !dbg !8023

cond.end163:                                      ; preds = %cond.false162, %cond.true157
  %cond164 = phi %struct.VEC_basic_block_base* [ %base161, %cond.true157 ], [ null, %cond.false162 ], !dbg !8023
  %146 = load i32, i32* %bb_index, align 4, !dbg !8023
  %call165 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond164, i32 %146), !dbg !8023
  store %struct.basic_block_def* %call165, %struct.basic_block_def** %bb152, align 8, !dbg !8022
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn166, metadata !8024, metadata !DIExpression()), !dbg !8025
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %ref_rec167, metadata !8026, metadata !DIExpression()), !dbg !8027
  %147 = load i8, i8* %include_defs.addr, align 1, !dbg !8028
  %tobool168 = icmp ne i8 %147, 0, !dbg !8028
  br i1 %tobool168, label %if.then169, label %if.end196, !dbg !8030

if.then169:                                       ; preds = %cond.end163
  %148 = load i32, i32* %bb_index, align 4, !dbg !8031
  %call170 = call %union.df_ref_d** @df_get_artificial_defs(i32 %148), !dbg !8033
  store %union.df_ref_d** %call170, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8034
  br label %for.cond171, !dbg !8035

for.cond171:                                      ; preds = %for.inc193, %if.then169
  %149 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8036
  %150 = load %union.df_ref_d*, %union.df_ref_d** %149, align 8, !dbg !8038
  %tobool172 = icmp ne %union.df_ref_d* %150, null, !dbg !8039
  br i1 %tobool172, label %for.body173, label %for.end195, !dbg !8039

for.body173:                                      ; preds = %for.cond171
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref, metadata !8040, metadata !DIExpression()), !dbg !8042
  %151 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8043
  %152 = load %union.df_ref_d*, %union.df_ref_d** %151, align 8, !dbg !8044
  store %union.df_ref_d* %152, %union.df_ref_d** %ref, align 8, !dbg !8042
  call void @llvm.dbg.declare(metadata i32* %regno174, metadata !8045, metadata !DIExpression()), !dbg !8046
  %153 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !8047
  %base175 = bitcast %union.df_ref_d* %153 to %struct.df_base_ref*, !dbg !8047
  %regno176 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base175, i32 0, i32 6, !dbg !8047
  %154 = load i32, i32* %regno176, align 8, !dbg !8047
  store i32 %154, i32* %regno174, align 4, !dbg !8046
  %155 = load i32, i32* %regno174, align 4, !dbg !8048
  %156 = load i32, i32* %start, align 4, !dbg !8050
  %cmp177 = icmp uge i32 %155, %156, !dbg !8051
  br i1 %cmp177, label %if.then179, label %if.end192, !dbg !8052

if.then179:                                       ; preds = %for.body173
  call void @llvm.dbg.declare(metadata i32* %id, metadata !8053, metadata !DIExpression()), !dbg !8055
  %157 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8056
  %begin180 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %157, i32 0, i32 1, !dbg !8057
  %158 = load i32*, i32** %begin180, align 8, !dbg !8057
  %159 = load i32, i32* %regno174, align 4, !dbg !8058
  %idxprom181 = zext i32 %159 to i64, !dbg !8056
  %arrayidx182 = getelementptr inbounds i32, i32* %158, i64 %idxprom181, !dbg !8056
  %160 = load i32, i32* %arrayidx182, align 4, !dbg !8056
  %161 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8059
  %count183 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %161, i32 0, i32 2, !dbg !8060
  %162 = load i32*, i32** %count183, align 8, !dbg !8060
  %163 = load i32, i32* %regno174, align 4, !dbg !8061
  %idxprom184 = zext i32 %163 to i64, !dbg !8059
  %arrayidx185 = getelementptr inbounds i32, i32* %162, i64 %idxprom184, !dbg !8059
  %164 = load i32, i32* %arrayidx185, align 4, !dbg !8062
  %inc186 = add i32 %164, 1, !dbg !8062
  store i32 %inc186, i32* %arrayidx185, align 4, !dbg !8062
  %add187 = add i32 %160, %164, !dbg !8063
  store i32 %add187, i32* %id, align 4, !dbg !8055
  %165 = load i32, i32* %id, align 4, !dbg !8064
  %166 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !8065
  %base188 = bitcast %union.df_ref_d* %166 to %struct.df_base_ref*, !dbg !8065
  %id189 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base188, i32 0, i32 7, !dbg !8065
  store i32 %165, i32* %id189, align 4, !dbg !8066
  %167 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !8067
  %168 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8068
  %refs = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %168, i32 0, i32 0, !dbg !8069
  %169 = load %union.df_ref_d**, %union.df_ref_d*** %refs, align 8, !dbg !8069
  %170 = load i32, i32* %id, align 4, !dbg !8070
  %idxprom190 = zext i32 %170 to i64, !dbg !8068
  %arrayidx191 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %169, i64 %idxprom190, !dbg !8068
  store %union.df_ref_d* %167, %union.df_ref_d** %arrayidx191, align 8, !dbg !8071
  br label %if.end192, !dbg !8072

if.end192:                                        ; preds = %if.then179, %for.body173
  br label %for.inc193, !dbg !8073

for.inc193:                                       ; preds = %if.end192
  %171 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8074
  %incdec.ptr194 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %171, i32 1, !dbg !8074
  store %union.df_ref_d** %incdec.ptr194, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8074
  br label %for.cond171, !dbg !8075, !llvm.loop !8076

for.end195:                                       ; preds = %for.cond171
  br label %if.end196, !dbg !8077

if.end196:                                        ; preds = %for.end195, %cond.end163
  %172 = load i8, i8* %include_uses.addr, align 1, !dbg !8078
  %tobool197 = icmp ne i8 %172, 0, !dbg !8078
  br i1 %tobool197, label %if.then198, label %if.end228, !dbg !8080

if.then198:                                       ; preds = %if.end196
  %173 = load i32, i32* %bb_index, align 4, !dbg !8081
  %call199 = call %union.df_ref_d** @df_get_artificial_uses(i32 %173), !dbg !8083
  store %union.df_ref_d** %call199, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8084
  br label %for.cond200, !dbg !8085

for.cond200:                                      ; preds = %for.inc225, %if.then198
  %174 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8086
  %175 = load %union.df_ref_d*, %union.df_ref_d** %174, align 8, !dbg !8088
  %tobool201 = icmp ne %union.df_ref_d* %175, null, !dbg !8089
  br i1 %tobool201, label %for.body202, label %for.end227, !dbg !8089

for.body202:                                      ; preds = %for.cond200
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref203, metadata !8090, metadata !DIExpression()), !dbg !8092
  %176 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8093
  %177 = load %union.df_ref_d*, %union.df_ref_d** %176, align 8, !dbg !8094
  store %union.df_ref_d* %177, %union.df_ref_d** %ref203, align 8, !dbg !8092
  call void @llvm.dbg.declare(metadata i32* %regno204, metadata !8095, metadata !DIExpression()), !dbg !8096
  %178 = load %union.df_ref_d*, %union.df_ref_d** %ref203, align 8, !dbg !8097
  %base205 = bitcast %union.df_ref_d* %178 to %struct.df_base_ref*, !dbg !8097
  %regno206 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base205, i32 0, i32 6, !dbg !8097
  %179 = load i32, i32* %regno206, align 8, !dbg !8097
  store i32 %179, i32* %regno204, align 4, !dbg !8096
  %180 = load i32, i32* %regno204, align 4, !dbg !8098
  %181 = load i32, i32* %start, align 4, !dbg !8100
  %cmp207 = icmp uge i32 %180, %181, !dbg !8101
  br i1 %cmp207, label %if.then209, label %if.end224, !dbg !8102

if.then209:                                       ; preds = %for.body202
  call void @llvm.dbg.declare(metadata i32* %id210, metadata !8103, metadata !DIExpression()), !dbg !8105
  %182 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8106
  %begin211 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %182, i32 0, i32 1, !dbg !8107
  %183 = load i32*, i32** %begin211, align 8, !dbg !8107
  %184 = load i32, i32* %regno204, align 4, !dbg !8108
  %idxprom212 = zext i32 %184 to i64, !dbg !8106
  %arrayidx213 = getelementptr inbounds i32, i32* %183, i64 %idxprom212, !dbg !8106
  %185 = load i32, i32* %arrayidx213, align 4, !dbg !8106
  %186 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8109
  %count214 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %186, i32 0, i32 2, !dbg !8110
  %187 = load i32*, i32** %count214, align 8, !dbg !8110
  %188 = load i32, i32* %regno204, align 4, !dbg !8111
  %idxprom215 = zext i32 %188 to i64, !dbg !8109
  %arrayidx216 = getelementptr inbounds i32, i32* %187, i64 %idxprom215, !dbg !8109
  %189 = load i32, i32* %arrayidx216, align 4, !dbg !8112
  %inc217 = add i32 %189, 1, !dbg !8112
  store i32 %inc217, i32* %arrayidx216, align 4, !dbg !8112
  %add218 = add i32 %185, %189, !dbg !8113
  store i32 %add218, i32* %id210, align 4, !dbg !8105
  %190 = load i32, i32* %id210, align 4, !dbg !8114
  %191 = load %union.df_ref_d*, %union.df_ref_d** %ref203, align 8, !dbg !8115
  %base219 = bitcast %union.df_ref_d* %191 to %struct.df_base_ref*, !dbg !8115
  %id220 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base219, i32 0, i32 7, !dbg !8115
  store i32 %190, i32* %id220, align 4, !dbg !8116
  %192 = load %union.df_ref_d*, %union.df_ref_d** %ref203, align 8, !dbg !8117
  %193 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8118
  %refs221 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %193, i32 0, i32 0, !dbg !8119
  %194 = load %union.df_ref_d**, %union.df_ref_d*** %refs221, align 8, !dbg !8119
  %195 = load i32, i32* %id210, align 4, !dbg !8120
  %idxprom222 = zext i32 %195 to i64, !dbg !8118
  %arrayidx223 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %194, i64 %idxprom222, !dbg !8118
  store %union.df_ref_d* %192, %union.df_ref_d** %arrayidx223, align 8, !dbg !8121
  br label %if.end224, !dbg !8122

if.end224:                                        ; preds = %if.then209, %for.body202
  br label %for.inc225, !dbg !8123

for.inc225:                                       ; preds = %if.end224
  %196 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8124
  %incdec.ptr226 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %196, i32 1, !dbg !8124
  store %union.df_ref_d** %incdec.ptr226, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8124
  br label %for.cond200, !dbg !8125, !llvm.loop !8126

for.end227:                                       ; preds = %for.cond200
  br label %if.end228, !dbg !8127

if.end228:                                        ; preds = %for.end227, %if.end196
  %197 = load %struct.basic_block_def*, %struct.basic_block_def** %bb152, align 8, !dbg !8128
  %il229 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %197, i32 0, i32 7, !dbg !8128
  %rtl230 = bitcast %union.basic_block_il_dependent* %il229 to %struct.rtl_bb_info**, !dbg !8128
  %198 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl230, align 8, !dbg !8128
  %head_231 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %198, i32 0, i32 0, !dbg !8128
  %199 = load %struct.rtx_def*, %struct.rtx_def** %head_231, align 8, !dbg !8128
  store %struct.rtx_def* %199, %struct.rtx_def** %insn166, align 8, !dbg !8128
  br label %for.cond232, !dbg !8128

for.cond232:                                      ; preds = %for.inc377, %if.end228
  %200 = load %struct.rtx_def*, %struct.rtx_def** %insn166, align 8, !dbg !8130
  %tobool233 = icmp ne %struct.rtx_def* %200, null, !dbg !8130
  br i1 %tobool233, label %land.rhs234, label %land.end244, !dbg !8130

land.rhs234:                                      ; preds = %for.cond232
  %201 = load %struct.rtx_def*, %struct.rtx_def** %insn166, align 8, !dbg !8130
  %202 = load %struct.basic_block_def*, %struct.basic_block_def** %bb152, align 8, !dbg !8130
  %il235 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %202, i32 0, i32 7, !dbg !8130
  %rtl236 = bitcast %union.basic_block_il_dependent* %il235 to %struct.rtl_bb_info**, !dbg !8130
  %203 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl236, align 8, !dbg !8130
  %end_237 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %203, i32 0, i32 1, !dbg !8130
  %204 = load %struct.rtx_def*, %struct.rtx_def** %end_237, align 8, !dbg !8130
  %u238 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1, !dbg !8130
  %fld239 = bitcast %union.u* %u238 to [1 x %union.rtunion_def]*, !dbg !8130
  %arrayidx240 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld239, i64 0, i64 2, !dbg !8130
  %rt_rtx241 = bitcast %union.rtunion_def* %arrayidx240 to %struct.rtx_def**, !dbg !8130
  %205 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx241, align 8, !dbg !8130
  %cmp242 = icmp ne %struct.rtx_def* %201, %205, !dbg !8130
  br label %land.end244

land.end244:                                      ; preds = %land.rhs234, %for.cond232
  %206 = phi i1 [ false, %for.cond232 ], [ %cmp242, %land.rhs234 ], !dbg !8132
  br i1 %206, label %for.body245, label %for.end382, !dbg !8128

for.body245:                                      ; preds = %land.end244
  %207 = load %struct.rtx_def*, %struct.rtx_def** %insn166, align 8, !dbg !8133
  %208 = bitcast %struct.rtx_def* %207 to i32*, !dbg !8133
  %bf.load246 = load i32, i32* %208, align 8, !dbg !8133
  %bf.clear247 = and i32 %bf.load246, 65535, !dbg !8133
  %cmp248 = icmp eq i32 %bf.clear247, 8, !dbg !8133
  br i1 %cmp248, label %if.then265, label %lor.lhs.false250, !dbg !8133

lor.lhs.false250:                                 ; preds = %for.body245
  %209 = load %struct.rtx_def*, %struct.rtx_def** %insn166, align 8, !dbg !8133
  %210 = bitcast %struct.rtx_def* %209 to i32*, !dbg !8133
  %bf.load251 = load i32, i32* %210, align 8, !dbg !8133
  %bf.clear252 = and i32 %bf.load251, 65535, !dbg !8133
  %cmp253 = icmp eq i32 %bf.clear252, 7, !dbg !8133
  br i1 %cmp253, label %if.then265, label %lor.lhs.false255, !dbg !8133

lor.lhs.false255:                                 ; preds = %lor.lhs.false250
  %211 = load %struct.rtx_def*, %struct.rtx_def** %insn166, align 8, !dbg !8133
  %212 = bitcast %struct.rtx_def* %211 to i32*, !dbg !8133
  %bf.load256 = load i32, i32* %212, align 8, !dbg !8133
  %bf.clear257 = and i32 %bf.load256, 65535, !dbg !8133
  %cmp258 = icmp eq i32 %bf.clear257, 9, !dbg !8133
  br i1 %cmp258, label %if.then265, label %lor.lhs.false260, !dbg !8133

lor.lhs.false260:                                 ; preds = %lor.lhs.false255
  %213 = load %struct.rtx_def*, %struct.rtx_def** %insn166, align 8, !dbg !8133
  %214 = bitcast %struct.rtx_def* %213 to i32*, !dbg !8133
  %bf.load261 = load i32, i32* %214, align 8, !dbg !8133
  %bf.clear262 = and i32 %bf.load261, 65535, !dbg !8133
  %cmp263 = icmp eq i32 %bf.clear262, 10, !dbg !8133
  br i1 %cmp263, label %if.then265, label %if.end376, !dbg !8136

if.then265:                                       ; preds = %lor.lhs.false260, %lor.lhs.false255, %lor.lhs.false250, %for.body245
  call void @llvm.dbg.declare(metadata i32* %uid266, metadata !8137, metadata !DIExpression()), !dbg !8139
  %215 = load %struct.rtx_def*, %struct.rtx_def** %insn166, align 8, !dbg !8140
  %u267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %215, i32 0, i32 1, !dbg !8140
  %fld268 = bitcast %union.u* %u267 to [1 x %union.rtunion_def]*, !dbg !8140
  %arrayidx269 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld268, i64 0, i64 0, !dbg !8140
  %rt_int270 = bitcast %union.rtunion_def* %arrayidx269 to i32*, !dbg !8140
  %216 = load i32, i32* %rt_int270, align 8, !dbg !8140
  store i32 %216, i32* %uid266, align 4, !dbg !8139
  %217 = load i8, i8* %include_defs.addr, align 1, !dbg !8141
  %tobool271 = icmp ne i8 %217, 0, !dbg !8141
  br i1 %tobool271, label %if.then272, label %if.end305, !dbg !8143

if.then272:                                       ; preds = %if.then265
  %218 = load %struct.df*, %struct.df** @df, align 8, !dbg !8144
  %insns273 = getelementptr inbounds %struct.df, %struct.df* %218, i32 0, i32 10, !dbg !8144
  %219 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns273, align 8, !dbg !8144
  %220 = load i32, i32* %uid266, align 4, !dbg !8144
  %idxprom274 = zext i32 %220 to i64, !dbg !8144
  %arrayidx275 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %219, i64 %idxprom274, !dbg !8144
  %221 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx275, align 8, !dbg !8144
  %defs276 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %221, i32 0, i32 1, !dbg !8144
  %222 = load %union.df_ref_d**, %union.df_ref_d*** %defs276, align 8, !dbg !8144
  store %union.df_ref_d** %222, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8146
  br label %for.cond277, !dbg !8147

for.cond277:                                      ; preds = %for.inc302, %if.then272
  %223 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8148
  %224 = load %union.df_ref_d*, %union.df_ref_d** %223, align 8, !dbg !8150
  %tobool278 = icmp ne %union.df_ref_d* %224, null, !dbg !8151
  br i1 %tobool278, label %for.body279, label %for.end304, !dbg !8151

for.body279:                                      ; preds = %for.cond277
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref280, metadata !8152, metadata !DIExpression()), !dbg !8154
  %225 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8155
  %226 = load %union.df_ref_d*, %union.df_ref_d** %225, align 8, !dbg !8156
  store %union.df_ref_d* %226, %union.df_ref_d** %ref280, align 8, !dbg !8154
  call void @llvm.dbg.declare(metadata i32* %regno281, metadata !8157, metadata !DIExpression()), !dbg !8158
  %227 = load %union.df_ref_d*, %union.df_ref_d** %ref280, align 8, !dbg !8159
  %base282 = bitcast %union.df_ref_d* %227 to %struct.df_base_ref*, !dbg !8159
  %regno283 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base282, i32 0, i32 6, !dbg !8159
  %228 = load i32, i32* %regno283, align 8, !dbg !8159
  store i32 %228, i32* %regno281, align 4, !dbg !8158
  %229 = load i32, i32* %regno281, align 4, !dbg !8160
  %230 = load i32, i32* %start, align 4, !dbg !8162
  %cmp284 = icmp uge i32 %229, %230, !dbg !8163
  br i1 %cmp284, label %if.then286, label %if.end301, !dbg !8164

if.then286:                                       ; preds = %for.body279
  call void @llvm.dbg.declare(metadata i32* %id287, metadata !8165, metadata !DIExpression()), !dbg !8167
  %231 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8168
  %begin288 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %231, i32 0, i32 1, !dbg !8169
  %232 = load i32*, i32** %begin288, align 8, !dbg !8169
  %233 = load i32, i32* %regno281, align 4, !dbg !8170
  %idxprom289 = zext i32 %233 to i64, !dbg !8168
  %arrayidx290 = getelementptr inbounds i32, i32* %232, i64 %idxprom289, !dbg !8168
  %234 = load i32, i32* %arrayidx290, align 4, !dbg !8168
  %235 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8171
  %count291 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %235, i32 0, i32 2, !dbg !8172
  %236 = load i32*, i32** %count291, align 8, !dbg !8172
  %237 = load i32, i32* %regno281, align 4, !dbg !8173
  %idxprom292 = zext i32 %237 to i64, !dbg !8171
  %arrayidx293 = getelementptr inbounds i32, i32* %236, i64 %idxprom292, !dbg !8171
  %238 = load i32, i32* %arrayidx293, align 4, !dbg !8174
  %inc294 = add i32 %238, 1, !dbg !8174
  store i32 %inc294, i32* %arrayidx293, align 4, !dbg !8174
  %add295 = add i32 %234, %238, !dbg !8175
  store i32 %add295, i32* %id287, align 4, !dbg !8167
  %239 = load i32, i32* %id287, align 4, !dbg !8176
  %240 = load %union.df_ref_d*, %union.df_ref_d** %ref280, align 8, !dbg !8177
  %base296 = bitcast %union.df_ref_d* %240 to %struct.df_base_ref*, !dbg !8177
  %id297 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base296, i32 0, i32 7, !dbg !8177
  store i32 %239, i32* %id297, align 4, !dbg !8178
  %241 = load %union.df_ref_d*, %union.df_ref_d** %ref280, align 8, !dbg !8179
  %242 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8180
  %refs298 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %242, i32 0, i32 0, !dbg !8181
  %243 = load %union.df_ref_d**, %union.df_ref_d*** %refs298, align 8, !dbg !8181
  %244 = load i32, i32* %id287, align 4, !dbg !8182
  %idxprom299 = zext i32 %244 to i64, !dbg !8180
  %arrayidx300 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %243, i64 %idxprom299, !dbg !8180
  store %union.df_ref_d* %241, %union.df_ref_d** %arrayidx300, align 8, !dbg !8183
  br label %if.end301, !dbg !8184

if.end301:                                        ; preds = %if.then286, %for.body279
  br label %for.inc302, !dbg !8185

for.inc302:                                       ; preds = %if.end301
  %245 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8186
  %incdec.ptr303 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %245, i32 1, !dbg !8186
  store %union.df_ref_d** %incdec.ptr303, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8186
  br label %for.cond277, !dbg !8187, !llvm.loop !8188

for.end304:                                       ; preds = %for.cond277
  br label %if.end305, !dbg !8189

if.end305:                                        ; preds = %for.end304, %if.then265
  %246 = load i8, i8* %include_uses.addr, align 1, !dbg !8190
  %tobool306 = icmp ne i8 %246, 0, !dbg !8190
  br i1 %tobool306, label %if.then307, label %if.end340, !dbg !8192

if.then307:                                       ; preds = %if.end305
  %247 = load %struct.df*, %struct.df** @df, align 8, !dbg !8193
  %insns308 = getelementptr inbounds %struct.df, %struct.df* %247, i32 0, i32 10, !dbg !8193
  %248 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns308, align 8, !dbg !8193
  %249 = load i32, i32* %uid266, align 4, !dbg !8193
  %idxprom309 = zext i32 %249 to i64, !dbg !8193
  %arrayidx310 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %248, i64 %idxprom309, !dbg !8193
  %250 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx310, align 8, !dbg !8193
  %uses311 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %250, i32 0, i32 2, !dbg !8193
  %251 = load %union.df_ref_d**, %union.df_ref_d*** %uses311, align 8, !dbg !8193
  store %union.df_ref_d** %251, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8195
  br label %for.cond312, !dbg !8196

for.cond312:                                      ; preds = %for.inc337, %if.then307
  %252 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8197
  %253 = load %union.df_ref_d*, %union.df_ref_d** %252, align 8, !dbg !8199
  %tobool313 = icmp ne %union.df_ref_d* %253, null, !dbg !8200
  br i1 %tobool313, label %for.body314, label %for.end339, !dbg !8200

for.body314:                                      ; preds = %for.cond312
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref315, metadata !8201, metadata !DIExpression()), !dbg !8203
  %254 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8204
  %255 = load %union.df_ref_d*, %union.df_ref_d** %254, align 8, !dbg !8205
  store %union.df_ref_d* %255, %union.df_ref_d** %ref315, align 8, !dbg !8203
  call void @llvm.dbg.declare(metadata i32* %regno316, metadata !8206, metadata !DIExpression()), !dbg !8207
  %256 = load %union.df_ref_d*, %union.df_ref_d** %ref315, align 8, !dbg !8208
  %base317 = bitcast %union.df_ref_d* %256 to %struct.df_base_ref*, !dbg !8208
  %regno318 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base317, i32 0, i32 6, !dbg !8208
  %257 = load i32, i32* %regno318, align 8, !dbg !8208
  store i32 %257, i32* %regno316, align 4, !dbg !8207
  %258 = load i32, i32* %regno316, align 4, !dbg !8209
  %259 = load i32, i32* %start, align 4, !dbg !8211
  %cmp319 = icmp uge i32 %258, %259, !dbg !8212
  br i1 %cmp319, label %if.then321, label %if.end336, !dbg !8213

if.then321:                                       ; preds = %for.body314
  call void @llvm.dbg.declare(metadata i32* %id322, metadata !8214, metadata !DIExpression()), !dbg !8216
  %260 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8217
  %begin323 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %260, i32 0, i32 1, !dbg !8218
  %261 = load i32*, i32** %begin323, align 8, !dbg !8218
  %262 = load i32, i32* %regno316, align 4, !dbg !8219
  %idxprom324 = zext i32 %262 to i64, !dbg !8217
  %arrayidx325 = getelementptr inbounds i32, i32* %261, i64 %idxprom324, !dbg !8217
  %263 = load i32, i32* %arrayidx325, align 4, !dbg !8217
  %264 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8220
  %count326 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %264, i32 0, i32 2, !dbg !8221
  %265 = load i32*, i32** %count326, align 8, !dbg !8221
  %266 = load i32, i32* %regno316, align 4, !dbg !8222
  %idxprom327 = zext i32 %266 to i64, !dbg !8220
  %arrayidx328 = getelementptr inbounds i32, i32* %265, i64 %idxprom327, !dbg !8220
  %267 = load i32, i32* %arrayidx328, align 4, !dbg !8223
  %inc329 = add i32 %267, 1, !dbg !8223
  store i32 %inc329, i32* %arrayidx328, align 4, !dbg !8223
  %add330 = add i32 %263, %267, !dbg !8224
  store i32 %add330, i32* %id322, align 4, !dbg !8216
  %268 = load i32, i32* %id322, align 4, !dbg !8225
  %269 = load %union.df_ref_d*, %union.df_ref_d** %ref315, align 8, !dbg !8226
  %base331 = bitcast %union.df_ref_d* %269 to %struct.df_base_ref*, !dbg !8226
  %id332 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base331, i32 0, i32 7, !dbg !8226
  store i32 %268, i32* %id332, align 4, !dbg !8227
  %270 = load %union.df_ref_d*, %union.df_ref_d** %ref315, align 8, !dbg !8228
  %271 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8229
  %refs333 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %271, i32 0, i32 0, !dbg !8230
  %272 = load %union.df_ref_d**, %union.df_ref_d*** %refs333, align 8, !dbg !8230
  %273 = load i32, i32* %id322, align 4, !dbg !8231
  %idxprom334 = zext i32 %273 to i64, !dbg !8229
  %arrayidx335 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %272, i64 %idxprom334, !dbg !8229
  store %union.df_ref_d* %270, %union.df_ref_d** %arrayidx335, align 8, !dbg !8232
  br label %if.end336, !dbg !8233

if.end336:                                        ; preds = %if.then321, %for.body314
  br label %for.inc337, !dbg !8234

for.inc337:                                       ; preds = %if.end336
  %274 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8235
  %incdec.ptr338 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %274, i32 1, !dbg !8235
  store %union.df_ref_d** %incdec.ptr338, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8235
  br label %for.cond312, !dbg !8236, !llvm.loop !8237

for.end339:                                       ; preds = %for.cond312
  br label %if.end340, !dbg !8238

if.end340:                                        ; preds = %for.end339, %if.end305
  %275 = load i8, i8* %include_eq_uses.addr, align 1, !dbg !8239
  %tobool341 = icmp ne i8 %275, 0, !dbg !8239
  br i1 %tobool341, label %if.then342, label %if.end375, !dbg !8241

if.then342:                                       ; preds = %if.end340
  %276 = load %struct.df*, %struct.df** @df, align 8, !dbg !8242
  %insns343 = getelementptr inbounds %struct.df, %struct.df* %276, i32 0, i32 10, !dbg !8242
  %277 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns343, align 8, !dbg !8242
  %278 = load i32, i32* %uid266, align 4, !dbg !8242
  %idxprom344 = zext i32 %278 to i64, !dbg !8242
  %arrayidx345 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %277, i64 %idxprom344, !dbg !8242
  %279 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx345, align 8, !dbg !8242
  %eq_uses346 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %279, i32 0, i32 3, !dbg !8242
  %280 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses346, align 8, !dbg !8242
  store %union.df_ref_d** %280, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8244
  br label %for.cond347, !dbg !8245

for.cond347:                                      ; preds = %for.inc372, %if.then342
  %281 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8246
  %282 = load %union.df_ref_d*, %union.df_ref_d** %281, align 8, !dbg !8248
  %tobool348 = icmp ne %union.df_ref_d* %282, null, !dbg !8249
  br i1 %tobool348, label %for.body349, label %for.end374, !dbg !8249

for.body349:                                      ; preds = %for.cond347
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref350, metadata !8250, metadata !DIExpression()), !dbg !8252
  %283 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8253
  %284 = load %union.df_ref_d*, %union.df_ref_d** %283, align 8, !dbg !8254
  store %union.df_ref_d* %284, %union.df_ref_d** %ref350, align 8, !dbg !8252
  call void @llvm.dbg.declare(metadata i32* %regno351, metadata !8255, metadata !DIExpression()), !dbg !8256
  %285 = load %union.df_ref_d*, %union.df_ref_d** %ref350, align 8, !dbg !8257
  %base352 = bitcast %union.df_ref_d* %285 to %struct.df_base_ref*, !dbg !8257
  %regno353 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base352, i32 0, i32 6, !dbg !8257
  %286 = load i32, i32* %regno353, align 8, !dbg !8257
  store i32 %286, i32* %regno351, align 4, !dbg !8256
  %287 = load i32, i32* %regno351, align 4, !dbg !8258
  %288 = load i32, i32* %start, align 4, !dbg !8260
  %cmp354 = icmp uge i32 %287, %288, !dbg !8261
  br i1 %cmp354, label %if.then356, label %if.end371, !dbg !8262

if.then356:                                       ; preds = %for.body349
  call void @llvm.dbg.declare(metadata i32* %id357, metadata !8263, metadata !DIExpression()), !dbg !8265
  %289 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8266
  %begin358 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %289, i32 0, i32 1, !dbg !8267
  %290 = load i32*, i32** %begin358, align 8, !dbg !8267
  %291 = load i32, i32* %regno351, align 4, !dbg !8268
  %idxprom359 = zext i32 %291 to i64, !dbg !8266
  %arrayidx360 = getelementptr inbounds i32, i32* %290, i64 %idxprom359, !dbg !8266
  %292 = load i32, i32* %arrayidx360, align 4, !dbg !8266
  %293 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8269
  %count361 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %293, i32 0, i32 2, !dbg !8270
  %294 = load i32*, i32** %count361, align 8, !dbg !8270
  %295 = load i32, i32* %regno351, align 4, !dbg !8271
  %idxprom362 = zext i32 %295 to i64, !dbg !8269
  %arrayidx363 = getelementptr inbounds i32, i32* %294, i64 %idxprom362, !dbg !8269
  %296 = load i32, i32* %arrayidx363, align 4, !dbg !8272
  %inc364 = add i32 %296, 1, !dbg !8272
  store i32 %inc364, i32* %arrayidx363, align 4, !dbg !8272
  %add365 = add i32 %292, %296, !dbg !8273
  store i32 %add365, i32* %id357, align 4, !dbg !8265
  %297 = load i32, i32* %id357, align 4, !dbg !8274
  %298 = load %union.df_ref_d*, %union.df_ref_d** %ref350, align 8, !dbg !8275
  %base366 = bitcast %union.df_ref_d* %298 to %struct.df_base_ref*, !dbg !8275
  %id367 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base366, i32 0, i32 7, !dbg !8275
  store i32 %297, i32* %id367, align 4, !dbg !8276
  %299 = load %union.df_ref_d*, %union.df_ref_d** %ref350, align 8, !dbg !8277
  %300 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8278
  %refs368 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %300, i32 0, i32 0, !dbg !8279
  %301 = load %union.df_ref_d**, %union.df_ref_d*** %refs368, align 8, !dbg !8279
  %302 = load i32, i32* %id357, align 4, !dbg !8280
  %idxprom369 = zext i32 %302 to i64, !dbg !8278
  %arrayidx370 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %301, i64 %idxprom369, !dbg !8278
  store %union.df_ref_d* %299, %union.df_ref_d** %arrayidx370, align 8, !dbg !8281
  br label %if.end371, !dbg !8282

if.end371:                                        ; preds = %if.then356, %for.body349
  br label %for.inc372, !dbg !8283

for.inc372:                                       ; preds = %if.end371
  %303 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8284
  %incdec.ptr373 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %303, i32 1, !dbg !8284
  store %union.df_ref_d** %incdec.ptr373, %union.df_ref_d*** %ref_rec167, align 8, !dbg !8284
  br label %for.cond347, !dbg !8285, !llvm.loop !8286

for.end374:                                       ; preds = %for.cond347
  br label %if.end375, !dbg !8287

if.end375:                                        ; preds = %for.end374, %if.end340
  br label %if.end376, !dbg !8288

if.end376:                                        ; preds = %if.end375, %lor.lhs.false260
  br label %for.inc377, !dbg !8289

for.inc377:                                       ; preds = %if.end376
  %304 = load %struct.rtx_def*, %struct.rtx_def** %insn166, align 8, !dbg !8130
  %u378 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %304, i32 0, i32 1, !dbg !8130
  %fld379 = bitcast %union.u* %u378 to [1 x %union.rtunion_def]*, !dbg !8130
  %arrayidx380 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld379, i64 0, i64 2, !dbg !8130
  %rt_rtx381 = bitcast %union.rtunion_def* %arrayidx380 to %struct.rtx_def**, !dbg !8130
  %305 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx381, align 8, !dbg !8130
  store %struct.rtx_def* %305, %struct.rtx_def** %insn166, align 8, !dbg !8130
  br label %for.cond232, !dbg !8130, !llvm.loop !8290

for.end382:                                       ; preds = %land.end244
  br label %for.inc383, !dbg !8292

for.inc383:                                       ; preds = %for.end382
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !8018
  br label %for.cond148, !dbg !8018, !llvm.loop !8293

for.end384:                                       ; preds = %for.cond148
  %306 = load i32, i32* %offset, align 4, !dbg !8295
  %307 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8296
  %table_size = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %307, i32 0, i32 4, !dbg !8297
  store i32 %306, i32* %table_size, align 4, !dbg !8298
  ret void, !dbg !8299
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_reorganize_refs_by_reg_by_reg(%struct.df_ref_info* %ref_info, i8 zeroext %include_defs, i8 zeroext %include_uses, i8 zeroext %include_eq_uses) #0 !dbg !8300 {
entry:
  %ref_info.addr = alloca %struct.df_ref_info*, align 8
  %include_defs.addr = alloca i8, align 1
  %include_uses.addr = alloca i8, align 1
  %include_eq_uses.addr = alloca i8, align 1
  %m = alloca i32, align 4
  %regno = alloca i32, align 4
  %offset = alloca i32, align 4
  %start = alloca i32, align 4
  %count1 = alloca i32, align 4
  %ref = alloca %union.df_ref_d*, align 8
  %ref16 = alloca %union.df_ref_d*, align 8
  %ref42 = alloca %union.df_ref_d*, align 8
  store %struct.df_ref_info* %ref_info, %struct.df_ref_info** %ref_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_ref_info** %ref_info.addr, metadata !8301, metadata !DIExpression()), !dbg !8302
  store i8 %include_defs, i8* %include_defs.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %include_defs.addr, metadata !8303, metadata !DIExpression()), !dbg !8304
  store i8 %include_uses, i8* %include_uses.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %include_uses.addr, metadata !8305, metadata !DIExpression()), !dbg !8306
  store i8 %include_eq_uses, i8* %include_eq_uses.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %include_eq_uses.addr, metadata !8307, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.declare(metadata i32* %m, metadata !8309, metadata !DIExpression()), !dbg !8310
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !8311
  %regs_inited = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 9, !dbg !8312
  %1 = load i32, i32* %regs_inited, align 4, !dbg !8312
  store i32 %1, i32* %m, align 4, !dbg !8310
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !8313, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !8315, metadata !DIExpression()), !dbg !8316
  store i32 0, i32* %offset, align 4, !dbg !8316
  call void @llvm.dbg.declare(metadata i32* %start, metadata !8317, metadata !DIExpression()), !dbg !8318
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !8319
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 27, !dbg !8321
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !8321
  %bf.cast = sext i8 %bf.load to i32, !dbg !8321
  %and = and i32 %bf.cast, 2, !dbg !8322
  %tobool = icmp ne i32 %and, 0, !dbg !8322
  br i1 %tobool, label %if.then, label %if.else, !dbg !8323

if.then:                                          ; preds = %entry
  store i32 53, i32* %start, align 4, !dbg !8324
  %3 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8326
  %begin = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %3, i32 0, i32 1, !dbg !8327
  %4 = load i32*, i32** %begin, align 8, !dbg !8327
  %5 = bitcast i32* %4 to i8*, !dbg !8328
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 212, i1 false), !dbg !8328
  %6 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8329
  %count = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %6, i32 0, i32 2, !dbg !8330
  %7 = load i32*, i32** %count, align 8, !dbg !8330
  %8 = bitcast i32* %7 to i8*, !dbg !8331
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 212, i1 false), !dbg !8331
  br label %if.end, !dbg !8332

if.else:                                          ; preds = %entry
  store i32 0, i32* %start, align 4, !dbg !8333
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i8, i8* %include_defs.addr, align 1, !dbg !8334
  %10 = load i8, i8* %include_uses.addr, align 1, !dbg !8335
  %11 = load i8, i8* %include_eq_uses.addr, align 1, !dbg !8336
  %call = call i32 @df_count_refs(i8 zeroext %9, i8 zeroext %10, i8 zeroext %11), !dbg !8337
  %12 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8338
  %total_size = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %12, i32 0, i32 5, !dbg !8339
  store i32 %call, i32* %total_size, align 8, !dbg !8340
  %13 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8341
  call void @df_check_and_grow_ref_info(%struct.df_ref_info* %13, i32 1), !dbg !8342
  %14 = load i32, i32* %start, align 4, !dbg !8343
  store i32 %14, i32* %regno, align 4, !dbg !8345
  br label %for.cond, !dbg !8346

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load i32, i32* %regno, align 4, !dbg !8347
  %16 = load i32, i32* %m, align 4, !dbg !8349
  %cmp = icmp ult i32 %15, %16, !dbg !8350
  br i1 %cmp, label %for.body, label %for.end, !dbg !8351

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %count1, metadata !8352, metadata !DIExpression()), !dbg !8354
  store i32 0, i32* %count1, align 4, !dbg !8354
  %17 = load i32, i32* %offset, align 4, !dbg !8355
  %18 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8356
  %begin2 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %18, i32 0, i32 1, !dbg !8357
  %19 = load i32*, i32** %begin2, align 8, !dbg !8357
  %20 = load i32, i32* %regno, align 4, !dbg !8358
  %idxprom = zext i32 %20 to i64, !dbg !8356
  %arrayidx = getelementptr inbounds i32, i32* %19, i64 %idxprom, !dbg !8356
  store i32 %17, i32* %arrayidx, align 4, !dbg !8359
  %21 = load i8, i8* %include_defs.addr, align 1, !dbg !8360
  %tobool3 = icmp ne i8 %21, 0, !dbg !8360
  br i1 %tobool3, label %if.then4, label %if.end13, !dbg !8362

if.then4:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref, metadata !8363, metadata !DIExpression()), !dbg !8365
  %22 = load %struct.df*, %struct.df** @df, align 8, !dbg !8366
  %def_regs = getelementptr inbounds %struct.df, %struct.df* %22, i32 0, i32 5, !dbg !8366
  %23 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs, align 8, !dbg !8366
  %24 = load i32, i32* %regno, align 4, !dbg !8366
  %idxprom5 = zext i32 %24 to i64, !dbg !8366
  %arrayidx6 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %23, i64 %idxprom5, !dbg !8366
  %25 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx6, align 8, !dbg !8366
  %reg_chain = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %25, i32 0, i32 0, !dbg !8366
  %26 = load %union.df_ref_d*, %union.df_ref_d** %reg_chain, align 8, !dbg !8366
  store %union.df_ref_d* %26, %union.df_ref_d** %ref, align 8, !dbg !8365
  br label %while.cond, !dbg !8367

while.cond:                                       ; preds = %cond.end, %if.then4
  %27 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !8368
  %tobool7 = icmp ne %union.df_ref_d* %27, null, !dbg !8367
  br i1 %tobool7, label %while.body, label %while.end, !dbg !8367

while.body:                                       ; preds = %while.cond
  %28 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !8369
  %29 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8371
  %refs = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %29, i32 0, i32 0, !dbg !8372
  %30 = load %union.df_ref_d**, %union.df_ref_d*** %refs, align 8, !dbg !8372
  %31 = load i32, i32* %offset, align 4, !dbg !8373
  %idxprom8 = zext i32 %31 to i64, !dbg !8371
  %arrayidx9 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %30, i64 %idxprom8, !dbg !8371
  store %union.df_ref_d* %28, %union.df_ref_d** %arrayidx9, align 8, !dbg !8374
  %32 = load i32, i32* %offset, align 4, !dbg !8375
  %inc = add i32 %32, 1, !dbg !8375
  store i32 %inc, i32* %offset, align 4, !dbg !8375
  %33 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !8376
  %base = bitcast %union.df_ref_d* %33 to %struct.df_base_ref*, !dbg !8376
  %id = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 7, !dbg !8376
  store i32 %32, i32* %id, align 4, !dbg !8377
  %34 = load i32, i32* %count1, align 4, !dbg !8378
  %inc10 = add nsw i32 %34, 1, !dbg !8378
  store i32 %inc10, i32* %count1, align 4, !dbg !8378
  %35 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !8379
  %base11 = bitcast %union.df_ref_d* %35 to %struct.df_base_ref*, !dbg !8379
  %next_reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base11, i32 0, i32 4, !dbg !8379
  %36 = load %union.df_ref_d*, %union.df_ref_d** %next_reg, align 8, !dbg !8379
  store %union.df_ref_d* %36, %union.df_ref_d** %ref, align 8, !dbg !8380
  %37 = load i32, i32* %offset, align 4, !dbg !8381
  %38 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8381
  %refs_size = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %38, i32 0, i32 3, !dbg !8381
  %39 = load i32, i32* %refs_size, align 8, !dbg !8381
  %cmp12 = icmp ult i32 %37, %39, !dbg !8381
  br i1 %cmp12, label %cond.false, label %cond.true, !dbg !8381

cond.true:                                        ; preds = %while.body
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 1573, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !8381
  br label %cond.end, !dbg !8381

cond.false:                                       ; preds = %while.body
  br label %cond.end, !dbg !8381

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !8381
  br label %while.cond, !dbg !8367, !llvm.loop !8382

while.end:                                        ; preds = %while.cond
  br label %if.end13, !dbg !8384

if.end13:                                         ; preds = %while.end, %for.body
  %40 = load i8, i8* %include_uses.addr, align 1, !dbg !8385
  %tobool14 = icmp ne i8 %40, 0, !dbg !8385
  br i1 %tobool14, label %if.then15, label %if.end39, !dbg !8387

if.then15:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref16, metadata !8388, metadata !DIExpression()), !dbg !8390
  %41 = load %struct.df*, %struct.df** @df, align 8, !dbg !8391
  %use_regs = getelementptr inbounds %struct.df, %struct.df* %41, i32 0, i32 6, !dbg !8391
  %42 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs, align 8, !dbg !8391
  %43 = load i32, i32* %regno, align 4, !dbg !8391
  %idxprom17 = zext i32 %43 to i64, !dbg !8391
  %arrayidx18 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %42, i64 %idxprom17, !dbg !8391
  %44 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx18, align 8, !dbg !8391
  %reg_chain19 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %44, i32 0, i32 0, !dbg !8391
  %45 = load %union.df_ref_d*, %union.df_ref_d** %reg_chain19, align 8, !dbg !8391
  store %union.df_ref_d* %45, %union.df_ref_d** %ref16, align 8, !dbg !8390
  br label %while.cond20, !dbg !8392

while.cond20:                                     ; preds = %cond.end36, %if.then15
  %46 = load %union.df_ref_d*, %union.df_ref_d** %ref16, align 8, !dbg !8393
  %tobool21 = icmp ne %union.df_ref_d* %46, null, !dbg !8392
  br i1 %tobool21, label %while.body22, label %while.end38, !dbg !8392

while.body22:                                     ; preds = %while.cond20
  %47 = load %union.df_ref_d*, %union.df_ref_d** %ref16, align 8, !dbg !8394
  %48 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8396
  %refs23 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %48, i32 0, i32 0, !dbg !8397
  %49 = load %union.df_ref_d**, %union.df_ref_d*** %refs23, align 8, !dbg !8397
  %50 = load i32, i32* %offset, align 4, !dbg !8398
  %idxprom24 = zext i32 %50 to i64, !dbg !8396
  %arrayidx25 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %49, i64 %idxprom24, !dbg !8396
  store %union.df_ref_d* %47, %union.df_ref_d** %arrayidx25, align 8, !dbg !8399
  %51 = load i32, i32* %offset, align 4, !dbg !8400
  %inc26 = add i32 %51, 1, !dbg !8400
  store i32 %inc26, i32* %offset, align 4, !dbg !8400
  %52 = load %union.df_ref_d*, %union.df_ref_d** %ref16, align 8, !dbg !8401
  %base27 = bitcast %union.df_ref_d* %52 to %struct.df_base_ref*, !dbg !8401
  %id28 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base27, i32 0, i32 7, !dbg !8401
  store i32 %51, i32* %id28, align 4, !dbg !8402
  %53 = load i32, i32* %count1, align 4, !dbg !8403
  %inc29 = add nsw i32 %53, 1, !dbg !8403
  store i32 %inc29, i32* %count1, align 4, !dbg !8403
  %54 = load %union.df_ref_d*, %union.df_ref_d** %ref16, align 8, !dbg !8404
  %base30 = bitcast %union.df_ref_d* %54 to %struct.df_base_ref*, !dbg !8404
  %next_reg31 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base30, i32 0, i32 4, !dbg !8404
  %55 = load %union.df_ref_d*, %union.df_ref_d** %next_reg31, align 8, !dbg !8404
  store %union.df_ref_d* %55, %union.df_ref_d** %ref16, align 8, !dbg !8405
  %56 = load i32, i32* %offset, align 4, !dbg !8406
  %57 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8406
  %refs_size32 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %57, i32 0, i32 3, !dbg !8406
  %58 = load i32, i32* %refs_size32, align 8, !dbg !8406
  %cmp33 = icmp ult i32 %56, %58, !dbg !8406
  br i1 %cmp33, label %cond.false35, label %cond.true34, !dbg !8406

cond.true34:                                      ; preds = %while.body22
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 1585, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !8406
  br label %cond.end36, !dbg !8406

cond.false35:                                     ; preds = %while.body22
  br label %cond.end36, !dbg !8406

cond.end36:                                       ; preds = %cond.false35, %cond.true34
  %cond37 = phi i32 [ 0, %cond.true34 ], [ 0, %cond.false35 ], !dbg !8406
  br label %while.cond20, !dbg !8392, !llvm.loop !8407

while.end38:                                      ; preds = %while.cond20
  br label %if.end39, !dbg !8409

if.end39:                                         ; preds = %while.end38, %if.end13
  %59 = load i8, i8* %include_eq_uses.addr, align 1, !dbg !8410
  %tobool40 = icmp ne i8 %59, 0, !dbg !8410
  br i1 %tobool40, label %if.then41, label %if.end65, !dbg !8412

if.then41:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref42, metadata !8413, metadata !DIExpression()), !dbg !8415
  %60 = load %struct.df*, %struct.df** @df, align 8, !dbg !8416
  %eq_use_regs = getelementptr inbounds %struct.df, %struct.df* %60, i32 0, i32 7, !dbg !8416
  %61 = load %struct.df_reg_info**, %struct.df_reg_info*** %eq_use_regs, align 8, !dbg !8416
  %62 = load i32, i32* %regno, align 4, !dbg !8416
  %idxprom43 = zext i32 %62 to i64, !dbg !8416
  %arrayidx44 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %61, i64 %idxprom43, !dbg !8416
  %63 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx44, align 8, !dbg !8416
  %reg_chain45 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %63, i32 0, i32 0, !dbg !8416
  %64 = load %union.df_ref_d*, %union.df_ref_d** %reg_chain45, align 8, !dbg !8416
  store %union.df_ref_d* %64, %union.df_ref_d** %ref42, align 8, !dbg !8415
  br label %while.cond46, !dbg !8417

while.cond46:                                     ; preds = %cond.end62, %if.then41
  %65 = load %union.df_ref_d*, %union.df_ref_d** %ref42, align 8, !dbg !8418
  %tobool47 = icmp ne %union.df_ref_d* %65, null, !dbg !8417
  br i1 %tobool47, label %while.body48, label %while.end64, !dbg !8417

while.body48:                                     ; preds = %while.cond46
  %66 = load %union.df_ref_d*, %union.df_ref_d** %ref42, align 8, !dbg !8419
  %67 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8421
  %refs49 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %67, i32 0, i32 0, !dbg !8422
  %68 = load %union.df_ref_d**, %union.df_ref_d*** %refs49, align 8, !dbg !8422
  %69 = load i32, i32* %offset, align 4, !dbg !8423
  %idxprom50 = zext i32 %69 to i64, !dbg !8421
  %arrayidx51 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %68, i64 %idxprom50, !dbg !8421
  store %union.df_ref_d* %66, %union.df_ref_d** %arrayidx51, align 8, !dbg !8424
  %70 = load i32, i32* %offset, align 4, !dbg !8425
  %inc52 = add i32 %70, 1, !dbg !8425
  store i32 %inc52, i32* %offset, align 4, !dbg !8425
  %71 = load %union.df_ref_d*, %union.df_ref_d** %ref42, align 8, !dbg !8426
  %base53 = bitcast %union.df_ref_d* %71 to %struct.df_base_ref*, !dbg !8426
  %id54 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base53, i32 0, i32 7, !dbg !8426
  store i32 %70, i32* %id54, align 4, !dbg !8427
  %72 = load i32, i32* %count1, align 4, !dbg !8428
  %inc55 = add nsw i32 %72, 1, !dbg !8428
  store i32 %inc55, i32* %count1, align 4, !dbg !8428
  %73 = load %union.df_ref_d*, %union.df_ref_d** %ref42, align 8, !dbg !8429
  %base56 = bitcast %union.df_ref_d* %73 to %struct.df_base_ref*, !dbg !8429
  %next_reg57 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base56, i32 0, i32 4, !dbg !8429
  %74 = load %union.df_ref_d*, %union.df_ref_d** %next_reg57, align 8, !dbg !8429
  store %union.df_ref_d* %74, %union.df_ref_d** %ref42, align 8, !dbg !8430
  %75 = load i32, i32* %offset, align 4, !dbg !8431
  %76 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8431
  %refs_size58 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %76, i32 0, i32 3, !dbg !8431
  %77 = load i32, i32* %refs_size58, align 8, !dbg !8431
  %cmp59 = icmp ult i32 %75, %77, !dbg !8431
  br i1 %cmp59, label %cond.false61, label %cond.true60, !dbg !8431

cond.true60:                                      ; preds = %while.body48
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 1597, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !8431
  br label %cond.end62, !dbg !8431

cond.false61:                                     ; preds = %while.body48
  br label %cond.end62, !dbg !8431

cond.end62:                                       ; preds = %cond.false61, %cond.true60
  %cond63 = phi i32 [ 0, %cond.true60 ], [ 0, %cond.false61 ], !dbg !8431
  br label %while.cond46, !dbg !8417, !llvm.loop !8432

while.end64:                                      ; preds = %while.cond46
  br label %if.end65, !dbg !8434

if.end65:                                         ; preds = %while.end64, %if.end39
  %78 = load i32, i32* %count1, align 4, !dbg !8435
  %79 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8436
  %count66 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %79, i32 0, i32 2, !dbg !8437
  %80 = load i32*, i32** %count66, align 8, !dbg !8437
  %81 = load i32, i32* %regno, align 4, !dbg !8438
  %idxprom67 = zext i32 %81 to i64, !dbg !8436
  %arrayidx68 = getelementptr inbounds i32, i32* %80, i64 %idxprom67, !dbg !8436
  store i32 %78, i32* %arrayidx68, align 4, !dbg !8439
  br label %for.inc, !dbg !8440

for.inc:                                          ; preds = %if.end65
  %82 = load i32, i32* %regno, align 4, !dbg !8441
  %inc69 = add i32 %82, 1, !dbg !8441
  store i32 %inc69, i32* %regno, align 4, !dbg !8441
  br label %for.cond, !dbg !8442, !llvm.loop !8443

for.end:                                          ; preds = %for.cond
  %83 = load i32, i32* %offset, align 4, !dbg !8445
  %84 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8446
  %table_size = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %84, i32 0, i32 4, !dbg !8447
  store i32 %83, i32* %table_size, align 4, !dbg !8448
  ret void, !dbg !8449
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @df_count_refs(i8 zeroext %include_defs, i8 zeroext %include_uses, i8 zeroext %include_eq_uses) #0 !dbg !8450 {
entry:
  %include_defs.addr = alloca i8, align 1
  %include_uses.addr = alloca i8, align 1
  %include_eq_uses.addr = alloca i8, align 1
  %regno = alloca i32, align 4
  %size = alloca i32, align 4
  %m = alloca i32, align 4
  store i8 %include_defs, i8* %include_defs.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %include_defs.addr, metadata !8453, metadata !DIExpression()), !dbg !8454
  store i8 %include_uses, i8* %include_uses.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %include_uses.addr, metadata !8455, metadata !DIExpression()), !dbg !8456
  store i8 %include_eq_uses, i8* %include_eq_uses.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %include_eq_uses.addr, metadata !8457, metadata !DIExpression()), !dbg !8458
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !8459, metadata !DIExpression()), !dbg !8460
  call void @llvm.dbg.declare(metadata i32* %size, metadata !8461, metadata !DIExpression()), !dbg !8462
  store i32 0, i32* %size, align 4, !dbg !8462
  call void @llvm.dbg.declare(metadata i32* %m, metadata !8463, metadata !DIExpression()), !dbg !8464
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !8465
  %regs_inited = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 9, !dbg !8466
  %1 = load i32, i32* %regs_inited, align 4, !dbg !8466
  store i32 %1, i32* %m, align 4, !dbg !8464
  store i32 0, i32* %regno, align 4, !dbg !8467
  br label %for.cond, !dbg !8469

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %regno, align 4, !dbg !8470
  %3 = load i32, i32* %m, align 4, !dbg !8472
  %cmp = icmp ult i32 %2, %3, !dbg !8473
  br i1 %cmp, label %for.body, label %for.end, !dbg !8474

for.body:                                         ; preds = %for.cond
  %4 = load i8, i8* %include_defs.addr, align 1, !dbg !8475
  %tobool = icmp ne i8 %4, 0, !dbg !8475
  br i1 %tobool, label %if.then, label %if.end, !dbg !8478

if.then:                                          ; preds = %for.body
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !8479
  %def_regs = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 5, !dbg !8479
  %6 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs, align 8, !dbg !8479
  %7 = load i32, i32* %regno, align 4, !dbg !8479
  %idxprom = zext i32 %7 to i64, !dbg !8479
  %arrayidx = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %6, i64 %idxprom, !dbg !8479
  %8 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx, align 8, !dbg !8479
  %n_refs = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %8, i32 0, i32 1, !dbg !8479
  %9 = load i32, i32* %n_refs, align 8, !dbg !8479
  %10 = load i32, i32* %size, align 4, !dbg !8480
  %add = add i32 %10, %9, !dbg !8480
  store i32 %add, i32* %size, align 4, !dbg !8480
  br label %if.end, !dbg !8481

if.end:                                           ; preds = %if.then, %for.body
  %11 = load i8, i8* %include_uses.addr, align 1, !dbg !8482
  %tobool1 = icmp ne i8 %11, 0, !dbg !8482
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !8484

if.then2:                                         ; preds = %if.end
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !8485
  %use_regs = getelementptr inbounds %struct.df, %struct.df* %12, i32 0, i32 6, !dbg !8485
  %13 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs, align 8, !dbg !8485
  %14 = load i32, i32* %regno, align 4, !dbg !8485
  %idxprom3 = zext i32 %14 to i64, !dbg !8485
  %arrayidx4 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %13, i64 %idxprom3, !dbg !8485
  %15 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx4, align 8, !dbg !8485
  %n_refs5 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %15, i32 0, i32 1, !dbg !8485
  %16 = load i32, i32* %n_refs5, align 8, !dbg !8485
  %17 = load i32, i32* %size, align 4, !dbg !8486
  %add6 = add i32 %17, %16, !dbg !8486
  store i32 %add6, i32* %size, align 4, !dbg !8486
  br label %if.end7, !dbg !8487

if.end7:                                          ; preds = %if.then2, %if.end
  %18 = load i8, i8* %include_eq_uses.addr, align 1, !dbg !8488
  %tobool8 = icmp ne i8 %18, 0, !dbg !8488
  br i1 %tobool8, label %if.then9, label %if.end14, !dbg !8490

if.then9:                                         ; preds = %if.end7
  %19 = load %struct.df*, %struct.df** @df, align 8, !dbg !8491
  %eq_use_regs = getelementptr inbounds %struct.df, %struct.df* %19, i32 0, i32 7, !dbg !8491
  %20 = load %struct.df_reg_info**, %struct.df_reg_info*** %eq_use_regs, align 8, !dbg !8491
  %21 = load i32, i32* %regno, align 4, !dbg !8491
  %idxprom10 = zext i32 %21 to i64, !dbg !8491
  %arrayidx11 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %20, i64 %idxprom10, !dbg !8491
  %22 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx11, align 8, !dbg !8491
  %n_refs12 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %22, i32 0, i32 1, !dbg !8491
  %23 = load i32, i32* %n_refs12, align 8, !dbg !8491
  %24 = load i32, i32* %size, align 4, !dbg !8492
  %add13 = add i32 %24, %23, !dbg !8492
  store i32 %add13, i32* %size, align 4, !dbg !8492
  br label %if.end14, !dbg !8493

if.end14:                                         ; preds = %if.then9, %if.end7
  br label %for.inc, !dbg !8494

for.inc:                                          ; preds = %if.end14
  %25 = load i32, i32* %regno, align 4, !dbg !8495
  %inc = add i32 %25, 1, !dbg !8495
  store i32 %inc, i32* %regno, align 4, !dbg !8495
  br label %for.cond, !dbg !8496, !llvm.loop !8497

for.end:                                          ; preds = %for.cond
  %26 = load i32, i32* %size, align 4, !dbg !8499
  ret i32 %26, !dbg !8500
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_check_and_grow_ref_info(%struct.df_ref_info* %ref_info, i32 %bitmap_addend) #0 !dbg !8501 {
entry:
  %ref_info.addr = alloca %struct.df_ref_info*, align 8
  %bitmap_addend.addr = alloca i32, align 4
  %new_size = alloca i32, align 4
  store %struct.df_ref_info* %ref_info, %struct.df_ref_info** %ref_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_ref_info** %ref_info.addr, metadata !8504, metadata !DIExpression()), !dbg !8505
  store i32 %bitmap_addend, i32* %bitmap_addend.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bitmap_addend.addr, metadata !8506, metadata !DIExpression()), !dbg !8507
  %0 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8508
  %refs_size = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %0, i32 0, i32 3, !dbg !8510
  %1 = load i32, i32* %refs_size, align 8, !dbg !8510
  %2 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8511
  %total_size = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %2, i32 0, i32 5, !dbg !8512
  %3 = load i32, i32* %total_size, align 8, !dbg !8512
  %4 = load i32, i32* %bitmap_addend.addr, align 4, !dbg !8513
  %add = add i32 %3, %4, !dbg !8514
  %cmp = icmp ult i32 %1, %add, !dbg !8515
  br i1 %cmp, label %if.then, label %if.end, !dbg !8516

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %new_size, metadata !8517, metadata !DIExpression()), !dbg !8519
  %5 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8520
  %total_size1 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %5, i32 0, i32 5, !dbg !8521
  %6 = load i32, i32* %total_size1, align 8, !dbg !8521
  %7 = load i32, i32* %bitmap_addend.addr, align 4, !dbg !8522
  %add2 = add i32 %6, %7, !dbg !8523
  store i32 %add2, i32* %new_size, align 4, !dbg !8519
  %8 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8524
  %total_size3 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %8, i32 0, i32 5, !dbg !8525
  %9 = load i32, i32* %total_size3, align 8, !dbg !8525
  %div = udiv i32 %9, 4, !dbg !8526
  %10 = load i32, i32* %new_size, align 4, !dbg !8527
  %add4 = add i32 %10, %div, !dbg !8527
  store i32 %add4, i32* %new_size, align 4, !dbg !8527
  %11 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8528
  %12 = load i32, i32* %new_size, align 4, !dbg !8529
  call void @df_grow_ref_info(%struct.df_ref_info* %11, i32 %12), !dbg !8530
  br label %if.end, !dbg !8531

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8532
}

; Function Attrs: noinline nounwind uwtable
define internal %union.df_ref_d** @df_get_artificial_defs(i32 %bb_index) #0 !dbg !8533 {
entry:
  %bb_index.addr = alloca i32, align 4
  store i32 %bb_index, i32* %bb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bb_index.addr, metadata !8536, metadata !DIExpression()), !dbg !8537
  %0 = load i32, i32* %bb_index.addr, align 4, !dbg !8538
  %call = call %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %0), !dbg !8539
  %artificial_defs = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %call, i32 0, i32 0, !dbg !8540
  %1 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_defs, align 8, !dbg !8540
  ret %union.df_ref_d** %1, !dbg !8541
}

; Function Attrs: noinline nounwind uwtable
define internal %union.df_ref_d** @df_get_artificial_uses(i32 %bb_index) #0 !dbg !8542 {
entry:
  %bb_index.addr = alloca i32, align 4
  store i32 %bb_index, i32* %bb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bb_index.addr, metadata !8543, metadata !DIExpression()), !dbg !8544
  %0 = load i32, i32* %bb_index.addr, align 4, !dbg !8545
  %call = call %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %0), !dbg !8546
  %artificial_uses = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %call, i32 0, i32 1, !dbg !8547
  %1 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_uses, align 8, !dbg !8547
  ret %union.df_ref_d** %1, !dbg !8548
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_grow_ref_info(%struct.df_ref_info* %ref_info, i32 %new_size) #0 !dbg !8549 {
entry:
  %ref_info.addr = alloca %struct.df_ref_info*, align 8
  %new_size.addr = alloca i32, align 4
  store %struct.df_ref_info* %ref_info, %struct.df_ref_info** %ref_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_ref_info** %ref_info.addr, metadata !8550, metadata !DIExpression()), !dbg !8551
  store i32 %new_size, i32* %new_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_size.addr, metadata !8552, metadata !DIExpression()), !dbg !8553
  %0 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8554
  %refs_size = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %0, i32 0, i32 3, !dbg !8556
  %1 = load i32, i32* %refs_size, align 8, !dbg !8556
  %2 = load i32, i32* %new_size.addr, align 4, !dbg !8557
  %cmp = icmp ult i32 %1, %2, !dbg !8558
  br i1 %cmp, label %if.then, label %if.end, !dbg !8559

if.then:                                          ; preds = %entry
  %3 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8560
  %refs = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %3, i32 0, i32 0, !dbg !8560
  %4 = load %union.df_ref_d**, %union.df_ref_d*** %refs, align 8, !dbg !8560
  %5 = bitcast %union.df_ref_d** %4 to i8*, !dbg !8560
  %6 = load i32, i32* %new_size.addr, align 4, !dbg !8560
  %conv = zext i32 %6 to i64, !dbg !8560
  %mul = mul i64 8, %conv, !dbg !8560
  %call = call i8* @xrealloc(i8* %5, i64 %mul), !dbg !8560
  %7 = bitcast i8* %call to %union.df_ref_d**, !dbg !8560
  %8 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8562
  %refs1 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %8, i32 0, i32 0, !dbg !8563
  store %union.df_ref_d** %7, %union.df_ref_d*** %refs1, align 8, !dbg !8564
  %9 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8565
  %refs2 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %9, i32 0, i32 0, !dbg !8566
  %10 = load %union.df_ref_d**, %union.df_ref_d*** %refs2, align 8, !dbg !8566
  %11 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8567
  %refs_size3 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %11, i32 0, i32 3, !dbg !8568
  %12 = load i32, i32* %refs_size3, align 8, !dbg !8568
  %idx.ext = zext i32 %12 to i64, !dbg !8569
  %add.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %10, i64 %idx.ext, !dbg !8569
  %13 = bitcast %union.df_ref_d** %add.ptr to i8*, !dbg !8570
  %14 = load i32, i32* %new_size.addr, align 4, !dbg !8571
  %15 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8572
  %refs_size4 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %15, i32 0, i32 3, !dbg !8573
  %16 = load i32, i32* %refs_size4, align 8, !dbg !8573
  %sub = sub i32 %14, %16, !dbg !8574
  %conv5 = zext i32 %sub to i64, !dbg !8575
  %mul6 = mul i64 %conv5, 8, !dbg !8576
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 %mul6, i1 false), !dbg !8570
  %17 = load i32, i32* %new_size.addr, align 4, !dbg !8577
  %18 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8578
  %refs_size7 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %18, i32 0, i32 3, !dbg !8579
  store i32 %17, i32* %refs_size7, align 8, !dbg !8580
  br label %if.end, !dbg !8581

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8582
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @df_reorganize_refs_by_insn_bb(%struct.basic_block_def* %bb, i32 %offset, %struct.df_ref_info* %ref_info, i8 zeroext %include_defs, i8 zeroext %include_uses, i8 zeroext %include_eq_uses) #0 !dbg !8583 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %offset.addr = alloca i32, align 4
  %ref_info.addr = alloca %struct.df_ref_info*, align 8
  %include_defs.addr = alloca i8, align 1
  %include_uses.addr = alloca i8, align 1
  %include_eq_uses.addr = alloca i8, align 1
  %insn = alloca %struct.rtx_def*, align 8
  %uid = alloca i32, align 4
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !8586, metadata !DIExpression()), !dbg !8587
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !8588, metadata !DIExpression()), !dbg !8589
  store %struct.df_ref_info* %ref_info, %struct.df_ref_info** %ref_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_ref_info** %ref_info.addr, metadata !8590, metadata !DIExpression()), !dbg !8591
  store i8 %include_defs, i8* %include_defs.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %include_defs.addr, metadata !8592, metadata !DIExpression()), !dbg !8593
  store i8 %include_uses, i8* %include_uses.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %include_uses.addr, metadata !8594, metadata !DIExpression()), !dbg !8595
  store i8 %include_eq_uses, i8* %include_eq_uses.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %include_eq_uses.addr, metadata !8596, metadata !DIExpression()), !dbg !8597
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !8598, metadata !DIExpression()), !dbg !8599
  %0 = load i8, i8* %include_defs.addr, align 1, !dbg !8600
  %tobool = icmp ne i8 %0, 0, !dbg !8600
  br i1 %tobool, label %if.then, label %if.end, !dbg !8602

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %offset.addr, align 4, !dbg !8603
  %2 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8604
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !8605
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i32 0, i32 9, !dbg !8606
  %4 = load i32, i32* %index, align 8, !dbg !8606
  %call = call %union.df_ref_d** @df_get_artificial_defs(i32 %4), !dbg !8607
  %call1 = call i32 @df_add_refs_to_table(i32 %1, %struct.df_ref_info* %2, %union.df_ref_d** %call), !dbg !8608
  store i32 %call1, i32* %offset.addr, align 4, !dbg !8609
  br label %if.end, !dbg !8610

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8, i8* %include_uses.addr, align 1, !dbg !8611
  %tobool2 = icmp ne i8 %5, 0, !dbg !8611
  br i1 %tobool2, label %if.then3, label %if.end7, !dbg !8613

if.then3:                                         ; preds = %if.end
  %6 = load i32, i32* %offset.addr, align 4, !dbg !8614
  %7 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8615
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !8616
  %index4 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i32 0, i32 9, !dbg !8617
  %9 = load i32, i32* %index4, align 8, !dbg !8617
  %call5 = call %union.df_ref_d** @df_get_artificial_uses(i32 %9), !dbg !8618
  %call6 = call i32 @df_add_refs_to_table(i32 %6, %struct.df_ref_info* %7, %union.df_ref_d** %call5), !dbg !8619
  store i32 %call6, i32* %offset.addr, align 4, !dbg !8620
  br label %if.end7, !dbg !8621

if.end7:                                          ; preds = %if.then3, %if.end
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !8622
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %10, i32 0, i32 7, !dbg !8622
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8622
  %11 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8622
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %11, i32 0, i32 0, !dbg !8622
  %12 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !8622
  store %struct.rtx_def* %12, %struct.rtx_def** %insn, align 8, !dbg !8622
  br label %for.cond, !dbg !8622

for.cond:                                         ; preds = %for.inc, %if.end7
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8624
  %tobool8 = icmp ne %struct.rtx_def* %13, null, !dbg !8624
  br i1 %tobool8, label %land.rhs, label %land.end, !dbg !8624

land.rhs:                                         ; preds = %for.cond
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8624
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !8624
  %il9 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i32 0, i32 7, !dbg !8624
  %rtl10 = bitcast %union.basic_block_il_dependent* %il9 to %struct.rtl_bb_info**, !dbg !8624
  %16 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl10, align 8, !dbg !8624
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %16, i32 0, i32 1, !dbg !8624
  %17 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !8624
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !8624
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8624
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !8624
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8624
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8624
  %cmp = icmp ne %struct.rtx_def* %14, %18, !dbg !8624
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %19 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ], !dbg !8626
  br i1 %19, label %for.body, label %for.end, !dbg !8622

for.body:                                         ; preds = %land.end
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8627
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !8627
  %bf.load = load i32, i32* %21, align 8, !dbg !8627
  %bf.clear = and i32 %bf.load, 65535, !dbg !8627
  %cmp11 = icmp eq i32 %bf.clear, 8, !dbg !8627
  br i1 %cmp11, label %if.then23, label %lor.lhs.false, !dbg !8627

lor.lhs.false:                                    ; preds = %for.body
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8627
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !8627
  %bf.load12 = load i32, i32* %23, align 8, !dbg !8627
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !8627
  %cmp14 = icmp eq i32 %bf.clear13, 7, !dbg !8627
  br i1 %cmp14, label %if.then23, label %lor.lhs.false15, !dbg !8627

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8627
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !8627
  %bf.load16 = load i32, i32* %25, align 8, !dbg !8627
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !8627
  %cmp18 = icmp eq i32 %bf.clear17, 9, !dbg !8627
  br i1 %cmp18, label %if.then23, label %lor.lhs.false19, !dbg !8627

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8627
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !8627
  %bf.load20 = load i32, i32* %27, align 8, !dbg !8627
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !8627
  %cmp22 = icmp eq i32 %bf.clear21, 10, !dbg !8627
  br i1 %cmp22, label %if.then23, label %if.end46, !dbg !8629

if.then23:                                        ; preds = %lor.lhs.false19, %lor.lhs.false15, %lor.lhs.false, %for.body
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !8630, metadata !DIExpression()), !dbg !8632
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8633
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !8633
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !8633
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 0, !dbg !8633
  %rt_int = bitcast %union.rtunion_def* %arrayidx26 to i32*, !dbg !8633
  %29 = load i32, i32* %rt_int, align 8, !dbg !8633
  store i32 %29, i32* %uid, align 4, !dbg !8632
  %30 = load i8, i8* %include_defs.addr, align 1, !dbg !8634
  %tobool27 = icmp ne i8 %30, 0, !dbg !8634
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !8636

if.then28:                                        ; preds = %if.then23
  %31 = load i32, i32* %offset.addr, align 4, !dbg !8637
  %32 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8638
  %33 = load %struct.df*, %struct.df** @df, align 8, !dbg !8639
  %insns = getelementptr inbounds %struct.df, %struct.df* %33, i32 0, i32 10, !dbg !8639
  %34 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !8639
  %35 = load i32, i32* %uid, align 4, !dbg !8639
  %idxprom = zext i32 %35 to i64, !dbg !8639
  %arrayidx29 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %34, i64 %idxprom, !dbg !8639
  %36 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx29, align 8, !dbg !8639
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %36, i32 0, i32 1, !dbg !8639
  %37 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !8639
  %call30 = call i32 @df_add_refs_to_table(i32 %31, %struct.df_ref_info* %32, %union.df_ref_d** %37), !dbg !8640
  store i32 %call30, i32* %offset.addr, align 4, !dbg !8641
  br label %if.end31, !dbg !8642

if.end31:                                         ; preds = %if.then28, %if.then23
  %38 = load i8, i8* %include_uses.addr, align 1, !dbg !8643
  %tobool32 = icmp ne i8 %38, 0, !dbg !8643
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !8645

if.then33:                                        ; preds = %if.end31
  %39 = load i32, i32* %offset.addr, align 4, !dbg !8646
  %40 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8647
  %41 = load %struct.df*, %struct.df** @df, align 8, !dbg !8648
  %insns34 = getelementptr inbounds %struct.df, %struct.df* %41, i32 0, i32 10, !dbg !8648
  %42 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns34, align 8, !dbg !8648
  %43 = load i32, i32* %uid, align 4, !dbg !8648
  %idxprom35 = zext i32 %43 to i64, !dbg !8648
  %arrayidx36 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %42, i64 %idxprom35, !dbg !8648
  %44 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx36, align 8, !dbg !8648
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %44, i32 0, i32 2, !dbg !8648
  %45 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !8648
  %call37 = call i32 @df_add_refs_to_table(i32 %39, %struct.df_ref_info* %40, %union.df_ref_d** %45), !dbg !8649
  store i32 %call37, i32* %offset.addr, align 4, !dbg !8650
  br label %if.end38, !dbg !8651

if.end38:                                         ; preds = %if.then33, %if.end31
  %46 = load i8, i8* %include_eq_uses.addr, align 1, !dbg !8652
  %tobool39 = icmp ne i8 %46, 0, !dbg !8652
  br i1 %tobool39, label %if.then40, label %if.end45, !dbg !8654

if.then40:                                        ; preds = %if.end38
  %47 = load i32, i32* %offset.addr, align 4, !dbg !8655
  %48 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8656
  %49 = load %struct.df*, %struct.df** @df, align 8, !dbg !8657
  %insns41 = getelementptr inbounds %struct.df, %struct.df* %49, i32 0, i32 10, !dbg !8657
  %50 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns41, align 8, !dbg !8657
  %51 = load i32, i32* %uid, align 4, !dbg !8657
  %idxprom42 = zext i32 %51 to i64, !dbg !8657
  %arrayidx43 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %50, i64 %idxprom42, !dbg !8657
  %52 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx43, align 8, !dbg !8657
  %eq_uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %52, i32 0, i32 3, !dbg !8657
  %53 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses, align 8, !dbg !8657
  %call44 = call i32 @df_add_refs_to_table(i32 %47, %struct.df_ref_info* %48, %union.df_ref_d** %53), !dbg !8658
  store i32 %call44, i32* %offset.addr, align 4, !dbg !8659
  br label %if.end45, !dbg !8660

if.end45:                                         ; preds = %if.then40, %if.end38
  br label %if.end46, !dbg !8661

if.end46:                                         ; preds = %if.end45, %lor.lhs.false19
  br label %for.inc, !dbg !8627

for.inc:                                          ; preds = %if.end46
  %54 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8624
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !8624
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !8624
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 2, !dbg !8624
  %rt_rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**, !dbg !8624
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !8624
  store %struct.rtx_def* %55, %struct.rtx_def** %insn, align 8, !dbg !8624
  br label %for.cond, !dbg !8624, !llvm.loop !8662

for.end:                                          ; preds = %land.end
  %56 = load i32, i32* %offset.addr, align 4, !dbg !8664
  ret i32 %56, !dbg !8665
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @df_add_refs_to_table(i32 %offset, %struct.df_ref_info* %ref_info, %union.df_ref_d** %ref_vec) #0 !dbg !8666 {
entry:
  %offset.addr = alloca i32, align 4
  %ref_info.addr = alloca %struct.df_ref_info*, align 8
  %ref_vec.addr = alloca %union.df_ref_d**, align 8
  %ref = alloca %union.df_ref_d*, align 8
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !8669, metadata !DIExpression()), !dbg !8670
  store %struct.df_ref_info* %ref_info, %struct.df_ref_info** %ref_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_ref_info** %ref_info.addr, metadata !8671, metadata !DIExpression()), !dbg !8672
  store %union.df_ref_d** %ref_vec, %union.df_ref_d*** %ref_vec.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %ref_vec.addr, metadata !8673, metadata !DIExpression()), !dbg !8674
  br label %while.cond, !dbg !8675

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %union.df_ref_d**, %union.df_ref_d*** %ref_vec.addr, align 8, !dbg !8676
  %1 = load %union.df_ref_d*, %union.df_ref_d** %0, align 8, !dbg !8677
  %tobool = icmp ne %union.df_ref_d* %1, null, !dbg !8675
  br i1 %tobool, label %while.body, label %while.end, !dbg !8675

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref, metadata !8678, metadata !DIExpression()), !dbg !8680
  %2 = load %union.df_ref_d**, %union.df_ref_d*** %ref_vec.addr, align 8, !dbg !8681
  %3 = load %union.df_ref_d*, %union.df_ref_d** %2, align 8, !dbg !8682
  store %union.df_ref_d* %3, %union.df_ref_d** %ref, align 8, !dbg !8680
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !8683
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 27, !dbg !8685
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !8685
  %bf.cast = sext i8 %bf.load to i32, !dbg !8685
  %and = and i32 %bf.cast, 2, !dbg !8686
  %tobool1 = icmp ne i32 %and, 0, !dbg !8686
  br i1 %tobool1, label %lor.lhs.false, label %if.then, !dbg !8687

lor.lhs.false:                                    ; preds = %while.body
  %5 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !8688
  %base = bitcast %union.df_ref_d* %5 to %struct.df_base_ref*, !dbg !8688
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 6, !dbg !8688
  %6 = load i32, i32* %regno, align 8, !dbg !8688
  %cmp = icmp uge i32 %6, 53, !dbg !8689
  br i1 %cmp, label %if.then, label %if.end, !dbg !8690

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %7 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !8691
  %8 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !8693
  %refs = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %8, i32 0, i32 0, !dbg !8694
  %9 = load %union.df_ref_d**, %union.df_ref_d*** %refs, align 8, !dbg !8694
  %10 = load i32, i32* %offset.addr, align 4, !dbg !8695
  %idxprom = zext i32 %10 to i64, !dbg !8693
  %arrayidx = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %9, i64 %idxprom, !dbg !8693
  store %union.df_ref_d* %7, %union.df_ref_d** %arrayidx, align 8, !dbg !8696
  %11 = load i32, i32* %offset.addr, align 4, !dbg !8697
  %inc = add i32 %11, 1, !dbg !8697
  store i32 %inc, i32* %offset.addr, align 4, !dbg !8697
  %12 = load %union.df_ref_d**, %union.df_ref_d*** %ref_vec.addr, align 8, !dbg !8698
  %13 = load %union.df_ref_d*, %union.df_ref_d** %12, align 8, !dbg !8698
  %base2 = bitcast %union.df_ref_d* %13 to %struct.df_base_ref*, !dbg !8698
  %id = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base2, i32 0, i32 7, !dbg !8698
  store i32 %11, i32* %id, align 4, !dbg !8699
  br label %if.end, !dbg !8700

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %14 = load %union.df_ref_d**, %union.df_ref_d*** %ref_vec.addr, align 8, !dbg !8701
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %14, i32 1, !dbg !8701
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %ref_vec.addr, align 8, !dbg !8701
  br label %while.cond, !dbg !8675, !llvm.loop !8702

while.end:                                        ; preds = %while.cond
  %15 = load i32, i32* %offset.addr, align 4, !dbg !8704
  ret i32 %15, !dbg !8705
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_sort_and_compress_refs(%struct.VEC_df_ref_stack** %ref_vec) #0 !dbg !8706 {
entry:
  %ref_vec.addr = alloca %struct.VEC_df_ref_stack**, align 8
  %count = alloca i32, align 4
  %i = alloca i32, align 4
  %dist = alloca i32, align 4
  %r0 = alloca %union.df_ref_d*, align 8
  %r1 = alloca %union.df_ref_d*, align 8
  %r022 = alloca %union.df_ref_d*, align 8
  %r130 = alloca %union.df_ref_d*, align 8
  store %struct.VEC_df_ref_stack** %ref_vec, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_ref_stack*** %ref_vec.addr, metadata !8707, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.declare(metadata i32* %count, metadata !8709, metadata !DIExpression()), !dbg !8710
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8711, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.declare(metadata i32* %dist, metadata !8713, metadata !DIExpression()), !dbg !8714
  store i32 0, i32* %dist, align 4, !dbg !8714
  %0 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8715
  %1 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %0, align 8, !dbg !8715
  %tobool = icmp ne %struct.VEC_df_ref_stack* %1, null, !dbg !8715
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8715

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8715
  %3 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %2, align 8, !dbg !8715
  %base = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %3, i32 0, i32 0, !dbg !8715
  br label %cond.end, !dbg !8715

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8715

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_df_ref_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !8715
  %call = call i32 @VEC_df_ref_base_length(%struct.VEC_df_ref_base* %cond), !dbg !8715
  store i32 %call, i32* %count, align 4, !dbg !8716
  %4 = load i32, i32* %count, align 4, !dbg !8717
  %cmp = icmp ult i32 %4, 2, !dbg !8719
  br i1 %cmp, label %if.then, label %if.else, !dbg !8720

if.then:                                          ; preds = %cond.end
  br label %return, !dbg !8721

if.else:                                          ; preds = %cond.end
  %5 = load i32, i32* %count, align 4, !dbg !8722
  %cmp1 = icmp eq i32 %5, 2, !dbg !8724
  br i1 %cmp1, label %if.then2, label %if.else20, !dbg !8725

if.then2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %r0, metadata !8726, metadata !DIExpression()), !dbg !8728
  %6 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8729
  %7 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %6, align 8, !dbg !8729
  %tobool3 = icmp ne %struct.VEC_df_ref_stack* %7, null, !dbg !8729
  br i1 %tobool3, label %cond.true4, label %cond.false6, !dbg !8729

cond.true4:                                       ; preds = %if.then2
  %8 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8729
  %9 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %8, align 8, !dbg !8729
  %base5 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %9, i32 0, i32 0, !dbg !8729
  br label %cond.end7, !dbg !8729

cond.false6:                                      ; preds = %if.then2
  br label %cond.end7, !dbg !8729

cond.end7:                                        ; preds = %cond.false6, %cond.true4
  %cond8 = phi %struct.VEC_df_ref_base* [ %base5, %cond.true4 ], [ null, %cond.false6 ], !dbg !8729
  %call9 = call %union.df_ref_d* @VEC_df_ref_base_index(%struct.VEC_df_ref_base* %cond8, i32 0), !dbg !8729
  store %union.df_ref_d* %call9, %union.df_ref_d** %r0, align 8, !dbg !8728
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %r1, metadata !8730, metadata !DIExpression()), !dbg !8731
  %10 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8732
  %11 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %10, align 8, !dbg !8732
  %tobool10 = icmp ne %struct.VEC_df_ref_stack* %11, null, !dbg !8732
  br i1 %tobool10, label %cond.true11, label %cond.false13, !dbg !8732

cond.true11:                                      ; preds = %cond.end7
  %12 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8732
  %13 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %12, align 8, !dbg !8732
  %base12 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %13, i32 0, i32 0, !dbg !8732
  br label %cond.end14, !dbg !8732

cond.false13:                                     ; preds = %cond.end7
  br label %cond.end14, !dbg !8732

cond.end14:                                       ; preds = %cond.false13, %cond.true11
  %cond15 = phi %struct.VEC_df_ref_base* [ %base12, %cond.true11 ], [ null, %cond.false13 ], !dbg !8732
  %call16 = call %union.df_ref_d* @VEC_df_ref_base_index(%struct.VEC_df_ref_base* %cond15, i32 1), !dbg !8732
  store %union.df_ref_d* %call16, %union.df_ref_d** %r1, align 8, !dbg !8731
  %14 = bitcast %union.df_ref_d** %r0 to i8*, !dbg !8733
  %15 = bitcast %union.df_ref_d** %r1 to i8*, !dbg !8735
  %call17 = call i32 @df_ref_compare(i8* %14, i8* %15), !dbg !8736
  %cmp18 = icmp sgt i32 %call17, 0, !dbg !8737
  br i1 %cmp18, label %if.then19, label %if.end, !dbg !8738

if.then19:                                        ; preds = %cond.end14
  %16 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8739
  call void @df_swap_refs(%struct.VEC_df_ref_stack** %16, i32 0, i32 1), !dbg !8740
  br label %if.end, !dbg !8740

if.end:                                           ; preds = %if.then19, %cond.end14
  br label %if.end53, !dbg !8741

if.else20:                                        ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !8742
  br label %for.cond, !dbg !8745

for.cond:                                         ; preds = %for.inc, %if.else20
  %17 = load i32, i32* %i, align 4, !dbg !8746
  %18 = load i32, i32* %count, align 4, !dbg !8748
  %sub = sub i32 %18, 1, !dbg !8749
  %cmp21 = icmp ult i32 %17, %sub, !dbg !8750
  br i1 %cmp21, label %for.body, label %for.end, !dbg !8751

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %r022, metadata !8752, metadata !DIExpression()), !dbg !8754
  %19 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8755
  %20 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %19, align 8, !dbg !8755
  %tobool23 = icmp ne %struct.VEC_df_ref_stack* %20, null, !dbg !8755
  br i1 %tobool23, label %cond.true24, label %cond.false26, !dbg !8755

cond.true24:                                      ; preds = %for.body
  %21 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8755
  %22 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %21, align 8, !dbg !8755
  %base25 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %22, i32 0, i32 0, !dbg !8755
  br label %cond.end27, !dbg !8755

cond.false26:                                     ; preds = %for.body
  br label %cond.end27, !dbg !8755

cond.end27:                                       ; preds = %cond.false26, %cond.true24
  %cond28 = phi %struct.VEC_df_ref_base* [ %base25, %cond.true24 ], [ null, %cond.false26 ], !dbg !8755
  %23 = load i32, i32* %i, align 4, !dbg !8755
  %call29 = call %union.df_ref_d* @VEC_df_ref_base_index(%struct.VEC_df_ref_base* %cond28, i32 %23), !dbg !8755
  store %union.df_ref_d* %call29, %union.df_ref_d** %r022, align 8, !dbg !8754
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %r130, metadata !8756, metadata !DIExpression()), !dbg !8757
  %24 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8758
  %25 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %24, align 8, !dbg !8758
  %tobool31 = icmp ne %struct.VEC_df_ref_stack* %25, null, !dbg !8758
  br i1 %tobool31, label %cond.true32, label %cond.false34, !dbg !8758

cond.true32:                                      ; preds = %cond.end27
  %26 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8758
  %27 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %26, align 8, !dbg !8758
  %base33 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %27, i32 0, i32 0, !dbg !8758
  br label %cond.end35, !dbg !8758

cond.false34:                                     ; preds = %cond.end27
  br label %cond.end35, !dbg !8758

cond.end35:                                       ; preds = %cond.false34, %cond.true32
  %cond36 = phi %struct.VEC_df_ref_base* [ %base33, %cond.true32 ], [ null, %cond.false34 ], !dbg !8758
  %28 = load i32, i32* %i, align 4, !dbg !8758
  %add = add i32 %28, 1, !dbg !8758
  %call37 = call %union.df_ref_d* @VEC_df_ref_base_index(%struct.VEC_df_ref_base* %cond36, i32 %add), !dbg !8758
  store %union.df_ref_d* %call37, %union.df_ref_d** %r130, align 8, !dbg !8757
  %29 = bitcast %union.df_ref_d** %r022 to i8*, !dbg !8759
  %30 = bitcast %union.df_ref_d** %r130 to i8*, !dbg !8761
  %call38 = call i32 @df_ref_compare(i8* %29, i8* %30), !dbg !8762
  %cmp39 = icmp sge i32 %call38, 0, !dbg !8763
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !8764

if.then40:                                        ; preds = %cond.end35
  br label %for.end, !dbg !8765

if.end41:                                         ; preds = %cond.end35
  br label %for.inc, !dbg !8766

for.inc:                                          ; preds = %if.end41
  %31 = load i32, i32* %i, align 4, !dbg !8767
  %inc = add i32 %31, 1, !dbg !8767
  store i32 %inc, i32* %i, align 4, !dbg !8767
  br label %for.cond, !dbg !8768, !llvm.loop !8769

for.end:                                          ; preds = %if.then40, %for.cond
  %32 = load i32, i32* %i, align 4, !dbg !8771
  %33 = load i32, i32* %count, align 4, !dbg !8773
  %sub42 = sub i32 %33, 1, !dbg !8774
  %cmp43 = icmp eq i32 %32, %sub42, !dbg !8775
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !8776

if.then44:                                        ; preds = %for.end
  br label %return, !dbg !8777

if.end45:                                         ; preds = %for.end
  %34 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8778
  %35 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %34, align 8, !dbg !8778
  %tobool46 = icmp ne %struct.VEC_df_ref_stack* %35, null, !dbg !8778
  br i1 %tobool46, label %cond.true47, label %cond.false49, !dbg !8778

cond.true47:                                      ; preds = %if.end45
  %36 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8778
  %37 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %36, align 8, !dbg !8778
  %base48 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %37, i32 0, i32 0, !dbg !8778
  br label %cond.end50, !dbg !8778

cond.false49:                                     ; preds = %if.end45
  br label %cond.end50, !dbg !8778

cond.end50:                                       ; preds = %cond.false49, %cond.true47
  %cond51 = phi %struct.VEC_df_ref_base* [ %base48, %cond.true47 ], [ null, %cond.false49 ], !dbg !8778
  %call52 = call %union.df_ref_d** @VEC_df_ref_base_address(%struct.VEC_df_ref_base* %cond51), !dbg !8778
  %38 = bitcast %union.df_ref_d** %call52 to i8*, !dbg !8778
  %39 = load i32, i32* %count, align 4, !dbg !8779
  %conv = zext i32 %39 to i64, !dbg !8779
  call void @spec_qsort(i8* %38, i64 %conv, i64 8, i32 (i8*, i8*)* @df_ref_compare), !dbg !8780
  br label %if.end53

if.end53:                                         ; preds = %cond.end50, %if.end
  br label %if.end54

if.end54:                                         ; preds = %if.end53
  store i32 0, i32* %i, align 4, !dbg !8781
  br label %for.cond55, !dbg !8783

for.cond55:                                       ; preds = %for.inc117, %if.end54
  %40 = load i32, i32* %i, align 4, !dbg !8784
  %41 = load i32, i32* %count, align 4, !dbg !8786
  %42 = load i32, i32* %dist, align 4, !dbg !8787
  %sub56 = sub i32 %41, %42, !dbg !8788
  %cmp57 = icmp ult i32 %40, %sub56, !dbg !8789
  br i1 %cmp57, label %for.body59, label %for.end119, !dbg !8790

for.body59:                                       ; preds = %for.cond55
  br label %while.cond, !dbg !8791

while.cond:                                       ; preds = %cond.end87, %for.body59
  %43 = load i32, i32* %i, align 4, !dbg !8793
  %44 = load i32, i32* %dist, align 4, !dbg !8794
  %add60 = add i32 %43, %44, !dbg !8795
  %add61 = add i32 %add60, 1, !dbg !8796
  %45 = load i32, i32* %count, align 4, !dbg !8797
  %cmp62 = icmp ult i32 %add61, %45, !dbg !8798
  br i1 %cmp62, label %land.rhs, label %land.end, !dbg !8799

land.rhs:                                         ; preds = %while.cond
  %46 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8800
  %47 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %46, align 8, !dbg !8800
  %tobool64 = icmp ne %struct.VEC_df_ref_stack* %47, null, !dbg !8800
  br i1 %tobool64, label %cond.true65, label %cond.false67, !dbg !8800

cond.true65:                                      ; preds = %land.rhs
  %48 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8800
  %49 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %48, align 8, !dbg !8800
  %base66 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %49, i32 0, i32 0, !dbg !8800
  br label %cond.end68, !dbg !8800

cond.false67:                                     ; preds = %land.rhs
  br label %cond.end68, !dbg !8800

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi %struct.VEC_df_ref_base* [ %base66, %cond.true65 ], [ null, %cond.false67 ], !dbg !8800
  %50 = load i32, i32* %i, align 4, !dbg !8800
  %call70 = call %union.df_ref_d* @VEC_df_ref_base_index(%struct.VEC_df_ref_base* %cond69, i32 %50), !dbg !8800
  %51 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8801
  %52 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %51, align 8, !dbg !8801
  %tobool71 = icmp ne %struct.VEC_df_ref_stack* %52, null, !dbg !8801
  br i1 %tobool71, label %cond.true72, label %cond.false74, !dbg !8801

cond.true72:                                      ; preds = %cond.end68
  %53 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8801
  %54 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %53, align 8, !dbg !8801
  %base73 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %54, i32 0, i32 0, !dbg !8801
  br label %cond.end75, !dbg !8801

cond.false74:                                     ; preds = %cond.end68
  br label %cond.end75, !dbg !8801

cond.end75:                                       ; preds = %cond.false74, %cond.true72
  %cond76 = phi %struct.VEC_df_ref_base* [ %base73, %cond.true72 ], [ null, %cond.false74 ], !dbg !8801
  %55 = load i32, i32* %i, align 4, !dbg !8801
  %56 = load i32, i32* %dist, align 4, !dbg !8801
  %add77 = add i32 %55, %56, !dbg !8801
  %add78 = add i32 %add77, 1, !dbg !8801
  %call79 = call %union.df_ref_d* @VEC_df_ref_base_index(%struct.VEC_df_ref_base* %cond76, i32 %add78), !dbg !8801
  %call80 = call zeroext i8 @df_ref_equal_p(%union.df_ref_d* %call70, %union.df_ref_d* %call79), !dbg !8802
  %conv81 = zext i8 %call80 to i32, !dbg !8802
  %tobool82 = icmp ne i32 %conv81, 0, !dbg !8799
  br label %land.end

land.end:                                         ; preds = %cond.end75, %while.cond
  %57 = phi i1 [ false, %while.cond ], [ %tobool82, %cond.end75 ], !dbg !8803
  br i1 %57, label %while.body, label %while.end, !dbg !8791

while.body:                                       ; preds = %land.end
  %58 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8804
  %59 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %58, align 8, !dbg !8804
  %tobool83 = icmp ne %struct.VEC_df_ref_stack* %59, null, !dbg !8804
  br i1 %tobool83, label %cond.true84, label %cond.false86, !dbg !8804

cond.true84:                                      ; preds = %while.body
  %60 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8804
  %61 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %60, align 8, !dbg !8804
  %base85 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %61, i32 0, i32 0, !dbg !8804
  br label %cond.end87, !dbg !8804

cond.false86:                                     ; preds = %while.body
  br label %cond.end87, !dbg !8804

cond.end87:                                       ; preds = %cond.false86, %cond.true84
  %cond88 = phi %struct.VEC_df_ref_base* [ %base85, %cond.true84 ], [ null, %cond.false86 ], !dbg !8804
  %62 = load i32, i32* %i, align 4, !dbg !8804
  %63 = load i32, i32* %dist, align 4, !dbg !8804
  %add89 = add i32 %62, %63, !dbg !8804
  %add90 = add i32 %add89, 1, !dbg !8804
  %call91 = call %union.df_ref_d* @VEC_df_ref_base_index(%struct.VEC_df_ref_base* %cond88, i32 %add90), !dbg !8804
  call void @df_free_ref(%union.df_ref_d* %call91), !dbg !8806
  %64 = load i32, i32* %dist, align 4, !dbg !8807
  %inc92 = add i32 %64, 1, !dbg !8807
  store i32 %inc92, i32* %dist, align 4, !dbg !8807
  br label %while.cond, !dbg !8791, !llvm.loop !8808

while.end:                                        ; preds = %land.end
  %65 = load i32, i32* %dist, align 4, !dbg !8810
  %tobool93 = icmp ne i32 %65, 0, !dbg !8810
  br i1 %tobool93, label %land.lhs.true, label %if.end116, !dbg !8812

land.lhs.true:                                    ; preds = %while.end
  %66 = load i32, i32* %i, align 4, !dbg !8813
  %67 = load i32, i32* %dist, align 4, !dbg !8814
  %add94 = add i32 %66, %67, !dbg !8815
  %add95 = add i32 %add94, 1, !dbg !8816
  %68 = load i32, i32* %count, align 4, !dbg !8817
  %cmp96 = icmp ult i32 %add95, %68, !dbg !8818
  br i1 %cmp96, label %if.then98, label %if.end116, !dbg !8819

if.then98:                                        ; preds = %land.lhs.true
  %69 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8820
  %70 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %69, align 8, !dbg !8820
  %tobool99 = icmp ne %struct.VEC_df_ref_stack* %70, null, !dbg !8820
  br i1 %tobool99, label %cond.true100, label %cond.false102, !dbg !8820

cond.true100:                                     ; preds = %if.then98
  %71 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8820
  %72 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %71, align 8, !dbg !8820
  %base101 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %72, i32 0, i32 0, !dbg !8820
  br label %cond.end103, !dbg !8820

cond.false102:                                    ; preds = %if.then98
  br label %cond.end103, !dbg !8820

cond.end103:                                      ; preds = %cond.false102, %cond.true100
  %cond104 = phi %struct.VEC_df_ref_base* [ %base101, %cond.true100 ], [ null, %cond.false102 ], !dbg !8820
  %73 = load i32, i32* %i, align 4, !dbg !8820
  %add105 = add i32 %73, 1, !dbg !8820
  %74 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8820
  %75 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %74, align 8, !dbg !8820
  %tobool106 = icmp ne %struct.VEC_df_ref_stack* %75, null, !dbg !8820
  br i1 %tobool106, label %cond.true107, label %cond.false109, !dbg !8820

cond.true107:                                     ; preds = %cond.end103
  %76 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8820
  %77 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %76, align 8, !dbg !8820
  %base108 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %77, i32 0, i32 0, !dbg !8820
  br label %cond.end110, !dbg !8820

cond.false109:                                    ; preds = %cond.end103
  br label %cond.end110, !dbg !8820

cond.end110:                                      ; preds = %cond.false109, %cond.true107
  %cond111 = phi %struct.VEC_df_ref_base* [ %base108, %cond.true107 ], [ null, %cond.false109 ], !dbg !8820
  %78 = load i32, i32* %i, align 4, !dbg !8820
  %79 = load i32, i32* %dist, align 4, !dbg !8820
  %add112 = add i32 %78, %79, !dbg !8820
  %add113 = add i32 %add112, 1, !dbg !8820
  %call114 = call %union.df_ref_d* @VEC_df_ref_base_index(%struct.VEC_df_ref_base* %cond111, i32 %add113), !dbg !8820
  %call115 = call %union.df_ref_d* @VEC_df_ref_base_replace(%struct.VEC_df_ref_base* %cond104, i32 %add105, %union.df_ref_d* %call114), !dbg !8820
  br label %if.end116, !dbg !8820

if.end116:                                        ; preds = %cond.end110, %land.lhs.true, %while.end
  br label %for.inc117, !dbg !8821

for.inc117:                                       ; preds = %if.end116
  %80 = load i32, i32* %i, align 4, !dbg !8822
  %inc118 = add i32 %80, 1, !dbg !8822
  store i32 %inc118, i32* %i, align 4, !dbg !8822
  br label %for.cond55, !dbg !8823, !llvm.loop !8824

for.end119:                                       ; preds = %for.cond55
  %81 = load i32, i32* %dist, align 4, !dbg !8826
  %82 = load i32, i32* %count, align 4, !dbg !8827
  %sub120 = sub i32 %82, %81, !dbg !8827
  store i32 %sub120, i32* %count, align 4, !dbg !8827
  %83 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8828
  %84 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %83, align 8, !dbg !8828
  %tobool121 = icmp ne %struct.VEC_df_ref_stack* %84, null, !dbg !8828
  br i1 %tobool121, label %cond.true122, label %cond.false124, !dbg !8828

cond.true122:                                     ; preds = %for.end119
  %85 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8828
  %86 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %85, align 8, !dbg !8828
  %base123 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %86, i32 0, i32 0, !dbg !8828
  br label %cond.end125, !dbg !8828

cond.false124:                                    ; preds = %for.end119
  br label %cond.end125, !dbg !8828

cond.end125:                                      ; preds = %cond.false124, %cond.true122
  %cond126 = phi %struct.VEC_df_ref_base* [ %base123, %cond.true122 ], [ null, %cond.false124 ], !dbg !8828
  %87 = load i32, i32* %count, align 4, !dbg !8828
  call void @VEC_df_ref_base_truncate(%struct.VEC_df_ref_base* %cond126, i32 %87), !dbg !8828
  br label %return, !dbg !8829

return:                                           ; preds = %cond.end125, %if.then44, %if.then
  ret void, !dbg !8829
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_sort_and_compress_mws(%struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec) #0 !dbg !8830 {
entry:
  %mw_vec.addr = alloca %struct.VEC_df_mw_hardreg_ptr_stack**, align 8
  %count = alloca i32, align 4
  %problem_data = alloca %struct.df_scan_problem_data*, align 8
  %i = alloca i32, align 4
  %dist = alloca i32, align 4
  %m0 = alloca %struct.df_mw_hardreg*, align 8
  %m1 = alloca %struct.df_mw_hardreg*, align 8
  %tmp = alloca %struct.df_mw_hardreg*, align 8
  store %struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, metadata !8831, metadata !DIExpression()), !dbg !8832
  call void @llvm.dbg.declare(metadata i32* %count, metadata !8833, metadata !DIExpression()), !dbg !8834
  call void @llvm.dbg.declare(metadata %struct.df_scan_problem_data** %problem_data, metadata !8835, metadata !DIExpression()), !dbg !8836
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !8837
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !8837
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !8837
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !8837
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !8838
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !8838
  %3 = bitcast i8* %2 to %struct.df_scan_problem_data*, !dbg !8839
  store %struct.df_scan_problem_data* %3, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !8836
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8840, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.declare(metadata i32* %dist, metadata !8842, metadata !DIExpression()), !dbg !8843
  store i32 0, i32* %dist, align 4, !dbg !8843
  %4 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8844
  %5 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %4, align 8, !dbg !8844
  %tobool = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %5, null, !dbg !8844
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8844

cond.true:                                        ; preds = %entry
  %6 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8844
  %7 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %6, align 8, !dbg !8844
  %base = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %7, i32 0, i32 0, !dbg !8844
  br label %cond.end, !dbg !8844

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8844

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !8844
  %call = call i32 @VEC_df_mw_hardreg_ptr_base_length(%struct.VEC_df_mw_hardreg_ptr_base* %cond), !dbg !8844
  store i32 %call, i32* %count, align 4, !dbg !8845
  %8 = load i32, i32* %count, align 4, !dbg !8846
  %cmp = icmp ult i32 %8, 2, !dbg !8848
  br i1 %cmp, label %if.then, label %if.else, !dbg !8849

if.then:                                          ; preds = %cond.end
  br label %return, !dbg !8850

if.else:                                          ; preds = %cond.end
  %9 = load i32, i32* %count, align 4, !dbg !8851
  %cmp2 = icmp eq i32 %9, 2, !dbg !8853
  br i1 %cmp2, label %if.then3, label %if.else49, !dbg !8854

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %m0, metadata !8855, metadata !DIExpression()), !dbg !8857
  %10 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8858
  %11 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %10, align 8, !dbg !8858
  %tobool4 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %11, null, !dbg !8858
  br i1 %tobool4, label %cond.true5, label %cond.false7, !dbg !8858

cond.true5:                                       ; preds = %if.then3
  %12 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8858
  %13 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %12, align 8, !dbg !8858
  %base6 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %13, i32 0, i32 0, !dbg !8858
  br label %cond.end8, !dbg !8858

cond.false7:                                      ; preds = %if.then3
  br label %cond.end8, !dbg !8858

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base6, %cond.true5 ], [ null, %cond.false7 ], !dbg !8858
  %call10 = call %struct.df_mw_hardreg* @VEC_df_mw_hardreg_ptr_base_index(%struct.VEC_df_mw_hardreg_ptr_base* %cond9, i32 0), !dbg !8858
  store %struct.df_mw_hardreg* %call10, %struct.df_mw_hardreg** %m0, align 8, !dbg !8857
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %m1, metadata !8859, metadata !DIExpression()), !dbg !8860
  %14 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8861
  %15 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %14, align 8, !dbg !8861
  %tobool11 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %15, null, !dbg !8861
  br i1 %tobool11, label %cond.true12, label %cond.false14, !dbg !8861

cond.true12:                                      ; preds = %cond.end8
  %16 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8861
  %17 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %16, align 8, !dbg !8861
  %base13 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %17, i32 0, i32 0, !dbg !8861
  br label %cond.end15, !dbg !8861

cond.false14:                                     ; preds = %cond.end8
  br label %cond.end15, !dbg !8861

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base13, %cond.true12 ], [ null, %cond.false14 ], !dbg !8861
  %call17 = call %struct.df_mw_hardreg* @VEC_df_mw_hardreg_ptr_base_index(%struct.VEC_df_mw_hardreg_ptr_base* %cond16, i32 1), !dbg !8861
  store %struct.df_mw_hardreg* %call17, %struct.df_mw_hardreg** %m1, align 8, !dbg !8860
  %18 = bitcast %struct.df_mw_hardreg** %m0 to i8*, !dbg !8862
  %19 = bitcast %struct.df_mw_hardreg** %m1 to i8*, !dbg !8864
  %call18 = call i32 @df_mw_compare(i8* %18, i8* %19), !dbg !8865
  %cmp19 = icmp sgt i32 %call18, 0, !dbg !8866
  br i1 %cmp19, label %if.then20, label %if.end, !dbg !8867

if.then20:                                        ; preds = %cond.end15
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %tmp, metadata !8868, metadata !DIExpression()), !dbg !8870
  %20 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8871
  %21 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %20, align 8, !dbg !8871
  %tobool21 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %21, null, !dbg !8871
  br i1 %tobool21, label %cond.true22, label %cond.false24, !dbg !8871

cond.true22:                                      ; preds = %if.then20
  %22 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8871
  %23 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %22, align 8, !dbg !8871
  %base23 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %23, i32 0, i32 0, !dbg !8871
  br label %cond.end25, !dbg !8871

cond.false24:                                     ; preds = %if.then20
  br label %cond.end25, !dbg !8871

cond.end25:                                       ; preds = %cond.false24, %cond.true22
  %cond26 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base23, %cond.true22 ], [ null, %cond.false24 ], !dbg !8871
  %call27 = call %struct.df_mw_hardreg* @VEC_df_mw_hardreg_ptr_base_index(%struct.VEC_df_mw_hardreg_ptr_base* %cond26, i32 0), !dbg !8871
  store %struct.df_mw_hardreg* %call27, %struct.df_mw_hardreg** %tmp, align 8, !dbg !8870
  %24 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8872
  %25 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %24, align 8, !dbg !8872
  %tobool28 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %25, null, !dbg !8872
  br i1 %tobool28, label %cond.true29, label %cond.false31, !dbg !8872

cond.true29:                                      ; preds = %cond.end25
  %26 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8872
  %27 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %26, align 8, !dbg !8872
  %base30 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %27, i32 0, i32 0, !dbg !8872
  br label %cond.end32, !dbg !8872

cond.false31:                                     ; preds = %cond.end25
  br label %cond.end32, !dbg !8872

cond.end32:                                       ; preds = %cond.false31, %cond.true29
  %cond33 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base30, %cond.true29 ], [ null, %cond.false31 ], !dbg !8872
  %28 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8872
  %29 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %28, align 8, !dbg !8872
  %tobool34 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %29, null, !dbg !8872
  br i1 %tobool34, label %cond.true35, label %cond.false37, !dbg !8872

cond.true35:                                      ; preds = %cond.end32
  %30 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8872
  %31 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %30, align 8, !dbg !8872
  %base36 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %31, i32 0, i32 0, !dbg !8872
  br label %cond.end38, !dbg !8872

cond.false37:                                     ; preds = %cond.end32
  br label %cond.end38, !dbg !8872

cond.end38:                                       ; preds = %cond.false37, %cond.true35
  %cond39 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base36, %cond.true35 ], [ null, %cond.false37 ], !dbg !8872
  %call40 = call %struct.df_mw_hardreg* @VEC_df_mw_hardreg_ptr_base_index(%struct.VEC_df_mw_hardreg_ptr_base* %cond39, i32 1), !dbg !8872
  %call41 = call %struct.df_mw_hardreg* @VEC_df_mw_hardreg_ptr_base_replace(%struct.VEC_df_mw_hardreg_ptr_base* %cond33, i32 0, %struct.df_mw_hardreg* %call40), !dbg !8872
  %32 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8873
  %33 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %32, align 8, !dbg !8873
  %tobool42 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %33, null, !dbg !8873
  br i1 %tobool42, label %cond.true43, label %cond.false45, !dbg !8873

cond.true43:                                      ; preds = %cond.end38
  %34 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8873
  %35 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %34, align 8, !dbg !8873
  %base44 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %35, i32 0, i32 0, !dbg !8873
  br label %cond.end46, !dbg !8873

cond.false45:                                     ; preds = %cond.end38
  br label %cond.end46, !dbg !8873

cond.end46:                                       ; preds = %cond.false45, %cond.true43
  %cond47 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base44, %cond.true43 ], [ null, %cond.false45 ], !dbg !8873
  %36 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %tmp, align 8, !dbg !8873
  %call48 = call %struct.df_mw_hardreg* @VEC_df_mw_hardreg_ptr_base_replace(%struct.VEC_df_mw_hardreg_ptr_base* %cond47, i32 1, %struct.df_mw_hardreg* %36), !dbg !8873
  br label %if.end, !dbg !8874

if.end:                                           ; preds = %cond.end46, %cond.end15
  br label %if.end57, !dbg !8875

if.else49:                                        ; preds = %if.else
  %37 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8876
  %38 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %37, align 8, !dbg !8876
  %tobool50 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %38, null, !dbg !8876
  br i1 %tobool50, label %cond.true51, label %cond.false53, !dbg !8876

cond.true51:                                      ; preds = %if.else49
  %39 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8876
  %40 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %39, align 8, !dbg !8876
  %base52 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %40, i32 0, i32 0, !dbg !8876
  br label %cond.end54, !dbg !8876

cond.false53:                                     ; preds = %if.else49
  br label %cond.end54, !dbg !8876

cond.end54:                                       ; preds = %cond.false53, %cond.true51
  %cond55 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base52, %cond.true51 ], [ null, %cond.false53 ], !dbg !8876
  %call56 = call %struct.df_mw_hardreg** @VEC_df_mw_hardreg_ptr_base_address(%struct.VEC_df_mw_hardreg_ptr_base* %cond55), !dbg !8876
  %41 = bitcast %struct.df_mw_hardreg** %call56 to i8*, !dbg !8876
  %42 = load i32, i32* %count, align 4, !dbg !8877
  %conv = zext i32 %42 to i64, !dbg !8877
  call void @spec_qsort(i8* %41, i64 %conv, i64 8, i32 (i8*, i8*)* @df_mw_compare), !dbg !8878
  br label %if.end57

if.end57:                                         ; preds = %cond.end54, %if.end
  br label %if.end58

if.end58:                                         ; preds = %if.end57
  store i32 0, i32* %i, align 4, !dbg !8879
  br label %for.cond, !dbg !8881

for.cond:                                         ; preds = %for.inc, %if.end58
  %43 = load i32, i32* %i, align 4, !dbg !8882
  %44 = load i32, i32* %count, align 4, !dbg !8884
  %45 = load i32, i32* %dist, align 4, !dbg !8885
  %sub = sub i32 %44, %45, !dbg !8886
  %cmp59 = icmp ult i32 %43, %sub, !dbg !8887
  br i1 %cmp59, label %for.body, label %for.end, !dbg !8888

for.body:                                         ; preds = %for.cond
  br label %while.cond, !dbg !8889

while.cond:                                       ; preds = %cond.end87, %for.body
  %46 = load i32, i32* %i, align 4, !dbg !8891
  %47 = load i32, i32* %dist, align 4, !dbg !8892
  %add = add i32 %46, %47, !dbg !8893
  %add61 = add i32 %add, 1, !dbg !8894
  %48 = load i32, i32* %count, align 4, !dbg !8895
  %cmp62 = icmp ult i32 %add61, %48, !dbg !8896
  br i1 %cmp62, label %land.rhs, label %land.end, !dbg !8897

land.rhs:                                         ; preds = %while.cond
  %49 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8898
  %50 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %49, align 8, !dbg !8898
  %tobool64 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %50, null, !dbg !8898
  br i1 %tobool64, label %cond.true65, label %cond.false67, !dbg !8898

cond.true65:                                      ; preds = %land.rhs
  %51 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8898
  %52 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %51, align 8, !dbg !8898
  %base66 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %52, i32 0, i32 0, !dbg !8898
  br label %cond.end68, !dbg !8898

cond.false67:                                     ; preds = %land.rhs
  br label %cond.end68, !dbg !8898

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base66, %cond.true65 ], [ null, %cond.false67 ], !dbg !8898
  %53 = load i32, i32* %i, align 4, !dbg !8898
  %call70 = call %struct.df_mw_hardreg* @VEC_df_mw_hardreg_ptr_base_index(%struct.VEC_df_mw_hardreg_ptr_base* %cond69, i32 %53), !dbg !8898
  %54 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8899
  %55 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %54, align 8, !dbg !8899
  %tobool71 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %55, null, !dbg !8899
  br i1 %tobool71, label %cond.true72, label %cond.false74, !dbg !8899

cond.true72:                                      ; preds = %cond.end68
  %56 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8899
  %57 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %56, align 8, !dbg !8899
  %base73 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %57, i32 0, i32 0, !dbg !8899
  br label %cond.end75, !dbg !8899

cond.false74:                                     ; preds = %cond.end68
  br label %cond.end75, !dbg !8899

cond.end75:                                       ; preds = %cond.false74, %cond.true72
  %cond76 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base73, %cond.true72 ], [ null, %cond.false74 ], !dbg !8899
  %58 = load i32, i32* %i, align 4, !dbg !8899
  %59 = load i32, i32* %dist, align 4, !dbg !8899
  %add77 = add i32 %58, %59, !dbg !8899
  %add78 = add i32 %add77, 1, !dbg !8899
  %call79 = call %struct.df_mw_hardreg* @VEC_df_mw_hardreg_ptr_base_index(%struct.VEC_df_mw_hardreg_ptr_base* %cond76, i32 %add78), !dbg !8899
  %call80 = call zeroext i8 @df_mw_equal_p(%struct.df_mw_hardreg* %call70, %struct.df_mw_hardreg* %call79), !dbg !8900
  %conv81 = zext i8 %call80 to i32, !dbg !8900
  %tobool82 = icmp ne i32 %conv81, 0, !dbg !8897
  br label %land.end

land.end:                                         ; preds = %cond.end75, %while.cond
  %60 = phi i1 [ false, %while.cond ], [ %tobool82, %cond.end75 ], !dbg !8901
  br i1 %60, label %while.body, label %while.end, !dbg !8889

while.body:                                       ; preds = %land.end
  %61 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !8902
  %mw_reg_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %61, i32 0, i32 6, !dbg !8904
  %62 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %mw_reg_pool, align 8, !dbg !8904
  %63 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8905
  %64 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %63, align 8, !dbg !8905
  %tobool83 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %64, null, !dbg !8905
  br i1 %tobool83, label %cond.true84, label %cond.false86, !dbg !8905

cond.true84:                                      ; preds = %while.body
  %65 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8905
  %66 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %65, align 8, !dbg !8905
  %base85 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %66, i32 0, i32 0, !dbg !8905
  br label %cond.end87, !dbg !8905

cond.false86:                                     ; preds = %while.body
  br label %cond.end87, !dbg !8905

cond.end87:                                       ; preds = %cond.false86, %cond.true84
  %cond88 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base85, %cond.true84 ], [ null, %cond.false86 ], !dbg !8905
  %67 = load i32, i32* %i, align 4, !dbg !8905
  %68 = load i32, i32* %dist, align 4, !dbg !8905
  %add89 = add i32 %67, %68, !dbg !8905
  %add90 = add i32 %add89, 1, !dbg !8905
  %call91 = call %struct.df_mw_hardreg* @VEC_df_mw_hardreg_ptr_base_index(%struct.VEC_df_mw_hardreg_ptr_base* %cond88, i32 %add90), !dbg !8905
  %69 = bitcast %struct.df_mw_hardreg* %call91 to i8*, !dbg !8905
  call void @pool_free(%struct.alloc_pool_def* %62, i8* %69), !dbg !8906
  %70 = load i32, i32* %dist, align 4, !dbg !8907
  %inc = add i32 %70, 1, !dbg !8907
  store i32 %inc, i32* %dist, align 4, !dbg !8907
  br label %while.cond, !dbg !8889, !llvm.loop !8908

while.end:                                        ; preds = %land.end
  %71 = load i32, i32* %dist, align 4, !dbg !8910
  %tobool92 = icmp ne i32 %71, 0, !dbg !8910
  br i1 %tobool92, label %land.lhs.true, label %if.end115, !dbg !8912

land.lhs.true:                                    ; preds = %while.end
  %72 = load i32, i32* %i, align 4, !dbg !8913
  %73 = load i32, i32* %dist, align 4, !dbg !8914
  %add93 = add i32 %72, %73, !dbg !8915
  %add94 = add i32 %add93, 1, !dbg !8916
  %74 = load i32, i32* %count, align 4, !dbg !8917
  %cmp95 = icmp ult i32 %add94, %74, !dbg !8918
  br i1 %cmp95, label %if.then97, label %if.end115, !dbg !8919

if.then97:                                        ; preds = %land.lhs.true
  %75 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8920
  %76 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %75, align 8, !dbg !8920
  %tobool98 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %76, null, !dbg !8920
  br i1 %tobool98, label %cond.true99, label %cond.false101, !dbg !8920

cond.true99:                                      ; preds = %if.then97
  %77 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8920
  %78 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %77, align 8, !dbg !8920
  %base100 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %78, i32 0, i32 0, !dbg !8920
  br label %cond.end102, !dbg !8920

cond.false101:                                    ; preds = %if.then97
  br label %cond.end102, !dbg !8920

cond.end102:                                      ; preds = %cond.false101, %cond.true99
  %cond103 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base100, %cond.true99 ], [ null, %cond.false101 ], !dbg !8920
  %79 = load i32, i32* %i, align 4, !dbg !8920
  %add104 = add i32 %79, 1, !dbg !8920
  %80 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8920
  %81 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %80, align 8, !dbg !8920
  %tobool105 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %81, null, !dbg !8920
  br i1 %tobool105, label %cond.true106, label %cond.false108, !dbg !8920

cond.true106:                                     ; preds = %cond.end102
  %82 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8920
  %83 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %82, align 8, !dbg !8920
  %base107 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %83, i32 0, i32 0, !dbg !8920
  br label %cond.end109, !dbg !8920

cond.false108:                                    ; preds = %cond.end102
  br label %cond.end109, !dbg !8920

cond.end109:                                      ; preds = %cond.false108, %cond.true106
  %cond110 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base107, %cond.true106 ], [ null, %cond.false108 ], !dbg !8920
  %84 = load i32, i32* %i, align 4, !dbg !8920
  %85 = load i32, i32* %dist, align 4, !dbg !8920
  %add111 = add i32 %84, %85, !dbg !8920
  %add112 = add i32 %add111, 1, !dbg !8920
  %call113 = call %struct.df_mw_hardreg* @VEC_df_mw_hardreg_ptr_base_index(%struct.VEC_df_mw_hardreg_ptr_base* %cond110, i32 %add112), !dbg !8920
  %call114 = call %struct.df_mw_hardreg* @VEC_df_mw_hardreg_ptr_base_replace(%struct.VEC_df_mw_hardreg_ptr_base* %cond103, i32 %add104, %struct.df_mw_hardreg* %call113), !dbg !8920
  br label %if.end115, !dbg !8920

if.end115:                                        ; preds = %cond.end109, %land.lhs.true, %while.end
  br label %for.inc, !dbg !8921

for.inc:                                          ; preds = %if.end115
  %86 = load i32, i32* %i, align 4, !dbg !8922
  %inc116 = add i32 %86, 1, !dbg !8922
  store i32 %inc116, i32* %i, align 4, !dbg !8922
  br label %for.cond, !dbg !8923, !llvm.loop !8924

for.end:                                          ; preds = %for.cond
  %87 = load i32, i32* %dist, align 4, !dbg !8926
  %88 = load i32, i32* %count, align 4, !dbg !8927
  %sub117 = sub i32 %88, %87, !dbg !8927
  store i32 %sub117, i32* %count, align 4, !dbg !8927
  %89 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8928
  %90 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %89, align 8, !dbg !8928
  %tobool118 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %90, null, !dbg !8928
  br i1 %tobool118, label %cond.true119, label %cond.false121, !dbg !8928

cond.true119:                                     ; preds = %for.end
  %91 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %mw_vec.addr, align 8, !dbg !8928
  %92 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %91, align 8, !dbg !8928
  %base120 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %92, i32 0, i32 0, !dbg !8928
  br label %cond.end122, !dbg !8928

cond.false121:                                    ; preds = %for.end
  br label %cond.end122, !dbg !8928

cond.end122:                                      ; preds = %cond.false121, %cond.true119
  %cond123 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base120, %cond.true119 ], [ null, %cond.false121 ], !dbg !8928
  %93 = load i32, i32* %count, align 4, !dbg !8928
  call void @VEC_df_mw_hardreg_ptr_base_truncate(%struct.VEC_df_mw_hardreg_ptr_base* %cond123, i32 %93), !dbg !8928
  br label %return, !dbg !8929

return:                                           ; preds = %cond.end122, %if.then
  ret void, !dbg !8929
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_df_ref_base_length(%struct.VEC_df_ref_base* %vec_) #0 !dbg !8930 {
entry:
  %vec_.addr = alloca %struct.VEC_df_ref_base*, align 8
  store %struct.VEC_df_ref_base* %vec_, %struct.VEC_df_ref_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_ref_base** %vec_.addr, metadata !8933, metadata !DIExpression()), !dbg !8934
  %0 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !8934
  %tobool = icmp ne %struct.VEC_df_ref_base* %0, null, !dbg !8934
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8934

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !8934
  %num = getelementptr inbounds %struct.VEC_df_ref_base, %struct.VEC_df_ref_base* %1, i32 0, i32 0, !dbg !8934
  %2 = load i32, i32* %num, align 8, !dbg !8934
  br label %cond.end, !dbg !8934

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8934

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !8934
  ret i32 %cond, !dbg !8934
}

; Function Attrs: noinline nounwind uwtable
define internal %union.df_ref_d* @VEC_df_ref_base_index(%struct.VEC_df_ref_base* %vec_, i32 %ix_) #0 !dbg !8935 {
entry:
  %vec_.addr = alloca %struct.VEC_df_ref_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_df_ref_base* %vec_, %struct.VEC_df_ref_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_ref_base** %vec_.addr, metadata !8938, metadata !DIExpression()), !dbg !8939
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !8940, metadata !DIExpression()), !dbg !8939
  %0 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !8939
  %tobool = icmp ne %struct.VEC_df_ref_base* %0, null, !dbg !8939
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !8939

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !8939
  %2 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !8939
  %num = getelementptr inbounds %struct.VEC_df_ref_base, %struct.VEC_df_ref_base* %2, i32 0, i32 0, !dbg !8939
  %3 = load i32, i32* %num, align 8, !dbg !8939
  %cmp = icmp ult i32 %1, %3, !dbg !8939
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !8941
  %land.ext = zext i1 %4 to i32, !dbg !8939
  %5 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !8939
  %vec = getelementptr inbounds %struct.VEC_df_ref_base, %struct.VEC_df_ref_base* %5, i32 0, i32 2, !dbg !8939
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !8939
  %idxprom = zext i32 %6 to i64, !dbg !8939
  %arrayidx = getelementptr inbounds [1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* %vec, i64 0, i64 %idxprom, !dbg !8939
  %7 = load %union.df_ref_d*, %union.df_ref_d** %arrayidx, align 8, !dbg !8939
  ret %union.df_ref_d* %7, !dbg !8939
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_swap_refs(%struct.VEC_df_ref_stack** %ref_vec, i32 %i, i32 %j) #0 !dbg !8942 {
entry:
  %ref_vec.addr = alloca %struct.VEC_df_ref_stack**, align 8
  %i.addr = alloca i32, align 4
  %j.addr = alloca i32, align 4
  %tmp = alloca %union.df_ref_d*, align 8
  store %struct.VEC_df_ref_stack** %ref_vec, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_ref_stack*** %ref_vec.addr, metadata !8945, metadata !DIExpression()), !dbg !8946
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !8947, metadata !DIExpression()), !dbg !8948
  store i32 %j, i32* %j.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j.addr, metadata !8949, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %tmp, metadata !8951, metadata !DIExpression()), !dbg !8952
  %0 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8953
  %1 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %0, align 8, !dbg !8953
  %tobool = icmp ne %struct.VEC_df_ref_stack* %1, null, !dbg !8953
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8953

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8953
  %3 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %2, align 8, !dbg !8953
  %base = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %3, i32 0, i32 0, !dbg !8953
  br label %cond.end, !dbg !8953

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8953

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_df_ref_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !8953
  %4 = load i32, i32* %i.addr, align 4, !dbg !8953
  %call = call %union.df_ref_d* @VEC_df_ref_base_index(%struct.VEC_df_ref_base* %cond, i32 %4), !dbg !8953
  store %union.df_ref_d* %call, %union.df_ref_d** %tmp, align 8, !dbg !8952
  %5 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8954
  %6 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %5, align 8, !dbg !8954
  %tobool1 = icmp ne %struct.VEC_df_ref_stack* %6, null, !dbg !8954
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !8954

cond.true2:                                       ; preds = %cond.end
  %7 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8954
  %8 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %7, align 8, !dbg !8954
  %base3 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %8, i32 0, i32 0, !dbg !8954
  br label %cond.end5, !dbg !8954

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !8954

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_df_ref_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !8954
  %9 = load i32, i32* %i.addr, align 4, !dbg !8954
  %10 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8954
  %11 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %10, align 8, !dbg !8954
  %tobool7 = icmp ne %struct.VEC_df_ref_stack* %11, null, !dbg !8954
  br i1 %tobool7, label %cond.true8, label %cond.false10, !dbg !8954

cond.true8:                                       ; preds = %cond.end5
  %12 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8954
  %13 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %12, align 8, !dbg !8954
  %base9 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %13, i32 0, i32 0, !dbg !8954
  br label %cond.end11, !dbg !8954

cond.false10:                                     ; preds = %cond.end5
  br label %cond.end11, !dbg !8954

cond.end11:                                       ; preds = %cond.false10, %cond.true8
  %cond12 = phi %struct.VEC_df_ref_base* [ %base9, %cond.true8 ], [ null, %cond.false10 ], !dbg !8954
  %14 = load i32, i32* %j.addr, align 4, !dbg !8954
  %call13 = call %union.df_ref_d* @VEC_df_ref_base_index(%struct.VEC_df_ref_base* %cond12, i32 %14), !dbg !8954
  %call14 = call %union.df_ref_d* @VEC_df_ref_base_replace(%struct.VEC_df_ref_base* %cond6, i32 %9, %union.df_ref_d* %call13), !dbg !8954
  %15 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8955
  %16 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %15, align 8, !dbg !8955
  %tobool15 = icmp ne %struct.VEC_df_ref_stack* %16, null, !dbg !8955
  br i1 %tobool15, label %cond.true16, label %cond.false18, !dbg !8955

cond.true16:                                      ; preds = %cond.end11
  %17 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %ref_vec.addr, align 8, !dbg !8955
  %18 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %17, align 8, !dbg !8955
  %base17 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %18, i32 0, i32 0, !dbg !8955
  br label %cond.end19, !dbg !8955

cond.false18:                                     ; preds = %cond.end11
  br label %cond.end19, !dbg !8955

cond.end19:                                       ; preds = %cond.false18, %cond.true16
  %cond20 = phi %struct.VEC_df_ref_base* [ %base17, %cond.true16 ], [ null, %cond.false18 ], !dbg !8955
  %19 = load i32, i32* %j.addr, align 4, !dbg !8955
  %20 = load %union.df_ref_d*, %union.df_ref_d** %tmp, align 8, !dbg !8955
  %call21 = call %union.df_ref_d* @VEC_df_ref_base_replace(%struct.VEC_df_ref_base* %cond20, i32 %19, %union.df_ref_d* %20), !dbg !8955
  ret void, !dbg !8956
}

; Function Attrs: noinline nounwind uwtable
define internal %union.df_ref_d** @VEC_df_ref_base_address(%struct.VEC_df_ref_base* %vec_) #0 !dbg !8957 {
entry:
  %vec_.addr = alloca %struct.VEC_df_ref_base*, align 8
  store %struct.VEC_df_ref_base* %vec_, %struct.VEC_df_ref_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_ref_base** %vec_.addr, metadata !8961, metadata !DIExpression()), !dbg !8962
  %0 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !8962
  %tobool = icmp ne %struct.VEC_df_ref_base* %0, null, !dbg !8962
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8962

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !8962
  %vec = getelementptr inbounds %struct.VEC_df_ref_base, %struct.VEC_df_ref_base* %1, i32 0, i32 2, !dbg !8962
  %arraydecay = getelementptr inbounds [1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* %vec, i64 0, i64 0, !dbg !8962
  br label %cond.end, !dbg !8962

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8962

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.df_ref_d** [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !8962
  ret %union.df_ref_d** %cond, !dbg !8962
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @df_ref_equal_p(%union.df_ref_d* %ref1, %union.df_ref_d* %ref2) #0 !dbg !8963 {
entry:
  %retval = alloca i8, align 1
  %ref1.addr = alloca %union.df_ref_d*, align 8
  %ref2.addr = alloca %union.df_ref_d*, align 8
  store %union.df_ref_d* %ref1, %union.df_ref_d** %ref1.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref1.addr, metadata !8966, metadata !DIExpression()), !dbg !8967
  store %union.df_ref_d* %ref2, %union.df_ref_d** %ref2.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref2.addr, metadata !8968, metadata !DIExpression()), !dbg !8969
  %0 = load %union.df_ref_d*, %union.df_ref_d** %ref2.addr, align 8, !dbg !8970
  %tobool = icmp ne %union.df_ref_d* %0, null, !dbg !8970
  br i1 %tobool, label %if.end, label %if.then, !dbg !8972

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !8973
  br label %return, !dbg !8973

if.end:                                           ; preds = %entry
  %1 = load %union.df_ref_d*, %union.df_ref_d** %ref1.addr, align 8, !dbg !8974
  %2 = load %union.df_ref_d*, %union.df_ref_d** %ref2.addr, align 8, !dbg !8976
  %cmp = icmp eq %union.df_ref_d* %1, %2, !dbg !8977
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !8978

if.then1:                                         ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !8979
  br label %return, !dbg !8979

if.end2:                                          ; preds = %if.end
  %3 = load %union.df_ref_d*, %union.df_ref_d** %ref1.addr, align 8, !dbg !8980
  %base = bitcast %union.df_ref_d* %3 to %struct.df_base_ref*, !dbg !8980
  %4 = bitcast %struct.df_base_ref* %base to i32*, !dbg !8980
  %bf.load = load i32, i32* %4, align 8, !dbg !8980
  %bf.clear = and i32 %bf.load, 255, !dbg !8980
  %5 = load %union.df_ref_d*, %union.df_ref_d** %ref2.addr, align 8, !dbg !8982
  %base3 = bitcast %union.df_ref_d* %5 to %struct.df_base_ref*, !dbg !8982
  %6 = bitcast %struct.df_base_ref* %base3 to i32*, !dbg !8982
  %bf.load4 = load i32, i32* %6, align 8, !dbg !8982
  %bf.clear5 = and i32 %bf.load4, 255, !dbg !8982
  %cmp6 = icmp ne i32 %bf.clear, %bf.clear5, !dbg !8983
  br i1 %cmp6, label %if.then63, label %lor.lhs.false, !dbg !8984

lor.lhs.false:                                    ; preds = %if.end2
  %7 = load %union.df_ref_d*, %union.df_ref_d** %ref1.addr, align 8, !dbg !8985
  %base7 = bitcast %union.df_ref_d* %7 to %struct.df_base_ref*, !dbg !8985
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base7, i32 0, i32 6, !dbg !8985
  %8 = load i32, i32* %regno, align 8, !dbg !8985
  %9 = load %union.df_ref_d*, %union.df_ref_d** %ref2.addr, align 8, !dbg !8986
  %base8 = bitcast %union.df_ref_d* %9 to %struct.df_base_ref*, !dbg !8986
  %regno9 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base8, i32 0, i32 6, !dbg !8986
  %10 = load i32, i32* %regno9, align 8, !dbg !8986
  %cmp10 = icmp ne i32 %8, %10, !dbg !8987
  br i1 %cmp10, label %if.then63, label %lor.lhs.false11, !dbg !8988

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %11 = load %union.df_ref_d*, %union.df_ref_d** %ref1.addr, align 8, !dbg !8989
  %base12 = bitcast %union.df_ref_d* %11 to %struct.df_base_ref*, !dbg !8989
  %reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base12, i32 0, i32 1, !dbg !8989
  %12 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !8989
  %13 = load %union.df_ref_d*, %union.df_ref_d** %ref2.addr, align 8, !dbg !8990
  %base13 = bitcast %union.df_ref_d* %13 to %struct.df_base_ref*, !dbg !8990
  %reg14 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base13, i32 0, i32 1, !dbg !8990
  %14 = load %struct.rtx_def*, %struct.rtx_def** %reg14, align 8, !dbg !8990
  %cmp15 = icmp ne %struct.rtx_def* %12, %14, !dbg !8991
  br i1 %cmp15, label %if.then63, label %lor.lhs.false16, !dbg !8992

lor.lhs.false16:                                  ; preds = %lor.lhs.false11
  %15 = load %union.df_ref_d*, %union.df_ref_d** %ref1.addr, align 8, !dbg !8993
  %base17 = bitcast %union.df_ref_d* %15 to %struct.df_base_ref*, !dbg !8993
  %16 = bitcast %struct.df_base_ref* %base17 to i32*, !dbg !8993
  %bf.load18 = load i32, i32* %16, align 8, !dbg !8993
  %bf.lshr = lshr i32 %bf.load18, 8, !dbg !8993
  %bf.clear19 = and i32 %bf.lshr, 255, !dbg !8993
  %17 = load %union.df_ref_d*, %union.df_ref_d** %ref2.addr, align 8, !dbg !8994
  %base20 = bitcast %union.df_ref_d* %17 to %struct.df_base_ref*, !dbg !8994
  %18 = bitcast %struct.df_base_ref* %base20 to i32*, !dbg !8994
  %bf.load21 = load i32, i32* %18, align 8, !dbg !8994
  %bf.lshr22 = lshr i32 %bf.load21, 8, !dbg !8994
  %bf.clear23 = and i32 %bf.lshr22, 255, !dbg !8994
  %cmp24 = icmp ne i32 %bf.clear19, %bf.clear23, !dbg !8995
  br i1 %cmp24, label %if.then63, label %lor.lhs.false25, !dbg !8996

lor.lhs.false25:                                  ; preds = %lor.lhs.false16
  %19 = load %union.df_ref_d*, %union.df_ref_d** %ref1.addr, align 8, !dbg !8997
  %base26 = bitcast %union.df_ref_d* %19 to %struct.df_base_ref*, !dbg !8997
  %20 = bitcast %struct.df_base_ref* %base26 to i32*, !dbg !8997
  %bf.load27 = load i32, i32* %20, align 8, !dbg !8997
  %bf.ashr = ashr i32 %bf.load27, 16, !dbg !8997
  %and = and i32 %bf.ashr, -20481, !dbg !8998
  %21 = load %union.df_ref_d*, %union.df_ref_d** %ref2.addr, align 8, !dbg !8999
  %base28 = bitcast %union.df_ref_d* %21 to %struct.df_base_ref*, !dbg !8999
  %22 = bitcast %struct.df_base_ref* %base28 to i32*, !dbg !8999
  %bf.load29 = load i32, i32* %22, align 8, !dbg !8999
  %bf.ashr30 = ashr i32 %bf.load29, 16, !dbg !8999
  %and31 = and i32 %bf.ashr30, -20481, !dbg !9000
  %cmp32 = icmp ne i32 %and, %and31, !dbg !9001
  br i1 %cmp32, label %if.then63, label %lor.lhs.false33, !dbg !9002

lor.lhs.false33:                                  ; preds = %lor.lhs.false25
  %23 = load %union.df_ref_d*, %union.df_ref_d** %ref1.addr, align 8, !dbg !9003
  %base34 = bitcast %union.df_ref_d* %23 to %struct.df_base_ref*, !dbg !9003
  %24 = bitcast %struct.df_base_ref* %base34 to i32*, !dbg !9003
  %bf.load35 = load i32, i32* %24, align 8, !dbg !9003
  %bf.clear36 = and i32 %bf.load35, 255, !dbg !9003
  %cmp37 = icmp eq i32 %bf.clear36, 1, !dbg !9003
  br i1 %cmp37, label %cond.true, label %cond.false, !dbg !9003

cond.true:                                        ; preds = %lor.lhs.false33
  %25 = load %union.df_ref_d*, %union.df_ref_d** %ref1.addr, align 8, !dbg !9003
  %artificial_ref = bitcast %union.df_ref_d* %25 to %struct.df_artificial_ref*, !dbg !9003
  %bb = getelementptr inbounds %struct.df_artificial_ref, %struct.df_artificial_ref* %artificial_ref, i32 0, i32 1, !dbg !9003
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !9003
  br label %cond.end, !dbg !9003

cond.false:                                       ; preds = %lor.lhs.false33
  %27 = load %union.df_ref_d*, %union.df_ref_d** %ref1.addr, align 8, !dbg !9003
  %base38 = bitcast %union.df_ref_d* %27 to %struct.df_base_ref*, !dbg !9003
  %insn_info = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base38, i32 0, i32 3, !dbg !9003
  %28 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !9003
  %insn = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %28, i32 0, i32 0, !dbg !9003
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9003
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !9003
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9003
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !9003
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !9003
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !9003
  br label %cond.end, !dbg !9003

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.basic_block_def* [ %26, %cond.true ], [ %30, %cond.false ], !dbg !9003
  %31 = load %union.df_ref_d*, %union.df_ref_d** %ref2.addr, align 8, !dbg !9004
  %base39 = bitcast %union.df_ref_d* %31 to %struct.df_base_ref*, !dbg !9004
  %32 = bitcast %struct.df_base_ref* %base39 to i32*, !dbg !9004
  %bf.load40 = load i32, i32* %32, align 8, !dbg !9004
  %bf.clear41 = and i32 %bf.load40, 255, !dbg !9004
  %cmp42 = icmp eq i32 %bf.clear41, 1, !dbg !9004
  br i1 %cmp42, label %cond.true43, label %cond.false46, !dbg !9004

cond.true43:                                      ; preds = %cond.end
  %33 = load %union.df_ref_d*, %union.df_ref_d** %ref2.addr, align 8, !dbg !9004
  %artificial_ref44 = bitcast %union.df_ref_d* %33 to %struct.df_artificial_ref*, !dbg !9004
  %bb45 = getelementptr inbounds %struct.df_artificial_ref, %struct.df_artificial_ref* %artificial_ref44, i32 0, i32 1, !dbg !9004
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %bb45, align 8, !dbg !9004
  br label %cond.end54, !dbg !9004

cond.false46:                                     ; preds = %cond.end
  %35 = load %union.df_ref_d*, %union.df_ref_d** %ref2.addr, align 8, !dbg !9004
  %base47 = bitcast %union.df_ref_d* %35 to %struct.df_base_ref*, !dbg !9004
  %insn_info48 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base47, i32 0, i32 3, !dbg !9004
  %36 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info48, align 8, !dbg !9004
  %insn49 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %36, i32 0, i32 0, !dbg !9004
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn49, align 8, !dbg !9004
  %u50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !9004
  %fld51 = bitcast %union.u* %u50 to [1 x %union.rtunion_def]*, !dbg !9004
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i64 0, i64 3, !dbg !9004
  %rt_bb53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.basic_block_def**, !dbg !9004
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb53, align 8, !dbg !9004
  br label %cond.end54, !dbg !9004

cond.end54:                                       ; preds = %cond.false46, %cond.true43
  %cond55 = phi %struct.basic_block_def* [ %34, %cond.true43 ], [ %38, %cond.false46 ], !dbg !9004
  %cmp56 = icmp ne %struct.basic_block_def* %cond, %cond55, !dbg !9005
  br i1 %cmp56, label %if.then63, label %lor.lhs.false57, !dbg !9006

lor.lhs.false57:                                  ; preds = %cond.end54
  %39 = load %union.df_ref_d*, %union.df_ref_d** %ref1.addr, align 8, !dbg !9007
  %base58 = bitcast %union.df_ref_d* %39 to %struct.df_base_ref*, !dbg !9007
  %insn_info59 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base58, i32 0, i32 3, !dbg !9007
  %40 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info59, align 8, !dbg !9007
  %41 = load %union.df_ref_d*, %union.df_ref_d** %ref2.addr, align 8, !dbg !9008
  %base60 = bitcast %union.df_ref_d* %41 to %struct.df_base_ref*, !dbg !9008
  %insn_info61 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base60, i32 0, i32 3, !dbg !9008
  %42 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info61, align 8, !dbg !9008
  %cmp62 = icmp ne %struct.df_insn_info* %40, %42, !dbg !9009
  br i1 %cmp62, label %if.then63, label %if.end64, !dbg !9010

if.then63:                                        ; preds = %lor.lhs.false57, %cond.end54, %lor.lhs.false25, %lor.lhs.false16, %lor.lhs.false11, %lor.lhs.false, %if.end2
  store i8 0, i8* %retval, align 1, !dbg !9011
  br label %return, !dbg !9011

if.end64:                                         ; preds = %lor.lhs.false57
  %43 = load %union.df_ref_d*, %union.df_ref_d** %ref1.addr, align 8, !dbg !9012
  %base65 = bitcast %union.df_ref_d* %43 to %struct.df_base_ref*, !dbg !9012
  %44 = bitcast %struct.df_base_ref* %base65 to i32*, !dbg !9012
  %bf.load66 = load i32, i32* %44, align 8, !dbg !9012
  %bf.clear67 = and i32 %bf.load66, 255, !dbg !9012
  switch i32 %bf.clear67, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb
    i32 3, label %sw.bb68
    i32 2, label %sw.bb84
  ], !dbg !9013

sw.bb:                                            ; preds = %if.end64, %if.end64
  store i8 1, i8* %retval, align 1, !dbg !9014
  br label %return, !dbg !9014

sw.bb68:                                          ; preds = %if.end64
  %45 = load %union.df_ref_d*, %union.df_ref_d** %ref1.addr, align 8, !dbg !9016
  %extract_ref = bitcast %union.df_ref_d* %45 to %struct.df_extract_ref*, !dbg !9016
  %offset = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref, i32 0, i32 2, !dbg !9016
  %46 = load i32, i32* %offset, align 4, !dbg !9016
  %47 = load %union.df_ref_d*, %union.df_ref_d** %ref2.addr, align 8, !dbg !9018
  %extract_ref69 = bitcast %union.df_ref_d* %47 to %struct.df_extract_ref*, !dbg !9018
  %offset70 = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref69, i32 0, i32 2, !dbg !9018
  %48 = load i32, i32* %offset70, align 4, !dbg !9018
  %cmp71 = icmp ne i32 %46, %48, !dbg !9019
  br i1 %cmp71, label %if.then82, label %lor.lhs.false72, !dbg !9020

lor.lhs.false72:                                  ; preds = %sw.bb68
  %49 = load %union.df_ref_d*, %union.df_ref_d** %ref1.addr, align 8, !dbg !9021
  %extract_ref73 = bitcast %union.df_ref_d* %49 to %struct.df_extract_ref*, !dbg !9021
  %width = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref73, i32 0, i32 1, !dbg !9021
  %50 = load i32, i32* %width, align 8, !dbg !9021
  %51 = load %union.df_ref_d*, %union.df_ref_d** %ref2.addr, align 8, !dbg !9022
  %extract_ref74 = bitcast %union.df_ref_d* %51 to %struct.df_extract_ref*, !dbg !9022
  %width75 = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref74, i32 0, i32 1, !dbg !9022
  %52 = load i32, i32* %width75, align 8, !dbg !9022
  %cmp76 = icmp ne i32 %50, %52, !dbg !9023
  br i1 %cmp76, label %if.then82, label %lor.lhs.false77, !dbg !9024

lor.lhs.false77:                                  ; preds = %lor.lhs.false72
  %53 = load %union.df_ref_d*, %union.df_ref_d** %ref1.addr, align 8, !dbg !9025
  %extract_ref78 = bitcast %union.df_ref_d* %53 to %struct.df_extract_ref*, !dbg !9025
  %mode = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref78, i32 0, i32 3, !dbg !9025
  %54 = load i32, i32* %mode, align 8, !dbg !9025
  %55 = load %union.df_ref_d*, %union.df_ref_d** %ref2.addr, align 8, !dbg !9026
  %extract_ref79 = bitcast %union.df_ref_d* %55 to %struct.df_extract_ref*, !dbg !9026
  %mode80 = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref79, i32 0, i32 3, !dbg !9026
  %56 = load i32, i32* %mode80, align 8, !dbg !9026
  %cmp81 = icmp ne i32 %54, %56, !dbg !9027
  br i1 %cmp81, label %if.then82, label %if.end83, !dbg !9028

if.then82:                                        ; preds = %lor.lhs.false77, %lor.lhs.false72, %sw.bb68
  store i8 0, i8* %retval, align 1, !dbg !9029
  br label %return, !dbg !9029

if.end83:                                         ; preds = %lor.lhs.false77
  br label %sw.bb84, !dbg !9030

sw.bb84:                                          ; preds = %if.end64, %if.end83
  %57 = load %union.df_ref_d*, %union.df_ref_d** %ref1.addr, align 8, !dbg !9031
  %base85 = bitcast %union.df_ref_d* %57 to %struct.df_base_ref*, !dbg !9031
  %58 = bitcast %struct.df_base_ref* %base85 to i32*, !dbg !9031
  %bf.load86 = load i32, i32* %58, align 8, !dbg !9031
  %bf.clear87 = and i32 %bf.load86, 255, !dbg !9031
  %cmp88 = icmp eq i32 %bf.clear87, 2, !dbg !9031
  br i1 %cmp88, label %cond.true94, label %lor.lhs.false89, !dbg !9031

lor.lhs.false89:                                  ; preds = %sw.bb84
  %59 = load %union.df_ref_d*, %union.df_ref_d** %ref1.addr, align 8, !dbg !9031
  %base90 = bitcast %union.df_ref_d* %59 to %struct.df_base_ref*, !dbg !9031
  %60 = bitcast %struct.df_base_ref* %base90 to i32*, !dbg !9031
  %bf.load91 = load i32, i32* %60, align 8, !dbg !9031
  %bf.clear92 = and i32 %bf.load91, 255, !dbg !9031
  %cmp93 = icmp eq i32 %bf.clear92, 3, !dbg !9031
  br i1 %cmp93, label %cond.true94, label %cond.false95, !dbg !9031

cond.true94:                                      ; preds = %lor.lhs.false89, %sw.bb84
  %61 = load %union.df_ref_d*, %union.df_ref_d** %ref1.addr, align 8, !dbg !9031
  %regular_ref = bitcast %union.df_ref_d* %61 to %struct.df_regular_ref*, !dbg !9031
  %loc = getelementptr inbounds %struct.df_regular_ref, %struct.df_regular_ref* %regular_ref, i32 0, i32 1, !dbg !9031
  %62 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !9031
  br label %cond.end96, !dbg !9031

cond.false95:                                     ; preds = %lor.lhs.false89
  br label %cond.end96, !dbg !9031

cond.end96:                                       ; preds = %cond.false95, %cond.true94
  %cond97 = phi %struct.rtx_def** [ %62, %cond.true94 ], [ null, %cond.false95 ], !dbg !9031
  %63 = load %union.df_ref_d*, %union.df_ref_d** %ref2.addr, align 8, !dbg !9032
  %base98 = bitcast %union.df_ref_d* %63 to %struct.df_base_ref*, !dbg !9032
  %64 = bitcast %struct.df_base_ref* %base98 to i32*, !dbg !9032
  %bf.load99 = load i32, i32* %64, align 8, !dbg !9032
  %bf.clear100 = and i32 %bf.load99, 255, !dbg !9032
  %cmp101 = icmp eq i32 %bf.clear100, 2, !dbg !9032
  br i1 %cmp101, label %cond.true107, label %lor.lhs.false102, !dbg !9032

lor.lhs.false102:                                 ; preds = %cond.end96
  %65 = load %union.df_ref_d*, %union.df_ref_d** %ref2.addr, align 8, !dbg !9032
  %base103 = bitcast %union.df_ref_d* %65 to %struct.df_base_ref*, !dbg !9032
  %66 = bitcast %struct.df_base_ref* %base103 to i32*, !dbg !9032
  %bf.load104 = load i32, i32* %66, align 8, !dbg !9032
  %bf.clear105 = and i32 %bf.load104, 255, !dbg !9032
  %cmp106 = icmp eq i32 %bf.clear105, 3, !dbg !9032
  br i1 %cmp106, label %cond.true107, label %cond.false110, !dbg !9032

cond.true107:                                     ; preds = %lor.lhs.false102, %cond.end96
  %67 = load %union.df_ref_d*, %union.df_ref_d** %ref2.addr, align 8, !dbg !9032
  %regular_ref108 = bitcast %union.df_ref_d* %67 to %struct.df_regular_ref*, !dbg !9032
  %loc109 = getelementptr inbounds %struct.df_regular_ref, %struct.df_regular_ref* %regular_ref108, i32 0, i32 1, !dbg !9032
  %68 = load %struct.rtx_def**, %struct.rtx_def*** %loc109, align 8, !dbg !9032
  br label %cond.end111, !dbg !9032

cond.false110:                                    ; preds = %lor.lhs.false102
  br label %cond.end111, !dbg !9032

cond.end111:                                      ; preds = %cond.false110, %cond.true107
  %cond112 = phi %struct.rtx_def** [ %68, %cond.true107 ], [ null, %cond.false110 ], !dbg !9032
  %cmp113 = icmp eq %struct.rtx_def** %cond97, %cond112, !dbg !9033
  %conv = zext i1 %cmp113 to i32, !dbg !9033
  %conv114 = trunc i32 %conv to i8, !dbg !9031
  store i8 %conv114, i8* %retval, align 1, !dbg !9034
  br label %return, !dbg !9034

sw.default:                                       ; preds = %if.end64
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 2351, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !9035
  br label %sw.epilog, !dbg !9036

sw.epilog:                                        ; preds = %sw.default
  store i8 0, i8* %retval, align 1, !dbg !9037
  br label %return, !dbg !9037

return:                                           ; preds = %sw.epilog, %cond.end111, %if.then82, %sw.bb, %if.then63, %if.then1, %if.then
  %69 = load i8, i8* %retval, align 1, !dbg !9038
  ret i8 %69, !dbg !9038
}

; Function Attrs: noinline nounwind uwtable
define internal %union.df_ref_d* @VEC_df_ref_base_replace(%struct.VEC_df_ref_base* %vec_, i32 %ix_, %union.df_ref_d* %obj_) #0 !dbg !9039 {
entry:
  %vec_.addr = alloca %struct.VEC_df_ref_base*, align 8
  %ix_.addr = alloca i32, align 4
  %obj_.addr = alloca %union.df_ref_d*, align 8
  %old_obj_ = alloca %union.df_ref_d*, align 8
  store %struct.VEC_df_ref_base* %vec_, %struct.VEC_df_ref_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_ref_base** %vec_.addr, metadata !9042, metadata !DIExpression()), !dbg !9043
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !9044, metadata !DIExpression()), !dbg !9043
  store %union.df_ref_d* %obj_, %union.df_ref_d** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %obj_.addr, metadata !9045, metadata !DIExpression()), !dbg !9043
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %old_obj_, metadata !9046, metadata !DIExpression()), !dbg !9043
  %0 = load i32, i32* %ix_.addr, align 4, !dbg !9043
  %1 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !9043
  %num = getelementptr inbounds %struct.VEC_df_ref_base, %struct.VEC_df_ref_base* %1, i32 0, i32 0, !dbg !9043
  %2 = load i32, i32* %num, align 8, !dbg !9043
  %cmp = icmp ult i32 %0, %2, !dbg !9043
  %conv = zext i1 %cmp to i32, !dbg !9043
  %3 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !9043
  %vec = getelementptr inbounds %struct.VEC_df_ref_base, %struct.VEC_df_ref_base* %3, i32 0, i32 2, !dbg !9043
  %4 = load i32, i32* %ix_.addr, align 4, !dbg !9043
  %idxprom = zext i32 %4 to i64, !dbg !9043
  %arrayidx = getelementptr inbounds [1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* %vec, i64 0, i64 %idxprom, !dbg !9043
  %5 = load %union.df_ref_d*, %union.df_ref_d** %arrayidx, align 8, !dbg !9043
  store %union.df_ref_d* %5, %union.df_ref_d** %old_obj_, align 8, !dbg !9043
  %6 = load %union.df_ref_d*, %union.df_ref_d** %obj_.addr, align 8, !dbg !9043
  %7 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !9043
  %vec1 = getelementptr inbounds %struct.VEC_df_ref_base, %struct.VEC_df_ref_base* %7, i32 0, i32 2, !dbg !9043
  %8 = load i32, i32* %ix_.addr, align 4, !dbg !9043
  %idxprom2 = zext i32 %8 to i64, !dbg !9043
  %arrayidx3 = getelementptr inbounds [1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* %vec1, i64 0, i64 %idxprom2, !dbg !9043
  store %union.df_ref_d* %6, %union.df_ref_d** %arrayidx3, align 8, !dbg !9043
  %9 = load %union.df_ref_d*, %union.df_ref_d** %old_obj_, align 8, !dbg !9043
  ret %union.df_ref_d* %9, !dbg !9043
}

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_df_ref_base_truncate(%struct.VEC_df_ref_base* %vec_, i32 %size_) #0 !dbg !9047 {
entry:
  %vec_.addr = alloca %struct.VEC_df_ref_base*, align 8
  %size_.addr = alloca i32, align 4
  store %struct.VEC_df_ref_base* %vec_, %struct.VEC_df_ref_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_ref_base** %vec_.addr, metadata !9050, metadata !DIExpression()), !dbg !9051
  store i32 %size_, i32* %size_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size_.addr, metadata !9052, metadata !DIExpression()), !dbg !9051
  %0 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !9051
  %tobool = icmp ne %struct.VEC_df_ref_base* %0, null, !dbg !9051
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9051

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !9051
  %num = getelementptr inbounds %struct.VEC_df_ref_base, %struct.VEC_df_ref_base* %1, i32 0, i32 0, !dbg !9051
  %2 = load i32, i32* %num, align 8, !dbg !9051
  %3 = load i32, i32* %size_.addr, align 4, !dbg !9051
  %cmp = icmp uge i32 %2, %3, !dbg !9051
  %conv = zext i1 %cmp to i32, !dbg !9051
  br label %cond.end, !dbg !9051

cond.false:                                       ; preds = %entry
  %4 = load i32, i32* %size_.addr, align 4, !dbg !9051
  %tobool1 = icmp ne i32 %4, 0, !dbg !9051
  %lnot = xor i1 %tobool1, true, !dbg !9051
  %lnot.ext = zext i1 %lnot to i32, !dbg !9051
  br label %cond.end, !dbg !9051

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !9051
  %5 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !9053
  %tobool2 = icmp ne %struct.VEC_df_ref_base* %5, null, !dbg !9053
  br i1 %tobool2, label %if.then, label %if.end, !dbg !9051

if.then:                                          ; preds = %cond.end
  %6 = load i32, i32* %size_.addr, align 4, !dbg !9053
  %7 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !9053
  %num3 = getelementptr inbounds %struct.VEC_df_ref_base, %struct.VEC_df_ref_base* %7, i32 0, i32 0, !dbg !9053
  store i32 %6, i32* %num3, align 8, !dbg !9053
  br label %if.end, !dbg !9053

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !9051
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.df_mw_hardreg* @VEC_df_mw_hardreg_ptr_base_index(%struct.VEC_df_mw_hardreg_ptr_base* %vec_, i32 %ix_) #0 !dbg !9055 {
entry:
  %vec_.addr = alloca %struct.VEC_df_mw_hardreg_ptr_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_df_mw_hardreg_ptr_base* %vec_, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, metadata !9058, metadata !DIExpression()), !dbg !9059
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !9060, metadata !DIExpression()), !dbg !9059
  %0 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !9059
  %tobool = icmp ne %struct.VEC_df_mw_hardreg_ptr_base* %0, null, !dbg !9059
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !9059

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !9059
  %2 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !9059
  %num = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_base, %struct.VEC_df_mw_hardreg_ptr_base* %2, i32 0, i32 0, !dbg !9059
  %3 = load i32, i32* %num, align 8, !dbg !9059
  %cmp = icmp ult i32 %1, %3, !dbg !9059
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !9061
  %land.ext = zext i1 %4 to i32, !dbg !9059
  %5 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !9059
  %vec = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_base, %struct.VEC_df_mw_hardreg_ptr_base* %5, i32 0, i32 2, !dbg !9059
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !9059
  %idxprom = zext i32 %6 to i64, !dbg !9059
  %arrayidx = getelementptr inbounds [1 x %struct.df_mw_hardreg*], [1 x %struct.df_mw_hardreg*]* %vec, i64 0, i64 %idxprom, !dbg !9059
  %7 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %arrayidx, align 8, !dbg !9059
  ret %struct.df_mw_hardreg* %7, !dbg !9059
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.df_mw_hardreg* @VEC_df_mw_hardreg_ptr_base_replace(%struct.VEC_df_mw_hardreg_ptr_base* %vec_, i32 %ix_, %struct.df_mw_hardreg* %obj_) #0 !dbg !9062 {
entry:
  %vec_.addr = alloca %struct.VEC_df_mw_hardreg_ptr_base*, align 8
  %ix_.addr = alloca i32, align 4
  %obj_.addr = alloca %struct.df_mw_hardreg*, align 8
  %old_obj_ = alloca %struct.df_mw_hardreg*, align 8
  store %struct.VEC_df_mw_hardreg_ptr_base* %vec_, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, metadata !9065, metadata !DIExpression()), !dbg !9066
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !9067, metadata !DIExpression()), !dbg !9066
  store %struct.df_mw_hardreg* %obj_, %struct.df_mw_hardreg** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %obj_.addr, metadata !9068, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %old_obj_, metadata !9069, metadata !DIExpression()), !dbg !9066
  %0 = load i32, i32* %ix_.addr, align 4, !dbg !9066
  %1 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !9066
  %num = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_base, %struct.VEC_df_mw_hardreg_ptr_base* %1, i32 0, i32 0, !dbg !9066
  %2 = load i32, i32* %num, align 8, !dbg !9066
  %cmp = icmp ult i32 %0, %2, !dbg !9066
  %conv = zext i1 %cmp to i32, !dbg !9066
  %3 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !9066
  %vec = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_base, %struct.VEC_df_mw_hardreg_ptr_base* %3, i32 0, i32 2, !dbg !9066
  %4 = load i32, i32* %ix_.addr, align 4, !dbg !9066
  %idxprom = zext i32 %4 to i64, !dbg !9066
  %arrayidx = getelementptr inbounds [1 x %struct.df_mw_hardreg*], [1 x %struct.df_mw_hardreg*]* %vec, i64 0, i64 %idxprom, !dbg !9066
  %5 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %arrayidx, align 8, !dbg !9066
  store %struct.df_mw_hardreg* %5, %struct.df_mw_hardreg** %old_obj_, align 8, !dbg !9066
  %6 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %obj_.addr, align 8, !dbg !9066
  %7 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !9066
  %vec1 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_base, %struct.VEC_df_mw_hardreg_ptr_base* %7, i32 0, i32 2, !dbg !9066
  %8 = load i32, i32* %ix_.addr, align 4, !dbg !9066
  %idxprom2 = zext i32 %8 to i64, !dbg !9066
  %arrayidx3 = getelementptr inbounds [1 x %struct.df_mw_hardreg*], [1 x %struct.df_mw_hardreg*]* %vec1, i64 0, i64 %idxprom2, !dbg !9066
  store %struct.df_mw_hardreg* %6, %struct.df_mw_hardreg** %arrayidx3, align 8, !dbg !9066
  %9 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %old_obj_, align 8, !dbg !9066
  ret %struct.df_mw_hardreg* %9, !dbg !9066
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @df_mw_equal_p(%struct.df_mw_hardreg* %mw1, %struct.df_mw_hardreg* %mw2) #0 !dbg !9070 {
entry:
  %retval = alloca i8, align 1
  %mw1.addr = alloca %struct.df_mw_hardreg*, align 8
  %mw2.addr = alloca %struct.df_mw_hardreg*, align 8
  store %struct.df_mw_hardreg* %mw1, %struct.df_mw_hardreg** %mw1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %mw1.addr, metadata !9073, metadata !DIExpression()), !dbg !9074
  store %struct.df_mw_hardreg* %mw2, %struct.df_mw_hardreg** %mw2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %mw2.addr, metadata !9075, metadata !DIExpression()), !dbg !9076
  %0 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw2.addr, align 8, !dbg !9077
  %tobool = icmp ne %struct.df_mw_hardreg* %0, null, !dbg !9077
  br i1 %tobool, label %if.end, label %if.then, !dbg !9079

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !9080
  br label %return, !dbg !9080

if.end:                                           ; preds = %entry
  %1 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw1.addr, align 8, !dbg !9081
  %2 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw2.addr, align 8, !dbg !9082
  %cmp = icmp eq %struct.df_mw_hardreg* %1, %2, !dbg !9083
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !9084

lor.rhs:                                          ; preds = %if.end
  %3 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw1.addr, align 8, !dbg !9085
  %mw_reg = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %3, i32 0, i32 0, !dbg !9086
  %4 = load %struct.rtx_def*, %struct.rtx_def** %mw_reg, align 8, !dbg !9086
  %5 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw2.addr, align 8, !dbg !9087
  %mw_reg1 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %5, i32 0, i32 0, !dbg !9088
  %6 = load %struct.rtx_def*, %struct.rtx_def** %mw_reg1, align 8, !dbg !9088
  %cmp2 = icmp eq %struct.rtx_def* %4, %6, !dbg !9089
  br i1 %cmp2, label %land.lhs.true, label %land.end, !dbg !9090

land.lhs.true:                                    ; preds = %lor.rhs
  %7 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw1.addr, align 8, !dbg !9091
  %type = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %7, i32 0, i32 1, !dbg !9092
  %bf.load = load i32, i32* %type, align 8, !dbg !9092
  %bf.clear = and i32 %bf.load, 65535, !dbg !9092
  %8 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw2.addr, align 8, !dbg !9093
  %type3 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %8, i32 0, i32 1, !dbg !9094
  %bf.load4 = load i32, i32* %type3, align 8, !dbg !9094
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !9094
  %cmp6 = icmp eq i32 %bf.clear, %bf.clear5, !dbg !9095
  br i1 %cmp6, label %land.lhs.true7, label %land.end, !dbg !9096

land.lhs.true7:                                   ; preds = %land.lhs.true
  %9 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw1.addr, align 8, !dbg !9097
  %flags = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %9, i32 0, i32 1, !dbg !9098
  %bf.load8 = load i32, i32* %flags, align 8, !dbg !9098
  %bf.ashr = ashr i32 %bf.load8, 16, !dbg !9098
  %10 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw2.addr, align 8, !dbg !9099
  %flags9 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %10, i32 0, i32 1, !dbg !9100
  %bf.load10 = load i32, i32* %flags9, align 8, !dbg !9100
  %bf.ashr11 = ashr i32 %bf.load10, 16, !dbg !9100
  %cmp12 = icmp eq i32 %bf.ashr, %bf.ashr11, !dbg !9101
  br i1 %cmp12, label %land.lhs.true13, label %land.end, !dbg !9102

land.lhs.true13:                                  ; preds = %land.lhs.true7
  %11 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw1.addr, align 8, !dbg !9103
  %start_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %11, i32 0, i32 2, !dbg !9104
  %12 = load i32, i32* %start_regno, align 4, !dbg !9104
  %13 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw2.addr, align 8, !dbg !9105
  %start_regno14 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %13, i32 0, i32 2, !dbg !9106
  %14 = load i32, i32* %start_regno14, align 4, !dbg !9106
  %cmp15 = icmp eq i32 %12, %14, !dbg !9107
  br i1 %cmp15, label %land.rhs, label %land.end, !dbg !9108

land.rhs:                                         ; preds = %land.lhs.true13
  %15 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw1.addr, align 8, !dbg !9109
  %end_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %15, i32 0, i32 3, !dbg !9110
  %16 = load i32, i32* %end_regno, align 8, !dbg !9110
  %17 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mw2.addr, align 8, !dbg !9111
  %end_regno16 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %17, i32 0, i32 3, !dbg !9112
  %18 = load i32, i32* %end_regno16, align 8, !dbg !9112
  %cmp17 = icmp eq i32 %16, %18, !dbg !9113
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true13, %land.lhs.true7, %land.lhs.true, %lor.rhs
  %19 = phi i1 [ false, %land.lhs.true13 ], [ false, %land.lhs.true7 ], [ false, %land.lhs.true ], [ false, %lor.rhs ], [ %cmp17, %land.rhs ], !dbg !9114
  br label %lor.end, !dbg !9084

lor.end:                                          ; preds = %land.end, %if.end
  %20 = phi i1 [ true, %if.end ], [ %19, %land.end ]
  %lor.ext = zext i1 %20 to i32, !dbg !9084
  %conv = trunc i32 %lor.ext to i8, !dbg !9115
  store i8 %conv, i8* %retval, align 1, !dbg !9116
  br label %return, !dbg !9116

return:                                           ; preds = %lor.end, %if.then
  %21 = load i8, i8* %retval, align 1, !dbg !9117
  ret i8 %21, !dbg !9117
}

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_df_mw_hardreg_ptr_base_truncate(%struct.VEC_df_mw_hardreg_ptr_base* %vec_, i32 %size_) #0 !dbg !9118 {
entry:
  %vec_.addr = alloca %struct.VEC_df_mw_hardreg_ptr_base*, align 8
  %size_.addr = alloca i32, align 4
  store %struct.VEC_df_mw_hardreg_ptr_base* %vec_, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, metadata !9121, metadata !DIExpression()), !dbg !9122
  store i32 %size_, i32* %size_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size_.addr, metadata !9123, metadata !DIExpression()), !dbg !9122
  %0 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !9122
  %tobool = icmp ne %struct.VEC_df_mw_hardreg_ptr_base* %0, null, !dbg !9122
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9122

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !9122
  %num = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_base, %struct.VEC_df_mw_hardreg_ptr_base* %1, i32 0, i32 0, !dbg !9122
  %2 = load i32, i32* %num, align 8, !dbg !9122
  %3 = load i32, i32* %size_.addr, align 4, !dbg !9122
  %cmp = icmp uge i32 %2, %3, !dbg !9122
  %conv = zext i1 %cmp to i32, !dbg !9122
  br label %cond.end, !dbg !9122

cond.false:                                       ; preds = %entry
  %4 = load i32, i32* %size_.addr, align 4, !dbg !9122
  %tobool1 = icmp ne i32 %4, 0, !dbg !9122
  %lnot = xor i1 %tobool1, true, !dbg !9122
  %lnot.ext = zext i1 %lnot to i32, !dbg !9122
  br label %cond.end, !dbg !9122

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !9122
  %5 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !9124
  %tobool2 = icmp ne %struct.VEC_df_mw_hardreg_ptr_base* %5, null, !dbg !9124
  br i1 %tobool2, label %if.then, label %if.end, !dbg !9122

if.then:                                          ; preds = %cond.end
  %6 = load i32, i32* %size_.addr, align 4, !dbg !9124
  %7 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !9124
  %num3 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_base, %struct.VEC_df_mw_hardreg_ptr_base* %7, i32 0, i32 0, !dbg !9124
  store i32 %6, i32* %num3, align 8, !dbg !9124
  br label %if.end, !dbg !9124

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !9122
}

; Function Attrs: noinline nounwind uwtable
define internal %union.df_ref_d** @df_install_refs(%struct.basic_block_def* %bb, %struct.VEC_df_ref_stack* %old_vec, %struct.df_reg_info** %reg_info, %struct.df_ref_info* %ref_info, i8 zeroext %is_notes) #0 !dbg !9126 {
entry:
  %retval = alloca %union.df_ref_d**, align 8
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %old_vec.addr = alloca %struct.VEC_df_ref_stack*, align 8
  %reg_info.addr = alloca %struct.df_reg_info**, align 8
  %ref_info.addr = alloca %struct.df_ref_info*, align 8
  %is_notes.addr = alloca i8, align 1
  %count = alloca i32, align 4
  %new_vec = alloca %union.df_ref_d**, align 8
  %add_to_table = alloca i8, align 1
  %this_ref = alloca %union.df_ref_d*, align 8
  %ix = alloca i32, align 4
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !9129, metadata !DIExpression()), !dbg !9130
  store %struct.VEC_df_ref_stack* %old_vec, %struct.VEC_df_ref_stack** %old_vec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_ref_stack** %old_vec.addr, metadata !9131, metadata !DIExpression()), !dbg !9132
  store %struct.df_reg_info** %reg_info, %struct.df_reg_info*** %reg_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_reg_info*** %reg_info.addr, metadata !9133, metadata !DIExpression()), !dbg !9134
  store %struct.df_ref_info* %ref_info, %struct.df_ref_info** %ref_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_ref_info** %ref_info.addr, metadata !9135, metadata !DIExpression()), !dbg !9136
  store i8 %is_notes, i8* %is_notes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_notes.addr, metadata !9137, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.declare(metadata i32* %count, metadata !9139, metadata !DIExpression()), !dbg !9140
  %0 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %old_vec.addr, align 8, !dbg !9141
  %tobool = icmp ne %struct.VEC_df_ref_stack* %0, null, !dbg !9141
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9141

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %old_vec.addr, align 8, !dbg !9141
  %base = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %1, i32 0, i32 0, !dbg !9141
  br label %cond.end, !dbg !9141

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9141

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_df_ref_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9141
  %call = call i32 @VEC_df_ref_base_length(%struct.VEC_df_ref_base* %cond), !dbg !9141
  store i32 %call, i32* %count, align 4, !dbg !9142
  %2 = load i32, i32* %count, align 4, !dbg !9143
  %tobool1 = icmp ne i32 %2, 0, !dbg !9143
  br i1 %tobool1, label %if.then, label %if.else, !dbg !9145

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %new_vec, metadata !9146, metadata !DIExpression()), !dbg !9148
  %3 = load i32, i32* %count, align 4, !dbg !9149
  %add = add i32 %3, 1, !dbg !9149
  %conv = zext i32 %add to i64, !dbg !9149
  %mul = mul i64 8, %conv, !dbg !9149
  %call2 = call i8* @xmalloc(i64 %mul), !dbg !9149
  %4 = bitcast i8* %call2 to %union.df_ref_d**, !dbg !9149
  store %union.df_ref_d** %4, %union.df_ref_d*** %new_vec, align 8, !dbg !9148
  call void @llvm.dbg.declare(metadata i8* %add_to_table, metadata !9150, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %this_ref, metadata !9152, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.declare(metadata i32* %ix, metadata !9154, metadata !DIExpression()), !dbg !9155
  %5 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !9156
  %ref_order = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %5, i32 0, i32 6, !dbg !9157
  %6 = load i32, i32* %ref_order, align 4, !dbg !9157
  switch i32 %6, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb
    i32 1, label %sw.bb4
    i32 3, label %sw.bb4
    i32 5, label %sw.bb4
  ], !dbg !9158

sw.bb:                                            ; preds = %if.then, %if.then, %if.then
  %7 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !9159
  %ref_order3 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %7, i32 0, i32 6, !dbg !9161
  store i32 2, i32* %ref_order3, align 4, !dbg !9162
  store i8 1, i8* %add_to_table, align 1, !dbg !9163
  br label %sw.epilog, !dbg !9164

sw.bb4:                                           ; preds = %if.then, %if.then, %if.then
  %8 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !9165
  %ref_order5 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %8, i32 0, i32 6, !dbg !9166
  store i32 1, i32* %ref_order5, align 4, !dbg !9167
  %9 = load i8, i8* %is_notes.addr, align 1, !dbg !9168
  %tobool6 = icmp ne i8 %9, 0, !dbg !9169
  %lnot = xor i1 %tobool6, true, !dbg !9169
  %lnot.ext = zext i1 %lnot to i32, !dbg !9169
  %conv7 = trunc i32 %lnot.ext to i8, !dbg !9169
  store i8 %conv7, i8* %add_to_table, align 1, !dbg !9170
  br label %sw.epilog, !dbg !9171

sw.default:                                       ; preds = %if.then
  store i8 0, i8* %add_to_table, align 1, !dbg !9172
  br label %sw.epilog, !dbg !9173

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb
  %10 = load i8, i8* %add_to_table, align 1, !dbg !9174
  %conv8 = zext i8 %10 to i32, !dbg !9174
  %tobool9 = icmp ne i32 %conv8, 0, !dbg !9174
  br i1 %tobool9, label %land.lhs.true, label %if.end, !dbg !9176

land.lhs.true:                                    ; preds = %sw.epilog
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !9177
  %analyze_subset = getelementptr inbounds %struct.df, %struct.df* %11, i32 0, i32 28, !dbg !9178
  %12 = load i8, i8* %analyze_subset, align 1, !dbg !9178
  %conv10 = zext i8 %12 to i32, !dbg !9177
  %tobool11 = icmp ne i32 %conv10, 0, !dbg !9177
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !9179

if.then12:                                        ; preds = %land.lhs.true
  %13 = load %struct.df*, %struct.df** @df, align 8, !dbg !9180
  %blocks_to_analyze = getelementptr inbounds %struct.df, %struct.df* %13, i32 0, i32 2, !dbg !9181
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %blocks_to_analyze, align 8, !dbg !9181
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9182
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i32 0, i32 9, !dbg !9183
  %16 = load i32, i32* %index, align 8, !dbg !9183
  %call13 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %14, i32 %16), !dbg !9184
  %conv14 = trunc i32 %call13 to i8, !dbg !9184
  store i8 %conv14, i8* %add_to_table, align 1, !dbg !9185
  br label %if.end, !dbg !9186

if.end:                                           ; preds = %if.then12, %land.lhs.true, %sw.epilog
  store i32 0, i32* %ix, align 4, !dbg !9187
  br label %for.cond, !dbg !9189

for.cond:                                         ; preds = %for.inc, %if.end
  %17 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %old_vec.addr, align 8, !dbg !9190
  %tobool15 = icmp ne %struct.VEC_df_ref_stack* %17, null, !dbg !9190
  br i1 %tobool15, label %cond.true16, label %cond.false18, !dbg !9190

cond.true16:                                      ; preds = %for.cond
  %18 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %old_vec.addr, align 8, !dbg !9190
  %base17 = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %18, i32 0, i32 0, !dbg !9190
  br label %cond.end19, !dbg !9190

cond.false18:                                     ; preds = %for.cond
  br label %cond.end19, !dbg !9190

cond.end19:                                       ; preds = %cond.false18, %cond.true16
  %cond20 = phi %struct.VEC_df_ref_base* [ %base17, %cond.true16 ], [ null, %cond.false18 ], !dbg !9190
  %19 = load i32, i32* %ix, align 4, !dbg !9190
  %call21 = call i32 @VEC_df_ref_base_iterate(%struct.VEC_df_ref_base* %cond20, i32 %19, %union.df_ref_d** %this_ref), !dbg !9190
  %tobool22 = icmp ne i32 %call21, 0, !dbg !9192
  br i1 %tobool22, label %for.body, label %for.end, !dbg !9192

for.body:                                         ; preds = %cond.end19
  %20 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !9193
  %21 = load %union.df_ref_d**, %union.df_ref_d*** %new_vec, align 8, !dbg !9195
  %22 = load i32, i32* %ix, align 4, !dbg !9196
  %idxprom = zext i32 %22 to i64, !dbg !9195
  %arrayidx = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %21, i64 %idxprom, !dbg !9195
  store %union.df_ref_d* %20, %union.df_ref_d** %arrayidx, align 8, !dbg !9197
  %23 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !9198
  %24 = load %struct.df_reg_info**, %struct.df_reg_info*** %reg_info.addr, align 8, !dbg !9199
  %25 = load %union.df_ref_d*, %union.df_ref_d** %this_ref, align 8, !dbg !9200
  %base23 = bitcast %union.df_ref_d* %25 to %struct.df_base_ref*, !dbg !9200
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base23, i32 0, i32 6, !dbg !9200
  %26 = load i32, i32* %regno, align 8, !dbg !9200
  %idxprom24 = zext i32 %26 to i64, !dbg !9199
  %arrayidx25 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %24, i64 %idxprom24, !dbg !9199
  %27 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx25, align 8, !dbg !9199
  %28 = load %struct.df_ref_info*, %struct.df_ref_info** %ref_info.addr, align 8, !dbg !9201
  %29 = load i8, i8* %add_to_table, align 1, !dbg !9202
  call void @df_install_ref(%union.df_ref_d* %23, %struct.df_reg_info* %27, %struct.df_ref_info* %28, i8 zeroext %29), !dbg !9203
  br label %for.inc, !dbg !9204

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %ix, align 4, !dbg !9205
  %inc = add i32 %30, 1, !dbg !9205
  store i32 %inc, i32* %ix, align 4, !dbg !9205
  br label %for.cond, !dbg !9206, !llvm.loop !9207

for.end:                                          ; preds = %cond.end19
  %31 = load %union.df_ref_d**, %union.df_ref_d*** %new_vec, align 8, !dbg !9209
  %32 = load i32, i32* %count, align 4, !dbg !9210
  %idxprom26 = zext i32 %32 to i64, !dbg !9209
  %arrayidx27 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %31, i64 %idxprom26, !dbg !9209
  store %union.df_ref_d* null, %union.df_ref_d** %arrayidx27, align 8, !dbg !9211
  %33 = load %union.df_ref_d**, %union.df_ref_d*** %new_vec, align 8, !dbg !9212
  store %union.df_ref_d** %33, %union.df_ref_d*** %retval, align 8, !dbg !9213
  br label %return, !dbg !9213

if.else:                                          ; preds = %cond.end
  store %union.df_ref_d** getelementptr inbounds ([1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* @df_null_ref_rec, i64 0, i64 0), %union.df_ref_d*** %retval, align 8, !dbg !9214
  br label %return, !dbg !9214

return:                                           ; preds = %if.else, %for.end
  %34 = load %union.df_ref_d**, %union.df_ref_d*** %retval, align 8, !dbg !9215
  ret %union.df_ref_d** %34, !dbg !9215
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.df_mw_hardreg** @df_install_mws(%struct.VEC_df_mw_hardreg_ptr_stack* %old_vec) #0 !dbg !9216 {
entry:
  %retval = alloca %struct.df_mw_hardreg**, align 8
  %old_vec.addr = alloca %struct.VEC_df_mw_hardreg_ptr_stack*, align 8
  %count = alloca i32, align 4
  %new_vec = alloca %struct.df_mw_hardreg**, align 8
  store %struct.VEC_df_mw_hardreg_ptr_stack* %old_vec, %struct.VEC_df_mw_hardreg_ptr_stack** %old_vec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_mw_hardreg_ptr_stack** %old_vec.addr, metadata !9219, metadata !DIExpression()), !dbg !9220
  call void @llvm.dbg.declare(metadata i32* %count, metadata !9221, metadata !DIExpression()), !dbg !9222
  %0 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %old_vec.addr, align 8, !dbg !9223
  %tobool = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %0, null, !dbg !9223
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9223

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %old_vec.addr, align 8, !dbg !9223
  %base = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %1, i32 0, i32 0, !dbg !9223
  br label %cond.end, !dbg !9223

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9223

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9223
  %call = call i32 @VEC_df_mw_hardreg_ptr_base_length(%struct.VEC_df_mw_hardreg_ptr_base* %cond), !dbg !9223
  store i32 %call, i32* %count, align 4, !dbg !9224
  %2 = load i32, i32* %count, align 4, !dbg !9225
  %tobool1 = icmp ne i32 %2, 0, !dbg !9225
  br i1 %tobool1, label %if.then, label %if.else, !dbg !9227

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg*** %new_vec, metadata !9228, metadata !DIExpression()), !dbg !9230
  %3 = load i32, i32* %count, align 4, !dbg !9231
  %add = add i32 %3, 1, !dbg !9231
  %conv = zext i32 %add to i64, !dbg !9231
  %mul = mul i64 8, %conv, !dbg !9231
  %call2 = call i8* @xmalloc(i64 %mul), !dbg !9231
  %4 = bitcast i8* %call2 to %struct.df_mw_hardreg**, !dbg !9231
  store %struct.df_mw_hardreg** %4, %struct.df_mw_hardreg*** %new_vec, align 8, !dbg !9230
  %5 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %new_vec, align 8, !dbg !9232
  %6 = bitcast %struct.df_mw_hardreg** %5 to i8*, !dbg !9233
  %7 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %old_vec.addr, align 8, !dbg !9234
  %tobool3 = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %7, null, !dbg !9234
  br i1 %tobool3, label %cond.true4, label %cond.false6, !dbg !9234

cond.true4:                                       ; preds = %if.then
  %8 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %old_vec.addr, align 8, !dbg !9234
  %base5 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %8, i32 0, i32 0, !dbg !9234
  br label %cond.end7, !dbg !9234

cond.false6:                                      ; preds = %if.then
  br label %cond.end7, !dbg !9234

cond.end7:                                        ; preds = %cond.false6, %cond.true4
  %cond8 = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base5, %cond.true4 ], [ null, %cond.false6 ], !dbg !9234
  %call9 = call %struct.df_mw_hardreg** @VEC_df_mw_hardreg_ptr_base_address(%struct.VEC_df_mw_hardreg_ptr_base* %cond8), !dbg !9234
  %9 = bitcast %struct.df_mw_hardreg** %call9 to i8*, !dbg !9233
  %10 = load i32, i32* %count, align 4, !dbg !9235
  %conv10 = zext i32 %10 to i64, !dbg !9235
  %mul11 = mul i64 8, %conv10, !dbg !9236
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %9, i64 %mul11, i1 false), !dbg !9233
  %11 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %new_vec, align 8, !dbg !9237
  %12 = load i32, i32* %count, align 4, !dbg !9238
  %idxprom = zext i32 %12 to i64, !dbg !9237
  %arrayidx = getelementptr inbounds %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %11, i64 %idxprom, !dbg !9237
  store %struct.df_mw_hardreg* null, %struct.df_mw_hardreg** %arrayidx, align 8, !dbg !9239
  %13 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %new_vec, align 8, !dbg !9240
  store %struct.df_mw_hardreg** %13, %struct.df_mw_hardreg*** %retval, align 8, !dbg !9241
  br label %return, !dbg !9241

if.else:                                          ; preds = %cond.end
  store %struct.df_mw_hardreg** getelementptr inbounds ([1 x %struct.df_mw_hardreg*], [1 x %struct.df_mw_hardreg*]* @df_null_mw_rec, i64 0, i64 0), %struct.df_mw_hardreg*** %retval, align 8, !dbg !9242
  br label %return, !dbg !9242

return:                                           ; preds = %if.else, %cond.end7
  %14 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %retval, align 8, !dbg !9243
  ret %struct.df_mw_hardreg** %14, !dbg !9243
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rhs_regno(%struct.rtx_def* %x) #0 !dbg !9244 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !9250, metadata !DIExpression()), !dbg !9251
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9252
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !9252
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9252
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !9252
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !9252
  %1 = load i32, i32* %rt_uint, align 8, !dbg !9252
  ret i32 %1, !dbg !9253
}

; Function Attrs: noinline nounwind uwtable
define internal %union.df_ref_d** @VEC_df_ref_stack_safe_push(%struct.VEC_df_ref_stack** %vec_, %union.df_ref_d* %obj_) #0 !dbg !9254 {
entry:
  %vec_.addr = alloca %struct.VEC_df_ref_stack**, align 8
  %obj_.addr = alloca %union.df_ref_d*, align 8
  store %struct.VEC_df_ref_stack** %vec_, %struct.VEC_df_ref_stack*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_ref_stack*** %vec_.addr, metadata !9257, metadata !DIExpression()), !dbg !9258
  store %union.df_ref_d* %obj_, %union.df_ref_d** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %obj_.addr, metadata !9259, metadata !DIExpression()), !dbg !9258
  %0 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %vec_.addr, align 8, !dbg !9258
  %call = call i32 @VEC_df_ref_stack_reserve(%struct.VEC_df_ref_stack** %0, i32 1), !dbg !9258
  %1 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %vec_.addr, align 8, !dbg !9258
  %2 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %1, align 8, !dbg !9258
  %tobool = icmp ne %struct.VEC_df_ref_stack* %2, null, !dbg !9258
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9258

cond.true:                                        ; preds = %entry
  %3 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %vec_.addr, align 8, !dbg !9258
  %4 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %3, align 8, !dbg !9258
  %base = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %4, i32 0, i32 0, !dbg !9258
  br label %cond.end, !dbg !9258

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9258

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_df_ref_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9258
  %5 = load %union.df_ref_d*, %union.df_ref_d** %obj_.addr, align 8, !dbg !9258
  %call1 = call %union.df_ref_d** @VEC_df_ref_base_quick_push(%struct.VEC_df_ref_base* %cond, %union.df_ref_d* %5), !dbg !9258
  ret %union.df_ref_d** %call1, !dbg !9258
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_df_ref_stack_reserve(%struct.VEC_df_ref_stack** %vec_, i32 %alloc_) #0 !dbg !9260 {
entry:
  %vec_.addr = alloca %struct.VEC_df_ref_stack**, align 8
  %alloc_.addr = alloca i32, align 4
  %extend = alloca i32, align 4
  store %struct.VEC_df_ref_stack** %vec_, %struct.VEC_df_ref_stack*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_ref_stack*** %vec_.addr, metadata !9263, metadata !DIExpression()), !dbg !9264
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !9265, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.declare(metadata i32* %extend, metadata !9266, metadata !DIExpression()), !dbg !9264
  %0 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %vec_.addr, align 8, !dbg !9264
  %1 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %0, align 8, !dbg !9264
  %tobool = icmp ne %struct.VEC_df_ref_stack* %1, null, !dbg !9264
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9264

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %vec_.addr, align 8, !dbg !9264
  %3 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %2, align 8, !dbg !9264
  %base = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %3, i32 0, i32 0, !dbg !9264
  br label %cond.end, !dbg !9264

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9264

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_df_ref_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9264
  %4 = load i32, i32* %alloc_.addr, align 4, !dbg !9264
  %call = call i32 @VEC_df_ref_base_space(%struct.VEC_df_ref_base* %cond, i32 %4), !dbg !9264
  %tobool1 = icmp ne i32 %call, 0, !dbg !9264
  %lnot = xor i1 %tobool1, true, !dbg !9264
  %lnot.ext = zext i1 %lnot to i32, !dbg !9264
  store i32 %lnot.ext, i32* %extend, align 4, !dbg !9264
  %5 = load i32, i32* %extend, align 4, !dbg !9267
  %tobool2 = icmp ne i32 %5, 0, !dbg !9267
  br i1 %tobool2, label %if.then, label %if.end, !dbg !9264

if.then:                                          ; preds = %cond.end
  %6 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %vec_.addr, align 8, !dbg !9267
  %7 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %6, align 8, !dbg !9267
  %8 = bitcast %struct.VEC_df_ref_stack* %7 to i8*, !dbg !9267
  %9 = load i32, i32* %alloc_.addr, align 4, !dbg !9267
  %call3 = call i8* @vec_stack_p_reserve(i8* %8, i32 %9), !dbg !9267
  %10 = bitcast i8* %call3 to %struct.VEC_df_ref_stack*, !dbg !9267
  %11 = load %struct.VEC_df_ref_stack**, %struct.VEC_df_ref_stack*** %vec_.addr, align 8, !dbg !9267
  store %struct.VEC_df_ref_stack* %10, %struct.VEC_df_ref_stack** %11, align 8, !dbg !9267
  br label %if.end, !dbg !9267

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load i32, i32* %extend, align 4, !dbg !9264
  ret i32 %12, !dbg !9264
}

; Function Attrs: noinline nounwind uwtable
define internal %union.df_ref_d** @VEC_df_ref_base_quick_push(%struct.VEC_df_ref_base* %vec_, %union.df_ref_d* %obj_) #0 !dbg !9269 {
entry:
  %vec_.addr = alloca %struct.VEC_df_ref_base*, align 8
  %obj_.addr = alloca %union.df_ref_d*, align 8
  %slot_ = alloca %union.df_ref_d**, align 8
  store %struct.VEC_df_ref_base* %vec_, %struct.VEC_df_ref_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_ref_base** %vec_.addr, metadata !9272, metadata !DIExpression()), !dbg !9273
  store %union.df_ref_d* %obj_, %union.df_ref_d** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %obj_.addr, metadata !9274, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %slot_, metadata !9275, metadata !DIExpression()), !dbg !9273
  %0 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !9273
  %num = getelementptr inbounds %struct.VEC_df_ref_base, %struct.VEC_df_ref_base* %0, i32 0, i32 0, !dbg !9273
  %1 = load i32, i32* %num, align 8, !dbg !9273
  %2 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !9273
  %alloc = getelementptr inbounds %struct.VEC_df_ref_base, %struct.VEC_df_ref_base* %2, i32 0, i32 1, !dbg !9273
  %3 = load i32, i32* %alloc, align 4, !dbg !9273
  %cmp = icmp ult i32 %1, %3, !dbg !9273
  %conv = zext i1 %cmp to i32, !dbg !9273
  %4 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !9273
  %vec = getelementptr inbounds %struct.VEC_df_ref_base, %struct.VEC_df_ref_base* %4, i32 0, i32 2, !dbg !9273
  %5 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !9273
  %num1 = getelementptr inbounds %struct.VEC_df_ref_base, %struct.VEC_df_ref_base* %5, i32 0, i32 0, !dbg !9273
  %6 = load i32, i32* %num1, align 8, !dbg !9273
  %inc = add i32 %6, 1, !dbg !9273
  store i32 %inc, i32* %num1, align 8, !dbg !9273
  %idxprom = zext i32 %6 to i64, !dbg !9273
  %arrayidx = getelementptr inbounds [1 x %union.df_ref_d*], [1 x %union.df_ref_d*]* %vec, i64 0, i64 %idxprom, !dbg !9273
  store %union.df_ref_d** %arrayidx, %union.df_ref_d*** %slot_, align 8, !dbg !9273
  %7 = load %union.df_ref_d*, %union.df_ref_d** %obj_.addr, align 8, !dbg !9273
  %8 = load %union.df_ref_d**, %union.df_ref_d*** %slot_, align 8, !dbg !9273
  store %union.df_ref_d* %7, %union.df_ref_d** %8, align 8, !dbg !9273
  %9 = load %union.df_ref_d**, %union.df_ref_d*** %slot_, align 8, !dbg !9273
  ret %union.df_ref_d** %9, !dbg !9273
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_df_ref_base_space(%struct.VEC_df_ref_base* %vec_, i32 %alloc_) #0 !dbg !9276 {
entry:
  %vec_.addr = alloca %struct.VEC_df_ref_base*, align 8
  %alloc_.addr = alloca i32, align 4
  store %struct.VEC_df_ref_base* %vec_, %struct.VEC_df_ref_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_ref_base** %vec_.addr, metadata !9279, metadata !DIExpression()), !dbg !9280
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !9281, metadata !DIExpression()), !dbg !9280
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !9280
  %cmp = icmp sge i32 %0, 0, !dbg !9280
  %conv = zext i1 %cmp to i32, !dbg !9280
  %1 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !9280
  %tobool = icmp ne %struct.VEC_df_ref_base* %1, null, !dbg !9280
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9280

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !9280
  %alloc = getelementptr inbounds %struct.VEC_df_ref_base, %struct.VEC_df_ref_base* %2, i32 0, i32 1, !dbg !9280
  %3 = load i32, i32* %alloc, align 4, !dbg !9280
  %4 = load %struct.VEC_df_ref_base*, %struct.VEC_df_ref_base** %vec_.addr, align 8, !dbg !9280
  %num = getelementptr inbounds %struct.VEC_df_ref_base, %struct.VEC_df_ref_base* %4, i32 0, i32 0, !dbg !9280
  %5 = load i32, i32* %num, align 8, !dbg !9280
  %sub = sub i32 %3, %5, !dbg !9280
  %6 = load i32, i32* %alloc_.addr, align 4, !dbg !9280
  %cmp1 = icmp uge i32 %sub, %6, !dbg !9280
  %conv2 = zext i1 %cmp1 to i32, !dbg !9280
  br label %cond.end, !dbg !9280

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %alloc_.addr, align 4, !dbg !9280
  %tobool3 = icmp ne i32 %7, 0, !dbg !9280
  %lnot = xor i1 %tobool3, true, !dbg !9280
  %lnot.ext = zext i1 %lnot to i32, !dbg !9280
  br label %cond.end, !dbg !9280

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv2, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !9280
  ret i32 %cond, !dbg !9280
}

declare dso_local i8* @vec_stack_p_reserve(i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_ref_record(i32 %cl, %struct.df_collection_rec* %collection_rec, %struct.rtx_def* %reg, %struct.rtx_def** %loc, %struct.basic_block_def* %bb, %struct.df_insn_info* %insn_info, i32 %ref_type, i32 %ref_flags, i32 %width, i32 %offset, i32 %mode) #0 !dbg !9282 {
entry:
  %cl.addr = alloca i32, align 4
  %collection_rec.addr = alloca %struct.df_collection_rec*, align 8
  %reg.addr = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def**, align 8
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %insn_info.addr = alloca %struct.df_insn_info*, align 8
  %ref_type.addr = alloca i32, align 4
  %ref_flags.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %regno = alloca i32, align 4
  %hardreg = alloca %struct.df_mw_hardreg*, align 8
  %problem_data = alloca %struct.df_scan_problem_data*, align 8
  %i = alloca i32, align 4
  %endregno = alloca i32, align 4
  %ref = alloca %union.df_ref_d*, align 8
  store i32 %cl, i32* %cl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cl.addr, metadata !9285, metadata !DIExpression()), !dbg !9286
  store %struct.df_collection_rec* %collection_rec, %struct.df_collection_rec** %collection_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec** %collection_rec.addr, metadata !9287, metadata !DIExpression()), !dbg !9288
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg.addr, metadata !9289, metadata !DIExpression()), !dbg !9290
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc.addr, metadata !9291, metadata !DIExpression()), !dbg !9292
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !9293, metadata !DIExpression()), !dbg !9294
  store %struct.df_insn_info* %insn_info, %struct.df_insn_info** %insn_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info.addr, metadata !9295, metadata !DIExpression()), !dbg !9296
  store i32 %ref_type, i32* %ref_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ref_type.addr, metadata !9297, metadata !DIExpression()), !dbg !9298
  store i32 %ref_flags, i32* %ref_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ref_flags.addr, metadata !9299, metadata !DIExpression()), !dbg !9300
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !9301, metadata !DIExpression()), !dbg !9302
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9303, metadata !DIExpression()), !dbg !9304
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9305, metadata !DIExpression()), !dbg !9306
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !9307, metadata !DIExpression()), !dbg !9308
  %0 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !9309
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !9309
  %bf.load = load i32, i32* %1, align 8, !dbg !9309
  %bf.clear = and i32 %bf.load, 65535, !dbg !9309
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !9309
  br i1 %cmp, label %cond.false, label %lor.lhs.false, !dbg !9309

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !9309
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !9309
  %bf.load1 = load i32, i32* %3, align 8, !dbg !9309
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !9309
  %cmp3 = icmp eq i32 %bf.clear2, 39, !dbg !9309
  br i1 %cmp3, label %cond.false, label %cond.true, !dbg !9309

cond.true:                                        ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 2918, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !9309
  br label %cond.end, !dbg !9309

cond.false:                                       ; preds = %lor.lhs.false, %entry
  br label %cond.end, !dbg !9309

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !9309
  %4 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !9310
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !9310
  %bf.load4 = load i32, i32* %5, align 8, !dbg !9310
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !9310
  %cmp6 = icmp eq i32 %bf.clear5, 39, !dbg !9310
  br i1 %cmp6, label %cond.true7, label %cond.false8, !dbg !9310

cond.true7:                                       ; preds = %cond.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !9310
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !9310
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9310
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !9310
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !9310
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9310
  br label %cond.end9, !dbg !9310

cond.false8:                                      ; preds = %cond.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !9310
  br label %cond.end9, !dbg !9310

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond10 = phi %struct.rtx_def* [ %7, %cond.true7 ], [ %8, %cond.false8 ], !dbg !9310
  %call = call i32 @rhs_regno(%struct.rtx_def* %cond10), !dbg !9310
  store i32 %call, i32* %regno, align 4, !dbg !9311
  %9 = load i32, i32* %regno, align 4, !dbg !9312
  %cmp11 = icmp ult i32 %9, 53, !dbg !9314
  br i1 %cmp11, label %if.then, label %if.else70, !dbg !9315

if.then:                                          ; preds = %cond.end9
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %hardreg, metadata !9316, metadata !DIExpression()), !dbg !9318
  store %struct.df_mw_hardreg* null, %struct.df_mw_hardreg** %hardreg, align 8, !dbg !9318
  call void @llvm.dbg.declare(metadata %struct.df_scan_problem_data** %problem_data, metadata !9319, metadata !DIExpression()), !dbg !9320
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !9321
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %10, i32 0, i32 1, !dbg !9321
  %arrayidx12 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !9321
  %11 = load %struct.dataflow*, %struct.dataflow** %arrayidx12, align 8, !dbg !9321
  %problem_data13 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %11, i32 0, i32 5, !dbg !9322
  %12 = load i8*, i8** %problem_data13, align 8, !dbg !9322
  %13 = bitcast i8* %12 to %struct.df_scan_problem_data*, !dbg !9323
  store %struct.df_scan_problem_data* %13, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !9320
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9324, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.declare(metadata i32* %endregno, metadata !9326, metadata !DIExpression()), !dbg !9327
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref, metadata !9328, metadata !DIExpression()), !dbg !9329
  %14 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !9330
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !9330
  %bf.load14 = load i32, i32* %15, align 8, !dbg !9330
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !9330
  %cmp16 = icmp eq i32 %bf.clear15, 39, !dbg !9332
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !9333

if.then17:                                        ; preds = %if.then
  %16 = load i32, i32* %regno, align 4, !dbg !9334
  %17 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !9336
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !9336
  %fld19 = bitcast %union.u* %u18 to [1 x %union.rtunion_def]*, !dbg !9336
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i64 0, i64 0, !dbg !9336
  %rt_rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**, !dbg !9336
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !9336
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !9336
  %bf.load22 = load i32, i32* %19, align 8, !dbg !9336
  %bf.lshr = lshr i32 %bf.load22, 16, !dbg !9336
  %bf.clear23 = and i32 %bf.lshr, 255, !dbg !9336
  %20 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !9337
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !9337
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !9337
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 1, !dbg !9337
  %rt_uint = bitcast %union.rtunion_def* %arrayidx26 to i32*, !dbg !9337
  %21 = load i32, i32* %rt_uint, align 8, !dbg !9337
  %22 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !9338
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !9338
  %bf.load27 = load i32, i32* %23, align 8, !dbg !9338
  %bf.lshr28 = lshr i32 %bf.load27, 16, !dbg !9338
  %bf.clear29 = and i32 %bf.lshr28, 255, !dbg !9338
  %call30 = call i32 @subreg_regno_offset(i32 %16, i32 %bf.clear23, i32 %21, i32 %bf.clear29), !dbg !9339
  %24 = load i32, i32* %regno, align 4, !dbg !9340
  %add = add i32 %24, %call30, !dbg !9340
  store i32 %add, i32* %regno, align 4, !dbg !9340
  %25 = load i32, i32* %regno, align 4, !dbg !9341
  %26 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !9342
  %call31 = call i32 @subreg_nregs(%struct.rtx_def* %26), !dbg !9343
  %add32 = add i32 %25, %call31, !dbg !9344
  store i32 %add32, i32* %endregno, align 4, !dbg !9345
  br label %if.end, !dbg !9346

if.else:                                          ; preds = %if.then
  %27 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !9347
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !9347
  %bf.load33 = load i32, i32* %28, align 8, !dbg !9347
  %bf.lshr34 = lshr i32 %bf.load33, 16, !dbg !9347
  %bf.clear35 = and i32 %bf.lshr34, 255, !dbg !9347
  %29 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !9347
  %call36 = call i32 @rhs_regno(%struct.rtx_def* %29), !dbg !9347
  %call37 = call i32 @end_hard_regno(i32 %bf.clear35, i32 %call36), !dbg !9347
  store i32 %call37, i32* %endregno, align 4, !dbg !9348
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then17
  %30 = load i32, i32* %endregno, align 4, !dbg !9349
  %31 = load i32, i32* %regno, align 4, !dbg !9351
  %add38 = add i32 %31, 1, !dbg !9352
  %cmp39 = icmp ne i32 %30, %add38, !dbg !9353
  br i1 %cmp39, label %land.lhs.true, label %if.end55, !dbg !9354

land.lhs.true:                                    ; preds = %if.end
  %32 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9355
  %tobool = icmp ne %struct.df_insn_info* %32, null, !dbg !9355
  br i1 %tobool, label %if.then40, label %if.end55, !dbg !9356

if.then40:                                        ; preds = %land.lhs.true
  %33 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !9357
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !9357
  %bf.load41 = load i32, i32* %34, align 8, !dbg !9357
  %bf.clear42 = and i32 %bf.load41, 65535, !dbg !9357
  %cmp43 = icmp eq i32 %bf.clear42, 39, !dbg !9360
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !9361

if.then44:                                        ; preds = %if.then40
  %35 = load i32, i32* %ref_flags.addr, align 4, !dbg !9362
  %or = or i32 %35, 16, !dbg !9362
  store i32 %or, i32* %ref_flags.addr, align 4, !dbg !9362
  br label %if.end45, !dbg !9363

if.end45:                                         ; preds = %if.then44, %if.then40
  %36 = load i32, i32* %ref_flags.addr, align 4, !dbg !9364
  %or46 = or i32 %36, 4096, !dbg !9364
  store i32 %or46, i32* %ref_flags.addr, align 4, !dbg !9364
  %37 = load %struct.df_scan_problem_data*, %struct.df_scan_problem_data** %problem_data, align 8, !dbg !9365
  %mw_reg_pool = getelementptr inbounds %struct.df_scan_problem_data, %struct.df_scan_problem_data* %37, i32 0, i32 6, !dbg !9366
  %38 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %mw_reg_pool, align 8, !dbg !9366
  %call47 = call i8* @pool_alloc(%struct.alloc_pool_def* %38), !dbg !9367
  %39 = bitcast i8* %call47 to %struct.df_mw_hardreg*, !dbg !9368
  store %struct.df_mw_hardreg* %39, %struct.df_mw_hardreg** %hardreg, align 8, !dbg !9369
  %40 = load i32, i32* %ref_type.addr, align 4, !dbg !9370
  %41 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %hardreg, align 8, !dbg !9371
  %type = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %41, i32 0, i32 1, !dbg !9372
  %bf.load48 = load i32, i32* %type, align 8, !dbg !9373
  %bf.value = and i32 %40, 65535, !dbg !9373
  %bf.clear49 = and i32 %bf.load48, -65536, !dbg !9373
  %bf.set = or i32 %bf.clear49, %bf.value, !dbg !9373
  store i32 %bf.set, i32* %type, align 8, !dbg !9373
  %42 = load i32, i32* %ref_flags.addr, align 4, !dbg !9374
  %43 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %hardreg, align 8, !dbg !9375
  %flags = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %43, i32 0, i32 1, !dbg !9376
  %bf.load50 = load i32, i32* %flags, align 8, !dbg !9377
  %bf.value51 = and i32 %42, 65535, !dbg !9377
  %bf.shl = shl i32 %bf.value51, 16, !dbg !9377
  %bf.clear52 = and i32 %bf.load50, 65535, !dbg !9377
  %bf.set53 = or i32 %bf.clear52, %bf.shl, !dbg !9377
  store i32 %bf.set53, i32* %flags, align 8, !dbg !9377
  %bf.result.shl = shl i32 %bf.value51, 16, !dbg !9377
  %bf.result.ashr = ashr i32 %bf.result.shl, 16, !dbg !9377
  %44 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !9378
  %45 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %hardreg, align 8, !dbg !9379
  %mw_reg = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %45, i32 0, i32 0, !dbg !9380
  store %struct.rtx_def* %44, %struct.rtx_def** %mw_reg, align 8, !dbg !9381
  %46 = load i32, i32* %regno, align 4, !dbg !9382
  %47 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %hardreg, align 8, !dbg !9383
  %start_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %47, i32 0, i32 2, !dbg !9384
  store i32 %46, i32* %start_regno, align 4, !dbg !9385
  %48 = load i32, i32* %endregno, align 4, !dbg !9386
  %sub = sub i32 %48, 1, !dbg !9387
  %49 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %hardreg, align 8, !dbg !9388
  %end_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %49, i32 0, i32 3, !dbg !9389
  store i32 %sub, i32* %end_regno, align 8, !dbg !9390
  %50 = load %struct.df*, %struct.df** @df, align 8, !dbg !9391
  %ref_order = getelementptr inbounds %struct.df, %struct.df* %50, i32 0, i32 26, !dbg !9392
  %51 = load i32, i32* %ref_order, align 8, !dbg !9393
  %inc = add i32 %51, 1, !dbg !9393
  store i32 %inc, i32* %ref_order, align 8, !dbg !9393
  %52 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %hardreg, align 8, !dbg !9394
  %mw_order = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %52, i32 0, i32 4, !dbg !9395
  store i32 %51, i32* %mw_order, align 4, !dbg !9396
  %53 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9397
  %mw_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %53, i32 0, i32 3, !dbg !9397
  %54 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %hardreg, align 8, !dbg !9397
  %call54 = call %struct.df_mw_hardreg** @VEC_df_mw_hardreg_ptr_stack_safe_push(%struct.VEC_df_mw_hardreg_ptr_stack** %mw_vec, %struct.df_mw_hardreg* %54), !dbg !9397
  br label %if.end55, !dbg !9398

if.end55:                                         ; preds = %if.end45, %land.lhs.true, %if.end
  %55 = load i32, i32* %regno, align 4, !dbg !9399
  store i32 %55, i32* %i, align 4, !dbg !9401
  br label %for.cond, !dbg !9402

for.cond:                                         ; preds = %for.inc, %if.end55
  %56 = load i32, i32* %i, align 4, !dbg !9403
  %57 = load i32, i32* %endregno, align 4, !dbg !9405
  %cmp56 = icmp ult i32 %56, %57, !dbg !9406
  br i1 %cmp56, label %for.body, label %for.end, !dbg !9407

for.body:                                         ; preds = %for.cond
  %58 = load i32, i32* %cl.addr, align 4, !dbg !9408
  %59 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9410
  %60 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !9411
  %61 = load i32, i32* %i, align 4, !dbg !9412
  %idxprom = zext i32 %61 to i64, !dbg !9411
  %arrayidx57 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %60, i64 %idxprom, !dbg !9411
  %62 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx57, align 8, !dbg !9411
  %63 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !9413
  %64 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9414
  %65 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9415
  %66 = load i32, i32* %ref_type.addr, align 4, !dbg !9416
  %67 = load i32, i32* %ref_flags.addr, align 4, !dbg !9417
  %68 = load i32, i32* %width.addr, align 4, !dbg !9418
  %69 = load i32, i32* %offset.addr, align 4, !dbg !9419
  %70 = load i32, i32* %mode.addr, align 4, !dbg !9420
  %call58 = call %union.df_ref_d* @df_ref_create_structure(i32 %58, %struct.df_collection_rec* %59, %struct.rtx_def* %62, %struct.rtx_def** %63, %struct.basic_block_def* %64, %struct.df_insn_info* %65, i32 %66, i32 %67, i32 %68, i32 %69, i32 %70), !dbg !9421
  store %union.df_ref_d* %call58, %union.df_ref_d** %ref, align 8, !dbg !9422
  %71 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !9423
  %base = bitcast %union.df_ref_d* %71 to %struct.df_base_ref*, !dbg !9423
  %reg59 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 1, !dbg !9423
  %72 = load %struct.rtx_def*, %struct.rtx_def** %reg59, align 8, !dbg !9423
  %u60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1, !dbg !9423
  %fld61 = bitcast %union.u* %u60 to [1 x %union.rtunion_def]*, !dbg !9423
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i64 0, i64 1, !dbg !9423
  %rt_uint63 = bitcast %union.rtunion_def* %arrayidx62 to i32*, !dbg !9423
  %73 = load i32, i32* %rt_uint63, align 8, !dbg !9423
  %74 = load i32, i32* %i, align 4, !dbg !9423
  %cmp64 = icmp eq i32 %73, %74, !dbg !9423
  br i1 %cmp64, label %cond.false66, label %cond.true65, !dbg !9423

cond.true65:                                      ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 2967, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !9423
  br label %cond.end67, !dbg !9423

cond.false66:                                     ; preds = %for.body
  br label %cond.end67, !dbg !9423

cond.end67:                                       ; preds = %cond.false66, %cond.true65
  %cond68 = phi i32 [ 0, %cond.true65 ], [ 0, %cond.false66 ], !dbg !9423
  br label %for.inc, !dbg !9424

for.inc:                                          ; preds = %cond.end67
  %75 = load i32, i32* %i, align 4, !dbg !9425
  %inc69 = add i32 %75, 1, !dbg !9425
  store i32 %inc69, i32* %i, align 4, !dbg !9425
  br label %for.cond, !dbg !9426, !llvm.loop !9427

for.end:                                          ; preds = %for.cond
  br label %if.end72, !dbg !9429

if.else70:                                        ; preds = %cond.end9
  %76 = load i32, i32* %cl.addr, align 4, !dbg !9430
  %77 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9432
  %78 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !9433
  %79 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !9434
  %80 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9435
  %81 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9436
  %82 = load i32, i32* %ref_type.addr, align 4, !dbg !9437
  %83 = load i32, i32* %ref_flags.addr, align 4, !dbg !9438
  %84 = load i32, i32* %width.addr, align 4, !dbg !9439
  %85 = load i32, i32* %offset.addr, align 4, !dbg !9440
  %86 = load i32, i32* %mode.addr, align 4, !dbg !9441
  %call71 = call %union.df_ref_d* @df_ref_create_structure(i32 %76, %struct.df_collection_rec* %77, %struct.rtx_def* %78, %struct.rtx_def** %79, %struct.basic_block_def* %80, %struct.df_insn_info* %81, i32 %82, i32 %83, i32 %84, i32 %85, i32 %86), !dbg !9442
  br label %if.end72

if.end72:                                         ; preds = %if.else70, %for.end
  ret void, !dbg !9443
}

declare dso_local i32 @subreg_regno_offset(i32, i32, i32, i32) #2

declare dso_local i32 @subreg_nregs(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @end_hard_regno(i32 %mode, i32 %regno) #0 !dbg !9444 {
entry:
  %mode.addr = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9448, metadata !DIExpression()), !dbg !9449
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !9450, metadata !DIExpression()), !dbg !9451
  %0 = load i32, i32* %regno.addr, align 4, !dbg !9452
  %1 = load i32, i32* %regno.addr, align 4, !dbg !9453
  %idxprom = zext i32 %1 to i64, !dbg !9454
  %arrayidx = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, !dbg !9454
  %2 = load i32, i32* %mode.addr, align 4, !dbg !9455
  %idxprom1 = sext i32 %2 to i64, !dbg !9454
  %arrayidx2 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx, i64 0, i64 %idxprom1, !dbg !9454
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !9454
  %conv = zext i8 %3 to i32, !dbg !9454
  %add = add i32 %0, %conv, !dbg !9456
  ret i32 %add, !dbg !9457
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.df_mw_hardreg** @VEC_df_mw_hardreg_ptr_stack_safe_push(%struct.VEC_df_mw_hardreg_ptr_stack** %vec_, %struct.df_mw_hardreg* %obj_) #0 !dbg !9458 {
entry:
  %vec_.addr = alloca %struct.VEC_df_mw_hardreg_ptr_stack**, align 8
  %obj_.addr = alloca %struct.df_mw_hardreg*, align 8
  store %struct.VEC_df_mw_hardreg_ptr_stack** %vec_, %struct.VEC_df_mw_hardreg_ptr_stack*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_mw_hardreg_ptr_stack*** %vec_.addr, metadata !9461, metadata !DIExpression()), !dbg !9462
  store %struct.df_mw_hardreg* %obj_, %struct.df_mw_hardreg** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %obj_.addr, metadata !9463, metadata !DIExpression()), !dbg !9462
  %0 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %vec_.addr, align 8, !dbg !9462
  %call = call i32 @VEC_df_mw_hardreg_ptr_stack_reserve(%struct.VEC_df_mw_hardreg_ptr_stack** %0, i32 1), !dbg !9462
  %1 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %vec_.addr, align 8, !dbg !9462
  %2 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %1, align 8, !dbg !9462
  %tobool = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %2, null, !dbg !9462
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9462

cond.true:                                        ; preds = %entry
  %3 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %vec_.addr, align 8, !dbg !9462
  %4 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %3, align 8, !dbg !9462
  %base = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %4, i32 0, i32 0, !dbg !9462
  br label %cond.end, !dbg !9462

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9462

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9462
  %5 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %obj_.addr, align 8, !dbg !9462
  %call1 = call %struct.df_mw_hardreg** @VEC_df_mw_hardreg_ptr_base_quick_push(%struct.VEC_df_mw_hardreg_ptr_base* %cond, %struct.df_mw_hardreg* %5), !dbg !9462
  ret %struct.df_mw_hardreg** %call1, !dbg !9462
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_df_mw_hardreg_ptr_stack_reserve(%struct.VEC_df_mw_hardreg_ptr_stack** %vec_, i32 %alloc_) #0 !dbg !9464 {
entry:
  %vec_.addr = alloca %struct.VEC_df_mw_hardreg_ptr_stack**, align 8
  %alloc_.addr = alloca i32, align 4
  %extend = alloca i32, align 4
  store %struct.VEC_df_mw_hardreg_ptr_stack** %vec_, %struct.VEC_df_mw_hardreg_ptr_stack*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_mw_hardreg_ptr_stack*** %vec_.addr, metadata !9467, metadata !DIExpression()), !dbg !9468
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !9469, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.declare(metadata i32* %extend, metadata !9470, metadata !DIExpression()), !dbg !9468
  %0 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %vec_.addr, align 8, !dbg !9468
  %1 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %0, align 8, !dbg !9468
  %tobool = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %1, null, !dbg !9468
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9468

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %vec_.addr, align 8, !dbg !9468
  %3 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %2, align 8, !dbg !9468
  %base = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %3, i32 0, i32 0, !dbg !9468
  br label %cond.end, !dbg !9468

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9468

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9468
  %4 = load i32, i32* %alloc_.addr, align 4, !dbg !9468
  %call = call i32 @VEC_df_mw_hardreg_ptr_base_space(%struct.VEC_df_mw_hardreg_ptr_base* %cond, i32 %4), !dbg !9468
  %tobool1 = icmp ne i32 %call, 0, !dbg !9468
  %lnot = xor i1 %tobool1, true, !dbg !9468
  %lnot.ext = zext i1 %lnot to i32, !dbg !9468
  store i32 %lnot.ext, i32* %extend, align 4, !dbg !9468
  %5 = load i32, i32* %extend, align 4, !dbg !9471
  %tobool2 = icmp ne i32 %5, 0, !dbg !9471
  br i1 %tobool2, label %if.then, label %if.end, !dbg !9468

if.then:                                          ; preds = %cond.end
  %6 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %vec_.addr, align 8, !dbg !9471
  %7 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %6, align 8, !dbg !9471
  %8 = bitcast %struct.VEC_df_mw_hardreg_ptr_stack* %7 to i8*, !dbg !9471
  %9 = load i32, i32* %alloc_.addr, align 4, !dbg !9471
  %call3 = call i8* @vec_stack_p_reserve(i8* %8, i32 %9), !dbg !9471
  %10 = bitcast i8* %call3 to %struct.VEC_df_mw_hardreg_ptr_stack*, !dbg !9471
  %11 = load %struct.VEC_df_mw_hardreg_ptr_stack**, %struct.VEC_df_mw_hardreg_ptr_stack*** %vec_.addr, align 8, !dbg !9471
  store %struct.VEC_df_mw_hardreg_ptr_stack* %10, %struct.VEC_df_mw_hardreg_ptr_stack** %11, align 8, !dbg !9471
  br label %if.end, !dbg !9471

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load i32, i32* %extend, align 4, !dbg !9468
  ret i32 %12, !dbg !9468
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.df_mw_hardreg** @VEC_df_mw_hardreg_ptr_base_quick_push(%struct.VEC_df_mw_hardreg_ptr_base* %vec_, %struct.df_mw_hardreg* %obj_) #0 !dbg !9473 {
entry:
  %vec_.addr = alloca %struct.VEC_df_mw_hardreg_ptr_base*, align 8
  %obj_.addr = alloca %struct.df_mw_hardreg*, align 8
  %slot_ = alloca %struct.df_mw_hardreg**, align 8
  store %struct.VEC_df_mw_hardreg_ptr_base* %vec_, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, metadata !9476, metadata !DIExpression()), !dbg !9477
  store %struct.df_mw_hardreg* %obj_, %struct.df_mw_hardreg** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %obj_.addr, metadata !9478, metadata !DIExpression()), !dbg !9477
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg*** %slot_, metadata !9479, metadata !DIExpression()), !dbg !9477
  %0 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !9477
  %num = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_base, %struct.VEC_df_mw_hardreg_ptr_base* %0, i32 0, i32 0, !dbg !9477
  %1 = load i32, i32* %num, align 8, !dbg !9477
  %2 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !9477
  %alloc = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_base, %struct.VEC_df_mw_hardreg_ptr_base* %2, i32 0, i32 1, !dbg !9477
  %3 = load i32, i32* %alloc, align 4, !dbg !9477
  %cmp = icmp ult i32 %1, %3, !dbg !9477
  %conv = zext i1 %cmp to i32, !dbg !9477
  %4 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !9477
  %vec = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_base, %struct.VEC_df_mw_hardreg_ptr_base* %4, i32 0, i32 2, !dbg !9477
  %5 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !9477
  %num1 = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_base, %struct.VEC_df_mw_hardreg_ptr_base* %5, i32 0, i32 0, !dbg !9477
  %6 = load i32, i32* %num1, align 8, !dbg !9477
  %inc = add i32 %6, 1, !dbg !9477
  store i32 %inc, i32* %num1, align 8, !dbg !9477
  %idxprom = zext i32 %6 to i64, !dbg !9477
  %arrayidx = getelementptr inbounds [1 x %struct.df_mw_hardreg*], [1 x %struct.df_mw_hardreg*]* %vec, i64 0, i64 %idxprom, !dbg !9477
  store %struct.df_mw_hardreg** %arrayidx, %struct.df_mw_hardreg*** %slot_, align 8, !dbg !9477
  %7 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %obj_.addr, align 8, !dbg !9477
  %8 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %slot_, align 8, !dbg !9477
  store %struct.df_mw_hardreg* %7, %struct.df_mw_hardreg** %8, align 8, !dbg !9477
  %9 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %slot_, align 8, !dbg !9477
  ret %struct.df_mw_hardreg** %9, !dbg !9477
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_df_mw_hardreg_ptr_base_space(%struct.VEC_df_mw_hardreg_ptr_base* %vec_, i32 %alloc_) #0 !dbg !9480 {
entry:
  %vec_.addr = alloca %struct.VEC_df_mw_hardreg_ptr_base*, align 8
  %alloc_.addr = alloca i32, align 4
  store %struct.VEC_df_mw_hardreg_ptr_base* %vec_, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, metadata !9483, metadata !DIExpression()), !dbg !9484
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !9485, metadata !DIExpression()), !dbg !9484
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !9484
  %cmp = icmp sge i32 %0, 0, !dbg !9484
  %conv = zext i1 %cmp to i32, !dbg !9484
  %1 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !9484
  %tobool = icmp ne %struct.VEC_df_mw_hardreg_ptr_base* %1, null, !dbg !9484
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9484

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !9484
  %alloc = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_base, %struct.VEC_df_mw_hardreg_ptr_base* %2, i32 0, i32 1, !dbg !9484
  %3 = load i32, i32* %alloc, align 4, !dbg !9484
  %4 = load %struct.VEC_df_mw_hardreg_ptr_base*, %struct.VEC_df_mw_hardreg_ptr_base** %vec_.addr, align 8, !dbg !9484
  %num = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_base, %struct.VEC_df_mw_hardreg_ptr_base* %4, i32 0, i32 0, !dbg !9484
  %5 = load i32, i32* %num, align 8, !dbg !9484
  %sub = sub i32 %3, %5, !dbg !9484
  %6 = load i32, i32* %alloc_.addr, align 4, !dbg !9484
  %cmp1 = icmp uge i32 %sub, %6, !dbg !9484
  %conv2 = zext i1 %cmp1 to i32, !dbg !9484
  br label %cond.end, !dbg !9484

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %alloc_.addr, align 4, !dbg !9484
  %tobool3 = icmp ne i32 %7, 0, !dbg !9484
  %lnot = xor i1 %tobool3, true, !dbg !9484
  %lnot.ext = zext i1 %lnot to i32, !dbg !9484
  br label %cond.end, !dbg !9484

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv2, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !9484
  ret i32 %cond, !dbg !9484
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_defs_record(%struct.df_collection_rec* %collection_rec, %struct.rtx_def* %x, %struct.basic_block_def* %bb, %struct.df_insn_info* %insn_info, i32 %flags) #0 !dbg !9486 {
entry:
  %collection_rec.addr = alloca %struct.df_collection_rec*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %insn_info.addr = alloca %struct.df_insn_info*, align 8
  %flags.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %clobber_flags = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.df_collection_rec* %collection_rec, %struct.df_collection_rec** %collection_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec** %collection_rec.addr, metadata !9489, metadata !DIExpression()), !dbg !9490
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !9491, metadata !DIExpression()), !dbg !9492
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !9493, metadata !DIExpression()), !dbg !9494
  store %struct.df_insn_info* %insn_info, %struct.df_insn_info** %insn_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info.addr, metadata !9495, metadata !DIExpression()), !dbg !9496
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9497, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.declare(metadata i32* %code, metadata !9499, metadata !DIExpression()), !dbg !9500
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9501
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !9501
  %bf.load = load i32, i32* %1, align 8, !dbg !9501
  %bf.clear = and i32 %bf.load, 65535, !dbg !9501
  store i32 %bf.clear, i32* %code, align 4, !dbg !9500
  %2 = load i32, i32* %code, align 4, !dbg !9502
  %cmp = icmp eq i32 %2, 23, !dbg !9504
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9505

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %code, align 4, !dbg !9506
  %cmp1 = icmp eq i32 %3, 25, !dbg !9507
  br i1 %cmp1, label %if.then, label %if.else, !dbg !9508

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i32* %clobber_flags, metadata !9509, metadata !DIExpression()), !dbg !9511
  %4 = load i32, i32* %flags.addr, align 4, !dbg !9512
  store i32 %4, i32* %clobber_flags, align 4, !dbg !9511
  %5 = load i32, i32* %code, align 4, !dbg !9513
  %cmp2 = icmp eq i32 %5, 25, !dbg !9514
  %6 = zext i1 %cmp2 to i64, !dbg !9515
  %cond = select i1 %cmp2, i32 128, i32 0, !dbg !9515
  %7 = load i32, i32* %clobber_flags, align 4, !dbg !9516
  %or = or i32 %7, %cond, !dbg !9516
  store i32 %or, i32* %clobber_flags, align 4, !dbg !9516
  %8 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9517
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9518
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9519
  %11 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9520
  %12 = load i32, i32* %clobber_flags, align 4, !dbg !9521
  call void @df_def_record_1(%struct.df_collection_rec* %8, %struct.rtx_def* %9, %struct.basic_block_def* %10, %struct.df_insn_info* %11, i32 %12), !dbg !9522
  br label %if.end18, !dbg !9523

if.else:                                          ; preds = %lor.lhs.false
  %13 = load i32, i32* %code, align 4, !dbg !9524
  %cmp3 = icmp eq i32 %13, 14, !dbg !9526
  br i1 %cmp3, label %if.then4, label %if.else5, !dbg !9527

if.then4:                                         ; preds = %if.else
  %14 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9528
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9530
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !9530
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9530
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !9530
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !9530
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9530
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9531
  %18 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9532
  call void @df_defs_record(%struct.df_collection_rec* %14, %struct.rtx_def* %16, %struct.basic_block_def* %17, %struct.df_insn_info* %18, i32 1), !dbg !9533
  br label %if.end17, !dbg !9534

if.else5:                                         ; preds = %if.else
  %19 = load i32, i32* %code, align 4, !dbg !9535
  %cmp6 = icmp eq i32 %19, 15, !dbg !9537
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !9538

if.then7:                                         ; preds = %if.else5
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9539, metadata !DIExpression()), !dbg !9541
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9542
  %u8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !9542
  %fld9 = bitcast %union.u* %u8 to [1 x %union.rtunion_def]*, !dbg !9542
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i64 0, i64 0, !dbg !9542
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtvec_def**, !dbg !9542
  %21 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !9542
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %21, i32 0, i32 0, !dbg !9542
  %22 = load i32, i32* %num_elem, align 8, !dbg !9542
  %sub = sub nsw i32 %22, 1, !dbg !9544
  store i32 %sub, i32* %i, align 4, !dbg !9545
  br label %for.cond, !dbg !9546

for.cond:                                         ; preds = %for.inc, %if.then7
  %23 = load i32, i32* %i, align 4, !dbg !9547
  %cmp11 = icmp sge i32 %23, 0, !dbg !9549
  br i1 %cmp11, label %for.body, label %for.end, !dbg !9550

for.body:                                         ; preds = %for.cond
  %24 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9551
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9552
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !9552
  %fld13 = bitcast %union.u* %u12 to [1 x %union.rtunion_def]*, !dbg !9552
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i64 0, i64 0, !dbg !9552
  %rt_rtvec15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtvec_def**, !dbg !9552
  %26 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec15, align 8, !dbg !9552
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %26, i32 0, i32 1, !dbg !9552
  %27 = load i32, i32* %i, align 4, !dbg !9552
  %idxprom = sext i32 %27 to i64, !dbg !9552
  %arrayidx16 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !9552
  %28 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx16, align 8, !dbg !9552
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9553
  %30 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9554
  %31 = load i32, i32* %flags.addr, align 4, !dbg !9555
  call void @df_defs_record(%struct.df_collection_rec* %24, %struct.rtx_def* %28, %struct.basic_block_def* %29, %struct.df_insn_info* %30, i32 %31), !dbg !9556
  br label %for.inc, !dbg !9556

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %i, align 4, !dbg !9557
  %dec = add nsw i32 %32, -1, !dbg !9557
  store i32 %dec, i32* %i, align 4, !dbg !9557
  br label %for.cond, !dbg !9558, !llvm.loop !9559

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !9561

if.end:                                           ; preds = %for.end, %if.else5
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then4
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  ret void, !dbg !9562
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_get_call_refs(%struct.df_collection_rec* %collection_rec, %struct.basic_block_def* %bb, %struct.df_insn_info* %insn_info, i32 %flags) #0 !dbg !9563 {
entry:
  %collection_rec.addr = alloca %struct.df_collection_rec*, align 8
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %insn_info.addr = alloca %struct.df_insn_info*, align 8
  %flags.addr = alloca i32, align 4
  %note = alloca %struct.rtx_def*, align 8
  %bi = alloca %struct.bitmap_iterator, align 8
  %ui = alloca i32, align 4
  %is_sibling_call = alloca i8, align 1
  %i = alloca i32, align 4
  %def = alloca %union.df_ref_d*, align 8
  %defs_generated = alloca %struct.bitmap_head_def*, align 8
  %regno41 = alloca i32, align 4
  store %struct.df_collection_rec* %collection_rec, %struct.df_collection_rec** %collection_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec** %collection_rec.addr, metadata !9566, metadata !DIExpression()), !dbg !9567
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !9568, metadata !DIExpression()), !dbg !9569
  store %struct.df_insn_info* %insn_info, %struct.df_insn_info** %insn_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info.addr, metadata !9570, metadata !DIExpression()), !dbg !9571
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9572, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note, metadata !9574, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !9576, metadata !DIExpression()), !dbg !9577
  call void @llvm.dbg.declare(metadata i32* %ui, metadata !9578, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.declare(metadata i8* %is_sibling_call, metadata !9580, metadata !DIExpression()), !dbg !9581
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9582, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !9584, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %defs_generated, metadata !9586, metadata !DIExpression()), !dbg !9587
  %call = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @df_bitmap_obstack), !dbg !9588
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %defs_generated, align 8, !dbg !9587
  store i32 0, i32* %i, align 4, !dbg !9589
  br label %for.cond, !dbg !9591

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9592
  %def_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %0, i32 0, i32 0, !dbg !9592
  %1 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %def_vec, align 8, !dbg !9592
  %tobool = icmp ne %struct.VEC_df_ref_stack* %1, null, !dbg !9592
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9592

cond.true:                                        ; preds = %for.cond
  %2 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9592
  %def_vec1 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %2, i32 0, i32 0, !dbg !9592
  %3 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %def_vec1, align 8, !dbg !9592
  %base = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %3, i32 0, i32 0, !dbg !9592
  br label %cond.end, !dbg !9592

cond.false:                                       ; preds = %for.cond
  br label %cond.end, !dbg !9592

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_df_ref_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9592
  %4 = load i32, i32* %i, align 4, !dbg !9592
  %call2 = call i32 @VEC_df_ref_base_iterate(%struct.VEC_df_ref_base* %cond, i32 %4, %union.df_ref_d** %def), !dbg !9592
  %tobool3 = icmp ne i32 %call2, 0, !dbg !9594
  br i1 %tobool3, label %for.body, label %for.end, !dbg !9594

for.body:                                         ; preds = %cond.end
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %defs_generated, align 8, !dbg !9595
  %6 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !9596
  %base4 = bitcast %union.df_ref_d* %6 to %struct.df_base_ref*, !dbg !9596
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base4, i32 0, i32 6, !dbg !9596
  %7 = load i32, i32* %regno, align 8, !dbg !9596
  %call5 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %5, i32 %7), !dbg !9597
  br label %for.inc, !dbg !9597

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !9598
  %inc = add i32 %8, 1, !dbg !9598
  store i32 %inc, i32* %i, align 4, !dbg !9598
  br label %for.cond, !dbg !9599, !llvm.loop !9600

for.end:                                          ; preds = %cond.end
  %9 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9602
  %insn = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %9, i32 0, i32 0, !dbg !9602
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9602
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !9602
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9602
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 8, !dbg !9602
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !9602
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9602
  store %struct.rtx_def* %11, %struct.rtx_def** %note, align 8, !dbg !9604
  br label %for.cond6, !dbg !9605

for.cond6:                                        ; preds = %for.inc66, %for.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !9606
  %tobool7 = icmp ne %struct.rtx_def* %12, null, !dbg !9608
  br i1 %tobool7, label %for.body8, label %for.end71, !dbg !9608

for.body8:                                        ; preds = %for.cond6
  %13 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !9609
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !9609
  %fld10 = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !9609
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i64 0, i64 0, !dbg !9609
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !9609
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12, align 8, !dbg !9609
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !9609
  %bf.load = load i32, i32* %15, align 8, !dbg !9609
  %bf.clear = and i32 %bf.load, 65535, !dbg !9609
  %cmp = icmp eq i32 %bf.clear, 24, !dbg !9612
  br i1 %cmp, label %if.then, label %if.else, !dbg !9613

if.then:                                          ; preds = %for.body8
  %16 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9614
  %17 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !9615
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !9615
  %fld14 = bitcast %union.u* %u13 to [1 x %union.rtunion_def]*, !dbg !9615
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i64 0, i64 0, !dbg !9615
  %rt_rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**, !dbg !9615
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx16, align 8, !dbg !9615
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !9615
  %fld18 = bitcast %union.u* %u17 to [1 x %union.rtunion_def]*, !dbg !9615
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i64 0, i64 0, !dbg !9615
  %rt_rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !9615
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9616
  %20 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9617
  %21 = load i32, i32* %flags.addr, align 4, !dbg !9618
  call void @df_uses_record(i32 2, %struct.df_collection_rec* %16, %struct.rtx_def** %rt_rtx20, i32 1, %struct.basic_block_def* %19, %struct.df_insn_info* %20, i32 %21, i32 -1, i32 -1, i32 0), !dbg !9619
  br label %if.end65, !dbg !9619

if.else:                                          ; preds = %for.body8
  %22 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !9620
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !9620
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !9620
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 0, !dbg !9620
  %rt_rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !9620
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !9620
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !9620
  %bf.load25 = load i32, i32* %24, align 8, !dbg !9620
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !9620
  %cmp27 = icmp eq i32 %bf.clear26, 25, !dbg !9622
  br i1 %cmp27, label %if.then28, label %if.end64, !dbg !9623

if.then28:                                        ; preds = %if.else
  %25 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !9624
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !9624
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !9624
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 0, !dbg !9624
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !9624
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !9624
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !9624
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !9624
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 0, !dbg !9624
  %rt_rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**, !dbg !9624
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx36, align 8, !dbg !9624
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !9624
  %bf.load37 = load i32, i32* %28, align 8, !dbg !9624
  %bf.clear38 = and i32 %bf.load37, 65535, !dbg !9624
  %cmp39 = icmp eq i32 %bf.clear38, 37, !dbg !9624
  br i1 %cmp39, label %if.then40, label %if.else58, !dbg !9627

if.then40:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata i32* %regno41, metadata !9628, metadata !DIExpression()), !dbg !9630
  %29 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !9631
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !9631
  %fld43 = bitcast %union.u* %u42 to [1 x %union.rtunion_def]*, !dbg !9631
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i64 0, i64 0, !dbg !9631
  %rt_rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**, !dbg !9631
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx45, align 8, !dbg !9631
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !9631
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !9631
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 0, !dbg !9631
  %rt_rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**, !dbg !9631
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx49, align 8, !dbg !9631
  %call50 = call i32 @rhs_regno(%struct.rtx_def* %31), !dbg !9631
  store i32 %call50, i32* %regno41, align 4, !dbg !9630
  %32 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %defs_generated, align 8, !dbg !9632
  %33 = load i32, i32* %regno41, align 4, !dbg !9634
  %call51 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %32, i32 %33), !dbg !9635
  %tobool52 = icmp ne i32 %call51, 0, !dbg !9635
  br i1 %tobool52, label %if.end, label %if.then53, !dbg !9636

if.then53:                                        ; preds = %if.then40
  %34 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9637
  %35 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !9638
  %u54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !9638
  %fld55 = bitcast %union.u* %u54 to [1 x %union.rtunion_def]*, !dbg !9638
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i64 0, i64 0, !dbg !9638
  %rt_rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**, !dbg !9638
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx57, align 8, !dbg !9638
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9639
  %38 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9640
  %39 = load i32, i32* %flags.addr, align 4, !dbg !9641
  call void @df_defs_record(%struct.df_collection_rec* %34, %struct.rtx_def* %36, %struct.basic_block_def* %37, %struct.df_insn_info* %38, i32 %39), !dbg !9642
  br label %if.end, !dbg !9642

if.end:                                           ; preds = %if.then53, %if.then40
  br label %if.end63, !dbg !9643

if.else58:                                        ; preds = %if.then28
  %40 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9644
  %41 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !9645
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !9645
  %fld60 = bitcast %union.u* %u59 to [1 x %union.rtunion_def]*, !dbg !9645
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i64 0, i64 0, !dbg !9645
  %rt_rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**, !dbg !9645
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9646
  %43 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9647
  %44 = load i32, i32* %flags.addr, align 4, !dbg !9648
  call void @df_uses_record(i32 2, %struct.df_collection_rec* %40, %struct.rtx_def** %rt_rtx62, i32 1, %struct.basic_block_def* %42, %struct.df_insn_info* %43, i32 %44, i32 -1, i32 -1, i32 0), !dbg !9649
  br label %if.end63

if.end63:                                         ; preds = %if.else58, %if.end
  br label %if.end64, !dbg !9650

if.end64:                                         ; preds = %if.end63, %if.else
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then
  br label %for.inc66, !dbg !9651

for.inc66:                                        ; preds = %if.end65
  %45 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !9652
  %u67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !9652
  %fld68 = bitcast %union.u* %u67 to [1 x %union.rtunion_def]*, !dbg !9652
  %arrayidx69 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld68, i64 0, i64 1, !dbg !9652
  %rt_rtx70 = bitcast %union.rtunion_def* %arrayidx69 to %struct.rtx_def**, !dbg !9652
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx70, align 8, !dbg !9652
  store %struct.rtx_def* %46, %struct.rtx_def** %note, align 8, !dbg !9653
  br label %for.cond6, !dbg !9654, !llvm.loop !9655

for.end71:                                        ; preds = %for.cond6
  %47 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9657
  %48 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !9658
  %arrayidx72 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %48, i64 7, !dbg !9658
  %49 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx72, align 8, !dbg !9658
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9659
  %51 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9660
  %52 = load i32, i32* %flags.addr, align 4, !dbg !9661
  %or = or i32 8192, %52, !dbg !9662
  call void @df_ref_record(i32 0, %struct.df_collection_rec* %47, %struct.rtx_def* %49, %struct.rtx_def** null, %struct.basic_block_def* %50, %struct.df_insn_info* %51, i32 1, i32 %or, i32 -1, i32 -1, i32 0), !dbg !9663
  store i32 0, i32* %i, align 4, !dbg !9664
  br label %for.cond73, !dbg !9666

for.cond73:                                       ; preds = %for.inc84, %for.end71
  %53 = load i32, i32* %i, align 4, !dbg !9667
  %cmp74 = icmp ult i32 %53, 53, !dbg !9669
  br i1 %cmp74, label %for.body75, label %for.end86, !dbg !9670

for.body75:                                       ; preds = %for.cond73
  %54 = load i32, i32* %i, align 4, !dbg !9671
  %idxprom = zext i32 %54 to i64, !dbg !9673
  %arrayidx76 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %idxprom, !dbg !9673
  %55 = load i8, i8* %arrayidx76, align 1, !dbg !9673
  %tobool77 = icmp ne i8 %55, 0, !dbg !9673
  br i1 %tobool77, label %if.then78, label %if.end83, !dbg !9674

if.then78:                                        ; preds = %for.body75
  %56 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9675
  %57 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !9677
  %58 = load i32, i32* %i, align 4, !dbg !9678
  %idxprom79 = zext i32 %58 to i64, !dbg !9677
  %arrayidx80 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %57, i64 %idxprom79, !dbg !9677
  %59 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx80, align 8, !dbg !9677
  %60 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9679
  %61 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9680
  %62 = load i32, i32* %flags.addr, align 4, !dbg !9681
  call void @df_ref_record(i32 0, %struct.df_collection_rec* %56, %struct.rtx_def* %59, %struct.rtx_def** null, %struct.basic_block_def* %60, %struct.df_insn_info* %61, i32 1, i32 %62, i32 -1, i32 -1, i32 0), !dbg !9682
  %63 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9683
  %64 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !9684
  %65 = load i32, i32* %i, align 4, !dbg !9685
  %idxprom81 = zext i32 %65 to i64, !dbg !9684
  %arrayidx82 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %64, i64 %idxprom81, !dbg !9684
  %66 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx82, align 8, !dbg !9684
  %67 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9686
  %68 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9687
  %69 = load i32, i32* %flags.addr, align 4, !dbg !9688
  call void @df_ref_record(i32 0, %struct.df_collection_rec* %63, %struct.rtx_def* %66, %struct.rtx_def** null, %struct.basic_block_def* %67, %struct.df_insn_info* %68, i32 0, i32 %69, i32 -1, i32 -1, i32 0), !dbg !9689
  br label %if.end83, !dbg !9690

if.end83:                                         ; preds = %if.then78, %for.body75
  br label %for.inc84, !dbg !9691

for.inc84:                                        ; preds = %if.end83
  %70 = load i32, i32* %i, align 4, !dbg !9692
  %inc85 = add i32 %70, 1, !dbg !9692
  store i32 %inc85, i32* %i, align 4, !dbg !9692
  br label %for.cond73, !dbg !9693, !llvm.loop !9694

for.end86:                                        ; preds = %for.cond73
  %71 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9696
  %insn87 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %71, i32 0, i32 0, !dbg !9696
  %72 = load %struct.rtx_def*, %struct.rtx_def** %insn87, align 8, !dbg !9696
  %73 = bitcast %struct.rtx_def* %72 to i32*, !dbg !9696
  %bf.load88 = load i32, i32* %73, align 8, !dbg !9696
  %bf.lshr = lshr i32 %bf.load88, 24, !dbg !9696
  %bf.clear89 = and i32 %bf.lshr, 1, !dbg !9696
  %conv = trunc i32 %bf.clear89 to i8, !dbg !9696
  store i8 %conv, i8* %is_sibling_call, align 1, !dbg !9697
  %74 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @regs_invalidated_by_call_regset, align 8, !dbg !9698
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %74, i32 0, i32* %ui), !dbg !9698
  br label %for.cond90, !dbg !9698

for.cond90:                                       ; preds = %for.inc111, %for.end86
  %call91 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %ui), !dbg !9700
  %tobool92 = icmp ne i8 %call91, 0, !dbg !9698
  br i1 %tobool92, label %for.body93, label %for.end112, !dbg !9698

for.body93:                                       ; preds = %for.cond90
  %75 = load i32, i32* %ui, align 4, !dbg !9702
  %idxprom94 = zext i32 %75 to i64, !dbg !9705
  %arrayidx95 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %idxprom94, !dbg !9705
  %76 = load i8, i8* %arrayidx95, align 1, !dbg !9705
  %tobool96 = icmp ne i8 %76, 0, !dbg !9705
  br i1 %tobool96, label %if.end110, label %land.lhs.true, !dbg !9706

land.lhs.true:                                    ; preds = %for.body93
  %77 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %defs_generated, align 8, !dbg !9707
  %78 = load i32, i32* %ui, align 4, !dbg !9708
  %call97 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %77, i32 %78), !dbg !9709
  %tobool98 = icmp ne i32 %call97, 0, !dbg !9709
  br i1 %tobool98, label %if.end110, label %land.lhs.true99, !dbg !9710

land.lhs.true99:                                  ; preds = %land.lhs.true
  %79 = load i8, i8* %is_sibling_call, align 1, !dbg !9711
  %tobool100 = icmp ne i8 %79, 0, !dbg !9711
  br i1 %tobool100, label %lor.lhs.false, label %if.then106, !dbg !9712

lor.lhs.false:                                    ; preds = %land.lhs.true99
  %80 = load %struct.df*, %struct.df** @df, align 8, !dbg !9713
  %exit_block_uses = getelementptr inbounds %struct.df, %struct.df* %80, i32 0, i32 17, !dbg !9714
  %81 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses, align 8, !dbg !9714
  %82 = load i32, i32* %ui, align 4, !dbg !9715
  %call101 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %81, i32 %82), !dbg !9716
  %tobool102 = icmp ne i32 %call101, 0, !dbg !9716
  br i1 %tobool102, label %lor.lhs.false103, label %if.then106, !dbg !9717

lor.lhs.false103:                                 ; preds = %lor.lhs.false
  %83 = load i32, i32* %ui, align 4, !dbg !9718
  %84 = load i32, i32* %ui, align 4, !dbg !9719
  %add = add i32 %84, 1, !dbg !9720
  %85 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 7), align 8, !dbg !9721
  %call104 = call i32 @refers_to_regno_p(i32 %83, i32 %add, %struct.rtx_def* %85, %struct.rtx_def** null), !dbg !9722
  %tobool105 = icmp ne i32 %call104, 0, !dbg !9722
  br i1 %tobool105, label %if.then106, label %if.end110, !dbg !9723

if.then106:                                       ; preds = %lor.lhs.false103, %lor.lhs.false, %land.lhs.true99
  %86 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9724
  %87 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !9725
  %88 = load i32, i32* %ui, align 4, !dbg !9726
  %idxprom107 = zext i32 %88 to i64, !dbg !9725
  %arrayidx108 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %87, i64 %idxprom107, !dbg !9725
  %89 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx108, align 8, !dbg !9725
  %90 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9727
  %91 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9728
  %92 = load i32, i32* %flags.addr, align 4, !dbg !9729
  %or109 = or i32 64, %92, !dbg !9730
  call void @df_ref_record(i32 0, %struct.df_collection_rec* %86, %struct.rtx_def* %89, %struct.rtx_def** null, %struct.basic_block_def* %90, %struct.df_insn_info* %91, i32 0, i32 %or109, i32 -1, i32 -1, i32 0), !dbg !9731
  br label %if.end110, !dbg !9731

if.end110:                                        ; preds = %if.then106, %lor.lhs.false103, %land.lhs.true, %for.body93
  br label %for.inc111, !dbg !9732

for.inc111:                                       ; preds = %if.end110
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %ui), !dbg !9700
  br label %for.cond90, !dbg !9700, !llvm.loop !9733

for.end112:                                       ; preds = %for.cond90
  %93 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %defs_generated, align 8, !dbg !9735
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %93), !dbg !9735
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %defs_generated, align 8, !dbg !9735
  ret void, !dbg !9736
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_get_conditional_uses(%struct.df_collection_rec* %collection_rec) #0 !dbg !9737 {
entry:
  %collection_rec.addr = alloca %struct.df_collection_rec*, align 8
  %ix = alloca i32, align 4
  %ref = alloca %union.df_ref_d*, align 8
  %width = alloca i32, align 4
  %offset = alloca i32, align 4
  %mode = alloca i32, align 4
  %use = alloca %union.df_ref_d*, align 8
  store %struct.df_collection_rec* %collection_rec, %struct.df_collection_rec** %collection_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec** %collection_rec.addr, metadata !9738, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.declare(metadata i32* %ix, metadata !9740, metadata !DIExpression()), !dbg !9741
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref, metadata !9742, metadata !DIExpression()), !dbg !9743
  store i32 0, i32* %ix, align 4, !dbg !9744
  br label %for.cond, !dbg !9746

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9747
  %def_vec = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %0, i32 0, i32 0, !dbg !9747
  %1 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %def_vec, align 8, !dbg !9747
  %tobool = icmp ne %struct.VEC_df_ref_stack* %1, null, !dbg !9747
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9747

cond.true:                                        ; preds = %for.cond
  %2 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9747
  %def_vec1 = getelementptr inbounds %struct.df_collection_rec, %struct.df_collection_rec* %2, i32 0, i32 0, !dbg !9747
  %3 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %def_vec1, align 8, !dbg !9747
  %base = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %3, i32 0, i32 0, !dbg !9747
  br label %cond.end, !dbg !9747

cond.false:                                       ; preds = %for.cond
  br label %cond.end, !dbg !9747

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_df_ref_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9747
  %4 = load i32, i32* %ix, align 4, !dbg !9747
  %call = call i32 @VEC_df_ref_base_iterate(%struct.VEC_df_ref_base* %cond, i32 %4, %union.df_ref_d** %ref), !dbg !9747
  %tobool2 = icmp ne i32 %call, 0, !dbg !9749
  br i1 %tobool2, label %for.body, label %for.end, !dbg !9749

for.body:                                         ; preds = %cond.end
  %5 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !9750
  %base3 = bitcast %union.df_ref_d* %5 to %struct.df_base_ref*, !dbg !9750
  %6 = bitcast %struct.df_base_ref* %base3 to i32*, !dbg !9750
  %bf.load = load i32, i32* %6, align 8, !dbg !9750
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !9750
  %and = and i32 %bf.ashr, 1, !dbg !9750
  %cmp = icmp ne i32 %and, 0, !dbg !9750
  br i1 %cmp, label %if.then, label %if.end49, !dbg !9753

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %width, metadata !9754, metadata !DIExpression()), !dbg !9756
  store i32 -1, i32* %width, align 4, !dbg !9756
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !9757, metadata !DIExpression()), !dbg !9758
  store i32 -1, i32* %offset, align 4, !dbg !9758
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !9759, metadata !DIExpression()), !dbg !9760
  store i32 0, i32* %mode, align 4, !dbg !9760
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %use, metadata !9761, metadata !DIExpression()), !dbg !9762
  %7 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !9763
  %base4 = bitcast %union.df_ref_d* %7 to %struct.df_base_ref*, !dbg !9763
  %8 = bitcast %struct.df_base_ref* %base4 to i32*, !dbg !9763
  %bf.load5 = load i32, i32* %8, align 8, !dbg !9763
  %bf.ashr6 = ashr i32 %bf.load5, 16, !dbg !9763
  %and7 = and i32 %bf.ashr6, 768, !dbg !9763
  %cmp8 = icmp ne i32 %and7, 0, !dbg !9763
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !9765

if.then9:                                         ; preds = %if.then
  %9 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !9766
  %extract_ref = bitcast %union.df_ref_d* %9 to %struct.df_extract_ref*, !dbg !9766
  %width10 = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref, i32 0, i32 1, !dbg !9766
  %10 = load i32, i32* %width10, align 8, !dbg !9766
  store i32 %10, i32* %width, align 4, !dbg !9768
  %11 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !9769
  %extract_ref11 = bitcast %union.df_ref_d* %11 to %struct.df_extract_ref*, !dbg !9769
  %offset12 = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref11, i32 0, i32 2, !dbg !9769
  %12 = load i32, i32* %offset12, align 4, !dbg !9769
  store i32 %12, i32* %offset, align 4, !dbg !9770
  %13 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !9771
  %extract_ref13 = bitcast %union.df_ref_d* %13 to %struct.df_extract_ref*, !dbg !9771
  %mode14 = getelementptr inbounds %struct.df_extract_ref, %struct.df_extract_ref* %extract_ref13, i32 0, i32 3, !dbg !9771
  %14 = load i32, i32* %mode14, align 8, !dbg !9771
  store i32 %14, i32* %mode, align 4, !dbg !9772
  br label %if.end, !dbg !9773

if.end:                                           ; preds = %if.then9, %if.then
  %15 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !9774
  %base15 = bitcast %union.df_ref_d* %15 to %struct.df_base_ref*, !dbg !9774
  %16 = bitcast %struct.df_base_ref* %base15 to i32*, !dbg !9774
  %bf.load16 = load i32, i32* %16, align 8, !dbg !9774
  %bf.clear = and i32 %bf.load16, 255, !dbg !9774
  %17 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9775
  %18 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !9776
  %base17 = bitcast %union.df_ref_d* %18 to %struct.df_base_ref*, !dbg !9776
  %reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base17, i32 0, i32 1, !dbg !9776
  %19 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !9776
  %20 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !9777
  %base18 = bitcast %union.df_ref_d* %20 to %struct.df_base_ref*, !dbg !9777
  %21 = bitcast %struct.df_base_ref* %base18 to i32*, !dbg !9777
  %bf.load19 = load i32, i32* %21, align 8, !dbg !9777
  %bf.clear20 = and i32 %bf.load19, 255, !dbg !9777
  %cmp21 = icmp eq i32 %bf.clear20, 2, !dbg !9777
  br i1 %cmp21, label %cond.true26, label %lor.lhs.false, !dbg !9777

lor.lhs.false:                                    ; preds = %if.end
  %22 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !9777
  %base22 = bitcast %union.df_ref_d* %22 to %struct.df_base_ref*, !dbg !9777
  %23 = bitcast %struct.df_base_ref* %base22 to i32*, !dbg !9777
  %bf.load23 = load i32, i32* %23, align 8, !dbg !9777
  %bf.clear24 = and i32 %bf.load23, 255, !dbg !9777
  %cmp25 = icmp eq i32 %bf.clear24, 3, !dbg !9777
  br i1 %cmp25, label %cond.true26, label %cond.false27, !dbg !9777

cond.true26:                                      ; preds = %lor.lhs.false, %if.end
  %24 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !9777
  %regular_ref = bitcast %union.df_ref_d* %24 to %struct.df_regular_ref*, !dbg !9777
  %loc = getelementptr inbounds %struct.df_regular_ref, %struct.df_regular_ref* %regular_ref, i32 0, i32 1, !dbg !9777
  %25 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !9777
  br label %cond.end28, !dbg !9777

cond.false27:                                     ; preds = %lor.lhs.false
  br label %cond.end28, !dbg !9777

cond.end28:                                       ; preds = %cond.false27, %cond.true26
  %cond29 = phi %struct.rtx_def** [ %25, %cond.true26 ], [ null, %cond.false27 ], !dbg !9777
  %26 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !9778
  %base30 = bitcast %union.df_ref_d* %26 to %struct.df_base_ref*, !dbg !9778
  %27 = bitcast %struct.df_base_ref* %base30 to i32*, !dbg !9778
  %bf.load31 = load i32, i32* %27, align 8, !dbg !9778
  %bf.clear32 = and i32 %bf.load31, 255, !dbg !9778
  %cmp33 = icmp eq i32 %bf.clear32, 1, !dbg !9778
  br i1 %cmp33, label %cond.true34, label %cond.false35, !dbg !9778

cond.true34:                                      ; preds = %cond.end28
  %28 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !9778
  %artificial_ref = bitcast %union.df_ref_d* %28 to %struct.df_artificial_ref*, !dbg !9778
  %bb = getelementptr inbounds %struct.df_artificial_ref, %struct.df_artificial_ref* %artificial_ref, i32 0, i32 1, !dbg !9778
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !9778
  br label %cond.end37, !dbg !9778

cond.false35:                                     ; preds = %cond.end28
  %30 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !9778
  %base36 = bitcast %union.df_ref_d* %30 to %struct.df_base_ref*, !dbg !9778
  %insn_info = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base36, i32 0, i32 3, !dbg !9778
  %31 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !9778
  %insn = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %31, i32 0, i32 0, !dbg !9778
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9778
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !9778
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9778
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !9778
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !9778
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !9778
  br label %cond.end37, !dbg !9778

cond.end37:                                       ; preds = %cond.false35, %cond.true34
  %cond38 = phi %struct.basic_block_def* [ %29, %cond.true34 ], [ %33, %cond.false35 ], !dbg !9778
  %34 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !9779
  %base39 = bitcast %union.df_ref_d* %34 to %struct.df_base_ref*, !dbg !9779
  %insn_info40 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base39, i32 0, i32 3, !dbg !9779
  %35 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info40, align 8, !dbg !9779
  %36 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !9780
  %base41 = bitcast %union.df_ref_d* %36 to %struct.df_base_ref*, !dbg !9780
  %37 = bitcast %struct.df_base_ref* %base41 to i32*, !dbg !9780
  %bf.load42 = load i32, i32* %37, align 8, !dbg !9780
  %bf.ashr43 = ashr i32 %bf.load42, 16, !dbg !9780
  %and44 = and i32 %bf.ashr43, -2, !dbg !9781
  %38 = load i32, i32* %width, align 4, !dbg !9782
  %39 = load i32, i32* %offset, align 4, !dbg !9783
  %40 = load i32, i32* %mode, align 4, !dbg !9784
  %call45 = call %union.df_ref_d* @df_ref_create_structure(i32 %bf.clear, %struct.df_collection_rec* %17, %struct.rtx_def* %19, %struct.rtx_def** %cond29, %struct.basic_block_def* %cond38, %struct.df_insn_info* %35, i32 1, i32 %and44, i32 %38, i32 %39, i32 %40), !dbg !9785
  store %union.df_ref_d* %call45, %union.df_ref_d** %use, align 8, !dbg !9786
  %41 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !9787
  %base46 = bitcast %union.df_ref_d* %41 to %struct.df_base_ref*, !dbg !9787
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base46, i32 0, i32 6, !dbg !9787
  %42 = load i32, i32* %regno, align 8, !dbg !9787
  %43 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !9788
  %base47 = bitcast %union.df_ref_d* %43 to %struct.df_base_ref*, !dbg !9788
  %regno48 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base47, i32 0, i32 6, !dbg !9788
  store i32 %42, i32* %regno48, align 8, !dbg !9789
  br label %if.end49, !dbg !9790

if.end49:                                         ; preds = %cond.end37, %for.body
  br label %for.inc, !dbg !9791

for.inc:                                          ; preds = %if.end49
  %44 = load i32, i32* %ix, align 4, !dbg !9792
  %inc = add i32 %44, 1, !dbg !9792
  store i32 %inc, i32* %ix, align 4, !dbg !9792
  br label %for.cond, !dbg !9793, !llvm.loop !9794

for.end:                                          ; preds = %cond.end
  ret void, !dbg !9796
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_def_record_1(%struct.df_collection_rec* %collection_rec, %struct.rtx_def* %x, %struct.basic_block_def* %bb, %struct.df_insn_info* %insn_info, i32 %flags) #0 !dbg !9797 {
entry:
  %collection_rec.addr = alloca %struct.df_collection_rec*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %insn_info.addr = alloca %struct.df_insn_info*, align 8
  %flags.addr = alloca i32, align 4
  %loc = alloca %struct.rtx_def**, align 8
  %dst = alloca %struct.rtx_def*, align 8
  %offset = alloca i32, align 4
  %width = alloca i32, align 4
  %mode = alloca i32, align 4
  %cl = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca %struct.rtx_def*, align 8
  store %struct.df_collection_rec* %collection_rec, %struct.df_collection_rec** %collection_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec** %collection_rec.addr, metadata !9798, metadata !DIExpression()), !dbg !9799
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !9800, metadata !DIExpression()), !dbg !9801
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !9802, metadata !DIExpression()), !dbg !9803
  store %struct.df_insn_info* %insn_info, %struct.df_insn_info** %insn_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info.addr, metadata !9804, metadata !DIExpression()), !dbg !9805
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9806, metadata !DIExpression()), !dbg !9807
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc, metadata !9808, metadata !DIExpression()), !dbg !9809
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dst, metadata !9810, metadata !DIExpression()), !dbg !9811
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !9812, metadata !DIExpression()), !dbg !9813
  store i32 -1, i32* %offset, align 4, !dbg !9813
  call void @llvm.dbg.declare(metadata i32* %width, metadata !9814, metadata !DIExpression()), !dbg !9815
  store i32 -1, i32* %width, align 4, !dbg !9815
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !9816, metadata !DIExpression()), !dbg !9817
  store i32 0, i32* %mode, align 4, !dbg !9817
  call void @llvm.dbg.declare(metadata i32* %cl, metadata !9818, metadata !DIExpression()), !dbg !9819
  store i32 2, i32* %cl, align 4, !dbg !9819
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9820
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !9820
  %bf.load = load i32, i32* %1, align 8, !dbg !9820
  %bf.clear = and i32 %bf.load, 65535, !dbg !9820
  %cmp = icmp eq i32 %bf.clear, 3, !dbg !9822
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9823

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9824
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !9824
  %bf.load1 = load i32, i32* %3, align 8, !dbg !9824
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !9824
  %cmp3 = icmp eq i32 %bf.clear2, 25, !dbg !9825
  br i1 %cmp3, label %if.then, label %if.else, !dbg !9826

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9827
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !9827
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9827
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !9827
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !9827
  store %struct.rtx_def** %rt_rtx, %struct.rtx_def*** %loc, align 8, !dbg !9828
  br label %if.end, !dbg !9829

if.else:                                          ; preds = %lor.lhs.false
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9830
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !9830
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !9830
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 0, !dbg !9830
  %rt_rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**, !dbg !9830
  store %struct.rtx_def** %rt_rtx7, %struct.rtx_def*** %loc, align 8, !dbg !9831
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !9832
  %7 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8, !dbg !9833
  store %struct.rtx_def* %7, %struct.rtx_def** %dst, align 8, !dbg !9834
  %8 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9835
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !9835
  %bf.load8 = load i32, i32* %9, align 8, !dbg !9835
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !9835
  %cmp10 = icmp eq i32 %bf.clear9, 15, !dbg !9837
  br i1 %cmp10, label %if.then11, label %if.end37, !dbg !9838

if.then11:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9839, metadata !DIExpression()), !dbg !9841
  %10 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9842
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !9842
  %fld13 = bitcast %union.u* %u12 to [1 x %union.rtunion_def]*, !dbg !9842
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i64 0, i64 0, !dbg !9842
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtvec_def**, !dbg !9842
  %11 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !9842
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i32 0, i32 0, !dbg !9842
  %12 = load i32, i32* %num_elem, align 8, !dbg !9842
  %sub = sub nsw i32 %12, 1, !dbg !9844
  store i32 %sub, i32* %i, align 4, !dbg !9845
  br label %for.cond, !dbg !9846

for.cond:                                         ; preds = %for.inc, %if.then11
  %13 = load i32, i32* %i, align 4, !dbg !9847
  %cmp15 = icmp sge i32 %13, 0, !dbg !9849
  br i1 %cmp15, label %for.body, label %for.end, !dbg !9850

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %temp, metadata !9851, metadata !DIExpression()), !dbg !9853
  %14 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9854
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !9854
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !9854
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 0, !dbg !9854
  %rt_rtvec19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtvec_def**, !dbg !9854
  %15 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec19, align 8, !dbg !9854
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %15, i32 0, i32 1, !dbg !9854
  %16 = load i32, i32* %i, align 4, !dbg !9854
  %idxprom = sext i32 %16 to i64, !dbg !9854
  %arrayidx20 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !9854
  %17 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx20, align 8, !dbg !9854
  store %struct.rtx_def* %17, %struct.rtx_def** %temp, align 8, !dbg !9853
  %18 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !9855
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !9855
  %bf.load21 = load i32, i32* %19, align 8, !dbg !9855
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !9855
  %cmp23 = icmp eq i32 %bf.clear22, 3, !dbg !9857
  br i1 %cmp23, label %if.then32, label %lor.lhs.false24, !dbg !9858

lor.lhs.false24:                                  ; preds = %for.body
  %20 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !9859
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !9859
  %bf.load25 = load i32, i32* %21, align 8, !dbg !9859
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !9859
  %cmp27 = icmp eq i32 %bf.clear26, 25, !dbg !9860
  br i1 %cmp27, label %if.then32, label %lor.lhs.false28, !dbg !9861

lor.lhs.false28:                                  ; preds = %lor.lhs.false24
  %22 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !9862
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !9862
  %bf.load29 = load i32, i32* %23, align 8, !dbg !9862
  %bf.clear30 = and i32 %bf.load29, 65535, !dbg !9862
  %cmp31 = icmp eq i32 %bf.clear30, 23, !dbg !9863
  br i1 %cmp31, label %if.then32, label %if.end36, !dbg !9864

if.then32:                                        ; preds = %lor.lhs.false28, %lor.lhs.false24, %for.body
  %24 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9865
  %25 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !9866
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9867
  %27 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9868
  %28 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !9869
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !9869
  %bf.load33 = load i32, i32* %29, align 8, !dbg !9869
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !9869
  %cmp35 = icmp eq i32 %bf.clear34, 25, !dbg !9870
  br i1 %cmp35, label %cond.true, label %cond.false, !dbg !9869

cond.true:                                        ; preds = %if.then32
  %30 = load i32, i32* %flags.addr, align 4, !dbg !9871
  %or = or i32 %30, 128, !dbg !9872
  br label %cond.end, !dbg !9869

cond.false:                                       ; preds = %if.then32
  %31 = load i32, i32* %flags.addr, align 4, !dbg !9873
  br label %cond.end, !dbg !9869

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or, %cond.true ], [ %31, %cond.false ], !dbg !9869
  call void @df_def_record_1(%struct.df_collection_rec* %24, %struct.rtx_def* %25, %struct.basic_block_def* %26, %struct.df_insn_info* %27, i32 %cond), !dbg !9874
  br label %if.end36, !dbg !9874

if.end36:                                         ; preds = %cond.end, %lor.lhs.false28
  br label %for.inc, !dbg !9875

for.inc:                                          ; preds = %if.end36
  %32 = load i32, i32* %i, align 4, !dbg !9876
  %dec = add nsw i32 %32, -1, !dbg !9876
  store i32 %dec, i32* %i, align 4, !dbg !9876
  br label %for.cond, !dbg !9877, !llvm.loop !9878

for.end:                                          ; preds = %for.cond
  br label %if.end120, !dbg !9880

if.end37:                                         ; preds = %if.end
  %33 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9881
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !9881
  %bf.load38 = load i32, i32* %34, align 8, !dbg !9881
  %bf.clear39 = and i32 %bf.load38, 65535, !dbg !9881
  %cmp40 = icmp eq i32 %bf.clear39, 40, !dbg !9883
  br i1 %cmp40, label %if.then41, label %if.end47, !dbg !9884

if.then41:                                        ; preds = %if.end37
  %35 = load i32, i32* %flags.addr, align 4, !dbg !9885
  %or42 = or i32 %35, 1072, !dbg !9885
  store i32 %or42, i32* %flags.addr, align 4, !dbg !9885
  %36 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9887
  %u43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !9887
  %fld44 = bitcast %union.u* %u43 to [1 x %union.rtunion_def]*, !dbg !9887
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i64 0, i64 0, !dbg !9887
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !9887
  store %struct.rtx_def** %rt_rtx46, %struct.rtx_def*** %loc, align 8, !dbg !9888
  %37 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !9889
  %38 = load %struct.rtx_def*, %struct.rtx_def** %37, align 8, !dbg !9890
  store %struct.rtx_def* %38, %struct.rtx_def** %dst, align 8, !dbg !9891
  br label %if.end47, !dbg !9892

if.end47:                                         ; preds = %if.then41, %if.end37
  %39 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9893
  %40 = bitcast %struct.rtx_def* %39 to i32*, !dbg !9893
  %bf.load48 = load i32, i32* %40, align 8, !dbg !9893
  %bf.clear49 = and i32 %bf.load48, 65535, !dbg !9893
  %cmp50 = icmp eq i32 %bf.clear49, 120, !dbg !9895
  br i1 %cmp50, label %if.then51, label %if.end89, !dbg !9896

if.then51:                                        ; preds = %if.end47
  %41 = load i32, i32* %flags.addr, align 4, !dbg !9897
  %or52 = or i32 %41, 560, !dbg !9897
  store i32 %or52, i32* %flags.addr, align 4, !dbg !9897
  %42 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9899
  %u53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !9899
  %fld54 = bitcast %union.u* %u53 to [1 x %union.rtunion_def]*, !dbg !9899
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld54, i64 0, i64 1, !dbg !9899
  %rt_rtx56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtx_def**, !dbg !9899
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx56, align 8, !dbg !9899
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !9899
  %bf.load57 = load i32, i32* %44, align 8, !dbg !9899
  %bf.clear58 = and i32 %bf.load57, 65535, !dbg !9899
  %cmp59 = icmp eq i32 %bf.clear58, 30, !dbg !9899
  br i1 %cmp59, label %land.lhs.true, label %if.end84, !dbg !9901

land.lhs.true:                                    ; preds = %if.then51
  %45 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9902
  %u60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !9902
  %fld61 = bitcast %union.u* %u60 to [1 x %union.rtunion_def]*, !dbg !9902
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i64 0, i64 2, !dbg !9902
  %rt_rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**, !dbg !9902
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx63, align 8, !dbg !9902
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !9902
  %bf.load64 = load i32, i32* %47, align 8, !dbg !9902
  %bf.clear65 = and i32 %bf.load64, 65535, !dbg !9902
  %cmp66 = icmp eq i32 %bf.clear65, 30, !dbg !9902
  br i1 %cmp66, label %if.then67, label %if.end84, !dbg !9903

if.then67:                                        ; preds = %land.lhs.true
  %48 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9904
  %u68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !9904
  %fld69 = bitcast %union.u* %u68 to [1 x %union.rtunion_def]*, !dbg !9904
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i64 0, i64 1, !dbg !9904
  %rt_rtx71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**, !dbg !9904
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx71, align 8, !dbg !9904
  %u72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1, !dbg !9904
  %hwint = bitcast %union.u* %u72 to [1 x i64]*, !dbg !9904
  %arrayidx73 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !9904
  %50 = load i64, i64* %arrayidx73, align 8, !dbg !9904
  %conv = trunc i64 %50 to i32, !dbg !9904
  store i32 %conv, i32* %width, align 4, !dbg !9906
  %51 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9907
  %u74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !9907
  %fld75 = bitcast %union.u* %u74 to [1 x %union.rtunion_def]*, !dbg !9907
  %arrayidx76 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld75, i64 0, i64 2, !dbg !9907
  %rt_rtx77 = bitcast %union.rtunion_def* %arrayidx76 to %struct.rtx_def**, !dbg !9907
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx77, align 8, !dbg !9907
  %u78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1, !dbg !9907
  %hwint79 = bitcast %union.u* %u78 to [1 x i64]*, !dbg !9907
  %arrayidx80 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint79, i64 0, i64 0, !dbg !9907
  %53 = load i64, i64* %arrayidx80, align 8, !dbg !9907
  %conv81 = trunc i64 %53 to i32, !dbg !9907
  store i32 %conv81, i32* %offset, align 4, !dbg !9908
  %54 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9909
  %55 = bitcast %struct.rtx_def* %54 to i32*, !dbg !9909
  %bf.load82 = load i32, i32* %55, align 8, !dbg !9909
  %bf.lshr = lshr i32 %bf.load82, 16, !dbg !9909
  %bf.clear83 = and i32 %bf.lshr, 255, !dbg !9909
  store i32 %bf.clear83, i32* %mode, align 4, !dbg !9910
  store i32 3, i32* %cl, align 4, !dbg !9911
  br label %if.end84, !dbg !9912

if.end84:                                         ; preds = %if.then67, %land.lhs.true, %if.then51
  %56 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9913
  %u85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1, !dbg !9913
  %fld86 = bitcast %union.u* %u85 to [1 x %union.rtunion_def]*, !dbg !9913
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i64 0, i64 0, !dbg !9913
  %rt_rtx88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtx_def**, !dbg !9913
  store %struct.rtx_def** %rt_rtx88, %struct.rtx_def*** %loc, align 8, !dbg !9914
  %57 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !9915
  %58 = load %struct.rtx_def*, %struct.rtx_def** %57, align 8, !dbg !9916
  store %struct.rtx_def* %58, %struct.rtx_def** %dst, align 8, !dbg !9917
  br label %if.end89, !dbg !9918

if.end89:                                         ; preds = %if.end84, %if.end47
  %59 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9919
  %60 = bitcast %struct.rtx_def* %59 to i32*, !dbg !9919
  %bf.load90 = load i32, i32* %60, align 8, !dbg !9919
  %bf.clear91 = and i32 %bf.load90, 65535, !dbg !9919
  %cmp92 = icmp eq i32 %bf.clear91, 37, !dbg !9919
  br i1 %cmp92, label %if.then94, label %if.else99, !dbg !9921

if.then94:                                        ; preds = %if.end89
  %61 = load i32, i32* %cl, align 4, !dbg !9922
  %62 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9924
  %63 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9925
  %64 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !9926
  %65 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9927
  %66 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9928
  %67 = load i32, i32* %flags.addr, align 4, !dbg !9929
  %68 = load i32, i32* %width, align 4, !dbg !9930
  %69 = load i32, i32* %offset, align 4, !dbg !9931
  %70 = load i32, i32* %mode, align 4, !dbg !9932
  call void @df_ref_record(i32 %61, %struct.df_collection_rec* %62, %struct.rtx_def* %63, %struct.rtx_def** %64, %struct.basic_block_def* %65, %struct.df_insn_info* %66, i32 0, i32 %67, i32 %68, i32 %69, i32 %70), !dbg !9933
  %71 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9934
  %call = call i32 @rhs_regno(%struct.rtx_def* %71), !dbg !9934
  %cmp95 = icmp eq i32 %call, 7, !dbg !9936
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !9937

if.then97:                                        ; preds = %if.then94
  %72 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9938
  %73 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9939
  %74 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9940
  %75 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9941
  %76 = load i32, i32* %flags.addr, align 4, !dbg !9942
  %77 = load i32, i32* %width, align 4, !dbg !9943
  %78 = load i32, i32* %offset, align 4, !dbg !9944
  %79 = load i32, i32* %mode, align 4, !dbg !9945
  call void @df_ref_record(i32 0, %struct.df_collection_rec* %72, %struct.rtx_def* %73, %struct.rtx_def** null, %struct.basic_block_def* %74, %struct.df_insn_info* %75, i32 1, i32 %76, i32 %77, i32 %78, i32 %79), !dbg !9946
  br label %if.end98, !dbg !9946

if.end98:                                         ; preds = %if.then97, %if.then94
  br label %if.end120, !dbg !9947

if.else99:                                        ; preds = %if.end89
  %80 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9948
  %81 = bitcast %struct.rtx_def* %80 to i32*, !dbg !9948
  %bf.load100 = load i32, i32* %81, align 8, !dbg !9948
  %bf.clear101 = and i32 %bf.load100, 65535, !dbg !9948
  %cmp102 = icmp eq i32 %bf.clear101, 39, !dbg !9950
  br i1 %cmp102, label %land.lhs.true104, label %if.end119, !dbg !9951

land.lhs.true104:                                 ; preds = %if.else99
  %82 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9952
  %u105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1, !dbg !9952
  %fld106 = bitcast %union.u* %u105 to [1 x %union.rtunion_def]*, !dbg !9952
  %arrayidx107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld106, i64 0, i64 0, !dbg !9952
  %rt_rtx108 = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtx_def**, !dbg !9952
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx108, align 8, !dbg !9952
  %84 = bitcast %struct.rtx_def* %83 to i32*, !dbg !9952
  %bf.load109 = load i32, i32* %84, align 8, !dbg !9952
  %bf.clear110 = and i32 %bf.load109, 65535, !dbg !9952
  %cmp111 = icmp eq i32 %bf.clear110, 37, !dbg !9952
  br i1 %cmp111, label %if.then113, label %if.end119, !dbg !9953

if.then113:                                       ; preds = %land.lhs.true104
  %85 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9954
  %call114 = call zeroext i8 @df_read_modify_subreg_p(%struct.rtx_def* %85), !dbg !9957
  %tobool = icmp ne i8 %call114, 0, !dbg !9957
  br i1 %tobool, label %if.then115, label %if.end117, !dbg !9958

if.then115:                                       ; preds = %if.then113
  %86 = load i32, i32* %flags.addr, align 4, !dbg !9959
  %or116 = or i32 %86, 48, !dbg !9959
  store i32 %or116, i32* %flags.addr, align 4, !dbg !9959
  br label %if.end117, !dbg !9960

if.end117:                                        ; preds = %if.then115, %if.then113
  %87 = load i32, i32* %flags.addr, align 4, !dbg !9961
  %or118 = or i32 %87, 2048, !dbg !9961
  store i32 %or118, i32* %flags.addr, align 4, !dbg !9961
  %88 = load i32, i32* %cl, align 4, !dbg !9962
  %89 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9963
  %90 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !9964
  %91 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !9965
  %92 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9966
  %93 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info.addr, align 8, !dbg !9967
  %94 = load i32, i32* %flags.addr, align 4, !dbg !9968
  %95 = load i32, i32* %width, align 4, !dbg !9969
  %96 = load i32, i32* %offset, align 4, !dbg !9970
  %97 = load i32, i32* %mode, align 4, !dbg !9971
  call void @df_ref_record(i32 %88, %struct.df_collection_rec* %89, %struct.rtx_def* %90, %struct.rtx_def** %91, %struct.basic_block_def* %92, %struct.df_insn_info* %93, i32 0, i32 %94, i32 %95, i32 %96, i32 %97), !dbg !9972
  br label %if.end119, !dbg !9973

if.end119:                                        ; preds = %if.end117, %land.lhs.true104, %if.else99
  br label %if.end120

if.end120:                                        ; preds = %for.end, %if.end119, %if.end98
  ret void, !dbg !9974
}

declare dso_local i32 @refers_to_regno_p(i32, i32, %struct.rtx_def*, %struct.rtx_def**) #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_entry_block_defs_collect(%struct.df_collection_rec* %collection_rec, %struct.bitmap_head_def* %entry_block_defs) #0 !dbg !9975 {
entry:
  %collection_rec.addr = alloca %struct.df_collection_rec*, align 8
  %entry_block_defs.addr = alloca %struct.bitmap_head_def*, align 8
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  store %struct.df_collection_rec* %collection_rec, %struct.df_collection_rec** %collection_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec** %collection_rec.addr, metadata !9978, metadata !DIExpression()), !dbg !9979
  store %struct.bitmap_head_def* %entry_block_defs, %struct.bitmap_head_def** %entry_block_defs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %entry_block_defs.addr, metadata !9980, metadata !DIExpression()), !dbg !9981
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9982, metadata !DIExpression()), !dbg !9983
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !9984, metadata !DIExpression()), !dbg !9985
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %entry_block_defs.addr, align 8, !dbg !9986
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %0, i32 0, i32* %i), !dbg !9986
  br label %for.cond, !dbg !9986

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %i), !dbg !9988
  %tobool = icmp ne i8 %call, 0, !dbg !9986
  br i1 %tobool, label %for.body, label %for.end, !dbg !9986

for.body:                                         ; preds = %for.cond
  %1 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9990
  %2 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !9992
  %3 = load i32, i32* %i, align 4, !dbg !9993
  %idxprom = zext i32 %3 to i64, !dbg !9992
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %2, i64 %idxprom, !dbg !9992
  %4 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !9992
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9994
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, !dbg !9994
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !9994
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9994
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i32 0, i32 0, !dbg !9994
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !9994
  call void @df_ref_record(i32 1, %struct.df_collection_rec* %1, %struct.rtx_def* %4, %struct.rtx_def** null, %struct.basic_block_def* %7, %struct.df_insn_info* null, i32 0, i32 0, i32 -1, i32 -1, i32 0), !dbg !9995
  br label %for.inc, !dbg !9996

for.inc:                                          ; preds = %for.body
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %i), !dbg !9988
  br label %for.cond, !dbg !9988, !llvm.loop !9997

for.end:                                          ; preds = %for.cond
  %8 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !9999
  call void @df_canonize_collection_rec(%struct.df_collection_rec* %8), !dbg !10000
  ret void, !dbg !10001
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_exit_block_uses_collect(%struct.df_collection_rec* %collection_rec, %struct.bitmap_head_def* %exit_block_uses) #0 !dbg !10002 {
entry:
  %collection_rec.addr = alloca %struct.df_collection_rec*, align 8
  %exit_block_uses.addr = alloca %struct.bitmap_head_def*, align 8
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  store %struct.df_collection_rec* %collection_rec, %struct.df_collection_rec** %collection_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_collection_rec** %collection_rec.addr, metadata !10003, metadata !DIExpression()), !dbg !10004
  store %struct.bitmap_head_def* %exit_block_uses, %struct.bitmap_head_def** %exit_block_uses.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %exit_block_uses.addr, metadata !10005, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10007, metadata !DIExpression()), !dbg !10008
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !10009, metadata !DIExpression()), !dbg !10010
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses.addr, align 8, !dbg !10011
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %0, i32 0, i32* %i), !dbg !10011
  br label %for.cond, !dbg !10011

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %i), !dbg !10013
  %tobool = icmp ne i8 %call, 0, !dbg !10011
  br i1 %tobool, label %for.body, label %for.end, !dbg !10011

for.body:                                         ; preds = %for.cond
  %1 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !10015
  %2 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !10016
  %3 = load i32, i32* %i, align 4, !dbg !10017
  %idxprom = zext i32 %3 to i64, !dbg !10016
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %2, i64 %idxprom, !dbg !10016
  %4 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !10016
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !10018
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, !dbg !10018
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !10018
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !10018
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i32 0, i32 1, !dbg !10018
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !10018
  call void @df_ref_record(i32 1, %struct.df_collection_rec* %1, %struct.rtx_def* %4, %struct.rtx_def** null, %struct.basic_block_def* %7, %struct.df_insn_info* null, i32 1, i32 0, i32 -1, i32 -1, i32 0), !dbg !10019
  br label %for.inc, !dbg !10019

for.inc:                                          ; preds = %for.body
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %i), !dbg !10013
  br label %for.cond, !dbg !10013, !llvm.loop !10020

for.end:                                          ; preds = %for.cond
  %8 = load i32, i32* @reload_completed, align 4, !dbg !10022
  %tobool1 = icmp ne i32 %8, 0, !dbg !10022
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !10024

land.lhs.true:                                    ; preds = %for.end
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses.addr, align 8, !dbg !10025
  %call2 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %9, i32 16), !dbg !10026
  %tobool3 = icmp ne i32 %call2, 0, !dbg !10026
  br i1 %tobool3, label %if.end, label %land.lhs.true4, !dbg !10027

land.lhs.true4:                                   ; preds = %land.lhs.true
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !10028
  %add.ptr5 = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, !dbg !10028
  %cfg6 = getelementptr inbounds %struct.function, %struct.function* %add.ptr5, i32 0, i32 1, !dbg !10028
  %11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg6, align 8, !dbg !10028
  %x_exit_block_ptr7 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i32 0, i32 1, !dbg !10028
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr7, align 8, !dbg !10028
  %call8 = call zeroext i8 @bb_has_eh_pred(%struct.basic_block_def* %12), !dbg !10029
  %conv = zext i8 %call8 to i32, !dbg !10029
  %tobool9 = icmp ne i32 %conv, 0, !dbg !10029
  br i1 %tobool9, label %land.lhs.true10, label %if.end, !dbg !10030

land.lhs.true10:                                  ; preds = %land.lhs.true4
  %13 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16, !dbg !10031
  %conv11 = sext i8 %13 to i32, !dbg !10031
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !10031
  br i1 %tobool12, label %if.then, label %if.end, !dbg !10032

if.then:                                          ; preds = %land.lhs.true10
  %14 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !10033
  %15 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !10034
  %arrayidx13 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %15, i64 16, !dbg !10034
  %16 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx13, align 8, !dbg !10034
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !10035
  %add.ptr14 = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, !dbg !10035
  %cfg15 = getelementptr inbounds %struct.function, %struct.function* %add.ptr14, i32 0, i32 1, !dbg !10035
  %18 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg15, align 8, !dbg !10035
  %x_exit_block_ptr16 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i32 0, i32 1, !dbg !10035
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr16, align 8, !dbg !10035
  call void @df_ref_record(i32 1, %struct.df_collection_rec* %14, %struct.rtx_def* %16, %struct.rtx_def** null, %struct.basic_block_def* %19, %struct.df_insn_info* null, i32 1, i32 0, i32 -1, i32 -1, i32 0), !dbg !10036
  br label %if.end, !dbg !10036

if.end:                                           ; preds = %if.then, %land.lhs.true10, %land.lhs.true4, %land.lhs.true, %for.end
  %20 = load %struct.df_collection_rec*, %struct.df_collection_rec** %collection_rec.addr, align 8, !dbg !10037
  call void @df_canonize_collection_rec(%struct.df_collection_rec* %20), !dbg !10038
  ret void, !dbg !10039
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @bb_has_eh_pred(%struct.basic_block_def* %bb) #0 !dbg !10040 {
entry:
  %retval = alloca i8, align 1
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !10041, metadata !DIExpression()), !dbg !10042
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e, metadata !10043, metadata !DIExpression()), !dbg !10044
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !10045, metadata !DIExpression()), !dbg !10052
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !10053
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 0, !dbg !10053
  %call = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds), !dbg !10053
  %1 = bitcast %struct.edge_iterator* %tmp to { i32, %struct.VEC_edge_gc** }*, !dbg !10053
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %1, i32 0, i32 0, !dbg !10053
  %3 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !10053
  store i32 %3, i32* %2, align 8, !dbg !10053
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %1, i32 0, i32 1, !dbg !10053
  %5 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !10053
  store %struct.VEC_edge_gc** %5, %struct.VEC_edge_gc*** %4, align 8, !dbg !10053
  %6 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !10053
  %7 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !10053
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false), !dbg !10053
  br label %for.cond, !dbg !10053

for.cond:                                         ; preds = %for.inc, %entry
  %8 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !10055
  %9 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 0, !dbg !10055
  %10 = load i32, i32* %9, align 8, !dbg !10055
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 1, !dbg !10055
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !10055
  %call1 = call zeroext i8 @ei_cond(i32 %10, %struct.VEC_edge_gc** %12, %struct.edge_def** %e), !dbg !10055
  %tobool = icmp ne i8 %call1, 0, !dbg !10053
  br i1 %tobool, label %for.body, label %for.end, !dbg !10053

for.body:                                         ; preds = %for.cond
  %13 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !10057
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %13, i32 0, i32 7, !dbg !10060
  %14 = load i32, i32* %flags, align 8, !dbg !10060
  %and = and i32 %14, 8, !dbg !10061
  %tobool2 = icmp ne i32 %and, 0, !dbg !10061
  br i1 %tobool2, label %if.then, label %if.end, !dbg !10062

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !10063
  br label %return, !dbg !10063

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10064

for.inc:                                          ; preds = %if.end
  call void @ei_next(%struct.edge_iterator* %ei), !dbg !10055
  br label %for.cond, !dbg !10055, !llvm.loop !10065

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !10067
  br label %return, !dbg !10067

return:                                           ; preds = %for.end, %if.then
  %15 = load i8, i8* %retval, align 1, !dbg !10068
  ret i8 %15, !dbg !10068
}

; Function Attrs: noinline nounwind uwtable
define internal { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) #0 !dbg !10069 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  %ev.addr = alloca %struct.VEC_edge_gc**, align 8
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %ev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_gc*** %ev.addr, metadata !10072, metadata !DIExpression()), !dbg !10073
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %retval, metadata !10074, metadata !DIExpression()), !dbg !10075
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i32 0, i32 0, !dbg !10076
  store i32 0, i32* %index, align 8, !dbg !10077
  %0 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %ev.addr, align 8, !dbg !10078
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i32 0, i32 1, !dbg !10079
  store %struct.VEC_edge_gc** %0, %struct.VEC_edge_gc*** %container, align 8, !dbg !10080
  %1 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !10081
  %2 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %1, align 8, !dbg !10081
  ret { i32, %struct.VEC_edge_gc** } %2, !dbg !10081
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) #0 !dbg !10082 {
entry:
  %retval = alloca i8, align 1
  %ei = alloca %struct.edge_iterator, align 8
  %p.addr = alloca %struct.edge_def**, align 8
  %0 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %ei.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %ei.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !10086, metadata !DIExpression()), !dbg !10087
  store %struct.edge_def** %p, %struct.edge_def*** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def*** %p.addr, metadata !10088, metadata !DIExpression()), !dbg !10089
  %3 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !10090
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !10090
  %5 = load i32, i32* %4, align 8, !dbg !10090
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !10090
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !10090
  %call = call zeroext i8 @ei_end_p(i32 %5, %struct.VEC_edge_gc** %7), !dbg !10090
  %tobool = icmp ne i8 %call, 0, !dbg !10090
  br i1 %tobool, label %if.else, label %if.then, !dbg !10092

if.then:                                          ; preds = %entry
  %8 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !10093
  %9 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 0, !dbg !10093
  %10 = load i32, i32* %9, align 8, !dbg !10093
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 1, !dbg !10093
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !10093
  %call1 = call %struct.edge_def* @ei_edge(i32 %10, %struct.VEC_edge_gc** %12), !dbg !10093
  %13 = load %struct.edge_def**, %struct.edge_def*** %p.addr, align 8, !dbg !10095
  store %struct.edge_def* %call1, %struct.edge_def** %13, align 8, !dbg !10096
  store i8 1, i8* %retval, align 1, !dbg !10097
  br label %return, !dbg !10097

if.else:                                          ; preds = %entry
  %14 = load %struct.edge_def**, %struct.edge_def*** %p.addr, align 8, !dbg !10098
  store %struct.edge_def* null, %struct.edge_def** %14, align 8, !dbg !10100
  store i8 0, i8* %retval, align 1, !dbg !10101
  br label %return, !dbg !10101

return:                                           ; preds = %if.else, %if.then
  %15 = load i8, i8* %retval, align 1, !dbg !10102
  ret i8 %15, !dbg !10102
}

; Function Attrs: noinline nounwind uwtable
define internal void @ei_next(%struct.edge_iterator* %i) #0 !dbg !10103 {
entry:
  %i.addr = alloca %struct.edge_iterator*, align 8
  store %struct.edge_iterator* %i, %struct.edge_iterator** %i.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator** %i.addr, metadata !10107, metadata !DIExpression()), !dbg !10108
  %0 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !10109
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %0, i32 0, i32 0, !dbg !10109
  %1 = load i32, i32* %index, align 8, !dbg !10109
  %2 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !10109
  %3 = bitcast %struct.edge_iterator* %2 to { i32, %struct.VEC_edge_gc** }*, !dbg !10109
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !10109
  %5 = load i32, i32* %4, align 8, !dbg !10109
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !10109
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !10109
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %5, %struct.VEC_edge_gc** %7), !dbg !10109
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !10109
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10109

cond.true:                                        ; preds = %entry
  %8 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !10109
  %9 = bitcast %struct.edge_iterator* %8 to { i32, %struct.VEC_edge_gc** }*, !dbg !10109
  %10 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 0, !dbg !10109
  %11 = load i32, i32* %10, align 8, !dbg !10109
  %12 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 1, !dbg !10109
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !10109
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %11, %struct.VEC_edge_gc** %13), !dbg !10109
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !10109
  br label %cond.end, !dbg !10109

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10109

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !10109
  %call2 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !10109
  %cmp = icmp ult i32 %1, %call2, !dbg !10109
  br i1 %cmp, label %cond.false4, label %cond.true3, !dbg !10109

cond.true3:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !10109
  br label %cond.end5, !dbg !10109

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !10109

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ 0, %cond.true3 ], [ 0, %cond.false4 ], !dbg !10109
  %14 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !10110
  %index7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %14, i32 0, i32 0, !dbg !10111
  %15 = load i32, i32* %index7, align 8, !dbg !10112
  %inc = add i32 %15, 1, !dbg !10112
  store i32 %inc, i32* %index7, align 8, !dbg !10112
  ret void, !dbg !10113
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !10114 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !10117, metadata !DIExpression()), !dbg !10118
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 0, !dbg !10119
  %3 = load i32, i32* %index, align 8, !dbg !10119
  %4 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !10120
  %5 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %4, i32 0, i32 0, !dbg !10120
  %6 = load i32, i32* %5, align 8, !dbg !10120
  %7 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %4, i32 0, i32 1, !dbg !10120
  %8 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %7, align 8, !dbg !10120
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %6, %struct.VEC_edge_gc** %8), !dbg !10120
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !10120
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10120

cond.true:                                        ; preds = %entry
  %9 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !10120
  %10 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 0, !dbg !10120
  %11 = load i32, i32* %10, align 8, !dbg !10120
  %12 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 1, !dbg !10120
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !10120
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %11, %struct.VEC_edge_gc** %13), !dbg !10120
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !10120
  br label %cond.end, !dbg !10120

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10120

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !10120
  %call2 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !10120
  %cmp = icmp eq i32 %3, %call2, !dbg !10121
  %conv = zext i1 %cmp to i32, !dbg !10121
  %conv3 = trunc i32 %conv to i8, !dbg !10122
  ret i8 %conv3, !dbg !10123
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !10124 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !10127, metadata !DIExpression()), !dbg !10128
  %3 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !10129
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !10129
  %5 = load i32, i32* %4, align 8, !dbg !10129
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !10129
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !10129
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %5, %struct.VEC_edge_gc** %7), !dbg !10129
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !10129
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10129

cond.true:                                        ; preds = %entry
  %8 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !10129
  %9 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 0, !dbg !10129
  %10 = load i32, i32* %9, align 8, !dbg !10129
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 1, !dbg !10129
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !10129
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %10, %struct.VEC_edge_gc** %12), !dbg !10129
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !10129
  br label %cond.end, !dbg !10129

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10129

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !10129
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 0, !dbg !10129
  %13 = load i32, i32* %index, align 8, !dbg !10129
  %call2 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %13), !dbg !10129
  ret %struct.edge_def* %call2, !dbg !10130
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) #0 !dbg !10131 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_base*, align 8
  store %struct.VEC_edge_base* %vec_, %struct.VEC_edge_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_base** %vec_.addr, metadata !10136, metadata !DIExpression()), !dbg !10137
  %0 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !10137
  %tobool = icmp ne %struct.VEC_edge_base* %0, null, !dbg !10137
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10137

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !10137
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %1, i32 0, i32 0, !dbg !10137
  %2 = load i32, i32* %num, align 8, !dbg !10137
  br label %cond.end, !dbg !10137

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10137

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !10137
  ret i32 %cond, !dbg !10137
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !10138 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !10141, metadata !DIExpression()), !dbg !10142
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 1, !dbg !10143
  %3 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %container, align 8, !dbg !10143
  %tobool = icmp ne %struct.VEC_edge_gc** %3, null, !dbg !10143
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !10143

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !10143
  br label %cond.end, !dbg !10143

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10143

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !10143
  %container1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 1, !dbg !10144
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %container1, align 8, !dbg !10144
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %4, align 8, !dbg !10145
  ret %struct.VEC_edge_gc* %5, !dbg !10146
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) #0 !dbg !10147 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_edge_base* %vec_, %struct.VEC_edge_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_base** %vec_.addr, metadata !10150, metadata !DIExpression()), !dbg !10151
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !10152, metadata !DIExpression()), !dbg !10151
  %0 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !10151
  %tobool = icmp ne %struct.VEC_edge_base* %0, null, !dbg !10151
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !10151

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !10151
  %2 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !10151
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %2, i32 0, i32 0, !dbg !10151
  %3 = load i32, i32* %num, align 8, !dbg !10151
  %cmp = icmp ult i32 %1, %3, !dbg !10151
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !10153
  %land.ext = zext i1 %4 to i32, !dbg !10151
  %5 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !10151
  %vec = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %5, i32 0, i32 2, !dbg !10151
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !10151
  %idxprom = zext i32 %6 to i64, !dbg !10151
  %arrayidx = getelementptr inbounds [1 x %struct.edge_def*], [1 x %struct.edge_def*]* %vec, i64 0, i64 %idxprom, !dbg !10151
  %7 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !10151
  ret %struct.edge_def* %7, !dbg !10151
}

declare dso_local zeroext i8 @ix86_function_arg_regno_p(i32) #2

declare dso_local %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @gen_rtx_REG(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_mark_reg(%struct.rtx_def* %reg, i8* %vset) #0 !dbg !10154 {
entry:
  %reg.addr = alloca %struct.rtx_def*, align 8
  %vset.addr = alloca i8*, align 8
  %set = alloca %struct.bitmap_head_def*, align 8
  %regno = alloca i32, align 4
  %n = alloca i32, align 4
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg.addr, metadata !10157, metadata !DIExpression()), !dbg !10158
  store i8* %vset, i8** %vset.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vset.addr, metadata !10159, metadata !DIExpression()), !dbg !10160
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %set, metadata !10161, metadata !DIExpression()), !dbg !10162
  %0 = load i8*, i8** %vset.addr, align 8, !dbg !10163
  %1 = bitcast i8* %0 to %struct.bitmap_head_def*, !dbg !10164
  store %struct.bitmap_head_def* %1, %struct.bitmap_head_def** %set, align 8, !dbg !10162
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !10165, metadata !DIExpression()), !dbg !10166
  %2 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !10167
  %call = call i32 @rhs_regno(%struct.rtx_def* %2), !dbg !10167
  store i32 %call, i32* %regno, align 4, !dbg !10166
  %3 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !10168
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !10168
  %bf.load = load i32, i32* %4, align 8, !dbg !10168
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !10168
  %bf.clear = and i32 %bf.lshr, 255, !dbg !10168
  %cmp = icmp ne i32 %bf.clear, 1, !dbg !10168
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !10168

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 3877, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !10168
  br label %cond.end, !dbg !10168

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10168

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !10168
  %5 = load i32, i32* %regno, align 4, !dbg !10169
  %cmp1 = icmp slt i32 %5, 53, !dbg !10171
  br i1 %cmp1, label %if.then, label %if.else, !dbg !10172

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %n, metadata !10173, metadata !DIExpression()), !dbg !10175
  %6 = load i32, i32* %regno, align 4, !dbg !10176
  %idxprom = sext i32 %6 to i64, !dbg !10177
  %arrayidx = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, !dbg !10177
  %7 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !10178
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !10178
  %bf.load2 = load i32, i32* %8, align 8, !dbg !10178
  %bf.lshr3 = lshr i32 %bf.load2, 16, !dbg !10178
  %bf.clear4 = and i32 %bf.lshr3, 255, !dbg !10178
  %idxprom5 = zext i32 %bf.clear4 to i64, !dbg !10177
  %arrayidx6 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx, i64 0, i64 %idxprom5, !dbg !10177
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !10177
  %conv = zext i8 %9 to i32, !dbg !10177
  store i32 %conv, i32* %n, align 4, !dbg !10175
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %set, align 8, !dbg !10179
  %11 = load i32, i32* %regno, align 4, !dbg !10180
  %12 = load i32, i32* %n, align 4, !dbg !10181
  call void @bitmap_set_range(%struct.bitmap_head_def* %10, i32 %11, i32 %12), !dbg !10182
  br label %if.end, !dbg !10183

if.else:                                          ; preds = %cond.end
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %set, align 8, !dbg !10184
  %14 = load i32, i32* %regno, align 4, !dbg !10185
  %call7 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %13, i32 %14), !dbg !10186
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10187
}

declare dso_local void @diddle_return_value(void (%struct.rtx_def*, i8*)*, i8*) #2

declare dso_local void @bitmap_set_range(%struct.bitmap_head_def*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @df_refs_verify(%struct.VEC_df_ref_stack* %new_rec, %union.df_ref_d** %old_rec, i8 zeroext %abort_if_fail) #0 !dbg !10188 {
entry:
  %retval = alloca i8, align 1
  %new_rec.addr = alloca %struct.VEC_df_ref_stack*, align 8
  %old_rec.addr = alloca %union.df_ref_d**, align 8
  %abort_if_fail.addr = alloca i8, align 1
  %ix = alloca i32, align 4
  %new_ref = alloca %union.df_ref_d*, align 8
  store %struct.VEC_df_ref_stack* %new_rec, %struct.VEC_df_ref_stack** %new_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_ref_stack** %new_rec.addr, metadata !10191, metadata !DIExpression()), !dbg !10192
  store %union.df_ref_d** %old_rec, %union.df_ref_d*** %old_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %old_rec.addr, metadata !10193, metadata !DIExpression()), !dbg !10194
  store i8 %abort_if_fail, i8* %abort_if_fail.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %abort_if_fail.addr, metadata !10195, metadata !DIExpression()), !dbg !10196
  call void @llvm.dbg.declare(metadata i32* %ix, metadata !10197, metadata !DIExpression()), !dbg !10198
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %new_ref, metadata !10199, metadata !DIExpression()), !dbg !10200
  store i32 0, i32* %ix, align 4, !dbg !10201
  br label %for.cond, !dbg !10203

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %new_rec.addr, align 8, !dbg !10204
  %tobool = icmp ne %struct.VEC_df_ref_stack* %0, null, !dbg !10204
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10204

cond.true:                                        ; preds = %for.cond
  %1 = load %struct.VEC_df_ref_stack*, %struct.VEC_df_ref_stack** %new_rec.addr, align 8, !dbg !10204
  %base = getelementptr inbounds %struct.VEC_df_ref_stack, %struct.VEC_df_ref_stack* %1, i32 0, i32 0, !dbg !10204
  br label %cond.end, !dbg !10204

cond.false:                                       ; preds = %for.cond
  br label %cond.end, !dbg !10204

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_df_ref_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !10204
  %2 = load i32, i32* %ix, align 4, !dbg !10204
  %call = call i32 @VEC_df_ref_base_iterate(%struct.VEC_df_ref_base* %cond, i32 %2, %union.df_ref_d** %new_ref), !dbg !10204
  %tobool1 = icmp ne i32 %call, 0, !dbg !10206
  br i1 %tobool1, label %for.body, label %for.end, !dbg !10206

for.body:                                         ; preds = %cond.end
  %3 = load %union.df_ref_d**, %union.df_ref_d*** %old_rec.addr, align 8, !dbg !10207
  %4 = load %union.df_ref_d*, %union.df_ref_d** %3, align 8, !dbg !10210
  %cmp = icmp eq %union.df_ref_d* %4, null, !dbg !10211
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10212

lor.lhs.false:                                    ; preds = %for.body
  %5 = load %union.df_ref_d*, %union.df_ref_d** %new_ref, align 8, !dbg !10213
  %6 = load %union.df_ref_d**, %union.df_ref_d*** %old_rec.addr, align 8, !dbg !10214
  %7 = load %union.df_ref_d*, %union.df_ref_d** %6, align 8, !dbg !10215
  %call2 = call zeroext i8 @df_ref_equal_p(%union.df_ref_d* %5, %union.df_ref_d* %7), !dbg !10216
  %tobool3 = icmp ne i8 %call2, 0, !dbg !10216
  br i1 %tobool3, label %if.end6, label %if.then, !dbg !10217

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %8 = load i8, i8* %abort_if_fail.addr, align 1, !dbg !10218
  %tobool4 = icmp ne i8 %8, 0, !dbg !10218
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !10221

if.then5:                                         ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4431, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !10222
  br label %if.end, !dbg !10222

if.else:                                          ; preds = %if.then
  store i8 0, i8* %retval, align 1, !dbg !10223
  br label %return, !dbg !10223

if.end:                                           ; preds = %if.then5
  br label %if.end6, !dbg !10224

if.end6:                                          ; preds = %if.end, %lor.lhs.false
  %9 = load i8, i8* %abort_if_fail.addr, align 1, !dbg !10225
  %tobool7 = icmp ne i8 %9, 0, !dbg !10225
  br i1 %tobool7, label %if.then8, label %if.end20, !dbg !10227

if.then8:                                         ; preds = %if.end6
  %10 = load %union.df_ref_d**, %union.df_ref_d*** %old_rec.addr, align 8, !dbg !10228
  %11 = load %union.df_ref_d*, %union.df_ref_d** %10, align 8, !dbg !10228
  %base9 = bitcast %union.df_ref_d* %11 to %struct.df_base_ref*, !dbg !10228
  %12 = bitcast %struct.df_base_ref* %base9 to i32*, !dbg !10228
  %bf.load = load i32, i32* %12, align 8, !dbg !10228
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !10228
  %and = and i32 %bf.ashr, 16384, !dbg !10228
  %cmp10 = icmp ne i32 %and, 0, !dbg !10228
  br i1 %cmp10, label %cond.false12, label %cond.true11, !dbg !10228

cond.true11:                                      ; preds = %if.then8
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4440, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !10228
  br label %cond.end13, !dbg !10228

cond.false12:                                     ; preds = %if.then8
  br label %cond.end13, !dbg !10228

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i32 [ 0, %cond.true11 ], [ 0, %cond.false12 ], !dbg !10228
  %13 = load %union.df_ref_d**, %union.df_ref_d*** %old_rec.addr, align 8, !dbg !10230
  %14 = load %union.df_ref_d*, %union.df_ref_d** %13, align 8, !dbg !10230
  %base15 = bitcast %union.df_ref_d* %14 to %struct.df_base_ref*, !dbg !10230
  %15 = bitcast %struct.df_base_ref* %base15 to i32*, !dbg !10230
  %bf.load16 = load i32, i32* %15, align 8, !dbg !10230
  %bf.ashr17 = ashr i32 %bf.load16, 16, !dbg !10230
  %and18 = and i32 %bf.ashr17, -16385, !dbg !10230
  %bf.load19 = load i32, i32* %15, align 8, !dbg !10230
  %bf.value = and i32 %and18, 65535, !dbg !10230
  %bf.shl = shl i32 %bf.value, 16, !dbg !10230
  %bf.clear = and i32 %bf.load19, 65535, !dbg !10230
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !10230
  store i32 %bf.set, i32* %15, align 8, !dbg !10230
  %bf.result.shl = shl i32 %bf.value, 16, !dbg !10230
  %bf.result.ashr = ashr i32 %bf.result.shl, 16, !dbg !10230
  br label %if.end20, !dbg !10231

if.end20:                                         ; preds = %cond.end13, %if.end6
  %16 = load %union.df_ref_d**, %union.df_ref_d*** %old_rec.addr, align 8, !dbg !10232
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %16, i32 1, !dbg !10232
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %old_rec.addr, align 8, !dbg !10232
  br label %for.inc, !dbg !10233

for.inc:                                          ; preds = %if.end20
  %17 = load i32, i32* %ix, align 4, !dbg !10234
  %inc = add i32 %17, 1, !dbg !10234
  store i32 %inc, i32* %ix, align 4, !dbg !10234
  br label %for.cond, !dbg !10235, !llvm.loop !10236

for.end:                                          ; preds = %cond.end
  %18 = load i8, i8* %abort_if_fail.addr, align 1, !dbg !10238
  %tobool21 = icmp ne i8 %18, 0, !dbg !10238
  br i1 %tobool21, label %if.then22, label %if.else28, !dbg !10240

if.then22:                                        ; preds = %for.end
  %19 = load %union.df_ref_d**, %union.df_ref_d*** %old_rec.addr, align 8, !dbg !10241
  %20 = load %union.df_ref_d*, %union.df_ref_d** %19, align 8, !dbg !10241
  %cmp23 = icmp eq %union.df_ref_d* %20, null, !dbg !10241
  br i1 %cmp23, label %cond.false25, label %cond.true24, !dbg !10241

cond.true24:                                      ; preds = %if.then22
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4448, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !10241
  br label %cond.end26, !dbg !10241

cond.false25:                                     ; preds = %if.then22
  br label %cond.end26, !dbg !10241

cond.end26:                                       ; preds = %cond.false25, %cond.true24
  %cond27 = phi i32 [ 0, %cond.true24 ], [ 0, %cond.false25 ], !dbg !10241
  br label %if.end31, !dbg !10241

if.else28:                                        ; preds = %for.end
  %21 = load %union.df_ref_d**, %union.df_ref_d*** %old_rec.addr, align 8, !dbg !10242
  %22 = load %union.df_ref_d*, %union.df_ref_d** %21, align 8, !dbg !10243
  %cmp29 = icmp eq %union.df_ref_d* %22, null, !dbg !10244
  %conv = zext i1 %cmp29 to i32, !dbg !10244
  %conv30 = trunc i32 %conv to i8, !dbg !10243
  store i8 %conv30, i8* %retval, align 1, !dbg !10245
  br label %return, !dbg !10245

if.end31:                                         ; preds = %cond.end26
  store i8 0, i8* %retval, align 1, !dbg !10246
  br label %return, !dbg !10246

return:                                           ; preds = %if.end31, %if.else28, %if.else
  %23 = load i8, i8* %retval, align 1, !dbg !10247
  ret i8 %23, !dbg !10247
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @df_mws_verify(%struct.VEC_df_mw_hardreg_ptr_stack* %new_rec, %struct.df_mw_hardreg** %old_rec, i8 zeroext %abort_if_fail) #0 !dbg !10248 {
entry:
  %retval = alloca i8, align 1
  %new_rec.addr = alloca %struct.VEC_df_mw_hardreg_ptr_stack*, align 8
  %old_rec.addr = alloca %struct.df_mw_hardreg**, align 8
  %abort_if_fail.addr = alloca i8, align 1
  %ix = alloca i32, align 4
  %new_reg = alloca %struct.df_mw_hardreg*, align 8
  store %struct.VEC_df_mw_hardreg_ptr_stack* %new_rec, %struct.VEC_df_mw_hardreg_ptr_stack** %new_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_df_mw_hardreg_ptr_stack** %new_rec.addr, metadata !10251, metadata !DIExpression()), !dbg !10252
  store %struct.df_mw_hardreg** %old_rec, %struct.df_mw_hardreg*** %old_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg*** %old_rec.addr, metadata !10253, metadata !DIExpression()), !dbg !10254
  store i8 %abort_if_fail, i8* %abort_if_fail.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %abort_if_fail.addr, metadata !10255, metadata !DIExpression()), !dbg !10256
  call void @llvm.dbg.declare(metadata i32* %ix, metadata !10257, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %new_reg, metadata !10259, metadata !DIExpression()), !dbg !10260
  store i32 0, i32* %ix, align 4, !dbg !10261
  br label %for.cond, !dbg !10263

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %new_rec.addr, align 8, !dbg !10264
  %tobool = icmp ne %struct.VEC_df_mw_hardreg_ptr_stack* %0, null, !dbg !10264
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10264

cond.true:                                        ; preds = %for.cond
  %1 = load %struct.VEC_df_mw_hardreg_ptr_stack*, %struct.VEC_df_mw_hardreg_ptr_stack** %new_rec.addr, align 8, !dbg !10264
  %base = getelementptr inbounds %struct.VEC_df_mw_hardreg_ptr_stack, %struct.VEC_df_mw_hardreg_ptr_stack* %1, i32 0, i32 0, !dbg !10264
  br label %cond.end, !dbg !10264

cond.false:                                       ; preds = %for.cond
  br label %cond.end, !dbg !10264

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_df_mw_hardreg_ptr_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !10264
  %2 = load i32, i32* %ix, align 4, !dbg !10264
  %call = call i32 @VEC_df_mw_hardreg_ptr_base_iterate(%struct.VEC_df_mw_hardreg_ptr_base* %cond, i32 %2, %struct.df_mw_hardreg** %new_reg), !dbg !10264
  %tobool1 = icmp ne i32 %call, 0, !dbg !10266
  br i1 %tobool1, label %for.body, label %for.end, !dbg !10266

for.body:                                         ; preds = %cond.end
  %3 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %old_rec.addr, align 8, !dbg !10267
  %4 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %3, align 8, !dbg !10270
  %cmp = icmp eq %struct.df_mw_hardreg* %4, null, !dbg !10271
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10272

lor.lhs.false:                                    ; preds = %for.body
  %5 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %new_reg, align 8, !dbg !10273
  %6 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %old_rec.addr, align 8, !dbg !10274
  %7 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %6, align 8, !dbg !10275
  %call2 = call zeroext i8 @df_mw_equal_p(%struct.df_mw_hardreg* %5, %struct.df_mw_hardreg* %7), !dbg !10276
  %tobool3 = icmp ne i8 %call2, 0, !dbg !10276
  br i1 %tobool3, label %if.end6, label %if.then, !dbg !10277

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %8 = load i8, i8* %abort_if_fail.addr, align 1, !dbg !10278
  %tobool4 = icmp ne i8 %8, 0, !dbg !10278
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !10281

if.then5:                                         ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4470, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !10282
  br label %if.end, !dbg !10282

if.else:                                          ; preds = %if.then
  store i8 0, i8* %retval, align 1, !dbg !10283
  br label %return, !dbg !10283

if.end:                                           ; preds = %if.then5
  br label %if.end6, !dbg !10284

if.end6:                                          ; preds = %if.end, %lor.lhs.false
  %9 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %old_rec.addr, align 8, !dbg !10285
  %incdec.ptr = getelementptr inbounds %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %9, i32 1, !dbg !10285
  store %struct.df_mw_hardreg** %incdec.ptr, %struct.df_mw_hardreg*** %old_rec.addr, align 8, !dbg !10285
  br label %for.inc, !dbg !10286

for.inc:                                          ; preds = %if.end6
  %10 = load i32, i32* %ix, align 4, !dbg !10287
  %inc = add i32 %10, 1, !dbg !10287
  store i32 %inc, i32* %ix, align 4, !dbg !10287
  br label %for.cond, !dbg !10288, !llvm.loop !10289

for.end:                                          ; preds = %cond.end
  %11 = load i8, i8* %abort_if_fail.addr, align 1, !dbg !10291
  %tobool7 = icmp ne i8 %11, 0, !dbg !10291
  br i1 %tobool7, label %if.then8, label %if.else14, !dbg !10293

if.then8:                                         ; preds = %for.end
  %12 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %old_rec.addr, align 8, !dbg !10294
  %13 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %12, align 8, !dbg !10294
  %cmp9 = icmp eq %struct.df_mw_hardreg* %13, null, !dbg !10294
  br i1 %cmp9, label %cond.false11, label %cond.true10, !dbg !10294

cond.true10:                                      ; preds = %if.then8
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 4478, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !10294
  br label %cond.end12, !dbg !10294

cond.false11:                                     ; preds = %if.then8
  br label %cond.end12, !dbg !10294

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond13 = phi i32 [ 0, %cond.true10 ], [ 0, %cond.false11 ], !dbg !10294
  br label %if.end17, !dbg !10294

if.else14:                                        ; preds = %for.end
  %14 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %old_rec.addr, align 8, !dbg !10295
  %15 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %14, align 8, !dbg !10296
  %cmp15 = icmp eq %struct.df_mw_hardreg* %15, null, !dbg !10297
  %conv = zext i1 %cmp15 to i32, !dbg !10297
  %conv16 = trunc i32 %conv to i8, !dbg !10296
  store i8 %conv16, i8* %retval, align 1, !dbg !10298
  br label %return, !dbg !10298

if.end17:                                         ; preds = %cond.end12
  store i8 0, i8* %retval, align 1, !dbg !10299
  br label %return, !dbg !10299

return:                                           ; preds = %if.end17, %if.else14, %if.else
  %16 = load i8, i8* %retval, align 1, !dbg !10300
  ret i8 %16, !dbg !10300
}

declare dso_local void @print_current_pass(%struct._IO_FILE*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2191, !2192, !2193}
!llvm.ident = !{!2194}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "problem_SCAN", scope: !2, file: !3, line: 519, type: !2060, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !812, globals: !2032, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "df-scan.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !134, !140, !145, !150, !169, !176, !183, !377, !387, !393, !399, !417, !560, !569, !603, !608, !784, !798}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !135, line: 363, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./basic-block.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !135, line: 355, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144}
!142 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !146, line: 474, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./config/i386/i386.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!147 = !{!148, !149}
!148 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !151, line: 280, baseType: !7, size: 32, elements: !152)
!151 = !DIFile(filename: "./tree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!152 = !{!153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168}
!153 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!156 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!157 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!158 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!159 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!160 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !151, line: 1817, baseType: !7, size: 32, elements: !170)
!170 = !{!171, !172, !173, !174, !175}
!171 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !151, line: 1805, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !151, line: 39, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376}
!185 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!190 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!191 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!192 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!193 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!194 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!195 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!196 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!197 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!198 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!199 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!200 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!201 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!202 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!203 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!204 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!205 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!206 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!207 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!208 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!209 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!210 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!211 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!212 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!213 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!214 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!215 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!216 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!217 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!218 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!219 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!220 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!221 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!222 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!223 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!224 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!225 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!226 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!228 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!229 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!230 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!231 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!232 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!233 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!234 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!235 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!236 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!237 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!238 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!239 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!240 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!241 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!242 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!243 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!244 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!245 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!246 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!247 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!248 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!249 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!250 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!251 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!252 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!253 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!254 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!255 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!256 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!257 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!258 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!259 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!260 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!261 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!262 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!263 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!264 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!265 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!266 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!267 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!268 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!269 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!270 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!271 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!272 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!273 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!274 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!275 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!277 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!278 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!279 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!280 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!281 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!282 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!283 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!284 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!285 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!286 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!287 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!288 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!289 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!290 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!291 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!292 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!293 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!294 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!295 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!296 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!297 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!298 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!299 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!300 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!301 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!302 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!303 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!304 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!305 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!307 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!308 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!309 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!310 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!311 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!312 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!313 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!314 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!315 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!316 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!317 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!318 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!319 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!320 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!321 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!322 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!323 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!324 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!325 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!326 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!327 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!328 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!329 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!330 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!331 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!332 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!333 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!334 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!335 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!336 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!337 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!338 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!339 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!340 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!341 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!342 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!343 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!344 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!349 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!350 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!351 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!352 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!353 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!354 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!355 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!356 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!357 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!358 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!359 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!360 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!361 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!370 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!371 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!372 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!373 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!374 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!375 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!376 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_ref_order", file: !378, line: 166, baseType: !7, size: 32, elements: !379)
!378 = !DIFile(filename: "./df.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!379 = !{!380, !381, !382, !383, !384, !385, !386}
!380 = !DIEnumerator(name: "DF_REF_ORDER_NO_TABLE", value: 0, isUnsigned: true)
!381 = !DIEnumerator(name: "DF_REF_ORDER_UNORDERED", value: 1, isUnsigned: true)
!382 = !DIEnumerator(name: "DF_REF_ORDER_UNORDERED_WITH_NOTES", value: 2, isUnsigned: true)
!383 = !DIEnumerator(name: "DF_REF_ORDER_BY_REG", value: 3, isUnsigned: true)
!384 = !DIEnumerator(name: "DF_REF_ORDER_BY_REG_WITH_NOTES", value: 4, isUnsigned: true)
!385 = !DIEnumerator(name: "DF_REF_ORDER_BY_INSN", value: 5, isUnsigned: true)
!386 = !DIEnumerator(name: "DF_REF_ORDER_BY_INSN_WITH_NOTES", value: 6, isUnsigned: true)
!387 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_ref_type", file: !378, line: 81, baseType: !7, size: 32, elements: !388)
!388 = !{!389, !390, !391, !392}
!389 = !DIEnumerator(name: "DF_REF_REG_DEF", value: 0, isUnsigned: true)
!390 = !DIEnumerator(name: "DF_REF_REG_USE", value: 1, isUnsigned: true)
!391 = !DIEnumerator(name: "DF_REF_REG_MEM_LOAD", value: 2, isUnsigned: true)
!392 = !DIEnumerator(name: "DF_REF_REG_MEM_STORE", value: 3, isUnsigned: true)
!393 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_ref_class", file: !378, line: 76, baseType: !7, size: 32, elements: !394)
!394 = !{!395, !396, !397, !398}
!395 = !DIEnumerator(name: "DF_REF_BASE", value: 0, isUnsigned: true)
!396 = !DIEnumerator(name: "DF_REF_ARTIFICIAL", value: 1, isUnsigned: true)
!397 = !DIEnumerator(name: "DF_REF_REGULAR", value: 2, isUnsigned: true)
!398 = !DIEnumerator(name: "DF_REF_EXTRACT", value: 3, isUnsigned: true)
!399 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_ref_flags", file: !378, line: 84, baseType: !7, size: 32, elements: !400)
!400 = !{!401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416}
!401 = !DIEnumerator(name: "DF_REF_CONDITIONAL", value: 1, isUnsigned: true)
!402 = !DIEnumerator(name: "DF_REF_AT_TOP", value: 2, isUnsigned: true)
!403 = !DIEnumerator(name: "DF_REF_IN_NOTE", value: 4, isUnsigned: true)
!404 = !DIEnumerator(name: "DF_HARD_REG_LIVE", value: 8, isUnsigned: true)
!405 = !DIEnumerator(name: "DF_REF_PARTIAL", value: 16, isUnsigned: true)
!406 = !DIEnumerator(name: "DF_REF_READ_WRITE", value: 32, isUnsigned: true)
!407 = !DIEnumerator(name: "DF_REF_MAY_CLOBBER", value: 64, isUnsigned: true)
!408 = !DIEnumerator(name: "DF_REF_MUST_CLOBBER", value: 128, isUnsigned: true)
!409 = !DIEnumerator(name: "DF_REF_SIGN_EXTRACT", value: 256, isUnsigned: true)
!410 = !DIEnumerator(name: "DF_REF_ZERO_EXTRACT", value: 512, isUnsigned: true)
!411 = !DIEnumerator(name: "DF_REF_STRICT_LOW_PART", value: 1024, isUnsigned: true)
!412 = !DIEnumerator(name: "DF_REF_SUBREG", value: 2048, isUnsigned: true)
!413 = !DIEnumerator(name: "DF_REF_MW_HARDREG", value: 4096, isUnsigned: true)
!414 = !DIEnumerator(name: "DF_REF_CALL_STACK_USAGE", value: 8192, isUnsigned: true)
!415 = !DIEnumerator(name: "DF_REF_REG_MARKER", value: 16384, isUnsigned: true)
!416 = !DIEnumerator(name: "DF_REF_PRE_POST_MODIFY", value: 32768, isUnsigned: true)
!417 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !418, line: 45, baseType: !7, size: 32, elements: !419)
!418 = !DIFile(filename: "./rtl.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!419 = !{!420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559}
!420 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!421 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!422 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!423 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!424 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!425 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!426 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!427 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!428 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!429 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!430 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!431 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!432 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!433 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!434 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!435 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!436 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!437 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!438 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!439 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!440 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!441 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!442 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!443 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!444 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!445 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!446 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!447 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!448 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!449 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!450 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!451 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!452 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!453 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!454 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!455 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!456 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!457 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!458 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!459 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!460 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!461 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!462 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!463 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!464 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!465 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!466 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!467 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!468 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!469 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!470 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!471 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!472 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!473 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!474 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!475 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!476 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!477 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!478 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!479 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!480 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!481 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!482 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!483 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!484 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!485 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!486 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!487 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!488 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!489 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!490 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!491 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!492 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!493 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!494 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!495 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!496 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!497 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!498 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!499 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!500 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!501 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!502 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!503 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!504 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!505 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!506 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!507 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!508 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!509 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!510 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!511 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!512 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!513 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!514 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!515 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!516 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!517 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!518 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!519 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!520 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!521 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!522 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!523 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!524 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!525 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!526 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!527 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!528 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!529 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!530 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!531 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!532 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!533 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!534 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!535 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!536 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!537 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!538 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!539 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!540 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!541 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!542 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!543 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!544 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!545 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!546 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!547 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!548 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!549 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!550 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!551 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!552 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!553 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!554 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!555 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!556 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!557 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!558 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!559 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!560 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_changeable_flags", file: !378, line: 463, baseType: !7, size: 32, elements: !561)
!561 = !{!562, !563, !564, !565, !566, !567, !568}
!562 = !DIEnumerator(name: "DF_LR_RUN_DCE", value: 1, isUnsigned: true)
!563 = !DIEnumerator(name: "DF_NO_HARD_REGS", value: 2, isUnsigned: true)
!564 = !DIEnumerator(name: "DF_EQ_NOTES", value: 4, isUnsigned: true)
!565 = !DIEnumerator(name: "DF_NO_REGS_EVER_LIVE", value: 8, isUnsigned: true)
!566 = !DIEnumerator(name: "DF_NO_INSN_RESCAN", value: 16, isUnsigned: true)
!567 = !DIEnumerator(name: "DF_DEFER_INSN_RESCAN", value: 32, isUnsigned: true)
!568 = !DIEnumerator(name: "DF_VERIFY_SCHEDULED", value: 64, isUnsigned: true)
!569 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !418, line: 836, baseType: !7, size: 32, elements: !570)
!570 = !{!571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602}
!571 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!572 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!573 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!574 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!575 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!576 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!577 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!578 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!579 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!580 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!581 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!582 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!583 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!584 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!585 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!586 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!587 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!588 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!589 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!590 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!591 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!592 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!593 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!594 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!595 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!596 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!597 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!598 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!599 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!600 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!601 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!602 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!603 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_flow_dir", file: !378, line: 60, baseType: !7, size: 32, elements: !604)
!604 = !{!605, !606, !607}
!605 = !DIEnumerator(name: "DF_NONE", value: 0, isUnsigned: true)
!606 = !DIEnumerator(name: "DF_FORWARD", value: 1, isUnsigned: true)
!607 = !DIEnumerator(name: "DF_BACKWARD", value: 2, isUnsigned: true)
!608 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !609, line: 74, baseType: !7, size: 32, elements: !610)
!609 = !DIFile(filename: "./timevar.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!610 = !{!611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783}
!611 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!612 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!613 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!614 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!615 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!616 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!617 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!618 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!619 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!620 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!621 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!622 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!623 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!624 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!625 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!626 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!627 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!628 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!629 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!630 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!631 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!632 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!633 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!634 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!635 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!636 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!637 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!638 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!639 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!640 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!641 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!642 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!643 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!644 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!645 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!646 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!647 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!648 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!649 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!650 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!651 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!652 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!653 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!654 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!655 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!656 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!657 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!658 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!659 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!660 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!661 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!662 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!663 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!664 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!665 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!666 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!667 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!668 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!669 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!670 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!671 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!672 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!673 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!674 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!675 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!676 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!677 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!678 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!679 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!680 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!681 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!682 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!683 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!684 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!685 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!686 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!687 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!688 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!689 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!690 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!691 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!692 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!693 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!694 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!695 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!696 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!697 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!698 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!699 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!700 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!701 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!702 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!703 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!704 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!705 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!706 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!707 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!708 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!709 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!710 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!711 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!712 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!713 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!714 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!715 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!716 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!717 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!718 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!719 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!720 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!721 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!722 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!723 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!724 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!725 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!726 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!727 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!728 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!729 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!730 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!731 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!732 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!733 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!734 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!735 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!736 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!737 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!738 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!739 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!740 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!741 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!742 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!743 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!744 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!745 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!746 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!747 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!748 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!749 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!750 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!751 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!752 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!753 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!754 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!755 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!756 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!757 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!758 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!759 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!760 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!761 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!762 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!763 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!764 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!765 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!766 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!767 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!768 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!769 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!770 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!771 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!772 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!773 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!774 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!775 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!776 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!777 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!778 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!779 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!780 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!781 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!782 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!783 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!784 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bb_flags", file: !135, line: 295, baseType: !7, size: 32, elements: !785)
!785 = !{!786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797}
!786 = !DIEnumerator(name: "BB_NEW", value: 1, isUnsigned: true)
!787 = !DIEnumerator(name: "BB_REACHABLE", value: 2, isUnsigned: true)
!788 = !DIEnumerator(name: "BB_IRREDUCIBLE_LOOP", value: 4, isUnsigned: true)
!789 = !DIEnumerator(name: "BB_SUPERBLOCK", value: 8, isUnsigned: true)
!790 = !DIEnumerator(name: "BB_DISABLE_SCHEDULE", value: 16, isUnsigned: true)
!791 = !DIEnumerator(name: "BB_HOT_PARTITION", value: 32, isUnsigned: true)
!792 = !DIEnumerator(name: "BB_COLD_PARTITION", value: 64, isUnsigned: true)
!793 = !DIEnumerator(name: "BB_DUPLICATED", value: 128, isUnsigned: true)
!794 = !DIEnumerator(name: "BB_NON_LOCAL_GOTO_TARGET", value: 256, isUnsigned: true)
!795 = !DIEnumerator(name: "BB_RTL", value: 512, isUnsigned: true)
!796 = !DIEnumerator(name: "BB_FORWARDER_BLOCK", value: 1024, isUnsigned: true)
!797 = !DIEnumerator(name: "BB_NONTHREADABLE_BLOCK", value: 2048, isUnsigned: true)
!798 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "global_rtl_index", file: !418, line: 1994, baseType: !7, size: 32, elements: !799)
!799 = !{!800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!800 = !DIEnumerator(name: "GR_PC", value: 0, isUnsigned: true)
!801 = !DIEnumerator(name: "GR_CC0", value: 1, isUnsigned: true)
!802 = !DIEnumerator(name: "GR_STACK_POINTER", value: 2, isUnsigned: true)
!803 = !DIEnumerator(name: "GR_FRAME_POINTER", value: 3, isUnsigned: true)
!804 = !DIEnumerator(name: "GR_HARD_FRAME_POINTER", value: 4, isUnsigned: true)
!805 = !DIEnumerator(name: "GR_ARG_POINTER", value: 5, isUnsigned: true)
!806 = !DIEnumerator(name: "GR_VIRTUAL_INCOMING_ARGS", value: 6, isUnsigned: true)
!807 = !DIEnumerator(name: "GR_VIRTUAL_STACK_ARGS", value: 7, isUnsigned: true)
!808 = !DIEnumerator(name: "GR_VIRTUAL_STACK_DYNAMIC", value: 8, isUnsigned: true)
!809 = !DIEnumerator(name: "GR_VIRTUAL_OUTGOING_ARGS", value: 9, isUnsigned: true)
!810 = !DIEnumerator(name: "GR_VIRTUAL_CFA", value: 10, isUnsigned: true)
!811 = !DIEnumerator(name: "GR_MAX", value: 11, isUnsigned: true)
!812 = !{!813, !915, !1989, !905, !1995, !1990, !1996, !919, !417, !1946, !7, !1997, !2009, !2022, !569, !5, !1954, !2023, !2024, !900, !920, !2021, !2026, !2028, !1955}
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_scan_problem_data", file: !3, line: 179, size: 2112, elements: !815)
!815 = !{!816, !845, !846, !847, !848, !849, !850, !851, !914}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "ref_base_pool", scope: !814, file: !3, line: 181, baseType: !817, size: 64)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool", file: !818, line: 58, baseType: !819)
!818 = !DIFile(filename: "./alloc-pool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_def", file: !818, line: 32, size: 704, elements: !821)
!821 = !{!822, !826, !830, !836, !838, !839, !840, !841, !842, !843, !844}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !820, file: !818, line: 34, baseType: !823, size: 64)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !825)
!825 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "elts_per_block", scope: !820, file: !818, line: 38, baseType: !827, size: 64, offset: 64)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !828, line: 46, baseType: !829)
!828 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!829 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "returned_free_list", scope: !820, file: !818, line: 41, baseType: !831, size: 64, offset: 128)
!831 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool_list", file: !818, line: 30, baseType: !832)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_list_def", file: !818, line: 26, size: 64, elements: !834)
!834 = !{!835}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !833, file: !818, line: 28, baseType: !832, size: 64)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_free_list", scope: !820, file: !818, line: 45, baseType: !837, size: 64, offset: 192)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_elts_remaining", scope: !820, file: !818, line: 49, baseType: !827, size: 64, offset: 256)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "elts_allocated", scope: !820, file: !818, line: 51, baseType: !827, size: 64, offset: 320)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "elts_free", scope: !820, file: !818, line: 52, baseType: !827, size: 64, offset: 384)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_allocated", scope: !820, file: !818, line: 53, baseType: !827, size: 64, offset: 448)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "block_list", scope: !820, file: !818, line: 54, baseType: !831, size: 64, offset: 512)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !820, file: !818, line: 55, baseType: !827, size: 64, offset: 576)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "elt_size", scope: !820, file: !818, line: 56, baseType: !827, size: 64, offset: 640)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "ref_artificial_pool", scope: !814, file: !3, line: 182, baseType: !817, size: 64, offset: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "ref_regular_pool", scope: !814, file: !3, line: 183, baseType: !817, size: 64, offset: 128)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "ref_extract_pool", scope: !814, file: !3, line: 184, baseType: !817, size: 64, offset: 192)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "insn_pool", scope: !814, file: !3, line: 185, baseType: !817, size: 64, offset: 256)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "reg_pool", scope: !814, file: !3, line: 186, baseType: !817, size: 64, offset: 320)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "mw_reg_pool", scope: !814, file: !3, line: 187, baseType: !817, size: 64, offset: 384)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "reg_bitmaps", scope: !814, file: !3, line: 188, baseType: !852, size: 832, offset: 448)
!852 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !853, line: 49, baseType: !854)
!853 = !DIFile(filename: "./bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !853, line: 45, size: 832, elements: !855)
!855 = !{!856, !868, !879}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !854, file: !853, line: 46, baseType: !857, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !853, line: 63, size: 320, elements: !859)
!859 = !{!860, !861, !862, !863}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !858, file: !853, line: 64, baseType: !857, size: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !858, file: !853, line: 65, baseType: !857, size: 64, offset: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !858, file: !853, line: 66, baseType: !7, size: 32, offset: 128)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !858, file: !853, line: 67, baseType: !864, size: 128, offset: 192)
!864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !865, size: 128, elements: !866)
!865 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !853, line: 29, baseType: !829)
!866 = !{!867}
!867 = !DISubrange(count: 2)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !854, file: !853, line: 47, baseType: !869, size: 64, offset: 64)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !853, line: 75, size: 256, elements: !871)
!871 = !{!872, !875, !876, !877}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !870, file: !853, line: 76, baseType: !873, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !853, line: 68, baseType: !858)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !870, file: !853, line: 77, baseType: !873, size: 64, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !870, file: !853, line: 78, baseType: !7, size: 32, offset: 128)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !870, file: !853, line: 79, baseType: !878, size: 64, offset: 192)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !854, file: !853, line: 48, baseType: !880, size: 704, offset: 128)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !881, line: 164, size: 704, elements: !882)
!881 = !DIFile(filename: "./include/obstack.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!882 = !{!883, !885, !895, !896, !897, !898, !899, !901, !906, !910, !911, !912, !913}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !880, file: !881, line: 166, baseType: !884, size: 64)
!884 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !880, file: !881, line: 167, baseType: !886, size: 64, offset: 64)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !881, line: 157, size: 192, elements: !888)
!888 = !{!889, !890, !891}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !887, file: !881, line: 159, baseType: !837, size: 64)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !887, file: !881, line: 160, baseType: !886, size: 64, offset: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !887, file: !881, line: 161, baseType: !892, size: 32, offset: 128)
!892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !825, size: 32, elements: !893)
!893 = !{!894}
!894 = !DISubrange(count: 4)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !880, file: !881, line: 168, baseType: !837, size: 64, offset: 128)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !880, file: !881, line: 169, baseType: !837, size: 64, offset: 192)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !880, file: !881, line: 170, baseType: !837, size: 64, offset: 256)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !880, file: !881, line: 171, baseType: !884, size: 64, offset: 320)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !880, file: !881, line: 172, baseType: !900, size: 32, offset: 384)
!900 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !880, file: !881, line: 176, baseType: !902, size: 64, offset: 448)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = !DISubroutineType(types: !904)
!904 = !{!886, !905, !884}
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !880, file: !881, line: 177, baseType: !907, size: 64, offset: 512)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DISubroutineType(types: !909)
!909 = !{null, !905, !886}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !880, file: !881, line: 178, baseType: !905, size: 64, offset: 576)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !880, file: !881, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !880, file: !881, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !880, file: !881, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "insn_bitmaps", scope: !814, file: !3, line: 189, baseType: !852, size: 832, offset: 1280)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_scan_bb_info", file: !378, line: 771, size: 128, elements: !917)
!917 = !{!918, !1988}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_defs", scope: !916, file: !378, line: 782, baseType: !919, size: 64)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_ref", file: !378, line: 429, baseType: !921)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "df_ref_d", file: !378, line: 422, size: 704, elements: !923)
!923 = !{!924, !1970, !1976, !1981}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !922, file: !378, line: 424, baseType: !925, size: 512)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_base_ref", file: !378, line: 356, size: 512, elements: !926)
!926 = !{!927, !928, !929, !930, !1939, !1945, !1965, !1966, !1967, !1968, !1969}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !925, file: !378, line: 360, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !925, file: !378, line: 362, baseType: !7, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !925, file: !378, line: 364, baseType: !900, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !925, file: !378, line: 365, baseType: !931, size: 64, offset: 64)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !932, line: 50, baseType: !933)
!932 = !DIFile(filename: "./coretypes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !418, line: 240, size: 384, elements: !935)
!935 = !{!936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !934, file: !418, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !934, file: !418, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !934, file: !418, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !934, file: !418, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !934, file: !418, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !934, file: !418, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !934, file: !418, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !934, file: !418, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !934, file: !418, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !934, file: !418, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !934, file: !418, line: 321, baseType: !947, size: 320, offset: 64)
!947 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !418, line: 315, size: 320, elements: !948)
!948 = !{!949, !1874, !1876, !1937, !1938}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !947, file: !418, line: 316, baseType: !950, size: 64)
!950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !951, size: 64, elements: !966)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !418, line: 183, baseType: !952)
!952 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !418, line: 166, size: 64, elements: !953)
!953 = !{!954, !955, !956, !957, !958, !968, !969, !981, !984, !985, !1852, !1853, !1864, !1871}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !952, file: !418, line: 168, baseType: !900, size: 32)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !952, file: !418, line: 169, baseType: !7, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !952, file: !418, line: 170, baseType: !823, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !952, file: !418, line: 171, baseType: !931, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !952, file: !418, line: 172, baseType: !959, size: 64)
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !932, line: 53, baseType: !960)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !418, line: 359, size: 128, elements: !962)
!962 = !{!963, !964}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !961, file: !418, line: 360, baseType: !900, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !961, file: !418, line: 361, baseType: !965, size: 64, offset: 64)
!965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !931, size: 64, elements: !966)
!966 = !{!967}
!967 = !DISubrange(count: 1)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !952, file: !418, line: 173, baseType: !5, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !952, file: !418, line: 174, baseType: !970, size: 32)
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !418, line: 133, baseType: !971)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !418, line: 115, size: 32, elements: !972)
!972 = !{!973, !974, !975, !976, !977, !978, !979, !980}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !971, file: !418, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !971, file: !418, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !971, file: !418, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !971, file: !418, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !971, file: !418, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !971, file: !418, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !971, file: !418, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !971, file: !418, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !952, file: !418, line: 175, baseType: !982, size: 64)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !418, line: 175, flags: DIFlagFwdDecl)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !952, file: !418, line: 176, baseType: !869, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !952, file: !418, line: 177, baseType: !986, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !932, line: 56, baseType: !987)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !151, line: 3371, size: 1792, elements: !989)
!989 = !{!990, !1023, !1029, !1040, !1059, !1070, !1075, !1082, !1088, !1102, !1114, !1152, !1157, !1185, !1193, !1194, !1199, !1208, !1214, !1219, !1223, !1227, !1476, !1525, !1531, !1538, !1545, !1571, !1596, !1613, !1625, !1647, !1662, !1834}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !988, file: !151, line: 3372, baseType: !991, size: 64)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !151, line: 360, size: 64, elements: !992)
!992 = !{!993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !991, file: !151, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !991, file: !151, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !991, file: !151, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !991, file: !151, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !991, file: !151, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !991, file: !151, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !991, file: !151, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !991, file: !151, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !991, file: !151, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !991, file: !151, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !991, file: !151, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !991, file: !151, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !991, file: !151, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !991, file: !151, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !991, file: !151, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !991, file: !151, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !991, file: !151, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !991, file: !151, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !991, file: !151, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !991, file: !151, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !991, file: !151, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !991, file: !151, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !991, file: !151, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !991, file: !151, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !991, file: !151, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !991, file: !151, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !991, file: !151, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !991, file: !151, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !991, file: !151, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !991, file: !151, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !988, file: !151, line: 3373, baseType: !1024, size: 192)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !151, line: 402, size: 192, elements: !1025)
!1025 = !{!1026, !1027, !1028}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1024, file: !151, line: 403, baseType: !991, size: 64)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !1024, file: !151, line: 404, baseType: !986, size: 64, offset: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1024, file: !151, line: 405, baseType: !986, size: 64, offset: 128)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !988, file: !151, line: 3374, baseType: !1030, size: 320)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !151, line: 1384, size: 320, elements: !1031)
!1031 = !{!1032, !1033}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1030, file: !151, line: 1385, baseType: !1024, size: 192)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1030, file: !151, line: 1386, baseType: !1034, size: 128, offset: 192)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !1035, line: 58, baseType: !1036)
!1035 = !DIFile(filename: "./double-int.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1035, line: 54, size: 128, elements: !1037)
!1037 = !{!1038, !1039}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1036, file: !1035, line: 56, baseType: !829, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1036, file: !1035, line: 57, baseType: !884, size: 64, offset: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !988, file: !151, line: 3375, baseType: !1041, size: 256)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !151, line: 1397, size: 256, elements: !1042)
!1042 = !{!1043, !1044}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1041, file: !151, line: 1398, baseType: !1024, size: 192)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !1041, file: !151, line: 1399, baseType: !1045, size: 64, offset: 192)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !1047, line: 52, size: 256, elements: !1048)
!1047 = !DIFile(filename: "./real.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1048 = !{!1049, !1050, !1051, !1052, !1053, !1054, !1055}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !1046, file: !1047, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !1046, file: !1047, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !1046, file: !1047, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !1046, file: !1047, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1046, file: !1047, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !1046, file: !1047, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1046, file: !1047, line: 62, baseType: !1056, size: 192, offset: 64)
!1056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !829, size: 192, elements: !1057)
!1057 = !{!1058}
!1058 = !DISubrange(count: 3)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !988, file: !151, line: 3376, baseType: !1060, size: 256)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !151, line: 1408, size: 256, elements: !1061)
!1061 = !{!1062, !1063}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1060, file: !151, line: 1409, baseType: !1024, size: 192)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !1060, file: !151, line: 1410, baseType: !1064, size: 64, offset: 192)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !1066, line: 27, size: 192, elements: !1067)
!1066 = !DIFile(filename: "./fixed-value.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1067 = !{!1068, !1069}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1065, file: !1066, line: 29, baseType: !1034, size: 128)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1065, file: !1066, line: 30, baseType: !5, size: 32, offset: 128)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !988, file: !151, line: 3377, baseType: !1071, size: 256)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !151, line: 1437, size: 256, elements: !1072)
!1072 = !{!1073, !1074}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1071, file: !151, line: 1438, baseType: !1024, size: 192)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1071, file: !151, line: 1439, baseType: !986, size: 64, offset: 192)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !988, file: !151, line: 3378, baseType: !1076, size: 256)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !151, line: 1418, size: 256, elements: !1077)
!1077 = !{!1078, !1079, !1080}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1076, file: !151, line: 1419, baseType: !1024, size: 192)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1076, file: !151, line: 1420, baseType: !900, size: 32, offset: 192)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1076, file: !151, line: 1421, baseType: !1081, size: 8, offset: 224)
!1081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !825, size: 8, elements: !966)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !988, file: !151, line: 3379, baseType: !1083, size: 320)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !151, line: 1428, size: 320, elements: !1084)
!1084 = !{!1085, !1086, !1087}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1083, file: !151, line: 1429, baseType: !1024, size: 192)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1083, file: !151, line: 1430, baseType: !986, size: 64, offset: 192)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1083, file: !151, line: 1431, baseType: !986, size: 64, offset: 256)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !988, file: !151, line: 3380, baseType: !1089, size: 320)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !151, line: 1460, size: 320, elements: !1090)
!1090 = !{!1091, !1092}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1089, file: !151, line: 1461, baseType: !1024, size: 192)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1089, file: !151, line: 1462, baseType: !1093, size: 128, offset: 192)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1094, line: 31, size: 128, elements: !1095)
!1094 = !DIFile(filename: "./symtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1095 = !{!1096, !1100, !1101}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1093, file: !1094, line: 32, baseType: !1097, size: 64)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1099)
!1099 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1093, file: !1094, line: 33, baseType: !7, size: 32, offset: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1093, file: !1094, line: 34, baseType: !7, size: 32, offset: 96)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !988, file: !151, line: 3381, baseType: !1103, size: 384)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !151, line: 2507, size: 384, elements: !1104)
!1104 = !{!1105, !1106, !1111, !1112, !1113}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1103, file: !151, line: 2508, baseType: !1024, size: 192)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1103, file: !151, line: 2509, baseType: !1107, size: 32, offset: 192)
!1107 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1108, line: 58, baseType: !1109)
!1108 = !DIFile(filename: "./input.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1110, line: 44, baseType: !7)
!1110 = !DIFile(filename: "./line-map.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1103, file: !151, line: 2510, baseType: !7, size: 32, offset: 224)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1103, file: !151, line: 2511, baseType: !986, size: 64, offset: 256)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1103, file: !151, line: 2512, baseType: !986, size: 64, offset: 320)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !988, file: !151, line: 3382, baseType: !1115, size: 896)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !151, line: 2652, size: 896, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1115, file: !151, line: 2653, baseType: !1103, size: 384)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1115, file: !151, line: 2654, baseType: !986, size: 64, offset: 384)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1115, file: !151, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1115, file: !151, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1115, file: !151, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1115, file: !151, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1115, file: !151, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1115, file: !151, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1115, file: !151, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1115, file: !151, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1115, file: !151, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1115, file: !151, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1115, file: !151, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1115, file: !151, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1115, file: !151, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1115, file: !151, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1115, file: !151, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1115, file: !151, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1115, file: !151, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1115, file: !151, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1115, file: !151, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1115, file: !151, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1115, file: !151, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1115, file: !151, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1115, file: !151, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1115, file: !151, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1115, file: !151, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1115, file: !151, line: 2703, baseType: !7, size: 32, offset: 512)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1115, file: !151, line: 2705, baseType: !986, size: 64, offset: 576)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1115, file: !151, line: 2706, baseType: !986, size: 64, offset: 640)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1115, file: !151, line: 2707, baseType: !986, size: 64, offset: 704)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1115, file: !151, line: 2708, baseType: !986, size: 64, offset: 768)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1115, file: !151, line: 2711, baseType: !1150, size: 64, offset: 832)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1151 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !151, line: 2711, flags: DIFlagFwdDecl)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !988, file: !151, line: 3383, baseType: !1153, size: 960)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !151, line: 2756, size: 960, elements: !1154)
!1154 = !{!1155, !1156}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1153, file: !151, line: 2757, baseType: !1115, size: 896)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1153, file: !151, line: 2758, baseType: !931, size: 64, offset: 896)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !988, file: !151, line: 3384, baseType: !1158, size: 1472)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !151, line: 3114, size: 1472, elements: !1159)
!1159 = !{!1160, !1181, !1182, !1183, !1184}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1158, file: !151, line: 3115, baseType: !1161, size: 1216)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !151, line: 2984, size: 1216, elements: !1162)
!1162 = !{!1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1161, file: !151, line: 2985, baseType: !1153, size: 960)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1161, file: !151, line: 2986, baseType: !986, size: 64, offset: 960)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1161, file: !151, line: 2987, baseType: !986, size: 64, offset: 1024)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1161, file: !151, line: 2988, baseType: !986, size: 64, offset: 1088)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1161, file: !151, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1161, file: !151, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1161, file: !151, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1161, file: !151, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1161, file: !151, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1161, file: !151, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1161, file: !151, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1161, file: !151, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1161, file: !151, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1161, file: !151, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1161, file: !151, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1161, file: !151, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1161, file: !151, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1161, file: !151, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1158, file: !151, line: 3117, baseType: !986, size: 64, offset: 1216)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1158, file: !151, line: 3119, baseType: !986, size: 64, offset: 1280)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1158, file: !151, line: 3121, baseType: !986, size: 64, offset: 1344)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1158, file: !151, line: 3123, baseType: !986, size: 64, offset: 1408)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !988, file: !151, line: 3385, baseType: !1186, size: 1088)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !151, line: 2874, size: 1088, elements: !1187)
!1187 = !{!1188, !1189, !1190}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1186, file: !151, line: 2875, baseType: !1153, size: 960)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1186, file: !151, line: 2876, baseType: !931, size: 64, offset: 960)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1186, file: !151, line: 2877, baseType: !1191, size: 64, offset: 1024)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64)
!1192 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !151, line: 2856, flags: DIFlagFwdDecl)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !988, file: !151, line: 3386, baseType: !1161, size: 1216)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !988, file: !151, line: 3387, baseType: !1195, size: 1280)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !151, line: 3093, size: 1280, elements: !1196)
!1196 = !{!1197, !1198}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1195, file: !151, line: 3094, baseType: !1161, size: 1216)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1195, file: !151, line: 3095, baseType: !1191, size: 64, offset: 1216)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !988, file: !151, line: 3388, baseType: !1200, size: 1216)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !151, line: 2824, size: 1216, elements: !1201)
!1201 = !{!1202, !1203, !1204, !1205, !1206, !1207}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1200, file: !151, line: 2825, baseType: !1115, size: 896)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1200, file: !151, line: 2827, baseType: !986, size: 64, offset: 896)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1200, file: !151, line: 2828, baseType: !986, size: 64, offset: 960)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1200, file: !151, line: 2829, baseType: !986, size: 64, offset: 1024)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1200, file: !151, line: 2830, baseType: !986, size: 64, offset: 1088)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1200, file: !151, line: 2831, baseType: !986, size: 64, offset: 1152)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !988, file: !151, line: 3389, baseType: !1209, size: 1024)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !151, line: 2850, size: 1024, elements: !1210)
!1210 = !{!1211, !1212, !1213}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1209, file: !151, line: 2851, baseType: !1153, size: 960)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1209, file: !151, line: 2852, baseType: !900, size: 32, offset: 960)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1209, file: !151, line: 2853, baseType: !900, size: 32, offset: 992)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !988, file: !151, line: 3390, baseType: !1215, size: 1024)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !151, line: 2857, size: 1024, elements: !1216)
!1216 = !{!1217, !1218}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1215, file: !151, line: 2858, baseType: !1153, size: 960)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1215, file: !151, line: 2859, baseType: !1191, size: 64, offset: 960)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !988, file: !151, line: 3391, baseType: !1220, size: 960)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !151, line: 2862, size: 960, elements: !1221)
!1221 = !{!1222}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1220, file: !151, line: 2863, baseType: !1153, size: 960)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !988, file: !151, line: 3392, baseType: !1224, size: 1472)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !151, line: 3304, size: 1472, elements: !1225)
!1225 = !{!1226}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1224, file: !151, line: 3305, baseType: !1158, size: 1472)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !988, file: !151, line: 3393, baseType: !1228, size: 1792)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !151, line: 3248, size: 1792, elements: !1229)
!1229 = !{!1230, !1231, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1228, file: !151, line: 3249, baseType: !1158, size: 1472)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1228, file: !151, line: 3251, baseType: !1232, size: 64, offset: 1472)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1234, line: 463, size: 1152, elements: !1235)
!1234 = !DIFile(filename: "./function.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1235 = !{!1236, !1239, !1343, !1344, !1347, !1350, !1400, !1401, !1402, !1403, !1404, !1428, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1233, file: !1234, line: 464, baseType: !1237, size: 64)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1238 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1234, line: 464, flags: DIFlagFwdDecl)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1233, file: !1234, line: 467, baseType: !1240, size: 64, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !135, line: 374, size: 640, elements: !1242)
!1242 = !{!1243, !1318, !1319, !1332, !1333, !1334, !1335, !1336, !1337, !1339, !1341, !1342}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1241, file: !135, line: 377, baseType: !1244, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !932, line: 111, baseType: !1245)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !135, line: 217, size: 832, elements: !1247)
!1247 = !{!1248, !1283, !1284, !1285, !1288, !1292, !1293, !1294, !1312, !1313, !1314, !1315, !1316, !1317}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1246, file: !135, line: 219, baseType: !1249, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !135, line: 151, baseType: !1251)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !135, line: 151, size: 128, elements: !1252)
!1252 = !{!1253}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1251, file: !135, line: 151, baseType: !1254, size: 128)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !135, line: 150, baseType: !1255)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !135, line: 150, size: 128, elements: !1256)
!1256 = !{!1257, !1258, !1259}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1255, file: !135, line: 150, baseType: !7, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1255, file: !135, line: 150, baseType: !7, size: 32, offset: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1255, file: !135, line: 150, baseType: !1260, size: 64, offset: 64)
!1260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1261, size: 64, elements: !966)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !932, line: 108, baseType: !1262)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !135, line: 122, size: 512, elements: !1264)
!1264 = !{!1265, !1266, !1267, !1275, !1276, !1277, !1278, !1279, !1280, !1281}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1263, file: !135, line: 124, baseType: !1245, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1263, file: !135, line: 125, baseType: !1245, size: 64, offset: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1263, file: !135, line: 131, baseType: !1268, size: 64, offset: 128)
!1268 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !135, line: 128, size: 64, elements: !1269)
!1269 = !{!1270, !1274}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1268, file: !135, line: 129, baseType: !1271, size: 64)
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !932, line: 66, baseType: !1272)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !932, line: 65, flags: DIFlagFwdDecl)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1268, file: !135, line: 130, baseType: !931, size: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1263, file: !135, line: 134, baseType: !905, size: 64, offset: 192)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1263, file: !135, line: 137, baseType: !986, size: 64, offset: 256)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1263, file: !135, line: 138, baseType: !1107, size: 32, offset: 320)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1263, file: !135, line: 142, baseType: !7, size: 32, offset: 352)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1263, file: !135, line: 144, baseType: !900, size: 32, offset: 384)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1263, file: !135, line: 145, baseType: !900, size: 32, offset: 416)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1263, file: !135, line: 146, baseType: !1282, size: 64, offset: 448)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !135, line: 119, baseType: !884)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1246, file: !135, line: 220, baseType: !1249, size: 64, offset: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1246, file: !135, line: 223, baseType: !905, size: 64, offset: 128)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1246, file: !135, line: 226, baseType: !1286, size: 64, offset: 192)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1287 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !135, line: 185, flags: DIFlagFwdDecl)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1246, file: !135, line: 229, baseType: !1289, size: 128, offset: 256)
!1289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1290, size: 128, elements: !866)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!1291 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !135, line: 229, flags: DIFlagFwdDecl)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1246, file: !135, line: 232, baseType: !1245, size: 64, offset: 384)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1246, file: !135, line: 233, baseType: !1245, size: 64, offset: 448)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1246, file: !135, line: 238, baseType: !1295, size: 64, offset: 512)
!1295 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !135, line: 235, size: 64, elements: !1296)
!1296 = !{!1297, !1303}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1295, file: !135, line: 236, baseType: !1298, size: 64)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !135, line: 273, size: 128, elements: !1300)
!1300 = !{!1301, !1302}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1299, file: !135, line: 275, baseType: !1271, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1299, file: !135, line: 278, baseType: !1271, size: 64, offset: 64)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1295, file: !135, line: 237, baseType: !1304, size: 64)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !135, line: 259, size: 320, elements: !1306)
!1306 = !{!1307, !1308, !1309, !1310, !1311}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1305, file: !135, line: 261, baseType: !931, size: 64)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1305, file: !135, line: 262, baseType: !931, size: 64, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1305, file: !135, line: 266, baseType: !931, size: 64, offset: 128)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1305, file: !135, line: 267, baseType: !931, size: 64, offset: 192)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1305, file: !135, line: 270, baseType: !900, size: 32, offset: 256)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1246, file: !135, line: 241, baseType: !1282, size: 64, offset: 576)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1246, file: !135, line: 244, baseType: !900, size: 32, offset: 640)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1246, file: !135, line: 247, baseType: !900, size: 32, offset: 672)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1246, file: !135, line: 250, baseType: !900, size: 32, offset: 704)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1246, file: !135, line: 253, baseType: !900, size: 32, offset: 736)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1246, file: !135, line: 256, baseType: !900, size: 32, offset: 768)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1241, file: !135, line: 378, baseType: !1244, size: 64, offset: 64)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1241, file: !135, line: 381, baseType: !1320, size: 64, offset: 128)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !135, line: 282, baseType: !1322)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !135, line: 282, size: 128, elements: !1323)
!1323 = !{!1324}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1322, file: !135, line: 282, baseType: !1325, size: 128)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !135, line: 281, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !135, line: 281, size: 128, elements: !1327)
!1327 = !{!1328, !1329, !1330}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1326, file: !135, line: 281, baseType: !7, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1326, file: !135, line: 281, baseType: !7, size: 32, offset: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1326, file: !135, line: 281, baseType: !1331, size: 64, offset: 64)
!1331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1244, size: 64, elements: !966)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1241, file: !135, line: 384, baseType: !900, size: 32, offset: 192)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1241, file: !135, line: 387, baseType: !900, size: 32, offset: 224)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1241, file: !135, line: 390, baseType: !900, size: 32, offset: 256)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1241, file: !135, line: 394, baseType: !1320, size: 64, offset: 320)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1241, file: !135, line: 396, baseType: !134, size: 32, offset: 384)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1241, file: !135, line: 399, baseType: !1338, size: 64, offset: 416)
!1338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !866)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1241, file: !135, line: 402, baseType: !1340, size: 64, offset: 480)
!1340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !866)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1241, file: !135, line: 406, baseType: !900, size: 32, offset: 544)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1241, file: !135, line: 409, baseType: !900, size: 32, offset: 576)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1233, file: !1234, line: 470, baseType: !1272, size: 64, offset: 128)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1233, file: !1234, line: 473, baseType: !1345, size: 64, offset: 192)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1234, line: 166, flags: DIFlagFwdDecl)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1233, file: !1234, line: 476, baseType: !1348, size: 64, offset: 256)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!1349 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1234, line: 476, flags: DIFlagFwdDecl)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1233, file: !1234, line: 479, baseType: !1351, size: 64, offset: 320)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1352, line: 144, baseType: !1353)
!1352 = !DIFile(filename: "./include/hashtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1352, line: 100, size: 896, elements: !1355)
!1355 = !{!1356, !1364, !1369, !1374, !1376, !1377, !1378, !1379, !1380, !1381, !1386, !1388, !1389, !1394, !1399}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1354, file: !1352, line: 102, baseType: !1357, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1352, line: 52, baseType: !1358)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{!1361, !1362}
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1352, line: 47, baseType: !7)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1354, file: !1352, line: 105, baseType: !1365, size: 64, offset: 64)
!1365 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1352, line: 59, baseType: !1366)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = !DISubroutineType(types: !1368)
!1368 = !{!900, !1362, !1362}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1354, file: !1352, line: 108, baseType: !1370, size: 64, offset: 128)
!1370 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1352, line: 63, baseType: !1371)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1372 = !DISubroutineType(types: !1373)
!1373 = !{null, !905}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1354, file: !1352, line: 111, baseType: !1375, size: 64, offset: 192)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1354, file: !1352, line: 114, baseType: !827, size: 64, offset: 256)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1354, file: !1352, line: 117, baseType: !827, size: 64, offset: 320)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1354, file: !1352, line: 120, baseType: !827, size: 64, offset: 384)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1354, file: !1352, line: 124, baseType: !7, size: 32, offset: 448)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1354, file: !1352, line: 128, baseType: !7, size: 32, offset: 480)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1354, file: !1352, line: 131, baseType: !1382, size: 64, offset: 512)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1352, line: 75, baseType: !1383)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64)
!1384 = !DISubroutineType(types: !1385)
!1385 = !{!905, !827, !827}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1354, file: !1352, line: 132, baseType: !1387, size: 64, offset: 576)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1352, line: 78, baseType: !1371)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1354, file: !1352, line: 135, baseType: !905, size: 64, offset: 640)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1354, file: !1352, line: 136, baseType: !1390, size: 64, offset: 704)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1352, line: 82, baseType: !1391)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = !DISubroutineType(types: !1393)
!1393 = !{!905, !905, !827, !827}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1354, file: !1352, line: 137, baseType: !1395, size: 64, offset: 768)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1352, line: 83, baseType: !1396)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!1397 = !DISubroutineType(types: !1398)
!1398 = !{null, !905, !905}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1354, file: !1352, line: 141, baseType: !7, size: 32, offset: 832)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1233, file: !1234, line: 484, baseType: !986, size: 64, offset: 384)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1233, file: !1234, line: 488, baseType: !986, size: 64, offset: 448)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1233, file: !1234, line: 493, baseType: !986, size: 64, offset: 512)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1233, file: !1234, line: 496, baseType: !986, size: 64, offset: 576)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1233, file: !1234, line: 501, baseType: !1405, size: 64, offset: 640)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !146, line: 2355, size: 576, elements: !1407)
!1407 = !{!1408, !1411, !1412, !1413, !1414, !1416, !1417, !1422, !1423, !1424, !1425, !1426, !1427}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1406, file: !146, line: 2356, baseType: !1409, size: 64)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1410 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !146, line: 2356, flags: DIFlagFwdDecl)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1406, file: !146, line: 2357, baseType: !823, size: 64, offset: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1406, file: !146, line: 2358, baseType: !900, size: 32, offset: 128)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1406, file: !146, line: 2359, baseType: !900, size: 32, offset: 160)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1406, file: !146, line: 2360, baseType: !1415, size: 128, offset: 192)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !900, size: 128, elements: !893)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1406, file: !146, line: 2364, baseType: !900, size: 32, offset: 320)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1406, file: !146, line: 2367, baseType: !1418, size: 128, offset: 384)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !146, line: 2349, size: 128, elements: !1419)
!1419 = !{!1420, !1421}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1418, file: !146, line: 2351, baseType: !931, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1418, file: !146, line: 2352, baseType: !884, size: 64, offset: 64)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1406, file: !146, line: 2371, baseType: !145, size: 32, offset: 512)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1406, file: !146, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1406, file: !146, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1406, file: !146, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1406, file: !146, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1406, file: !146, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1233, file: !1234, line: 504, baseType: !1429, size: 64, offset: 704)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1234, line: 504, flags: DIFlagFwdDecl)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1233, file: !1234, line: 507, baseType: !1351, size: 64, offset: 768)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1233, file: !1234, line: 510, baseType: !900, size: 32, offset: 832)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1233, file: !1234, line: 513, baseType: !900, size: 32, offset: 864)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1233, file: !1234, line: 516, baseType: !1107, size: 32, offset: 896)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1233, file: !1234, line: 519, baseType: !1107, size: 32, offset: 928)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1233, file: !1234, line: 522, baseType: !7, size: 32, offset: 960)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1233, file: !1234, line: 523, baseType: !7, size: 32, offset: 992)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1233, file: !1234, line: 528, baseType: !823, size: 64, offset: 1024)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1233, file: !1234, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1233, file: !1234, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1233, file: !1234, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1233, file: !1234, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1233, file: !1234, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1233, file: !1234, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1233, file: !1234, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1233, file: !1234, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1233, file: !1234, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1233, file: !1234, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1233, file: !1234, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1233, file: !1234, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1233, file: !1234, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1233, file: !1234, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1233, file: !1234, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1233, file: !1234, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1228, file: !151, line: 3254, baseType: !986, size: 64, offset: 1536)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1228, file: !151, line: 3257, baseType: !986, size: 64, offset: 1600)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1228, file: !151, line: 3258, baseType: !986, size: 64, offset: 1664)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1228, file: !151, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1228, file: !151, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1228, file: !151, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1228, file: !151, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1228, file: !151, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1228, file: !151, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1228, file: !151, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1228, file: !151, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1228, file: !151, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1228, file: !151, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1228, file: !151, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1228, file: !151, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1228, file: !151, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1228, file: !151, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1228, file: !151, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1228, file: !151, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1228, file: !151, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1228, file: !151, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !988, file: !151, line: 3394, baseType: !1477, size: 1344)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !151, line: 2279, size: 1344, elements: !1478)
!1478 = !{!1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1504, !1505, !1506, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1477, file: !151, line: 2280, baseType: !1024, size: 192)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1477, file: !151, line: 2281, baseType: !986, size: 64, offset: 192)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1477, file: !151, line: 2282, baseType: !986, size: 64, offset: 256)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1477, file: !151, line: 2283, baseType: !986, size: 64, offset: 320)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1477, file: !151, line: 2284, baseType: !986, size: 64, offset: 384)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1477, file: !151, line: 2285, baseType: !7, size: 32, offset: 448)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1477, file: !151, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1477, file: !151, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1477, file: !151, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1477, file: !151, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1477, file: !151, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1477, file: !151, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1477, file: !151, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1477, file: !151, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1477, file: !151, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1477, file: !151, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1477, file: !151, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1477, file: !151, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1477, file: !151, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1477, file: !151, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1477, file: !151, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1477, file: !151, line: 2305, baseType: !7, size: 32, offset: 512)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1477, file: !151, line: 2306, baseType: !1502, size: 32, offset: 544)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1503, line: 31, baseType: !900)
!1503 = !DIFile(filename: "./alias.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1477, file: !151, line: 2307, baseType: !986, size: 64, offset: 576)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1477, file: !151, line: 2308, baseType: !986, size: 64, offset: 640)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1477, file: !151, line: 2314, baseType: !1507, size: 64, offset: 704)
!1507 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !151, line: 2309, size: 64, elements: !1508)
!1508 = !{!1509, !1510, !1511}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1507, file: !151, line: 2310, baseType: !900, size: 32)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1507, file: !151, line: 2311, baseType: !823, size: 64)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1507, file: !151, line: 2312, baseType: !1512, size: 64)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1513 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !151, line: 2277, flags: DIFlagFwdDecl)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1477, file: !151, line: 2315, baseType: !986, size: 64, offset: 768)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1477, file: !151, line: 2316, baseType: !986, size: 64, offset: 832)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1477, file: !151, line: 2317, baseType: !986, size: 64, offset: 896)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1477, file: !151, line: 2318, baseType: !986, size: 64, offset: 960)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1477, file: !151, line: 2319, baseType: !986, size: 64, offset: 1024)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1477, file: !151, line: 2320, baseType: !986, size: 64, offset: 1088)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1477, file: !151, line: 2321, baseType: !986, size: 64, offset: 1152)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1477, file: !151, line: 2322, baseType: !986, size: 64, offset: 1216)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1477, file: !151, line: 2324, baseType: !1523, size: 64, offset: 1280)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !151, line: 2324, flags: DIFlagFwdDecl)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !988, file: !151, line: 3395, baseType: !1526, size: 320)
!1526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !151, line: 1469, size: 320, elements: !1527)
!1527 = !{!1528, !1529, !1530}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1526, file: !151, line: 1470, baseType: !1024, size: 192)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1526, file: !151, line: 1471, baseType: !986, size: 64, offset: 192)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1526, file: !151, line: 1472, baseType: !986, size: 64, offset: 256)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !988, file: !151, line: 3396, baseType: !1532, size: 320)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !151, line: 1482, size: 320, elements: !1533)
!1533 = !{!1534, !1535, !1536}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1532, file: !151, line: 1483, baseType: !1024, size: 192)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1532, file: !151, line: 1484, baseType: !900, size: 32, offset: 192)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1532, file: !151, line: 1485, baseType: !1537, size: 64, offset: 256)
!1537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 64, elements: !966)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !988, file: !151, line: 3397, baseType: !1539, size: 384)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !151, line: 1829, size: 384, elements: !1540)
!1540 = !{!1541, !1542, !1543, !1544}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1539, file: !151, line: 1830, baseType: !1024, size: 192)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1539, file: !151, line: 1831, baseType: !1107, size: 32, offset: 192)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1539, file: !151, line: 1832, baseType: !986, size: 64, offset: 256)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1539, file: !151, line: 1835, baseType: !1537, size: 64, offset: 320)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !988, file: !151, line: 3398, baseType: !1546, size: 704)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !151, line: 1898, size: 704, elements: !1547)
!1547 = !{!1548, !1549, !1550, !1554, !1555, !1558}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1546, file: !151, line: 1899, baseType: !1024, size: 192)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1546, file: !151, line: 1902, baseType: !986, size: 64, offset: 192)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1546, file: !151, line: 1905, baseType: !1551, size: 64, offset: 256)
!1551 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !932, line: 58, baseType: !1552)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !932, line: 57, flags: DIFlagFwdDecl)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1546, file: !151, line: 1908, baseType: !7, size: 32, offset: 320)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1546, file: !151, line: 1911, baseType: !1556, size: 64, offset: 384)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64)
!1557 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !151, line: 1876, flags: DIFlagFwdDecl)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1546, file: !151, line: 1914, baseType: !1559, size: 256, offset: 448)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !151, line: 1883, size: 256, elements: !1560)
!1560 = !{!1561, !1563, !1564, !1569}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1559, file: !151, line: 1884, baseType: !1562, size: 64)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1559, file: !151, line: 1885, baseType: !1562, size: 64, offset: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1559, file: !151, line: 1891, baseType: !1565, size: 64, offset: 128)
!1565 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1559, file: !151, line: 1891, size: 64, elements: !1566)
!1566 = !{!1567, !1568}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1565, file: !151, line: 1891, baseType: !1551, size: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1565, file: !151, line: 1891, baseType: !986, size: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1559, file: !151, line: 1892, baseType: !1570, size: 64, offset: 192)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !988, file: !151, line: 3399, baseType: !1572, size: 704)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !151, line: 2008, size: 704, elements: !1573)
!1573 = !{!1574, !1575, !1576, !1577, !1578, !1579, !1591, !1592, !1593, !1594, !1595}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1572, file: !151, line: 2009, baseType: !1024, size: 192)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1572, file: !151, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1572, file: !151, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1572, file: !151, line: 2014, baseType: !1107, size: 32, offset: 224)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1572, file: !151, line: 2016, baseType: !986, size: 64, offset: 256)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1572, file: !151, line: 2017, baseType: !1580, size: 64, offset: 320)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !151, line: 183, baseType: !1582)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !151, line: 183, size: 128, elements: !1583)
!1583 = !{!1584}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1582, file: !151, line: 183, baseType: !1585, size: 128)
!1585 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !151, line: 182, baseType: !1586)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !151, line: 182, size: 128, elements: !1587)
!1587 = !{!1588, !1589, !1590}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1586, file: !151, line: 182, baseType: !7, size: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1586, file: !151, line: 182, baseType: !7, size: 32, offset: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1586, file: !151, line: 182, baseType: !1537, size: 64, offset: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1572, file: !151, line: 2019, baseType: !986, size: 64, offset: 384)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1572, file: !151, line: 2020, baseType: !986, size: 64, offset: 448)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1572, file: !151, line: 2021, baseType: !986, size: 64, offset: 512)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1572, file: !151, line: 2022, baseType: !986, size: 64, offset: 576)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1572, file: !151, line: 2023, baseType: !986, size: 64, offset: 640)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !988, file: !151, line: 3400, baseType: !1597, size: 832)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !151, line: 2430, size: 832, elements: !1598)
!1598 = !{!1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1597, file: !151, line: 2431, baseType: !1024, size: 192)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1597, file: !151, line: 2433, baseType: !986, size: 64, offset: 192)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1597, file: !151, line: 2434, baseType: !986, size: 64, offset: 256)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1597, file: !151, line: 2435, baseType: !986, size: 64, offset: 320)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1597, file: !151, line: 2436, baseType: !986, size: 64, offset: 384)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1597, file: !151, line: 2437, baseType: !1580, size: 64, offset: 448)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1597, file: !151, line: 2438, baseType: !986, size: 64, offset: 512)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1597, file: !151, line: 2440, baseType: !986, size: 64, offset: 576)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1597, file: !151, line: 2441, baseType: !986, size: 64, offset: 640)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1597, file: !151, line: 2443, baseType: !1609, size: 128, offset: 704)
!1609 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !151, line: 182, baseType: !1610)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !151, line: 182, size: 128, elements: !1611)
!1611 = !{!1612}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1610, file: !151, line: 182, baseType: !1585, size: 128)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !988, file: !151, line: 3401, baseType: !1614, size: 320)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !151, line: 3327, size: 320, elements: !1615)
!1615 = !{!1616, !1617, !1624}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1614, file: !151, line: 3329, baseType: !1024, size: 192)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1614, file: !151, line: 3330, baseType: !1618, size: 64, offset: 192)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !151, line: 3320, size: 192, elements: !1620)
!1620 = !{!1621, !1622, !1623}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1619, file: !151, line: 3322, baseType: !1618, size: 64)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1619, file: !151, line: 3323, baseType: !1618, size: 64, offset: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1619, file: !151, line: 3324, baseType: !986, size: 64, offset: 128)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1614, file: !151, line: 3331, baseType: !1618, size: 64, offset: 256)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !988, file: !151, line: 3402, baseType: !1626, size: 256)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !151, line: 1540, size: 256, elements: !1627)
!1627 = !{!1628, !1629}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1626, file: !151, line: 1541, baseType: !1024, size: 192)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1626, file: !151, line: 1542, baseType: !1630, size: 64, offset: 192)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !151, line: 1538, baseType: !1632)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !151, line: 1538, size: 192, elements: !1633)
!1633 = !{!1634}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1632, file: !151, line: 1538, baseType: !1635, size: 192)
!1635 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !151, line: 1537, baseType: !1636)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !151, line: 1537, size: 192, elements: !1637)
!1637 = !{!1638, !1639, !1640}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1636, file: !151, line: 1537, baseType: !7, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1636, file: !151, line: 1537, baseType: !7, size: 32, offset: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1636, file: !151, line: 1537, baseType: !1641, size: 128, offset: 64)
!1641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1642, size: 128, elements: !966)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !151, line: 1535, baseType: !1643)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !151, line: 1532, size: 128, elements: !1644)
!1644 = !{!1645, !1646}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1643, file: !151, line: 1533, baseType: !986, size: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1643, file: !151, line: 1534, baseType: !986, size: 64, offset: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !988, file: !151, line: 3403, baseType: !1648, size: 512)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !151, line: 1938, size: 512, elements: !1649)
!1649 = !{!1650, !1651, !1652, !1653, !1659, !1660, !1661}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1648, file: !151, line: 1939, baseType: !1024, size: 192)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1648, file: !151, line: 1940, baseType: !1107, size: 32, offset: 192)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1648, file: !151, line: 1941, baseType: !150, size: 32, offset: 224)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1648, file: !151, line: 1946, baseType: !1654, size: 32, offset: 256)
!1654 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !151, line: 1942, size: 32, elements: !1655)
!1655 = !{!1656, !1657, !1658}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1654, file: !151, line: 1943, baseType: !169, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1654, file: !151, line: 1944, baseType: !176, size: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1654, file: !151, line: 1945, baseType: !183, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1648, file: !151, line: 1950, baseType: !1271, size: 64, offset: 320)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1648, file: !151, line: 1951, baseType: !1271, size: 64, offset: 384)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1648, file: !151, line: 1953, baseType: !1537, size: 64, offset: 448)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !988, file: !151, line: 3404, baseType: !1663, size: 1664)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !151, line: 3337, size: 1664, elements: !1664)
!1664 = !{!1665, !1666}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1663, file: !151, line: 3338, baseType: !1024, size: 192)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1663, file: !151, line: 3341, baseType: !1667, size: 1472, offset: 192)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1668, line: 410, size: 1472, elements: !1669)
!1668 = !DIFile(filename: "./options.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1669 = !{!1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1667, file: !1668, line: 412, baseType: !900, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1667, file: !1668, line: 413, baseType: !900, size: 32, offset: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1667, file: !1668, line: 414, baseType: !900, size: 32, offset: 64)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1667, file: !1668, line: 415, baseType: !900, size: 32, offset: 96)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1667, file: !1668, line: 416, baseType: !900, size: 32, offset: 128)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1667, file: !1668, line: 417, baseType: !900, size: 32, offset: 160)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1667, file: !1668, line: 418, baseType: !1099, size: 8, offset: 192)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1667, file: !1668, line: 419, baseType: !1099, size: 8, offset: 200)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1667, file: !1668, line: 420, baseType: !1679, size: 8, offset: 208)
!1679 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1667, file: !1668, line: 421, baseType: !1679, size: 8, offset: 216)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1667, file: !1668, line: 422, baseType: !1679, size: 8, offset: 224)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1667, file: !1668, line: 423, baseType: !1679, size: 8, offset: 232)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1667, file: !1668, line: 424, baseType: !1679, size: 8, offset: 240)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1667, file: !1668, line: 425, baseType: !1679, size: 8, offset: 248)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1667, file: !1668, line: 426, baseType: !1679, size: 8, offset: 256)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1667, file: !1668, line: 427, baseType: !1679, size: 8, offset: 264)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1667, file: !1668, line: 428, baseType: !1679, size: 8, offset: 272)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1667, file: !1668, line: 429, baseType: !1679, size: 8, offset: 280)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1667, file: !1668, line: 430, baseType: !1679, size: 8, offset: 288)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1667, file: !1668, line: 431, baseType: !1679, size: 8, offset: 296)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1667, file: !1668, line: 432, baseType: !1679, size: 8, offset: 304)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1667, file: !1668, line: 433, baseType: !1679, size: 8, offset: 312)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1667, file: !1668, line: 434, baseType: !1679, size: 8, offset: 320)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1667, file: !1668, line: 435, baseType: !1679, size: 8, offset: 328)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1667, file: !1668, line: 436, baseType: !1679, size: 8, offset: 336)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1667, file: !1668, line: 437, baseType: !1679, size: 8, offset: 344)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1667, file: !1668, line: 438, baseType: !1679, size: 8, offset: 352)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1667, file: !1668, line: 439, baseType: !1679, size: 8, offset: 360)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1667, file: !1668, line: 440, baseType: !1679, size: 8, offset: 368)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1667, file: !1668, line: 441, baseType: !1679, size: 8, offset: 376)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1667, file: !1668, line: 442, baseType: !1679, size: 8, offset: 384)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1667, file: !1668, line: 443, baseType: !1679, size: 8, offset: 392)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1667, file: !1668, line: 444, baseType: !1679, size: 8, offset: 400)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1667, file: !1668, line: 445, baseType: !1679, size: 8, offset: 408)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1667, file: !1668, line: 446, baseType: !1679, size: 8, offset: 416)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1667, file: !1668, line: 447, baseType: !1679, size: 8, offset: 424)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1667, file: !1668, line: 448, baseType: !1679, size: 8, offset: 432)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1667, file: !1668, line: 449, baseType: !1679, size: 8, offset: 440)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1667, file: !1668, line: 450, baseType: !1679, size: 8, offset: 448)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1667, file: !1668, line: 451, baseType: !1679, size: 8, offset: 456)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1667, file: !1668, line: 452, baseType: !1679, size: 8, offset: 464)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1667, file: !1668, line: 453, baseType: !1679, size: 8, offset: 472)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1667, file: !1668, line: 454, baseType: !1679, size: 8, offset: 480)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1667, file: !1668, line: 455, baseType: !1679, size: 8, offset: 488)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1667, file: !1668, line: 456, baseType: !1679, size: 8, offset: 496)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1667, file: !1668, line: 457, baseType: !1679, size: 8, offset: 504)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1667, file: !1668, line: 458, baseType: !1679, size: 8, offset: 512)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1667, file: !1668, line: 459, baseType: !1679, size: 8, offset: 520)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1667, file: !1668, line: 460, baseType: !1679, size: 8, offset: 528)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1667, file: !1668, line: 461, baseType: !1679, size: 8, offset: 536)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1667, file: !1668, line: 462, baseType: !1679, size: 8, offset: 544)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1667, file: !1668, line: 463, baseType: !1679, size: 8, offset: 552)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1667, file: !1668, line: 464, baseType: !1679, size: 8, offset: 560)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1667, file: !1668, line: 465, baseType: !1679, size: 8, offset: 568)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1667, file: !1668, line: 466, baseType: !1679, size: 8, offset: 576)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1667, file: !1668, line: 467, baseType: !1679, size: 8, offset: 584)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1667, file: !1668, line: 468, baseType: !1679, size: 8, offset: 592)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1667, file: !1668, line: 469, baseType: !1679, size: 8, offset: 600)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1667, file: !1668, line: 470, baseType: !1679, size: 8, offset: 608)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1667, file: !1668, line: 471, baseType: !1679, size: 8, offset: 616)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1667, file: !1668, line: 472, baseType: !1679, size: 8, offset: 624)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1667, file: !1668, line: 473, baseType: !1679, size: 8, offset: 632)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1667, file: !1668, line: 474, baseType: !1679, size: 8, offset: 640)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1667, file: !1668, line: 475, baseType: !1679, size: 8, offset: 648)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1667, file: !1668, line: 476, baseType: !1679, size: 8, offset: 656)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1667, file: !1668, line: 477, baseType: !1679, size: 8, offset: 664)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1667, file: !1668, line: 478, baseType: !1679, size: 8, offset: 672)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1667, file: !1668, line: 479, baseType: !1679, size: 8, offset: 680)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1667, file: !1668, line: 480, baseType: !1679, size: 8, offset: 688)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1667, file: !1668, line: 481, baseType: !1679, size: 8, offset: 696)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1667, file: !1668, line: 482, baseType: !1679, size: 8, offset: 704)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1667, file: !1668, line: 483, baseType: !1679, size: 8, offset: 712)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1667, file: !1668, line: 484, baseType: !1679, size: 8, offset: 720)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1667, file: !1668, line: 485, baseType: !1679, size: 8, offset: 728)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1667, file: !1668, line: 486, baseType: !1679, size: 8, offset: 736)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1667, file: !1668, line: 487, baseType: !1679, size: 8, offset: 744)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1667, file: !1668, line: 488, baseType: !1679, size: 8, offset: 752)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1667, file: !1668, line: 489, baseType: !1679, size: 8, offset: 760)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1667, file: !1668, line: 490, baseType: !1679, size: 8, offset: 768)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1667, file: !1668, line: 491, baseType: !1679, size: 8, offset: 776)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1667, file: !1668, line: 492, baseType: !1679, size: 8, offset: 784)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1667, file: !1668, line: 493, baseType: !1679, size: 8, offset: 792)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1667, file: !1668, line: 494, baseType: !1679, size: 8, offset: 800)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1667, file: !1668, line: 495, baseType: !1679, size: 8, offset: 808)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1667, file: !1668, line: 496, baseType: !1679, size: 8, offset: 816)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1667, file: !1668, line: 497, baseType: !1679, size: 8, offset: 824)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1667, file: !1668, line: 498, baseType: !1679, size: 8, offset: 832)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1667, file: !1668, line: 499, baseType: !1679, size: 8, offset: 840)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1667, file: !1668, line: 500, baseType: !1679, size: 8, offset: 848)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1667, file: !1668, line: 501, baseType: !1679, size: 8, offset: 856)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1667, file: !1668, line: 502, baseType: !1679, size: 8, offset: 864)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1667, file: !1668, line: 503, baseType: !1679, size: 8, offset: 872)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1667, file: !1668, line: 504, baseType: !1679, size: 8, offset: 880)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1667, file: !1668, line: 505, baseType: !1679, size: 8, offset: 888)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1667, file: !1668, line: 506, baseType: !1679, size: 8, offset: 896)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1667, file: !1668, line: 507, baseType: !1679, size: 8, offset: 904)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1667, file: !1668, line: 508, baseType: !1679, size: 8, offset: 912)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1667, file: !1668, line: 509, baseType: !1679, size: 8, offset: 920)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1667, file: !1668, line: 510, baseType: !1679, size: 8, offset: 928)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1667, file: !1668, line: 511, baseType: !1679, size: 8, offset: 936)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1667, file: !1668, line: 512, baseType: !1679, size: 8, offset: 944)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1667, file: !1668, line: 513, baseType: !1679, size: 8, offset: 952)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1667, file: !1668, line: 514, baseType: !1679, size: 8, offset: 960)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1667, file: !1668, line: 515, baseType: !1679, size: 8, offset: 968)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1667, file: !1668, line: 516, baseType: !1679, size: 8, offset: 976)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1667, file: !1668, line: 517, baseType: !1679, size: 8, offset: 984)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1667, file: !1668, line: 518, baseType: !1679, size: 8, offset: 992)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1667, file: !1668, line: 519, baseType: !1679, size: 8, offset: 1000)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1667, file: !1668, line: 520, baseType: !1679, size: 8, offset: 1008)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1667, file: !1668, line: 521, baseType: !1679, size: 8, offset: 1016)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1667, file: !1668, line: 522, baseType: !1679, size: 8, offset: 1024)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1667, file: !1668, line: 523, baseType: !1679, size: 8, offset: 1032)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1667, file: !1668, line: 524, baseType: !1679, size: 8, offset: 1040)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1667, file: !1668, line: 525, baseType: !1679, size: 8, offset: 1048)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1667, file: !1668, line: 526, baseType: !1679, size: 8, offset: 1056)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1667, file: !1668, line: 527, baseType: !1679, size: 8, offset: 1064)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1667, file: !1668, line: 528, baseType: !1679, size: 8, offset: 1072)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1667, file: !1668, line: 529, baseType: !1679, size: 8, offset: 1080)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1667, file: !1668, line: 530, baseType: !1679, size: 8, offset: 1088)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1667, file: !1668, line: 531, baseType: !1679, size: 8, offset: 1096)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1667, file: !1668, line: 532, baseType: !1679, size: 8, offset: 1104)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1667, file: !1668, line: 533, baseType: !1679, size: 8, offset: 1112)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1667, file: !1668, line: 534, baseType: !1679, size: 8, offset: 1120)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1667, file: !1668, line: 535, baseType: !1679, size: 8, offset: 1128)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1667, file: !1668, line: 536, baseType: !1679, size: 8, offset: 1136)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1667, file: !1668, line: 537, baseType: !1679, size: 8, offset: 1144)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1667, file: !1668, line: 538, baseType: !1679, size: 8, offset: 1152)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1667, file: !1668, line: 539, baseType: !1679, size: 8, offset: 1160)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1667, file: !1668, line: 540, baseType: !1679, size: 8, offset: 1168)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1667, file: !1668, line: 541, baseType: !1679, size: 8, offset: 1176)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1667, file: !1668, line: 542, baseType: !1679, size: 8, offset: 1184)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1667, file: !1668, line: 543, baseType: !1679, size: 8, offset: 1192)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1667, file: !1668, line: 544, baseType: !1679, size: 8, offset: 1200)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1667, file: !1668, line: 545, baseType: !1679, size: 8, offset: 1208)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1667, file: !1668, line: 546, baseType: !1679, size: 8, offset: 1216)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1667, file: !1668, line: 547, baseType: !1679, size: 8, offset: 1224)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1667, file: !1668, line: 548, baseType: !1679, size: 8, offset: 1232)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1667, file: !1668, line: 549, baseType: !1679, size: 8, offset: 1240)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1667, file: !1668, line: 550, baseType: !1679, size: 8, offset: 1248)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1667, file: !1668, line: 551, baseType: !1679, size: 8, offset: 1256)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1667, file: !1668, line: 552, baseType: !1679, size: 8, offset: 1264)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1667, file: !1668, line: 553, baseType: !1679, size: 8, offset: 1272)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1667, file: !1668, line: 554, baseType: !1679, size: 8, offset: 1280)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1667, file: !1668, line: 555, baseType: !1679, size: 8, offset: 1288)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1667, file: !1668, line: 556, baseType: !1679, size: 8, offset: 1296)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1667, file: !1668, line: 557, baseType: !1679, size: 8, offset: 1304)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1667, file: !1668, line: 558, baseType: !1679, size: 8, offset: 1312)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1667, file: !1668, line: 559, baseType: !1679, size: 8, offset: 1320)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1667, file: !1668, line: 560, baseType: !1679, size: 8, offset: 1328)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1667, file: !1668, line: 561, baseType: !1679, size: 8, offset: 1336)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1667, file: !1668, line: 562, baseType: !1679, size: 8, offset: 1344)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1667, file: !1668, line: 563, baseType: !1679, size: 8, offset: 1352)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1667, file: !1668, line: 564, baseType: !1679, size: 8, offset: 1360)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1667, file: !1668, line: 565, baseType: !1679, size: 8, offset: 1368)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1667, file: !1668, line: 566, baseType: !1679, size: 8, offset: 1376)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1667, file: !1668, line: 567, baseType: !1679, size: 8, offset: 1384)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1667, file: !1668, line: 568, baseType: !1679, size: 8, offset: 1392)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1667, file: !1668, line: 569, baseType: !1679, size: 8, offset: 1400)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1667, file: !1668, line: 570, baseType: !1679, size: 8, offset: 1408)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1667, file: !1668, line: 571, baseType: !1679, size: 8, offset: 1416)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1667, file: !1668, line: 572, baseType: !1679, size: 8, offset: 1424)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1667, file: !1668, line: 573, baseType: !1679, size: 8, offset: 1432)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1667, file: !1668, line: 574, baseType: !1679, size: 8, offset: 1440)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !988, file: !151, line: 3405, baseType: !1835, size: 384)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !151, line: 3352, size: 384, elements: !1836)
!1836 = !{!1837, !1838}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1835, file: !151, line: 3353, baseType: !1024, size: 192)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1835, file: !151, line: 3356, baseType: !1839, size: 192, offset: 192)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1668, line: 578, size: 192, elements: !1840)
!1840 = !{!1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1839, file: !1668, line: 580, baseType: !900, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1839, file: !1668, line: 581, baseType: !900, size: 32, offset: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1839, file: !1668, line: 582, baseType: !900, size: 32, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1839, file: !1668, line: 583, baseType: !900, size: 32, offset: 96)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1839, file: !1668, line: 584, baseType: !1099, size: 8, offset: 128)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1839, file: !1668, line: 585, baseType: !1099, size: 8, offset: 136)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1839, file: !1668, line: 586, baseType: !1099, size: 8, offset: 144)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1839, file: !1668, line: 587, baseType: !1099, size: 8, offset: 152)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1839, file: !1668, line: 588, baseType: !1099, size: 8, offset: 160)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1839, file: !1668, line: 589, baseType: !1099, size: 8, offset: 168)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1839, file: !1668, line: 590, baseType: !1099, size: 8, offset: 176)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !952, file: !418, line: 178, baseType: !1245, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !952, file: !418, line: 179, baseType: !1854, size: 64)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !418, line: 150, baseType: !1856)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !418, line: 142, size: 320, elements: !1857)
!1857 = !{!1858, !1859, !1860, !1861, !1862, !1863}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1856, file: !418, line: 144, baseType: !986, size: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1856, file: !418, line: 145, baseType: !931, size: 64, offset: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1856, file: !418, line: 146, baseType: !931, size: 64, offset: 128)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1856, file: !418, line: 147, baseType: !1502, size: 32, offset: 192)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1856, file: !418, line: 148, baseType: !7, size: 32, offset: 224)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1856, file: !418, line: 149, baseType: !1099, size: 8, offset: 256)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !952, file: !418, line: 180, baseType: !1865, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64)
!1866 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !418, line: 162, baseType: !1867)
!1867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !418, line: 159, size: 128, elements: !1868)
!1868 = !{!1869, !1870}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1867, file: !418, line: 160, baseType: !986, size: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1867, file: !418, line: 161, baseType: !884, size: 64, offset: 64)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !952, file: !418, line: 181, baseType: !1872, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1873 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !418, line: 181, flags: DIFlagFwdDecl)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !947, file: !418, line: 317, baseType: !1875, size: 64)
!1875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !884, size: 64, elements: !966)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !947, file: !418, line: 318, baseType: !1877, size: 320)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !418, line: 188, size: 320, elements: !1878)
!1878 = !{!1879, !1881, !1936}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1877, file: !418, line: 190, baseType: !1880, size: 192)
!1880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !951, size: 192, elements: !1057)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1877, file: !418, line: 193, baseType: !1882, size: 64, offset: 192)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !418, line: 206, size: 320, elements: !1884)
!1884 = !{!1885, !1921, !1922, !1923, !1935}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1883, file: !418, line: 208, baseType: !1886, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !932, line: 62, baseType: !1888)
!1888 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1889, line: 538, size: 256, elements: !1890)
!1889 = !DIFile(filename: "./output.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1890 = !{!1891, !1895, !1901, !1912}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1888, file: !1889, line: 539, baseType: !1892, size: 32)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1889, line: 482, size: 32, elements: !1893)
!1893 = !{!1894}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1892, file: !1889, line: 484, baseType: !7, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1888, file: !1889, line: 540, baseType: !1896, size: 192)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1889, line: 488, size: 192, elements: !1897)
!1897 = !{!1898, !1899, !1900}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1896, file: !1889, line: 489, baseType: !1892, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1896, file: !1889, line: 492, baseType: !823, size: 64, offset: 64)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1896, file: !1889, line: 496, baseType: !986, size: 64, offset: 128)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1888, file: !1889, line: 541, baseType: !1902, size: 256)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1889, line: 504, size: 256, elements: !1903)
!1903 = !{!1904, !1905, !1910, !1911}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1902, file: !1889, line: 505, baseType: !1892, size: 32)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1902, file: !1889, line: 509, baseType: !1906, size: 64, offset: 64)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1889, line: 501, baseType: !1907)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1908 = !DISubroutineType(types: !1909)
!1909 = !{null, !1362}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1902, file: !1889, line: 510, baseType: !1362, size: 64, offset: 128)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1902, file: !1889, line: 513, baseType: !1886, size: 64, offset: 192)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1888, file: !1889, line: 542, baseType: !1913, size: 128)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1889, line: 530, size: 128, elements: !1914)
!1914 = !{!1915, !1916}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1913, file: !1889, line: 531, baseType: !1892, size: 32)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1913, file: !1889, line: 534, baseType: !1917, size: 64, offset: 64)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1889, line: 525, baseType: !1918)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = !DISubroutineType(types: !1920)
!1920 = !{!1099, !986, !823, !829, !829}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1883, file: !418, line: 211, baseType: !7, size: 32, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1883, file: !418, line: 214, baseType: !884, size: 64, offset: 128)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1883, file: !418, line: 224, baseType: !1924, size: 64, offset: 192)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !418, line: 202, baseType: !1926)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !418, line: 202, size: 128, elements: !1927)
!1927 = !{!1928}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1926, file: !418, line: 202, baseType: !1929, size: 128)
!1929 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !418, line: 200, baseType: !1930)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !418, line: 200, size: 128, elements: !1931)
!1931 = !{!1932, !1933, !1934}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1930, file: !418, line: 200, baseType: !7, size: 32)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1930, file: !418, line: 200, baseType: !7, size: 32, offset: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1930, file: !418, line: 200, baseType: !965, size: 64, offset: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1883, file: !418, line: 234, baseType: !1924, size: 64, offset: 256)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1877, file: !418, line: 197, baseType: !884, size: 64, offset: 256)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !947, file: !418, line: 319, baseType: !1046, size: 256)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !947, file: !418, line: 320, baseType: !1065, size: 192)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !925, file: !378, line: 366, baseType: !1940, size: 64, offset: 128)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_link", file: !378, line: 449, size: 128, elements: !1942)
!1942 = !{!1943, !1944}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1941, file: !378, line: 451, baseType: !920, size: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1941, file: !378, line: 452, baseType: !1940, size: 64, offset: 64)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "insn_info", scope: !925, file: !378, line: 370, baseType: !1946, size: 64, offset: 192)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_insn_info", file: !378, line: 433, size: 384, elements: !1948)
!1948 = !{!1949, !1950, !1951, !1952, !1953, !1964}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !1947, file: !378, line: 435, baseType: !931, size: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !1947, file: !378, line: 436, baseType: !919, size: 64, offset: 64)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !1947, file: !378, line: 437, baseType: !919, size: 64, offset: 128)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "eq_uses", scope: !1947, file: !378, line: 439, baseType: !919, size: 64, offset: 192)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "mw_hardregs", scope: !1947, file: !378, line: 440, baseType: !1954, size: 64, offset: 256)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_mw_hardreg", file: !378, line: 339, size: 192, elements: !1957)
!1957 = !{!1958, !1959, !1960, !1961, !1962, !1963}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "mw_reg", scope: !1956, file: !378, line: 341, baseType: !931, size: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1956, file: !378, line: 344, baseType: !7, size: 16, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1956, file: !378, line: 346, baseType: !900, size: 16, offset: 80, flags: DIFlagBitField, extraData: i64 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "start_regno", scope: !1956, file: !378, line: 347, baseType: !7, size: 32, offset: 96)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "end_regno", scope: !1956, file: !378, line: 348, baseType: !7, size: 32, offset: 128)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "mw_order", scope: !1956, file: !378, line: 349, baseType: !7, size: 32, offset: 160)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "luid", scope: !1947, file: !378, line: 444, baseType: !900, size: 32, offset: 320)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "next_reg", scope: !925, file: !378, line: 374, baseType: !921, size: 64, offset: 256)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "prev_reg", scope: !925, file: !378, line: 375, baseType: !921, size: 64, offset: 320)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !925, file: !378, line: 376, baseType: !7, size: 32, offset: 384)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !925, file: !378, line: 379, baseType: !900, size: 32, offset: 416)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "ref_order", scope: !925, file: !378, line: 382, baseType: !7, size: 32, offset: 448)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "regular_ref", scope: !922, file: !378, line: 425, baseType: !1971, size: 576)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_regular_ref", file: !378, line: 398, size: 576, elements: !1972)
!1972 = !{!1973, !1974}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1971, file: !378, line: 400, baseType: !925, size: 512)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1971, file: !378, line: 405, baseType: !1975, size: 64, offset: 512)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_ref", scope: !922, file: !378, line: 426, baseType: !1977, size: 576)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_artificial_ref", file: !378, line: 388, size: 576, elements: !1978)
!1978 = !{!1979, !1980}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1977, file: !378, line: 390, baseType: !925, size: 512)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1977, file: !378, line: 394, baseType: !1244, size: 64, offset: 512)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "extract_ref", scope: !922, file: !378, line: 427, baseType: !1982, size: 704)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_extract_ref", file: !378, line: 413, size: 704, elements: !1983)
!1983 = !{!1984, !1985, !1986, !1987}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1982, file: !378, line: 415, baseType: !1971, size: 576)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1982, file: !378, line: 416, baseType: !900, size: 32, offset: 576)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1982, file: !378, line: 417, baseType: !900, size: 32, offset: 608)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1982, file: !378, line: 418, baseType: !5, size: 32, offset: 640)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_uses", scope: !916, file: !378, line: 788, baseType: !919, size: 64, offset: 64)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_reg_info", file: !378, line: 510, size: 128, elements: !1992)
!1992 = !{!1993, !1994}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "reg_chain", scope: !1991, file: !378, line: 513, baseType: !920, size: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "n_refs", scope: !1991, file: !378, line: 515, baseType: !7, size: 32, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_df_ref_stack", file: !3, line: 50, baseType: !1999)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_df_ref_stack", file: !3, line: 50, size: 128, elements: !2000)
!2000 = !{!2001}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1999, file: !3, line: 50, baseType: !2002, size: 128)
!2002 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_df_ref_base", file: !3, line: 49, baseType: !2003)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_df_ref_base", file: !3, line: 49, size: 128, elements: !2004)
!2004 = !{!2005, !2006, !2007}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2003, file: !3, line: 49, baseType: !7, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2003, file: !3, line: 49, baseType: !7, size: 32, offset: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2003, file: !3, line: 49, baseType: !2008, size: 64, offset: 64)
!2008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 64, elements: !966)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_df_mw_hardreg_ptr_stack", file: !3, line: 57, baseType: !2011)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_df_mw_hardreg_ptr_stack", file: !3, line: 57, size: 128, elements: !2012)
!2012 = !{!2013}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2011, file: !3, line: 57, baseType: !2014, size: 128)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_df_mw_hardreg_ptr_base", file: !3, line: 56, baseType: !2015)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_df_mw_hardreg_ptr_base", file: !3, line: 56, size: 128, elements: !2016)
!2016 = !{!2017, !2018, !2019}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2015, file: !3, line: 56, baseType: !7, size: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2015, file: !3, line: 56, baseType: !7, size: 32, offset: 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2015, file: !3, line: 56, baseType: !2020, size: 64, offset: 64)
!2020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2021, size: 64, elements: !966)
!2021 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_mw_hardreg_ptr", file: !3, line: 54, baseType: !1955)
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !932, line: 47, baseType: !869)
!2023 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2024 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !2025, line: 42, baseType: !829)
!2025 = !DIFile(filename: "./hard-reg-set.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !920)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64)
!2029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2030)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1956)
!2032 = !{!2033, !2046, !2048, !2050, !2053, !0, !2058}
!2033 = !DIGlobalVariableExpression(var: !2034, expr: !DIExpression())
!2034 = distinct !DIGlobalVariable(name: "eliminables", scope: !2035, file: !3, line: 4232, type: !2039, isLocal: true, isDefinition: true)
!2035 = distinct !DISubprogram(name: "df_hard_reg_init", scope: !3, file: !3, line: 4228, type: !2036, scopeLine: 4229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!2036 = !DISubroutineType(types: !2037)
!2037 = !{null}
!2038 = !{}
!2039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2040, size: 256, elements: !893)
!2040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2041)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2035, file: !3, line: 4232, size: 64, elements: !2042)
!2042 = !{!2043, !2045}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !2041, file: !3, line: 4232, baseType: !2044, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !900)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !2041, file: !3, line: 4232, baseType: !2044, size: 32, offset: 32)
!2046 = !DIGlobalVariableExpression(var: !2047, expr: !DIExpression())
!2047 = distinct !DIGlobalVariable(name: "elim_reg_set", scope: !2, file: !3, line: 93, type: !2024, isLocal: true, isDefinition: true)
!2048 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression())
!2049 = distinct !DIGlobalVariable(name: "df_null_ref_rec", scope: !2, file: !3, line: 106, type: !2008, isLocal: true, isDefinition: true)
!2050 = !DIGlobalVariableExpression(var: !2051, expr: !DIExpression())
!2051 = distinct !DIGlobalVariable(name: "df_null_mw_rec", scope: !2, file: !3, line: 107, type: !2052, isLocal: true, isDefinition: true)
!2052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 64, elements: !966)
!2053 = !DIGlobalVariableExpression(var: !2054, expr: !DIExpression())
!2054 = distinct !DIGlobalVariable(name: "regs_ever_live", scope: !2, file: !3, line: 167, type: !2055, isLocal: true, isDefinition: true)
!2055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1099, size: 424, elements: !2056)
!2056 = !{!2057}
!2057 = !DISubrange(count: 53)
!2058 = !DIGlobalVariableExpression(var: !2059, expr: !DIExpression())
!2059 = distinct !DIGlobalVariable(name: "initialized", scope: !2, file: !3, line: 4222, type: !1099, isLocal: true, isDefinition: true)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_problem", file: !378, line: 255, size: 1280, elements: !2061)
!2061 = !{!2062, !2063, !2064, !2069, !2071, !2076, !2078, !2080, !2100, !2105, !2110, !2115, !2117, !2120, !2122, !2177, !2182, !2183, !2185, !2187, !2188, !2190}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2060, file: !378, line: 258, baseType: !7, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2060, file: !378, line: 259, baseType: !603, size: 32, offset: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fun", scope: !2060, file: !378, line: 260, baseType: !2065, size: 64, offset: 64)
!2065 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_alloc_function", file: !378, line: 197, baseType: !2066)
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 64)
!2067 = !DISubroutineType(types: !2068)
!2068 = !{null, !2022}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fun", scope: !2060, file: !378, line: 261, baseType: !2070, size: 64, offset: 128)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_reset_function", file: !378, line: 205, baseType: !2066)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "free_bb_fun", scope: !2060, file: !378, line: 262, baseType: !2072, size: 64, offset: 192)
!2072 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_free_bb_function", file: !378, line: 209, baseType: !2073)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = !DISubroutineType(types: !2075)
!2075 = !{null, !1244, !905}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "local_compute_fun", scope: !2060, file: !378, line: 263, baseType: !2077, size: 64, offset: 256)
!2077 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_local_compute_function", file: !378, line: 212, baseType: !2066)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "init_fun", scope: !2060, file: !378, line: 264, baseType: !2079, size: 64, offset: 320)
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_init_function", file: !378, line: 215, baseType: !2066)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "dataflow_fun", scope: !2060, file: !378, line: 265, baseType: !2081, size: 64, offset: 384)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_dataflow_function", file: !378, line: 218, baseType: !2082)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2083 = !DISubroutineType(types: !2084)
!2084 = !{null, !2085, !2022, !2099, !900}
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dataflow", file: !378, line: 289, size: 448, elements: !2087)
!2087 = !{!2088, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "problem", scope: !2086, file: !378, line: 291, baseType: !2089, size: 64)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "block_info", scope: !2086, file: !378, line: 295, baseType: !1375, size: 64, offset: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "block_info_size", scope: !2086, file: !378, line: 296, baseType: !7, size: 32, offset: 128)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "block_pool", scope: !2086, file: !378, line: 299, baseType: !817, size: 64, offset: 192)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "out_of_date_transfer_functions", scope: !2086, file: !378, line: 306, baseType: !2022, size: 64, offset: 256)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "problem_data", scope: !2086, file: !378, line: 312, baseType: !905, size: 64, offset: 320)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "local_flags", scope: !2086, file: !378, line: 315, baseType: !7, size: 32, offset: 384)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "computed", scope: !2086, file: !378, line: 321, baseType: !1099, size: 8, offset: 416)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "solutions_dirty", scope: !2086, file: !378, line: 326, baseType: !1099, size: 8, offset: 424)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "optional_p", scope: !2086, file: !378, line: 331, baseType: !1099, size: 8, offset: 432)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "con_fun_0", scope: !2060, file: !378, line: 266, baseType: !2101, size: 64, offset: 448)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_confluence_function_0", file: !378, line: 221, baseType: !2102)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = !DISubroutineType(types: !2104)
!2104 = !{null, !1244}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "con_fun_n", scope: !2060, file: !378, line: 267, baseType: !2106, size: 64, offset: 512)
!2106 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_confluence_function_n", file: !378, line: 224, baseType: !2107)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = !DISubroutineType(types: !2109)
!2109 = !{null, !1261}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "trans_fun", scope: !2060, file: !378, line: 268, baseType: !2111, size: 64, offset: 576)
!2111 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_transfer_function", file: !378, line: 227, baseType: !2112)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DISubroutineType(types: !2114)
!2114 = !{!1099, !900}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "finalize_fun", scope: !2060, file: !378, line: 269, baseType: !2116, size: 64, offset: 640)
!2116 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_finalizer_function", file: !378, line: 230, baseType: !2066)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "free_fun", scope: !2060, file: !378, line: 270, baseType: !2118, size: 64, offset: 704)
!2118 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_free_function", file: !378, line: 233, baseType: !2119)
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "remove_problem_fun", scope: !2060, file: !378, line: 271, baseType: !2121, size: 64, offset: 768)
!2121 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_remove_problem_function", file: !378, line: 238, baseType: !2119)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "dump_start_fun", scope: !2060, file: !378, line: 272, baseType: !2123, size: 64, offset: 832)
!2123 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_dump_problem_function", file: !378, line: 241, baseType: !2124)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!2125 = !DISubroutineType(types: !2126)
!2126 = !{null, !2127}
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2129, line: 7, baseType: !2130)
!2129 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2131, line: 49, size: 1728, elements: !2132)
!2131 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2132 = !{!2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2148, !2150, !2151, !2152, !2155, !2156, !2157, !2158, !2161, !2163, !2166, !2169, !2170, !2171, !2172, !2173}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2130, file: !2131, line: 51, baseType: !900, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2130, file: !2131, line: 54, baseType: !837, size: 64, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2130, file: !2131, line: 55, baseType: !837, size: 64, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2130, file: !2131, line: 56, baseType: !837, size: 64, offset: 192)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2130, file: !2131, line: 57, baseType: !837, size: 64, offset: 256)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2130, file: !2131, line: 58, baseType: !837, size: 64, offset: 320)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2130, file: !2131, line: 59, baseType: !837, size: 64, offset: 384)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2130, file: !2131, line: 60, baseType: !837, size: 64, offset: 448)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2130, file: !2131, line: 61, baseType: !837, size: 64, offset: 512)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2130, file: !2131, line: 64, baseType: !837, size: 64, offset: 576)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2130, file: !2131, line: 65, baseType: !837, size: 64, offset: 640)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2130, file: !2131, line: 66, baseType: !837, size: 64, offset: 704)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2130, file: !2131, line: 68, baseType: !2146, size: 64, offset: 768)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2131, line: 36, flags: DIFlagFwdDecl)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2130, file: !2131, line: 70, baseType: !2149, size: 64, offset: 832)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2130, file: !2131, line: 72, baseType: !900, size: 32, offset: 896)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2130, file: !2131, line: 73, baseType: !900, size: 32, offset: 928)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2130, file: !2131, line: 74, baseType: !2153, size: 64, offset: 960)
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2154, line: 152, baseType: !884)
!2154 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2130, file: !2131, line: 77, baseType: !2023, size: 16, offset: 1024)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2130, file: !2131, line: 78, baseType: !1679, size: 8, offset: 1040)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2130, file: !2131, line: 79, baseType: !1081, size: 8, offset: 1048)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2130, file: !2131, line: 81, baseType: !2159, size: 64, offset: 1088)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2131, line: 43, baseType: null)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2130, file: !2131, line: 89, baseType: !2162, size: 64, offset: 1152)
!2162 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2154, line: 153, baseType: !884)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2130, file: !2131, line: 91, baseType: !2164, size: 64, offset: 1216)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64)
!2165 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2131, line: 37, flags: DIFlagFwdDecl)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2130, file: !2131, line: 92, baseType: !2167, size: 64, offset: 1280)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64)
!2168 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2131, line: 38, flags: DIFlagFwdDecl)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2130, file: !2131, line: 93, baseType: !2149, size: 64, offset: 1344)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2130, file: !2131, line: 94, baseType: !905, size: 64, offset: 1408)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2130, file: !2131, line: 95, baseType: !827, size: 64, offset: 1472)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2130, file: !2131, line: 96, baseType: !900, size: 32, offset: 1536)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2130, file: !2131, line: 98, baseType: !2174, size: 160, offset: 1568)
!2174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !825, size: 160, elements: !2175)
!2175 = !{!2176}
!2176 = !DISubrange(count: 20)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "dump_top_fun", scope: !2060, file: !378, line: 273, baseType: !2178, size: 64, offset: 896)
!2178 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_dump_bb_problem_function", file: !378, line: 244, baseType: !2179)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 64)
!2180 = !DISubroutineType(types: !2181)
!2181 = !{null, !1244, !2127}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "dump_bottom_fun", scope: !2060, file: !378, line: 274, baseType: !2178, size: 64, offset: 960)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "verify_start_fun", scope: !2060, file: !378, line: 275, baseType: !2184, size: 64, offset: 1024)
!2184 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_verify_solution_start", file: !378, line: 247, baseType: !2119)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "verify_end_fun", scope: !2060, file: !378, line: 276, baseType: !2186, size: 64, offset: 1088)
!2186 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_verify_solution_end", file: !378, line: 250, baseType: !2119)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "dependent_problem", scope: !2060, file: !378, line: 277, baseType: !2089, size: 64, offset: 1152)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2060, file: !378, line: 280, baseType: !2189, size: 32, offset: 1216)
!2189 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !609, line: 80, baseType: !608)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "free_blocks_on_set_blocks", scope: !2060, file: !378, line: 284, baseType: !1099, size: 8, offset: 1248)
!2191 = !{i32 7, !"Dwarf Version", i32 4}
!2192 = !{i32 2, !"Debug Info Version", i32 3}
!2193 = !{i32 1, !"wchar_size", i32 4}
!2194 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2195 = distinct !DISubprogram(name: "df_scan_alloc", scope: !3, file: !3, line: 329, type: !2067, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!2196 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !2195, file: !3, line: 329, type: !2022)
!2197 = !DILocation(line: 329, column: 23, scope: !2195)
!2198 = !DILocalVariable(name: "problem_data", scope: !2195, file: !3, line: 331, type: !813)
!2199 = !DILocation(line: 331, column: 32, scope: !2195)
!2200 = !DILocalVariable(name: "insn_num", scope: !2195, file: !3, line: 332, type: !7)
!2201 = !DILocation(line: 332, column: 16, scope: !2195)
!2202 = !DILocation(line: 332, column: 27, scope: !2195)
!2203 = !DILocation(line: 332, column: 42, scope: !2195)
!2204 = !DILocalVariable(name: "block_size", scope: !2195, file: !3, line: 333, type: !7)
!2205 = !DILocation(line: 333, column: 16, scope: !2195)
!2206 = !DILocalVariable(name: "bb", scope: !2195, file: !3, line: 334, type: !1244)
!2207 = !DILocation(line: 334, column: 15, scope: !2195)
!2208 = !DILocation(line: 338, column: 7, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !2195, file: !3, line: 338, column: 7)
!2210 = !DILocation(line: 338, column: 16, scope: !2209)
!2211 = !DILocation(line: 338, column: 7, scope: !2195)
!2212 = !DILocation(line: 339, column: 5, scope: !2209)
!2213 = !DILocation(line: 344, column: 5, scope: !2195)
!2214 = !DILocation(line: 342, column: 7, scope: !2195)
!2215 = !DILocation(line: 341, column: 3, scope: !2195)
!2216 = !DILocation(line: 341, column: 12, scope: !2195)
!2217 = !DILocation(line: 342, column: 5, scope: !2195)
!2218 = !DILocation(line: 346, column: 18, scope: !2195)
!2219 = !DILocation(line: 346, column: 16, scope: !2195)
!2220 = !DILocation(line: 347, column: 27, scope: !2195)
!2221 = !DILocation(line: 347, column: 3, scope: !2195)
!2222 = !DILocation(line: 347, column: 12, scope: !2195)
!2223 = !DILocation(line: 347, column: 25, scope: !2195)
!2224 = !DILocation(line: 348, column: 3, scope: !2195)
!2225 = !DILocation(line: 348, column: 12, scope: !2195)
!2226 = !DILocation(line: 348, column: 21, scope: !2195)
!2227 = !DILocation(line: 352, column: 34, scope: !2195)
!2228 = !DILocation(line: 351, column: 7, scope: !2195)
!2229 = !DILocation(line: 350, column: 3, scope: !2195)
!2230 = !DILocation(line: 350, column: 17, scope: !2195)
!2231 = !DILocation(line: 351, column: 5, scope: !2195)
!2232 = !DILocation(line: 355, column: 40, scope: !2195)
!2233 = !DILocation(line: 354, column: 7, scope: !2195)
!2234 = !DILocation(line: 353, column: 3, scope: !2195)
!2235 = !DILocation(line: 353, column: 17, scope: !2195)
!2236 = !DILocation(line: 354, column: 5, scope: !2195)
!2237 = !DILocation(line: 358, column: 37, scope: !2195)
!2238 = !DILocation(line: 357, column: 7, scope: !2195)
!2239 = !DILocation(line: 356, column: 3, scope: !2195)
!2240 = !DILocation(line: 356, column: 17, scope: !2195)
!2241 = !DILocation(line: 357, column: 5, scope: !2195)
!2242 = !DILocation(line: 361, column: 37, scope: !2195)
!2243 = !DILocation(line: 360, column: 7, scope: !2195)
!2244 = !DILocation(line: 359, column: 3, scope: !2195)
!2245 = !DILocation(line: 359, column: 17, scope: !2195)
!2246 = !DILocation(line: 360, column: 5, scope: !2195)
!2247 = !DILocation(line: 364, column: 35, scope: !2195)
!2248 = !DILocation(line: 363, column: 7, scope: !2195)
!2249 = !DILocation(line: 362, column: 3, scope: !2195)
!2250 = !DILocation(line: 362, column: 17, scope: !2195)
!2251 = !DILocation(line: 363, column: 5, scope: !2195)
!2252 = !DILocation(line: 367, column: 34, scope: !2195)
!2253 = !DILocation(line: 366, column: 7, scope: !2195)
!2254 = !DILocation(line: 365, column: 3, scope: !2195)
!2255 = !DILocation(line: 365, column: 17, scope: !2195)
!2256 = !DILocation(line: 366, column: 5, scope: !2195)
!2257 = !DILocation(line: 370, column: 36, scope: !2195)
!2258 = !DILocation(line: 369, column: 7, scope: !2195)
!2259 = !DILocation(line: 368, column: 3, scope: !2195)
!2260 = !DILocation(line: 368, column: 17, scope: !2195)
!2261 = !DILocation(line: 369, column: 5, scope: !2195)
!2262 = !DILocation(line: 372, column: 31, scope: !2195)
!2263 = !DILocation(line: 372, column: 45, scope: !2195)
!2264 = !DILocation(line: 372, column: 3, scope: !2195)
!2265 = !DILocation(line: 373, column: 31, scope: !2195)
!2266 = !DILocation(line: 373, column: 45, scope: !2195)
!2267 = !DILocation(line: 373, column: 3, scope: !2195)
!2268 = !DILocation(line: 375, column: 15, scope: !2195)
!2269 = !DILocation(line: 375, column: 24, scope: !2195)
!2270 = !DILocation(line: 375, column: 12, scope: !2195)
!2271 = !DILocation(line: 376, column: 3, scope: !2195)
!2272 = !DILocation(line: 378, column: 3, scope: !2195)
!2273 = !DILocation(line: 379, column: 20, scope: !2195)
!2274 = !DILocation(line: 379, column: 3, scope: !2195)
!2275 = !DILocation(line: 381, column: 3, scope: !2276)
!2276 = distinct !DILexicalBlock(scope: !2195, file: !3, line: 381, column: 3)
!2277 = !DILocation(line: 381, column: 3, scope: !2278)
!2278 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 381, column: 3)
!2279 = !DILocalVariable(name: "bb_index", scope: !2280, file: !3, line: 383, type: !7)
!2280 = distinct !DILexicalBlock(scope: !2278, file: !3, line: 382, column: 5)
!2281 = !DILocation(line: 383, column: 20, scope: !2280)
!2282 = !DILocation(line: 383, column: 31, scope: !2280)
!2283 = !DILocation(line: 383, column: 35, scope: !2280)
!2284 = !DILocalVariable(name: "bb_info", scope: !2280, file: !3, line: 384, type: !915)
!2285 = !DILocation(line: 384, column: 31, scope: !2280)
!2286 = !DILocation(line: 384, column: 62, scope: !2280)
!2287 = !DILocation(line: 384, column: 41, scope: !2280)
!2288 = !DILocation(line: 385, column: 12, scope: !2289)
!2289 = distinct !DILexicalBlock(scope: !2280, file: !3, line: 385, column: 11)
!2290 = !DILocation(line: 385, column: 11, scope: !2280)
!2291 = !DILocation(line: 387, column: 53, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2289, file: !3, line: 386, column: 2)
!2293 = !DILocation(line: 387, column: 62, scope: !2292)
!2294 = !DILocation(line: 387, column: 41, scope: !2292)
!2295 = !DILocation(line: 387, column: 14, scope: !2292)
!2296 = !DILocation(line: 387, column: 12, scope: !2292)
!2297 = !DILocation(line: 388, column: 25, scope: !2292)
!2298 = !DILocation(line: 388, column: 35, scope: !2292)
!2299 = !DILocation(line: 388, column: 4, scope: !2292)
!2300 = !DILocation(line: 389, column: 2, scope: !2292)
!2301 = !DILocation(line: 390, column: 7, scope: !2280)
!2302 = !DILocation(line: 390, column: 16, scope: !2280)
!2303 = !DILocation(line: 390, column: 32, scope: !2280)
!2304 = !DILocation(line: 391, column: 7, scope: !2280)
!2305 = !DILocation(line: 391, column: 16, scope: !2280)
!2306 = !DILocation(line: 391, column: 32, scope: !2280)
!2307 = !DILocation(line: 392, column: 5, scope: !2280)
!2308 = distinct !{!2308, !2275, !2309}
!2309 = !DILocation(line: 392, column: 5, scope: !2276)
!2310 = !DILocation(line: 394, column: 28, scope: !2195)
!2311 = !DILocation(line: 394, column: 3, scope: !2195)
!2312 = !DILocation(line: 394, column: 7, scope: !2195)
!2313 = !DILocation(line: 394, column: 26, scope: !2195)
!2314 = !DILocation(line: 395, column: 39, scope: !2195)
!2315 = !DILocation(line: 395, column: 3, scope: !2195)
!2316 = !DILocation(line: 395, column: 7, scope: !2195)
!2317 = !DILocation(line: 395, column: 37, scope: !2195)
!2318 = !DILocation(line: 396, column: 34, scope: !2195)
!2319 = !DILocation(line: 396, column: 3, scope: !2195)
!2320 = !DILocation(line: 396, column: 7, scope: !2195)
!2321 = !DILocation(line: 396, column: 32, scope: !2195)
!2322 = !DILocation(line: 397, column: 26, scope: !2195)
!2323 = !DILocation(line: 397, column: 3, scope: !2195)
!2324 = !DILocation(line: 397, column: 7, scope: !2195)
!2325 = !DILocation(line: 397, column: 24, scope: !2195)
!2326 = !DILocation(line: 398, column: 25, scope: !2195)
!2327 = !DILocation(line: 398, column: 3, scope: !2195)
!2328 = !DILocation(line: 398, column: 7, scope: !2195)
!2329 = !DILocation(line: 398, column: 23, scope: !2195)
!2330 = !DILocation(line: 399, column: 25, scope: !2195)
!2331 = !DILocation(line: 399, column: 3, scope: !2195)
!2332 = !DILocation(line: 399, column: 7, scope: !2195)
!2333 = !DILocation(line: 399, column: 23, scope: !2195)
!2334 = !DILocation(line: 400, column: 25, scope: !2195)
!2335 = !DILocation(line: 400, column: 3, scope: !2195)
!2336 = !DILocation(line: 400, column: 7, scope: !2195)
!2337 = !DILocation(line: 400, column: 23, scope: !2195)
!2338 = !DILocation(line: 401, column: 31, scope: !2195)
!2339 = !DILocation(line: 401, column: 3, scope: !2195)
!2340 = !DILocation(line: 401, column: 7, scope: !2195)
!2341 = !DILocation(line: 401, column: 29, scope: !2195)
!2342 = !DILocation(line: 402, column: 3, scope: !2195)
!2343 = !DILocation(line: 402, column: 12, scope: !2195)
!2344 = !DILocation(line: 402, column: 23, scope: !2195)
!2345 = !DILocation(line: 403, column: 1, scope: !2195)
!2346 = distinct !DISubprogram(name: "df_scan_free_internal", scope: !3, file: !3, line: 197, type: !2036, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!2347 = !DILocalVariable(name: "problem_data", scope: !2346, file: !3, line: 199, type: !813)
!2348 = !DILocation(line: 199, column: 32, scope: !2346)
!2349 = !DILocation(line: 200, column: 39, scope: !2346)
!2350 = !DILocation(line: 200, column: 48, scope: !2346)
!2351 = !DILocation(line: 200, column: 7, scope: !2346)
!2352 = !DILocalVariable(name: "i", scope: !2346, file: !3, line: 201, type: !7)
!2353 = !DILocation(line: 201, column: 16, scope: !2346)
!2354 = !DILocalVariable(name: "bb", scope: !2346, file: !3, line: 202, type: !1244)
!2355 = !DILocation(line: 202, column: 15, scope: !2346)
!2356 = !DILocation(line: 207, column: 10, scope: !2357)
!2357 = distinct !DILexicalBlock(scope: !2346, file: !3, line: 207, column: 3)
!2358 = !DILocation(line: 207, column: 8, scope: !2357)
!2359 = !DILocation(line: 207, column: 15, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2357, file: !3, line: 207, column: 3)
!2361 = !DILocation(line: 207, column: 19, scope: !2360)
!2362 = !DILocation(line: 207, column: 17, scope: !2360)
!2363 = !DILocation(line: 207, column: 3, scope: !2357)
!2364 = !DILocalVariable(name: "insn_info", scope: !2365, file: !3, line: 209, type: !1946)
!2365 = distinct !DILexicalBlock(scope: !2360, file: !3, line: 208, column: 5)
!2366 = !DILocation(line: 209, column: 28, scope: !2365)
!2367 = !DILocation(line: 209, column: 40, scope: !2365)
!2368 = !DILocation(line: 212, column: 11, scope: !2369)
!2369 = distinct !DILexicalBlock(scope: !2365, file: !3, line: 212, column: 11)
!2370 = !DILocation(line: 212, column: 11, scope: !2365)
!2371 = !DILocation(line: 214, column: 4, scope: !2372)
!2372 = distinct !DILexicalBlock(scope: !2369, file: !3, line: 213, column: 2)
!2373 = !DILocation(line: 214, column: 4, scope: !2374)
!2374 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 214, column: 4)
!2375 = distinct !DILexicalBlock(scope: !2372, file: !3, line: 214, column: 4)
!2376 = !DILocation(line: 214, column: 4, scope: !2375)
!2377 = !DILocation(line: 215, column: 4, scope: !2372)
!2378 = !DILocation(line: 215, column: 4, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2380, file: !3, line: 215, column: 4)
!2380 = distinct !DILexicalBlock(scope: !2372, file: !3, line: 215, column: 4)
!2381 = !DILocation(line: 215, column: 4, scope: !2380)
!2382 = !DILocation(line: 216, column: 4, scope: !2372)
!2383 = !DILocation(line: 216, column: 4, scope: !2384)
!2384 = distinct !DILexicalBlock(scope: !2385, file: !3, line: 216, column: 4)
!2385 = distinct !DILexicalBlock(scope: !2372, file: !3, line: 216, column: 4)
!2386 = !DILocation(line: 216, column: 4, scope: !2385)
!2387 = !DILocation(line: 217, column: 4, scope: !2372)
!2388 = !DILocation(line: 217, column: 4, scope: !2389)
!2389 = distinct !DILexicalBlock(scope: !2390, file: !3, line: 217, column: 4)
!2390 = distinct !DILexicalBlock(scope: !2372, file: !3, line: 217, column: 4)
!2391 = !DILocation(line: 217, column: 4, scope: !2390)
!2392 = !DILocation(line: 218, column: 2, scope: !2372)
!2393 = !DILocation(line: 219, column: 5, scope: !2365)
!2394 = !DILocation(line: 207, column: 36, scope: !2360)
!2395 = !DILocation(line: 207, column: 3, scope: !2360)
!2396 = distinct !{!2396, !2363, !2397}
!2397 = !DILocation(line: 219, column: 5, scope: !2357)
!2398 = !DILocation(line: 221, column: 3, scope: !2399)
!2399 = distinct !DILexicalBlock(scope: !2346, file: !3, line: 221, column: 3)
!2400 = !DILocation(line: 221, column: 3, scope: !2401)
!2401 = distinct !DILexicalBlock(scope: !2399, file: !3, line: 221, column: 3)
!2402 = !DILocalVariable(name: "bb_index", scope: !2403, file: !3, line: 223, type: !7)
!2403 = distinct !DILexicalBlock(scope: !2401, file: !3, line: 222, column: 5)
!2404 = !DILocation(line: 223, column: 20, scope: !2403)
!2405 = !DILocation(line: 223, column: 31, scope: !2403)
!2406 = !DILocation(line: 223, column: 35, scope: !2403)
!2407 = !DILocalVariable(name: "bb_info", scope: !2403, file: !3, line: 224, type: !915)
!2408 = !DILocation(line: 224, column: 31, scope: !2403)
!2409 = !DILocation(line: 224, column: 62, scope: !2403)
!2410 = !DILocation(line: 224, column: 41, scope: !2403)
!2411 = !DILocation(line: 225, column: 11, scope: !2412)
!2412 = distinct !DILexicalBlock(scope: !2403, file: !3, line: 225, column: 11)
!2413 = !DILocation(line: 225, column: 11, scope: !2403)
!2414 = !DILocation(line: 227, column: 4, scope: !2415)
!2415 = distinct !DILexicalBlock(scope: !2412, file: !3, line: 226, column: 2)
!2416 = !DILocation(line: 227, column: 4, scope: !2417)
!2417 = distinct !DILexicalBlock(scope: !2418, file: !3, line: 227, column: 4)
!2418 = distinct !DILexicalBlock(scope: !2415, file: !3, line: 227, column: 4)
!2419 = !DILocation(line: 227, column: 4, scope: !2418)
!2420 = !DILocation(line: 228, column: 4, scope: !2415)
!2421 = !DILocation(line: 228, column: 4, scope: !2422)
!2422 = distinct !DILexicalBlock(scope: !2423, file: !3, line: 228, column: 4)
!2423 = distinct !DILexicalBlock(scope: !2415, file: !3, line: 228, column: 4)
!2424 = !DILocation(line: 228, column: 4, scope: !2423)
!2425 = !DILocation(line: 229, column: 2, scope: !2415)
!2426 = !DILocation(line: 230, column: 5, scope: !2403)
!2427 = distinct !{!2427, !2398, !2428}
!2428 = !DILocation(line: 230, column: 5, scope: !2399)
!2429 = !DILocation(line: 232, column: 9, scope: !2346)
!2430 = !DILocation(line: 232, column: 13, scope: !2346)
!2431 = !DILocation(line: 232, column: 22, scope: !2346)
!2432 = !DILocation(line: 232, column: 3, scope: !2346)
!2433 = !DILocation(line: 233, column: 9, scope: !2346)
!2434 = !DILocation(line: 233, column: 13, scope: !2346)
!2435 = !DILocation(line: 233, column: 22, scope: !2346)
!2436 = !DILocation(line: 233, column: 3, scope: !2346)
!2437 = !DILocation(line: 234, column: 9, scope: !2346)
!2438 = !DILocation(line: 234, column: 13, scope: !2346)
!2439 = !DILocation(line: 234, column: 22, scope: !2346)
!2440 = !DILocation(line: 234, column: 3, scope: !2346)
!2441 = !DILocation(line: 235, column: 12, scope: !2346)
!2442 = !DILocation(line: 235, column: 16, scope: !2346)
!2443 = !DILocation(line: 235, column: 3, scope: !2346)
!2444 = !DILocation(line: 237, column: 9, scope: !2346)
!2445 = !DILocation(line: 237, column: 13, scope: !2346)
!2446 = !DILocation(line: 237, column: 22, scope: !2346)
!2447 = !DILocation(line: 237, column: 3, scope: !2346)
!2448 = !DILocation(line: 238, column: 9, scope: !2346)
!2449 = !DILocation(line: 238, column: 13, scope: !2346)
!2450 = !DILocation(line: 238, column: 22, scope: !2346)
!2451 = !DILocation(line: 238, column: 3, scope: !2346)
!2452 = !DILocation(line: 239, column: 9, scope: !2346)
!2453 = !DILocation(line: 239, column: 13, scope: !2346)
!2454 = !DILocation(line: 239, column: 22, scope: !2346)
!2455 = !DILocation(line: 239, column: 3, scope: !2346)
!2456 = !DILocation(line: 240, column: 12, scope: !2346)
!2457 = !DILocation(line: 240, column: 16, scope: !2346)
!2458 = !DILocation(line: 240, column: 3, scope: !2346)
!2459 = !DILocation(line: 242, column: 9, scope: !2346)
!2460 = !DILocation(line: 242, column: 13, scope: !2346)
!2461 = !DILocation(line: 242, column: 3, scope: !2346)
!2462 = !DILocation(line: 243, column: 3, scope: !2346)
!2463 = !DILocation(line: 243, column: 7, scope: !2346)
!2464 = !DILocation(line: 243, column: 16, scope: !2346)
!2465 = !DILocation(line: 244, column: 9, scope: !2346)
!2466 = !DILocation(line: 244, column: 13, scope: !2346)
!2467 = !DILocation(line: 244, column: 3, scope: !2346)
!2468 = !DILocation(line: 245, column: 3, scope: !2346)
!2469 = !DILocation(line: 245, column: 7, scope: !2346)
!2470 = !DILocation(line: 245, column: 16, scope: !2346)
!2471 = !DILocation(line: 246, column: 9, scope: !2346)
!2472 = !DILocation(line: 246, column: 13, scope: !2346)
!2473 = !DILocation(line: 246, column: 3, scope: !2346)
!2474 = !DILocation(line: 247, column: 3, scope: !2346)
!2475 = !DILocation(line: 247, column: 7, scope: !2346)
!2476 = !DILocation(line: 247, column: 19, scope: !2346)
!2477 = !DILocation(line: 248, column: 3, scope: !2346)
!2478 = !DILocation(line: 248, column: 7, scope: !2346)
!2479 = !DILocation(line: 248, column: 17, scope: !2346)
!2480 = !DILocation(line: 249, column: 3, scope: !2346)
!2481 = !DILocation(line: 249, column: 19, scope: !2346)
!2482 = !DILocation(line: 251, column: 9, scope: !2346)
!2483 = !DILocation(line: 251, column: 13, scope: !2346)
!2484 = !DILocation(line: 251, column: 3, scope: !2346)
!2485 = !DILocation(line: 252, column: 3, scope: !2346)
!2486 = !DILocation(line: 252, column: 7, scope: !2346)
!2487 = !DILocation(line: 252, column: 13, scope: !2346)
!2488 = !DILocation(line: 253, column: 3, scope: !2346)
!2489 = !DILocation(line: 253, column: 19, scope: !2346)
!2490 = !DILocation(line: 255, column: 9, scope: !2346)
!2491 = !DILocation(line: 255, column: 18, scope: !2346)
!2492 = !DILocation(line: 255, column: 3, scope: !2346)
!2493 = !DILocation(line: 256, column: 3, scope: !2346)
!2494 = !DILocation(line: 256, column: 12, scope: !2346)
!2495 = !DILocation(line: 256, column: 23, scope: !2346)
!2496 = !DILocation(line: 257, column: 3, scope: !2346)
!2497 = !DILocation(line: 257, column: 12, scope: !2346)
!2498 = !DILocation(line: 257, column: 28, scope: !2346)
!2499 = !DILocation(line: 259, column: 3, scope: !2346)
!2500 = !DILocation(line: 260, column: 3, scope: !2346)
!2501 = !DILocation(line: 261, column: 3, scope: !2346)
!2502 = !DILocation(line: 262, column: 3, scope: !2346)
!2503 = !DILocation(line: 263, column: 3, scope: !2346)
!2504 = !DILocation(line: 264, column: 3, scope: !2346)
!2505 = !DILocation(line: 265, column: 3, scope: !2346)
!2506 = !DILocation(line: 266, column: 3, scope: !2346)
!2507 = !DILocation(line: 268, column: 20, scope: !2346)
!2508 = !DILocation(line: 268, column: 29, scope: !2346)
!2509 = !DILocation(line: 268, column: 3, scope: !2346)
!2510 = !DILocation(line: 269, column: 20, scope: !2346)
!2511 = !DILocation(line: 269, column: 34, scope: !2346)
!2512 = !DILocation(line: 269, column: 3, scope: !2346)
!2513 = !DILocation(line: 270, column: 20, scope: !2346)
!2514 = !DILocation(line: 270, column: 34, scope: !2346)
!2515 = !DILocation(line: 270, column: 3, scope: !2346)
!2516 = !DILocation(line: 271, column: 20, scope: !2346)
!2517 = !DILocation(line: 271, column: 34, scope: !2346)
!2518 = !DILocation(line: 271, column: 3, scope: !2346)
!2519 = !DILocation(line: 272, column: 20, scope: !2346)
!2520 = !DILocation(line: 272, column: 34, scope: !2346)
!2521 = !DILocation(line: 272, column: 3, scope: !2346)
!2522 = !DILocation(line: 273, column: 20, scope: !2346)
!2523 = !DILocation(line: 273, column: 34, scope: !2346)
!2524 = !DILocation(line: 273, column: 3, scope: !2346)
!2525 = !DILocation(line: 274, column: 20, scope: !2346)
!2526 = !DILocation(line: 274, column: 34, scope: !2346)
!2527 = !DILocation(line: 274, column: 3, scope: !2346)
!2528 = !DILocation(line: 275, column: 20, scope: !2346)
!2529 = !DILocation(line: 275, column: 34, scope: !2346)
!2530 = !DILocation(line: 275, column: 3, scope: !2346)
!2531 = !DILocation(line: 276, column: 28, scope: !2346)
!2532 = !DILocation(line: 276, column: 42, scope: !2346)
!2533 = !DILocation(line: 276, column: 3, scope: !2346)
!2534 = !DILocation(line: 277, column: 28, scope: !2346)
!2535 = !DILocation(line: 277, column: 42, scope: !2346)
!2536 = !DILocation(line: 277, column: 3, scope: !2346)
!2537 = !DILocation(line: 278, column: 9, scope: !2346)
!2538 = !DILocation(line: 278, column: 18, scope: !2346)
!2539 = !DILocation(line: 278, column: 3, scope: !2346)
!2540 = !DILocation(line: 279, column: 1, scope: !2346)
!2541 = distinct !DISubprogram(name: "df_grow_reg_info", scope: !3, file: !3, line: 570, type: !2036, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!2542 = !DILocalVariable(name: "max_reg", scope: !2541, file: !3, line: 572, type: !7)
!2543 = !DILocation(line: 572, column: 16, scope: !2541)
!2544 = !DILocation(line: 572, column: 26, scope: !2541)
!2545 = !DILocalVariable(name: "new_size", scope: !2541, file: !3, line: 573, type: !7)
!2546 = !DILocation(line: 573, column: 16, scope: !2541)
!2547 = !DILocation(line: 573, column: 27, scope: !2541)
!2548 = !DILocalVariable(name: "problem_data", scope: !2541, file: !3, line: 574, type: !813)
!2549 = !DILocation(line: 574, column: 32, scope: !2541)
!2550 = !DILocation(line: 575, column: 39, scope: !2541)
!2551 = !DILocation(line: 575, column: 48, scope: !2541)
!2552 = !DILocation(line: 575, column: 7, scope: !2541)
!2553 = !DILocalVariable(name: "i", scope: !2541, file: !3, line: 576, type: !7)
!2554 = !DILocation(line: 576, column: 16, scope: !2541)
!2555 = !DILocation(line: 578, column: 7, scope: !2556)
!2556 = distinct !DILexicalBlock(scope: !2541, file: !3, line: 578, column: 7)
!2557 = !DILocation(line: 578, column: 11, scope: !2556)
!2558 = !DILocation(line: 578, column: 23, scope: !2556)
!2559 = !DILocation(line: 578, column: 21, scope: !2556)
!2560 = !DILocation(line: 578, column: 7, scope: !2541)
!2561 = !DILocation(line: 580, column: 19, scope: !2562)
!2562 = distinct !DILexicalBlock(scope: !2556, file: !3, line: 579, column: 5)
!2563 = !DILocation(line: 580, column: 28, scope: !2562)
!2564 = !DILocation(line: 580, column: 16, scope: !2562)
!2565 = !DILocation(line: 581, column: 22, scope: !2562)
!2566 = !DILocation(line: 581, column: 7, scope: !2562)
!2567 = !DILocation(line: 581, column: 11, scope: !2562)
!2568 = !DILocation(line: 581, column: 20, scope: !2562)
!2569 = !DILocation(line: 582, column: 22, scope: !2562)
!2570 = !DILocation(line: 582, column: 7, scope: !2562)
!2571 = !DILocation(line: 582, column: 11, scope: !2562)
!2572 = !DILocation(line: 582, column: 20, scope: !2562)
!2573 = !DILocation(line: 583, column: 25, scope: !2562)
!2574 = !DILocation(line: 583, column: 7, scope: !2562)
!2575 = !DILocation(line: 583, column: 11, scope: !2562)
!2576 = !DILocation(line: 583, column: 23, scope: !2562)
!2577 = !DILocation(line: 585, column: 28, scope: !2562)
!2578 = !DILocation(line: 585, column: 7, scope: !2562)
!2579 = !DILocation(line: 585, column: 11, scope: !2562)
!2580 = !DILocation(line: 585, column: 20, scope: !2562)
!2581 = !DILocation(line: 585, column: 26, scope: !2562)
!2582 = !DILocation(line: 586, column: 28, scope: !2562)
!2583 = !DILocation(line: 586, column: 7, scope: !2562)
!2584 = !DILocation(line: 586, column: 11, scope: !2562)
!2585 = !DILocation(line: 586, column: 20, scope: !2562)
!2586 = !DILocation(line: 586, column: 26, scope: !2562)
!2587 = !DILocation(line: 587, column: 28, scope: !2562)
!2588 = !DILocation(line: 587, column: 7, scope: !2562)
!2589 = !DILocation(line: 587, column: 11, scope: !2562)
!2590 = !DILocation(line: 587, column: 20, scope: !2562)
!2591 = !DILocation(line: 587, column: 26, scope: !2562)
!2592 = !DILocation(line: 588, column: 28, scope: !2562)
!2593 = !DILocation(line: 588, column: 7, scope: !2562)
!2594 = !DILocation(line: 588, column: 11, scope: !2562)
!2595 = !DILocation(line: 588, column: 20, scope: !2562)
!2596 = !DILocation(line: 588, column: 26, scope: !2562)
!2597 = !DILocation(line: 589, column: 23, scope: !2562)
!2598 = !DILocation(line: 589, column: 7, scope: !2562)
!2599 = !DILocation(line: 589, column: 11, scope: !2562)
!2600 = !DILocation(line: 589, column: 21, scope: !2562)
!2601 = !DILocation(line: 590, column: 5, scope: !2562)
!2602 = !DILocation(line: 592, column: 12, scope: !2603)
!2603 = distinct !DILexicalBlock(scope: !2541, file: !3, line: 592, column: 3)
!2604 = !DILocation(line: 592, column: 16, scope: !2603)
!2605 = !DILocation(line: 592, column: 10, scope: !2603)
!2606 = !DILocation(line: 592, column: 8, scope: !2603)
!2607 = !DILocation(line: 592, column: 29, scope: !2608)
!2608 = distinct !DILexicalBlock(scope: !2603, file: !3, line: 592, column: 3)
!2609 = !DILocation(line: 592, column: 33, scope: !2608)
!2610 = !DILocation(line: 592, column: 31, scope: !2608)
!2611 = !DILocation(line: 592, column: 3, scope: !2603)
!2612 = !DILocalVariable(name: "reg_info", scope: !2613, file: !3, line: 594, type: !1990)
!2613 = distinct !DILexicalBlock(scope: !2608, file: !3, line: 593, column: 5)
!2614 = !DILocation(line: 594, column: 27, scope: !2613)
!2615 = !DILocation(line: 596, column: 53, scope: !2613)
!2616 = !DILocation(line: 596, column: 67, scope: !2613)
!2617 = !DILocation(line: 596, column: 41, scope: !2613)
!2618 = !DILocation(line: 596, column: 18, scope: !2613)
!2619 = !DILocation(line: 596, column: 16, scope: !2613)
!2620 = !DILocation(line: 597, column: 15, scope: !2613)
!2621 = !DILocation(line: 597, column: 7, scope: !2613)
!2622 = !DILocation(line: 598, column: 25, scope: !2613)
!2623 = !DILocation(line: 598, column: 7, scope: !2613)
!2624 = !DILocation(line: 598, column: 11, scope: !2613)
!2625 = !DILocation(line: 598, column: 20, scope: !2613)
!2626 = !DILocation(line: 598, column: 23, scope: !2613)
!2627 = !DILocation(line: 599, column: 53, scope: !2613)
!2628 = !DILocation(line: 599, column: 67, scope: !2613)
!2629 = !DILocation(line: 599, column: 41, scope: !2613)
!2630 = !DILocation(line: 599, column: 18, scope: !2613)
!2631 = !DILocation(line: 599, column: 16, scope: !2613)
!2632 = !DILocation(line: 600, column: 15, scope: !2613)
!2633 = !DILocation(line: 600, column: 7, scope: !2613)
!2634 = !DILocation(line: 601, column: 25, scope: !2613)
!2635 = !DILocation(line: 601, column: 7, scope: !2613)
!2636 = !DILocation(line: 601, column: 11, scope: !2613)
!2637 = !DILocation(line: 601, column: 20, scope: !2613)
!2638 = !DILocation(line: 601, column: 23, scope: !2613)
!2639 = !DILocation(line: 602, column: 53, scope: !2613)
!2640 = !DILocation(line: 602, column: 67, scope: !2613)
!2641 = !DILocation(line: 602, column: 41, scope: !2613)
!2642 = !DILocation(line: 602, column: 18, scope: !2613)
!2643 = !DILocation(line: 602, column: 16, scope: !2613)
!2644 = !DILocation(line: 603, column: 15, scope: !2613)
!2645 = !DILocation(line: 603, column: 7, scope: !2613)
!2646 = !DILocation(line: 604, column: 28, scope: !2613)
!2647 = !DILocation(line: 604, column: 7, scope: !2613)
!2648 = !DILocation(line: 604, column: 11, scope: !2613)
!2649 = !DILocation(line: 604, column: 23, scope: !2613)
!2650 = !DILocation(line: 604, column: 26, scope: !2613)
!2651 = !DILocation(line: 605, column: 7, scope: !2613)
!2652 = !DILocation(line: 605, column: 11, scope: !2613)
!2653 = !DILocation(line: 605, column: 20, scope: !2613)
!2654 = !DILocation(line: 605, column: 26, scope: !2613)
!2655 = !DILocation(line: 605, column: 29, scope: !2613)
!2656 = !DILocation(line: 606, column: 7, scope: !2613)
!2657 = !DILocation(line: 606, column: 11, scope: !2613)
!2658 = !DILocation(line: 606, column: 20, scope: !2613)
!2659 = !DILocation(line: 606, column: 26, scope: !2613)
!2660 = !DILocation(line: 606, column: 29, scope: !2613)
!2661 = !DILocation(line: 607, column: 7, scope: !2613)
!2662 = !DILocation(line: 607, column: 11, scope: !2613)
!2663 = !DILocation(line: 607, column: 20, scope: !2613)
!2664 = !DILocation(line: 607, column: 26, scope: !2613)
!2665 = !DILocation(line: 607, column: 29, scope: !2613)
!2666 = !DILocation(line: 608, column: 7, scope: !2613)
!2667 = !DILocation(line: 608, column: 11, scope: !2613)
!2668 = !DILocation(line: 608, column: 20, scope: !2613)
!2669 = !DILocation(line: 608, column: 26, scope: !2613)
!2670 = !DILocation(line: 608, column: 29, scope: !2613)
!2671 = !DILocation(line: 609, column: 5, scope: !2613)
!2672 = !DILocation(line: 592, column: 43, scope: !2608)
!2673 = !DILocation(line: 592, column: 3, scope: !2608)
!2674 = distinct !{!2674, !2611, !2675}
!2675 = !DILocation(line: 609, column: 5, scope: !2603)
!2676 = !DILocation(line: 611, column: 21, scope: !2541)
!2677 = !DILocation(line: 611, column: 3, scope: !2541)
!2678 = !DILocation(line: 611, column: 7, scope: !2541)
!2679 = !DILocation(line: 611, column: 19, scope: !2541)
!2680 = !DILocation(line: 612, column: 1, scope: !2541)
!2681 = distinct !DISubprogram(name: "df_grow_insn_info", scope: !3, file: !3, line: 653, type: !2036, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!2682 = !DILocalVariable(name: "new_size", scope: !2681, file: !3, line: 655, type: !7)
!2683 = !DILocation(line: 655, column: 16, scope: !2681)
!2684 = !DILocation(line: 655, column: 27, scope: !2681)
!2685 = !DILocation(line: 655, column: 42, scope: !2681)
!2686 = !DILocation(line: 656, column: 7, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2681, file: !3, line: 656, column: 7)
!2688 = !DILocation(line: 656, column: 25, scope: !2687)
!2689 = !DILocation(line: 656, column: 23, scope: !2687)
!2690 = !DILocation(line: 656, column: 7, scope: !2681)
!2691 = !DILocation(line: 658, column: 19, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2687, file: !3, line: 657, column: 5)
!2693 = !DILocation(line: 658, column: 28, scope: !2692)
!2694 = !DILocation(line: 658, column: 16, scope: !2692)
!2695 = !DILocation(line: 659, column: 19, scope: !2692)
!2696 = !DILocation(line: 659, column: 7, scope: !2692)
!2697 = !DILocation(line: 659, column: 11, scope: !2692)
!2698 = !DILocation(line: 659, column: 17, scope: !2692)
!2699 = !DILocation(line: 660, column: 15, scope: !2692)
!2700 = !DILocation(line: 660, column: 19, scope: !2692)
!2701 = !DILocation(line: 660, column: 27, scope: !2692)
!2702 = !DILocation(line: 660, column: 31, scope: !2692)
!2703 = !DILocation(line: 660, column: 25, scope: !2692)
!2704 = !DILocation(line: 660, column: 7, scope: !2692)
!2705 = !DILocation(line: 661, column: 9, scope: !2692)
!2706 = !DILocation(line: 661, column: 20, scope: !2692)
!2707 = !DILocation(line: 661, column: 18, scope: !2692)
!2708 = !DILocation(line: 661, column: 8, scope: !2692)
!2709 = !DILocation(line: 661, column: 37, scope: !2692)
!2710 = !DILocation(line: 662, column: 25, scope: !2692)
!2711 = !DILocation(line: 662, column: 7, scope: !2692)
!2712 = !DILocation(line: 662, column: 23, scope: !2692)
!2713 = !DILocation(line: 663, column: 5, scope: !2692)
!2714 = !DILocation(line: 664, column: 1, scope: !2681)
!2715 = distinct !DISubprogram(name: "df_scan_get_bb_info", scope: !378, file: !378, line: 1034, type: !2716, scopeLine: 1035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!2716 = !DISubroutineType(types: !2717)
!2717 = !{!915, !7}
!2718 = !DILocalVariable(name: "index", arg: 1, scope: !2715, file: !378, line: 1034, type: !7)
!2719 = !DILocation(line: 1034, column: 35, scope: !2715)
!2720 = !DILocation(line: 1036, column: 7, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2715, file: !378, line: 1036, column: 7)
!2722 = !DILocation(line: 1036, column: 15, scope: !2721)
!2723 = !DILocation(line: 1036, column: 24, scope: !2721)
!2724 = !DILocation(line: 1036, column: 13, scope: !2721)
!2725 = !DILocation(line: 1036, column: 7, scope: !2715)
!2726 = !DILocation(line: 1037, column: 39, scope: !2721)
!2727 = !DILocation(line: 1037, column: 48, scope: !2721)
!2728 = !DILocation(line: 1037, column: 59, scope: !2721)
!2729 = !DILocation(line: 1037, column: 12, scope: !2721)
!2730 = !DILocation(line: 1037, column: 5, scope: !2721)
!2731 = !DILocation(line: 1039, column: 5, scope: !2721)
!2732 = !DILocation(line: 1040, column: 1, scope: !2715)
!2733 = distinct !DISubprogram(name: "df_scan_set_bb_info", scope: !3, file: !3, line: 285, type: !2734, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!2734 = !DISubroutineType(types: !2735)
!2735 = !{null, !7, !915}
!2736 = !DILocalVariable(name: "index", arg: 1, scope: !2733, file: !3, line: 285, type: !7)
!2737 = !DILocation(line: 285, column: 35, scope: !2733)
!2738 = !DILocalVariable(name: "bb_info", arg: 2, scope: !2733, file: !3, line: 286, type: !915)
!2739 = !DILocation(line: 286, column: 32, scope: !2733)
!2740 = !DILocation(line: 288, column: 20, scope: !2733)
!2741 = !DILocation(line: 288, column: 3, scope: !2733)
!2742 = !DILocation(line: 289, column: 41, scope: !2733)
!2743 = !DILocation(line: 289, column: 32, scope: !2733)
!2744 = !DILocation(line: 289, column: 3, scope: !2733)
!2745 = !DILocation(line: 289, column: 12, scope: !2733)
!2746 = !DILocation(line: 289, column: 23, scope: !2733)
!2747 = !DILocation(line: 289, column: 30, scope: !2733)
!2748 = !DILocation(line: 290, column: 1, scope: !2733)
!2749 = distinct !DISubprogram(name: "df_scan_add_problem", scope: !3, file: !3, line: 551, type: !2036, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!2750 = !DILocation(line: 553, column: 3, scope: !2749)
!2751 = !DILocation(line: 554, column: 1, scope: !2749)
!2752 = distinct !DISubprogram(name: "df_scan_blocks", scope: !3, file: !3, line: 677, type: !2036, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!2753 = !DILocalVariable(name: "bb", scope: !2752, file: !3, line: 679, type: !1244)
!2754 = !DILocation(line: 679, column: 15, scope: !2752)
!2755 = !DILocation(line: 681, column: 3, scope: !2752)
!2756 = !DILocation(line: 681, column: 7, scope: !2752)
!2757 = !DILocation(line: 681, column: 16, scope: !2752)
!2758 = !DILocation(line: 681, column: 26, scope: !2752)
!2759 = !DILocation(line: 682, column: 3, scope: !2752)
!2760 = !DILocation(line: 682, column: 7, scope: !2752)
!2761 = !DILocation(line: 682, column: 16, scope: !2752)
!2762 = !DILocation(line: 682, column: 26, scope: !2752)
!2763 = !DILocation(line: 684, column: 41, scope: !2752)
!2764 = !DILocation(line: 684, column: 45, scope: !2752)
!2765 = !DILocation(line: 684, column: 3, scope: !2752)
!2766 = !DILocation(line: 685, column: 36, scope: !2752)
!2767 = !DILocation(line: 685, column: 40, scope: !2752)
!2768 = !DILocation(line: 685, column: 3, scope: !2752)
!2769 = !DILocation(line: 687, column: 20, scope: !2752)
!2770 = !DILocation(line: 687, column: 24, scope: !2752)
!2771 = !DILocation(line: 688, column: 6, scope: !2752)
!2772 = !DILocation(line: 688, column: 10, scope: !2752)
!2773 = !DILocation(line: 687, column: 3, scope: !2752)
!2774 = !DILocation(line: 691, column: 31, scope: !2752)
!2775 = !DILocation(line: 691, column: 35, scope: !2752)
!2776 = !DILocation(line: 691, column: 3, scope: !2752)
!2777 = !DILocation(line: 692, column: 31, scope: !2752)
!2778 = !DILocation(line: 692, column: 35, scope: !2752)
!2779 = !DILocation(line: 692, column: 3, scope: !2752)
!2780 = !DILocation(line: 693, column: 30, scope: !2752)
!2781 = !DILocation(line: 693, column: 34, scope: !2752)
!2782 = !DILocation(line: 693, column: 3, scope: !2752)
!2783 = !DILocation(line: 694, column: 30, scope: !2752)
!2784 = !DILocation(line: 694, column: 34, scope: !2752)
!2785 = !DILocation(line: 694, column: 3, scope: !2752)
!2786 = !DILocation(line: 695, column: 20, scope: !2752)
!2787 = !DILocation(line: 695, column: 3, scope: !2752)
!2788 = !DILocation(line: 696, column: 20, scope: !2752)
!2789 = !DILocation(line: 696, column: 3, scope: !2752)
!2790 = !DILocation(line: 699, column: 3, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2752, file: !3, line: 699, column: 3)
!2792 = !DILocation(line: 699, column: 3, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 699, column: 3)
!2794 = !DILocalVariable(name: "bb_index", scope: !2795, file: !3, line: 701, type: !7)
!2795 = distinct !DILexicalBlock(scope: !2793, file: !3, line: 700, column: 5)
!2796 = !DILocation(line: 701, column: 20, scope: !2795)
!2797 = !DILocation(line: 701, column: 31, scope: !2795)
!2798 = !DILocation(line: 701, column: 35, scope: !2795)
!2799 = !DILocation(line: 702, column: 26, scope: !2795)
!2800 = !DILocation(line: 702, column: 7, scope: !2795)
!2801 = !DILocation(line: 703, column: 5, scope: !2795)
!2802 = distinct !{!2802, !2790, !2803}
!2803 = !DILocation(line: 703, column: 5, scope: !2791)
!2804 = !DILocation(line: 704, column: 1, scope: !2752)
!2805 = distinct !DISubprogram(name: "df_get_regular_block_artificial_uses", scope: !3, file: !3, line: 3776, type: !2067, scopeLine: 3777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!2806 = !DILocalVariable(name: "regular_block_artificial_uses", arg: 1, scope: !2805, file: !3, line: 3776, type: !2022)
!2807 = !DILocation(line: 3776, column: 46, scope: !2805)
!2808 = !DILocation(line: 3782, column: 17, scope: !2805)
!2809 = !DILocation(line: 3782, column: 3, scope: !2805)
!2810 = !DILocation(line: 3784, column: 7, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 3784, column: 7)
!2812 = !DILocation(line: 3784, column: 7, scope: !2805)
!2813 = !DILocation(line: 3786, column: 11, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2815, file: !3, line: 3786, column: 11)
!2815 = distinct !DILexicalBlock(scope: !2811, file: !3, line: 3785, column: 5)
!2816 = !DILocation(line: 3786, column: 11, scope: !2815)
!2817 = !DILocation(line: 3787, column: 18, scope: !2814)
!2818 = !DILocation(line: 3787, column: 2, scope: !2814)
!2819 = !DILocation(line: 3788, column: 5, scope: !2815)
!2820 = !DILocation(line: 3796, column: 23, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2811, file: !3, line: 3793, column: 5)
!2822 = !DILocation(line: 3796, column: 7, scope: !2821)
!2823 = !DILocation(line: 3799, column: 23, scope: !2821)
!2824 = !DILocation(line: 3799, column: 7, scope: !2821)
!2825 = !DILocation(line: 3805, column: 11, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !2821, file: !3, line: 3805, column: 11)
!2827 = !DILocation(line: 3805, column: 11, scope: !2821)
!2828 = !DILocation(line: 3806, column: 18, scope: !2826)
!2829 = !DILocation(line: 3806, column: 2, scope: !2826)
!2830 = !DILocation(line: 3811, column: 22, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !2821, file: !3, line: 3811, column: 11)
!2832 = !DILocation(line: 3811, column: 46, scope: !2831)
!2833 = !DILocation(line: 3812, column: 4, scope: !2831)
!2834 = !DILocation(line: 3812, column: 18, scope: !2831)
!2835 = !DILocation(line: 3812, column: 7, scope: !2831)
!2836 = !DILocation(line: 3811, column: 11, scope: !2821)
!2837 = !DILocation(line: 3813, column: 18, scope: !2831)
!2838 = !DILocation(line: 3813, column: 49, scope: !2831)
!2839 = !DILocation(line: 3813, column: 2, scope: !2831)
!2840 = !DILocation(line: 3816, column: 19, scope: !2805)
!2841 = !DILocation(line: 3816, column: 3, scope: !2805)
!2842 = !DILocation(line: 3831, column: 1, scope: !2805)
!2843 = distinct !DISubprogram(name: "df_get_eh_block_artificial_uses", scope: !3, file: !3, line: 3837, type: !2067, scopeLine: 3838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!2844 = !DILocalVariable(name: "eh_block_artificial_uses", arg: 1, scope: !2843, file: !3, line: 3837, type: !2022)
!2845 = !DILocation(line: 3837, column: 41, scope: !2843)
!2846 = !DILocation(line: 3839, column: 17, scope: !2843)
!2847 = !DILocation(line: 3839, column: 3, scope: !2843)
!2848 = !DILocation(line: 3845, column: 7, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2843, file: !3, line: 3845, column: 7)
!2850 = !DILocation(line: 3845, column: 7, scope: !2843)
!2851 = !DILocation(line: 3847, column: 11, scope: !2852)
!2852 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 3847, column: 11)
!2853 = distinct !DILexicalBlock(scope: !2849, file: !3, line: 3846, column: 5)
!2854 = !DILocation(line: 3847, column: 11, scope: !2853)
!2855 = !DILocation(line: 3849, column: 20, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2852, file: !3, line: 3848, column: 2)
!2857 = !DILocation(line: 3849, column: 4, scope: !2856)
!2858 = !DILocation(line: 3851, column: 20, scope: !2856)
!2859 = !DILocation(line: 3851, column: 4, scope: !2856)
!2860 = !DILocation(line: 3853, column: 2, scope: !2856)
!2861 = !DILocation(line: 3855, column: 11, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 3855, column: 11)
!2863 = !DILocation(line: 3855, column: 11, scope: !2853)
!2864 = !DILocation(line: 3856, column: 18, scope: !2862)
!2865 = !DILocation(line: 3856, column: 2, scope: !2862)
!2866 = !DILocation(line: 3858, column: 5, scope: !2853)
!2867 = !DILocation(line: 3859, column: 1, scope: !2843)
!2868 = distinct !DISubprogram(name: "df_get_entry_block_def_set", scope: !3, file: !3, line: 3892, type: !2067, scopeLine: 3893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!2869 = !DILocalVariable(name: "entry_block_defs", arg: 1, scope: !2868, file: !3, line: 3892, type: !2022)
!2870 = !DILocation(line: 3892, column: 36, scope: !2868)
!2871 = !DILocalVariable(name: "r", scope: !2868, file: !3, line: 3894, type: !931)
!2872 = !DILocation(line: 3894, column: 7, scope: !2868)
!2873 = !DILocalVariable(name: "i", scope: !2868, file: !3, line: 3895, type: !900)
!2874 = !DILocation(line: 3895, column: 7, scope: !2868)
!2875 = !DILocation(line: 3897, column: 17, scope: !2868)
!2876 = !DILocation(line: 3897, column: 3, scope: !2868)
!2877 = !DILocation(line: 3899, column: 10, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 3899, column: 3)
!2879 = !DILocation(line: 3899, column: 8, scope: !2878)
!2880 = !DILocation(line: 3899, column: 15, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 3899, column: 3)
!2882 = !DILocation(line: 3899, column: 17, scope: !2881)
!2883 = !DILocation(line: 3899, column: 3, scope: !2878)
!2884 = !DILocation(line: 3901, column: 11, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2886, file: !3, line: 3901, column: 11)
!2886 = distinct !DILexicalBlock(scope: !2881, file: !3, line: 3900, column: 5)
!2887 = !DILocation(line: 3901, column: 11, scope: !2886)
!2888 = !DILocation(line: 3903, column: 18, scope: !2885)
!2889 = !DILocation(line: 3903, column: 36, scope: !2885)
!2890 = !DILocation(line: 3903, column: 2, scope: !2885)
!2891 = !DILocation(line: 3907, column: 5, scope: !2886)
!2892 = !DILocation(line: 3899, column: 43, scope: !2881)
!2893 = !DILocation(line: 3899, column: 3, scope: !2881)
!2894 = distinct !{!2894, !2883, !2895}
!2895 = !DILocation(line: 3907, column: 5, scope: !2878)
!2896 = !DILocation(line: 3910, column: 19, scope: !2868)
!2897 = !DILocation(line: 3910, column: 3, scope: !2868)
!2898 = !DILocation(line: 3914, column: 24, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 3914, column: 7)
!2900 = !DILocation(line: 3914, column: 7, scope: !2868)
!2901 = !DILocation(line: 3918, column: 14, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2903, file: !3, line: 3918, column: 7)
!2903 = distinct !DILexicalBlock(scope: !2899, file: !3, line: 3915, column: 5)
!2904 = !DILocation(line: 3918, column: 12, scope: !2902)
!2905 = !DILocation(line: 3918, column: 19, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2902, file: !3, line: 3918, column: 7)
!2907 = !DILocation(line: 3918, column: 21, scope: !2906)
!2908 = !DILocation(line: 3918, column: 7, scope: !2902)
!2909 = !DILocation(line: 3919, column: 22, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2906, file: !3, line: 3919, column: 6)
!2911 = !DILocation(line: 3919, column: 7, scope: !2910)
!2912 = !DILocation(line: 3919, column: 25, scope: !2910)
!2913 = !DILocation(line: 3919, column: 31, scope: !2910)
!2914 = !DILocation(line: 3919, column: 56, scope: !2910)
!2915 = !DILocation(line: 3919, column: 35, scope: !2910)
!2916 = !DILocation(line: 3919, column: 34, scope: !2910)
!2917 = !DILocation(line: 3919, column: 6, scope: !2906)
!2918 = !DILocation(line: 3920, column: 20, scope: !2910)
!2919 = !DILocation(line: 3920, column: 38, scope: !2910)
!2920 = !DILocation(line: 3920, column: 4, scope: !2910)
!2921 = !DILocation(line: 3919, column: 58, scope: !2910)
!2922 = !DILocation(line: 3918, column: 47, scope: !2906)
!2923 = !DILocation(line: 3918, column: 7, scope: !2906)
!2924 = distinct !{!2924, !2908, !2925}
!2925 = !DILocation(line: 3920, column: 39, scope: !2902)
!2926 = !DILocation(line: 3921, column: 5, scope: !2903)
!2927 = !DILocation(line: 3923, column: 21, scope: !2868)
!2928 = !DILocation(line: 3923, column: 39, scope: !2868)
!2929 = !DILocation(line: 3923, column: 7, scope: !2868)
!2930 = !DILocation(line: 3923, column: 5, scope: !2868)
!2931 = !DILocation(line: 3924, column: 7, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 3924, column: 7)
!2933 = !DILocation(line: 3924, column: 9, scope: !2932)
!2934 = !DILocation(line: 3924, column: 12, scope: !2932)
!2935 = !DILocation(line: 3924, column: 7, scope: !2868)
!2936 = !DILocation(line: 3925, column: 21, scope: !2932)
!2937 = !DILocation(line: 3925, column: 39, scope: !2932)
!2938 = !DILocation(line: 3925, column: 5, scope: !2932)
!2939 = !DILocation(line: 3929, column: 21, scope: !2868)
!2940 = !DILocation(line: 3929, column: 35, scope: !2868)
!2941 = !DILocation(line: 3929, column: 7, scope: !2868)
!2942 = !DILocation(line: 3929, column: 5, scope: !2868)
!2943 = !DILocation(line: 3930, column: 7, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 3930, column: 7)
!2945 = !DILocation(line: 3930, column: 9, scope: !2944)
!2946 = !DILocation(line: 3930, column: 12, scope: !2944)
!2947 = !DILocation(line: 3930, column: 7, scope: !2868)
!2948 = !DILocation(line: 3931, column: 21, scope: !2944)
!2949 = !DILocation(line: 3931, column: 39, scope: !2944)
!2950 = !DILocation(line: 3931, column: 5, scope: !2944)
!2951 = !DILocation(line: 3933, column: 9, scope: !2952)
!2952 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 3933, column: 7)
!2953 = !DILocation(line: 3933, column: 27, scope: !2952)
!2954 = !DILocation(line: 3933, column: 30, scope: !2952)
!2955 = !DILocation(line: 3933, column: 7, scope: !2868)
!2956 = !DILocation(line: 3937, column: 23, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2952, file: !3, line: 3934, column: 5)
!2958 = !DILocation(line: 3937, column: 7, scope: !2957)
!2959 = !DILocation(line: 3941, column: 18, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2957, file: !3, line: 3940, column: 11)
!2961 = !DILocation(line: 3941, column: 2, scope: !2960)
!2962 = !DILocation(line: 3943, column: 5, scope: !2957)
!2963 = !DILocation(line: 3946, column: 8, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 3946, column: 7)
!2965 = !DILocation(line: 3946, column: 7, scope: !2868)
!2966 = !DILocation(line: 3951, column: 11, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2968, file: !3, line: 3951, column: 11)
!2968 = distinct !DILexicalBlock(scope: !2964, file: !3, line: 3947, column: 5)
!2969 = !DILocation(line: 3951, column: 11, scope: !2968)
!2970 = !DILocation(line: 3952, column: 18, scope: !2967)
!2971 = !DILocation(line: 3952, column: 2, scope: !2967)
!2972 = !DILocation(line: 3958, column: 22, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2968, file: !3, line: 3958, column: 11)
!2974 = !DILocation(line: 3958, column: 46, scope: !2973)
!2975 = !DILocation(line: 3959, column: 4, scope: !2973)
!2976 = !DILocation(line: 3959, column: 18, scope: !2973)
!2977 = !DILocation(line: 3959, column: 7, scope: !2973)
!2978 = !DILocation(line: 3958, column: 11, scope: !2968)
!2979 = !DILocation(line: 3960, column: 18, scope: !2973)
!2980 = !DILocation(line: 3960, column: 36, scope: !2973)
!2981 = !DILocation(line: 3960, column: 2, scope: !2973)
!2982 = !DILocation(line: 3962, column: 5, scope: !2968)
!2983 = !DILocation(line: 3965, column: 7, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 3965, column: 7)
!2985 = !DILocation(line: 3965, column: 7, scope: !2868)
!2986 = !DILocation(line: 3966, column: 21, scope: !2984)
!2987 = !DILocation(line: 3966, column: 39, scope: !2984)
!2988 = !DILocation(line: 3966, column: 5, scope: !2984)
!2989 = !DILocation(line: 3969, column: 11, scope: !2868)
!2990 = !DILocation(line: 3969, column: 26, scope: !2868)
!2991 = !DILocation(line: 3969, column: 3, scope: !2868)
!2992 = !DILocation(line: 3970, column: 1, scope: !2868)
!2993 = distinct !DISubprogram(name: "df_record_entry_block_defs", scope: !3, file: !3, line: 4000, type: !2067, scopeLine: 4001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!2994 = !DILocalVariable(name: "entry_block_defs", arg: 1, scope: !2993, file: !3, line: 4000, type: !2022)
!2995 = !DILocation(line: 4000, column: 36, scope: !2993)
!2996 = !DILocalVariable(name: "collection_rec", scope: !2993, file: !3, line: 4002, type: !2997)
!2997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_collection_rec", file: !3, line: 98, size: 256, elements: !2998)
!2998 = !{!2999, !3000, !3001, !3002}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "def_vec", scope: !2997, file: !3, line: 100, baseType: !1997, size: 64)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "use_vec", scope: !2997, file: !3, line: 101, baseType: !1997, size: 64, offset: 64)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "eq_use_vec", scope: !2997, file: !3, line: 102, baseType: !1997, size: 64, offset: 128)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "mw_vec", scope: !2997, file: !3, line: 103, baseType: !2009, size: 64, offset: 192)
!3003 = !DILocation(line: 4002, column: 28, scope: !2993)
!3004 = !DILocation(line: 4003, column: 3, scope: !2993)
!3005 = !DILocation(line: 4004, column: 28, scope: !2993)
!3006 = !DILocation(line: 4004, column: 18, scope: !2993)
!3007 = !DILocation(line: 4004, column: 26, scope: !2993)
!3008 = !DILocation(line: 4005, column: 49, scope: !2993)
!3009 = !DILocation(line: 4005, column: 3, scope: !2993)
!3010 = !DILocation(line: 4008, column: 43, scope: !2993)
!3011 = !DILocation(line: 4008, column: 3, scope: !2993)
!3012 = !DILocation(line: 4009, column: 3, scope: !2993)
!3013 = !DILocation(line: 4010, column: 1, scope: !2993)
!3014 = distinct !DISubprogram(name: "df_get_exit_block_use_set", scope: !3, file: !3, line: 4054, type: !2067, scopeLine: 4055, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!3015 = !DILocalVariable(name: "exit_block_uses", arg: 1, scope: !3014, file: !3, line: 4054, type: !2022)
!3016 = !DILocation(line: 4054, column: 35, scope: !3014)
!3017 = !DILocalVariable(name: "i", scope: !3014, file: !3, line: 4056, type: !7)
!3018 = !DILocation(line: 4056, column: 16, scope: !3014)
!3019 = !DILocation(line: 4058, column: 17, scope: !3014)
!3020 = !DILocation(line: 4058, column: 3, scope: !3014)
!3021 = !DILocation(line: 4061, column: 19, scope: !3014)
!3022 = !DILocation(line: 4061, column: 3, scope: !3014)
!3023 = !DILocation(line: 4067, column: 9, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 4067, column: 7)
!3025 = !DILocation(line: 4067, column: 27, scope: !3024)
!3026 = !DILocation(line: 4067, column: 30, scope: !3024)
!3027 = !DILocation(line: 4067, column: 7, scope: !3014)
!3028 = !DILocation(line: 4069, column: 23, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 4068, column: 5)
!3030 = !DILocation(line: 4069, column: 7, scope: !3029)
!3031 = !DILocation(line: 4073, column: 18, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !3029, file: !3, line: 4072, column: 11)
!3033 = !DILocation(line: 4073, column: 2, scope: !3032)
!3034 = !DILocation(line: 4075, column: 5, scope: !3029)
!3035 = !DILocation(line: 4081, column: 18, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 4081, column: 7)
!3037 = !DILocation(line: 4081, column: 42, scope: !3036)
!3038 = !DILocation(line: 4082, column: 7, scope: !3036)
!3039 = !DILocation(line: 4082, column: 21, scope: !3036)
!3040 = !DILocation(line: 4082, column: 10, scope: !3036)
!3041 = !DILocation(line: 4081, column: 7, scope: !3014)
!3042 = !DILocation(line: 4083, column: 21, scope: !3036)
!3043 = !DILocation(line: 4083, column: 38, scope: !3036)
!3044 = !DILocation(line: 4083, column: 5, scope: !3036)
!3045 = !DILocation(line: 4089, column: 10, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 4089, column: 3)
!3047 = !DILocation(line: 4089, column: 8, scope: !3046)
!3048 = !DILocation(line: 4089, column: 15, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3046, file: !3, line: 4089, column: 3)
!3050 = !DILocation(line: 4089, column: 17, scope: !3049)
!3051 = !DILocation(line: 4089, column: 3, scope: !3046)
!3052 = !DILocation(line: 4090, column: 21, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3049, file: !3, line: 4090, column: 9)
!3054 = !DILocation(line: 4090, column: 9, scope: !3053)
!3055 = !DILocation(line: 4090, column: 9, scope: !3049)
!3056 = !DILocation(line: 4091, column: 23, scope: !3053)
!3057 = !DILocation(line: 4091, column: 40, scope: !3053)
!3058 = !DILocation(line: 4091, column: 7, scope: !3053)
!3059 = !DILocation(line: 4090, column: 27, scope: !3053)
!3060 = !DILocation(line: 4089, column: 43, scope: !3049)
!3061 = !DILocation(line: 4089, column: 3, scope: !3049)
!3062 = distinct !{!3062, !3051, !3063}
!3063 = !DILocation(line: 4091, column: 41, scope: !3046)
!3064 = !DILocation(line: 4093, column: 24, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 4093, column: 7)
!3066 = !DILocation(line: 4093, column: 7, scope: !3014)
!3067 = !DILocation(line: 4096, column: 14, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !3069, file: !3, line: 4096, column: 7)
!3069 = distinct !DILexicalBlock(scope: !3065, file: !3, line: 4094, column: 5)
!3070 = !DILocation(line: 4096, column: 12, scope: !3068)
!3071 = !DILocation(line: 4096, column: 19, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3068, file: !3, line: 4096, column: 7)
!3073 = !DILocation(line: 4096, column: 21, scope: !3072)
!3074 = !DILocation(line: 4096, column: 7, scope: !3068)
!3075 = !DILocation(line: 4097, column: 27, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3072, file: !3, line: 4097, column: 6)
!3077 = !DILocation(line: 4097, column: 6, scope: !3076)
!3078 = !DILocation(line: 4098, column: 6, scope: !3076)
!3079 = !DILocation(line: 4098, column: 10, scope: !3076)
!3080 = !DILocation(line: 4097, column: 6, scope: !3072)
!3081 = !DILocation(line: 4099, column: 20, scope: !3076)
!3082 = !DILocation(line: 4099, column: 37, scope: !3076)
!3083 = !DILocation(line: 4099, column: 4, scope: !3076)
!3084 = !DILocation(line: 4096, column: 47, scope: !3072)
!3085 = !DILocation(line: 4096, column: 7, scope: !3072)
!3086 = distinct !{!3086, !3074, !3087}
!3087 = !DILocation(line: 4099, column: 38, scope: !3068)
!3088 = !DILocation(line: 4100, column: 5, scope: !3069)
!3089 = !DILocation(line: 4104, column: 7, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 4104, column: 7)
!3091 = !DILocation(line: 4104, column: 24, scope: !3090)
!3092 = !DILocation(line: 4104, column: 33, scope: !3090)
!3093 = !DILocation(line: 4104, column: 27, scope: !3090)
!3094 = !DILocation(line: 4104, column: 7, scope: !3014)
!3095 = !DILocation(line: 4105, column: 12, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3090, file: !3, line: 4105, column: 5)
!3097 = !DILocation(line: 4105, column: 10, scope: !3096)
!3098 = !DILocalVariable(name: "regno", scope: !3099, file: !3, line: 4107, type: !7)
!3099 = distinct !DILexicalBlock(scope: !3100, file: !3, line: 4106, column: 7)
!3100 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 4105, column: 5)
!3101 = !DILocation(line: 4107, column: 11, scope: !3099)
!3102 = !DILocation(line: 4107, column: 19, scope: !3099)
!3103 = !DILocation(line: 4108, column: 6, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3099, file: !3, line: 4108, column: 6)
!3105 = !DILocation(line: 4108, column: 12, scope: !3104)
!3106 = !DILocation(line: 4108, column: 6, scope: !3099)
!3107 = !DILocation(line: 4109, column: 4, scope: !3104)
!3108 = !DILocation(line: 4110, column: 18, scope: !3099)
!3109 = !DILocation(line: 4110, column: 35, scope: !3099)
!3110 = !DILocation(line: 4110, column: 2, scope: !3099)
!3111 = !DILocation(line: 4111, column: 7, scope: !3099)
!3112 = !DILocation(line: 4105, column: 19, scope: !3100)
!3113 = !DILocation(line: 4105, column: 5, scope: !3100)
!3114 = distinct !{!3114, !3115, !3116}
!3115 = !DILocation(line: 4105, column: 5, scope: !3096)
!3116 = !DILocation(line: 4111, column: 7, scope: !3096)
!3117 = !DILocation(line: 4115, column: 28, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 4115, column: 7)
!3119 = !DILocation(line: 4116, column: 7, scope: !3118)
!3120 = !DILocation(line: 4116, column: 16, scope: !3118)
!3121 = !DILocation(line: 4116, column: 10, scope: !3118)
!3122 = !DILocation(line: 4115, column: 7, scope: !3014)
!3123 = !DILocalVariable(name: "tmp", scope: !3124, file: !3, line: 4118, type: !931)
!3124 = distinct !DILexicalBlock(scope: !3118, file: !3, line: 4117, column: 5)
!3125 = !DILocation(line: 4118, column: 11, scope: !3124)
!3126 = !DILocation(line: 4118, column: 17, scope: !3124)
!3127 = !DILocation(line: 4119, column: 11, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 4119, column: 11)
!3129 = !DILocation(line: 4119, column: 15, scope: !3128)
!3130 = !DILocation(line: 4119, column: 18, scope: !3128)
!3131 = !DILocation(line: 4119, column: 11, scope: !3124)
!3132 = !DILocation(line: 4120, column: 15, scope: !3128)
!3133 = !DILocation(line: 4120, column: 20, scope: !3128)
!3134 = !DILocation(line: 4120, column: 2, scope: !3128)
!3135 = !DILocation(line: 4121, column: 5, scope: !3124)
!3136 = !DILocation(line: 4135, column: 45, scope: !3014)
!3137 = !DILocation(line: 4135, column: 37, scope: !3014)
!3138 = !DILocation(line: 4135, column: 3, scope: !3014)
!3139 = !DILocation(line: 4136, column: 1, scope: !3014)
!3140 = distinct !DISubprogram(name: "df_record_exit_block_uses", scope: !3, file: !3, line: 4171, type: !2067, scopeLine: 4172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!3141 = !DILocalVariable(name: "exit_block_uses", arg: 1, scope: !3140, file: !3, line: 4171, type: !2022)
!3142 = !DILocation(line: 4171, column: 35, scope: !3140)
!3143 = !DILocalVariable(name: "collection_rec", scope: !3140, file: !3, line: 4173, type: !2997)
!3144 = !DILocation(line: 4173, column: 28, scope: !3140)
!3145 = !DILocation(line: 4174, column: 3, scope: !3140)
!3146 = !DILocation(line: 4175, column: 28, scope: !3140)
!3147 = !DILocation(line: 4175, column: 18, scope: !3140)
!3148 = !DILocation(line: 4175, column: 26, scope: !3140)
!3149 = !DILocation(line: 4177, column: 48, scope: !3140)
!3150 = !DILocation(line: 4177, column: 3, scope: !3140)
!3151 = !DILocation(line: 4180, column: 43, scope: !3140)
!3152 = !DILocation(line: 4180, column: 3, scope: !3140)
!3153 = !DILocation(line: 4181, column: 3, scope: !3140)
!3154 = !DILocation(line: 4182, column: 1, scope: !3140)
!3155 = distinct !DISubprogram(name: "VEC_basic_block_base_index", scope: !135, file: !135, line: 281, type: !3156, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!3156 = !DISubroutineType(types: !3157)
!3157 = !{!1244, !3158, !7}
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3159, size: 64)
!3159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1325)
!3160 = !DILocalVariable(name: "vec_", arg: 1, scope: !3155, file: !135, line: 281, type: !3158)
!3161 = !DILocation(line: 281, column: 1, scope: !3155)
!3162 = !DILocalVariable(name: "ix_", arg: 2, scope: !3155, file: !135, line: 281, type: !7)
!3163 = !DILocation(line: 0, scope: !3155)
!3164 = distinct !DISubprogram(name: "df_bb_refs_record", scope: !3, file: !3, line: 3712, type: !3165, scopeLine: 3713, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!3165 = !DISubroutineType(types: !3166)
!3166 = !{null, !900, !1099}
!3167 = !DILocalVariable(name: "bb_index", arg: 1, scope: !3164, file: !3, line: 3712, type: !900)
!3168 = !DILocation(line: 3712, column: 24, scope: !3164)
!3169 = !DILocalVariable(name: "scan_insns", arg: 2, scope: !3164, file: !3, line: 3712, type: !1099)
!3170 = !DILocation(line: 3712, column: 39, scope: !3164)
!3171 = !DILocalVariable(name: "bb", scope: !3164, file: !3, line: 3714, type: !1244)
!3172 = !DILocation(line: 3714, column: 15, scope: !3164)
!3173 = !DILocation(line: 3714, column: 20, scope: !3164)
!3174 = !DILocalVariable(name: "insn", scope: !3164, file: !3, line: 3715, type: !931)
!3175 = !DILocation(line: 3715, column: 7, scope: !3164)
!3176 = !DILocalVariable(name: "luid", scope: !3164, file: !3, line: 3716, type: !900)
!3177 = !DILocation(line: 3716, column: 7, scope: !3164)
!3178 = !DILocalVariable(name: "bb_info", scope: !3164, file: !3, line: 3717, type: !915)
!3179 = !DILocation(line: 3717, column: 27, scope: !3164)
!3180 = !DILocalVariable(name: "collection_rec", scope: !3164, file: !3, line: 3718, type: !2997)
!3181 = !DILocation(line: 3718, column: 28, scope: !3164)
!3182 = !DILocation(line: 3720, column: 8, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3164, file: !3, line: 3720, column: 7)
!3184 = !DILocation(line: 3720, column: 7, scope: !3164)
!3185 = !DILocation(line: 3721, column: 5, scope: !3183)
!3186 = !DILocation(line: 3723, column: 34, scope: !3164)
!3187 = !DILocation(line: 3723, column: 13, scope: !3164)
!3188 = !DILocation(line: 3723, column: 11, scope: !3164)
!3189 = !DILocation(line: 3726, column: 8, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3164, file: !3, line: 3726, column: 7)
!3191 = !DILocation(line: 3726, column: 7, scope: !3164)
!3192 = !DILocation(line: 3728, column: 56, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !3190, file: !3, line: 3727, column: 5)
!3194 = !DILocation(line: 3728, column: 65, scope: !3193)
!3195 = !DILocation(line: 3728, column: 44, scope: !3193)
!3196 = !DILocation(line: 3728, column: 17, scope: !3193)
!3197 = !DILocation(line: 3728, column: 15, scope: !3193)
!3198 = !DILocation(line: 3729, column: 28, scope: !3193)
!3199 = !DILocation(line: 3729, column: 38, scope: !3193)
!3200 = !DILocation(line: 3729, column: 7, scope: !3193)
!3201 = !DILocation(line: 3730, column: 7, scope: !3193)
!3202 = !DILocation(line: 3730, column: 16, scope: !3193)
!3203 = !DILocation(line: 3730, column: 32, scope: !3193)
!3204 = !DILocation(line: 3731, column: 7, scope: !3193)
!3205 = !DILocation(line: 3731, column: 16, scope: !3193)
!3206 = !DILocation(line: 3731, column: 32, scope: !3193)
!3207 = !DILocation(line: 3732, column: 5, scope: !3193)
!3208 = !DILocation(line: 3734, column: 28, scope: !3164)
!3209 = !DILocation(line: 3734, column: 18, scope: !3164)
!3210 = !DILocation(line: 3734, column: 26, scope: !3164)
!3211 = !DILocation(line: 3735, column: 28, scope: !3164)
!3212 = !DILocation(line: 3735, column: 18, scope: !3164)
!3213 = !DILocation(line: 3735, column: 26, scope: !3164)
!3214 = !DILocation(line: 3736, column: 31, scope: !3164)
!3215 = !DILocation(line: 3736, column: 18, scope: !3164)
!3216 = !DILocation(line: 3736, column: 29, scope: !3164)
!3217 = !DILocation(line: 3737, column: 27, scope: !3164)
!3218 = !DILocation(line: 3737, column: 18, scope: !3164)
!3219 = !DILocation(line: 3737, column: 25, scope: !3164)
!3220 = !DILocation(line: 3739, column: 7, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3164, file: !3, line: 3739, column: 7)
!3222 = !DILocation(line: 3739, column: 7, scope: !3164)
!3223 = !DILocation(line: 3741, column: 5, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3221, file: !3, line: 3741, column: 5)
!3225 = !DILocation(line: 3741, column: 5, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3224, file: !3, line: 3741, column: 5)
!3227 = !DILocation(line: 0, scope: !3226)
!3228 = !DILocalVariable(name: "insn_info", scope: !3229, file: !3, line: 3743, type: !1946)
!3229 = distinct !DILexicalBlock(scope: !3226, file: !3, line: 3742, column: 7)
!3230 = !DILocation(line: 3743, column: 23, scope: !3229)
!3231 = !DILocation(line: 3743, column: 35, scope: !3229)
!3232 = !DILocation(line: 3744, column: 2, scope: !3229)
!3233 = !DILocation(line: 3746, column: 42, scope: !3229)
!3234 = !DILocation(line: 3746, column: 14, scope: !3229)
!3235 = !DILocation(line: 3746, column: 12, scope: !3229)
!3236 = !DILocation(line: 3747, column: 6, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3229, file: !3, line: 3747, column: 6)
!3238 = !DILocation(line: 3747, column: 6, scope: !3229)
!3239 = !DILocation(line: 3750, column: 42, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 3748, column: 4)
!3241 = !DILocation(line: 3750, column: 6, scope: !3240)
!3242 = !DILocation(line: 3750, column: 36, scope: !3240)
!3243 = !DILocation(line: 3751, column: 45, scope: !3240)
!3244 = !DILocation(line: 3751, column: 49, scope: !3240)
!3245 = !DILocation(line: 3751, column: 6, scope: !3240)
!3246 = !DILocation(line: 3752, column: 46, scope: !3240)
!3247 = !DILocation(line: 3752, column: 50, scope: !3240)
!3248 = !DILocation(line: 3752, column: 6, scope: !3240)
!3249 = !DILocation(line: 3753, column: 4, scope: !3240)
!3250 = !DILocation(line: 3754, column: 34, scope: !3229)
!3251 = !DILocation(line: 3754, column: 2, scope: !3229)
!3252 = !DILocation(line: 3754, column: 32, scope: !3229)
!3253 = !DILocation(line: 3755, column: 7, scope: !3229)
!3254 = distinct !{!3254, !3223, !3255}
!3255 = !DILocation(line: 3755, column: 7, scope: !3224)
!3256 = !DILocation(line: 3758, column: 40, scope: !3164)
!3257 = !DILocation(line: 3758, column: 3, scope: !3164)
!3258 = !DILocation(line: 3759, column: 43, scope: !3164)
!3259 = !DILocation(line: 3759, column: 3, scope: !3164)
!3260 = !DILocation(line: 3761, column: 3, scope: !3164)
!3261 = !DILocation(line: 3762, column: 3, scope: !3164)
!3262 = !DILocation(line: 3763, column: 3, scope: !3164)
!3263 = !DILocation(line: 3764, column: 3, scope: !3164)
!3264 = !DILocation(line: 3768, column: 20, scope: !3164)
!3265 = !DILocation(line: 3768, column: 3, scope: !3164)
!3266 = !DILocation(line: 3769, column: 1, scope: !3164)
!3267 = distinct !DISubprogram(name: "df_ref_create", scope: !3, file: !3, line: 716, type: !3268, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!3268 = !DISubroutineType(types: !3269)
!3269 = !{!920, !931, !1975, !931, !1244, !387, !900, !900, !900, !5}
!3270 = !DILocalVariable(name: "reg", arg: 1, scope: !3267, file: !3, line: 716, type: !931)
!3271 = !DILocation(line: 716, column: 20, scope: !3267)
!3272 = !DILocalVariable(name: "loc", arg: 2, scope: !3267, file: !3, line: 716, type: !1975)
!3273 = !DILocation(line: 716, column: 30, scope: !3267)
!3274 = !DILocalVariable(name: "insn", arg: 3, scope: !3267, file: !3, line: 716, type: !931)
!3275 = !DILocation(line: 716, column: 39, scope: !3267)
!3276 = !DILocalVariable(name: "bb", arg: 4, scope: !3267, file: !3, line: 717, type: !1244)
!3277 = !DILocation(line: 717, column: 21, scope: !3267)
!3278 = !DILocalVariable(name: "ref_type", arg: 5, scope: !3267, file: !3, line: 718, type: !387)
!3279 = !DILocation(line: 718, column: 26, scope: !3267)
!3280 = !DILocalVariable(name: "ref_flags", arg: 6, scope: !3267, file: !3, line: 719, type: !900)
!3281 = !DILocation(line: 719, column: 13, scope: !3267)
!3282 = !DILocalVariable(name: "width", arg: 7, scope: !3267, file: !3, line: 720, type: !900)
!3283 = !DILocation(line: 720, column: 13, scope: !3267)
!3284 = !DILocalVariable(name: "offset", arg: 8, scope: !3267, file: !3, line: 720, type: !900)
!3285 = !DILocation(line: 720, column: 24, scope: !3267)
!3286 = !DILocalVariable(name: "mode", arg: 9, scope: !3267, file: !3, line: 720, type: !5)
!3287 = !DILocation(line: 720, column: 50, scope: !3267)
!3288 = !DILocalVariable(name: "ref", scope: !3267, file: !3, line: 722, type: !920)
!3289 = !DILocation(line: 722, column: 10, scope: !3267)
!3290 = !DILocalVariable(name: "reg_info", scope: !3267, file: !3, line: 723, type: !1989)
!3291 = !DILocation(line: 723, column: 24, scope: !3267)
!3292 = !DILocalVariable(name: "ref_info", scope: !3267, file: !3, line: 724, type: !3293)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 64)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_ref_info", file: !378, line: 489, size: 320, elements: !3295)
!3295 = !{!3296, !3297, !3298, !3299, !3300, !3301, !3302}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !3294, file: !378, line: 491, baseType: !919, size: 64)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !3294, file: !378, line: 492, baseType: !1995, size: 64, offset: 64)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3294, file: !378, line: 493, baseType: !1995, size: 64, offset: 128)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "refs_size", scope: !3294, file: !378, line: 494, baseType: !7, size: 32, offset: 192)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !3294, file: !378, line: 502, baseType: !7, size: 32, offset: 224)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "total_size", scope: !3294, file: !378, line: 503, baseType: !7, size: 32, offset: 256)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "ref_order", scope: !3294, file: !378, line: 505, baseType: !377, size: 32, offset: 288)
!3303 = !DILocation(line: 724, column: 23, scope: !3267)
!3304 = !DILocalVariable(name: "ref_rec", scope: !3267, file: !3, line: 725, type: !919)
!3305 = !DILocation(line: 725, column: 11, scope: !3267)
!3306 = !DILocalVariable(name: "ref_rec_ptr", scope: !3267, file: !3, line: 726, type: !3307)
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!3308 = !DILocation(line: 726, column: 12, scope: !3267)
!3309 = !DILocalVariable(name: "count", scope: !3267, file: !3, line: 727, type: !7)
!3310 = !DILocation(line: 727, column: 16, scope: !3267)
!3311 = !DILocalVariable(name: "add_to_table", scope: !3267, file: !3, line: 728, type: !1099)
!3312 = !DILocation(line: 728, column: 8, scope: !3267)
!3313 = !DILocalVariable(name: "cl", scope: !3267, file: !3, line: 729, type: !393)
!3314 = !DILocation(line: 729, column: 21, scope: !3267)
!3315 = !DILocation(line: 731, column: 3, scope: !3267)
!3316 = !DILocation(line: 734, column: 3, scope: !3267)
!3317 = !DILocation(line: 736, column: 7, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 736, column: 7)
!3319 = !DILocation(line: 736, column: 13, scope: !3318)
!3320 = !DILocation(line: 736, column: 19, scope: !3318)
!3321 = !DILocation(line: 736, column: 22, scope: !3318)
!3322 = !DILocation(line: 736, column: 29, scope: !3318)
!3323 = !DILocation(line: 736, column: 7, scope: !3267)
!3324 = !DILocation(line: 737, column: 8, scope: !3318)
!3325 = !DILocation(line: 737, column: 5, scope: !3318)
!3326 = !DILocation(line: 738, column: 12, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 738, column: 12)
!3328 = !DILocation(line: 738, column: 12, scope: !3318)
!3329 = !DILocation(line: 739, column: 8, scope: !3327)
!3330 = !DILocation(line: 739, column: 5, scope: !3327)
!3331 = !DILocation(line: 741, column: 8, scope: !3327)
!3332 = !DILocation(line: 742, column: 34, scope: !3267)
!3333 = !DILocation(line: 742, column: 44, scope: !3267)
!3334 = !DILocation(line: 742, column: 49, scope: !3267)
!3335 = !DILocation(line: 742, column: 54, scope: !3267)
!3336 = !DILocation(line: 742, column: 58, scope: !3267)
!3337 = !DILocation(line: 743, column: 34, scope: !3267)
!3338 = !DILocation(line: 743, column: 44, scope: !3267)
!3339 = !DILocation(line: 744, column: 6, scope: !3267)
!3340 = !DILocation(line: 744, column: 13, scope: !3267)
!3341 = !DILocation(line: 744, column: 21, scope: !3267)
!3342 = !DILocation(line: 742, column: 9, scope: !3267)
!3343 = !DILocation(line: 742, column: 7, scope: !3267)
!3344 = !DILocation(line: 746, column: 7, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 746, column: 7)
!3346 = !DILocation(line: 746, column: 7, scope: !3267)
!3347 = !DILocation(line: 748, column: 18, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 747, column: 5)
!3349 = !DILocation(line: 748, column: 22, scope: !3348)
!3350 = !DILocation(line: 748, column: 16, scope: !3348)
!3351 = !DILocation(line: 749, column: 19, scope: !3348)
!3352 = !DILocation(line: 749, column: 23, scope: !3348)
!3353 = !DILocation(line: 749, column: 16, scope: !3348)
!3354 = !DILocation(line: 750, column: 22, scope: !3348)
!3355 = !DILocation(line: 750, column: 19, scope: !3348)
!3356 = !DILocation(line: 751, column: 22, scope: !3348)
!3357 = !DILocation(line: 751, column: 32, scope: !3348)
!3358 = !DILocation(line: 751, column: 42, scope: !3348)
!3359 = !DILocation(line: 751, column: 20, scope: !3348)
!3360 = !DILocation(line: 752, column: 5, scope: !3348)
!3361 = !DILocation(line: 753, column: 12, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 753, column: 12)
!3363 = !DILocation(line: 753, column: 31, scope: !3362)
!3364 = !DILocation(line: 753, column: 12, scope: !3345)
!3365 = !DILocation(line: 755, column: 18, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 754, column: 5)
!3367 = !DILocation(line: 755, column: 22, scope: !3366)
!3368 = !DILocation(line: 755, column: 16, scope: !3366)
!3369 = !DILocation(line: 756, column: 19, scope: !3366)
!3370 = !DILocation(line: 756, column: 23, scope: !3366)
!3371 = !DILocation(line: 756, column: 16, scope: !3366)
!3372 = !DILocation(line: 757, column: 22, scope: !3366)
!3373 = !DILocation(line: 757, column: 19, scope: !3366)
!3374 = !DILocation(line: 758, column: 15, scope: !3366)
!3375 = !DILocation(line: 758, column: 25, scope: !3366)
!3376 = !DILocation(line: 758, column: 7, scope: !3366)
!3377 = !DILocation(line: 763, column: 17, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3366, file: !3, line: 759, column: 2)
!3379 = !DILocation(line: 764, column: 4, scope: !3378)
!3380 = !DILocation(line: 766, column: 17, scope: !3378)
!3381 = !DILocation(line: 767, column: 4, scope: !3378)
!3382 = !DILocation(line: 769, column: 5, scope: !3366)
!3383 = !DILocation(line: 772, column: 18, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 771, column: 5)
!3385 = !DILocation(line: 772, column: 22, scope: !3384)
!3386 = !DILocation(line: 772, column: 16, scope: !3384)
!3387 = !DILocation(line: 773, column: 19, scope: !3384)
!3388 = !DILocation(line: 773, column: 23, scope: !3384)
!3389 = !DILocation(line: 773, column: 16, scope: !3384)
!3390 = !DILocation(line: 774, column: 22, scope: !3384)
!3391 = !DILocation(line: 774, column: 19, scope: !3384)
!3392 = !DILocation(line: 775, column: 22, scope: !3384)
!3393 = !DILocation(line: 775, column: 32, scope: !3384)
!3394 = !DILocation(line: 775, column: 42, scope: !3384)
!3395 = !DILocation(line: 775, column: 20, scope: !3384)
!3396 = !DILocation(line: 779, column: 7, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 779, column: 7)
!3398 = !DILocation(line: 779, column: 20, scope: !3397)
!3399 = !DILocation(line: 779, column: 23, scope: !3397)
!3400 = !DILocation(line: 779, column: 27, scope: !3397)
!3401 = !DILocation(line: 779, column: 7, scope: !3267)
!3402 = !DILocation(line: 780, column: 34, scope: !3397)
!3403 = !DILocation(line: 780, column: 38, scope: !3397)
!3404 = !DILocation(line: 780, column: 57, scope: !3397)
!3405 = !DILocation(line: 780, column: 61, scope: !3397)
!3406 = !DILocation(line: 780, column: 20, scope: !3397)
!3407 = !DILocation(line: 780, column: 18, scope: !3397)
!3408 = !DILocation(line: 780, column: 5, scope: !3397)
!3409 = !DILocation(line: 782, column: 19, scope: !3267)
!3410 = !DILocation(line: 782, column: 24, scope: !3267)
!3411 = !DILocation(line: 782, column: 33, scope: !3267)
!3412 = !DILocation(line: 782, column: 54, scope: !3267)
!3413 = !DILocation(line: 782, column: 64, scope: !3267)
!3414 = !DILocation(line: 782, column: 3, scope: !3267)
!3415 = !DILocation(line: 784, column: 7, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 784, column: 7)
!3417 = !DILocation(line: 784, column: 7, scope: !3267)
!3418 = !DILocation(line: 785, column: 13, scope: !3416)
!3419 = !DILocation(line: 785, column: 23, scope: !3416)
!3420 = !DILocation(line: 785, column: 5, scope: !3416)
!3421 = !DILocation(line: 790, column: 2, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3416, file: !3, line: 786, column: 7)
!3423 = !DILocation(line: 790, column: 12, scope: !3422)
!3424 = !DILocation(line: 790, column: 22, scope: !3422)
!3425 = !DILocation(line: 791, column: 2, scope: !3422)
!3426 = !DILocation(line: 793, column: 2, scope: !3422)
!3427 = !DILocation(line: 793, column: 12, scope: !3422)
!3428 = !DILocation(line: 793, column: 22, scope: !3422)
!3429 = !DILocation(line: 794, column: 2, scope: !3422)
!3430 = !DILocation(line: 795, column: 7, scope: !3422)
!3431 = !DILocation(line: 797, column: 14, scope: !3267)
!3432 = !DILocation(line: 797, column: 13, scope: !3267)
!3433 = !DILocation(line: 797, column: 11, scope: !3267)
!3434 = !DILocation(line: 798, column: 3, scope: !3267)
!3435 = !DILocation(line: 798, column: 11, scope: !3267)
!3436 = !DILocation(line: 798, column: 10, scope: !3267)
!3437 = !DILocation(line: 800, column: 12, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 799, column: 5)
!3439 = !DILocation(line: 801, column: 14, scope: !3438)
!3440 = distinct !{!3440, !3434, !3441}
!3441 = !DILocation(line: 802, column: 5, scope: !3267)
!3442 = !DILocation(line: 804, column: 14, scope: !3267)
!3443 = !DILocation(line: 804, column: 13, scope: !3267)
!3444 = !DILocation(line: 804, column: 11, scope: !3267)
!3445 = !DILocation(line: 805, column: 7, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 805, column: 7)
!3447 = !DILocation(line: 805, column: 7, scope: !3267)
!3448 = !DILocation(line: 807, column: 17, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 806, column: 5)
!3450 = !DILocation(line: 807, column: 15, scope: !3449)
!3451 = !DILocation(line: 808, column: 22, scope: !3449)
!3452 = !DILocation(line: 808, column: 8, scope: !3449)
!3453 = !DILocation(line: 808, column: 20, scope: !3449)
!3454 = !DILocation(line: 809, column: 24, scope: !3449)
!3455 = !DILocation(line: 809, column: 7, scope: !3449)
!3456 = !DILocation(line: 809, column: 15, scope: !3449)
!3457 = !DILocation(line: 809, column: 22, scope: !3449)
!3458 = !DILocation(line: 810, column: 7, scope: !3449)
!3459 = !DILocation(line: 810, column: 15, scope: !3449)
!3460 = !DILocation(line: 810, column: 20, scope: !3449)
!3461 = !DILocation(line: 810, column: 24, scope: !3449)
!3462 = !DILocation(line: 812, column: 19, scope: !3449)
!3463 = !DILocation(line: 812, column: 28, scope: !3449)
!3464 = !DILocation(line: 812, column: 34, scope: !3449)
!3465 = !DILocation(line: 812, column: 7, scope: !3449)
!3466 = !DILocation(line: 816, column: 5, scope: !3449)
!3467 = !DILocalVariable(name: "ref_rec", scope: !3468, file: !3, line: 819, type: !919)
!3468 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 818, column: 5)
!3469 = !DILocation(line: 819, column: 15, scope: !3468)
!3470 = !DILocation(line: 819, column: 25, scope: !3468)
!3471 = !DILocation(line: 820, column: 20, scope: !3468)
!3472 = !DILocation(line: 820, column: 7, scope: !3468)
!3473 = !DILocation(line: 820, column: 18, scope: !3468)
!3474 = !DILocation(line: 821, column: 7, scope: !3468)
!3475 = !DILocation(line: 821, column: 18, scope: !3468)
!3476 = !DILocation(line: 822, column: 22, scope: !3468)
!3477 = !DILocation(line: 822, column: 8, scope: !3468)
!3478 = !DILocation(line: 822, column: 20, scope: !3468)
!3479 = !DILocation(line: 835, column: 8, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 835, column: 7)
!3481 = !DILocation(line: 835, column: 7, scope: !3267)
!3482 = !DILocation(line: 836, column: 22, scope: !3480)
!3483 = !DILocation(line: 836, column: 5, scope: !3480)
!3484 = !DILocation(line: 838, column: 10, scope: !3267)
!3485 = !DILocation(line: 838, column: 3, scope: !3267)
!3486 = distinct !DISubprogram(name: "df_ref_create_structure", scope: !3, file: !3, line: 2810, type: !3487, scopeLine: 2817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!3487 = !DISubroutineType(types: !3488)
!3488 = !{!920, !393, !3489, !931, !1975, !1244, !1946, !387, !900, !900, !900, !5}
!3489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!3490 = !DILocalVariable(name: "cl", arg: 1, scope: !3486, file: !3, line: 2810, type: !393)
!3491 = !DILocation(line: 2810, column: 44, scope: !3486)
!3492 = !DILocalVariable(name: "collection_rec", arg: 2, scope: !3486, file: !3, line: 2811, type: !3489)
!3493 = !DILocation(line: 2811, column: 31, scope: !3486)
!3494 = !DILocalVariable(name: "reg", arg: 3, scope: !3486, file: !3, line: 2812, type: !931)
!3495 = !DILocation(line: 2812, column: 9, scope: !3486)
!3496 = !DILocalVariable(name: "loc", arg: 4, scope: !3486, file: !3, line: 2812, type: !1975)
!3497 = !DILocation(line: 2812, column: 19, scope: !3486)
!3498 = !DILocalVariable(name: "bb", arg: 5, scope: !3486, file: !3, line: 2813, type: !1244)
!3499 = !DILocation(line: 2813, column: 17, scope: !3486)
!3500 = !DILocalVariable(name: "info", arg: 6, scope: !3486, file: !3, line: 2813, type: !1946)
!3501 = !DILocation(line: 2813, column: 42, scope: !3486)
!3502 = !DILocalVariable(name: "ref_type", arg: 7, scope: !3486, file: !3, line: 2814, type: !387)
!3503 = !DILocation(line: 2814, column: 22, scope: !3486)
!3504 = !DILocalVariable(name: "ref_flags", arg: 8, scope: !3486, file: !3, line: 2815, type: !900)
!3505 = !DILocation(line: 2815, column: 9, scope: !3486)
!3506 = !DILocalVariable(name: "width", arg: 9, scope: !3486, file: !3, line: 2816, type: !900)
!3507 = !DILocation(line: 2816, column: 9, scope: !3486)
!3508 = !DILocalVariable(name: "offset", arg: 10, scope: !3486, file: !3, line: 2816, type: !900)
!3509 = !DILocation(line: 2816, column: 20, scope: !3486)
!3510 = !DILocalVariable(name: "mode", arg: 11, scope: !3486, file: !3, line: 2816, type: !5)
!3511 = !DILocation(line: 2816, column: 46, scope: !3486)
!3512 = !DILocalVariable(name: "this_ref", scope: !3486, file: !3, line: 2818, type: !920)
!3513 = !DILocation(line: 2818, column: 10, scope: !3486)
!3514 = !DILocalVariable(name: "regno", scope: !3486, file: !3, line: 2819, type: !900)
!3515 = !DILocation(line: 2819, column: 7, scope: !3486)
!3516 = !DILocation(line: 2819, column: 15, scope: !3486)
!3517 = !DILocalVariable(name: "problem_data", scope: !3486, file: !3, line: 2820, type: !813)
!3518 = !DILocation(line: 2820, column: 32, scope: !3486)
!3519 = !DILocation(line: 2821, column: 39, scope: !3486)
!3520 = !DILocation(line: 2821, column: 48, scope: !3486)
!3521 = !DILocation(line: 2821, column: 7, scope: !3486)
!3522 = !DILocation(line: 2823, column: 11, scope: !3486)
!3523 = !DILocation(line: 2823, column: 3, scope: !3486)
!3524 = !DILocation(line: 2826, column: 39, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 2824, column: 5)
!3526 = !DILocation(line: 2826, column: 53, scope: !3525)
!3527 = !DILocation(line: 2826, column: 27, scope: !3525)
!3528 = !DILocation(line: 2826, column: 18, scope: !3525)
!3529 = !DILocation(line: 2826, column: 16, scope: !3525)
!3530 = !DILocation(line: 2827, column: 7, scope: !3525)
!3531 = !DILocation(line: 2828, column: 7, scope: !3525)
!3532 = !DILocation(line: 2831, column: 39, scope: !3525)
!3533 = !DILocation(line: 2831, column: 53, scope: !3525)
!3534 = !DILocation(line: 2831, column: 27, scope: !3525)
!3535 = !DILocation(line: 2831, column: 18, scope: !3525)
!3536 = !DILocation(line: 2831, column: 16, scope: !3525)
!3537 = !DILocation(line: 2832, column: 37, scope: !3525)
!3538 = !DILocation(line: 2832, column: 7, scope: !3525)
!3539 = !DILocation(line: 2832, column: 17, scope: !3525)
!3540 = !DILocation(line: 2832, column: 32, scope: !3525)
!3541 = !DILocation(line: 2832, column: 35, scope: !3525)
!3542 = !DILocation(line: 2833, column: 7, scope: !3525)
!3543 = !DILocation(line: 2834, column: 7, scope: !3525)
!3544 = !DILocation(line: 2837, column: 39, scope: !3525)
!3545 = !DILocation(line: 2837, column: 53, scope: !3525)
!3546 = !DILocation(line: 2837, column: 27, scope: !3525)
!3547 = !DILocation(line: 2837, column: 18, scope: !3525)
!3548 = !DILocation(line: 2837, column: 16, scope: !3525)
!3549 = !DILocation(line: 2838, column: 35, scope: !3525)
!3550 = !DILocation(line: 2838, column: 7, scope: !3525)
!3551 = !DILocation(line: 2838, column: 17, scope: !3525)
!3552 = !DILocation(line: 2838, column: 29, scope: !3525)
!3553 = !DILocation(line: 2838, column: 33, scope: !3525)
!3554 = !DILocation(line: 2839, column: 7, scope: !3525)
!3555 = !DILocation(line: 2840, column: 7, scope: !3525)
!3556 = !DILocation(line: 2843, column: 39, scope: !3525)
!3557 = !DILocation(line: 2843, column: 53, scope: !3525)
!3558 = !DILocation(line: 2843, column: 27, scope: !3525)
!3559 = !DILocation(line: 2843, column: 18, scope: !3525)
!3560 = !DILocation(line: 2843, column: 16, scope: !3525)
!3561 = !DILocation(line: 2844, column: 41, scope: !3525)
!3562 = !DILocation(line: 2844, column: 7, scope: !3525)
!3563 = !DILocation(line: 2844, column: 39, scope: !3525)
!3564 = !DILocation(line: 2845, column: 42, scope: !3525)
!3565 = !DILocation(line: 2845, column: 7, scope: !3525)
!3566 = !DILocation(line: 2845, column: 40, scope: !3525)
!3567 = !DILocation(line: 2846, column: 40, scope: !3525)
!3568 = !DILocation(line: 2846, column: 7, scope: !3525)
!3569 = !DILocation(line: 2846, column: 38, scope: !3525)
!3570 = !DILocation(line: 2847, column: 35, scope: !3525)
!3571 = !DILocation(line: 2847, column: 7, scope: !3525)
!3572 = !DILocation(line: 2847, column: 17, scope: !3525)
!3573 = !DILocation(line: 2847, column: 29, scope: !3525)
!3574 = !DILocation(line: 2847, column: 33, scope: !3525)
!3575 = !DILocation(line: 2848, column: 7, scope: !3525)
!3576 = !DILocation(line: 2849, column: 7, scope: !3525)
!3577 = !DILocation(line: 2852, column: 29, scope: !3486)
!3578 = !DILocation(line: 2852, column: 3, scope: !3486)
!3579 = !DILocation(line: 2852, column: 27, scope: !3486)
!3580 = !DILocation(line: 2853, column: 3, scope: !3486)
!3581 = !DILocation(line: 2853, column: 24, scope: !3486)
!3582 = !DILocation(line: 2854, column: 27, scope: !3486)
!3583 = !DILocation(line: 2854, column: 3, scope: !3486)
!3584 = !DILocation(line: 2854, column: 25, scope: !3486)
!3585 = !DILocation(line: 2855, column: 30, scope: !3486)
!3586 = !DILocation(line: 2855, column: 3, scope: !3486)
!3587 = !DILocation(line: 2855, column: 27, scope: !3486)
!3588 = !DILocation(line: 2856, column: 28, scope: !3486)
!3589 = !DILocation(line: 2856, column: 3, scope: !3486)
!3590 = !DILocation(line: 2856, column: 26, scope: !3486)
!3591 = !DILocation(line: 2857, column: 33, scope: !3486)
!3592 = !DILocation(line: 2857, column: 3, scope: !3486)
!3593 = !DILocation(line: 2857, column: 31, scope: !3486)
!3594 = !DILocation(line: 2858, column: 3, scope: !3486)
!3595 = !DILocation(line: 2858, column: 27, scope: !3486)
!3596 = !DILocation(line: 2859, column: 29, scope: !3486)
!3597 = !DILocation(line: 2859, column: 3, scope: !3486)
!3598 = !DILocation(line: 2859, column: 27, scope: !3486)
!3599 = !DILocation(line: 2860, column: 3, scope: !3486)
!3600 = !DILocation(line: 2860, column: 30, scope: !3486)
!3601 = !DILocation(line: 2861, column: 3, scope: !3486)
!3602 = !DILocation(line: 2861, column: 30, scope: !3486)
!3603 = !DILocation(line: 2862, column: 29, scope: !3486)
!3604 = !DILocation(line: 2862, column: 33, scope: !3486)
!3605 = !DILocation(line: 2862, column: 42, scope: !3486)
!3606 = !DILocation(line: 2862, column: 3, scope: !3486)
!3607 = !DILocation(line: 2862, column: 27, scope: !3486)
!3608 = !DILocation(line: 2867, column: 3, scope: !3486)
!3609 = !DILocation(line: 2870, column: 8, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 2870, column: 7)
!3611 = !DILocation(line: 2870, column: 14, scope: !3610)
!3612 = !DILocation(line: 2871, column: 7, scope: !3610)
!3613 = !DILocation(line: 2871, column: 12, scope: !3610)
!3614 = !DILocation(line: 2870, column: 7, scope: !3486)
!3615 = !DILocation(line: 2873, column: 11, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 2873, column: 11)
!3617 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 2872, column: 5)
!3618 = !DILocation(line: 2873, column: 11, scope: !3617)
!3619 = !DILocation(line: 2875, column: 9, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !3, line: 2875, column: 8)
!3621 = distinct !DILexicalBlock(scope: !3616, file: !3, line: 2874, column: 2)
!3622 = !DILocation(line: 2875, column: 8, scope: !3621)
!3623 = !DILocation(line: 2876, column: 6, scope: !3620)
!3624 = !DILocation(line: 2877, column: 2, scope: !3621)
!3625 = !DILocation(line: 2878, column: 18, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3616, file: !3, line: 2878, column: 16)
!3627 = !DILocation(line: 2879, column: 4, scope: !3626)
!3628 = !DILocation(line: 2879, column: 8, scope: !3626)
!3629 = !DILocation(line: 2879, column: 14, scope: !3626)
!3630 = !DILocation(line: 2880, column: 8, scope: !3626)
!3631 = !DILocation(line: 2880, column: 11, scope: !3626)
!3632 = !DILocation(line: 2880, column: 17, scope: !3626)
!3633 = !DILocation(line: 2878, column: 16, scope: !3616)
!3634 = !DILocation(line: 2881, column: 2, scope: !3626)
!3635 = !DILocation(line: 2882, column: 5, scope: !3617)
!3636 = !DILocation(line: 2884, column: 7, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 2884, column: 7)
!3638 = !DILocation(line: 2884, column: 7, scope: !3486)
!3639 = !DILocation(line: 2886, column: 11, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 2886, column: 11)
!3641 = distinct !DILexicalBlock(scope: !3637, file: !3, line: 2885, column: 5)
!3642 = !DILocation(line: 2886, column: 11, scope: !3641)
!3643 = !DILocation(line: 2887, column: 2, scope: !3640)
!3644 = !DILocation(line: 2888, column: 16, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 2888, column: 16)
!3646 = !DILocation(line: 2888, column: 40, scope: !3645)
!3647 = !DILocation(line: 2888, column: 16, scope: !3640)
!3648 = !DILocation(line: 2889, column: 2, scope: !3645)
!3649 = !DILocation(line: 2891, column: 2, scope: !3645)
!3650 = !DILocation(line: 2892, column: 5, scope: !3641)
!3651 = !DILocation(line: 2894, column: 10, scope: !3486)
!3652 = !DILocation(line: 2894, column: 3, scope: !3486)
!3653 = distinct !DISubprogram(name: "df_install_ref", scope: !3, file: !3, line: 2613, type: !3654, scopeLine: 2617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!3654 = !DISubroutineType(types: !3655)
!3655 = !{null, !920, !1990, !3293, !1099}
!3656 = !DILocalVariable(name: "this_ref", arg: 1, scope: !3653, file: !3, line: 2613, type: !920)
!3657 = !DILocation(line: 2613, column: 24, scope: !3653)
!3658 = !DILocalVariable(name: "reg_info", arg: 2, scope: !3653, file: !3, line: 2614, type: !1990)
!3659 = !DILocation(line: 2614, column: 23, scope: !3653)
!3660 = !DILocalVariable(name: "ref_info", arg: 3, scope: !3653, file: !3, line: 2615, type: !3293)
!3661 = !DILocation(line: 2615, column: 23, scope: !3653)
!3662 = !DILocalVariable(name: "add_to_table", arg: 4, scope: !3653, file: !3, line: 2616, type: !1099)
!3663 = !DILocation(line: 2616, column: 8, scope: !3653)
!3664 = !DILocalVariable(name: "regno", scope: !3653, file: !3, line: 2618, type: !7)
!3665 = !DILocation(line: 2618, column: 16, scope: !3653)
!3666 = !DILocation(line: 2618, column: 24, scope: !3653)
!3667 = !DILocalVariable(name: "head", scope: !3653, file: !3, line: 2620, type: !920)
!3668 = !DILocation(line: 2620, column: 10, scope: !3653)
!3669 = !DILocation(line: 2620, column: 17, scope: !3653)
!3670 = !DILocation(line: 2620, column: 27, scope: !3653)
!3671 = !DILocation(line: 2622, column: 25, scope: !3653)
!3672 = !DILocation(line: 2622, column: 3, scope: !3653)
!3673 = !DILocation(line: 2622, column: 13, scope: !3653)
!3674 = !DILocation(line: 2622, column: 23, scope: !3653)
!3675 = !DILocation(line: 2623, column: 3, scope: !3653)
!3676 = !DILocation(line: 2623, column: 13, scope: !3653)
!3677 = !DILocation(line: 2623, column: 19, scope: !3653)
!3678 = !DILocation(line: 2625, column: 7, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3653, file: !3, line: 2625, column: 7)
!3680 = !DILocation(line: 2625, column: 7, scope: !3653)
!3681 = !DILocation(line: 2627, column: 7, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 2626, column: 5)
!3683 = !DILocation(line: 2628, column: 7, scope: !3682)
!3684 = !DILocation(line: 2628, column: 11, scope: !3682)
!3685 = !DILocation(line: 2628, column: 32, scope: !3682)
!3686 = !DILocation(line: 2628, column: 38, scope: !3682)
!3687 = !DILocation(line: 2629, column: 5, scope: !3682)
!3688 = !DILocation(line: 2631, column: 3, scope: !3653)
!3689 = !DILocation(line: 2634, column: 32, scope: !3653)
!3690 = !DILocation(line: 2634, column: 3, scope: !3653)
!3691 = !DILocation(line: 2634, column: 30, scope: !3653)
!3692 = !DILocation(line: 2637, column: 3, scope: !3653)
!3693 = !DILocation(line: 2637, column: 30, scope: !3653)
!3694 = !DILocation(line: 2639, column: 7, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3653, file: !3, line: 2639, column: 7)
!3696 = !DILocation(line: 2639, column: 7, scope: !3653)
!3697 = !DILocation(line: 2640, column: 30, scope: !3695)
!3698 = !DILocation(line: 2640, column: 5, scope: !3695)
!3699 = !DILocation(line: 2640, column: 28, scope: !3695)
!3700 = !DILocation(line: 2642, column: 7, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3653, file: !3, line: 2642, column: 7)
!3702 = !DILocation(line: 2642, column: 7, scope: !3653)
!3703 = !DILocation(line: 2644, column: 7, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3701, file: !3, line: 2643, column: 5)
!3705 = !DILocation(line: 2645, column: 35, scope: !3704)
!3706 = !DILocation(line: 2645, column: 7, scope: !3704)
!3707 = !DILocation(line: 2646, column: 30, scope: !3704)
!3708 = !DILocation(line: 2646, column: 40, scope: !3704)
!3709 = !DILocation(line: 2646, column: 7, scope: !3704)
!3710 = !DILocation(line: 2646, column: 28, scope: !3704)
!3711 = !DILocation(line: 2648, column: 46, scope: !3704)
!3712 = !DILocation(line: 2648, column: 7, scope: !3704)
!3713 = !DILocation(line: 2648, column: 17, scope: !3704)
!3714 = !DILocation(line: 2648, column: 22, scope: !3704)
!3715 = !DILocation(line: 2648, column: 32, scope: !3704)
!3716 = !DILocation(line: 2648, column: 44, scope: !3704)
!3717 = !DILocation(line: 2649, column: 7, scope: !3704)
!3718 = !DILocation(line: 2649, column: 17, scope: !3704)
!3719 = !DILocation(line: 2649, column: 27, scope: !3704)
!3720 = !DILocation(line: 2650, column: 5, scope: !3704)
!3721 = !DILocation(line: 2652, column: 5, scope: !3701)
!3722 = !DILocation(line: 2652, column: 26, scope: !3701)
!3723 = !DILocation(line: 2654, column: 3, scope: !3653)
!3724 = !DILocation(line: 2654, column: 13, scope: !3653)
!3725 = !DILocation(line: 2654, column: 23, scope: !3653)
!3726 = !DILocation(line: 2655, column: 1, scope: !3653)
!3727 = distinct !DISubprogram(name: "df_ref_compare", scope: !3, file: !3, line: 2362, type: !1367, scopeLine: 2363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!3728 = !DILocalVariable(name: "r1", arg: 1, scope: !3727, file: !3, line: 2362, type: !1362)
!3729 = !DILocation(line: 2362, column: 29, scope: !3727)
!3730 = !DILocalVariable(name: "r2", arg: 2, scope: !3727, file: !3, line: 2362, type: !1362)
!3731 = !DILocation(line: 2362, column: 45, scope: !3727)
!3732 = !DILocalVariable(name: "ref1", scope: !3727, file: !3, line: 2364, type: !2027)
!3733 = !DILocation(line: 2364, column: 16, scope: !3727)
!3734 = !DILocation(line: 2364, column: 40, scope: !3727)
!3735 = !DILocation(line: 2364, column: 24, scope: !3727)
!3736 = !DILocation(line: 2364, column: 23, scope: !3727)
!3737 = !DILocalVariable(name: "ref2", scope: !3727, file: !3, line: 2365, type: !2027)
!3738 = !DILocation(line: 2365, column: 16, scope: !3727)
!3739 = !DILocation(line: 2365, column: 40, scope: !3727)
!3740 = !DILocation(line: 2365, column: 24, scope: !3727)
!3741 = !DILocation(line: 2365, column: 23, scope: !3727)
!3742 = !DILocation(line: 2367, column: 7, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 2367, column: 7)
!3744 = !DILocation(line: 2367, column: 15, scope: !3743)
!3745 = !DILocation(line: 2367, column: 12, scope: !3743)
!3746 = !DILocation(line: 2367, column: 7, scope: !3727)
!3747 = !DILocation(line: 2368, column: 5, scope: !3743)
!3748 = !DILocation(line: 2370, column: 7, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 2370, column: 7)
!3750 = !DILocation(line: 2370, column: 30, scope: !3749)
!3751 = !DILocation(line: 2370, column: 27, scope: !3749)
!3752 = !DILocation(line: 2370, column: 7, scope: !3727)
!3753 = !DILocation(line: 2371, column: 17, scope: !3749)
!3754 = !DILocation(line: 2371, column: 44, scope: !3749)
!3755 = !DILocation(line: 2371, column: 37, scope: !3749)
!3756 = !DILocation(line: 2371, column: 5, scope: !3749)
!3757 = !DILocation(line: 2373, column: 7, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 2373, column: 7)
!3759 = !DILocation(line: 2373, column: 30, scope: !3758)
!3760 = !DILocation(line: 2373, column: 27, scope: !3758)
!3761 = !DILocation(line: 2373, column: 7, scope: !3727)
!3762 = !DILocation(line: 2374, column: 17, scope: !3758)
!3763 = !DILocation(line: 2374, column: 44, scope: !3758)
!3764 = !DILocation(line: 2374, column: 37, scope: !3758)
!3765 = !DILocation(line: 2374, column: 5, scope: !3758)
!3766 = !DILocation(line: 2376, column: 7, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 2376, column: 7)
!3768 = !DILocation(line: 2376, column: 29, scope: !3767)
!3769 = !DILocation(line: 2376, column: 26, scope: !3767)
!3770 = !DILocation(line: 2376, column: 7, scope: !3727)
!3771 = !DILocation(line: 2377, column: 17, scope: !3767)
!3772 = !DILocation(line: 2377, column: 43, scope: !3767)
!3773 = !DILocation(line: 2377, column: 36, scope: !3767)
!3774 = !DILocation(line: 2377, column: 5, scope: !3767)
!3775 = !DILocation(line: 2379, column: 7, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 2379, column: 7)
!3777 = !DILocation(line: 2379, column: 28, scope: !3776)
!3778 = !DILocation(line: 2379, column: 25, scope: !3776)
!3779 = !DILocation(line: 2379, column: 7, scope: !3727)
!3780 = !DILocation(line: 2380, column: 17, scope: !3776)
!3781 = !DILocation(line: 2380, column: 44, scope: !3776)
!3782 = !DILocation(line: 2380, column: 37, scope: !3776)
!3783 = !DILocation(line: 2380, column: 5, scope: !3776)
!3784 = !DILocation(line: 2383, column: 7, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 2383, column: 7)
!3786 = !DILocation(line: 2383, column: 27, scope: !3785)
!3787 = !DILocation(line: 2384, column: 7, scope: !3785)
!3788 = !DILocation(line: 2384, column: 10, scope: !3785)
!3789 = !DILocation(line: 2384, column: 31, scope: !3785)
!3790 = !DILocation(line: 2384, column: 28, scope: !3785)
!3791 = !DILocation(line: 2383, column: 7, scope: !3727)
!3792 = !DILocation(line: 2385, column: 17, scope: !3785)
!3793 = !DILocation(line: 2385, column: 44, scope: !3785)
!3794 = !DILocation(line: 2385, column: 37, scope: !3785)
!3795 = !DILocation(line: 2385, column: 5, scope: !3785)
!3796 = !DILocation(line: 2387, column: 7, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 2387, column: 7)
!3798 = !DILocation(line: 2387, column: 30, scope: !3797)
!3799 = !DILocation(line: 2387, column: 27, scope: !3797)
!3800 = !DILocation(line: 2387, column: 7, scope: !3727)
!3801 = !DILocation(line: 2392, column: 11, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3803, file: !3, line: 2392, column: 11)
!3803 = distinct !DILexicalBlock(scope: !3797, file: !3, line: 2388, column: 5)
!3804 = !DILocation(line: 2393, column: 4, scope: !3802)
!3805 = !DILocation(line: 2392, column: 57, scope: !3802)
!3806 = !DILocation(line: 2392, column: 11, scope: !3803)
!3807 = !DILocation(line: 2394, column: 9, scope: !3802)
!3808 = !DILocation(line: 2394, column: 31, scope: !3802)
!3809 = !DILocation(line: 2394, column: 29, scope: !3802)
!3810 = !DILocation(line: 2394, column: 2, scope: !3802)
!3811 = !DILocation(line: 2395, column: 16, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3802, file: !3, line: 2395, column: 16)
!3813 = !DILocation(line: 2395, column: 16, scope: !3802)
!3814 = !DILocation(line: 2396, column: 2, scope: !3812)
!3815 = !DILocation(line: 2398, column: 2, scope: !3812)
!3816 = !DILocation(line: 2403, column: 7, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 2403, column: 7)
!3818 = !DILocation(line: 2403, column: 27, scope: !3817)
!3819 = !DILocation(line: 2403, column: 7, scope: !3727)
!3820 = !DILocation(line: 2405, column: 11, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3822, file: !3, line: 2405, column: 11)
!3822 = distinct !DILexicalBlock(scope: !3817, file: !3, line: 2404, column: 5)
!3823 = !DILocation(line: 2405, column: 43, scope: !3821)
!3824 = !DILocation(line: 2405, column: 40, scope: !3821)
!3825 = !DILocation(line: 2405, column: 11, scope: !3822)
!3826 = !DILocation(line: 2406, column: 9, scope: !3821)
!3827 = !DILocation(line: 2406, column: 40, scope: !3821)
!3828 = !DILocation(line: 2406, column: 38, scope: !3821)
!3829 = !DILocation(line: 2406, column: 2, scope: !3821)
!3830 = !DILocation(line: 2407, column: 11, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3822, file: !3, line: 2407, column: 11)
!3832 = !DILocation(line: 2407, column: 42, scope: !3831)
!3833 = !DILocation(line: 2407, column: 39, scope: !3831)
!3834 = !DILocation(line: 2407, column: 11, scope: !3822)
!3835 = !DILocation(line: 2408, column: 9, scope: !3831)
!3836 = !DILocation(line: 2408, column: 39, scope: !3831)
!3837 = !DILocation(line: 2408, column: 37, scope: !3831)
!3838 = !DILocation(line: 2408, column: 2, scope: !3831)
!3839 = !DILocation(line: 2409, column: 11, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3822, file: !3, line: 2409, column: 11)
!3841 = !DILocation(line: 2409, column: 41, scope: !3840)
!3842 = !DILocation(line: 2409, column: 38, scope: !3840)
!3843 = !DILocation(line: 2409, column: 11, scope: !3822)
!3844 = !DILocation(line: 2410, column: 9, scope: !3840)
!3845 = !DILocation(line: 2410, column: 38, scope: !3840)
!3846 = !DILocation(line: 2410, column: 36, scope: !3840)
!3847 = !DILocation(line: 2410, column: 2, scope: !3840)
!3848 = !DILocation(line: 2411, column: 5, scope: !3822)
!3849 = !DILocation(line: 2412, column: 3, scope: !3727)
!3850 = !DILocation(line: 2413, column: 1, scope: !3727)
!3851 = distinct !DISubprogram(name: "df_ref_remove", scope: !3, file: !3, line: 986, type: !3852, scopeLine: 987, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!3852 = !DISubroutineType(types: !3853)
!3853 = !{null, !920}
!3854 = !DILocalVariable(name: "ref", arg: 1, scope: !3851, file: !3, line: 986, type: !920)
!3855 = !DILocation(line: 986, column: 23, scope: !3851)
!3856 = !DILocation(line: 996, column: 7, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3851, file: !3, line: 996, column: 7)
!3858 = !DILocation(line: 996, column: 7, scope: !3851)
!3859 = !DILocation(line: 998, column: 11, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 998, column: 11)
!3861 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 997, column: 5)
!3862 = !DILocation(line: 998, column: 11, scope: !3861)
!3863 = !DILocalVariable(name: "bb_info", scope: !3864, file: !3, line: 1000, type: !915)
!3864 = distinct !DILexicalBlock(scope: !3860, file: !3, line: 999, column: 2)
!3865 = !DILocation(line: 1000, column: 28, scope: !3864)
!3866 = !DILocation(line: 1001, column: 29, scope: !3864)
!3867 = !DILocation(line: 1001, column: 8, scope: !3864)
!3868 = !DILocation(line: 1002, column: 26, scope: !3864)
!3869 = !DILocation(line: 1002, column: 35, scope: !3864)
!3870 = !DILocation(line: 1002, column: 52, scope: !3864)
!3871 = !DILocation(line: 1002, column: 4, scope: !3864)
!3872 = !DILocation(line: 1003, column: 2, scope: !3864)
!3873 = !DILocalVariable(name: "uid", scope: !3874, file: !3, line: 1006, type: !7)
!3874 = distinct !DILexicalBlock(scope: !3860, file: !3, line: 1005, column: 2)
!3875 = !DILocation(line: 1006, column: 17, scope: !3874)
!3876 = !DILocation(line: 1006, column: 23, scope: !3874)
!3877 = !DILocalVariable(name: "insn_rec", scope: !3874, file: !3, line: 1007, type: !1946)
!3878 = !DILocation(line: 1007, column: 25, scope: !3874)
!3879 = !DILocation(line: 1007, column: 36, scope: !3874)
!3880 = !DILocation(line: 1008, column: 26, scope: !3874)
!3881 = !DILocation(line: 1008, column: 36, scope: !3874)
!3882 = !DILocation(line: 1008, column: 42, scope: !3874)
!3883 = !DILocation(line: 1008, column: 4, scope: !3874)
!3884 = !DILocation(line: 1010, column: 5, scope: !3861)
!3885 = !DILocation(line: 1013, column: 11, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 1013, column: 11)
!3887 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 1012, column: 5)
!3888 = !DILocation(line: 1013, column: 11, scope: !3887)
!3889 = !DILocalVariable(name: "bb_info", scope: !3890, file: !3, line: 1015, type: !915)
!3890 = distinct !DILexicalBlock(scope: !3886, file: !3, line: 1014, column: 2)
!3891 = !DILocation(line: 1015, column: 28, scope: !3890)
!3892 = !DILocation(line: 1016, column: 29, scope: !3890)
!3893 = !DILocation(line: 1016, column: 8, scope: !3890)
!3894 = !DILocation(line: 1017, column: 26, scope: !3890)
!3895 = !DILocation(line: 1017, column: 35, scope: !3890)
!3896 = !DILocation(line: 1017, column: 52, scope: !3890)
!3897 = !DILocation(line: 1017, column: 4, scope: !3890)
!3898 = !DILocation(line: 1018, column: 2, scope: !3890)
!3899 = !DILocalVariable(name: "uid", scope: !3900, file: !3, line: 1021, type: !7)
!3900 = distinct !DILexicalBlock(scope: !3886, file: !3, line: 1020, column: 2)
!3901 = !DILocation(line: 1021, column: 17, scope: !3900)
!3902 = !DILocation(line: 1021, column: 23, scope: !3900)
!3903 = !DILocalVariable(name: "insn_rec", scope: !3900, file: !3, line: 1022, type: !1946)
!3904 = !DILocation(line: 1022, column: 25, scope: !3900)
!3905 = !DILocation(line: 1022, column: 36, scope: !3900)
!3906 = !DILocation(line: 1024, column: 8, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3900, file: !3, line: 1024, column: 8)
!3908 = !DILocation(line: 1024, column: 27, scope: !3907)
!3909 = !DILocation(line: 1024, column: 8, scope: !3900)
!3910 = !DILocation(line: 1025, column: 28, scope: !3907)
!3911 = !DILocation(line: 1025, column: 38, scope: !3907)
!3912 = !DILocation(line: 1025, column: 47, scope: !3907)
!3913 = !DILocation(line: 1025, column: 6, scope: !3907)
!3914 = !DILocation(line: 1027, column: 28, scope: !3907)
!3915 = !DILocation(line: 1027, column: 38, scope: !3907)
!3916 = !DILocation(line: 1027, column: 44, scope: !3907)
!3917 = !DILocation(line: 1027, column: 6, scope: !3907)
!3918 = !DILocation(line: 1034, column: 8, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3851, file: !3, line: 1034, column: 7)
!3920 = !DILocation(line: 1034, column: 7, scope: !3851)
!3921 = !DILocation(line: 1035, column: 22, scope: !3919)
!3922 = !DILocation(line: 1035, column: 5, scope: !3919)
!3923 = !DILocation(line: 1036, column: 24, scope: !3851)
!3924 = !DILocation(line: 1036, column: 3, scope: !3851)
!3925 = !DILocation(line: 1037, column: 1, scope: !3851)
!3926 = distinct !DISubprogram(name: "df_ref_compress_rec", scope: !3, file: !3, line: 960, type: !3927, scopeLine: 961, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!3927 = !DISubroutineType(types: !3928)
!3928 = !{null, !3307, !920}
!3929 = !DILocalVariable(name: "vec_ptr", arg: 1, scope: !3926, file: !3, line: 960, type: !3307)
!3930 = !DILocation(line: 960, column: 31, scope: !3926)
!3931 = !DILocalVariable(name: "ref", arg: 2, scope: !3926, file: !3, line: 960, type: !920)
!3932 = !DILocation(line: 960, column: 47, scope: !3926)
!3933 = !DILocalVariable(name: "vec", scope: !3926, file: !3, line: 962, type: !919)
!3934 = !DILocation(line: 962, column: 11, scope: !3926)
!3935 = !DILocation(line: 962, column: 18, scope: !3926)
!3936 = !DILocation(line: 962, column: 17, scope: !3926)
!3937 = !DILocation(line: 964, column: 7, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3926, file: !3, line: 964, column: 7)
!3939 = !DILocation(line: 964, column: 7, scope: !3926)
!3940 = !DILocation(line: 966, column: 7, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 965, column: 5)
!3942 = !DILocation(line: 966, column: 15, scope: !3941)
!3943 = !DILocation(line: 966, column: 14, scope: !3941)
!3944 = !DILocation(line: 966, column: 19, scope: !3941)
!3945 = !DILocation(line: 966, column: 23, scope: !3941)
!3946 = !DILocation(line: 966, column: 22, scope: !3941)
!3947 = !DILocation(line: 966, column: 30, scope: !3941)
!3948 = !DILocation(line: 966, column: 27, scope: !3941)
!3949 = !DILocation(line: 0, scope: !3941)
!3950 = !DILocation(line: 967, column: 5, scope: !3941)
!3951 = distinct !{!3951, !3940, !3950}
!3952 = !DILocation(line: 969, column: 7, scope: !3941)
!3953 = !DILocation(line: 969, column: 15, scope: !3941)
!3954 = !DILocation(line: 969, column: 14, scope: !3941)
!3955 = !DILocation(line: 971, column: 13, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 970, column: 2)
!3957 = !DILocation(line: 971, column: 16, scope: !3956)
!3958 = !DILocation(line: 971, column: 11, scope: !3956)
!3959 = !DILocation(line: 971, column: 5, scope: !3956)
!3960 = !DILocation(line: 971, column: 9, scope: !3956)
!3961 = !DILocation(line: 972, column: 7, scope: !3956)
!3962 = distinct !{!3962, !3952, !3963}
!3963 = !DILocation(line: 973, column: 2, scope: !3941)
!3964 = !DILocation(line: 974, column: 5, scope: !3941)
!3965 = !DILocation(line: 977, column: 13, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 976, column: 5)
!3967 = !DILocation(line: 977, column: 7, scope: !3966)
!3968 = !DILocation(line: 978, column: 8, scope: !3966)
!3969 = !DILocation(line: 978, column: 16, scope: !3966)
!3970 = !DILocation(line: 980, column: 1, scope: !3926)
!3971 = distinct !DISubprogram(name: "df_reg_chain_unlink", scope: !3, file: !3, line: 878, type: !3852, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!3972 = !DILocalVariable(name: "ref", arg: 1, scope: !3971, file: !3, line: 878, type: !920)
!3973 = !DILocation(line: 878, column: 29, scope: !3971)
!3974 = !DILocalVariable(name: "next", scope: !3971, file: !3, line: 880, type: !920)
!3975 = !DILocation(line: 880, column: 10, scope: !3971)
!3976 = !DILocation(line: 880, column: 17, scope: !3971)
!3977 = !DILocalVariable(name: "prev", scope: !3971, file: !3, line: 881, type: !920)
!3978 = !DILocation(line: 881, column: 10, scope: !3971)
!3979 = !DILocation(line: 881, column: 17, scope: !3971)
!3980 = !DILocalVariable(name: "id", scope: !3971, file: !3, line: 882, type: !900)
!3981 = !DILocation(line: 882, column: 7, scope: !3971)
!3982 = !DILocation(line: 882, column: 12, scope: !3971)
!3983 = !DILocalVariable(name: "reg_info", scope: !3971, file: !3, line: 883, type: !1990)
!3984 = !DILocation(line: 883, column: 23, scope: !3971)
!3985 = !DILocalVariable(name: "refs", scope: !3971, file: !3, line: 884, type: !919)
!3986 = !DILocation(line: 884, column: 11, scope: !3971)
!3987 = !DILocation(line: 886, column: 7, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 886, column: 7)
!3989 = !DILocation(line: 886, column: 7, scope: !3971)
!3990 = !DILocalVariable(name: "regno", scope: !3991, file: !3, line: 888, type: !900)
!3991 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 887, column: 5)
!3992 = !DILocation(line: 888, column: 11, scope: !3991)
!3993 = !DILocation(line: 888, column: 19, scope: !3991)
!3994 = !DILocation(line: 889, column: 18, scope: !3991)
!3995 = !DILocation(line: 889, column: 16, scope: !3991)
!3996 = !DILocation(line: 890, column: 14, scope: !3991)
!3997 = !DILocation(line: 890, column: 18, scope: !3991)
!3998 = !DILocation(line: 890, column: 27, scope: !3991)
!3999 = !DILocation(line: 890, column: 12, scope: !3991)
!4000 = !DILocation(line: 891, column: 5, scope: !3991)
!4001 = !DILocation(line: 894, column: 11, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !3, line: 894, column: 11)
!4003 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 893, column: 5)
!4004 = !DILocation(line: 894, column: 30, scope: !4002)
!4005 = !DILocation(line: 894, column: 11, scope: !4003)
!4006 = !DILocation(line: 896, column: 15, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 895, column: 2)
!4008 = !DILocation(line: 896, column: 13, scope: !4007)
!4009 = !DILocation(line: 897, column: 12, scope: !4007)
!4010 = !DILocation(line: 897, column: 16, scope: !4007)
!4011 = !DILocation(line: 897, column: 25, scope: !4007)
!4012 = !DILocation(line: 897, column: 4, scope: !4007)
!4013 = !DILocation(line: 902, column: 15, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4007, file: !3, line: 898, column: 6)
!4015 = !DILocation(line: 902, column: 19, scope: !4014)
!4016 = !DILocation(line: 902, column: 28, scope: !4014)
!4017 = !DILocation(line: 902, column: 13, scope: !4014)
!4018 = !DILocation(line: 903, column: 8, scope: !4014)
!4019 = !DILocation(line: 905, column: 8, scope: !4014)
!4020 = !DILocation(line: 907, column: 2, scope: !4007)
!4021 = !DILocation(line: 910, column: 15, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 909, column: 2)
!4023 = !DILocation(line: 910, column: 13, scope: !4022)
!4024 = !DILocation(line: 911, column: 11, scope: !4022)
!4025 = !DILocation(line: 911, column: 15, scope: !4022)
!4026 = !DILocation(line: 911, column: 24, scope: !4022)
!4027 = !DILocation(line: 911, column: 9, scope: !4022)
!4028 = !DILocation(line: 915, column: 7, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 915, column: 7)
!4030 = !DILocation(line: 915, column: 7, scope: !3971)
!4031 = !DILocation(line: 917, column: 11, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4033, file: !3, line: 917, column: 11)
!4033 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 916, column: 5)
!4034 = !DILocation(line: 917, column: 15, scope: !4032)
!4035 = !DILocation(line: 917, column: 11, scope: !4033)
!4036 = !DILocation(line: 919, column: 22, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4038, file: !3, line: 919, column: 8)
!4038 = distinct !DILexicalBlock(scope: !4032, file: !3, line: 918, column: 2)
!4039 = !DILocation(line: 919, column: 26, scope: !4037)
!4040 = !DILocation(line: 919, column: 45, scope: !4037)
!4041 = !DILocation(line: 919, column: 8, scope: !4037)
!4042 = !DILocation(line: 919, column: 8, scope: !4038)
!4043 = !DILocation(line: 920, column: 6, scope: !4037)
!4044 = !DILocation(line: 920, column: 11, scope: !4037)
!4045 = !DILocation(line: 920, column: 15, scope: !4037)
!4046 = !DILocation(line: 921, column: 2, scope: !4038)
!4047 = !DILocation(line: 923, column: 2, scope: !4032)
!4048 = !DILocation(line: 923, column: 7, scope: !4032)
!4049 = !DILocation(line: 923, column: 11, scope: !4032)
!4050 = !DILocation(line: 924, column: 5, scope: !4033)
!4051 = !DILocation(line: 931, column: 7, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 931, column: 7)
!4053 = !DILocation(line: 931, column: 16, scope: !4052)
!4054 = !DILocation(line: 931, column: 19, scope: !4052)
!4055 = !DILocation(line: 931, column: 7, scope: !3971)
!4056 = !DILocation(line: 932, column: 22, scope: !4052)
!4057 = !DILocation(line: 932, column: 5, scope: !4052)
!4058 = !DILocation(line: 934, column: 3, scope: !3971)
!4059 = !DILocation(line: 934, column: 13, scope: !3971)
!4060 = !DILocation(line: 934, column: 19, scope: !3971)
!4061 = !DILocation(line: 935, column: 7, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 935, column: 7)
!4063 = !DILocation(line: 935, column: 7, scope: !3971)
!4064 = !DILocation(line: 937, column: 7, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 936, column: 5)
!4066 = !DILocation(line: 938, column: 7, scope: !4065)
!4067 = !DILocation(line: 938, column: 11, scope: !4065)
!4068 = !DILocation(line: 938, column: 32, scope: !4065)
!4069 = !DILocation(line: 938, column: 51, scope: !4065)
!4070 = !DILocation(line: 939, column: 5, scope: !4065)
!4071 = !DILocation(line: 943, column: 7, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 943, column: 7)
!4073 = !DILocation(line: 943, column: 7, scope: !3971)
!4074 = !DILocation(line: 944, column: 30, scope: !4072)
!4075 = !DILocation(line: 944, column: 5, scope: !4072)
!4076 = !DILocation(line: 944, column: 28, scope: !4072)
!4077 = !DILocation(line: 947, column: 7, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4072, file: !3, line: 946, column: 5)
!4079 = !DILocation(line: 948, column: 29, scope: !4078)
!4080 = !DILocation(line: 948, column: 7, scope: !4078)
!4081 = !DILocation(line: 948, column: 17, scope: !4078)
!4082 = !DILocation(line: 948, column: 27, scope: !4078)
!4083 = !DILocation(line: 950, column: 7, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 950, column: 7)
!4085 = !DILocation(line: 950, column: 7, scope: !3971)
!4086 = !DILocation(line: 951, column: 30, scope: !4084)
!4087 = !DILocation(line: 951, column: 5, scope: !4084)
!4088 = !DILocation(line: 951, column: 28, scope: !4084)
!4089 = !DILocation(line: 953, column: 16, scope: !3971)
!4090 = !DILocation(line: 953, column: 3, scope: !3971)
!4091 = !DILocation(line: 954, column: 1, scope: !3971)
!4092 = distinct !DISubprogram(name: "df_insn_create_insn_record", scope: !3, file: !3, line: 1044, type: !4093, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!4093 = !DISubroutineType(types: !4094)
!4094 = !{!1946, !931}
!4095 = !DILocalVariable(name: "insn", arg: 1, scope: !4092, file: !3, line: 1044, type: !931)
!4096 = !DILocation(line: 1044, column: 33, scope: !4092)
!4097 = !DILocalVariable(name: "problem_data", scope: !4092, file: !3, line: 1046, type: !813)
!4098 = !DILocation(line: 1046, column: 32, scope: !4092)
!4099 = !DILocation(line: 1047, column: 39, scope: !4092)
!4100 = !DILocation(line: 1047, column: 48, scope: !4092)
!4101 = !DILocation(line: 1047, column: 7, scope: !4092)
!4102 = !DILocalVariable(name: "insn_rec", scope: !4092, file: !3, line: 1048, type: !1946)
!4103 = !DILocation(line: 1048, column: 24, scope: !4092)
!4104 = !DILocation(line: 1050, column: 3, scope: !4092)
!4105 = !DILocation(line: 1051, column: 14, scope: !4092)
!4106 = !DILocation(line: 1051, column: 12, scope: !4092)
!4107 = !DILocation(line: 1052, column: 8, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4092, file: !3, line: 1052, column: 7)
!4109 = !DILocation(line: 1052, column: 7, scope: !4092)
!4110 = !DILocation(line: 1054, column: 54, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4108, file: !3, line: 1053, column: 5)
!4112 = !DILocation(line: 1054, column: 68, scope: !4111)
!4113 = !DILocation(line: 1054, column: 42, scope: !4111)
!4114 = !DILocation(line: 1054, column: 18, scope: !4111)
!4115 = !DILocation(line: 1054, column: 16, scope: !4111)
!4116 = !DILocation(line: 1055, column: 7, scope: !4111)
!4117 = !DILocation(line: 1056, column: 5, scope: !4111)
!4118 = !DILocation(line: 1057, column: 11, scope: !4092)
!4119 = !DILocation(line: 1057, column: 3, scope: !4092)
!4120 = !DILocation(line: 1058, column: 20, scope: !4092)
!4121 = !DILocation(line: 1058, column: 3, scope: !4092)
!4122 = !DILocation(line: 1058, column: 13, scope: !4092)
!4123 = !DILocation(line: 1058, column: 18, scope: !4092)
!4124 = !DILocation(line: 1059, column: 10, scope: !4092)
!4125 = !DILocation(line: 1059, column: 3, scope: !4092)
!4126 = distinct !DISubprogram(name: "df_insn_delete", scope: !3, file: !3, line: 1124, type: !4127, scopeLine: 1125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!4127 = !DISubroutineType(types: !4128)
!4128 = !{null, !1244, !7}
!4129 = !DILocalVariable(name: "bb", arg: 1, scope: !4126, file: !3, line: 1124, type: !1244)
!4130 = !DILocation(line: 1124, column: 29, scope: !4126)
!4131 = !DILocalVariable(name: "uid", arg: 2, scope: !4126, file: !3, line: 1124, type: !7)
!4132 = !DILocation(line: 1124, column: 46, scope: !4126)
!4133 = !DILocalVariable(name: "insn_info", scope: !4126, file: !3, line: 1126, type: !1946)
!4134 = !DILocation(line: 1126, column: 24, scope: !4126)
!4135 = !DILocation(line: 1127, column: 8, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4126, file: !3, line: 1127, column: 7)
!4137 = !DILocation(line: 1127, column: 7, scope: !4126)
!4138 = !DILocation(line: 1128, column: 5, scope: !4136)
!4139 = !DILocation(line: 1130, column: 20, scope: !4126)
!4140 = !DILocation(line: 1130, column: 3, scope: !4126)
!4141 = !DILocation(line: 1131, column: 3, scope: !4126)
!4142 = !DILocation(line: 1136, column: 7, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4126, file: !3, line: 1136, column: 7)
!4144 = !DILocation(line: 1136, column: 7, scope: !4126)
!4145 = !DILocation(line: 1137, column: 22, scope: !4143)
!4146 = !DILocation(line: 1137, column: 5, scope: !4143)
!4147 = !DILocation(line: 1139, column: 15, scope: !4126)
!4148 = !DILocation(line: 1139, column: 13, scope: !4126)
!4149 = !DILocation(line: 1142, column: 7, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4126, file: !3, line: 1142, column: 7)
!4151 = !DILocation(line: 1142, column: 11, scope: !4150)
!4152 = !DILocation(line: 1142, column: 28, scope: !4150)
!4153 = !DILocation(line: 1142, column: 7, scope: !4126)
!4154 = !DILocation(line: 1144, column: 11, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4156, file: !3, line: 1144, column: 11)
!4156 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 1143, column: 5)
!4157 = !DILocation(line: 1144, column: 11, scope: !4156)
!4158 = !DILocation(line: 1146, column: 22, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4155, file: !3, line: 1145, column: 2)
!4160 = !DILocation(line: 1146, column: 26, scope: !4159)
!4161 = !DILocation(line: 1146, column: 43, scope: !4159)
!4162 = !DILocation(line: 1146, column: 4, scope: !4159)
!4163 = !DILocation(line: 1147, column: 22, scope: !4159)
!4164 = !DILocation(line: 1147, column: 26, scope: !4159)
!4165 = !DILocation(line: 1147, column: 49, scope: !4159)
!4166 = !DILocation(line: 1147, column: 4, scope: !4159)
!4167 = !DILocation(line: 1148, column: 20, scope: !4159)
!4168 = !DILocation(line: 1148, column: 24, scope: !4159)
!4169 = !DILocation(line: 1148, column: 41, scope: !4159)
!4170 = !DILocation(line: 1148, column: 4, scope: !4159)
!4171 = !DILocation(line: 1149, column: 2, scope: !4159)
!4172 = !DILocation(line: 1150, column: 11, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4156, file: !3, line: 1150, column: 11)
!4174 = !DILocation(line: 1150, column: 11, scope: !4156)
!4175 = !DILocation(line: 1151, column: 11, scope: !4173)
!4176 = !DILocation(line: 1151, column: 69, scope: !4173)
!4177 = !DILocation(line: 1151, column: 2, scope: !4173)
!4178 = !DILocation(line: 1152, column: 7, scope: !4156)
!4179 = !DILocation(line: 1155, column: 7, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4126, file: !3, line: 1155, column: 7)
!4181 = !DILocation(line: 1155, column: 7, scope: !4126)
!4182 = !DILocation(line: 1156, column: 14, scope: !4180)
!4183 = !DILocation(line: 1156, column: 59, scope: !4180)
!4184 = !DILocation(line: 1156, column: 5, scope: !4180)
!4185 = !DILocation(line: 1158, column: 21, scope: !4126)
!4186 = !DILocation(line: 1158, column: 25, scope: !4126)
!4187 = !DILocation(line: 1158, column: 42, scope: !4126)
!4188 = !DILocation(line: 1158, column: 3, scope: !4126)
!4189 = !DILocation(line: 1159, column: 21, scope: !4126)
!4190 = !DILocation(line: 1159, column: 25, scope: !4126)
!4191 = !DILocation(line: 1159, column: 42, scope: !4126)
!4192 = !DILocation(line: 1159, column: 3, scope: !4126)
!4193 = !DILocation(line: 1160, column: 21, scope: !4126)
!4194 = !DILocation(line: 1160, column: 25, scope: !4126)
!4195 = !DILocation(line: 1160, column: 48, scope: !4126)
!4196 = !DILocation(line: 1160, column: 3, scope: !4126)
!4197 = !DILocation(line: 1161, column: 7, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4126, file: !3, line: 1161, column: 7)
!4199 = !DILocation(line: 1161, column: 7, scope: !4126)
!4200 = !DILocalVariable(name: "problem_data", scope: !4201, file: !3, line: 1163, type: !813)
!4201 = distinct !DILexicalBlock(scope: !4198, file: !3, line: 1162, column: 5)
!4202 = !DILocation(line: 1163, column: 36, scope: !4201)
!4203 = !DILocation(line: 1164, column: 36, scope: !4201)
!4204 = !DILocation(line: 1164, column: 45, scope: !4201)
!4205 = !DILocation(line: 1164, column: 4, scope: !4201)
!4206 = !DILocation(line: 1171, column: 11, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 1171, column: 11)
!4208 = !DILocation(line: 1171, column: 22, scope: !4207)
!4209 = !DILocation(line: 1171, column: 11, scope: !4201)
!4210 = !DILocation(line: 1173, column: 32, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4207, file: !3, line: 1172, column: 2)
!4212 = !DILocation(line: 1173, column: 43, scope: !4211)
!4213 = !DILocation(line: 1173, column: 4, scope: !4211)
!4214 = !DILocation(line: 1175, column: 8, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4211, file: !3, line: 1175, column: 8)
!4216 = !DILocation(line: 1175, column: 8, scope: !4211)
!4217 = !DILocation(line: 1177, column: 38, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1176, column: 6)
!4219 = !DILocation(line: 1177, column: 49, scope: !4218)
!4220 = !DILocation(line: 1177, column: 8, scope: !4218)
!4221 = !DILocation(line: 1178, column: 38, scope: !4218)
!4222 = !DILocation(line: 1178, column: 49, scope: !4218)
!4223 = !DILocation(line: 1178, column: 8, scope: !4218)
!4224 = !DILocation(line: 1179, column: 38, scope: !4218)
!4225 = !DILocation(line: 1179, column: 49, scope: !4218)
!4226 = !DILocation(line: 1179, column: 8, scope: !4218)
!4227 = !DILocation(line: 1180, column: 6, scope: !4218)
!4228 = !DILocation(line: 1182, column: 25, scope: !4211)
!4229 = !DILocation(line: 1182, column: 36, scope: !4211)
!4230 = !DILocation(line: 1182, column: 4, scope: !4211)
!4231 = !DILocation(line: 1183, column: 25, scope: !4211)
!4232 = !DILocation(line: 1183, column: 36, scope: !4211)
!4233 = !DILocation(line: 1183, column: 4, scope: !4211)
!4234 = !DILocation(line: 1184, column: 25, scope: !4211)
!4235 = !DILocation(line: 1184, column: 36, scope: !4211)
!4236 = !DILocation(line: 1184, column: 4, scope: !4211)
!4237 = !DILocation(line: 1185, column: 2, scope: !4211)
!4238 = !DILocation(line: 1186, column: 18, scope: !4201)
!4239 = !DILocation(line: 1186, column: 32, scope: !4201)
!4240 = !DILocation(line: 1186, column: 43, scope: !4201)
!4241 = !DILocation(line: 1186, column: 7, scope: !4201)
!4242 = !DILocation(line: 1187, column: 7, scope: !4201)
!4243 = !DILocation(line: 1188, column: 5, scope: !4201)
!4244 = !DILocation(line: 1189, column: 1, scope: !4126)
!4245 = distinct !DISubprogram(name: "df_mw_hardreg_chain_delete", scope: !3, file: !3, line: 1102, type: !4246, scopeLine: 1103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!4246 = !DISubroutineType(types: !4247)
!4247 = !{null, !1954}
!4248 = !DILocalVariable(name: "hardregs", arg: 1, scope: !4245, file: !3, line: 1102, type: !1954)
!4249 = !DILocation(line: 1102, column: 52, scope: !4245)
!4250 = !DILocalVariable(name: "problem_data", scope: !4245, file: !3, line: 1104, type: !813)
!4251 = !DILocation(line: 1104, column: 32, scope: !4245)
!4252 = !DILocation(line: 1106, column: 8, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4245, file: !3, line: 1106, column: 7)
!4254 = !DILocation(line: 1106, column: 7, scope: !4245)
!4255 = !DILocation(line: 1107, column: 5, scope: !4253)
!4256 = !DILocation(line: 1109, column: 50, scope: !4245)
!4257 = !DILocation(line: 1109, column: 59, scope: !4245)
!4258 = !DILocation(line: 1109, column: 18, scope: !4245)
!4259 = !DILocation(line: 1109, column: 16, scope: !4245)
!4260 = !DILocation(line: 1111, column: 3, scope: !4245)
!4261 = !DILocation(line: 1111, column: 11, scope: !4245)
!4262 = !DILocation(line: 1111, column: 10, scope: !4245)
!4263 = !DILocation(line: 1113, column: 18, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4245, file: !3, line: 1112, column: 5)
!4265 = !DILocation(line: 1113, column: 32, scope: !4264)
!4266 = !DILocation(line: 1113, column: 46, scope: !4264)
!4267 = !DILocation(line: 1113, column: 45, scope: !4264)
!4268 = !DILocation(line: 1113, column: 7, scope: !4264)
!4269 = !DILocation(line: 1114, column: 15, scope: !4264)
!4270 = distinct !{!4270, !4260, !4271}
!4271 = !DILocation(line: 1115, column: 5, scope: !4245)
!4272 = !DILocation(line: 1116, column: 1, scope: !4245)
!4273 = distinct !DISubprogram(name: "df_ref_chain_delete_du_chain", scope: !3, file: !3, line: 1066, type: !4274, scopeLine: 1067, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!4274 = !DISubroutineType(types: !4275)
!4275 = !{null, !919}
!4276 = !DILocalVariable(name: "ref_rec", arg: 1, scope: !4273, file: !3, line: 1066, type: !919)
!4277 = !DILocation(line: 1066, column: 39, scope: !4273)
!4278 = !DILocation(line: 1068, column: 3, scope: !4273)
!4279 = !DILocation(line: 1068, column: 11, scope: !4273)
!4280 = !DILocation(line: 1068, column: 10, scope: !4273)
!4281 = !DILocalVariable(name: "ref", scope: !4282, file: !3, line: 1070, type: !920)
!4282 = distinct !DILexicalBlock(scope: !4273, file: !3, line: 1069, column: 5)
!4283 = !DILocation(line: 1070, column: 14, scope: !4282)
!4284 = !DILocation(line: 1070, column: 21, scope: !4282)
!4285 = !DILocation(line: 1070, column: 20, scope: !4282)
!4286 = !DILocation(line: 1073, column: 11, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4282, file: !3, line: 1073, column: 11)
!4288 = !DILocation(line: 1073, column: 11, scope: !4282)
!4289 = !DILocation(line: 1074, column: 26, scope: !4287)
!4290 = !DILocation(line: 1074, column: 9, scope: !4287)
!4291 = !DILocation(line: 1075, column: 14, scope: !4282)
!4292 = distinct !{!4292, !4278, !4293}
!4293 = !DILocation(line: 1076, column: 5, scope: !4273)
!4294 = !DILocation(line: 1077, column: 1, scope: !4273)
!4295 = distinct !DISubprogram(name: "df_ref_chain_delete", scope: !3, file: !3, line: 1083, type: !4274, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!4296 = !DILocalVariable(name: "ref_rec", arg: 1, scope: !4295, file: !3, line: 1083, type: !919)
!4297 = !DILocation(line: 1083, column: 30, scope: !4295)
!4298 = !DILocalVariable(name: "start", scope: !4295, file: !3, line: 1085, type: !919)
!4299 = !DILocation(line: 1085, column: 11, scope: !4295)
!4300 = !DILocation(line: 1085, column: 19, scope: !4295)
!4301 = !DILocation(line: 1086, column: 3, scope: !4295)
!4302 = !DILocation(line: 1086, column: 11, scope: !4295)
!4303 = !DILocation(line: 1086, column: 10, scope: !4295)
!4304 = !DILocation(line: 1088, column: 29, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 1087, column: 5)
!4306 = !DILocation(line: 1088, column: 28, scope: !4305)
!4307 = !DILocation(line: 1088, column: 7, scope: !4305)
!4308 = !DILocation(line: 1089, column: 14, scope: !4305)
!4309 = distinct !{!4309, !4301, !4310}
!4310 = !DILocation(line: 1090, column: 5, scope: !4295)
!4311 = !DILocation(line: 1094, column: 8, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 1094, column: 7)
!4313 = !DILocation(line: 1094, column: 7, scope: !4312)
!4314 = !DILocation(line: 1094, column: 7, scope: !4295)
!4315 = !DILocation(line: 1095, column: 11, scope: !4312)
!4316 = !DILocation(line: 1095, column: 5, scope: !4312)
!4317 = !DILocation(line: 1096, column: 1, scope: !4295)
!4318 = distinct !DISubprogram(name: "df_insn_rescan", scope: !3, file: !3, line: 1223, type: !4319, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!4319 = !DISubroutineType(types: !4320)
!4320 = !{!1099, !931}
!4321 = !DILocalVariable(name: "insn", arg: 1, scope: !4318, file: !3, line: 1223, type: !931)
!4322 = !DILocation(line: 1223, column: 21, scope: !4318)
!4323 = !DILocalVariable(name: "uid", scope: !4318, file: !3, line: 1225, type: !7)
!4324 = !DILocation(line: 1225, column: 16, scope: !4318)
!4325 = !DILocation(line: 1225, column: 22, scope: !4318)
!4326 = !DILocalVariable(name: "insn_info", scope: !4318, file: !3, line: 1226, type: !1946)
!4327 = !DILocation(line: 1226, column: 24, scope: !4318)
!4328 = !DILocalVariable(name: "bb", scope: !4318, file: !3, line: 1227, type: !1244)
!4329 = !DILocation(line: 1227, column: 15, scope: !4318)
!4330 = !DILocation(line: 1227, column: 20, scope: !4318)
!4331 = !DILocalVariable(name: "collection_rec", scope: !4318, file: !3, line: 1228, type: !2997)
!4332 = !DILocation(line: 1228, column: 28, scope: !4318)
!4333 = !DILocation(line: 1230, column: 9, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4318, file: !3, line: 1230, column: 7)
!4335 = !DILocation(line: 1230, column: 13, scope: !4334)
!4336 = !DILocation(line: 1230, column: 18, scope: !4334)
!4337 = !DILocation(line: 1230, column: 7, scope: !4318)
!4338 = !DILocation(line: 1231, column: 5, scope: !4334)
!4339 = !DILocation(line: 1233, column: 8, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4318, file: !3, line: 1233, column: 7)
!4341 = !DILocation(line: 1233, column: 7, scope: !4318)
!4342 = !DILocation(line: 1235, column: 11, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 1235, column: 11)
!4344 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 1234, column: 5)
!4345 = !DILocation(line: 1235, column: 11, scope: !4344)
!4346 = !DILocation(line: 1236, column: 11, scope: !4343)
!4347 = !DILocation(line: 1236, column: 57, scope: !4343)
!4348 = !DILocation(line: 1236, column: 2, scope: !4343)
!4349 = !DILocation(line: 1237, column: 7, scope: !4344)
!4350 = !DILocation(line: 1241, column: 7, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4318, file: !3, line: 1241, column: 7)
!4352 = !DILocation(line: 1241, column: 11, scope: !4351)
!4353 = !DILocation(line: 1241, column: 28, scope: !4351)
!4354 = !DILocation(line: 1241, column: 7, scope: !4318)
!4355 = !DILocation(line: 1242, column: 5, scope: !4351)
!4356 = !DILocation(line: 1244, column: 20, scope: !4318)
!4357 = !DILocation(line: 1244, column: 3, scope: !4318)
!4358 = !DILocation(line: 1245, column: 3, scope: !4318)
!4359 = !DILocation(line: 1247, column: 15, scope: !4318)
!4360 = !DILocation(line: 1247, column: 13, scope: !4318)
!4361 = !DILocation(line: 1250, column: 7, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4318, file: !3, line: 1250, column: 7)
!4363 = !DILocation(line: 1250, column: 11, scope: !4362)
!4364 = !DILocation(line: 1250, column: 28, scope: !4362)
!4365 = !DILocation(line: 1250, column: 7, scope: !4318)
!4366 = !DILocation(line: 1252, column: 12, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 1252, column: 11)
!4368 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 1251, column: 5)
!4369 = !DILocation(line: 1252, column: 11, scope: !4368)
!4370 = !DILocation(line: 1254, column: 44, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4367, file: !3, line: 1253, column: 2)
!4372 = !DILocation(line: 1254, column: 16, scope: !4371)
!4373 = !DILocation(line: 1254, column: 14, scope: !4371)
!4374 = !DILocation(line: 1255, column: 4, scope: !4371)
!4375 = !DILocation(line: 1255, column: 15, scope: !4371)
!4376 = !DILocation(line: 1255, column: 20, scope: !4371)
!4377 = !DILocation(line: 1256, column: 4, scope: !4371)
!4378 = !DILocation(line: 1256, column: 15, scope: !4371)
!4379 = !DILocation(line: 1256, column: 20, scope: !4371)
!4380 = !DILocation(line: 1257, column: 4, scope: !4371)
!4381 = !DILocation(line: 1257, column: 15, scope: !4371)
!4382 = !DILocation(line: 1257, column: 23, scope: !4371)
!4383 = !DILocation(line: 1258, column: 4, scope: !4371)
!4384 = !DILocation(line: 1258, column: 15, scope: !4371)
!4385 = !DILocation(line: 1258, column: 27, scope: !4371)
!4386 = !DILocation(line: 1259, column: 2, scope: !4371)
!4387 = !DILocation(line: 1260, column: 11, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 1260, column: 11)
!4389 = !DILocation(line: 1260, column: 11, scope: !4368)
!4390 = !DILocation(line: 1261, column: 11, scope: !4388)
!4391 = !DILocation(line: 1261, column: 64, scope: !4388)
!4392 = !DILocation(line: 1261, column: 2, scope: !4388)
!4393 = !DILocation(line: 1263, column: 25, scope: !4368)
!4394 = !DILocation(line: 1263, column: 29, scope: !4368)
!4395 = !DILocation(line: 1263, column: 46, scope: !4368)
!4396 = !DILocation(line: 1263, column: 7, scope: !4368)
!4397 = !DILocation(line: 1264, column: 25, scope: !4368)
!4398 = !DILocation(line: 1264, column: 29, scope: !4368)
!4399 = !DILocation(line: 1264, column: 52, scope: !4368)
!4400 = !DILocation(line: 1264, column: 7, scope: !4368)
!4401 = !DILocation(line: 1265, column: 23, scope: !4368)
!4402 = !DILocation(line: 1265, column: 27, scope: !4368)
!4403 = !DILocation(line: 1265, column: 44, scope: !4368)
!4404 = !DILocation(line: 1265, column: 7, scope: !4368)
!4405 = !DILocation(line: 1266, column: 7, scope: !4368)
!4406 = !DILocation(line: 1269, column: 28, scope: !4318)
!4407 = !DILocation(line: 1269, column: 18, scope: !4318)
!4408 = !DILocation(line: 1269, column: 26, scope: !4318)
!4409 = !DILocation(line: 1270, column: 28, scope: !4318)
!4410 = !DILocation(line: 1270, column: 18, scope: !4318)
!4411 = !DILocation(line: 1270, column: 26, scope: !4318)
!4412 = !DILocation(line: 1271, column: 31, scope: !4318)
!4413 = !DILocation(line: 1271, column: 18, scope: !4318)
!4414 = !DILocation(line: 1271, column: 29, scope: !4318)
!4415 = !DILocation(line: 1272, column: 27, scope: !4318)
!4416 = !DILocation(line: 1272, column: 18, scope: !4318)
!4417 = !DILocation(line: 1272, column: 25, scope: !4318)
!4418 = !DILocation(line: 1274, column: 21, scope: !4318)
!4419 = !DILocation(line: 1274, column: 25, scope: !4318)
!4420 = !DILocation(line: 1274, column: 42, scope: !4318)
!4421 = !DILocation(line: 1274, column: 3, scope: !4318)
!4422 = !DILocation(line: 1275, column: 21, scope: !4318)
!4423 = !DILocation(line: 1275, column: 25, scope: !4318)
!4424 = !DILocation(line: 1275, column: 42, scope: !4318)
!4425 = !DILocation(line: 1275, column: 3, scope: !4318)
!4426 = !DILocation(line: 1276, column: 21, scope: !4318)
!4427 = !DILocation(line: 1276, column: 25, scope: !4318)
!4428 = !DILocation(line: 1276, column: 48, scope: !4318)
!4429 = !DILocation(line: 1276, column: 3, scope: !4318)
!4430 = !DILocation(line: 1277, column: 7, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4318, file: !3, line: 1277, column: 7)
!4432 = !DILocation(line: 1277, column: 7, scope: !4318)
!4433 = !DILocalVariable(name: "luid", scope: !4434, file: !3, line: 1279, type: !900)
!4434 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 1278, column: 5)
!4435 = !DILocation(line: 1279, column: 11, scope: !4434)
!4436 = !DILocalVariable(name: "the_same", scope: !4434, file: !3, line: 1280, type: !1099)
!4437 = !DILocation(line: 1280, column: 12, scope: !4434)
!4438 = !DILocation(line: 1280, column: 61, scope: !4434)
!4439 = !DILocation(line: 1280, column: 65, scope: !4434)
!4440 = !DILocation(line: 1280, column: 23, scope: !4434)
!4441 = !DILocation(line: 1282, column: 11, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 1282, column: 11)
!4443 = !DILocation(line: 1282, column: 11, scope: !4434)
!4444 = !DILocation(line: 1284, column: 4, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4442, file: !3, line: 1283, column: 2)
!4446 = !DILocation(line: 1285, column: 8, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4445, file: !3, line: 1285, column: 8)
!4448 = !DILocation(line: 1285, column: 8, scope: !4445)
!4449 = !DILocation(line: 1286, column: 15, scope: !4447)
!4450 = !DILocation(line: 1286, column: 78, scope: !4447)
!4451 = !DILocation(line: 1286, column: 6, scope: !4447)
!4452 = !DILocation(line: 1287, column: 4, scope: !4445)
!4453 = !DILocation(line: 1289, column: 11, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 1289, column: 11)
!4455 = !DILocation(line: 1289, column: 11, scope: !4434)
!4456 = !DILocation(line: 1290, column: 11, scope: !4454)
!4457 = !DILocation(line: 1290, column: 58, scope: !4454)
!4458 = !DILocation(line: 1290, column: 2, scope: !4454)
!4459 = !DILocation(line: 1294, column: 14, scope: !4434)
!4460 = !DILocation(line: 1294, column: 12, scope: !4434)
!4461 = !DILocation(line: 1295, column: 29, scope: !4434)
!4462 = !DILocation(line: 1295, column: 7, scope: !4434)
!4463 = !DILocation(line: 1296, column: 35, scope: !4434)
!4464 = !DILocation(line: 1296, column: 7, scope: !4434)
!4465 = !DILocation(line: 1297, column: 29, scope: !4434)
!4466 = !DILocation(line: 1297, column: 7, scope: !4434)
!4467 = !DILocation(line: 1297, column: 27, scope: !4434)
!4468 = !DILocation(line: 1298, column: 5, scope: !4434)
!4469 = !DILocalVariable(name: "insn_info", scope: !4470, file: !3, line: 1301, type: !1946)
!4470 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 1300, column: 5)
!4471 = !DILocation(line: 1301, column: 28, scope: !4470)
!4472 = !DILocation(line: 1301, column: 68, scope: !4470)
!4473 = !DILocation(line: 1301, column: 40, scope: !4470)
!4474 = !DILocation(line: 1302, column: 46, scope: !4470)
!4475 = !DILocation(line: 1302, column: 50, scope: !4470)
!4476 = !DILocation(line: 1302, column: 7, scope: !4470)
!4477 = !DILocation(line: 1303, column: 11, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4470, file: !3, line: 1303, column: 11)
!4479 = !DILocation(line: 1303, column: 11, scope: !4470)
!4480 = !DILocation(line: 1304, column: 11, scope: !4478)
!4481 = !DILocation(line: 1304, column: 60, scope: !4478)
!4482 = !DILocation(line: 1304, column: 2, scope: !4478)
!4483 = !DILocation(line: 1307, column: 43, scope: !4318)
!4484 = !DILocation(line: 1307, column: 47, scope: !4318)
!4485 = !DILocation(line: 1307, column: 3, scope: !4318)
!4486 = !DILocation(line: 1308, column: 7, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4318, file: !3, line: 1308, column: 7)
!4488 = !DILocation(line: 1308, column: 7, scope: !4318)
!4489 = !DILocation(line: 1309, column: 28, scope: !4487)
!4490 = !DILocation(line: 1309, column: 5, scope: !4487)
!4491 = !DILocation(line: 1311, column: 22, scope: !4487)
!4492 = !DILocation(line: 1311, column: 5, scope: !4487)
!4493 = !DILocation(line: 1313, column: 3, scope: !4318)
!4494 = !DILocation(line: 1314, column: 3, scope: !4318)
!4495 = !DILocation(line: 1315, column: 3, scope: !4318)
!4496 = !DILocation(line: 1316, column: 3, scope: !4318)
!4497 = !DILocation(line: 1318, column: 3, scope: !4318)
!4498 = !DILocation(line: 1319, column: 1, scope: !4318)
!4499 = distinct !DISubprogram(name: "VEC_df_ref_stack_alloc1", scope: !3, file: !3, line: 50, type: !4500, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!4500 = !DISubroutineType(types: !4501)
!4501 = !{!1997, !900, !1997}
!4502 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4499, file: !3, line: 50, type: !900)
!4503 = !DILocation(line: 50, column: 1, scope: !4499)
!4504 = !DILocalVariable(name: "space", arg: 2, scope: !4499, file: !3, line: 50, type: !1997)
!4505 = distinct !DISubprogram(name: "VEC_df_ref_base_embedded_size", scope: !3, file: !3, line: 49, type: !4506, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!4506 = !DISubroutineType(types: !4507)
!4507 = !{!827, !900}
!4508 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4505, file: !3, line: 49, type: !900)
!4509 = !DILocation(line: 49, column: 1, scope: !4505)
!4510 = distinct !DISubprogram(name: "VEC_df_mw_hardreg_ptr_stack_alloc1", scope: !3, file: !3, line: 57, type: !4511, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!4511 = !DISubroutineType(types: !4512)
!4512 = !{!2009, !900, !2009}
!4513 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4510, file: !3, line: 57, type: !900)
!4514 = !DILocation(line: 57, column: 1, scope: !4510)
!4515 = !DILocalVariable(name: "space", arg: 2, scope: !4510, file: !3, line: 57, type: !2009)
!4516 = distinct !DISubprogram(name: "VEC_df_mw_hardreg_ptr_base_embedded_size", scope: !3, file: !3, line: 56, type: !4506, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!4517 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4516, file: !3, line: 56, type: !900)
!4518 = !DILocation(line: 56, column: 1, scope: !4516)
!4519 = distinct !DISubprogram(name: "df_insn_refs_verify", scope: !3, file: !3, line: 4497, type: !4520, scopeLine: 4501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!4520 = !DISubroutineType(types: !4521)
!4521 = !{!1099, !3489, !1244, !931, !1099}
!4522 = !DILocalVariable(name: "collection_rec", arg: 1, scope: !4519, file: !3, line: 4497, type: !3489)
!4523 = !DILocation(line: 4497, column: 48, scope: !4519)
!4524 = !DILocalVariable(name: "bb", arg: 2, scope: !4519, file: !3, line: 4498, type: !1244)
!4525 = !DILocation(line: 4498, column: 20, scope: !4519)
!4526 = !DILocalVariable(name: "insn", arg: 3, scope: !4519, file: !3, line: 4499, type: !931)
!4527 = !DILocation(line: 4499, column: 26, scope: !4519)
!4528 = !DILocalVariable(name: "abort_if_fail", arg: 4, scope: !4519, file: !3, line: 4500, type: !1099)
!4529 = !DILocation(line: 4500, column: 13, scope: !4519)
!4530 = !DILocalVariable(name: "ret1", scope: !4519, file: !3, line: 4502, type: !1099)
!4531 = !DILocation(line: 4502, column: 8, scope: !4519)
!4532 = !DILocalVariable(name: "ret2", scope: !4519, file: !3, line: 4502, type: !1099)
!4533 = !DILocation(line: 4502, column: 14, scope: !4519)
!4534 = !DILocalVariable(name: "ret3", scope: !4519, file: !3, line: 4502, type: !1099)
!4535 = !DILocation(line: 4502, column: 20, scope: !4519)
!4536 = !DILocalVariable(name: "ret4", scope: !4519, file: !3, line: 4502, type: !1099)
!4537 = !DILocation(line: 4502, column: 26, scope: !4519)
!4538 = !DILocalVariable(name: "uid", scope: !4519, file: !3, line: 4503, type: !7)
!4539 = !DILocation(line: 4503, column: 16, scope: !4519)
!4540 = !DILocation(line: 4503, column: 22, scope: !4519)
!4541 = !DILocalVariable(name: "insn_info", scope: !4519, file: !3, line: 4504, type: !1946)
!4542 = !DILocation(line: 4504, column: 24, scope: !4519)
!4543 = !DILocation(line: 4504, column: 36, scope: !4519)
!4544 = !DILocation(line: 4506, column: 25, scope: !4519)
!4545 = !DILocation(line: 4506, column: 41, scope: !4519)
!4546 = !DILocation(line: 4506, column: 45, scope: !4519)
!4547 = !DILocation(line: 4506, column: 3, scope: !4519)
!4548 = !DILocation(line: 4508, column: 8, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 4508, column: 7)
!4550 = !DILocation(line: 4508, column: 7, scope: !4519)
!4551 = !DILocation(line: 4511, column: 11, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4553, file: !3, line: 4511, column: 11)
!4553 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 4509, column: 5)
!4554 = !DILocation(line: 4511, column: 11, scope: !4553)
!4555 = !DILocation(line: 4512, column: 2, scope: !4552)
!4556 = !DILocation(line: 4514, column: 2, scope: !4552)
!4557 = !DILocation(line: 4515, column: 5, scope: !4553)
!4558 = !DILocation(line: 4519, column: 26, scope: !4519)
!4559 = !DILocation(line: 4519, column: 42, scope: !4519)
!4560 = !DILocation(line: 4519, column: 51, scope: !4519)
!4561 = !DILocation(line: 4520, column: 5, scope: !4519)
!4562 = !DILocation(line: 4519, column: 10, scope: !4519)
!4563 = !DILocation(line: 4519, column: 8, scope: !4519)
!4564 = !DILocation(line: 4521, column: 26, scope: !4519)
!4565 = !DILocation(line: 4521, column: 42, scope: !4519)
!4566 = !DILocation(line: 4521, column: 51, scope: !4519)
!4567 = !DILocation(line: 4522, column: 5, scope: !4519)
!4568 = !DILocation(line: 4521, column: 10, scope: !4519)
!4569 = !DILocation(line: 4521, column: 8, scope: !4519)
!4570 = !DILocation(line: 4523, column: 26, scope: !4519)
!4571 = !DILocation(line: 4523, column: 42, scope: !4519)
!4572 = !DILocation(line: 4523, column: 54, scope: !4519)
!4573 = !DILocation(line: 4524, column: 5, scope: !4519)
!4574 = !DILocation(line: 4523, column: 10, scope: !4519)
!4575 = !DILocation(line: 4523, column: 8, scope: !4519)
!4576 = !DILocation(line: 4525, column: 25, scope: !4519)
!4577 = !DILocation(line: 4525, column: 41, scope: !4519)
!4578 = !DILocation(line: 4525, column: 49, scope: !4519)
!4579 = !DILocation(line: 4526, column: 10, scope: !4519)
!4580 = !DILocation(line: 4525, column: 10, scope: !4519)
!4581 = !DILocation(line: 4525, column: 8, scope: !4519)
!4582 = !DILocation(line: 4527, column: 11, scope: !4519)
!4583 = !DILocation(line: 4527, column: 16, scope: !4519)
!4584 = !DILocation(line: 4527, column: 19, scope: !4519)
!4585 = !DILocation(line: 4527, column: 24, scope: !4519)
!4586 = !DILocation(line: 4527, column: 27, scope: !4519)
!4587 = !DILocation(line: 4527, column: 32, scope: !4519)
!4588 = !DILocation(line: 4527, column: 35, scope: !4519)
!4589 = !DILocation(line: 0, scope: !4519)
!4590 = !DILocation(line: 4527, column: 10, scope: !4519)
!4591 = !DILocation(line: 4527, column: 3, scope: !4519)
!4592 = !DILocation(line: 4528, column: 1, scope: !4519)
!4593 = distinct !DISubprogram(name: "df_free_collection_rec", scope: !3, file: !3, line: 1195, type: !4594, scopeLine: 1196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!4594 = !DISubroutineType(types: !4595)
!4595 = !{null, !3489}
!4596 = !DILocalVariable(name: "collection_rec", arg: 1, scope: !4593, file: !3, line: 1195, type: !3489)
!4597 = !DILocation(line: 1195, column: 51, scope: !4593)
!4598 = !DILocalVariable(name: "ix", scope: !4593, file: !3, line: 1197, type: !7)
!4599 = !DILocation(line: 1197, column: 16, scope: !4593)
!4600 = !DILocalVariable(name: "problem_data", scope: !4593, file: !3, line: 1198, type: !813)
!4601 = !DILocation(line: 1198, column: 32, scope: !4593)
!4602 = !DILocation(line: 1199, column: 39, scope: !4593)
!4603 = !DILocation(line: 1199, column: 48, scope: !4593)
!4604 = !DILocation(line: 1199, column: 7, scope: !4593)
!4605 = !DILocalVariable(name: "ref", scope: !4593, file: !3, line: 1200, type: !920)
!4606 = !DILocation(line: 1200, column: 10, scope: !4593)
!4607 = !DILocalVariable(name: "mw", scope: !4593, file: !3, line: 1201, type: !1955)
!4608 = !DILocation(line: 1201, column: 25, scope: !4593)
!4609 = !DILocation(line: 1203, column: 11, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1203, column: 3)
!4611 = !DILocation(line: 1203, column: 8, scope: !4610)
!4612 = !DILocation(line: 1203, column: 16, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4610, file: !3, line: 1203, column: 3)
!4614 = !DILocation(line: 1203, column: 3, scope: !4610)
!4615 = !DILocation(line: 1204, column: 18, scope: !4613)
!4616 = !DILocation(line: 1204, column: 5, scope: !4613)
!4617 = !DILocation(line: 1203, column: 72, scope: !4613)
!4618 = !DILocation(line: 1203, column: 3, scope: !4613)
!4619 = distinct !{!4619, !4614, !4620}
!4620 = !DILocation(line: 1204, column: 21, scope: !4610)
!4621 = !DILocation(line: 1205, column: 11, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1205, column: 3)
!4623 = !DILocation(line: 1205, column: 8, scope: !4622)
!4624 = !DILocation(line: 1205, column: 16, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4622, file: !3, line: 1205, column: 3)
!4626 = !DILocation(line: 1205, column: 3, scope: !4622)
!4627 = !DILocation(line: 1206, column: 18, scope: !4625)
!4628 = !DILocation(line: 1206, column: 5, scope: !4625)
!4629 = !DILocation(line: 1205, column: 72, scope: !4625)
!4630 = !DILocation(line: 1205, column: 3, scope: !4625)
!4631 = distinct !{!4631, !4626, !4632}
!4632 = !DILocation(line: 1206, column: 21, scope: !4622)
!4633 = !DILocation(line: 1207, column: 11, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1207, column: 3)
!4635 = !DILocation(line: 1207, column: 8, scope: !4634)
!4636 = !DILocation(line: 1207, column: 16, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 1207, column: 3)
!4638 = !DILocation(line: 1207, column: 3, scope: !4634)
!4639 = !DILocation(line: 1208, column: 18, scope: !4637)
!4640 = !DILocation(line: 1208, column: 5, scope: !4637)
!4641 = !DILocation(line: 1207, column: 75, scope: !4637)
!4642 = !DILocation(line: 1207, column: 3, scope: !4637)
!4643 = distinct !{!4643, !4638, !4644}
!4644 = !DILocation(line: 1208, column: 21, scope: !4634)
!4645 = !DILocation(line: 1209, column: 11, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1209, column: 3)
!4647 = !DILocation(line: 1209, column: 8, scope: !4646)
!4648 = !DILocation(line: 1210, column: 8, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 1209, column: 3)
!4650 = !DILocation(line: 1209, column: 3, scope: !4646)
!4651 = !DILocation(line: 1212, column: 16, scope: !4649)
!4652 = !DILocation(line: 1212, column: 30, scope: !4649)
!4653 = !DILocation(line: 1212, column: 43, scope: !4649)
!4654 = !DILocation(line: 1212, column: 5, scope: !4649)
!4655 = !DILocation(line: 1211, column: 8, scope: !4649)
!4656 = !DILocation(line: 1209, column: 3, scope: !4649)
!4657 = distinct !{!4657, !4650, !4658}
!4658 = !DILocation(line: 1212, column: 45, scope: !4646)
!4659 = !DILocation(line: 1214, column: 3, scope: !4593)
!4660 = !DILocation(line: 1215, column: 3, scope: !4593)
!4661 = !DILocation(line: 1216, column: 3, scope: !4593)
!4662 = !DILocation(line: 1217, column: 3, scope: !4593)
!4663 = !DILocation(line: 1218, column: 1, scope: !4593)
!4664 = distinct !DISubprogram(name: "df_insn_refs_collect", scope: !3, file: !3, line: 3554, type: !4665, scopeLine: 3556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!4665 = !DISubroutineType(types: !4666)
!4666 = !{null, !3489, !1244, !1946}
!4667 = !DILocalVariable(name: "collection_rec", arg: 1, scope: !4664, file: !3, line: 3554, type: !3489)
!4668 = !DILocation(line: 3554, column: 49, scope: !4664)
!4669 = !DILocalVariable(name: "bb", arg: 2, scope: !4664, file: !3, line: 3555, type: !1244)
!4670 = !DILocation(line: 3555, column: 21, scope: !4664)
!4671 = !DILocalVariable(name: "insn_info", arg: 3, scope: !4664, file: !3, line: 3555, type: !1946)
!4672 = !DILocation(line: 3555, column: 46, scope: !4664)
!4673 = !DILocalVariable(name: "note", scope: !4664, file: !3, line: 3557, type: !931)
!4674 = !DILocation(line: 3557, column: 7, scope: !4664)
!4675 = !DILocalVariable(name: "is_cond_exec", scope: !4664, file: !3, line: 3558, type: !1099)
!4676 = !DILocation(line: 3558, column: 8, scope: !4664)
!4677 = !DILocation(line: 3558, column: 24, scope: !4664)
!4678 = !DILocation(line: 3558, column: 61, scope: !4664)
!4679 = !DILocation(line: 3558, column: 23, scope: !4664)
!4680 = !DILocation(line: 3561, column: 3, scope: !4664)
!4681 = !DILocation(line: 3562, column: 3, scope: !4664)
!4682 = !DILocation(line: 3563, column: 3, scope: !4664)
!4683 = !DILocation(line: 3564, column: 3, scope: !4664)
!4684 = !DILocation(line: 3567, column: 19, scope: !4664)
!4685 = !DILocation(line: 3567, column: 35, scope: !4664)
!4686 = !DILocation(line: 3567, column: 62, scope: !4664)
!4687 = !DILocation(line: 3567, column: 66, scope: !4664)
!4688 = !DILocation(line: 3567, column: 3, scope: !4664)
!4689 = !DILocation(line: 3570, column: 15, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 3570, column: 3)
!4691 = !DILocation(line: 3570, column: 13, scope: !4690)
!4692 = !DILocation(line: 3570, column: 8, scope: !4690)
!4693 = !DILocation(line: 3570, column: 44, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 3570, column: 3)
!4695 = !DILocation(line: 3570, column: 3, scope: !4690)
!4696 = !DILocation(line: 3573, column: 15, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4694, file: !3, line: 3572, column: 5)
!4698 = !DILocation(line: 3573, column: 7, scope: !4697)
!4699 = !DILocation(line: 3577, column: 43, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 3574, column: 9)
!4701 = !DILocation(line: 3578, column: 28, scope: !4700)
!4702 = !DILocation(line: 3579, column: 27, scope: !4700)
!4703 = !DILocation(line: 3579, column: 31, scope: !4700)
!4704 = !DILocation(line: 3577, column: 11, scope: !4700)
!4705 = !DILocation(line: 3580, column: 11, scope: !4700)
!4706 = !DILocation(line: 3583, column: 39, scope: !4700)
!4707 = !DILocation(line: 3584, column: 26, scope: !4700)
!4708 = !DILocation(line: 3585, column: 32, scope: !4700)
!4709 = !DILocation(line: 3585, column: 36, scope: !4700)
!4710 = !DILocation(line: 3583, column: 11, scope: !4700)
!4711 = !DILocation(line: 3588, column: 39, scope: !4700)
!4712 = !DILocation(line: 3589, column: 26, scope: !4700)
!4713 = !DILocation(line: 3590, column: 32, scope: !4700)
!4714 = !DILocation(line: 3590, column: 36, scope: !4700)
!4715 = !DILocation(line: 3588, column: 11, scope: !4700)
!4716 = !DILocation(line: 3593, column: 11, scope: !4700)
!4717 = !DILocation(line: 3595, column: 11, scope: !4700)
!4718 = !DILocation(line: 3597, column: 5, scope: !4697)
!4719 = !DILocation(line: 3571, column: 15, scope: !4694)
!4720 = !DILocation(line: 3571, column: 13, scope: !4694)
!4721 = !DILocation(line: 3570, column: 3, scope: !4694)
!4722 = distinct !{!4722, !4695, !4723}
!4723 = !DILocation(line: 3597, column: 5, scope: !4690)
!4724 = !DILocation(line: 3599, column: 7, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 3599, column: 7)
!4726 = !DILocation(line: 3599, column: 7, scope: !4664)
!4727 = !DILocation(line: 3600, column: 23, scope: !4725)
!4728 = !DILocation(line: 3600, column: 39, scope: !4725)
!4729 = !DILocation(line: 3600, column: 43, scope: !4725)
!4730 = !DILocation(line: 3601, column: 10, scope: !4725)
!4731 = !DILocation(line: 3601, column: 9, scope: !4725)
!4732 = !DILocation(line: 3600, column: 5, scope: !4725)
!4733 = !DILocation(line: 3604, column: 35, scope: !4664)
!4734 = !DILocation(line: 3605, column: 6, scope: !4664)
!4735 = !DILocation(line: 3605, column: 49, scope: !4664)
!4736 = !DILocation(line: 3605, column: 53, scope: !4664)
!4737 = !DILocation(line: 3604, column: 3, scope: !4664)
!4738 = !DILocation(line: 3609, column: 7, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 3609, column: 7)
!4740 = !DILocation(line: 3609, column: 7, scope: !4664)
!4741 = !DILocation(line: 3610, column: 30, scope: !4739)
!4742 = !DILocation(line: 3610, column: 5, scope: !4739)
!4743 = !DILocation(line: 3612, column: 31, scope: !4664)
!4744 = !DILocation(line: 3612, column: 3, scope: !4664)
!4745 = !DILocation(line: 3613, column: 1, scope: !4664)
!4746 = distinct !DISubprogram(name: "df_refs_add_to_chains", scope: !3, file: !3, line: 2744, type: !4747, scopeLine: 2746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!4747 = !DISubroutineType(types: !4748)
!4748 = !{null, !3489, !1244, !931}
!4749 = !DILocalVariable(name: "collection_rec", arg: 1, scope: !4746, file: !3, line: 2744, type: !3489)
!4750 = !DILocation(line: 2744, column: 50, scope: !4746)
!4751 = !DILocalVariable(name: "bb", arg: 2, scope: !4746, file: !3, line: 2745, type: !1244)
!4752 = !DILocation(line: 2745, column: 22, scope: !4746)
!4753 = !DILocalVariable(name: "insn", arg: 3, scope: !4746, file: !3, line: 2745, type: !931)
!4754 = !DILocation(line: 2745, column: 30, scope: !4746)
!4755 = !DILocation(line: 2747, column: 7, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4746, file: !3, line: 2747, column: 7)
!4757 = !DILocation(line: 2747, column: 7, scope: !4746)
!4758 = !DILocalVariable(name: "insn_rec", scope: !4759, file: !3, line: 2749, type: !1946)
!4759 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2748, column: 5)
!4760 = !DILocation(line: 2749, column: 28, scope: !4759)
!4761 = !DILocation(line: 2749, column: 39, scope: !4759)
!4762 = !DILocation(line: 2753, column: 11, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 2753, column: 11)
!4764 = !DILocation(line: 2753, column: 27, scope: !4763)
!4765 = !DILocation(line: 2753, column: 11, scope: !4759)
!4766 = !DILocation(line: 2755, column: 4, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 2754, column: 2)
!4768 = !DILocation(line: 2755, column: 4, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 2755, column: 4)
!4770 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 2755, column: 4)
!4771 = !DILocation(line: 2755, column: 4, scope: !4770)
!4772 = !DILocation(line: 2757, column: 25, scope: !4767)
!4773 = !DILocation(line: 2757, column: 29, scope: !4767)
!4774 = !DILocation(line: 2757, column: 45, scope: !4767)
!4775 = !DILocation(line: 2758, column: 11, scope: !4767)
!4776 = !DILocation(line: 2758, column: 15, scope: !4767)
!4777 = !DILocation(line: 2759, column: 12, scope: !4767)
!4778 = !DILocation(line: 2759, column: 16, scope: !4767)
!4779 = !DILocation(line: 2757, column: 8, scope: !4767)
!4780 = !DILocation(line: 2756, column: 4, scope: !4767)
!4781 = !DILocation(line: 2756, column: 14, scope: !4767)
!4782 = !DILocation(line: 2757, column: 6, scope: !4767)
!4783 = !DILocation(line: 2760, column: 2, scope: !4767)
!4784 = !DILocation(line: 2761, column: 11, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 2761, column: 11)
!4786 = !DILocation(line: 2761, column: 27, scope: !4785)
!4787 = !DILocation(line: 2761, column: 11, scope: !4759)
!4788 = !DILocation(line: 2763, column: 4, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4785, file: !3, line: 2762, column: 2)
!4790 = !DILocation(line: 2763, column: 4, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4792, file: !3, line: 2763, column: 4)
!4792 = distinct !DILexicalBlock(scope: !4789, file: !3, line: 2763, column: 4)
!4793 = !DILocation(line: 2763, column: 4, scope: !4792)
!4794 = !DILocation(line: 2765, column: 25, scope: !4789)
!4795 = !DILocation(line: 2765, column: 29, scope: !4789)
!4796 = !DILocation(line: 2765, column: 45, scope: !4789)
!4797 = !DILocation(line: 2766, column: 11, scope: !4789)
!4798 = !DILocation(line: 2766, column: 15, scope: !4789)
!4799 = !DILocation(line: 2767, column: 12, scope: !4789)
!4800 = !DILocation(line: 2767, column: 16, scope: !4789)
!4801 = !DILocation(line: 2765, column: 8, scope: !4789)
!4802 = !DILocation(line: 2764, column: 4, scope: !4789)
!4803 = !DILocation(line: 2764, column: 14, scope: !4789)
!4804 = !DILocation(line: 2765, column: 6, scope: !4789)
!4805 = !DILocation(line: 2768, column: 2, scope: !4789)
!4806 = !DILocation(line: 2769, column: 11, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 2769, column: 11)
!4808 = !DILocation(line: 2769, column: 27, scope: !4807)
!4809 = !DILocation(line: 2769, column: 11, scope: !4759)
!4810 = !DILocation(line: 2771, column: 4, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4807, file: !3, line: 2770, column: 2)
!4812 = !DILocation(line: 2771, column: 4, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 2771, column: 4)
!4814 = distinct !DILexicalBlock(scope: !4811, file: !3, line: 2771, column: 4)
!4815 = !DILocation(line: 2771, column: 4, scope: !4814)
!4816 = !DILocation(line: 2773, column: 25, scope: !4811)
!4817 = !DILocation(line: 2773, column: 29, scope: !4811)
!4818 = !DILocation(line: 2773, column: 45, scope: !4811)
!4819 = !DILocation(line: 2774, column: 11, scope: !4811)
!4820 = !DILocation(line: 2774, column: 15, scope: !4811)
!4821 = !DILocation(line: 2775, column: 12, scope: !4811)
!4822 = !DILocation(line: 2775, column: 16, scope: !4811)
!4823 = !DILocation(line: 2773, column: 8, scope: !4811)
!4824 = !DILocation(line: 2772, column: 4, scope: !4811)
!4825 = !DILocation(line: 2772, column: 14, scope: !4811)
!4826 = !DILocation(line: 2773, column: 6, scope: !4811)
!4827 = !DILocation(line: 2776, column: 2, scope: !4811)
!4828 = !DILocation(line: 2777, column: 11, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 2777, column: 11)
!4830 = !DILocation(line: 2777, column: 27, scope: !4829)
!4831 = !DILocation(line: 2777, column: 11, scope: !4759)
!4832 = !DILocation(line: 2779, column: 4, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4829, file: !3, line: 2778, column: 2)
!4834 = !DILocation(line: 2779, column: 4, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4836, file: !3, line: 2779, column: 4)
!4836 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 2779, column: 4)
!4837 = !DILocation(line: 2779, column: 4, scope: !4836)
!4838 = !DILocation(line: 2781, column: 24, scope: !4833)
!4839 = !DILocation(line: 2781, column: 40, scope: !4833)
!4840 = !DILocation(line: 2781, column: 8, scope: !4833)
!4841 = !DILocation(line: 2780, column: 4, scope: !4833)
!4842 = !DILocation(line: 2780, column: 14, scope: !4833)
!4843 = !DILocation(line: 2781, column: 6, scope: !4833)
!4844 = !DILocation(line: 2782, column: 2, scope: !4833)
!4845 = !DILocation(line: 2783, column: 5, scope: !4759)
!4846 = !DILocalVariable(name: "bb_info", scope: !4847, file: !3, line: 2786, type: !915)
!4847 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 2785, column: 5)
!4848 = !DILocation(line: 2786, column: 31, scope: !4847)
!4849 = !DILocation(line: 2786, column: 62, scope: !4847)
!4850 = !DILocation(line: 2786, column: 66, scope: !4847)
!4851 = !DILocation(line: 2786, column: 41, scope: !4847)
!4852 = !DILocation(line: 2788, column: 7, scope: !4847)
!4853 = !DILocation(line: 2788, column: 7, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 2788, column: 7)
!4855 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 2788, column: 7)
!4856 = !DILocation(line: 2788, column: 7, scope: !4855)
!4857 = !DILocation(line: 2790, column: 21, scope: !4847)
!4858 = !DILocation(line: 2790, column: 25, scope: !4847)
!4859 = !DILocation(line: 2790, column: 41, scope: !4847)
!4860 = !DILocation(line: 2791, column: 7, scope: !4847)
!4861 = !DILocation(line: 2791, column: 11, scope: !4847)
!4862 = !DILocation(line: 2792, column: 8, scope: !4847)
!4863 = !DILocation(line: 2792, column: 12, scope: !4847)
!4864 = !DILocation(line: 2790, column: 4, scope: !4847)
!4865 = !DILocation(line: 2789, column: 7, scope: !4847)
!4866 = !DILocation(line: 2789, column: 16, scope: !4847)
!4867 = !DILocation(line: 2790, column: 2, scope: !4847)
!4868 = !DILocation(line: 2793, column: 7, scope: !4847)
!4869 = !DILocation(line: 2793, column: 7, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 2793, column: 7)
!4871 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 2793, column: 7)
!4872 = !DILocation(line: 2793, column: 7, scope: !4871)
!4873 = !DILocation(line: 2795, column: 21, scope: !4847)
!4874 = !DILocation(line: 2795, column: 25, scope: !4847)
!4875 = !DILocation(line: 2795, column: 41, scope: !4847)
!4876 = !DILocation(line: 2796, column: 7, scope: !4847)
!4877 = !DILocation(line: 2796, column: 11, scope: !4847)
!4878 = !DILocation(line: 2797, column: 8, scope: !4847)
!4879 = !DILocation(line: 2797, column: 12, scope: !4847)
!4880 = !DILocation(line: 2795, column: 4, scope: !4847)
!4881 = !DILocation(line: 2794, column: 7, scope: !4847)
!4882 = !DILocation(line: 2794, column: 16, scope: !4847)
!4883 = !DILocation(line: 2795, column: 2, scope: !4847)
!4884 = !DILocation(line: 2799, column: 1, scope: !4746)
!4885 = distinct !DISubprogram(name: "VEC_df_ref_stack_free", scope: !3, file: !3, line: 50, type: !4886, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!4886 = !DISubroutineType(types: !4887)
!4887 = !{null, !4888}
!4888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64)
!4889 = !DILocalVariable(name: "vec_", arg: 1, scope: !4885, file: !3, line: 50, type: !4888)
!4890 = !DILocation(line: 50, column: 1, scope: !4885)
!4891 = !DILocation(line: 50, column: 1, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 50, column: 1)
!4893 = distinct !DISubprogram(name: "VEC_df_mw_hardreg_ptr_stack_free", scope: !3, file: !3, line: 57, type: !4894, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!4894 = !DISubroutineType(types: !4895)
!4895 = !{null, !4896}
!4896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!4897 = !DILocalVariable(name: "vec_", arg: 1, scope: !4893, file: !3, line: 57, type: !4896)
!4898 = !DILocation(line: 57, column: 1, scope: !4893)
!4899 = !DILocation(line: 57, column: 1, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4893, file: !3, line: 57, column: 1)
!4901 = distinct !DISubprogram(name: "df_insn_rescan_debug_internal", scope: !3, file: !3, line: 1325, type: !4319, scopeLine: 1326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!4902 = !DILocalVariable(name: "insn", arg: 1, scope: !4901, file: !3, line: 1325, type: !931)
!4903 = !DILocation(line: 1325, column: 36, scope: !4901)
!4904 = !DILocalVariable(name: "uid", scope: !4901, file: !3, line: 1327, type: !7)
!4905 = !DILocation(line: 1327, column: 16, scope: !4901)
!4906 = !DILocation(line: 1327, column: 22, scope: !4901)
!4907 = !DILocalVariable(name: "insn_info", scope: !4901, file: !3, line: 1328, type: !1946)
!4908 = !DILocation(line: 1328, column: 24, scope: !4901)
!4909 = !DILocation(line: 1330, column: 3, scope: !4901)
!4910 = !DILocation(line: 1333, column: 8, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4901, file: !3, line: 1333, column: 7)
!4912 = !DILocation(line: 1333, column: 7, scope: !4901)
!4913 = !DILocation(line: 1334, column: 5, scope: !4911)
!4914 = !DILocation(line: 1336, column: 15, scope: !4901)
!4915 = !DILocation(line: 1336, column: 13, scope: !4901)
!4916 = !DILocation(line: 1337, column: 8, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4901, file: !3, line: 1337, column: 7)
!4918 = !DILocation(line: 1337, column: 7, scope: !4901)
!4919 = !DILocation(line: 1338, column: 5, scope: !4917)
!4920 = !DILocation(line: 1340, column: 7, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4901, file: !3, line: 1340, column: 7)
!4922 = !DILocation(line: 1340, column: 7, scope: !4901)
!4923 = !DILocation(line: 1341, column: 14, scope: !4921)
!4924 = !DILocation(line: 1341, column: 65, scope: !4921)
!4925 = !DILocation(line: 1341, column: 5, scope: !4921)
!4926 = !DILocation(line: 1343, column: 21, scope: !4901)
!4927 = !DILocation(line: 1343, column: 25, scope: !4901)
!4928 = !DILocation(line: 1343, column: 42, scope: !4901)
!4929 = !DILocation(line: 1343, column: 3, scope: !4901)
!4930 = !DILocation(line: 1344, column: 21, scope: !4901)
!4931 = !DILocation(line: 1344, column: 25, scope: !4901)
!4932 = !DILocation(line: 1344, column: 42, scope: !4901)
!4933 = !DILocation(line: 1344, column: 3, scope: !4901)
!4934 = !DILocation(line: 1345, column: 21, scope: !4901)
!4935 = !DILocation(line: 1345, column: 25, scope: !4901)
!4936 = !DILocation(line: 1345, column: 48, scope: !4901)
!4937 = !DILocation(line: 1345, column: 3, scope: !4901)
!4938 = !DILocation(line: 1347, column: 8, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4901, file: !3, line: 1347, column: 7)
!4940 = !DILocation(line: 1347, column: 19, scope: !4939)
!4941 = !DILocation(line: 1347, column: 7, scope: !4901)
!4942 = !DILocation(line: 1348, column: 5, scope: !4939)
!4943 = !DILocation(line: 1350, column: 7, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4901, file: !3, line: 1350, column: 7)
!4945 = !DILocation(line: 1350, column: 18, scope: !4944)
!4946 = !DILocation(line: 1350, column: 23, scope: !4944)
!4947 = !DILocation(line: 1351, column: 7, scope: !4944)
!4948 = !DILocation(line: 1351, column: 10, scope: !4944)
!4949 = !DILocation(line: 1351, column: 21, scope: !4944)
!4950 = !DILocation(line: 1351, column: 26, scope: !4944)
!4951 = !DILocation(line: 1352, column: 7, scope: !4944)
!4952 = !DILocation(line: 1352, column: 10, scope: !4944)
!4953 = !DILocation(line: 1352, column: 21, scope: !4944)
!4954 = !DILocation(line: 1352, column: 29, scope: !4944)
!4955 = !DILocation(line: 1353, column: 7, scope: !4944)
!4956 = !DILocation(line: 1353, column: 10, scope: !4944)
!4957 = !DILocation(line: 1353, column: 21, scope: !4944)
!4958 = !DILocation(line: 1353, column: 33, scope: !4944)
!4959 = !DILocation(line: 1350, column: 7, scope: !4901)
!4960 = !DILocation(line: 1354, column: 5, scope: !4944)
!4961 = !DILocation(line: 1356, column: 31, scope: !4901)
!4962 = !DILocation(line: 1356, column: 42, scope: !4901)
!4963 = !DILocation(line: 1356, column: 3, scope: !4901)
!4964 = !DILocation(line: 1358, column: 7, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4901, file: !3, line: 1358, column: 7)
!4966 = !DILocation(line: 1358, column: 7, scope: !4901)
!4967 = !DILocation(line: 1360, column: 37, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4965, file: !3, line: 1359, column: 5)
!4969 = !DILocation(line: 1360, column: 48, scope: !4968)
!4970 = !DILocation(line: 1360, column: 7, scope: !4968)
!4971 = !DILocation(line: 1361, column: 37, scope: !4968)
!4972 = !DILocation(line: 1361, column: 48, scope: !4968)
!4973 = !DILocation(line: 1361, column: 7, scope: !4968)
!4974 = !DILocation(line: 1362, column: 37, scope: !4968)
!4975 = !DILocation(line: 1362, column: 48, scope: !4968)
!4976 = !DILocation(line: 1362, column: 7, scope: !4968)
!4977 = !DILocation(line: 1363, column: 5, scope: !4968)
!4978 = !DILocation(line: 1365, column: 24, scope: !4901)
!4979 = !DILocation(line: 1365, column: 35, scope: !4901)
!4980 = !DILocation(line: 1365, column: 3, scope: !4901)
!4981 = !DILocation(line: 1366, column: 24, scope: !4901)
!4982 = !DILocation(line: 1366, column: 35, scope: !4901)
!4983 = !DILocation(line: 1366, column: 3, scope: !4901)
!4984 = !DILocation(line: 1367, column: 24, scope: !4901)
!4985 = !DILocation(line: 1367, column: 35, scope: !4901)
!4986 = !DILocation(line: 1367, column: 3, scope: !4901)
!4987 = !DILocation(line: 1369, column: 3, scope: !4901)
!4988 = !DILocation(line: 1369, column: 14, scope: !4901)
!4989 = !DILocation(line: 1369, column: 19, scope: !4901)
!4990 = !DILocation(line: 1370, column: 3, scope: !4901)
!4991 = !DILocation(line: 1370, column: 14, scope: !4901)
!4992 = !DILocation(line: 1370, column: 19, scope: !4901)
!4993 = !DILocation(line: 1371, column: 3, scope: !4901)
!4994 = !DILocation(line: 1371, column: 14, scope: !4901)
!4995 = !DILocation(line: 1371, column: 22, scope: !4901)
!4996 = !DILocation(line: 1372, column: 3, scope: !4901)
!4997 = !DILocation(line: 1372, column: 14, scope: !4901)
!4998 = !DILocation(line: 1372, column: 26, scope: !4901)
!4999 = !DILocation(line: 1374, column: 3, scope: !4901)
!5000 = !DILocation(line: 1375, column: 1, scope: !4901)
!5001 = distinct !DISubprogram(name: "df_insn_rescan_all", scope: !3, file: !3, line: 1383, type: !2036, scopeLine: 1384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!5002 = !DILocalVariable(name: "no_insn_rescan", scope: !5001, file: !3, line: 1385, type: !1099)
!5003 = !DILocation(line: 1385, column: 8, scope: !5001)
!5004 = !DILocalVariable(name: "defer_insn_rescan", scope: !5001, file: !3, line: 1386, type: !1099)
!5005 = !DILocation(line: 1386, column: 8, scope: !5001)
!5006 = !DILocalVariable(name: "bb", scope: !5001, file: !3, line: 1387, type: !1244)
!5007 = !DILocation(line: 1387, column: 15, scope: !5001)
!5008 = !DILocalVariable(name: "bi", scope: !5001, file: !3, line: 1388, type: !5009)
!5009 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !853, line: 218, baseType: !5010)
!5010 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !853, line: 203, size: 256, elements: !5011)
!5011 = !{!5012, !5013, !5014, !5015}
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !5010, file: !853, line: 206, baseType: !873, size: 64)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !5010, file: !853, line: 209, baseType: !873, size: 64, offset: 64)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !5010, file: !853, line: 212, baseType: !7, size: 32, offset: 128)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !5010, file: !853, line: 217, baseType: !865, size: 64, offset: 192)
!5016 = !DILocation(line: 1388, column: 19, scope: !5001)
!5017 = !DILocalVariable(name: "uid", scope: !5001, file: !3, line: 1389, type: !7)
!5018 = !DILocation(line: 1389, column: 16, scope: !5001)
!5019 = !DILocalVariable(name: "tmp", scope: !5001, file: !3, line: 1390, type: !2022)
!5020 = !DILocation(line: 1390, column: 10, scope: !5001)
!5021 = !DILocation(line: 1390, column: 16, scope: !5001)
!5022 = !DILocation(line: 1392, column: 7, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 1392, column: 7)
!5024 = !DILocation(line: 1392, column: 11, scope: !5023)
!5025 = !DILocation(line: 1392, column: 28, scope: !5023)
!5026 = !DILocation(line: 1392, column: 7, scope: !5001)
!5027 = !DILocation(line: 1394, column: 7, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5023, file: !3, line: 1393, column: 5)
!5029 = !DILocation(line: 1395, column: 22, scope: !5028)
!5030 = !DILocation(line: 1396, column: 5, scope: !5028)
!5031 = !DILocation(line: 1398, column: 7, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 1398, column: 7)
!5033 = !DILocation(line: 1398, column: 11, scope: !5032)
!5034 = !DILocation(line: 1398, column: 28, scope: !5032)
!5035 = !DILocation(line: 1398, column: 7, scope: !5001)
!5036 = !DILocation(line: 1400, column: 7, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5032, file: !3, line: 1399, column: 5)
!5038 = !DILocation(line: 1401, column: 25, scope: !5037)
!5039 = !DILocation(line: 1402, column: 5, scope: !5037)
!5040 = !DILocation(line: 1404, column: 16, scope: !5001)
!5041 = !DILocation(line: 1404, column: 21, scope: !5001)
!5042 = !DILocation(line: 1404, column: 25, scope: !5001)
!5043 = !DILocation(line: 1404, column: 3, scope: !5001)
!5044 = !DILocation(line: 1405, column: 3, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 1405, column: 3)
!5046 = !DILocation(line: 1405, column: 3, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1405, column: 3)
!5048 = !DILocalVariable(name: "insn_info", scope: !5049, file: !3, line: 1407, type: !1946)
!5049 = distinct !DILexicalBlock(scope: !5047, file: !3, line: 1406, column: 5)
!5050 = !DILocation(line: 1407, column: 28, scope: !5049)
!5051 = !DILocation(line: 1407, column: 40, scope: !5049)
!5052 = !DILocation(line: 1408, column: 11, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5049, file: !3, line: 1408, column: 11)
!5054 = !DILocation(line: 1408, column: 11, scope: !5049)
!5055 = !DILocation(line: 1409, column: 24, scope: !5053)
!5056 = !DILocation(line: 1409, column: 2, scope: !5053)
!5057 = !DILocation(line: 1410, column: 5, scope: !5049)
!5058 = distinct !{!5058, !5044, !5059}
!5059 = !DILocation(line: 1410, column: 5, scope: !5045)
!5060 = !DILocation(line: 1412, column: 3, scope: !5001)
!5061 = !DILocation(line: 1413, column: 17, scope: !5001)
!5062 = !DILocation(line: 1413, column: 21, scope: !5001)
!5063 = !DILocation(line: 1413, column: 3, scope: !5001)
!5064 = !DILocation(line: 1414, column: 17, scope: !5001)
!5065 = !DILocation(line: 1414, column: 21, scope: !5001)
!5066 = !DILocation(line: 1414, column: 3, scope: !5001)
!5067 = !DILocation(line: 1415, column: 17, scope: !5001)
!5068 = !DILocation(line: 1415, column: 21, scope: !5001)
!5069 = !DILocation(line: 1415, column: 3, scope: !5001)
!5070 = !DILocation(line: 1417, column: 3, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 1417, column: 3)
!5072 = !DILocation(line: 1417, column: 3, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 1417, column: 3)
!5074 = !DILocalVariable(name: "insn", scope: !5075, file: !3, line: 1419, type: !931)
!5075 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 1418, column: 5)
!5076 = !DILocation(line: 1419, column: 11, scope: !5075)
!5077 = !DILocation(line: 1420, column: 7, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5075, file: !3, line: 1420, column: 7)
!5079 = !DILocation(line: 1420, column: 7, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 1420, column: 7)
!5081 = !DILocation(line: 0, scope: !5080)
!5082 = !DILocation(line: 1422, column: 20, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 1421, column: 2)
!5084 = !DILocation(line: 1422, column: 4, scope: !5083)
!5085 = !DILocation(line: 1423, column: 2, scope: !5083)
!5086 = distinct !{!5086, !5077, !5087}
!5087 = !DILocation(line: 1423, column: 2, scope: !5078)
!5088 = !DILocation(line: 1424, column: 5, scope: !5075)
!5089 = distinct !{!5089, !5070, !5090}
!5090 = !DILocation(line: 1424, column: 5, scope: !5071)
!5091 = !DILocation(line: 1426, column: 7, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 1426, column: 7)
!5093 = !DILocation(line: 1426, column: 7, scope: !5001)
!5094 = !DILocation(line: 1427, column: 5, scope: !5092)
!5095 = !DILocation(line: 1428, column: 7, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 1428, column: 7)
!5097 = !DILocation(line: 1428, column: 7, scope: !5001)
!5098 = !DILocation(line: 1429, column: 5, scope: !5096)
!5099 = !DILocation(line: 1430, column: 1, scope: !5001)
!5100 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !853, file: !853, line: 224, type: !5101, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!5101 = !DISubroutineType(types: !5102)
!5102 = !{null, !5103, !5104, !7, !1995}
!5103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5009, size: 64)
!5104 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !932, line: 48, baseType: !5105)
!5105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5106, size: 64)
!5106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !870)
!5107 = !DILocalVariable(name: "bi", arg: 1, scope: !5100, file: !853, line: 224, type: !5103)
!5108 = !DILocation(line: 224, column: 37, scope: !5100)
!5109 = !DILocalVariable(name: "map", arg: 2, scope: !5100, file: !853, line: 224, type: !5104)
!5110 = !DILocation(line: 224, column: 54, scope: !5100)
!5111 = !DILocalVariable(name: "start_bit", arg: 3, scope: !5100, file: !853, line: 225, type: !7)
!5112 = !DILocation(line: 225, column: 15, scope: !5100)
!5113 = !DILocalVariable(name: "bit_no", arg: 4, scope: !5100, file: !853, line: 225, type: !1995)
!5114 = !DILocation(line: 225, column: 36, scope: !5100)
!5115 = !DILocation(line: 227, column: 14, scope: !5100)
!5116 = !DILocation(line: 227, column: 19, scope: !5100)
!5117 = !DILocation(line: 227, column: 3, scope: !5100)
!5118 = !DILocation(line: 227, column: 7, scope: !5100)
!5119 = !DILocation(line: 227, column: 12, scope: !5100)
!5120 = !DILocation(line: 228, column: 3, scope: !5100)
!5121 = !DILocation(line: 228, column: 7, scope: !5100)
!5122 = !DILocation(line: 228, column: 12, scope: !5100)
!5123 = !DILocation(line: 231, column: 3, scope: !5100)
!5124 = !DILocation(line: 233, column: 12, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5126, file: !853, line: 233, column: 11)
!5126 = distinct !DILexicalBlock(scope: !5100, file: !853, line: 232, column: 5)
!5127 = !DILocation(line: 233, column: 16, scope: !5125)
!5128 = !DILocation(line: 233, column: 11, scope: !5126)
!5129 = !DILocation(line: 235, column: 4, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5125, file: !853, line: 234, column: 2)
!5131 = !DILocation(line: 235, column: 8, scope: !5130)
!5132 = !DILocation(line: 235, column: 13, scope: !5130)
!5133 = !DILocation(line: 236, column: 4, scope: !5130)
!5134 = !DILocation(line: 239, column: 11, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5126, file: !853, line: 239, column: 11)
!5136 = !DILocation(line: 239, column: 15, scope: !5135)
!5137 = !DILocation(line: 239, column: 21, scope: !5135)
!5138 = !DILocation(line: 239, column: 29, scope: !5135)
!5139 = !DILocation(line: 239, column: 39, scope: !5135)
!5140 = !DILocation(line: 239, column: 26, scope: !5135)
!5141 = !DILocation(line: 239, column: 11, scope: !5126)
!5142 = !DILocation(line: 240, column: 2, scope: !5135)
!5143 = !DILocation(line: 241, column: 18, scope: !5126)
!5144 = !DILocation(line: 241, column: 22, scope: !5126)
!5145 = !DILocation(line: 241, column: 28, scope: !5126)
!5146 = !DILocation(line: 241, column: 7, scope: !5126)
!5147 = !DILocation(line: 241, column: 11, scope: !5126)
!5148 = !DILocation(line: 241, column: 16, scope: !5126)
!5149 = distinct !{!5149, !5123, !5150}
!5150 = !DILocation(line: 242, column: 5, scope: !5100)
!5151 = !DILocation(line: 245, column: 7, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5100, file: !853, line: 245, column: 7)
!5153 = !DILocation(line: 245, column: 11, scope: !5152)
!5154 = !DILocation(line: 245, column: 17, scope: !5152)
!5155 = !DILocation(line: 245, column: 25, scope: !5152)
!5156 = !DILocation(line: 245, column: 35, scope: !5152)
!5157 = !DILocation(line: 245, column: 22, scope: !5152)
!5158 = !DILocation(line: 245, column: 7, scope: !5100)
!5159 = !DILocation(line: 246, column: 17, scope: !5152)
!5160 = !DILocation(line: 246, column: 21, scope: !5152)
!5161 = !DILocation(line: 246, column: 27, scope: !5152)
!5162 = !DILocation(line: 246, column: 32, scope: !5152)
!5163 = !DILocation(line: 246, column: 15, scope: !5152)
!5164 = !DILocation(line: 246, column: 5, scope: !5152)
!5165 = !DILocation(line: 249, column: 17, scope: !5100)
!5166 = !DILocation(line: 249, column: 27, scope: !5100)
!5167 = !DILocation(line: 249, column: 46, scope: !5100)
!5168 = !DILocation(line: 249, column: 3, scope: !5100)
!5169 = !DILocation(line: 249, column: 7, scope: !5100)
!5170 = !DILocation(line: 249, column: 15, scope: !5100)
!5171 = !DILocation(line: 250, column: 14, scope: !5100)
!5172 = !DILocation(line: 250, column: 18, scope: !5100)
!5173 = !DILocation(line: 250, column: 24, scope: !5100)
!5174 = !DILocation(line: 250, column: 29, scope: !5100)
!5175 = !DILocation(line: 250, column: 33, scope: !5100)
!5176 = !DILocation(line: 250, column: 3, scope: !5100)
!5177 = !DILocation(line: 250, column: 7, scope: !5100)
!5178 = !DILocation(line: 250, column: 12, scope: !5100)
!5179 = !DILocation(line: 251, column: 16, scope: !5100)
!5180 = !DILocation(line: 251, column: 26, scope: !5100)
!5181 = !DILocation(line: 251, column: 3, scope: !5100)
!5182 = !DILocation(line: 251, column: 7, scope: !5100)
!5183 = !DILocation(line: 251, column: 12, scope: !5100)
!5184 = !DILocation(line: 257, column: 17, scope: !5100)
!5185 = !DILocation(line: 257, column: 21, scope: !5100)
!5186 = !DILocation(line: 257, column: 16, scope: !5100)
!5187 = !DILocation(line: 257, column: 13, scope: !5100)
!5188 = !DILocation(line: 259, column: 13, scope: !5100)
!5189 = !DILocation(line: 259, column: 4, scope: !5100)
!5190 = !DILocation(line: 259, column: 11, scope: !5100)
!5191 = !DILocation(line: 260, column: 1, scope: !5100)
!5192 = distinct !DISubprogram(name: "bmp_iter_set", scope: !853, file: !853, line: 393, type: !5193, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!5193 = !DISubroutineType(types: !5194)
!5194 = !{!1099, !5103, !1995}
!5195 = !DILocalVariable(name: "bi", arg: 1, scope: !5192, file: !853, line: 393, type: !5103)
!5196 = !DILocation(line: 393, column: 32, scope: !5192)
!5197 = !DILocalVariable(name: "bit_no", arg: 2, scope: !5192, file: !853, line: 393, type: !1995)
!5198 = !DILocation(line: 393, column: 46, scope: !5192)
!5199 = !DILocation(line: 396, column: 7, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5192, file: !853, line: 396, column: 7)
!5201 = !DILocation(line: 396, column: 11, scope: !5200)
!5202 = !DILocation(line: 396, column: 7, scope: !5192)
!5203 = !DILocation(line: 397, column: 5, scope: !5200)
!5204 = !DILabel(scope: !5205, name: "next_bit", file: !853, line: 398)
!5205 = distinct !DILexicalBlock(scope: !5200, file: !853, line: 397, column: 5)
!5206 = !DILocation(line: 398, column: 5, scope: !5205)
!5207 = !DILocation(line: 399, column: 7, scope: !5205)
!5208 = !DILocation(line: 399, column: 16, scope: !5205)
!5209 = !DILocation(line: 399, column: 20, scope: !5205)
!5210 = !DILocation(line: 399, column: 25, scope: !5205)
!5211 = !DILocation(line: 399, column: 14, scope: !5205)
!5212 = !DILocation(line: 401, column: 4, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5205, file: !853, line: 400, column: 2)
!5214 = !DILocation(line: 401, column: 8, scope: !5213)
!5215 = !DILocation(line: 401, column: 13, scope: !5213)
!5216 = !DILocation(line: 402, column: 5, scope: !5213)
!5217 = !DILocation(line: 402, column: 12, scope: !5213)
!5218 = distinct !{!5218, !5207, !5219}
!5219 = !DILocation(line: 403, column: 2, scope: !5205)
!5220 = !DILocation(line: 404, column: 7, scope: !5205)
!5221 = !DILocation(line: 410, column: 16, scope: !5192)
!5222 = !DILocation(line: 410, column: 15, scope: !5192)
!5223 = !DILocation(line: 410, column: 23, scope: !5192)
!5224 = !DILocation(line: 410, column: 42, scope: !5192)
!5225 = !DILocation(line: 411, column: 7, scope: !5192)
!5226 = !DILocation(line: 411, column: 26, scope: !5192)
!5227 = !DILocation(line: 410, column: 4, scope: !5192)
!5228 = !DILocation(line: 410, column: 11, scope: !5192)
!5229 = !DILocation(line: 412, column: 3, scope: !5192)
!5230 = !DILocation(line: 412, column: 7, scope: !5192)
!5231 = !DILocation(line: 412, column: 14, scope: !5192)
!5232 = !DILocation(line: 414, column: 3, scope: !5192)
!5233 = !DILocation(line: 417, column: 7, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5192, file: !853, line: 415, column: 5)
!5235 = !DILocation(line: 417, column: 14, scope: !5234)
!5236 = !DILocation(line: 417, column: 18, scope: !5234)
!5237 = !DILocation(line: 417, column: 26, scope: !5234)
!5238 = !DILocation(line: 419, column: 15, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5234, file: !853, line: 418, column: 2)
!5240 = !DILocation(line: 419, column: 19, scope: !5239)
!5241 = !DILocation(line: 419, column: 25, scope: !5239)
!5242 = !DILocation(line: 419, column: 30, scope: !5239)
!5243 = !DILocation(line: 419, column: 34, scope: !5239)
!5244 = !DILocation(line: 419, column: 4, scope: !5239)
!5245 = !DILocation(line: 419, column: 8, scope: !5239)
!5246 = !DILocation(line: 419, column: 13, scope: !5239)
!5247 = !DILocation(line: 420, column: 8, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5239, file: !853, line: 420, column: 8)
!5249 = !DILocation(line: 420, column: 12, scope: !5248)
!5250 = !DILocation(line: 420, column: 8, scope: !5239)
!5251 = !DILocation(line: 421, column: 6, scope: !5248)
!5252 = !DILocation(line: 422, column: 5, scope: !5239)
!5253 = !DILocation(line: 422, column: 12, scope: !5239)
!5254 = !DILocation(line: 423, column: 4, scope: !5239)
!5255 = !DILocation(line: 423, column: 8, scope: !5239)
!5256 = !DILocation(line: 423, column: 15, scope: !5239)
!5257 = distinct !{!5257, !5233, !5258}
!5258 = !DILocation(line: 424, column: 2, scope: !5234)
!5259 = !DILocation(line: 427, column: 18, scope: !5234)
!5260 = !DILocation(line: 427, column: 22, scope: !5234)
!5261 = !DILocation(line: 427, column: 28, scope: !5234)
!5262 = !DILocation(line: 427, column: 7, scope: !5234)
!5263 = !DILocation(line: 427, column: 11, scope: !5234)
!5264 = !DILocation(line: 427, column: 16, scope: !5234)
!5265 = !DILocation(line: 428, column: 12, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5234, file: !853, line: 428, column: 11)
!5267 = !DILocation(line: 428, column: 16, scope: !5266)
!5268 = !DILocation(line: 428, column: 11, scope: !5234)
!5269 = !DILocation(line: 429, column: 2, scope: !5266)
!5270 = !DILocation(line: 430, column: 17, scope: !5234)
!5271 = !DILocation(line: 430, column: 21, scope: !5234)
!5272 = !DILocation(line: 430, column: 27, scope: !5234)
!5273 = !DILocation(line: 430, column: 32, scope: !5234)
!5274 = !DILocation(line: 430, column: 8, scope: !5234)
!5275 = !DILocation(line: 430, column: 15, scope: !5234)
!5276 = !DILocation(line: 431, column: 7, scope: !5234)
!5277 = !DILocation(line: 431, column: 11, scope: !5234)
!5278 = !DILocation(line: 431, column: 19, scope: !5234)
!5279 = distinct !{!5279, !5232, !5280}
!5280 = !DILocation(line: 432, column: 5, scope: !5192)
!5281 = !DILocation(line: 433, column: 1, scope: !5192)
!5282 = distinct !DISubprogram(name: "bmp_iter_next", scope: !853, file: !853, line: 382, type: !5283, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!5283 = !DISubroutineType(types: !5284)
!5284 = !{null, !5103, !1995}
!5285 = !DILocalVariable(name: "bi", arg: 1, scope: !5282, file: !853, line: 382, type: !5103)
!5286 = !DILocation(line: 382, column: 33, scope: !5282)
!5287 = !DILocalVariable(name: "bit_no", arg: 2, scope: !5282, file: !853, line: 382, type: !1995)
!5288 = !DILocation(line: 382, column: 47, scope: !5282)
!5289 = !DILocation(line: 384, column: 3, scope: !5282)
!5290 = !DILocation(line: 384, column: 7, scope: !5282)
!5291 = !DILocation(line: 384, column: 12, scope: !5282)
!5292 = !DILocation(line: 385, column: 4, scope: !5282)
!5293 = !DILocation(line: 385, column: 11, scope: !5282)
!5294 = !DILocation(line: 386, column: 1, scope: !5282)
!5295 = distinct !DISubprogram(name: "df_process_deferred_rescans", scope: !3, file: !3, line: 1436, type: !2036, scopeLine: 1437, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!5296 = !DILocalVariable(name: "no_insn_rescan", scope: !5295, file: !3, line: 1438, type: !1099)
!5297 = !DILocation(line: 1438, column: 8, scope: !5295)
!5298 = !DILocalVariable(name: "defer_insn_rescan", scope: !5295, file: !3, line: 1439, type: !1099)
!5299 = !DILocation(line: 1439, column: 8, scope: !5295)
!5300 = !DILocalVariable(name: "bi", scope: !5295, file: !3, line: 1440, type: !5009)
!5301 = !DILocation(line: 1440, column: 19, scope: !5295)
!5302 = !DILocalVariable(name: "uid", scope: !5295, file: !3, line: 1441, type: !7)
!5303 = !DILocation(line: 1441, column: 16, scope: !5295)
!5304 = !DILocalVariable(name: "tmp", scope: !5295, file: !3, line: 1442, type: !2022)
!5305 = !DILocation(line: 1442, column: 10, scope: !5295)
!5306 = !DILocation(line: 1442, column: 16, scope: !5295)
!5307 = !DILocation(line: 1444, column: 7, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 1444, column: 7)
!5309 = !DILocation(line: 1444, column: 11, scope: !5308)
!5310 = !DILocation(line: 1444, column: 28, scope: !5308)
!5311 = !DILocation(line: 1444, column: 7, scope: !5295)
!5312 = !DILocation(line: 1446, column: 7, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5308, file: !3, line: 1445, column: 5)
!5314 = !DILocation(line: 1447, column: 22, scope: !5313)
!5315 = !DILocation(line: 1448, column: 5, scope: !5313)
!5316 = !DILocation(line: 1450, column: 7, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 1450, column: 7)
!5318 = !DILocation(line: 1450, column: 11, scope: !5317)
!5319 = !DILocation(line: 1450, column: 28, scope: !5317)
!5320 = !DILocation(line: 1450, column: 7, scope: !5295)
!5321 = !DILocation(line: 1452, column: 7, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1451, column: 5)
!5323 = !DILocation(line: 1453, column: 25, scope: !5322)
!5324 = !DILocation(line: 1454, column: 5, scope: !5322)
!5325 = !DILocation(line: 1456, column: 7, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 1456, column: 7)
!5327 = !DILocation(line: 1456, column: 7, scope: !5295)
!5328 = !DILocation(line: 1457, column: 14, scope: !5326)
!5329 = !DILocation(line: 1457, column: 5, scope: !5326)
!5330 = !DILocation(line: 1459, column: 16, scope: !5295)
!5331 = !DILocation(line: 1459, column: 21, scope: !5295)
!5332 = !DILocation(line: 1459, column: 25, scope: !5295)
!5333 = !DILocation(line: 1459, column: 3, scope: !5295)
!5334 = !DILocation(line: 1460, column: 3, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 1460, column: 3)
!5336 = !DILocation(line: 1460, column: 3, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 1460, column: 3)
!5338 = !DILocalVariable(name: "insn_info", scope: !5339, file: !3, line: 1462, type: !1946)
!5339 = distinct !DILexicalBlock(scope: !5337, file: !3, line: 1461, column: 5)
!5340 = !DILocation(line: 1462, column: 28, scope: !5339)
!5341 = !DILocation(line: 1462, column: 40, scope: !5339)
!5342 = !DILocation(line: 1463, column: 11, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 1463, column: 11)
!5344 = !DILocation(line: 1463, column: 11, scope: !5339)
!5345 = !DILocation(line: 1464, column: 24, scope: !5343)
!5346 = !DILocation(line: 1464, column: 2, scope: !5343)
!5347 = !DILocation(line: 1465, column: 5, scope: !5339)
!5348 = distinct !{!5348, !5334, !5349}
!5349 = !DILocation(line: 1465, column: 5, scope: !5335)
!5350 = !DILocation(line: 1467, column: 16, scope: !5295)
!5351 = !DILocation(line: 1467, column: 21, scope: !5295)
!5352 = !DILocation(line: 1467, column: 25, scope: !5295)
!5353 = !DILocation(line: 1467, column: 3, scope: !5295)
!5354 = !DILocation(line: 1468, column: 3, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 1468, column: 3)
!5356 = !DILocation(line: 1468, column: 3, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 1468, column: 3)
!5358 = !DILocalVariable(name: "insn_info", scope: !5359, file: !3, line: 1470, type: !1946)
!5359 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 1469, column: 5)
!5360 = !DILocation(line: 1470, column: 28, scope: !5359)
!5361 = !DILocation(line: 1470, column: 40, scope: !5359)
!5362 = !DILocation(line: 1471, column: 11, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5359, file: !3, line: 1471, column: 11)
!5364 = !DILocation(line: 1471, column: 11, scope: !5359)
!5365 = !DILocation(line: 1472, column: 18, scope: !5363)
!5366 = !DILocation(line: 1472, column: 29, scope: !5363)
!5367 = !DILocation(line: 1472, column: 2, scope: !5363)
!5368 = !DILocation(line: 1473, column: 5, scope: !5359)
!5369 = distinct !{!5369, !5354, !5370}
!5370 = !DILocation(line: 1473, column: 5, scope: !5355)
!5371 = !DILocation(line: 1475, column: 16, scope: !5295)
!5372 = !DILocation(line: 1475, column: 21, scope: !5295)
!5373 = !DILocation(line: 1475, column: 25, scope: !5295)
!5374 = !DILocation(line: 1475, column: 3, scope: !5295)
!5375 = !DILocation(line: 1476, column: 3, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 1476, column: 3)
!5377 = !DILocation(line: 1476, column: 3, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 1476, column: 3)
!5379 = !DILocalVariable(name: "insn_info", scope: !5380, file: !3, line: 1478, type: !1946)
!5380 = distinct !DILexicalBlock(scope: !5378, file: !3, line: 1477, column: 5)
!5381 = !DILocation(line: 1478, column: 28, scope: !5380)
!5382 = !DILocation(line: 1478, column: 40, scope: !5380)
!5383 = !DILocation(line: 1479, column: 11, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5380, file: !3, line: 1479, column: 11)
!5385 = !DILocation(line: 1479, column: 11, scope: !5380)
!5386 = !DILocation(line: 1480, column: 19, scope: !5384)
!5387 = !DILocation(line: 1480, column: 30, scope: !5384)
!5388 = !DILocation(line: 1480, column: 2, scope: !5384)
!5389 = !DILocation(line: 1481, column: 5, scope: !5380)
!5390 = distinct !{!5390, !5375, !5391}
!5391 = !DILocation(line: 1481, column: 5, scope: !5376)
!5392 = !DILocation(line: 1483, column: 7, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 1483, column: 7)
!5394 = !DILocation(line: 1483, column: 7, scope: !5295)
!5395 = !DILocation(line: 1484, column: 14, scope: !5393)
!5396 = !DILocation(line: 1484, column: 5, scope: !5393)
!5397 = !DILocation(line: 1486, column: 3, scope: !5295)
!5398 = !DILocation(line: 1487, column: 17, scope: !5295)
!5399 = !DILocation(line: 1487, column: 21, scope: !5295)
!5400 = !DILocation(line: 1487, column: 3, scope: !5295)
!5401 = !DILocation(line: 1488, column: 17, scope: !5295)
!5402 = !DILocation(line: 1488, column: 21, scope: !5295)
!5403 = !DILocation(line: 1488, column: 3, scope: !5295)
!5404 = !DILocation(line: 1489, column: 17, scope: !5295)
!5405 = !DILocation(line: 1489, column: 21, scope: !5295)
!5406 = !DILocation(line: 1489, column: 3, scope: !5295)
!5407 = !DILocation(line: 1491, column: 7, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 1491, column: 7)
!5409 = !DILocation(line: 1491, column: 7, scope: !5295)
!5410 = !DILocation(line: 1492, column: 5, scope: !5408)
!5411 = !DILocation(line: 1493, column: 7, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 1493, column: 7)
!5413 = !DILocation(line: 1493, column: 7, scope: !5295)
!5414 = !DILocation(line: 1494, column: 5, scope: !5412)
!5415 = !DILocation(line: 1498, column: 7, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 1498, column: 7)
!5417 = !DILocation(line: 1498, column: 11, scope: !5416)
!5418 = !DILocation(line: 1498, column: 7, scope: !5295)
!5419 = !DILocation(line: 1500, column: 7, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 1499, column: 5)
!5421 = !DILocation(line: 1501, column: 7, scope: !5420)
!5422 = !DILocation(line: 1501, column: 11, scope: !5420)
!5423 = !DILocation(line: 1501, column: 31, scope: !5420)
!5424 = !DILocation(line: 1502, column: 5, scope: !5420)
!5425 = !DILocation(line: 1503, column: 1, scope: !5295)
!5426 = distinct !DISubprogram(name: "df_notes_rescan", scope: !3, file: !3, line: 2171, type: !5427, scopeLine: 2172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!5427 = !DISubroutineType(types: !5428)
!5428 = !{null, !931}
!5429 = !DILocalVariable(name: "insn", arg: 1, scope: !5426, file: !3, line: 2171, type: !931)
!5430 = !DILocation(line: 2171, column: 22, scope: !5426)
!5431 = !DILocalVariable(name: "insn_info", scope: !5426, file: !3, line: 2173, type: !1946)
!5432 = !DILocation(line: 2173, column: 24, scope: !5426)
!5433 = !DILocalVariable(name: "uid", scope: !5426, file: !3, line: 2174, type: !7)
!5434 = !DILocation(line: 2174, column: 16, scope: !5426)
!5435 = !DILocation(line: 2174, column: 22, scope: !5426)
!5436 = !DILocation(line: 2176, column: 8, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 2176, column: 7)
!5438 = !DILocation(line: 2176, column: 7, scope: !5426)
!5439 = !DILocation(line: 2177, column: 5, scope: !5437)
!5440 = !DILocation(line: 2180, column: 7, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 2180, column: 7)
!5442 = !DILocation(line: 2180, column: 11, scope: !5441)
!5443 = !DILocation(line: 2180, column: 28, scope: !5441)
!5444 = !DILocation(line: 2180, column: 7, scope: !5426)
!5445 = !DILocation(line: 2181, column: 5, scope: !5441)
!5446 = !DILocation(line: 2184, column: 8, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 2184, column: 7)
!5448 = !DILocation(line: 2184, column: 7, scope: !5426)
!5449 = !DILocation(line: 2185, column: 5, scope: !5447)
!5450 = !DILocation(line: 2187, column: 20, scope: !5426)
!5451 = !DILocation(line: 2187, column: 3, scope: !5426)
!5452 = !DILocation(line: 2188, column: 3, scope: !5426)
!5453 = !DILocation(line: 2190, column: 15, scope: !5426)
!5454 = !DILocation(line: 2190, column: 13, scope: !5426)
!5455 = !DILocation(line: 2193, column: 7, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 2193, column: 7)
!5457 = !DILocation(line: 2193, column: 11, scope: !5456)
!5458 = !DILocation(line: 2193, column: 28, scope: !5456)
!5459 = !DILocation(line: 2193, column: 7, scope: !5426)
!5460 = !DILocation(line: 2195, column: 12, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5462, file: !3, line: 2195, column: 11)
!5462 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 2194, column: 5)
!5463 = !DILocation(line: 2195, column: 11, scope: !5462)
!5464 = !DILocation(line: 2197, column: 44, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 2196, column: 2)
!5466 = !DILocation(line: 2197, column: 16, scope: !5465)
!5467 = !DILocation(line: 2197, column: 14, scope: !5465)
!5468 = !DILocation(line: 2198, column: 4, scope: !5465)
!5469 = !DILocation(line: 2198, column: 15, scope: !5465)
!5470 = !DILocation(line: 2198, column: 20, scope: !5465)
!5471 = !DILocation(line: 2199, column: 4, scope: !5465)
!5472 = !DILocation(line: 2199, column: 15, scope: !5465)
!5473 = !DILocation(line: 2199, column: 20, scope: !5465)
!5474 = !DILocation(line: 2200, column: 4, scope: !5465)
!5475 = !DILocation(line: 2200, column: 15, scope: !5465)
!5476 = !DILocation(line: 2200, column: 23, scope: !5465)
!5477 = !DILocation(line: 2201, column: 4, scope: !5465)
!5478 = !DILocation(line: 2201, column: 15, scope: !5465)
!5479 = !DILocation(line: 2201, column: 27, scope: !5465)
!5480 = !DILocation(line: 2202, column: 2, scope: !5465)
!5481 = !DILocation(line: 2204, column: 25, scope: !5462)
!5482 = !DILocation(line: 2204, column: 29, scope: !5462)
!5483 = !DILocation(line: 2204, column: 46, scope: !5462)
!5484 = !DILocation(line: 2204, column: 7, scope: !5462)
!5485 = !DILocation(line: 2207, column: 26, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5462, file: !3, line: 2207, column: 11)
!5487 = !DILocation(line: 2207, column: 30, scope: !5486)
!5488 = !DILocation(line: 2207, column: 47, scope: !5486)
!5489 = !DILocation(line: 2207, column: 12, scope: !5486)
!5490 = !DILocation(line: 2207, column: 11, scope: !5462)
!5491 = !DILocation(line: 2208, column: 18, scope: !5486)
!5492 = !DILocation(line: 2208, column: 22, scope: !5486)
!5493 = !DILocation(line: 2208, column: 45, scope: !5486)
!5494 = !DILocation(line: 2208, column: 2, scope: !5486)
!5495 = !DILocation(line: 2209, column: 7, scope: !5462)
!5496 = !DILocation(line: 2212, column: 21, scope: !5426)
!5497 = !DILocation(line: 2212, column: 25, scope: !5426)
!5498 = !DILocation(line: 2212, column: 42, scope: !5426)
!5499 = !DILocation(line: 2212, column: 3, scope: !5426)
!5500 = !DILocation(line: 2213, column: 21, scope: !5426)
!5501 = !DILocation(line: 2213, column: 25, scope: !5426)
!5502 = !DILocation(line: 2213, column: 48, scope: !5426)
!5503 = !DILocation(line: 2213, column: 3, scope: !5426)
!5504 = !DILocation(line: 2215, column: 7, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 2215, column: 7)
!5506 = !DILocation(line: 2215, column: 7, scope: !5426)
!5507 = !DILocalVariable(name: "bb", scope: !5508, file: !3, line: 2217, type: !1244)
!5508 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 2216, column: 5)
!5509 = !DILocation(line: 2217, column: 19, scope: !5508)
!5510 = !DILocation(line: 2217, column: 24, scope: !5508)
!5511 = !DILocalVariable(name: "note", scope: !5508, file: !3, line: 2218, type: !931)
!5512 = !DILocation(line: 2218, column: 11, scope: !5508)
!5513 = !DILocalVariable(name: "collection_rec", scope: !5508, file: !3, line: 2219, type: !2997)
!5514 = !DILocation(line: 2219, column: 32, scope: !5508)
!5515 = !DILocalVariable(name: "num_deleted", scope: !5508, file: !3, line: 2220, type: !7)
!5516 = !DILocation(line: 2220, column: 20, scope: !5508)
!5517 = !DILocalVariable(name: "mw_len", scope: !5508, file: !3, line: 2221, type: !7)
!5518 = !DILocation(line: 2221, column: 20, scope: !5508)
!5519 = !DILocation(line: 2223, column: 7, scope: !5508)
!5520 = !DILocation(line: 2224, column: 35, scope: !5508)
!5521 = !DILocation(line: 2224, column: 22, scope: !5508)
!5522 = !DILocation(line: 2224, column: 33, scope: !5508)
!5523 = !DILocation(line: 2225, column: 31, scope: !5508)
!5524 = !DILocation(line: 2225, column: 22, scope: !5508)
!5525 = !DILocation(line: 2225, column: 29, scope: !5508)
!5526 = !DILocation(line: 2227, column: 57, scope: !5508)
!5527 = !DILocation(line: 2227, column: 21, scope: !5508)
!5528 = !DILocation(line: 2227, column: 19, scope: !5508)
!5529 = !DILocation(line: 2228, column: 28, scope: !5508)
!5530 = !DILocation(line: 2228, column: 39, scope: !5508)
!5531 = !DILocation(line: 2228, column: 7, scope: !5508)
!5532 = !DILocation(line: 2229, column: 7, scope: !5508)
!5533 = !DILocation(line: 2229, column: 18, scope: !5508)
!5534 = !DILocation(line: 2229, column: 26, scope: !5508)
!5535 = !DILocation(line: 2232, column: 19, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5508, file: !3, line: 2232, column: 7)
!5537 = !DILocation(line: 2232, column: 17, scope: !5536)
!5538 = !DILocation(line: 2232, column: 12, scope: !5536)
!5539 = !DILocation(line: 2232, column: 37, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5536, file: !3, line: 2232, column: 7)
!5541 = !DILocation(line: 2232, column: 7, scope: !5536)
!5542 = !DILocation(line: 2235, column: 12, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5540, file: !3, line: 2234, column: 2)
!5544 = !DILocation(line: 2235, column: 4, scope: !5543)
!5545 = !DILocation(line: 2240, column: 11, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 2236, column: 6)
!5547 = !DILocation(line: 2241, column: 10, scope: !5546)
!5548 = !DILocation(line: 2241, column: 14, scope: !5546)
!5549 = !DILocation(line: 2239, column: 8, scope: !5546)
!5550 = !DILocation(line: 2243, column: 8, scope: !5546)
!5551 = !DILocation(line: 2245, column: 2, scope: !5543)
!5552 = !DILocation(line: 2233, column: 12, scope: !5540)
!5553 = !DILocation(line: 2233, column: 10, scope: !5540)
!5554 = !DILocation(line: 2232, column: 7, scope: !5540)
!5555 = distinct !{!5555, !5541, !5556}
!5556 = !DILocation(line: 2245, column: 2, scope: !5536)
!5557 = !DILocation(line: 2248, column: 7, scope: !5508)
!5558 = !DILocation(line: 2249, column: 16, scope: !5508)
!5559 = !DILocation(line: 2249, column: 14, scope: !5508)
!5560 = !DILocation(line: 2250, column: 11, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5508, file: !3, line: 2250, column: 11)
!5562 = !DILocation(line: 2250, column: 11, scope: !5508)
!5563 = !DILocalVariable(name: "count", scope: !5564, file: !3, line: 2252, type: !7)
!5564 = distinct !DILexicalBlock(scope: !5561, file: !3, line: 2251, column: 2)
!5565 = !DILocation(line: 2252, column: 17, scope: !5564)
!5566 = !DILocalVariable(name: "mw_rec", scope: !5564, file: !3, line: 2253, type: !1954)
!5567 = !DILocation(line: 2253, column: 27, scope: !5564)
!5568 = !DILocation(line: 2253, column: 36, scope: !5564)
!5569 = !DILocation(line: 2253, column: 47, scope: !5564)
!5570 = !DILocation(line: 2254, column: 4, scope: !5564)
!5571 = !DILocation(line: 2254, column: 12, scope: !5564)
!5572 = !DILocation(line: 2254, column: 11, scope: !5564)
!5573 = !DILocation(line: 2256, column: 13, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 2255, column: 6)
!5575 = !DILocation(line: 2257, column: 14, scope: !5574)
!5576 = distinct !{!5576, !5570, !5577}
!5577 = !DILocation(line: 2258, column: 6, scope: !5564)
!5578 = !DILocation(line: 2260, column: 8, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 2260, column: 8)
!5580 = !DILocation(line: 2260, column: 8, scope: !5564)
!5581 = !DILocation(line: 2264, column: 12, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5583, file: !3, line: 2264, column: 12)
!5583 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 2261, column: 6)
!5584 = !DILocation(line: 2264, column: 21, scope: !5582)
!5585 = !DILocation(line: 2264, column: 19, scope: !5582)
!5586 = !DILocation(line: 2264, column: 12, scope: !5583)
!5587 = !DILocation(line: 2267, column: 7, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5582, file: !3, line: 2265, column: 3)
!5589 = !DILocation(line: 2266, column: 5, scope: !5588)
!5590 = !DILocation(line: 2266, column: 16, scope: !5588)
!5591 = !DILocation(line: 2266, column: 28, scope: !5588)
!5592 = !DILocation(line: 2270, column: 3, scope: !5588)
!5593 = !DILocation(line: 2271, column: 17, scope: !5583)
!5594 = !DILocation(line: 2271, column: 28, scope: !5583)
!5595 = !DILocation(line: 2271, column: 40, scope: !5583)
!5596 = !DILocation(line: 2271, column: 8, scope: !5583)
!5597 = !DILocation(line: 2272, column: 9, scope: !5583)
!5598 = !DILocation(line: 2273, column: 9, scope: !5583)
!5599 = !DILocation(line: 2273, column: 16, scope: !5583)
!5600 = !DILocation(line: 2274, column: 8, scope: !5583)
!5601 = !DILocation(line: 2274, column: 19, scope: !5583)
!5602 = !DILocation(line: 2274, column: 31, scope: !5583)
!5603 = !DILocation(line: 2274, column: 39, scope: !5583)
!5604 = !DILocation(line: 2274, column: 37, scope: !5583)
!5605 = !DILocation(line: 2274, column: 47, scope: !5583)
!5606 = !DILocation(line: 2276, column: 20, scope: !5583)
!5607 = !DILocation(line: 2276, column: 31, scope: !5583)
!5608 = !DILocation(line: 2276, column: 44, scope: !5583)
!5609 = !DILocation(line: 2276, column: 52, scope: !5583)
!5610 = !DILocation(line: 2276, column: 50, scope: !5583)
!5611 = !DILocation(line: 2276, column: 8, scope: !5583)
!5612 = !DILocation(line: 2282, column: 6, scope: !5583)
!5613 = !DILocation(line: 2287, column: 5, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 2284, column: 6)
!5615 = !DILocation(line: 2286, column: 8, scope: !5614)
!5616 = !DILocation(line: 2286, column: 19, scope: !5614)
!5617 = !DILocation(line: 2287, column: 3, scope: !5614)
!5618 = !DILocation(line: 2288, column: 16, scope: !5614)
!5619 = !DILocation(line: 2288, column: 27, scope: !5614)
!5620 = !DILocation(line: 2288, column: 8, scope: !5614)
!5621 = !DILocation(line: 2289, column: 9, scope: !5614)
!5622 = !DILocation(line: 2290, column: 9, scope: !5614)
!5623 = !DILocation(line: 2290, column: 16, scope: !5614)
!5624 = !DILocation(line: 2291, column: 8, scope: !5614)
!5625 = !DILocation(line: 2291, column: 19, scope: !5614)
!5626 = !DILocation(line: 2291, column: 31, scope: !5614)
!5627 = !DILocation(line: 2291, column: 39, scope: !5614)
!5628 = !DILocation(line: 2293, column: 2, scope: !5564)
!5629 = !DILocation(line: 2296, column: 7, scope: !5508)
!5630 = !DILocation(line: 2297, column: 47, scope: !5508)
!5631 = !DILocation(line: 2297, column: 51, scope: !5508)
!5632 = !DILocation(line: 2297, column: 7, scope: !5508)
!5633 = !DILocation(line: 2298, column: 7, scope: !5508)
!5634 = !DILocation(line: 2299, column: 5, scope: !5508)
!5635 = !DILocation(line: 2301, column: 21, scope: !5505)
!5636 = !DILocation(line: 2301, column: 5, scope: !5505)
!5637 = !DILocation(line: 2303, column: 1, scope: !5426)
!5638 = distinct !DISubprogram(name: "df_update_entry_exit_and_calls", scope: !3, file: !3, line: 4256, type: !2036, scopeLine: 4257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!5639 = !DILocalVariable(name: "bb", scope: !5638, file: !3, line: 4258, type: !1244)
!5640 = !DILocation(line: 4258, column: 15, scope: !5638)
!5641 = !DILocation(line: 4260, column: 3, scope: !5638)
!5642 = !DILocation(line: 4261, column: 3, scope: !5638)
!5643 = !DILocation(line: 4265, column: 3, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 4265, column: 3)
!5645 = !DILocation(line: 4265, column: 3, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5644, file: !3, line: 4265, column: 3)
!5647 = !DILocalVariable(name: "insn", scope: !5648, file: !3, line: 4267, type: !931)
!5648 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 4266, column: 5)
!5649 = !DILocation(line: 4267, column: 11, scope: !5648)
!5650 = !DILocation(line: 4268, column: 7, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 4268, column: 7)
!5652 = !DILocation(line: 4268, column: 7, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 4268, column: 7)
!5654 = !DILocation(line: 0, scope: !5653)
!5655 = !DILocation(line: 4270, column: 8, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 4270, column: 8)
!5657 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 4269, column: 2)
!5658 = !DILocation(line: 4270, column: 22, scope: !5656)
!5659 = !DILocation(line: 4270, column: 25, scope: !5656)
!5660 = !DILocation(line: 4270, column: 8, scope: !5657)
!5661 = !DILocation(line: 4271, column: 22, scope: !5656)
!5662 = !DILocation(line: 4271, column: 6, scope: !5656)
!5663 = !DILocation(line: 4272, column: 2, scope: !5657)
!5664 = distinct !{!5664, !5650, !5665}
!5665 = !DILocation(line: 4272, column: 2, scope: !5651)
!5666 = !DILocation(line: 4273, column: 5, scope: !5648)
!5667 = distinct !{!5667, !5643, !5668}
!5668 = !DILocation(line: 4273, column: 5, scope: !5644)
!5669 = !DILocation(line: 4274, column: 1, scope: !5638)
!5670 = distinct !DISubprogram(name: "df_maybe_reorganize_use_refs", scope: !3, file: !3, line: 1897, type: !5671, scopeLine: 1898, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!5671 = !DISubroutineType(types: !5672)
!5672 = !{null, !377}
!5673 = !DILocalVariable(name: "order", arg: 1, scope: !5670, file: !3, line: 1897, type: !377)
!5674 = !DILocation(line: 1897, column: 49, scope: !5670)
!5675 = !DILocation(line: 1899, column: 7, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5670, file: !3, line: 1899, column: 7)
!5677 = !DILocation(line: 1899, column: 16, scope: !5676)
!5678 = !DILocation(line: 1899, column: 20, scope: !5676)
!5679 = !DILocation(line: 1899, column: 29, scope: !5676)
!5680 = !DILocation(line: 1899, column: 13, scope: !5676)
!5681 = !DILocation(line: 1899, column: 7, scope: !5670)
!5682 = !DILocation(line: 1900, column: 5, scope: !5676)
!5683 = !DILocation(line: 1902, column: 11, scope: !5670)
!5684 = !DILocation(line: 1902, column: 3, scope: !5670)
!5685 = !DILocation(line: 1905, column: 35, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5670, file: !3, line: 1903, column: 5)
!5687 = !DILocation(line: 1905, column: 39, scope: !5686)
!5688 = !DILocation(line: 1905, column: 7, scope: !5686)
!5689 = !DILocation(line: 1906, column: 7, scope: !5686)
!5690 = !DILocation(line: 1909, column: 35, scope: !5686)
!5691 = !DILocation(line: 1909, column: 39, scope: !5686)
!5692 = !DILocation(line: 1909, column: 7, scope: !5686)
!5693 = !DILocation(line: 1910, column: 7, scope: !5686)
!5694 = !DILocation(line: 1913, column: 36, scope: !5686)
!5695 = !DILocation(line: 1913, column: 40, scope: !5686)
!5696 = !DILocation(line: 1913, column: 7, scope: !5686)
!5697 = !DILocation(line: 1914, column: 7, scope: !5686)
!5698 = !DILocation(line: 1917, column: 36, scope: !5686)
!5699 = !DILocation(line: 1917, column: 40, scope: !5686)
!5700 = !DILocation(line: 1917, column: 7, scope: !5686)
!5701 = !DILocation(line: 1918, column: 7, scope: !5686)
!5702 = !DILocation(line: 1921, column: 13, scope: !5686)
!5703 = !DILocation(line: 1921, column: 17, scope: !5686)
!5704 = !DILocation(line: 1921, column: 26, scope: !5686)
!5705 = !DILocation(line: 1921, column: 7, scope: !5686)
!5706 = !DILocation(line: 1922, column: 7, scope: !5686)
!5707 = !DILocation(line: 1922, column: 11, scope: !5686)
!5708 = !DILocation(line: 1922, column: 20, scope: !5686)
!5709 = !DILocation(line: 1922, column: 25, scope: !5686)
!5710 = !DILocation(line: 1923, column: 7, scope: !5686)
!5711 = !DILocation(line: 1923, column: 11, scope: !5686)
!5712 = !DILocation(line: 1923, column: 20, scope: !5686)
!5713 = !DILocation(line: 1923, column: 30, scope: !5686)
!5714 = !DILocation(line: 1924, column: 7, scope: !5686)
!5715 = !DILocation(line: 1928, column: 7, scope: !5686)
!5716 = !DILocation(line: 1929, column: 7, scope: !5686)
!5717 = !DILocation(line: 1932, column: 28, scope: !5670)
!5718 = !DILocation(line: 1932, column: 3, scope: !5670)
!5719 = !DILocation(line: 1932, column: 7, scope: !5670)
!5720 = !DILocation(line: 1932, column: 16, scope: !5670)
!5721 = !DILocation(line: 1932, column: 26, scope: !5670)
!5722 = !DILocation(line: 1933, column: 1, scope: !5670)
!5723 = distinct !DISubprogram(name: "df_reorganize_refs_by_reg", scope: !3, file: !3, line: 1782, type: !5724, scopeLine: 1786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!5724 = !DISubroutineType(types: !5725)
!5725 = !{null, !3293, !1099, !1099, !1099}
!5726 = !DILocalVariable(name: "ref_info", arg: 1, scope: !5723, file: !3, line: 1782, type: !3293)
!5727 = !DILocation(line: 1782, column: 48, scope: !5723)
!5728 = !DILocalVariable(name: "include_defs", arg: 2, scope: !5723, file: !3, line: 1783, type: !1099)
!5729 = !DILocation(line: 1783, column: 12, scope: !5723)
!5730 = !DILocalVariable(name: "include_uses", arg: 3, scope: !5723, file: !3, line: 1784, type: !1099)
!5731 = !DILocation(line: 1784, column: 12, scope: !5723)
!5732 = !DILocalVariable(name: "include_eq_uses", arg: 4, scope: !5723, file: !3, line: 1785, type: !1099)
!5733 = !DILocation(line: 1785, column: 12, scope: !5723)
!5734 = !DILocation(line: 1787, column: 7, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 1787, column: 7)
!5736 = !DILocation(line: 1787, column: 11, scope: !5735)
!5737 = !DILocation(line: 1787, column: 7, scope: !5723)
!5738 = !DILocation(line: 1788, column: 40, scope: !5735)
!5739 = !DILocation(line: 1788, column: 50, scope: !5735)
!5740 = !DILocation(line: 1789, column: 12, scope: !5735)
!5741 = !DILocation(line: 1789, column: 26, scope: !5735)
!5742 = !DILocation(line: 1788, column: 5, scope: !5735)
!5743 = !DILocation(line: 1791, column: 39, scope: !5735)
!5744 = !DILocation(line: 1791, column: 49, scope: !5735)
!5745 = !DILocation(line: 1792, column: 12, scope: !5735)
!5746 = !DILocation(line: 1792, column: 26, scope: !5735)
!5747 = !DILocation(line: 1791, column: 5, scope: !5735)
!5748 = !DILocation(line: 1793, column: 1, scope: !5723)
!5749 = distinct !DISubprogram(name: "df_reorganize_refs_by_insn", scope: !3, file: !3, line: 1860, type: !5724, scopeLine: 1863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!5750 = !DILocalVariable(name: "ref_info", arg: 1, scope: !5749, file: !3, line: 1860, type: !3293)
!5751 = !DILocation(line: 1860, column: 49, scope: !5749)
!5752 = !DILocalVariable(name: "include_defs", arg: 2, scope: !5749, file: !3, line: 1861, type: !1099)
!5753 = !DILocation(line: 1861, column: 13, scope: !5749)
!5754 = !DILocalVariable(name: "include_uses", arg: 3, scope: !5749, file: !3, line: 1861, type: !1099)
!5755 = !DILocation(line: 1861, column: 32, scope: !5749)
!5756 = !DILocalVariable(name: "include_eq_uses", arg: 4, scope: !5749, file: !3, line: 1862, type: !1099)
!5757 = !DILocation(line: 1862, column: 13, scope: !5749)
!5758 = !DILocalVariable(name: "bb", scope: !5749, file: !3, line: 1864, type: !1244)
!5759 = !DILocation(line: 1864, column: 15, scope: !5749)
!5760 = !DILocalVariable(name: "offset", scope: !5749, file: !3, line: 1865, type: !7)
!5761 = !DILocation(line: 1865, column: 16, scope: !5749)
!5762 = !DILocation(line: 1867, column: 41, scope: !5749)
!5763 = !DILocation(line: 1867, column: 55, scope: !5749)
!5764 = !DILocation(line: 1867, column: 69, scope: !5749)
!5765 = !DILocation(line: 1867, column: 26, scope: !5749)
!5766 = !DILocation(line: 1867, column: 3, scope: !5749)
!5767 = !DILocation(line: 1867, column: 13, scope: !5749)
!5768 = !DILocation(line: 1867, column: 24, scope: !5749)
!5769 = !DILocation(line: 1868, column: 31, scope: !5749)
!5770 = !DILocation(line: 1868, column: 3, scope: !5749)
!5771 = !DILocation(line: 1869, column: 7, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5749, file: !3, line: 1869, column: 7)
!5773 = !DILocation(line: 1869, column: 11, scope: !5772)
!5774 = !DILocation(line: 1869, column: 7, scope: !5749)
!5775 = !DILocalVariable(name: "bi", scope: !5776, file: !3, line: 1871, type: !5009)
!5776 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 1870, column: 5)
!5777 = !DILocation(line: 1871, column: 23, scope: !5776)
!5778 = !DILocalVariable(name: "index", scope: !5776, file: !3, line: 1872, type: !7)
!5779 = !DILocation(line: 1872, column: 20, scope: !5776)
!5780 = !DILocation(line: 1874, column: 7, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5776, file: !3, line: 1874, column: 7)
!5782 = !DILocation(line: 1874, column: 7, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 1874, column: 7)
!5784 = !DILocation(line: 1876, column: 44, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 1875, column: 2)
!5786 = !DILocation(line: 1876, column: 65, scope: !5785)
!5787 = !DILocation(line: 1876, column: 73, scope: !5785)
!5788 = !DILocation(line: 1877, column: 9, scope: !5785)
!5789 = !DILocation(line: 1877, column: 23, scope: !5785)
!5790 = !DILocation(line: 1878, column: 9, scope: !5785)
!5791 = !DILocation(line: 1876, column: 13, scope: !5785)
!5792 = !DILocation(line: 1876, column: 11, scope: !5785)
!5793 = !DILocation(line: 1879, column: 2, scope: !5785)
!5794 = distinct !{!5794, !5780, !5795}
!5795 = !DILocation(line: 1879, column: 2, scope: !5781)
!5796 = !DILocation(line: 1881, column: 30, scope: !5776)
!5797 = !DILocation(line: 1881, column: 7, scope: !5776)
!5798 = !DILocation(line: 1881, column: 17, scope: !5776)
!5799 = !DILocation(line: 1881, column: 28, scope: !5776)
!5800 = !DILocation(line: 1882, column: 5, scope: !5776)
!5801 = !DILocation(line: 1885, column: 7, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 1885, column: 7)
!5803 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 1884, column: 5)
!5804 = !DILocation(line: 1885, column: 7, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 1885, column: 7)
!5806 = !DILocation(line: 1886, column: 42, scope: !5805)
!5807 = !DILocation(line: 1886, column: 46, scope: !5805)
!5808 = !DILocation(line: 1886, column: 54, scope: !5805)
!5809 = !DILocation(line: 1887, column: 7, scope: !5805)
!5810 = !DILocation(line: 1887, column: 21, scope: !5805)
!5811 = !DILocation(line: 1888, column: 7, scope: !5805)
!5812 = !DILocation(line: 1886, column: 11, scope: !5805)
!5813 = !DILocation(line: 1886, column: 9, scope: !5805)
!5814 = !DILocation(line: 1886, column: 2, scope: !5805)
!5815 = distinct !{!5815, !5801, !5816}
!5816 = !DILocation(line: 1888, column: 22, scope: !5802)
!5817 = !DILocation(line: 1889, column: 30, scope: !5803)
!5818 = !DILocation(line: 1889, column: 7, scope: !5803)
!5819 = !DILocation(line: 1889, column: 17, scope: !5803)
!5820 = !DILocation(line: 1889, column: 28, scope: !5803)
!5821 = !DILocation(line: 1891, column: 1, scope: !5749)
!5822 = distinct !DISubprogram(name: "df_maybe_reorganize_def_refs", scope: !3, file: !3, line: 1939, type: !5671, scopeLine: 1940, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!5823 = !DILocalVariable(name: "order", arg: 1, scope: !5822, file: !3, line: 1939, type: !377)
!5824 = !DILocation(line: 1939, column: 49, scope: !5822)
!5825 = !DILocation(line: 1941, column: 7, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5822, file: !3, line: 1941, column: 7)
!5827 = !DILocation(line: 1941, column: 16, scope: !5826)
!5828 = !DILocation(line: 1941, column: 20, scope: !5826)
!5829 = !DILocation(line: 1941, column: 29, scope: !5826)
!5830 = !DILocation(line: 1941, column: 13, scope: !5826)
!5831 = !DILocation(line: 1941, column: 7, scope: !5822)
!5832 = !DILocation(line: 1942, column: 5, scope: !5826)
!5833 = !DILocation(line: 1944, column: 11, scope: !5822)
!5834 = !DILocation(line: 1944, column: 3, scope: !5822)
!5835 = !DILocation(line: 1947, column: 35, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5822, file: !3, line: 1945, column: 5)
!5837 = !DILocation(line: 1947, column: 39, scope: !5836)
!5838 = !DILocation(line: 1947, column: 7, scope: !5836)
!5839 = !DILocation(line: 1948, column: 7, scope: !5836)
!5840 = !DILocation(line: 1951, column: 36, scope: !5836)
!5841 = !DILocation(line: 1951, column: 40, scope: !5836)
!5842 = !DILocation(line: 1951, column: 7, scope: !5836)
!5843 = !DILocation(line: 1952, column: 7, scope: !5836)
!5844 = !DILocation(line: 1955, column: 13, scope: !5836)
!5845 = !DILocation(line: 1955, column: 17, scope: !5836)
!5846 = !DILocation(line: 1955, column: 26, scope: !5836)
!5847 = !DILocation(line: 1955, column: 7, scope: !5836)
!5848 = !DILocation(line: 1956, column: 7, scope: !5836)
!5849 = !DILocation(line: 1956, column: 11, scope: !5836)
!5850 = !DILocation(line: 1956, column: 20, scope: !5836)
!5851 = !DILocation(line: 1956, column: 25, scope: !5836)
!5852 = !DILocation(line: 1957, column: 7, scope: !5836)
!5853 = !DILocation(line: 1957, column: 11, scope: !5836)
!5854 = !DILocation(line: 1957, column: 20, scope: !5836)
!5855 = !DILocation(line: 1957, column: 30, scope: !5836)
!5856 = !DILocation(line: 1958, column: 7, scope: !5836)
!5857 = !DILocation(line: 1964, column: 7, scope: !5836)
!5858 = !DILocation(line: 1965, column: 7, scope: !5836)
!5859 = !DILocation(line: 1968, column: 28, scope: !5822)
!5860 = !DILocation(line: 1968, column: 3, scope: !5822)
!5861 = !DILocation(line: 1968, column: 7, scope: !5822)
!5862 = !DILocation(line: 1968, column: 16, scope: !5822)
!5863 = !DILocation(line: 1968, column: 26, scope: !5822)
!5864 = !DILocation(line: 1969, column: 1, scope: !5822)
!5865 = distinct !DISubprogram(name: "df_insn_change_bb", scope: !3, file: !3, line: 1977, type: !5866, scopeLine: 1978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!5866 = !DISubroutineType(types: !5867)
!5867 = !{null, !931, !1244}
!5868 = !DILocalVariable(name: "insn", arg: 1, scope: !5865, file: !3, line: 1977, type: !931)
!5869 = !DILocation(line: 1977, column: 24, scope: !5865)
!5870 = !DILocalVariable(name: "new_bb", arg: 2, scope: !5865, file: !3, line: 1977, type: !1244)
!5871 = !DILocation(line: 1977, column: 42, scope: !5865)
!5872 = !DILocalVariable(name: "old_bb", scope: !5865, file: !3, line: 1979, type: !1244)
!5873 = !DILocation(line: 1979, column: 15, scope: !5865)
!5874 = !DILocation(line: 1979, column: 24, scope: !5865)
!5875 = !DILocalVariable(name: "insn_info", scope: !5865, file: !3, line: 1980, type: !1946)
!5876 = !DILocation(line: 1980, column: 24, scope: !5865)
!5877 = !DILocalVariable(name: "uid", scope: !5865, file: !3, line: 1981, type: !7)
!5878 = !DILocation(line: 1981, column: 16, scope: !5865)
!5879 = !DILocation(line: 1981, column: 22, scope: !5865)
!5880 = !DILocation(line: 1983, column: 7, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 1983, column: 7)
!5882 = !DILocation(line: 1983, column: 17, scope: !5881)
!5883 = !DILocation(line: 1983, column: 14, scope: !5881)
!5884 = !DILocation(line: 1983, column: 7, scope: !5865)
!5885 = !DILocation(line: 1984, column: 5, scope: !5881)
!5886 = !DILocation(line: 1986, column: 3, scope: !5865)
!5887 = !DILocation(line: 1988, column: 8, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 1988, column: 7)
!5889 = !DILocation(line: 1988, column: 7, scope: !5865)
!5890 = !DILocation(line: 1989, column: 5, scope: !5888)
!5891 = !DILocation(line: 1991, column: 7, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 1991, column: 7)
!5893 = !DILocation(line: 1991, column: 7, scope: !5865)
!5894 = !DILocation(line: 1992, column: 14, scope: !5892)
!5895 = !DILocation(line: 1992, column: 52, scope: !5892)
!5896 = !DILocation(line: 1992, column: 5, scope: !5892)
!5897 = !DILocation(line: 1994, column: 15, scope: !5865)
!5898 = !DILocation(line: 1994, column: 13, scope: !5865)
!5899 = !DILocation(line: 1995, column: 7, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 1995, column: 7)
!5901 = !DILocation(line: 1995, column: 17, scope: !5900)
!5902 = !DILocation(line: 1995, column: 7, scope: !5865)
!5903 = !DILocation(line: 1997, column: 11, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5905, file: !3, line: 1997, column: 11)
!5905 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 1996, column: 5)
!5906 = !DILocation(line: 1997, column: 11, scope: !5905)
!5907 = !DILocation(line: 1998, column: 11, scope: !5904)
!5908 = !DILocation(line: 1998, column: 2, scope: !5904)
!5909 = !DILocation(line: 1999, column: 23, scope: !5905)
!5910 = !DILocation(line: 1999, column: 7, scope: !5905)
!5911 = !DILocation(line: 2000, column: 7, scope: !5905)
!5912 = !DILocation(line: 2003, column: 8, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 2003, column: 7)
!5914 = !DILocation(line: 2003, column: 7, scope: !5865)
!5915 = !DILocation(line: 2004, column: 5, scope: !5913)
!5916 = !DILocation(line: 2006, column: 20, scope: !5865)
!5917 = !DILocation(line: 2006, column: 3, scope: !5865)
!5918 = !DILocation(line: 2007, column: 7, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 2007, column: 7)
!5920 = !DILocation(line: 2007, column: 7, scope: !5865)
!5921 = !DILocation(line: 2009, column: 11, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 2009, column: 11)
!5923 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 2008, column: 5)
!5924 = !DILocation(line: 2009, column: 11, scope: !5923)
!5925 = !DILocation(line: 2010, column: 11, scope: !5922)
!5926 = !DILocation(line: 2011, column: 4, scope: !5922)
!5927 = !DILocation(line: 2011, column: 12, scope: !5922)
!5928 = !DILocation(line: 2011, column: 19, scope: !5922)
!5929 = !DILocation(line: 2011, column: 27, scope: !5922)
!5930 = !DILocation(line: 2010, column: 2, scope: !5922)
!5931 = !DILocation(line: 2012, column: 24, scope: !5923)
!5932 = !DILocation(line: 2012, column: 7, scope: !5923)
!5933 = !DILocation(line: 2013, column: 5, scope: !5923)
!5934 = !DILocation(line: 2015, column: 9, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 2015, column: 9)
!5936 = !DILocation(line: 2015, column: 9, scope: !5919)
!5937 = !DILocation(line: 2016, column: 16, scope: !5935)
!5938 = !DILocation(line: 2016, column: 40, scope: !5935)
!5939 = !DILocation(line: 2016, column: 48, scope: !5935)
!5940 = !DILocation(line: 2016, column: 7, scope: !5935)
!5941 = !DILocation(line: 2017, column: 1, scope: !5865)
!5942 = distinct !DISubprogram(name: "df_ref_change_reg_with_loc", scope: !3, file: !3, line: 2102, type: !5943, scopeLine: 2103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!5943 = !DISubroutineType(types: !5944)
!5944 = !{null, !900, !900, !931}
!5945 = !DILocalVariable(name: "old_regno", arg: 1, scope: !5942, file: !3, line: 2102, type: !900)
!5946 = !DILocation(line: 2102, column: 33, scope: !5942)
!5947 = !DILocalVariable(name: "new_regno", arg: 2, scope: !5942, file: !3, line: 2102, type: !900)
!5948 = !DILocation(line: 2102, column: 48, scope: !5942)
!5949 = !DILocalVariable(name: "loc", arg: 3, scope: !5942, file: !3, line: 2102, type: !931)
!5950 = !DILocation(line: 2102, column: 63, scope: !5942)
!5951 = !DILocation(line: 2104, column: 9, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 2104, column: 7)
!5953 = !DILocation(line: 2104, column: 13, scope: !5952)
!5954 = !DILocation(line: 2104, column: 17, scope: !5952)
!5955 = !DILocation(line: 2104, column: 27, scope: !5952)
!5956 = !DILocation(line: 2104, column: 34, scope: !5952)
!5957 = !DILocation(line: 2104, column: 38, scope: !5952)
!5958 = !DILocation(line: 2104, column: 51, scope: !5952)
!5959 = !DILocation(line: 2104, column: 48, scope: !5952)
!5960 = !DILocation(line: 2104, column: 7, scope: !5942)
!5961 = !DILocation(line: 2105, column: 5, scope: !5952)
!5962 = !DILocation(line: 2107, column: 3, scope: !5942)
!5963 = !DILocation(line: 2109, column: 33, scope: !5942)
!5964 = !DILocation(line: 2110, column: 5, scope: !5942)
!5965 = !DILocation(line: 2110, column: 33, scope: !5942)
!5966 = !DILocation(line: 2110, column: 44, scope: !5942)
!5967 = !DILocation(line: 2109, column: 3, scope: !5942)
!5968 = !DILocation(line: 2111, column: 33, scope: !5942)
!5969 = !DILocation(line: 2112, column: 5, scope: !5942)
!5970 = !DILocation(line: 2112, column: 33, scope: !5942)
!5971 = !DILocation(line: 2112, column: 44, scope: !5942)
!5972 = !DILocation(line: 2111, column: 3, scope: !5942)
!5973 = !DILocation(line: 2113, column: 33, scope: !5942)
!5974 = !DILocation(line: 2114, column: 5, scope: !5942)
!5975 = !DILocation(line: 2114, column: 36, scope: !5942)
!5976 = !DILocation(line: 2114, column: 47, scope: !5942)
!5977 = !DILocation(line: 2113, column: 3, scope: !5942)
!5978 = !DILocation(line: 2115, column: 1, scope: !5942)
!5979 = distinct !DISubprogram(name: "df_ref_change_reg_with_loc_1", scope: !3, file: !3, line: 2023, type: !5980, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!5980 = !DISubroutineType(types: !5981)
!5981 = !{null, !1990, !1990, !900, !931}
!5982 = !DILocalVariable(name: "old_df", arg: 1, scope: !5979, file: !3, line: 2023, type: !1990)
!5983 = !DILocation(line: 2023, column: 51, scope: !5979)
!5984 = !DILocalVariable(name: "new_df", arg: 2, scope: !5979, file: !3, line: 2024, type: !1990)
!5985 = !DILocation(line: 2024, column: 30, scope: !5979)
!5986 = !DILocalVariable(name: "new_regno", arg: 3, scope: !5979, file: !3, line: 2025, type: !900)
!5987 = !DILocation(line: 2025, column: 14, scope: !5979)
!5988 = !DILocalVariable(name: "loc", arg: 4, scope: !5979, file: !3, line: 2025, type: !931)
!5989 = !DILocation(line: 2025, column: 29, scope: !5979)
!5990 = !DILocalVariable(name: "the_ref", scope: !5979, file: !3, line: 2027, type: !920)
!5991 = !DILocation(line: 2027, column: 10, scope: !5979)
!5992 = !DILocation(line: 2027, column: 20, scope: !5979)
!5993 = !DILocation(line: 2027, column: 28, scope: !5979)
!5994 = !DILocation(line: 2029, column: 3, scope: !5979)
!5995 = !DILocation(line: 2029, column: 10, scope: !5979)
!5996 = !DILocation(line: 2031, column: 13, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 2031, column: 11)
!5998 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 2030, column: 5)
!5999 = !DILocation(line: 2032, column: 4, scope: !5997)
!6000 = !DILocation(line: 2032, column: 8, scope: !5997)
!6001 = !DILocation(line: 2033, column: 4, scope: !5997)
!6002 = !DILocation(line: 2033, column: 9, scope: !5997)
!6003 = !DILocation(line: 2033, column: 8, scope: !5997)
!6004 = !DILocation(line: 2033, column: 33, scope: !5997)
!6005 = !DILocation(line: 2033, column: 30, scope: !5997)
!6006 = !DILocation(line: 2031, column: 11, scope: !5998)
!6007 = !DILocalVariable(name: "next_ref", scope: !6008, file: !3, line: 2035, type: !920)
!6008 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 2034, column: 2)
!6009 = !DILocation(line: 2035, column: 11, scope: !6008)
!6010 = !DILocation(line: 2035, column: 22, scope: !6008)
!6011 = !DILocalVariable(name: "prev_ref", scope: !6008, file: !3, line: 2036, type: !920)
!6012 = !DILocation(line: 2036, column: 11, scope: !6008)
!6013 = !DILocation(line: 2036, column: 22, scope: !6008)
!6014 = !DILocalVariable(name: "ref_vec", scope: !6008, file: !3, line: 2037, type: !919)
!6015 = !DILocation(line: 2037, column: 12, scope: !6008)
!6016 = !DILocalVariable(name: "ref_vec_t", scope: !6008, file: !3, line: 2037, type: !919)
!6017 = !DILocation(line: 2037, column: 22, scope: !6008)
!6018 = !DILocalVariable(name: "insn_info", scope: !6008, file: !3, line: 2038, type: !1946)
!6019 = !DILocation(line: 2038, column: 25, scope: !6008)
!6020 = !DILocation(line: 2038, column: 37, scope: !6008)
!6021 = !DILocalVariable(name: "count", scope: !6008, file: !3, line: 2039, type: !7)
!6022 = !DILocation(line: 2039, column: 17, scope: !6008)
!6023 = !DILocation(line: 2041, column: 29, scope: !6008)
!6024 = !DILocation(line: 2041, column: 4, scope: !6008)
!6025 = !DILocation(line: 2041, column: 27, scope: !6008)
!6026 = !DILocation(line: 2042, column: 27, scope: !6008)
!6027 = !DILocation(line: 2042, column: 41, scope: !6008)
!6028 = !DILocation(line: 2042, column: 4, scope: !6008)
!6029 = !DILocation(line: 2042, column: 25, scope: !6008)
!6030 = !DILocation(line: 2045, column: 8, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 2045, column: 8)
!6032 = !DILocation(line: 2045, column: 8, scope: !6008)
!6033 = !DILocation(line: 2046, column: 35, scope: !6031)
!6034 = !DILocation(line: 2046, column: 6, scope: !6031)
!6035 = !DILocation(line: 2046, column: 33, scope: !6031)
!6036 = !DILocation(line: 2048, column: 26, scope: !6031)
!6037 = !DILocation(line: 2048, column: 6, scope: !6031)
!6038 = !DILocation(line: 2048, column: 14, scope: !6031)
!6039 = !DILocation(line: 2048, column: 24, scope: !6031)
!6040 = !DILocation(line: 2049, column: 8, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 2049, column: 8)
!6042 = !DILocation(line: 2049, column: 8, scope: !6008)
!6043 = !DILocation(line: 2050, column: 35, scope: !6041)
!6044 = !DILocation(line: 2050, column: 6, scope: !6041)
!6045 = !DILocation(line: 2050, column: 33, scope: !6041)
!6046 = !DILocation(line: 2051, column: 4, scope: !6008)
!6047 = !DILocation(line: 2051, column: 12, scope: !6008)
!6048 = !DILocation(line: 2051, column: 18, scope: !6008)
!6049 = !DILocation(line: 2054, column: 4, scope: !6008)
!6050 = !DILocation(line: 2054, column: 30, scope: !6008)
!6051 = !DILocation(line: 2055, column: 32, scope: !6008)
!6052 = !DILocation(line: 2055, column: 40, scope: !6008)
!6053 = !DILocation(line: 2055, column: 4, scope: !6008)
!6054 = !DILocation(line: 2055, column: 30, scope: !6008)
!6055 = !DILocation(line: 2056, column: 8, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 2056, column: 8)
!6057 = !DILocation(line: 2056, column: 16, scope: !6056)
!6058 = !DILocation(line: 2056, column: 8, scope: !6008)
!6059 = !DILocation(line: 2057, column: 44, scope: !6056)
!6060 = !DILocation(line: 2057, column: 6, scope: !6056)
!6061 = !DILocation(line: 2057, column: 42, scope: !6056)
!6062 = !DILocation(line: 2058, column: 24, scope: !6008)
!6063 = !DILocation(line: 2058, column: 4, scope: !6008)
!6064 = !DILocation(line: 2058, column: 12, scope: !6008)
!6065 = !DILocation(line: 2058, column: 22, scope: !6008)
!6066 = !DILocation(line: 2059, column: 4, scope: !6008)
!6067 = !DILocation(line: 2059, column: 12, scope: !6008)
!6068 = !DILocation(line: 2059, column: 18, scope: !6008)
!6069 = !DILocation(line: 2060, column: 8, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 2060, column: 8)
!6071 = !DILocation(line: 2060, column: 8, scope: !6008)
!6072 = !DILocation(line: 2061, column: 23, scope: !6070)
!6073 = !DILocation(line: 2061, column: 6, scope: !6070)
!6074 = !DILocation(line: 2066, column: 8, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 2066, column: 8)
!6076 = !DILocation(line: 2066, column: 31, scope: !6075)
!6077 = !DILocation(line: 2066, column: 8, scope: !6008)
!6078 = !DILocation(line: 2067, column: 16, scope: !6075)
!6079 = !DILocation(line: 2067, column: 27, scope: !6075)
!6080 = !DILocation(line: 2067, column: 14, scope: !6075)
!6081 = !DILocation(line: 2067, column: 6, scope: !6075)
!6082 = !DILocation(line: 2069, column: 16, scope: !6075)
!6083 = !DILocation(line: 2069, column: 27, scope: !6075)
!6084 = !DILocation(line: 2069, column: 14, scope: !6075)
!6085 = !DILocation(line: 2070, column: 8, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 2070, column: 8)
!6087 = !DILocation(line: 2070, column: 8, scope: !6008)
!6088 = !DILocation(line: 2071, column: 15, scope: !6086)
!6089 = !DILocation(line: 2072, column: 8, scope: !6086)
!6090 = !DILocation(line: 2071, column: 6, scope: !6086)
!6091 = !DILocation(line: 2074, column: 16, scope: !6008)
!6092 = !DILocation(line: 2074, column: 14, scope: !6008)
!6093 = !DILocation(line: 2077, column: 4, scope: !6008)
!6094 = !DILocation(line: 2077, column: 12, scope: !6008)
!6095 = !DILocation(line: 2077, column: 11, scope: !6008)
!6096 = !DILocation(line: 2079, column: 13, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 2078, column: 6)
!6098 = !DILocation(line: 2080, column: 17, scope: !6097)
!6099 = distinct !{!6099, !6093, !6100}
!6100 = !DILocation(line: 2081, column: 6, scope: !6008)
!6101 = !DILocation(line: 2083, column: 16, scope: !6008)
!6102 = !DILocation(line: 2083, column: 25, scope: !6008)
!6103 = !DILocation(line: 2083, column: 4, scope: !6008)
!6104 = !DILocation(line: 2088, column: 14, scope: !6008)
!6105 = !DILocation(line: 2088, column: 12, scope: !6008)
!6106 = !DILocation(line: 2089, column: 2, scope: !6008)
!6107 = !DILocation(line: 2091, column: 12, scope: !5997)
!6108 = !DILocation(line: 2091, column: 10, scope: !5997)
!6109 = distinct !{!6109, !5994, !6110}
!6110 = !DILocation(line: 2092, column: 5, scope: !5979)
!6111 = !DILocation(line: 2093, column: 1, scope: !5979)
!6112 = distinct !DISubprogram(name: "df_mw_hardreg_chain_delete_eq_uses", scope: !3, file: !3, line: 2121, type: !6113, scopeLine: 2122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!6113 = !DISubroutineType(types: !6114)
!6114 = !{!7, !1946}
!6115 = !DILocalVariable(name: "insn_info", arg: 1, scope: !6112, file: !3, line: 2121, type: !1946)
!6116 = !DILocation(line: 2121, column: 58, scope: !6112)
!6117 = !DILocalVariable(name: "mw_vec", scope: !6112, file: !3, line: 2123, type: !1954)
!6118 = !DILocation(line: 2123, column: 26, scope: !6112)
!6119 = !DILocation(line: 2123, column: 35, scope: !6112)
!6120 = !DILocation(line: 2123, column: 46, scope: !6112)
!6121 = !DILocalVariable(name: "deleted", scope: !6112, file: !3, line: 2124, type: !7)
!6122 = !DILocation(line: 2124, column: 16, scope: !6112)
!6123 = !DILocalVariable(name: "count", scope: !6112, file: !3, line: 2125, type: !7)
!6124 = !DILocation(line: 2125, column: 16, scope: !6112)
!6125 = !DILocalVariable(name: "problem_data", scope: !6112, file: !3, line: 2126, type: !813)
!6126 = !DILocation(line: 2126, column: 32, scope: !6112)
!6127 = !DILocation(line: 2127, column: 39, scope: !6112)
!6128 = !DILocation(line: 2127, column: 48, scope: !6112)
!6129 = !DILocation(line: 2127, column: 7, scope: !6112)
!6130 = !DILocation(line: 2129, column: 9, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 2129, column: 7)
!6132 = !DILocation(line: 2129, column: 8, scope: !6131)
!6133 = !DILocation(line: 2129, column: 7, scope: !6112)
!6134 = !DILocation(line: 2130, column: 5, scope: !6131)
!6135 = !DILocation(line: 2132, column: 3, scope: !6112)
!6136 = !DILocation(line: 2132, column: 11, scope: !6112)
!6137 = !DILocation(line: 2132, column: 10, scope: !6112)
!6138 = !DILocation(line: 2134, column: 13, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 2134, column: 11)
!6140 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 2133, column: 5)
!6141 = !DILocation(line: 2134, column: 12, scope: !6139)
!6142 = !DILocation(line: 2134, column: 22, scope: !6139)
!6143 = !DILocation(line: 2134, column: 28, scope: !6139)
!6144 = !DILocation(line: 2134, column: 11, scope: !6140)
!6145 = !DILocalVariable(name: "temp_vec", scope: !6146, file: !3, line: 2136, type: !1954)
!6146 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 2135, column: 2)
!6147 = !DILocation(line: 2136, column: 27, scope: !6146)
!6148 = !DILocation(line: 2136, column: 38, scope: !6146)
!6149 = !DILocation(line: 2138, column: 15, scope: !6146)
!6150 = !DILocation(line: 2138, column: 29, scope: !6146)
!6151 = !DILocation(line: 2138, column: 43, scope: !6146)
!6152 = !DILocation(line: 2138, column: 42, scope: !6146)
!6153 = !DILocation(line: 2138, column: 4, scope: !6146)
!6154 = !DILocation(line: 2139, column: 15, scope: !6146)
!6155 = !DILocation(line: 2139, column: 13, scope: !6146)
!6156 = !DILocation(line: 2144, column: 4, scope: !6146)
!6157 = !DILocation(line: 2144, column: 12, scope: !6146)
!6158 = !DILocation(line: 2144, column: 11, scope: !6146)
!6159 = !DILocation(line: 2146, column: 22, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 2145, column: 6)
!6161 = !DILocation(line: 2146, column: 31, scope: !6160)
!6162 = !DILocation(line: 2146, column: 20, scope: !6160)
!6163 = !DILocation(line: 2146, column: 9, scope: !6160)
!6164 = !DILocation(line: 2146, column: 18, scope: !6160)
!6165 = !DILocation(line: 2147, column: 16, scope: !6160)
!6166 = distinct !{!6166, !6156, !6167}
!6167 = !DILocation(line: 2148, column: 6, scope: !6146)
!6168 = !DILocation(line: 2149, column: 11, scope: !6146)
!6169 = !DILocation(line: 2150, column: 2, scope: !6146)
!6170 = !DILocation(line: 2153, column: 10, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 2152, column: 2)
!6172 = !DILocation(line: 2154, column: 9, scope: !6171)
!6173 = distinct !{!6173, !6135, !6174}
!6174 = !DILocation(line: 2156, column: 5, scope: !6112)
!6175 = !DILocation(line: 2158, column: 7, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 2158, column: 7)
!6177 = !DILocation(line: 2158, column: 13, scope: !6176)
!6178 = !DILocation(line: 2158, column: 7, scope: !6112)
!6179 = !DILocation(line: 2160, column: 7, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6176, file: !3, line: 2159, column: 5)
!6181 = !DILocation(line: 2160, column: 7, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 2160, column: 7)
!6183 = distinct !DILexicalBlock(scope: !6180, file: !3, line: 2160, column: 7)
!6184 = !DILocation(line: 2160, column: 7, scope: !6183)
!6185 = !DILocation(line: 2161, column: 7, scope: !6180)
!6186 = !DILocation(line: 2161, column: 18, scope: !6180)
!6187 = !DILocation(line: 2161, column: 30, scope: !6180)
!6188 = !DILocation(line: 2162, column: 7, scope: !6180)
!6189 = !DILocation(line: 2164, column: 10, scope: !6112)
!6190 = !DILocation(line: 2164, column: 3, scope: !6112)
!6191 = !DILocation(line: 2165, column: 1, scope: !6112)
!6192 = distinct !DISubprogram(name: "df_uses_record", scope: !3, file: !3, line: 3131, type: !6193, scopeLine: 3136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!6193 = !DISubroutineType(types: !6194)
!6194 = !{null, !393, !3489, !1975, !387, !1244, !1946, !900, !900, !900, !5}
!6195 = !DILocalVariable(name: "cl", arg: 1, scope: !6192, file: !3, line: 3131, type: !393)
!6196 = !DILocation(line: 3131, column: 35, scope: !6192)
!6197 = !DILocalVariable(name: "collection_rec", arg: 2, scope: !6192, file: !3, line: 3131, type: !3489)
!6198 = !DILocation(line: 3131, column: 65, scope: !6192)
!6199 = !DILocalVariable(name: "loc", arg: 3, scope: !6192, file: !3, line: 3132, type: !1975)
!6200 = !DILocation(line: 3132, column: 22, scope: !6192)
!6201 = !DILocalVariable(name: "ref_type", arg: 4, scope: !6192, file: !3, line: 3132, type: !387)
!6202 = !DILocation(line: 3132, column: 44, scope: !6192)
!6203 = !DILocalVariable(name: "bb", arg: 5, scope: !6192, file: !3, line: 3133, type: !1244)
!6204 = !DILocation(line: 3133, column: 15, scope: !6192)
!6205 = !DILocalVariable(name: "insn_info", arg: 6, scope: !6192, file: !3, line: 3133, type: !1946)
!6206 = !DILocation(line: 3133, column: 40, scope: !6192)
!6207 = !DILocalVariable(name: "flags", arg: 7, scope: !6192, file: !3, line: 3134, type: !900)
!6208 = !DILocation(line: 3134, column: 7, scope: !6192)
!6209 = !DILocalVariable(name: "width", arg: 8, scope: !6192, file: !3, line: 3135, type: !900)
!6210 = !DILocation(line: 3135, column: 7, scope: !6192)
!6211 = !DILocalVariable(name: "offset", arg: 9, scope: !6192, file: !3, line: 3135, type: !900)
!6212 = !DILocation(line: 3135, column: 18, scope: !6192)
!6213 = !DILocalVariable(name: "mode", arg: 10, scope: !6192, file: !3, line: 3135, type: !5)
!6214 = !DILocation(line: 3135, column: 44, scope: !6192)
!6215 = !DILocalVariable(name: "code", scope: !6192, file: !3, line: 3137, type: !417)
!6216 = !DILocation(line: 3137, column: 12, scope: !6192)
!6217 = !DILocalVariable(name: "x", scope: !6192, file: !3, line: 3138, type: !931)
!6218 = !DILocation(line: 3138, column: 7, scope: !6192)
!6219 = !DILocation(line: 3138, column: 3, scope: !6192)
!6220 = !DILabel(scope: !6192, name: "retry", file: !3, line: 3140)
!6221 = !DILocation(line: 3140, column: 2, scope: !6192)
!6222 = !DILocation(line: 3141, column: 8, scope: !6192)
!6223 = !DILocation(line: 3141, column: 7, scope: !6192)
!6224 = !DILocation(line: 3141, column: 5, scope: !6192)
!6225 = !DILocation(line: 3142, column: 8, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 3142, column: 7)
!6227 = !DILocation(line: 3142, column: 7, scope: !6192)
!6228 = !DILocation(line: 3143, column: 5, scope: !6226)
!6229 = !DILocation(line: 3144, column: 10, scope: !6192)
!6230 = !DILocation(line: 3144, column: 8, scope: !6192)
!6231 = !DILocation(line: 3145, column: 11, scope: !6192)
!6232 = !DILocation(line: 3145, column: 3, scope: !6192)
!6233 = !DILocation(line: 3158, column: 7, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 3146, column: 5)
!6235 = !DILocation(line: 3163, column: 11, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 3163, column: 11)
!6237 = !DILocation(line: 3163, column: 11, scope: !6234)
!6238 = !DILocation(line: 3164, column: 18, scope: !6236)
!6239 = !DILocation(line: 3164, column: 22, scope: !6236)
!6240 = !DILocation(line: 3165, column: 5, scope: !6236)
!6241 = !DILocation(line: 3167, column: 11, scope: !6236)
!6242 = !DILocation(line: 3167, column: 15, scope: !6236)
!6243 = !DILocation(line: 3168, column: 4, scope: !6236)
!6244 = !DILocation(line: 3168, column: 11, scope: !6236)
!6245 = !DILocation(line: 3168, column: 18, scope: !6236)
!6246 = !DILocation(line: 3168, column: 26, scope: !6236)
!6247 = !DILocation(line: 3164, column: 2, scope: !6236)
!6248 = !DILocation(line: 3171, column: 7, scope: !6234)
!6249 = !DILocation(line: 3174, column: 23, scope: !6234)
!6250 = !DILocation(line: 3174, column: 27, scope: !6234)
!6251 = !DILocation(line: 3175, column: 10, scope: !6234)
!6252 = !DILocation(line: 3176, column: 9, scope: !6234)
!6253 = !DILocation(line: 3176, column: 13, scope: !6234)
!6254 = !DILocation(line: 3176, column: 24, scope: !6234)
!6255 = !DILocation(line: 3176, column: 30, scope: !6234)
!6256 = !DILocation(line: 3177, column: 9, scope: !6234)
!6257 = !DILocation(line: 3177, column: 16, scope: !6234)
!6258 = !DILocation(line: 3177, column: 24, scope: !6234)
!6259 = !DILocation(line: 3174, column: 7, scope: !6234)
!6260 = !DILocation(line: 3178, column: 7, scope: !6234)
!6261 = !DILocation(line: 3182, column: 13, scope: !6234)
!6262 = !DILocation(line: 3184, column: 12, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 3184, column: 11)
!6264 = !DILocation(line: 3184, column: 11, scope: !6234)
!6265 = !DILocation(line: 3186, column: 11, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6263, file: !3, line: 3185, column: 2)
!6267 = !DILocation(line: 3186, column: 8, scope: !6266)
!6268 = !DILocation(line: 3187, column: 20, scope: !6266)
!6269 = !DILocation(line: 3187, column: 24, scope: !6266)
!6270 = !DILocation(line: 3187, column: 40, scope: !6266)
!6271 = !DILocation(line: 3187, column: 45, scope: !6266)
!6272 = !DILocation(line: 3187, column: 55, scope: !6266)
!6273 = !DILocation(line: 3187, column: 59, scope: !6266)
!6274 = !DILocation(line: 3187, column: 70, scope: !6266)
!6275 = !DILocation(line: 3188, column: 6, scope: !6266)
!6276 = !DILocation(line: 3188, column: 13, scope: !6266)
!6277 = !DILocation(line: 3188, column: 21, scope: !6266)
!6278 = !DILocation(line: 3187, column: 4, scope: !6266)
!6279 = !DILocation(line: 3189, column: 4, scope: !6266)
!6280 = !DILocation(line: 3194, column: 22, scope: !6234)
!6281 = !DILocation(line: 3194, column: 26, scope: !6234)
!6282 = !DILocation(line: 3195, column: 8, scope: !6234)
!6283 = !DILocation(line: 3195, column: 11, scope: !6234)
!6284 = !DILocation(line: 3195, column: 16, scope: !6234)
!6285 = !DILocation(line: 3195, column: 20, scope: !6234)
!6286 = !DILocation(line: 3196, column: 8, scope: !6234)
!6287 = !DILocation(line: 3196, column: 18, scope: !6234)
!6288 = !DILocation(line: 3197, column: 8, scope: !6234)
!6289 = !DILocation(line: 3197, column: 15, scope: !6234)
!6290 = !DILocation(line: 3197, column: 23, scope: !6234)
!6291 = !DILocation(line: 3194, column: 7, scope: !6234)
!6292 = !DILocation(line: 3198, column: 7, scope: !6234)
!6293 = !DILocation(line: 3206, column: 6, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 3206, column: 6)
!6295 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 3202, column: 7)
!6296 = !DILocation(line: 3207, column: 6, scope: !6294)
!6297 = !DILocation(line: 3207, column: 9, scope: !6294)
!6298 = !DILocation(line: 3206, column: 6, scope: !6295)
!6299 = !DILocation(line: 3209, column: 14, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 3208, column: 4)
!6301 = !DILocation(line: 3209, column: 12, scope: !6300)
!6302 = !DILocation(line: 3210, column: 15, scope: !6300)
!6303 = !DILocation(line: 3210, column: 13, scope: !6300)
!6304 = !DILocation(line: 3211, column: 13, scope: !6300)
!6305 = !DILocation(line: 3211, column: 11, scope: !6300)
!6306 = !DILocation(line: 3213, column: 10, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 3213, column: 10)
!6308 = !DILocation(line: 3213, column: 15, scope: !6307)
!6309 = !DILocation(line: 3213, column: 10, scope: !6300)
!6310 = !DILocation(line: 3214, column: 14, scope: !6307)
!6311 = !DILocation(line: 3214, column: 8, scope: !6307)
!6312 = !DILocation(line: 3216, column: 14, scope: !6307)
!6313 = !DILocation(line: 3218, column: 38, scope: !6300)
!6314 = !DILocation(line: 3219, column: 9, scope: !6300)
!6315 = !DILocation(line: 3219, column: 22, scope: !6300)
!6316 = !DILocation(line: 3219, column: 32, scope: !6300)
!6317 = !DILocation(line: 3219, column: 36, scope: !6300)
!6318 = !DILocation(line: 3219, column: 47, scope: !6300)
!6319 = !DILocation(line: 3220, column: 8, scope: !6300)
!6320 = !DILocation(line: 3220, column: 15, scope: !6300)
!6321 = !DILocation(line: 3220, column: 23, scope: !6300)
!6322 = !DILocation(line: 3218, column: 6, scope: !6300)
!6323 = !DILocation(line: 3221, column: 6, scope: !6300)
!6324 = !DILocation(line: 3224, column: 7, scope: !6234)
!6325 = !DILocalVariable(name: "dst", scope: !6326, file: !3, line: 3228, type: !931)
!6326 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 3227, column: 7)
!6327 = !DILocation(line: 3228, column: 6, scope: !6326)
!6328 = !DILocation(line: 3228, column: 12, scope: !6326)
!6329 = !DILocation(line: 3229, column: 2, scope: !6326)
!6330 = !DILocation(line: 3230, column: 18, scope: !6326)
!6331 = !DILocation(line: 3230, column: 22, scope: !6326)
!6332 = !DILocation(line: 3231, column: 5, scope: !6326)
!6333 = !DILocation(line: 3231, column: 34, scope: !6326)
!6334 = !DILocation(line: 3231, column: 38, scope: !6326)
!6335 = !DILocation(line: 3231, column: 49, scope: !6326)
!6336 = !DILocation(line: 3232, column: 4, scope: !6326)
!6337 = !DILocation(line: 3232, column: 11, scope: !6326)
!6338 = !DILocation(line: 3232, column: 19, scope: !6326)
!6339 = !DILocation(line: 3230, column: 2, scope: !6326)
!6340 = !DILocation(line: 3234, column: 10, scope: !6326)
!6341 = !DILocation(line: 3234, column: 2, scope: !6326)
!6342 = !DILocation(line: 3237, column: 37, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 3237, column: 12)
!6344 = distinct !DILexicalBlock(scope: !6326, file: !3, line: 3235, column: 4)
!6345 = !DILocation(line: 3237, column: 12, scope: !6343)
!6346 = !DILocation(line: 3237, column: 12, scope: !6344)
!6347 = !DILocation(line: 3239, column: 21, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 3238, column: 3)
!6349 = !DILocation(line: 3239, column: 25, scope: !6348)
!6350 = !DILocation(line: 3239, column: 42, scope: !6348)
!6351 = !DILocation(line: 3240, column: 23, scope: !6348)
!6352 = !DILocation(line: 3240, column: 27, scope: !6348)
!6353 = !DILocation(line: 3241, column: 7, scope: !6348)
!6354 = !DILocation(line: 3241, column: 13, scope: !6348)
!6355 = !DILocation(line: 3241, column: 33, scope: !6348)
!6356 = !DILocation(line: 3242, column: 7, scope: !6348)
!6357 = !DILocation(line: 3242, column: 14, scope: !6348)
!6358 = !DILocation(line: 3242, column: 22, scope: !6348)
!6359 = !DILocation(line: 3239, column: 5, scope: !6348)
!6360 = !DILocation(line: 3243, column: 5, scope: !6348)
!6361 = !DILocation(line: 3237, column: 40, scope: !6343)
!6362 = !DILocation(line: 3251, column: 3, scope: !6344)
!6363 = !DILocation(line: 3253, column: 24, scope: !6344)
!6364 = !DILocation(line: 3253, column: 28, scope: !6344)
!6365 = !DILocation(line: 3253, column: 45, scope: !6344)
!6366 = !DILocation(line: 3254, column: 32, scope: !6344)
!6367 = !DILocation(line: 3254, column: 36, scope: !6344)
!6368 = !DILocation(line: 3254, column: 47, scope: !6344)
!6369 = !DILocation(line: 3255, column: 10, scope: !6344)
!6370 = !DILocation(line: 3255, column: 17, scope: !6344)
!6371 = !DILocation(line: 3255, column: 25, scope: !6344)
!6372 = !DILocation(line: 3253, column: 8, scope: !6344)
!6373 = !DILocation(line: 3256, column: 8, scope: !6344)
!6374 = !DILocalVariable(name: "temp", scope: !6375, file: !3, line: 3259, type: !1975)
!6375 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 3258, column: 8)
!6376 = !DILocation(line: 3259, column: 8, scope: !6375)
!6377 = !DILocation(line: 3259, column: 16, scope: !6375)
!6378 = !DILocation(line: 3262, column: 9, scope: !6375)
!6379 = !DILocation(line: 3262, column: 7, scope: !6375)
!6380 = !DILocation(line: 3263, column: 19, scope: !6375)
!6381 = !DILocation(line: 3263, column: 23, scope: !6375)
!6382 = !DILocation(line: 3264, column: 6, scope: !6375)
!6383 = !DILocation(line: 3264, column: 21, scope: !6375)
!6384 = !DILocation(line: 3264, column: 5, scope: !6375)
!6385 = !DILocation(line: 3264, column: 35, scope: !6375)
!6386 = !DILocation(line: 3264, column: 54, scope: !6375)
!6387 = !DILocation(line: 3265, column: 21, scope: !6375)
!6388 = !DILocation(line: 3265, column: 25, scope: !6375)
!6389 = !DILocation(line: 3267, column: 5, scope: !6375)
!6390 = !DILocation(line: 3267, column: 12, scope: !6375)
!6391 = !DILocation(line: 3267, column: 20, scope: !6375)
!6392 = !DILocation(line: 3263, column: 3, scope: !6375)
!6393 = !DILocation(line: 3269, column: 8, scope: !6344)
!6394 = !DILocation(line: 3272, column: 7, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 3272, column: 7)
!6396 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 3271, column: 8)
!6397 = !DILocation(line: 3273, column: 7, scope: !6395)
!6398 = !DILocation(line: 3273, column: 10, scope: !6395)
!6399 = !DILocation(line: 3272, column: 7, scope: !6396)
!6400 = !DILocation(line: 3275, column: 15, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 3274, column: 5)
!6402 = !DILocation(line: 3275, column: 13, scope: !6401)
!6403 = !DILocation(line: 3276, column: 16, scope: !6401)
!6404 = !DILocation(line: 3276, column: 14, scope: !6401)
!6405 = !DILocation(line: 3277, column: 14, scope: !6401)
!6406 = !DILocation(line: 3277, column: 12, scope: !6401)
!6407 = !DILocation(line: 3278, column: 11, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 3278, column: 11)
!6409 = !DILocation(line: 3278, column: 35, scope: !6408)
!6410 = !DILocation(line: 3278, column: 11, scope: !6401)
!6411 = !DILocation(line: 3283, column: 36, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 3279, column: 9)
!6413 = !DILocation(line: 3283, column: 53, scope: !6412)
!6414 = !DILocation(line: 3284, column: 28, scope: !6412)
!6415 = !DILocation(line: 3284, column: 32, scope: !6412)
!6416 = !DILocation(line: 3286, column: 6, scope: !6412)
!6417 = !DILocation(line: 3286, column: 13, scope: !6412)
!6418 = !DILocation(line: 3286, column: 21, scope: !6412)
!6419 = !DILocation(line: 3283, column: 4, scope: !6412)
!6420 = !DILocation(line: 3287, column: 9, scope: !6412)
!6421 = !DILocation(line: 3290, column: 36, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 3289, column: 9)
!6423 = !DILocation(line: 3290, column: 53, scope: !6422)
!6424 = !DILocation(line: 3291, column: 22, scope: !6422)
!6425 = !DILocation(line: 3291, column: 26, scope: !6422)
!6426 = !DILocation(line: 3293, column: 6, scope: !6422)
!6427 = !DILocation(line: 3293, column: 13, scope: !6422)
!6428 = !DILocation(line: 3293, column: 21, scope: !6422)
!6429 = !DILocation(line: 3290, column: 4, scope: !6422)
!6430 = !DILocation(line: 3295, column: 5, scope: !6401)
!6431 = !DILocation(line: 3298, column: 23, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 3297, column: 5)
!6433 = !DILocation(line: 3298, column: 27, scope: !6432)
!6434 = !DILocation(line: 3298, column: 44, scope: !6432)
!6435 = !DILocation(line: 3299, column: 25, scope: !6432)
!6436 = !DILocation(line: 3299, column: 29, scope: !6432)
!6437 = !DILocation(line: 3299, column: 40, scope: !6432)
!6438 = !DILocation(line: 3300, column: 9, scope: !6432)
!6439 = !DILocation(line: 3300, column: 16, scope: !6432)
!6440 = !DILocation(line: 3300, column: 24, scope: !6432)
!6441 = !DILocation(line: 3298, column: 7, scope: !6432)
!6442 = !DILocation(line: 3301, column: 23, scope: !6432)
!6443 = !DILocation(line: 3301, column: 27, scope: !6432)
!6444 = !DILocation(line: 3301, column: 44, scope: !6432)
!6445 = !DILocation(line: 3302, column: 25, scope: !6432)
!6446 = !DILocation(line: 3302, column: 29, scope: !6432)
!6447 = !DILocation(line: 3302, column: 40, scope: !6432)
!6448 = !DILocation(line: 3303, column: 9, scope: !6432)
!6449 = !DILocation(line: 3303, column: 16, scope: !6432)
!6450 = !DILocation(line: 3303, column: 24, scope: !6432)
!6451 = !DILocation(line: 3301, column: 7, scope: !6432)
!6452 = !DILocation(line: 3304, column: 23, scope: !6432)
!6453 = !DILocation(line: 3304, column: 27, scope: !6432)
!6454 = !DILocation(line: 3304, column: 44, scope: !6432)
!6455 = !DILocation(line: 3305, column: 25, scope: !6432)
!6456 = !DILocation(line: 3305, column: 29, scope: !6432)
!6457 = !DILocation(line: 3307, column: 9, scope: !6432)
!6458 = !DILocation(line: 3307, column: 16, scope: !6432)
!6459 = !DILocation(line: 3307, column: 24, scope: !6432)
!6460 = !DILocation(line: 3304, column: 7, scope: !6432)
!6461 = !DILocation(line: 3311, column: 8, scope: !6344)
!6462 = !DILocation(line: 3314, column: 8, scope: !6344)
!6463 = !DILocation(line: 3315, column: 4, scope: !6344)
!6464 = !DILocation(line: 3316, column: 2, scope: !6326)
!6465 = !DILocation(line: 3320, column: 7, scope: !6234)
!6466 = !DILocation(line: 3353, column: 6, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 3353, column: 6)
!6468 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 3326, column: 7)
!6469 = !DILocation(line: 3353, column: 11, scope: !6467)
!6470 = !DILocation(line: 3353, column: 6, scope: !6468)
!6471 = !DILocalVariable(name: "j", scope: !6472, file: !3, line: 3355, type: !900)
!6472 = distinct !DILexicalBlock(scope: !6467, file: !3, line: 3354, column: 4)
!6473 = !DILocation(line: 3355, column: 10, scope: !6472)
!6474 = !DILocation(line: 3357, column: 13, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 3357, column: 6)
!6476 = !DILocation(line: 3357, column: 11, scope: !6475)
!6477 = !DILocation(line: 3357, column: 18, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 3357, column: 6)
!6479 = !DILocation(line: 3357, column: 22, scope: !6478)
!6480 = !DILocation(line: 3357, column: 20, scope: !6478)
!6481 = !DILocation(line: 3357, column: 6, scope: !6475)
!6482 = !DILocation(line: 3358, column: 24, scope: !6478)
!6483 = !DILocation(line: 3358, column: 28, scope: !6478)
!6484 = !DILocation(line: 3358, column: 45, scope: !6478)
!6485 = !DILocation(line: 3359, column: 26, scope: !6478)
!6486 = !DILocation(line: 3359, column: 30, scope: !6478)
!6487 = !DILocation(line: 3359, column: 41, scope: !6478)
!6488 = !DILocation(line: 3360, column: 10, scope: !6478)
!6489 = !DILocation(line: 3360, column: 17, scope: !6478)
!6490 = !DILocation(line: 3360, column: 25, scope: !6478)
!6491 = !DILocation(line: 3358, column: 8, scope: !6478)
!6492 = !DILocation(line: 3357, column: 54, scope: !6478)
!6493 = !DILocation(line: 3357, column: 6, scope: !6478)
!6494 = distinct !{!6494, !6481, !6495}
!6495 = !DILocation(line: 3360, column: 29, scope: !6475)
!6496 = !DILocation(line: 3361, column: 6, scope: !6472)
!6497 = !DILocation(line: 3363, column: 2, scope: !6468)
!6498 = !DILocation(line: 3367, column: 23, scope: !6234)
!6499 = !DILocation(line: 3367, column: 27, scope: !6234)
!6500 = !DILocation(line: 3368, column: 10, scope: !6234)
!6501 = !DILocation(line: 3369, column: 25, scope: !6234)
!6502 = !DILocation(line: 3369, column: 29, scope: !6234)
!6503 = !DILocation(line: 3370, column: 9, scope: !6234)
!6504 = !DILocation(line: 3370, column: 16, scope: !6234)
!6505 = !DILocation(line: 3370, column: 23, scope: !6234)
!6506 = !DILocation(line: 3370, column: 31, scope: !6234)
!6507 = !DILocation(line: 3367, column: 7, scope: !6234)
!6508 = !DILocation(line: 3371, column: 7, scope: !6234)
!6509 = !DILocation(line: 3379, column: 7, scope: !6234)
!6510 = !DILocation(line: 3381, column: 22, scope: !6234)
!6511 = !DILocation(line: 3381, column: 26, scope: !6234)
!6512 = !DILocation(line: 3381, column: 42, scope: !6234)
!6513 = !DILocation(line: 3381, column: 56, scope: !6234)
!6514 = !DILocation(line: 3382, column: 8, scope: !6234)
!6515 = !DILocation(line: 3382, column: 12, scope: !6234)
!6516 = !DILocation(line: 3384, column: 22, scope: !6234)
!6517 = !DILocation(line: 3384, column: 28, scope: !6234)
!6518 = !DILocation(line: 3384, column: 48, scope: !6234)
!6519 = !DILocation(line: 3385, column: 8, scope: !6234)
!6520 = !DILocation(line: 3385, column: 15, scope: !6234)
!6521 = !DILocation(line: 3385, column: 23, scope: !6234)
!6522 = !DILocation(line: 3381, column: 7, scope: !6234)
!6523 = !DILocation(line: 3390, column: 7, scope: !6234)
!6524 = !DILocalVariable(name: "fmt", scope: !6525, file: !3, line: 3395, type: !823)
!6525 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 3394, column: 3)
!6526 = !DILocation(line: 3395, column: 17, scope: !6525)
!6527 = !DILocation(line: 3395, column: 23, scope: !6525)
!6528 = !DILocalVariable(name: "i", scope: !6525, file: !3, line: 3396, type: !900)
!6529 = !DILocation(line: 3396, column: 9, scope: !6525)
!6530 = !DILocation(line: 3398, column: 14, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 3398, column: 5)
!6532 = !DILocation(line: 3398, column: 36, scope: !6531)
!6533 = !DILocation(line: 3398, column: 12, scope: !6531)
!6534 = !DILocation(line: 3398, column: 10, scope: !6531)
!6535 = !DILocation(line: 3398, column: 41, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6531, file: !3, line: 3398, column: 5)
!6537 = !DILocation(line: 3398, column: 43, scope: !6536)
!6538 = !DILocation(line: 3398, column: 5, scope: !6531)
!6539 = !DILocation(line: 3400, column: 6, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 3400, column: 6)
!6541 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 3399, column: 7)
!6542 = !DILocation(line: 3400, column: 10, scope: !6540)
!6543 = !DILocation(line: 3400, column: 13, scope: !6540)
!6544 = !DILocation(line: 3400, column: 6, scope: !6541)
!6545 = !DILocation(line: 3403, column: 10, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 3403, column: 10)
!6547 = distinct !DILexicalBlock(scope: !6540, file: !3, line: 3401, column: 4)
!6548 = !DILocation(line: 3403, column: 12, scope: !6546)
!6549 = !DILocation(line: 3403, column: 10, scope: !6547)
!6550 = !DILocation(line: 3405, column: 10, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 3404, column: 8)
!6552 = !DILocation(line: 3405, column: 7, scope: !6551)
!6553 = !DILocation(line: 3406, column: 3, scope: !6551)
!6554 = !DILocation(line: 3408, column: 22, scope: !6547)
!6555 = !DILocation(line: 3408, column: 26, scope: !6547)
!6556 = !DILocation(line: 3408, column: 43, scope: !6547)
!6557 = !DILocation(line: 3408, column: 56, scope: !6547)
!6558 = !DILocation(line: 3409, column: 8, scope: !6547)
!6559 = !DILocation(line: 3409, column: 12, scope: !6547)
!6560 = !DILocation(line: 3409, column: 23, scope: !6547)
!6561 = !DILocation(line: 3410, column: 8, scope: !6547)
!6562 = !DILocation(line: 3410, column: 15, scope: !6547)
!6563 = !DILocation(line: 3410, column: 23, scope: !6547)
!6564 = !DILocation(line: 3408, column: 6, scope: !6547)
!6565 = !DILocation(line: 3411, column: 4, scope: !6547)
!6566 = !DILocation(line: 3412, column: 11, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6540, file: !3, line: 3412, column: 11)
!6568 = !DILocation(line: 3412, column: 15, scope: !6567)
!6569 = !DILocation(line: 3412, column: 18, scope: !6567)
!6570 = !DILocation(line: 3412, column: 11, scope: !6540)
!6571 = !DILocalVariable(name: "j", scope: !6572, file: !3, line: 3414, type: !900)
!6572 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 3413, column: 4)
!6573 = !DILocation(line: 3414, column: 10, scope: !6572)
!6574 = !DILocation(line: 3415, column: 13, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 3415, column: 6)
!6576 = !DILocation(line: 3415, column: 11, scope: !6575)
!6577 = !DILocation(line: 3415, column: 18, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6575, file: !3, line: 3415, column: 6)
!6579 = !DILocation(line: 3415, column: 22, scope: !6578)
!6580 = !DILocation(line: 3415, column: 20, scope: !6578)
!6581 = !DILocation(line: 3415, column: 6, scope: !6575)
!6582 = !DILocation(line: 3416, column: 24, scope: !6578)
!6583 = !DILocation(line: 3416, column: 28, scope: !6578)
!6584 = !DILocation(line: 3417, column: 11, scope: !6578)
!6585 = !DILocation(line: 3417, column: 30, scope: !6578)
!6586 = !DILocation(line: 3418, column: 10, scope: !6578)
!6587 = !DILocation(line: 3418, column: 14, scope: !6578)
!6588 = !DILocation(line: 3418, column: 25, scope: !6578)
!6589 = !DILocation(line: 3419, column: 10, scope: !6578)
!6590 = !DILocation(line: 3419, column: 17, scope: !6578)
!6591 = !DILocation(line: 3419, column: 25, scope: !6578)
!6592 = !DILocation(line: 3416, column: 8, scope: !6578)
!6593 = !DILocation(line: 3415, column: 39, scope: !6578)
!6594 = !DILocation(line: 3415, column: 6, scope: !6578)
!6595 = distinct !{!6595, !6581, !6596}
!6596 = !DILocation(line: 3419, column: 29, scope: !6575)
!6597 = !DILocation(line: 3420, column: 4, scope: !6572)
!6598 = !DILocation(line: 3421, column: 7, scope: !6541)
!6599 = !DILocation(line: 3398, column: 50, scope: !6536)
!6600 = !DILocation(line: 3398, column: 5, scope: !6536)
!6601 = distinct !{!6601, !6538, !6602}
!6602 = !DILocation(line: 3421, column: 7, scope: !6531)
!6603 = !DILocation(line: 3424, column: 3, scope: !6192)
!6604 = !DILocation(line: 3425, column: 1, scope: !6192)
!6605 = distinct !DISubprogram(name: "df_canonize_collection_rec", scope: !3, file: !3, line: 2601, type: !4594, scopeLine: 2602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!6606 = !DILocalVariable(name: "collection_rec", arg: 1, scope: !6605, file: !3, line: 2601, type: !3489)
!6607 = !DILocation(line: 2601, column: 55, scope: !6605)
!6608 = !DILocation(line: 2603, column: 31, scope: !6605)
!6609 = !DILocation(line: 2603, column: 47, scope: !6605)
!6610 = !DILocation(line: 2603, column: 3, scope: !6605)
!6611 = !DILocation(line: 2604, column: 31, scope: !6605)
!6612 = !DILocation(line: 2604, column: 47, scope: !6605)
!6613 = !DILocation(line: 2604, column: 3, scope: !6605)
!6614 = !DILocation(line: 2605, column: 31, scope: !6605)
!6615 = !DILocation(line: 2605, column: 47, scope: !6605)
!6616 = !DILocation(line: 2605, column: 3, scope: !6605)
!6617 = !DILocation(line: 2606, column: 30, scope: !6605)
!6618 = !DILocation(line: 2606, column: 46, scope: !6605)
!6619 = !DILocation(line: 2606, column: 3, scope: !6605)
!6620 = !DILocation(line: 2607, column: 1, scope: !6605)
!6621 = distinct !DISubprogram(name: "VEC_df_mw_hardreg_ptr_base_length", scope: !3, file: !3, line: 56, type: !6622, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!6622 = !DISubroutineType(types: !6623)
!6623 = !{!7, !6624}
!6624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6625, size: 64)
!6625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2014)
!6626 = !DILocalVariable(name: "vec_", arg: 1, scope: !6621, file: !3, line: 56, type: !6624)
!6627 = !DILocation(line: 56, column: 1, scope: !6621)
!6628 = distinct !DISubprogram(name: "VEC_df_mw_hardreg_ptr_base_address", scope: !3, file: !3, line: 56, type: !6629, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!6629 = !DISubroutineType(types: !6630)
!6630 = !{!6631, !6632}
!6631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!6632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!6633 = !DILocalVariable(name: "vec_", arg: 1, scope: !6628, file: !3, line: 56, type: !6632)
!6634 = !DILocation(line: 56, column: 1, scope: !6628)
!6635 = distinct !DISubprogram(name: "df_mw_compare", scope: !3, file: !3, line: 2512, type: !1367, scopeLine: 2513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!6636 = !DILocalVariable(name: "m1", arg: 1, scope: !6635, file: !3, line: 2512, type: !1362)
!6637 = !DILocation(line: 2512, column: 28, scope: !6635)
!6638 = !DILocalVariable(name: "m2", arg: 2, scope: !6635, file: !3, line: 2512, type: !1362)
!6639 = !DILocation(line: 2512, column: 44, scope: !6635)
!6640 = !DILocalVariable(name: "mw1", scope: !6635, file: !3, line: 2514, type: !2029)
!6641 = !DILocation(line: 2514, column: 37, scope: !6635)
!6642 = !DILocation(line: 2514, column: 80, scope: !6635)
!6643 = !DILocation(line: 2514, column: 44, scope: !6635)
!6644 = !DILocation(line: 2514, column: 43, scope: !6635)
!6645 = !DILocalVariable(name: "mw2", scope: !6635, file: !3, line: 2515, type: !2029)
!6646 = !DILocation(line: 2515, column: 37, scope: !6635)
!6647 = !DILocation(line: 2515, column: 80, scope: !6635)
!6648 = !DILocation(line: 2515, column: 44, scope: !6635)
!6649 = !DILocation(line: 2515, column: 43, scope: !6635)
!6650 = !DILocation(line: 2517, column: 7, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 2517, column: 7)
!6652 = !DILocation(line: 2517, column: 14, scope: !6651)
!6653 = !DILocation(line: 2517, column: 11, scope: !6651)
!6654 = !DILocation(line: 2517, column: 7, scope: !6635)
!6655 = !DILocation(line: 2518, column: 5, scope: !6651)
!6656 = !DILocation(line: 2520, column: 7, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 2520, column: 7)
!6658 = !DILocation(line: 2520, column: 12, scope: !6657)
!6659 = !DILocation(line: 2520, column: 20, scope: !6657)
!6660 = !DILocation(line: 2520, column: 25, scope: !6657)
!6661 = !DILocation(line: 2520, column: 17, scope: !6657)
!6662 = !DILocation(line: 2520, column: 7, scope: !6635)
!6663 = !DILocation(line: 2521, column: 12, scope: !6657)
!6664 = !DILocation(line: 2521, column: 17, scope: !6657)
!6665 = !DILocation(line: 2521, column: 24, scope: !6657)
!6666 = !DILocation(line: 2521, column: 29, scope: !6657)
!6667 = !DILocation(line: 2521, column: 22, scope: !6657)
!6668 = !DILocation(line: 2521, column: 5, scope: !6657)
!6669 = !DILocation(line: 2523, column: 7, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 2523, column: 7)
!6671 = !DILocation(line: 2523, column: 12, scope: !6670)
!6672 = !DILocation(line: 2523, column: 21, scope: !6670)
!6673 = !DILocation(line: 2523, column: 26, scope: !6670)
!6674 = !DILocation(line: 2523, column: 18, scope: !6670)
!6675 = !DILocation(line: 2523, column: 7, scope: !6635)
!6676 = !DILocation(line: 2524, column: 12, scope: !6670)
!6677 = !DILocation(line: 2524, column: 17, scope: !6670)
!6678 = !DILocation(line: 2524, column: 25, scope: !6670)
!6679 = !DILocation(line: 2524, column: 30, scope: !6670)
!6680 = !DILocation(line: 2524, column: 23, scope: !6670)
!6681 = !DILocation(line: 2524, column: 5, scope: !6670)
!6682 = !DILocation(line: 2526, column: 7, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 2526, column: 7)
!6684 = !DILocation(line: 2526, column: 12, scope: !6683)
!6685 = !DILocation(line: 2526, column: 27, scope: !6683)
!6686 = !DILocation(line: 2526, column: 32, scope: !6683)
!6687 = !DILocation(line: 2526, column: 24, scope: !6683)
!6688 = !DILocation(line: 2526, column: 7, scope: !6635)
!6689 = !DILocation(line: 2527, column: 12, scope: !6683)
!6690 = !DILocation(line: 2527, column: 17, scope: !6683)
!6691 = !DILocation(line: 2527, column: 31, scope: !6683)
!6692 = !DILocation(line: 2527, column: 36, scope: !6683)
!6693 = !DILocation(line: 2527, column: 29, scope: !6683)
!6694 = !DILocation(line: 2527, column: 5, scope: !6683)
!6695 = !DILocation(line: 2529, column: 7, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 2529, column: 7)
!6697 = !DILocation(line: 2529, column: 12, scope: !6696)
!6698 = !DILocation(line: 2529, column: 25, scope: !6696)
!6699 = !DILocation(line: 2529, column: 30, scope: !6696)
!6700 = !DILocation(line: 2529, column: 22, scope: !6696)
!6701 = !DILocation(line: 2529, column: 7, scope: !6635)
!6702 = !DILocation(line: 2530, column: 12, scope: !6696)
!6703 = !DILocation(line: 2530, column: 17, scope: !6696)
!6704 = !DILocation(line: 2530, column: 29, scope: !6696)
!6705 = !DILocation(line: 2530, column: 34, scope: !6696)
!6706 = !DILocation(line: 2530, column: 27, scope: !6696)
!6707 = !DILocation(line: 2530, column: 5, scope: !6696)
!6708 = !DILocation(line: 2532, column: 7, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 2532, column: 7)
!6710 = !DILocation(line: 2532, column: 12, scope: !6709)
!6711 = !DILocation(line: 2532, column: 22, scope: !6709)
!6712 = !DILocation(line: 2532, column: 27, scope: !6709)
!6713 = !DILocation(line: 2532, column: 19, scope: !6709)
!6714 = !DILocation(line: 2532, column: 7, scope: !6635)
!6715 = !DILocation(line: 2533, column: 12, scope: !6709)
!6716 = !DILocation(line: 2533, column: 17, scope: !6709)
!6717 = !DILocation(line: 2533, column: 28, scope: !6709)
!6718 = !DILocation(line: 2533, column: 33, scope: !6709)
!6719 = !DILocation(line: 2533, column: 26, scope: !6709)
!6720 = !DILocation(line: 2533, column: 5, scope: !6709)
!6721 = !DILocation(line: 2535, column: 3, scope: !6635)
!6722 = !DILocation(line: 2536, column: 1, scope: !6635)
!6723 = distinct !DISubprogram(name: "df_read_modify_subreg_p", scope: !3, file: !3, line: 2984, type: !4319, scopeLine: 2985, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!6724 = !DILocalVariable(name: "x", arg: 1, scope: !6723, file: !3, line: 2984, type: !931)
!6725 = !DILocation(line: 2984, column: 30, scope: !6723)
!6726 = !DILocalVariable(name: "isize", scope: !6723, file: !3, line: 2986, type: !7)
!6727 = !DILocation(line: 2986, column: 16, scope: !6723)
!6728 = !DILocalVariable(name: "osize", scope: !6723, file: !3, line: 2986, type: !7)
!6729 = !DILocation(line: 2986, column: 23, scope: !6723)
!6730 = !DILocation(line: 2987, column: 7, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 2987, column: 7)
!6732 = !DILocation(line: 2987, column: 20, scope: !6731)
!6733 = !DILocation(line: 2987, column: 7, scope: !6723)
!6734 = !DILocation(line: 2988, column: 5, scope: !6731)
!6735 = !DILocation(line: 2989, column: 11, scope: !6723)
!6736 = !DILocation(line: 2989, column: 9, scope: !6723)
!6737 = !DILocation(line: 2990, column: 11, scope: !6723)
!6738 = !DILocation(line: 2990, column: 9, scope: !6723)
!6739 = !DILocation(line: 2991, column: 10, scope: !6723)
!6740 = !DILocation(line: 2991, column: 18, scope: !6723)
!6741 = !DILocation(line: 2991, column: 16, scope: !6723)
!6742 = !DILocation(line: 2992, column: 3, scope: !6723)
!6743 = !DILocation(line: 2992, column: 6, scope: !6723)
!6744 = !DILocation(line: 2992, column: 12, scope: !6723)
!6745 = !DILocation(line: 0, scope: !6723)
!6746 = !DILocation(line: 2991, column: 3, scope: !6723)
!6747 = !DILocation(line: 2993, column: 1, scope: !6723)
!6748 = distinct !DISubprogram(name: "df_recompute_luids", scope: !3, file: !3, line: 3618, type: !2103, scopeLine: 3619, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!6749 = !DILocalVariable(name: "bb", arg: 1, scope: !6748, file: !3, line: 3618, type: !1244)
!6750 = !DILocation(line: 3618, column: 33, scope: !6748)
!6751 = !DILocalVariable(name: "insn", scope: !6748, file: !3, line: 3620, type: !931)
!6752 = !DILocation(line: 3620, column: 7, scope: !6748)
!6753 = !DILocalVariable(name: "luid", scope: !6748, file: !3, line: 3621, type: !900)
!6754 = !DILocation(line: 3621, column: 7, scope: !6748)
!6755 = !DILocation(line: 3623, column: 3, scope: !6748)
!6756 = !DILocation(line: 3626, column: 3, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 3626, column: 3)
!6758 = !DILocation(line: 3626, column: 3, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 3626, column: 3)
!6760 = !DILocation(line: 0, scope: !6759)
!6761 = !DILocalVariable(name: "insn_info", scope: !6762, file: !3, line: 3628, type: !1946)
!6762 = distinct !DILexicalBlock(scope: !6759, file: !3, line: 3627, column: 5)
!6763 = !DILocation(line: 3628, column: 28, scope: !6762)
!6764 = !DILocation(line: 3628, column: 40, scope: !6762)
!6765 = !DILocation(line: 3631, column: 12, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 3631, column: 11)
!6767 = !DILocation(line: 3631, column: 11, scope: !6762)
!6768 = !DILocation(line: 3633, column: 4, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6766, file: !3, line: 3632, column: 2)
!6770 = !DILocation(line: 3634, column: 44, scope: !6769)
!6771 = !DILocation(line: 3634, column: 16, scope: !6769)
!6772 = !DILocation(line: 3634, column: 14, scope: !6769)
!6773 = !DILocation(line: 3635, column: 2, scope: !6769)
!6774 = !DILocation(line: 3637, column: 39, scope: !6762)
!6775 = !DILocation(line: 3637, column: 7, scope: !6762)
!6776 = !DILocation(line: 3637, column: 37, scope: !6762)
!6777 = !DILocation(line: 3638, column: 11, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 3638, column: 11)
!6779 = !DILocation(line: 3638, column: 11, scope: !6762)
!6780 = !DILocation(line: 3639, column: 6, scope: !6778)
!6781 = !DILocation(line: 3639, column: 2, scope: !6778)
!6782 = !DILocation(line: 3640, column: 5, scope: !6762)
!6783 = distinct !{!6783, !6756, !6784}
!6784 = !DILocation(line: 3640, column: 5, scope: !6757)
!6785 = !DILocation(line: 3641, column: 1, scope: !6748)
!6786 = distinct !DISubprogram(name: "df_bb_refs_collect", scope: !3, file: !3, line: 3648, type: !6787, scopeLine: 3649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!6787 = !DISubroutineType(types: !6788)
!6788 = !{null, !3489, !1244}
!6789 = !DILocalVariable(name: "collection_rec", arg: 1, scope: !6786, file: !3, line: 3648, type: !3489)
!6790 = !DILocation(line: 3648, column: 47, scope: !6786)
!6791 = !DILocalVariable(name: "bb", arg: 2, scope: !6786, file: !3, line: 3648, type: !1244)
!6792 = !DILocation(line: 3648, column: 75, scope: !6786)
!6793 = !DILocation(line: 3650, column: 3, scope: !6786)
!6794 = !DILocation(line: 3651, column: 3, scope: !6786)
!6795 = !DILocation(line: 3652, column: 3, scope: !6786)
!6796 = !DILocation(line: 3653, column: 3, scope: !6786)
!6797 = !DILocation(line: 3655, column: 7, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 3655, column: 7)
!6799 = !DILocation(line: 3655, column: 11, scope: !6798)
!6800 = !DILocation(line: 3655, column: 17, scope: !6798)
!6801 = !DILocation(line: 3655, column: 7, scope: !6786)
!6802 = !DILocation(line: 3657, column: 36, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 3656, column: 5)
!6804 = !DILocation(line: 3657, column: 52, scope: !6803)
!6805 = !DILocation(line: 3657, column: 56, scope: !6803)
!6806 = !DILocation(line: 3657, column: 7, scope: !6803)
!6807 = !DILocation(line: 3658, column: 7, scope: !6803)
!6808 = !DILocation(line: 3660, column: 12, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 3660, column: 12)
!6810 = !DILocation(line: 3660, column: 16, scope: !6809)
!6811 = !DILocation(line: 3660, column: 22, scope: !6809)
!6812 = !DILocation(line: 3660, column: 12, scope: !6798)
!6813 = !DILocation(line: 3662, column: 35, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6809, file: !3, line: 3661, column: 5)
!6815 = !DILocation(line: 3662, column: 51, scope: !6814)
!6816 = !DILocation(line: 3662, column: 55, scope: !6814)
!6817 = !DILocation(line: 3662, column: 7, scope: !6814)
!6818 = !DILocation(line: 3663, column: 7, scope: !6814)
!6819 = !DILocation(line: 3667, column: 23, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 3667, column: 7)
!6821 = !DILocation(line: 3667, column: 7, scope: !6820)
!6822 = !DILocation(line: 3667, column: 7, scope: !6786)
!6823 = !DILocalVariable(name: "i", scope: !6824, file: !3, line: 3669, type: !7)
!6824 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 3668, column: 5)
!6825 = !DILocation(line: 3669, column: 20, scope: !6824)
!6826 = !DILocation(line: 3671, column: 14, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6824, file: !3, line: 3671, column: 7)
!6828 = !DILocation(line: 3671, column: 12, scope: !6827)
!6829 = !DILocalVariable(name: "regno", scope: !6830, file: !3, line: 3673, type: !7)
!6830 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 3672, column: 2)
!6831 = distinct !DILexicalBlock(scope: !6827, file: !3, line: 3671, column: 7)
!6832 = !DILocation(line: 3673, column: 13, scope: !6830)
!6833 = !DILocation(line: 3673, column: 21, scope: !6830)
!6834 = !DILocation(line: 3674, column: 8, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6830, file: !3, line: 3674, column: 8)
!6836 = !DILocation(line: 3674, column: 14, scope: !6835)
!6837 = !DILocation(line: 3674, column: 8, scope: !6830)
!6838 = !DILocation(line: 3675, column: 6, scope: !6835)
!6839 = !DILocation(line: 3676, column: 38, scope: !6830)
!6840 = !DILocation(line: 3676, column: 54, scope: !6830)
!6841 = !DILocation(line: 3676, column: 68, scope: !6830)
!6842 = !DILocation(line: 3677, column: 5, scope: !6830)
!6843 = !DILocation(line: 3676, column: 4, scope: !6830)
!6844 = !DILocation(line: 3679, column: 2, scope: !6830)
!6845 = !DILocation(line: 3671, column: 21, scope: !6831)
!6846 = !DILocation(line: 3671, column: 7, scope: !6831)
!6847 = distinct !{!6847, !6848, !6849}
!6848 = !DILocation(line: 3671, column: 7, scope: !6827)
!6849 = !DILocation(line: 3679, column: 2, scope: !6827)
!6850 = !DILocation(line: 3680, column: 5, scope: !6824)
!6851 = !DILocation(line: 3685, column: 7, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 3685, column: 7)
!6853 = !DILocation(line: 3685, column: 11, scope: !6852)
!6854 = !DILocation(line: 3685, column: 17, scope: !6852)
!6855 = !DILocation(line: 3685, column: 7, scope: !6786)
!6856 = !DILocation(line: 3686, column: 39, scope: !6852)
!6857 = !DILocation(line: 3686, column: 55, scope: !6852)
!6858 = !DILocation(line: 3687, column: 6, scope: !6852)
!6859 = !DILocation(line: 3686, column: 5, scope: !6852)
!6860 = !DILocation(line: 3690, column: 7, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 3690, column: 7)
!6862 = !DILocation(line: 3690, column: 11, scope: !6861)
!6863 = !DILocation(line: 3690, column: 17, scope: !6861)
!6864 = !DILocation(line: 3690, column: 7, scope: !6786)
!6865 = !DILocalVariable(name: "bi", scope: !6866, file: !3, line: 3692, type: !5009)
!6866 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 3691, column: 5)
!6867 = !DILocation(line: 3692, column: 23, scope: !6866)
!6868 = !DILocalVariable(name: "regno", scope: !6866, file: !3, line: 3693, type: !7)
!6869 = !DILocation(line: 3693, column: 20, scope: !6866)
!6870 = !DILocalVariable(name: "au", scope: !6866, file: !3, line: 3694, type: !2022)
!6871 = !DILocation(line: 3694, column: 14, scope: !6866)
!6872 = !DILocation(line: 3694, column: 35, scope: !6866)
!6873 = !DILocation(line: 3694, column: 19, scope: !6866)
!6874 = !DILocation(line: 3695, column: 4, scope: !6866)
!6875 = !DILocation(line: 3695, column: 8, scope: !6866)
!6876 = !DILocation(line: 3696, column: 4, scope: !6866)
!6877 = !DILocation(line: 3696, column: 8, scope: !6866)
!6878 = !DILocation(line: 3698, column: 7, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6866, file: !3, line: 3698, column: 7)
!6880 = !DILocation(line: 3698, column: 7, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6879, file: !3, line: 3698, column: 7)
!6882 = !DILocation(line: 3700, column: 38, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6881, file: !3, line: 3699, column: 2)
!6884 = !DILocation(line: 3700, column: 54, scope: !6883)
!6885 = !DILocation(line: 3700, column: 68, scope: !6883)
!6886 = !DILocation(line: 3701, column: 5, scope: !6883)
!6887 = !DILocation(line: 3700, column: 4, scope: !6883)
!6888 = !DILocation(line: 3702, column: 2, scope: !6883)
!6889 = distinct !{!6889, !6878, !6890}
!6890 = !DILocation(line: 3702, column: 2, scope: !6879)
!6891 = !DILocation(line: 3703, column: 5, scope: !6866)
!6892 = !DILocation(line: 3705, column: 31, scope: !6786)
!6893 = !DILocation(line: 3705, column: 3, scope: !6786)
!6894 = !DILocation(line: 3706, column: 1, scope: !6786)
!6895 = distinct !DISubprogram(name: "df_update_entry_block_defs", scope: !3, file: !3, line: 4016, type: !2036, scopeLine: 4017, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!6896 = !DILocalVariable(name: "refs", scope: !6895, file: !3, line: 4018, type: !2022)
!6897 = !DILocation(line: 4018, column: 10, scope: !6895)
!6898 = !DILocation(line: 4018, column: 17, scope: !6895)
!6899 = !DILocalVariable(name: "changed", scope: !6895, file: !3, line: 4019, type: !1099)
!6900 = !DILocation(line: 4019, column: 8, scope: !6895)
!6901 = !DILocation(line: 4021, column: 31, scope: !6895)
!6902 = !DILocation(line: 4021, column: 3, scope: !6895)
!6903 = !DILocation(line: 4022, column: 7, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 4022, column: 7)
!6905 = !DILocation(line: 4022, column: 11, scope: !6904)
!6906 = !DILocation(line: 4022, column: 7, scope: !6895)
!6907 = !DILocation(line: 4024, column: 28, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 4024, column: 11)
!6909 = distinct !DILexicalBlock(scope: !6904, file: !3, line: 4023, column: 5)
!6910 = !DILocation(line: 4024, column: 32, scope: !6908)
!6911 = !DILocation(line: 4024, column: 50, scope: !6908)
!6912 = !DILocation(line: 4024, column: 12, scope: !6908)
!6913 = !DILocation(line: 4024, column: 11, scope: !6909)
!6914 = !DILocalVariable(name: "bb_info", scope: !6915, file: !3, line: 4026, type: !915)
!6915 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 4025, column: 2)
!6916 = !DILocation(line: 4026, column: 28, scope: !6915)
!6917 = !DILocation(line: 4026, column: 38, scope: !6915)
!6918 = !DILocation(line: 4027, column: 34, scope: !6915)
!6919 = !DILocation(line: 4027, column: 43, scope: !6915)
!6920 = !DILocation(line: 4027, column: 4, scope: !6915)
!6921 = !DILocation(line: 4028, column: 25, scope: !6915)
!6922 = !DILocation(line: 4028, column: 34, scope: !6915)
!6923 = !DILocation(line: 4028, column: 4, scope: !6915)
!6924 = !DILocation(line: 4029, column: 4, scope: !6915)
!6925 = !DILocation(line: 4029, column: 13, scope: !6915)
!6926 = !DILocation(line: 4029, column: 29, scope: !6915)
!6927 = !DILocation(line: 4030, column: 12, scope: !6915)
!6928 = !DILocation(line: 4031, column: 2, scope: !6915)
!6929 = !DILocation(line: 4032, column: 5, scope: !6909)
!6930 = !DILocalVariable(name: "problem_data", scope: !6931, file: !3, line: 4035, type: !813)
!6931 = distinct !DILexicalBlock(scope: !6904, file: !3, line: 4034, column: 5)
!6932 = !DILocation(line: 4035, column: 36, scope: !6931)
!6933 = !DILocation(line: 4036, column: 36, scope: !6931)
!6934 = !DILocation(line: 4036, column: 45, scope: !6931)
!6935 = !DILocation(line: 4036, column: 4, scope: !6931)
!6936 = !DILocation(line: 4037, column: 30, scope: !6931)
!6937 = !DILocation(line: 4037, column: 7, scope: !6931)
!6938 = !DILocation(line: 4037, column: 11, scope: !6931)
!6939 = !DILocation(line: 4037, column: 28, scope: !6931)
!6940 = !DILocation(line: 4038, column: 15, scope: !6931)
!6941 = !DILocation(line: 4041, column: 7, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 4041, column: 7)
!6943 = !DILocation(line: 4041, column: 7, scope: !6895)
!6944 = !DILocation(line: 4043, column: 35, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 4042, column: 5)
!6946 = !DILocation(line: 4043, column: 7, scope: !6945)
!6947 = !DILocation(line: 4044, column: 20, scope: !6945)
!6948 = !DILocation(line: 4044, column: 24, scope: !6945)
!6949 = !DILocation(line: 4044, column: 42, scope: !6945)
!6950 = !DILocation(line: 4044, column: 7, scope: !6945)
!6951 = !DILocation(line: 4045, column: 24, scope: !6945)
!6952 = !DILocation(line: 4045, column: 7, scope: !6945)
!6953 = !DILocation(line: 4046, column: 5, scope: !6945)
!6954 = !DILocation(line: 4047, column: 3, scope: !6895)
!6955 = !DILocation(line: 4048, column: 1, scope: !6895)
!6956 = distinct !DISubprogram(name: "df_update_exit_block_uses", scope: !3, file: !3, line: 4188, type: !2036, scopeLine: 4189, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!6957 = !DILocalVariable(name: "refs", scope: !6956, file: !3, line: 4190, type: !2022)
!6958 = !DILocation(line: 4190, column: 10, scope: !6956)
!6959 = !DILocation(line: 4190, column: 17, scope: !6956)
!6960 = !DILocalVariable(name: "changed", scope: !6956, file: !3, line: 4191, type: !1099)
!6961 = !DILocation(line: 4191, column: 8, scope: !6956)
!6962 = !DILocation(line: 4193, column: 30, scope: !6956)
!6963 = !DILocation(line: 4193, column: 3, scope: !6956)
!6964 = !DILocation(line: 4194, column: 7, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 4194, column: 7)
!6966 = !DILocation(line: 4194, column: 11, scope: !6965)
!6967 = !DILocation(line: 4194, column: 7, scope: !6956)
!6968 = !DILocation(line: 4196, column: 28, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 4196, column: 11)
!6970 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 4195, column: 5)
!6971 = !DILocation(line: 4196, column: 32, scope: !6969)
!6972 = !DILocation(line: 4196, column: 49, scope: !6969)
!6973 = !DILocation(line: 4196, column: 12, scope: !6969)
!6974 = !DILocation(line: 4196, column: 11, scope: !6970)
!6975 = !DILocalVariable(name: "bb_info", scope: !6976, file: !3, line: 4198, type: !915)
!6976 = distinct !DILexicalBlock(scope: !6969, file: !3, line: 4197, column: 2)
!6977 = !DILocation(line: 4198, column: 28, scope: !6976)
!6978 = !DILocation(line: 4198, column: 38, scope: !6976)
!6979 = !DILocation(line: 4199, column: 34, scope: !6976)
!6980 = !DILocation(line: 4199, column: 43, scope: !6976)
!6981 = !DILocation(line: 4199, column: 4, scope: !6976)
!6982 = !DILocation(line: 4200, column: 25, scope: !6976)
!6983 = !DILocation(line: 4200, column: 34, scope: !6976)
!6984 = !DILocation(line: 4200, column: 4, scope: !6976)
!6985 = !DILocation(line: 4201, column: 4, scope: !6976)
!6986 = !DILocation(line: 4201, column: 13, scope: !6976)
!6987 = !DILocation(line: 4201, column: 29, scope: !6976)
!6988 = !DILocation(line: 4202, column: 12, scope: !6976)
!6989 = !DILocation(line: 4203, column: 2, scope: !6976)
!6990 = !DILocation(line: 4204, column: 5, scope: !6970)
!6991 = !DILocalVariable(name: "problem_data", scope: !6992, file: !3, line: 4207, type: !813)
!6992 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 4206, column: 5)
!6993 = !DILocation(line: 4207, column: 36, scope: !6992)
!6994 = !DILocation(line: 4208, column: 36, scope: !6992)
!6995 = !DILocation(line: 4208, column: 45, scope: !6992)
!6996 = !DILocation(line: 4208, column: 4, scope: !6992)
!6997 = !DILocation(line: 4209, column: 29, scope: !6992)
!6998 = !DILocation(line: 4209, column: 7, scope: !6992)
!6999 = !DILocation(line: 4209, column: 11, scope: !6992)
!7000 = !DILocation(line: 4209, column: 27, scope: !6992)
!7001 = !DILocation(line: 4210, column: 15, scope: !6992)
!7002 = !DILocation(line: 4213, column: 7, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 4213, column: 7)
!7004 = !DILocation(line: 4213, column: 7, scope: !6956)
!7005 = !DILocation(line: 4215, column: 34, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 4214, column: 5)
!7007 = !DILocation(line: 4215, column: 7, scope: !7006)
!7008 = !DILocation(line: 4216, column: 20, scope: !7006)
!7009 = !DILocation(line: 4216, column: 24, scope: !7006)
!7010 = !DILocation(line: 4216, column: 41, scope: !7006)
!7011 = !DILocation(line: 4216, column: 7, scope: !7006)
!7012 = !DILocation(line: 4217, column: 24, scope: !7006)
!7013 = !DILocation(line: 4217, column: 7, scope: !7006)
!7014 = !DILocation(line: 4218, column: 5, scope: !7006)
!7015 = !DILocation(line: 4219, column: 3, scope: !6956)
!7016 = !DILocation(line: 4220, column: 1, scope: !6956)
!7017 = !DILocalVariable(name: "i", scope: !2035, file: !3, line: 4231, type: !900)
!7018 = !DILocation(line: 4231, column: 7, scope: !2035)
!7019 = !DILocation(line: 4234, column: 7, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !2035, file: !3, line: 4234, column: 7)
!7021 = !DILocation(line: 4234, column: 7, scope: !2035)
!7022 = !DILocation(line: 4235, column: 5, scope: !7020)
!7023 = !DILocation(line: 4239, column: 3, scope: !2035)
!7024 = !DILocation(line: 4242, column: 10, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !2035, file: !3, line: 4242, column: 3)
!7026 = !DILocation(line: 4242, column: 8, scope: !7025)
!7027 = !DILocation(line: 4242, column: 15, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 4242, column: 3)
!7029 = !DILocation(line: 4242, column: 17, scope: !7028)
!7030 = !DILocation(line: 4242, column: 3, scope: !7025)
!7031 = !DILocation(line: 4243, column: 5, scope: !7028)
!7032 = !DILocation(line: 4242, column: 52, scope: !7028)
!7033 = !DILocation(line: 4242, column: 3, scope: !7028)
!7034 = distinct !{!7034, !7030, !7035}
!7035 = !DILocation(line: 4243, column: 5, scope: !7025)
!7036 = !DILocation(line: 4248, column: 15, scope: !2035)
!7037 = !DILocation(line: 4249, column: 1, scope: !2035)
!7038 = distinct !DISubprogram(name: "df_hard_reg_used_p", scope: !3, file: !3, line: 4283, type: !7039, scopeLine: 4284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7039 = !DISubroutineType(types: !7040)
!7040 = !{!1099, !7}
!7041 = !DILocalVariable(name: "reg", arg: 1, scope: !7038, file: !3, line: 4283, type: !7)
!7042 = !DILocation(line: 4283, column: 34, scope: !7038)
!7043 = !DILocation(line: 4285, column: 10, scope: !7038)
!7044 = !DILocation(line: 4285, column: 14, scope: !7038)
!7045 = !DILocation(line: 4285, column: 35, scope: !7038)
!7046 = !DILocation(line: 4285, column: 40, scope: !7038)
!7047 = !DILocation(line: 4285, column: 3, scope: !7038)
!7048 = distinct !DISubprogram(name: "df_hard_reg_used_count", scope: !3, file: !3, line: 4297, type: !7049, scopeLine: 4298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7049 = !DISubroutineType(types: !7050)
!7050 = !{!7, !7}
!7051 = !DILocalVariable(name: "reg", arg: 1, scope: !7048, file: !3, line: 4297, type: !7)
!7052 = !DILocation(line: 4297, column: 38, scope: !7048)
!7053 = !DILocation(line: 4299, column: 10, scope: !7048)
!7054 = !DILocation(line: 4299, column: 14, scope: !7048)
!7055 = !DILocation(line: 4299, column: 35, scope: !7048)
!7056 = !DILocation(line: 4299, column: 3, scope: !7048)
!7057 = distinct !DISubprogram(name: "df_regs_ever_live_p", scope: !3, file: !3, line: 4306, type: !7039, scopeLine: 4307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7058 = !DILocalVariable(name: "regno", arg: 1, scope: !7057, file: !3, line: 4306, type: !7)
!7059 = !DILocation(line: 4306, column: 35, scope: !7057)
!7060 = !DILocation(line: 4308, column: 25, scope: !7057)
!7061 = !DILocation(line: 4308, column: 10, scope: !7057)
!7062 = !DILocation(line: 4308, column: 3, scope: !7057)
!7063 = distinct !DISubprogram(name: "df_set_regs_ever_live", scope: !3, file: !3, line: 4316, type: !7064, scopeLine: 4317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7064 = !DISubroutineType(types: !7065)
!7065 = !{null, !7, !1099}
!7066 = !DILocalVariable(name: "regno", arg: 1, scope: !7063, file: !3, line: 4316, type: !7)
!7067 = !DILocation(line: 4316, column: 37, scope: !7063)
!7068 = !DILocalVariable(name: "value", arg: 2, scope: !7063, file: !3, line: 4316, type: !1099)
!7069 = !DILocation(line: 4316, column: 49, scope: !7063)
!7070 = !DILocation(line: 4318, column: 22, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7063, file: !3, line: 4318, column: 7)
!7072 = !DILocation(line: 4318, column: 7, scope: !7071)
!7073 = !DILocation(line: 4318, column: 32, scope: !7071)
!7074 = !DILocation(line: 4318, column: 29, scope: !7071)
!7075 = !DILocation(line: 4318, column: 7, scope: !7063)
!7076 = !DILocation(line: 4319, column: 5, scope: !7071)
!7077 = !DILocation(line: 4321, column: 27, scope: !7063)
!7078 = !DILocation(line: 4321, column: 18, scope: !7063)
!7079 = !DILocation(line: 4321, column: 3, scope: !7063)
!7080 = !DILocation(line: 4321, column: 25, scope: !7063)
!7081 = !DILocation(line: 4322, column: 7, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7063, file: !3, line: 4322, column: 7)
!7083 = !DILocation(line: 4322, column: 7, scope: !7063)
!7084 = !DILocation(line: 4323, column: 5, scope: !7082)
!7085 = !DILocation(line: 4323, column: 9, scope: !7082)
!7086 = !DILocation(line: 4323, column: 29, scope: !7082)
!7087 = !DILocation(line: 4324, column: 1, scope: !7063)
!7088 = distinct !DISubprogram(name: "df_compute_regs_ever_live", scope: !3, file: !3, line: 4331, type: !7089, scopeLine: 4332, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7089 = !DISubroutineType(types: !7090)
!7090 = !{null, !1099}
!7091 = !DILocalVariable(name: "reset", arg: 1, scope: !7088, file: !3, line: 4331, type: !1099)
!7092 = !DILocation(line: 4331, column: 33, scope: !7088)
!7093 = !DILocalVariable(name: "i", scope: !7088, file: !3, line: 4333, type: !7)
!7094 = !DILocation(line: 4333, column: 16, scope: !7088)
!7095 = !DILocalVariable(name: "changed", scope: !7088, file: !3, line: 4334, type: !1099)
!7096 = !DILocation(line: 4334, column: 8, scope: !7088)
!7097 = !DILocation(line: 4334, column: 18, scope: !7088)
!7098 = !DILocation(line: 4334, column: 22, scope: !7088)
!7099 = !DILocation(line: 4336, column: 7, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 4336, column: 7)
!7101 = !DILocation(line: 4336, column: 7, scope: !7088)
!7102 = !DILocation(line: 4337, column: 5, scope: !7100)
!7103 = !DILocation(line: 4339, column: 10, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 4339, column: 3)
!7105 = !DILocation(line: 4339, column: 8, scope: !7104)
!7106 = !DILocation(line: 4339, column: 15, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7104, file: !3, line: 4339, column: 3)
!7108 = !DILocation(line: 4339, column: 17, scope: !7107)
!7109 = !DILocation(line: 4339, column: 3, scope: !7104)
!7110 = !DILocation(line: 4340, column: 26, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 4340, column: 9)
!7112 = !DILocation(line: 4340, column: 11, scope: !7111)
!7113 = !DILocation(line: 4340, column: 30, scope: !7111)
!7114 = !DILocation(line: 4340, column: 53, scope: !7111)
!7115 = !DILocation(line: 4340, column: 33, scope: !7111)
!7116 = !DILocation(line: 4340, column: 9, scope: !7107)
!7117 = !DILocation(line: 4342, column: 17, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7111, file: !3, line: 4341, column: 7)
!7119 = !DILocation(line: 4342, column: 2, scope: !7118)
!7120 = !DILocation(line: 4342, column: 20, scope: !7118)
!7121 = !DILocation(line: 4343, column: 10, scope: !7118)
!7122 = !DILocation(line: 4344, column: 7, scope: !7118)
!7123 = !DILocation(line: 4340, column: 54, scope: !7111)
!7124 = !DILocation(line: 4339, column: 43, scope: !7107)
!7125 = !DILocation(line: 4339, column: 3, scope: !7107)
!7126 = distinct !{!7126, !7109, !7127}
!7127 = !DILocation(line: 4344, column: 7, scope: !7104)
!7128 = !DILocation(line: 4345, column: 7, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 4345, column: 7)
!7130 = !DILocation(line: 4345, column: 7, scope: !7088)
!7131 = !DILocation(line: 4346, column: 5, scope: !7129)
!7132 = !DILocation(line: 4347, column: 3, scope: !7088)
!7133 = !DILocation(line: 4347, column: 7, scope: !7088)
!7134 = !DILocation(line: 4347, column: 27, scope: !7088)
!7135 = !DILocation(line: 4348, column: 1, scope: !7088)
!7136 = distinct !DISubprogram(name: "df_scan_verify", scope: !3, file: !3, line: 4631, type: !2036, scopeLine: 4632, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7137 = !DILocalVariable(name: "i", scope: !7136, file: !3, line: 4633, type: !7)
!7138 = !DILocation(line: 4633, column: 16, scope: !7136)
!7139 = !DILocalVariable(name: "bb", scope: !7136, file: !3, line: 4634, type: !1244)
!7140 = !DILocation(line: 4634, column: 15, scope: !7136)
!7141 = !DILocalVariable(name: "regular_block_artificial_uses", scope: !7136, file: !3, line: 4635, type: !2022)
!7142 = !DILocation(line: 4635, column: 10, scope: !7136)
!7143 = !DILocalVariable(name: "eh_block_artificial_uses", scope: !7136, file: !3, line: 4636, type: !2022)
!7144 = !DILocation(line: 4636, column: 10, scope: !7136)
!7145 = !DILocation(line: 4638, column: 8, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7136, file: !3, line: 4638, column: 7)
!7147 = !DILocation(line: 4638, column: 7, scope: !7136)
!7148 = !DILocation(line: 4639, column: 5, scope: !7146)
!7149 = !DILocation(line: 4644, column: 10, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7136, file: !3, line: 4644, column: 3)
!7151 = !DILocation(line: 4644, column: 8, scope: !7150)
!7152 = !DILocation(line: 4644, column: 15, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7150, file: !3, line: 4644, column: 3)
!7154 = !DILocation(line: 4644, column: 19, scope: !7153)
!7155 = !DILocation(line: 4644, column: 17, scope: !7153)
!7156 = !DILocation(line: 4644, column: 3, scope: !7150)
!7157 = !DILocation(line: 4646, column: 7, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 4645, column: 5)
!7159 = !DILocation(line: 4648, column: 7, scope: !7158)
!7160 = !DILocation(line: 4650, column: 7, scope: !7158)
!7161 = !DILocation(line: 4652, column: 5, scope: !7158)
!7162 = !DILocation(line: 4644, column: 38, scope: !7153)
!7163 = !DILocation(line: 4644, column: 3, scope: !7153)
!7164 = distinct !{!7164, !7156, !7165}
!7165 = !DILocation(line: 4652, column: 5, scope: !7150)
!7166 = !DILocation(line: 4657, column: 35, scope: !7136)
!7167 = !DILocation(line: 4657, column: 33, scope: !7136)
!7168 = !DILocation(line: 4658, column: 30, scope: !7136)
!7169 = !DILocation(line: 4658, column: 28, scope: !7136)
!7170 = !DILocation(line: 4660, column: 41, scope: !7136)
!7171 = !DILocation(line: 4660, column: 3, scope: !7136)
!7172 = !DILocation(line: 4661, column: 36, scope: !7136)
!7173 = !DILocation(line: 4661, column: 3, scope: !7136)
!7174 = !DILocation(line: 4663, column: 20, scope: !7136)
!7175 = !DILocation(line: 4664, column: 6, scope: !7136)
!7176 = !DILocation(line: 4663, column: 3, scope: !7136)
!7177 = !DILocation(line: 4667, column: 3, scope: !7136)
!7178 = !DILocation(line: 4669, column: 3, scope: !7136)
!7179 = !DILocation(line: 4672, column: 3, scope: !7136)
!7180 = !DILocation(line: 4673, column: 3, scope: !7136)
!7181 = !DILocation(line: 4677, column: 3, scope: !7136)
!7182 = !DILocation(line: 4678, column: 3, scope: !7136)
!7183 = !DILocation(line: 4686, column: 3, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7136, file: !3, line: 4686, column: 3)
!7185 = !DILocation(line: 4686, column: 3, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7184, file: !3, line: 4686, column: 3)
!7187 = !DILocation(line: 4687, column: 19, scope: !7186)
!7188 = !DILocation(line: 4687, column: 5, scope: !7186)
!7189 = distinct !{!7189, !7183, !7190}
!7190 = !DILocation(line: 4687, column: 21, scope: !7184)
!7191 = !DILocation(line: 4693, column: 10, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7136, file: !3, line: 4693, column: 3)
!7193 = !DILocation(line: 4693, column: 8, scope: !7192)
!7194 = !DILocation(line: 4693, column: 15, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 4693, column: 3)
!7196 = !DILocation(line: 4693, column: 19, scope: !7195)
!7197 = !DILocation(line: 4693, column: 17, scope: !7195)
!7198 = !DILocation(line: 4693, column: 3, scope: !7192)
!7199 = !DILocation(line: 4695, column: 37, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7195, file: !3, line: 4694, column: 5)
!7201 = !DILocation(line: 4695, column: 7, scope: !7200)
!7202 = !DILocation(line: 4696, column: 37, scope: !7200)
!7203 = !DILocation(line: 4696, column: 7, scope: !7200)
!7204 = !DILocation(line: 4697, column: 37, scope: !7200)
!7205 = !DILocation(line: 4697, column: 7, scope: !7200)
!7206 = !DILocation(line: 4698, column: 5, scope: !7200)
!7207 = !DILocation(line: 4693, column: 38, scope: !7195)
!7208 = !DILocation(line: 4693, column: 3, scope: !7195)
!7209 = distinct !{!7209, !7198, !7210}
!7210 = !DILocation(line: 4698, column: 5, scope: !7192)
!7211 = !DILocation(line: 4699, column: 1, scope: !7136)
!7212 = distinct !DISubprogram(name: "df_reg_chain_mark", scope: !3, file: !3, line: 4371, type: !7213, scopeLine: 4373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7213 = !DISubroutineType(types: !7214)
!7214 = !{!7, !920, !7, !1099, !1099}
!7215 = !DILocalVariable(name: "refs", arg: 1, scope: !7212, file: !3, line: 4371, type: !920)
!7216 = !DILocation(line: 4371, column: 27, scope: !7212)
!7217 = !DILocalVariable(name: "regno", arg: 2, scope: !7212, file: !3, line: 4371, type: !7)
!7218 = !DILocation(line: 4371, column: 46, scope: !7212)
!7219 = !DILocalVariable(name: "is_def", arg: 3, scope: !7212, file: !3, line: 4372, type: !1099)
!7220 = !DILocation(line: 4372, column: 11, scope: !7212)
!7221 = !DILocalVariable(name: "is_eq_use", arg: 4, scope: !7212, file: !3, line: 4372, type: !1099)
!7222 = !DILocation(line: 4372, column: 24, scope: !7212)
!7223 = !DILocalVariable(name: "count", scope: !7212, file: !3, line: 4374, type: !7)
!7224 = !DILocation(line: 4374, column: 16, scope: !7212)
!7225 = !DILocalVariable(name: "ref", scope: !7212, file: !3, line: 4375, type: !920)
!7226 = !DILocation(line: 4375, column: 10, scope: !7212)
!7227 = !DILocation(line: 4376, column: 14, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7212, file: !3, line: 4376, column: 3)
!7229 = !DILocation(line: 4376, column: 12, scope: !7228)
!7230 = !DILocation(line: 4376, column: 8, scope: !7228)
!7231 = !DILocation(line: 4376, column: 20, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7228, file: !3, line: 4376, column: 3)
!7233 = !DILocation(line: 4376, column: 3, scope: !7228)
!7234 = !DILocation(line: 4378, column: 7, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7232, file: !3, line: 4377, column: 5)
!7236 = !DILocation(line: 4382, column: 12, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 4382, column: 11)
!7238 = !DILocation(line: 4382, column: 11, scope: !7235)
!7239 = !DILocation(line: 4383, column: 2, scope: !7237)
!7240 = !DILocation(line: 4386, column: 7, scope: !7235)
!7241 = !DILocation(line: 4387, column: 11, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 4387, column: 11)
!7243 = !DILocation(line: 4387, column: 11, scope: !7235)
!7244 = !DILocation(line: 4388, column: 2, scope: !7242)
!7245 = !DILocation(line: 4390, column: 2, scope: !7242)
!7246 = !DILocation(line: 4392, column: 11, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 4392, column: 11)
!7248 = !DILocation(line: 4392, column: 11, scope: !7235)
!7249 = !DILocation(line: 4393, column: 2, scope: !7247)
!7250 = !DILocation(line: 4395, column: 2, scope: !7247)
!7251 = !DILocation(line: 4397, column: 11, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 4397, column: 11)
!7253 = !DILocation(line: 4397, column: 11, scope: !7235)
!7254 = !DILocation(line: 4398, column: 2, scope: !7252)
!7255 = !DILocation(line: 4399, column: 12, scope: !7235)
!7256 = !DILocation(line: 4400, column: 7, scope: !7235)
!7257 = !DILocation(line: 4401, column: 5, scope: !7235)
!7258 = !DILocation(line: 4376, column: 31, scope: !7232)
!7259 = !DILocation(line: 4376, column: 29, scope: !7232)
!7260 = !DILocation(line: 4376, column: 3, scope: !7232)
!7261 = distinct !{!7261, !7233, !7262}
!7262 = !DILocation(line: 4401, column: 5, scope: !7228)
!7263 = !DILocation(line: 4402, column: 10, scope: !7212)
!7264 = !DILocation(line: 4402, column: 3, scope: !7212)
!7265 = distinct !DISubprogram(name: "df_entry_block_bitmap_verify", scope: !3, file: !3, line: 4573, type: !7266, scopeLine: 4574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7266 = !DISubroutineType(types: !7267)
!7267 = !{!1099, !1099}
!7268 = !DILocalVariable(name: "abort_if_fail", arg: 1, scope: !7265, file: !3, line: 4573, type: !1099)
!7269 = !DILocation(line: 4573, column: 36, scope: !7265)
!7270 = !DILocalVariable(name: "entry_block_defs", scope: !7265, file: !3, line: 4575, type: !2022)
!7271 = !DILocation(line: 4575, column: 10, scope: !7265)
!7272 = !DILocation(line: 4575, column: 29, scope: !7265)
!7273 = !DILocalVariable(name: "is_eq", scope: !7265, file: !3, line: 4576, type: !1099)
!7274 = !DILocation(line: 4576, column: 8, scope: !7265)
!7275 = !DILocation(line: 4578, column: 31, scope: !7265)
!7276 = !DILocation(line: 4578, column: 3, scope: !7265)
!7277 = !DILocation(line: 4580, column: 27, scope: !7265)
!7278 = !DILocation(line: 4580, column: 45, scope: !7265)
!7279 = !DILocation(line: 4580, column: 49, scope: !7265)
!7280 = !DILocation(line: 4580, column: 11, scope: !7265)
!7281 = !DILocation(line: 4580, column: 9, scope: !7265)
!7282 = !DILocation(line: 4582, column: 8, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 4582, column: 7)
!7284 = !DILocation(line: 4582, column: 14, scope: !7283)
!7285 = !DILocation(line: 4582, column: 17, scope: !7283)
!7286 = !DILocation(line: 4582, column: 7, scope: !7265)
!7287 = !DILocation(line: 4584, column: 27, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 4583, column: 5)
!7289 = !DILocation(line: 4584, column: 7, scope: !7288)
!7290 = !DILocation(line: 4585, column: 16, scope: !7288)
!7291 = !DILocation(line: 4585, column: 7, scope: !7288)
!7292 = !DILocation(line: 4586, column: 24, scope: !7288)
!7293 = !DILocation(line: 4586, column: 32, scope: !7288)
!7294 = !DILocation(line: 4586, column: 7, scope: !7288)
!7295 = !DILocation(line: 4587, column: 16, scope: !7288)
!7296 = !DILocation(line: 4587, column: 7, scope: !7288)
!7297 = !DILocation(line: 4588, column: 24, scope: !7288)
!7298 = !DILocation(line: 4588, column: 32, scope: !7288)
!7299 = !DILocation(line: 4588, column: 36, scope: !7288)
!7300 = !DILocation(line: 4588, column: 7, scope: !7288)
!7301 = !DILocation(line: 4589, column: 7, scope: !7288)
!7302 = !DILocation(line: 4590, column: 5, scope: !7288)
!7303 = !DILocation(line: 4592, column: 3, scope: !7265)
!7304 = !DILocation(line: 4594, column: 10, scope: !7265)
!7305 = !DILocation(line: 4594, column: 3, scope: !7265)
!7306 = distinct !DISubprogram(name: "df_exit_block_bitmap_verify", scope: !3, file: !3, line: 4602, type: !7266, scopeLine: 4603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7307 = !DILocalVariable(name: "abort_if_fail", arg: 1, scope: !7306, file: !3, line: 4602, type: !1099)
!7308 = !DILocation(line: 4602, column: 35, scope: !7306)
!7309 = !DILocalVariable(name: "exit_block_uses", scope: !7306, file: !3, line: 4604, type: !2022)
!7310 = !DILocation(line: 4604, column: 10, scope: !7306)
!7311 = !DILocation(line: 4604, column: 28, scope: !7306)
!7312 = !DILocalVariable(name: "is_eq", scope: !7306, file: !3, line: 4605, type: !1099)
!7313 = !DILocation(line: 4605, column: 8, scope: !7306)
!7314 = !DILocation(line: 4607, column: 30, scope: !7306)
!7315 = !DILocation(line: 4607, column: 3, scope: !7306)
!7316 = !DILocation(line: 4609, column: 27, scope: !7306)
!7317 = !DILocation(line: 4609, column: 44, scope: !7306)
!7318 = !DILocation(line: 4609, column: 48, scope: !7306)
!7319 = !DILocation(line: 4609, column: 11, scope: !7306)
!7320 = !DILocation(line: 4609, column: 9, scope: !7306)
!7321 = !DILocation(line: 4611, column: 8, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 4611, column: 7)
!7323 = !DILocation(line: 4611, column: 14, scope: !7322)
!7324 = !DILocation(line: 4611, column: 17, scope: !7322)
!7325 = !DILocation(line: 4611, column: 7, scope: !7306)
!7326 = !DILocation(line: 4613, column: 27, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 4612, column: 5)
!7328 = !DILocation(line: 4613, column: 7, scope: !7327)
!7329 = !DILocation(line: 4614, column: 16, scope: !7327)
!7330 = !DILocation(line: 4614, column: 7, scope: !7327)
!7331 = !DILocation(line: 4615, column: 24, scope: !7327)
!7332 = !DILocation(line: 4615, column: 32, scope: !7327)
!7333 = !DILocation(line: 4615, column: 7, scope: !7327)
!7334 = !DILocation(line: 4616, column: 16, scope: !7327)
!7335 = !DILocation(line: 4616, column: 7, scope: !7327)
!7336 = !DILocation(line: 4617, column: 24, scope: !7327)
!7337 = !DILocation(line: 4617, column: 32, scope: !7327)
!7338 = !DILocation(line: 4617, column: 36, scope: !7327)
!7339 = !DILocation(line: 4617, column: 7, scope: !7327)
!7340 = !DILocation(line: 4618, column: 7, scope: !7327)
!7341 = !DILocation(line: 4619, column: 5, scope: !7327)
!7342 = !DILocation(line: 4621, column: 3, scope: !7306)
!7343 = !DILocation(line: 4623, column: 10, scope: !7306)
!7344 = !DILocation(line: 4623, column: 3, scope: !7306)
!7345 = distinct !DISubprogram(name: "df_bb_verify", scope: !3, file: !3, line: 4536, type: !7346, scopeLine: 4537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7346 = !DISubroutineType(types: !7347)
!7347 = !{!1099, !1244}
!7348 = !DILocalVariable(name: "bb", arg: 1, scope: !7345, file: !3, line: 4536, type: !1244)
!7349 = !DILocation(line: 4536, column: 27, scope: !7345)
!7350 = !DILocalVariable(name: "insn", scope: !7345, file: !3, line: 4538, type: !931)
!7351 = !DILocation(line: 4538, column: 7, scope: !7345)
!7352 = !DILocalVariable(name: "bb_info", scope: !7345, file: !3, line: 4539, type: !915)
!7353 = !DILocation(line: 4539, column: 27, scope: !7345)
!7354 = !DILocation(line: 4539, column: 58, scope: !7345)
!7355 = !DILocation(line: 4539, column: 62, scope: !7345)
!7356 = !DILocation(line: 4539, column: 37, scope: !7345)
!7357 = !DILocalVariable(name: "collection_rec", scope: !7345, file: !3, line: 4540, type: !2997)
!7358 = !DILocation(line: 4540, column: 28, scope: !7345)
!7359 = !DILocation(line: 4542, column: 3, scope: !7345)
!7360 = !DILocation(line: 4543, column: 28, scope: !7345)
!7361 = !DILocation(line: 4543, column: 18, scope: !7345)
!7362 = !DILocation(line: 4543, column: 26, scope: !7345)
!7363 = !DILocation(line: 4544, column: 28, scope: !7345)
!7364 = !DILocation(line: 4544, column: 18, scope: !7345)
!7365 = !DILocation(line: 4544, column: 26, scope: !7345)
!7366 = !DILocation(line: 4545, column: 31, scope: !7345)
!7367 = !DILocation(line: 4545, column: 18, scope: !7345)
!7368 = !DILocation(line: 4545, column: 29, scope: !7345)
!7369 = !DILocation(line: 4546, column: 27, scope: !7345)
!7370 = !DILocation(line: 4546, column: 18, scope: !7345)
!7371 = !DILocation(line: 4546, column: 25, scope: !7345)
!7372 = !DILocation(line: 4548, column: 3, scope: !7345)
!7373 = !DILocation(line: 4551, column: 3, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 4551, column: 3)
!7375 = !DILocation(line: 4551, column: 3, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7374, file: !3, line: 4551, column: 3)
!7377 = !DILocation(line: 0, scope: !7376)
!7378 = !DILocation(line: 4553, column: 12, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7380, file: !3, line: 4553, column: 11)
!7380 = distinct !DILexicalBlock(scope: !7376, file: !3, line: 4552, column: 5)
!7381 = !DILocation(line: 4553, column: 11, scope: !7380)
!7382 = !DILocation(line: 4554, column: 9, scope: !7379)
!7383 = !DILocation(line: 4555, column: 45, scope: !7380)
!7384 = !DILocation(line: 4555, column: 49, scope: !7380)
!7385 = !DILocation(line: 4555, column: 7, scope: !7380)
!7386 = !DILocation(line: 4556, column: 7, scope: !7380)
!7387 = !DILocation(line: 4557, column: 5, scope: !7380)
!7388 = distinct !{!7388, !7373, !7389}
!7389 = !DILocation(line: 4557, column: 5, scope: !7374)
!7390 = !DILocation(line: 4560, column: 40, scope: !7345)
!7391 = !DILocation(line: 4560, column: 3, scope: !7345)
!7392 = !DILocation(line: 4561, column: 34, scope: !7345)
!7393 = !DILocation(line: 4561, column: 67, scope: !7345)
!7394 = !DILocation(line: 4561, column: 71, scope: !7345)
!7395 = !DILocation(line: 4561, column: 43, scope: !7345)
!7396 = !DILocation(line: 4561, column: 3, scope: !7345)
!7397 = !DILocation(line: 4562, column: 34, scope: !7345)
!7398 = !DILocation(line: 4562, column: 67, scope: !7345)
!7399 = !DILocation(line: 4562, column: 71, scope: !7345)
!7400 = !DILocation(line: 4562, column: 43, scope: !7345)
!7401 = !DILocation(line: 4562, column: 3, scope: !7345)
!7402 = !DILocation(line: 4563, column: 3, scope: !7345)
!7403 = !DILocation(line: 4565, column: 3, scope: !7345)
!7404 = distinct !DISubprogram(name: "df_reg_chain_verify_unmarked", scope: !3, file: !3, line: 4409, type: !3852, scopeLine: 4410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7405 = !DILocalVariable(name: "refs", arg: 1, scope: !7404, file: !3, line: 4409, type: !920)
!7406 = !DILocation(line: 4409, column: 38, scope: !7404)
!7407 = !DILocalVariable(name: "ref", scope: !7404, file: !3, line: 4411, type: !920)
!7408 = !DILocation(line: 4411, column: 10, scope: !7404)
!7409 = !DILocation(line: 4412, column: 14, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7404, file: !3, line: 4412, column: 3)
!7411 = !DILocation(line: 4412, column: 12, scope: !7410)
!7412 = !DILocation(line: 4412, column: 8, scope: !7410)
!7413 = !DILocation(line: 4412, column: 20, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 4412, column: 3)
!7415 = !DILocation(line: 4412, column: 3, scope: !7410)
!7416 = !DILocation(line: 4413, column: 5, scope: !7414)
!7417 = !DILocation(line: 4412, column: 31, scope: !7414)
!7418 = !DILocation(line: 4412, column: 29, scope: !7414)
!7419 = !DILocation(line: 4412, column: 3, scope: !7414)
!7420 = distinct !{!7420, !7415, !7421}
!7421 = !DILocation(line: 4413, column: 5, scope: !7410)
!7422 = !DILocation(line: 4414, column: 1, scope: !7404)
!7423 = distinct !DISubprogram(name: "df_scan_free_bb_info", scope: !3, file: !3, line: 296, type: !2074, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7424 = !DILocalVariable(name: "bb", arg: 1, scope: !7423, file: !3, line: 296, type: !1244)
!7425 = !DILocation(line: 296, column: 35, scope: !7423)
!7426 = !DILocalVariable(name: "vbb_info", arg: 2, scope: !7423, file: !3, line: 296, type: !905)
!7427 = !DILocation(line: 296, column: 45, scope: !7423)
!7428 = !DILocalVariable(name: "bb_info", scope: !7423, file: !3, line: 298, type: !915)
!7429 = !DILocation(line: 298, column: 27, scope: !7423)
!7430 = !DILocation(line: 298, column: 64, scope: !7423)
!7431 = !DILocation(line: 298, column: 37, scope: !7423)
!7432 = !DILocalVariable(name: "bb_index", scope: !7423, file: !3, line: 299, type: !7)
!7433 = !DILocation(line: 299, column: 16, scope: !7423)
!7434 = !DILocation(line: 299, column: 27, scope: !7423)
!7435 = !DILocation(line: 299, column: 31, scope: !7423)
!7436 = !DILocation(line: 300, column: 7, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 300, column: 7)
!7438 = !DILocation(line: 300, column: 7, scope: !7423)
!7439 = !DILocalVariable(name: "insn", scope: !7440, file: !3, line: 302, type: !931)
!7440 = distinct !DILexicalBlock(scope: !7437, file: !3, line: 301, column: 5)
!7441 = !DILocation(line: 302, column: 11, scope: !7440)
!7442 = !DILocation(line: 303, column: 7, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 303, column: 7)
!7444 = !DILocation(line: 303, column: 7, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7443, file: !3, line: 303, column: 7)
!7446 = !DILocation(line: 0, scope: !7445)
!7447 = !DILocation(line: 305, column: 8, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7449, file: !3, line: 305, column: 8)
!7449 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 304, column: 2)
!7450 = !DILocation(line: 305, column: 8, scope: !7449)
!7451 = !DILocation(line: 307, column: 22, scope: !7448)
!7452 = !DILocation(line: 307, column: 26, scope: !7448)
!7453 = !DILocation(line: 307, column: 6, scope: !7448)
!7454 = !DILocation(line: 308, column: 2, scope: !7449)
!7455 = distinct !{!7455, !7442, !7456}
!7456 = !DILocation(line: 308, column: 2, scope: !7443)
!7457 = !DILocation(line: 310, column: 11, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 310, column: 11)
!7459 = !DILocation(line: 310, column: 22, scope: !7458)
!7460 = !DILocation(line: 310, column: 31, scope: !7458)
!7461 = !DILocation(line: 310, column: 20, scope: !7458)
!7462 = !DILocation(line: 310, column: 11, scope: !7440)
!7463 = !DILocation(line: 311, column: 33, scope: !7458)
!7464 = !DILocation(line: 311, column: 12, scope: !7458)
!7465 = !DILocation(line: 311, column: 10, scope: !7458)
!7466 = !DILocation(line: 311, column: 2, scope: !7458)
!7467 = !DILocation(line: 314, column: 37, scope: !7440)
!7468 = !DILocation(line: 314, column: 46, scope: !7440)
!7469 = !DILocation(line: 314, column: 7, scope: !7440)
!7470 = !DILocation(line: 315, column: 37, scope: !7440)
!7471 = !DILocation(line: 315, column: 46, scope: !7440)
!7472 = !DILocation(line: 315, column: 7, scope: !7440)
!7473 = !DILocation(line: 316, column: 28, scope: !7440)
!7474 = !DILocation(line: 316, column: 37, scope: !7440)
!7475 = !DILocation(line: 316, column: 7, scope: !7440)
!7476 = !DILocation(line: 317, column: 28, scope: !7440)
!7477 = !DILocation(line: 317, column: 37, scope: !7440)
!7478 = !DILocation(line: 317, column: 7, scope: !7440)
!7479 = !DILocation(line: 318, column: 7, scope: !7440)
!7480 = !DILocation(line: 318, column: 16, scope: !7440)
!7481 = !DILocation(line: 318, column: 32, scope: !7440)
!7482 = !DILocation(line: 319, column: 7, scope: !7440)
!7483 = !DILocation(line: 319, column: 16, scope: !7440)
!7484 = !DILocation(line: 319, column: 32, scope: !7440)
!7485 = !DILocation(line: 320, column: 18, scope: !7440)
!7486 = !DILocation(line: 320, column: 27, scope: !7440)
!7487 = !DILocation(line: 320, column: 39, scope: !7440)
!7488 = !DILocation(line: 320, column: 7, scope: !7440)
!7489 = !DILocation(line: 321, column: 5, scope: !7440)
!7490 = !DILocation(line: 322, column: 1, scope: !7423)
!7491 = distinct !DISubprogram(name: "df_scan_free", scope: !3, file: !3, line: 409, type: !2036, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7492 = !DILocation(line: 411, column: 7, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7491, file: !3, line: 411, column: 7)
!7494 = !DILocation(line: 411, column: 16, scope: !7493)
!7495 = !DILocation(line: 411, column: 7, scope: !7491)
!7496 = !DILocation(line: 412, column: 5, scope: !7493)
!7497 = !DILocation(line: 414, column: 7, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7491, file: !3, line: 414, column: 7)
!7499 = !DILocation(line: 414, column: 11, scope: !7498)
!7500 = !DILocation(line: 414, column: 7, scope: !7491)
!7501 = !DILocation(line: 416, column: 7, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 415, column: 5)
!7503 = !DILocation(line: 417, column: 7, scope: !7502)
!7504 = !DILocation(line: 417, column: 11, scope: !7502)
!7505 = !DILocation(line: 417, column: 29, scope: !7502)
!7506 = !DILocation(line: 418, column: 5, scope: !7502)
!7507 = !DILocation(line: 420, column: 9, scope: !7491)
!7508 = !DILocation(line: 420, column: 3, scope: !7491)
!7509 = !DILocation(line: 421, column: 1, scope: !7491)
!7510 = distinct !DISubprogram(name: "df_scan_start_dump", scope: !3, file: !3, line: 425, type: !2125, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7511 = !DILocalVariable(name: "file", arg: 1, scope: !7510, file: !3, line: 425, type: !2127)
!7512 = !DILocation(line: 425, column: 27, scope: !7510)
!7513 = !DILocalVariable(name: "i", scope: !7510, file: !3, line: 427, type: !900)
!7514 = !DILocation(line: 427, column: 7, scope: !7510)
!7515 = !DILocalVariable(name: "dcount", scope: !7510, file: !3, line: 428, type: !900)
!7516 = !DILocation(line: 428, column: 7, scope: !7510)
!7517 = !DILocalVariable(name: "ucount", scope: !7510, file: !3, line: 429, type: !900)
!7518 = !DILocation(line: 429, column: 7, scope: !7510)
!7519 = !DILocalVariable(name: "ecount", scope: !7510, file: !3, line: 430, type: !900)
!7520 = !DILocation(line: 430, column: 7, scope: !7510)
!7521 = !DILocalVariable(name: "icount", scope: !7510, file: !3, line: 431, type: !900)
!7522 = !DILocation(line: 431, column: 7, scope: !7510)
!7523 = !DILocalVariable(name: "ccount", scope: !7510, file: !3, line: 432, type: !900)
!7524 = !DILocation(line: 432, column: 7, scope: !7510)
!7525 = !DILocalVariable(name: "bb", scope: !7510, file: !3, line: 433, type: !1244)
!7526 = !DILocation(line: 433, column: 15, scope: !7510)
!7527 = !DILocalVariable(name: "insn", scope: !7510, file: !3, line: 434, type: !931)
!7528 = !DILocation(line: 434, column: 7, scope: !7510)
!7529 = !DILocation(line: 436, column: 12, scope: !7510)
!7530 = !DILocation(line: 436, column: 3, scope: !7510)
!7531 = !DILocation(line: 437, column: 20, scope: !7510)
!7532 = !DILocation(line: 437, column: 26, scope: !7510)
!7533 = !DILocation(line: 437, column: 3, scope: !7510)
!7534 = !DILocation(line: 438, column: 12, scope: !7510)
!7535 = !DILocation(line: 438, column: 3, scope: !7510)
!7536 = !DILocation(line: 439, column: 20, scope: !7510)
!7537 = !DILocation(line: 439, column: 26, scope: !7510)
!7538 = !DILocation(line: 439, column: 30, scope: !7510)
!7539 = !DILocation(line: 439, column: 3, scope: !7510)
!7540 = !DILocation(line: 440, column: 12, scope: !7510)
!7541 = !DILocation(line: 440, column: 3, scope: !7510)
!7542 = !DILocation(line: 441, column: 20, scope: !7510)
!7543 = !DILocation(line: 441, column: 26, scope: !7510)
!7544 = !DILocation(line: 441, column: 30, scope: !7510)
!7545 = !DILocation(line: 441, column: 3, scope: !7510)
!7546 = !DILocation(line: 442, column: 12, scope: !7510)
!7547 = !DILocation(line: 442, column: 3, scope: !7510)
!7548 = !DILocation(line: 443, column: 20, scope: !7510)
!7549 = !DILocation(line: 443, column: 26, scope: !7510)
!7550 = !DILocation(line: 443, column: 30, scope: !7510)
!7551 = !DILocation(line: 443, column: 3, scope: !7510)
!7552 = !DILocation(line: 444, column: 12, scope: !7510)
!7553 = !DILocation(line: 444, column: 3, scope: !7510)
!7554 = !DILocation(line: 445, column: 20, scope: !7510)
!7555 = !DILocation(line: 445, column: 26, scope: !7510)
!7556 = !DILocation(line: 445, column: 30, scope: !7510)
!7557 = !DILocation(line: 445, column: 3, scope: !7510)
!7558 = !DILocation(line: 446, column: 12, scope: !7510)
!7559 = !DILocation(line: 446, column: 3, scope: !7510)
!7560 = !DILocation(line: 447, column: 20, scope: !7510)
!7561 = !DILocation(line: 447, column: 26, scope: !7510)
!7562 = !DILocation(line: 447, column: 30, scope: !7510)
!7563 = !DILocation(line: 447, column: 3, scope: !7510)
!7564 = !DILocation(line: 448, column: 12, scope: !7510)
!7565 = !DILocation(line: 448, column: 3, scope: !7510)
!7566 = !DILocation(line: 449, column: 10, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7510, file: !3, line: 449, column: 3)
!7568 = !DILocation(line: 449, column: 8, scope: !7567)
!7569 = !DILocation(line: 449, column: 15, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 449, column: 3)
!7571 = !DILocation(line: 449, column: 17, scope: !7570)
!7572 = !DILocation(line: 449, column: 3, scope: !7567)
!7573 = !DILocation(line: 450, column: 30, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 450, column: 9)
!7575 = !DILocation(line: 450, column: 9, scope: !7574)
!7576 = !DILocation(line: 450, column: 9, scope: !7570)
!7577 = !DILocation(line: 451, column: 16, scope: !7574)
!7578 = !DILocation(line: 451, column: 33, scope: !7574)
!7579 = !DILocation(line: 451, column: 46, scope: !7574)
!7580 = !DILocation(line: 451, column: 36, scope: !7574)
!7581 = !DILocation(line: 451, column: 7, scope: !7574)
!7582 = !DILocation(line: 450, column: 31, scope: !7574)
!7583 = !DILocation(line: 449, column: 43, scope: !7570)
!7584 = !DILocation(line: 449, column: 3, scope: !7570)
!7585 = distinct !{!7585, !7572, !7586}
!7586 = !DILocation(line: 451, column: 48, scope: !7567)
!7587 = !DILocation(line: 452, column: 12, scope: !7510)
!7588 = !DILocation(line: 452, column: 3, scope: !7510)
!7589 = !DILocation(line: 454, column: 10, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7510, file: !3, line: 454, column: 3)
!7591 = !DILocation(line: 454, column: 8, scope: !7590)
!7592 = !DILocation(line: 454, column: 15, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 454, column: 3)
!7594 = !DILocation(line: 454, column: 24, scope: !7593)
!7595 = !DILocation(line: 454, column: 28, scope: !7593)
!7596 = !DILocation(line: 454, column: 17, scope: !7593)
!7597 = !DILocation(line: 454, column: 3, scope: !7590)
!7598 = !DILocation(line: 455, column: 9, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 455, column: 9)
!7600 = !DILocation(line: 455, column: 30, scope: !7599)
!7601 = !DILocation(line: 455, column: 33, scope: !7599)
!7602 = !DILocation(line: 455, column: 54, scope: !7599)
!7603 = !DILocation(line: 455, column: 57, scope: !7599)
!7604 = !DILocation(line: 455, column: 9, scope: !7593)
!7605 = !DILocalVariable(name: "sep", scope: !7606, file: !3, line: 457, type: !823)
!7606 = distinct !DILexicalBlock(scope: !7599, file: !3, line: 456, column: 7)
!7607 = !DILocation(line: 457, column: 15, scope: !7606)
!7608 = !DILocation(line: 459, column: 11, scope: !7606)
!7609 = !DILocation(line: 459, column: 26, scope: !7606)
!7610 = !DILocation(line: 459, column: 2, scope: !7606)
!7611 = !DILocation(line: 460, column: 6, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7606, file: !3, line: 460, column: 6)
!7613 = !DILocation(line: 460, column: 6, scope: !7606)
!7614 = !DILocation(line: 462, column: 15, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7612, file: !3, line: 461, column: 4)
!7616 = !DILocation(line: 462, column: 28, scope: !7615)
!7617 = !DILocation(line: 462, column: 6, scope: !7615)
!7618 = !DILocation(line: 463, column: 10, scope: !7615)
!7619 = !DILocation(line: 464, column: 16, scope: !7615)
!7620 = !DILocation(line: 464, column: 13, scope: !7615)
!7621 = !DILocation(line: 465, column: 4, scope: !7615)
!7622 = !DILocation(line: 466, column: 6, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7606, file: !3, line: 466, column: 6)
!7624 = !DILocation(line: 466, column: 6, scope: !7606)
!7625 = !DILocation(line: 468, column: 15, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 467, column: 4)
!7627 = !DILocation(line: 468, column: 30, scope: !7626)
!7628 = !DILocation(line: 468, column: 35, scope: !7626)
!7629 = !DILocation(line: 468, column: 6, scope: !7626)
!7630 = !DILocation(line: 469, column: 10, scope: !7626)
!7631 = !DILocation(line: 470, column: 16, scope: !7626)
!7632 = !DILocation(line: 470, column: 13, scope: !7626)
!7633 = !DILocation(line: 471, column: 4, scope: !7626)
!7634 = !DILocation(line: 472, column: 6, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7606, file: !3, line: 472, column: 6)
!7636 = !DILocation(line: 472, column: 6, scope: !7606)
!7637 = !DILocation(line: 474, column: 15, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7635, file: !3, line: 473, column: 4)
!7639 = !DILocation(line: 474, column: 30, scope: !7638)
!7640 = !DILocation(line: 474, column: 35, scope: !7638)
!7641 = !DILocation(line: 474, column: 6, scope: !7638)
!7642 = !DILocation(line: 475, column: 16, scope: !7638)
!7643 = !DILocation(line: 475, column: 13, scope: !7638)
!7644 = !DILocation(line: 476, column: 4, scope: !7638)
!7645 = !DILocation(line: 477, column: 11, scope: !7606)
!7646 = !DILocation(line: 477, column: 2, scope: !7606)
!7647 = !DILocation(line: 478, column: 7, scope: !7606)
!7648 = !DILocation(line: 454, column: 42, scope: !7593)
!7649 = !DILocation(line: 454, column: 3, scope: !7593)
!7650 = distinct !{!7650, !7597, !7651}
!7651 = !DILocation(line: 478, column: 7, scope: !7590)
!7652 = !DILocation(line: 480, column: 3, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7510, file: !3, line: 480, column: 3)
!7654 = !DILocation(line: 480, column: 3, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7653, file: !3, line: 480, column: 3)
!7656 = !DILocation(line: 481, column: 5, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7655, file: !3, line: 481, column: 5)
!7658 = !DILocation(line: 481, column: 5, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7657, file: !3, line: 481, column: 5)
!7660 = !DILocation(line: 0, scope: !7659)
!7661 = !DILocation(line: 482, column: 11, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7659, file: !3, line: 482, column: 11)
!7663 = !DILocation(line: 482, column: 11, scope: !7659)
!7664 = !DILocation(line: 484, column: 8, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 484, column: 8)
!7666 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 483, column: 2)
!7667 = !DILocation(line: 484, column: 8, scope: !7666)
!7668 = !DILocation(line: 485, column: 12, scope: !7665)
!7669 = !DILocation(line: 485, column: 6, scope: !7665)
!7670 = !DILocation(line: 487, column: 12, scope: !7665)
!7671 = !DILocation(line: 488, column: 2, scope: !7666)
!7672 = distinct !{!7672, !7656, !7673}
!7673 = !DILocation(line: 488, column: 2, scope: !7657)
!7674 = distinct !{!7674, !7652, !7675}
!7675 = !DILocation(line: 488, column: 2, scope: !7653)
!7676 = !DILocation(line: 490, column: 12, scope: !7510)
!7677 = !DILocation(line: 491, column: 5, scope: !7510)
!7678 = !DILocation(line: 491, column: 14, scope: !7510)
!7679 = !DILocation(line: 491, column: 12, scope: !7510)
!7680 = !DILocation(line: 491, column: 23, scope: !7510)
!7681 = !DILocation(line: 491, column: 21, scope: !7510)
!7682 = !DILocation(line: 491, column: 31, scope: !7510)
!7683 = !DILocation(line: 491, column: 39, scope: !7510)
!7684 = !DILocation(line: 491, column: 47, scope: !7510)
!7685 = !DILocation(line: 491, column: 55, scope: !7510)
!7686 = !DILocation(line: 491, column: 64, scope: !7510)
!7687 = !DILocation(line: 491, column: 62, scope: !7510)
!7688 = !DILocation(line: 491, column: 72, scope: !7510)
!7689 = !DILocation(line: 491, column: 80, scope: !7510)
!7690 = !DILocation(line: 490, column: 3, scope: !7510)
!7691 = !DILocation(line: 492, column: 1, scope: !7510)
!7692 = distinct !DISubprogram(name: "df_scan_start_block", scope: !3, file: !3, line: 496, type: !2180, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7693 = !DILocalVariable(name: "bb", arg: 1, scope: !7692, file: !3, line: 496, type: !1244)
!7694 = !DILocation(line: 496, column: 34, scope: !7692)
!7695 = !DILocalVariable(name: "file", arg: 2, scope: !7692, file: !3, line: 496, type: !2127)
!7696 = !DILocation(line: 496, column: 44, scope: !7692)
!7697 = !DILocalVariable(name: "bb_info", scope: !7692, file: !3, line: 498, type: !915)
!7698 = !DILocation(line: 498, column: 27, scope: !7692)
!7699 = !DILocation(line: 499, column: 28, scope: !7692)
!7700 = !DILocation(line: 499, column: 32, scope: !7692)
!7701 = !DILocation(line: 499, column: 7, scope: !7692)
!7702 = !DILocation(line: 501, column: 7, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 501, column: 7)
!7704 = !DILocation(line: 501, column: 7, scope: !7692)
!7705 = !DILocation(line: 503, column: 16, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7703, file: !3, line: 502, column: 5)
!7707 = !DILocation(line: 503, column: 52, scope: !7706)
!7708 = !DILocation(line: 503, column: 56, scope: !7706)
!7709 = !DILocation(line: 503, column: 7, scope: !7706)
!7710 = !DILocation(line: 504, column: 27, scope: !7706)
!7711 = !DILocation(line: 504, column: 36, scope: !7706)
!7712 = !DILocation(line: 504, column: 59, scope: !7706)
!7713 = !DILocation(line: 504, column: 7, scope: !7706)
!7714 = !DILocation(line: 505, column: 16, scope: !7706)
!7715 = !DILocation(line: 505, column: 54, scope: !7706)
!7716 = !DILocation(line: 505, column: 58, scope: !7706)
!7717 = !DILocation(line: 505, column: 7, scope: !7706)
!7718 = !DILocation(line: 506, column: 27, scope: !7706)
!7719 = !DILocation(line: 506, column: 36, scope: !7706)
!7720 = !DILocation(line: 506, column: 59, scope: !7706)
!7721 = !DILocation(line: 506, column: 7, scope: !7706)
!7722 = !DILocation(line: 507, column: 16, scope: !7706)
!7723 = !DILocation(line: 507, column: 7, scope: !7706)
!7724 = !DILocation(line: 508, column: 5, scope: !7706)
!7725 = !DILocation(line: 517, column: 1, scope: !7692)
!7726 = distinct !DISubprogram(name: "df_free_ref", scope: !3, file: !3, line: 848, type: !3852, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7727 = !DILocalVariable(name: "ref", arg: 1, scope: !7726, file: !3, line: 848, type: !920)
!7728 = !DILocation(line: 848, column: 21, scope: !7726)
!7729 = !DILocalVariable(name: "problem_data", scope: !7726, file: !3, line: 850, type: !813)
!7730 = !DILocation(line: 850, column: 32, scope: !7726)
!7731 = !DILocation(line: 851, column: 39, scope: !7726)
!7732 = !DILocation(line: 851, column: 48, scope: !7726)
!7733 = !DILocation(line: 851, column: 7, scope: !7726)
!7734 = !DILocation(line: 853, column: 11, scope: !7726)
!7735 = !DILocation(line: 853, column: 3, scope: !7726)
!7736 = !DILocation(line: 856, column: 18, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7726, file: !3, line: 854, column: 5)
!7738 = !DILocation(line: 856, column: 32, scope: !7737)
!7739 = !DILocation(line: 856, column: 47, scope: !7737)
!7740 = !DILocation(line: 856, column: 7, scope: !7737)
!7741 = !DILocation(line: 857, column: 7, scope: !7737)
!7742 = !DILocation(line: 860, column: 18, scope: !7737)
!7743 = !DILocation(line: 860, column: 32, scope: !7737)
!7744 = !DILocation(line: 860, column: 53, scope: !7737)
!7745 = !DILocation(line: 860, column: 7, scope: !7737)
!7746 = !DILocation(line: 861, column: 7, scope: !7737)
!7747 = !DILocation(line: 864, column: 18, scope: !7737)
!7748 = !DILocation(line: 864, column: 32, scope: !7737)
!7749 = !DILocation(line: 864, column: 50, scope: !7737)
!7750 = !DILocation(line: 864, column: 7, scope: !7737)
!7751 = !DILocation(line: 865, column: 7, scope: !7737)
!7752 = !DILocation(line: 868, column: 18, scope: !7737)
!7753 = !DILocation(line: 868, column: 32, scope: !7737)
!7754 = !DILocation(line: 868, column: 50, scope: !7737)
!7755 = !DILocation(line: 868, column: 7, scope: !7737)
!7756 = !DILocation(line: 869, column: 7, scope: !7737)
!7757 = !DILocation(line: 871, column: 1, scope: !7726)
!7758 = distinct !DISubprogram(name: "VEC_df_ref_base_iterate", scope: !3, file: !3, line: 49, type: !7759, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7759 = !DISubroutineType(types: !7760)
!7760 = !{!900, !7761, !7, !919}
!7761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7762, size: 64)
!7762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2002)
!7763 = !DILocalVariable(name: "vec_", arg: 1, scope: !7758, file: !3, line: 49, type: !7761)
!7764 = !DILocation(line: 49, column: 1, scope: !7758)
!7765 = !DILocalVariable(name: "ix_", arg: 2, scope: !7758, file: !3, line: 49, type: !7)
!7766 = !DILocalVariable(name: "ptr", arg: 3, scope: !7758, file: !3, line: 49, type: !919)
!7767 = !DILocation(line: 49, column: 1, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 49, column: 1)
!7769 = !DILocation(line: 49, column: 1, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7768, file: !3, line: 49, column: 1)
!7771 = !DILocation(line: 49, column: 1, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7768, file: !3, line: 49, column: 1)
!7773 = distinct !DISubprogram(name: "VEC_df_mw_hardreg_ptr_base_iterate", scope: !3, file: !3, line: 56, type: !7774, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7774 = !DISubroutineType(types: !7775)
!7775 = !{!900, !6624, !7, !6631}
!7776 = !DILocalVariable(name: "vec_", arg: 1, scope: !7773, file: !3, line: 56, type: !6624)
!7777 = !DILocation(line: 56, column: 1, scope: !7773)
!7778 = !DILocalVariable(name: "ix_", arg: 2, scope: !7773, file: !3, line: 56, type: !7)
!7779 = !DILocalVariable(name: "ptr", arg: 3, scope: !7773, file: !3, line: 56, type: !6631)
!7780 = !DILocation(line: 56, column: 1, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 56, column: 1)
!7782 = !DILocation(line: 56, column: 1, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7781, file: !3, line: 56, column: 1)
!7784 = !DILocation(line: 56, column: 1, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7781, file: !3, line: 56, column: 1)
!7786 = distinct !DISubprogram(name: "df_reorganize_refs_by_reg_by_insn", scope: !3, file: !3, line: 1616, type: !5724, scopeLine: 1620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!7787 = !DILocalVariable(name: "ref_info", arg: 1, scope: !7786, file: !3, line: 1616, type: !3293)
!7788 = !DILocation(line: 1616, column: 56, scope: !7786)
!7789 = !DILocalVariable(name: "include_defs", arg: 2, scope: !7786, file: !3, line: 1617, type: !1099)
!7790 = !DILocation(line: 1617, column: 13, scope: !7786)
!7791 = !DILocalVariable(name: "include_uses", arg: 3, scope: !7786, file: !3, line: 1618, type: !1099)
!7792 = !DILocation(line: 1618, column: 13, scope: !7786)
!7793 = !DILocalVariable(name: "include_eq_uses", arg: 4, scope: !7786, file: !3, line: 1619, type: !1099)
!7794 = !DILocation(line: 1619, column: 13, scope: !7786)
!7795 = !DILocalVariable(name: "bi", scope: !7786, file: !3, line: 1621, type: !5009)
!7796 = !DILocation(line: 1621, column: 19, scope: !7786)
!7797 = !DILocalVariable(name: "bb_index", scope: !7786, file: !3, line: 1622, type: !7)
!7798 = !DILocation(line: 1622, column: 16, scope: !7786)
!7799 = !DILocalVariable(name: "m", scope: !7786, file: !3, line: 1623, type: !7)
!7800 = !DILocation(line: 1623, column: 16, scope: !7786)
!7801 = !DILocation(line: 1623, column: 20, scope: !7786)
!7802 = !DILocation(line: 1623, column: 24, scope: !7786)
!7803 = !DILocalVariable(name: "offset", scope: !7786, file: !3, line: 1624, type: !7)
!7804 = !DILocation(line: 1624, column: 16, scope: !7786)
!7805 = !DILocalVariable(name: "r", scope: !7786, file: !3, line: 1625, type: !7)
!7806 = !DILocation(line: 1625, column: 16, scope: !7786)
!7807 = !DILocalVariable(name: "start", scope: !7786, file: !3, line: 1626, type: !7)
!7808 = !DILocation(line: 1626, column: 16, scope: !7786)
!7809 = !DILocation(line: 1627, column: 8, scope: !7786)
!7810 = !DILocation(line: 1627, column: 12, scope: !7786)
!7811 = !DILocation(line: 1627, column: 29, scope: !7786)
!7812 = !DILocation(line: 1627, column: 7, scope: !7786)
!7813 = !DILocation(line: 1629, column: 11, scope: !7786)
!7814 = !DILocation(line: 1629, column: 21, scope: !7786)
!7815 = !DILocation(line: 1629, column: 3, scope: !7786)
!7816 = !DILocation(line: 1629, column: 46, scope: !7786)
!7817 = !DILocation(line: 1629, column: 50, scope: !7786)
!7818 = !DILocation(line: 1629, column: 44, scope: !7786)
!7819 = !DILocation(line: 1630, column: 11, scope: !7786)
!7820 = !DILocation(line: 1630, column: 21, scope: !7786)
!7821 = !DILocation(line: 1630, column: 3, scope: !7786)
!7822 = !DILocation(line: 1630, column: 46, scope: !7786)
!7823 = !DILocation(line: 1630, column: 50, scope: !7786)
!7824 = !DILocation(line: 1630, column: 44, scope: !7786)
!7825 = !DILocation(line: 1632, column: 41, scope: !7786)
!7826 = !DILocation(line: 1632, column: 55, scope: !7786)
!7827 = !DILocation(line: 1632, column: 69, scope: !7786)
!7828 = !DILocation(line: 1632, column: 26, scope: !7786)
!7829 = !DILocation(line: 1632, column: 3, scope: !7786)
!7830 = !DILocation(line: 1632, column: 13, scope: !7786)
!7831 = !DILocation(line: 1632, column: 24, scope: !7786)
!7832 = !DILocation(line: 1633, column: 31, scope: !7786)
!7833 = !DILocation(line: 1633, column: 3, scope: !7786)
!7834 = !DILocation(line: 1635, column: 3, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7786, file: !3, line: 1635, column: 3)
!7836 = !DILocation(line: 1635, column: 3, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 1635, column: 3)
!7838 = !DILocalVariable(name: "bb", scope: !7839, file: !3, line: 1637, type: !1244)
!7839 = distinct !DILexicalBlock(scope: !7837, file: !3, line: 1636, column: 5)
!7840 = !DILocation(line: 1637, column: 19, scope: !7839)
!7841 = !DILocation(line: 1637, column: 24, scope: !7839)
!7842 = !DILocalVariable(name: "insn", scope: !7839, file: !3, line: 1638, type: !931)
!7843 = !DILocation(line: 1638, column: 11, scope: !7839)
!7844 = !DILocalVariable(name: "ref_rec", scope: !7839, file: !3, line: 1639, type: !919)
!7845 = !DILocation(line: 1639, column: 15, scope: !7839)
!7846 = !DILocation(line: 1641, column: 11, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1641, column: 11)
!7848 = !DILocation(line: 1641, column: 11, scope: !7839)
!7849 = !DILocation(line: 1642, column: 41, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7847, file: !3, line: 1642, column: 2)
!7851 = !DILocation(line: 1642, column: 17, scope: !7850)
!7852 = !DILocation(line: 1642, column: 15, scope: !7850)
!7853 = !DILocation(line: 1642, column: 7, scope: !7850)
!7854 = !DILocation(line: 1642, column: 53, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7850, file: !3, line: 1642, column: 2)
!7856 = !DILocation(line: 1642, column: 52, scope: !7855)
!7857 = !DILocation(line: 1642, column: 2, scope: !7850)
!7858 = !DILocalVariable(name: "regno", scope: !7859, file: !3, line: 1644, type: !7)
!7859 = distinct !DILexicalBlock(scope: !7855, file: !3, line: 1643, column: 4)
!7860 = !DILocation(line: 1644, column: 19, scope: !7859)
!7861 = !DILocation(line: 1644, column: 27, scope: !7859)
!7862 = !DILocation(line: 1645, column: 6, scope: !7859)
!7863 = !DILocation(line: 1645, column: 16, scope: !7859)
!7864 = !DILocation(line: 1645, column: 22, scope: !7859)
!7865 = !DILocation(line: 1645, column: 28, scope: !7859)
!7866 = !DILocation(line: 1646, column: 4, scope: !7859)
!7867 = !DILocation(line: 1642, column: 69, scope: !7855)
!7868 = !DILocation(line: 1642, column: 2, scope: !7855)
!7869 = distinct !{!7869, !7857, !7870}
!7870 = !DILocation(line: 1646, column: 4, scope: !7850)
!7871 = !DILocation(line: 1647, column: 11, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1647, column: 11)
!7873 = !DILocation(line: 1647, column: 11, scope: !7839)
!7874 = !DILocation(line: 1648, column: 41, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7872, file: !3, line: 1648, column: 2)
!7876 = !DILocation(line: 1648, column: 17, scope: !7875)
!7877 = !DILocation(line: 1648, column: 15, scope: !7875)
!7878 = !DILocation(line: 1648, column: 7, scope: !7875)
!7879 = !DILocation(line: 1648, column: 53, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7875, file: !3, line: 1648, column: 2)
!7881 = !DILocation(line: 1648, column: 52, scope: !7880)
!7882 = !DILocation(line: 1648, column: 2, scope: !7875)
!7883 = !DILocalVariable(name: "regno", scope: !7884, file: !3, line: 1650, type: !7)
!7884 = distinct !DILexicalBlock(scope: !7880, file: !3, line: 1649, column: 4)
!7885 = !DILocation(line: 1650, column: 19, scope: !7884)
!7886 = !DILocation(line: 1650, column: 27, scope: !7884)
!7887 = !DILocation(line: 1651, column: 6, scope: !7884)
!7888 = !DILocation(line: 1651, column: 16, scope: !7884)
!7889 = !DILocation(line: 1651, column: 22, scope: !7884)
!7890 = !DILocation(line: 1651, column: 28, scope: !7884)
!7891 = !DILocation(line: 1652, column: 4, scope: !7884)
!7892 = !DILocation(line: 1648, column: 69, scope: !7880)
!7893 = !DILocation(line: 1648, column: 2, scope: !7880)
!7894 = distinct !{!7894, !7882, !7895}
!7895 = !DILocation(line: 1652, column: 4, scope: !7875)
!7896 = !DILocation(line: 1654, column: 7, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1654, column: 7)
!7898 = !DILocation(line: 1654, column: 7, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7897, file: !3, line: 1654, column: 7)
!7900 = !DILocation(line: 0, scope: !7899)
!7901 = !DILocation(line: 1656, column: 8, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7903, file: !3, line: 1656, column: 8)
!7903 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 1655, column: 2)
!7904 = !DILocation(line: 1656, column: 8, scope: !7903)
!7905 = !DILocalVariable(name: "uid", scope: !7906, file: !3, line: 1658, type: !7)
!7906 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 1657, column: 6)
!7907 = !DILocation(line: 1658, column: 21, scope: !7906)
!7908 = !DILocation(line: 1658, column: 27, scope: !7906)
!7909 = !DILocation(line: 1660, column: 12, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 1660, column: 12)
!7911 = !DILocation(line: 1660, column: 12, scope: !7906)
!7912 = !DILocation(line: 1661, column: 18, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 1661, column: 3)
!7914 = !DILocation(line: 1661, column: 16, scope: !7913)
!7915 = !DILocation(line: 1661, column: 8, scope: !7913)
!7916 = !DILocation(line: 1661, column: 43, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 1661, column: 3)
!7918 = !DILocation(line: 1661, column: 42, scope: !7917)
!7919 = !DILocation(line: 1661, column: 3, scope: !7913)
!7920 = !DILocalVariable(name: "regno", scope: !7921, file: !3, line: 1663, type: !7)
!7921 = distinct !DILexicalBlock(scope: !7917, file: !3, line: 1662, column: 5)
!7922 = !DILocation(line: 1663, column: 20, scope: !7921)
!7923 = !DILocation(line: 1663, column: 28, scope: !7921)
!7924 = !DILocation(line: 1664, column: 7, scope: !7921)
!7925 = !DILocation(line: 1664, column: 17, scope: !7921)
!7926 = !DILocation(line: 1664, column: 23, scope: !7921)
!7927 = !DILocation(line: 1664, column: 29, scope: !7921)
!7928 = !DILocation(line: 1665, column: 5, scope: !7921)
!7929 = !DILocation(line: 1661, column: 59, scope: !7917)
!7930 = !DILocation(line: 1661, column: 3, scope: !7917)
!7931 = distinct !{!7931, !7919, !7932}
!7932 = !DILocation(line: 1665, column: 5, scope: !7913)
!7933 = !DILocation(line: 1666, column: 12, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 1666, column: 12)
!7935 = !DILocation(line: 1666, column: 12, scope: !7906)
!7936 = !DILocation(line: 1667, column: 18, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 1667, column: 3)
!7938 = !DILocation(line: 1667, column: 16, scope: !7937)
!7939 = !DILocation(line: 1667, column: 8, scope: !7937)
!7940 = !DILocation(line: 1667, column: 43, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 1667, column: 3)
!7942 = !DILocation(line: 1667, column: 42, scope: !7941)
!7943 = !DILocation(line: 1667, column: 3, scope: !7937)
!7944 = !DILocalVariable(name: "regno", scope: !7945, file: !3, line: 1669, type: !7)
!7945 = distinct !DILexicalBlock(scope: !7941, file: !3, line: 1668, column: 5)
!7946 = !DILocation(line: 1669, column: 20, scope: !7945)
!7947 = !DILocation(line: 1669, column: 28, scope: !7945)
!7948 = !DILocation(line: 1670, column: 7, scope: !7945)
!7949 = !DILocation(line: 1670, column: 17, scope: !7945)
!7950 = !DILocation(line: 1670, column: 23, scope: !7945)
!7951 = !DILocation(line: 1670, column: 29, scope: !7945)
!7952 = !DILocation(line: 1671, column: 5, scope: !7945)
!7953 = !DILocation(line: 1667, column: 59, scope: !7941)
!7954 = !DILocation(line: 1667, column: 3, scope: !7941)
!7955 = distinct !{!7955, !7943, !7956}
!7956 = !DILocation(line: 1671, column: 5, scope: !7937)
!7957 = !DILocation(line: 1672, column: 12, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 1672, column: 12)
!7959 = !DILocation(line: 1672, column: 12, scope: !7906)
!7960 = !DILocation(line: 1673, column: 18, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7958, file: !3, line: 1673, column: 3)
!7962 = !DILocation(line: 1673, column: 16, scope: !7961)
!7963 = !DILocation(line: 1673, column: 8, scope: !7961)
!7964 = !DILocation(line: 1673, column: 46, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7961, file: !3, line: 1673, column: 3)
!7966 = !DILocation(line: 1673, column: 45, scope: !7965)
!7967 = !DILocation(line: 1673, column: 3, scope: !7961)
!7968 = !DILocalVariable(name: "regno", scope: !7969, file: !3, line: 1675, type: !7)
!7969 = distinct !DILexicalBlock(scope: !7965, file: !3, line: 1674, column: 5)
!7970 = !DILocation(line: 1675, column: 20, scope: !7969)
!7971 = !DILocation(line: 1675, column: 28, scope: !7969)
!7972 = !DILocation(line: 1676, column: 7, scope: !7969)
!7973 = !DILocation(line: 1676, column: 17, scope: !7969)
!7974 = !DILocation(line: 1676, column: 23, scope: !7969)
!7975 = !DILocation(line: 1676, column: 29, scope: !7969)
!7976 = !DILocation(line: 1677, column: 5, scope: !7969)
!7977 = !DILocation(line: 1673, column: 62, scope: !7965)
!7978 = !DILocation(line: 1673, column: 3, scope: !7965)
!7979 = distinct !{!7979, !7967, !7980}
!7980 = !DILocation(line: 1677, column: 5, scope: !7961)
!7981 = !DILocation(line: 1678, column: 6, scope: !7906)
!7982 = !DILocation(line: 1679, column: 2, scope: !7903)
!7983 = distinct !{!7983, !7896, !7984}
!7984 = !DILocation(line: 1679, column: 2, scope: !7897)
!7985 = !DILocation(line: 1680, column: 5, scope: !7839)
!7986 = distinct !{!7986, !7834, !7987}
!7987 = !DILocation(line: 1680, column: 5, scope: !7835)
!7988 = !DILocation(line: 1682, column: 12, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7786, file: !3, line: 1682, column: 3)
!7990 = !DILocation(line: 1682, column: 10, scope: !7989)
!7991 = !DILocation(line: 1682, column: 8, scope: !7989)
!7992 = !DILocation(line: 1682, column: 19, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7989, file: !3, line: 1682, column: 3)
!7994 = !DILocation(line: 1682, column: 23, scope: !7993)
!7995 = !DILocation(line: 1682, column: 21, scope: !7993)
!7996 = !DILocation(line: 1682, column: 3, scope: !7989)
!7997 = !DILocation(line: 1684, column: 28, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7993, file: !3, line: 1683, column: 5)
!7999 = !DILocation(line: 1684, column: 7, scope: !7998)
!8000 = !DILocation(line: 1684, column: 17, scope: !7998)
!8001 = !DILocation(line: 1684, column: 23, scope: !7998)
!8002 = !DILocation(line: 1684, column: 26, scope: !7998)
!8003 = !DILocation(line: 1685, column: 17, scope: !7998)
!8004 = !DILocation(line: 1685, column: 27, scope: !7998)
!8005 = !DILocation(line: 1685, column: 33, scope: !7998)
!8006 = !DILocation(line: 1685, column: 14, scope: !7998)
!8007 = !DILocation(line: 1686, column: 7, scope: !7998)
!8008 = !DILocation(line: 1686, column: 17, scope: !7998)
!8009 = !DILocation(line: 1686, column: 23, scope: !7998)
!8010 = !DILocation(line: 1686, column: 26, scope: !7998)
!8011 = !DILocation(line: 1687, column: 5, scope: !7998)
!8012 = !DILocation(line: 1682, column: 27, scope: !7993)
!8013 = !DILocation(line: 1682, column: 3, scope: !7993)
!8014 = distinct !{!8014, !7996, !8015}
!8015 = !DILocation(line: 1687, column: 5, scope: !7989)
!8016 = !DILocation(line: 1689, column: 3, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !7786, file: !3, line: 1689, column: 3)
!8018 = !DILocation(line: 1689, column: 3, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8017, file: !3, line: 1689, column: 3)
!8020 = !DILocalVariable(name: "bb", scope: !8021, file: !3, line: 1691, type: !1244)
!8021 = distinct !DILexicalBlock(scope: !8019, file: !3, line: 1690, column: 5)
!8022 = !DILocation(line: 1691, column: 19, scope: !8021)
!8023 = !DILocation(line: 1691, column: 24, scope: !8021)
!8024 = !DILocalVariable(name: "insn", scope: !8021, file: !3, line: 1692, type: !931)
!8025 = !DILocation(line: 1692, column: 11, scope: !8021)
!8026 = !DILocalVariable(name: "ref_rec", scope: !8021, file: !3, line: 1693, type: !919)
!8027 = !DILocation(line: 1693, column: 15, scope: !8021)
!8028 = !DILocation(line: 1695, column: 11, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8021, file: !3, line: 1695, column: 11)
!8030 = !DILocation(line: 1695, column: 11, scope: !8021)
!8031 = !DILocation(line: 1696, column: 41, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8029, file: !3, line: 1696, column: 2)
!8033 = !DILocation(line: 1696, column: 17, scope: !8032)
!8034 = !DILocation(line: 1696, column: 15, scope: !8032)
!8035 = !DILocation(line: 1696, column: 7, scope: !8032)
!8036 = !DILocation(line: 1696, column: 53, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8032, file: !3, line: 1696, column: 2)
!8038 = !DILocation(line: 1696, column: 52, scope: !8037)
!8039 = !DILocation(line: 1696, column: 2, scope: !8032)
!8040 = !DILocalVariable(name: "ref", scope: !8041, file: !3, line: 1698, type: !920)
!8041 = distinct !DILexicalBlock(scope: !8037, file: !3, line: 1697, column: 4)
!8042 = !DILocation(line: 1698, column: 13, scope: !8041)
!8043 = !DILocation(line: 1698, column: 20, scope: !8041)
!8044 = !DILocation(line: 1698, column: 19, scope: !8041)
!8045 = !DILocalVariable(name: "regno", scope: !8041, file: !3, line: 1699, type: !7)
!8046 = !DILocation(line: 1699, column: 19, scope: !8041)
!8047 = !DILocation(line: 1699, column: 27, scope: !8041)
!8048 = !DILocation(line: 1700, column: 10, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8041, file: !3, line: 1700, column: 10)
!8050 = !DILocation(line: 1700, column: 19, scope: !8049)
!8051 = !DILocation(line: 1700, column: 16, scope: !8049)
!8052 = !DILocation(line: 1700, column: 10, scope: !8041)
!8053 = !DILocalVariable(name: "id", scope: !8054, file: !3, line: 1702, type: !7)
!8054 = distinct !DILexicalBlock(scope: !8049, file: !3, line: 1701, column: 8)
!8055 = !DILocation(line: 1702, column: 16, scope: !8054)
!8056 = !DILocation(line: 1703, column: 7, scope: !8054)
!8057 = !DILocation(line: 1703, column: 17, scope: !8054)
!8058 = !DILocation(line: 1703, column: 23, scope: !8054)
!8059 = !DILocation(line: 1703, column: 32, scope: !8054)
!8060 = !DILocation(line: 1703, column: 42, scope: !8054)
!8061 = !DILocation(line: 1703, column: 48, scope: !8054)
!8062 = !DILocation(line: 1703, column: 54, scope: !8054)
!8063 = !DILocation(line: 1703, column: 30, scope: !8054)
!8064 = !DILocation(line: 1704, column: 21, scope: !8054)
!8065 = !DILocation(line: 1704, column: 3, scope: !8054)
!8066 = !DILocation(line: 1704, column: 19, scope: !8054)
!8067 = !DILocation(line: 1705, column: 24, scope: !8054)
!8068 = !DILocation(line: 1705, column: 3, scope: !8054)
!8069 = !DILocation(line: 1705, column: 13, scope: !8054)
!8070 = !DILocation(line: 1705, column: 18, scope: !8054)
!8071 = !DILocation(line: 1705, column: 22, scope: !8054)
!8072 = !DILocation(line: 1706, column: 8, scope: !8054)
!8073 = !DILocation(line: 1707, column: 4, scope: !8041)
!8074 = !DILocation(line: 1696, column: 69, scope: !8037)
!8075 = !DILocation(line: 1696, column: 2, scope: !8037)
!8076 = distinct !{!8076, !8039, !8077}
!8077 = !DILocation(line: 1707, column: 4, scope: !8032)
!8078 = !DILocation(line: 1708, column: 11, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8021, file: !3, line: 1708, column: 11)
!8080 = !DILocation(line: 1708, column: 11, scope: !8021)
!8081 = !DILocation(line: 1709, column: 41, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 1709, column: 2)
!8083 = !DILocation(line: 1709, column: 17, scope: !8082)
!8084 = !DILocation(line: 1709, column: 15, scope: !8082)
!8085 = !DILocation(line: 1709, column: 7, scope: !8082)
!8086 = !DILocation(line: 1709, column: 53, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 1709, column: 2)
!8088 = !DILocation(line: 1709, column: 52, scope: !8087)
!8089 = !DILocation(line: 1709, column: 2, scope: !8082)
!8090 = !DILocalVariable(name: "ref", scope: !8091, file: !3, line: 1711, type: !920)
!8091 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 1710, column: 4)
!8092 = !DILocation(line: 1711, column: 13, scope: !8091)
!8093 = !DILocation(line: 1711, column: 20, scope: !8091)
!8094 = !DILocation(line: 1711, column: 19, scope: !8091)
!8095 = !DILocalVariable(name: "regno", scope: !8091, file: !3, line: 1712, type: !7)
!8096 = !DILocation(line: 1712, column: 19, scope: !8091)
!8097 = !DILocation(line: 1712, column: 27, scope: !8091)
!8098 = !DILocation(line: 1713, column: 10, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 1713, column: 10)
!8100 = !DILocation(line: 1713, column: 19, scope: !8099)
!8101 = !DILocation(line: 1713, column: 16, scope: !8099)
!8102 = !DILocation(line: 1713, column: 10, scope: !8091)
!8103 = !DILocalVariable(name: "id", scope: !8104, file: !3, line: 1715, type: !7)
!8104 = distinct !DILexicalBlock(scope: !8099, file: !3, line: 1714, column: 8)
!8105 = !DILocation(line: 1715, column: 16, scope: !8104)
!8106 = !DILocation(line: 1716, column: 7, scope: !8104)
!8107 = !DILocation(line: 1716, column: 17, scope: !8104)
!8108 = !DILocation(line: 1716, column: 23, scope: !8104)
!8109 = !DILocation(line: 1716, column: 32, scope: !8104)
!8110 = !DILocation(line: 1716, column: 42, scope: !8104)
!8111 = !DILocation(line: 1716, column: 48, scope: !8104)
!8112 = !DILocation(line: 1716, column: 54, scope: !8104)
!8113 = !DILocation(line: 1716, column: 30, scope: !8104)
!8114 = !DILocation(line: 1717, column: 21, scope: !8104)
!8115 = !DILocation(line: 1717, column: 3, scope: !8104)
!8116 = !DILocation(line: 1717, column: 19, scope: !8104)
!8117 = !DILocation(line: 1718, column: 24, scope: !8104)
!8118 = !DILocation(line: 1718, column: 3, scope: !8104)
!8119 = !DILocation(line: 1718, column: 13, scope: !8104)
!8120 = !DILocation(line: 1718, column: 18, scope: !8104)
!8121 = !DILocation(line: 1718, column: 22, scope: !8104)
!8122 = !DILocation(line: 1719, column: 8, scope: !8104)
!8123 = !DILocation(line: 1720, column: 4, scope: !8091)
!8124 = !DILocation(line: 1709, column: 69, scope: !8087)
!8125 = !DILocation(line: 1709, column: 2, scope: !8087)
!8126 = distinct !{!8126, !8089, !8127}
!8127 = !DILocation(line: 1720, column: 4, scope: !8082)
!8128 = !DILocation(line: 1722, column: 7, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8021, file: !3, line: 1722, column: 7)
!8130 = !DILocation(line: 1722, column: 7, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8129, file: !3, line: 1722, column: 7)
!8132 = !DILocation(line: 0, scope: !8131)
!8133 = !DILocation(line: 1724, column: 8, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !3, line: 1724, column: 8)
!8135 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 1723, column: 2)
!8136 = !DILocation(line: 1724, column: 8, scope: !8135)
!8137 = !DILocalVariable(name: "uid", scope: !8138, file: !3, line: 1726, type: !7)
!8138 = distinct !DILexicalBlock(scope: !8134, file: !3, line: 1725, column: 6)
!8139 = !DILocation(line: 1726, column: 21, scope: !8138)
!8140 = !DILocation(line: 1726, column: 27, scope: !8138)
!8141 = !DILocation(line: 1728, column: 12, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 1728, column: 12)
!8143 = !DILocation(line: 1728, column: 12, scope: !8138)
!8144 = !DILocation(line: 1729, column: 18, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 1729, column: 3)
!8146 = !DILocation(line: 1729, column: 16, scope: !8145)
!8147 = !DILocation(line: 1729, column: 8, scope: !8145)
!8148 = !DILocation(line: 1729, column: 43, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8145, file: !3, line: 1729, column: 3)
!8150 = !DILocation(line: 1729, column: 42, scope: !8149)
!8151 = !DILocation(line: 1729, column: 3, scope: !8145)
!8152 = !DILocalVariable(name: "ref", scope: !8153, file: !3, line: 1731, type: !920)
!8153 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 1730, column: 5)
!8154 = !DILocation(line: 1731, column: 14, scope: !8153)
!8155 = !DILocation(line: 1731, column: 21, scope: !8153)
!8156 = !DILocation(line: 1731, column: 20, scope: !8153)
!8157 = !DILocalVariable(name: "regno", scope: !8153, file: !3, line: 1732, type: !7)
!8158 = !DILocation(line: 1732, column: 20, scope: !8153)
!8159 = !DILocation(line: 1732, column: 28, scope: !8153)
!8160 = !DILocation(line: 1733, column: 11, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8153, file: !3, line: 1733, column: 11)
!8162 = !DILocation(line: 1733, column: 20, scope: !8161)
!8163 = !DILocation(line: 1733, column: 17, scope: !8161)
!8164 = !DILocation(line: 1733, column: 11, scope: !8153)
!8165 = !DILocalVariable(name: "id", scope: !8166, file: !3, line: 1735, type: !7)
!8166 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 1734, column: 9)
!8167 = !DILocation(line: 1735, column: 17, scope: !8166)
!8168 = !DILocation(line: 1736, column: 8, scope: !8166)
!8169 = !DILocation(line: 1736, column: 18, scope: !8166)
!8170 = !DILocation(line: 1736, column: 24, scope: !8166)
!8171 = !DILocation(line: 1736, column: 33, scope: !8166)
!8172 = !DILocation(line: 1736, column: 43, scope: !8166)
!8173 = !DILocation(line: 1736, column: 49, scope: !8166)
!8174 = !DILocation(line: 1736, column: 55, scope: !8166)
!8175 = !DILocation(line: 1736, column: 31, scope: !8166)
!8176 = !DILocation(line: 1737, column: 22, scope: !8166)
!8177 = !DILocation(line: 1737, column: 4, scope: !8166)
!8178 = !DILocation(line: 1737, column: 20, scope: !8166)
!8179 = !DILocation(line: 1738, column: 25, scope: !8166)
!8180 = !DILocation(line: 1738, column: 4, scope: !8166)
!8181 = !DILocation(line: 1738, column: 14, scope: !8166)
!8182 = !DILocation(line: 1738, column: 19, scope: !8166)
!8183 = !DILocation(line: 1738, column: 23, scope: !8166)
!8184 = !DILocation(line: 1739, column: 9, scope: !8166)
!8185 = !DILocation(line: 1740, column: 5, scope: !8153)
!8186 = !DILocation(line: 1729, column: 59, scope: !8149)
!8187 = !DILocation(line: 1729, column: 3, scope: !8149)
!8188 = distinct !{!8188, !8151, !8189}
!8189 = !DILocation(line: 1740, column: 5, scope: !8145)
!8190 = !DILocation(line: 1741, column: 12, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 1741, column: 12)
!8192 = !DILocation(line: 1741, column: 12, scope: !8138)
!8193 = !DILocation(line: 1742, column: 18, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 1742, column: 3)
!8195 = !DILocation(line: 1742, column: 16, scope: !8194)
!8196 = !DILocation(line: 1742, column: 8, scope: !8194)
!8197 = !DILocation(line: 1742, column: 43, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 1742, column: 3)
!8199 = !DILocation(line: 1742, column: 42, scope: !8198)
!8200 = !DILocation(line: 1742, column: 3, scope: !8194)
!8201 = !DILocalVariable(name: "ref", scope: !8202, file: !3, line: 1744, type: !920)
!8202 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 1743, column: 5)
!8203 = !DILocation(line: 1744, column: 14, scope: !8202)
!8204 = !DILocation(line: 1744, column: 21, scope: !8202)
!8205 = !DILocation(line: 1744, column: 20, scope: !8202)
!8206 = !DILocalVariable(name: "regno", scope: !8202, file: !3, line: 1745, type: !7)
!8207 = !DILocation(line: 1745, column: 20, scope: !8202)
!8208 = !DILocation(line: 1745, column: 28, scope: !8202)
!8209 = !DILocation(line: 1746, column: 11, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8202, file: !3, line: 1746, column: 11)
!8211 = !DILocation(line: 1746, column: 20, scope: !8210)
!8212 = !DILocation(line: 1746, column: 17, scope: !8210)
!8213 = !DILocation(line: 1746, column: 11, scope: !8202)
!8214 = !DILocalVariable(name: "id", scope: !8215, file: !3, line: 1748, type: !7)
!8215 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 1747, column: 9)
!8216 = !DILocation(line: 1748, column: 17, scope: !8215)
!8217 = !DILocation(line: 1749, column: 8, scope: !8215)
!8218 = !DILocation(line: 1749, column: 18, scope: !8215)
!8219 = !DILocation(line: 1749, column: 24, scope: !8215)
!8220 = !DILocation(line: 1749, column: 33, scope: !8215)
!8221 = !DILocation(line: 1749, column: 43, scope: !8215)
!8222 = !DILocation(line: 1749, column: 49, scope: !8215)
!8223 = !DILocation(line: 1749, column: 55, scope: !8215)
!8224 = !DILocation(line: 1749, column: 31, scope: !8215)
!8225 = !DILocation(line: 1750, column: 22, scope: !8215)
!8226 = !DILocation(line: 1750, column: 4, scope: !8215)
!8227 = !DILocation(line: 1750, column: 20, scope: !8215)
!8228 = !DILocation(line: 1751, column: 25, scope: !8215)
!8229 = !DILocation(line: 1751, column: 4, scope: !8215)
!8230 = !DILocation(line: 1751, column: 14, scope: !8215)
!8231 = !DILocation(line: 1751, column: 19, scope: !8215)
!8232 = !DILocation(line: 1751, column: 23, scope: !8215)
!8233 = !DILocation(line: 1752, column: 9, scope: !8215)
!8234 = !DILocation(line: 1753, column: 5, scope: !8202)
!8235 = !DILocation(line: 1742, column: 59, scope: !8198)
!8236 = !DILocation(line: 1742, column: 3, scope: !8198)
!8237 = distinct !{!8237, !8200, !8238}
!8238 = !DILocation(line: 1753, column: 5, scope: !8194)
!8239 = !DILocation(line: 1754, column: 12, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 1754, column: 12)
!8241 = !DILocation(line: 1754, column: 12, scope: !8138)
!8242 = !DILocation(line: 1755, column: 18, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8240, file: !3, line: 1755, column: 3)
!8244 = !DILocation(line: 1755, column: 16, scope: !8243)
!8245 = !DILocation(line: 1755, column: 8, scope: !8243)
!8246 = !DILocation(line: 1755, column: 46, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8243, file: !3, line: 1755, column: 3)
!8248 = !DILocation(line: 1755, column: 45, scope: !8247)
!8249 = !DILocation(line: 1755, column: 3, scope: !8243)
!8250 = !DILocalVariable(name: "ref", scope: !8251, file: !3, line: 1757, type: !920)
!8251 = distinct !DILexicalBlock(scope: !8247, file: !3, line: 1756, column: 5)
!8252 = !DILocation(line: 1757, column: 14, scope: !8251)
!8253 = !DILocation(line: 1757, column: 21, scope: !8251)
!8254 = !DILocation(line: 1757, column: 20, scope: !8251)
!8255 = !DILocalVariable(name: "regno", scope: !8251, file: !3, line: 1758, type: !7)
!8256 = !DILocation(line: 1758, column: 20, scope: !8251)
!8257 = !DILocation(line: 1758, column: 28, scope: !8251)
!8258 = !DILocation(line: 1759, column: 11, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8251, file: !3, line: 1759, column: 11)
!8260 = !DILocation(line: 1759, column: 20, scope: !8259)
!8261 = !DILocation(line: 1759, column: 17, scope: !8259)
!8262 = !DILocation(line: 1759, column: 11, scope: !8251)
!8263 = !DILocalVariable(name: "id", scope: !8264, file: !3, line: 1761, type: !7)
!8264 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 1760, column: 9)
!8265 = !DILocation(line: 1761, column: 17, scope: !8264)
!8266 = !DILocation(line: 1762, column: 8, scope: !8264)
!8267 = !DILocation(line: 1762, column: 18, scope: !8264)
!8268 = !DILocation(line: 1762, column: 24, scope: !8264)
!8269 = !DILocation(line: 1762, column: 33, scope: !8264)
!8270 = !DILocation(line: 1762, column: 43, scope: !8264)
!8271 = !DILocation(line: 1762, column: 49, scope: !8264)
!8272 = !DILocation(line: 1762, column: 55, scope: !8264)
!8273 = !DILocation(line: 1762, column: 31, scope: !8264)
!8274 = !DILocation(line: 1763, column: 22, scope: !8264)
!8275 = !DILocation(line: 1763, column: 4, scope: !8264)
!8276 = !DILocation(line: 1763, column: 20, scope: !8264)
!8277 = !DILocation(line: 1764, column: 25, scope: !8264)
!8278 = !DILocation(line: 1764, column: 4, scope: !8264)
!8279 = !DILocation(line: 1764, column: 14, scope: !8264)
!8280 = !DILocation(line: 1764, column: 19, scope: !8264)
!8281 = !DILocation(line: 1764, column: 23, scope: !8264)
!8282 = !DILocation(line: 1765, column: 9, scope: !8264)
!8283 = !DILocation(line: 1766, column: 5, scope: !8251)
!8284 = !DILocation(line: 1755, column: 62, scope: !8247)
!8285 = !DILocation(line: 1755, column: 3, scope: !8247)
!8286 = distinct !{!8286, !8249, !8287}
!8287 = !DILocation(line: 1766, column: 5, scope: !8243)
!8288 = !DILocation(line: 1767, column: 6, scope: !8138)
!8289 = !DILocation(line: 1768, column: 2, scope: !8135)
!8290 = distinct !{!8290, !8128, !8291}
!8291 = !DILocation(line: 1768, column: 2, scope: !8129)
!8292 = !DILocation(line: 1769, column: 5, scope: !8021)
!8293 = distinct !{!8293, !8016, !8294}
!8294 = !DILocation(line: 1769, column: 5, scope: !8017)
!8295 = !DILocation(line: 1775, column: 26, scope: !7786)
!8296 = !DILocation(line: 1775, column: 3, scope: !7786)
!8297 = !DILocation(line: 1775, column: 13, scope: !7786)
!8298 = !DILocation(line: 1775, column: 24, scope: !7786)
!8299 = !DILocation(line: 1776, column: 1, scope: !7786)
!8300 = distinct !DISubprogram(name: "df_reorganize_refs_by_reg_by_reg", scope: !3, file: !3, line: 1536, type: !5724, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!8301 = !DILocalVariable(name: "ref_info", arg: 1, scope: !8300, file: !3, line: 1536, type: !3293)
!8302 = !DILocation(line: 1536, column: 55, scope: !8300)
!8303 = !DILocalVariable(name: "include_defs", arg: 2, scope: !8300, file: !3, line: 1537, type: !1099)
!8304 = !DILocation(line: 1537, column: 12, scope: !8300)
!8305 = !DILocalVariable(name: "include_uses", arg: 3, scope: !8300, file: !3, line: 1538, type: !1099)
!8306 = !DILocation(line: 1538, column: 12, scope: !8300)
!8307 = !DILocalVariable(name: "include_eq_uses", arg: 4, scope: !8300, file: !3, line: 1539, type: !1099)
!8308 = !DILocation(line: 1539, column: 12, scope: !8300)
!8309 = !DILocalVariable(name: "m", scope: !8300, file: !3, line: 1541, type: !7)
!8310 = !DILocation(line: 1541, column: 16, scope: !8300)
!8311 = !DILocation(line: 1541, column: 20, scope: !8300)
!8312 = !DILocation(line: 1541, column: 24, scope: !8300)
!8313 = !DILocalVariable(name: "regno", scope: !8300, file: !3, line: 1542, type: !7)
!8314 = !DILocation(line: 1542, column: 16, scope: !8300)
!8315 = !DILocalVariable(name: "offset", scope: !8300, file: !3, line: 1543, type: !7)
!8316 = !DILocation(line: 1543, column: 16, scope: !8300)
!8317 = !DILocalVariable(name: "start", scope: !8300, file: !3, line: 1544, type: !7)
!8318 = !DILocation(line: 1544, column: 16, scope: !8300)
!8319 = !DILocation(line: 1546, column: 7, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 1546, column: 7)
!8321 = !DILocation(line: 1546, column: 11, scope: !8320)
!8322 = !DILocation(line: 1546, column: 28, scope: !8320)
!8323 = !DILocation(line: 1546, column: 7, scope: !8300)
!8324 = !DILocation(line: 1548, column: 13, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8320, file: !3, line: 1547, column: 5)
!8326 = !DILocation(line: 1549, column: 15, scope: !8325)
!8327 = !DILocation(line: 1549, column: 25, scope: !8325)
!8328 = !DILocation(line: 1549, column: 7, scope: !8325)
!8329 = !DILocation(line: 1550, column: 15, scope: !8325)
!8330 = !DILocation(line: 1550, column: 25, scope: !8325)
!8331 = !DILocation(line: 1550, column: 7, scope: !8325)
!8332 = !DILocation(line: 1551, column: 5, scope: !8325)
!8333 = !DILocation(line: 1553, column: 11, scope: !8320)
!8334 = !DILocation(line: 1556, column: 22, scope: !8300)
!8335 = !DILocation(line: 1556, column: 36, scope: !8300)
!8336 = !DILocation(line: 1556, column: 50, scope: !8300)
!8337 = !DILocation(line: 1556, column: 7, scope: !8300)
!8338 = !DILocation(line: 1555, column: 3, scope: !8300)
!8339 = !DILocation(line: 1555, column: 13, scope: !8300)
!8340 = !DILocation(line: 1556, column: 5, scope: !8300)
!8341 = !DILocation(line: 1558, column: 31, scope: !8300)
!8342 = !DILocation(line: 1558, column: 3, scope: !8300)
!8343 = !DILocation(line: 1560, column: 16, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 1560, column: 3)
!8345 = !DILocation(line: 1560, column: 14, scope: !8344)
!8346 = !DILocation(line: 1560, column: 8, scope: !8344)
!8347 = !DILocation(line: 1560, column: 23, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8344, file: !3, line: 1560, column: 3)
!8349 = !DILocation(line: 1560, column: 31, scope: !8348)
!8350 = !DILocation(line: 1560, column: 29, scope: !8348)
!8351 = !DILocation(line: 1560, column: 3, scope: !8344)
!8352 = !DILocalVariable(name: "count", scope: !8353, file: !3, line: 1562, type: !900)
!8353 = distinct !DILexicalBlock(scope: !8348, file: !3, line: 1561, column: 5)
!8354 = !DILocation(line: 1562, column: 11, scope: !8353)
!8355 = !DILocation(line: 1563, column: 32, scope: !8353)
!8356 = !DILocation(line: 1563, column: 7, scope: !8353)
!8357 = !DILocation(line: 1563, column: 17, scope: !8353)
!8358 = !DILocation(line: 1563, column: 23, scope: !8353)
!8359 = !DILocation(line: 1563, column: 30, scope: !8353)
!8360 = !DILocation(line: 1564, column: 11, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 1564, column: 11)
!8362 = !DILocation(line: 1564, column: 11, scope: !8353)
!8363 = !DILocalVariable(name: "ref", scope: !8364, file: !3, line: 1566, type: !920)
!8364 = distinct !DILexicalBlock(scope: !8361, file: !3, line: 1565, column: 2)
!8365 = !DILocation(line: 1566, column: 11, scope: !8364)
!8366 = !DILocation(line: 1566, column: 17, scope: !8364)
!8367 = !DILocation(line: 1567, column: 4, scope: !8364)
!8368 = !DILocation(line: 1567, column: 11, scope: !8364)
!8369 = !DILocation(line: 1569, column: 33, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8364, file: !3, line: 1568, column: 6)
!8371 = !DILocation(line: 1569, column: 8, scope: !8370)
!8372 = !DILocation(line: 1569, column: 18, scope: !8370)
!8373 = !DILocation(line: 1569, column: 23, scope: !8370)
!8374 = !DILocation(line: 1569, column: 31, scope: !8370)
!8375 = !DILocation(line: 1570, column: 32, scope: !8370)
!8376 = !DILocation(line: 1570, column: 8, scope: !8370)
!8377 = !DILocation(line: 1570, column: 24, scope: !8370)
!8378 = !DILocation(line: 1571, column: 13, scope: !8370)
!8379 = !DILocation(line: 1572, column: 14, scope: !8370)
!8380 = !DILocation(line: 1572, column: 12, scope: !8370)
!8381 = !DILocation(line: 1573, column: 8, scope: !8370)
!8382 = distinct !{!8382, !8367, !8383}
!8383 = !DILocation(line: 1574, column: 6, scope: !8364)
!8384 = !DILocation(line: 1575, column: 2, scope: !8364)
!8385 = !DILocation(line: 1576, column: 11, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 1576, column: 11)
!8387 = !DILocation(line: 1576, column: 11, scope: !8353)
!8388 = !DILocalVariable(name: "ref", scope: !8389, file: !3, line: 1578, type: !920)
!8389 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 1577, column: 2)
!8390 = !DILocation(line: 1578, column: 11, scope: !8389)
!8391 = !DILocation(line: 1578, column: 17, scope: !8389)
!8392 = !DILocation(line: 1579, column: 4, scope: !8389)
!8393 = !DILocation(line: 1579, column: 11, scope: !8389)
!8394 = !DILocation(line: 1581, column: 33, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8389, file: !3, line: 1580, column: 6)
!8396 = !DILocation(line: 1581, column: 8, scope: !8395)
!8397 = !DILocation(line: 1581, column: 18, scope: !8395)
!8398 = !DILocation(line: 1581, column: 23, scope: !8395)
!8399 = !DILocation(line: 1581, column: 31, scope: !8395)
!8400 = !DILocation(line: 1582, column: 32, scope: !8395)
!8401 = !DILocation(line: 1582, column: 8, scope: !8395)
!8402 = !DILocation(line: 1582, column: 24, scope: !8395)
!8403 = !DILocation(line: 1583, column: 13, scope: !8395)
!8404 = !DILocation(line: 1584, column: 14, scope: !8395)
!8405 = !DILocation(line: 1584, column: 12, scope: !8395)
!8406 = !DILocation(line: 1585, column: 8, scope: !8395)
!8407 = distinct !{!8407, !8392, !8408}
!8408 = !DILocation(line: 1586, column: 6, scope: !8389)
!8409 = !DILocation(line: 1587, column: 2, scope: !8389)
!8410 = !DILocation(line: 1588, column: 11, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 1588, column: 11)
!8412 = !DILocation(line: 1588, column: 11, scope: !8353)
!8413 = !DILocalVariable(name: "ref", scope: !8414, file: !3, line: 1590, type: !920)
!8414 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 1589, column: 2)
!8415 = !DILocation(line: 1590, column: 11, scope: !8414)
!8416 = !DILocation(line: 1590, column: 17, scope: !8414)
!8417 = !DILocation(line: 1591, column: 4, scope: !8414)
!8418 = !DILocation(line: 1591, column: 11, scope: !8414)
!8419 = !DILocation(line: 1593, column: 33, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8414, file: !3, line: 1592, column: 6)
!8421 = !DILocation(line: 1593, column: 8, scope: !8420)
!8422 = !DILocation(line: 1593, column: 18, scope: !8420)
!8423 = !DILocation(line: 1593, column: 23, scope: !8420)
!8424 = !DILocation(line: 1593, column: 31, scope: !8420)
!8425 = !DILocation(line: 1594, column: 32, scope: !8420)
!8426 = !DILocation(line: 1594, column: 8, scope: !8420)
!8427 = !DILocation(line: 1594, column: 24, scope: !8420)
!8428 = !DILocation(line: 1595, column: 13, scope: !8420)
!8429 = !DILocation(line: 1596, column: 14, scope: !8420)
!8430 = !DILocation(line: 1596, column: 12, scope: !8420)
!8431 = !DILocation(line: 1597, column: 8, scope: !8420)
!8432 = distinct !{!8432, !8417, !8433}
!8433 = !DILocation(line: 1598, column: 6, scope: !8414)
!8434 = !DILocation(line: 1599, column: 2, scope: !8414)
!8435 = !DILocation(line: 1600, column: 32, scope: !8353)
!8436 = !DILocation(line: 1600, column: 7, scope: !8353)
!8437 = !DILocation(line: 1600, column: 17, scope: !8353)
!8438 = !DILocation(line: 1600, column: 23, scope: !8353)
!8439 = !DILocation(line: 1600, column: 30, scope: !8353)
!8440 = !DILocation(line: 1601, column: 5, scope: !8353)
!8441 = !DILocation(line: 1560, column: 39, scope: !8348)
!8442 = !DILocation(line: 1560, column: 3, scope: !8348)
!8443 = distinct !{!8443, !8351, !8444}
!8444 = !DILocation(line: 1601, column: 5, scope: !8344)
!8445 = !DILocation(line: 1606, column: 26, scope: !8300)
!8446 = !DILocation(line: 1606, column: 3, scope: !8300)
!8447 = !DILocation(line: 1606, column: 13, scope: !8300)
!8448 = !DILocation(line: 1606, column: 24, scope: !8300)
!8449 = !DILocation(line: 1607, column: 1, scope: !8300)
!8450 = distinct !DISubprogram(name: "df_count_refs", scope: !3, file: !3, line: 1511, type: !8451, scopeLine: 1513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!8451 = !DISubroutineType(types: !8452)
!8452 = !{!7, !1099, !1099, !1099}
!8453 = !DILocalVariable(name: "include_defs", arg: 1, scope: !8450, file: !3, line: 1511, type: !1099)
!8454 = !DILocation(line: 1511, column: 21, scope: !8450)
!8455 = !DILocalVariable(name: "include_uses", arg: 2, scope: !8450, file: !3, line: 1511, type: !1099)
!8456 = !DILocation(line: 1511, column: 40, scope: !8450)
!8457 = !DILocalVariable(name: "include_eq_uses", arg: 3, scope: !8450, file: !3, line: 1512, type: !1099)
!8458 = !DILocation(line: 1512, column: 14, scope: !8450)
!8459 = !DILocalVariable(name: "regno", scope: !8450, file: !3, line: 1514, type: !7)
!8460 = !DILocation(line: 1514, column: 16, scope: !8450)
!8461 = !DILocalVariable(name: "size", scope: !8450, file: !3, line: 1515, type: !900)
!8462 = !DILocation(line: 1515, column: 7, scope: !8450)
!8463 = !DILocalVariable(name: "m", scope: !8450, file: !3, line: 1516, type: !7)
!8464 = !DILocation(line: 1516, column: 16, scope: !8450)
!8465 = !DILocation(line: 1516, column: 20, scope: !8450)
!8466 = !DILocation(line: 1516, column: 24, scope: !8450)
!8467 = !DILocation(line: 1518, column: 14, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8450, file: !3, line: 1518, column: 3)
!8469 = !DILocation(line: 1518, column: 8, scope: !8468)
!8470 = !DILocation(line: 1518, column: 19, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8468, file: !3, line: 1518, column: 3)
!8472 = !DILocation(line: 1518, column: 27, scope: !8471)
!8473 = !DILocation(line: 1518, column: 25, scope: !8471)
!8474 = !DILocation(line: 1518, column: 3, scope: !8468)
!8475 = !DILocation(line: 1520, column: 11, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 1520, column: 11)
!8477 = distinct !DILexicalBlock(scope: !8471, file: !3, line: 1519, column: 5)
!8478 = !DILocation(line: 1520, column: 11, scope: !8477)
!8479 = !DILocation(line: 1521, column: 10, scope: !8476)
!8480 = !DILocation(line: 1521, column: 7, scope: !8476)
!8481 = !DILocation(line: 1521, column: 2, scope: !8476)
!8482 = !DILocation(line: 1522, column: 11, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 1522, column: 11)
!8484 = !DILocation(line: 1522, column: 11, scope: !8477)
!8485 = !DILocation(line: 1523, column: 10, scope: !8483)
!8486 = !DILocation(line: 1523, column: 7, scope: !8483)
!8487 = !DILocation(line: 1523, column: 2, scope: !8483)
!8488 = !DILocation(line: 1524, column: 11, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 1524, column: 11)
!8490 = !DILocation(line: 1524, column: 11, scope: !8477)
!8491 = !DILocation(line: 1525, column: 10, scope: !8489)
!8492 = !DILocation(line: 1525, column: 7, scope: !8489)
!8493 = !DILocation(line: 1525, column: 2, scope: !8489)
!8494 = !DILocation(line: 1526, column: 5, scope: !8477)
!8495 = !DILocation(line: 1518, column: 35, scope: !8471)
!8496 = !DILocation(line: 1518, column: 3, scope: !8471)
!8497 = distinct !{!8497, !8474, !8498}
!8498 = !DILocation(line: 1526, column: 5, scope: !8468)
!8499 = !DILocation(line: 1527, column: 10, scope: !8450)
!8500 = !DILocation(line: 1527, column: 3, scope: !8450)
!8501 = distinct !DISubprogram(name: "df_check_and_grow_ref_info", scope: !3, file: !3, line: 636, type: !8502, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!8502 = !DISubroutineType(types: !8503)
!8503 = !{null, !3293, !7}
!8504 = !DILocalVariable(name: "ref_info", arg: 1, scope: !8501, file: !3, line: 636, type: !3293)
!8505 = !DILocation(line: 636, column: 49, scope: !8501)
!8506 = !DILocalVariable(name: "bitmap_addend", arg: 2, scope: !8501, file: !3, line: 637, type: !7)
!8507 = !DILocation(line: 637, column: 17, scope: !8501)
!8508 = !DILocation(line: 639, column: 7, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 639, column: 7)
!8510 = !DILocation(line: 639, column: 17, scope: !8509)
!8511 = !DILocation(line: 639, column: 29, scope: !8509)
!8512 = !DILocation(line: 639, column: 39, scope: !8509)
!8513 = !DILocation(line: 639, column: 52, scope: !8509)
!8514 = !DILocation(line: 639, column: 50, scope: !8509)
!8515 = !DILocation(line: 639, column: 27, scope: !8509)
!8516 = !DILocation(line: 639, column: 7, scope: !8501)
!8517 = !DILocalVariable(name: "new_size", scope: !8518, file: !3, line: 641, type: !900)
!8518 = distinct !DILexicalBlock(scope: !8509, file: !3, line: 640, column: 5)
!8519 = !DILocation(line: 641, column: 11, scope: !8518)
!8520 = !DILocation(line: 641, column: 22, scope: !8518)
!8521 = !DILocation(line: 641, column: 32, scope: !8518)
!8522 = !DILocation(line: 641, column: 45, scope: !8518)
!8523 = !DILocation(line: 641, column: 43, scope: !8518)
!8524 = !DILocation(line: 642, column: 19, scope: !8518)
!8525 = !DILocation(line: 642, column: 29, scope: !8518)
!8526 = !DILocation(line: 642, column: 40, scope: !8518)
!8527 = !DILocation(line: 642, column: 16, scope: !8518)
!8528 = !DILocation(line: 643, column: 25, scope: !8518)
!8529 = !DILocation(line: 643, column: 35, scope: !8518)
!8530 = !DILocation(line: 643, column: 7, scope: !8518)
!8531 = !DILocation(line: 644, column: 5, scope: !8518)
!8532 = !DILocation(line: 645, column: 1, scope: !8501)
!8533 = distinct !DISubprogram(name: "df_get_artificial_defs", scope: !378, file: !378, line: 1090, type: !8534, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!8534 = !DISubroutineType(types: !8535)
!8535 = !{!919, !7}
!8536 = !DILocalVariable(name: "bb_index", arg: 1, scope: !8533, file: !378, line: 1090, type: !7)
!8537 = !DILocation(line: 1090, column: 38, scope: !8533)
!8538 = !DILocation(line: 1092, column: 31, scope: !8533)
!8539 = !DILocation(line: 1092, column: 10, scope: !8533)
!8540 = !DILocation(line: 1092, column: 42, scope: !8533)
!8541 = !DILocation(line: 1092, column: 3, scope: !8533)
!8542 = distinct !DISubprogram(name: "df_get_artificial_uses", scope: !378, file: !378, line: 1099, type: !8534, scopeLine: 1100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!8543 = !DILocalVariable(name: "bb_index", arg: 1, scope: !8542, file: !378, line: 1099, type: !7)
!8544 = !DILocation(line: 1099, column: 38, scope: !8542)
!8545 = !DILocation(line: 1101, column: 31, scope: !8542)
!8546 = !DILocation(line: 1101, column: 10, scope: !8542)
!8547 = !DILocation(line: 1101, column: 42, scope: !8542)
!8548 = !DILocation(line: 1101, column: 3, scope: !8542)
!8549 = distinct !DISubprogram(name: "df_grow_ref_info", scope: !3, file: !3, line: 618, type: !8502, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!8550 = !DILocalVariable(name: "ref_info", arg: 1, scope: !8549, file: !3, line: 618, type: !3293)
!8551 = !DILocation(line: 618, column: 39, scope: !8549)
!8552 = !DILocalVariable(name: "new_size", arg: 2, scope: !8549, file: !3, line: 618, type: !7)
!8553 = !DILocation(line: 618, column: 62, scope: !8549)
!8554 = !DILocation(line: 620, column: 7, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8549, file: !3, line: 620, column: 7)
!8556 = !DILocation(line: 620, column: 17, scope: !8555)
!8557 = !DILocation(line: 620, column: 29, scope: !8555)
!8558 = !DILocation(line: 620, column: 27, scope: !8555)
!8559 = !DILocation(line: 620, column: 7, scope: !8549)
!8560 = !DILocation(line: 622, column: 24, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 621, column: 5)
!8562 = !DILocation(line: 622, column: 7, scope: !8561)
!8563 = !DILocation(line: 622, column: 17, scope: !8561)
!8564 = !DILocation(line: 622, column: 22, scope: !8561)
!8565 = !DILocation(line: 623, column: 15, scope: !8561)
!8566 = !DILocation(line: 623, column: 25, scope: !8561)
!8567 = !DILocation(line: 623, column: 32, scope: !8561)
!8568 = !DILocation(line: 623, column: 42, scope: !8561)
!8569 = !DILocation(line: 623, column: 30, scope: !8561)
!8570 = !DILocation(line: 623, column: 7, scope: !8561)
!8571 = !DILocation(line: 624, column: 9, scope: !8561)
!8572 = !DILocation(line: 624, column: 20, scope: !8561)
!8573 = !DILocation(line: 624, column: 30, scope: !8561)
!8574 = !DILocation(line: 624, column: 18, scope: !8561)
!8575 = !DILocation(line: 624, column: 8, scope: !8561)
!8576 = !DILocation(line: 624, column: 41, scope: !8561)
!8577 = !DILocation(line: 625, column: 29, scope: !8561)
!8578 = !DILocation(line: 625, column: 7, scope: !8561)
!8579 = !DILocation(line: 625, column: 17, scope: !8561)
!8580 = !DILocation(line: 625, column: 27, scope: !8561)
!8581 = !DILocation(line: 626, column: 5, scope: !8561)
!8582 = !DILocation(line: 627, column: 1, scope: !8549)
!8583 = distinct !DISubprogram(name: "df_reorganize_refs_by_insn_bb", scope: !3, file: !3, line: 1822, type: !8584, scopeLine: 1826, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!8584 = !DISubroutineType(types: !8585)
!8585 = !{!7, !1244, !7, !3293, !1099, !1099, !1099}
!8586 = !DILocalVariable(name: "bb", arg: 1, scope: !8583, file: !3, line: 1822, type: !1244)
!8587 = !DILocation(line: 1822, column: 44, scope: !8583)
!8588 = !DILocalVariable(name: "offset", arg: 2, scope: !8583, file: !3, line: 1822, type: !7)
!8589 = !DILocation(line: 1822, column: 61, scope: !8583)
!8590 = !DILocalVariable(name: "ref_info", arg: 3, scope: !8583, file: !3, line: 1823, type: !3293)
!8591 = !DILocation(line: 1823, column: 31, scope: !8583)
!8592 = !DILocalVariable(name: "include_defs", arg: 4, scope: !8583, file: !3, line: 1824, type: !1099)
!8593 = !DILocation(line: 1824, column: 16, scope: !8583)
!8594 = !DILocalVariable(name: "include_uses", arg: 5, scope: !8583, file: !3, line: 1824, type: !1099)
!8595 = !DILocation(line: 1824, column: 35, scope: !8583)
!8596 = !DILocalVariable(name: "include_eq_uses", arg: 6, scope: !8583, file: !3, line: 1825, type: !1099)
!8597 = !DILocation(line: 1825, column: 16, scope: !8583)
!8598 = !DILocalVariable(name: "insn", scope: !8583, file: !3, line: 1827, type: !931)
!8599 = !DILocation(line: 1827, column: 7, scope: !8583)
!8600 = !DILocation(line: 1829, column: 7, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 1829, column: 7)
!8602 = !DILocation(line: 1829, column: 7, scope: !8583)
!8603 = !DILocation(line: 1830, column: 36, scope: !8601)
!8604 = !DILocation(line: 1830, column: 44, scope: !8601)
!8605 = !DILocation(line: 1831, column: 32, scope: !8601)
!8606 = !DILocation(line: 1831, column: 36, scope: !8601)
!8607 = !DILocation(line: 1831, column: 8, scope: !8601)
!8608 = !DILocation(line: 1830, column: 14, scope: !8601)
!8609 = !DILocation(line: 1830, column: 12, scope: !8601)
!8610 = !DILocation(line: 1830, column: 5, scope: !8601)
!8611 = !DILocation(line: 1832, column: 7, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 1832, column: 7)
!8613 = !DILocation(line: 1832, column: 7, scope: !8583)
!8614 = !DILocation(line: 1833, column: 36, scope: !8612)
!8615 = !DILocation(line: 1833, column: 44, scope: !8612)
!8616 = !DILocation(line: 1834, column: 32, scope: !8612)
!8617 = !DILocation(line: 1834, column: 36, scope: !8612)
!8618 = !DILocation(line: 1834, column: 8, scope: !8612)
!8619 = !DILocation(line: 1833, column: 14, scope: !8612)
!8620 = !DILocation(line: 1833, column: 12, scope: !8612)
!8621 = !DILocation(line: 1833, column: 5, scope: !8612)
!8622 = !DILocation(line: 1836, column: 3, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 1836, column: 3)
!8624 = !DILocation(line: 1836, column: 3, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 1836, column: 3)
!8626 = !DILocation(line: 0, scope: !8625)
!8627 = !DILocation(line: 1837, column: 9, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8625, file: !3, line: 1837, column: 9)
!8629 = !DILocation(line: 1837, column: 9, scope: !8625)
!8630 = !DILocalVariable(name: "uid", scope: !8631, file: !3, line: 1839, type: !7)
!8631 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 1838, column: 7)
!8632 = !DILocation(line: 1839, column: 15, scope: !8631)
!8633 = !DILocation(line: 1839, column: 21, scope: !8631)
!8634 = !DILocation(line: 1840, column: 6, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 1840, column: 6)
!8636 = !DILocation(line: 1840, column: 6, scope: !8631)
!8637 = !DILocation(line: 1841, column: 35, scope: !8635)
!8638 = !DILocation(line: 1841, column: 43, scope: !8635)
!8639 = !DILocation(line: 1842, column: 7, scope: !8635)
!8640 = !DILocation(line: 1841, column: 13, scope: !8635)
!8641 = !DILocation(line: 1841, column: 11, scope: !8635)
!8642 = !DILocation(line: 1841, column: 4, scope: !8635)
!8643 = !DILocation(line: 1843, column: 6, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 1843, column: 6)
!8645 = !DILocation(line: 1843, column: 6, scope: !8631)
!8646 = !DILocation(line: 1844, column: 35, scope: !8644)
!8647 = !DILocation(line: 1844, column: 43, scope: !8644)
!8648 = !DILocation(line: 1845, column: 7, scope: !8644)
!8649 = !DILocation(line: 1844, column: 13, scope: !8644)
!8650 = !DILocation(line: 1844, column: 11, scope: !8644)
!8651 = !DILocation(line: 1844, column: 4, scope: !8644)
!8652 = !DILocation(line: 1846, column: 6, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 1846, column: 6)
!8654 = !DILocation(line: 1846, column: 6, scope: !8631)
!8655 = !DILocation(line: 1847, column: 35, scope: !8653)
!8656 = !DILocation(line: 1847, column: 43, scope: !8653)
!8657 = !DILocation(line: 1848, column: 7, scope: !8653)
!8658 = !DILocation(line: 1847, column: 13, scope: !8653)
!8659 = !DILocation(line: 1847, column: 11, scope: !8653)
!8660 = !DILocation(line: 1847, column: 4, scope: !8653)
!8661 = !DILocation(line: 1849, column: 7, scope: !8631)
!8662 = distinct !{!8662, !8622, !8663}
!8663 = !DILocation(line: 1849, column: 7, scope: !8623)
!8664 = !DILocation(line: 1850, column: 10, scope: !8583)
!8665 = !DILocation(line: 1850, column: 3, scope: !8583)
!8666 = distinct !DISubprogram(name: "df_add_refs_to_table", scope: !3, file: !3, line: 1798, type: !8667, scopeLine: 1801, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!8667 = !DISubroutineType(types: !8668)
!8668 = !{!7, !7, !3293, !919}
!8669 = !DILocalVariable(name: "offset", arg: 1, scope: !8666, file: !3, line: 1798, type: !7)
!8670 = !DILocation(line: 1798, column: 36, scope: !8666)
!8671 = !DILocalVariable(name: "ref_info", arg: 2, scope: !8666, file: !3, line: 1799, type: !3293)
!8672 = !DILocation(line: 1799, column: 29, scope: !8666)
!8673 = !DILocalVariable(name: "ref_vec", arg: 3, scope: !8666, file: !3, line: 1800, type: !919)
!8674 = !DILocation(line: 1800, column: 17, scope: !8666)
!8675 = !DILocation(line: 1802, column: 3, scope: !8666)
!8676 = !DILocation(line: 1802, column: 11, scope: !8666)
!8677 = !DILocation(line: 1802, column: 10, scope: !8666)
!8678 = !DILocalVariable(name: "ref", scope: !8679, file: !3, line: 1804, type: !920)
!8679 = distinct !DILexicalBlock(scope: !8666, file: !3, line: 1803, column: 5)
!8680 = !DILocation(line: 1804, column: 14, scope: !8679)
!8681 = !DILocation(line: 1804, column: 21, scope: !8679)
!8682 = !DILocation(line: 1804, column: 20, scope: !8679)
!8683 = !DILocation(line: 1805, column: 14, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8679, file: !3, line: 1805, column: 11)
!8685 = !DILocation(line: 1805, column: 18, scope: !8684)
!8686 = !DILocation(line: 1805, column: 35, scope: !8684)
!8687 = !DILocation(line: 1806, column: 4, scope: !8684)
!8688 = !DILocation(line: 1806, column: 8, scope: !8684)
!8689 = !DILocation(line: 1806, column: 27, scope: !8684)
!8690 = !DILocation(line: 1805, column: 11, scope: !8679)
!8691 = !DILocation(line: 1808, column: 29, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8684, file: !3, line: 1807, column: 2)
!8693 = !DILocation(line: 1808, column: 4, scope: !8692)
!8694 = !DILocation(line: 1808, column: 14, scope: !8692)
!8695 = !DILocation(line: 1808, column: 19, scope: !8692)
!8696 = !DILocation(line: 1808, column: 27, scope: !8692)
!8697 = !DILocation(line: 1809, column: 33, scope: !8692)
!8698 = !DILocation(line: 1809, column: 4, scope: !8692)
!8699 = !DILocation(line: 1809, column: 25, scope: !8692)
!8700 = !DILocation(line: 1810, column: 2, scope: !8692)
!8701 = !DILocation(line: 1811, column: 14, scope: !8679)
!8702 = distinct !{!8702, !8675, !8703}
!8703 = !DILocation(line: 1812, column: 5, scope: !8666)
!8704 = !DILocation(line: 1813, column: 10, scope: !8666)
!8705 = !DILocation(line: 1813, column: 3, scope: !8666)
!8706 = distinct !DISubprogram(name: "df_sort_and_compress_refs", scope: !3, file: !3, line: 2426, type: !4886, scopeLine: 2427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!8707 = !DILocalVariable(name: "ref_vec", arg: 1, scope: !8706, file: !3, line: 2426, type: !4888)
!8708 = !DILocation(line: 2426, column: 48, scope: !8706)
!8709 = !DILocalVariable(name: "count", scope: !8706, file: !3, line: 2428, type: !7)
!8710 = !DILocation(line: 2428, column: 16, scope: !8706)
!8711 = !DILocalVariable(name: "i", scope: !8706, file: !3, line: 2429, type: !7)
!8712 = !DILocation(line: 2429, column: 16, scope: !8706)
!8713 = !DILocalVariable(name: "dist", scope: !8706, file: !3, line: 2430, type: !7)
!8714 = !DILocation(line: 2430, column: 16, scope: !8706)
!8715 = !DILocation(line: 2432, column: 11, scope: !8706)
!8716 = !DILocation(line: 2432, column: 9, scope: !8706)
!8717 = !DILocation(line: 2435, column: 7, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 2435, column: 7)
!8719 = !DILocation(line: 2435, column: 13, scope: !8718)
!8720 = !DILocation(line: 2435, column: 7, scope: !8706)
!8721 = !DILocation(line: 2436, column: 5, scope: !8718)
!8722 = !DILocation(line: 2437, column: 12, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 2437, column: 12)
!8724 = !DILocation(line: 2437, column: 18, scope: !8723)
!8725 = !DILocation(line: 2437, column: 12, scope: !8718)
!8726 = !DILocalVariable(name: "r0", scope: !8727, file: !3, line: 2439, type: !920)
!8727 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 2438, column: 5)
!8728 = !DILocation(line: 2439, column: 14, scope: !8727)
!8729 = !DILocation(line: 2439, column: 19, scope: !8727)
!8730 = !DILocalVariable(name: "r1", scope: !8727, file: !3, line: 2440, type: !920)
!8731 = !DILocation(line: 2440, column: 14, scope: !8727)
!8732 = !DILocation(line: 2440, column: 19, scope: !8727)
!8733 = !DILocation(line: 2441, column: 27, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8727, file: !3, line: 2441, column: 11)
!8735 = !DILocation(line: 2441, column: 32, scope: !8734)
!8736 = !DILocation(line: 2441, column: 11, scope: !8734)
!8737 = !DILocation(line: 2441, column: 37, scope: !8734)
!8738 = !DILocation(line: 2441, column: 11, scope: !8727)
!8739 = !DILocation(line: 2442, column: 23, scope: !8734)
!8740 = !DILocation(line: 2442, column: 9, scope: !8734)
!8741 = !DILocation(line: 2443, column: 5, scope: !8727)
!8742 = !DILocation(line: 2446, column: 14, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8744, file: !3, line: 2446, column: 7)
!8744 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 2445, column: 5)
!8745 = !DILocation(line: 2446, column: 12, scope: !8743)
!8746 = !DILocation(line: 2446, column: 19, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8743, file: !3, line: 2446, column: 7)
!8748 = !DILocation(line: 2446, column: 23, scope: !8747)
!8749 = !DILocation(line: 2446, column: 29, scope: !8747)
!8750 = !DILocation(line: 2446, column: 21, scope: !8747)
!8751 = !DILocation(line: 2446, column: 7, scope: !8743)
!8752 = !DILocalVariable(name: "r0", scope: !8753, file: !3, line: 2448, type: !920)
!8753 = distinct !DILexicalBlock(scope: !8747, file: !3, line: 2447, column: 2)
!8754 = !DILocation(line: 2448, column: 11, scope: !8753)
!8755 = !DILocation(line: 2448, column: 16, scope: !8753)
!8756 = !DILocalVariable(name: "r1", scope: !8753, file: !3, line: 2449, type: !920)
!8757 = !DILocation(line: 2449, column: 11, scope: !8753)
!8758 = !DILocation(line: 2449, column: 16, scope: !8753)
!8759 = !DILocation(line: 2450, column: 24, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8753, file: !3, line: 2450, column: 8)
!8761 = !DILocation(line: 2450, column: 29, scope: !8760)
!8762 = !DILocation(line: 2450, column: 8, scope: !8760)
!8763 = !DILocation(line: 2450, column: 34, scope: !8760)
!8764 = !DILocation(line: 2450, column: 8, scope: !8753)
!8765 = !DILocation(line: 2451, column: 6, scope: !8760)
!8766 = !DILocation(line: 2452, column: 2, scope: !8753)
!8767 = !DILocation(line: 2446, column: 35, scope: !8747)
!8768 = !DILocation(line: 2446, column: 7, scope: !8747)
!8769 = distinct !{!8769, !8751, !8770}
!8770 = !DILocation(line: 2452, column: 2, scope: !8743)
!8771 = !DILocation(line: 2460, column: 11, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8744, file: !3, line: 2460, column: 11)
!8773 = !DILocation(line: 2460, column: 16, scope: !8772)
!8774 = !DILocation(line: 2460, column: 22, scope: !8772)
!8775 = !DILocation(line: 2460, column: 13, scope: !8772)
!8776 = !DILocation(line: 2460, column: 11, scope: !8744)
!8777 = !DILocation(line: 2461, column: 9, scope: !8772)
!8778 = !DILocation(line: 2463, column: 19, scope: !8744)
!8779 = !DILocation(line: 2463, column: 51, scope: !8744)
!8780 = !DILocation(line: 2463, column: 7, scope: !8744)
!8781 = !DILocation(line: 2471, column: 9, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 2471, column: 3)
!8783 = !DILocation(line: 2471, column: 8, scope: !8782)
!8784 = !DILocation(line: 2471, column: 13, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 2471, column: 3)
!8786 = !DILocation(line: 2471, column: 15, scope: !8785)
!8787 = !DILocation(line: 2471, column: 21, scope: !8785)
!8788 = !DILocation(line: 2471, column: 20, scope: !8785)
!8789 = !DILocation(line: 2471, column: 14, scope: !8785)
!8790 = !DILocation(line: 2471, column: 3, scope: !8782)
!8791 = !DILocation(line: 2474, column: 7, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8785, file: !3, line: 2472, column: 5)
!8793 = !DILocation(line: 2474, column: 14, scope: !8792)
!8794 = !DILocation(line: 2474, column: 18, scope: !8792)
!8795 = !DILocation(line: 2474, column: 16, scope: !8792)
!8796 = !DILocation(line: 2474, column: 23, scope: !8792)
!8797 = !DILocation(line: 2474, column: 29, scope: !8792)
!8798 = !DILocation(line: 2474, column: 27, scope: !8792)
!8799 = !DILocation(line: 2475, column: 7, scope: !8792)
!8800 = !DILocation(line: 2475, column: 26, scope: !8792)
!8801 = !DILocation(line: 2476, column: 5, scope: !8792)
!8802 = !DILocation(line: 2475, column: 10, scope: !8792)
!8803 = !DILocation(line: 0, scope: !8792)
!8804 = !DILocation(line: 2478, column: 17, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8792, file: !3, line: 2477, column: 2)
!8806 = !DILocation(line: 2478, column: 4, scope: !8805)
!8807 = !DILocation(line: 2479, column: 8, scope: !8805)
!8808 = distinct !{!8808, !8791, !8809}
!8809 = !DILocation(line: 2480, column: 2, scope: !8792)
!8810 = !DILocation(line: 2482, column: 11, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8792, file: !3, line: 2482, column: 11)
!8812 = !DILocation(line: 2482, column: 16, scope: !8811)
!8813 = !DILocation(line: 2482, column: 19, scope: !8811)
!8814 = !DILocation(line: 2482, column: 23, scope: !8811)
!8815 = !DILocation(line: 2482, column: 21, scope: !8811)
!8816 = !DILocation(line: 2482, column: 28, scope: !8811)
!8817 = !DILocation(line: 2482, column: 34, scope: !8811)
!8818 = !DILocation(line: 2482, column: 32, scope: !8811)
!8819 = !DILocation(line: 2482, column: 11, scope: !8792)
!8820 = !DILocation(line: 2483, column: 2, scope: !8811)
!8821 = !DILocation(line: 2485, column: 5, scope: !8792)
!8822 = !DILocation(line: 2471, column: 28, scope: !8785)
!8823 = !DILocation(line: 2471, column: 3, scope: !8785)
!8824 = distinct !{!8824, !8790, !8825}
!8825 = !DILocation(line: 2485, column: 5, scope: !8782)
!8826 = !DILocation(line: 2487, column: 12, scope: !8706)
!8827 = !DILocation(line: 2487, column: 9, scope: !8706)
!8828 = !DILocation(line: 2488, column: 3, scope: !8706)
!8829 = !DILocation(line: 2489, column: 1, scope: !8706)
!8830 = distinct !DISubprogram(name: "df_sort_and_compress_mws", scope: !3, file: !3, line: 2542, type: !4894, scopeLine: 2543, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!8831 = !DILocalVariable(name: "mw_vec", arg: 1, scope: !8830, file: !3, line: 2542, type: !4896)
!8832 = !DILocation(line: 2542, column: 58, scope: !8830)
!8833 = !DILocalVariable(name: "count", scope: !8830, file: !3, line: 2544, type: !7)
!8834 = !DILocation(line: 2544, column: 16, scope: !8830)
!8835 = !DILocalVariable(name: "problem_data", scope: !8830, file: !3, line: 2545, type: !813)
!8836 = !DILocation(line: 2545, column: 32, scope: !8830)
!8837 = !DILocation(line: 2546, column: 39, scope: !8830)
!8838 = !DILocation(line: 2546, column: 48, scope: !8830)
!8839 = !DILocation(line: 2546, column: 7, scope: !8830)
!8840 = !DILocalVariable(name: "i", scope: !8830, file: !3, line: 2547, type: !7)
!8841 = !DILocation(line: 2547, column: 16, scope: !8830)
!8842 = !DILocalVariable(name: "dist", scope: !8830, file: !3, line: 2548, type: !7)
!8843 = !DILocation(line: 2548, column: 16, scope: !8830)
!8844 = !DILocation(line: 2550, column: 11, scope: !8830)
!8845 = !DILocation(line: 2550, column: 9, scope: !8830)
!8846 = !DILocation(line: 2551, column: 7, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8830, file: !3, line: 2551, column: 7)
!8848 = !DILocation(line: 2551, column: 13, scope: !8847)
!8849 = !DILocation(line: 2551, column: 7, scope: !8830)
!8850 = !DILocation(line: 2552, column: 5, scope: !8847)
!8851 = !DILocation(line: 2553, column: 12, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8847, file: !3, line: 2553, column: 12)
!8853 = !DILocation(line: 2553, column: 18, scope: !8852)
!8854 = !DILocation(line: 2553, column: 12, scope: !8847)
!8855 = !DILocalVariable(name: "m0", scope: !8856, file: !3, line: 2555, type: !1955)
!8856 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 2554, column: 5)
!8857 = !DILocation(line: 2555, column: 29, scope: !8856)
!8858 = !DILocation(line: 2555, column: 34, scope: !8856)
!8859 = !DILocalVariable(name: "m1", scope: !8856, file: !3, line: 2556, type: !1955)
!8860 = !DILocation(line: 2556, column: 29, scope: !8856)
!8861 = !DILocation(line: 2556, column: 34, scope: !8856)
!8862 = !DILocation(line: 2557, column: 26, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8856, file: !3, line: 2557, column: 11)
!8864 = !DILocation(line: 2557, column: 31, scope: !8863)
!8865 = !DILocation(line: 2557, column: 11, scope: !8863)
!8866 = !DILocation(line: 2557, column: 36, scope: !8863)
!8867 = !DILocation(line: 2557, column: 11, scope: !8856)
!8868 = !DILocalVariable(name: "tmp", scope: !8869, file: !3, line: 2559, type: !1955)
!8869 = distinct !DILexicalBlock(scope: !8863, file: !3, line: 2558, column: 9)
!8870 = !DILocation(line: 2559, column: 33, scope: !8869)
!8871 = !DILocation(line: 2559, column: 39, scope: !8869)
!8872 = !DILocation(line: 2561, column: 4, scope: !8869)
!8873 = !DILocation(line: 2563, column: 4, scope: !8869)
!8874 = !DILocation(line: 2564, column: 9, scope: !8869)
!8875 = !DILocation(line: 2565, column: 5, scope: !8856)
!8876 = !DILocation(line: 2568, column: 17, scope: !8852)
!8877 = !DILocation(line: 2568, column: 59, scope: !8852)
!8878 = !DILocation(line: 2568, column: 5, scope: !8852)
!8879 = !DILocation(line: 2575, column: 9, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8830, file: !3, line: 2575, column: 3)
!8881 = !DILocation(line: 2575, column: 8, scope: !8880)
!8882 = !DILocation(line: 2575, column: 13, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8880, file: !3, line: 2575, column: 3)
!8884 = !DILocation(line: 2575, column: 15, scope: !8883)
!8885 = !DILocation(line: 2575, column: 21, scope: !8883)
!8886 = !DILocation(line: 2575, column: 20, scope: !8883)
!8887 = !DILocation(line: 2575, column: 14, scope: !8883)
!8888 = !DILocation(line: 2575, column: 3, scope: !8880)
!8889 = !DILocation(line: 2578, column: 7, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8883, file: !3, line: 2576, column: 5)
!8891 = !DILocation(line: 2578, column: 14, scope: !8890)
!8892 = !DILocation(line: 2578, column: 18, scope: !8890)
!8893 = !DILocation(line: 2578, column: 16, scope: !8890)
!8894 = !DILocation(line: 2578, column: 23, scope: !8890)
!8895 = !DILocation(line: 2578, column: 29, scope: !8890)
!8896 = !DILocation(line: 2578, column: 27, scope: !8890)
!8897 = !DILocation(line: 2579, column: 7, scope: !8890)
!8898 = !DILocation(line: 2579, column: 25, scope: !8890)
!8899 = !DILocation(line: 2580, column: 11, scope: !8890)
!8900 = !DILocation(line: 2579, column: 10, scope: !8890)
!8901 = !DILocation(line: 0, scope: !8890)
!8902 = !DILocation(line: 2583, column: 15, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8890, file: !3, line: 2582, column: 2)
!8904 = !DILocation(line: 2583, column: 29, scope: !8903)
!8905 = !DILocation(line: 2584, column: 8, scope: !8903)
!8906 = !DILocation(line: 2583, column: 4, scope: !8903)
!8907 = !DILocation(line: 2585, column: 8, scope: !8903)
!8908 = distinct !{!8908, !8889, !8909}
!8909 = !DILocation(line: 2586, column: 2, scope: !8890)
!8910 = !DILocation(line: 2588, column: 11, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8890, file: !3, line: 2588, column: 11)
!8912 = !DILocation(line: 2588, column: 16, scope: !8911)
!8913 = !DILocation(line: 2588, column: 19, scope: !8911)
!8914 = !DILocation(line: 2588, column: 23, scope: !8911)
!8915 = !DILocation(line: 2588, column: 21, scope: !8911)
!8916 = !DILocation(line: 2588, column: 28, scope: !8911)
!8917 = !DILocation(line: 2588, column: 34, scope: !8911)
!8918 = !DILocation(line: 2588, column: 32, scope: !8911)
!8919 = !DILocation(line: 2588, column: 11, scope: !8890)
!8920 = !DILocation(line: 2589, column: 2, scope: !8911)
!8921 = !DILocation(line: 2591, column: 5, scope: !8890)
!8922 = !DILocation(line: 2575, column: 28, scope: !8883)
!8923 = !DILocation(line: 2575, column: 3, scope: !8883)
!8924 = distinct !{!8924, !8888, !8925}
!8925 = !DILocation(line: 2591, column: 5, scope: !8880)
!8926 = !DILocation(line: 2593, column: 12, scope: !8830)
!8927 = !DILocation(line: 2593, column: 9, scope: !8830)
!8928 = !DILocation(line: 2594, column: 3, scope: !8830)
!8929 = !DILocation(line: 2595, column: 1, scope: !8830)
!8930 = distinct !DISubprogram(name: "VEC_df_ref_base_length", scope: !3, file: !3, line: 49, type: !8931, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!8931 = !DISubroutineType(types: !8932)
!8932 = !{!7, !7761}
!8933 = !DILocalVariable(name: "vec_", arg: 1, scope: !8930, file: !3, line: 49, type: !7761)
!8934 = !DILocation(line: 49, column: 1, scope: !8930)
!8935 = distinct !DISubprogram(name: "VEC_df_ref_base_index", scope: !3, file: !3, line: 49, type: !8936, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!8936 = !DISubroutineType(types: !8937)
!8937 = !{!920, !7761, !7}
!8938 = !DILocalVariable(name: "vec_", arg: 1, scope: !8935, file: !3, line: 49, type: !7761)
!8939 = !DILocation(line: 49, column: 1, scope: !8935)
!8940 = !DILocalVariable(name: "ix_", arg: 2, scope: !8935, file: !3, line: 49, type: !7)
!8941 = !DILocation(line: 0, scope: !8935)
!8942 = distinct !DISubprogram(name: "df_swap_refs", scope: !3, file: !3, line: 2416, type: !8943, scopeLine: 2417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!8943 = !DISubroutineType(types: !8944)
!8944 = !{null, !4888, !900, !900}
!8945 = !DILocalVariable(name: "ref_vec", arg: 1, scope: !8942, file: !3, line: 2416, type: !4888)
!8946 = !DILocation(line: 2416, column: 35, scope: !8942)
!8947 = !DILocalVariable(name: "i", arg: 2, scope: !8942, file: !3, line: 2416, type: !900)
!8948 = !DILocation(line: 2416, column: 48, scope: !8942)
!8949 = !DILocalVariable(name: "j", arg: 3, scope: !8942, file: !3, line: 2416, type: !900)
!8950 = !DILocation(line: 2416, column: 55, scope: !8942)
!8951 = !DILocalVariable(name: "tmp", scope: !8942, file: !3, line: 2418, type: !920)
!8952 = !DILocation(line: 2418, column: 10, scope: !8942)
!8953 = !DILocation(line: 2418, column: 16, scope: !8942)
!8954 = !DILocation(line: 2419, column: 3, scope: !8942)
!8955 = !DILocation(line: 2420, column: 3, scope: !8942)
!8956 = !DILocation(line: 2421, column: 1, scope: !8942)
!8957 = distinct !DISubprogram(name: "VEC_df_ref_base_address", scope: !3, file: !3, line: 49, type: !8958, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!8958 = !DISubroutineType(types: !8959)
!8959 = !{!919, !8960}
!8960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64)
!8961 = !DILocalVariable(name: "vec_", arg: 1, scope: !8957, file: !3, line: 49, type: !8960)
!8962 = !DILocation(line: 49, column: 1, scope: !8957)
!8963 = distinct !DISubprogram(name: "df_ref_equal_p", scope: !3, file: !3, line: 2316, type: !8964, scopeLine: 2317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!8964 = !DISubroutineType(types: !8965)
!8965 = !{!1099, !920, !920}
!8966 = !DILocalVariable(name: "ref1", arg: 1, scope: !8963, file: !3, line: 2316, type: !920)
!8967 = !DILocation(line: 2316, column: 24, scope: !8963)
!8968 = !DILocalVariable(name: "ref2", arg: 2, scope: !8963, file: !3, line: 2316, type: !920)
!8969 = !DILocation(line: 2316, column: 37, scope: !8963)
!8970 = !DILocation(line: 2318, column: 8, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8963, file: !3, line: 2318, column: 7)
!8972 = !DILocation(line: 2318, column: 7, scope: !8963)
!8973 = !DILocation(line: 2319, column: 5, scope: !8971)
!8974 = !DILocation(line: 2321, column: 7, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8963, file: !3, line: 2321, column: 7)
!8976 = !DILocation(line: 2321, column: 15, scope: !8975)
!8977 = !DILocation(line: 2321, column: 12, scope: !8975)
!8978 = !DILocation(line: 2321, column: 7, scope: !8963)
!8979 = !DILocation(line: 2322, column: 5, scope: !8975)
!8980 = !DILocation(line: 2324, column: 7, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8963, file: !3, line: 2324, column: 7)
!8982 = !DILocation(line: 2324, column: 30, scope: !8981)
!8983 = !DILocation(line: 2324, column: 27, scope: !8981)
!8984 = !DILocation(line: 2325, column: 7, scope: !8981)
!8985 = !DILocation(line: 2325, column: 10, scope: !8981)
!8986 = !DILocation(line: 2325, column: 33, scope: !8981)
!8987 = !DILocation(line: 2325, column: 30, scope: !8981)
!8988 = !DILocation(line: 2326, column: 7, scope: !8981)
!8989 = !DILocation(line: 2326, column: 10, scope: !8981)
!8990 = !DILocation(line: 2326, column: 31, scope: !8981)
!8991 = !DILocation(line: 2326, column: 28, scope: !8981)
!8992 = !DILocation(line: 2327, column: 7, scope: !8981)
!8993 = !DILocation(line: 2327, column: 10, scope: !8981)
!8994 = !DILocation(line: 2327, column: 32, scope: !8981)
!8995 = !DILocation(line: 2327, column: 29, scope: !8981)
!8996 = !DILocation(line: 2328, column: 7, scope: !8981)
!8997 = !DILocation(line: 2328, column: 12, scope: !8981)
!8998 = !DILocation(line: 2328, column: 32, scope: !8981)
!8999 = !DILocation(line: 2329, column: 8, scope: !8981)
!9000 = !DILocation(line: 2329, column: 28, scope: !8981)
!9001 = !DILocation(line: 2329, column: 4, scope: !8981)
!9002 = !DILocation(line: 2330, column: 7, scope: !8981)
!9003 = !DILocation(line: 2330, column: 10, scope: !8981)
!9004 = !DILocation(line: 2330, column: 30, scope: !8981)
!9005 = !DILocation(line: 2330, column: 27, scope: !8981)
!9006 = !DILocation(line: 2331, column: 7, scope: !8981)
!9007 = !DILocation(line: 2331, column: 10, scope: !8981)
!9008 = !DILocation(line: 2331, column: 37, scope: !8981)
!9009 = !DILocation(line: 2331, column: 34, scope: !8981)
!9010 = !DILocation(line: 2324, column: 7, scope: !8963)
!9011 = !DILocation(line: 2332, column: 5, scope: !8981)
!9012 = !DILocation(line: 2334, column: 11, scope: !8963)
!9013 = !DILocation(line: 2334, column: 3, scope: !8963)
!9014 = !DILocation(line: 2338, column: 7, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !8963, file: !3, line: 2335, column: 5)
!9016 = !DILocation(line: 2341, column: 12, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9015, file: !3, line: 2341, column: 11)
!9018 = !DILocation(line: 2341, column: 44, scope: !9017)
!9019 = !DILocation(line: 2341, column: 41, scope: !9017)
!9020 = !DILocation(line: 2342, column: 4, scope: !9017)
!9021 = !DILocation(line: 2342, column: 8, scope: !9017)
!9022 = !DILocation(line: 2342, column: 39, scope: !9017)
!9023 = !DILocation(line: 2342, column: 36, scope: !9017)
!9024 = !DILocation(line: 2343, column: 4, scope: !9017)
!9025 = !DILocation(line: 2343, column: 8, scope: !9017)
!9026 = !DILocation(line: 2343, column: 38, scope: !9017)
!9027 = !DILocation(line: 2343, column: 35, scope: !9017)
!9028 = !DILocation(line: 2341, column: 11, scope: !9015)
!9029 = !DILocation(line: 2344, column: 2, scope: !9017)
!9030 = !DILocation(line: 2343, column: 64, scope: !9017)
!9031 = !DILocation(line: 2348, column: 14, scope: !9015)
!9032 = !DILocation(line: 2348, column: 35, scope: !9015)
!9033 = !DILocation(line: 2348, column: 32, scope: !9015)
!9034 = !DILocation(line: 2348, column: 7, scope: !9015)
!9035 = !DILocation(line: 2351, column: 7, scope: !9015)
!9036 = !DILocation(line: 2352, column: 5, scope: !9015)
!9037 = !DILocation(line: 2353, column: 3, scope: !8963)
!9038 = !DILocation(line: 2354, column: 1, scope: !8963)
!9039 = distinct !DISubprogram(name: "VEC_df_ref_base_replace", scope: !3, file: !3, line: 49, type: !9040, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9040 = !DISubroutineType(types: !9041)
!9041 = !{!920, !8960, !7, !920}
!9042 = !DILocalVariable(name: "vec_", arg: 1, scope: !9039, file: !3, line: 49, type: !8960)
!9043 = !DILocation(line: 49, column: 1, scope: !9039)
!9044 = !DILocalVariable(name: "ix_", arg: 2, scope: !9039, file: !3, line: 49, type: !7)
!9045 = !DILocalVariable(name: "obj_", arg: 3, scope: !9039, file: !3, line: 49, type: !920)
!9046 = !DILocalVariable(name: "old_obj_", scope: !9039, file: !3, line: 49, type: !920)
!9047 = distinct !DISubprogram(name: "VEC_df_ref_base_truncate", scope: !3, file: !3, line: 49, type: !9048, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9048 = !DISubroutineType(types: !9049)
!9049 = !{null, !8960, !7}
!9050 = !DILocalVariable(name: "vec_", arg: 1, scope: !9047, file: !3, line: 49, type: !8960)
!9051 = !DILocation(line: 49, column: 1, scope: !9047)
!9052 = !DILocalVariable(name: "size_", arg: 2, scope: !9047, file: !3, line: 49, type: !7)
!9053 = !DILocation(line: 49, column: 1, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9047, file: !3, line: 49, column: 1)
!9055 = distinct !DISubprogram(name: "VEC_df_mw_hardreg_ptr_base_index", scope: !3, file: !3, line: 56, type: !9056, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9056 = !DISubroutineType(types: !9057)
!9057 = !{!2021, !6624, !7}
!9058 = !DILocalVariable(name: "vec_", arg: 1, scope: !9055, file: !3, line: 56, type: !6624)
!9059 = !DILocation(line: 56, column: 1, scope: !9055)
!9060 = !DILocalVariable(name: "ix_", arg: 2, scope: !9055, file: !3, line: 56, type: !7)
!9061 = !DILocation(line: 0, scope: !9055)
!9062 = distinct !DISubprogram(name: "VEC_df_mw_hardreg_ptr_base_replace", scope: !3, file: !3, line: 56, type: !9063, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9063 = !DISubroutineType(types: !9064)
!9064 = !{!2021, !6632, !7, !2021}
!9065 = !DILocalVariable(name: "vec_", arg: 1, scope: !9062, file: !3, line: 56, type: !6632)
!9066 = !DILocation(line: 56, column: 1, scope: !9062)
!9067 = !DILocalVariable(name: "ix_", arg: 2, scope: !9062, file: !3, line: 56, type: !7)
!9068 = !DILocalVariable(name: "obj_", arg: 3, scope: !9062, file: !3, line: 56, type: !2021)
!9069 = !DILocalVariable(name: "old_obj_", scope: !9062, file: !3, line: 56, type: !2021)
!9070 = distinct !DISubprogram(name: "df_mw_equal_p", scope: !3, file: !3, line: 2496, type: !9071, scopeLine: 2497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9071 = !DISubroutineType(types: !9072)
!9072 = !{!1099, !1955, !1955}
!9073 = !DILocalVariable(name: "mw1", arg: 1, scope: !9070, file: !3, line: 2496, type: !1955)
!9074 = !DILocation(line: 2496, column: 38, scope: !9070)
!9075 = !DILocalVariable(name: "mw2", arg: 2, scope: !9070, file: !3, line: 2496, type: !1955)
!9076 = !DILocation(line: 2496, column: 65, scope: !9070)
!9077 = !DILocation(line: 2498, column: 8, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9070, file: !3, line: 2498, column: 7)
!9079 = !DILocation(line: 2498, column: 7, scope: !9070)
!9080 = !DILocation(line: 2499, column: 5, scope: !9078)
!9081 = !DILocation(line: 2500, column: 11, scope: !9070)
!9082 = !DILocation(line: 2500, column: 18, scope: !9070)
!9083 = !DILocation(line: 2500, column: 15, scope: !9070)
!9084 = !DILocation(line: 2500, column: 23, scope: !9070)
!9085 = !DILocation(line: 2501, column: 6, scope: !9070)
!9086 = !DILocation(line: 2501, column: 11, scope: !9070)
!9087 = !DILocation(line: 2501, column: 21, scope: !9070)
!9088 = !DILocation(line: 2501, column: 26, scope: !9070)
!9089 = !DILocation(line: 2501, column: 18, scope: !9070)
!9090 = !DILocation(line: 2502, column: 6, scope: !9070)
!9091 = !DILocation(line: 2502, column: 9, scope: !9070)
!9092 = !DILocation(line: 2502, column: 14, scope: !9070)
!9093 = !DILocation(line: 2502, column: 22, scope: !9070)
!9094 = !DILocation(line: 2502, column: 27, scope: !9070)
!9095 = !DILocation(line: 2502, column: 19, scope: !9070)
!9096 = !DILocation(line: 2503, column: 6, scope: !9070)
!9097 = !DILocation(line: 2503, column: 9, scope: !9070)
!9098 = !DILocation(line: 2503, column: 14, scope: !9070)
!9099 = !DILocation(line: 2503, column: 23, scope: !9070)
!9100 = !DILocation(line: 2503, column: 28, scope: !9070)
!9101 = !DILocation(line: 2503, column: 20, scope: !9070)
!9102 = !DILocation(line: 2504, column: 6, scope: !9070)
!9103 = !DILocation(line: 2504, column: 9, scope: !9070)
!9104 = !DILocation(line: 2504, column: 14, scope: !9070)
!9105 = !DILocation(line: 2504, column: 29, scope: !9070)
!9106 = !DILocation(line: 2504, column: 34, scope: !9070)
!9107 = !DILocation(line: 2504, column: 26, scope: !9070)
!9108 = !DILocation(line: 2505, column: 6, scope: !9070)
!9109 = !DILocation(line: 2505, column: 9, scope: !9070)
!9110 = !DILocation(line: 2505, column: 14, scope: !9070)
!9111 = !DILocation(line: 2505, column: 27, scope: !9070)
!9112 = !DILocation(line: 2505, column: 32, scope: !9070)
!9113 = !DILocation(line: 2505, column: 24, scope: !9070)
!9114 = !DILocation(line: 0, scope: !9070)
!9115 = !DILocation(line: 2500, column: 10, scope: !9070)
!9116 = !DILocation(line: 2500, column: 3, scope: !9070)
!9117 = !DILocation(line: 2506, column: 1, scope: !9070)
!9118 = distinct !DISubprogram(name: "VEC_df_mw_hardreg_ptr_base_truncate", scope: !3, file: !3, line: 56, type: !9119, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9119 = !DISubroutineType(types: !9120)
!9120 = !{null, !6632, !7}
!9121 = !DILocalVariable(name: "vec_", arg: 1, scope: !9118, file: !3, line: 56, type: !6632)
!9122 = !DILocation(line: 56, column: 1, scope: !9118)
!9123 = !DILocalVariable(name: "size_", arg: 2, scope: !9118, file: !3, line: 56, type: !7)
!9124 = !DILocation(line: 56, column: 1, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9118, file: !3, line: 56, column: 1)
!9126 = distinct !DISubprogram(name: "df_install_refs", scope: !3, file: !3, line: 2663, type: !9127, scopeLine: 2668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9127 = !DISubroutineType(types: !9128)
!9128 = !{!919, !1244, !1997, !1989, !3293, !1099}
!9129 = !DILocalVariable(name: "bb", arg: 1, scope: !9126, file: !3, line: 2663, type: !1244)
!9130 = !DILocation(line: 2663, column: 30, scope: !9126)
!9131 = !DILocalVariable(name: "old_vec", arg: 2, scope: !9126, file: !3, line: 2664, type: !1997)
!9132 = !DILocation(line: 2664, column: 23, scope: !9126)
!9133 = !DILocalVariable(name: "reg_info", arg: 3, scope: !9126, file: !3, line: 2665, type: !1989)
!9134 = !DILocation(line: 2665, column: 25, scope: !9126)
!9135 = !DILocalVariable(name: "ref_info", arg: 4, scope: !9126, file: !3, line: 2666, type: !3293)
!9136 = !DILocation(line: 2666, column: 24, scope: !9126)
!9137 = !DILocalVariable(name: "is_notes", arg: 5, scope: !9126, file: !3, line: 2667, type: !1099)
!9138 = !DILocation(line: 2667, column: 9, scope: !9126)
!9139 = !DILocalVariable(name: "count", scope: !9126, file: !3, line: 2669, type: !7)
!9140 = !DILocation(line: 2669, column: 16, scope: !9126)
!9141 = !DILocation(line: 2671, column: 11, scope: !9126)
!9142 = !DILocation(line: 2671, column: 9, scope: !9126)
!9143 = !DILocation(line: 2672, column: 7, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9126, file: !3, line: 2672, column: 7)
!9145 = !DILocation(line: 2672, column: 7, scope: !9126)
!9146 = !DILocalVariable(name: "new_vec", scope: !9147, file: !3, line: 2674, type: !919)
!9147 = distinct !DILexicalBlock(scope: !9144, file: !3, line: 2673, column: 5)
!9148 = !DILocation(line: 2674, column: 15, scope: !9147)
!9149 = !DILocation(line: 2674, column: 25, scope: !9147)
!9150 = !DILocalVariable(name: "add_to_table", scope: !9147, file: !3, line: 2675, type: !1099)
!9151 = !DILocation(line: 2675, column: 12, scope: !9147)
!9152 = !DILocalVariable(name: "this_ref", scope: !9147, file: !3, line: 2676, type: !920)
!9153 = !DILocation(line: 2676, column: 14, scope: !9147)
!9154 = !DILocalVariable(name: "ix", scope: !9147, file: !3, line: 2677, type: !7)
!9155 = !DILocation(line: 2677, column: 20, scope: !9147)
!9156 = !DILocation(line: 2679, column: 15, scope: !9147)
!9157 = !DILocation(line: 2679, column: 25, scope: !9147)
!9158 = !DILocation(line: 2679, column: 7, scope: !9147)
!9159 = !DILocation(line: 2684, column: 4, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9147, file: !3, line: 2680, column: 2)
!9161 = !DILocation(line: 2684, column: 14, scope: !9160)
!9162 = !DILocation(line: 2684, column: 24, scope: !9160)
!9163 = !DILocation(line: 2685, column: 17, scope: !9160)
!9164 = !DILocation(line: 2686, column: 4, scope: !9160)
!9165 = !DILocation(line: 2690, column: 4, scope: !9160)
!9166 = !DILocation(line: 2690, column: 14, scope: !9160)
!9167 = !DILocation(line: 2690, column: 24, scope: !9160)
!9168 = !DILocation(line: 2691, column: 20, scope: !9160)
!9169 = !DILocation(line: 2691, column: 19, scope: !9160)
!9170 = !DILocation(line: 2691, column: 17, scope: !9160)
!9171 = !DILocation(line: 2692, column: 4, scope: !9160)
!9172 = !DILocation(line: 2694, column: 17, scope: !9160)
!9173 = !DILocation(line: 2695, column: 4, scope: !9160)
!9174 = !DILocation(line: 2699, column: 11, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9147, file: !3, line: 2699, column: 11)
!9176 = !DILocation(line: 2699, column: 24, scope: !9175)
!9177 = !DILocation(line: 2699, column: 27, scope: !9175)
!9178 = !DILocation(line: 2699, column: 31, scope: !9175)
!9179 = !DILocation(line: 2699, column: 11, scope: !9147)
!9180 = !DILocation(line: 2700, column: 31, scope: !9175)
!9181 = !DILocation(line: 2700, column: 35, scope: !9175)
!9182 = !DILocation(line: 2700, column: 54, scope: !9175)
!9183 = !DILocation(line: 2700, column: 58, scope: !9175)
!9184 = !DILocation(line: 2700, column: 17, scope: !9175)
!9185 = !DILocation(line: 2700, column: 15, scope: !9175)
!9186 = !DILocation(line: 2700, column: 2, scope: !9175)
!9187 = !DILocation(line: 2702, column: 15, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9147, file: !3, line: 2702, column: 7)
!9189 = !DILocation(line: 2702, column: 12, scope: !9188)
!9190 = !DILocation(line: 2702, column: 20, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9188, file: !3, line: 2702, column: 7)
!9192 = !DILocation(line: 2702, column: 7, scope: !9188)
!9193 = !DILocation(line: 2704, column: 18, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9191, file: !3, line: 2703, column: 2)
!9195 = !DILocation(line: 2704, column: 4, scope: !9194)
!9196 = !DILocation(line: 2704, column: 12, scope: !9194)
!9197 = !DILocation(line: 2704, column: 16, scope: !9194)
!9198 = !DILocation(line: 2705, column: 20, scope: !9194)
!9199 = !DILocation(line: 2705, column: 30, scope: !9194)
!9200 = !DILocation(line: 2705, column: 39, scope: !9194)
!9201 = !DILocation(line: 2706, column: 6, scope: !9194)
!9202 = !DILocation(line: 2706, column: 16, scope: !9194)
!9203 = !DILocation(line: 2705, column: 4, scope: !9194)
!9204 = !DILocation(line: 2707, column: 2, scope: !9194)
!9205 = !DILocation(line: 2702, column: 65, scope: !9191)
!9206 = !DILocation(line: 2702, column: 7, scope: !9191)
!9207 = distinct !{!9207, !9192, !9208}
!9208 = !DILocation(line: 2707, column: 2, scope: !9188)
!9209 = !DILocation(line: 2709, column: 7, scope: !9147)
!9210 = !DILocation(line: 2709, column: 15, scope: !9147)
!9211 = !DILocation(line: 2709, column: 22, scope: !9147)
!9212 = !DILocation(line: 2710, column: 14, scope: !9147)
!9213 = !DILocation(line: 2710, column: 7, scope: !9147)
!9214 = !DILocation(line: 2713, column: 5, scope: !9144)
!9215 = !DILocation(line: 2714, column: 1, scope: !9126)
!9216 = distinct !DISubprogram(name: "df_install_mws", scope: !3, file: !3, line: 2721, type: !9217, scopeLine: 2722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9217 = !DISubroutineType(types: !9218)
!9218 = !{!1954, !2009}
!9219 = !DILocalVariable(name: "old_vec", arg: 1, scope: !9216, file: !3, line: 2721, type: !2009)
!9220 = !DILocation(line: 2721, column: 47, scope: !9216)
!9221 = !DILocalVariable(name: "count", scope: !9216, file: !3, line: 2723, type: !7)
!9222 = !DILocation(line: 2723, column: 16, scope: !9216)
!9223 = !DILocation(line: 2725, column: 11, scope: !9216)
!9224 = !DILocation(line: 2725, column: 9, scope: !9216)
!9225 = !DILocation(line: 2726, column: 7, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9216, file: !3, line: 2726, column: 7)
!9227 = !DILocation(line: 2726, column: 7, scope: !9216)
!9228 = !DILocalVariable(name: "new_vec", scope: !9229, file: !3, line: 2728, type: !1954)
!9229 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 2727, column: 5)
!9230 = !DILocation(line: 2728, column: 30, scope: !9229)
!9231 = !DILocation(line: 2729, column: 4, scope: !9229)
!9232 = !DILocation(line: 2730, column: 15, scope: !9229)
!9233 = !DILocation(line: 2730, column: 7, scope: !9229)
!9234 = !DILocation(line: 2730, column: 24, scope: !9229)
!9235 = !DILocation(line: 2731, column: 41, scope: !9229)
!9236 = !DILocation(line: 2731, column: 39, scope: !9229)
!9237 = !DILocation(line: 2732, column: 7, scope: !9229)
!9238 = !DILocation(line: 2732, column: 15, scope: !9229)
!9239 = !DILocation(line: 2732, column: 22, scope: !9229)
!9240 = !DILocation(line: 2733, column: 14, scope: !9229)
!9241 = !DILocation(line: 2733, column: 7, scope: !9229)
!9242 = !DILocation(line: 2736, column: 5, scope: !9226)
!9243 = !DILocation(line: 2737, column: 1, scope: !9216)
!9244 = distinct !DISubprogram(name: "rhs_regno", scope: !418, file: !418, line: 1051, type: !9245, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9245 = !DISubroutineType(types: !9246)
!9246 = !{!7, !9247}
!9247 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !932, line: 51, baseType: !9248)
!9248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9249, size: 64)
!9249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !934)
!9250 = !DILocalVariable(name: "x", arg: 1, scope: !9244, file: !418, line: 1051, type: !9247)
!9251 = !DILocation(line: 1051, column: 22, scope: !9244)
!9252 = !DILocation(line: 1053, column: 10, scope: !9244)
!9253 = !DILocation(line: 1053, column: 3, scope: !9244)
!9254 = distinct !DISubprogram(name: "VEC_df_ref_stack_safe_push", scope: !3, file: !3, line: 50, type: !9255, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9255 = !DISubroutineType(types: !9256)
!9256 = !{!919, !4888, !920}
!9257 = !DILocalVariable(name: "vec_", arg: 1, scope: !9254, file: !3, line: 50, type: !4888)
!9258 = !DILocation(line: 50, column: 1, scope: !9254)
!9259 = !DILocalVariable(name: "obj_", arg: 2, scope: !9254, file: !3, line: 50, type: !920)
!9260 = distinct !DISubprogram(name: "VEC_df_ref_stack_reserve", scope: !3, file: !3, line: 50, type: !9261, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9261 = !DISubroutineType(types: !9262)
!9262 = !{!900, !4888, !900}
!9263 = !DILocalVariable(name: "vec_", arg: 1, scope: !9260, file: !3, line: 50, type: !4888)
!9264 = !DILocation(line: 50, column: 1, scope: !9260)
!9265 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9260, file: !3, line: 50, type: !900)
!9266 = !DILocalVariable(name: "extend", scope: !9260, file: !3, line: 50, type: !900)
!9267 = !DILocation(line: 50, column: 1, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9260, file: !3, line: 50, column: 1)
!9269 = distinct !DISubprogram(name: "VEC_df_ref_base_quick_push", scope: !3, file: !3, line: 49, type: !9270, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9270 = !DISubroutineType(types: !9271)
!9271 = !{!919, !8960, !920}
!9272 = !DILocalVariable(name: "vec_", arg: 1, scope: !9269, file: !3, line: 49, type: !8960)
!9273 = !DILocation(line: 49, column: 1, scope: !9269)
!9274 = !DILocalVariable(name: "obj_", arg: 2, scope: !9269, file: !3, line: 49, type: !920)
!9275 = !DILocalVariable(name: "slot_", scope: !9269, file: !3, line: 49, type: !919)
!9276 = distinct !DISubprogram(name: "VEC_df_ref_base_space", scope: !3, file: !3, line: 49, type: !9277, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9277 = !DISubroutineType(types: !9278)
!9278 = !{!900, !8960, !900}
!9279 = !DILocalVariable(name: "vec_", arg: 1, scope: !9276, file: !3, line: 49, type: !8960)
!9280 = !DILocation(line: 49, column: 1, scope: !9276)
!9281 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9276, file: !3, line: 49, type: !900)
!9282 = distinct !DISubprogram(name: "df_ref_record", scope: !3, file: !3, line: 2908, type: !9283, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9283 = !DISubroutineType(types: !9284)
!9284 = !{null, !393, !3489, !931, !1975, !1244, !1946, !387, !900, !900, !900, !5}
!9285 = !DILocalVariable(name: "cl", arg: 1, scope: !9282, file: !3, line: 2908, type: !393)
!9286 = !DILocation(line: 2908, column: 34, scope: !9282)
!9287 = !DILocalVariable(name: "collection_rec", arg: 2, scope: !9282, file: !3, line: 2909, type: !3489)
!9288 = !DILocation(line: 2909, column: 35, scope: !9282)
!9289 = !DILocalVariable(name: "reg", arg: 3, scope: !9282, file: !3, line: 2910, type: !931)
!9290 = !DILocation(line: 2910, column: 20, scope: !9282)
!9291 = !DILocalVariable(name: "loc", arg: 4, scope: !9282, file: !3, line: 2910, type: !1975)
!9292 = !DILocation(line: 2910, column: 30, scope: !9282)
!9293 = !DILocalVariable(name: "bb", arg: 5, scope: !9282, file: !3, line: 2911, type: !1244)
!9294 = !DILocation(line: 2911, column: 21, scope: !9282)
!9295 = !DILocalVariable(name: "insn_info", arg: 6, scope: !9282, file: !3, line: 2911, type: !1946)
!9296 = !DILocation(line: 2911, column: 46, scope: !9282)
!9297 = !DILocalVariable(name: "ref_type", arg: 7, scope: !9282, file: !3, line: 2912, type: !387)
!9298 = !DILocation(line: 2912, column: 26, scope: !9282)
!9299 = !DILocalVariable(name: "ref_flags", arg: 8, scope: !9282, file: !3, line: 2913, type: !900)
!9300 = !DILocation(line: 2913, column: 13, scope: !9282)
!9301 = !DILocalVariable(name: "width", arg: 9, scope: !9282, file: !3, line: 2914, type: !900)
!9302 = !DILocation(line: 2914, column: 13, scope: !9282)
!9303 = !DILocalVariable(name: "offset", arg: 10, scope: !9282, file: !3, line: 2914, type: !900)
!9304 = !DILocation(line: 2914, column: 24, scope: !9282)
!9305 = !DILocalVariable(name: "mode", arg: 11, scope: !9282, file: !3, line: 2914, type: !5)
!9306 = !DILocation(line: 2914, column: 50, scope: !9282)
!9307 = !DILocalVariable(name: "regno", scope: !9282, file: !3, line: 2916, type: !7)
!9308 = !DILocation(line: 2916, column: 16, scope: !9282)
!9309 = !DILocation(line: 2918, column: 3, scope: !9282)
!9310 = !DILocation(line: 2920, column: 11, scope: !9282)
!9311 = !DILocation(line: 2920, column: 9, scope: !9282)
!9312 = !DILocation(line: 2921, column: 7, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 2921, column: 7)
!9314 = !DILocation(line: 2921, column: 13, scope: !9313)
!9315 = !DILocation(line: 2921, column: 7, scope: !9282)
!9316 = !DILocalVariable(name: "hardreg", scope: !9317, file: !3, line: 2923, type: !1955)
!9317 = distinct !DILexicalBlock(scope: !9313, file: !3, line: 2922, column: 5)
!9318 = !DILocation(line: 2923, column: 29, scope: !9317)
!9319 = !DILocalVariable(name: "problem_data", scope: !9317, file: !3, line: 2924, type: !813)
!9320 = !DILocation(line: 2924, column: 36, scope: !9317)
!9321 = !DILocation(line: 2925, column: 43, scope: !9317)
!9322 = !DILocation(line: 2925, column: 52, scope: !9317)
!9323 = !DILocation(line: 2925, column: 11, scope: !9317)
!9324 = !DILocalVariable(name: "i", scope: !9317, file: !3, line: 2926, type: !7)
!9325 = !DILocation(line: 2926, column: 20, scope: !9317)
!9326 = !DILocalVariable(name: "endregno", scope: !9317, file: !3, line: 2927, type: !7)
!9327 = !DILocation(line: 2927, column: 20, scope: !9317)
!9328 = !DILocalVariable(name: "ref", scope: !9317, file: !3, line: 2928, type: !920)
!9329 = !DILocation(line: 2928, column: 14, scope: !9317)
!9330 = !DILocation(line: 2930, column: 11, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 2930, column: 11)
!9332 = !DILocation(line: 2930, column: 26, scope: !9331)
!9333 = !DILocation(line: 2930, column: 11, scope: !9317)
!9334 = !DILocation(line: 2932, column: 34, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9331, file: !3, line: 2931, column: 2)
!9336 = !DILocation(line: 2932, column: 41, scope: !9335)
!9337 = !DILocation(line: 2933, column: 6, scope: !9335)
!9338 = !DILocation(line: 2933, column: 25, scope: !9335)
!9339 = !DILocation(line: 2932, column: 13, scope: !9335)
!9340 = !DILocation(line: 2932, column: 10, scope: !9335)
!9341 = !DILocation(line: 2934, column: 15, scope: !9335)
!9342 = !DILocation(line: 2934, column: 37, scope: !9335)
!9343 = !DILocation(line: 2934, column: 23, scope: !9335)
!9344 = !DILocation(line: 2934, column: 21, scope: !9335)
!9345 = !DILocation(line: 2934, column: 13, scope: !9335)
!9346 = !DILocation(line: 2935, column: 2, scope: !9335)
!9347 = !DILocation(line: 2937, column: 13, scope: !9331)
!9348 = !DILocation(line: 2937, column: 11, scope: !9331)
!9349 = !DILocation(line: 2942, column: 12, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 2942, column: 11)
!9351 = !DILocation(line: 2942, column: 24, scope: !9350)
!9352 = !DILocation(line: 2942, column: 30, scope: !9350)
!9353 = !DILocation(line: 2942, column: 21, scope: !9350)
!9354 = !DILocation(line: 2942, column: 35, scope: !9350)
!9355 = !DILocation(line: 2942, column: 38, scope: !9350)
!9356 = !DILocation(line: 2942, column: 11, scope: !9317)
!9357 = !DILocation(line: 2946, column: 8, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9359, file: !3, line: 2946, column: 8)
!9359 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 2943, column: 2)
!9360 = !DILocation(line: 2946, column: 23, scope: !9358)
!9361 = !DILocation(line: 2946, column: 8, scope: !9359)
!9362 = !DILocation(line: 2947, column: 16, scope: !9358)
!9363 = !DILocation(line: 2947, column: 6, scope: !9358)
!9364 = !DILocation(line: 2948, column: 14, scope: !9359)
!9365 = !DILocation(line: 2950, column: 51, scope: !9359)
!9366 = !DILocation(line: 2950, column: 65, scope: !9359)
!9367 = !DILocation(line: 2950, column: 39, scope: !9359)
!9368 = !DILocation(line: 2950, column: 14, scope: !9359)
!9369 = !DILocation(line: 2950, column: 12, scope: !9359)
!9370 = !DILocation(line: 2951, column: 20, scope: !9359)
!9371 = !DILocation(line: 2951, column: 4, scope: !9359)
!9372 = !DILocation(line: 2951, column: 13, scope: !9359)
!9373 = !DILocation(line: 2951, column: 18, scope: !9359)
!9374 = !DILocation(line: 2952, column: 21, scope: !9359)
!9375 = !DILocation(line: 2952, column: 4, scope: !9359)
!9376 = !DILocation(line: 2952, column: 13, scope: !9359)
!9377 = !DILocation(line: 2952, column: 19, scope: !9359)
!9378 = !DILocation(line: 2953, column: 22, scope: !9359)
!9379 = !DILocation(line: 2953, column: 4, scope: !9359)
!9380 = !DILocation(line: 2953, column: 13, scope: !9359)
!9381 = !DILocation(line: 2953, column: 20, scope: !9359)
!9382 = !DILocation(line: 2954, column: 27, scope: !9359)
!9383 = !DILocation(line: 2954, column: 4, scope: !9359)
!9384 = !DILocation(line: 2954, column: 13, scope: !9359)
!9385 = !DILocation(line: 2954, column: 25, scope: !9359)
!9386 = !DILocation(line: 2955, column: 25, scope: !9359)
!9387 = !DILocation(line: 2955, column: 34, scope: !9359)
!9388 = !DILocation(line: 2955, column: 4, scope: !9359)
!9389 = !DILocation(line: 2955, column: 13, scope: !9359)
!9390 = !DILocation(line: 2955, column: 23, scope: !9359)
!9391 = !DILocation(line: 2956, column: 24, scope: !9359)
!9392 = !DILocation(line: 2956, column: 28, scope: !9359)
!9393 = !DILocation(line: 2956, column: 37, scope: !9359)
!9394 = !DILocation(line: 2956, column: 4, scope: !9359)
!9395 = !DILocation(line: 2956, column: 13, scope: !9359)
!9396 = !DILocation(line: 2956, column: 22, scope: !9359)
!9397 = !DILocation(line: 2957, column: 4, scope: !9359)
!9398 = !DILocation(line: 2959, column: 2, scope: !9359)
!9399 = !DILocation(line: 2961, column: 16, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 2961, column: 7)
!9401 = !DILocation(line: 2961, column: 14, scope: !9400)
!9402 = !DILocation(line: 2961, column: 12, scope: !9400)
!9403 = !DILocation(line: 2961, column: 23, scope: !9404)
!9404 = distinct !DILexicalBlock(scope: !9400, file: !3, line: 2961, column: 7)
!9405 = !DILocation(line: 2961, column: 27, scope: !9404)
!9406 = !DILocation(line: 2961, column: 25, scope: !9404)
!9407 = !DILocation(line: 2961, column: 7, scope: !9400)
!9408 = !DILocation(line: 2963, column: 35, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9404, file: !3, line: 2962, column: 2)
!9410 = !DILocation(line: 2963, column: 39, scope: !9409)
!9411 = !DILocation(line: 2963, column: 55, scope: !9409)
!9412 = !DILocation(line: 2963, column: 69, scope: !9409)
!9413 = !DILocation(line: 2963, column: 73, scope: !9409)
!9414 = !DILocation(line: 2964, column: 7, scope: !9409)
!9415 = !DILocation(line: 2964, column: 11, scope: !9409)
!9416 = !DILocation(line: 2964, column: 22, scope: !9409)
!9417 = !DILocation(line: 2964, column: 32, scope: !9409)
!9418 = !DILocation(line: 2965, column: 7, scope: !9409)
!9419 = !DILocation(line: 2965, column: 14, scope: !9409)
!9420 = !DILocation(line: 2965, column: 22, scope: !9409)
!9421 = !DILocation(line: 2963, column: 10, scope: !9409)
!9422 = !DILocation(line: 2963, column: 8, scope: !9409)
!9423 = !DILocation(line: 2967, column: 11, scope: !9409)
!9424 = !DILocation(line: 2968, column: 2, scope: !9409)
!9425 = !DILocation(line: 2961, column: 38, scope: !9404)
!9426 = !DILocation(line: 2961, column: 7, scope: !9404)
!9427 = distinct !{!9427, !9407, !9428}
!9428 = !DILocation(line: 2968, column: 2, scope: !9400)
!9429 = !DILocation(line: 2969, column: 5, scope: !9317)
!9430 = !DILocation(line: 2972, column: 32, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9313, file: !3, line: 2971, column: 5)
!9432 = !DILocation(line: 2972, column: 36, scope: !9431)
!9433 = !DILocation(line: 2972, column: 52, scope: !9431)
!9434 = !DILocation(line: 2972, column: 57, scope: !9431)
!9435 = !DILocation(line: 2972, column: 62, scope: !9431)
!9436 = !DILocation(line: 2972, column: 66, scope: !9431)
!9437 = !DILocation(line: 2973, column: 11, scope: !9431)
!9438 = !DILocation(line: 2973, column: 21, scope: !9431)
!9439 = !DILocation(line: 2973, column: 32, scope: !9431)
!9440 = !DILocation(line: 2973, column: 39, scope: !9431)
!9441 = !DILocation(line: 2973, column: 47, scope: !9431)
!9442 = !DILocation(line: 2972, column: 7, scope: !9431)
!9443 = !DILocation(line: 2975, column: 1, scope: !9282)
!9444 = distinct !DISubprogram(name: "end_hard_regno", scope: !9445, file: !9445, line: 290, type: !9446, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9445 = !DIFile(filename: "./regs.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!9446 = !DISubroutineType(types: !9447)
!9447 = !{!7, !5, !7}
!9448 = !DILocalVariable(name: "mode", arg: 1, scope: !9444, file: !9445, line: 290, type: !5)
!9449 = !DILocation(line: 290, column: 35, scope: !9444)
!9450 = !DILocalVariable(name: "regno", arg: 2, scope: !9444, file: !9445, line: 290, type: !7)
!9451 = !DILocation(line: 290, column: 54, scope: !9444)
!9452 = !DILocation(line: 292, column: 10, scope: !9444)
!9453 = !DILocation(line: 292, column: 35, scope: !9444)
!9454 = !DILocation(line: 292, column: 18, scope: !9444)
!9455 = !DILocation(line: 292, column: 48, scope: !9444)
!9456 = !DILocation(line: 292, column: 16, scope: !9444)
!9457 = !DILocation(line: 292, column: 3, scope: !9444)
!9458 = distinct !DISubprogram(name: "VEC_df_mw_hardreg_ptr_stack_safe_push", scope: !3, file: !3, line: 57, type: !9459, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9459 = !DISubroutineType(types: !9460)
!9460 = !{!6631, !4896, !2021}
!9461 = !DILocalVariable(name: "vec_", arg: 1, scope: !9458, file: !3, line: 57, type: !4896)
!9462 = !DILocation(line: 57, column: 1, scope: !9458)
!9463 = !DILocalVariable(name: "obj_", arg: 2, scope: !9458, file: !3, line: 57, type: !2021)
!9464 = distinct !DISubprogram(name: "VEC_df_mw_hardreg_ptr_stack_reserve", scope: !3, file: !3, line: 57, type: !9465, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9465 = !DISubroutineType(types: !9466)
!9466 = !{!900, !4896, !900}
!9467 = !DILocalVariable(name: "vec_", arg: 1, scope: !9464, file: !3, line: 57, type: !4896)
!9468 = !DILocation(line: 57, column: 1, scope: !9464)
!9469 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9464, file: !3, line: 57, type: !900)
!9470 = !DILocalVariable(name: "extend", scope: !9464, file: !3, line: 57, type: !900)
!9471 = !DILocation(line: 57, column: 1, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9464, file: !3, line: 57, column: 1)
!9473 = distinct !DISubprogram(name: "VEC_df_mw_hardreg_ptr_base_quick_push", scope: !3, file: !3, line: 56, type: !9474, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9474 = !DISubroutineType(types: !9475)
!9475 = !{!6631, !6632, !2021}
!9476 = !DILocalVariable(name: "vec_", arg: 1, scope: !9473, file: !3, line: 56, type: !6632)
!9477 = !DILocation(line: 56, column: 1, scope: !9473)
!9478 = !DILocalVariable(name: "obj_", arg: 2, scope: !9473, file: !3, line: 56, type: !2021)
!9479 = !DILocalVariable(name: "slot_", scope: !9473, file: !3, line: 56, type: !6631)
!9480 = distinct !DISubprogram(name: "VEC_df_mw_hardreg_ptr_base_space", scope: !3, file: !3, line: 56, type: !9481, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9481 = !DISubroutineType(types: !9482)
!9482 = !{!900, !6632, !900}
!9483 = !DILocalVariable(name: "vec_", arg: 1, scope: !9480, file: !3, line: 56, type: !6632)
!9484 = !DILocation(line: 56, column: 1, scope: !9480)
!9485 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9480, file: !3, line: 56, type: !900)
!9486 = distinct !DISubprogram(name: "df_defs_record", scope: !3, file: !3, line: 3094, type: !9487, scopeLine: 3097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9487 = !DISubroutineType(types: !9488)
!9488 = !{null, !3489, !931, !1244, !1946, !900}
!9489 = !DILocalVariable(name: "collection_rec", arg: 1, scope: !9486, file: !3, line: 3094, type: !3489)
!9490 = !DILocation(line: 3094, column: 43, scope: !9486)
!9491 = !DILocalVariable(name: "x", arg: 2, scope: !9486, file: !3, line: 3095, type: !931)
!9492 = !DILocation(line: 3095, column: 21, scope: !9486)
!9493 = !DILocalVariable(name: "bb", arg: 3, scope: !9486, file: !3, line: 3095, type: !1244)
!9494 = !DILocation(line: 3095, column: 36, scope: !9486)
!9495 = !DILocalVariable(name: "insn_info", arg: 4, scope: !9486, file: !3, line: 3095, type: !1946)
!9496 = !DILocation(line: 3095, column: 61, scope: !9486)
!9497 = !DILocalVariable(name: "flags", arg: 5, scope: !9486, file: !3, line: 3096, type: !900)
!9498 = !DILocation(line: 3096, column: 7, scope: !9486)
!9499 = !DILocalVariable(name: "code", scope: !9486, file: !3, line: 3098, type: !417)
!9500 = !DILocation(line: 3098, column: 12, scope: !9486)
!9501 = !DILocation(line: 3098, column: 19, scope: !9486)
!9502 = !DILocation(line: 3100, column: 7, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9486, file: !3, line: 3100, column: 7)
!9504 = !DILocation(line: 3100, column: 12, scope: !9503)
!9505 = !DILocation(line: 3100, column: 19, scope: !9503)
!9506 = !DILocation(line: 3100, column: 22, scope: !9503)
!9507 = !DILocation(line: 3100, column: 27, scope: !9503)
!9508 = !DILocation(line: 3100, column: 7, scope: !9486)
!9509 = !DILocalVariable(name: "clobber_flags", scope: !9510, file: !3, line: 3103, type: !900)
!9510 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 3101, column: 5)
!9511 = !DILocation(line: 3103, column: 11, scope: !9510)
!9512 = !DILocation(line: 3103, column: 27, scope: !9510)
!9513 = !DILocation(line: 3104, column: 25, scope: !9510)
!9514 = !DILocation(line: 3104, column: 30, scope: !9510)
!9515 = !DILocation(line: 3104, column: 24, scope: !9510)
!9516 = !DILocation(line: 3104, column: 21, scope: !9510)
!9517 = !DILocation(line: 3105, column: 24, scope: !9510)
!9518 = !DILocation(line: 3105, column: 40, scope: !9510)
!9519 = !DILocation(line: 3105, column: 43, scope: !9510)
!9520 = !DILocation(line: 3105, column: 47, scope: !9510)
!9521 = !DILocation(line: 3105, column: 58, scope: !9510)
!9522 = !DILocation(line: 3105, column: 7, scope: !9510)
!9523 = !DILocation(line: 3106, column: 5, scope: !9510)
!9524 = !DILocation(line: 3107, column: 12, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 3107, column: 12)
!9526 = !DILocation(line: 3107, column: 17, scope: !9525)
!9527 = !DILocation(line: 3107, column: 12, scope: !9503)
!9528 = !DILocation(line: 3109, column: 23, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9525, file: !3, line: 3108, column: 5)
!9530 = !DILocation(line: 3109, column: 39, scope: !9529)
!9531 = !DILocation(line: 3110, column: 9, scope: !9529)
!9532 = !DILocation(line: 3110, column: 13, scope: !9529)
!9533 = !DILocation(line: 3109, column: 7, scope: !9529)
!9534 = !DILocation(line: 3111, column: 5, scope: !9529)
!9535 = !DILocation(line: 3112, column: 12, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9525, file: !3, line: 3112, column: 12)
!9537 = !DILocation(line: 3112, column: 17, scope: !9536)
!9538 = !DILocation(line: 3112, column: 12, scope: !9525)
!9539 = !DILocalVariable(name: "i", scope: !9540, file: !3, line: 3114, type: !900)
!9540 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 3113, column: 5)
!9541 = !DILocation(line: 3114, column: 11, scope: !9540)
!9542 = !DILocation(line: 3117, column: 16, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9540, file: !3, line: 3117, column: 7)
!9544 = !DILocation(line: 3117, column: 31, scope: !9543)
!9545 = !DILocation(line: 3117, column: 14, scope: !9543)
!9546 = !DILocation(line: 3117, column: 12, scope: !9543)
!9547 = !DILocation(line: 3117, column: 36, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 3117, column: 7)
!9549 = !DILocation(line: 3117, column: 38, scope: !9548)
!9550 = !DILocation(line: 3117, column: 7, scope: !9543)
!9551 = !DILocation(line: 3118, column: 18, scope: !9548)
!9552 = !DILocation(line: 3118, column: 34, scope: !9548)
!9553 = !DILocation(line: 3118, column: 53, scope: !9548)
!9554 = !DILocation(line: 3118, column: 57, scope: !9548)
!9555 = !DILocation(line: 3118, column: 68, scope: !9548)
!9556 = !DILocation(line: 3118, column: 2, scope: !9548)
!9557 = !DILocation(line: 3117, column: 45, scope: !9548)
!9558 = !DILocation(line: 3117, column: 7, scope: !9548)
!9559 = distinct !{!9559, !9550, !9560}
!9560 = !DILocation(line: 3118, column: 73, scope: !9543)
!9561 = !DILocation(line: 3119, column: 5, scope: !9540)
!9562 = !DILocation(line: 3120, column: 1, scope: !9486)
!9563 = distinct !DISubprogram(name: "df_get_call_refs", scope: !3, file: !3, line: 3466, type: !9564, scopeLine: 3470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9564 = !DISubroutineType(types: !9565)
!9565 = !{null, !3489, !1244, !1946, !900}
!9566 = !DILocalVariable(name: "collection_rec", arg: 1, scope: !9563, file: !3, line: 3466, type: !3489)
!9567 = !DILocation(line: 3466, column: 46, scope: !9563)
!9568 = !DILocalVariable(name: "bb", arg: 2, scope: !9563, file: !3, line: 3467, type: !1244)
!9569 = !DILocation(line: 3467, column: 31, scope: !9563)
!9570 = !DILocalVariable(name: "insn_info", arg: 3, scope: !9563, file: !3, line: 3468, type: !1946)
!9571 = !DILocation(line: 3468, column: 40, scope: !9563)
!9572 = !DILocalVariable(name: "flags", arg: 4, scope: !9563, file: !3, line: 3469, type: !900)
!9573 = !DILocation(line: 3469, column: 23, scope: !9563)
!9574 = !DILocalVariable(name: "note", scope: !9563, file: !3, line: 3471, type: !931)
!9575 = !DILocation(line: 3471, column: 7, scope: !9563)
!9576 = !DILocalVariable(name: "bi", scope: !9563, file: !3, line: 3472, type: !5009)
!9577 = !DILocation(line: 3472, column: 19, scope: !9563)
!9578 = !DILocalVariable(name: "ui", scope: !9563, file: !3, line: 3473, type: !7)
!9579 = !DILocation(line: 3473, column: 16, scope: !9563)
!9580 = !DILocalVariable(name: "is_sibling_call", scope: !9563, file: !3, line: 3474, type: !1099)
!9581 = !DILocation(line: 3474, column: 8, scope: !9563)
!9582 = !DILocalVariable(name: "i", scope: !9563, file: !3, line: 3475, type: !7)
!9583 = !DILocation(line: 3475, column: 16, scope: !9563)
!9584 = !DILocalVariable(name: "def", scope: !9563, file: !3, line: 3476, type: !920)
!9585 = !DILocation(line: 3476, column: 10, scope: !9563)
!9586 = !DILocalVariable(name: "defs_generated", scope: !9563, file: !3, line: 3477, type: !2022)
!9587 = !DILocation(line: 3477, column: 10, scope: !9563)
!9588 = !DILocation(line: 3477, column: 27, scope: !9563)
!9589 = !DILocation(line: 3482, column: 10, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 3482, column: 3)
!9591 = !DILocation(line: 3482, column: 8, scope: !9590)
!9592 = !DILocation(line: 3482, column: 15, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9590, file: !3, line: 3482, column: 3)
!9594 = !DILocation(line: 3482, column: 3, scope: !9590)
!9595 = !DILocation(line: 3483, column: 21, scope: !9593)
!9596 = !DILocation(line: 3483, column: 37, scope: !9593)
!9597 = !DILocation(line: 3483, column: 5, scope: !9593)
!9598 = !DILocation(line: 3482, column: 70, scope: !9593)
!9599 = !DILocation(line: 3482, column: 3, scope: !9593)
!9600 = distinct !{!9600, !9594, !9601}
!9601 = !DILocation(line: 3483, column: 55, scope: !9590)
!9602 = !DILocation(line: 3487, column: 15, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 3487, column: 3)
!9604 = !DILocation(line: 3487, column: 13, scope: !9603)
!9605 = !DILocation(line: 3487, column: 8, scope: !9603)
!9606 = !DILocation(line: 3487, column: 59, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9603, file: !3, line: 3487, column: 3)
!9608 = !DILocation(line: 3487, column: 3, scope: !9603)
!9609 = !DILocation(line: 3490, column: 11, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 3490, column: 11)
!9611 = distinct !DILexicalBlock(scope: !9607, file: !3, line: 3489, column: 5)
!9612 = !DILocation(line: 3490, column: 37, scope: !9610)
!9613 = !DILocation(line: 3490, column: 11, scope: !9611)
!9614 = !DILocation(line: 3491, column: 41, scope: !9610)
!9615 = !DILocation(line: 3491, column: 58, scope: !9610)
!9616 = !DILocation(line: 3492, column: 20, scope: !9610)
!9617 = !DILocation(line: 3492, column: 24, scope: !9610)
!9618 = !DILocation(line: 3492, column: 35, scope: !9610)
!9619 = !DILocation(line: 3491, column: 9, scope: !9610)
!9620 = !DILocation(line: 3494, column: 16, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 3494, column: 16)
!9622 = !DILocation(line: 3494, column: 42, scope: !9621)
!9623 = !DILocation(line: 3494, column: 16, scope: !9610)
!9624 = !DILocation(line: 3496, column: 8, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9626, file: !3, line: 3496, column: 8)
!9626 = distinct !DILexicalBlock(scope: !9621, file: !3, line: 3495, column: 2)
!9627 = !DILocation(line: 3496, column: 8, scope: !9626)
!9628 = !DILocalVariable(name: "regno", scope: !9629, file: !3, line: 3498, type: !7)
!9629 = distinct !DILexicalBlock(scope: !9625, file: !3, line: 3497, column: 6)
!9630 = !DILocation(line: 3498, column: 21, scope: !9629)
!9631 = !DILocation(line: 3498, column: 29, scope: !9629)
!9632 = !DILocation(line: 3499, column: 27, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9629, file: !3, line: 3499, column: 12)
!9634 = !DILocation(line: 3499, column: 43, scope: !9633)
!9635 = !DILocation(line: 3499, column: 13, scope: !9633)
!9636 = !DILocation(line: 3499, column: 12, scope: !9629)
!9637 = !DILocation(line: 3500, column: 19, scope: !9633)
!9638 = !DILocation(line: 3500, column: 35, scope: !9633)
!9639 = !DILocation(line: 3500, column: 51, scope: !9633)
!9640 = !DILocation(line: 3501, column: 5, scope: !9633)
!9641 = !DILocation(line: 3501, column: 16, scope: !9633)
!9642 = !DILocation(line: 3500, column: 3, scope: !9633)
!9643 = !DILocation(line: 3502, column: 6, scope: !9629)
!9644 = !DILocation(line: 3504, column: 38, scope: !9625)
!9645 = !DILocation(line: 3504, column: 55, scope: !9625)
!9646 = !DILocation(line: 3505, column: 31, scope: !9625)
!9647 = !DILocation(line: 3505, column: 35, scope: !9625)
!9648 = !DILocation(line: 3505, column: 46, scope: !9625)
!9649 = !DILocation(line: 3504, column: 6, scope: !9625)
!9650 = !DILocation(line: 3507, column: 2, scope: !9626)
!9651 = !DILocation(line: 3508, column: 5, scope: !9611)
!9652 = !DILocation(line: 3488, column: 15, scope: !9607)
!9653 = !DILocation(line: 3488, column: 13, scope: !9607)
!9654 = !DILocation(line: 3487, column: 3, scope: !9607)
!9655 = distinct !{!9655, !9608, !9656}
!9656 = !DILocation(line: 3508, column: 5, scope: !9603)
!9657 = !DILocation(line: 3511, column: 31, scope: !9563)
!9658 = !DILocation(line: 3511, column: 47, scope: !9563)
!9659 = !DILocation(line: 3512, column: 10, scope: !9563)
!9660 = !DILocation(line: 3512, column: 14, scope: !9563)
!9661 = !DILocation(line: 3513, column: 30, scope: !9563)
!9662 = !DILocation(line: 3513, column: 28, scope: !9563)
!9663 = !DILocation(line: 3511, column: 3, scope: !9563)
!9664 = !DILocation(line: 3518, column: 10, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 3518, column: 3)
!9666 = !DILocation(line: 3518, column: 8, scope: !9665)
!9667 = !DILocation(line: 3518, column: 15, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9665, file: !3, line: 3518, column: 3)
!9669 = !DILocation(line: 3518, column: 17, scope: !9668)
!9670 = !DILocation(line: 3518, column: 3, scope: !9665)
!9671 = !DILocation(line: 3519, column: 21, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9668, file: !3, line: 3519, column: 9)
!9673 = !DILocation(line: 3519, column: 9, scope: !9672)
!9674 = !DILocation(line: 3519, column: 9, scope: !9668)
!9675 = !DILocation(line: 3521, column: 30, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9672, file: !3, line: 3520, column: 7)
!9677 = !DILocation(line: 3521, column: 46, scope: !9676)
!9678 = !DILocation(line: 3521, column: 60, scope: !9676)
!9679 = !DILocation(line: 3522, column: 16, scope: !9676)
!9680 = !DILocation(line: 3522, column: 20, scope: !9676)
!9681 = !DILocation(line: 3522, column: 47, scope: !9676)
!9682 = !DILocation(line: 3521, column: 2, scope: !9676)
!9683 = !DILocation(line: 3524, column: 30, scope: !9676)
!9684 = !DILocation(line: 3524, column: 46, scope: !9676)
!9685 = !DILocation(line: 3524, column: 60, scope: !9676)
!9686 = !DILocation(line: 3525, column: 16, scope: !9676)
!9687 = !DILocation(line: 3525, column: 20, scope: !9676)
!9688 = !DILocation(line: 3525, column: 47, scope: !9676)
!9689 = !DILocation(line: 3524, column: 2, scope: !9676)
!9690 = !DILocation(line: 3527, column: 7, scope: !9676)
!9691 = !DILocation(line: 3519, column: 22, scope: !9672)
!9692 = !DILocation(line: 3518, column: 43, scope: !9668)
!9693 = !DILocation(line: 3518, column: 3, scope: !9668)
!9694 = distinct !{!9694, !9670, !9695}
!9695 = !DILocation(line: 3527, column: 7, scope: !9665)
!9696 = !DILocation(line: 3529, column: 21, scope: !9563)
!9697 = !DILocation(line: 3529, column: 19, scope: !9563)
!9698 = !DILocation(line: 3530, column: 3, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 3530, column: 3)
!9700 = !DILocation(line: 3530, column: 3, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 3530, column: 3)
!9702 = !DILocation(line: 3532, column: 24, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !9704, file: !3, line: 3532, column: 11)
!9704 = distinct !DILexicalBlock(scope: !9701, file: !3, line: 3531, column: 5)
!9705 = !DILocation(line: 3532, column: 12, scope: !9703)
!9706 = !DILocation(line: 3533, column: 4, scope: !9703)
!9707 = !DILocation(line: 3533, column: 23, scope: !9703)
!9708 = !DILocation(line: 3533, column: 39, scope: !9703)
!9709 = !DILocation(line: 3533, column: 9, scope: !9703)
!9710 = !DILocation(line: 3534, column: 4, scope: !9703)
!9711 = !DILocation(line: 3534, column: 9, scope: !9703)
!9712 = !DILocation(line: 3535, column: 8, scope: !9703)
!9713 = !DILocation(line: 3535, column: 26, scope: !9703)
!9714 = !DILocation(line: 3535, column: 30, scope: !9703)
!9715 = !DILocation(line: 3535, column: 47, scope: !9703)
!9716 = !DILocation(line: 3535, column: 12, scope: !9703)
!9717 = !DILocation(line: 3536, column: 8, scope: !9703)
!9718 = !DILocation(line: 3536, column: 30, scope: !9703)
!9719 = !DILocation(line: 3536, column: 34, scope: !9703)
!9720 = !DILocation(line: 3536, column: 36, scope: !9703)
!9721 = !DILocation(line: 3537, column: 15, scope: !9703)
!9722 = !DILocation(line: 3536, column: 11, scope: !9703)
!9723 = !DILocation(line: 3532, column: 11, scope: !9704)
!9724 = !DILocation(line: 3538, column: 37, scope: !9703)
!9725 = !DILocation(line: 3538, column: 53, scope: !9703)
!9726 = !DILocation(line: 3538, column: 67, scope: !9703)
!9727 = !DILocation(line: 3539, column: 16, scope: !9703)
!9728 = !DILocation(line: 3539, column: 20, scope: !9703)
!9729 = !DILocation(line: 3540, column: 31, scope: !9703)
!9730 = !DILocation(line: 3540, column: 29, scope: !9703)
!9731 = !DILocation(line: 3538, column: 9, scope: !9703)
!9732 = !DILocation(line: 3542, column: 5, scope: !9704)
!9733 = distinct !{!9733, !9698, !9734}
!9734 = !DILocation(line: 3542, column: 5, scope: !9699)
!9735 = !DILocation(line: 3544, column: 3, scope: !9563)
!9736 = !DILocation(line: 3545, column: 3, scope: !9563)
!9737 = distinct !DISubprogram(name: "df_get_conditional_uses", scope: !3, file: !3, line: 3431, type: !4594, scopeLine: 3432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9738 = !DILocalVariable(name: "collection_rec", arg: 1, scope: !9737, file: !3, line: 3431, type: !3489)
!9739 = !DILocation(line: 3431, column: 52, scope: !9737)
!9740 = !DILocalVariable(name: "ix", scope: !9737, file: !3, line: 3433, type: !7)
!9741 = !DILocation(line: 3433, column: 16, scope: !9737)
!9742 = !DILocalVariable(name: "ref", scope: !9737, file: !3, line: 3434, type: !920)
!9743 = !DILocation(line: 3434, column: 10, scope: !9737)
!9744 = !DILocation(line: 3436, column: 11, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 3436, column: 3)
!9746 = !DILocation(line: 3436, column: 8, scope: !9745)
!9747 = !DILocation(line: 3436, column: 16, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 3436, column: 3)
!9749 = !DILocation(line: 3436, column: 3, scope: !9745)
!9750 = !DILocation(line: 3438, column: 11, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9752, file: !3, line: 3438, column: 11)
!9752 = distinct !DILexicalBlock(scope: !9748, file: !3, line: 3437, column: 5)
!9753 = !DILocation(line: 3438, column: 11, scope: !9752)
!9754 = !DILocalVariable(name: "width", scope: !9755, file: !3, line: 3440, type: !900)
!9755 = distinct !DILexicalBlock(scope: !9751, file: !3, line: 3439, column: 9)
!9756 = !DILocation(line: 3440, column: 8, scope: !9755)
!9757 = !DILocalVariable(name: "offset", scope: !9755, file: !3, line: 3441, type: !900)
!9758 = !DILocation(line: 3441, column: 8, scope: !9755)
!9759 = !DILocalVariable(name: "mode", scope: !9755, file: !3, line: 3442, type: !5)
!9760 = !DILocation(line: 3442, column: 22, scope: !9755)
!9761 = !DILocalVariable(name: "use", scope: !9755, file: !3, line: 3443, type: !920)
!9762 = !DILocation(line: 3443, column: 18, scope: !9755)
!9763 = !DILocation(line: 3445, column: 8, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9755, file: !3, line: 3445, column: 8)
!9765 = !DILocation(line: 3445, column: 8, scope: !9755)
!9766 = !DILocation(line: 3447, column: 16, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9764, file: !3, line: 3446, column: 6)
!9768 = !DILocation(line: 3447, column: 14, scope: !9767)
!9769 = !DILocation(line: 3448, column: 17, scope: !9767)
!9770 = !DILocation(line: 3448, column: 15, scope: !9767)
!9771 = !DILocation(line: 3449, column: 15, scope: !9767)
!9772 = !DILocation(line: 3449, column: 13, scope: !9767)
!9773 = !DILocation(line: 3450, column: 6, scope: !9767)
!9774 = !DILocation(line: 3452, column: 42, scope: !9755)
!9775 = !DILocation(line: 3452, column: 62, scope: !9755)
!9776 = !DILocation(line: 3452, column: 78, scope: !9755)
!9777 = !DILocation(line: 3453, column: 7, scope: !9755)
!9778 = !DILocation(line: 3453, column: 25, scope: !9755)
!9779 = !DILocation(line: 3454, column: 7, scope: !9755)
!9780 = !DILocation(line: 3455, column: 7, scope: !9755)
!9781 = !DILocation(line: 3455, column: 26, scope: !9755)
!9782 = !DILocation(line: 3456, column: 7, scope: !9755)
!9783 = !DILocation(line: 3456, column: 14, scope: !9755)
!9784 = !DILocation(line: 3456, column: 22, scope: !9755)
!9785 = !DILocation(line: 3452, column: 17, scope: !9755)
!9786 = !DILocation(line: 3452, column: 15, scope: !9755)
!9787 = !DILocation(line: 3457, column: 32, scope: !9755)
!9788 = !DILocation(line: 3457, column: 11, scope: !9755)
!9789 = !DILocation(line: 3457, column: 30, scope: !9755)
!9790 = !DILocation(line: 3458, column: 9, scope: !9755)
!9791 = !DILocation(line: 3459, column: 5, scope: !9752)
!9792 = !DILocation(line: 3436, column: 72, scope: !9748)
!9793 = !DILocation(line: 3436, column: 3, scope: !9748)
!9794 = distinct !{!9794, !9749, !9795}
!9795 = !DILocation(line: 3459, column: 5, scope: !9745)
!9796 = !DILocation(line: 3460, column: 1, scope: !9737)
!9797 = distinct !DISubprogram(name: "df_def_record_1", scope: !3, file: !3, line: 3001, type: !9487, scopeLine: 3004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9798 = !DILocalVariable(name: "collection_rec", arg: 1, scope: !9797, file: !3, line: 3001, type: !3489)
!9799 = !DILocation(line: 3001, column: 44, scope: !9797)
!9800 = !DILocalVariable(name: "x", arg: 2, scope: !9797, file: !3, line: 3002, type: !931)
!9801 = !DILocation(line: 3002, column: 22, scope: !9797)
!9802 = !DILocalVariable(name: "bb", arg: 3, scope: !9797, file: !3, line: 3002, type: !1244)
!9803 = !DILocation(line: 3002, column: 37, scope: !9797)
!9804 = !DILocalVariable(name: "insn_info", arg: 4, scope: !9797, file: !3, line: 3002, type: !1946)
!9805 = !DILocation(line: 3002, column: 62, scope: !9797)
!9806 = !DILocalVariable(name: "flags", arg: 5, scope: !9797, file: !3, line: 3003, type: !900)
!9807 = !DILocation(line: 3003, column: 8, scope: !9797)
!9808 = !DILocalVariable(name: "loc", scope: !9797, file: !3, line: 3005, type: !1975)
!9809 = !DILocation(line: 3005, column: 8, scope: !9797)
!9810 = !DILocalVariable(name: "dst", scope: !9797, file: !3, line: 3006, type: !931)
!9811 = !DILocation(line: 3006, column: 7, scope: !9797)
!9812 = !DILocalVariable(name: "offset", scope: !9797, file: !3, line: 3007, type: !900)
!9813 = !DILocation(line: 3007, column: 7, scope: !9797)
!9814 = !DILocalVariable(name: "width", scope: !9797, file: !3, line: 3008, type: !900)
!9815 = !DILocation(line: 3008, column: 7, scope: !9797)
!9816 = !DILocalVariable(name: "mode", scope: !9797, file: !3, line: 3009, type: !5)
!9817 = !DILocation(line: 3009, column: 21, scope: !9797)
!9818 = !DILocalVariable(name: "cl", scope: !9797, file: !3, line: 3010, type: !393)
!9819 = !DILocation(line: 3010, column: 21, scope: !9797)
!9820 = !DILocation(line: 3014, column: 7, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 3014, column: 7)
!9822 = !DILocation(line: 3014, column: 20, scope: !9821)
!9823 = !DILocation(line: 3014, column: 33, scope: !9821)
!9824 = !DILocation(line: 3014, column: 36, scope: !9821)
!9825 = !DILocation(line: 3014, column: 49, scope: !9821)
!9826 = !DILocation(line: 3014, column: 7, scope: !9797)
!9827 = !DILocation(line: 3015, column: 12, scope: !9821)
!9828 = !DILocation(line: 3015, column: 9, scope: !9821)
!9829 = !DILocation(line: 3015, column: 5, scope: !9821)
!9830 = !DILocation(line: 3017, column: 12, scope: !9821)
!9831 = !DILocation(line: 3017, column: 9, scope: !9821)
!9832 = !DILocation(line: 3018, column: 10, scope: !9797)
!9833 = !DILocation(line: 3018, column: 9, scope: !9797)
!9834 = !DILocation(line: 3018, column: 7, scope: !9797)
!9835 = !DILocation(line: 3021, column: 7, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 3021, column: 7)
!9837 = !DILocation(line: 3021, column: 22, scope: !9836)
!9838 = !DILocation(line: 3021, column: 7, scope: !9797)
!9839 = !DILocalVariable(name: "i", scope: !9840, file: !3, line: 3023, type: !900)
!9840 = distinct !DILexicalBlock(scope: !9836, file: !3, line: 3022, column: 5)
!9841 = !DILocation(line: 3023, column: 11, scope: !9840)
!9842 = !DILocation(line: 3025, column: 16, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 3025, column: 7)
!9844 = !DILocation(line: 3025, column: 33, scope: !9843)
!9845 = !DILocation(line: 3025, column: 14, scope: !9843)
!9846 = !DILocation(line: 3025, column: 12, scope: !9843)
!9847 = !DILocation(line: 3025, column: 38, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9843, file: !3, line: 3025, column: 7)
!9849 = !DILocation(line: 3025, column: 40, scope: !9848)
!9850 = !DILocation(line: 3025, column: 7, scope: !9843)
!9851 = !DILocalVariable(name: "temp", scope: !9852, file: !3, line: 3027, type: !931)
!9852 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 3026, column: 2)
!9853 = !DILocation(line: 3027, column: 8, scope: !9852)
!9854 = !DILocation(line: 3027, column: 15, scope: !9852)
!9855 = !DILocation(line: 3028, column: 8, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 3028, column: 8)
!9857 = !DILocation(line: 3028, column: 24, scope: !9856)
!9858 = !DILocation(line: 3028, column: 37, scope: !9856)
!9859 = !DILocation(line: 3028, column: 40, scope: !9856)
!9860 = !DILocation(line: 3028, column: 56, scope: !9856)
!9861 = !DILocation(line: 3029, column: 8, scope: !9856)
!9862 = !DILocation(line: 3029, column: 11, scope: !9856)
!9863 = !DILocation(line: 3029, column: 27, scope: !9856)
!9864 = !DILocation(line: 3028, column: 8, scope: !9852)
!9865 = !DILocation(line: 3030, column: 23, scope: !9856)
!9866 = !DILocation(line: 3031, column: 30, scope: !9856)
!9867 = !DILocation(line: 3031, column: 36, scope: !9856)
!9868 = !DILocation(line: 3031, column: 40, scope: !9856)
!9869 = !DILocation(line: 3032, column: 9, scope: !9856)
!9870 = !DILocation(line: 3032, column: 25, scope: !9856)
!9871 = !DILocation(line: 3033, column: 11, scope: !9856)
!9872 = !DILocation(line: 3033, column: 17, scope: !9856)
!9873 = !DILocation(line: 3033, column: 41, scope: !9856)
!9874 = !DILocation(line: 3030, column: 6, scope: !9856)
!9875 = !DILocation(line: 3034, column: 2, scope: !9852)
!9876 = !DILocation(line: 3025, column: 47, scope: !9848)
!9877 = !DILocation(line: 3025, column: 7, scope: !9848)
!9878 = distinct !{!9878, !9850, !9879}
!9879 = !DILocation(line: 3034, column: 2, scope: !9843)
!9880 = !DILocation(line: 3035, column: 7, scope: !9840)
!9881 = !DILocation(line: 3038, column: 7, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 3038, column: 7)
!9883 = !DILocation(line: 3038, column: 22, scope: !9882)
!9884 = !DILocation(line: 3038, column: 7, scope: !9797)
!9885 = !DILocation(line: 3040, column: 13, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9882, file: !3, line: 3039, column: 5)
!9887 = !DILocation(line: 3042, column: 14, scope: !9886)
!9888 = !DILocation(line: 3042, column: 11, scope: !9886)
!9889 = !DILocation(line: 3043, column: 14, scope: !9886)
!9890 = !DILocation(line: 3043, column: 13, scope: !9886)
!9891 = !DILocation(line: 3043, column: 11, scope: !9886)
!9892 = !DILocation(line: 3044, column: 5, scope: !9886)
!9893 = !DILocation(line: 3046, column: 7, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 3046, column: 7)
!9895 = !DILocation(line: 3046, column: 22, scope: !9894)
!9896 = !DILocation(line: 3046, column: 7, scope: !9797)
!9897 = !DILocation(line: 3048, column: 13, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 3047, column: 5)
!9899 = !DILocation(line: 3050, column: 11, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 3050, column: 11)
!9901 = !DILocation(line: 3051, column: 4, scope: !9900)
!9902 = !DILocation(line: 3051, column: 7, scope: !9900)
!9903 = !DILocation(line: 3050, column: 11, scope: !9898)
!9904 = !DILocation(line: 3053, column: 12, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 3052, column: 2)
!9906 = !DILocation(line: 3053, column: 10, scope: !9905)
!9907 = !DILocation(line: 3054, column: 13, scope: !9905)
!9908 = !DILocation(line: 3054, column: 11, scope: !9905)
!9909 = !DILocation(line: 3055, column: 11, scope: !9905)
!9910 = !DILocation(line: 3055, column: 9, scope: !9905)
!9911 = !DILocation(line: 3056, column: 7, scope: !9905)
!9912 = !DILocation(line: 3057, column: 2, scope: !9905)
!9913 = !DILocation(line: 3059, column: 14, scope: !9898)
!9914 = !DILocation(line: 3059, column: 11, scope: !9898)
!9915 = !DILocation(line: 3060, column: 14, scope: !9898)
!9916 = !DILocation(line: 3060, column: 13, scope: !9898)
!9917 = !DILocation(line: 3060, column: 11, scope: !9898)
!9918 = !DILocation(line: 3061, column: 5, scope: !9898)
!9919 = !DILocation(line: 3064, column: 7, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 3064, column: 7)
!9921 = !DILocation(line: 3064, column: 7, scope: !9797)
!9922 = !DILocation(line: 3066, column: 22, scope: !9923)
!9923 = distinct !DILexicalBlock(scope: !9920, file: !3, line: 3065, column: 5)
!9924 = !DILocation(line: 3066, column: 26, scope: !9923)
!9925 = !DILocation(line: 3067, column: 8, scope: !9923)
!9926 = !DILocation(line: 3067, column: 13, scope: !9923)
!9927 = !DILocation(line: 3067, column: 18, scope: !9923)
!9928 = !DILocation(line: 3067, column: 22, scope: !9923)
!9929 = !DILocation(line: 3067, column: 49, scope: !9923)
!9930 = !DILocation(line: 3068, column: 8, scope: !9923)
!9931 = !DILocation(line: 3068, column: 15, scope: !9923)
!9932 = !DILocation(line: 3068, column: 23, scope: !9923)
!9933 = !DILocation(line: 3066, column: 7, scope: !9923)
!9934 = !DILocation(line: 3072, column: 11, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9923, file: !3, line: 3072, column: 11)
!9936 = !DILocation(line: 3072, column: 23, scope: !9935)
!9937 = !DILocation(line: 3072, column: 11, scope: !9923)
!9938 = !DILocation(line: 3073, column: 30, scope: !9935)
!9939 = !DILocation(line: 3074, column: 10, scope: !9935)
!9940 = !DILocation(line: 3074, column: 21, scope: !9935)
!9941 = !DILocation(line: 3074, column: 25, scope: !9935)
!9942 = !DILocation(line: 3074, column: 52, scope: !9935)
!9943 = !DILocation(line: 3075, column: 10, scope: !9935)
!9944 = !DILocation(line: 3075, column: 17, scope: !9935)
!9945 = !DILocation(line: 3075, column: 25, scope: !9935)
!9946 = !DILocation(line: 3073, column: 2, scope: !9935)
!9947 = !DILocation(line: 3076, column: 5, scope: !9923)
!9948 = !DILocation(line: 3077, column: 12, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9920, file: !3, line: 3077, column: 12)
!9950 = !DILocation(line: 3077, column: 27, scope: !9949)
!9951 = !DILocation(line: 3077, column: 37, scope: !9949)
!9952 = !DILocation(line: 3077, column: 40, scope: !9949)
!9953 = !DILocation(line: 3077, column: 12, scope: !9920)
!9954 = !DILocation(line: 3079, column: 36, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9956, file: !3, line: 3079, column: 11)
!9956 = distinct !DILexicalBlock(scope: !9949, file: !3, line: 3078, column: 5)
!9957 = !DILocation(line: 3079, column: 11, scope: !9955)
!9958 = !DILocation(line: 3079, column: 11, scope: !9956)
!9959 = !DILocation(line: 3080, column: 8, scope: !9955)
!9960 = !DILocation(line: 3080, column: 2, scope: !9955)
!9961 = !DILocation(line: 3082, column: 13, scope: !9956)
!9962 = !DILocation(line: 3084, column: 22, scope: !9956)
!9963 = !DILocation(line: 3084, column: 26, scope: !9956)
!9964 = !DILocation(line: 3085, column: 8, scope: !9956)
!9965 = !DILocation(line: 3085, column: 13, scope: !9956)
!9966 = !DILocation(line: 3085, column: 18, scope: !9956)
!9967 = !DILocation(line: 3085, column: 22, scope: !9956)
!9968 = !DILocation(line: 3085, column: 49, scope: !9956)
!9969 = !DILocation(line: 3086, column: 8, scope: !9956)
!9970 = !DILocation(line: 3086, column: 15, scope: !9956)
!9971 = !DILocation(line: 3086, column: 23, scope: !9956)
!9972 = !DILocation(line: 3084, column: 7, scope: !9956)
!9973 = !DILocation(line: 3087, column: 5, scope: !9956)
!9974 = !DILocation(line: 3088, column: 1, scope: !9797)
!9975 = distinct !DISubprogram(name: "df_entry_block_defs_collect", scope: !3, file: !3, line: 3979, type: !9976, scopeLine: 3981, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!9976 = !DISubroutineType(types: !9977)
!9977 = !{null, !3489, !2022}
!9978 = !DILocalVariable(name: "collection_rec", arg: 1, scope: !9975, file: !3, line: 3979, type: !3489)
!9979 = !DILocation(line: 3979, column: 56, scope: !9975)
!9980 = !DILocalVariable(name: "entry_block_defs", arg: 2, scope: !9975, file: !3, line: 3980, type: !2022)
!9981 = !DILocation(line: 3980, column: 16, scope: !9975)
!9982 = !DILocalVariable(name: "i", scope: !9975, file: !3, line: 3982, type: !7)
!9983 = !DILocation(line: 3982, column: 16, scope: !9975)
!9984 = !DILocalVariable(name: "bi", scope: !9975, file: !3, line: 3983, type: !5009)
!9985 = !DILocation(line: 3983, column: 19, scope: !9975)
!9986 = !DILocation(line: 3985, column: 3, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9975, file: !3, line: 3985, column: 3)
!9988 = !DILocation(line: 3985, column: 3, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9987, file: !3, line: 3985, column: 3)
!9990 = !DILocation(line: 3987, column: 41, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 3986, column: 5)
!9992 = !DILocation(line: 3987, column: 57, scope: !9991)
!9993 = !DILocation(line: 3987, column: 71, scope: !9991)
!9994 = !DILocation(line: 3988, column: 8, scope: !9991)
!9995 = !DILocation(line: 3987, column: 7, scope: !9991)
!9996 = !DILocation(line: 3990, column: 5, scope: !9991)
!9997 = distinct !{!9997, !9986, !9998}
!9998 = !DILocation(line: 3990, column: 5, scope: !9987)
!9999 = !DILocation(line: 3992, column: 31, scope: !9975)
!10000 = !DILocation(line: 3992, column: 3, scope: !9975)
!10001 = !DILocation(line: 3993, column: 1, scope: !9975)
!10002 = distinct !DISubprogram(name: "df_exit_block_uses_collect", scope: !3, file: !3, line: 4143, type: !9976, scopeLine: 4144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!10003 = !DILocalVariable(name: "collection_rec", arg: 1, scope: !10002, file: !3, line: 4143, type: !3489)
!10004 = !DILocation(line: 4143, column: 55, scope: !10002)
!10005 = !DILocalVariable(name: "exit_block_uses", arg: 2, scope: !10002, file: !3, line: 4143, type: !2022)
!10006 = !DILocation(line: 4143, column: 78, scope: !10002)
!10007 = !DILocalVariable(name: "i", scope: !10002, file: !3, line: 4145, type: !7)
!10008 = !DILocation(line: 4145, column: 16, scope: !10002)
!10009 = !DILocalVariable(name: "bi", scope: !10002, file: !3, line: 4146, type: !5009)
!10010 = !DILocation(line: 4146, column: 19, scope: !10002)
!10011 = !DILocation(line: 4148, column: 3, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10002, file: !3, line: 4148, column: 3)
!10013 = !DILocation(line: 4148, column: 3, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10012, file: !3, line: 4148, column: 3)
!10015 = !DILocation(line: 4149, column: 39, scope: !10014)
!10016 = !DILocation(line: 4149, column: 55, scope: !10014)
!10017 = !DILocation(line: 4149, column: 69, scope: !10014)
!10018 = !DILocation(line: 4150, column: 6, scope: !10014)
!10019 = !DILocation(line: 4149, column: 5, scope: !10014)
!10020 = distinct !{!10020, !10011, !10021}
!10021 = !DILocation(line: 4150, column: 63, scope: !10012)
!10022 = !DILocation(line: 4155, column: 7, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10002, file: !3, line: 4155, column: 7)
!10024 = !DILocation(line: 4156, column: 7, scope: !10023)
!10025 = !DILocation(line: 4156, column: 25, scope: !10023)
!10026 = !DILocation(line: 4156, column: 11, scope: !10023)
!10027 = !DILocation(line: 4157, column: 7, scope: !10023)
!10028 = !DILocation(line: 4157, column: 26, scope: !10023)
!10029 = !DILocation(line: 4157, column: 10, scope: !10023)
!10030 = !DILocation(line: 4158, column: 7, scope: !10023)
!10031 = !DILocation(line: 4158, column: 10, scope: !10023)
!10032 = !DILocation(line: 4155, column: 7, scope: !10002)
!10033 = !DILocation(line: 4159, column: 39, scope: !10023)
!10034 = !DILocation(line: 4159, column: 55, scope: !10023)
!10035 = !DILocation(line: 4160, column: 6, scope: !10023)
!10036 = !DILocation(line: 4159, column: 5, scope: !10023)
!10037 = !DILocation(line: 4163, column: 31, scope: !10002)
!10038 = !DILocation(line: 4163, column: 3, scope: !10002)
!10039 = !DILocation(line: 4164, column: 1, scope: !10002)
!10040 = distinct !DISubprogram(name: "bb_has_eh_pred", scope: !135, file: !135, line: 973, type: !7346, scopeLine: 974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!10041 = !DILocalVariable(name: "bb", arg: 1, scope: !10040, file: !135, line: 973, type: !1244)
!10042 = !DILocation(line: 973, column: 29, scope: !10040)
!10043 = !DILocalVariable(name: "e", scope: !10040, file: !135, line: 975, type: !1261)
!10044 = !DILocation(line: 975, column: 8, scope: !10040)
!10045 = !DILocalVariable(name: "ei", scope: !10040, file: !135, line: 976, type: !10046)
!10046 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !135, line: 682, baseType: !10047)
!10047 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !135, line: 679, size: 128, elements: !10048)
!10048 = !{!10049, !10050}
!10049 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !10047, file: !135, line: 680, baseType: !7, size: 32)
!10050 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !10047, file: !135, line: 681, baseType: !10051, size: 64, offset: 64)
!10051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!10052 = !DILocation(line: 976, column: 17, scope: !10040)
!10053 = !DILocation(line: 978, column: 3, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10040, file: !135, line: 978, column: 3)
!10055 = !DILocation(line: 978, column: 3, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10054, file: !135, line: 978, column: 3)
!10057 = !DILocation(line: 980, column: 11, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10059, file: !135, line: 980, column: 11)
!10059 = distinct !DILexicalBlock(scope: !10056, file: !135, line: 979, column: 5)
!10060 = !DILocation(line: 980, column: 14, scope: !10058)
!10061 = !DILocation(line: 980, column: 20, scope: !10058)
!10062 = !DILocation(line: 980, column: 11, scope: !10059)
!10063 = !DILocation(line: 981, column: 2, scope: !10058)
!10064 = !DILocation(line: 982, column: 5, scope: !10059)
!10065 = distinct !{!10065, !10053, !10066}
!10066 = !DILocation(line: 982, column: 5, scope: !10054)
!10067 = !DILocation(line: 983, column: 3, scope: !10040)
!10068 = !DILocation(line: 984, column: 1, scope: !10040)
!10069 = distinct !DISubprogram(name: "ei_start_1", scope: !135, file: !135, line: 696, type: !10070, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!10070 = !DISubroutineType(types: !10071)
!10071 = !{!10046, !10051}
!10072 = !DILocalVariable(name: "ev", arg: 1, scope: !10069, file: !135, line: 696, type: !10051)
!10073 = !DILocation(line: 696, column: 28, scope: !10069)
!10074 = !DILocalVariable(name: "i", scope: !10069, file: !135, line: 698, type: !10046)
!10075 = !DILocation(line: 698, column: 17, scope: !10069)
!10076 = !DILocation(line: 700, column: 5, scope: !10069)
!10077 = !DILocation(line: 700, column: 11, scope: !10069)
!10078 = !DILocation(line: 701, column: 17, scope: !10069)
!10079 = !DILocation(line: 701, column: 5, scope: !10069)
!10080 = !DILocation(line: 701, column: 15, scope: !10069)
!10081 = !DILocation(line: 703, column: 3, scope: !10069)
!10082 = distinct !DISubprogram(name: "ei_cond", scope: !135, file: !135, line: 771, type: !10083, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!10083 = !DISubroutineType(types: !10084)
!10084 = !{!1099, !10046, !10085}
!10085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!10086 = !DILocalVariable(name: "ei", arg: 1, scope: !10082, file: !135, line: 771, type: !10046)
!10087 = !DILocation(line: 771, column: 24, scope: !10082)
!10088 = !DILocalVariable(name: "p", arg: 2, scope: !10082, file: !135, line: 771, type: !10085)
!10089 = !DILocation(line: 771, column: 34, scope: !10082)
!10090 = !DILocation(line: 773, column: 8, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10082, file: !135, line: 773, column: 7)
!10092 = !DILocation(line: 773, column: 7, scope: !10082)
!10093 = !DILocation(line: 775, column: 12, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10091, file: !135, line: 774, column: 5)
!10095 = !DILocation(line: 775, column: 8, scope: !10094)
!10096 = !DILocation(line: 775, column: 10, scope: !10094)
!10097 = !DILocation(line: 776, column: 7, scope: !10094)
!10098 = !DILocation(line: 780, column: 8, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10091, file: !135, line: 779, column: 5)
!10100 = !DILocation(line: 780, column: 10, scope: !10099)
!10101 = !DILocation(line: 781, column: 7, scope: !10099)
!10102 = !DILocation(line: 783, column: 1, scope: !10082)
!10103 = distinct !DISubprogram(name: "ei_next", scope: !135, file: !135, line: 736, type: !10104, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!10104 = !DISubroutineType(types: !10105)
!10105 = !{null, !10106}
!10106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10046, size: 64)
!10107 = !DILocalVariable(name: "i", arg: 1, scope: !10103, file: !135, line: 736, type: !10106)
!10108 = !DILocation(line: 736, column: 25, scope: !10103)
!10109 = !DILocation(line: 738, column: 3, scope: !10103)
!10110 = !DILocation(line: 739, column: 3, scope: !10103)
!10111 = !DILocation(line: 739, column: 6, scope: !10103)
!10112 = !DILocation(line: 739, column: 11, scope: !10103)
!10113 = !DILocation(line: 740, column: 1, scope: !10103)
!10114 = distinct !DISubprogram(name: "ei_end_p", scope: !135, file: !135, line: 721, type: !10115, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!10115 = !DISubroutineType(types: !10116)
!10116 = !{!1099, !10046}
!10117 = !DILocalVariable(name: "i", arg: 1, scope: !10114, file: !135, line: 721, type: !10046)
!10118 = !DILocation(line: 721, column: 25, scope: !10114)
!10119 = !DILocation(line: 723, column: 13, scope: !10114)
!10120 = !DILocation(line: 723, column: 22, scope: !10114)
!10121 = !DILocation(line: 723, column: 19, scope: !10114)
!10122 = !DILocation(line: 723, column: 10, scope: !10114)
!10123 = !DILocation(line: 723, column: 3, scope: !10114)
!10124 = distinct !DISubprogram(name: "ei_edge", scope: !135, file: !135, line: 752, type: !10125, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!10125 = !DISubroutineType(types: !10126)
!10126 = !{!1261, !10046}
!10127 = !DILocalVariable(name: "i", arg: 1, scope: !10124, file: !135, line: 752, type: !10046)
!10128 = !DILocation(line: 752, column: 24, scope: !10124)
!10129 = !DILocation(line: 754, column: 10, scope: !10124)
!10130 = !DILocation(line: 754, column: 3, scope: !10124)
!10131 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !135, file: !135, line: 150, type: !10132, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!10132 = !DISubroutineType(types: !10133)
!10133 = !{!7, !10134}
!10134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10135, size: 64)
!10135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1254)
!10136 = !DILocalVariable(name: "vec_", arg: 1, scope: !10131, file: !135, line: 150, type: !10134)
!10137 = !DILocation(line: 150, column: 1, scope: !10131)
!10138 = distinct !DISubprogram(name: "ei_container", scope: !135, file: !135, line: 685, type: !10139, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!10139 = !DISubroutineType(types: !10140)
!10140 = !{!1249, !10046}
!10141 = !DILocalVariable(name: "i", arg: 1, scope: !10138, file: !135, line: 685, type: !10046)
!10142 = !DILocation(line: 685, column: 29, scope: !10138)
!10143 = !DILocation(line: 687, column: 3, scope: !10138)
!10144 = !DILocation(line: 688, column: 13, scope: !10138)
!10145 = !DILocation(line: 688, column: 10, scope: !10138)
!10146 = !DILocation(line: 688, column: 3, scope: !10138)
!10147 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !135, file: !135, line: 150, type: !10148, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!10148 = !DISubroutineType(types: !10149)
!10149 = !{!1261, !10134, !7}
!10150 = !DILocalVariable(name: "vec_", arg: 1, scope: !10147, file: !135, line: 150, type: !10134)
!10151 = !DILocation(line: 150, column: 1, scope: !10147)
!10152 = !DILocalVariable(name: "ix_", arg: 2, scope: !10147, file: !135, line: 150, type: !7)
!10153 = !DILocation(line: 0, scope: !10147)
!10154 = distinct !DISubprogram(name: "df_mark_reg", scope: !3, file: !3, line: 3872, type: !10155, scopeLine: 3873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!10155 = !DISubroutineType(types: !10156)
!10156 = !{null, !931, !905}
!10157 = !DILocalVariable(name: "reg", arg: 1, scope: !10154, file: !3, line: 3872, type: !931)
!10158 = !DILocation(line: 3872, column: 18, scope: !10154)
!10159 = !DILocalVariable(name: "vset", arg: 2, scope: !10154, file: !3, line: 3872, type: !905)
!10160 = !DILocation(line: 3872, column: 29, scope: !10154)
!10161 = !DILocalVariable(name: "set", scope: !10154, file: !3, line: 3874, type: !2022)
!10162 = !DILocation(line: 3874, column: 10, scope: !10154)
!10163 = !DILocation(line: 3874, column: 25, scope: !10154)
!10164 = !DILocation(line: 3874, column: 16, scope: !10154)
!10165 = !DILocalVariable(name: "regno", scope: !10154, file: !3, line: 3875, type: !900)
!10166 = !DILocation(line: 3875, column: 7, scope: !10154)
!10167 = !DILocation(line: 3875, column: 15, scope: !10154)
!10168 = !DILocation(line: 3877, column: 3, scope: !10154)
!10169 = !DILocation(line: 3879, column: 7, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10154, file: !3, line: 3879, column: 7)
!10171 = !DILocation(line: 3879, column: 13, scope: !10170)
!10172 = !DILocation(line: 3879, column: 7, scope: !10154)
!10173 = !DILocalVariable(name: "n", scope: !10174, file: !3, line: 3881, type: !900)
!10174 = distinct !DILexicalBlock(scope: !10170, file: !3, line: 3880, column: 5)
!10175 = !DILocation(line: 3881, column: 11, scope: !10174)
!10176 = !DILocation(line: 3881, column: 32, scope: !10174)
!10177 = !DILocation(line: 3881, column: 15, scope: !10174)
!10178 = !DILocation(line: 3881, column: 39, scope: !10174)
!10179 = !DILocation(line: 3882, column: 25, scope: !10174)
!10180 = !DILocation(line: 3882, column: 30, scope: !10174)
!10181 = !DILocation(line: 3882, column: 37, scope: !10174)
!10182 = !DILocation(line: 3882, column: 7, scope: !10174)
!10183 = !DILocation(line: 3883, column: 5, scope: !10174)
!10184 = !DILocation(line: 3885, column: 21, scope: !10170)
!10185 = !DILocation(line: 3885, column: 26, scope: !10170)
!10186 = !DILocation(line: 3885, column: 5, scope: !10170)
!10187 = !DILocation(line: 3886, column: 1, scope: !10154)
!10188 = distinct !DISubprogram(name: "df_refs_verify", scope: !3, file: !3, line: 4420, type: !10189, scopeLine: 4422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!10189 = !DISubroutineType(types: !10190)
!10190 = !{!1099, !1997, !919, !1099}
!10191 = !DILocalVariable(name: "new_rec", arg: 1, scope: !10188, file: !3, line: 4420, type: !1997)
!10192 = !DILocation(line: 4420, column: 36, scope: !10188)
!10193 = !DILocalVariable(name: "old_rec", arg: 2, scope: !10188, file: !3, line: 4420, type: !919)
!10194 = !DILocation(line: 4420, column: 53, scope: !10188)
!10195 = !DILocalVariable(name: "abort_if_fail", arg: 3, scope: !10188, file: !3, line: 4421, type: !1099)
!10196 = !DILocation(line: 4421, column: 8, scope: !10188)
!10197 = !DILocalVariable(name: "ix", scope: !10188, file: !3, line: 4423, type: !7)
!10198 = !DILocation(line: 4423, column: 16, scope: !10188)
!10199 = !DILocalVariable(name: "new_ref", scope: !10188, file: !3, line: 4424, type: !920)
!10200 = !DILocation(line: 4424, column: 10, scope: !10188)
!10201 = !DILocation(line: 4426, column: 11, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 4426, column: 3)
!10203 = !DILocation(line: 4426, column: 8, scope: !10202)
!10204 = !DILocation(line: 4426, column: 16, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10202, file: !3, line: 4426, column: 3)
!10206 = !DILocation(line: 4426, column: 3, scope: !10202)
!10207 = !DILocation(line: 4428, column: 12, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10209, file: !3, line: 4428, column: 11)
!10209 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 4427, column: 5)
!10210 = !DILocation(line: 4428, column: 11, scope: !10208)
!10211 = !DILocation(line: 4428, column: 20, scope: !10208)
!10212 = !DILocation(line: 4428, column: 28, scope: !10208)
!10213 = !DILocation(line: 4428, column: 48, scope: !10208)
!10214 = !DILocation(line: 4428, column: 58, scope: !10208)
!10215 = !DILocation(line: 4428, column: 57, scope: !10208)
!10216 = !DILocation(line: 4428, column: 32, scope: !10208)
!10217 = !DILocation(line: 4428, column: 11, scope: !10209)
!10218 = !DILocation(line: 4430, column: 8, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 4430, column: 8)
!10220 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 4429, column: 2)
!10221 = !DILocation(line: 4430, column: 8, scope: !10220)
!10222 = !DILocation(line: 4431, column: 6, scope: !10219)
!10223 = !DILocation(line: 4433, column: 6, scope: !10219)
!10224 = !DILocation(line: 4434, column: 2, scope: !10220)
!10225 = !DILocation(line: 4438, column: 11, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10209, file: !3, line: 4438, column: 11)
!10227 = !DILocation(line: 4438, column: 11, scope: !10209)
!10228 = !DILocation(line: 4440, column: 4, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10226, file: !3, line: 4439, column: 2)
!10230 = !DILocation(line: 4441, column: 4, scope: !10229)
!10231 = !DILocation(line: 4442, column: 2, scope: !10229)
!10232 = !DILocation(line: 4444, column: 14, scope: !10209)
!10233 = !DILocation(line: 4445, column: 5, scope: !10209)
!10234 = !DILocation(line: 4426, column: 60, scope: !10205)
!10235 = !DILocation(line: 4426, column: 3, scope: !10205)
!10236 = distinct !{!10236, !10206, !10237}
!10237 = !DILocation(line: 4445, column: 5, scope: !10202)
!10238 = !DILocation(line: 4447, column: 7, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 4447, column: 7)
!10240 = !DILocation(line: 4447, column: 7, scope: !10188)
!10241 = !DILocation(line: 4448, column: 5, scope: !10239)
!10242 = !DILocation(line: 4450, column: 13, scope: !10239)
!10243 = !DILocation(line: 4450, column: 12, scope: !10239)
!10244 = !DILocation(line: 4450, column: 21, scope: !10239)
!10245 = !DILocation(line: 4450, column: 5, scope: !10239)
!10246 = !DILocation(line: 4451, column: 3, scope: !10188)
!10247 = !DILocation(line: 4452, column: 1, scope: !10188)
!10248 = distinct !DISubprogram(name: "df_mws_verify", scope: !3, file: !3, line: 4458, type: !10249, scopeLine: 4461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2038)
!10249 = !DISubroutineType(types: !10250)
!10250 = !{!1099, !2009, !1954, !1099}
!10251 = !DILocalVariable(name: "new_rec", arg: 1, scope: !10248, file: !3, line: 4458, type: !2009)
!10252 = !DILocation(line: 4458, column: 46, scope: !10248)
!10253 = !DILocalVariable(name: "old_rec", arg: 2, scope: !10248, file: !3, line: 4459, type: !1954)
!10254 = !DILocation(line: 4459, column: 32, scope: !10248)
!10255 = !DILocalVariable(name: "abort_if_fail", arg: 3, scope: !10248, file: !3, line: 4460, type: !1099)
!10256 = !DILocation(line: 4460, column: 14, scope: !10248)
!10257 = !DILocalVariable(name: "ix", scope: !10248, file: !3, line: 4462, type: !7)
!10258 = !DILocation(line: 4462, column: 16, scope: !10248)
!10259 = !DILocalVariable(name: "new_reg", scope: !10248, file: !3, line: 4463, type: !1955)
!10260 = !DILocation(line: 4463, column: 25, scope: !10248)
!10261 = !DILocation(line: 4465, column: 11, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10248, file: !3, line: 4465, column: 3)
!10263 = !DILocation(line: 4465, column: 8, scope: !10262)
!10264 = !DILocation(line: 4465, column: 16, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10262, file: !3, line: 4465, column: 3)
!10266 = !DILocation(line: 4465, column: 3, scope: !10262)
!10267 = !DILocation(line: 4467, column: 12, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10269, file: !3, line: 4467, column: 11)
!10269 = distinct !DILexicalBlock(scope: !10265, file: !3, line: 4466, column: 5)
!10270 = !DILocation(line: 4467, column: 11, scope: !10268)
!10271 = !DILocation(line: 4467, column: 20, scope: !10268)
!10272 = !DILocation(line: 4467, column: 28, scope: !10268)
!10273 = !DILocation(line: 4467, column: 47, scope: !10268)
!10274 = !DILocation(line: 4467, column: 57, scope: !10268)
!10275 = !DILocation(line: 4467, column: 56, scope: !10268)
!10276 = !DILocation(line: 4467, column: 32, scope: !10268)
!10277 = !DILocation(line: 4467, column: 11, scope: !10269)
!10278 = !DILocation(line: 4469, column: 8, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10280, file: !3, line: 4469, column: 8)
!10280 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 4468, column: 2)
!10281 = !DILocation(line: 4469, column: 8, scope: !10280)
!10282 = !DILocation(line: 4470, column: 6, scope: !10279)
!10283 = !DILocation(line: 4472, column: 6, scope: !10279)
!10284 = !DILocation(line: 4473, column: 2, scope: !10280)
!10285 = !DILocation(line: 4474, column: 14, scope: !10269)
!10286 = !DILocation(line: 4475, column: 5, scope: !10269)
!10287 = !DILocation(line: 4465, column: 71, scope: !10265)
!10288 = !DILocation(line: 4465, column: 3, scope: !10265)
!10289 = distinct !{!10289, !10266, !10290}
!10290 = !DILocation(line: 4475, column: 5, scope: !10262)
!10291 = !DILocation(line: 4477, column: 7, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10248, file: !3, line: 4477, column: 7)
!10293 = !DILocation(line: 4477, column: 7, scope: !10248)
!10294 = !DILocation(line: 4478, column: 5, scope: !10292)
!10295 = !DILocation(line: 4480, column: 13, scope: !10292)
!10296 = !DILocation(line: 4480, column: 12, scope: !10292)
!10297 = !DILocation(line: 4480, column: 21, scope: !10292)
!10298 = !DILocation(line: 4480, column: 5, scope: !10292)
!10299 = !DILocation(line: 4481, column: 3, scope: !10248)
!10300 = !DILocation(line: 4482, column: 1, scope: !10248)
