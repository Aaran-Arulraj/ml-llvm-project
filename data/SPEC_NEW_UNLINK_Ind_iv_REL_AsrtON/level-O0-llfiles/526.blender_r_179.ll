; ModuleID = 'blender/source/blender/blenkernel/intern/key.c'
source_filename = "blender/source/blender/blenkernel/intern/key.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.StructRNA = type opaque
%struct.Key = type { %struct.ID, %struct.AnimData*, %struct.KeyBlock*, [32 x i8], i32, i32, %struct.ListBase, %struct.Ipo*, %struct.ID*, i16, i16, i16, i16, float, i32 }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type { %struct.bAction*, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.NlaStrip*, %struct.ListBase, %struct.ListBase, i32, i32, i16, i16, float }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.AnimMapper = type { %struct.AnimMapper*, %struct.AnimMapper*, %struct.bAction*, %struct.ListBase }
%struct.NlaStrip = type { %struct.NlaStrip*, %struct.NlaStrip*, %struct.ListBase, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.ListBase, [64 x i8], float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i8*, i32, i32 }
%struct.KeyBlock = type { %struct.KeyBlock*, %struct.KeyBlock*, float, float, i16, i16, i16, i16, i32, i32, i8*, [64 x i8], [64 x i8], float, float }
%struct.Ipo = type opaque
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.Material = type opaque
%struct.MSelect = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RenderSlot = type { [64 x i8] }
%struct.MLoop = type { i32, i32 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.BMEditMesh = type { %struct.BMesh*, %struct.BMEditMesh*, i32, [3 x %struct.BMLoop*]*, i32, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, [4 x i8]*, i32, [4 x i8]*, i32, i16, i16, %struct.Object*, i32 }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.BLI_mempool = type opaque
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon = type { i8*, [8 x i8] }
%struct.MemArena = type opaque
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.DerivedMesh = type opaque
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type { %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Path* }
%struct.Path = type { %struct.PathPoint*, i32, float }
%struct.PathPoint = type { [4 x float], [4 x float], float, float }
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.BMIter = type { %union.anon.0, void (i8*)*, i8* (i8*)*, i32, i8 }
%union.anon.0 = type { %struct.BMIter__face_of_vert }
%struct.BMIter__face_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.WeightsArrayCache = type { i32, float** }
%struct.Lattice = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i32, float, float, float, float, float, float, %struct.BPoint*, %struct.Ipo*, %struct.Key*, %struct.MDeformVert*, [64 x i8], %struct.EditLatt* }
%struct.BPoint = type { [4 x float], float, float, i16, i16, float, float }
%struct.EditLatt = type { %struct.Lattice*, i32, [4 x i8] }
%struct.Curve = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.ListBase, %struct.EditNurb*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.Key*, %struct.Material**, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i8*, %struct.EditFont*, [64 x i8], %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.TextBox*, i32, i32, %struct.CharInfo*, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.EditNurb = type { %struct.ListBase, %struct.GHash*, i32, [4 x i8] }
%struct.EditFont = type opaque
%struct.VFont = type opaque
%struct.TextBox = type { float, float, float, float }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.Nurb = type { %struct.Nurb*, %struct.Nurb*, i16, i16, i16, i16, i32, i32, [2 x i16], i16, i16, i16, i16, i16, i16, float*, float*, %struct.BPoint*, %struct.BezTriple*, i16, i16, i32 }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.PropertyRNA = type opaque
%struct.BMIter__elem_of_mesh = type { %struct.BLI_mempool_iter }
%struct.BLI_mempool_iter = type { %struct.BLI_mempool*, %struct.BLI_mempool_chunk*, i32 }
%struct.BLI_mempool_chunk = type opaque
%struct.BMIter__edge_of_vert = type { %struct.BMVert*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__loop_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__vert_of_edge = type { %struct.BMEdge* }
%struct.BMIter__face_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__vert_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__edge_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_loop = type { %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }

@slurph_opt = dso_local global i32 1, align 4, !dbg !0
@MEM_freeN = external dso_local global void (i8*)*, align 8
@G = external dso_local global %struct.Global, align 8
@.str = private unnamed_addr constant [4 x i8] c"Key\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.1 = private unnamed_addr constant [21 x i8] c"per keyblock weights\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.2 = private unnamed_addr constant [28 x i8] c"BKE_key_evaluate_object out\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"Keyblock\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"Basis\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"Key %d\00", align 1
@RNA_ShapeKey = external dso_local global %struct.StructRNA, align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"kb->data\00", align 1
@.str.8 = private unnamed_addr constant [35 x i8] c"BKE_key_convert_to_vertcos vertCos\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"key_block_get_data\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"cached defgroup weights\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"weights\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_key_free(%struct.Key* %key) #0 !dbg !1949 {
entry:
  %key.addr = alloca %struct.Key*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !1955, metadata !DIExpression()), !dbg !1956
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !1957, metadata !DIExpression()), !dbg !1958
  %0 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !1959
  %1 = bitcast %struct.Key* %0 to %struct.ID*, !dbg !1960
  call void @BKE_free_animdata(%struct.ID* %1), !dbg !1961
  br label %while.cond, !dbg !1962

while.cond:                                       ; preds = %if.end, %entry
  %2 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !1963
  %block = getelementptr inbounds %struct.Key, %struct.Key* %2, i32 0, i32 6, !dbg !1964
  %call = call i8* @BLI_pophead(%struct.ListBase* %block), !dbg !1965
  %3 = bitcast i8* %call to %struct.KeyBlock*, !dbg !1965
  store %struct.KeyBlock* %3, %struct.KeyBlock** %kb, align 8, !dbg !1966
  %tobool = icmp ne %struct.KeyBlock* %3, null, !dbg !1962
  br i1 %tobool, label %while.body, label %while.end, !dbg !1962

while.body:                                       ; preds = %while.cond
  %4 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !1967
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %4, i32 0, i32 10, !dbg !1970
  %5 = load i8*, i8** %data, align 8, !dbg !1970
  %tobool1 = icmp ne i8* %5, null, !dbg !1967
  br i1 %tobool1, label %if.then, label %if.end, !dbg !1971

if.then:                                          ; preds = %while.body
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1972
  %7 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !1973
  %data2 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %7, i32 0, i32 10, !dbg !1974
  %8 = load i8*, i8** %data2, align 8, !dbg !1974
  call void %6(i8* %8), !dbg !1972
  br label %if.end, !dbg !1972

if.end:                                           ; preds = %if.then, %while.body
  %9 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1975
  %10 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !1976
  %11 = bitcast %struct.KeyBlock* %10 to i8*, !dbg !1976
  call void %9(i8* %11), !dbg !1975
  br label %while.cond, !dbg !1962, !llvm.loop !1977

while.end:                                        ; preds = %while.cond
  ret void, !dbg !1979
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local void @BKE_free_animdata(%struct.ID*) #2

declare dso_local i8* @BLI_pophead(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_key_free_nolib(%struct.Key* %key) #0 !dbg !1980 {
entry:
  %key.addr = alloca %struct.Key*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !1981, metadata !DIExpression()), !dbg !1982
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !1983, metadata !DIExpression()), !dbg !1984
  br label %while.cond, !dbg !1985

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !1986
  %block = getelementptr inbounds %struct.Key, %struct.Key* %0, i32 0, i32 6, !dbg !1987
  %call = call i8* @BLI_pophead(%struct.ListBase* %block), !dbg !1988
  %1 = bitcast i8* %call to %struct.KeyBlock*, !dbg !1988
  store %struct.KeyBlock* %1, %struct.KeyBlock** %kb, align 8, !dbg !1989
  %tobool = icmp ne %struct.KeyBlock* %1, null, !dbg !1985
  br i1 %tobool, label %while.body, label %while.end, !dbg !1985

while.body:                                       ; preds = %while.cond
  %2 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !1990
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %2, i32 0, i32 10, !dbg !1993
  %3 = load i8*, i8** %data, align 8, !dbg !1993
  %tobool1 = icmp ne i8* %3, null, !dbg !1990
  br i1 %tobool1, label %if.then, label %if.end, !dbg !1994

if.then:                                          ; preds = %while.body
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1995
  %5 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !1996
  %data2 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %5, i32 0, i32 10, !dbg !1997
  %6 = load i8*, i8** %data2, align 8, !dbg !1997
  call void %4(i8* %6), !dbg !1995
  br label %if.end, !dbg !1995

if.end:                                           ; preds = %if.then, %while.body
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1998
  %8 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !1999
  %9 = bitcast %struct.KeyBlock* %8 to i8*, !dbg !1999
  call void %7(i8* %9), !dbg !1998
  br label %while.cond, !dbg !1985, !llvm.loop !2000

while.end:                                        ; preds = %while.cond
  ret void, !dbg !2002
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Key* @BKE_key_add(%struct.ID* %id) #0 !dbg !2003 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %key = alloca %struct.Key*, align 8
  %el = alloca i8*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !2006, metadata !DIExpression()), !dbg !2007
  call void @llvm.dbg.declare(metadata %struct.Key** %key, metadata !2008, metadata !DIExpression()), !dbg !2009
  call void @llvm.dbg.declare(metadata i8** %el, metadata !2010, metadata !DIExpression()), !dbg !2011
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !2012
  %call = call i8* @BKE_libblock_alloc(%struct.Main* %0, i16 signext 17739, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)), !dbg !2013
  %1 = bitcast i8* %call to %struct.Key*, !dbg !2013
  store %struct.Key* %1, %struct.Key** %key, align 8, !dbg !2014
  %2 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !2015
  %type = getelementptr inbounds %struct.Key, %struct.Key* %2, i32 0, i32 9, !dbg !2016
  store i16 0, i16* %type, align 8, !dbg !2017
  %3 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !2018
  %4 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !2019
  %from = getelementptr inbounds %struct.Key, %struct.Key* %4, i32 0, i32 8, !dbg !2020
  store %struct.ID* %3, %struct.ID** %from, align 8, !dbg !2021
  %5 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !2022
  %uidgen = getelementptr inbounds %struct.Key, %struct.Key* %5, i32 0, i32 14, !dbg !2023
  store i32 1, i32* %uidgen, align 4, !dbg !2024
  %6 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !2025
  %name = getelementptr inbounds %struct.ID, %struct.ID* %6, i32 0, i32 4, !dbg !2025
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !2025
  %7 = bitcast i8* %arraydecay to i16*, !dbg !2025
  %8 = load i16, i16* %7, align 8, !dbg !2025
  %conv = sext i16 %8 to i32, !dbg !2025
  switch i32 %conv, label %sw.epilog [
    i32 17741, label %sw.bb
    i32 21580, label %sw.bb4
    i32 21827, label %sw.bb11
  ], !dbg !2026

sw.bb:                                            ; preds = %entry
  %9 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !2027
  %elemstr = getelementptr inbounds %struct.Key, %struct.Key* %9, i32 0, i32 3, !dbg !2029
  %arraydecay1 = getelementptr inbounds [32 x i8], [32 x i8]* %elemstr, i64 0, i64 0, !dbg !2027
  store i8* %arraydecay1, i8** %el, align 8, !dbg !2030
  %10 = load i8*, i8** %el, align 8, !dbg !2031
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 0, !dbg !2031
  store i8 3, i8* %arrayidx, align 1, !dbg !2032
  %11 = load i8*, i8** %el, align 8, !dbg !2033
  %arrayidx2 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !2033
  store i8 4, i8* %arrayidx2, align 1, !dbg !2034
  %12 = load i8*, i8** %el, align 8, !dbg !2035
  %arrayidx3 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !2035
  store i8 0, i8* %arrayidx3, align 1, !dbg !2036
  %13 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !2037
  %elemsize = getelementptr inbounds %struct.Key, %struct.Key* %13, i32 0, i32 4, !dbg !2038
  store i32 12, i32* %elemsize, align 8, !dbg !2039
  br label %sw.epilog, !dbg !2040

sw.bb4:                                           ; preds = %entry
  %14 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !2041
  %elemstr5 = getelementptr inbounds %struct.Key, %struct.Key* %14, i32 0, i32 3, !dbg !2042
  %arraydecay6 = getelementptr inbounds [32 x i8], [32 x i8]* %elemstr5, i64 0, i64 0, !dbg !2041
  store i8* %arraydecay6, i8** %el, align 8, !dbg !2043
  %15 = load i8*, i8** %el, align 8, !dbg !2044
  %arrayidx7 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !2044
  store i8 3, i8* %arrayidx7, align 1, !dbg !2045
  %16 = load i8*, i8** %el, align 8, !dbg !2046
  %arrayidx8 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !2046
  store i8 4, i8* %arrayidx8, align 1, !dbg !2047
  %17 = load i8*, i8** %el, align 8, !dbg !2048
  %arrayidx9 = getelementptr inbounds i8, i8* %17, i64 2, !dbg !2048
  store i8 0, i8* %arrayidx9, align 1, !dbg !2049
  %18 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !2050
  %elemsize10 = getelementptr inbounds %struct.Key, %struct.Key* %18, i32 0, i32 4, !dbg !2051
  store i32 12, i32* %elemsize10, align 8, !dbg !2052
  br label %sw.epilog, !dbg !2053

sw.bb11:                                          ; preds = %entry
  %19 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !2054
  %elemstr12 = getelementptr inbounds %struct.Key, %struct.Key* %19, i32 0, i32 3, !dbg !2055
  %arraydecay13 = getelementptr inbounds [32 x i8], [32 x i8]* %elemstr12, i64 0, i64 0, !dbg !2054
  store i8* %arraydecay13, i8** %el, align 8, !dbg !2056
  %20 = load i8*, i8** %el, align 8, !dbg !2057
  %arrayidx14 = getelementptr inbounds i8, i8* %20, i64 0, !dbg !2057
  store i8 4, i8* %arrayidx14, align 1, !dbg !2058
  %21 = load i8*, i8** %el, align 8, !dbg !2059
  %arrayidx15 = getelementptr inbounds i8, i8* %21, i64 1, !dbg !2059
  store i8 101, i8* %arrayidx15, align 1, !dbg !2060
  %22 = load i8*, i8** %el, align 8, !dbg !2061
  %arrayidx16 = getelementptr inbounds i8, i8* %22, i64 2, !dbg !2061
  store i8 0, i8* %arrayidx16, align 1, !dbg !2062
  %23 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !2063
  %elemsize17 = getelementptr inbounds %struct.Key, %struct.Key* %23, i32 0, i32 4, !dbg !2064
  store i32 16, i32* %elemsize17, align 8, !dbg !2065
  br label %sw.epilog, !dbg !2066

sw.epilog:                                        ; preds = %entry, %sw.bb11, %sw.bb4, %sw.bb
  %24 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !2067
  ret %struct.Key* %24, !dbg !2068
}

declare dso_local i8* @BKE_libblock_alloc(%struct.Main*, i16 signext, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Key* @BKE_key_copy(%struct.Key* %key) #0 !dbg !2069 {
entry:
  %retval = alloca %struct.Key*, align 8
  %key.addr = alloca %struct.Key*, align 8
  %keyn = alloca %struct.Key*, align 8
  %kbn = alloca %struct.KeyBlock*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !2072, metadata !DIExpression()), !dbg !2073
  call void @llvm.dbg.declare(metadata %struct.Key** %keyn, metadata !2074, metadata !DIExpression()), !dbg !2075
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kbn, metadata !2076, metadata !DIExpression()), !dbg !2077
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !2078, metadata !DIExpression()), !dbg !2079
  %0 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2080
  %cmp = icmp eq %struct.Key* %0, null, !dbg !2082
  br i1 %cmp, label %if.then, label %if.end, !dbg !2083

if.then:                                          ; preds = %entry
  store %struct.Key* null, %struct.Key** %retval, align 8, !dbg !2084
  br label %return, !dbg !2084

if.end:                                           ; preds = %entry
  %1 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2085
  %id = getelementptr inbounds %struct.Key, %struct.Key* %1, i32 0, i32 0, !dbg !2086
  %call = call i8* @BKE_libblock_copy(%struct.ID* %id), !dbg !2087
  %2 = bitcast i8* %call to %struct.Key*, !dbg !2087
  store %struct.Key* %2, %struct.Key** %keyn, align 8, !dbg !2088
  %3 = load %struct.Key*, %struct.Key** %keyn, align 8, !dbg !2089
  %block = getelementptr inbounds %struct.Key, %struct.Key* %3, i32 0, i32 6, !dbg !2090
  %4 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2091
  %block1 = getelementptr inbounds %struct.Key, %struct.Key* %4, i32 0, i32 6, !dbg !2092
  call void @BLI_duplicatelist(%struct.ListBase* %block, %struct.ListBase* %block1), !dbg !2093
  %5 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2094
  %block2 = getelementptr inbounds %struct.Key, %struct.Key* %5, i32 0, i32 6, !dbg !2095
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block2, i32 0, i32 0, !dbg !2096
  %6 = load i8*, i8** %first, align 8, !dbg !2096
  %7 = bitcast i8* %6 to %struct.KeyBlock*, !dbg !2094
  store %struct.KeyBlock* %7, %struct.KeyBlock** %kb, align 8, !dbg !2097
  %8 = load %struct.Key*, %struct.Key** %keyn, align 8, !dbg !2098
  %block3 = getelementptr inbounds %struct.Key, %struct.Key* %8, i32 0, i32 6, !dbg !2099
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block3, i32 0, i32 0, !dbg !2100
  %9 = load i8*, i8** %first4, align 8, !dbg !2100
  %10 = bitcast i8* %9 to %struct.KeyBlock*, !dbg !2098
  store %struct.KeyBlock* %10, %struct.KeyBlock** %kbn, align 8, !dbg !2101
  br label %while.cond, !dbg !2102

while.cond:                                       ; preds = %if.end14, %if.end
  %11 = load %struct.KeyBlock*, %struct.KeyBlock** %kbn, align 8, !dbg !2103
  %tobool = icmp ne %struct.KeyBlock* %11, null, !dbg !2102
  br i1 %tobool, label %while.body, label %while.end, !dbg !2102

while.body:                                       ; preds = %while.cond
  %12 = load %struct.KeyBlock*, %struct.KeyBlock** %kbn, align 8, !dbg !2104
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %12, i32 0, i32 10, !dbg !2107
  %13 = load i8*, i8** %data, align 8, !dbg !2107
  %tobool5 = icmp ne i8* %13, null, !dbg !2104
  br i1 %tobool5, label %if.then6, label %if.end10, !dbg !2108

if.then6:                                         ; preds = %while.body
  %14 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !2109
  %15 = load %struct.KeyBlock*, %struct.KeyBlock** %kbn, align 8, !dbg !2110
  %data7 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %15, i32 0, i32 10, !dbg !2111
  %16 = load i8*, i8** %data7, align 8, !dbg !2111
  %call8 = call i8* %14(i8* %16), !dbg !2109
  %17 = load %struct.KeyBlock*, %struct.KeyBlock** %kbn, align 8, !dbg !2112
  %data9 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %17, i32 0, i32 10, !dbg !2113
  store i8* %call8, i8** %data9, align 8, !dbg !2114
  br label %if.end10, !dbg !2112

if.end10:                                         ; preds = %if.then6, %while.body
  %18 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2115
  %19 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2117
  %refkey = getelementptr inbounds %struct.Key, %struct.Key* %19, i32 0, i32 2, !dbg !2118
  %20 = load %struct.KeyBlock*, %struct.KeyBlock** %refkey, align 8, !dbg !2118
  %cmp11 = icmp eq %struct.KeyBlock* %18, %20, !dbg !2119
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !2120

if.then12:                                        ; preds = %if.end10
  %21 = load %struct.KeyBlock*, %struct.KeyBlock** %kbn, align 8, !dbg !2121
  %22 = load %struct.Key*, %struct.Key** %keyn, align 8, !dbg !2122
  %refkey13 = getelementptr inbounds %struct.Key, %struct.Key* %22, i32 0, i32 2, !dbg !2123
  store %struct.KeyBlock* %21, %struct.KeyBlock** %refkey13, align 8, !dbg !2124
  br label %if.end14, !dbg !2122

if.end14:                                         ; preds = %if.then12, %if.end10
  %23 = load %struct.KeyBlock*, %struct.KeyBlock** %kbn, align 8, !dbg !2125
  %next = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %23, i32 0, i32 0, !dbg !2126
  %24 = load %struct.KeyBlock*, %struct.KeyBlock** %next, align 8, !dbg !2126
  store %struct.KeyBlock* %24, %struct.KeyBlock** %kbn, align 8, !dbg !2127
  %25 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2128
  %next15 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %25, i32 0, i32 0, !dbg !2129
  %26 = load %struct.KeyBlock*, %struct.KeyBlock** %next15, align 8, !dbg !2129
  store %struct.KeyBlock* %26, %struct.KeyBlock** %kb, align 8, !dbg !2130
  br label %while.cond, !dbg !2102, !llvm.loop !2131

while.end:                                        ; preds = %while.cond
  %27 = load %struct.Key*, %struct.Key** %keyn, align 8, !dbg !2133
  store %struct.Key* %27, %struct.Key** %retval, align 8, !dbg !2134
  br label %return, !dbg !2134

return:                                           ; preds = %while.end, %if.then
  %28 = load %struct.Key*, %struct.Key** %retval, align 8, !dbg !2135
  ret %struct.Key* %28, !dbg !2135
}

declare dso_local i8* @BKE_libblock_copy(%struct.ID*) #2

declare dso_local void @BLI_duplicatelist(%struct.ListBase*, %struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Key* @BKE_key_copy_nolib(%struct.Key* %key) #0 !dbg !2136 {
entry:
  %retval = alloca %struct.Key*, align 8
  %key.addr = alloca %struct.Key*, align 8
  %keyn = alloca %struct.Key*, align 8
  %kbn = alloca %struct.KeyBlock*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !2137, metadata !DIExpression()), !dbg !2138
  call void @llvm.dbg.declare(metadata %struct.Key** %keyn, metadata !2139, metadata !DIExpression()), !dbg !2140
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kbn, metadata !2141, metadata !DIExpression()), !dbg !2142
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !2143, metadata !DIExpression()), !dbg !2144
  %0 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2145
  %cmp = icmp eq %struct.Key* %0, null, !dbg !2147
  br i1 %cmp, label %if.then, label %if.end, !dbg !2148

if.then:                                          ; preds = %entry
  store %struct.Key* null, %struct.Key** %retval, align 8, !dbg !2149
  br label %return, !dbg !2149

if.end:                                           ; preds = %entry
  %1 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !2150
  %2 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2151
  %3 = bitcast %struct.Key* %2 to i8*, !dbg !2151
  %call = call i8* %1(i8* %3), !dbg !2150
  %4 = bitcast i8* %call to %struct.Key*, !dbg !2150
  store %struct.Key* %4, %struct.Key** %keyn, align 8, !dbg !2152
  %5 = load %struct.Key*, %struct.Key** %keyn, align 8, !dbg !2153
  %adt = getelementptr inbounds %struct.Key, %struct.Key* %5, i32 0, i32 1, !dbg !2154
  store %struct.AnimData* null, %struct.AnimData** %adt, align 8, !dbg !2155
  %6 = load %struct.Key*, %struct.Key** %keyn, align 8, !dbg !2156
  %block = getelementptr inbounds %struct.Key, %struct.Key* %6, i32 0, i32 6, !dbg !2157
  %7 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2158
  %block1 = getelementptr inbounds %struct.Key, %struct.Key* %7, i32 0, i32 6, !dbg !2159
  call void @BLI_duplicatelist(%struct.ListBase* %block, %struct.ListBase* %block1), !dbg !2160
  %8 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2161
  %block2 = getelementptr inbounds %struct.Key, %struct.Key* %8, i32 0, i32 6, !dbg !2162
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block2, i32 0, i32 0, !dbg !2163
  %9 = load i8*, i8** %first, align 8, !dbg !2163
  %10 = bitcast i8* %9 to %struct.KeyBlock*, !dbg !2161
  store %struct.KeyBlock* %10, %struct.KeyBlock** %kb, align 8, !dbg !2164
  %11 = load %struct.Key*, %struct.Key** %keyn, align 8, !dbg !2165
  %block3 = getelementptr inbounds %struct.Key, %struct.Key* %11, i32 0, i32 6, !dbg !2166
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block3, i32 0, i32 0, !dbg !2167
  %12 = load i8*, i8** %first4, align 8, !dbg !2167
  %13 = bitcast i8* %12 to %struct.KeyBlock*, !dbg !2165
  store %struct.KeyBlock* %13, %struct.KeyBlock** %kbn, align 8, !dbg !2168
  br label %while.cond, !dbg !2169

while.cond:                                       ; preds = %if.end14, %if.end
  %14 = load %struct.KeyBlock*, %struct.KeyBlock** %kbn, align 8, !dbg !2170
  %tobool = icmp ne %struct.KeyBlock* %14, null, !dbg !2169
  br i1 %tobool, label %while.body, label %while.end, !dbg !2169

while.body:                                       ; preds = %while.cond
  %15 = load %struct.KeyBlock*, %struct.KeyBlock** %kbn, align 8, !dbg !2171
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %15, i32 0, i32 10, !dbg !2174
  %16 = load i8*, i8** %data, align 8, !dbg !2174
  %tobool5 = icmp ne i8* %16, null, !dbg !2171
  br i1 %tobool5, label %if.then6, label %if.end10, !dbg !2175

if.then6:                                         ; preds = %while.body
  %17 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !2176
  %18 = load %struct.KeyBlock*, %struct.KeyBlock** %kbn, align 8, !dbg !2177
  %data7 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %18, i32 0, i32 10, !dbg !2178
  %19 = load i8*, i8** %data7, align 8, !dbg !2178
  %call8 = call i8* %17(i8* %19), !dbg !2176
  %20 = load %struct.KeyBlock*, %struct.KeyBlock** %kbn, align 8, !dbg !2179
  %data9 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %20, i32 0, i32 10, !dbg !2180
  store i8* %call8, i8** %data9, align 8, !dbg !2181
  br label %if.end10, !dbg !2179

if.end10:                                         ; preds = %if.then6, %while.body
  %21 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2182
  %22 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2184
  %refkey = getelementptr inbounds %struct.Key, %struct.Key* %22, i32 0, i32 2, !dbg !2185
  %23 = load %struct.KeyBlock*, %struct.KeyBlock** %refkey, align 8, !dbg !2185
  %cmp11 = icmp eq %struct.KeyBlock* %21, %23, !dbg !2186
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !2187

if.then12:                                        ; preds = %if.end10
  %24 = load %struct.KeyBlock*, %struct.KeyBlock** %kbn, align 8, !dbg !2188
  %25 = load %struct.Key*, %struct.Key** %keyn, align 8, !dbg !2189
  %refkey13 = getelementptr inbounds %struct.Key, %struct.Key* %25, i32 0, i32 2, !dbg !2190
  store %struct.KeyBlock* %24, %struct.KeyBlock** %refkey13, align 8, !dbg !2191
  br label %if.end14, !dbg !2189

if.end14:                                         ; preds = %if.then12, %if.end10
  %26 = load %struct.KeyBlock*, %struct.KeyBlock** %kbn, align 8, !dbg !2192
  %next = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %26, i32 0, i32 0, !dbg !2193
  %27 = load %struct.KeyBlock*, %struct.KeyBlock** %next, align 8, !dbg !2193
  store %struct.KeyBlock* %27, %struct.KeyBlock** %kbn, align 8, !dbg !2194
  %28 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2195
  %next15 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %28, i32 0, i32 0, !dbg !2196
  %29 = load %struct.KeyBlock*, %struct.KeyBlock** %next15, align 8, !dbg !2196
  store %struct.KeyBlock* %29, %struct.KeyBlock** %kb, align 8, !dbg !2197
  br label %while.cond, !dbg !2169, !llvm.loop !2198

while.end:                                        ; preds = %while.cond
  %30 = load %struct.Key*, %struct.Key** %keyn, align 8, !dbg !2200
  store %struct.Key* %30, %struct.Key** %retval, align 8, !dbg !2201
  br label %return, !dbg !2201

return:                                           ; preds = %while.end, %if.then
  %31 = load %struct.Key*, %struct.Key** %retval, align 8, !dbg !2202
  ret %struct.Key* %31, !dbg !2202
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_key_make_local(%struct.Key* %key) #0 !dbg !2203 {
entry:
  %key.addr = alloca %struct.Key*, align 8
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !2204, metadata !DIExpression()), !dbg !2205
  %0 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2206
  %cmp = icmp eq %struct.Key* %0, null, !dbg !2208
  br i1 %cmp, label %if.then, label %if.end, !dbg !2209

if.then:                                          ; preds = %entry
  br label %return, !dbg !2210

if.end:                                           ; preds = %entry
  %1 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2211
  %id = getelementptr inbounds %struct.Key, %struct.Key* %1, i32 0, i32 0, !dbg !2212
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !2213
  store %struct.Library* null, %struct.Library** %lib, align 8, !dbg !2214
  %2 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2215
  %id1 = getelementptr inbounds %struct.Key, %struct.Key* %2, i32 0, i32 0, !dbg !2216
  %call = call zeroext i8 @new_id(%struct.ListBase* null, %struct.ID* %id1, i8* null), !dbg !2217
  br label %return, !dbg !2218

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !2218
}

declare dso_local zeroext i8 @new_id(%struct.ListBase*, %struct.ID*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_key_sort(%struct.Key* %key) #0 !dbg !2219 {
entry:
  %key.addr = alloca %struct.Key*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  %kb2 = alloca %struct.KeyBlock*, align 8
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !2220, metadata !DIExpression()), !dbg !2221
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !2222, metadata !DIExpression()), !dbg !2223
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb2, metadata !2224, metadata !DIExpression()), !dbg !2225
  %0 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2226
  %block = getelementptr inbounds %struct.Key, %struct.Key* %0, i32 0, i32 6, !dbg !2228
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 0, !dbg !2229
  %1 = load i8*, i8** %first, align 8, !dbg !2229
  %2 = bitcast i8* %1 to %struct.KeyBlock*, !dbg !2226
  store %struct.KeyBlock* %2, %struct.KeyBlock** %kb, align 8, !dbg !2230
  br label %for.cond, !dbg !2231

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2232
  %tobool = icmp ne %struct.KeyBlock* %3, null, !dbg !2234
  br i1 %tobool, label %for.body, label %for.end, !dbg !2234

for.body:                                         ; preds = %for.cond
  %4 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2235
  %next = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %4, i32 0, i32 0, !dbg !2237
  %5 = load %struct.KeyBlock*, %struct.KeyBlock** %next, align 8, !dbg !2237
  %tobool1 = icmp ne %struct.KeyBlock* %5, null, !dbg !2238
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !2239

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2240
  %pos = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %6, i32 0, i32 2, !dbg !2241
  %7 = load float, float* %pos, align 8, !dbg !2241
  %8 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2242
  %next2 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %8, i32 0, i32 0, !dbg !2243
  %9 = load %struct.KeyBlock*, %struct.KeyBlock** %next2, align 8, !dbg !2243
  %pos3 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %9, i32 0, i32 2, !dbg !2244
  %10 = load float, float* %pos3, align 8, !dbg !2244
  %cmp = fcmp ogt float %7, %10, !dbg !2245
  br i1 %cmp, label %if.then, label %if.end, !dbg !2246

if.then:                                          ; preds = %land.lhs.true
  br label %for.end, !dbg !2247

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !2248

for.inc:                                          ; preds = %if.end
  %11 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2249
  %next4 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %11, i32 0, i32 0, !dbg !2250
  %12 = load %struct.KeyBlock*, %struct.KeyBlock** %next4, align 8, !dbg !2250
  store %struct.KeyBlock* %12, %struct.KeyBlock** %kb, align 8, !dbg !2251
  br label %for.cond, !dbg !2252, !llvm.loop !2253

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2255
  %tobool5 = icmp ne %struct.KeyBlock* %13, null, !dbg !2255
  br i1 %tobool5, label %if.then6, label %if.end23, !dbg !2257

if.then6:                                         ; preds = %for.end
  %14 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2258
  %next7 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %14, i32 0, i32 0, !dbg !2260
  %15 = load %struct.KeyBlock*, %struct.KeyBlock** %next7, align 8, !dbg !2260
  store %struct.KeyBlock* %15, %struct.KeyBlock** %kb, align 8, !dbg !2261
  %16 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2262
  %block8 = getelementptr inbounds %struct.Key, %struct.Key* %16, i32 0, i32 6, !dbg !2263
  %17 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2264
  %18 = bitcast %struct.KeyBlock* %17 to i8*, !dbg !2264
  call void @BLI_remlink(%struct.ListBase* %block8, i8* %18), !dbg !2265
  %19 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2266
  %block9 = getelementptr inbounds %struct.Key, %struct.Key* %19, i32 0, i32 6, !dbg !2268
  %first10 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block9, i32 0, i32 0, !dbg !2269
  %20 = load i8*, i8** %first10, align 8, !dbg !2269
  %21 = bitcast i8* %20 to %struct.KeyBlock*, !dbg !2266
  store %struct.KeyBlock* %21, %struct.KeyBlock** %kb2, align 8, !dbg !2270
  br label %for.cond11, !dbg !2271

for.cond11:                                       ; preds = %for.inc20, %if.then6
  %22 = load %struct.KeyBlock*, %struct.KeyBlock** %kb2, align 8, !dbg !2272
  %tobool12 = icmp ne %struct.KeyBlock* %22, null, !dbg !2274
  br i1 %tobool12, label %for.body13, label %for.end22, !dbg !2274

for.body13:                                       ; preds = %for.cond11
  %23 = load %struct.KeyBlock*, %struct.KeyBlock** %kb2, align 8, !dbg !2275
  %pos14 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %23, i32 0, i32 2, !dbg !2278
  %24 = load float, float* %pos14, align 8, !dbg !2278
  %25 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2279
  %pos15 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %25, i32 0, i32 2, !dbg !2280
  %26 = load float, float* %pos15, align 8, !dbg !2280
  %cmp16 = fcmp ogt float %24, %26, !dbg !2281
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !2282

if.then17:                                        ; preds = %for.body13
  %27 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2283
  %block18 = getelementptr inbounds %struct.Key, %struct.Key* %27, i32 0, i32 6, !dbg !2285
  %28 = load %struct.KeyBlock*, %struct.KeyBlock** %kb2, align 8, !dbg !2286
  %prev = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %28, i32 0, i32 1, !dbg !2287
  %29 = load %struct.KeyBlock*, %struct.KeyBlock** %prev, align 8, !dbg !2287
  %30 = bitcast %struct.KeyBlock* %29 to i8*, !dbg !2286
  %31 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2288
  %32 = bitcast %struct.KeyBlock* %31 to i8*, !dbg !2288
  call void @BLI_insertlinkafter(%struct.ListBase* %block18, i8* %30, i8* %32), !dbg !2289
  br label %for.end22, !dbg !2290

if.end19:                                         ; preds = %for.body13
  br label %for.inc20, !dbg !2291

for.inc20:                                        ; preds = %if.end19
  %33 = load %struct.KeyBlock*, %struct.KeyBlock** %kb2, align 8, !dbg !2292
  %next21 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %33, i32 0, i32 0, !dbg !2293
  %34 = load %struct.KeyBlock*, %struct.KeyBlock** %next21, align 8, !dbg !2293
  store %struct.KeyBlock* %34, %struct.KeyBlock** %kb2, align 8, !dbg !2294
  br label %for.cond11, !dbg !2295, !llvm.loop !2296

for.end22:                                        ; preds = %if.then17, %for.cond11
  br label %if.end23, !dbg !2298

if.end23:                                         ; preds = %for.end22, %for.end
  %35 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2299
  %block24 = getelementptr inbounds %struct.Key, %struct.Key* %35, i32 0, i32 6, !dbg !2300
  %first25 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block24, i32 0, i32 0, !dbg !2301
  %36 = load i8*, i8** %first25, align 8, !dbg !2301
  %37 = bitcast i8* %36 to %struct.KeyBlock*, !dbg !2299
  %38 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2302
  %refkey = getelementptr inbounds %struct.Key, %struct.Key* %38, i32 0, i32 2, !dbg !2303
  store %struct.KeyBlock* %37, %struct.KeyBlock** %refkey, align 8, !dbg !2304
  ret void, !dbg !2305
}

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

declare dso_local void @BLI_insertlinkafter(%struct.ListBase*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @key_curve_position_weights(float %t, float* %data, i32 %type) #0 !dbg !2306 {
entry:
  %t.addr = alloca float, align 4
  %data.addr = alloca float*, align 8
  %type.addr = alloca i32, align 4
  %t2 = alloca float, align 4
  %t3 = alloca float, align 4
  %fc = alloca float, align 4
  store float %t, float* %t.addr, align 4
  call void @llvm.dbg.declare(metadata float* %t.addr, metadata !2309, metadata !DIExpression()), !dbg !2310
  store float* %data, float** %data.addr, align 8
  call void @llvm.dbg.declare(metadata float** %data.addr, metadata !2311, metadata !DIExpression()), !dbg !2312
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !2313, metadata !DIExpression()), !dbg !2314
  call void @llvm.dbg.declare(metadata float* %t2, metadata !2315, metadata !DIExpression()), !dbg !2316
  call void @llvm.dbg.declare(metadata float* %t3, metadata !2317, metadata !DIExpression()), !dbg !2318
  call void @llvm.dbg.declare(metadata float* %fc, metadata !2319, metadata !DIExpression()), !dbg !2320
  %0 = load i32, i32* %type.addr, align 4, !dbg !2321
  %cmp = icmp eq i32 %0, 0, !dbg !2323
  br i1 %cmp, label %if.then, label %if.else, !dbg !2324

if.then:                                          ; preds = %entry
  %1 = load float*, float** %data.addr, align 8, !dbg !2325
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !2325
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !2327
  %2 = load float, float* %t.addr, align 4, !dbg !2328
  %fneg = fneg float %2, !dbg !2329
  %add = fadd float %fneg, 1.000000e+00, !dbg !2330
  %3 = load float*, float** %data.addr, align 8, !dbg !2331
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !2331
  store float %add, float* %arrayidx1, align 4, !dbg !2332
  %4 = load float, float* %t.addr, align 4, !dbg !2333
  %5 = load float*, float** %data.addr, align 8, !dbg !2334
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 2, !dbg !2334
  store float %4, float* %arrayidx2, align 4, !dbg !2335
  %6 = load float*, float** %data.addr, align 8, !dbg !2336
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 3, !dbg !2336
  store float 0.000000e+00, float* %arrayidx3, align 4, !dbg !2337
  br label %if.end94, !dbg !2338

if.else:                                          ; preds = %entry
  %7 = load i32, i32* %type.addr, align 4, !dbg !2339
  %cmp4 = icmp eq i32 %7, 1, !dbg !2341
  br i1 %cmp4, label %if.then5, label %if.else34, !dbg !2342

if.then5:                                         ; preds = %if.else
  %8 = load float, float* %t.addr, align 4, !dbg !2343
  %9 = load float, float* %t.addr, align 4, !dbg !2345
  %mul = fmul float %8, %9, !dbg !2346
  store float %mul, float* %t2, align 4, !dbg !2347
  %10 = load float, float* %t2, align 4, !dbg !2348
  %11 = load float, float* %t.addr, align 4, !dbg !2349
  %mul6 = fmul float %10, %11, !dbg !2350
  store float %mul6, float* %t3, align 4, !dbg !2351
  store float 0x3FE6B851E0000000, float* %fc, align 4, !dbg !2352
  %12 = load float, float* %fc, align 4, !dbg !2353
  %fneg7 = fneg float %12, !dbg !2354
  %13 = load float, float* %t3, align 4, !dbg !2355
  %mul8 = fmul float %fneg7, %13, !dbg !2356
  %14 = load float, float* %fc, align 4, !dbg !2357
  %mul9 = fmul float 2.000000e+00, %14, !dbg !2358
  %15 = load float, float* %t2, align 4, !dbg !2359
  %mul10 = fmul float %mul9, %15, !dbg !2360
  %add11 = fadd float %mul8, %mul10, !dbg !2361
  %16 = load float, float* %fc, align 4, !dbg !2362
  %17 = load float, float* %t.addr, align 4, !dbg !2363
  %mul12 = fmul float %16, %17, !dbg !2364
  %sub = fsub float %add11, %mul12, !dbg !2365
  %18 = load float*, float** %data.addr, align 8, !dbg !2366
  %arrayidx13 = getelementptr inbounds float, float* %18, i64 0, !dbg !2366
  store float %sub, float* %arrayidx13, align 4, !dbg !2367
  %19 = load float, float* %fc, align 4, !dbg !2368
  %sub14 = fsub float 2.000000e+00, %19, !dbg !2369
  %20 = load float, float* %t3, align 4, !dbg !2370
  %mul15 = fmul float %sub14, %20, !dbg !2371
  %21 = load float, float* %fc, align 4, !dbg !2372
  %sub16 = fsub float %21, 3.000000e+00, !dbg !2373
  %22 = load float, float* %t2, align 4, !dbg !2374
  %mul17 = fmul float %sub16, %22, !dbg !2375
  %add18 = fadd float %mul15, %mul17, !dbg !2376
  %add19 = fadd float %add18, 1.000000e+00, !dbg !2377
  %23 = load float*, float** %data.addr, align 8, !dbg !2378
  %arrayidx20 = getelementptr inbounds float, float* %23, i64 1, !dbg !2378
  store float %add19, float* %arrayidx20, align 4, !dbg !2379
  %24 = load float, float* %fc, align 4, !dbg !2380
  %sub21 = fsub float %24, 2.000000e+00, !dbg !2381
  %25 = load float, float* %t3, align 4, !dbg !2382
  %mul22 = fmul float %sub21, %25, !dbg !2383
  %26 = load float, float* %fc, align 4, !dbg !2384
  %mul23 = fmul float 2.000000e+00, %26, !dbg !2385
  %sub24 = fsub float 3.000000e+00, %mul23, !dbg !2386
  %27 = load float, float* %t2, align 4, !dbg !2387
  %mul25 = fmul float %sub24, %27, !dbg !2388
  %add26 = fadd float %mul22, %mul25, !dbg !2389
  %28 = load float, float* %fc, align 4, !dbg !2390
  %29 = load float, float* %t.addr, align 4, !dbg !2391
  %mul27 = fmul float %28, %29, !dbg !2392
  %add28 = fadd float %add26, %mul27, !dbg !2393
  %30 = load float*, float** %data.addr, align 8, !dbg !2394
  %arrayidx29 = getelementptr inbounds float, float* %30, i64 2, !dbg !2394
  store float %add28, float* %arrayidx29, align 4, !dbg !2395
  %31 = load float, float* %fc, align 4, !dbg !2396
  %32 = load float, float* %t3, align 4, !dbg !2397
  %mul30 = fmul float %31, %32, !dbg !2398
  %33 = load float, float* %fc, align 4, !dbg !2399
  %34 = load float, float* %t2, align 4, !dbg !2400
  %mul31 = fmul float %33, %34, !dbg !2401
  %sub32 = fsub float %mul30, %mul31, !dbg !2402
  %35 = load float*, float** %data.addr, align 8, !dbg !2403
  %arrayidx33 = getelementptr inbounds float, float* %35, i64 3, !dbg !2403
  store float %sub32, float* %arrayidx33, align 4, !dbg !2404
  br label %if.end93, !dbg !2405

if.else34:                                        ; preds = %if.else
  %36 = load i32, i32* %type.addr, align 4, !dbg !2406
  %cmp35 = icmp eq i32 %36, 2, !dbg !2408
  br i1 %cmp35, label %if.then36, label %if.else59, !dbg !2409

if.then36:                                        ; preds = %if.else34
  %37 = load float, float* %t.addr, align 4, !dbg !2410
  %38 = load float, float* %t.addr, align 4, !dbg !2412
  %mul37 = fmul float %37, %38, !dbg !2413
  store float %mul37, float* %t2, align 4, !dbg !2414
  %39 = load float, float* %t2, align 4, !dbg !2415
  %40 = load float, float* %t.addr, align 4, !dbg !2416
  %mul38 = fmul float %39, %40, !dbg !2417
  store float %mul38, float* %t3, align 4, !dbg !2418
  %41 = load float, float* %t3, align 4, !dbg !2419
  %mul39 = fmul float 0xBFC5555540000000, %41, !dbg !2420
  %42 = load float, float* %t2, align 4, !dbg !2421
  %mul40 = fmul float 5.000000e-01, %42, !dbg !2422
  %add41 = fadd float %mul39, %mul40, !dbg !2423
  %43 = load float, float* %t.addr, align 4, !dbg !2424
  %mul42 = fmul float 5.000000e-01, %43, !dbg !2425
  %sub43 = fsub float %add41, %mul42, !dbg !2426
  %add44 = fadd float %sub43, 0x3FC5555540000000, !dbg !2427
  %44 = load float*, float** %data.addr, align 8, !dbg !2428
  %arrayidx45 = getelementptr inbounds float, float* %44, i64 0, !dbg !2428
  store float %add44, float* %arrayidx45, align 4, !dbg !2429
  %45 = load float, float* %t3, align 4, !dbg !2430
  %mul46 = fmul float 5.000000e-01, %45, !dbg !2431
  %46 = load float, float* %t2, align 4, !dbg !2432
  %sub47 = fsub float %mul46, %46, !dbg !2433
  %add48 = fadd float %sub47, 0x3FE5555560000000, !dbg !2434
  %47 = load float*, float** %data.addr, align 8, !dbg !2435
  %arrayidx49 = getelementptr inbounds float, float* %47, i64 1, !dbg !2435
  store float %add48, float* %arrayidx49, align 4, !dbg !2436
  %48 = load float, float* %t3, align 4, !dbg !2437
  %mul50 = fmul float -5.000000e-01, %48, !dbg !2438
  %49 = load float, float* %t2, align 4, !dbg !2439
  %mul51 = fmul float 5.000000e-01, %49, !dbg !2440
  %add52 = fadd float %mul50, %mul51, !dbg !2441
  %50 = load float, float* %t.addr, align 4, !dbg !2442
  %mul53 = fmul float 5.000000e-01, %50, !dbg !2443
  %add54 = fadd float %add52, %mul53, !dbg !2444
  %add55 = fadd float %add54, 0x3FC5555540000000, !dbg !2445
  %51 = load float*, float** %data.addr, align 8, !dbg !2446
  %arrayidx56 = getelementptr inbounds float, float* %51, i64 2, !dbg !2446
  store float %add55, float* %arrayidx56, align 4, !dbg !2447
  %52 = load float, float* %t3, align 4, !dbg !2448
  %mul57 = fmul float 0x3FC5555540000000, %52, !dbg !2449
  %53 = load float*, float** %data.addr, align 8, !dbg !2450
  %arrayidx58 = getelementptr inbounds float, float* %53, i64 3, !dbg !2450
  store float %mul57, float* %arrayidx58, align 4, !dbg !2451
  br label %if.end92, !dbg !2452

if.else59:                                        ; preds = %if.else34
  %54 = load i32, i32* %type.addr, align 4, !dbg !2453
  %cmp60 = icmp eq i32 %54, 3, !dbg !2455
  br i1 %cmp60, label %if.then61, label %if.end, !dbg !2456

if.then61:                                        ; preds = %if.else59
  %55 = load float, float* %t.addr, align 4, !dbg !2457
  %56 = load float, float* %t.addr, align 4, !dbg !2459
  %mul62 = fmul float %55, %56, !dbg !2460
  store float %mul62, float* %t2, align 4, !dbg !2461
  %57 = load float, float* %t2, align 4, !dbg !2462
  %58 = load float, float* %t.addr, align 4, !dbg !2463
  %mul63 = fmul float %57, %58, !dbg !2464
  store float %mul63, float* %t3, align 4, !dbg !2465
  store float 5.000000e-01, float* %fc, align 4, !dbg !2466
  %59 = load float, float* %fc, align 4, !dbg !2467
  %fneg64 = fneg float %59, !dbg !2468
  %60 = load float, float* %t3, align 4, !dbg !2469
  %mul65 = fmul float %fneg64, %60, !dbg !2470
  %61 = load float, float* %fc, align 4, !dbg !2471
  %mul66 = fmul float 2.000000e+00, %61, !dbg !2472
  %62 = load float, float* %t2, align 4, !dbg !2473
  %mul67 = fmul float %mul66, %62, !dbg !2474
  %add68 = fadd float %mul65, %mul67, !dbg !2475
  %63 = load float, float* %fc, align 4, !dbg !2476
  %64 = load float, float* %t.addr, align 4, !dbg !2477
  %mul69 = fmul float %63, %64, !dbg !2478
  %sub70 = fsub float %add68, %mul69, !dbg !2479
  %65 = load float*, float** %data.addr, align 8, !dbg !2480
  %arrayidx71 = getelementptr inbounds float, float* %65, i64 0, !dbg !2480
  store float %sub70, float* %arrayidx71, align 4, !dbg !2481
  %66 = load float, float* %fc, align 4, !dbg !2482
  %sub72 = fsub float 2.000000e+00, %66, !dbg !2483
  %67 = load float, float* %t3, align 4, !dbg !2484
  %mul73 = fmul float %sub72, %67, !dbg !2485
  %68 = load float, float* %fc, align 4, !dbg !2486
  %sub74 = fsub float %68, 3.000000e+00, !dbg !2487
  %69 = load float, float* %t2, align 4, !dbg !2488
  %mul75 = fmul float %sub74, %69, !dbg !2489
  %add76 = fadd float %mul73, %mul75, !dbg !2490
  %add77 = fadd float %add76, 1.000000e+00, !dbg !2491
  %70 = load float*, float** %data.addr, align 8, !dbg !2492
  %arrayidx78 = getelementptr inbounds float, float* %70, i64 1, !dbg !2492
  store float %add77, float* %arrayidx78, align 4, !dbg !2493
  %71 = load float, float* %fc, align 4, !dbg !2494
  %sub79 = fsub float %71, 2.000000e+00, !dbg !2495
  %72 = load float, float* %t3, align 4, !dbg !2496
  %mul80 = fmul float %sub79, %72, !dbg !2497
  %73 = load float, float* %fc, align 4, !dbg !2498
  %mul81 = fmul float 2.000000e+00, %73, !dbg !2499
  %sub82 = fsub float 3.000000e+00, %mul81, !dbg !2500
  %74 = load float, float* %t2, align 4, !dbg !2501
  %mul83 = fmul float %sub82, %74, !dbg !2502
  %add84 = fadd float %mul80, %mul83, !dbg !2503
  %75 = load float, float* %fc, align 4, !dbg !2504
  %76 = load float, float* %t.addr, align 4, !dbg !2505
  %mul85 = fmul float %75, %76, !dbg !2506
  %add86 = fadd float %add84, %mul85, !dbg !2507
  %77 = load float*, float** %data.addr, align 8, !dbg !2508
  %arrayidx87 = getelementptr inbounds float, float* %77, i64 2, !dbg !2508
  store float %add86, float* %arrayidx87, align 4, !dbg !2509
  %78 = load float, float* %fc, align 4, !dbg !2510
  %79 = load float, float* %t3, align 4, !dbg !2511
  %mul88 = fmul float %78, %79, !dbg !2512
  %80 = load float, float* %fc, align 4, !dbg !2513
  %81 = load float, float* %t2, align 4, !dbg !2514
  %mul89 = fmul float %80, %81, !dbg !2515
  %sub90 = fsub float %mul88, %mul89, !dbg !2516
  %82 = load float*, float** %data.addr, align 8, !dbg !2517
  %arrayidx91 = getelementptr inbounds float, float* %82, i64 3, !dbg !2517
  store float %sub90, float* %arrayidx91, align 4, !dbg !2518
  br label %if.end, !dbg !2519

if.end:                                           ; preds = %if.then61, %if.else59
  br label %if.end92

if.end92:                                         ; preds = %if.end, %if.then36
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then5
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then
  ret void, !dbg !2520
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @key_curve_tangent_weights(float %t, float* %data, i32 %type) #0 !dbg !2521 {
entry:
  %t.addr = alloca float, align 4
  %data.addr = alloca float*, align 8
  %type.addr = alloca i32, align 4
  %t2 = alloca float, align 4
  %fc = alloca float, align 4
  store float %t, float* %t.addr, align 4
  call void @llvm.dbg.declare(metadata float* %t.addr, metadata !2522, metadata !DIExpression()), !dbg !2523
  store float* %data, float** %data.addr, align 8
  call void @llvm.dbg.declare(metadata float** %data.addr, metadata !2524, metadata !DIExpression()), !dbg !2525
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !2526, metadata !DIExpression()), !dbg !2527
  call void @llvm.dbg.declare(metadata float* %t2, metadata !2528, metadata !DIExpression()), !dbg !2529
  call void @llvm.dbg.declare(metadata float* %fc, metadata !2530, metadata !DIExpression()), !dbg !2531
  %0 = load i32, i32* %type.addr, align 4, !dbg !2532
  %cmp = icmp eq i32 %0, 0, !dbg !2534
  br i1 %cmp, label %if.then, label %if.else, !dbg !2535

if.then:                                          ; preds = %entry
  %1 = load float*, float** %data.addr, align 8, !dbg !2536
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !2536
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !2538
  %2 = load float*, float** %data.addr, align 8, !dbg !2539
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !2539
  store float -1.000000e+00, float* %arrayidx1, align 4, !dbg !2540
  %3 = load float*, float** %data.addr, align 8, !dbg !2541
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 2, !dbg !2541
  store float 1.000000e+00, float* %arrayidx2, align 4, !dbg !2542
  %4 = load float*, float** %data.addr, align 8, !dbg !2543
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 3, !dbg !2543
  store float 0.000000e+00, float* %arrayidx3, align 4, !dbg !2544
  br label %if.end90, !dbg !2545

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %type.addr, align 4, !dbg !2546
  %cmp4 = icmp eq i32 %5, 1, !dbg !2548
  br i1 %cmp4, label %if.then5, label %if.else35, !dbg !2549

if.then5:                                         ; preds = %if.else
  %6 = load float, float* %t.addr, align 4, !dbg !2550
  %7 = load float, float* %t.addr, align 4, !dbg !2552
  %mul = fmul float %6, %7, !dbg !2553
  store float %mul, float* %t2, align 4, !dbg !2554
  store float 0x3FE6B851E0000000, float* %fc, align 4, !dbg !2555
  %8 = load float, float* %fc, align 4, !dbg !2556
  %mul6 = fmul float -3.000000e+00, %8, !dbg !2557
  %9 = load float, float* %t2, align 4, !dbg !2558
  %mul7 = fmul float %mul6, %9, !dbg !2559
  %10 = load float, float* %fc, align 4, !dbg !2560
  %mul8 = fmul float 4.000000e+00, %10, !dbg !2561
  %11 = load float, float* %t.addr, align 4, !dbg !2562
  %mul9 = fmul float %mul8, %11, !dbg !2563
  %add = fadd float %mul7, %mul9, !dbg !2564
  %12 = load float, float* %fc, align 4, !dbg !2565
  %sub = fsub float %add, %12, !dbg !2566
  %13 = load float*, float** %data.addr, align 8, !dbg !2567
  %arrayidx10 = getelementptr inbounds float, float* %13, i64 0, !dbg !2567
  store float %sub, float* %arrayidx10, align 4, !dbg !2568
  %14 = load float, float* %fc, align 4, !dbg !2569
  %sub11 = fsub float 2.000000e+00, %14, !dbg !2570
  %mul12 = fmul float 3.000000e+00, %sub11, !dbg !2571
  %15 = load float, float* %t2, align 4, !dbg !2572
  %mul13 = fmul float %mul12, %15, !dbg !2573
  %16 = load float, float* %fc, align 4, !dbg !2574
  %sub14 = fsub float %16, 3.000000e+00, !dbg !2575
  %mul15 = fmul float 2.000000e+00, %sub14, !dbg !2576
  %17 = load float, float* %t.addr, align 4, !dbg !2577
  %mul16 = fmul float %mul15, %17, !dbg !2578
  %add17 = fadd float %mul13, %mul16, !dbg !2579
  %18 = load float*, float** %data.addr, align 8, !dbg !2580
  %arrayidx18 = getelementptr inbounds float, float* %18, i64 1, !dbg !2580
  store float %add17, float* %arrayidx18, align 4, !dbg !2581
  %19 = load float, float* %fc, align 4, !dbg !2582
  %sub19 = fsub float %19, 2.000000e+00, !dbg !2583
  %mul20 = fmul float 3.000000e+00, %sub19, !dbg !2584
  %20 = load float, float* %t2, align 4, !dbg !2585
  %mul21 = fmul float %mul20, %20, !dbg !2586
  %21 = load float, float* %fc, align 4, !dbg !2587
  %mul22 = fmul float 2.000000e+00, %21, !dbg !2588
  %sub23 = fsub float 3.000000e+00, %mul22, !dbg !2589
  %mul24 = fmul float 2.000000e+00, %sub23, !dbg !2590
  %22 = load float, float* %t.addr, align 4, !dbg !2591
  %mul25 = fmul float %mul24, %22, !dbg !2592
  %add26 = fadd float %mul21, %mul25, !dbg !2593
  %23 = load float, float* %fc, align 4, !dbg !2594
  %add27 = fadd float %add26, %23, !dbg !2595
  %24 = load float*, float** %data.addr, align 8, !dbg !2596
  %arrayidx28 = getelementptr inbounds float, float* %24, i64 2, !dbg !2596
  store float %add27, float* %arrayidx28, align 4, !dbg !2597
  %25 = load float, float* %fc, align 4, !dbg !2598
  %mul29 = fmul float 3.000000e+00, %25, !dbg !2599
  %26 = load float, float* %t2, align 4, !dbg !2600
  %mul30 = fmul float %mul29, %26, !dbg !2601
  %27 = load float, float* %fc, align 4, !dbg !2602
  %mul31 = fmul float 2.000000e+00, %27, !dbg !2603
  %28 = load float, float* %t.addr, align 4, !dbg !2604
  %mul32 = fmul float %mul31, %28, !dbg !2605
  %sub33 = fsub float %mul30, %mul32, !dbg !2606
  %29 = load float*, float** %data.addr, align 8, !dbg !2607
  %arrayidx34 = getelementptr inbounds float, float* %29, i64 3, !dbg !2607
  store float %sub33, float* %arrayidx34, align 4, !dbg !2608
  br label %if.end89, !dbg !2609

if.else35:                                        ; preds = %if.else
  %30 = load i32, i32* %type.addr, align 4, !dbg !2610
  %cmp36 = icmp eq i32 %30, 2, !dbg !2612
  br i1 %cmp36, label %if.then37, label %if.else53, !dbg !2613

if.then37:                                        ; preds = %if.else35
  %31 = load float, float* %t.addr, align 4, !dbg !2614
  %32 = load float, float* %t.addr, align 4, !dbg !2616
  %mul38 = fmul float %31, %32, !dbg !2617
  store float %mul38, float* %t2, align 4, !dbg !2618
  %33 = load float, float* %t2, align 4, !dbg !2619
  %mul39 = fmul float -5.000000e-01, %33, !dbg !2620
  %34 = load float, float* %t.addr, align 4, !dbg !2621
  %add40 = fadd float %mul39, %34, !dbg !2622
  %sub41 = fsub float %add40, 5.000000e-01, !dbg !2623
  %35 = load float*, float** %data.addr, align 8, !dbg !2624
  %arrayidx42 = getelementptr inbounds float, float* %35, i64 0, !dbg !2624
  store float %sub41, float* %arrayidx42, align 4, !dbg !2625
  %36 = load float, float* %t2, align 4, !dbg !2626
  %mul43 = fmul float 1.500000e+00, %36, !dbg !2627
  %37 = load float, float* %t.addr, align 4, !dbg !2628
  %mul44 = fmul float %37, 2.000000e+00, !dbg !2629
  %sub45 = fsub float %mul43, %mul44, !dbg !2630
  %38 = load float*, float** %data.addr, align 8, !dbg !2631
  %arrayidx46 = getelementptr inbounds float, float* %38, i64 1, !dbg !2631
  store float %sub45, float* %arrayidx46, align 4, !dbg !2632
  %39 = load float, float* %t2, align 4, !dbg !2633
  %mul47 = fmul float -1.500000e+00, %39, !dbg !2634
  %40 = load float, float* %t.addr, align 4, !dbg !2635
  %add48 = fadd float %mul47, %40, !dbg !2636
  %add49 = fadd float %add48, 5.000000e-01, !dbg !2637
  %41 = load float*, float** %data.addr, align 8, !dbg !2638
  %arrayidx50 = getelementptr inbounds float, float* %41, i64 2, !dbg !2638
  store float %add49, float* %arrayidx50, align 4, !dbg !2639
  %42 = load float, float* %t2, align 4, !dbg !2640
  %mul51 = fmul float 5.000000e-01, %42, !dbg !2641
  %43 = load float*, float** %data.addr, align 8, !dbg !2642
  %arrayidx52 = getelementptr inbounds float, float* %43, i64 3, !dbg !2642
  store float %mul51, float* %arrayidx52, align 4, !dbg !2643
  br label %if.end88, !dbg !2644

if.else53:                                        ; preds = %if.else35
  %44 = load i32, i32* %type.addr, align 4, !dbg !2645
  %cmp54 = icmp eq i32 %44, 3, !dbg !2647
  br i1 %cmp54, label %if.then55, label %if.end, !dbg !2648

if.then55:                                        ; preds = %if.else53
  %45 = load float, float* %t.addr, align 4, !dbg !2649
  %46 = load float, float* %t.addr, align 4, !dbg !2651
  %mul56 = fmul float %45, %46, !dbg !2652
  store float %mul56, float* %t2, align 4, !dbg !2653
  store float 5.000000e-01, float* %fc, align 4, !dbg !2654
  %47 = load float, float* %fc, align 4, !dbg !2655
  %mul57 = fmul float -3.000000e+00, %47, !dbg !2656
  %48 = load float, float* %t2, align 4, !dbg !2657
  %mul58 = fmul float %mul57, %48, !dbg !2658
  %49 = load float, float* %fc, align 4, !dbg !2659
  %mul59 = fmul float 4.000000e+00, %49, !dbg !2660
  %50 = load float, float* %t.addr, align 4, !dbg !2661
  %mul60 = fmul float %mul59, %50, !dbg !2662
  %add61 = fadd float %mul58, %mul60, !dbg !2663
  %51 = load float, float* %fc, align 4, !dbg !2664
  %sub62 = fsub float %add61, %51, !dbg !2665
  %52 = load float*, float** %data.addr, align 8, !dbg !2666
  %arrayidx63 = getelementptr inbounds float, float* %52, i64 0, !dbg !2666
  store float %sub62, float* %arrayidx63, align 4, !dbg !2667
  %53 = load float, float* %fc, align 4, !dbg !2668
  %sub64 = fsub float 2.000000e+00, %53, !dbg !2669
  %mul65 = fmul float 3.000000e+00, %sub64, !dbg !2670
  %54 = load float, float* %t2, align 4, !dbg !2671
  %mul66 = fmul float %mul65, %54, !dbg !2672
  %55 = load float, float* %fc, align 4, !dbg !2673
  %sub67 = fsub float %55, 3.000000e+00, !dbg !2674
  %mul68 = fmul float 2.000000e+00, %sub67, !dbg !2675
  %56 = load float, float* %t.addr, align 4, !dbg !2676
  %mul69 = fmul float %mul68, %56, !dbg !2677
  %add70 = fadd float %mul66, %mul69, !dbg !2678
  %57 = load float*, float** %data.addr, align 8, !dbg !2679
  %arrayidx71 = getelementptr inbounds float, float* %57, i64 1, !dbg !2679
  store float %add70, float* %arrayidx71, align 4, !dbg !2680
  %58 = load float, float* %fc, align 4, !dbg !2681
  %sub72 = fsub float %58, 2.000000e+00, !dbg !2682
  %mul73 = fmul float 3.000000e+00, %sub72, !dbg !2683
  %59 = load float, float* %t2, align 4, !dbg !2684
  %mul74 = fmul float %mul73, %59, !dbg !2685
  %60 = load float, float* %fc, align 4, !dbg !2686
  %mul75 = fmul float 2.000000e+00, %60, !dbg !2687
  %sub76 = fsub float 3.000000e+00, %mul75, !dbg !2688
  %mul77 = fmul float 2.000000e+00, %sub76, !dbg !2689
  %61 = load float, float* %t.addr, align 4, !dbg !2690
  %mul78 = fmul float %mul77, %61, !dbg !2691
  %add79 = fadd float %mul74, %mul78, !dbg !2692
  %62 = load float, float* %fc, align 4, !dbg !2693
  %add80 = fadd float %add79, %62, !dbg !2694
  %63 = load float*, float** %data.addr, align 8, !dbg !2695
  %arrayidx81 = getelementptr inbounds float, float* %63, i64 2, !dbg !2695
  store float %add80, float* %arrayidx81, align 4, !dbg !2696
  %64 = load float, float* %fc, align 4, !dbg !2697
  %mul82 = fmul float 3.000000e+00, %64, !dbg !2698
  %65 = load float, float* %t2, align 4, !dbg !2699
  %mul83 = fmul float %mul82, %65, !dbg !2700
  %66 = load float, float* %fc, align 4, !dbg !2701
  %mul84 = fmul float 2.000000e+00, %66, !dbg !2702
  %67 = load float, float* %t.addr, align 4, !dbg !2703
  %mul85 = fmul float %mul84, %67, !dbg !2704
  %sub86 = fsub float %mul83, %mul85, !dbg !2705
  %68 = load float*, float** %data.addr, align 8, !dbg !2706
  %arrayidx87 = getelementptr inbounds float, float* %68, i64 3, !dbg !2706
  store float %sub86, float* %arrayidx87, align 4, !dbg !2707
  br label %if.end, !dbg !2708

if.end:                                           ; preds = %if.then55, %if.else53
  br label %if.end88

if.end88:                                         ; preds = %if.end, %if.then37
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.then5
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then
  ret void, !dbg !2709
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @key_curve_normal_weights(float %t, float* %data, i32 %type) #0 !dbg !2710 {
entry:
  %t.addr = alloca float, align 4
  %data.addr = alloca float*, align 8
  %type.addr = alloca i32, align 4
  %fc = alloca float, align 4
  store float %t, float* %t.addr, align 4
  call void @llvm.dbg.declare(metadata float* %t.addr, metadata !2711, metadata !DIExpression()), !dbg !2712
  store float* %data, float** %data.addr, align 8
  call void @llvm.dbg.declare(metadata float** %data.addr, metadata !2713, metadata !DIExpression()), !dbg !2714
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !2715, metadata !DIExpression()), !dbg !2716
  call void @llvm.dbg.declare(metadata float* %fc, metadata !2717, metadata !DIExpression()), !dbg !2718
  %0 = load i32, i32* %type.addr, align 4, !dbg !2719
  %cmp = icmp eq i32 %0, 0, !dbg !2721
  br i1 %cmp, label %if.then, label %if.else, !dbg !2722

if.then:                                          ; preds = %entry
  %1 = load float*, float** %data.addr, align 8, !dbg !2723
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !2723
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !2725
  %2 = load float*, float** %data.addr, align 8, !dbg !2726
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !2726
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !2727
  %3 = load float*, float** %data.addr, align 8, !dbg !2728
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 2, !dbg !2728
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !2729
  %4 = load float*, float** %data.addr, align 8, !dbg !2730
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 3, !dbg !2730
  store float 0.000000e+00, float* %arrayidx3, align 4, !dbg !2731
  br label %if.end72, !dbg !2732

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %type.addr, align 4, !dbg !2733
  %cmp4 = icmp eq i32 %5, 1, !dbg !2735
  br i1 %cmp4, label %if.then5, label %if.else28, !dbg !2736

if.then5:                                         ; preds = %if.else
  store float 0x3FE6B851E0000000, float* %fc, align 4, !dbg !2737
  %6 = load float, float* %fc, align 4, !dbg !2739
  %mul = fmul float -6.000000e+00, %6, !dbg !2740
  %7 = load float, float* %t.addr, align 4, !dbg !2741
  %mul6 = fmul float %mul, %7, !dbg !2742
  %8 = load float, float* %fc, align 4, !dbg !2743
  %mul7 = fmul float 4.000000e+00, %8, !dbg !2744
  %add = fadd float %mul6, %mul7, !dbg !2745
  %9 = load float*, float** %data.addr, align 8, !dbg !2746
  %arrayidx8 = getelementptr inbounds float, float* %9, i64 0, !dbg !2746
  store float %add, float* %arrayidx8, align 4, !dbg !2747
  %10 = load float, float* %fc, align 4, !dbg !2748
  %sub = fsub float 2.000000e+00, %10, !dbg !2749
  %mul9 = fmul float 6.000000e+00, %sub, !dbg !2750
  %11 = load float, float* %t.addr, align 4, !dbg !2751
  %mul10 = fmul float %mul9, %11, !dbg !2752
  %12 = load float, float* %fc, align 4, !dbg !2753
  %sub11 = fsub float %12, 3.000000e+00, !dbg !2754
  %mul12 = fmul float 2.000000e+00, %sub11, !dbg !2755
  %add13 = fadd float %mul10, %mul12, !dbg !2756
  %13 = load float*, float** %data.addr, align 8, !dbg !2757
  %arrayidx14 = getelementptr inbounds float, float* %13, i64 1, !dbg !2757
  store float %add13, float* %arrayidx14, align 4, !dbg !2758
  %14 = load float, float* %fc, align 4, !dbg !2759
  %sub15 = fsub float %14, 2.000000e+00, !dbg !2760
  %mul16 = fmul float 6.000000e+00, %sub15, !dbg !2761
  %15 = load float, float* %t.addr, align 4, !dbg !2762
  %mul17 = fmul float %mul16, %15, !dbg !2763
  %16 = load float, float* %fc, align 4, !dbg !2764
  %mul18 = fmul float 2.000000e+00, %16, !dbg !2765
  %sub19 = fsub float 3.000000e+00, %mul18, !dbg !2766
  %mul20 = fmul float 2.000000e+00, %sub19, !dbg !2767
  %add21 = fadd float %mul17, %mul20, !dbg !2768
  %17 = load float*, float** %data.addr, align 8, !dbg !2769
  %arrayidx22 = getelementptr inbounds float, float* %17, i64 2, !dbg !2769
  store float %add21, float* %arrayidx22, align 4, !dbg !2770
  %18 = load float, float* %fc, align 4, !dbg !2771
  %mul23 = fmul float 6.000000e+00, %18, !dbg !2772
  %19 = load float, float* %t.addr, align 4, !dbg !2773
  %mul24 = fmul float %mul23, %19, !dbg !2774
  %20 = load float, float* %fc, align 4, !dbg !2775
  %mul25 = fmul float 2.000000e+00, %20, !dbg !2776
  %sub26 = fsub float %mul24, %mul25, !dbg !2777
  %21 = load float*, float** %data.addr, align 8, !dbg !2778
  %arrayidx27 = getelementptr inbounds float, float* %21, i64 3, !dbg !2778
  store float %sub26, float* %arrayidx27, align 4, !dbg !2779
  br label %if.end71, !dbg !2780

if.else28:                                        ; preds = %if.else
  %22 = load i32, i32* %type.addr, align 4, !dbg !2781
  %cmp29 = icmp eq i32 %22, 2, !dbg !2783
  br i1 %cmp29, label %if.then30, label %if.else42, !dbg !2784

if.then30:                                        ; preds = %if.else28
  %23 = load float, float* %t.addr, align 4, !dbg !2785
  %mul31 = fmul float -1.000000e+00, %23, !dbg !2787
  %add32 = fadd float %mul31, 1.000000e+00, !dbg !2788
  %24 = load float*, float** %data.addr, align 8, !dbg !2789
  %arrayidx33 = getelementptr inbounds float, float* %24, i64 0, !dbg !2789
  store float %add32, float* %arrayidx33, align 4, !dbg !2790
  %25 = load float, float* %t.addr, align 4, !dbg !2791
  %mul34 = fmul float 3.000000e+00, %25, !dbg !2792
  %sub35 = fsub float %mul34, 2.000000e+00, !dbg !2793
  %26 = load float*, float** %data.addr, align 8, !dbg !2794
  %arrayidx36 = getelementptr inbounds float, float* %26, i64 1, !dbg !2794
  store float %sub35, float* %arrayidx36, align 4, !dbg !2795
  %27 = load float, float* %t.addr, align 4, !dbg !2796
  %mul37 = fmul float -3.000000e+00, %27, !dbg !2797
  %add38 = fadd float %mul37, 1.000000e+00, !dbg !2798
  %28 = load float*, float** %data.addr, align 8, !dbg !2799
  %arrayidx39 = getelementptr inbounds float, float* %28, i64 2, !dbg !2799
  store float %add38, float* %arrayidx39, align 4, !dbg !2800
  %29 = load float, float* %t.addr, align 4, !dbg !2801
  %mul40 = fmul float 1.000000e+00, %29, !dbg !2802
  %30 = load float*, float** %data.addr, align 8, !dbg !2803
  %arrayidx41 = getelementptr inbounds float, float* %30, i64 3, !dbg !2803
  store float %mul40, float* %arrayidx41, align 4, !dbg !2804
  br label %if.end70, !dbg !2805

if.else42:                                        ; preds = %if.else28
  %31 = load i32, i32* %type.addr, align 4, !dbg !2806
  %cmp43 = icmp eq i32 %31, 3, !dbg !2808
  br i1 %cmp43, label %if.then44, label %if.end, !dbg !2809

if.then44:                                        ; preds = %if.else42
  store float 5.000000e-01, float* %fc, align 4, !dbg !2810
  %32 = load float, float* %fc, align 4, !dbg !2812
  %mul45 = fmul float -6.000000e+00, %32, !dbg !2813
  %33 = load float, float* %t.addr, align 4, !dbg !2814
  %mul46 = fmul float %mul45, %33, !dbg !2815
  %34 = load float, float* %fc, align 4, !dbg !2816
  %mul47 = fmul float 4.000000e+00, %34, !dbg !2817
  %add48 = fadd float %mul46, %mul47, !dbg !2818
  %35 = load float*, float** %data.addr, align 8, !dbg !2819
  %arrayidx49 = getelementptr inbounds float, float* %35, i64 0, !dbg !2819
  store float %add48, float* %arrayidx49, align 4, !dbg !2820
  %36 = load float, float* %fc, align 4, !dbg !2821
  %sub50 = fsub float 2.000000e+00, %36, !dbg !2822
  %mul51 = fmul float 6.000000e+00, %sub50, !dbg !2823
  %37 = load float, float* %t.addr, align 4, !dbg !2824
  %mul52 = fmul float %mul51, %37, !dbg !2825
  %38 = load float, float* %fc, align 4, !dbg !2826
  %sub53 = fsub float %38, 3.000000e+00, !dbg !2827
  %mul54 = fmul float 2.000000e+00, %sub53, !dbg !2828
  %add55 = fadd float %mul52, %mul54, !dbg !2829
  %39 = load float*, float** %data.addr, align 8, !dbg !2830
  %arrayidx56 = getelementptr inbounds float, float* %39, i64 1, !dbg !2830
  store float %add55, float* %arrayidx56, align 4, !dbg !2831
  %40 = load float, float* %fc, align 4, !dbg !2832
  %sub57 = fsub float %40, 2.000000e+00, !dbg !2833
  %mul58 = fmul float 6.000000e+00, %sub57, !dbg !2834
  %41 = load float, float* %t.addr, align 4, !dbg !2835
  %mul59 = fmul float %mul58, %41, !dbg !2836
  %42 = load float, float* %fc, align 4, !dbg !2837
  %mul60 = fmul float 2.000000e+00, %42, !dbg !2838
  %sub61 = fsub float 3.000000e+00, %mul60, !dbg !2839
  %mul62 = fmul float 2.000000e+00, %sub61, !dbg !2840
  %add63 = fadd float %mul59, %mul62, !dbg !2841
  %43 = load float*, float** %data.addr, align 8, !dbg !2842
  %arrayidx64 = getelementptr inbounds float, float* %43, i64 2, !dbg !2842
  store float %add63, float* %arrayidx64, align 4, !dbg !2843
  %44 = load float, float* %fc, align 4, !dbg !2844
  %mul65 = fmul float 6.000000e+00, %44, !dbg !2845
  %45 = load float, float* %t.addr, align 4, !dbg !2846
  %mul66 = fmul float %mul65, %45, !dbg !2847
  %46 = load float, float* %fc, align 4, !dbg !2848
  %mul67 = fmul float 2.000000e+00, %46, !dbg !2849
  %sub68 = fsub float %mul66, %mul67, !dbg !2850
  %47 = load float*, float** %data.addr, align 8, !dbg !2851
  %arrayidx69 = getelementptr inbounds float, float* %47, i64 3, !dbg !2851
  store float %sub68, float* %arrayidx69, align 4, !dbg !2852
  br label %if.end, !dbg !2853

if.end:                                           ; preds = %if.then44, %if.else42
  br label %if.end70

if.end70:                                         ; preds = %if.end, %if.then30
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.then5
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then
  ret void, !dbg !2854
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_key_evaluate_relative(i32 %start, i32 %end, i32 %tot, i8* %basispoin, %struct.Key* %key, %struct.KeyBlock* %actkb, float** %per_keyblock_weights, i32 %mode) #0 !dbg !2855 {
entry:
  %start.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %tot.addr = alloca i32, align 4
  %basispoin.addr = alloca i8*, align 8
  %key.addr = alloca %struct.Key*, align 8
  %actkb.addr = alloca %struct.KeyBlock*, align 8
  %per_keyblock_weights.addr = alloca float**, align 8
  %mode.addr = alloca i32, align 4
  %kb = alloca %struct.KeyBlock*, align 8
  %ofsp = alloca i32*, align 8
  %ofs = alloca [3 x i32], align 4
  %elemsize = alloca i32, align 4
  %b = alloca i32, align 4
  %cp = alloca i8*, align 8
  %poin = alloca i8*, align 8
  %reffrom = alloca i8*, align 8
  %from = alloca i8*, align 8
  %elemstr = alloca [8 x i8], align 1
  %poinsize = alloca i32, align 4
  %keyblock_index = alloca i32, align 4
  %icuval = alloca float, align 4
  %refb = alloca %struct.KeyBlock*, align 8
  %weight = alloca float, align 4
  %weights = alloca float*, align 8
  %freefrom = alloca i8*, align 8
  %freereffrom = alloca i8*, align 8
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !2860, metadata !DIExpression()), !dbg !2861
  store i32 %end, i32* %end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end.addr, metadata !2862, metadata !DIExpression()), !dbg !2863
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !2864, metadata !DIExpression()), !dbg !2865
  store i8* %basispoin, i8** %basispoin.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %basispoin.addr, metadata !2866, metadata !DIExpression()), !dbg !2867
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !2868, metadata !DIExpression()), !dbg !2869
  store %struct.KeyBlock* %actkb, %struct.KeyBlock** %actkb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %actkb.addr, metadata !2870, metadata !DIExpression()), !dbg !2871
  store float** %per_keyblock_weights, float*** %per_keyblock_weights.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %per_keyblock_weights.addr, metadata !2872, metadata !DIExpression()), !dbg !2873
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !2874, metadata !DIExpression()), !dbg !2875
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !2876, metadata !DIExpression()), !dbg !2877
  call void @llvm.dbg.declare(metadata i32** %ofsp, metadata !2878, metadata !DIExpression()), !dbg !2880
  call void @llvm.dbg.declare(metadata [3 x i32]* %ofs, metadata !2881, metadata !DIExpression()), !dbg !2882
  call void @llvm.dbg.declare(metadata i32* %elemsize, metadata !2883, metadata !DIExpression()), !dbg !2884
  call void @llvm.dbg.declare(metadata i32* %b, metadata !2885, metadata !DIExpression()), !dbg !2886
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !2887, metadata !DIExpression()), !dbg !2888
  call void @llvm.dbg.declare(metadata i8** %poin, metadata !2889, metadata !DIExpression()), !dbg !2890
  call void @llvm.dbg.declare(metadata i8** %reffrom, metadata !2891, metadata !DIExpression()), !dbg !2892
  call void @llvm.dbg.declare(metadata i8** %from, metadata !2893, metadata !DIExpression()), !dbg !2894
  call void @llvm.dbg.declare(metadata [8 x i8]* %elemstr, metadata !2895, metadata !DIExpression()), !dbg !2896
  call void @llvm.dbg.declare(metadata i32* %poinsize, metadata !2897, metadata !DIExpression()), !dbg !2898
  call void @llvm.dbg.declare(metadata i32* %keyblock_index, metadata !2899, metadata !DIExpression()), !dbg !2900
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %ofs, i64 0, i64 1, !dbg !2901
  store i32 0, i32* %arrayidx, align 4, !dbg !2902
  %0 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2903
  %1 = load i32, i32* %mode.addr, align 4, !dbg !2905
  %arrayidx1 = getelementptr inbounds [3 x i32], [3 x i32]* %ofs, i64 0, i64 0, !dbg !2906
  %call = call zeroext i8 @key_pointer_size(%struct.Key* %0, i32 %1, i32* %poinsize, i32* %arrayidx1), !dbg !2907
  %tobool = icmp ne i8 %call, 0, !dbg !2907
  br i1 %tobool, label %if.end, label %if.then, !dbg !2908

if.then:                                          ; preds = %entry
  br label %for.end96, !dbg !2909

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %end.addr, align 4, !dbg !2910
  %3 = load i32, i32* %tot.addr, align 4, !dbg !2912
  %cmp = icmp sgt i32 %2, %3, !dbg !2913
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !2914

if.then2:                                         ; preds = %if.end
  %4 = load i32, i32* %tot.addr, align 4, !dbg !2915
  store i32 %4, i32* %end.addr, align 4, !dbg !2916
  br label %if.end3, !dbg !2917

if.end3:                                          ; preds = %if.then2, %if.end
  %arrayidx4 = getelementptr inbounds [8 x i8], [8 x i8]* %elemstr, i64 0, i64 0, !dbg !2918
  store i8 1, i8* %arrayidx4, align 1, !dbg !2919
  %arrayidx5 = getelementptr inbounds [8 x i8], [8 x i8]* %elemstr, i64 0, i64 1, !dbg !2920
  store i8 100, i8* %arrayidx5, align 1, !dbg !2921
  %arrayidx6 = getelementptr inbounds [8 x i8], [8 x i8]* %elemstr, i64 0, i64 2, !dbg !2922
  store i8 0, i8* %arrayidx6, align 1, !dbg !2923
  %5 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2924
  %elemsize7 = getelementptr inbounds %struct.Key, %struct.Key* %5, i32 0, i32 4, !dbg !2925
  %6 = load i32, i32* %elemsize7, align 8, !dbg !2925
  store i32 %6, i32* %elemsize, align 4, !dbg !2926
  %7 = load i32, i32* %mode.addr, align 4, !dbg !2927
  %cmp8 = icmp eq i32 %7, 2, !dbg !2929
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !2930

if.then9:                                         ; preds = %if.end3
  %8 = load i32, i32* %elemsize, align 4, !dbg !2931
  %mul = mul nsw i32 %8, 3, !dbg !2931
  store i32 %mul, i32* %elemsize, align 4, !dbg !2931
  br label %if.end10, !dbg !2932

if.end10:                                         ; preds = %if.then9, %if.end3
  %9 = load i32, i32* %start.addr, align 4, !dbg !2933
  %10 = load i32, i32* %end.addr, align 4, !dbg !2934
  %11 = load i32, i32* %tot.addr, align 4, !dbg !2935
  %12 = load i8*, i8** %basispoin.addr, align 8, !dbg !2936
  %13 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2937
  %14 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb.addr, align 8, !dbg !2938
  %15 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2939
  %refkey = getelementptr inbounds %struct.Key, %struct.Key* %15, i32 0, i32 2, !dbg !2940
  %16 = load %struct.KeyBlock*, %struct.KeyBlock** %refkey, align 8, !dbg !2940
  %17 = load i32, i32* %mode.addr, align 4, !dbg !2941
  call void @cp_key(i32 %9, i32 %10, i32 %11, i8* %12, %struct.Key* %13, %struct.KeyBlock* %14, %struct.KeyBlock* %16, float* null, i32 %17), !dbg !2942
  %18 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2943
  %block = getelementptr inbounds %struct.Key, %struct.Key* %18, i32 0, i32 6, !dbg !2945
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 0, !dbg !2946
  %19 = load i8*, i8** %first, align 8, !dbg !2946
  %20 = bitcast i8* %19 to %struct.KeyBlock*, !dbg !2943
  store %struct.KeyBlock* %20, %struct.KeyBlock** %kb, align 8, !dbg !2947
  store i32 0, i32* %keyblock_index, align 4, !dbg !2948
  br label %for.cond, !dbg !2949

for.cond:                                         ; preds = %for.inc94, %if.end10
  %21 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2950
  %tobool11 = icmp ne %struct.KeyBlock* %21, null, !dbg !2952
  br i1 %tobool11, label %for.body, label %for.end96, !dbg !2952

for.body:                                         ; preds = %for.cond
  %22 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2953
  %23 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2956
  %refkey12 = getelementptr inbounds %struct.Key, %struct.Key* %23, i32 0, i32 2, !dbg !2957
  %24 = load %struct.KeyBlock*, %struct.KeyBlock** %refkey12, align 8, !dbg !2957
  %cmp13 = icmp ne %struct.KeyBlock* %22, %24, !dbg !2958
  br i1 %cmp13, label %if.then14, label %if.end93, !dbg !2959

if.then14:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata float* %icuval, metadata !2960, metadata !DIExpression()), !dbg !2962
  %25 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2963
  %curval = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %25, i32 0, i32 3, !dbg !2964
  %26 = load float, float* %curval, align 4, !dbg !2964
  store float %26, float* %icuval, align 4, !dbg !2962
  %27 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2965
  %flag = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %27, i32 0, i32 7, !dbg !2967
  %28 = load i16, i16* %flag, align 2, !dbg !2967
  %conv = sext i16 %28 to i32, !dbg !2965
  %and = and i32 %conv, 1, !dbg !2968
  %tobool15 = icmp ne i32 %and, 0, !dbg !2968
  br i1 %tobool15, label %if.end92, label %land.lhs.true, !dbg !2969

land.lhs.true:                                    ; preds = %if.then14
  %29 = load float, float* %icuval, align 4, !dbg !2970
  %cmp16 = fcmp une float %29, 0.000000e+00, !dbg !2971
  br i1 %cmp16, label %land.lhs.true18, label %if.end92, !dbg !2972

land.lhs.true18:                                  ; preds = %land.lhs.true
  %30 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2973
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %30, i32 0, i32 8, !dbg !2974
  %31 = load i32, i32* %totelem, align 8, !dbg !2974
  %32 = load i32, i32* %tot.addr, align 4, !dbg !2975
  %cmp19 = icmp eq i32 %31, %32, !dbg !2976
  br i1 %cmp19, label %if.then21, label %if.end92, !dbg !2977

if.then21:                                        ; preds = %land.lhs.true18
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %refb, metadata !2978, metadata !DIExpression()), !dbg !2980
  call void @llvm.dbg.declare(metadata float* %weight, metadata !2981, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.declare(metadata float** %weights, metadata !2983, metadata !DIExpression()), !dbg !2984
  %33 = load float**, float*** %per_keyblock_weights.addr, align 8, !dbg !2985
  %tobool22 = icmp ne float** %33, null, !dbg !2985
  br i1 %tobool22, label %cond.true, label %cond.false, !dbg !2985

cond.true:                                        ; preds = %if.then21
  %34 = load float**, float*** %per_keyblock_weights.addr, align 8, !dbg !2986
  %35 = load i32, i32* %keyblock_index, align 4, !dbg !2987
  %idxprom = sext i32 %35 to i64, !dbg !2986
  %arrayidx23 = getelementptr inbounds float*, float** %34, i64 %idxprom, !dbg !2986
  %36 = load float*, float** %arrayidx23, align 8, !dbg !2986
  br label %cond.end, !dbg !2985

cond.false:                                       ; preds = %if.then21
  br label %cond.end, !dbg !2985

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %36, %cond.true ], [ null, %cond.false ], !dbg !2985
  store float* %cond, float** %weights, align 8, !dbg !2984
  call void @llvm.dbg.declare(metadata i8** %freefrom, metadata !2988, metadata !DIExpression()), !dbg !2989
  store i8* null, i8** %freefrom, align 8, !dbg !2989
  call void @llvm.dbg.declare(metadata i8** %freereffrom, metadata !2990, metadata !DIExpression()), !dbg !2991
  store i8* null, i8** %freereffrom, align 8, !dbg !2991
  %37 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !2992
  %block24 = getelementptr inbounds %struct.Key, %struct.Key* %37, i32 0, i32 6, !dbg !2993
  %38 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !2994
  %relative = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %38, i32 0, i32 6, !dbg !2995
  %39 = load i16, i16* %relative, align 4, !dbg !2995
  %conv25 = sext i16 %39 to i32, !dbg !2994
  %call26 = call i8* @BLI_findlink(%struct.ListBase* %block24, i32 %conv25), !dbg !2996
  %40 = bitcast i8* %call26 to %struct.KeyBlock*, !dbg !2996
  store %struct.KeyBlock* %40, %struct.KeyBlock** %refb, align 8, !dbg !2997
  %41 = load %struct.KeyBlock*, %struct.KeyBlock** %refb, align 8, !dbg !2998
  %cmp27 = icmp eq %struct.KeyBlock* %41, null, !dbg !3000
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !3001

if.then29:                                        ; preds = %cond.end
  br label %for.inc94, !dbg !3002

if.end30:                                         ; preds = %cond.end
  %42 = load i8*, i8** %basispoin.addr, align 8, !dbg !3003
  store i8* %42, i8** %poin, align 8, !dbg !3004
  %43 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3005
  %44 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb.addr, align 8, !dbg !3006
  %45 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !3007
  %call31 = call i8* @key_block_get_data(%struct.Key* %43, %struct.KeyBlock* %44, %struct.KeyBlock* %45, i8** %freefrom), !dbg !3008
  store i8* %call31, i8** %from, align 8, !dbg !3009
  %46 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3010
  %47 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb.addr, align 8, !dbg !3011
  %48 = load %struct.KeyBlock*, %struct.KeyBlock** %refb, align 8, !dbg !3012
  %call32 = call i8* @key_block_get_data(%struct.Key* %46, %struct.KeyBlock* %47, %struct.KeyBlock* %48, i8** %freereffrom), !dbg !3013
  store i8* %call32, i8** %reffrom, align 8, !dbg !3014
  %49 = load i32, i32* %start.addr, align 4, !dbg !3015
  %50 = load i32, i32* %poinsize, align 4, !dbg !3016
  %mul33 = mul nsw i32 %49, %50, !dbg !3017
  %51 = load i8*, i8** %poin, align 8, !dbg !3018
  %idx.ext = sext i32 %mul33 to i64, !dbg !3018
  %add.ptr = getelementptr inbounds i8, i8* %51, i64 %idx.ext, !dbg !3018
  store i8* %add.ptr, i8** %poin, align 8, !dbg !3018
  %52 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3019
  %elemsize34 = getelementptr inbounds %struct.Key, %struct.Key* %52, i32 0, i32 4, !dbg !3020
  %53 = load i32, i32* %elemsize34, align 8, !dbg !3020
  %54 = load i32, i32* %start.addr, align 4, !dbg !3021
  %mul35 = mul nsw i32 %53, %54, !dbg !3022
  %55 = load i8*, i8** %reffrom, align 8, !dbg !3023
  %idx.ext36 = sext i32 %mul35 to i64, !dbg !3023
  %add.ptr37 = getelementptr inbounds i8, i8* %55, i64 %idx.ext36, !dbg !3023
  store i8* %add.ptr37, i8** %reffrom, align 8, !dbg !3023
  %56 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3024
  %elemsize38 = getelementptr inbounds %struct.Key, %struct.Key* %56, i32 0, i32 4, !dbg !3025
  %57 = load i32, i32* %elemsize38, align 8, !dbg !3025
  %58 = load i32, i32* %start.addr, align 4, !dbg !3026
  %mul39 = mul nsw i32 %57, %58, !dbg !3027
  %59 = load i8*, i8** %from, align 8, !dbg !3028
  %idx.ext40 = sext i32 %mul39 to i64, !dbg !3028
  %add.ptr41 = getelementptr inbounds i8, i8* %59, i64 %idx.ext40, !dbg !3028
  store i8* %add.ptr41, i8** %from, align 8, !dbg !3028
  %60 = load i32, i32* %start.addr, align 4, !dbg !3029
  store i32 %60, i32* %b, align 4, !dbg !3031
  br label %for.cond42, !dbg !3032

for.cond42:                                       ; preds = %for.inc, %if.end30
  %61 = load i32, i32* %b, align 4, !dbg !3033
  %62 = load i32, i32* %end.addr, align 4, !dbg !3035
  %cmp43 = icmp slt i32 %61, %62, !dbg !3036
  br i1 %cmp43, label %for.body45, label %for.end, !dbg !3037

for.body45:                                       ; preds = %for.cond42
  %63 = load float*, float** %weights, align 8, !dbg !3038
  %tobool46 = icmp ne float* %63, null, !dbg !3038
  br i1 %tobool46, label %cond.true47, label %cond.false49, !dbg !3038

cond.true47:                                      ; preds = %for.body45
  %64 = load float*, float** %weights, align 8, !dbg !3040
  %65 = load float, float* %64, align 4, !dbg !3041
  %66 = load float, float* %icuval, align 4, !dbg !3042
  %mul48 = fmul float %65, %66, !dbg !3043
  br label %cond.end50, !dbg !3038

cond.false49:                                     ; preds = %for.body45
  %67 = load float, float* %icuval, align 4, !dbg !3044
  br label %cond.end50, !dbg !3038

cond.end50:                                       ; preds = %cond.false49, %cond.true47
  %cond51 = phi float [ %mul48, %cond.true47 ], [ %67, %cond.false49 ], !dbg !3038
  store float %cond51, float* %weight, align 4, !dbg !3045
  %68 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3046
  %elemstr52 = getelementptr inbounds %struct.Key, %struct.Key* %68, i32 0, i32 3, !dbg !3047
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %elemstr52, i64 0, i64 0, !dbg !3046
  store i8* %arraydecay, i8** %cp, align 8, !dbg !3048
  %69 = load i32, i32* %mode.addr, align 4, !dbg !3049
  %cmp53 = icmp eq i32 %69, 2, !dbg !3051
  br i1 %cmp53, label %if.then55, label %if.end57, !dbg !3052

if.then55:                                        ; preds = %cond.end50
  %arraydecay56 = getelementptr inbounds [8 x i8], [8 x i8]* %elemstr, i64 0, i64 0, !dbg !3053
  store i8* %arraydecay56, i8** %cp, align 8, !dbg !3054
  br label %if.end57, !dbg !3055

if.end57:                                         ; preds = %if.then55, %cond.end50
  %arraydecay58 = getelementptr inbounds [3 x i32], [3 x i32]* %ofs, i64 0, i64 0, !dbg !3056
  store i32* %arraydecay58, i32** %ofsp, align 8, !dbg !3057
  br label %while.cond, !dbg !3058

while.cond:                                       ; preds = %sw.epilog, %if.end57
  %70 = load i8*, i8** %cp, align 8, !dbg !3059
  %arrayidx59 = getelementptr inbounds i8, i8* %70, i64 0, !dbg !3059
  %71 = load i8, i8* %arrayidx59, align 1, !dbg !3059
  %tobool60 = icmp ne i8 %71, 0, !dbg !3058
  br i1 %tobool60, label %while.body, label %while.end, !dbg !3058

while.body:                                       ; preds = %while.cond
  %72 = load i8*, i8** %cp, align 8, !dbg !3060
  %arrayidx61 = getelementptr inbounds i8, i8* %72, i64 1, !dbg !3060
  %73 = load i8, i8* %arrayidx61, align 1, !dbg !3060
  %conv62 = zext i8 %73 to i32, !dbg !3060
  switch i32 %conv62, label %sw.default [
    i32 4, label %sw.bb
    i32 101, label %sw.bb63
    i32 100, label %sw.bb64
  ], !dbg !3062

sw.bb:                                            ; preds = %while.body
  %74 = load i8*, i8** %poin, align 8, !dbg !3063
  %75 = bitcast i8* %74 to float*, !dbg !3065
  %76 = load i8*, i8** %reffrom, align 8, !dbg !3066
  %77 = bitcast i8* %76 to float*, !dbg !3067
  %78 = load i8*, i8** %from, align 8, !dbg !3068
  %79 = bitcast i8* %78 to float*, !dbg !3069
  %80 = load float, float* %weight, align 4, !dbg !3070
  call void @rel_flerp(i32 3, float* %75, float* %77, float* %79, float %80), !dbg !3071
  br label %sw.epilog, !dbg !3072

sw.bb63:                                          ; preds = %while.body
  %81 = load i8*, i8** %poin, align 8, !dbg !3073
  %82 = bitcast i8* %81 to float*, !dbg !3074
  %83 = load i8*, i8** %reffrom, align 8, !dbg !3075
  %84 = bitcast i8* %83 to float*, !dbg !3076
  %85 = load i8*, i8** %from, align 8, !dbg !3077
  %86 = bitcast i8* %85 to float*, !dbg !3078
  %87 = load float, float* %weight, align 4, !dbg !3079
  call void @rel_flerp(i32 4, float* %82, float* %84, float* %86, float %87), !dbg !3080
  br label %sw.epilog, !dbg !3081

sw.bb64:                                          ; preds = %while.body
  %88 = load i8*, i8** %poin, align 8, !dbg !3082
  %89 = bitcast i8* %88 to float*, !dbg !3083
  %90 = load i8*, i8** %reffrom, align 8, !dbg !3084
  %91 = bitcast i8* %90 to float*, !dbg !3085
  %92 = load i8*, i8** %from, align 8, !dbg !3086
  %93 = bitcast i8* %92 to float*, !dbg !3087
  %94 = load float, float* %weight, align 4, !dbg !3088
  call void @rel_flerp(i32 12, float* %89, float* %91, float* %93, float %94), !dbg !3089
  br label %sw.epilog, !dbg !3090

sw.default:                                       ; preds = %while.body
  %95 = load i8*, i8** %freefrom, align 8, !dbg !3091
  %tobool65 = icmp ne i8* %95, null, !dbg !3091
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !3093

if.then66:                                        ; preds = %sw.default
  %96 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3094
  %97 = load i8*, i8** %freefrom, align 8, !dbg !3095
  call void %96(i8* %97), !dbg !3094
  br label %if.end67, !dbg !3094

if.end67:                                         ; preds = %if.then66, %sw.default
  %98 = load i8*, i8** %freereffrom, align 8, !dbg !3096
  %tobool68 = icmp ne i8* %98, null, !dbg !3096
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !3098

if.then69:                                        ; preds = %if.end67
  %99 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3099
  %100 = load i8*, i8** %freereffrom, align 8, !dbg !3100
  call void %99(i8* %100), !dbg !3099
  br label %if.end70, !dbg !3099

if.end70:                                         ; preds = %if.then69, %if.end67
  br label %for.end96, !dbg !3101

sw.epilog:                                        ; preds = %sw.bb64, %sw.bb63, %sw.bb
  %101 = load i32*, i32** %ofsp, align 8, !dbg !3102
  %102 = load i32, i32* %101, align 4, !dbg !3103
  %103 = load i8*, i8** %poin, align 8, !dbg !3104
  %idx.ext71 = sext i32 %102 to i64, !dbg !3104
  %add.ptr72 = getelementptr inbounds i8, i8* %103, i64 %idx.ext71, !dbg !3104
  store i8* %add.ptr72, i8** %poin, align 8, !dbg !3104
  %104 = load i8*, i8** %cp, align 8, !dbg !3105
  %add.ptr73 = getelementptr inbounds i8, i8* %104, i64 2, !dbg !3105
  store i8* %add.ptr73, i8** %cp, align 8, !dbg !3105
  %105 = load i32*, i32** %ofsp, align 8, !dbg !3106
  %incdec.ptr = getelementptr inbounds i32, i32* %105, i32 1, !dbg !3106
  store i32* %incdec.ptr, i32** %ofsp, align 8, !dbg !3106
  br label %while.cond, !dbg !3058, !llvm.loop !3107

while.end:                                        ; preds = %while.cond
  %106 = load i32, i32* %elemsize, align 4, !dbg !3109
  %107 = load i8*, i8** %reffrom, align 8, !dbg !3110
  %idx.ext74 = sext i32 %106 to i64, !dbg !3110
  %add.ptr75 = getelementptr inbounds i8, i8* %107, i64 %idx.ext74, !dbg !3110
  store i8* %add.ptr75, i8** %reffrom, align 8, !dbg !3110
  %108 = load i32, i32* %elemsize, align 4, !dbg !3111
  %109 = load i8*, i8** %from, align 8, !dbg !3112
  %idx.ext76 = sext i32 %108 to i64, !dbg !3112
  %add.ptr77 = getelementptr inbounds i8, i8* %109, i64 %idx.ext76, !dbg !3112
  store i8* %add.ptr77, i8** %from, align 8, !dbg !3112
  %110 = load i32, i32* %mode.addr, align 4, !dbg !3113
  %cmp78 = icmp eq i32 %110, 2, !dbg !3115
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !3116

if.then80:                                        ; preds = %while.end
  %111 = load i32, i32* %b, align 4, !dbg !3117
  %add = add nsw i32 %111, 2, !dbg !3117
  store i32 %add, i32* %b, align 4, !dbg !3117
  br label %if.end81, !dbg !3118

if.end81:                                         ; preds = %if.then80, %while.end
  %112 = load float*, float** %weights, align 8, !dbg !3119
  %tobool82 = icmp ne float* %112, null, !dbg !3119
  br i1 %tobool82, label %if.then83, label %if.end85, !dbg !3121

if.then83:                                        ; preds = %if.end81
  %113 = load float*, float** %weights, align 8, !dbg !3122
  %incdec.ptr84 = getelementptr inbounds float, float* %113, i32 1, !dbg !3122
  store float* %incdec.ptr84, float** %weights, align 8, !dbg !3122
  br label %if.end85, !dbg !3123

if.end85:                                         ; preds = %if.then83, %if.end81
  br label %for.inc, !dbg !3124

for.inc:                                          ; preds = %if.end85
  %114 = load i32, i32* %b, align 4, !dbg !3125
  %inc = add nsw i32 %114, 1, !dbg !3125
  store i32 %inc, i32* %b, align 4, !dbg !3125
  br label %for.cond42, !dbg !3126, !llvm.loop !3127

for.end:                                          ; preds = %for.cond42
  %115 = load i8*, i8** %freefrom, align 8, !dbg !3129
  %tobool86 = icmp ne i8* %115, null, !dbg !3129
  br i1 %tobool86, label %if.then87, label %if.end88, !dbg !3131

if.then87:                                        ; preds = %for.end
  %116 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3132
  %117 = load i8*, i8** %freefrom, align 8, !dbg !3133
  call void %116(i8* %117), !dbg !3132
  br label %if.end88, !dbg !3132

if.end88:                                         ; preds = %if.then87, %for.end
  %118 = load i8*, i8** %freereffrom, align 8, !dbg !3134
  %tobool89 = icmp ne i8* %118, null, !dbg !3134
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !3136

if.then90:                                        ; preds = %if.end88
  %119 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3137
  %120 = load i8*, i8** %freereffrom, align 8, !dbg !3138
  call void %119(i8* %120), !dbg !3137
  br label %if.end91, !dbg !3137

if.end91:                                         ; preds = %if.then90, %if.end88
  br label %if.end92, !dbg !3139

if.end92:                                         ; preds = %if.end91, %land.lhs.true18, %land.lhs.true, %if.then14
  br label %if.end93, !dbg !3140

if.end93:                                         ; preds = %if.end92, %for.body
  br label %for.inc94, !dbg !3141

for.inc94:                                        ; preds = %if.end93, %if.then29
  %121 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !3142
  %next = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %121, i32 0, i32 0, !dbg !3143
  %122 = load %struct.KeyBlock*, %struct.KeyBlock** %next, align 8, !dbg !3143
  store %struct.KeyBlock* %122, %struct.KeyBlock** %kb, align 8, !dbg !3144
  %123 = load i32, i32* %keyblock_index, align 4, !dbg !3145
  %inc95 = add nsw i32 %123, 1, !dbg !3145
  store i32 %inc95, i32* %keyblock_index, align 4, !dbg !3145
  br label %for.cond, !dbg !3146, !llvm.loop !3147

for.end96:                                        ; preds = %if.then, %if.end70, %for.cond
  ret void, !dbg !3149
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @key_pointer_size(%struct.Key* %key, i32 %mode, i32* %poinsize, i32* %ofs) #0 !dbg !3150 {
entry:
  %retval = alloca i8, align 1
  %key.addr = alloca %struct.Key*, align 8
  %mode.addr = alloca i32, align 4
  %poinsize.addr = alloca i32*, align 8
  %ofs.addr = alloca i32*, align 8
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !3155, metadata !DIExpression()), !dbg !3156
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3157, metadata !DIExpression()), !dbg !3158
  store i32* %poinsize, i32** %poinsize.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %poinsize.addr, metadata !3159, metadata !DIExpression()), !dbg !3160
  store i32* %ofs, i32** %ofs.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ofs.addr, metadata !3161, metadata !DIExpression()), !dbg !3162
  %0 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3163
  %from = getelementptr inbounds %struct.Key, %struct.Key* %0, i32 0, i32 8, !dbg !3165
  %1 = load %struct.ID*, %struct.ID** %from, align 8, !dbg !3165
  %cmp = icmp eq %struct.ID* %1, null, !dbg !3166
  br i1 %cmp, label %if.then, label %if.end, !dbg !3167

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !3168
  br label %return, !dbg !3168

if.end:                                           ; preds = %entry
  %2 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3170
  %from1 = getelementptr inbounds %struct.Key, %struct.Key* %2, i32 0, i32 8, !dbg !3170
  %3 = load %struct.ID*, %struct.ID** %from1, align 8, !dbg !3170
  %name = getelementptr inbounds %struct.ID, %struct.ID* %3, i32 0, i32 4, !dbg !3170
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !3170
  %4 = bitcast i8* %arraydecay to i16*, !dbg !3170
  %5 = load i16, i16* %4, align 8, !dbg !3170
  %conv = sext i16 %5 to i32, !dbg !3170
  switch i32 %conv, label %sw.default [
    i32 17741, label %sw.bb
    i32 21580, label %sw.bb2
    i32 21827, label %sw.bb3
  ], !dbg !3171

sw.bb:                                            ; preds = %if.end
  %6 = load i32*, i32** %ofs.addr, align 8, !dbg !3172
  store i32 12, i32* %6, align 4, !dbg !3174
  %7 = load i32*, i32** %ofs.addr, align 8, !dbg !3175
  %8 = load i32, i32* %7, align 4, !dbg !3176
  %9 = load i32*, i32** %poinsize.addr, align 8, !dbg !3177
  store i32 %8, i32* %9, align 4, !dbg !3178
  br label %sw.epilog, !dbg !3179

sw.bb2:                                           ; preds = %if.end
  %10 = load i32*, i32** %ofs.addr, align 8, !dbg !3180
  store i32 12, i32* %10, align 4, !dbg !3181
  %11 = load i32*, i32** %ofs.addr, align 8, !dbg !3182
  %12 = load i32, i32* %11, align 4, !dbg !3183
  %13 = load i32*, i32** %poinsize.addr, align 8, !dbg !3184
  store i32 %12, i32* %13, align 4, !dbg !3185
  br label %sw.epilog, !dbg !3186

sw.bb3:                                           ; preds = %if.end
  %14 = load i32, i32* %mode.addr, align 4, !dbg !3187
  %cmp4 = icmp eq i32 %14, 1, !dbg !3189
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !3190

if.then6:                                         ; preds = %sw.bb3
  %15 = load i32*, i32** %ofs.addr, align 8, !dbg !3191
  store i32 16, i32* %15, align 4, !dbg !3193
  %16 = load i32*, i32** %ofs.addr, align 8, !dbg !3194
  %17 = load i32, i32* %16, align 4, !dbg !3195
  %18 = load i32*, i32** %poinsize.addr, align 8, !dbg !3196
  store i32 %17, i32* %18, align 4, !dbg !3197
  br label %if.end7, !dbg !3198

if.else:                                          ; preds = %sw.bb3
  %19 = load i32*, i32** %ofs.addr, align 8, !dbg !3199
  %arrayidx = getelementptr inbounds i32, i32* %19, i64 0, !dbg !3199
  store i32 48, i32* %arrayidx, align 4, !dbg !3201
  %20 = load i32*, i32** %ofs.addr, align 8, !dbg !3202
  %21 = load i32, i32* %20, align 4, !dbg !3203
  %div = sdiv i32 %21, 3, !dbg !3204
  %22 = load i32*, i32** %poinsize.addr, align 8, !dbg !3205
  store i32 %div, i32* %22, align 4, !dbg !3206
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then6
  br label %sw.epilog, !dbg !3207

sw.default:                                       ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !3208
  br label %return, !dbg !3208

sw.epilog:                                        ; preds = %if.end7, %sw.bb2, %sw.bb
  store i8 1, i8* %retval, align 1, !dbg !3209
  br label %return, !dbg !3209

return:                                           ; preds = %sw.epilog, %sw.default, %if.then
  %23 = load i8, i8* %retval, align 1, !dbg !3210
  ret i8 %23, !dbg !3210
}

; Function Attrs: noinline nounwind uwtable
define internal void @cp_key(i32 %start, i32 %end, i32 %tot, i8* %poin, %struct.Key* %key, %struct.KeyBlock* %actkb, %struct.KeyBlock* %kb, float* %weights, i32 %mode) #0 !dbg !3211 {
entry:
  %start.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %tot.addr = alloca i32, align 4
  %poin.addr = alloca i8*, align 8
  %key.addr = alloca %struct.Key*, align 8
  %actkb.addr = alloca %struct.KeyBlock*, align 8
  %kb.addr = alloca %struct.KeyBlock*, align 8
  %weights.addr = alloca float*, align 8
  %mode.addr = alloca i32, align 4
  %ktot = alloca float, align 4
  %kd = alloca float, align 4
  %elemsize = alloca i32, align 4
  %poinsize = alloca i32, align 4
  %a = alloca i32, align 4
  %ofsp = alloca i32*, align 8
  %ofs = alloca [32 x i32], align 16
  %flagflo = alloca i32, align 4
  %k1 = alloca i8*, align 8
  %kref = alloca i8*, align 8
  %freek1 = alloca i8*, align 8
  %freekref = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %elemstr = alloca [8 x i8], align 1
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !3214, metadata !DIExpression()), !dbg !3215
  store i32 %end, i32* %end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end.addr, metadata !3216, metadata !DIExpression()), !dbg !3217
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !3218, metadata !DIExpression()), !dbg !3219
  store i8* %poin, i8** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin.addr, metadata !3220, metadata !DIExpression()), !dbg !3221
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !3222, metadata !DIExpression()), !dbg !3223
  store %struct.KeyBlock* %actkb, %struct.KeyBlock** %actkb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %actkb.addr, metadata !3224, metadata !DIExpression()), !dbg !3225
  store %struct.KeyBlock* %kb, %struct.KeyBlock** %kb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb.addr, metadata !3226, metadata !DIExpression()), !dbg !3227
  store float* %weights, float** %weights.addr, align 8
  call void @llvm.dbg.declare(metadata float** %weights.addr, metadata !3228, metadata !DIExpression()), !dbg !3229
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3230, metadata !DIExpression()), !dbg !3231
  call void @llvm.dbg.declare(metadata float* %ktot, metadata !3232, metadata !DIExpression()), !dbg !3233
  store float 0.000000e+00, float* %ktot, align 4, !dbg !3233
  call void @llvm.dbg.declare(metadata float* %kd, metadata !3234, metadata !DIExpression()), !dbg !3235
  store float 0.000000e+00, float* %kd, align 4, !dbg !3235
  call void @llvm.dbg.declare(metadata i32* %elemsize, metadata !3236, metadata !DIExpression()), !dbg !3237
  call void @llvm.dbg.declare(metadata i32* %poinsize, metadata !3238, metadata !DIExpression()), !dbg !3239
  store i32 0, i32* %poinsize, align 4, !dbg !3239
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3240, metadata !DIExpression()), !dbg !3241
  call void @llvm.dbg.declare(metadata i32** %ofsp, metadata !3242, metadata !DIExpression()), !dbg !3243
  call void @llvm.dbg.declare(metadata [32 x i32]* %ofs, metadata !3244, metadata !DIExpression()), !dbg !3246
  call void @llvm.dbg.declare(metadata i32* %flagflo, metadata !3247, metadata !DIExpression()), !dbg !3248
  store i32 0, i32* %flagflo, align 4, !dbg !3248
  call void @llvm.dbg.declare(metadata i8** %k1, metadata !3249, metadata !DIExpression()), !dbg !3250
  call void @llvm.dbg.declare(metadata i8** %kref, metadata !3251, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.declare(metadata i8** %freek1, metadata !3253, metadata !DIExpression()), !dbg !3254
  call void @llvm.dbg.declare(metadata i8** %freekref, metadata !3255, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !3257, metadata !DIExpression()), !dbg !3258
  call void @llvm.dbg.declare(metadata [8 x i8]* %elemstr, metadata !3259, metadata !DIExpression()), !dbg !3260
  %arrayidx = getelementptr inbounds [32 x i32], [32 x i32]* %ofs, i64 0, i64 1, !dbg !3261
  store i32 0, i32* %arrayidx, align 4, !dbg !3262
  %0 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3263
  %1 = load i32, i32* %mode.addr, align 4, !dbg !3265
  %arrayidx1 = getelementptr inbounds [32 x i32], [32 x i32]* %ofs, i64 0, i64 0, !dbg !3266
  %call = call zeroext i8 @key_pointer_size(%struct.Key* %0, i32 %1, i32* %poinsize, i32* %arrayidx1), !dbg !3267
  %tobool = icmp ne i8 %call, 0, !dbg !3267
  br i1 %tobool, label %if.end, label %if.then, !dbg !3268

if.then:                                          ; preds = %entry
  br label %if.end116, !dbg !3269

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %end.addr, align 4, !dbg !3270
  %3 = load i32, i32* %tot.addr, align 4, !dbg !3272
  %cmp = icmp sgt i32 %2, %3, !dbg !3273
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !3274

if.then2:                                         ; preds = %if.end
  %4 = load i32, i32* %tot.addr, align 4, !dbg !3275
  store i32 %4, i32* %end.addr, align 4, !dbg !3276
  br label %if.end3, !dbg !3277

if.end3:                                          ; preds = %if.then2, %if.end
  %5 = load i32, i32* %tot.addr, align 4, !dbg !3278
  %6 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !3280
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %6, i32 0, i32 8, !dbg !3281
  %7 = load i32, i32* %totelem, align 8, !dbg !3281
  %cmp4 = icmp ne i32 %5, %7, !dbg !3282
  br i1 %cmp4, label %if.then5, label %if.end12, !dbg !3283

if.then5:                                         ; preds = %if.end3
  store float 0.000000e+00, float* %ktot, align 4, !dbg !3284
  store i32 1, i32* %flagflo, align 4, !dbg !3286
  %8 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !3287
  %totelem6 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %8, i32 0, i32 8, !dbg !3289
  %9 = load i32, i32* %totelem6, align 8, !dbg !3289
  %tobool7 = icmp ne i32 %9, 0, !dbg !3287
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !3290

if.then8:                                         ; preds = %if.then5
  %10 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !3291
  %totelem9 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %10, i32 0, i32 8, !dbg !3293
  %11 = load i32, i32* %totelem9, align 8, !dbg !3293
  %conv = sitofp i32 %11 to float, !dbg !3291
  %12 = load i32, i32* %tot.addr, align 4, !dbg !3294
  %conv10 = sitofp i32 %12 to float, !dbg !3295
  %div = fdiv float %conv, %conv10, !dbg !3296
  store float %div, float* %kd, align 4, !dbg !3297
  br label %if.end11, !dbg !3298

if.else:                                          ; preds = %if.then5
  br label %if.end116, !dbg !3299

if.end11:                                         ; preds = %if.then8
  br label %if.end12, !dbg !3301

if.end12:                                         ; preds = %if.end11, %if.end3
  %13 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3302
  %14 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb.addr, align 8, !dbg !3303
  %15 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !3304
  %call13 = call i8* @key_block_get_data(%struct.Key* %13, %struct.KeyBlock* %14, %struct.KeyBlock* %15, i8** %freek1), !dbg !3305
  store i8* %call13, i8** %k1, align 8, !dbg !3306
  %16 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3307
  %17 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb.addr, align 8, !dbg !3308
  %18 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3309
  %refkey = getelementptr inbounds %struct.Key, %struct.Key* %18, i32 0, i32 2, !dbg !3310
  %19 = load %struct.KeyBlock*, %struct.KeyBlock** %refkey, align 8, !dbg !3310
  %call14 = call i8* @key_block_get_data(%struct.Key* %16, %struct.KeyBlock* %17, %struct.KeyBlock* %19, i8** %freekref), !dbg !3311
  store i8* %call14, i8** %kref, align 8, !dbg !3312
  %20 = load i32, i32* %start.addr, align 4, !dbg !3313
  %cmp15 = icmp ne i32 %20, 0, !dbg !3315
  br i1 %cmp15, label %if.then17, label %if.end38, !dbg !3316

if.then17:                                        ; preds = %if.end12
  %21 = load i32, i32* %poinsize, align 4, !dbg !3317
  %22 = load i32, i32* %start.addr, align 4, !dbg !3319
  %mul = mul nsw i32 %21, %22, !dbg !3320
  %23 = load i8*, i8** %poin.addr, align 8, !dbg !3321
  %idx.ext = sext i32 %mul to i64, !dbg !3321
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %idx.ext, !dbg !3321
  store i8* %add.ptr, i8** %poin.addr, align 8, !dbg !3321
  %24 = load i32, i32* %flagflo, align 4, !dbg !3322
  %tobool18 = icmp ne i32 %24, 0, !dbg !3322
  br i1 %tobool18, label %if.then19, label %if.else32, !dbg !3324

if.then19:                                        ; preds = %if.then17
  %25 = load i32, i32* %start.addr, align 4, !dbg !3325
  %conv20 = sitofp i32 %25 to float, !dbg !3325
  %26 = load float, float* %kd, align 4, !dbg !3327
  %mul21 = fmul float %conv20, %26, !dbg !3328
  %27 = load float, float* %ktot, align 4, !dbg !3329
  %add = fadd float %27, %mul21, !dbg !3329
  store float %add, float* %ktot, align 4, !dbg !3329
  %28 = load float, float* %ktot, align 4, !dbg !3330
  %conv22 = fpext float %28 to double, !dbg !3330
  %29 = call double @llvm.floor.f64(double %conv22), !dbg !3331
  %conv23 = fptosi double %29 to i32, !dbg !3332
  store i32 %conv23, i32* %a, align 4, !dbg !3333
  %30 = load i32, i32* %a, align 4, !dbg !3334
  %tobool24 = icmp ne i32 %30, 0, !dbg !3334
  br i1 %tobool24, label %if.then25, label %if.end31, !dbg !3336

if.then25:                                        ; preds = %if.then19
  %31 = load i32, i32* %a, align 4, !dbg !3337
  %conv26 = sitofp i32 %31 to float, !dbg !3337
  %32 = load float, float* %ktot, align 4, !dbg !3339
  %sub = fsub float %32, %conv26, !dbg !3339
  store float %sub, float* %ktot, align 4, !dbg !3339
  %33 = load i32, i32* %a, align 4, !dbg !3340
  %34 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3341
  %elemsize27 = getelementptr inbounds %struct.Key, %struct.Key* %34, i32 0, i32 4, !dbg !3342
  %35 = load i32, i32* %elemsize27, align 8, !dbg !3342
  %mul28 = mul nsw i32 %33, %35, !dbg !3343
  %36 = load i8*, i8** %k1, align 8, !dbg !3344
  %idx.ext29 = sext i32 %mul28 to i64, !dbg !3344
  %add.ptr30 = getelementptr inbounds i8, i8* %36, i64 %idx.ext29, !dbg !3344
  store i8* %add.ptr30, i8** %k1, align 8, !dbg !3344
  br label %if.end31, !dbg !3345

if.end31:                                         ; preds = %if.then25, %if.then19
  br label %if.end37, !dbg !3346

if.else32:                                        ; preds = %if.then17
  %37 = load i32, i32* %start.addr, align 4, !dbg !3347
  %38 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3349
  %elemsize33 = getelementptr inbounds %struct.Key, %struct.Key* %38, i32 0, i32 4, !dbg !3350
  %39 = load i32, i32* %elemsize33, align 8, !dbg !3350
  %mul34 = mul nsw i32 %37, %39, !dbg !3351
  %40 = load i8*, i8** %k1, align 8, !dbg !3352
  %idx.ext35 = sext i32 %mul34 to i64, !dbg !3352
  %add.ptr36 = getelementptr inbounds i8, i8* %40, i64 %idx.ext35, !dbg !3352
  store i8* %add.ptr36, i8** %k1, align 8, !dbg !3352
  br label %if.end37

if.end37:                                         ; preds = %if.else32, %if.end31
  br label %if.end38, !dbg !3353

if.end38:                                         ; preds = %if.end37, %if.end12
  %41 = load i32, i32* %mode.addr, align 4, !dbg !3354
  %cmp39 = icmp eq i32 %41, 2, !dbg !3356
  br i1 %cmp39, label %if.then41, label %if.end45, !dbg !3357

if.then41:                                        ; preds = %if.end38
  %arrayidx42 = getelementptr inbounds [8 x i8], [8 x i8]* %elemstr, i64 0, i64 0, !dbg !3358
  store i8 1, i8* %arrayidx42, align 1, !dbg !3360
  %arrayidx43 = getelementptr inbounds [8 x i8], [8 x i8]* %elemstr, i64 0, i64 1, !dbg !3361
  store i8 100, i8* %arrayidx43, align 1, !dbg !3362
  %arrayidx44 = getelementptr inbounds [8 x i8], [8 x i8]* %elemstr, i64 0, i64 2, !dbg !3363
  store i8 0, i8* %arrayidx44, align 1, !dbg !3364
  br label %if.end45, !dbg !3365

if.end45:                                         ; preds = %if.then41, %if.end38
  %42 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3366
  %elemsize46 = getelementptr inbounds %struct.Key, %struct.Key* %42, i32 0, i32 4, !dbg !3367
  %43 = load i32, i32* %elemsize46, align 8, !dbg !3367
  store i32 %43, i32* %elemsize, align 4, !dbg !3368
  %44 = load i32, i32* %mode.addr, align 4, !dbg !3369
  %cmp47 = icmp eq i32 %44, 2, !dbg !3371
  br i1 %cmp47, label %if.then49, label %if.end51, !dbg !3372

if.then49:                                        ; preds = %if.end45
  %45 = load i32, i32* %elemsize, align 4, !dbg !3373
  %mul50 = mul nsw i32 %45, 3, !dbg !3373
  store i32 %mul50, i32* %elemsize, align 4, !dbg !3373
  br label %if.end51, !dbg !3374

if.end51:                                         ; preds = %if.then49, %if.end45
  %46 = load i32, i32* %start.addr, align 4, !dbg !3375
  store i32 %46, i32* %a, align 4, !dbg !3377
  br label %for.cond, !dbg !3378

for.cond:                                         ; preds = %for.inc, %if.end51
  %47 = load i32, i32* %a, align 4, !dbg !3379
  %48 = load i32, i32* %end.addr, align 4, !dbg !3381
  %cmp52 = icmp slt i32 %47, %48, !dbg !3382
  br i1 %cmp52, label %for.body, label %for.end, !dbg !3383

for.body:                                         ; preds = %for.cond
  %49 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3384
  %elemstr54 = getelementptr inbounds %struct.Key, %struct.Key* %49, i32 0, i32 3, !dbg !3386
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %elemstr54, i64 0, i64 0, !dbg !3384
  store i8* %arraydecay, i8** %cp, align 8, !dbg !3387
  %50 = load i32, i32* %mode.addr, align 4, !dbg !3388
  %cmp55 = icmp eq i32 %50, 2, !dbg !3390
  br i1 %cmp55, label %if.then57, label %if.end59, !dbg !3391

if.then57:                                        ; preds = %for.body
  %arraydecay58 = getelementptr inbounds [8 x i8], [8 x i8]* %elemstr, i64 0, i64 0, !dbg !3392
  store i8* %arraydecay58, i8** %cp, align 8, !dbg !3393
  br label %if.end59, !dbg !3394

if.end59:                                         ; preds = %if.then57, %for.body
  %arraydecay60 = getelementptr inbounds [32 x i32], [32 x i32]* %ofs, i64 0, i64 0, !dbg !3395
  store i32* %arraydecay60, i32** %ofsp, align 8, !dbg !3396
  br label %while.cond, !dbg !3397

while.cond:                                       ; preds = %sw.epilog, %if.end59
  %51 = load i8*, i8** %cp, align 8, !dbg !3398
  %arrayidx61 = getelementptr inbounds i8, i8* %51, i64 0, !dbg !3398
  %52 = load i8, i8* %arrayidx61, align 1, !dbg !3398
  %tobool62 = icmp ne i8 %52, 0, !dbg !3397
  br i1 %tobool62, label %while.body, label %while.end, !dbg !3397

while.body:                                       ; preds = %while.cond
  %53 = load i8*, i8** %cp, align 8, !dbg !3399
  %arrayidx63 = getelementptr inbounds i8, i8* %53, i64 1, !dbg !3399
  %54 = load i8, i8* %arrayidx63, align 1, !dbg !3399
  %conv64 = zext i8 %54 to i32, !dbg !3399
  switch i32 %conv64, label %sw.default [
    i32 4, label %sw.bb
    i32 101, label %sw.bb75
    i32 100, label %sw.bb76
  ], !dbg !3401

sw.bb:                                            ; preds = %while.body
  %55 = load float*, float** %weights.addr, align 8, !dbg !3402
  %tobool65 = icmp ne float* %55, null, !dbg !3402
  br i1 %tobool65, label %if.then66, label %if.else73, !dbg !3405

if.then66:                                        ; preds = %sw.bb
  %56 = load i8*, i8** %poin.addr, align 8, !dbg !3406
  %57 = load i8*, i8** %kref, align 8, !dbg !3408
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %56, i8* align 1 %57, i64 12, i1 false), !dbg !3409
  %58 = load float*, float** %weights.addr, align 8, !dbg !3410
  %59 = load float, float* %58, align 4, !dbg !3412
  %cmp67 = fcmp une float %59, 0.000000e+00, !dbg !3413
  br i1 %cmp67, label %if.then69, label %if.end72, !dbg !3414

if.then69:                                        ; preds = %if.then66
  %60 = load i8*, i8** %cp, align 8, !dbg !3415
  %arrayidx70 = getelementptr inbounds i8, i8* %60, i64 0, !dbg !3415
  %61 = load i8, i8* %arrayidx70, align 1, !dbg !3415
  %conv71 = zext i8 %61 to i32, !dbg !3415
  %62 = load i8*, i8** %poin.addr, align 8, !dbg !3416
  %63 = bitcast i8* %62 to float*, !dbg !3417
  %64 = load i8*, i8** %kref, align 8, !dbg !3418
  %65 = bitcast i8* %64 to float*, !dbg !3419
  %66 = load i8*, i8** %k1, align 8, !dbg !3420
  %67 = bitcast i8* %66 to float*, !dbg !3421
  %68 = load float*, float** %weights.addr, align 8, !dbg !3422
  %69 = load float, float* %68, align 4, !dbg !3423
  call void @rel_flerp(i32 %conv71, float* %63, float* %65, float* %67, float %69), !dbg !3424
  br label %if.end72, !dbg !3424

if.end72:                                         ; preds = %if.then69, %if.then66
  %70 = load float*, float** %weights.addr, align 8, !dbg !3425
  %incdec.ptr = getelementptr inbounds float, float* %70, i32 1, !dbg !3425
  store float* %incdec.ptr, float** %weights.addr, align 8, !dbg !3425
  br label %if.end74, !dbg !3426

if.else73:                                        ; preds = %sw.bb
  %71 = load i8*, i8** %poin.addr, align 8, !dbg !3427
  %72 = load i8*, i8** %k1, align 8, !dbg !3429
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %71, i8* align 1 %72, i64 12, i1 false), !dbg !3430
  br label %if.end74

if.end74:                                         ; preds = %if.else73, %if.end72
  br label %sw.epilog, !dbg !3431

sw.bb75:                                          ; preds = %while.body
  %73 = load i8*, i8** %poin.addr, align 8, !dbg !3432
  %74 = load i8*, i8** %k1, align 8, !dbg !3433
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %73, i8* align 1 %74, i64 16, i1 false), !dbg !3434
  br label %sw.epilog, !dbg !3435

sw.bb76:                                          ; preds = %while.body
  %75 = load i8*, i8** %poin.addr, align 8, !dbg !3436
  %76 = load i8*, i8** %k1, align 8, !dbg !3437
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %75, i8* align 1 %76, i64 48, i1 false), !dbg !3438
  br label %sw.epilog, !dbg !3439

sw.default:                                       ; preds = %while.body
  %77 = load i8*, i8** %freek1, align 8, !dbg !3440
  %tobool77 = icmp ne i8* %77, null, !dbg !3440
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !3442

if.then78:                                        ; preds = %sw.default
  %78 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3443
  %79 = load i8*, i8** %freek1, align 8, !dbg !3444
  call void %78(i8* %79), !dbg !3443
  br label %if.end79, !dbg !3443

if.end79:                                         ; preds = %if.then78, %sw.default
  %80 = load i8*, i8** %freekref, align 8, !dbg !3445
  %tobool80 = icmp ne i8* %80, null, !dbg !3445
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !3447

if.then81:                                        ; preds = %if.end79
  %81 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3448
  %82 = load i8*, i8** %freekref, align 8, !dbg !3449
  call void %81(i8* %82), !dbg !3448
  br label %if.end82, !dbg !3448

if.end82:                                         ; preds = %if.then81, %if.end79
  br label %if.end116, !dbg !3450

sw.epilog:                                        ; preds = %sw.bb76, %sw.bb75, %if.end74
  %83 = load i32*, i32** %ofsp, align 8, !dbg !3451
  %84 = load i32, i32* %83, align 4, !dbg !3452
  %85 = load i8*, i8** %poin.addr, align 8, !dbg !3453
  %idx.ext83 = sext i32 %84 to i64, !dbg !3453
  %add.ptr84 = getelementptr inbounds i8, i8* %85, i64 %idx.ext83, !dbg !3453
  store i8* %add.ptr84, i8** %poin.addr, align 8, !dbg !3453
  %86 = load i8*, i8** %cp, align 8, !dbg !3454
  %add.ptr85 = getelementptr inbounds i8, i8* %86, i64 2, !dbg !3454
  store i8* %add.ptr85, i8** %cp, align 8, !dbg !3454
  %87 = load i32*, i32** %ofsp, align 8, !dbg !3455
  %incdec.ptr86 = getelementptr inbounds i32, i32* %87, i32 1, !dbg !3455
  store i32* %incdec.ptr86, i32** %ofsp, align 8, !dbg !3455
  br label %while.cond, !dbg !3397, !llvm.loop !3456

while.end:                                        ; preds = %while.cond
  %88 = load i32, i32* %flagflo, align 4, !dbg !3458
  %tobool87 = icmp ne i32 %88, 0, !dbg !3458
  br i1 %tobool87, label %if.then88, label %if.else100, !dbg !3460

if.then88:                                        ; preds = %while.end
  %89 = load float, float* %kd, align 4, !dbg !3461
  %90 = load float, float* %ktot, align 4, !dbg !3463
  %add89 = fadd float %90, %89, !dbg !3463
  store float %add89, float* %ktot, align 4, !dbg !3463
  br label %while.cond90, !dbg !3464

while.cond90:                                     ; preds = %while.body93, %if.then88
  %91 = load float, float* %ktot, align 4, !dbg !3465
  %cmp91 = fcmp oge float %91, 1.000000e+00, !dbg !3466
  br i1 %cmp91, label %while.body93, label %while.end99, !dbg !3464

while.body93:                                     ; preds = %while.cond90
  %92 = load float, float* %ktot, align 4, !dbg !3467
  %sub94 = fsub float %92, 1.000000e+00, !dbg !3467
  store float %sub94, float* %ktot, align 4, !dbg !3467
  %93 = load i32, i32* %elemsize, align 4, !dbg !3469
  %94 = load i8*, i8** %k1, align 8, !dbg !3470
  %idx.ext95 = sext i32 %93 to i64, !dbg !3470
  %add.ptr96 = getelementptr inbounds i8, i8* %94, i64 %idx.ext95, !dbg !3470
  store i8* %add.ptr96, i8** %k1, align 8, !dbg !3470
  %95 = load i32, i32* %elemsize, align 4, !dbg !3471
  %96 = load i8*, i8** %kref, align 8, !dbg !3472
  %idx.ext97 = sext i32 %95 to i64, !dbg !3472
  %add.ptr98 = getelementptr inbounds i8, i8* %96, i64 %idx.ext97, !dbg !3472
  store i8* %add.ptr98, i8** %kref, align 8, !dbg !3472
  br label %while.cond90, !dbg !3464, !llvm.loop !3473

while.end99:                                      ; preds = %while.cond90
  br label %if.end105, !dbg !3475

if.else100:                                       ; preds = %while.end
  %97 = load i32, i32* %elemsize, align 4, !dbg !3476
  %98 = load i8*, i8** %k1, align 8, !dbg !3478
  %idx.ext101 = sext i32 %97 to i64, !dbg !3478
  %add.ptr102 = getelementptr inbounds i8, i8* %98, i64 %idx.ext101, !dbg !3478
  store i8* %add.ptr102, i8** %k1, align 8, !dbg !3478
  %99 = load i32, i32* %elemsize, align 4, !dbg !3479
  %100 = load i8*, i8** %kref, align 8, !dbg !3480
  %idx.ext103 = sext i32 %99 to i64, !dbg !3480
  %add.ptr104 = getelementptr inbounds i8, i8* %100, i64 %idx.ext103, !dbg !3480
  store i8* %add.ptr104, i8** %kref, align 8, !dbg !3480
  br label %if.end105

if.end105:                                        ; preds = %if.else100, %while.end99
  %101 = load i32, i32* %mode.addr, align 4, !dbg !3481
  %cmp106 = icmp eq i32 %101, 2, !dbg !3483
  br i1 %cmp106, label %if.then108, label %if.end110, !dbg !3484

if.then108:                                       ; preds = %if.end105
  %102 = load i32, i32* %a, align 4, !dbg !3485
  %add109 = add nsw i32 %102, 2, !dbg !3485
  store i32 %add109, i32* %a, align 4, !dbg !3485
  br label %if.end110, !dbg !3487

if.end110:                                        ; preds = %if.then108, %if.end105
  br label %for.inc, !dbg !3488

for.inc:                                          ; preds = %if.end110
  %103 = load i32, i32* %a, align 4, !dbg !3489
  %inc = add nsw i32 %103, 1, !dbg !3489
  store i32 %inc, i32* %a, align 4, !dbg !3489
  br label %for.cond, !dbg !3490, !llvm.loop !3491

for.end:                                          ; preds = %for.cond
  %104 = load i8*, i8** %freek1, align 8, !dbg !3493
  %tobool111 = icmp ne i8* %104, null, !dbg !3493
  br i1 %tobool111, label %if.then112, label %if.end113, !dbg !3495

if.then112:                                       ; preds = %for.end
  %105 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3496
  %106 = load i8*, i8** %freek1, align 8, !dbg !3497
  call void %105(i8* %106), !dbg !3496
  br label %if.end113, !dbg !3496

if.end113:                                        ; preds = %if.then112, %for.end
  %107 = load i8*, i8** %freekref, align 8, !dbg !3498
  %tobool114 = icmp ne i8* %107, null, !dbg !3498
  br i1 %tobool114, label %if.then115, label %if.end116, !dbg !3500

if.then115:                                       ; preds = %if.end113
  %108 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3501
  %109 = load i8*, i8** %freekref, align 8, !dbg !3502
  call void %108(i8* %109), !dbg !3501
  br label %if.end116, !dbg !3501

if.end116:                                        ; preds = %if.then, %if.else, %if.end82, %if.then115, %if.end113
  ret void, !dbg !3503
}

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @key_block_get_data(%struct.Key* %key, %struct.KeyBlock* %actkb, %struct.KeyBlock* %kb, i8** %freedata) #0 !dbg !3504 {
entry:
  %retval = alloca i8*, align 8
  %key.addr = alloca %struct.Key*, align 8
  %actkb.addr = alloca %struct.KeyBlock*, align 8
  %kb.addr = alloca %struct.KeyBlock*, align 8
  %freedata.addr = alloca i8**, align 8
  %me = alloca %struct.Mesh*, align 8
  %eve = alloca %struct.BMVert*, align 8
  %iter = alloca %struct.BMIter, align 8
  %co = alloca [3 x float]*, align 8
  %a = alloca i32, align 4
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !3508, metadata !DIExpression()), !dbg !3509
  store %struct.KeyBlock* %actkb, %struct.KeyBlock** %actkb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %actkb.addr, metadata !3510, metadata !DIExpression()), !dbg !3511
  store %struct.KeyBlock* %kb, %struct.KeyBlock** %kb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb.addr, metadata !3512, metadata !DIExpression()), !dbg !3513
  store i8** %freedata, i8*** %freedata.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %freedata.addr, metadata !3514, metadata !DIExpression()), !dbg !3515
  %0 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !3516
  %1 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb.addr, align 8, !dbg !3518
  %cmp = icmp eq %struct.KeyBlock* %0, %1, !dbg !3519
  br i1 %cmp, label %if.then, label %if.end22, !dbg !3520

if.then:                                          ; preds = %entry
  %2 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3521
  %from = getelementptr inbounds %struct.Key, %struct.Key* %2, i32 0, i32 8, !dbg !3521
  %3 = load %struct.ID*, %struct.ID** %from, align 8, !dbg !3521
  %name = getelementptr inbounds %struct.ID, %struct.ID* %3, i32 0, i32 4, !dbg !3521
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !3521
  %4 = bitcast i8* %arraydecay to i16*, !dbg !3521
  %5 = load i16, i16* %4, align 8, !dbg !3521
  %conv = sext i16 %5 to i32, !dbg !3521
  %cmp1 = icmp eq i32 %conv, 17741, !dbg !3524
  br i1 %cmp1, label %if.then3, label %if.end21, !dbg !3525

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !3526, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !3529, metadata !DIExpression()), !dbg !3530
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !3531, metadata !DIExpression()), !dbg !3619
  call void @llvm.dbg.declare(metadata [3 x float]** %co, metadata !3620, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3623, metadata !DIExpression()), !dbg !3624
  %6 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3625
  %from4 = getelementptr inbounds %struct.Key, %struct.Key* %6, i32 0, i32 8, !dbg !3626
  %7 = load %struct.ID*, %struct.ID** %from4, align 8, !dbg !3626
  %8 = bitcast %struct.ID* %7 to %struct.Mesh*, !dbg !3627
  store %struct.Mesh* %8, %struct.Mesh** %me, align 8, !dbg !3628
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3629
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 20, !dbg !3631
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !3631
  %tobool = icmp ne %struct.BMEditMesh* %10, null, !dbg !3629
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3632

land.lhs.true:                                    ; preds = %if.then3
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3633
  %edit_btmesh5 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 20, !dbg !3634
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh5, align 8, !dbg !3634
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %12, i32 0, i32 0, !dbg !3635
  %13 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3635
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %13, i32 0, i32 0, !dbg !3636
  %14 = load i32, i32* %totvert, align 8, !dbg !3636
  %15 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !3637
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %15, i32 0, i32 8, !dbg !3638
  %16 = load i32, i32* %totelem, align 8, !dbg !3638
  %cmp6 = icmp eq i32 %14, %16, !dbg !3639
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !3640

if.then8:                                         ; preds = %land.lhs.true
  store i32 0, i32* %a, align 4, !dbg !3641
  %17 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3643
  %18 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3644
  %edit_btmesh9 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 20, !dbg !3645
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh9, align 8, !dbg !3645
  %bm10 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %19, i32 0, i32 0, !dbg !3646
  %20 = load %struct.BMesh*, %struct.BMesh** %bm10, align 8, !dbg !3646
  %totvert11 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %20, i32 0, i32 0, !dbg !3647
  %21 = load i32, i32* %totvert11, align 8, !dbg !3647
  %conv12 = sext i32 %21 to i64, !dbg !3644
  %mul = mul i64 12, %conv12, !dbg !3648
  %call = call i8* %17(i64 %mul, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0)), !dbg !3643
  %22 = bitcast i8* %call to [3 x float]*, !dbg !3643
  store [3 x float]* %22, [3 x float]** %co, align 8, !dbg !3649
  %23 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3650
  %edit_btmesh13 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %23, i32 0, i32 20, !dbg !3650
  %24 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh13, align 8, !dbg !3650
  %bm14 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %24, i32 0, i32 0, !dbg !3650
  %25 = load %struct.BMesh*, %struct.BMesh** %bm14, align 8, !dbg !3650
  %call15 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %25, i8 zeroext 1, i8* null), !dbg !3650
  %26 = bitcast i8* %call15 to %struct.BMVert*, !dbg !3650
  store %struct.BMVert* %26, %struct.BMVert** %eve, align 8, !dbg !3650
  br label %for.cond, !dbg !3650

for.cond:                                         ; preds = %for.inc, %if.then8
  %27 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !3652
  %tobool16 = icmp ne %struct.BMVert* %27, null, !dbg !3650
  br i1 %tobool16, label %for.body, label %for.end, !dbg !3650

for.body:                                         ; preds = %for.cond
  %28 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !3654
  %29 = load i32, i32* %a, align 4, !dbg !3656
  %idxprom = sext i32 %29 to i64, !dbg !3654
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %28, i64 %idxprom, !dbg !3654
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !3654
  %30 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !3657
  %co18 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %30, i32 0, i32 2, !dbg !3658
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %co18, i64 0, i64 0, !dbg !3657
  call void @copy_v3_v3(float* %arraydecay17, float* %arraydecay19), !dbg !3659
  %31 = load i32, i32* %a, align 4, !dbg !3660
  %inc = add nsw i32 %31, 1, !dbg !3660
  store i32 %inc, i32* %a, align 4, !dbg !3660
  br label %for.inc, !dbg !3661

for.inc:                                          ; preds = %for.body
  %call20 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3652
  %32 = bitcast i8* %call20 to %struct.BMVert*, !dbg !3652
  store %struct.BMVert* %32, %struct.BMVert** %eve, align 8, !dbg !3652
  br label %for.cond, !dbg !3652, !llvm.loop !3662

for.end:                                          ; preds = %for.cond
  %33 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !3664
  %34 = bitcast [3 x float]* %33 to i8*, !dbg !3665
  %35 = load i8**, i8*** %freedata.addr, align 8, !dbg !3666
  store i8* %34, i8** %35, align 8, !dbg !3667
  %36 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !3668
  %37 = bitcast [3 x float]* %36 to i8*, !dbg !3669
  store i8* %37, i8** %retval, align 8, !dbg !3670
  br label %return, !dbg !3670

if.end:                                           ; preds = %land.lhs.true, %if.then3
  br label %if.end21, !dbg !3671

if.end21:                                         ; preds = %if.end, %if.then
  br label %if.end22, !dbg !3672

if.end22:                                         ; preds = %if.end21, %entry
  %38 = load i8**, i8*** %freedata.addr, align 8, !dbg !3673
  store i8* null, i8** %38, align 8, !dbg !3674
  %39 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !3675
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %39, i32 0, i32 10, !dbg !3676
  %40 = load i8*, i8** %data, align 8, !dbg !3676
  store i8* %40, i8** %retval, align 8, !dbg !3677
  br label %return, !dbg !3677

return:                                           ; preds = %if.end22, %for.end
  %41 = load i8*, i8** %retval, align 8, !dbg !3678
  ret i8* %41, !dbg !3678
}

; Function Attrs: noinline nounwind uwtable
define internal void @rel_flerp(i32 %tot, float* %in, float* %ref, float* %out, float %fac) #0 !dbg !3679 {
entry:
  %tot.addr = alloca i32, align 4
  %in.addr = alloca float*, align 8
  %ref.addr = alloca float*, align 8
  %out.addr = alloca float*, align 8
  %fac.addr = alloca float, align 4
  %a = alloca i32, align 4
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !3682, metadata !DIExpression()), !dbg !3683
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !3684, metadata !DIExpression()), !dbg !3685
  store float* %ref, float** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ref.addr, metadata !3686, metadata !DIExpression()), !dbg !3687
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !3688, metadata !DIExpression()), !dbg !3689
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !3690, metadata !DIExpression()), !dbg !3691
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3692, metadata !DIExpression()), !dbg !3693
  store i32 0, i32* %a, align 4, !dbg !3694
  br label %for.cond, !dbg !3696

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %a, align 4, !dbg !3697
  %1 = load i32, i32* %tot.addr, align 4, !dbg !3699
  %cmp = icmp slt i32 %0, %1, !dbg !3700
  br i1 %cmp, label %for.body, label %for.end, !dbg !3701

for.body:                                         ; preds = %for.cond
  %2 = load float, float* %fac.addr, align 4, !dbg !3702
  %3 = load float*, float** %ref.addr, align 8, !dbg !3704
  %4 = load i32, i32* %a, align 4, !dbg !3705
  %idxprom = sext i32 %4 to i64, !dbg !3704
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom, !dbg !3704
  %5 = load float, float* %arrayidx, align 4, !dbg !3704
  %6 = load float*, float** %out.addr, align 8, !dbg !3706
  %7 = load i32, i32* %a, align 4, !dbg !3707
  %idxprom1 = sext i32 %7 to i64, !dbg !3706
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 %idxprom1, !dbg !3706
  %8 = load float, float* %arrayidx2, align 4, !dbg !3706
  %sub = fsub float %5, %8, !dbg !3708
  %mul = fmul float %2, %sub, !dbg !3709
  %9 = load float*, float** %in.addr, align 8, !dbg !3710
  %10 = load i32, i32* %a, align 4, !dbg !3711
  %idxprom3 = sext i32 %10 to i64, !dbg !3710
  %arrayidx4 = getelementptr inbounds float, float* %9, i64 %idxprom3, !dbg !3710
  %11 = load float, float* %arrayidx4, align 4, !dbg !3712
  %sub5 = fsub float %11, %mul, !dbg !3712
  store float %sub5, float* %arrayidx4, align 4, !dbg !3712
  br label %for.inc, !dbg !3713

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %a, align 4, !dbg !3714
  %inc = add nsw i32 %12, 1, !dbg !3714
  store i32 %inc, i32* %a, align 4, !dbg !3714
  br label %for.cond, !dbg !3715, !llvm.loop !3716

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3718
}

; Function Attrs: noinline nounwind uwtable
define dso_local float** @BKE_keyblock_get_per_block_weights(%struct.Object* %ob, %struct.Key* %key, %struct.WeightsArrayCache* %cache) #0 !dbg !3719 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %key.addr = alloca %struct.Key*, align 8
  %cache.addr = alloca %struct.WeightsArrayCache*, align 8
  %keyblock = alloca %struct.KeyBlock*, align 8
  %per_keyblock_weights = alloca float**, align 8
  %keyblock_index = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3731, metadata !DIExpression()), !dbg !3732
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !3733, metadata !DIExpression()), !dbg !3734
  store %struct.WeightsArrayCache* %cache, %struct.WeightsArrayCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WeightsArrayCache** %cache.addr, metadata !3735, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %keyblock, metadata !3737, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.declare(metadata float*** %per_keyblock_weights, metadata !3739, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.declare(metadata i32* %keyblock_index, metadata !3741, metadata !DIExpression()), !dbg !3742
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3743
  %1 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3744
  %totkey = getelementptr inbounds %struct.Key, %struct.Key* %1, i32 0, i32 10, !dbg !3745
  %2 = load i16, i16* %totkey, align 2, !dbg !3745
  %conv = sext i16 %2 to i64, !dbg !3744
  %mul = mul i64 8, %conv, !dbg !3746
  %call = call i8* %0(i64 %mul, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0)), !dbg !3743
  %3 = bitcast i8* %call to float**, !dbg !3743
  store float** %3, float*** %per_keyblock_weights, align 8, !dbg !3747
  %4 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !3748
  %block = getelementptr inbounds %struct.Key, %struct.Key* %4, i32 0, i32 6, !dbg !3750
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 0, !dbg !3751
  %5 = load i8*, i8** %first, align 8, !dbg !3751
  %6 = bitcast i8* %5 to %struct.KeyBlock*, !dbg !3748
  store %struct.KeyBlock* %6, %struct.KeyBlock** %keyblock, align 8, !dbg !3752
  store i32 0, i32* %keyblock_index, align 4, !dbg !3753
  br label %for.cond, !dbg !3754

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.KeyBlock*, %struct.KeyBlock** %keyblock, align 8, !dbg !3755
  %tobool = icmp ne %struct.KeyBlock* %7, null, !dbg !3757
  br i1 %tobool, label %for.body, label %for.end, !dbg !3757

for.body:                                         ; preds = %for.cond
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3758
  %9 = load %struct.KeyBlock*, %struct.KeyBlock** %keyblock, align 8, !dbg !3760
  %vgroup = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %9, i32 0, i32 12, !dbg !3761
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %vgroup, i64 0, i64 0, !dbg !3760
  %10 = load %struct.WeightsArrayCache*, %struct.WeightsArrayCache** %cache.addr, align 8, !dbg !3762
  %call1 = call float* @get_weights_array(%struct.Object* %8, i8* %arraydecay, %struct.WeightsArrayCache* %10), !dbg !3763
  %11 = load float**, float*** %per_keyblock_weights, align 8, !dbg !3764
  %12 = load i32, i32* %keyblock_index, align 4, !dbg !3765
  %idxprom = sext i32 %12 to i64, !dbg !3764
  %arrayidx = getelementptr inbounds float*, float** %11, i64 %idxprom, !dbg !3764
  store float* %call1, float** %arrayidx, align 8, !dbg !3766
  br label %for.inc, !dbg !3767

for.inc:                                          ; preds = %for.body
  %13 = load %struct.KeyBlock*, %struct.KeyBlock** %keyblock, align 8, !dbg !3768
  %next = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %13, i32 0, i32 0, !dbg !3769
  %14 = load %struct.KeyBlock*, %struct.KeyBlock** %next, align 8, !dbg !3769
  store %struct.KeyBlock* %14, %struct.KeyBlock** %keyblock, align 8, !dbg !3770
  %15 = load i32, i32* %keyblock_index, align 4, !dbg !3771
  %inc = add nsw i32 %15, 1, !dbg !3771
  store i32 %inc, i32* %keyblock_index, align 4, !dbg !3771
  br label %for.cond, !dbg !3772, !llvm.loop !3773

for.end:                                          ; preds = %for.cond
  %16 = load float**, float*** %per_keyblock_weights, align 8, !dbg !3775
  ret float** %16, !dbg !3776
}

; Function Attrs: noinline nounwind uwtable
define internal float* @get_weights_array(%struct.Object* %ob, i8* %vgroup, %struct.WeightsArrayCache* %cache) #0 !dbg !3777 {
entry:
  %retval = alloca float*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %vgroup.addr = alloca i8*, align 8
  %cache.addr = alloca %struct.WeightsArrayCache*, align 8
  %dvert = alloca %struct.MDeformVert*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %eve = alloca %struct.BMVert*, align 8
  %totvert = alloca i32, align 4
  %defgrp_index = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %lt = alloca %struct.Lattice*, align 8
  %weights = alloca float*, align 8
  %i = alloca i32, align 4
  %num_defgroup = alloca i32, align 4
  %cd_dvert_offset = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3780, metadata !DIExpression()), !dbg !3781
  store i8* %vgroup, i8** %vgroup.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vgroup.addr, metadata !3782, metadata !DIExpression()), !dbg !3783
  store %struct.WeightsArrayCache* %cache, %struct.WeightsArrayCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WeightsArrayCache** %cache.addr, metadata !3784, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert, metadata !3786, metadata !DIExpression()), !dbg !3789
  store %struct.MDeformVert* null, %struct.MDeformVert** %dvert, align 8, !dbg !3789
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !3790, metadata !DIExpression()), !dbg !3793
  store %struct.BMEditMesh* null, %struct.BMEditMesh** %em, align 8, !dbg !3793
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !3794, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !3796, metadata !DIExpression()), !dbg !3797
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !3798, metadata !DIExpression()), !dbg !3799
  store i32 0, i32* %totvert, align 4, !dbg !3799
  call void @llvm.dbg.declare(metadata i32* %defgrp_index, metadata !3800, metadata !DIExpression()), !dbg !3801
  store i32 0, i32* %defgrp_index, align 4, !dbg !3801
  %0 = load i8*, i8** %vgroup.addr, align 8, !dbg !3802
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !3802
  %1 = load i8, i8* %arrayidx, align 1, !dbg !3802
  %conv = zext i8 %1 to i32, !dbg !3802
  %cmp = icmp eq i32 %conv, 0, !dbg !3804
  br i1 %cmp, label %if.then, label %if.end, !dbg !3805

if.then:                                          ; preds = %entry
  store float* null, float** %retval, align 8, !dbg !3806
  br label %return, !dbg !3806

if.end:                                           ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3807
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !3809
  %3 = load i16, i16* %type, align 8, !dbg !3809
  %conv2 = sext i16 %3 to i32, !dbg !3807
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !3810
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !3811

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !3812, metadata !DIExpression()), !dbg !3814
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3815
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !3816
  %5 = load i8*, i8** %data, align 8, !dbg !3816
  %6 = bitcast i8* %5 to %struct.Mesh*, !dbg !3815
  store %struct.Mesh* %6, %struct.Mesh** %me, align 8, !dbg !3814
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3817
  %dvert6 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 17, !dbg !3818
  %8 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert6, align 8, !dbg !3818
  store %struct.MDeformVert* %8, %struct.MDeformVert** %dvert, align 8, !dbg !3819
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3820
  %totvert7 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 26, !dbg !3821
  %10 = load i32, i32* %totvert7, align 8, !dbg !3821
  store i32 %10, i32* %totvert, align 4, !dbg !3822
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3823
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 20, !dbg !3825
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !3825
  %tobool = icmp ne %struct.BMEditMesh* %12, null, !dbg !3823
  br i1 %tobool, label %land.lhs.true, label %if.end14, !dbg !3826

land.lhs.true:                                    ; preds = %if.then5
  %13 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3827
  %edit_btmesh8 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 20, !dbg !3828
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh8, align 8, !dbg !3828
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 0, !dbg !3829
  %15 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3829
  %totvert9 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 0, !dbg !3830
  %16 = load i32, i32* %totvert9, align 8, !dbg !3830
  %17 = load i32, i32* %totvert, align 4, !dbg !3831
  %cmp10 = icmp eq i32 %16, %17, !dbg !3832
  br i1 %cmp10, label %if.then12, label %if.end14, !dbg !3833

if.then12:                                        ; preds = %land.lhs.true
  %18 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3834
  %edit_btmesh13 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 20, !dbg !3835
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh13, align 8, !dbg !3835
  store %struct.BMEditMesh* %19, %struct.BMEditMesh** %em, align 8, !dbg !3836
  br label %if.end14, !dbg !3837

if.end14:                                         ; preds = %if.then12, %land.lhs.true, %if.then5
  br label %if.end27, !dbg !3838

if.else:                                          ; preds = %if.end
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3839
  %type15 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 3, !dbg !3841
  %21 = load i16, i16* %type15, align 8, !dbg !3841
  %conv16 = sext i16 %21 to i32, !dbg !3839
  %cmp17 = icmp eq i32 %conv16, 22, !dbg !3842
  br i1 %cmp17, label %if.then19, label %if.end26, !dbg !3843

if.then19:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !3844, metadata !DIExpression()), !dbg !3846
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3847
  %data20 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 19, !dbg !3848
  %23 = load i8*, i8** %data20, align 8, !dbg !3848
  %24 = bitcast i8* %23 to %struct.Lattice*, !dbg !3847
  store %struct.Lattice* %24, %struct.Lattice** %lt, align 8, !dbg !3846
  %25 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3849
  %dvert21 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %25, i32 0, i32 24, !dbg !3850
  %26 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert21, align 8, !dbg !3850
  store %struct.MDeformVert* %26, %struct.MDeformVert** %dvert, align 8, !dbg !3851
  %27 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3852
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %27, i32 0, i32 2, !dbg !3853
  %28 = load i16, i16* %pntsu, align 8, !dbg !3853
  %conv22 = sext i16 %28 to i32, !dbg !3852
  %29 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3854
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %29, i32 0, i32 3, !dbg !3855
  %30 = load i16, i16* %pntsv, align 2, !dbg !3855
  %conv23 = sext i16 %30 to i32, !dbg !3854
  %mul = mul nsw i32 %conv22, %conv23, !dbg !3856
  %31 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !3857
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %31, i32 0, i32 4, !dbg !3858
  %32 = load i16, i16* %pntsw, align 4, !dbg !3858
  %conv24 = sext i16 %32 to i32, !dbg !3857
  %mul25 = mul nsw i32 %mul, %conv24, !dbg !3859
  store i32 %mul25, i32* %totvert, align 4, !dbg !3860
  br label %if.end26, !dbg !3861

if.end26:                                         ; preds = %if.then19, %if.else
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end14
  %33 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !3862
  %cmp28 = icmp eq %struct.MDeformVert* %33, null, !dbg !3864
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !3865

if.then30:                                        ; preds = %if.end27
  store float* null, float** %retval, align 8, !dbg !3866
  br label %return, !dbg !3866

if.end31:                                         ; preds = %if.end27
  %34 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3867
  %35 = load i8*, i8** %vgroup.addr, align 8, !dbg !3868
  %call = call i32 @defgroup_name_index(%struct.Object* %34, i8* %35), !dbg !3869
  store i32 %call, i32* %defgrp_index, align 4, !dbg !3870
  %36 = load i32, i32* %defgrp_index, align 4, !dbg !3871
  %cmp32 = icmp ne i32 %36, -1, !dbg !3873
  br i1 %cmp32, label %if.then34, label %if.end88, !dbg !3874

if.then34:                                        ; preds = %if.end31
  call void @llvm.dbg.declare(metadata float** %weights, metadata !3875, metadata !DIExpression()), !dbg !3877
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3878, metadata !DIExpression()), !dbg !3879
  %37 = load %struct.WeightsArrayCache*, %struct.WeightsArrayCache** %cache.addr, align 8, !dbg !3880
  %tobool35 = icmp ne %struct.WeightsArrayCache* %37, null, !dbg !3880
  br i1 %tobool35, label %if.then36, label %if.end54, !dbg !3882

if.then36:                                        ; preds = %if.then34
  %38 = load %struct.WeightsArrayCache*, %struct.WeightsArrayCache** %cache.addr, align 8, !dbg !3883
  %defgroup_weights = getelementptr inbounds %struct.WeightsArrayCache, %struct.WeightsArrayCache* %38, i32 0, i32 1, !dbg !3886
  %39 = load float**, float*** %defgroup_weights, align 8, !dbg !3886
  %cmp37 = icmp eq float** %39, null, !dbg !3887
  br i1 %cmp37, label %if.then39, label %if.end45, !dbg !3888

if.then39:                                        ; preds = %if.then36
  call void @llvm.dbg.declare(metadata i32* %num_defgroup, metadata !3889, metadata !DIExpression()), !dbg !3891
  %40 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3892
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 25, !dbg !3893
  %call40 = call i32 @BLI_countlist(%struct.ListBase* %defbase), !dbg !3894
  store i32 %call40, i32* %num_defgroup, align 4, !dbg !3891
  %41 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3895
  %42 = load i32, i32* %num_defgroup, align 4, !dbg !3896
  %conv41 = sext i32 %42 to i64, !dbg !3896
  %mul42 = mul i64 8, %conv41, !dbg !3897
  %call43 = call i8* %41(i64 %mul42, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0)), !dbg !3895
  %43 = bitcast i8* %call43 to float**, !dbg !3895
  %44 = load %struct.WeightsArrayCache*, %struct.WeightsArrayCache** %cache.addr, align 8, !dbg !3898
  %defgroup_weights44 = getelementptr inbounds %struct.WeightsArrayCache, %struct.WeightsArrayCache* %44, i32 0, i32 1, !dbg !3899
  store float** %43, float*** %defgroup_weights44, align 8, !dbg !3900
  %45 = load i32, i32* %num_defgroup, align 4, !dbg !3901
  %46 = load %struct.WeightsArrayCache*, %struct.WeightsArrayCache** %cache.addr, align 8, !dbg !3902
  %num_defgroup_weights = getelementptr inbounds %struct.WeightsArrayCache, %struct.WeightsArrayCache* %46, i32 0, i32 0, !dbg !3903
  store i32 %45, i32* %num_defgroup_weights, align 8, !dbg !3904
  br label %if.end45, !dbg !3905

if.end45:                                         ; preds = %if.then39, %if.then36
  %47 = load %struct.WeightsArrayCache*, %struct.WeightsArrayCache** %cache.addr, align 8, !dbg !3906
  %defgroup_weights46 = getelementptr inbounds %struct.WeightsArrayCache, %struct.WeightsArrayCache* %47, i32 0, i32 1, !dbg !3908
  %48 = load float**, float*** %defgroup_weights46, align 8, !dbg !3908
  %49 = load i32, i32* %defgrp_index, align 4, !dbg !3909
  %idxprom = sext i32 %49 to i64, !dbg !3906
  %arrayidx47 = getelementptr inbounds float*, float** %48, i64 %idxprom, !dbg !3906
  %50 = load float*, float** %arrayidx47, align 8, !dbg !3906
  %tobool48 = icmp ne float* %50, null, !dbg !3906
  br i1 %tobool48, label %if.then49, label %if.end53, !dbg !3910

if.then49:                                        ; preds = %if.end45
  %51 = load %struct.WeightsArrayCache*, %struct.WeightsArrayCache** %cache.addr, align 8, !dbg !3911
  %defgroup_weights50 = getelementptr inbounds %struct.WeightsArrayCache, %struct.WeightsArrayCache* %51, i32 0, i32 1, !dbg !3913
  %52 = load float**, float*** %defgroup_weights50, align 8, !dbg !3913
  %53 = load i32, i32* %defgrp_index, align 4, !dbg !3914
  %idxprom51 = sext i32 %53 to i64, !dbg !3911
  %arrayidx52 = getelementptr inbounds float*, float** %52, i64 %idxprom51, !dbg !3911
  %54 = load float*, float** %arrayidx52, align 8, !dbg !3911
  store float* %54, float** %retval, align 8, !dbg !3915
  br label %return, !dbg !3915

if.end53:                                         ; preds = %if.end45
  br label %if.end54, !dbg !3916

if.end54:                                         ; preds = %if.end53, %if.then34
  %55 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3917
  %56 = load i32, i32* %totvert, align 4, !dbg !3918
  %conv55 = sext i32 %56 to i64, !dbg !3918
  %mul56 = mul i64 %conv55, 4, !dbg !3919
  %call57 = call i8* %55(i64 %mul56, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0)), !dbg !3917
  %57 = bitcast i8* %call57 to float*, !dbg !3917
  store float* %57, float** %weights, align 8, !dbg !3920
  %58 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3921
  %tobool58 = icmp ne %struct.BMEditMesh* %58, null, !dbg !3921
  br i1 %tobool58, label %if.then59, label %if.else70, !dbg !3923

if.then59:                                        ; preds = %if.end54
  call void @llvm.dbg.declare(metadata i32* %cd_dvert_offset, metadata !3924, metadata !DIExpression()), !dbg !3926
  %59 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3927
  %bm60 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %59, i32 0, i32 0, !dbg !3928
  %60 = load %struct.BMesh*, %struct.BMesh** %bm60, align 8, !dbg !3928
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %60, i32 0, i32 24, !dbg !3929
  %call61 = call i32 @CustomData_get_offset(%struct.CustomData* %vdata, i32 2), !dbg !3930
  store i32 %call61, i32* %cd_dvert_offset, align 4, !dbg !3926
  %61 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3931
  %bm62 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %61, i32 0, i32 0, !dbg !3931
  %62 = load %struct.BMesh*, %struct.BMesh** %bm62, align 8, !dbg !3931
  %call63 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %62, i8 zeroext 1, i8* null), !dbg !3931
  %63 = bitcast i8* %call63 to %struct.BMVert*, !dbg !3931
  store %struct.BMVert* %63, %struct.BMVert** %eve, align 8, !dbg !3931
  store i32 0, i32* %i, align 4, !dbg !3931
  br label %for.cond, !dbg !3931

for.cond:                                         ; preds = %for.inc, %if.then59
  %64 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !3933
  %tobool64 = icmp ne %struct.BMVert* %64, null, !dbg !3931
  br i1 %tobool64, label %for.body, label %for.end, !dbg !3931

for.body:                                         ; preds = %for.cond
  %65 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !3935
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %65, i32 0, i32 0, !dbg !3935
  %data65 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !3935
  %66 = load i8*, i8** %data65, align 8, !dbg !3935
  %67 = load i32, i32* %cd_dvert_offset, align 4, !dbg !3935
  %idx.ext = sext i32 %67 to i64, !dbg !3935
  %add.ptr = getelementptr inbounds i8, i8* %66, i64 %idx.ext, !dbg !3935
  %68 = bitcast i8* %add.ptr to %struct.MDeformVert*, !dbg !3935
  store %struct.MDeformVert* %68, %struct.MDeformVert** %dvert, align 8, !dbg !3937
  %69 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !3938
  %70 = load i32, i32* %defgrp_index, align 4, !dbg !3939
  %call66 = call float @defvert_find_weight(%struct.MDeformVert* %69, i32 %70), !dbg !3940
  %71 = load float*, float** %weights, align 8, !dbg !3941
  %72 = load i32, i32* %i, align 4, !dbg !3942
  %idxprom67 = sext i32 %72 to i64, !dbg !3941
  %arrayidx68 = getelementptr inbounds float, float* %71, i64 %idxprom67, !dbg !3941
  store float %call66, float* %arrayidx68, align 4, !dbg !3943
  br label %for.inc, !dbg !3944

for.inc:                                          ; preds = %for.body
  %call69 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3933
  %73 = bitcast i8* %call69 to %struct.BMVert*, !dbg !3933
  store %struct.BMVert* %73, %struct.BMVert** %eve, align 8, !dbg !3933
  %74 = load i32, i32* %i, align 4, !dbg !3933
  %inc = add nsw i32 %74, 1, !dbg !3933
  store i32 %inc, i32* %i, align 4, !dbg !3933
  br label %for.cond, !dbg !3933, !llvm.loop !3945

for.end:                                          ; preds = %for.cond
  br label %if.end81, !dbg !3947

if.else70:                                        ; preds = %if.end54
  store i32 0, i32* %i, align 4, !dbg !3948
  br label %for.cond71, !dbg !3951

for.cond71:                                       ; preds = %for.inc78, %if.else70
  %75 = load i32, i32* %i, align 4, !dbg !3952
  %76 = load i32, i32* %totvert, align 4, !dbg !3954
  %cmp72 = icmp slt i32 %75, %76, !dbg !3955
  br i1 %cmp72, label %for.body74, label %for.end80, !dbg !3956

for.body74:                                       ; preds = %for.cond71
  %77 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !3957
  %78 = load i32, i32* %defgrp_index, align 4, !dbg !3959
  %call75 = call float @defvert_find_weight(%struct.MDeformVert* %77, i32 %78), !dbg !3960
  %79 = load float*, float** %weights, align 8, !dbg !3961
  %80 = load i32, i32* %i, align 4, !dbg !3962
  %idxprom76 = sext i32 %80 to i64, !dbg !3961
  %arrayidx77 = getelementptr inbounds float, float* %79, i64 %idxprom76, !dbg !3961
  store float %call75, float* %arrayidx77, align 4, !dbg !3963
  br label %for.inc78, !dbg !3964

for.inc78:                                        ; preds = %for.body74
  %81 = load i32, i32* %i, align 4, !dbg !3965
  %inc79 = add nsw i32 %81, 1, !dbg !3965
  store i32 %inc79, i32* %i, align 4, !dbg !3965
  %82 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !3966
  %incdec.ptr = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %82, i32 1, !dbg !3966
  store %struct.MDeformVert* %incdec.ptr, %struct.MDeformVert** %dvert, align 8, !dbg !3966
  br label %for.cond71, !dbg !3967, !llvm.loop !3968

for.end80:                                        ; preds = %for.cond71
  br label %if.end81

if.end81:                                         ; preds = %for.end80, %for.end
  %83 = load %struct.WeightsArrayCache*, %struct.WeightsArrayCache** %cache.addr, align 8, !dbg !3970
  %tobool82 = icmp ne %struct.WeightsArrayCache* %83, null, !dbg !3970
  br i1 %tobool82, label %if.then83, label %if.end87, !dbg !3972

if.then83:                                        ; preds = %if.end81
  %84 = load float*, float** %weights, align 8, !dbg !3973
  %85 = load %struct.WeightsArrayCache*, %struct.WeightsArrayCache** %cache.addr, align 8, !dbg !3975
  %defgroup_weights84 = getelementptr inbounds %struct.WeightsArrayCache, %struct.WeightsArrayCache* %85, i32 0, i32 1, !dbg !3976
  %86 = load float**, float*** %defgroup_weights84, align 8, !dbg !3976
  %87 = load i32, i32* %defgrp_index, align 4, !dbg !3977
  %idxprom85 = sext i32 %87 to i64, !dbg !3975
  %arrayidx86 = getelementptr inbounds float*, float** %86, i64 %idxprom85, !dbg !3975
  store float* %84, float** %arrayidx86, align 8, !dbg !3978
  br label %if.end87, !dbg !3979

if.end87:                                         ; preds = %if.then83, %if.end81
  %88 = load float*, float** %weights, align 8, !dbg !3980
  store float* %88, float** %retval, align 8, !dbg !3981
  br label %return, !dbg !3981

if.end88:                                         ; preds = %if.end31
  store float* null, float** %retval, align 8, !dbg !3982
  br label %return, !dbg !3982

return:                                           ; preds = %if.end88, %if.end87, %if.then49, %if.then30, %if.then
  %89 = load float*, float** %retval, align 8, !dbg !3983
  ret float* %89, !dbg !3983
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_keyblock_free_per_block_weights(%struct.Key* %key, float** %per_keyblock_weights, %struct.WeightsArrayCache* %cache) #0 !dbg !3984 {
entry:
  %key.addr = alloca %struct.Key*, align 8
  %per_keyblock_weights.addr = alloca float**, align 8
  %cache.addr = alloca %struct.WeightsArrayCache*, align 8
  %a = alloca i32, align 4
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !3987, metadata !DIExpression()), !dbg !3988
  store float** %per_keyblock_weights, float*** %per_keyblock_weights.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %per_keyblock_weights.addr, metadata !3989, metadata !DIExpression()), !dbg !3990
  store %struct.WeightsArrayCache* %cache, %struct.WeightsArrayCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WeightsArrayCache** %cache.addr, metadata !3991, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3993, metadata !DIExpression()), !dbg !3994
  %0 = load %struct.WeightsArrayCache*, %struct.WeightsArrayCache** %cache.addr, align 8, !dbg !3995
  %tobool = icmp ne %struct.WeightsArrayCache* %0, null, !dbg !3995
  br i1 %tobool, label %if.then, label %if.else, !dbg !3997

if.then:                                          ; preds = %entry
  %1 = load %struct.WeightsArrayCache*, %struct.WeightsArrayCache** %cache.addr, align 8, !dbg !3998
  %num_defgroup_weights = getelementptr inbounds %struct.WeightsArrayCache, %struct.WeightsArrayCache* %1, i32 0, i32 0, !dbg !4001
  %2 = load i32, i32* %num_defgroup_weights, align 8, !dbg !4001
  %tobool1 = icmp ne i32 %2, 0, !dbg !3998
  br i1 %tobool1, label %if.then2, label %if.end10, !dbg !4002

if.then2:                                         ; preds = %if.then
  store i32 0, i32* %a, align 4, !dbg !4003
  br label %for.cond, !dbg !4006

for.cond:                                         ; preds = %for.inc, %if.then2
  %3 = load i32, i32* %a, align 4, !dbg !4007
  %4 = load %struct.WeightsArrayCache*, %struct.WeightsArrayCache** %cache.addr, align 8, !dbg !4009
  %num_defgroup_weights3 = getelementptr inbounds %struct.WeightsArrayCache, %struct.WeightsArrayCache* %4, i32 0, i32 0, !dbg !4010
  %5 = load i32, i32* %num_defgroup_weights3, align 8, !dbg !4010
  %cmp = icmp slt i32 %3, %5, !dbg !4011
  br i1 %cmp, label %for.body, label %for.end, !dbg !4012

for.body:                                         ; preds = %for.cond
  %6 = load %struct.WeightsArrayCache*, %struct.WeightsArrayCache** %cache.addr, align 8, !dbg !4013
  %defgroup_weights = getelementptr inbounds %struct.WeightsArrayCache, %struct.WeightsArrayCache* %6, i32 0, i32 1, !dbg !4016
  %7 = load float**, float*** %defgroup_weights, align 8, !dbg !4016
  %8 = load i32, i32* %a, align 4, !dbg !4017
  %idxprom = sext i32 %8 to i64, !dbg !4013
  %arrayidx = getelementptr inbounds float*, float** %7, i64 %idxprom, !dbg !4013
  %9 = load float*, float** %arrayidx, align 8, !dbg !4013
  %tobool4 = icmp ne float* %9, null, !dbg !4013
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !4018

if.then5:                                         ; preds = %for.body
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4019
  %11 = load %struct.WeightsArrayCache*, %struct.WeightsArrayCache** %cache.addr, align 8, !dbg !4021
  %defgroup_weights6 = getelementptr inbounds %struct.WeightsArrayCache, %struct.WeightsArrayCache* %11, i32 0, i32 1, !dbg !4022
  %12 = load float**, float*** %defgroup_weights6, align 8, !dbg !4022
  %13 = load i32, i32* %a, align 4, !dbg !4023
  %idxprom7 = sext i32 %13 to i64, !dbg !4021
  %arrayidx8 = getelementptr inbounds float*, float** %12, i64 %idxprom7, !dbg !4021
  %14 = load float*, float** %arrayidx8, align 8, !dbg !4021
  %15 = bitcast float* %14 to i8*, !dbg !4021
  call void %10(i8* %15), !dbg !4019
  br label %if.end, !dbg !4024

if.end:                                           ; preds = %if.then5, %for.body
  br label %for.inc, !dbg !4025

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %a, align 4, !dbg !4026
  %inc = add nsw i32 %16, 1, !dbg !4026
  store i32 %inc, i32* %a, align 4, !dbg !4026
  br label %for.cond, !dbg !4027, !llvm.loop !4028

for.end:                                          ; preds = %for.cond
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4030
  %18 = load %struct.WeightsArrayCache*, %struct.WeightsArrayCache** %cache.addr, align 8, !dbg !4031
  %defgroup_weights9 = getelementptr inbounds %struct.WeightsArrayCache, %struct.WeightsArrayCache* %18, i32 0, i32 1, !dbg !4032
  %19 = load float**, float*** %defgroup_weights9, align 8, !dbg !4032
  %20 = bitcast float** %19 to i8*, !dbg !4031
  call void %17(i8* %20), !dbg !4030
  br label %if.end10, !dbg !4033

if.end10:                                         ; preds = %for.end, %if.then
  %21 = load %struct.WeightsArrayCache*, %struct.WeightsArrayCache** %cache.addr, align 8, !dbg !4034
  %defgroup_weights11 = getelementptr inbounds %struct.WeightsArrayCache, %struct.WeightsArrayCache* %21, i32 0, i32 1, !dbg !4035
  store float** null, float*** %defgroup_weights11, align 8, !dbg !4036
  br label %if.end26, !dbg !4037

if.else:                                          ; preds = %entry
  store i32 0, i32* %a, align 4, !dbg !4038
  br label %for.cond12, !dbg !4041

for.cond12:                                       ; preds = %for.inc23, %if.else
  %22 = load i32, i32* %a, align 4, !dbg !4042
  %23 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4044
  %totkey = getelementptr inbounds %struct.Key, %struct.Key* %23, i32 0, i32 10, !dbg !4045
  %24 = load i16, i16* %totkey, align 2, !dbg !4045
  %conv = sext i16 %24 to i32, !dbg !4044
  %cmp13 = icmp slt i32 %22, %conv, !dbg !4046
  br i1 %cmp13, label %for.body15, label %for.end25, !dbg !4047

for.body15:                                       ; preds = %for.cond12
  %25 = load float**, float*** %per_keyblock_weights.addr, align 8, !dbg !4048
  %26 = load i32, i32* %a, align 4, !dbg !4051
  %idxprom16 = sext i32 %26 to i64, !dbg !4048
  %arrayidx17 = getelementptr inbounds float*, float** %25, i64 %idxprom16, !dbg !4048
  %27 = load float*, float** %arrayidx17, align 8, !dbg !4048
  %tobool18 = icmp ne float* %27, null, !dbg !4048
  br i1 %tobool18, label %if.then19, label %if.end22, !dbg !4052

if.then19:                                        ; preds = %for.body15
  %28 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4053
  %29 = load float**, float*** %per_keyblock_weights.addr, align 8, !dbg !4055
  %30 = load i32, i32* %a, align 4, !dbg !4056
  %idxprom20 = sext i32 %30 to i64, !dbg !4055
  %arrayidx21 = getelementptr inbounds float*, float** %29, i64 %idxprom20, !dbg !4055
  %31 = load float*, float** %arrayidx21, align 8, !dbg !4055
  %32 = bitcast float* %31 to i8*, !dbg !4055
  call void %28(i8* %32), !dbg !4053
  br label %if.end22, !dbg !4057

if.end22:                                         ; preds = %if.then19, %for.body15
  br label %for.inc23, !dbg !4058

for.inc23:                                        ; preds = %if.end22
  %33 = load i32, i32* %a, align 4, !dbg !4059
  %inc24 = add nsw i32 %33, 1, !dbg !4059
  store i32 %inc24, i32* %a, align 4, !dbg !4059
  br label %for.cond12, !dbg !4060, !llvm.loop !4061

for.end25:                                        ; preds = %for.cond12
  br label %if.end26

if.end26:                                         ; preds = %for.end25, %if.end10
  %34 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4063
  %35 = load float**, float*** %per_keyblock_weights.addr, align 8, !dbg !4064
  %36 = bitcast float** %35 to i8*, !dbg !4064
  call void %34(i8* %36), !dbg !4063
  ret void, !dbg !4065
}

; Function Attrs: noinline nounwind uwtable
define dso_local float* @BKE_key_evaluate_object_ex(%struct.Scene* %scene, %struct.Object* %ob, i32* %r_totelem, float* %arr, i64 %arr_size) #0 !dbg !4066 {
entry:
  %retval = alloca float*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %r_totelem.addr = alloca i32*, align 8
  %arr.addr = alloca float*, align 8
  %arr_size.addr = alloca i64, align 8
  %key = alloca %struct.Key*, align 8
  %actkb = alloca %struct.KeyBlock*, align 8
  %out = alloca i8*, align 8
  %tot = alloca i32, align 4
  %size = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %lt = alloca %struct.Lattice*, align 8
  %cu = alloca %struct.Curve*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  %weights = alloca float*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4073, metadata !DIExpression()), !dbg !4074
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4075, metadata !DIExpression()), !dbg !4076
  store i32* %r_totelem, i32** %r_totelem.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_totelem.addr, metadata !4077, metadata !DIExpression()), !dbg !4078
  store float* %arr, float** %arr.addr, align 8
  call void @llvm.dbg.declare(metadata float** %arr.addr, metadata !4079, metadata !DIExpression()), !dbg !4080
  store i64 %arr_size, i64* %arr_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arr_size.addr, metadata !4081, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.declare(metadata %struct.Key** %key, metadata !4083, metadata !DIExpression()), !dbg !4084
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4085
  %call = call %struct.Key* @BKE_key_from_object(%struct.Object* %0), !dbg !4086
  store %struct.Key* %call, %struct.Key** %key, align 8, !dbg !4084
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %actkb, metadata !4087, metadata !DIExpression()), !dbg !4088
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4089
  %call1 = call %struct.KeyBlock* @BKE_keyblock_from_object(%struct.Object* %1), !dbg !4090
  store %struct.KeyBlock* %call1, %struct.KeyBlock** %actkb, align 8, !dbg !4088
  call void @llvm.dbg.declare(metadata i8** %out, metadata !4091, metadata !DIExpression()), !dbg !4092
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !4093, metadata !DIExpression()), !dbg !4094
  store i32 0, i32* %tot, align 4, !dbg !4094
  call void @llvm.dbg.declare(metadata i32* %size, metadata !4095, metadata !DIExpression()), !dbg !4096
  store i32 0, i32* %size, align 4, !dbg !4096
  %2 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4097
  %cmp = icmp eq %struct.Key* %2, null, !dbg !4099
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4100

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4101
  %block = getelementptr inbounds %struct.Key, %struct.Key* %3, i32 0, i32 6, !dbg !4102
  %call2 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %block), !dbg !4103
  %conv = zext i8 %call2 to i32, !dbg !4103
  %tobool = icmp ne i32 %conv, 0, !dbg !4103
  br i1 %tobool, label %if.then, label %if.end, !dbg !4104

if.then:                                          ; preds = %lor.lhs.false, %entry
  store float* null, float** %retval, align 8, !dbg !4105
  br label %return, !dbg !4105

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4106
  %type = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 3, !dbg !4108
  %5 = load i16, i16* %type, align 8, !dbg !4108
  %conv3 = sext i16 %5 to i32, !dbg !4106
  %cmp4 = icmp eq i32 %conv3, 1, !dbg !4109
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !4110

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !4111, metadata !DIExpression()), !dbg !4113
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4114
  %data = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !4115
  %7 = load i8*, i8** %data, align 8, !dbg !4115
  %8 = bitcast i8* %7 to %struct.Mesh*, !dbg !4114
  store %struct.Mesh* %8, %struct.Mesh** %me, align 8, !dbg !4113
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4116
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 26, !dbg !4117
  %10 = load i32, i32* %totvert, align 8, !dbg !4117
  store i32 %10, i32* %tot, align 4, !dbg !4118
  %11 = load i32, i32* %tot, align 4, !dbg !4119
  %mul = mul nsw i32 %11, 3, !dbg !4120
  %conv7 = sext i32 %mul to i64, !dbg !4119
  %mul8 = mul i64 %conv7, 4, !dbg !4121
  %conv9 = trunc i64 %mul8 to i32, !dbg !4119
  store i32 %conv9, i32* %size, align 4, !dbg !4122
  br label %if.end69, !dbg !4123

if.else:                                          ; preds = %if.end
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4124
  %type10 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 3, !dbg !4126
  %13 = load i16, i16* %type10, align 8, !dbg !4126
  %conv11 = sext i16 %13 to i32, !dbg !4124
  %cmp12 = icmp eq i32 %conv11, 22, !dbg !4127
  br i1 %cmp12, label %if.then14, label %if.else25, !dbg !4128

if.then14:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !4129, metadata !DIExpression()), !dbg !4131
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4132
  %data15 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 19, !dbg !4133
  %15 = load i8*, i8** %data15, align 8, !dbg !4133
  %16 = bitcast i8* %15 to %struct.Lattice*, !dbg !4132
  store %struct.Lattice* %16, %struct.Lattice** %lt, align 8, !dbg !4131
  %17 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4134
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %17, i32 0, i32 2, !dbg !4135
  %18 = load i16, i16* %pntsu, align 8, !dbg !4135
  %conv16 = sext i16 %18 to i32, !dbg !4134
  %19 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4136
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %19, i32 0, i32 3, !dbg !4137
  %20 = load i16, i16* %pntsv, align 2, !dbg !4137
  %conv17 = sext i16 %20 to i32, !dbg !4136
  %mul18 = mul nsw i32 %conv16, %conv17, !dbg !4138
  %21 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4139
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %21, i32 0, i32 4, !dbg !4140
  %22 = load i16, i16* %pntsw, align 4, !dbg !4140
  %conv19 = sext i16 %22 to i32, !dbg !4139
  %mul20 = mul nsw i32 %mul18, %conv19, !dbg !4141
  store i32 %mul20, i32* %tot, align 4, !dbg !4142
  %23 = load i32, i32* %tot, align 4, !dbg !4143
  %mul21 = mul nsw i32 %23, 3, !dbg !4144
  %conv22 = sext i32 %mul21 to i64, !dbg !4143
  %mul23 = mul i64 %conv22, 4, !dbg !4145
  %conv24 = trunc i64 %mul23 to i32, !dbg !4143
  store i32 %conv24, i32* %size, align 4, !dbg !4146
  br label %if.end68, !dbg !4147

if.else25:                                        ; preds = %if.else
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4148
  %type26 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 3, !dbg !4148
  %25 = load i16, i16* %type26, align 8, !dbg !4148
  %conv27 = sext i16 %25 to i32, !dbg !4148
  %cmp28 = icmp eq i32 %conv27, 2, !dbg !4148
  br i1 %cmp28, label %if.then35, label %lor.lhs.false30, !dbg !4148

lor.lhs.false30:                                  ; preds = %if.else25
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4148
  %type31 = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 3, !dbg !4148
  %27 = load i16, i16* %type31, align 8, !dbg !4148
  %conv32 = sext i16 %27 to i32, !dbg !4148
  %cmp33 = icmp eq i32 %conv32, 3, !dbg !4148
  br i1 %cmp33, label %if.then35, label %if.end67, !dbg !4150

if.then35:                                        ; preds = %lor.lhs.false30, %if.else25
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !4151, metadata !DIExpression()), !dbg !4153
  %28 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4154
  %data36 = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 19, !dbg !4155
  %29 = load i8*, i8** %data36, align 8, !dbg !4155
  %30 = bitcast i8* %29 to %struct.Curve*, !dbg !4154
  store %struct.Curve* %30, %struct.Curve** %cu, align 8, !dbg !4153
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !4156, metadata !DIExpression()), !dbg !4208
  %31 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4209
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %31, i32 0, i32 3, !dbg !4211
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb, i32 0, i32 0, !dbg !4212
  %32 = load i8*, i8** %first, align 8, !dbg !4212
  %33 = bitcast i8* %32 to %struct.Nurb*, !dbg !4209
  store %struct.Nurb* %33, %struct.Nurb** %nu, align 8, !dbg !4213
  br label %for.cond, !dbg !4214

for.cond:                                         ; preds = %for.inc, %if.then35
  %34 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4215
  %tobool37 = icmp ne %struct.Nurb* %34, null, !dbg !4217
  br i1 %tobool37, label %for.body, label %for.end, !dbg !4217

for.body:                                         ; preds = %for.cond
  %35 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4218
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %35, i32 0, i32 18, !dbg !4221
  %36 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4221
  %tobool38 = icmp ne %struct.BezTriple* %36, null, !dbg !4218
  br i1 %tobool38, label %if.then39, label %if.else49, !dbg !4222

if.then39:                                        ; preds = %for.body
  %37 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4223
  %pntsu40 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %37, i32 0, i32 6, !dbg !4225
  %38 = load i32, i32* %pntsu40, align 8, !dbg !4225
  %mul41 = mul nsw i32 3, %38, !dbg !4226
  %39 = load i32, i32* %tot, align 4, !dbg !4227
  %add = add nsw i32 %39, %mul41, !dbg !4227
  store i32 %add, i32* %tot, align 4, !dbg !4227
  %40 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4228
  %pntsu42 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %40, i32 0, i32 6, !dbg !4229
  %41 = load i32, i32* %pntsu42, align 8, !dbg !4229
  %mul43 = mul nsw i32 %41, 12, !dbg !4230
  %conv44 = sext i32 %mul43 to i64, !dbg !4228
  %mul45 = mul i64 %conv44, 4, !dbg !4231
  %42 = load i32, i32* %size, align 4, !dbg !4232
  %conv46 = sext i32 %42 to i64, !dbg !4232
  %add47 = add i64 %conv46, %mul45, !dbg !4232
  %conv48 = trunc i64 %add47 to i32, !dbg !4232
  store i32 %conv48, i32* %size, align 4, !dbg !4232
  br label %if.end66, !dbg !4233

if.else49:                                        ; preds = %for.body
  %43 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4234
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 17, !dbg !4236
  %44 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4236
  %tobool50 = icmp ne %struct.BPoint* %44, null, !dbg !4234
  br i1 %tobool50, label %if.then51, label %if.end65, !dbg !4237

if.then51:                                        ; preds = %if.else49
  %45 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4238
  %pntsu52 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %45, i32 0, i32 6, !dbg !4240
  %46 = load i32, i32* %pntsu52, align 8, !dbg !4240
  %47 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4241
  %pntsv53 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %47, i32 0, i32 7, !dbg !4242
  %48 = load i32, i32* %pntsv53, align 4, !dbg !4242
  %mul54 = mul nsw i32 %46, %48, !dbg !4243
  %49 = load i32, i32* %tot, align 4, !dbg !4244
  %add55 = add nsw i32 %49, %mul54, !dbg !4244
  store i32 %add55, i32* %tot, align 4, !dbg !4244
  %50 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4245
  %pntsu56 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %50, i32 0, i32 6, !dbg !4246
  %51 = load i32, i32* %pntsu56, align 8, !dbg !4246
  %52 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4247
  %pntsv57 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %52, i32 0, i32 7, !dbg !4248
  %53 = load i32, i32* %pntsv57, align 4, !dbg !4248
  %mul58 = mul nsw i32 %51, %53, !dbg !4249
  %mul59 = mul nsw i32 %mul58, 12, !dbg !4250
  %conv60 = sext i32 %mul59 to i64, !dbg !4245
  %mul61 = mul i64 %conv60, 4, !dbg !4251
  %54 = load i32, i32* %size, align 4, !dbg !4252
  %conv62 = sext i32 %54 to i64, !dbg !4252
  %add63 = add i64 %conv62, %mul61, !dbg !4252
  %conv64 = trunc i64 %add63 to i32, !dbg !4252
  store i32 %conv64, i32* %size, align 4, !dbg !4252
  br label %if.end65, !dbg !4253

if.end65:                                         ; preds = %if.then51, %if.else49
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then39
  br label %for.inc, !dbg !4254

for.inc:                                          ; preds = %if.end66
  %55 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4255
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %55, i32 0, i32 0, !dbg !4256
  %56 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !4256
  store %struct.Nurb* %56, %struct.Nurb** %nu, align 8, !dbg !4257
  br label %for.cond, !dbg !4258, !llvm.loop !4259

for.end:                                          ; preds = %for.cond
  br label %if.end67, !dbg !4261

if.end67:                                         ; preds = %for.end, %lor.lhs.false30
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then14
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then6
  %57 = load i32, i32* %tot, align 4, !dbg !4262
  %cmp70 = icmp eq i32 %57, 0, !dbg !4264
  br i1 %cmp70, label %if.then75, label %lor.lhs.false72, !dbg !4265

lor.lhs.false72:                                  ; preds = %if.end69
  %58 = load i32, i32* %size, align 4, !dbg !4266
  %cmp73 = icmp eq i32 %58, 0, !dbg !4267
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !4268

if.then75:                                        ; preds = %lor.lhs.false72, %if.end69
  store float* null, float** %retval, align 8, !dbg !4269
  br label %return, !dbg !4269

if.end76:                                         ; preds = %lor.lhs.false72
  %59 = load float*, float** %arr.addr, align 8, !dbg !4270
  %cmp77 = icmp eq float* %59, null, !dbg !4272
  br i1 %cmp77, label %if.then79, label %if.else82, !dbg !4273

if.then79:                                        ; preds = %if.end76
  %60 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4274
  %61 = load i32, i32* %size, align 4, !dbg !4276
  %conv80 = sext i32 %61 to i64, !dbg !4276
  %call81 = call i8* %60(i64 %conv80, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0)), !dbg !4274
  store i8* %call81, i8** %out, align 8, !dbg !4277
  br label %if.end88, !dbg !4278

if.else82:                                        ; preds = %if.end76
  %62 = load i64, i64* %arr_size.addr, align 8, !dbg !4279
  %63 = load i32, i32* %size, align 4, !dbg !4282
  %conv83 = sext i32 %63 to i64, !dbg !4282
  %cmp84 = icmp ne i64 %62, %conv83, !dbg !4283
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !4284

if.then86:                                        ; preds = %if.else82
  store float* null, float** %retval, align 8, !dbg !4285
  br label %return, !dbg !4285

if.end87:                                         ; preds = %if.else82
  %64 = load float*, float** %arr.addr, align 8, !dbg !4287
  %65 = bitcast float* %64 to i8*, !dbg !4288
  store i8* %65, i8** %out, align 8, !dbg !4289
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.then79
  %66 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4290
  %data89 = getelementptr inbounds %struct.Object, %struct.Object* %66, i32 0, i32 19, !dbg !4291
  %67 = load i8*, i8** %data89, align 8, !dbg !4291
  %68 = bitcast i8* %67 to %struct.ID*, !dbg !4292
  %69 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4293
  %from = getelementptr inbounds %struct.Key, %struct.Key* %69, i32 0, i32 8, !dbg !4294
  store %struct.ID* %68, %struct.ID** %from, align 8, !dbg !4295
  %70 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4296
  %shapeflag = getelementptr inbounds %struct.Object, %struct.Object* %70, i32 0, i32 114, !dbg !4298
  %71 = load i8, i8* %shapeflag, align 1, !dbg !4298
  %conv90 = zext i8 %71 to i32, !dbg !4296
  %and = and i32 %conv90, 1, !dbg !4299
  %tobool91 = icmp ne i32 %and, 0, !dbg !4299
  br i1 %tobool91, label %if.then92, label %if.else137, !dbg !4300

if.then92:                                        ; preds = %if.end88
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !4301, metadata !DIExpression()), !dbg !4303
  %72 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4304
  %block93 = getelementptr inbounds %struct.Key, %struct.Key* %72, i32 0, i32 6, !dbg !4305
  %73 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4306
  %shapenr = getelementptr inbounds %struct.Object, %struct.Object* %73, i32 0, i32 115, !dbg !4307
  %74 = load i16, i16* %shapenr, align 2, !dbg !4307
  %conv94 = sext i16 %74 to i32, !dbg !4306
  %sub = sub nsw i32 %conv94, 1, !dbg !4308
  %call95 = call i8* @BLI_findlink(%struct.ListBase* %block93, i32 %sub), !dbg !4309
  %75 = bitcast i8* %call95 to %struct.KeyBlock*, !dbg !4309
  store %struct.KeyBlock* %75, %struct.KeyBlock** %kb, align 8, !dbg !4303
  %76 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4310
  %tobool96 = icmp ne %struct.KeyBlock* %76, null, !dbg !4310
  br i1 %tobool96, label %land.lhs.true, label %if.end101, !dbg !4312

land.lhs.true:                                    ; preds = %if.then92
  %77 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4313
  %flag = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %77, i32 0, i32 7, !dbg !4314
  %78 = load i16, i16* %flag, align 2, !dbg !4314
  %conv97 = sext i16 %78 to i32, !dbg !4313
  %and98 = and i32 %conv97, 1, !dbg !4315
  %tobool99 = icmp ne i32 %and98, 0, !dbg !4315
  br i1 %tobool99, label %if.then100, label %if.end101, !dbg !4316

if.then100:                                       ; preds = %land.lhs.true
  %79 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4317
  %refkey = getelementptr inbounds %struct.Key, %struct.Key* %79, i32 0, i32 2, !dbg !4318
  %80 = load %struct.KeyBlock*, %struct.KeyBlock** %refkey, align 8, !dbg !4318
  store %struct.KeyBlock* %80, %struct.KeyBlock** %kb, align 8, !dbg !4319
  br label %if.end101, !dbg !4320

if.end101:                                        ; preds = %if.then100, %land.lhs.true, %if.then92
  %81 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4321
  %cmp102 = icmp eq %struct.KeyBlock* %81, null, !dbg !4323
  br i1 %cmp102, label %if.then104, label %if.end108, !dbg !4324

if.then104:                                       ; preds = %if.end101
  %82 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4325
  %block105 = getelementptr inbounds %struct.Key, %struct.Key* %82, i32 0, i32 6, !dbg !4327
  %first106 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block105, i32 0, i32 0, !dbg !4328
  %83 = load i8*, i8** %first106, align 8, !dbg !4328
  %84 = bitcast i8* %83 to %struct.KeyBlock*, !dbg !4325
  store %struct.KeyBlock* %84, %struct.KeyBlock** %kb, align 8, !dbg !4329
  %85 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4330
  %shapenr107 = getelementptr inbounds %struct.Object, %struct.Object* %85, i32 0, i32 115, !dbg !4331
  store i16 1, i16* %shapenr107, align 2, !dbg !4332
  br label %if.end108, !dbg !4333

if.end108:                                        ; preds = %if.then104, %if.end101
  %86 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4334
  %type109 = getelementptr inbounds %struct.Object, %struct.Object* %86, i32 0, i32 3, !dbg !4334
  %87 = load i16, i16* %type109, align 8, !dbg !4334
  %conv110 = sext i16 %87 to i32, !dbg !4334
  %cmp111 = icmp eq i32 %conv110, 1, !dbg !4334
  br i1 %cmp111, label %if.then118, label %lor.lhs.false113, !dbg !4334

lor.lhs.false113:                                 ; preds = %if.end108
  %88 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4334
  %type114 = getelementptr inbounds %struct.Object, %struct.Object* %88, i32 0, i32 3, !dbg !4334
  %89 = load i16, i16* %type114, align 8, !dbg !4334
  %conv115 = sext i16 %89 to i32, !dbg !4334
  %cmp116 = icmp eq i32 %conv115, 22, !dbg !4334
  br i1 %cmp116, label %if.then118, label %if.else123, !dbg !4336

if.then118:                                       ; preds = %lor.lhs.false113, %if.end108
  call void @llvm.dbg.declare(metadata float** %weights, metadata !4337, metadata !DIExpression()), !dbg !4339
  %90 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4340
  %91 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4341
  %vgroup = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %91, i32 0, i32 12, !dbg !4342
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %vgroup, i64 0, i64 0, !dbg !4341
  %call119 = call float* @get_weights_array(%struct.Object* %90, i8* %arraydecay, %struct.WeightsArrayCache* null), !dbg !4343
  store float* %call119, float** %weights, align 8, !dbg !4339
  %92 = load i32, i32* %tot, align 4, !dbg !4344
  %93 = load i32, i32* %tot, align 4, !dbg !4345
  %94 = load i8*, i8** %out, align 8, !dbg !4346
  %95 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4347
  %96 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb, align 8, !dbg !4348
  %97 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4349
  %98 = load float*, float** %weights, align 8, !dbg !4350
  call void @cp_key(i32 0, i32 %92, i32 %93, i8* %94, %struct.Key* %95, %struct.KeyBlock* %96, %struct.KeyBlock* %97, float* %98, i32 0), !dbg !4351
  %99 = load float*, float** %weights, align 8, !dbg !4352
  %tobool120 = icmp ne float* %99, null, !dbg !4352
  br i1 %tobool120, label %if.then121, label %if.end122, !dbg !4354

if.then121:                                       ; preds = %if.then118
  %100 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4355
  %101 = load float*, float** %weights, align 8, !dbg !4356
  %102 = bitcast float* %101 to i8*, !dbg !4356
  call void %100(i8* %102), !dbg !4355
  br label %if.end122, !dbg !4355

if.end122:                                        ; preds = %if.then121, %if.then118
  br label %if.end136, !dbg !4357

if.else123:                                       ; preds = %lor.lhs.false113
  %103 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4358
  %type124 = getelementptr inbounds %struct.Object, %struct.Object* %103, i32 0, i32 3, !dbg !4358
  %104 = load i16, i16* %type124, align 8, !dbg !4358
  %conv125 = sext i16 %104 to i32, !dbg !4358
  %cmp126 = icmp eq i32 %conv125, 2, !dbg !4358
  br i1 %cmp126, label %if.then133, label %lor.lhs.false128, !dbg !4358

lor.lhs.false128:                                 ; preds = %if.else123
  %105 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4358
  %type129 = getelementptr inbounds %struct.Object, %struct.Object* %105, i32 0, i32 3, !dbg !4358
  %106 = load i16, i16* %type129, align 8, !dbg !4358
  %conv130 = sext i16 %106 to i32, !dbg !4358
  %cmp131 = icmp eq i32 %conv130, 3, !dbg !4358
  br i1 %cmp131, label %if.then133, label %if.end135, !dbg !4360

if.then133:                                       ; preds = %lor.lhs.false128, %if.else123
  %107 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4361
  %data134 = getelementptr inbounds %struct.Object, %struct.Object* %107, i32 0, i32 19, !dbg !4362
  %108 = load i8*, i8** %data134, align 8, !dbg !4362
  %109 = bitcast i8* %108 to %struct.Curve*, !dbg !4361
  %110 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4363
  %111 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb, align 8, !dbg !4364
  %112 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4365
  %113 = load i32, i32* %tot, align 4, !dbg !4366
  %114 = load i8*, i8** %out, align 8, !dbg !4367
  %115 = load i32, i32* %tot, align 4, !dbg !4368
  call void @cp_cu_key(%struct.Curve* %109, %struct.Key* %110, %struct.KeyBlock* %111, %struct.KeyBlock* %112, i32 0, i32 %113, i8* %114, i32 %115), !dbg !4369
  br label %if.end135, !dbg !4369

if.end135:                                        ; preds = %if.then133, %lor.lhs.false128
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.end122
  br label %if.end165, !dbg !4370

if.else137:                                       ; preds = %if.end88
  %116 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4371
  %type138 = getelementptr inbounds %struct.Object, %struct.Object* %116, i32 0, i32 3, !dbg !4374
  %117 = load i16, i16* %type138, align 8, !dbg !4374
  %conv139 = sext i16 %117 to i32, !dbg !4371
  %cmp140 = icmp eq i32 %conv139, 1, !dbg !4375
  br i1 %cmp140, label %if.then142, label %if.else143, !dbg !4376

if.then142:                                       ; preds = %if.else137
  %118 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4377
  %119 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4378
  %120 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4379
  %121 = load i8*, i8** %out, align 8, !dbg !4380
  %122 = load i32, i32* %tot, align 4, !dbg !4381
  call void @do_mesh_key(%struct.Scene* %118, %struct.Object* %119, %struct.Key* %120, i8* %121, i32 %122), !dbg !4382
  br label %if.end164, !dbg !4382

if.else143:                                       ; preds = %if.else137
  %123 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4383
  %type144 = getelementptr inbounds %struct.Object, %struct.Object* %123, i32 0, i32 3, !dbg !4385
  %124 = load i16, i16* %type144, align 8, !dbg !4385
  %conv145 = sext i16 %124 to i32, !dbg !4383
  %cmp146 = icmp eq i32 %conv145, 22, !dbg !4386
  br i1 %cmp146, label %if.then148, label %if.else149, !dbg !4387

if.then148:                                       ; preds = %if.else143
  %125 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4388
  %126 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4389
  %127 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4390
  %128 = load i8*, i8** %out, align 8, !dbg !4391
  %129 = load i32, i32* %tot, align 4, !dbg !4392
  call void @do_latt_key(%struct.Scene* %125, %struct.Object* %126, %struct.Key* %127, i8* %128, i32 %129), !dbg !4393
  br label %if.end163, !dbg !4393

if.else149:                                       ; preds = %if.else143
  %130 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4394
  %type150 = getelementptr inbounds %struct.Object, %struct.Object* %130, i32 0, i32 3, !dbg !4396
  %131 = load i16, i16* %type150, align 8, !dbg !4396
  %conv151 = sext i16 %131 to i32, !dbg !4394
  %cmp152 = icmp eq i32 %conv151, 2, !dbg !4397
  br i1 %cmp152, label %if.then154, label %if.else155, !dbg !4398

if.then154:                                       ; preds = %if.else149
  %132 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4399
  %133 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4400
  %134 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4401
  %135 = load i8*, i8** %out, align 8, !dbg !4402
  %136 = load i32, i32* %tot, align 4, !dbg !4403
  call void @do_curve_key(%struct.Scene* %132, %struct.Object* %133, %struct.Key* %134, i8* %135, i32 %136), !dbg !4404
  br label %if.end162, !dbg !4404

if.else155:                                       ; preds = %if.else149
  %137 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4405
  %type156 = getelementptr inbounds %struct.Object, %struct.Object* %137, i32 0, i32 3, !dbg !4407
  %138 = load i16, i16* %type156, align 8, !dbg !4407
  %conv157 = sext i16 %138 to i32, !dbg !4405
  %cmp158 = icmp eq i32 %conv157, 3, !dbg !4408
  br i1 %cmp158, label %if.then160, label %if.end161, !dbg !4409

if.then160:                                       ; preds = %if.else155
  %139 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4410
  %140 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4411
  %141 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4412
  %142 = load i8*, i8** %out, align 8, !dbg !4413
  %143 = load i32, i32* %tot, align 4, !dbg !4414
  call void @do_curve_key(%struct.Scene* %139, %struct.Object* %140, %struct.Key* %141, i8* %142, i32 %143), !dbg !4415
  br label %if.end161, !dbg !4415

if.end161:                                        ; preds = %if.then160, %if.else155
  br label %if.end162

if.end162:                                        ; preds = %if.end161, %if.then154
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %if.then148
  br label %if.end164

if.end164:                                        ; preds = %if.end163, %if.then142
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.end136
  %144 = load i32*, i32** %r_totelem.addr, align 8, !dbg !4416
  %tobool166 = icmp ne i32* %144, null, !dbg !4416
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !4418

if.then167:                                       ; preds = %if.end165
  %145 = load i32, i32* %tot, align 4, !dbg !4419
  %146 = load i32*, i32** %r_totelem.addr, align 8, !dbg !4421
  store i32 %145, i32* %146, align 4, !dbg !4422
  br label %if.end168, !dbg !4423

if.end168:                                        ; preds = %if.then167, %if.end165
  %147 = load i8*, i8** %out, align 8, !dbg !4424
  %148 = bitcast i8* %147 to float*, !dbg !4425
  store float* %148, float** %retval, align 8, !dbg !4426
  br label %return, !dbg !4426

return:                                           ; preds = %if.end168, %if.then86, %if.then75, %if.then
  %149 = load float*, float** %retval, align 8, !dbg !4427
  ret float* %149, !dbg !4427
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Key* @BKE_key_from_object(%struct.Object* %ob) #0 !dbg !4428 {
entry:
  %retval = alloca %struct.Key*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %cu = alloca %struct.Curve*, align 8
  %lt = alloca %struct.Lattice*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4431, metadata !DIExpression()), !dbg !4432
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4433
  %cmp = icmp eq %struct.Object* %0, null, !dbg !4435
  br i1 %cmp, label %if.then, label %if.end, !dbg !4436

if.then:                                          ; preds = %entry
  store %struct.Key* null, %struct.Key** %retval, align 8, !dbg !4437
  br label %return, !dbg !4437

if.end:                                           ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4438
  %type = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 3, !dbg !4440
  %2 = load i16, i16* %type, align 8, !dbg !4440
  %conv = sext i16 %2 to i32, !dbg !4438
  %cmp1 = icmp eq i32 %conv, 1, !dbg !4441
  br i1 %cmp1, label %if.then3, label %if.else, !dbg !4442

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !4443, metadata !DIExpression()), !dbg !4445
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4446
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !4447
  %4 = load i8*, i8** %data, align 8, !dbg !4447
  %5 = bitcast i8* %4 to %struct.Mesh*, !dbg !4446
  store %struct.Mesh* %5, %struct.Mesh** %me, align 8, !dbg !4445
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4448
  %key = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 4, !dbg !4449
  %7 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4449
  store %struct.Key* %7, %struct.Key** %retval, align 8, !dbg !4450
  br label %return, !dbg !4450

if.else:                                          ; preds = %if.end
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4451
  %type4 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 3, !dbg !4451
  %9 = load i16, i16* %type4, align 8, !dbg !4451
  %conv5 = sext i16 %9 to i32, !dbg !4451
  %cmp6 = icmp eq i32 %conv5, 2, !dbg !4451
  br i1 %cmp6, label %if.then12, label %lor.lhs.false, !dbg !4451

lor.lhs.false:                                    ; preds = %if.else
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4451
  %type8 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 3, !dbg !4451
  %11 = load i16, i16* %type8, align 8, !dbg !4451
  %conv9 = sext i16 %11 to i32, !dbg !4451
  %cmp10 = icmp eq i32 %conv9, 3, !dbg !4451
  br i1 %cmp10, label %if.then12, label %if.else15, !dbg !4453

if.then12:                                        ; preds = %lor.lhs.false, %if.else
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !4454, metadata !DIExpression()), !dbg !4456
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4457
  %data13 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 19, !dbg !4458
  %13 = load i8*, i8** %data13, align 8, !dbg !4458
  %14 = bitcast i8* %13 to %struct.Curve*, !dbg !4457
  store %struct.Curve* %14, %struct.Curve** %cu, align 8, !dbg !4456
  %15 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4459
  %key14 = getelementptr inbounds %struct.Curve, %struct.Curve* %15, i32 0, i32 9, !dbg !4460
  %16 = load %struct.Key*, %struct.Key** %key14, align 8, !dbg !4460
  store %struct.Key* %16, %struct.Key** %retval, align 8, !dbg !4461
  br label %return, !dbg !4461

if.else15:                                        ; preds = %lor.lhs.false
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4462
  %type16 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 3, !dbg !4464
  %18 = load i16, i16* %type16, align 8, !dbg !4464
  %conv17 = sext i16 %18 to i32, !dbg !4462
  %cmp18 = icmp eq i32 %conv17, 22, !dbg !4465
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !4466

if.then20:                                        ; preds = %if.else15
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !4467, metadata !DIExpression()), !dbg !4469
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4470
  %data21 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 19, !dbg !4471
  %20 = load i8*, i8** %data21, align 8, !dbg !4471
  %21 = bitcast i8* %20 to %struct.Lattice*, !dbg !4470
  store %struct.Lattice* %21, %struct.Lattice** %lt, align 8, !dbg !4469
  %22 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4472
  %key22 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %22, i32 0, i32 23, !dbg !4473
  %23 = load %struct.Key*, %struct.Key** %key22, align 8, !dbg !4473
  store %struct.Key* %23, %struct.Key** %retval, align 8, !dbg !4474
  br label %return, !dbg !4474

if.end23:                                         ; preds = %if.else15
  br label %if.end24

if.end24:                                         ; preds = %if.end23
  br label %if.end25

if.end25:                                         ; preds = %if.end24
  store %struct.Key* null, %struct.Key** %retval, align 8, !dbg !4475
  br label %return, !dbg !4475

return:                                           ; preds = %if.end25, %if.then20, %if.then12, %if.then3, %if.then
  %24 = load %struct.Key*, %struct.Key** %retval, align 8, !dbg !4476
  ret %struct.Key* %24, !dbg !4476
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.KeyBlock* @BKE_keyblock_from_object(%struct.Object* %ob) #0 !dbg !4477 {
entry:
  %retval = alloca %struct.KeyBlock*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %key = alloca %struct.Key*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4480, metadata !DIExpression()), !dbg !4481
  call void @llvm.dbg.declare(metadata %struct.Key** %key, metadata !4482, metadata !DIExpression()), !dbg !4483
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4484
  %call = call %struct.Key* @BKE_key_from_object(%struct.Object* %0), !dbg !4485
  store %struct.Key* %call, %struct.Key** %key, align 8, !dbg !4483
  %1 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4486
  %tobool = icmp ne %struct.Key* %1, null, !dbg !4486
  br i1 %tobool, label %if.then, label %if.end, !dbg !4488

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !4489, metadata !DIExpression()), !dbg !4491
  %2 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4492
  %block = getelementptr inbounds %struct.Key, %struct.Key* %2, i32 0, i32 6, !dbg !4493
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4494
  %shapenr = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 115, !dbg !4495
  %4 = load i16, i16* %shapenr, align 2, !dbg !4495
  %conv = sext i16 %4 to i32, !dbg !4494
  %sub = sub nsw i32 %conv, 1, !dbg !4496
  %call1 = call i8* @BLI_findlink(%struct.ListBase* %block, i32 %sub), !dbg !4497
  %5 = bitcast i8* %call1 to %struct.KeyBlock*, !dbg !4497
  store %struct.KeyBlock* %5, %struct.KeyBlock** %kb, align 8, !dbg !4491
  %6 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4498
  store %struct.KeyBlock* %6, %struct.KeyBlock** %retval, align 8, !dbg !4499
  br label %return, !dbg !4499

if.end:                                           ; preds = %entry
  store %struct.KeyBlock* null, %struct.KeyBlock** %retval, align 8, !dbg !4500
  br label %return, !dbg !4500

return:                                           ; preds = %if.end, %if.then
  %7 = load %struct.KeyBlock*, %struct.KeyBlock** %retval, align 8, !dbg !4501
  ret %struct.KeyBlock* %7, !dbg !4501
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !4502 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !4508, metadata !DIExpression()), !dbg !4509
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !4510
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !4511
  %1 = load i8*, i8** %first, align 8, !dbg !4511
  %cmp = icmp eq i8* %1, null, !dbg !4512
  %conv = zext i1 %cmp to i32, !dbg !4512
  %conv1 = trunc i32 %conv to i8, !dbg !4513
  ret i8 %conv1, !dbg !4514
}

; Function Attrs: noinline nounwind uwtable
define internal void @cp_cu_key(%struct.Curve* %cu, %struct.Key* %key, %struct.KeyBlock* %actkb, %struct.KeyBlock* %kb, i32 %start, i32 %end, i8* %out, i32 %tot) #0 !dbg !4515 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %key.addr = alloca %struct.Key*, align 8
  %actkb.addr = alloca %struct.KeyBlock*, align 8
  %kb.addr = alloca %struct.KeyBlock*, align 8
  %start.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %out.addr = alloca i8*, align 8
  %tot.addr = alloca i32, align 4
  %nu = alloca %struct.Nurb*, align 8
  %a = alloca i32, align 4
  %step = alloca i32, align 4
  %a1 = alloca i32, align 4
  %a2 = alloca i32, align 4
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !4518, metadata !DIExpression()), !dbg !4519
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !4520, metadata !DIExpression()), !dbg !4521
  store %struct.KeyBlock* %actkb, %struct.KeyBlock** %actkb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %actkb.addr, metadata !4522, metadata !DIExpression()), !dbg !4523
  store %struct.KeyBlock* %kb, %struct.KeyBlock** %kb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb.addr, metadata !4524, metadata !DIExpression()), !dbg !4525
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !4526, metadata !DIExpression()), !dbg !4527
  store i32 %end, i32* %end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end.addr, metadata !4528, metadata !DIExpression()), !dbg !4529
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !4530, metadata !DIExpression()), !dbg !4531
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !4532, metadata !DIExpression()), !dbg !4533
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !4534, metadata !DIExpression()), !dbg !4535
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4536, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.declare(metadata i32* %step, metadata !4538, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !4540, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.declare(metadata i32* %a2, metadata !4542, metadata !DIExpression()), !dbg !4543
  store i32 0, i32* %a, align 4, !dbg !4544
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !4546
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 3, !dbg !4547
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb, i32 0, i32 0, !dbg !4548
  %1 = load i8*, i8** %first, align 8, !dbg !4548
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !4546
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !4549
  br label %for.cond, !dbg !4550

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4551
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !4553
  br i1 %tobool, label %for.body, label %for.end, !dbg !4553

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4554
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 17, !dbg !4557
  %5 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4557
  %tobool1 = icmp ne %struct.BPoint* %5, null, !dbg !4554
  br i1 %tobool1, label %if.then, label %if.else, !dbg !4558

if.then:                                          ; preds = %for.body
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4559
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 6, !dbg !4561
  %7 = load i32, i32* %pntsu, align 8, !dbg !4561
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4562
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 7, !dbg !4563
  %9 = load i32, i32* %pntsv, align 4, !dbg !4563
  %mul = mul nsw i32 %7, %9, !dbg !4564
  store i32 %mul, i32* %step, align 4, !dbg !4565
  %10 = load i32, i32* %a, align 4, !dbg !4566
  %11 = load i32, i32* %start.addr, align 4, !dbg !4567
  %call = call i32 @max_ii(i32 %10, i32 %11), !dbg !4568
  store i32 %call, i32* %a1, align 4, !dbg !4569
  %12 = load i32, i32* %a, align 4, !dbg !4570
  %13 = load i32, i32* %step, align 4, !dbg !4571
  %add = add nsw i32 %12, %13, !dbg !4572
  %14 = load i32, i32* %end.addr, align 4, !dbg !4573
  %call2 = call i32 @min_ii(i32 %add, i32 %14), !dbg !4574
  store i32 %call2, i32* %a2, align 4, !dbg !4575
  %15 = load i32, i32* %a1, align 4, !dbg !4576
  %16 = load i32, i32* %a2, align 4, !dbg !4578
  %cmp = icmp slt i32 %15, %16, !dbg !4579
  br i1 %cmp, label %if.then3, label %if.end, !dbg !4580

if.then3:                                         ; preds = %if.then
  %17 = load i32, i32* %a1, align 4, !dbg !4581
  %18 = load i32, i32* %a2, align 4, !dbg !4582
  %19 = load i32, i32* %tot.addr, align 4, !dbg !4583
  %20 = load i8*, i8** %out.addr, align 8, !dbg !4584
  %21 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4585
  %22 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb.addr, align 8, !dbg !4586
  %23 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !4587
  call void @cp_key(i32 %17, i32 %18, i32 %19, i8* %20, %struct.Key* %21, %struct.KeyBlock* %22, %struct.KeyBlock* %23, float* null, i32 1), !dbg !4588
  br label %if.end, !dbg !4588

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end16, !dbg !4589

if.else:                                          ; preds = %for.body
  %24 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4590
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %24, i32 0, i32 18, !dbg !4592
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4592
  %tobool4 = icmp ne %struct.BezTriple* %25, null, !dbg !4590
  br i1 %tobool4, label %if.then5, label %if.else14, !dbg !4593

if.then5:                                         ; preds = %if.else
  %26 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4594
  %pntsu6 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %26, i32 0, i32 6, !dbg !4596
  %27 = load i32, i32* %pntsu6, align 8, !dbg !4596
  %mul7 = mul nsw i32 3, %27, !dbg !4597
  store i32 %mul7, i32* %step, align 4, !dbg !4598
  %28 = load i32, i32* %a, align 4, !dbg !4599
  %29 = load i32, i32* %start.addr, align 4, !dbg !4600
  %call8 = call i32 @max_ii(i32 %28, i32 %29), !dbg !4601
  store i32 %call8, i32* %a1, align 4, !dbg !4602
  %30 = load i32, i32* %a, align 4, !dbg !4603
  %31 = load i32, i32* %step, align 4, !dbg !4604
  %add9 = add nsw i32 %30, %31, !dbg !4605
  %32 = load i32, i32* %end.addr, align 4, !dbg !4606
  %call10 = call i32 @min_ii(i32 %add9, i32 %32), !dbg !4607
  store i32 %call10, i32* %a2, align 4, !dbg !4608
  %33 = load i32, i32* %a1, align 4, !dbg !4609
  %34 = load i32, i32* %a2, align 4, !dbg !4611
  %cmp11 = icmp slt i32 %33, %34, !dbg !4612
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !4613

if.then12:                                        ; preds = %if.then5
  %35 = load i32, i32* %a1, align 4, !dbg !4614
  %36 = load i32, i32* %a2, align 4, !dbg !4615
  %37 = load i32, i32* %tot.addr, align 4, !dbg !4616
  %38 = load i8*, i8** %out.addr, align 8, !dbg !4617
  %39 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4618
  %40 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb.addr, align 8, !dbg !4619
  %41 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !4620
  call void @cp_key(i32 %35, i32 %36, i32 %37, i8* %38, %struct.Key* %39, %struct.KeyBlock* %40, %struct.KeyBlock* %41, float* null, i32 2), !dbg !4621
  br label %if.end13, !dbg !4621

if.end13:                                         ; preds = %if.then12, %if.then5
  br label %if.end15, !dbg !4622

if.else14:                                        ; preds = %if.else
  store i32 0, i32* %step, align 4, !dbg !4623
  br label %if.end15

if.end15:                                         ; preds = %if.else14, %if.end13
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end
  br label %for.inc, !dbg !4625

for.inc:                                          ; preds = %if.end16
  %42 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4626
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %42, i32 0, i32 0, !dbg !4627
  %43 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !4627
  store %struct.Nurb* %43, %struct.Nurb** %nu, align 8, !dbg !4628
  %44 = load i32, i32* %step, align 4, !dbg !4629
  %45 = load i32, i32* %a, align 4, !dbg !4630
  %add17 = add nsw i32 %45, %44, !dbg !4630
  store i32 %add17, i32* %a, align 4, !dbg !4630
  br label %for.cond, !dbg !4631, !llvm.loop !4632

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4634
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_mesh_key(%struct.Scene* %scene, %struct.Object* %ob, %struct.Key* %key, i8* %out, i32 %tot) #0 !dbg !4635 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %key.addr = alloca %struct.Key*, align 8
  %out.addr = alloca i8*, align 8
  %tot.addr = alloca i32, align 4
  %k = alloca [4 x %struct.KeyBlock*], align 16
  %actkb = alloca %struct.KeyBlock*, align 8
  %t = alloca [4 x float], align 16
  %flag = alloca i32, align 4
  %ctime_scaled = alloca float, align 4
  %delta = alloca float, align 4
  %cfra = alloca float, align 4
  %step = alloca i32, align 4
  %a = alloca i32, align 4
  %cache = alloca %struct.WeightsArrayCache, align 8
  %per_keyblock_weights = alloca float**, align 8
  %ctime_scaled37 = alloca float, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4638, metadata !DIExpression()), !dbg !4639
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4640, metadata !DIExpression()), !dbg !4641
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !4642, metadata !DIExpression()), !dbg !4643
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !4644, metadata !DIExpression()), !dbg !4645
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !4646, metadata !DIExpression()), !dbg !4647
  call void @llvm.dbg.declare(metadata [4 x %struct.KeyBlock*]* %k, metadata !4648, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %actkb, metadata !4651, metadata !DIExpression()), !dbg !4652
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4653
  %call = call %struct.KeyBlock* @BKE_keyblock_from_object(%struct.Object* %0), !dbg !4654
  store %struct.KeyBlock* %call, %struct.KeyBlock** %actkb, align 8, !dbg !4652
  call void @llvm.dbg.declare(metadata [4 x float]* %t, metadata !4655, metadata !DIExpression()), !dbg !4656
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !4657, metadata !DIExpression()), !dbg !4658
  store i32 0, i32* %flag, align 4, !dbg !4658
  %1 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4659
  %slurph = getelementptr inbounds %struct.Key, %struct.Key* %1, i32 0, i32 11, !dbg !4661
  %2 = load i16, i16* %slurph, align 4, !dbg !4661
  %conv = sext i16 %2 to i32, !dbg !4659
  %tobool = icmp ne i32 %conv, 0, !dbg !4659
  br i1 %tobool, label %land.lhs.true, label %if.else29, !dbg !4662

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4663
  %type = getelementptr inbounds %struct.Key, %struct.Key* %3, i32 0, i32 9, !dbg !4664
  %4 = load i16, i16* %type, align 8, !dbg !4664
  %conv1 = sext i16 %4 to i32, !dbg !4663
  %cmp = icmp ne i32 %conv1, 1, !dbg !4665
  br i1 %cmp, label %if.then, label %if.else29, !dbg !4666

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %ctime_scaled, metadata !4667, metadata !DIExpression()), !dbg !4670
  %5 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4671
  %ctime = getelementptr inbounds %struct.Key, %struct.Key* %5, i32 0, i32 13, !dbg !4672
  %6 = load float, float* %ctime, align 8, !dbg !4672
  %div = fdiv float %6, 1.000000e+02, !dbg !4673
  store float %div, float* %ctime_scaled, align 4, !dbg !4670
  call void @llvm.dbg.declare(metadata float* %delta, metadata !4674, metadata !DIExpression()), !dbg !4675
  %7 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4676
  %slurph3 = getelementptr inbounds %struct.Key, %struct.Key* %7, i32 0, i32 11, !dbg !4677
  %8 = load i16, i16* %slurph3, align 4, !dbg !4677
  %conv4 = sitofp i16 %8 to float, !dbg !4678
  %9 = load i32, i32* %tot.addr, align 4, !dbg !4679
  %conv5 = sitofp i32 %9 to float, !dbg !4679
  %div6 = fdiv float %conv4, %conv5, !dbg !4680
  store float %div6, float* %delta, align 4, !dbg !4675
  call void @llvm.dbg.declare(metadata float* %cfra, metadata !4681, metadata !DIExpression()), !dbg !4682
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4683
  %call7 = call float @BKE_scene_frame_get(%struct.Scene* %10), !dbg !4684
  store float %call7, float* %cfra, align 4, !dbg !4682
  call void @llvm.dbg.declare(metadata i32* %step, metadata !4685, metadata !DIExpression()), !dbg !4686
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4687, metadata !DIExpression()), !dbg !4688
  %11 = load i32, i32* %tot.addr, align 4, !dbg !4689
  %cmp8 = icmp sgt i32 %11, 100, !dbg !4691
  br i1 %cmp8, label %land.lhs.true10, label %if.else, !dbg !4692

land.lhs.true10:                                  ; preds = %if.then
  %12 = load i32, i32* @slurph_opt, align 4, !dbg !4693
  %tobool11 = icmp ne i32 %12, 0, !dbg !4693
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !4694

if.then12:                                        ; preds = %land.lhs.true10
  %13 = load i32, i32* %tot.addr, align 4, !dbg !4695
  %div13 = sdiv i32 %13, 50, !dbg !4697
  store i32 %div13, i32* %step, align 4, !dbg !4698
  %14 = load i32, i32* %step, align 4, !dbg !4699
  %conv14 = sitofp i32 %14 to float, !dbg !4699
  %15 = load float, float* %delta, align 4, !dbg !4700
  %mul = fmul float %15, %conv14, !dbg !4700
  store float %mul, float* %delta, align 4, !dbg !4700
  br label %if.end, !dbg !4701

if.else:                                          ; preds = %land.lhs.true10, %if.then
  store i32 1, i32* %step, align 4, !dbg !4702
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then12
  store i32 0, i32* %a, align 4, !dbg !4704
  br label %for.cond, !dbg !4706

for.cond:                                         ; preds = %for.inc, %if.end
  %16 = load i32, i32* %a, align 4, !dbg !4707
  %17 = load i32, i32* %tot.addr, align 4, !dbg !4709
  %cmp15 = icmp slt i32 %16, %17, !dbg !4710
  br i1 %cmp15, label %for.body, label %for.end, !dbg !4711

for.body:                                         ; preds = %for.cond
  %18 = load float, float* %ctime_scaled, align 4, !dbg !4712
  %19 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4714
  %block = getelementptr inbounds %struct.Key, %struct.Key* %19, i32 0, i32 6, !dbg !4715
  %arraydecay = getelementptr inbounds [4 x %struct.KeyBlock*], [4 x %struct.KeyBlock*]* %k, i64 0, i64 0, !dbg !4716
  %arraydecay17 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !4717
  %call18 = call i32 @setkeys(float %18, %struct.ListBase* %block, %struct.KeyBlock** %arraydecay, float* %arraydecay17, i32 0), !dbg !4718
  store i32 %call18, i32* %flag, align 4, !dbg !4719
  %20 = load i32, i32* %flag, align 4, !dbg !4720
  %cmp19 = icmp eq i32 %20, 0, !dbg !4722
  br i1 %cmp19, label %if.then21, label %if.else24, !dbg !4723

if.then21:                                        ; preds = %for.body
  %21 = load i32, i32* %a, align 4, !dbg !4724
  %22 = load i32, i32* %a, align 4, !dbg !4725
  %23 = load i32, i32* %step, align 4, !dbg !4726
  %add = add nsw i32 %22, %23, !dbg !4727
  %24 = load i32, i32* %tot.addr, align 4, !dbg !4728
  %25 = load i8*, i8** %out.addr, align 8, !dbg !4729
  %26 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4730
  %27 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb, align 8, !dbg !4731
  %arraydecay22 = getelementptr inbounds [4 x %struct.KeyBlock*], [4 x %struct.KeyBlock*]* %k, i64 0, i64 0, !dbg !4732
  %arraydecay23 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !4733
  call void @do_key(i32 %21, i32 %add, i32 %24, i8* %25, %struct.Key* %26, %struct.KeyBlock* %27, %struct.KeyBlock** %arraydecay22, float* %arraydecay23, i32 0), !dbg !4734
  br label %if.end26, !dbg !4734

if.else24:                                        ; preds = %for.body
  %28 = load i32, i32* %a, align 4, !dbg !4735
  %29 = load i32, i32* %a, align 4, !dbg !4736
  %30 = load i32, i32* %step, align 4, !dbg !4737
  %add25 = add nsw i32 %29, %30, !dbg !4738
  %31 = load i32, i32* %tot.addr, align 4, !dbg !4739
  %32 = load i8*, i8** %out.addr, align 8, !dbg !4740
  %33 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4741
  %34 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb, align 8, !dbg !4742
  %arrayidx = getelementptr inbounds [4 x %struct.KeyBlock*], [4 x %struct.KeyBlock*]* %k, i64 0, i64 2, !dbg !4743
  %35 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx, align 16, !dbg !4743
  call void @cp_key(i32 %28, i32 %add25, i32 %31, i8* %32, %struct.Key* %33, %struct.KeyBlock* %34, %struct.KeyBlock* %35, float* null, i32 0), !dbg !4744
  br label %if.end26

if.end26:                                         ; preds = %if.else24, %if.then21
  br label %for.inc, !dbg !4745

for.inc:                                          ; preds = %if.end26
  %36 = load i32, i32* %step, align 4, !dbg !4746
  %37 = load i32, i32* %a, align 4, !dbg !4747
  %add27 = add nsw i32 %37, %36, !dbg !4747
  store i32 %add27, i32* %a, align 4, !dbg !4747
  %38 = load float, float* %delta, align 4, !dbg !4748
  %39 = load float, float* %cfra, align 4, !dbg !4749
  %add28 = fadd float %39, %38, !dbg !4749
  store float %add28, float* %cfra, align 4, !dbg !4749
  br label %for.cond, !dbg !4750, !llvm.loop !4751

for.end:                                          ; preds = %for.cond
  br label %if.end53, !dbg !4753

if.else29:                                        ; preds = %land.lhs.true, %entry
  %40 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4754
  %type30 = getelementptr inbounds %struct.Key, %struct.Key* %40, i32 0, i32 9, !dbg !4757
  %41 = load i16, i16* %type30, align 8, !dbg !4757
  %conv31 = sext i16 %41 to i32, !dbg !4754
  %cmp32 = icmp eq i32 %conv31, 1, !dbg !4758
  br i1 %cmp32, label %if.then34, label %if.else36, !dbg !4759

if.then34:                                        ; preds = %if.else29
  call void @llvm.dbg.declare(metadata %struct.WeightsArrayCache* %cache, metadata !4760, metadata !DIExpression()), !dbg !4762
  %42 = bitcast %struct.WeightsArrayCache* %cache to i8*, !dbg !4762
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false), !dbg !4762
  call void @llvm.dbg.declare(metadata float*** %per_keyblock_weights, metadata !4763, metadata !DIExpression()), !dbg !4764
  %43 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4765
  %44 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4766
  %call35 = call float** @BKE_keyblock_get_per_block_weights(%struct.Object* %43, %struct.Key* %44, %struct.WeightsArrayCache* %cache), !dbg !4767
  store float** %call35, float*** %per_keyblock_weights, align 8, !dbg !4768
  %45 = load i32, i32* %tot.addr, align 4, !dbg !4769
  %46 = load i32, i32* %tot.addr, align 4, !dbg !4770
  %47 = load i8*, i8** %out.addr, align 8, !dbg !4771
  %48 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4772
  %49 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb, align 8, !dbg !4773
  %50 = load float**, float*** %per_keyblock_weights, align 8, !dbg !4774
  call void @BKE_key_evaluate_relative(i32 0, i32 %45, i32 %46, i8* %47, %struct.Key* %48, %struct.KeyBlock* %49, float** %50, i32 0), !dbg !4775
  %51 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4776
  %52 = load float**, float*** %per_keyblock_weights, align 8, !dbg !4777
  call void @BKE_keyblock_free_per_block_weights(%struct.Key* %51, float** %52, %struct.WeightsArrayCache* %cache), !dbg !4778
  br label %if.end52, !dbg !4779

if.else36:                                        ; preds = %if.else29
  call void @llvm.dbg.declare(metadata float* %ctime_scaled37, metadata !4780, metadata !DIExpression()), !dbg !4782
  %53 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4783
  %ctime38 = getelementptr inbounds %struct.Key, %struct.Key* %53, i32 0, i32 13, !dbg !4784
  %54 = load float, float* %ctime38, align 8, !dbg !4784
  %div39 = fdiv float %54, 1.000000e+02, !dbg !4785
  store float %div39, float* %ctime_scaled37, align 4, !dbg !4782
  %55 = load float, float* %ctime_scaled37, align 4, !dbg !4786
  %56 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4787
  %block40 = getelementptr inbounds %struct.Key, %struct.Key* %56, i32 0, i32 6, !dbg !4788
  %arraydecay41 = getelementptr inbounds [4 x %struct.KeyBlock*], [4 x %struct.KeyBlock*]* %k, i64 0, i64 0, !dbg !4789
  %arraydecay42 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !4790
  %call43 = call i32 @setkeys(float %55, %struct.ListBase* %block40, %struct.KeyBlock** %arraydecay41, float* %arraydecay42, i32 0), !dbg !4791
  store i32 %call43, i32* %flag, align 4, !dbg !4792
  %57 = load i32, i32* %flag, align 4, !dbg !4793
  %cmp44 = icmp eq i32 %57, 0, !dbg !4795
  br i1 %cmp44, label %if.then46, label %if.else49, !dbg !4796

if.then46:                                        ; preds = %if.else36
  %58 = load i32, i32* %tot.addr, align 4, !dbg !4797
  %59 = load i32, i32* %tot.addr, align 4, !dbg !4798
  %60 = load i8*, i8** %out.addr, align 8, !dbg !4799
  %61 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4800
  %62 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb, align 8, !dbg !4801
  %arraydecay47 = getelementptr inbounds [4 x %struct.KeyBlock*], [4 x %struct.KeyBlock*]* %k, i64 0, i64 0, !dbg !4802
  %arraydecay48 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !4803
  call void @do_key(i32 0, i32 %58, i32 %59, i8* %60, %struct.Key* %61, %struct.KeyBlock* %62, %struct.KeyBlock** %arraydecay47, float* %arraydecay48, i32 0), !dbg !4804
  br label %if.end51, !dbg !4804

if.else49:                                        ; preds = %if.else36
  %63 = load i32, i32* %tot.addr, align 4, !dbg !4805
  %64 = load i32, i32* %tot.addr, align 4, !dbg !4806
  %65 = load i8*, i8** %out.addr, align 8, !dbg !4807
  %66 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4808
  %67 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb, align 8, !dbg !4809
  %arrayidx50 = getelementptr inbounds [4 x %struct.KeyBlock*], [4 x %struct.KeyBlock*]* %k, i64 0, i64 2, !dbg !4810
  %68 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx50, align 16, !dbg !4810
  call void @cp_key(i32 0, i32 %63, i32 %64, i8* %65, %struct.Key* %66, %struct.KeyBlock* %67, %struct.KeyBlock* %68, float* null, i32 0), !dbg !4811
  br label %if.end51

if.end51:                                         ; preds = %if.else49, %if.then46
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then34
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %for.end
  ret void, !dbg !4812
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_latt_key(%struct.Scene* %scene, %struct.Object* %ob, %struct.Key* %key, i8* %out, i32 %tot) #0 !dbg !4813 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %key.addr = alloca %struct.Key*, align 8
  %out.addr = alloca i8*, align 8
  %tot.addr = alloca i32, align 4
  %lt = alloca %struct.Lattice*, align 8
  %k = alloca [4 x %struct.KeyBlock*], align 16
  %actkb = alloca %struct.KeyBlock*, align 8
  %t = alloca [4 x float], align 16
  %flag = alloca i32, align 4
  %ctime_scaled = alloca float, align 4
  %delta = alloca float, align 4
  %cfra = alloca float, align 4
  %a = alloca i32, align 4
  %per_keyblock_weights = alloca float**, align 8
  %ctime_scaled27 = alloca float, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4814, metadata !DIExpression()), !dbg !4815
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4816, metadata !DIExpression()), !dbg !4817
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !4818, metadata !DIExpression()), !dbg !4819
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !4820, metadata !DIExpression()), !dbg !4821
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !4822, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !4824, metadata !DIExpression()), !dbg !4825
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4826
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !4827
  %1 = load i8*, i8** %data, align 8, !dbg !4827
  %2 = bitcast i8* %1 to %struct.Lattice*, !dbg !4826
  store %struct.Lattice* %2, %struct.Lattice** %lt, align 8, !dbg !4825
  call void @llvm.dbg.declare(metadata [4 x %struct.KeyBlock*]* %k, metadata !4828, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %actkb, metadata !4830, metadata !DIExpression()), !dbg !4831
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4832
  %call = call %struct.KeyBlock* @BKE_keyblock_from_object(%struct.Object* %3), !dbg !4833
  store %struct.KeyBlock* %call, %struct.KeyBlock** %actkb, align 8, !dbg !4831
  call void @llvm.dbg.declare(metadata [4 x float]* %t, metadata !4834, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !4836, metadata !DIExpression()), !dbg !4837
  %4 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4838
  %slurph = getelementptr inbounds %struct.Key, %struct.Key* %4, i32 0, i32 11, !dbg !4840
  %5 = load i16, i16* %slurph, align 4, !dbg !4840
  %conv = sext i16 %5 to i32, !dbg !4838
  %tobool = icmp ne i32 %conv, 0, !dbg !4838
  br i1 %tobool, label %land.lhs.true, label %if.else19, !dbg !4841

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4842
  %type = getelementptr inbounds %struct.Key, %struct.Key* %6, i32 0, i32 9, !dbg !4843
  %7 = load i16, i16* %type, align 8, !dbg !4843
  %conv1 = sext i16 %7 to i32, !dbg !4842
  %cmp = icmp ne i32 %conv1, 1, !dbg !4844
  br i1 %cmp, label %if.then, label %if.else19, !dbg !4845

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %ctime_scaled, metadata !4846, metadata !DIExpression()), !dbg !4848
  %8 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4849
  %ctime = getelementptr inbounds %struct.Key, %struct.Key* %8, i32 0, i32 13, !dbg !4850
  %9 = load float, float* %ctime, align 8, !dbg !4850
  %div = fdiv float %9, 1.000000e+02, !dbg !4851
  store float %div, float* %ctime_scaled, align 4, !dbg !4848
  call void @llvm.dbg.declare(metadata float* %delta, metadata !4852, metadata !DIExpression()), !dbg !4853
  %10 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4854
  %slurph3 = getelementptr inbounds %struct.Key, %struct.Key* %10, i32 0, i32 11, !dbg !4855
  %11 = load i16, i16* %slurph3, align 4, !dbg !4855
  %conv4 = sitofp i16 %11 to float, !dbg !4856
  %12 = load i32, i32* %tot.addr, align 4, !dbg !4857
  %conv5 = sitofp i32 %12 to float, !dbg !4857
  %div6 = fdiv float %conv4, %conv5, !dbg !4858
  store float %div6, float* %delta, align 4, !dbg !4853
  call void @llvm.dbg.declare(metadata float* %cfra, metadata !4859, metadata !DIExpression()), !dbg !4860
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4861
  %call7 = call float @BKE_scene_frame_get(%struct.Scene* %13), !dbg !4862
  store float %call7, float* %cfra, align 4, !dbg !4860
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4863, metadata !DIExpression()), !dbg !4864
  store i32 0, i32* %a, align 4, !dbg !4865
  br label %for.cond, !dbg !4867

for.cond:                                         ; preds = %for.inc, %if.then
  %14 = load i32, i32* %a, align 4, !dbg !4868
  %15 = load i32, i32* %tot.addr, align 4, !dbg !4870
  %cmp8 = icmp slt i32 %14, %15, !dbg !4871
  br i1 %cmp8, label %for.body, label %for.end, !dbg !4872

for.body:                                         ; preds = %for.cond
  %16 = load float, float* %ctime_scaled, align 4, !dbg !4873
  %17 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4875
  %block = getelementptr inbounds %struct.Key, %struct.Key* %17, i32 0, i32 6, !dbg !4876
  %arraydecay = getelementptr inbounds [4 x %struct.KeyBlock*], [4 x %struct.KeyBlock*]* %k, i64 0, i64 0, !dbg !4877
  %arraydecay10 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !4878
  %call11 = call i32 @setkeys(float %16, %struct.ListBase* %block, %struct.KeyBlock** %arraydecay, float* %arraydecay10, i32 0), !dbg !4879
  store i32 %call11, i32* %flag, align 4, !dbg !4880
  %18 = load i32, i32* %flag, align 4, !dbg !4881
  %cmp12 = icmp eq i32 %18, 0, !dbg !4883
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !4884

if.then14:                                        ; preds = %for.body
  %19 = load i32, i32* %a, align 4, !dbg !4885
  %20 = load i32, i32* %a, align 4, !dbg !4886
  %add = add nsw i32 %20, 1, !dbg !4887
  %21 = load i32, i32* %tot.addr, align 4, !dbg !4888
  %22 = load i8*, i8** %out.addr, align 8, !dbg !4889
  %23 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4890
  %24 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb, align 8, !dbg !4891
  %arraydecay15 = getelementptr inbounds [4 x %struct.KeyBlock*], [4 x %struct.KeyBlock*]* %k, i64 0, i64 0, !dbg !4892
  %arraydecay16 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !4893
  call void @do_key(i32 %19, i32 %add, i32 %21, i8* %22, %struct.Key* %23, %struct.KeyBlock* %24, %struct.KeyBlock** %arraydecay15, float* %arraydecay16, i32 0), !dbg !4894
  br label %if.end, !dbg !4894

if.else:                                          ; preds = %for.body
  %25 = load i32, i32* %a, align 4, !dbg !4895
  %26 = load i32, i32* %a, align 4, !dbg !4896
  %add17 = add nsw i32 %26, 1, !dbg !4897
  %27 = load i32, i32* %tot.addr, align 4, !dbg !4898
  %28 = load i8*, i8** %out.addr, align 8, !dbg !4899
  %29 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4900
  %30 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb, align 8, !dbg !4901
  %arrayidx = getelementptr inbounds [4 x %struct.KeyBlock*], [4 x %struct.KeyBlock*]* %k, i64 0, i64 2, !dbg !4902
  %31 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx, align 16, !dbg !4902
  call void @cp_key(i32 %25, i32 %add17, i32 %27, i8* %28, %struct.Key* %29, %struct.KeyBlock* %30, %struct.KeyBlock* %31, float* null, i32 0), !dbg !4903
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then14
  br label %for.inc, !dbg !4904

for.inc:                                          ; preds = %if.end
  %32 = load i32, i32* %a, align 4, !dbg !4905
  %inc = add nsw i32 %32, 1, !dbg !4905
  store i32 %inc, i32* %a, align 4, !dbg !4905
  %33 = load float, float* %delta, align 4, !dbg !4906
  %34 = load float, float* %cfra, align 4, !dbg !4907
  %add18 = fadd float %34, %33, !dbg !4907
  store float %add18, float* %cfra, align 4, !dbg !4907
  br label %for.cond, !dbg !4908, !llvm.loop !4909

for.end:                                          ; preds = %for.cond
  br label %if.end43, !dbg !4911

if.else19:                                        ; preds = %land.lhs.true, %entry
  %35 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4912
  %type20 = getelementptr inbounds %struct.Key, %struct.Key* %35, i32 0, i32 9, !dbg !4915
  %36 = load i16, i16* %type20, align 8, !dbg !4915
  %conv21 = sext i16 %36 to i32, !dbg !4912
  %cmp22 = icmp eq i32 %conv21, 1, !dbg !4916
  br i1 %cmp22, label %if.then24, label %if.else26, !dbg !4917

if.then24:                                        ; preds = %if.else19
  call void @llvm.dbg.declare(metadata float*** %per_keyblock_weights, metadata !4918, metadata !DIExpression()), !dbg !4920
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4921
  %38 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4922
  %call25 = call float** @BKE_keyblock_get_per_block_weights(%struct.Object* %37, %struct.Key* %38, %struct.WeightsArrayCache* null), !dbg !4923
  store float** %call25, float*** %per_keyblock_weights, align 8, !dbg !4924
  %39 = load i32, i32* %tot.addr, align 4, !dbg !4925
  %40 = load i32, i32* %tot.addr, align 4, !dbg !4926
  %41 = load i8*, i8** %out.addr, align 8, !dbg !4927
  %42 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4928
  %43 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb, align 8, !dbg !4929
  %44 = load float**, float*** %per_keyblock_weights, align 8, !dbg !4930
  call void @BKE_key_evaluate_relative(i32 0, i32 %39, i32 %40, i8* %41, %struct.Key* %42, %struct.KeyBlock* %43, float** %44, i32 0), !dbg !4931
  %45 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4932
  %46 = load float**, float*** %per_keyblock_weights, align 8, !dbg !4933
  call void @BKE_keyblock_free_per_block_weights(%struct.Key* %45, float** %46, %struct.WeightsArrayCache* null), !dbg !4934
  br label %if.end42, !dbg !4935

if.else26:                                        ; preds = %if.else19
  call void @llvm.dbg.declare(metadata float* %ctime_scaled27, metadata !4936, metadata !DIExpression()), !dbg !4938
  %47 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4939
  %ctime28 = getelementptr inbounds %struct.Key, %struct.Key* %47, i32 0, i32 13, !dbg !4940
  %48 = load float, float* %ctime28, align 8, !dbg !4940
  %div29 = fdiv float %48, 1.000000e+02, !dbg !4941
  store float %div29, float* %ctime_scaled27, align 4, !dbg !4938
  %49 = load float, float* %ctime_scaled27, align 4, !dbg !4942
  %50 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4943
  %block30 = getelementptr inbounds %struct.Key, %struct.Key* %50, i32 0, i32 6, !dbg !4944
  %arraydecay31 = getelementptr inbounds [4 x %struct.KeyBlock*], [4 x %struct.KeyBlock*]* %k, i64 0, i64 0, !dbg !4945
  %arraydecay32 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !4946
  %call33 = call i32 @setkeys(float %49, %struct.ListBase* %block30, %struct.KeyBlock** %arraydecay31, float* %arraydecay32, i32 0), !dbg !4947
  store i32 %call33, i32* %flag, align 4, !dbg !4948
  %51 = load i32, i32* %flag, align 4, !dbg !4949
  %cmp34 = icmp eq i32 %51, 0, !dbg !4951
  br i1 %cmp34, label %if.then36, label %if.else39, !dbg !4952

if.then36:                                        ; preds = %if.else26
  %52 = load i32, i32* %tot.addr, align 4, !dbg !4953
  %53 = load i32, i32* %tot.addr, align 4, !dbg !4954
  %54 = load i8*, i8** %out.addr, align 8, !dbg !4955
  %55 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4956
  %56 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb, align 8, !dbg !4957
  %arraydecay37 = getelementptr inbounds [4 x %struct.KeyBlock*], [4 x %struct.KeyBlock*]* %k, i64 0, i64 0, !dbg !4958
  %arraydecay38 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !4959
  call void @do_key(i32 0, i32 %52, i32 %53, i8* %54, %struct.Key* %55, %struct.KeyBlock* %56, %struct.KeyBlock** %arraydecay37, float* %arraydecay38, i32 0), !dbg !4960
  br label %if.end41, !dbg !4960

if.else39:                                        ; preds = %if.else26
  %57 = load i32, i32* %tot.addr, align 4, !dbg !4961
  %58 = load i32, i32* %tot.addr, align 4, !dbg !4962
  %59 = load i8*, i8** %out.addr, align 8, !dbg !4963
  %60 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !4964
  %61 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb, align 8, !dbg !4965
  %arrayidx40 = getelementptr inbounds [4 x %struct.KeyBlock*], [4 x %struct.KeyBlock*]* %k, i64 0, i64 2, !dbg !4966
  %62 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx40, align 16, !dbg !4966
  call void @cp_key(i32 0, i32 %57, i32 %58, i8* %59, %struct.Key* %60, %struct.KeyBlock* %61, %struct.KeyBlock* %62, float* null, i32 0), !dbg !4967
  br label %if.end41

if.end41:                                         ; preds = %if.else39, %if.then36
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then24
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %for.end
  %63 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4968
  %flag44 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %63, i32 0, i32 5, !dbg !4970
  %64 = load i16, i16* %flag44, align 2, !dbg !4970
  %conv45 = sext i16 %64 to i32, !dbg !4968
  %and = and i32 %conv45, 2, !dbg !4971
  %tobool46 = icmp ne i32 %and, 0, !dbg !4971
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !4972

if.then47:                                        ; preds = %if.end43
  %65 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4973
  call void @outside_lattice(%struct.Lattice* %65), !dbg !4974
  br label %if.end48, !dbg !4974

if.end48:                                         ; preds = %if.then47, %if.end43
  ret void, !dbg !4975
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_curve_key(%struct.Scene* %scene, %struct.Object* %ob, %struct.Key* %key, i8* %out, i32 %tot) #0 !dbg !4976 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %key.addr = alloca %struct.Key*, align 8
  %out.addr = alloca i8*, align 8
  %tot.addr = alloca i32, align 4
  %cu = alloca %struct.Curve*, align 8
  %k = alloca [4 x %struct.KeyBlock*], align 16
  %actkb = alloca %struct.KeyBlock*, align 8
  %t = alloca [4 x float], align 16
  %flag = alloca i32, align 4
  %ctime_scaled = alloca float, align 4
  %delta = alloca float, align 4
  %cfra = alloca float, align 4
  %nu = alloca %struct.Nurb*, align 8
  %i = alloca i32, align 4
  %remain = alloca i32, align 4
  %step = alloca i32, align 4
  %a = alloca i32, align 4
  %estep = alloca i32, align 4
  %mode = alloca i32, align 4
  %count = alloca i32, align 4
  %ctime_scaled61 = alloca float, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4977, metadata !DIExpression()), !dbg !4978
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4979, metadata !DIExpression()), !dbg !4980
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !4981, metadata !DIExpression()), !dbg !4982
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !4983, metadata !DIExpression()), !dbg !4984
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !4985, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !4987, metadata !DIExpression()), !dbg !4988
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4989
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !4990
  %1 = load i8*, i8** %data, align 8, !dbg !4990
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !4989
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !4988
  call void @llvm.dbg.declare(metadata [4 x %struct.KeyBlock*]* %k, metadata !4991, metadata !DIExpression()), !dbg !4992
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %actkb, metadata !4993, metadata !DIExpression()), !dbg !4994
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4995
  %call = call %struct.KeyBlock* @BKE_keyblock_from_object(%struct.Object* %3), !dbg !4996
  store %struct.KeyBlock* %call, %struct.KeyBlock** %actkb, align 8, !dbg !4994
  call void @llvm.dbg.declare(metadata [4 x float]* %t, metadata !4997, metadata !DIExpression()), !dbg !4998
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !4999, metadata !DIExpression()), !dbg !5000
  store i32 0, i32* %flag, align 4, !dbg !5000
  %4 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5001
  %slurph = getelementptr inbounds %struct.Key, %struct.Key* %4, i32 0, i32 11, !dbg !5003
  %5 = load i16, i16* %slurph, align 4, !dbg !5003
  %conv = sext i16 %5 to i32, !dbg !5001
  %tobool = icmp ne i32 %conv, 0, !dbg !5001
  br i1 %tobool, label %land.lhs.true, label %if.else53, !dbg !5004

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5005
  %type = getelementptr inbounds %struct.Key, %struct.Key* %6, i32 0, i32 9, !dbg !5006
  %7 = load i16, i16* %type, align 8, !dbg !5006
  %conv1 = sext i16 %7 to i32, !dbg !5005
  %cmp = icmp ne i32 %conv1, 1, !dbg !5007
  br i1 %cmp, label %if.then, label %if.else53, !dbg !5008

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %ctime_scaled, metadata !5009, metadata !DIExpression()), !dbg !5011
  %8 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5012
  %ctime = getelementptr inbounds %struct.Key, %struct.Key* %8, i32 0, i32 13, !dbg !5013
  %9 = load float, float* %ctime, align 8, !dbg !5013
  %div = fdiv float %9, 1.000000e+02, !dbg !5014
  store float %div, float* %ctime_scaled, align 4, !dbg !5011
  call void @llvm.dbg.declare(metadata float* %delta, metadata !5015, metadata !DIExpression()), !dbg !5016
  %10 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5017
  %slurph3 = getelementptr inbounds %struct.Key, %struct.Key* %10, i32 0, i32 11, !dbg !5018
  %11 = load i16, i16* %slurph3, align 4, !dbg !5018
  %conv4 = sitofp i16 %11 to float, !dbg !5019
  %12 = load i32, i32* %tot.addr, align 4, !dbg !5020
  %conv5 = sitofp i32 %12 to float, !dbg !5020
  %div6 = fdiv float %conv4, %conv5, !dbg !5021
  store float %div6, float* %delta, align 4, !dbg !5016
  call void @llvm.dbg.declare(metadata float* %cfra, metadata !5022, metadata !DIExpression()), !dbg !5023
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5024
  %call7 = call float @BKE_scene_frame_get(%struct.Scene* %13), !dbg !5025
  store float %call7, float* %cfra, align 4, !dbg !5023
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !5026, metadata !DIExpression()), !dbg !5027
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5028, metadata !DIExpression()), !dbg !5029
  store i32 0, i32* %i, align 4, !dbg !5029
  call void @llvm.dbg.declare(metadata i32* %remain, metadata !5030, metadata !DIExpression()), !dbg !5031
  store i32 0, i32* %remain, align 4, !dbg !5031
  call void @llvm.dbg.declare(metadata i32* %step, metadata !5032, metadata !DIExpression()), !dbg !5033
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5034, metadata !DIExpression()), !dbg !5035
  %14 = load i32, i32* %tot.addr, align 4, !dbg !5036
  %cmp8 = icmp sgt i32 %14, 100, !dbg !5038
  br i1 %cmp8, label %land.lhs.true10, label %if.else, !dbg !5039

land.lhs.true10:                                  ; preds = %if.then
  %15 = load i32, i32* @slurph_opt, align 4, !dbg !5040
  %tobool11 = icmp ne i32 %15, 0, !dbg !5040
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !5041

if.then12:                                        ; preds = %land.lhs.true10
  %16 = load i32, i32* %tot.addr, align 4, !dbg !5042
  %div13 = sdiv i32 %16, 50, !dbg !5044
  store i32 %div13, i32* %step, align 4, !dbg !5045
  %17 = load i32, i32* %step, align 4, !dbg !5046
  %conv14 = sitofp i32 %17 to float, !dbg !5046
  %18 = load float, float* %delta, align 4, !dbg !5047
  %mul = fmul float %18, %conv14, !dbg !5047
  store float %mul, float* %delta, align 4, !dbg !5047
  br label %if.end, !dbg !5048

if.else:                                          ; preds = %land.lhs.true10, %if.then
  store i32 1, i32* %step, align 4, !dbg !5049
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then12
  %19 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5051
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %19, i32 0, i32 3, !dbg !5053
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb, i32 0, i32 0, !dbg !5054
  %20 = load i8*, i8** %first, align 8, !dbg !5054
  %21 = bitcast i8* %20 to %struct.Nurb*, !dbg !5051
  store %struct.Nurb* %21, %struct.Nurb** %nu, align 8, !dbg !5055
  br label %for.cond, !dbg !5056

for.cond:                                         ; preds = %for.inc, %if.end
  %22 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5057
  %tobool15 = icmp ne %struct.Nurb* %22, null, !dbg !5059
  br i1 %tobool15, label %for.body, label %for.end, !dbg !5059

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %estep, metadata !5060, metadata !DIExpression()), !dbg !5062
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !5063, metadata !DIExpression()), !dbg !5064
  %23 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5065
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %23, i32 0, i32 17, !dbg !5067
  %24 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5067
  %tobool16 = icmp ne %struct.BPoint* %24, null, !dbg !5065
  br i1 %tobool16, label %if.then17, label %if.else19, !dbg !5068

if.then17:                                        ; preds = %for.body
  store i32 1, i32* %mode, align 4, !dbg !5069
  %25 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5071
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %25, i32 0, i32 6, !dbg !5072
  %26 = load i32, i32* %pntsu, align 8, !dbg !5072
  %27 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5073
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %27, i32 0, i32 7, !dbg !5074
  %28 = load i32, i32* %pntsv, align 4, !dbg !5074
  %mul18 = mul nsw i32 %26, %28, !dbg !5075
  store i32 %mul18, i32* %estep, align 4, !dbg !5076
  br label %if.end26, !dbg !5077

if.else19:                                        ; preds = %for.body
  %29 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5078
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %29, i32 0, i32 18, !dbg !5080
  %30 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5080
  %tobool20 = icmp ne %struct.BezTriple* %30, null, !dbg !5078
  br i1 %tobool20, label %if.then21, label %if.else24, !dbg !5081

if.then21:                                        ; preds = %if.else19
  store i32 2, i32* %mode, align 4, !dbg !5082
  %31 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5084
  %pntsu22 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %31, i32 0, i32 6, !dbg !5085
  %32 = load i32, i32* %pntsu22, align 8, !dbg !5085
  %mul23 = mul nsw i32 3, %32, !dbg !5086
  store i32 %mul23, i32* %estep, align 4, !dbg !5087
  br label %if.end25, !dbg !5088

if.else24:                                        ; preds = %if.else19
  store i32 0, i32* %mode, align 4, !dbg !5089
  store i32 0, i32* %estep, align 4, !dbg !5091
  br label %if.end25

if.end25:                                         ; preds = %if.else24, %if.then21
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then17
  store i32 0, i32* %a, align 4, !dbg !5092
  br label %while.cond, !dbg !5093

while.cond:                                       ; preds = %if.end49, %if.end26
  %33 = load i32, i32* %a, align 4, !dbg !5094
  %34 = load i32, i32* %estep, align 4, !dbg !5095
  %cmp27 = icmp slt i32 %33, %34, !dbg !5096
  br i1 %cmp27, label %while.body, label %while.end, !dbg !5093

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5097, metadata !DIExpression()), !dbg !5099
  %35 = load i32, i32* %remain, align 4, !dbg !5100
  %cmp29 = icmp sle i32 %35, 0, !dbg !5102
  br i1 %cmp29, label %if.then31, label %if.end34, !dbg !5103

if.then31:                                        ; preds = %while.body
  %36 = load float, float* %delta, align 4, !dbg !5104
  %37 = load float, float* %cfra, align 4, !dbg !5106
  %add = fadd float %37, %36, !dbg !5106
  store float %add, float* %cfra, align 4, !dbg !5106
  %38 = load float, float* %ctime_scaled, align 4, !dbg !5107
  %39 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5108
  %block = getelementptr inbounds %struct.Key, %struct.Key* %39, i32 0, i32 6, !dbg !5109
  %arraydecay = getelementptr inbounds [4 x %struct.KeyBlock*], [4 x %struct.KeyBlock*]* %k, i64 0, i64 0, !dbg !5110
  %arraydecay32 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !5111
  %call33 = call i32 @setkeys(float %38, %struct.ListBase* %block, %struct.KeyBlock** %arraydecay, float* %arraydecay32, i32 0), !dbg !5112
  store i32 %call33, i32* %flag, align 4, !dbg !5113
  %40 = load i32, i32* %step, align 4, !dbg !5114
  store i32 %40, i32* %remain, align 4, !dbg !5115
  br label %if.end34, !dbg !5116

if.end34:                                         ; preds = %if.then31, %while.body
  %41 = load i32, i32* %remain, align 4, !dbg !5117
  %42 = load i32, i32* %estep, align 4, !dbg !5118
  %call35 = call i32 @min_ii(i32 %41, i32 %42), !dbg !5119
  store i32 %call35, i32* %count, align 4, !dbg !5120
  %43 = load i32, i32* %mode, align 4, !dbg !5121
  %cmp36 = icmp eq i32 %43, 2, !dbg !5123
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !5124

if.then38:                                        ; preds = %if.end34
  %44 = load i32, i32* %count, align 4, !dbg !5125
  %rem = srem i32 %44, 3, !dbg !5127
  %sub = sub nsw i32 3, %rem, !dbg !5128
  %45 = load i32, i32* %count, align 4, !dbg !5129
  %add39 = add nsw i32 %45, %sub, !dbg !5129
  store i32 %add39, i32* %count, align 4, !dbg !5129
  br label %if.end40, !dbg !5130

if.end40:                                         ; preds = %if.then38, %if.end34
  %46 = load i32, i32* %flag, align 4, !dbg !5131
  %cmp41 = icmp eq i32 %46, 0, !dbg !5133
  br i1 %cmp41, label %if.then43, label %if.else47, !dbg !5134

if.then43:                                        ; preds = %if.end40
  %47 = load i32, i32* %i, align 4, !dbg !5135
  %48 = load i32, i32* %i, align 4, !dbg !5136
  %49 = load i32, i32* %count, align 4, !dbg !5137
  %add44 = add nsw i32 %48, %49, !dbg !5138
  %50 = load i32, i32* %tot.addr, align 4, !dbg !5139
  %51 = load i8*, i8** %out.addr, align 8, !dbg !5140
  %52 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5141
  %53 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb, align 8, !dbg !5142
  %arraydecay45 = getelementptr inbounds [4 x %struct.KeyBlock*], [4 x %struct.KeyBlock*]* %k, i64 0, i64 0, !dbg !5143
  %arraydecay46 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !5144
  %54 = load i32, i32* %mode, align 4, !dbg !5145
  call void @do_key(i32 %47, i32 %add44, i32 %50, i8* %51, %struct.Key* %52, %struct.KeyBlock* %53, %struct.KeyBlock** %arraydecay45, float* %arraydecay46, i32 %54), !dbg !5146
  br label %if.end49, !dbg !5146

if.else47:                                        ; preds = %if.end40
  %55 = load i32, i32* %i, align 4, !dbg !5147
  %56 = load i32, i32* %i, align 4, !dbg !5148
  %57 = load i32, i32* %count, align 4, !dbg !5149
  %add48 = add nsw i32 %56, %57, !dbg !5150
  %58 = load i32, i32* %tot.addr, align 4, !dbg !5151
  %59 = load i8*, i8** %out.addr, align 8, !dbg !5152
  %60 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5153
  %61 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb, align 8, !dbg !5154
  %arrayidx = getelementptr inbounds [4 x %struct.KeyBlock*], [4 x %struct.KeyBlock*]* %k, i64 0, i64 2, !dbg !5155
  %62 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx, align 16, !dbg !5155
  %63 = load i32, i32* %mode, align 4, !dbg !5156
  call void @cp_key(i32 %55, i32 %add48, i32 %58, i8* %59, %struct.Key* %60, %struct.KeyBlock* %61, %struct.KeyBlock* %62, float* null, i32 %63), !dbg !5157
  br label %if.end49

if.end49:                                         ; preds = %if.else47, %if.then43
  %64 = load i32, i32* %count, align 4, !dbg !5158
  %65 = load i32, i32* %a, align 4, !dbg !5159
  %add50 = add nsw i32 %65, %64, !dbg !5159
  store i32 %add50, i32* %a, align 4, !dbg !5159
  %66 = load i32, i32* %count, align 4, !dbg !5160
  %67 = load i32, i32* %i, align 4, !dbg !5161
  %add51 = add nsw i32 %67, %66, !dbg !5161
  store i32 %add51, i32* %i, align 4, !dbg !5161
  %68 = load i32, i32* %count, align 4, !dbg !5162
  %69 = load i32, i32* %remain, align 4, !dbg !5163
  %sub52 = sub nsw i32 %69, %68, !dbg !5163
  store i32 %sub52, i32* %remain, align 4, !dbg !5163
  br label %while.cond, !dbg !5093, !llvm.loop !5164

while.end:                                        ; preds = %while.cond
  br label %for.inc, !dbg !5166

for.inc:                                          ; preds = %while.end
  %70 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5167
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %70, i32 0, i32 0, !dbg !5168
  %71 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !5168
  store %struct.Nurb* %71, %struct.Nurb** %nu, align 8, !dbg !5169
  br label %for.cond, !dbg !5170, !llvm.loop !5171

for.end:                                          ; preds = %for.cond
  br label %if.end77, !dbg !5173

if.else53:                                        ; preds = %land.lhs.true, %entry
  %72 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5174
  %type54 = getelementptr inbounds %struct.Key, %struct.Key* %72, i32 0, i32 9, !dbg !5177
  %73 = load i16, i16* %type54, align 8, !dbg !5177
  %conv55 = sext i16 %73 to i32, !dbg !5174
  %cmp56 = icmp eq i32 %conv55, 1, !dbg !5178
  br i1 %cmp56, label %if.then58, label %if.else60, !dbg !5179

if.then58:                                        ; preds = %if.else53
  %74 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5180
  %75 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5182
  %key59 = getelementptr inbounds %struct.Curve, %struct.Curve* %75, i32 0, i32 9, !dbg !5183
  %76 = load %struct.Key*, %struct.Key** %key59, align 8, !dbg !5183
  %77 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb, align 8, !dbg !5184
  %78 = load i8*, i8** %out.addr, align 8, !dbg !5185
  %79 = load i32, i32* %tot.addr, align 4, !dbg !5186
  call void @do_rel_cu_key(%struct.Curve* %74, %struct.Key* %76, %struct.KeyBlock* %77, i8* %78, i32 %79), !dbg !5187
  br label %if.end76, !dbg !5188

if.else60:                                        ; preds = %if.else53
  call void @llvm.dbg.declare(metadata float* %ctime_scaled61, metadata !5189, metadata !DIExpression()), !dbg !5191
  %80 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5192
  %ctime62 = getelementptr inbounds %struct.Key, %struct.Key* %80, i32 0, i32 13, !dbg !5193
  %81 = load float, float* %ctime62, align 8, !dbg !5193
  %div63 = fdiv float %81, 1.000000e+02, !dbg !5194
  store float %div63, float* %ctime_scaled61, align 4, !dbg !5191
  %82 = load float, float* %ctime_scaled61, align 4, !dbg !5195
  %83 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5196
  %block64 = getelementptr inbounds %struct.Key, %struct.Key* %83, i32 0, i32 6, !dbg !5197
  %arraydecay65 = getelementptr inbounds [4 x %struct.KeyBlock*], [4 x %struct.KeyBlock*]* %k, i64 0, i64 0, !dbg !5198
  %arraydecay66 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !5199
  %call67 = call i32 @setkeys(float %82, %struct.ListBase* %block64, %struct.KeyBlock** %arraydecay65, float* %arraydecay66, i32 0), !dbg !5200
  store i32 %call67, i32* %flag, align 4, !dbg !5201
  %84 = load i32, i32* %flag, align 4, !dbg !5202
  %cmp68 = icmp eq i32 %84, 0, !dbg !5204
  br i1 %cmp68, label %if.then70, label %if.else73, !dbg !5205

if.then70:                                        ; preds = %if.else60
  %85 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5206
  %86 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5207
  %87 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb, align 8, !dbg !5208
  %arraydecay71 = getelementptr inbounds [4 x %struct.KeyBlock*], [4 x %struct.KeyBlock*]* %k, i64 0, i64 0, !dbg !5209
  %arraydecay72 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !5210
  %88 = load i8*, i8** %out.addr, align 8, !dbg !5211
  %89 = load i32, i32* %tot.addr, align 4, !dbg !5212
  call void @do_cu_key(%struct.Curve* %85, %struct.Key* %86, %struct.KeyBlock* %87, %struct.KeyBlock** %arraydecay71, float* %arraydecay72, i8* %88, i32 %89), !dbg !5213
  br label %if.end75, !dbg !5213

if.else73:                                        ; preds = %if.else60
  %90 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5214
  %91 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5215
  %92 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb, align 8, !dbg !5216
  %arrayidx74 = getelementptr inbounds [4 x %struct.KeyBlock*], [4 x %struct.KeyBlock*]* %k, i64 0, i64 2, !dbg !5217
  %93 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx74, align 16, !dbg !5217
  %94 = load i32, i32* %tot.addr, align 4, !dbg !5218
  %95 = load i8*, i8** %out.addr, align 8, !dbg !5219
  %96 = load i32, i32* %tot.addr, align 4, !dbg !5220
  call void @cp_cu_key(%struct.Curve* %90, %struct.Key* %91, %struct.KeyBlock* %92, %struct.KeyBlock* %93, i32 0, i32 %94, i8* %95, i32 %96), !dbg !5221
  br label %if.end75

if.end75:                                         ; preds = %if.else73, %if.then70
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then58
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %for.end
  ret void, !dbg !5222
}

; Function Attrs: noinline nounwind uwtable
define dso_local float* @BKE_key_evaluate_object(%struct.Scene* %scene, %struct.Object* %ob, i32* %r_totelem) #0 !dbg !5223 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %r_totelem.addr = alloca i32*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5226, metadata !DIExpression()), !dbg !5227
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5228, metadata !DIExpression()), !dbg !5229
  store i32* %r_totelem, i32** %r_totelem.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_totelem.addr, metadata !5230, metadata !DIExpression()), !dbg !5231
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5232
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5233
  %2 = load i32*, i32** %r_totelem.addr, align 8, !dbg !5234
  %call = call float* @BKE_key_evaluate_object_ex(%struct.Scene* %0, %struct.Object* %1, i32* %2, float* null, i64 0), !dbg !5235
  ret float* %call, !dbg !5236
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.KeyBlock* @BKE_keyblock_add(%struct.Key* %key, i8* %name) #0 !dbg !5237 {
entry:
  %key.addr = alloca %struct.Key*, align 8
  %name.addr = alloca i8*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  %curpos = alloca float, align 4
  %tot = alloca i32, align 4
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !5240, metadata !DIExpression()), !dbg !5241
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5242, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !5244, metadata !DIExpression()), !dbg !5245
  call void @llvm.dbg.declare(metadata float* %curpos, metadata !5246, metadata !DIExpression()), !dbg !5247
  store float 0xBFB99999A0000000, float* %curpos, align 4, !dbg !5247
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !5248, metadata !DIExpression()), !dbg !5249
  %0 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5250
  %block = getelementptr inbounds %struct.Key, %struct.Key* %0, i32 0, i32 6, !dbg !5251
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 1, !dbg !5252
  %1 = load i8*, i8** %last, align 8, !dbg !5252
  %2 = bitcast i8* %1 to %struct.KeyBlock*, !dbg !5250
  store %struct.KeyBlock* %2, %struct.KeyBlock** %kb, align 8, !dbg !5253
  %3 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5254
  %tobool = icmp ne %struct.KeyBlock* %3, null, !dbg !5254
  br i1 %tobool, label %if.then, label %if.end, !dbg !5256

if.then:                                          ; preds = %entry
  %4 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5257
  %pos = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %4, i32 0, i32 2, !dbg !5258
  %5 = load float, float* %pos, align 8, !dbg !5258
  store float %5, float* %curpos, align 4, !dbg !5259
  br label %if.end, !dbg !5260

if.end:                                           ; preds = %if.then, %entry
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5261
  %call = call i8* %6(i64 184, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)), !dbg !5261
  %7 = bitcast i8* %call to %struct.KeyBlock*, !dbg !5261
  store %struct.KeyBlock* %7, %struct.KeyBlock** %kb, align 8, !dbg !5262
  %8 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5263
  %block1 = getelementptr inbounds %struct.Key, %struct.Key* %8, i32 0, i32 6, !dbg !5264
  %9 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5265
  %10 = bitcast %struct.KeyBlock* %9 to i8*, !dbg !5265
  call void @BLI_addtail(%struct.ListBase* %block1, i8* %10), !dbg !5266
  %11 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5267
  %type = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %11, i32 0, i32 4, !dbg !5268
  store i16 1, i16* %type, align 8, !dbg !5269
  %12 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5270
  %block2 = getelementptr inbounds %struct.Key, %struct.Key* %12, i32 0, i32 6, !dbg !5271
  %call3 = call i32 @BLI_countlist(%struct.ListBase* %block2), !dbg !5272
  store i32 %call3, i32* %tot, align 4, !dbg !5273
  %13 = load i8*, i8** %name.addr, align 8, !dbg !5274
  %tobool4 = icmp ne i8* %13, null, !dbg !5274
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !5276

if.then5:                                         ; preds = %if.end
  %14 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5277
  %name6 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %14, i32 0, i32 11, !dbg !5279
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name6, i64 0, i64 0, !dbg !5277
  %15 = load i8*, i8** %name.addr, align 8, !dbg !5280
  %call7 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %15, i64 64), !dbg !5281
  br label %if.end17, !dbg !5282

if.else:                                          ; preds = %if.end
  %16 = load i32, i32* %tot, align 4, !dbg !5283
  %cmp = icmp eq i32 %16, 1, !dbg !5286
  br i1 %cmp, label %if.then8, label %if.else12, !dbg !5287

if.then8:                                         ; preds = %if.else
  %17 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5288
  %name9 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %17, i32 0, i32 11, !dbg !5289
  %arraydecay10 = getelementptr inbounds [64 x i8], [64 x i8]* %name9, i64 0, i64 0, !dbg !5288
  %call11 = call i8* @BLI_strncpy(i8* %arraydecay10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 64), !dbg !5290
  br label %if.end16, !dbg !5290

if.else12:                                        ; preds = %if.else
  %18 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5291
  %name13 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %18, i32 0, i32 11, !dbg !5292
  %arraydecay14 = getelementptr inbounds [64 x i8], [64 x i8]* %name13, i64 0, i64 0, !dbg !5291
  %19 = load i32, i32* %tot, align 4, !dbg !5293
  %sub = sub nsw i32 %19, 1, !dbg !5294
  %call15 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay14, i64 64, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i32 %sub), !dbg !5295
  br label %if.end16

if.end16:                                         ; preds = %if.else12, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  %20 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5296
  %block18 = getelementptr inbounds %struct.Key, %struct.Key* %20, i32 0, i32 6, !dbg !5297
  %21 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5298
  %22 = bitcast %struct.KeyBlock* %21 to i8*, !dbg !5298
  call void @BLI_uniquename(%struct.ListBase* %block18, i8* %22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8 zeroext 46, i32 48, i32 64), !dbg !5299
  %23 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5300
  %uidgen = getelementptr inbounds %struct.Key, %struct.Key* %23, i32 0, i32 14, !dbg !5301
  %24 = load i32, i32* %uidgen, align 4, !dbg !5302
  %inc = add nsw i32 %24, 1, !dbg !5302
  store i32 %inc, i32* %uidgen, align 4, !dbg !5302
  %25 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5303
  %uid = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %25, i32 0, i32 9, !dbg !5304
  store i32 %24, i32* %uid, align 4, !dbg !5305
  %26 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5306
  %totkey = getelementptr inbounds %struct.Key, %struct.Key* %26, i32 0, i32 10, !dbg !5307
  %27 = load i16, i16* %totkey, align 2, !dbg !5308
  %inc19 = add i16 %27, 1, !dbg !5308
  store i16 %inc19, i16* %totkey, align 2, !dbg !5308
  %28 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5309
  %totkey20 = getelementptr inbounds %struct.Key, %struct.Key* %28, i32 0, i32 10, !dbg !5311
  %29 = load i16, i16* %totkey20, align 2, !dbg !5311
  %conv = sext i16 %29 to i32, !dbg !5309
  %cmp21 = icmp eq i32 %conv, 1, !dbg !5312
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !5313

if.then23:                                        ; preds = %if.end17
  %30 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5314
  %31 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5315
  %refkey = getelementptr inbounds %struct.Key, %struct.Key* %31, i32 0, i32 2, !dbg !5316
  store %struct.KeyBlock* %30, %struct.KeyBlock** %refkey, align 8, !dbg !5317
  br label %if.end24, !dbg !5315

if.end24:                                         ; preds = %if.then23, %if.end17
  %32 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5318
  %slidermin = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %32, i32 0, i32 13, !dbg !5319
  store float 0.000000e+00, float* %slidermin, align 8, !dbg !5320
  %33 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5321
  %slidermax = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %33, i32 0, i32 14, !dbg !5322
  store float 1.000000e+00, float* %slidermax, align 4, !dbg !5323
  %34 = load float, float* %curpos, align 4, !dbg !5324
  %add = fadd float %34, 0x3FB99999A0000000, !dbg !5325
  %35 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5326
  %pos25 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %35, i32 0, i32 2, !dbg !5327
  store float %add, float* %pos25, align 8, !dbg !5328
  %36 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5329
  ret %struct.KeyBlock* %36, !dbg !5330
}

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

declare dso_local i32 @BLI_countlist(%struct.ListBase*) #2

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

declare dso_local void @BLI_uniquename(%struct.ListBase*, i8*, i8*, i8 zeroext, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.KeyBlock* @BKE_keyblock_add_ctime(%struct.Key* %key, i8* %name, i8 zeroext %do_force) #0 !dbg !5331 {
entry:
  %retval = alloca %struct.KeyBlock*, align 8
  %key.addr = alloca %struct.Key*, align 8
  %name.addr = alloca i8*, align 8
  %do_force.addr = alloca i8, align 1
  %kb = alloca %struct.KeyBlock*, align 8
  %cpos = alloca float, align 4
  %it_kb = alloca %struct.KeyBlock*, align 8
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !5335, metadata !DIExpression()), !dbg !5336
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5337, metadata !DIExpression()), !dbg !5338
  store i8 %do_force, i8* %do_force.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_force.addr, metadata !5339, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !5341, metadata !DIExpression()), !dbg !5342
  %0 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5343
  %1 = load i8*, i8** %name.addr, align 8, !dbg !5344
  %call = call %struct.KeyBlock* @BKE_keyblock_add(%struct.Key* %0, i8* %1), !dbg !5345
  store %struct.KeyBlock* %call, %struct.KeyBlock** %kb, align 8, !dbg !5342
  call void @llvm.dbg.declare(metadata float* %cpos, metadata !5346, metadata !DIExpression()), !dbg !5347
  %2 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5348
  %ctime = getelementptr inbounds %struct.Key, %struct.Key* %2, i32 0, i32 13, !dbg !5349
  %3 = load float, float* %ctime, align 8, !dbg !5349
  %div = fdiv float %3, 1.000000e+02, !dbg !5350
  store float %div, float* %cpos, align 4, !dbg !5347
  %4 = load i8, i8* %do_force.addr, align 1, !dbg !5351
  %tobool = icmp ne i8 %4, 0, !dbg !5351
  br i1 %tobool, label %if.end6, label %land.lhs.true, !dbg !5353

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5354
  %type = getelementptr inbounds %struct.Key, %struct.Key* %5, i32 0, i32 9, !dbg !5355
  %6 = load i16, i16* %type, align 8, !dbg !5355
  %conv = sext i16 %6 to i32, !dbg !5354
  %cmp = icmp ne i32 %conv, 1, !dbg !5356
  br i1 %cmp, label %if.then, label %if.end6, !dbg !5357

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %it_kb, metadata !5358, metadata !DIExpression()), !dbg !5360
  %7 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5361
  %block = getelementptr inbounds %struct.Key, %struct.Key* %7, i32 0, i32 6, !dbg !5363
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 0, !dbg !5364
  %8 = load i8*, i8** %first, align 8, !dbg !5364
  %9 = bitcast i8* %8 to %struct.KeyBlock*, !dbg !5361
  store %struct.KeyBlock* %9, %struct.KeyBlock** %it_kb, align 8, !dbg !5365
  br label %for.cond, !dbg !5366

for.cond:                                         ; preds = %for.inc, %if.then
  %10 = load %struct.KeyBlock*, %struct.KeyBlock** %it_kb, align 8, !dbg !5367
  %tobool2 = icmp ne %struct.KeyBlock* %10, null, !dbg !5369
  br i1 %tobool2, label %for.body, label %for.end, !dbg !5369

for.body:                                         ; preds = %for.cond
  %11 = load %struct.KeyBlock*, %struct.KeyBlock** %it_kb, align 8, !dbg !5370
  %pos = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %11, i32 0, i32 2, !dbg !5373
  %12 = load float, float* %pos, align 8, !dbg !5373
  %13 = load float, float* %cpos, align 4, !dbg !5374
  %cmp3 = fcmp oeq float %12, %13, !dbg !5375
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !5376

if.then5:                                         ; preds = %for.body
  %14 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5377
  store %struct.KeyBlock* %14, %struct.KeyBlock** %retval, align 8, !dbg !5379
  br label %return, !dbg !5379

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5380

for.inc:                                          ; preds = %if.end
  %15 = load %struct.KeyBlock*, %struct.KeyBlock** %it_kb, align 8, !dbg !5381
  %next = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %15, i32 0, i32 0, !dbg !5382
  %16 = load %struct.KeyBlock*, %struct.KeyBlock** %next, align 8, !dbg !5382
  store %struct.KeyBlock* %16, %struct.KeyBlock** %it_kb, align 8, !dbg !5383
  br label %for.cond, !dbg !5384, !llvm.loop !5385

for.end:                                          ; preds = %for.cond
  br label %if.end6, !dbg !5387

if.end6:                                          ; preds = %for.end, %land.lhs.true, %entry
  %17 = load i8, i8* %do_force.addr, align 1, !dbg !5388
  %conv7 = zext i8 %17 to i32, !dbg !5388
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !5388
  br i1 %tobool8, label %if.then13, label %lor.lhs.false, !dbg !5390

lor.lhs.false:                                    ; preds = %if.end6
  %18 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5391
  %type9 = getelementptr inbounds %struct.Key, %struct.Key* %18, i32 0, i32 9, !dbg !5392
  %19 = load i16, i16* %type9, align 8, !dbg !5392
  %conv10 = sext i16 %19 to i32, !dbg !5391
  %cmp11 = icmp ne i32 %conv10, 1, !dbg !5393
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !5394

if.then13:                                        ; preds = %lor.lhs.false, %if.end6
  %20 = load float, float* %cpos, align 4, !dbg !5395
  %21 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5397
  %pos14 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %21, i32 0, i32 2, !dbg !5398
  store float %20, float* %pos14, align 8, !dbg !5399
  %22 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5400
  call void @BKE_key_sort(%struct.Key* %22), !dbg !5401
  br label %if.end15, !dbg !5402

if.end15:                                         ; preds = %if.then13, %lor.lhs.false
  %23 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5403
  store %struct.KeyBlock* %23, %struct.KeyBlock** %retval, align 8, !dbg !5404
  br label %return, !dbg !5404

return:                                           ; preds = %if.end15, %if.then5
  %24 = load %struct.KeyBlock*, %struct.KeyBlock** %retval, align 8, !dbg !5405
  ret %struct.KeyBlock* %24, !dbg !5405
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.KeyBlock* @BKE_keyblock_from_object_reference(%struct.Object* %ob) #0 !dbg !5406 {
entry:
  %retval = alloca %struct.KeyBlock*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %key = alloca %struct.Key*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5407, metadata !DIExpression()), !dbg !5408
  call void @llvm.dbg.declare(metadata %struct.Key** %key, metadata !5409, metadata !DIExpression()), !dbg !5410
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5411
  %call = call %struct.Key* @BKE_key_from_object(%struct.Object* %0), !dbg !5412
  store %struct.Key* %call, %struct.Key** %key, align 8, !dbg !5410
  %1 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !5413
  %tobool = icmp ne %struct.Key* %1, null, !dbg !5413
  br i1 %tobool, label %if.then, label %if.end, !dbg !5415

if.then:                                          ; preds = %entry
  %2 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !5416
  %refkey = getelementptr inbounds %struct.Key, %struct.Key* %2, i32 0, i32 2, !dbg !5417
  %3 = load %struct.KeyBlock*, %struct.KeyBlock** %refkey, align 8, !dbg !5417
  store %struct.KeyBlock* %3, %struct.KeyBlock** %retval, align 8, !dbg !5418
  br label %return, !dbg !5418

if.end:                                           ; preds = %entry
  store %struct.KeyBlock* null, %struct.KeyBlock** %retval, align 8, !dbg !5419
  br label %return, !dbg !5419

return:                                           ; preds = %if.end, %if.then
  %4 = load %struct.KeyBlock*, %struct.KeyBlock** %retval, align 8, !dbg !5420
  ret %struct.KeyBlock* %4, !dbg !5420
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.KeyBlock* @BKE_keyblock_from_key(%struct.Key* %key, i32 %index) #0 !dbg !5421 {
entry:
  %retval = alloca %struct.KeyBlock*, align 8
  %key.addr = alloca %struct.Key*, align 8
  %index.addr = alloca i32, align 4
  %kb = alloca %struct.KeyBlock*, align 8
  %i = alloca i32, align 4
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !5424, metadata !DIExpression()), !dbg !5425
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5426, metadata !DIExpression()), !dbg !5427
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !5428, metadata !DIExpression()), !dbg !5429
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5430, metadata !DIExpression()), !dbg !5431
  %0 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5432
  %tobool = icmp ne %struct.Key* %0, null, !dbg !5432
  br i1 %tobool, label %if.then, label %if.end5, !dbg !5434

if.then:                                          ; preds = %entry
  %1 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5435
  %block = getelementptr inbounds %struct.Key, %struct.Key* %1, i32 0, i32 6, !dbg !5437
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 0, !dbg !5438
  %2 = load i8*, i8** %first, align 8, !dbg !5438
  %3 = bitcast i8* %2 to %struct.KeyBlock*, !dbg !5435
  store %struct.KeyBlock* %3, %struct.KeyBlock** %kb, align 8, !dbg !5439
  store i32 1, i32* %i, align 4, !dbg !5440
  br label %for.cond, !dbg !5442

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i32, i32* %i, align 4, !dbg !5443
  %5 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5445
  %totkey = getelementptr inbounds %struct.Key, %struct.Key* %5, i32 0, i32 10, !dbg !5446
  %6 = load i16, i16* %totkey, align 2, !dbg !5446
  %conv = sext i16 %6 to i32, !dbg !5445
  %cmp = icmp slt i32 %4, %conv, !dbg !5447
  br i1 %cmp, label %for.body, label %for.end, !dbg !5448

for.body:                                         ; preds = %for.cond
  %7 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5449
  %next = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %7, i32 0, i32 0, !dbg !5451
  %8 = load %struct.KeyBlock*, %struct.KeyBlock** %next, align 8, !dbg !5451
  store %struct.KeyBlock* %8, %struct.KeyBlock** %kb, align 8, !dbg !5452
  %9 = load i32, i32* %index.addr, align 4, !dbg !5453
  %10 = load i32, i32* %i, align 4, !dbg !5455
  %cmp2 = icmp eq i32 %9, %10, !dbg !5456
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !5457

if.then4:                                         ; preds = %for.body
  %11 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5458
  store %struct.KeyBlock* %11, %struct.KeyBlock** %retval, align 8, !dbg !5459
  br label %return, !dbg !5459

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5460

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %i, align 4, !dbg !5461
  %inc = add nsw i32 %12, 1, !dbg !5461
  store i32 %inc, i32* %i, align 4, !dbg !5461
  br label %for.cond, !dbg !5462, !llvm.loop !5463

for.end:                                          ; preds = %for.cond
  br label %if.end5, !dbg !5465

if.end5:                                          ; preds = %for.end, %entry
  store %struct.KeyBlock* null, %struct.KeyBlock** %retval, align 8, !dbg !5466
  br label %return, !dbg !5466

return:                                           ; preds = %if.end5, %if.then4
  %13 = load %struct.KeyBlock*, %struct.KeyBlock** %retval, align 8, !dbg !5467
  ret %struct.KeyBlock* %13, !dbg !5467
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.KeyBlock* @BKE_keyblock_find_name(%struct.Key* %key, i8* %name) #0 !dbg !5468 {
entry:
  %key.addr = alloca %struct.Key*, align 8
  %name.addr = alloca i8*, align 8
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !5469, metadata !DIExpression()), !dbg !5470
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5471, metadata !DIExpression()), !dbg !5472
  %0 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5473
  %block = getelementptr inbounds %struct.Key, %struct.Key* %0, i32 0, i32 6, !dbg !5474
  %1 = load i8*, i8** %name.addr, align 8, !dbg !5475
  %call = call i8* @BLI_findstring(%struct.ListBase* %block, i8* %1, i32 48), !dbg !5476
  %2 = bitcast i8* %call to %struct.KeyBlock*, !dbg !5476
  ret %struct.KeyBlock* %2, !dbg !5477
}

declare dso_local i8* @BLI_findstring(%struct.ListBase*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_keyblock_copy_settings(%struct.KeyBlock* %kb_dst, %struct.KeyBlock* %kb_src) #0 !dbg !5478 {
entry:
  %kb_dst.addr = alloca %struct.KeyBlock*, align 8
  %kb_src.addr = alloca %struct.KeyBlock*, align 8
  store %struct.KeyBlock* %kb_dst, %struct.KeyBlock** %kb_dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb_dst.addr, metadata !5483, metadata !DIExpression()), !dbg !5484
  store %struct.KeyBlock* %kb_src, %struct.KeyBlock** %kb_src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb_src.addr, metadata !5485, metadata !DIExpression()), !dbg !5486
  %0 = load %struct.KeyBlock*, %struct.KeyBlock** %kb_src.addr, align 8, !dbg !5487
  %pos = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %0, i32 0, i32 2, !dbg !5488
  %1 = load float, float* %pos, align 8, !dbg !5488
  %2 = load %struct.KeyBlock*, %struct.KeyBlock** %kb_dst.addr, align 8, !dbg !5489
  %pos1 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %2, i32 0, i32 2, !dbg !5490
  store float %1, float* %pos1, align 8, !dbg !5491
  %3 = load %struct.KeyBlock*, %struct.KeyBlock** %kb_src.addr, align 8, !dbg !5492
  %curval = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %3, i32 0, i32 3, !dbg !5493
  %4 = load float, float* %curval, align 4, !dbg !5493
  %5 = load %struct.KeyBlock*, %struct.KeyBlock** %kb_dst.addr, align 8, !dbg !5494
  %curval2 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %5, i32 0, i32 3, !dbg !5495
  store float %4, float* %curval2, align 4, !dbg !5496
  %6 = load %struct.KeyBlock*, %struct.KeyBlock** %kb_src.addr, align 8, !dbg !5497
  %type = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %6, i32 0, i32 4, !dbg !5498
  %7 = load i16, i16* %type, align 8, !dbg !5498
  %8 = load %struct.KeyBlock*, %struct.KeyBlock** %kb_dst.addr, align 8, !dbg !5499
  %type3 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %8, i32 0, i32 4, !dbg !5500
  store i16 %7, i16* %type3, align 8, !dbg !5501
  %9 = load %struct.KeyBlock*, %struct.KeyBlock** %kb_src.addr, align 8, !dbg !5502
  %relative = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %9, i32 0, i32 6, !dbg !5503
  %10 = load i16, i16* %relative, align 4, !dbg !5503
  %11 = load %struct.KeyBlock*, %struct.KeyBlock** %kb_dst.addr, align 8, !dbg !5504
  %relative4 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %11, i32 0, i32 6, !dbg !5505
  store i16 %10, i16* %relative4, align 4, !dbg !5506
  %12 = load %struct.KeyBlock*, %struct.KeyBlock** %kb_dst.addr, align 8, !dbg !5507
  %vgroup = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %12, i32 0, i32 12, !dbg !5508
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %vgroup, i64 0, i64 0, !dbg !5507
  %13 = load %struct.KeyBlock*, %struct.KeyBlock** %kb_src.addr, align 8, !dbg !5509
  %vgroup5 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %13, i32 0, i32 12, !dbg !5510
  %arraydecay6 = getelementptr inbounds [64 x i8], [64 x i8]* %vgroup5, i64 0, i64 0, !dbg !5509
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay6, i64 64), !dbg !5511
  %14 = load %struct.KeyBlock*, %struct.KeyBlock** %kb_src.addr, align 8, !dbg !5512
  %slidermin = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %14, i32 0, i32 13, !dbg !5513
  %15 = load float, float* %slidermin, align 8, !dbg !5513
  %16 = load %struct.KeyBlock*, %struct.KeyBlock** %kb_dst.addr, align 8, !dbg !5514
  %slidermin7 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %16, i32 0, i32 13, !dbg !5515
  store float %15, float* %slidermin7, align 8, !dbg !5516
  %17 = load %struct.KeyBlock*, %struct.KeyBlock** %kb_src.addr, align 8, !dbg !5517
  %slidermax = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %17, i32 0, i32 14, !dbg !5518
  %18 = load float, float* %slidermax, align 4, !dbg !5518
  %19 = load %struct.KeyBlock*, %struct.KeyBlock** %kb_dst.addr, align 8, !dbg !5519
  %slidermax8 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %19, i32 0, i32 14, !dbg !5520
  store float %18, float* %slidermax8, align 4, !dbg !5521
  ret void, !dbg !5522
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BKE_keyblock_curval_rnapath_get(%struct.Key* %key, %struct.KeyBlock* %kb) #0 !dbg !5523 {
entry:
  %retval = alloca i8*, align 8
  %key.addr = alloca %struct.Key*, align 8
  %kb.addr = alloca %struct.KeyBlock*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !5526, metadata !DIExpression()), !dbg !5527
  store %struct.KeyBlock* %kb, %struct.KeyBlock** %kb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb.addr, metadata !5528, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !5530, metadata !DIExpression()), !dbg !5543
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !5544, metadata !DIExpression()), !dbg !5549
  %0 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5550
  %cmp = icmp eq %struct.Key* null, %0, !dbg !5550
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5550

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5550
  %cmp1 = icmp eq %struct.KeyBlock* null, %1, !dbg !5550
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5552

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* null, i8** %retval, align 8, !dbg !5553
  br label %return, !dbg !5553

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !5554
  %id = getelementptr inbounds %struct.Key, %struct.Key* %2, i32 0, i32 0, !dbg !5555
  %3 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5556
  %4 = bitcast %struct.KeyBlock* %3 to i8*, !dbg !5556
  call void @RNA_pointer_create(%struct.ID* %id, %struct.StructRNA* @RNA_ShapeKey, i8* %4, %struct.PointerRNA* %ptr), !dbg !5557
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %ptr, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)), !dbg !5558
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !5559
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5560
  %call2 = call i8* @RNA_path_from_ID_to_property(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %5), !dbg !5561
  store i8* %call2, i8** %retval, align 8, !dbg !5562
  br label %return, !dbg !5562

return:                                           ; preds = %if.end, %if.then
  %6 = load i8*, i8** %retval, align 8, !dbg !5563
  ret i8* %6, !dbg !5563
}

declare dso_local void @RNA_pointer_create(%struct.ID*, %struct.StructRNA*, i8*, %struct.PointerRNA*) #2

declare dso_local %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA*, i8*) #2

declare dso_local i8* @RNA_path_from_ID_to_property(%struct.PointerRNA*, %struct.PropertyRNA*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_key_convert_from_lattice(%struct.Lattice* %lt, %struct.KeyBlock* %kb) #0 !dbg !5564 {
entry:
  %lt.addr = alloca %struct.Lattice*, align 8
  %kb.addr = alloca %struct.KeyBlock*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %fp = alloca float*, align 8
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  store %struct.Lattice* %lt, %struct.Lattice** %lt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt.addr, metadata !5567, metadata !DIExpression()), !dbg !5568
  store %struct.KeyBlock* %kb, %struct.KeyBlock** %kb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb.addr, metadata !5569, metadata !DIExpression()), !dbg !5570
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !5571, metadata !DIExpression()), !dbg !5572
  call void @llvm.dbg.declare(metadata float** %fp, metadata !5573, metadata !DIExpression()), !dbg !5574
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5575, metadata !DIExpression()), !dbg !5576
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !5577, metadata !DIExpression()), !dbg !5578
  %0 = load %struct.Lattice*, %struct.Lattice** %lt.addr, align 8, !dbg !5579
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %0, i32 0, i32 2, !dbg !5580
  %1 = load i16, i16* %pntsu, align 8, !dbg !5580
  %conv = sext i16 %1 to i32, !dbg !5579
  %2 = load %struct.Lattice*, %struct.Lattice** %lt.addr, align 8, !dbg !5581
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %2, i32 0, i32 3, !dbg !5582
  %3 = load i16, i16* %pntsv, align 2, !dbg !5582
  %conv1 = sext i16 %3 to i32, !dbg !5581
  %mul = mul nsw i32 %conv, %conv1, !dbg !5583
  %4 = load %struct.Lattice*, %struct.Lattice** %lt.addr, align 8, !dbg !5584
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %4, i32 0, i32 4, !dbg !5585
  %5 = load i16, i16* %pntsw, align 4, !dbg !5585
  %conv2 = sext i16 %5 to i32, !dbg !5584
  %mul3 = mul nsw i32 %mul, %conv2, !dbg !5586
  store i32 %mul3, i32* %tot, align 4, !dbg !5587
  %6 = load i32, i32* %tot, align 4, !dbg !5588
  %cmp = icmp eq i32 %6, 0, !dbg !5590
  br i1 %cmp, label %if.then, label %if.end, !dbg !5591

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !5592

if.end:                                           ; preds = %entry
  %7 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5593
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %7, i32 0, i32 10, !dbg !5595
  %8 = load i8*, i8** %data, align 8, !dbg !5595
  %tobool = icmp ne i8* %8, null, !dbg !5593
  br i1 %tobool, label %if.then5, label %if.end7, !dbg !5596

if.then5:                                         ; preds = %if.end
  %9 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5597
  %10 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5598
  %data6 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %10, i32 0, i32 10, !dbg !5599
  %11 = load i8*, i8** %data6, align 8, !dbg !5599
  call void %9(i8* %11), !dbg !5597
  br label %if.end7, !dbg !5597

if.end7:                                          ; preds = %if.then5, %if.end
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5600
  %13 = load %struct.Lattice*, %struct.Lattice** %lt.addr, align 8, !dbg !5601
  %key = getelementptr inbounds %struct.Lattice, %struct.Lattice* %13, i32 0, i32 23, !dbg !5602
  %14 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !5602
  %elemsize = getelementptr inbounds %struct.Key, %struct.Key* %14, i32 0, i32 4, !dbg !5603
  %15 = load i32, i32* %elemsize, align 8, !dbg !5603
  %16 = load i32, i32* %tot, align 4, !dbg !5604
  %mul8 = mul nsw i32 %15, %16, !dbg !5605
  %conv9 = sext i32 %mul8 to i64, !dbg !5601
  %call = call i8* %12(i64 %conv9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0)), !dbg !5600
  %17 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5606
  %data10 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %17, i32 0, i32 10, !dbg !5607
  store i8* %call, i8** %data10, align 8, !dbg !5608
  %18 = load i32, i32* %tot, align 4, !dbg !5609
  %19 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5610
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %19, i32 0, i32 8, !dbg !5611
  store i32 %18, i32* %totelem, align 8, !dbg !5612
  %20 = load %struct.Lattice*, %struct.Lattice** %lt.addr, align 8, !dbg !5613
  %def = getelementptr inbounds %struct.Lattice, %struct.Lattice* %20, i32 0, i32 21, !dbg !5614
  %21 = load %struct.BPoint*, %struct.BPoint** %def, align 8, !dbg !5614
  store %struct.BPoint* %21, %struct.BPoint** %bp, align 8, !dbg !5615
  %22 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5616
  %data11 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %22, i32 0, i32 10, !dbg !5617
  %23 = load i8*, i8** %data11, align 8, !dbg !5617
  %24 = bitcast i8* %23 to float*, !dbg !5616
  store float* %24, float** %fp, align 8, !dbg !5618
  store i32 0, i32* %a, align 4, !dbg !5619
  br label %for.cond, !dbg !5621

for.cond:                                         ; preds = %for.inc, %if.end7
  %25 = load i32, i32* %a, align 4, !dbg !5622
  %26 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5624
  %totelem12 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %26, i32 0, i32 8, !dbg !5625
  %27 = load i32, i32* %totelem12, align 8, !dbg !5625
  %cmp13 = icmp slt i32 %25, %27, !dbg !5626
  br i1 %cmp13, label %for.body, label %for.end, !dbg !5627

for.body:                                         ; preds = %for.cond
  %28 = load float*, float** %fp, align 8, !dbg !5628
  %29 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5630
  %vec = getelementptr inbounds %struct.BPoint, %struct.BPoint* %29, i32 0, i32 0, !dbg !5631
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !5630
  call void @copy_v3_v3(float* %28, float* %arraydecay), !dbg !5632
  br label %for.inc, !dbg !5633

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %a, align 4, !dbg !5634
  %inc = add nsw i32 %30, 1, !dbg !5634
  store i32 %inc, i32* %a, align 4, !dbg !5634
  %31 = load float*, float** %fp, align 8, !dbg !5635
  %add.ptr = getelementptr inbounds float, float* %31, i64 3, !dbg !5635
  store float* %add.ptr, float** %fp, align 8, !dbg !5635
  %32 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5636
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %32, i32 1, !dbg !5636
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !5636
  br label %for.cond, !dbg !5637, !llvm.loop !5638

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !5640
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !5641 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5646, metadata !DIExpression()), !dbg !5647
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5648, metadata !DIExpression()), !dbg !5649
  %0 = load float*, float** %a.addr, align 8, !dbg !5650
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5650
  %1 = load float, float* %arrayidx, align 4, !dbg !5650
  %2 = load float*, float** %r.addr, align 8, !dbg !5651
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5651
  store float %1, float* %arrayidx1, align 4, !dbg !5652
  %3 = load float*, float** %a.addr, align 8, !dbg !5653
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !5653
  %4 = load float, float* %arrayidx2, align 4, !dbg !5653
  %5 = load float*, float** %r.addr, align 8, !dbg !5654
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5654
  store float %4, float* %arrayidx3, align 4, !dbg !5655
  %6 = load float*, float** %a.addr, align 8, !dbg !5656
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !5656
  %7 = load float, float* %arrayidx4, align 4, !dbg !5656
  %8 = load float*, float** %r.addr, align 8, !dbg !5657
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5657
  store float %7, float* %arrayidx5, align 4, !dbg !5658
  ret void, !dbg !5659
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_key_convert_to_lattice(%struct.KeyBlock* %kb, %struct.Lattice* %lt) #0 !dbg !5660 {
entry:
  %kb.addr = alloca %struct.KeyBlock*, align 8
  %lt.addr = alloca %struct.Lattice*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %fp = alloca float*, align 8
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  store %struct.KeyBlock* %kb, %struct.KeyBlock** %kb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb.addr, metadata !5663, metadata !DIExpression()), !dbg !5664
  store %struct.Lattice* %lt, %struct.Lattice** %lt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt.addr, metadata !5665, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !5667, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.declare(metadata float** %fp, metadata !5669, metadata !DIExpression()), !dbg !5670
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5671, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !5673, metadata !DIExpression()), !dbg !5674
  %0 = load %struct.Lattice*, %struct.Lattice** %lt.addr, align 8, !dbg !5675
  %def = getelementptr inbounds %struct.Lattice, %struct.Lattice* %0, i32 0, i32 21, !dbg !5676
  %1 = load %struct.BPoint*, %struct.BPoint** %def, align 8, !dbg !5676
  store %struct.BPoint* %1, %struct.BPoint** %bp, align 8, !dbg !5677
  %2 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5678
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %2, i32 0, i32 10, !dbg !5679
  %3 = load i8*, i8** %data, align 8, !dbg !5679
  %4 = bitcast i8* %3 to float*, !dbg !5678
  store float* %4, float** %fp, align 8, !dbg !5680
  %5 = load %struct.Lattice*, %struct.Lattice** %lt.addr, align 8, !dbg !5681
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %5, i32 0, i32 2, !dbg !5682
  %6 = load i16, i16* %pntsu, align 8, !dbg !5682
  %conv = sext i16 %6 to i32, !dbg !5681
  %7 = load %struct.Lattice*, %struct.Lattice** %lt.addr, align 8, !dbg !5683
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %7, i32 0, i32 3, !dbg !5684
  %8 = load i16, i16* %pntsv, align 2, !dbg !5684
  %conv1 = sext i16 %8 to i32, !dbg !5683
  %mul = mul nsw i32 %conv, %conv1, !dbg !5685
  %9 = load %struct.Lattice*, %struct.Lattice** %lt.addr, align 8, !dbg !5686
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %9, i32 0, i32 4, !dbg !5687
  %10 = load i16, i16* %pntsw, align 4, !dbg !5687
  %conv2 = sext i16 %10 to i32, !dbg !5686
  %mul3 = mul nsw i32 %mul, %conv2, !dbg !5688
  store i32 %mul3, i32* %tot, align 4, !dbg !5689
  %11 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5690
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %11, i32 0, i32 8, !dbg !5691
  %12 = load i32, i32* %totelem, align 8, !dbg !5691
  %13 = load i32, i32* %tot, align 4, !dbg !5692
  %call = call i32 @min_ii(i32 %12, i32 %13), !dbg !5693
  store i32 %call, i32* %tot, align 4, !dbg !5694
  store i32 0, i32* %a, align 4, !dbg !5695
  br label %for.cond, !dbg !5697

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32, i32* %a, align 4, !dbg !5698
  %15 = load i32, i32* %tot, align 4, !dbg !5700
  %cmp = icmp slt i32 %14, %15, !dbg !5701
  br i1 %cmp, label %for.body, label %for.end, !dbg !5702

for.body:                                         ; preds = %for.cond
  %16 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5703
  %vec = getelementptr inbounds %struct.BPoint, %struct.BPoint* %16, i32 0, i32 0, !dbg !5705
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !5703
  %17 = load float*, float** %fp, align 8, !dbg !5706
  call void @copy_v3_v3(float* %arraydecay, float* %17), !dbg !5707
  br label %for.inc, !dbg !5708

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %a, align 4, !dbg !5709
  %inc = add nsw i32 %18, 1, !dbg !5709
  store i32 %inc, i32* %a, align 4, !dbg !5709
  %19 = load float*, float** %fp, align 8, !dbg !5710
  %add.ptr = getelementptr inbounds float, float* %19, i64 3, !dbg !5710
  store float* %add.ptr, float** %fp, align 8, !dbg !5710
  %20 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5711
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %20, i32 1, !dbg !5711
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !5711
  br label %for.cond, !dbg !5712, !llvm.loop !5713

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5715
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @min_ii(i32 %a, i32 %b) #0 !dbg !5716 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !5720, metadata !DIExpression()), !dbg !5721
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !5722, metadata !DIExpression()), !dbg !5723
  %0 = load i32, i32* %a.addr, align 4, !dbg !5724
  %1 = load i32, i32* %b.addr, align 4, !dbg !5725
  %cmp = icmp slt i32 %0, %1, !dbg !5726
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5727

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !5728
  br label %cond.end, !dbg !5727

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !5729
  br label %cond.end, !dbg !5727

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !5727
  ret i32 %cond, !dbg !5730
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_key_convert_from_curve(%struct.Curve* %cu, %struct.KeyBlock* %kb, %struct.ListBase* %nurb) #0 !dbg !5731 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %kb.addr = alloca %struct.KeyBlock*, align 8
  %nurb.addr = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %fp = alloca float*, align 8
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !5734, metadata !DIExpression()), !dbg !5735
  store %struct.KeyBlock* %kb, %struct.KeyBlock** %kb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb.addr, metadata !5736, metadata !DIExpression()), !dbg !5737
  store %struct.ListBase* %nurb, %struct.ListBase** %nurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurb.addr, metadata !5738, metadata !DIExpression()), !dbg !5739
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !5740, metadata !DIExpression()), !dbg !5741
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !5742, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !5744, metadata !DIExpression()), !dbg !5745
  call void @llvm.dbg.declare(metadata float** %fp, metadata !5746, metadata !DIExpression()), !dbg !5747
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5748, metadata !DIExpression()), !dbg !5749
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !5750, metadata !DIExpression()), !dbg !5751
  %0 = load %struct.ListBase*, %struct.ListBase** %nurb.addr, align 8, !dbg !5752
  %call = call i32 @BKE_nurbList_verts_count(%struct.ListBase* %0), !dbg !5753
  store i32 %call, i32* %tot, align 4, !dbg !5754
  %1 = load i32, i32* %tot, align 4, !dbg !5755
  %cmp = icmp eq i32 %1, 0, !dbg !5757
  br i1 %cmp, label %if.then, label %if.end, !dbg !5758

if.then:                                          ; preds = %entry
  br label %while.end40, !dbg !5759

if.end:                                           ; preds = %entry
  %2 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5760
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %2, i32 0, i32 10, !dbg !5762
  %3 = load i8*, i8** %data, align 8, !dbg !5762
  %tobool = icmp ne i8* %3, null, !dbg !5760
  br i1 %tobool, label %if.then1, label %if.end3, !dbg !5763

if.then1:                                         ; preds = %if.end
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5764
  %5 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5765
  %data2 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %5, i32 0, i32 10, !dbg !5766
  %6 = load i8*, i8** %data2, align 8, !dbg !5766
  call void %4(i8* %6), !dbg !5764
  br label %if.end3, !dbg !5764

if.end3:                                          ; preds = %if.then1, %if.end
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5767
  %8 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !5768
  %key = getelementptr inbounds %struct.Curve, %struct.Curve* %8, i32 0, i32 9, !dbg !5769
  %9 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !5769
  %elemsize = getelementptr inbounds %struct.Key, %struct.Key* %9, i32 0, i32 4, !dbg !5770
  %10 = load i32, i32* %elemsize, align 8, !dbg !5770
  %11 = load i32, i32* %tot, align 4, !dbg !5771
  %mul = mul nsw i32 %10, %11, !dbg !5772
  %conv = sext i32 %mul to i64, !dbg !5768
  %call4 = call i8* %7(i64 %conv, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0)), !dbg !5767
  %12 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5773
  %data5 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %12, i32 0, i32 10, !dbg !5774
  store i8* %call4, i8** %data5, align 8, !dbg !5775
  %13 = load i32, i32* %tot, align 4, !dbg !5776
  %14 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5777
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %14, i32 0, i32 8, !dbg !5778
  store i32 %13, i32* %totelem, align 8, !dbg !5779
  %15 = load %struct.ListBase*, %struct.ListBase** %nurb.addr, align 8, !dbg !5780
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %15, i32 0, i32 0, !dbg !5781
  %16 = load i8*, i8** %first, align 8, !dbg !5781
  %17 = bitcast i8* %16 to %struct.Nurb*, !dbg !5780
  store %struct.Nurb* %17, %struct.Nurb** %nu, align 8, !dbg !5782
  %18 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5783
  %data6 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %18, i32 0, i32 10, !dbg !5784
  %19 = load i8*, i8** %data6, align 8, !dbg !5784
  %20 = bitcast i8* %19 to float*, !dbg !5783
  store float* %20, float** %fp, align 8, !dbg !5785
  br label %while.cond, !dbg !5786

while.cond:                                       ; preds = %if.end39, %if.end3
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5787
  %tobool7 = icmp ne %struct.Nurb* %21, null, !dbg !5786
  br i1 %tobool7, label %while.body, label %while.end40, !dbg !5786

while.body:                                       ; preds = %while.cond
  %22 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5788
  %bezt8 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %22, i32 0, i32 18, !dbg !5791
  %23 = load %struct.BezTriple*, %struct.BezTriple** %bezt8, align 8, !dbg !5791
  %tobool9 = icmp ne %struct.BezTriple* %23, null, !dbg !5788
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !5792

if.then10:                                        ; preds = %while.body
  %24 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5793
  %bezt11 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %24, i32 0, i32 18, !dbg !5795
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt11, align 8, !dbg !5795
  store %struct.BezTriple* %25, %struct.BezTriple** %bezt, align 8, !dbg !5796
  %26 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5797
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %26, i32 0, i32 6, !dbg !5798
  %27 = load i32, i32* %pntsu, align 8, !dbg !5798
  store i32 %27, i32* %a, align 4, !dbg !5799
  br label %while.cond12, !dbg !5800

while.cond12:                                     ; preds = %while.body14, %if.then10
  %28 = load i32, i32* %a, align 4, !dbg !5801
  %dec = add nsw i32 %28, -1, !dbg !5801
  store i32 %dec, i32* %a, align 4, !dbg !5801
  %tobool13 = icmp ne i32 %28, 0, !dbg !5800
  br i1 %tobool13, label %while.body14, label %while.end, !dbg !5800

while.body14:                                     ; preds = %while.cond12
  %29 = load float*, float** %fp, align 8, !dbg !5802
  %30 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5804
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %30, i32 0, i32 0, !dbg !5805
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !5804
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !5804
  call void @copy_v3_v3(float* %29, float* %arraydecay), !dbg !5806
  %31 = load float*, float** %fp, align 8, !dbg !5807
  %add.ptr = getelementptr inbounds float, float* %31, i64 3, !dbg !5807
  store float* %add.ptr, float** %fp, align 8, !dbg !5807
  %32 = load float*, float** %fp, align 8, !dbg !5808
  %33 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5809
  %vec15 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %33, i32 0, i32 0, !dbg !5810
  %arrayidx16 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec15, i64 0, i64 1, !dbg !5809
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 0, !dbg !5809
  call void @copy_v3_v3(float* %32, float* %arraydecay17), !dbg !5811
  %34 = load float*, float** %fp, align 8, !dbg !5812
  %add.ptr18 = getelementptr inbounds float, float* %34, i64 3, !dbg !5812
  store float* %add.ptr18, float** %fp, align 8, !dbg !5812
  %35 = load float*, float** %fp, align 8, !dbg !5813
  %36 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5814
  %vec19 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %36, i32 0, i32 0, !dbg !5815
  %arrayidx20 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec19, i64 0, i64 2, !dbg !5814
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx20, i64 0, i64 0, !dbg !5814
  call void @copy_v3_v3(float* %35, float* %arraydecay21), !dbg !5816
  %37 = load float*, float** %fp, align 8, !dbg !5817
  %add.ptr22 = getelementptr inbounds float, float* %37, i64 3, !dbg !5817
  store float* %add.ptr22, float** %fp, align 8, !dbg !5817
  %38 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5818
  %alfa = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %38, i32 0, i32 1, !dbg !5819
  %39 = load float, float* %alfa, align 4, !dbg !5819
  %40 = load float*, float** %fp, align 8, !dbg !5820
  %arrayidx23 = getelementptr inbounds float, float* %40, i64 0, !dbg !5820
  store float %39, float* %arrayidx23, align 4, !dbg !5821
  %41 = load float*, float** %fp, align 8, !dbg !5822
  %add.ptr24 = getelementptr inbounds float, float* %41, i64 3, !dbg !5822
  store float* %add.ptr24, float** %fp, align 8, !dbg !5822
  %42 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5823
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %42, i32 1, !dbg !5823
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !5823
  br label %while.cond12, !dbg !5800, !llvm.loop !5824

while.end:                                        ; preds = %while.cond12
  br label %if.end39, !dbg !5826

if.else:                                          ; preds = %while.body
  %43 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5827
  %bp25 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 17, !dbg !5829
  %44 = load %struct.BPoint*, %struct.BPoint** %bp25, align 8, !dbg !5829
  store %struct.BPoint* %44, %struct.BPoint** %bp, align 8, !dbg !5830
  %45 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5831
  %pntsu26 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %45, i32 0, i32 6, !dbg !5832
  %46 = load i32, i32* %pntsu26, align 8, !dbg !5832
  %47 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5833
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %47, i32 0, i32 7, !dbg !5834
  %48 = load i32, i32* %pntsv, align 4, !dbg !5834
  %mul27 = mul nsw i32 %46, %48, !dbg !5835
  store i32 %mul27, i32* %a, align 4, !dbg !5836
  br label %while.cond28, !dbg !5837

while.cond28:                                     ; preds = %while.body31, %if.else
  %49 = load i32, i32* %a, align 4, !dbg !5838
  %dec29 = add nsw i32 %49, -1, !dbg !5838
  store i32 %dec29, i32* %a, align 4, !dbg !5838
  %tobool30 = icmp ne i32 %49, 0, !dbg !5837
  br i1 %tobool30, label %while.body31, label %while.end38, !dbg !5837

while.body31:                                     ; preds = %while.cond28
  %50 = load float*, float** %fp, align 8, !dbg !5839
  %51 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5841
  %vec32 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %51, i32 0, i32 0, !dbg !5842
  %arraydecay33 = getelementptr inbounds [4 x float], [4 x float]* %vec32, i64 0, i64 0, !dbg !5841
  call void @copy_v3_v3(float* %50, float* %arraydecay33), !dbg !5843
  %52 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5844
  %alfa34 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %52, i32 0, i32 1, !dbg !5845
  %53 = load float, float* %alfa34, align 4, !dbg !5845
  %54 = load float*, float** %fp, align 8, !dbg !5846
  %arrayidx35 = getelementptr inbounds float, float* %54, i64 3, !dbg !5846
  store float %53, float* %arrayidx35, align 4, !dbg !5847
  %55 = load float*, float** %fp, align 8, !dbg !5848
  %add.ptr36 = getelementptr inbounds float, float* %55, i64 4, !dbg !5848
  store float* %add.ptr36, float** %fp, align 8, !dbg !5848
  %56 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5849
  %incdec.ptr37 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %56, i32 1, !dbg !5849
  store %struct.BPoint* %incdec.ptr37, %struct.BPoint** %bp, align 8, !dbg !5849
  br label %while.cond28, !dbg !5837, !llvm.loop !5850

while.end38:                                      ; preds = %while.cond28
  br label %if.end39

if.end39:                                         ; preds = %while.end38, %while.end
  %57 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5852
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %57, i32 0, i32 0, !dbg !5853
  %58 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !5853
  store %struct.Nurb* %58, %struct.Nurb** %nu, align 8, !dbg !5854
  br label %while.cond, !dbg !5786, !llvm.loop !5855

while.end40:                                      ; preds = %if.then, %while.cond
  ret void, !dbg !5857
}

declare dso_local i32 @BKE_nurbList_verts_count(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_key_convert_to_curve(%struct.KeyBlock* %kb, %struct.Curve* %UNUSED_cu, %struct.ListBase* %nurb) #0 !dbg !5858 {
entry:
  %kb.addr = alloca %struct.KeyBlock*, align 8
  %UNUSED_cu.addr = alloca %struct.Curve*, align 8
  %nurb.addr = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %fp = alloca float*, align 8
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  store %struct.KeyBlock* %kb, %struct.KeyBlock** %kb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb.addr, metadata !5861, metadata !DIExpression()), !dbg !5862
  store %struct.Curve* %UNUSED_cu, %struct.Curve** %UNUSED_cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %UNUSED_cu.addr, metadata !5863, metadata !DIExpression()), !dbg !5864
  store %struct.ListBase* %nurb, %struct.ListBase** %nurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurb.addr, metadata !5865, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !5867, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !5869, metadata !DIExpression()), !dbg !5870
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !5871, metadata !DIExpression()), !dbg !5872
  call void @llvm.dbg.declare(metadata float** %fp, metadata !5873, metadata !DIExpression()), !dbg !5874
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5875, metadata !DIExpression()), !dbg !5876
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !5877, metadata !DIExpression()), !dbg !5878
  %0 = load %struct.ListBase*, %struct.ListBase** %nurb.addr, align 8, !dbg !5879
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !5880
  %1 = load i8*, i8** %first, align 8, !dbg !5880
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !5879
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !5881
  %3 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5882
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %3, i32 0, i32 10, !dbg !5883
  %4 = load i8*, i8** %data, align 8, !dbg !5883
  %5 = bitcast i8* %4 to float*, !dbg !5882
  store float* %5, float** %fp, align 8, !dbg !5884
  %6 = load %struct.ListBase*, %struct.ListBase** %nurb.addr, align 8, !dbg !5885
  %call = call i32 @BKE_nurbList_verts_count(%struct.ListBase* %6), !dbg !5886
  store i32 %call, i32* %tot, align 4, !dbg !5887
  %7 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5888
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %7, i32 0, i32 8, !dbg !5889
  %8 = load i32, i32* %totelem, align 8, !dbg !5889
  %9 = load i32, i32* %tot, align 4, !dbg !5890
  %call1 = call i32 @min_ii(i32 %8, i32 %9), !dbg !5891
  store i32 %call1, i32* %tot, align 4, !dbg !5892
  br label %while.cond, !dbg !5893

while.cond:                                       ; preds = %if.end, %entry
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5894
  %tobool = icmp ne %struct.Nurb* %10, null, !dbg !5894
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5895

land.rhs:                                         ; preds = %while.cond
  %11 = load i32, i32* %tot, align 4, !dbg !5896
  %cmp = icmp sgt i32 %11, 0, !dbg !5897
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %12 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !5898
  br i1 %12, label %while.body, label %while.end38, !dbg !5893

while.body:                                       ; preds = %land.end
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5899
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 18, !dbg !5902
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !5902
  %tobool3 = icmp ne %struct.BezTriple* %14, null, !dbg !5899
  br i1 %tobool3, label %if.then, label %if.else, !dbg !5903

if.then:                                          ; preds = %while.body
  %15 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5904
  %bezt4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 18, !dbg !5906
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt4, align 8, !dbg !5906
  store %struct.BezTriple* %16, %struct.BezTriple** %bezt, align 8, !dbg !5907
  %17 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5908
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %17, i32 0, i32 6, !dbg !5909
  %18 = load i32, i32* %pntsu, align 8, !dbg !5909
  store i32 %18, i32* %a, align 4, !dbg !5910
  br label %while.cond5, !dbg !5911

while.cond5:                                      ; preds = %while.body10, %if.then
  %19 = load i32, i32* %a, align 4, !dbg !5912
  %dec = add nsw i32 %19, -1, !dbg !5912
  store i32 %dec, i32* %a, align 4, !dbg !5912
  %tobool6 = icmp ne i32 %19, 0, !dbg !5912
  br i1 %tobool6, label %land.rhs7, label %land.end9, !dbg !5913

land.rhs7:                                        ; preds = %while.cond5
  %20 = load i32, i32* %tot, align 4, !dbg !5914
  %cmp8 = icmp sgt i32 %20, 0, !dbg !5915
  br label %land.end9

land.end9:                                        ; preds = %land.rhs7, %while.cond5
  %21 = phi i1 [ false, %while.cond5 ], [ %cmp8, %land.rhs7 ], !dbg !5916
  br i1 %21, label %while.body10, label %while.end, !dbg !5911

while.body10:                                     ; preds = %land.end9
  %22 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5917
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %22, i32 0, i32 0, !dbg !5919
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !5917
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !5917
  %23 = load float*, float** %fp, align 8, !dbg !5920
  call void @copy_v3_v3(float* %arraydecay, float* %23), !dbg !5921
  %24 = load float*, float** %fp, align 8, !dbg !5922
  %add.ptr = getelementptr inbounds float, float* %24, i64 3, !dbg !5922
  store float* %add.ptr, float** %fp, align 8, !dbg !5922
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5923
  %vec11 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %25, i32 0, i32 0, !dbg !5924
  %arrayidx12 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec11, i64 0, i64 1, !dbg !5923
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 0, !dbg !5923
  %26 = load float*, float** %fp, align 8, !dbg !5925
  call void @copy_v3_v3(float* %arraydecay13, float* %26), !dbg !5926
  %27 = load float*, float** %fp, align 8, !dbg !5927
  %add.ptr14 = getelementptr inbounds float, float* %27, i64 3, !dbg !5927
  store float* %add.ptr14, float** %fp, align 8, !dbg !5927
  %28 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5928
  %vec15 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %28, i32 0, i32 0, !dbg !5929
  %arrayidx16 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec15, i64 0, i64 2, !dbg !5928
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 0, !dbg !5928
  %29 = load float*, float** %fp, align 8, !dbg !5930
  call void @copy_v3_v3(float* %arraydecay17, float* %29), !dbg !5931
  %30 = load float*, float** %fp, align 8, !dbg !5932
  %add.ptr18 = getelementptr inbounds float, float* %30, i64 3, !dbg !5932
  store float* %add.ptr18, float** %fp, align 8, !dbg !5932
  %31 = load float*, float** %fp, align 8, !dbg !5933
  %arrayidx19 = getelementptr inbounds float, float* %31, i64 0, !dbg !5933
  %32 = load float, float* %arrayidx19, align 4, !dbg !5933
  %33 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5934
  %alfa = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %33, i32 0, i32 1, !dbg !5935
  store float %32, float* %alfa, align 4, !dbg !5936
  %34 = load float*, float** %fp, align 8, !dbg !5937
  %add.ptr20 = getelementptr inbounds float, float* %34, i64 3, !dbg !5937
  store float* %add.ptr20, float** %fp, align 8, !dbg !5937
  %35 = load i32, i32* %tot, align 4, !dbg !5938
  %sub = sub nsw i32 %35, 3, !dbg !5938
  store i32 %sub, i32* %tot, align 4, !dbg !5938
  %36 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5939
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %36, i32 1, !dbg !5939
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !5939
  br label %while.cond5, !dbg !5911, !llvm.loop !5940

while.end:                                        ; preds = %land.end9
  br label %if.end, !dbg !5942

if.else:                                          ; preds = %while.body
  %37 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5943
  %bp21 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %37, i32 0, i32 17, !dbg !5945
  %38 = load %struct.BPoint*, %struct.BPoint** %bp21, align 8, !dbg !5945
  store %struct.BPoint* %38, %struct.BPoint** %bp, align 8, !dbg !5946
  %39 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5947
  %pntsu22 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %39, i32 0, i32 6, !dbg !5948
  %40 = load i32, i32* %pntsu22, align 8, !dbg !5948
  %41 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5949
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 7, !dbg !5950
  %42 = load i32, i32* %pntsv, align 4, !dbg !5950
  %mul = mul nsw i32 %40, %42, !dbg !5951
  store i32 %mul, i32* %a, align 4, !dbg !5952
  br label %while.cond23, !dbg !5953

while.cond23:                                     ; preds = %while.body29, %if.else
  %43 = load i32, i32* %a, align 4, !dbg !5954
  %dec24 = add nsw i32 %43, -1, !dbg !5954
  store i32 %dec24, i32* %a, align 4, !dbg !5954
  %tobool25 = icmp ne i32 %43, 0, !dbg !5954
  br i1 %tobool25, label %land.rhs26, label %land.end28, !dbg !5955

land.rhs26:                                       ; preds = %while.cond23
  %44 = load i32, i32* %tot, align 4, !dbg !5956
  %cmp27 = icmp sgt i32 %44, 0, !dbg !5957
  br label %land.end28

land.end28:                                       ; preds = %land.rhs26, %while.cond23
  %45 = phi i1 [ false, %while.cond23 ], [ %cmp27, %land.rhs26 ], !dbg !5958
  br i1 %45, label %while.body29, label %while.end37, !dbg !5953

while.body29:                                     ; preds = %land.end28
  %46 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5959
  %vec30 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %46, i32 0, i32 0, !dbg !5961
  %arraydecay31 = getelementptr inbounds [4 x float], [4 x float]* %vec30, i64 0, i64 0, !dbg !5959
  %47 = load float*, float** %fp, align 8, !dbg !5962
  call void @copy_v3_v3(float* %arraydecay31, float* %47), !dbg !5963
  %48 = load float*, float** %fp, align 8, !dbg !5964
  %arrayidx32 = getelementptr inbounds float, float* %48, i64 3, !dbg !5964
  %49 = load float, float* %arrayidx32, align 4, !dbg !5964
  %50 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5965
  %alfa33 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %50, i32 0, i32 1, !dbg !5966
  store float %49, float* %alfa33, align 4, !dbg !5967
  %51 = load float*, float** %fp, align 8, !dbg !5968
  %add.ptr34 = getelementptr inbounds float, float* %51, i64 4, !dbg !5968
  store float* %add.ptr34, float** %fp, align 8, !dbg !5968
  %52 = load i32, i32* %tot, align 4, !dbg !5969
  %dec35 = add nsw i32 %52, -1, !dbg !5969
  store i32 %dec35, i32* %tot, align 4, !dbg !5969
  %53 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5970
  %incdec.ptr36 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %53, i32 1, !dbg !5970
  store %struct.BPoint* %incdec.ptr36, %struct.BPoint** %bp, align 8, !dbg !5970
  br label %while.cond23, !dbg !5953, !llvm.loop !5971

while.end37:                                      ; preds = %land.end28
  br label %if.end

if.end:                                           ; preds = %while.end37, %while.end
  %54 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5973
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %54, i32 0, i32 0, !dbg !5974
  %55 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !5974
  store %struct.Nurb* %55, %struct.Nurb** %nu, align 8, !dbg !5975
  br label %while.cond, !dbg !5893, !llvm.loop !5976

while.end38:                                      ; preds = %land.end
  ret void, !dbg !5978
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_key_convert_from_mesh(%struct.Mesh* %me, %struct.KeyBlock* %kb) #0 !dbg !5979 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %kb.addr = alloca %struct.KeyBlock*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %fp = alloca float*, align 8
  %a = alloca i32, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !5982, metadata !DIExpression()), !dbg !5983
  store %struct.KeyBlock* %kb, %struct.KeyBlock** %kb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb.addr, metadata !5984, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !5986, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.declare(metadata float** %fp, metadata !5988, metadata !DIExpression()), !dbg !5989
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5990, metadata !DIExpression()), !dbg !5991
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5992
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 26, !dbg !5994
  %1 = load i32, i32* %totvert, align 8, !dbg !5994
  %cmp = icmp eq i32 %1, 0, !dbg !5995
  br i1 %cmp, label %if.then, label %if.end, !dbg !5996

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !5997

if.end:                                           ; preds = %entry
  %2 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5998
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %2, i32 0, i32 10, !dbg !6000
  %3 = load i8*, i8** %data, align 8, !dbg !6000
  %tobool = icmp ne i8* %3, null, !dbg !5998
  br i1 %tobool, label %if.then1, label %if.end3, !dbg !6001

if.then1:                                         ; preds = %if.end
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6002
  %5 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !6003
  %data2 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %5, i32 0, i32 10, !dbg !6004
  %6 = load i8*, i8** %data2, align 8, !dbg !6004
  call void %4(i8* %6), !dbg !6002
  br label %if.end3, !dbg !6002

if.end3:                                          ; preds = %if.then1, %if.end
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6005
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6006
  %key = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 4, !dbg !6007
  %9 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !6007
  %elemsize = getelementptr inbounds %struct.Key, %struct.Key* %9, i32 0, i32 4, !dbg !6008
  %10 = load i32, i32* %elemsize, align 8, !dbg !6008
  %11 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6009
  %totvert4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 26, !dbg !6010
  %12 = load i32, i32* %totvert4, align 8, !dbg !6010
  %mul = mul nsw i32 %10, %12, !dbg !6011
  %conv = sext i32 %mul to i64, !dbg !6006
  %call = call i8* %7(i64 %conv, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0)), !dbg !6005
  %13 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !6012
  %data5 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %13, i32 0, i32 10, !dbg !6013
  store i8* %call, i8** %data5, align 8, !dbg !6014
  %14 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6015
  %totvert6 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 26, !dbg !6016
  %15 = load i32, i32* %totvert6, align 8, !dbg !6016
  %16 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !6017
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %16, i32 0, i32 8, !dbg !6018
  store i32 %15, i32* %totelem, align 8, !dbg !6019
  %17 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6020
  %mvert7 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 15, !dbg !6021
  %18 = load %struct.MVert*, %struct.MVert** %mvert7, align 8, !dbg !6021
  store %struct.MVert* %18, %struct.MVert** %mvert, align 8, !dbg !6022
  %19 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !6023
  %data8 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %19, i32 0, i32 10, !dbg !6024
  %20 = load i8*, i8** %data8, align 8, !dbg !6024
  %21 = bitcast i8* %20 to float*, !dbg !6023
  store float* %21, float** %fp, align 8, !dbg !6025
  store i32 0, i32* %a, align 4, !dbg !6026
  br label %for.cond, !dbg !6028

for.cond:                                         ; preds = %for.inc, %if.end3
  %22 = load i32, i32* %a, align 4, !dbg !6029
  %23 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !6031
  %totelem9 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %23, i32 0, i32 8, !dbg !6032
  %24 = load i32, i32* %totelem9, align 8, !dbg !6032
  %cmp10 = icmp slt i32 %22, %24, !dbg !6033
  br i1 %cmp10, label %for.body, label %for.end, !dbg !6034

for.body:                                         ; preds = %for.cond
  %25 = load float*, float** %fp, align 8, !dbg !6035
  %26 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6037
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %26, i32 0, i32 0, !dbg !6038
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6037
  call void @copy_v3_v3(float* %25, float* %arraydecay), !dbg !6039
  br label %for.inc, !dbg !6040

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %a, align 4, !dbg !6041
  %inc = add nsw i32 %27, 1, !dbg !6041
  store i32 %inc, i32* %a, align 4, !dbg !6041
  %28 = load float*, float** %fp, align 8, !dbg !6042
  %add.ptr = getelementptr inbounds float, float* %28, i64 3, !dbg !6042
  store float* %add.ptr, float** %fp, align 8, !dbg !6042
  %29 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6043
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %29, i32 1, !dbg !6043
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mvert, align 8, !dbg !6043
  br label %for.cond, !dbg !6044, !llvm.loop !6045

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !6047
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_key_convert_to_mesh(%struct.KeyBlock* %kb, %struct.Mesh* %me) #0 !dbg !6048 {
entry:
  %kb.addr = alloca %struct.KeyBlock*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %fp = alloca float*, align 8
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  store %struct.KeyBlock* %kb, %struct.KeyBlock** %kb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb.addr, metadata !6051, metadata !DIExpression()), !dbg !6052
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !6053, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !6055, metadata !DIExpression()), !dbg !6056
  call void @llvm.dbg.declare(metadata float** %fp, metadata !6057, metadata !DIExpression()), !dbg !6058
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6059, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !6061, metadata !DIExpression()), !dbg !6062
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6063
  %mvert1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 15, !dbg !6064
  %1 = load %struct.MVert*, %struct.MVert** %mvert1, align 8, !dbg !6064
  store %struct.MVert* %1, %struct.MVert** %mvert, align 8, !dbg !6065
  %2 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !6066
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %2, i32 0, i32 10, !dbg !6067
  %3 = load i8*, i8** %data, align 8, !dbg !6067
  %4 = bitcast i8* %3 to float*, !dbg !6066
  store float* %4, float** %fp, align 8, !dbg !6068
  %5 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !6069
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %5, i32 0, i32 8, !dbg !6070
  %6 = load i32, i32* %totelem, align 8, !dbg !6070
  %7 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6071
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 26, !dbg !6072
  %8 = load i32, i32* %totvert, align 8, !dbg !6072
  %call = call i32 @min_ii(i32 %6, i32 %8), !dbg !6073
  store i32 %call, i32* %tot, align 4, !dbg !6074
  store i32 0, i32* %a, align 4, !dbg !6075
  br label %for.cond, !dbg !6077

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %a, align 4, !dbg !6078
  %10 = load i32, i32* %tot, align 4, !dbg !6080
  %cmp = icmp slt i32 %9, %10, !dbg !6081
  br i1 %cmp, label %for.body, label %for.end, !dbg !6082

for.body:                                         ; preds = %for.cond
  %11 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6083
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %11, i32 0, i32 0, !dbg !6085
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6083
  %12 = load float*, float** %fp, align 8, !dbg !6086
  call void @copy_v3_v3(float* %arraydecay, float* %12), !dbg !6087
  br label %for.inc, !dbg !6088

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %a, align 4, !dbg !6089
  %inc = add nsw i32 %13, 1, !dbg !6089
  store i32 %inc, i32* %a, align 4, !dbg !6089
  %14 = load float*, float** %fp, align 8, !dbg !6090
  %add.ptr = getelementptr inbounds float, float* %14, i64 3, !dbg !6090
  store float* %add.ptr, float** %fp, align 8, !dbg !6090
  %15 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6091
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %15, i32 1, !dbg !6091
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mvert, align 8, !dbg !6091
  br label %for.cond, !dbg !6092, !llvm.loop !6093

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6095
}

; Function Attrs: noinline nounwind uwtable
define dso_local [3 x float]* @BKE_key_convert_to_vertcos(%struct.Object* %ob, %struct.KeyBlock* %kb) #0 !dbg !6096 {
entry:
  %retval = alloca [3 x float]*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %kb.addr = alloca %struct.KeyBlock*, align 8
  %vertCos = alloca [3 x float]*, align 8
  %co = alloca float*, align 8
  %fp = alloca float*, align 8
  %tot = alloca i32, align 4
  %a = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %lt = alloca %struct.Lattice*, align 8
  %cu = alloca %struct.Curve*, align 8
  %cu57 = alloca %struct.Curve*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %i = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6099, metadata !DIExpression()), !dbg !6100
  store %struct.KeyBlock* %kb, %struct.KeyBlock** %kb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb.addr, metadata !6101, metadata !DIExpression()), !dbg !6102
  call void @llvm.dbg.declare(metadata [3 x float]** %vertCos, metadata !6103, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.declare(metadata float** %co, metadata !6105, metadata !DIExpression()), !dbg !6106
  call void @llvm.dbg.declare(metadata float** %fp, metadata !6107, metadata !DIExpression()), !dbg !6108
  %0 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !6109
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %0, i32 0, i32 10, !dbg !6110
  %1 = load i8*, i8** %data, align 8, !dbg !6110
  %2 = bitcast i8* %1 to float*, !dbg !6109
  store float* %2, float** %fp, align 8, !dbg !6108
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !6111, metadata !DIExpression()), !dbg !6112
  store i32 0, i32* %tot, align 4, !dbg !6112
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6113, metadata !DIExpression()), !dbg !6114
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6115
  %type = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !6117
  %4 = load i16, i16* %type, align 8, !dbg !6117
  %conv = sext i16 %4 to i32, !dbg !6115
  %cmp = icmp eq i32 %conv, 1, !dbg !6118
  br i1 %cmp, label %if.then, label %if.else, !dbg !6119

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !6120, metadata !DIExpression()), !dbg !6122
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6123
  %data2 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 19, !dbg !6124
  %6 = load i8*, i8** %data2, align 8, !dbg !6124
  %7 = bitcast i8* %6 to %struct.Mesh*, !dbg !6125
  store %struct.Mesh* %7, %struct.Mesh** %me, align 8, !dbg !6122
  %8 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6126
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 26, !dbg !6127
  %9 = load i32, i32* %totvert, align 8, !dbg !6127
  store i32 %9, i32* %tot, align 4, !dbg !6128
  br label %if.end25, !dbg !6129

if.else:                                          ; preds = %entry
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6130
  %type3 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 3, !dbg !6132
  %11 = load i16, i16* %type3, align 8, !dbg !6132
  %conv4 = sext i16 %11 to i32, !dbg !6130
  %cmp5 = icmp eq i32 %conv4, 22, !dbg !6133
  br i1 %cmp5, label %if.then7, label %if.else13, !dbg !6134

if.then7:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !6135, metadata !DIExpression()), !dbg !6137
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6138
  %data8 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 19, !dbg !6139
  %13 = load i8*, i8** %data8, align 8, !dbg !6139
  %14 = bitcast i8* %13 to %struct.Lattice*, !dbg !6140
  store %struct.Lattice* %14, %struct.Lattice** %lt, align 8, !dbg !6137
  %15 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !6141
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %15, i32 0, i32 2, !dbg !6142
  %16 = load i16, i16* %pntsu, align 8, !dbg !6142
  %conv9 = sext i16 %16 to i32, !dbg !6141
  %17 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !6143
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %17, i32 0, i32 3, !dbg !6144
  %18 = load i16, i16* %pntsv, align 2, !dbg !6144
  %conv10 = sext i16 %18 to i32, !dbg !6143
  %mul = mul nsw i32 %conv9, %conv10, !dbg !6145
  %19 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !6146
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %19, i32 0, i32 4, !dbg !6147
  %20 = load i16, i16* %pntsw, align 4, !dbg !6147
  %conv11 = sext i16 %20 to i32, !dbg !6146
  %mul12 = mul nsw i32 %mul, %conv11, !dbg !6148
  store i32 %mul12, i32* %tot, align 4, !dbg !6149
  br label %if.end24, !dbg !6150

if.else13:                                        ; preds = %if.else
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6151
  %type14 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 3, !dbg !6151
  %22 = load i16, i16* %type14, align 8, !dbg !6151
  %conv15 = sext i16 %22 to i32, !dbg !6151
  %cmp16 = icmp eq i32 %conv15, 2, !dbg !6151
  br i1 %cmp16, label %if.then22, label %lor.lhs.false, !dbg !6151

lor.lhs.false:                                    ; preds = %if.else13
  %23 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6151
  %type18 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 3, !dbg !6151
  %24 = load i16, i16* %type18, align 8, !dbg !6151
  %conv19 = sext i16 %24 to i32, !dbg !6151
  %cmp20 = icmp eq i32 %conv19, 3, !dbg !6151
  br i1 %cmp20, label %if.then22, label %if.end, !dbg !6153

if.then22:                                        ; preds = %lor.lhs.false, %if.else13
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !6154, metadata !DIExpression()), !dbg !6156
  %25 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6157
  %data23 = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 19, !dbg !6158
  %26 = load i8*, i8** %data23, align 8, !dbg !6158
  %27 = bitcast i8* %26 to %struct.Curve*, !dbg !6159
  store %struct.Curve* %27, %struct.Curve** %cu, align 8, !dbg !6156
  %28 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6160
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %28, i32 0, i32 3, !dbg !6161
  %call = call i32 @BKE_nurbList_verts_count(%struct.ListBase* %nurb), !dbg !6162
  store i32 %call, i32* %tot, align 4, !dbg !6163
  br label %if.end, !dbg !6164

if.end:                                           ; preds = %if.then22, %lor.lhs.false
  br label %if.end24

if.end24:                                         ; preds = %if.end, %if.then7
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then
  %29 = load i32, i32* %tot, align 4, !dbg !6165
  %cmp26 = icmp eq i32 %29, 0, !dbg !6167
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !6168

if.then28:                                        ; preds = %if.end25
  store [3 x float]* null, [3 x float]** %retval, align 8, !dbg !6169
  br label %return, !dbg !6169

if.end29:                                         ; preds = %if.end25
  %30 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6170
  %31 = load i32, i32* %tot, align 4, !dbg !6171
  %conv30 = sext i32 %31 to i64, !dbg !6171
  %mul31 = mul i64 %conv30, 12, !dbg !6172
  %call32 = call i8* %30(i64 %mul31, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8, i64 0, i64 0)), !dbg !6170
  %32 = bitcast i8* %call32 to [3 x float]*, !dbg !6170
  store [3 x float]* %32, [3 x float]** %vertCos, align 8, !dbg !6173
  %33 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !6174
  %34 = bitcast [3 x float]* %33 to float*, !dbg !6175
  store float* %34, float** %co, align 8, !dbg !6176
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6177
  %type33 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 3, !dbg !6177
  %36 = load i16, i16* %type33, align 8, !dbg !6177
  %conv34 = sext i16 %36 to i32, !dbg !6177
  %cmp35 = icmp eq i32 %conv34, 1, !dbg !6177
  br i1 %cmp35, label %if.then42, label %lor.lhs.false37, !dbg !6177

lor.lhs.false37:                                  ; preds = %if.end29
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6177
  %type38 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 3, !dbg !6177
  %38 = load i16, i16* %type38, align 8, !dbg !6177
  %conv39 = sext i16 %38 to i32, !dbg !6177
  %cmp40 = icmp eq i32 %conv39, 22, !dbg !6177
  br i1 %cmp40, label %if.then42, label %if.else46, !dbg !6179

if.then42:                                        ; preds = %lor.lhs.false37, %if.end29
  store i32 0, i32* %a, align 4, !dbg !6180
  br label %for.cond, !dbg !6183

for.cond:                                         ; preds = %for.inc, %if.then42
  %39 = load i32, i32* %a, align 4, !dbg !6184
  %40 = load i32, i32* %tot, align 4, !dbg !6186
  %cmp43 = icmp slt i32 %39, %40, !dbg !6187
  br i1 %cmp43, label %for.body, label %for.end, !dbg !6188

for.body:                                         ; preds = %for.cond
  %41 = load float*, float** %co, align 8, !dbg !6189
  %42 = load float*, float** %fp, align 8, !dbg !6191
  call void @copy_v3_v3(float* %41, float* %42), !dbg !6192
  br label %for.inc, !dbg !6193

for.inc:                                          ; preds = %for.body
  %43 = load i32, i32* %a, align 4, !dbg !6194
  %inc = add nsw i32 %43, 1, !dbg !6194
  store i32 %inc, i32* %a, align 4, !dbg !6194
  %44 = load float*, float** %fp, align 8, !dbg !6195
  %add.ptr = getelementptr inbounds float, float* %44, i64 3, !dbg !6195
  store float* %add.ptr, float** %fp, align 8, !dbg !6195
  %45 = load float*, float** %co, align 8, !dbg !6196
  %add.ptr45 = getelementptr inbounds float, float* %45, i64 3, !dbg !6196
  store float* %add.ptr45, float** %co, align 8, !dbg !6196
  br label %for.cond, !dbg !6197, !llvm.loop !6198

for.end:                                          ; preds = %for.cond
  br label %if.end94, !dbg !6200

if.else46:                                        ; preds = %lor.lhs.false37
  %46 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6201
  %type47 = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 3, !dbg !6201
  %47 = load i16, i16* %type47, align 8, !dbg !6201
  %conv48 = sext i16 %47 to i32, !dbg !6201
  %cmp49 = icmp eq i32 %conv48, 2, !dbg !6201
  br i1 %cmp49, label %if.then56, label %lor.lhs.false51, !dbg !6201

lor.lhs.false51:                                  ; preds = %if.else46
  %48 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6201
  %type52 = getelementptr inbounds %struct.Object, %struct.Object* %48, i32 0, i32 3, !dbg !6201
  %49 = load i16, i16* %type52, align 8, !dbg !6201
  %conv53 = sext i16 %49 to i32, !dbg !6201
  %cmp54 = icmp eq i32 %conv53, 3, !dbg !6201
  br i1 %cmp54, label %if.then56, label %if.end93, !dbg !6203

if.then56:                                        ; preds = %lor.lhs.false51, %if.else46
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu57, metadata !6204, metadata !DIExpression()), !dbg !6206
  %50 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6207
  %data58 = getelementptr inbounds %struct.Object, %struct.Object* %50, i32 0, i32 19, !dbg !6208
  %51 = load i8*, i8** %data58, align 8, !dbg !6208
  %52 = bitcast i8* %51 to %struct.Curve*, !dbg !6209
  store %struct.Curve* %52, %struct.Curve** %cu57, align 8, !dbg !6206
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !6210, metadata !DIExpression()), !dbg !6211
  %53 = load %struct.Curve*, %struct.Curve** %cu57, align 8, !dbg !6212
  %nurb59 = getelementptr inbounds %struct.Curve, %struct.Curve* %53, i32 0, i32 3, !dbg !6213
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb59, i32 0, i32 0, !dbg !6214
  %54 = load i8*, i8** %first, align 8, !dbg !6214
  %55 = bitcast i8* %54 to %struct.Nurb*, !dbg !6212
  store %struct.Nurb* %55, %struct.Nurb** %nu, align 8, !dbg !6211
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !6215, metadata !DIExpression()), !dbg !6216
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !6217, metadata !DIExpression()), !dbg !6218
  br label %while.cond, !dbg !6219

while.cond:                                       ; preds = %if.end91, %if.then56
  %56 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6220
  %tobool = icmp ne %struct.Nurb* %56, null, !dbg !6219
  br i1 %tobool, label %while.body, label %while.end92, !dbg !6219

while.body:                                       ; preds = %while.cond
  %57 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6221
  %bezt60 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %57, i32 0, i32 18, !dbg !6224
  %58 = load %struct.BezTriple*, %struct.BezTriple** %bezt60, align 8, !dbg !6224
  %tobool61 = icmp ne %struct.BezTriple* %58, null, !dbg !6221
  br i1 %tobool61, label %if.then62, label %if.else78, !dbg !6225

if.then62:                                        ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6226, metadata !DIExpression()), !dbg !6228
  %59 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6229
  %bezt63 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %59, i32 0, i32 18, !dbg !6230
  %60 = load %struct.BezTriple*, %struct.BezTriple** %bezt63, align 8, !dbg !6230
  store %struct.BezTriple* %60, %struct.BezTriple** %bezt, align 8, !dbg !6231
  %61 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6232
  %pntsu64 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %61, i32 0, i32 6, !dbg !6233
  %62 = load i32, i32* %pntsu64, align 8, !dbg !6233
  store i32 %62, i32* %a, align 4, !dbg !6234
  br label %while.cond65, !dbg !6235

while.cond65:                                     ; preds = %for.end76, %if.then62
  %63 = load i32, i32* %a, align 4, !dbg !6236
  %dec = add nsw i32 %63, -1, !dbg !6236
  store i32 %dec, i32* %a, align 4, !dbg !6236
  %tobool66 = icmp ne i32 %63, 0, !dbg !6235
  br i1 %tobool66, label %while.body67, label %while.end, !dbg !6235

while.body67:                                     ; preds = %while.cond65
  store i32 0, i32* %i, align 4, !dbg !6237
  br label %for.cond68, !dbg !6240

for.cond68:                                       ; preds = %for.inc74, %while.body67
  %64 = load i32, i32* %i, align 4, !dbg !6241
  %cmp69 = icmp slt i32 %64, 3, !dbg !6243
  br i1 %cmp69, label %for.body71, label %for.end76, !dbg !6244

for.body71:                                       ; preds = %for.cond68
  %65 = load float*, float** %co, align 8, !dbg !6245
  %66 = load float*, float** %fp, align 8, !dbg !6247
  call void @copy_v3_v3(float* %65, float* %66), !dbg !6248
  %67 = load float*, float** %fp, align 8, !dbg !6249
  %add.ptr72 = getelementptr inbounds float, float* %67, i64 3, !dbg !6249
  store float* %add.ptr72, float** %fp, align 8, !dbg !6249
  %68 = load float*, float** %co, align 8, !dbg !6250
  %add.ptr73 = getelementptr inbounds float, float* %68, i64 3, !dbg !6250
  store float* %add.ptr73, float** %co, align 8, !dbg !6250
  br label %for.inc74, !dbg !6251

for.inc74:                                        ; preds = %for.body71
  %69 = load i32, i32* %i, align 4, !dbg !6252
  %inc75 = add nsw i32 %69, 1, !dbg !6252
  store i32 %inc75, i32* %i, align 4, !dbg !6252
  br label %for.cond68, !dbg !6253, !llvm.loop !6254

for.end76:                                        ; preds = %for.cond68
  %70 = load float*, float** %fp, align 8, !dbg !6256
  %add.ptr77 = getelementptr inbounds float, float* %70, i64 3, !dbg !6256
  store float* %add.ptr77, float** %fp, align 8, !dbg !6256
  %71 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6257
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %71, i32 1, !dbg !6257
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !6257
  br label %while.cond65, !dbg !6235, !llvm.loop !6258

while.end:                                        ; preds = %while.cond65
  br label %if.end91, !dbg !6260

if.else78:                                        ; preds = %while.body
  %72 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6261
  %bp79 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %72, i32 0, i32 17, !dbg !6263
  %73 = load %struct.BPoint*, %struct.BPoint** %bp79, align 8, !dbg !6263
  store %struct.BPoint* %73, %struct.BPoint** %bp, align 8, !dbg !6264
  %74 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6265
  %pntsu80 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %74, i32 0, i32 6, !dbg !6266
  %75 = load i32, i32* %pntsu80, align 8, !dbg !6266
  %76 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6267
  %pntsv81 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %76, i32 0, i32 7, !dbg !6268
  %77 = load i32, i32* %pntsv81, align 4, !dbg !6268
  %mul82 = mul nsw i32 %75, %77, !dbg !6269
  store i32 %mul82, i32* %a, align 4, !dbg !6270
  br label %while.cond83, !dbg !6271

while.cond83:                                     ; preds = %while.body86, %if.else78
  %78 = load i32, i32* %a, align 4, !dbg !6272
  %dec84 = add nsw i32 %78, -1, !dbg !6272
  store i32 %dec84, i32* %a, align 4, !dbg !6272
  %tobool85 = icmp ne i32 %78, 0, !dbg !6271
  br i1 %tobool85, label %while.body86, label %while.end90, !dbg !6271

while.body86:                                     ; preds = %while.cond83
  %79 = load float*, float** %co, align 8, !dbg !6273
  %80 = load float*, float** %fp, align 8, !dbg !6275
  call void @copy_v3_v3(float* %79, float* %80), !dbg !6276
  %81 = load float*, float** %fp, align 8, !dbg !6277
  %add.ptr87 = getelementptr inbounds float, float* %81, i64 4, !dbg !6277
  store float* %add.ptr87, float** %fp, align 8, !dbg !6277
  %82 = load float*, float** %co, align 8, !dbg !6278
  %add.ptr88 = getelementptr inbounds float, float* %82, i64 3, !dbg !6278
  store float* %add.ptr88, float** %co, align 8, !dbg !6278
  %83 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6279
  %incdec.ptr89 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %83, i32 1, !dbg !6279
  store %struct.BPoint* %incdec.ptr89, %struct.BPoint** %bp, align 8, !dbg !6279
  br label %while.cond83, !dbg !6271, !llvm.loop !6280

while.end90:                                      ; preds = %while.cond83
  br label %if.end91

if.end91:                                         ; preds = %while.end90, %while.end
  %84 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6282
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %84, i32 0, i32 0, !dbg !6283
  %85 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !6283
  store %struct.Nurb* %85, %struct.Nurb** %nu, align 8, !dbg !6284
  br label %while.cond, !dbg !6219, !llvm.loop !6285

while.end92:                                      ; preds = %while.cond
  br label %if.end93, !dbg !6287

if.end93:                                         ; preds = %while.end92, %lor.lhs.false51
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %for.end
  %86 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !6288
  store [3 x float]* %86, [3 x float]** %retval, align 8, !dbg !6289
  br label %return, !dbg !6289

return:                                           ; preds = %if.end94, %if.then28
  %87 = load [3 x float]*, [3 x float]** %retval, align 8, !dbg !6290
  ret [3 x float]* %87, !dbg !6290
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_key_convert_from_vertcos(%struct.Object* %ob, %struct.KeyBlock* %kb, [3 x float]* %vertCos) #0 !dbg !6291 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %kb.addr = alloca %struct.KeyBlock*, align 8
  %vertCos.addr = alloca [3 x float]*, align 8
  %co = alloca float*, align 8
  %fp = alloca float*, align 8
  %tot = alloca i32, align 4
  %a = alloca i32, align 4
  %elemsize = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %lt = alloca %struct.Lattice*, align 8
  %cu = alloca %struct.Curve*, align 8
  %cu67 = alloca %struct.Curve*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %i = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6294, metadata !DIExpression()), !dbg !6295
  store %struct.KeyBlock* %kb, %struct.KeyBlock** %kb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb.addr, metadata !6296, metadata !DIExpression()), !dbg !6297
  store [3 x float]* %vertCos, [3 x float]** %vertCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertCos.addr, metadata !6298, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.declare(metadata float** %co, metadata !6300, metadata !DIExpression()), !dbg !6301
  %0 = load [3 x float]*, [3 x float]** %vertCos.addr, align 8, !dbg !6302
  %1 = bitcast [3 x float]* %0 to float*, !dbg !6303
  store float* %1, float** %co, align 8, !dbg !6301
  call void @llvm.dbg.declare(metadata float** %fp, metadata !6304, metadata !DIExpression()), !dbg !6305
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !6306, metadata !DIExpression()), !dbg !6307
  store i32 0, i32* %tot, align 4, !dbg !6307
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6308, metadata !DIExpression()), !dbg !6309
  call void @llvm.dbg.declare(metadata i32* %elemsize, metadata !6310, metadata !DIExpression()), !dbg !6311
  %2 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !6312
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %2, i32 0, i32 10, !dbg !6314
  %3 = load i8*, i8** %data, align 8, !dbg !6314
  %tobool = icmp ne i8* %3, null, !dbg !6312
  br i1 %tobool, label %if.then, label %if.end, !dbg !6315

if.then:                                          ; preds = %entry
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6316
  %5 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !6317
  %data1 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %5, i32 0, i32 10, !dbg !6318
  %6 = load i8*, i8** %data1, align 8, !dbg !6318
  call void %4(i8* %6), !dbg !6316
  br label %if.end, !dbg !6316

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6319
  %type = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 3, !dbg !6321
  %8 = load i16, i16* %type, align 8, !dbg !6321
  %conv = sext i16 %8 to i32, !dbg !6319
  %cmp = icmp eq i32 %conv, 1, !dbg !6322
  br i1 %cmp, label %if.then3, label %if.else, !dbg !6323

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !6324, metadata !DIExpression()), !dbg !6326
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6327
  %data4 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 19, !dbg !6328
  %10 = load i8*, i8** %data4, align 8, !dbg !6328
  %11 = bitcast i8* %10 to %struct.Mesh*, !dbg !6329
  store %struct.Mesh* %11, %struct.Mesh** %me, align 8, !dbg !6326
  %12 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6330
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 26, !dbg !6331
  %13 = load i32, i32* %totvert, align 8, !dbg !6331
  store i32 %13, i32* %tot, align 4, !dbg !6332
  %14 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6333
  %key = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 4, !dbg !6334
  %15 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !6334
  %elemsize5 = getelementptr inbounds %struct.Key, %struct.Key* %15, i32 0, i32 4, !dbg !6335
  %16 = load i32, i32* %elemsize5, align 8, !dbg !6335
  store i32 %16, i32* %elemsize, align 4, !dbg !6336
  br label %if.end33, !dbg !6337

if.else:                                          ; preds = %if.end
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6338
  %type6 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 3, !dbg !6340
  %18 = load i16, i16* %type6, align 8, !dbg !6340
  %conv7 = sext i16 %18 to i32, !dbg !6338
  %cmp8 = icmp eq i32 %conv7, 22, !dbg !6341
  br i1 %cmp8, label %if.then10, label %if.else18, !dbg !6342

if.then10:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !6343, metadata !DIExpression()), !dbg !6345
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6346
  %data11 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 19, !dbg !6347
  %20 = load i8*, i8** %data11, align 8, !dbg !6347
  %21 = bitcast i8* %20 to %struct.Lattice*, !dbg !6348
  store %struct.Lattice* %21, %struct.Lattice** %lt, align 8, !dbg !6345
  %22 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !6349
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %22, i32 0, i32 2, !dbg !6350
  %23 = load i16, i16* %pntsu, align 8, !dbg !6350
  %conv12 = sext i16 %23 to i32, !dbg !6349
  %24 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !6351
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %24, i32 0, i32 3, !dbg !6352
  %25 = load i16, i16* %pntsv, align 2, !dbg !6352
  %conv13 = sext i16 %25 to i32, !dbg !6351
  %mul = mul nsw i32 %conv12, %conv13, !dbg !6353
  %26 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !6354
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %26, i32 0, i32 4, !dbg !6355
  %27 = load i16, i16* %pntsw, align 4, !dbg !6355
  %conv14 = sext i16 %27 to i32, !dbg !6354
  %mul15 = mul nsw i32 %mul, %conv14, !dbg !6356
  store i32 %mul15, i32* %tot, align 4, !dbg !6357
  %28 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !6358
  %key16 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %28, i32 0, i32 23, !dbg !6359
  %29 = load %struct.Key*, %struct.Key** %key16, align 8, !dbg !6359
  %elemsize17 = getelementptr inbounds %struct.Key, %struct.Key* %29, i32 0, i32 4, !dbg !6360
  %30 = load i32, i32* %elemsize17, align 8, !dbg !6360
  store i32 %30, i32* %elemsize, align 4, !dbg !6361
  br label %if.end32, !dbg !6362

if.else18:                                        ; preds = %if.else
  %31 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6363
  %type19 = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 3, !dbg !6363
  %32 = load i16, i16* %type19, align 8, !dbg !6363
  %conv20 = sext i16 %32 to i32, !dbg !6363
  %cmp21 = icmp eq i32 %conv20, 2, !dbg !6363
  br i1 %cmp21, label %if.then27, label %lor.lhs.false, !dbg !6363

lor.lhs.false:                                    ; preds = %if.else18
  %33 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6363
  %type23 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 3, !dbg !6363
  %34 = load i16, i16* %type23, align 8, !dbg !6363
  %conv24 = sext i16 %34 to i32, !dbg !6363
  %cmp25 = icmp eq i32 %conv24, 3, !dbg !6363
  br i1 %cmp25, label %if.then27, label %if.end31, !dbg !6365

if.then27:                                        ; preds = %lor.lhs.false, %if.else18
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !6366, metadata !DIExpression()), !dbg !6368
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6369
  %data28 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 19, !dbg !6370
  %36 = load i8*, i8** %data28, align 8, !dbg !6370
  %37 = bitcast i8* %36 to %struct.Curve*, !dbg !6371
  store %struct.Curve* %37, %struct.Curve** %cu, align 8, !dbg !6368
  %38 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6372
  %key29 = getelementptr inbounds %struct.Curve, %struct.Curve* %38, i32 0, i32 9, !dbg !6373
  %39 = load %struct.Key*, %struct.Key** %key29, align 8, !dbg !6373
  %elemsize30 = getelementptr inbounds %struct.Key, %struct.Key* %39, i32 0, i32 4, !dbg !6374
  %40 = load i32, i32* %elemsize30, align 8, !dbg !6374
  store i32 %40, i32* %elemsize, align 4, !dbg !6375
  %41 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6376
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %41, i32 0, i32 3, !dbg !6377
  %call = call i32 @BKE_nurbList_verts_count(%struct.ListBase* %nurb), !dbg !6378
  store i32 %call, i32* %tot, align 4, !dbg !6379
  br label %if.end31, !dbg !6380

if.end31:                                         ; preds = %if.then27, %lor.lhs.false
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then10
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then3
  %42 = load i32, i32* %tot, align 4, !dbg !6381
  %cmp34 = icmp eq i32 %42, 0, !dbg !6383
  br i1 %cmp34, label %if.then36, label %if.end38, !dbg !6384

if.then36:                                        ; preds = %if.end33
  %43 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !6385
  %data37 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %43, i32 0, i32 10, !dbg !6387
  store i8* null, i8** %data37, align 8, !dbg !6388
  br label %if.end105, !dbg !6389

if.end38:                                         ; preds = %if.end33
  %44 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6390
  %45 = load i32, i32* %tot, align 4, !dbg !6391
  %46 = load i32, i32* %elemsize, align 4, !dbg !6392
  %mul39 = mul nsw i32 %45, %46, !dbg !6393
  %conv40 = sext i32 %mul39 to i64, !dbg !6391
  %call41 = call i8* %44(i64 %conv40, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8, i64 0, i64 0)), !dbg !6390
  %47 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !6394
  %data42 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %47, i32 0, i32 10, !dbg !6395
  store i8* %call41, i8** %data42, align 8, !dbg !6396
  %48 = bitcast i8* %call41 to float*, !dbg !6394
  store float* %48, float** %fp, align 8, !dbg !6397
  %49 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6398
  %type43 = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 3, !dbg !6398
  %50 = load i16, i16* %type43, align 8, !dbg !6398
  %conv44 = sext i16 %50 to i32, !dbg !6398
  %cmp45 = icmp eq i32 %conv44, 1, !dbg !6398
  br i1 %cmp45, label %if.then52, label %lor.lhs.false47, !dbg !6398

lor.lhs.false47:                                  ; preds = %if.end38
  %51 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6398
  %type48 = getelementptr inbounds %struct.Object, %struct.Object* %51, i32 0, i32 3, !dbg !6398
  %52 = load i16, i16* %type48, align 8, !dbg !6398
  %conv49 = sext i16 %52 to i32, !dbg !6398
  %cmp50 = icmp eq i32 %conv49, 22, !dbg !6398
  br i1 %cmp50, label %if.then52, label %if.else56, !dbg !6400

if.then52:                                        ; preds = %lor.lhs.false47, %if.end38
  store i32 0, i32* %a, align 4, !dbg !6401
  br label %for.cond, !dbg !6404

for.cond:                                         ; preds = %for.inc, %if.then52
  %53 = load i32, i32* %a, align 4, !dbg !6405
  %54 = load i32, i32* %tot, align 4, !dbg !6407
  %cmp53 = icmp slt i32 %53, %54, !dbg !6408
  br i1 %cmp53, label %for.body, label %for.end, !dbg !6409

for.body:                                         ; preds = %for.cond
  %55 = load float*, float** %fp, align 8, !dbg !6410
  %56 = load float*, float** %co, align 8, !dbg !6412
  call void @copy_v3_v3(float* %55, float* %56), !dbg !6413
  br label %for.inc, !dbg !6414

for.inc:                                          ; preds = %for.body
  %57 = load i32, i32* %a, align 4, !dbg !6415
  %inc = add nsw i32 %57, 1, !dbg !6415
  store i32 %inc, i32* %a, align 4, !dbg !6415
  %58 = load float*, float** %fp, align 8, !dbg !6416
  %add.ptr = getelementptr inbounds float, float* %58, i64 3, !dbg !6416
  store float* %add.ptr, float** %fp, align 8, !dbg !6416
  %59 = load float*, float** %co, align 8, !dbg !6417
  %add.ptr55 = getelementptr inbounds float, float* %59, i64 3, !dbg !6417
  store float* %add.ptr55, float** %co, align 8, !dbg !6417
  br label %for.cond, !dbg !6418, !llvm.loop !6419

for.end:                                          ; preds = %for.cond
  br label %if.end105, !dbg !6421

if.else56:                                        ; preds = %lor.lhs.false47
  %60 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6422
  %type57 = getelementptr inbounds %struct.Object, %struct.Object* %60, i32 0, i32 3, !dbg !6422
  %61 = load i16, i16* %type57, align 8, !dbg !6422
  %conv58 = sext i16 %61 to i32, !dbg !6422
  %cmp59 = icmp eq i32 %conv58, 2, !dbg !6422
  br i1 %cmp59, label %if.then66, label %lor.lhs.false61, !dbg !6422

lor.lhs.false61:                                  ; preds = %if.else56
  %62 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6422
  %type62 = getelementptr inbounds %struct.Object, %struct.Object* %62, i32 0, i32 3, !dbg !6422
  %63 = load i16, i16* %type62, align 8, !dbg !6422
  %conv63 = sext i16 %63 to i32, !dbg !6422
  %cmp64 = icmp eq i32 %conv63, 3, !dbg !6422
  br i1 %cmp64, label %if.then66, label %if.end104, !dbg !6424

if.then66:                                        ; preds = %lor.lhs.false61, %if.else56
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu67, metadata !6425, metadata !DIExpression()), !dbg !6427
  %64 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6428
  %data68 = getelementptr inbounds %struct.Object, %struct.Object* %64, i32 0, i32 19, !dbg !6429
  %65 = load i8*, i8** %data68, align 8, !dbg !6429
  %66 = bitcast i8* %65 to %struct.Curve*, !dbg !6430
  store %struct.Curve* %66, %struct.Curve** %cu67, align 8, !dbg !6427
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !6431, metadata !DIExpression()), !dbg !6432
  %67 = load %struct.Curve*, %struct.Curve** %cu67, align 8, !dbg !6433
  %nurb69 = getelementptr inbounds %struct.Curve, %struct.Curve* %67, i32 0, i32 3, !dbg !6434
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb69, i32 0, i32 0, !dbg !6435
  %68 = load i8*, i8** %first, align 8, !dbg !6435
  %69 = bitcast i8* %68 to %struct.Nurb*, !dbg !6433
  store %struct.Nurb* %69, %struct.Nurb** %nu, align 8, !dbg !6432
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !6436, metadata !DIExpression()), !dbg !6437
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !6438, metadata !DIExpression()), !dbg !6439
  br label %while.cond, !dbg !6440

while.cond:                                       ; preds = %if.end102, %if.then66
  %70 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6441
  %tobool70 = icmp ne %struct.Nurb* %70, null, !dbg !6440
  br i1 %tobool70, label %while.body, label %while.end103, !dbg !6440

while.body:                                       ; preds = %while.cond
  %71 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6442
  %bezt71 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %71, i32 0, i32 18, !dbg !6445
  %72 = load %struct.BezTriple*, %struct.BezTriple** %bezt71, align 8, !dbg !6445
  %tobool72 = icmp ne %struct.BezTriple* %72, null, !dbg !6442
  br i1 %tobool72, label %if.then73, label %if.else89, !dbg !6446

if.then73:                                        ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6447, metadata !DIExpression()), !dbg !6449
  %73 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6450
  %bezt74 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %73, i32 0, i32 18, !dbg !6451
  %74 = load %struct.BezTriple*, %struct.BezTriple** %bezt74, align 8, !dbg !6451
  store %struct.BezTriple* %74, %struct.BezTriple** %bezt, align 8, !dbg !6452
  %75 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6453
  %pntsu75 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %75, i32 0, i32 6, !dbg !6454
  %76 = load i32, i32* %pntsu75, align 8, !dbg !6454
  store i32 %76, i32* %a, align 4, !dbg !6455
  br label %while.cond76, !dbg !6456

while.cond76:                                     ; preds = %for.end87, %if.then73
  %77 = load i32, i32* %a, align 4, !dbg !6457
  %dec = add nsw i32 %77, -1, !dbg !6457
  store i32 %dec, i32* %a, align 4, !dbg !6457
  %tobool77 = icmp ne i32 %77, 0, !dbg !6456
  br i1 %tobool77, label %while.body78, label %while.end, !dbg !6456

while.body78:                                     ; preds = %while.cond76
  store i32 0, i32* %i, align 4, !dbg !6458
  br label %for.cond79, !dbg !6461

for.cond79:                                       ; preds = %for.inc85, %while.body78
  %78 = load i32, i32* %i, align 4, !dbg !6462
  %cmp80 = icmp slt i32 %78, 3, !dbg !6464
  br i1 %cmp80, label %for.body82, label %for.end87, !dbg !6465

for.body82:                                       ; preds = %for.cond79
  %79 = load float*, float** %fp, align 8, !dbg !6466
  %80 = load float*, float** %co, align 8, !dbg !6468
  call void @copy_v3_v3(float* %79, float* %80), !dbg !6469
  %81 = load float*, float** %fp, align 8, !dbg !6470
  %add.ptr83 = getelementptr inbounds float, float* %81, i64 3, !dbg !6470
  store float* %add.ptr83, float** %fp, align 8, !dbg !6470
  %82 = load float*, float** %co, align 8, !dbg !6471
  %add.ptr84 = getelementptr inbounds float, float* %82, i64 3, !dbg !6471
  store float* %add.ptr84, float** %co, align 8, !dbg !6471
  br label %for.inc85, !dbg !6472

for.inc85:                                        ; preds = %for.body82
  %83 = load i32, i32* %i, align 4, !dbg !6473
  %inc86 = add nsw i32 %83, 1, !dbg !6473
  store i32 %inc86, i32* %i, align 4, !dbg !6473
  br label %for.cond79, !dbg !6474, !llvm.loop !6475

for.end87:                                        ; preds = %for.cond79
  %84 = load float*, float** %fp, align 8, !dbg !6477
  %add.ptr88 = getelementptr inbounds float, float* %84, i64 3, !dbg !6477
  store float* %add.ptr88, float** %fp, align 8, !dbg !6477
  %85 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6478
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %85, i32 1, !dbg !6478
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !6478
  br label %while.cond76, !dbg !6456, !llvm.loop !6479

while.end:                                        ; preds = %while.cond76
  br label %if.end102, !dbg !6481

if.else89:                                        ; preds = %while.body
  %86 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6482
  %bp90 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %86, i32 0, i32 17, !dbg !6484
  %87 = load %struct.BPoint*, %struct.BPoint** %bp90, align 8, !dbg !6484
  store %struct.BPoint* %87, %struct.BPoint** %bp, align 8, !dbg !6485
  %88 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6486
  %pntsu91 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %88, i32 0, i32 6, !dbg !6487
  %89 = load i32, i32* %pntsu91, align 8, !dbg !6487
  %90 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6488
  %pntsv92 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %90, i32 0, i32 7, !dbg !6489
  %91 = load i32, i32* %pntsv92, align 4, !dbg !6489
  %mul93 = mul nsw i32 %89, %91, !dbg !6490
  store i32 %mul93, i32* %a, align 4, !dbg !6491
  br label %while.cond94, !dbg !6492

while.cond94:                                     ; preds = %while.body97, %if.else89
  %92 = load i32, i32* %a, align 4, !dbg !6493
  %dec95 = add nsw i32 %92, -1, !dbg !6493
  store i32 %dec95, i32* %a, align 4, !dbg !6493
  %tobool96 = icmp ne i32 %92, 0, !dbg !6492
  br i1 %tobool96, label %while.body97, label %while.end101, !dbg !6492

while.body97:                                     ; preds = %while.cond94
  %93 = load float*, float** %fp, align 8, !dbg !6494
  %94 = load float*, float** %co, align 8, !dbg !6496
  call void @copy_v3_v3(float* %93, float* %94), !dbg !6497
  %95 = load float*, float** %fp, align 8, !dbg !6498
  %add.ptr98 = getelementptr inbounds float, float* %95, i64 4, !dbg !6498
  store float* %add.ptr98, float** %fp, align 8, !dbg !6498
  %96 = load float*, float** %co, align 8, !dbg !6499
  %add.ptr99 = getelementptr inbounds float, float* %96, i64 3, !dbg !6499
  store float* %add.ptr99, float** %co, align 8, !dbg !6499
  %97 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6500
  %incdec.ptr100 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %97, i32 1, !dbg !6500
  store %struct.BPoint* %incdec.ptr100, %struct.BPoint** %bp, align 8, !dbg !6500
  br label %while.cond94, !dbg !6492, !llvm.loop !6501

while.end101:                                     ; preds = %while.cond94
  br label %if.end102

if.end102:                                        ; preds = %while.end101, %while.end
  %98 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6503
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %98, i32 0, i32 0, !dbg !6504
  %99 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !6504
  store %struct.Nurb* %99, %struct.Nurb** %nu, align 8, !dbg !6505
  br label %while.cond, !dbg !6440, !llvm.loop !6506

while.end103:                                     ; preds = %while.cond
  br label %if.end104, !dbg !6508

if.end104:                                        ; preds = %while.end103, %lor.lhs.false61
  br label %if.end105

if.end105:                                        ; preds = %if.then36, %if.end104, %for.end
  ret void, !dbg !6509
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_key_convert_from_offset(%struct.Object* %ob, %struct.KeyBlock* %kb, [3 x float]* %ofs) #0 !dbg !6510 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %kb.addr = alloca %struct.KeyBlock*, align 8
  %ofs.addr = alloca [3 x float]*, align 8
  %a = alloca i32, align 4
  %co = alloca float*, align 8
  %fp = alloca float*, align 8
  %cu = alloca %struct.Curve*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %i = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6511, metadata !DIExpression()), !dbg !6512
  store %struct.KeyBlock* %kb, %struct.KeyBlock** %kb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb.addr, metadata !6513, metadata !DIExpression()), !dbg !6514
  store [3 x float]* %ofs, [3 x float]** %ofs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %ofs.addr, metadata !6515, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6517, metadata !DIExpression()), !dbg !6518
  call void @llvm.dbg.declare(metadata float** %co, metadata !6519, metadata !DIExpression()), !dbg !6520
  %0 = load [3 x float]*, [3 x float]** %ofs.addr, align 8, !dbg !6521
  %1 = bitcast [3 x float]* %0 to float*, !dbg !6522
  store float* %1, float** %co, align 8, !dbg !6520
  call void @llvm.dbg.declare(metadata float** %fp, metadata !6523, metadata !DIExpression()), !dbg !6524
  %2 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !6525
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %2, i32 0, i32 10, !dbg !6526
  %3 = load i8*, i8** %data, align 8, !dbg !6526
  %4 = bitcast i8* %3 to float*, !dbg !6525
  store float* %4, float** %fp, align 8, !dbg !6524
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6527
  %type = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 3, !dbg !6527
  %6 = load i16, i16* %type, align 8, !dbg !6527
  %conv = sext i16 %6 to i32, !dbg !6527
  %cmp = icmp eq i32 %conv, 1, !dbg !6527
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6527

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6527
  %type2 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 3, !dbg !6527
  %8 = load i16, i16* %type2, align 8, !dbg !6527
  %conv3 = sext i16 %8 to i32, !dbg !6527
  %cmp4 = icmp eq i32 %conv3, 22, !dbg !6527
  br i1 %cmp4, label %if.then, label %if.else, !dbg !6529

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %a, align 4, !dbg !6530
  br label %for.cond, !dbg !6533

for.cond:                                         ; preds = %for.inc, %if.then
  %9 = load i32, i32* %a, align 4, !dbg !6534
  %10 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !6536
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %10, i32 0, i32 8, !dbg !6537
  %11 = load i32, i32* %totelem, align 8, !dbg !6537
  %cmp6 = icmp slt i32 %9, %11, !dbg !6538
  br i1 %cmp6, label %for.body, label %for.end, !dbg !6539

for.body:                                         ; preds = %for.cond
  %12 = load float*, float** %fp, align 8, !dbg !6540
  %13 = load float*, float** %co, align 8, !dbg !6542
  call void @add_v3_v3(float* %12, float* %13), !dbg !6543
  br label %for.inc, !dbg !6544

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %a, align 4, !dbg !6545
  %inc = add nsw i32 %14, 1, !dbg !6545
  store i32 %inc, i32* %a, align 4, !dbg !6545
  %15 = load float*, float** %fp, align 8, !dbg !6546
  %add.ptr = getelementptr inbounds float, float* %15, i64 3, !dbg !6546
  store float* %add.ptr, float** %fp, align 8, !dbg !6546
  %16 = load float*, float** %co, align 8, !dbg !6547
  %add.ptr8 = getelementptr inbounds float, float* %16, i64 3, !dbg !6547
  store float* %add.ptr8, float** %co, align 8, !dbg !6547
  br label %for.cond, !dbg !6548, !llvm.loop !6549

for.end:                                          ; preds = %for.cond
  br label %if.end50, !dbg !6551

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6552
  %type9 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 3, !dbg !6552
  %18 = load i16, i16* %type9, align 8, !dbg !6552
  %conv10 = sext i16 %18 to i32, !dbg !6552
  %cmp11 = icmp eq i32 %conv10, 2, !dbg !6552
  br i1 %cmp11, label %if.then18, label %lor.lhs.false13, !dbg !6552

lor.lhs.false13:                                  ; preds = %if.else
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6552
  %type14 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 3, !dbg !6552
  %20 = load i16, i16* %type14, align 8, !dbg !6552
  %conv15 = sext i16 %20 to i32, !dbg !6552
  %cmp16 = icmp eq i32 %conv15, 3, !dbg !6552
  br i1 %cmp16, label %if.then18, label %if.end49, !dbg !6554

if.then18:                                        ; preds = %lor.lhs.false13, %if.else
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !6555, metadata !DIExpression()), !dbg !6557
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6558
  %data19 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 19, !dbg !6559
  %22 = load i8*, i8** %data19, align 8, !dbg !6559
  %23 = bitcast i8* %22 to %struct.Curve*, !dbg !6560
  store %struct.Curve* %23, %struct.Curve** %cu, align 8, !dbg !6557
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !6561, metadata !DIExpression()), !dbg !6562
  %24 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6563
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %24, i32 0, i32 3, !dbg !6564
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb, i32 0, i32 0, !dbg !6565
  %25 = load i8*, i8** %first, align 8, !dbg !6565
  %26 = bitcast i8* %25 to %struct.Nurb*, !dbg !6563
  store %struct.Nurb* %26, %struct.Nurb** %nu, align 8, !dbg !6562
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !6566, metadata !DIExpression()), !dbg !6567
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !6568, metadata !DIExpression()), !dbg !6569
  br label %while.cond, !dbg !6570

while.cond:                                       ; preds = %if.end, %if.then18
  %27 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6571
  %tobool = icmp ne %struct.Nurb* %27, null, !dbg !6570
  br i1 %tobool, label %while.body, label %while.end48, !dbg !6570

while.body:                                       ; preds = %while.cond
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6572
  %bezt20 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 18, !dbg !6575
  %29 = load %struct.BezTriple*, %struct.BezTriple** %bezt20, align 8, !dbg !6575
  %tobool21 = icmp ne %struct.BezTriple* %29, null, !dbg !6572
  br i1 %tobool21, label %if.then22, label %if.else37, !dbg !6576

if.then22:                                        ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6577, metadata !DIExpression()), !dbg !6579
  %30 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6580
  %bezt23 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %30, i32 0, i32 18, !dbg !6581
  %31 = load %struct.BezTriple*, %struct.BezTriple** %bezt23, align 8, !dbg !6581
  store %struct.BezTriple* %31, %struct.BezTriple** %bezt, align 8, !dbg !6582
  %32 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6583
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %32, i32 0, i32 6, !dbg !6584
  %33 = load i32, i32* %pntsu, align 8, !dbg !6584
  store i32 %33, i32* %a, align 4, !dbg !6585
  br label %while.cond24, !dbg !6586

while.cond24:                                     ; preds = %for.end35, %if.then22
  %34 = load i32, i32* %a, align 4, !dbg !6587
  %dec = add nsw i32 %34, -1, !dbg !6587
  store i32 %dec, i32* %a, align 4, !dbg !6587
  %tobool25 = icmp ne i32 %34, 0, !dbg !6586
  br i1 %tobool25, label %while.body26, label %while.end, !dbg !6586

while.body26:                                     ; preds = %while.cond24
  store i32 0, i32* %i, align 4, !dbg !6588
  br label %for.cond27, !dbg !6591

for.cond27:                                       ; preds = %for.inc33, %while.body26
  %35 = load i32, i32* %i, align 4, !dbg !6592
  %cmp28 = icmp slt i32 %35, 3, !dbg !6594
  br i1 %cmp28, label %for.body30, label %for.end35, !dbg !6595

for.body30:                                       ; preds = %for.cond27
  %36 = load float*, float** %fp, align 8, !dbg !6596
  %37 = load float*, float** %co, align 8, !dbg !6598
  call void @add_v3_v3(float* %36, float* %37), !dbg !6599
  %38 = load float*, float** %fp, align 8, !dbg !6600
  %add.ptr31 = getelementptr inbounds float, float* %38, i64 3, !dbg !6600
  store float* %add.ptr31, float** %fp, align 8, !dbg !6600
  %39 = load float*, float** %co, align 8, !dbg !6601
  %add.ptr32 = getelementptr inbounds float, float* %39, i64 3, !dbg !6601
  store float* %add.ptr32, float** %co, align 8, !dbg !6601
  br label %for.inc33, !dbg !6602

for.inc33:                                        ; preds = %for.body30
  %40 = load i32, i32* %i, align 4, !dbg !6603
  %inc34 = add nsw i32 %40, 1, !dbg !6603
  store i32 %inc34, i32* %i, align 4, !dbg !6603
  br label %for.cond27, !dbg !6604, !llvm.loop !6605

for.end35:                                        ; preds = %for.cond27
  %41 = load float*, float** %fp, align 8, !dbg !6607
  %add.ptr36 = getelementptr inbounds float, float* %41, i64 3, !dbg !6607
  store float* %add.ptr36, float** %fp, align 8, !dbg !6607
  %42 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6608
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %42, i32 1, !dbg !6608
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !6608
  br label %while.cond24, !dbg !6586, !llvm.loop !6609

while.end:                                        ; preds = %while.cond24
  br label %if.end, !dbg !6611

if.else37:                                        ; preds = %while.body
  %43 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6612
  %bp38 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 17, !dbg !6614
  %44 = load %struct.BPoint*, %struct.BPoint** %bp38, align 8, !dbg !6614
  store %struct.BPoint* %44, %struct.BPoint** %bp, align 8, !dbg !6615
  %45 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6616
  %pntsu39 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %45, i32 0, i32 6, !dbg !6617
  %46 = load i32, i32* %pntsu39, align 8, !dbg !6617
  %47 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6618
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %47, i32 0, i32 7, !dbg !6619
  %48 = load i32, i32* %pntsv, align 4, !dbg !6619
  %mul = mul nsw i32 %46, %48, !dbg !6620
  store i32 %mul, i32* %a, align 4, !dbg !6621
  br label %while.cond40, !dbg !6622

while.cond40:                                     ; preds = %while.body43, %if.else37
  %49 = load i32, i32* %a, align 4, !dbg !6623
  %dec41 = add nsw i32 %49, -1, !dbg !6623
  store i32 %dec41, i32* %a, align 4, !dbg !6623
  %tobool42 = icmp ne i32 %49, 0, !dbg !6622
  br i1 %tobool42, label %while.body43, label %while.end47, !dbg !6622

while.body43:                                     ; preds = %while.cond40
  %50 = load float*, float** %fp, align 8, !dbg !6624
  %51 = load float*, float** %co, align 8, !dbg !6626
  call void @add_v3_v3(float* %50, float* %51), !dbg !6627
  %52 = load float*, float** %fp, align 8, !dbg !6628
  %add.ptr44 = getelementptr inbounds float, float* %52, i64 4, !dbg !6628
  store float* %add.ptr44, float** %fp, align 8, !dbg !6628
  %53 = load float*, float** %co, align 8, !dbg !6629
  %add.ptr45 = getelementptr inbounds float, float* %53, i64 3, !dbg !6629
  store float* %add.ptr45, float** %co, align 8, !dbg !6629
  %54 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6630
  %incdec.ptr46 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %54, i32 1, !dbg !6630
  store %struct.BPoint* %incdec.ptr46, %struct.BPoint** %bp, align 8, !dbg !6630
  br label %while.cond40, !dbg !6622, !llvm.loop !6631

while.end47:                                      ; preds = %while.cond40
  br label %if.end

if.end:                                           ; preds = %while.end47, %while.end
  %55 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6633
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %55, i32 0, i32 0, !dbg !6634
  %56 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !6634
  store %struct.Nurb* %56, %struct.Nurb** %nu, align 8, !dbg !6635
  br label %while.cond, !dbg !6570, !llvm.loop !6636

while.end48:                                      ; preds = %while.cond
  br label %if.end49, !dbg !6638

if.end49:                                         ; preds = %while.end48, %lor.lhs.false13
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %for.end
  ret void, !dbg !6639
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !6640 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6641, metadata !DIExpression()), !dbg !6642
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6643, metadata !DIExpression()), !dbg !6644
  %0 = load float*, float** %a.addr, align 8, !dbg !6645
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6645
  %1 = load float, float* %arrayidx, align 4, !dbg !6645
  %2 = load float*, float** %r.addr, align 8, !dbg !6646
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6646
  %3 = load float, float* %arrayidx1, align 4, !dbg !6647
  %add = fadd float %3, %1, !dbg !6647
  store float %add, float* %arrayidx1, align 4, !dbg !6647
  %4 = load float*, float** %a.addr, align 8, !dbg !6648
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6648
  %5 = load float, float* %arrayidx2, align 4, !dbg !6648
  %6 = load float*, float** %r.addr, align 8, !dbg !6649
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6649
  %7 = load float, float* %arrayidx3, align 4, !dbg !6650
  %add4 = fadd float %7, %5, !dbg !6650
  store float %add4, float* %arrayidx3, align 4, !dbg !6650
  %8 = load float*, float** %a.addr, align 8, !dbg !6651
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6651
  %9 = load float, float* %arrayidx5, align 4, !dbg !6651
  %10 = load float*, float** %r.addr, align 8, !dbg !6652
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !6652
  %11 = load float, float* %arrayidx6, align 4, !dbg !6653
  %add7 = fadd float %11, %9, !dbg !6653
  store float %add7, float* %arrayidx6, align 4, !dbg !6653
  ret void, !dbg !6654
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_keyblock_move(%struct.Object* %ob, i32 %org_index, i32 %new_index) #0 !dbg !6655 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  %org_index.addr = alloca i32, align 4
  %new_index.addr = alloca i32, align 4
  %key = alloca %struct.Key*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  %act_index = alloca i32, align 4
  %totkey = alloca i32, align 4
  %i = alloca i32, align 4
  %rev = alloca i8, align 1
  %in_range = alloca i8, align 1
  %other_kb = alloca %struct.KeyBlock*, align 8
  %sw_ap = alloca float, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6658, metadata !DIExpression()), !dbg !6659
  store i32 %org_index, i32* %org_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %org_index.addr, metadata !6660, metadata !DIExpression()), !dbg !6661
  store i32 %new_index, i32* %new_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_index.addr, metadata !6662, metadata !DIExpression()), !dbg !6663
  call void @llvm.dbg.declare(metadata %struct.Key** %key, metadata !6664, metadata !DIExpression()), !dbg !6665
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6666
  %call = call %struct.Key* @BKE_key_from_object(%struct.Object* %0), !dbg !6667
  store %struct.Key* %call, %struct.Key** %key, align 8, !dbg !6665
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !6668, metadata !DIExpression()), !dbg !6669
  call void @llvm.dbg.declare(metadata i32* %act_index, metadata !6670, metadata !DIExpression()), !dbg !6671
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6672
  %shapenr = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 115, !dbg !6673
  %2 = load i16, i16* %shapenr, align 2, !dbg !6673
  %conv = sext i16 %2 to i32, !dbg !6672
  %sub = sub nsw i32 %conv, 1, !dbg !6674
  store i32 %sub, i32* %act_index, align 4, !dbg !6671
  call void @llvm.dbg.declare(metadata i32* %totkey, metadata !6675, metadata !DIExpression()), !dbg !6676
  %3 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !6677
  %totkey1 = getelementptr inbounds %struct.Key, %struct.Key* %3, i32 0, i32 10, !dbg !6678
  %4 = load i16, i16* %totkey1, align 2, !dbg !6678
  %conv2 = sext i16 %4 to i32, !dbg !6677
  store i32 %conv2, i32* %totkey, align 4, !dbg !6676
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6679, metadata !DIExpression()), !dbg !6680
  call void @llvm.dbg.declare(metadata i8* %rev, metadata !6681, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.declare(metadata i8* %in_range, metadata !6683, metadata !DIExpression()), !dbg !6684
  store i8 0, i8* %in_range, align 1, !dbg !6684
  %5 = load i32, i32* %org_index.addr, align 4, !dbg !6685
  %cmp = icmp slt i32 %5, 0, !dbg !6687
  br i1 %cmp, label %if.then, label %if.end, !dbg !6688

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %act_index, align 4, !dbg !6689
  store i32 %6, i32* %org_index.addr, align 4, !dbg !6691
  br label %if.end, !dbg !6692

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %new_index.addr, align 4, !dbg !6693
  %cmp4 = icmp slt i32 %7, 0, !dbg !6693
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !6696

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %new_index.addr, align 4, !dbg !6693
  br label %if.end17, !dbg !6693

if.else:                                          ; preds = %if.end
  %8 = load i32, i32* %new_index.addr, align 4, !dbg !6697
  %9 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !6697
  %totkey7 = getelementptr inbounds %struct.Key, %struct.Key* %9, i32 0, i32 10, !dbg !6697
  %10 = load i16, i16* %totkey7, align 2, !dbg !6697
  %conv8 = sext i16 %10 to i32, !dbg !6697
  %sub9 = sub nsw i32 %conv8, 1, !dbg !6697
  %cmp10 = icmp sgt i32 %8, %sub9, !dbg !6697
  br i1 %cmp10, label %if.then12, label %if.end16, !dbg !6693

if.then12:                                        ; preds = %if.else
  %11 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !6697
  %totkey13 = getelementptr inbounds %struct.Key, %struct.Key* %11, i32 0, i32 10, !dbg !6697
  %12 = load i16, i16* %totkey13, align 2, !dbg !6697
  %conv14 = sext i16 %12 to i32, !dbg !6697
  %sub15 = sub nsw i32 %conv14, 1, !dbg !6697
  store i32 %sub15, i32* %new_index.addr, align 4, !dbg !6697
  br label %if.end16, !dbg !6697

if.end16:                                         ; preds = %if.then12, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then6
  %13 = load i32, i32* %org_index.addr, align 4, !dbg !6699
  %cmp18 = icmp slt i32 %13, 0, !dbg !6699
  br i1 %cmp18, label %if.then20, label %if.else21, !dbg !6702

if.then20:                                        ; preds = %if.end17
  store i32 0, i32* %org_index.addr, align 4, !dbg !6699
  br label %if.end32, !dbg !6699

if.else21:                                        ; preds = %if.end17
  %14 = load i32, i32* %org_index.addr, align 4, !dbg !6703
  %15 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !6703
  %totkey22 = getelementptr inbounds %struct.Key, %struct.Key* %15, i32 0, i32 10, !dbg !6703
  %16 = load i16, i16* %totkey22, align 2, !dbg !6703
  %conv23 = sext i16 %16 to i32, !dbg !6703
  %sub24 = sub nsw i32 %conv23, 1, !dbg !6703
  %cmp25 = icmp sgt i32 %14, %sub24, !dbg !6703
  br i1 %cmp25, label %if.then27, label %if.end31, !dbg !6699

if.then27:                                        ; preds = %if.else21
  %17 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !6703
  %totkey28 = getelementptr inbounds %struct.Key, %struct.Key* %17, i32 0, i32 10, !dbg !6703
  %18 = load i16, i16* %totkey28, align 2, !dbg !6703
  %conv29 = sext i16 %18 to i32, !dbg !6703
  %sub30 = sub nsw i32 %conv29, 1, !dbg !6703
  store i32 %sub30, i32* %org_index.addr, align 4, !dbg !6703
  br label %if.end31, !dbg !6703

if.end31:                                         ; preds = %if.then27, %if.else21
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then20
  %19 = load i32, i32* %new_index.addr, align 4, !dbg !6705
  %20 = load i32, i32* %org_index.addr, align 4, !dbg !6707
  %cmp33 = icmp eq i32 %19, %20, !dbg !6708
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !6709

if.then35:                                        ; preds = %if.end32
  store i8 0, i8* %retval, align 1, !dbg !6710
  br label %return, !dbg !6710

if.end36:                                         ; preds = %if.end32
  %21 = load i32, i32* %new_index.addr, align 4, !dbg !6712
  %22 = load i32, i32* %org_index.addr, align 4, !dbg !6713
  %sub37 = sub nsw i32 %21, %22, !dbg !6714
  %cmp38 = icmp slt i32 %sub37, 0, !dbg !6715
  %23 = zext i1 %cmp38 to i64, !dbg !6716
  %cond = select i1 %cmp38, i32 1, i32 0, !dbg !6716
  %conv40 = trunc i32 %cond to i8, !dbg !6716
  store i8 %conv40, i8* %rev, align 1, !dbg !6717
  %24 = load i8, i8* %rev, align 1, !dbg !6718
  %conv41 = zext i8 %24 to i32, !dbg !6718
  %tobool = icmp ne i32 %conv41, 0, !dbg !6718
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6718

cond.true:                                        ; preds = %if.end36
  %25 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !6720
  %block = getelementptr inbounds %struct.Key, %struct.Key* %25, i32 0, i32 6, !dbg !6721
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 1, !dbg !6722
  %26 = load i8*, i8** %last, align 8, !dbg !6722
  br label %cond.end, !dbg !6718

cond.false:                                       ; preds = %if.end36
  %27 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !6723
  %block42 = getelementptr inbounds %struct.Key, %struct.Key* %27, i32 0, i32 6, !dbg !6724
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block42, i32 0, i32 0, !dbg !6725
  %28 = load i8*, i8** %first, align 8, !dbg !6725
  br label %cond.end, !dbg !6718

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond43 = phi i8* [ %26, %cond.true ], [ %28, %cond.false ], !dbg !6718
  %29 = bitcast i8* %cond43 to %struct.KeyBlock*, !dbg !6726
  store %struct.KeyBlock* %29, %struct.KeyBlock** %kb, align 8, !dbg !6727
  %30 = load i8, i8* %rev, align 1, !dbg !6728
  %conv44 = zext i8 %30 to i32, !dbg !6728
  %tobool45 = icmp ne i32 %conv44, 0, !dbg !6728
  br i1 %tobool45, label %cond.true46, label %cond.false48, !dbg !6728

cond.true46:                                      ; preds = %cond.end
  %31 = load i32, i32* %totkey, align 4, !dbg !6729
  %sub47 = sub nsw i32 %31, 1, !dbg !6730
  br label %cond.end49, !dbg !6728

cond.false48:                                     ; preds = %cond.end
  br label %cond.end49, !dbg !6728

cond.end49:                                       ; preds = %cond.false48, %cond.true46
  %cond50 = phi i32 [ %sub47, %cond.true46 ], [ 0, %cond.false48 ], !dbg !6728
  store i32 %cond50, i32* %i, align 4, !dbg !6731
  br label %for.cond, !dbg !6732

for.cond:                                         ; preds = %cond.end120, %cond.end49
  %32 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !6733
  %tobool51 = icmp ne %struct.KeyBlock* %32, null, !dbg !6735
  br i1 %tobool51, label %for.body, label %for.end, !dbg !6735

for.body:                                         ; preds = %for.cond
  %33 = load i32, i32* %i, align 4, !dbg !6736
  %34 = load i32, i32* %org_index.addr, align 4, !dbg !6739
  %cmp52 = icmp eq i32 %33, %34, !dbg !6740
  br i1 %cmp52, label %if.then54, label %if.else55, !dbg !6741

if.then54:                                        ; preds = %for.body
  store i8 1, i8* %in_range, align 1, !dbg !6742
  br label %if.end60, !dbg !6744

if.else55:                                        ; preds = %for.body
  %35 = load i32, i32* %i, align 4, !dbg !6745
  %36 = load i32, i32* %new_index.addr, align 4, !dbg !6747
  %cmp56 = icmp eq i32 %35, %36, !dbg !6748
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !6749

if.then58:                                        ; preds = %if.else55
  store i8 0, i8* %in_range, align 1, !dbg !6750
  br label %if.end59, !dbg !6752

if.end59:                                         ; preds = %if.then58, %if.else55
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then54
  %37 = load i8, i8* %in_range, align 1, !dbg !6753
  %tobool61 = icmp ne i8 %37, 0, !dbg !6753
  br i1 %tobool61, label %if.then62, label %if.end73, !dbg !6755

if.then62:                                        ; preds = %if.end60
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %other_kb, metadata !6756, metadata !DIExpression()), !dbg !6758
  %38 = load i8, i8* %rev, align 1, !dbg !6759
  %conv63 = zext i8 %38 to i32, !dbg !6759
  %tobool64 = icmp ne i32 %conv63, 0, !dbg !6759
  br i1 %tobool64, label %cond.true65, label %cond.false66, !dbg !6759

cond.true65:                                      ; preds = %if.then62
  %39 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !6760
  %prev = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %39, i32 0, i32 1, !dbg !6761
  %40 = load %struct.KeyBlock*, %struct.KeyBlock** %prev, align 8, !dbg !6761
  br label %cond.end67, !dbg !6759

cond.false66:                                     ; preds = %if.then62
  %41 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !6762
  %next = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %41, i32 0, i32 0, !dbg !6763
  %42 = load %struct.KeyBlock*, %struct.KeyBlock** %next, align 8, !dbg !6763
  br label %cond.end67, !dbg !6759

cond.end67:                                       ; preds = %cond.false66, %cond.true65
  %cond68 = phi %struct.KeyBlock* [ %40, %cond.true65 ], [ %42, %cond.false66 ], !dbg !6759
  store %struct.KeyBlock* %cond68, %struct.KeyBlock** %other_kb, align 8, !dbg !6758
  %43 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !6764
  %block69 = getelementptr inbounds %struct.Key, %struct.Key* %43, i32 0, i32 6, !dbg !6765
  %44 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !6766
  %45 = bitcast %struct.KeyBlock* %44 to i8*, !dbg !6766
  %46 = load %struct.KeyBlock*, %struct.KeyBlock** %other_kb, align 8, !dbg !6767
  %47 = bitcast %struct.KeyBlock* %46 to i8*, !dbg !6767
  call void @BLI_listbase_swaplinks(%struct.ListBase* %block69, i8* %45, i8* %47), !dbg !6768
  call void @llvm.dbg.declare(metadata float* %sw_ap, metadata !6769, metadata !DIExpression()), !dbg !6771
  %48 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !6771
  %pos = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %48, i32 0, i32 2, !dbg !6771
  %49 = load float, float* %pos, align 8, !dbg !6771
  store float %49, float* %sw_ap, align 4, !dbg !6771
  %50 = load %struct.KeyBlock*, %struct.KeyBlock** %other_kb, align 8, !dbg !6771
  %pos70 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %50, i32 0, i32 2, !dbg !6771
  %51 = load float, float* %pos70, align 8, !dbg !6771
  %52 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !6771
  %pos71 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %52, i32 0, i32 2, !dbg !6771
  store float %51, float* %pos71, align 8, !dbg !6771
  %53 = load float, float* %sw_ap, align 4, !dbg !6771
  %54 = load %struct.KeyBlock*, %struct.KeyBlock** %other_kb, align 8, !dbg !6771
  %pos72 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %54, i32 0, i32 2, !dbg !6771
  store float %53, float* %pos72, align 8, !dbg !6771
  %55 = load %struct.KeyBlock*, %struct.KeyBlock** %other_kb, align 8, !dbg !6772
  store %struct.KeyBlock* %55, %struct.KeyBlock** %kb, align 8, !dbg !6773
  br label %if.end73, !dbg !6774

if.end73:                                         ; preds = %cond.end67, %if.end60
  %56 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !6775
  %relative = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %56, i32 0, i32 6, !dbg !6777
  %57 = load i16, i16* %relative, align 4, !dbg !6777
  %conv74 = sext i16 %57 to i32, !dbg !6775
  %58 = load i32, i32* %org_index.addr, align 4, !dbg !6778
  %cmp75 = icmp eq i32 %conv74, %58, !dbg !6779
  br i1 %cmp75, label %if.then77, label %if.else80, !dbg !6780

if.then77:                                        ; preds = %if.end73
  %59 = load i32, i32* %new_index.addr, align 4, !dbg !6781
  %conv78 = trunc i32 %59 to i16, !dbg !6781
  %60 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !6783
  %relative79 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %60, i32 0, i32 6, !dbg !6784
  store i16 %conv78, i16* %relative79, align 4, !dbg !6785
  br label %if.end105, !dbg !6786

if.else80:                                        ; preds = %if.end73
  %61 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !6787
  %relative81 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %61, i32 0, i32 6, !dbg !6789
  %62 = load i16, i16* %relative81, align 4, !dbg !6789
  %conv82 = sext i16 %62 to i32, !dbg !6787
  %63 = load i32, i32* %org_index.addr, align 4, !dbg !6790
  %cmp83 = icmp slt i32 %conv82, %63, !dbg !6791
  br i1 %cmp83, label %land.lhs.true, label %if.else91, !dbg !6792

land.lhs.true:                                    ; preds = %if.else80
  %64 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !6793
  %relative85 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %64, i32 0, i32 6, !dbg !6794
  %65 = load i16, i16* %relative85, align 4, !dbg !6794
  %conv86 = sext i16 %65 to i32, !dbg !6793
  %66 = load i32, i32* %new_index.addr, align 4, !dbg !6795
  %cmp87 = icmp sge i32 %conv86, %66, !dbg !6796
  br i1 %cmp87, label %if.then89, label %if.else91, !dbg !6797

if.then89:                                        ; preds = %land.lhs.true
  %67 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !6798
  %relative90 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %67, i32 0, i32 6, !dbg !6800
  %68 = load i16, i16* %relative90, align 4, !dbg !6801
  %inc = add i16 %68, 1, !dbg !6801
  store i16 %inc, i16* %relative90, align 4, !dbg !6801
  br label %if.end104, !dbg !6802

if.else91:                                        ; preds = %land.lhs.true, %if.else80
  %69 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !6803
  %relative92 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %69, i32 0, i32 6, !dbg !6805
  %70 = load i16, i16* %relative92, align 4, !dbg !6805
  %conv93 = sext i16 %70 to i32, !dbg !6803
  %71 = load i32, i32* %org_index.addr, align 4, !dbg !6806
  %cmp94 = icmp sgt i32 %conv93, %71, !dbg !6807
  br i1 %cmp94, label %land.lhs.true96, label %if.end103, !dbg !6808

land.lhs.true96:                                  ; preds = %if.else91
  %72 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !6809
  %relative97 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %72, i32 0, i32 6, !dbg !6810
  %73 = load i16, i16* %relative97, align 4, !dbg !6810
  %conv98 = sext i16 %73 to i32, !dbg !6809
  %74 = load i32, i32* %new_index.addr, align 4, !dbg !6811
  %cmp99 = icmp sle i32 %conv98, %74, !dbg !6812
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !6813

if.then101:                                       ; preds = %land.lhs.true96
  %75 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !6814
  %relative102 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %75, i32 0, i32 6, !dbg !6816
  %76 = load i16, i16* %relative102, align 4, !dbg !6817
  %dec = add i16 %76, -1, !dbg !6817
  store i16 %dec, i16* %relative102, align 4, !dbg !6817
  br label %if.end103, !dbg !6818

if.end103:                                        ; preds = %if.then101, %land.lhs.true96, %if.else91
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then89
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.then77
  br label %for.inc, !dbg !6819

for.inc:                                          ; preds = %if.end105
  %77 = load i8, i8* %rev, align 1, !dbg !6820
  %conv106 = zext i8 %77 to i32, !dbg !6820
  %tobool107 = icmp ne i32 %conv106, 0, !dbg !6820
  br i1 %tobool107, label %cond.true108, label %cond.false110, !dbg !6820

cond.true108:                                     ; preds = %for.inc
  %78 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !6821
  %prev109 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %78, i32 0, i32 1, !dbg !6822
  %79 = load %struct.KeyBlock*, %struct.KeyBlock** %prev109, align 8, !dbg !6822
  br label %cond.end112, !dbg !6820

cond.false110:                                    ; preds = %for.inc
  %80 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !6823
  %next111 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %80, i32 0, i32 0, !dbg !6824
  %81 = load %struct.KeyBlock*, %struct.KeyBlock** %next111, align 8, !dbg !6824
  br label %cond.end112, !dbg !6820

cond.end112:                                      ; preds = %cond.false110, %cond.true108
  %cond113 = phi %struct.KeyBlock* [ %79, %cond.true108 ], [ %81, %cond.false110 ], !dbg !6820
  store %struct.KeyBlock* %cond113, %struct.KeyBlock** %kb, align 8, !dbg !6825
  %82 = load i8, i8* %rev, align 1, !dbg !6826
  %conv114 = zext i8 %82 to i32, !dbg !6826
  %tobool115 = icmp ne i32 %conv114, 0, !dbg !6826
  br i1 %tobool115, label %cond.true116, label %cond.false118, !dbg !6826

cond.true116:                                     ; preds = %cond.end112
  %83 = load i32, i32* %i, align 4, !dbg !6827
  %dec117 = add nsw i32 %83, -1, !dbg !6827
  store i32 %dec117, i32* %i, align 4, !dbg !6827
  br label %cond.end120, !dbg !6826

cond.false118:                                    ; preds = %cond.end112
  %84 = load i32, i32* %i, align 4, !dbg !6828
  %inc119 = add nsw i32 %84, 1, !dbg !6828
  store i32 %inc119, i32* %i, align 4, !dbg !6828
  br label %cond.end120, !dbg !6826

cond.end120:                                      ; preds = %cond.false118, %cond.true116
  %cond121 = phi i32 [ %83, %cond.true116 ], [ %84, %cond.false118 ], !dbg !6826
  br label %for.cond, !dbg !6829, !llvm.loop !6830

for.end:                                          ; preds = %for.cond
  %85 = load i32, i32* %org_index.addr, align 4, !dbg !6832
  %86 = load i32, i32* %act_index, align 4, !dbg !6834
  %cmp122 = icmp eq i32 %85, %86, !dbg !6835
  br i1 %cmp122, label %if.then124, label %if.else127, !dbg !6836

if.then124:                                       ; preds = %for.end
  %87 = load i32, i32* %new_index.addr, align 4, !dbg !6837
  %add = add nsw i32 %87, 1, !dbg !6839
  %conv125 = trunc i32 %add to i16, !dbg !6837
  %88 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6840
  %shapenr126 = getelementptr inbounds %struct.Object, %struct.Object* %88, i32 0, i32 115, !dbg !6841
  store i16 %conv125, i16* %shapenr126, align 2, !dbg !6842
  br label %if.end147, !dbg !6843

if.else127:                                       ; preds = %for.end
  %89 = load i32, i32* %act_index, align 4, !dbg !6844
  %90 = load i32, i32* %org_index.addr, align 4, !dbg !6846
  %cmp128 = icmp slt i32 %89, %90, !dbg !6847
  br i1 %cmp128, label %land.lhs.true130, label %if.else136, !dbg !6848

land.lhs.true130:                                 ; preds = %if.else127
  %91 = load i32, i32* %act_index, align 4, !dbg !6849
  %92 = load i32, i32* %new_index.addr, align 4, !dbg !6850
  %cmp131 = icmp sge i32 %91, %92, !dbg !6851
  br i1 %cmp131, label %if.then133, label %if.else136, !dbg !6852

if.then133:                                       ; preds = %land.lhs.true130
  %93 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6853
  %shapenr134 = getelementptr inbounds %struct.Object, %struct.Object* %93, i32 0, i32 115, !dbg !6855
  %94 = load i16, i16* %shapenr134, align 2, !dbg !6856
  %inc135 = add i16 %94, 1, !dbg !6856
  store i16 %inc135, i16* %shapenr134, align 2, !dbg !6856
  br label %if.end146, !dbg !6857

if.else136:                                       ; preds = %land.lhs.true130, %if.else127
  %95 = load i32, i32* %act_index, align 4, !dbg !6858
  %96 = load i32, i32* %org_index.addr, align 4, !dbg !6860
  %cmp137 = icmp sgt i32 %95, %96, !dbg !6861
  br i1 %cmp137, label %land.lhs.true139, label %if.end145, !dbg !6862

land.lhs.true139:                                 ; preds = %if.else136
  %97 = load i32, i32* %act_index, align 4, !dbg !6863
  %98 = load i32, i32* %new_index.addr, align 4, !dbg !6864
  %cmp140 = icmp sle i32 %97, %98, !dbg !6865
  br i1 %cmp140, label %if.then142, label %if.end145, !dbg !6866

if.then142:                                       ; preds = %land.lhs.true139
  %99 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6867
  %shapenr143 = getelementptr inbounds %struct.Object, %struct.Object* %99, i32 0, i32 115, !dbg !6869
  %100 = load i16, i16* %shapenr143, align 2, !dbg !6870
  %dec144 = add i16 %100, -1, !dbg !6870
  store i16 %dec144, i16* %shapenr143, align 2, !dbg !6870
  br label %if.end145, !dbg !6871

if.end145:                                        ; preds = %if.then142, %land.lhs.true139, %if.else136
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.then133
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.then124
  %101 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !6872
  %block148 = getelementptr inbounds %struct.Key, %struct.Key* %101, i32 0, i32 6, !dbg !6873
  %first149 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block148, i32 0, i32 0, !dbg !6874
  %102 = load i8*, i8** %first149, align 8, !dbg !6874
  %103 = bitcast i8* %102 to %struct.KeyBlock*, !dbg !6872
  %104 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !6875
  %refkey = getelementptr inbounds %struct.Key, %struct.Key* %104, i32 0, i32 2, !dbg !6876
  store %struct.KeyBlock* %103, %struct.KeyBlock** %refkey, align 8, !dbg !6877
  store i8 1, i8* %retval, align 1, !dbg !6878
  br label %return, !dbg !6878

return:                                           ; preds = %if.end147, %if.then35
  %105 = load i8, i8* %retval, align 1, !dbg !6879
  ret i8 %105, !dbg !6879
}

declare dso_local void @BLI_listbase_swaplinks(%struct.ListBase*, i8*, i8*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !6880 {
entry:
  %retval = alloca i8*, align 8
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !6885, metadata !DIExpression()), !dbg !6886
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !6887, metadata !DIExpression()), !dbg !6888
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !6889, metadata !DIExpression()), !dbg !6890
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6891, metadata !DIExpression()), !dbg !6892
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6893
  %1 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !6893
  %2 = load i8, i8* %itype.addr, align 1, !dbg !6893
  %3 = load i8*, i8** %data.addr, align 8, !dbg !6893
  %call = call zeroext i8 @BM_iter_init(%struct.BMIter* %0, %struct.BMesh* %1, i8 zeroext %2, i8* %3), !dbg !6893
  %tobool = icmp ne i8 %call, 0, !dbg !6893
  br i1 %tobool, label %if.then, label %if.else, !dbg !6895

if.then:                                          ; preds = %entry
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6896
  %call1 = call i8* @BM_iter_step(%struct.BMIter* %4), !dbg !6898
  store i8* %call1, i8** %retval, align 8, !dbg !6899
  br label %return, !dbg !6899

if.else:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !6900
  br label %return, !dbg !6900

return:                                           ; preds = %if.else, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !6902
  ret i8* %5, !dbg !6902
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_step(%struct.BMIter* %iter) #0 !dbg !6903 {
entry:
  %iter.addr = alloca %struct.BMIter*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !6906, metadata !DIExpression()), !dbg !6907
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6908
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %0, i32 0, i32 2, !dbg !6909
  %1 = load i8* (i8*)*, i8* (i8*)** %step, align 8, !dbg !6909
  %2 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6910
  %3 = bitcast %struct.BMIter* %2 to i8*, !dbg !6910
  %call = call i8* %1(i8* %3), !dbg !6908
  ret i8* %call, !dbg !6911
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_iter_init(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !6912 {
entry:
  %retval = alloca i8, align 1
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !6915, metadata !DIExpression()), !dbg !6916
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !6917, metadata !DIExpression()), !dbg !6918
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !6919, metadata !DIExpression()), !dbg !6920
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6921, metadata !DIExpression()), !dbg !6922
  %0 = load i8, i8* %itype.addr, align 1, !dbg !6923
  %1 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6924
  %itype1 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %1, i32 0, i32 4, !dbg !6925
  store i8 %0, i8* %itype1, align 4, !dbg !6926
  %2 = load i8, i8* %itype.addr, align 1, !dbg !6927
  %conv = zext i8 %2 to i32, !dbg !6928
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb10
    i32 4, label %sw.bb17
    i32 5, label %sw.bb21
    i32 6, label %sw.bb26
    i32 7, label %sw.bb31
    i32 8, label %sw.bb35
    i32 9, label %sw.bb40
    i32 10, label %sw.bb44
    i32 11, label %sw.bb49
    i32 13, label %sw.bb54
    i32 14, label %sw.bb58
  ], !dbg !6929

sw.bb:                                            ; preds = %entry
  %3 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6930
  %begin = getelementptr inbounds %struct.BMIter, %struct.BMIter* %3, i32 0, i32 1, !dbg !6932
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin, align 8, !dbg !6933
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6934
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %4, i32 0, i32 2, !dbg !6935
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step, align 8, !dbg !6936
  %5 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !6937
  %vpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 9, !dbg !6938
  %6 = load %struct.BLI_mempool*, %struct.BLI_mempool** %vpool, align 8, !dbg !6938
  %7 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6939
  %data2 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %7, i32 0, i32 0, !dbg !6940
  %elem_of_mesh = bitcast %union.anon.0* %data2 to %struct.BMIter__elem_of_mesh*, !dbg !6941
  %pooliter = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh, i32 0, i32 0, !dbg !6942
  %pool = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter, i32 0, i32 0, !dbg !6943
  store %struct.BLI_mempool* %6, %struct.BLI_mempool** %pool, align 8, !dbg !6944
  br label %sw.epilog, !dbg !6945

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6946
  %begin4 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %8, i32 0, i32 1, !dbg !6947
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin4, align 8, !dbg !6948
  %9 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6949
  %step5 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %9, i32 0, i32 2, !dbg !6950
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step5, align 8, !dbg !6951
  %10 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !6952
  %epool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 10, !dbg !6953
  %11 = load %struct.BLI_mempool*, %struct.BLI_mempool** %epool, align 8, !dbg !6953
  %12 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6954
  %data6 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %12, i32 0, i32 0, !dbg !6955
  %elem_of_mesh7 = bitcast %union.anon.0* %data6 to %struct.BMIter__elem_of_mesh*, !dbg !6956
  %pooliter8 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh7, i32 0, i32 0, !dbg !6957
  %pool9 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter8, i32 0, i32 0, !dbg !6958
  store %struct.BLI_mempool* %11, %struct.BLI_mempool** %pool9, align 8, !dbg !6959
  br label %sw.epilog, !dbg !6960

sw.bb10:                                          ; preds = %entry
  %13 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6961
  %begin11 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %13, i32 0, i32 1, !dbg !6962
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin11, align 8, !dbg !6963
  %14 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6964
  %step12 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %14, i32 0, i32 2, !dbg !6965
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step12, align 8, !dbg !6966
  %15 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !6967
  %fpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 12, !dbg !6968
  %16 = load %struct.BLI_mempool*, %struct.BLI_mempool** %fpool, align 8, !dbg !6968
  %17 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6969
  %data13 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %17, i32 0, i32 0, !dbg !6970
  %elem_of_mesh14 = bitcast %union.anon.0* %data13 to %struct.BMIter__elem_of_mesh*, !dbg !6971
  %pooliter15 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh14, i32 0, i32 0, !dbg !6972
  %pool16 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter15, i32 0, i32 0, !dbg !6973
  store %struct.BLI_mempool* %16, %struct.BLI_mempool** %pool16, align 8, !dbg !6974
  br label %sw.epilog, !dbg !6975

sw.bb17:                                          ; preds = %entry
  %18 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6976
  %begin18 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %18, i32 0, i32 1, !dbg !6977
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_begin to void (i8*)*), void (i8*)** %begin18, align 8, !dbg !6978
  %19 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6979
  %step19 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %19, i32 0, i32 2, !dbg !6980
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_step to i8* (i8*)*), i8* (i8*)** %step19, align 8, !dbg !6981
  %20 = load i8*, i8** %data.addr, align 8, !dbg !6982
  %21 = bitcast i8* %20 to %struct.BMVert*, !dbg !6983
  %22 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6984
  %data20 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %22, i32 0, i32 0, !dbg !6985
  %edge_of_vert = bitcast %union.anon.0* %data20 to %struct.BMIter__edge_of_vert*, !dbg !6986
  %vdata = getelementptr inbounds %struct.BMIter__edge_of_vert, %struct.BMIter__edge_of_vert* %edge_of_vert, i32 0, i32 0, !dbg !6987
  store %struct.BMVert* %21, %struct.BMVert** %vdata, align 8, !dbg !6988
  br label %sw.epilog, !dbg !6989

sw.bb21:                                          ; preds = %entry
  %23 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6990
  %begin22 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %23, i32 0, i32 1, !dbg !6991
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_begin to void (i8*)*), void (i8*)** %begin22, align 8, !dbg !6992
  %24 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6993
  %step23 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %24, i32 0, i32 2, !dbg !6994
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_step to i8* (i8*)*), i8* (i8*)** %step23, align 8, !dbg !6995
  %25 = load i8*, i8** %data.addr, align 8, !dbg !6996
  %26 = bitcast i8* %25 to %struct.BMVert*, !dbg !6997
  %27 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6998
  %data24 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %27, i32 0, i32 0, !dbg !6999
  %face_of_vert = bitcast %union.anon.0* %data24 to %struct.BMIter__face_of_vert*, !dbg !7000
  %vdata25 = getelementptr inbounds %struct.BMIter__face_of_vert, %struct.BMIter__face_of_vert* %face_of_vert, i32 0, i32 0, !dbg !7001
  store %struct.BMVert* %26, %struct.BMVert** %vdata25, align 8, !dbg !7002
  br label %sw.epilog, !dbg !7003

sw.bb26:                                          ; preds = %entry
  %28 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7004
  %begin27 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %28, i32 0, i32 1, !dbg !7005
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_begin to void (i8*)*), void (i8*)** %begin27, align 8, !dbg !7006
  %29 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7007
  %step28 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %29, i32 0, i32 2, !dbg !7008
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_step to i8* (i8*)*), i8* (i8*)** %step28, align 8, !dbg !7009
  %30 = load i8*, i8** %data.addr, align 8, !dbg !7010
  %31 = bitcast i8* %30 to %struct.BMVert*, !dbg !7011
  %32 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7012
  %data29 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %32, i32 0, i32 0, !dbg !7013
  %loop_of_vert = bitcast %union.anon.0* %data29 to %struct.BMIter__loop_of_vert*, !dbg !7014
  %vdata30 = getelementptr inbounds %struct.BMIter__loop_of_vert, %struct.BMIter__loop_of_vert* %loop_of_vert, i32 0, i32 0, !dbg !7015
  store %struct.BMVert* %31, %struct.BMVert** %vdata30, align 8, !dbg !7016
  br label %sw.epilog, !dbg !7017

sw.bb31:                                          ; preds = %entry
  %33 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7018
  %begin32 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %33, i32 0, i32 1, !dbg !7019
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_begin to void (i8*)*), void (i8*)** %begin32, align 8, !dbg !7020
  %34 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7021
  %step33 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %34, i32 0, i32 2, !dbg !7022
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_step to i8* (i8*)*), i8* (i8*)** %step33, align 8, !dbg !7023
  %35 = load i8*, i8** %data.addr, align 8, !dbg !7024
  %36 = bitcast i8* %35 to %struct.BMEdge*, !dbg !7025
  %37 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7026
  %data34 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %37, i32 0, i32 0, !dbg !7027
  %vert_of_edge = bitcast %union.anon.0* %data34 to %struct.BMIter__vert_of_edge*, !dbg !7028
  %edata = getelementptr inbounds %struct.BMIter__vert_of_edge, %struct.BMIter__vert_of_edge* %vert_of_edge, i32 0, i32 0, !dbg !7029
  store %struct.BMEdge* %36, %struct.BMEdge** %edata, align 8, !dbg !7030
  br label %sw.epilog, !dbg !7031

sw.bb35:                                          ; preds = %entry
  %38 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7032
  %begin36 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %38, i32 0, i32 1, !dbg !7033
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_begin to void (i8*)*), void (i8*)** %begin36, align 8, !dbg !7034
  %39 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7035
  %step37 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %39, i32 0, i32 2, !dbg !7036
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_step to i8* (i8*)*), i8* (i8*)** %step37, align 8, !dbg !7037
  %40 = load i8*, i8** %data.addr, align 8, !dbg !7038
  %41 = bitcast i8* %40 to %struct.BMEdge*, !dbg !7039
  %42 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7040
  %data38 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %42, i32 0, i32 0, !dbg !7041
  %face_of_edge = bitcast %union.anon.0* %data38 to %struct.BMIter__face_of_edge*, !dbg !7042
  %edata39 = getelementptr inbounds %struct.BMIter__face_of_edge, %struct.BMIter__face_of_edge* %face_of_edge, i32 0, i32 0, !dbg !7043
  store %struct.BMEdge* %41, %struct.BMEdge** %edata39, align 8, !dbg !7044
  br label %sw.epilog, !dbg !7045

sw.bb40:                                          ; preds = %entry
  %43 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7046
  %begin41 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %43, i32 0, i32 1, !dbg !7047
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_begin to void (i8*)*), void (i8*)** %begin41, align 8, !dbg !7048
  %44 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7049
  %step42 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %44, i32 0, i32 2, !dbg !7050
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_step to i8* (i8*)*), i8* (i8*)** %step42, align 8, !dbg !7051
  %45 = load i8*, i8** %data.addr, align 8, !dbg !7052
  %46 = bitcast i8* %45 to %struct.BMFace*, !dbg !7053
  %47 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7054
  %data43 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %47, i32 0, i32 0, !dbg !7055
  %vert_of_face = bitcast %union.anon.0* %data43 to %struct.BMIter__vert_of_face*, !dbg !7056
  %pdata = getelementptr inbounds %struct.BMIter__vert_of_face, %struct.BMIter__vert_of_face* %vert_of_face, i32 0, i32 0, !dbg !7057
  store %struct.BMFace* %46, %struct.BMFace** %pdata, align 8, !dbg !7058
  br label %sw.epilog, !dbg !7059

sw.bb44:                                          ; preds = %entry
  %48 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7060
  %begin45 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %48, i32 0, i32 1, !dbg !7061
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_begin to void (i8*)*), void (i8*)** %begin45, align 8, !dbg !7062
  %49 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7063
  %step46 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %49, i32 0, i32 2, !dbg !7064
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_step to i8* (i8*)*), i8* (i8*)** %step46, align 8, !dbg !7065
  %50 = load i8*, i8** %data.addr, align 8, !dbg !7066
  %51 = bitcast i8* %50 to %struct.BMFace*, !dbg !7067
  %52 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7068
  %data47 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %52, i32 0, i32 0, !dbg !7069
  %edge_of_face = bitcast %union.anon.0* %data47 to %struct.BMIter__edge_of_face*, !dbg !7070
  %pdata48 = getelementptr inbounds %struct.BMIter__edge_of_face, %struct.BMIter__edge_of_face* %edge_of_face, i32 0, i32 0, !dbg !7071
  store %struct.BMFace* %51, %struct.BMFace** %pdata48, align 8, !dbg !7072
  br label %sw.epilog, !dbg !7073

sw.bb49:                                          ; preds = %entry
  %53 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7074
  %begin50 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %53, i32 0, i32 1, !dbg !7075
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_begin to void (i8*)*), void (i8*)** %begin50, align 8, !dbg !7076
  %54 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7077
  %step51 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %54, i32 0, i32 2, !dbg !7078
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_step to i8* (i8*)*), i8* (i8*)** %step51, align 8, !dbg !7079
  %55 = load i8*, i8** %data.addr, align 8, !dbg !7080
  %56 = bitcast i8* %55 to %struct.BMFace*, !dbg !7081
  %57 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7082
  %data52 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %57, i32 0, i32 0, !dbg !7083
  %loop_of_face = bitcast %union.anon.0* %data52 to %struct.BMIter__loop_of_face*, !dbg !7084
  %pdata53 = getelementptr inbounds %struct.BMIter__loop_of_face, %struct.BMIter__loop_of_face* %loop_of_face, i32 0, i32 0, !dbg !7085
  store %struct.BMFace* %56, %struct.BMFace** %pdata53, align 8, !dbg !7086
  br label %sw.epilog, !dbg !7087

sw.bb54:                                          ; preds = %entry
  %58 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7088
  %begin55 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %58, i32 0, i32 1, !dbg !7089
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_begin to void (i8*)*), void (i8*)** %begin55, align 8, !dbg !7090
  %59 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7091
  %step56 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %59, i32 0, i32 2, !dbg !7092
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_step to i8* (i8*)*), i8* (i8*)** %step56, align 8, !dbg !7093
  %60 = load i8*, i8** %data.addr, align 8, !dbg !7094
  %61 = bitcast i8* %60 to %struct.BMLoop*, !dbg !7095
  %62 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7096
  %data57 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %62, i32 0, i32 0, !dbg !7097
  %loop_of_loop = bitcast %union.anon.0* %data57 to %struct.BMIter__loop_of_loop*, !dbg !7098
  %ldata = getelementptr inbounds %struct.BMIter__loop_of_loop, %struct.BMIter__loop_of_loop* %loop_of_loop, i32 0, i32 0, !dbg !7099
  store %struct.BMLoop* %61, %struct.BMLoop** %ldata, align 8, !dbg !7100
  br label %sw.epilog, !dbg !7101

sw.bb58:                                          ; preds = %entry
  %63 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7102
  %begin59 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %63, i32 0, i32 1, !dbg !7103
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_begin to void (i8*)*), void (i8*)** %begin59, align 8, !dbg !7104
  %64 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7105
  %step60 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %64, i32 0, i32 2, !dbg !7106
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_step to i8* (i8*)*), i8* (i8*)** %step60, align 8, !dbg !7107
  %65 = load i8*, i8** %data.addr, align 8, !dbg !7108
  %66 = bitcast i8* %65 to %struct.BMEdge*, !dbg !7109
  %67 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7110
  %data61 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %67, i32 0, i32 0, !dbg !7111
  %loop_of_edge = bitcast %union.anon.0* %data61 to %struct.BMIter__loop_of_edge*, !dbg !7112
  %edata62 = getelementptr inbounds %struct.BMIter__loop_of_edge, %struct.BMIter__loop_of_edge* %loop_of_edge, i32 0, i32 0, !dbg !7113
  store %struct.BMEdge* %66, %struct.BMEdge** %edata62, align 8, !dbg !7114
  br label %sw.epilog, !dbg !7115

sw.default:                                       ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !7116
  br label %return, !dbg !7116

sw.epilog:                                        ; preds = %sw.bb58, %sw.bb54, %sw.bb49, %sw.bb44, %sw.bb40, %sw.bb35, %sw.bb31, %sw.bb26, %sw.bb21, %sw.bb17, %sw.bb10, %sw.bb3, %sw.bb
  %68 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7117
  %begin63 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %68, i32 0, i32 1, !dbg !7118
  %69 = load void (i8*)*, void (i8*)** %begin63, align 8, !dbg !7118
  %70 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7119
  %71 = bitcast %struct.BMIter* %70 to i8*, !dbg !7119
  call void %69(i8* %71), !dbg !7117
  store i8 1, i8* %retval, align 1, !dbg !7120
  br label %return, !dbg !7120

return:                                           ; preds = %sw.epilog, %sw.default
  %72 = load i8, i8* %retval, align 1, !dbg !7121
  ret i8 %72, !dbg !7121
}

declare dso_local void @bmiter__elem_of_mesh_begin(%struct.BMIter__elem_of_mesh*) #2

declare dso_local i8* @bmiter__elem_of_mesh_step(%struct.BMIter__elem_of_mesh*) #2

declare dso_local void @bmiter__edge_of_vert_begin(%struct.BMIter__edge_of_vert*) #2

declare dso_local i8* @bmiter__edge_of_vert_step(%struct.BMIter__edge_of_vert*) #2

declare dso_local void @bmiter__face_of_vert_begin(%struct.BMIter__face_of_vert*) #2

declare dso_local i8* @bmiter__face_of_vert_step(%struct.BMIter__face_of_vert*) #2

declare dso_local void @bmiter__loop_of_vert_begin(%struct.BMIter__loop_of_vert*) #2

declare dso_local i8* @bmiter__loop_of_vert_step(%struct.BMIter__loop_of_vert*) #2

declare dso_local void @bmiter__vert_of_edge_begin(%struct.BMIter__vert_of_edge*) #2

declare dso_local i8* @bmiter__vert_of_edge_step(%struct.BMIter__vert_of_edge*) #2

declare dso_local void @bmiter__face_of_edge_begin(%struct.BMIter__face_of_edge*) #2

declare dso_local i8* @bmiter__face_of_edge_step(%struct.BMIter__face_of_edge*) #2

declare dso_local void @bmiter__vert_of_face_begin(%struct.BMIter__vert_of_face*) #2

declare dso_local i8* @bmiter__vert_of_face_step(%struct.BMIter__vert_of_face*) #2

declare dso_local void @bmiter__edge_of_face_begin(%struct.BMIter__edge_of_face*) #2

declare dso_local i8* @bmiter__edge_of_face_step(%struct.BMIter__edge_of_face*) #2

declare dso_local void @bmiter__loop_of_face_begin(%struct.BMIter__loop_of_face*) #2

declare dso_local i8* @bmiter__loop_of_face_step(%struct.BMIter__loop_of_face*) #2

declare dso_local void @bmiter__loop_of_loop_begin(%struct.BMIter__loop_of_loop*) #2

declare dso_local i8* @bmiter__loop_of_loop_step(%struct.BMIter__loop_of_loop*) #2

declare dso_local void @bmiter__loop_of_edge_begin(%struct.BMIter__loop_of_edge*) #2

declare dso_local i8* @bmiter__loop_of_edge_step(%struct.BMIter__loop_of_edge*) #2

declare dso_local i32 @defgroup_name_index(%struct.Object*, i8*) #2

declare dso_local i32 @CustomData_get_offset(%struct.CustomData*, i32) #2

declare dso_local float @defvert_find_weight(%struct.MDeformVert*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @max_ii(i32 %a, i32 %b) #0 !dbg !7122 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !7123, metadata !DIExpression()), !dbg !7124
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !7125, metadata !DIExpression()), !dbg !7126
  %0 = load i32, i32* %b.addr, align 4, !dbg !7127
  %1 = load i32, i32* %a.addr, align 4, !dbg !7128
  %cmp = icmp slt i32 %0, %1, !dbg !7129
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7130

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !7131
  br label %cond.end, !dbg !7130

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !7132
  br label %cond.end, !dbg !7130

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !7130
  ret i32 %cond, !dbg !7133
}

declare dso_local float @BKE_scene_frame_get(%struct.Scene*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @setkeys(float %fac, %struct.ListBase* %lb, %struct.KeyBlock** %k, float* %t, i32 %cycl) #0 !dbg !7134 {
entry:
  %retval = alloca i32, align 4
  %fac.addr = alloca float, align 4
  %lb.addr = alloca %struct.ListBase*, align 8
  %k.addr = alloca %struct.KeyBlock**, align 8
  %t.addr = alloca float*, align 8
  %cycl.addr = alloca i32, align 4
  %k1 = alloca %struct.KeyBlock*, align 8
  %firstkey = alloca %struct.KeyBlock*, align 8
  %d = alloca float, align 4
  %dpos = alloca float, align 4
  %ofs = alloca float, align 4
  %lastpos = alloca float, align 4
  %bsplinetype = alloca i16, align 2
  %t_other = alloca [4 x float], align 16
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !7138, metadata !DIExpression()), !dbg !7139
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !7140, metadata !DIExpression()), !dbg !7141
  store %struct.KeyBlock** %k, %struct.KeyBlock*** %k.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock*** %k.addr, metadata !7142, metadata !DIExpression()), !dbg !7143
  store float* %t, float** %t.addr, align 8
  call void @llvm.dbg.declare(metadata float** %t.addr, metadata !7144, metadata !DIExpression()), !dbg !7145
  store i32 %cycl, i32* %cycl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cycl.addr, metadata !7146, metadata !DIExpression()), !dbg !7147
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %k1, metadata !7148, metadata !DIExpression()), !dbg !7149
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %firstkey, metadata !7150, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.declare(metadata float* %d, metadata !7152, metadata !DIExpression()), !dbg !7153
  call void @llvm.dbg.declare(metadata float* %dpos, metadata !7154, metadata !DIExpression()), !dbg !7155
  call void @llvm.dbg.declare(metadata float* %ofs, metadata !7156, metadata !DIExpression()), !dbg !7157
  store float 0.000000e+00, float* %ofs, align 4, !dbg !7157
  call void @llvm.dbg.declare(metadata float* %lastpos, metadata !7158, metadata !DIExpression()), !dbg !7159
  call void @llvm.dbg.declare(metadata i16* %bsplinetype, metadata !7160, metadata !DIExpression()), !dbg !7161
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !7162
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !7163
  %1 = load i8*, i8** %first, align 8, !dbg !7163
  %2 = bitcast i8* %1 to %struct.KeyBlock*, !dbg !7162
  store %struct.KeyBlock* %2, %struct.KeyBlock** %firstkey, align 8, !dbg !7164
  %3 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !7165
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 1, !dbg !7166
  %4 = load i8*, i8** %last, align 8, !dbg !7166
  %5 = bitcast i8* %4 to %struct.KeyBlock*, !dbg !7165
  store %struct.KeyBlock* %5, %struct.KeyBlock** %k1, align 8, !dbg !7167
  %6 = load %struct.KeyBlock*, %struct.KeyBlock** %k1, align 8, !dbg !7168
  %pos = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %6, i32 0, i32 2, !dbg !7169
  %7 = load float, float* %pos, align 8, !dbg !7169
  store float %7, float* %lastpos, align 4, !dbg !7170
  %8 = load float, float* %lastpos, align 4, !dbg !7171
  %9 = load %struct.KeyBlock*, %struct.KeyBlock** %firstkey, align 8, !dbg !7172
  %pos1 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %9, i32 0, i32 2, !dbg !7173
  %10 = load float, float* %pos1, align 8, !dbg !7173
  %sub = fsub float %8, %10, !dbg !7174
  store float %sub, float* %dpos, align 4, !dbg !7175
  %11 = load float, float* %fac.addr, align 4, !dbg !7176
  %12 = load %struct.KeyBlock*, %struct.KeyBlock** %firstkey, align 8, !dbg !7178
  %pos2 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %12, i32 0, i32 2, !dbg !7179
  %13 = load float, float* %pos2, align 8, !dbg !7179
  %cmp = fcmp olt float %11, %13, !dbg !7180
  br i1 %cmp, label %if.then, label %if.else, !dbg !7181

if.then:                                          ; preds = %entry
  %14 = load %struct.KeyBlock*, %struct.KeyBlock** %firstkey, align 8, !dbg !7182
  %pos3 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %14, i32 0, i32 2, !dbg !7183
  %15 = load float, float* %pos3, align 8, !dbg !7183
  store float %15, float* %fac.addr, align 4, !dbg !7184
  br label %if.end8, !dbg !7185

if.else:                                          ; preds = %entry
  %16 = load float, float* %fac.addr, align 4, !dbg !7186
  %17 = load %struct.KeyBlock*, %struct.KeyBlock** %k1, align 8, !dbg !7188
  %pos4 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %17, i32 0, i32 2, !dbg !7189
  %18 = load float, float* %pos4, align 8, !dbg !7189
  %cmp5 = fcmp ogt float %16, %18, !dbg !7190
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !7191

if.then6:                                         ; preds = %if.else
  %19 = load %struct.KeyBlock*, %struct.KeyBlock** %k1, align 8, !dbg !7192
  %pos7 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %19, i32 0, i32 2, !dbg !7193
  %20 = load float, float* %pos7, align 8, !dbg !7193
  store float %20, float* %fac.addr, align 4, !dbg !7194
  br label %if.end, !dbg !7195

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  %21 = load %struct.KeyBlock*, %struct.KeyBlock** %firstkey, align 8, !dbg !7196
  %22 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7197
  %arrayidx = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %22, i64 3, !dbg !7197
  store %struct.KeyBlock* %21, %struct.KeyBlock** %arrayidx, align 8, !dbg !7198
  %23 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7199
  %arrayidx9 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %23, i64 2, !dbg !7199
  store %struct.KeyBlock* %21, %struct.KeyBlock** %arrayidx9, align 8, !dbg !7200
  %24 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7201
  %arrayidx10 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %24, i64 1, !dbg !7201
  store %struct.KeyBlock* %21, %struct.KeyBlock** %arrayidx10, align 8, !dbg !7202
  %25 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7203
  %arrayidx11 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %25, i64 0, !dbg !7203
  store %struct.KeyBlock* %21, %struct.KeyBlock** %arrayidx11, align 8, !dbg !7204
  store %struct.KeyBlock* %21, %struct.KeyBlock** %k1, align 8, !dbg !7205
  %26 = load %struct.KeyBlock*, %struct.KeyBlock** %k1, align 8, !dbg !7206
  %pos12 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %26, i32 0, i32 2, !dbg !7207
  %27 = load float, float* %pos12, align 8, !dbg !7207
  %28 = load float*, float** %t.addr, align 8, !dbg !7208
  %arrayidx13 = getelementptr inbounds float, float* %28, i64 3, !dbg !7208
  store float %27, float* %arrayidx13, align 4, !dbg !7209
  %29 = load float*, float** %t.addr, align 8, !dbg !7210
  %arrayidx14 = getelementptr inbounds float, float* %29, i64 2, !dbg !7210
  store float %27, float* %arrayidx14, align 4, !dbg !7211
  %30 = load float*, float** %t.addr, align 8, !dbg !7212
  %arrayidx15 = getelementptr inbounds float, float* %30, i64 1, !dbg !7212
  store float %27, float* %arrayidx15, align 4, !dbg !7213
  %31 = load float*, float** %t.addr, align 8, !dbg !7214
  %arrayidx16 = getelementptr inbounds float, float* %31, i64 0, !dbg !7214
  store float %27, float* %arrayidx16, align 4, !dbg !7215
  %32 = load %struct.KeyBlock*, %struct.KeyBlock** %k1, align 8, !dbg !7216
  %next = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %32, i32 0, i32 0, !dbg !7218
  %33 = load %struct.KeyBlock*, %struct.KeyBlock** %next, align 8, !dbg !7218
  %cmp17 = icmp eq %struct.KeyBlock* %33, null, !dbg !7219
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !7220

if.then18:                                        ; preds = %if.end8
  store i32 1, i32* %retval, align 4, !dbg !7221
  br label %return, !dbg !7221

if.end19:                                         ; preds = %if.end8
  %34 = load i32, i32* %cycl.addr, align 4, !dbg !7222
  %tobool = icmp ne i32 %34, 0, !dbg !7222
  br i1 %tobool, label %if.then20, label %if.else64, !dbg !7224

if.then20:                                        ; preds = %if.end19
  %35 = load %struct.KeyBlock*, %struct.KeyBlock** %k1, align 8, !dbg !7225
  %next21 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %35, i32 0, i32 0, !dbg !7227
  %36 = load %struct.KeyBlock*, %struct.KeyBlock** %next21, align 8, !dbg !7227
  %37 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7228
  %arrayidx22 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %37, i64 2, !dbg !7228
  store %struct.KeyBlock* %36, %struct.KeyBlock** %arrayidx22, align 8, !dbg !7229
  %38 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7230
  %arrayidx23 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %38, i64 2, !dbg !7230
  %39 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx23, align 8, !dbg !7230
  %next24 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %39, i32 0, i32 0, !dbg !7231
  %40 = load %struct.KeyBlock*, %struct.KeyBlock** %next24, align 8, !dbg !7231
  %41 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7232
  %arrayidx25 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %41, i64 3, !dbg !7232
  store %struct.KeyBlock* %40, %struct.KeyBlock** %arrayidx25, align 8, !dbg !7233
  %42 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7234
  %arrayidx26 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %42, i64 3, !dbg !7234
  %43 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx26, align 8, !dbg !7234
  %cmp27 = icmp eq %struct.KeyBlock* %43, null, !dbg !7236
  br i1 %cmp27, label %if.then28, label %if.end30, !dbg !7237

if.then28:                                        ; preds = %if.then20
  %44 = load %struct.KeyBlock*, %struct.KeyBlock** %k1, align 8, !dbg !7238
  %45 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7239
  %arrayidx29 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %45, i64 3, !dbg !7239
  store %struct.KeyBlock* %44, %struct.KeyBlock** %arrayidx29, align 8, !dbg !7240
  br label %if.end30, !dbg !7239

if.end30:                                         ; preds = %if.then28, %if.then20
  br label %while.cond, !dbg !7241

while.cond:                                       ; preds = %if.end36, %if.end30
  %46 = load %struct.KeyBlock*, %struct.KeyBlock** %k1, align 8, !dbg !7242
  %tobool31 = icmp ne %struct.KeyBlock* %46, null, !dbg !7241
  br i1 %tobool31, label %while.body, label %while.end, !dbg !7241

while.body:                                       ; preds = %while.cond
  %47 = load %struct.KeyBlock*, %struct.KeyBlock** %k1, align 8, !dbg !7243
  %next32 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %47, i32 0, i32 0, !dbg !7246
  %48 = load %struct.KeyBlock*, %struct.KeyBlock** %next32, align 8, !dbg !7246
  %cmp33 = icmp eq %struct.KeyBlock* %48, null, !dbg !7247
  br i1 %cmp33, label %if.then34, label %if.end36, !dbg !7248

if.then34:                                        ; preds = %while.body
  %49 = load %struct.KeyBlock*, %struct.KeyBlock** %k1, align 8, !dbg !7249
  %50 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7250
  %arrayidx35 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %50, i64 0, !dbg !7250
  store %struct.KeyBlock* %49, %struct.KeyBlock** %arrayidx35, align 8, !dbg !7251
  br label %if.end36, !dbg !7250

if.end36:                                         ; preds = %if.then34, %while.body
  %51 = load %struct.KeyBlock*, %struct.KeyBlock** %k1, align 8, !dbg !7252
  %next37 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %51, i32 0, i32 0, !dbg !7253
  %52 = load %struct.KeyBlock*, %struct.KeyBlock** %next37, align 8, !dbg !7253
  store %struct.KeyBlock* %52, %struct.KeyBlock** %k1, align 8, !dbg !7254
  br label %while.cond, !dbg !7241, !llvm.loop !7255

while.end:                                        ; preds = %while.cond
  %53 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7257
  %arrayidx38 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %53, i64 0, !dbg !7257
  %54 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx38, align 8, !dbg !7257
  %pos39 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %54, i32 0, i32 2, !dbg !7258
  %55 = load float, float* %pos39, align 8, !dbg !7258
  %56 = load float*, float** %t.addr, align 8, !dbg !7259
  %arrayidx40 = getelementptr inbounds float, float* %56, i64 0, !dbg !7259
  store float %55, float* %arrayidx40, align 4, !dbg !7260
  %57 = load float, float* %dpos, align 4, !dbg !7261
  %58 = load float*, float** %t.addr, align 8, !dbg !7262
  %arrayidx41 = getelementptr inbounds float, float* %58, i64 1, !dbg !7262
  %59 = load float, float* %arrayidx41, align 4, !dbg !7263
  %add = fadd float %59, %57, !dbg !7263
  store float %add, float* %arrayidx41, align 4, !dbg !7263
  %60 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7264
  %arrayidx42 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %60, i64 2, !dbg !7264
  %61 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx42, align 8, !dbg !7264
  %pos43 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %61, i32 0, i32 2, !dbg !7265
  %62 = load float, float* %pos43, align 8, !dbg !7265
  %63 = load float, float* %dpos, align 4, !dbg !7266
  %add44 = fadd float %62, %63, !dbg !7267
  %64 = load float*, float** %t.addr, align 8, !dbg !7268
  %arrayidx45 = getelementptr inbounds float, float* %64, i64 2, !dbg !7268
  store float %add44, float* %arrayidx45, align 4, !dbg !7269
  %65 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7270
  %arrayidx46 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %65, i64 3, !dbg !7270
  %66 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx46, align 8, !dbg !7270
  %pos47 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %66, i32 0, i32 2, !dbg !7271
  %67 = load float, float* %pos47, align 8, !dbg !7271
  %68 = load float, float* %dpos, align 4, !dbg !7272
  %add48 = fadd float %67, %68, !dbg !7273
  %69 = load float*, float** %t.addr, align 8, !dbg !7274
  %arrayidx49 = getelementptr inbounds float, float* %69, i64 3, !dbg !7274
  store float %add48, float* %arrayidx49, align 4, !dbg !7275
  %70 = load float, float* %dpos, align 4, !dbg !7276
  %71 = load float, float* %fac.addr, align 4, !dbg !7277
  %add50 = fadd float %71, %70, !dbg !7277
  store float %add50, float* %fac.addr, align 4, !dbg !7277
  %72 = load float, float* %dpos, align 4, !dbg !7278
  store float %72, float* %ofs, align 4, !dbg !7279
  %73 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7280
  %arrayidx51 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %73, i64 3, !dbg !7280
  %74 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx51, align 8, !dbg !7280
  %75 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7282
  %arrayidx52 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %75, i64 1, !dbg !7282
  %76 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx52, align 8, !dbg !7282
  %cmp53 = icmp eq %struct.KeyBlock* %74, %76, !dbg !7283
  br i1 %cmp53, label %if.then54, label %if.end57, !dbg !7284

if.then54:                                        ; preds = %while.end
  %77 = load float, float* %dpos, align 4, !dbg !7285
  %78 = load float*, float** %t.addr, align 8, !dbg !7287
  %arrayidx55 = getelementptr inbounds float, float* %78, i64 3, !dbg !7287
  %79 = load float, float* %arrayidx55, align 4, !dbg !7288
  %add56 = fadd float %79, %77, !dbg !7288
  store float %add56, float* %arrayidx55, align 4, !dbg !7288
  %80 = load float, float* %dpos, align 4, !dbg !7289
  %mul = fmul float 2.000000e+00, %80, !dbg !7290
  store float %mul, float* %ofs, align 4, !dbg !7291
  br label %if.end57, !dbg !7292

if.end57:                                         ; preds = %if.then54, %while.end
  %81 = load float, float* %fac.addr, align 4, !dbg !7293
  %82 = load float*, float** %t.addr, align 8, !dbg !7295
  %arrayidx58 = getelementptr inbounds float, float* %82, i64 1, !dbg !7295
  %83 = load float, float* %arrayidx58, align 4, !dbg !7295
  %cmp59 = fcmp olt float %81, %83, !dbg !7296
  br i1 %cmp59, label %if.then60, label %if.end62, !dbg !7297

if.then60:                                        ; preds = %if.end57
  %84 = load float, float* %dpos, align 4, !dbg !7298
  %85 = load float, float* %fac.addr, align 4, !dbg !7299
  %add61 = fadd float %85, %84, !dbg !7299
  store float %add61, float* %fac.addr, align 4, !dbg !7299
  br label %if.end62, !dbg !7300

if.end62:                                         ; preds = %if.then60, %if.end57
  %86 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7301
  %arrayidx63 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %86, i64 3, !dbg !7301
  %87 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx63, align 8, !dbg !7301
  store %struct.KeyBlock* %87, %struct.KeyBlock** %k1, align 8, !dbg !7302
  br label %if.end83, !dbg !7303

if.else64:                                        ; preds = %if.end19
  %88 = load %struct.KeyBlock*, %struct.KeyBlock** %k1, align 8, !dbg !7304
  %next65 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %88, i32 0, i32 0, !dbg !7306
  %89 = load %struct.KeyBlock*, %struct.KeyBlock** %next65, align 8, !dbg !7306
  %90 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7307
  %arrayidx66 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %90, i64 2, !dbg !7307
  store %struct.KeyBlock* %89, %struct.KeyBlock** %arrayidx66, align 8, !dbg !7308
  %91 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7309
  %arrayidx67 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %91, i64 2, !dbg !7309
  %92 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx67, align 8, !dbg !7309
  %pos68 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %92, i32 0, i32 2, !dbg !7310
  %93 = load float, float* %pos68, align 8, !dbg !7310
  %94 = load float*, float** %t.addr, align 8, !dbg !7311
  %arrayidx69 = getelementptr inbounds float, float* %94, i64 2, !dbg !7311
  store float %93, float* %arrayidx69, align 4, !dbg !7312
  %95 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7313
  %arrayidx70 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %95, i64 2, !dbg !7313
  %96 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx70, align 8, !dbg !7313
  %next71 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %96, i32 0, i32 0, !dbg !7314
  %97 = load %struct.KeyBlock*, %struct.KeyBlock** %next71, align 8, !dbg !7314
  %98 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7315
  %arrayidx72 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %98, i64 3, !dbg !7315
  store %struct.KeyBlock* %97, %struct.KeyBlock** %arrayidx72, align 8, !dbg !7316
  %99 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7317
  %arrayidx73 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %99, i64 3, !dbg !7317
  %100 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx73, align 8, !dbg !7317
  %cmp74 = icmp eq %struct.KeyBlock* %100, null, !dbg !7319
  br i1 %cmp74, label %if.then75, label %if.end78, !dbg !7320

if.then75:                                        ; preds = %if.else64
  %101 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7321
  %arrayidx76 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %101, i64 2, !dbg !7321
  %102 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx76, align 8, !dbg !7321
  %103 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7322
  %arrayidx77 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %103, i64 3, !dbg !7322
  store %struct.KeyBlock* %102, %struct.KeyBlock** %arrayidx77, align 8, !dbg !7323
  br label %if.end78, !dbg !7322

if.end78:                                         ; preds = %if.then75, %if.else64
  %104 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7324
  %arrayidx79 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %104, i64 3, !dbg !7324
  %105 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx79, align 8, !dbg !7324
  %pos80 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %105, i32 0, i32 2, !dbg !7325
  %106 = load float, float* %pos80, align 8, !dbg !7325
  %107 = load float*, float** %t.addr, align 8, !dbg !7326
  %arrayidx81 = getelementptr inbounds float, float* %107, i64 3, !dbg !7326
  store float %106, float* %arrayidx81, align 4, !dbg !7327
  %108 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7328
  %arrayidx82 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %108, i64 3, !dbg !7328
  %109 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx82, align 8, !dbg !7328
  store %struct.KeyBlock* %109, %struct.KeyBlock** %k1, align 8, !dbg !7329
  br label %if.end83

if.end83:                                         ; preds = %if.end78, %if.end62
  br label %while.cond84, !dbg !7330

while.cond84:                                     ; preds = %if.end123, %if.end83
  %110 = load float*, float** %t.addr, align 8, !dbg !7331
  %arrayidx85 = getelementptr inbounds float, float* %110, i64 2, !dbg !7331
  %111 = load float, float* %arrayidx85, align 4, !dbg !7331
  %112 = load float, float* %fac.addr, align 4, !dbg !7332
  %cmp86 = fcmp olt float %111, %112, !dbg !7333
  br i1 %cmp86, label %while.body87, label %while.end124, !dbg !7330

while.body87:                                     ; preds = %while.cond84
  %113 = load %struct.KeyBlock*, %struct.KeyBlock** %k1, align 8, !dbg !7334
  %next88 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %113, i32 0, i32 0, !dbg !7337
  %114 = load %struct.KeyBlock*, %struct.KeyBlock** %next88, align 8, !dbg !7337
  %cmp89 = icmp eq %struct.KeyBlock* %114, null, !dbg !7338
  br i1 %cmp89, label %if.then90, label %if.else101, !dbg !7339

if.then90:                                        ; preds = %while.body87
  %115 = load i32, i32* %cycl.addr, align 4, !dbg !7340
  %tobool91 = icmp ne i32 %115, 0, !dbg !7340
  br i1 %tobool91, label %if.then92, label %if.else94, !dbg !7343

if.then92:                                        ; preds = %if.then90
  %116 = load %struct.KeyBlock*, %struct.KeyBlock** %firstkey, align 8, !dbg !7344
  store %struct.KeyBlock* %116, %struct.KeyBlock** %k1, align 8, !dbg !7346
  %117 = load float, float* %dpos, align 4, !dbg !7347
  %118 = load float, float* %ofs, align 4, !dbg !7348
  %add93 = fadd float %118, %117, !dbg !7348
  store float %add93, float* %ofs, align 4, !dbg !7348
  br label %if.end100, !dbg !7349

if.else94:                                        ; preds = %if.then90
  %119 = load float*, float** %t.addr, align 8, !dbg !7350
  %arrayidx95 = getelementptr inbounds float, float* %119, i64 2, !dbg !7350
  %120 = load float, float* %arrayidx95, align 4, !dbg !7350
  %121 = load float*, float** %t.addr, align 8, !dbg !7352
  %arrayidx96 = getelementptr inbounds float, float* %121, i64 3, !dbg !7352
  %122 = load float, float* %arrayidx96, align 4, !dbg !7352
  %cmp97 = fcmp oeq float %120, %122, !dbg !7353
  br i1 %cmp97, label %if.then98, label %if.end99, !dbg !7354

if.then98:                                        ; preds = %if.else94
  br label %while.end124, !dbg !7355

if.end99:                                         ; preds = %if.else94
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then92
  br label %if.end103, !dbg !7357

if.else101:                                       ; preds = %while.body87
  %123 = load %struct.KeyBlock*, %struct.KeyBlock** %k1, align 8, !dbg !7358
  %next102 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %123, i32 0, i32 0, !dbg !7360
  %124 = load %struct.KeyBlock*, %struct.KeyBlock** %next102, align 8, !dbg !7360
  store %struct.KeyBlock* %124, %struct.KeyBlock** %k1, align 8, !dbg !7361
  br label %if.end103

if.end103:                                        ; preds = %if.else101, %if.end100
  %125 = load float*, float** %t.addr, align 8, !dbg !7362
  %arrayidx104 = getelementptr inbounds float, float* %125, i64 1, !dbg !7362
  %126 = load float, float* %arrayidx104, align 4, !dbg !7362
  %127 = load float*, float** %t.addr, align 8, !dbg !7363
  %arrayidx105 = getelementptr inbounds float, float* %127, i64 0, !dbg !7363
  store float %126, float* %arrayidx105, align 4, !dbg !7364
  %128 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7365
  %arrayidx106 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %128, i64 1, !dbg !7365
  %129 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx106, align 8, !dbg !7365
  %130 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7366
  %arrayidx107 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %130, i64 0, !dbg !7366
  store %struct.KeyBlock* %129, %struct.KeyBlock** %arrayidx107, align 8, !dbg !7367
  %131 = load float*, float** %t.addr, align 8, !dbg !7368
  %arrayidx108 = getelementptr inbounds float, float* %131, i64 2, !dbg !7368
  %132 = load float, float* %arrayidx108, align 4, !dbg !7368
  %133 = load float*, float** %t.addr, align 8, !dbg !7369
  %arrayidx109 = getelementptr inbounds float, float* %133, i64 1, !dbg !7369
  store float %132, float* %arrayidx109, align 4, !dbg !7370
  %134 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7371
  %arrayidx110 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %134, i64 2, !dbg !7371
  %135 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx110, align 8, !dbg !7371
  %136 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7372
  %arrayidx111 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %136, i64 1, !dbg !7372
  store %struct.KeyBlock* %135, %struct.KeyBlock** %arrayidx111, align 8, !dbg !7373
  %137 = load float*, float** %t.addr, align 8, !dbg !7374
  %arrayidx112 = getelementptr inbounds float, float* %137, i64 3, !dbg !7374
  %138 = load float, float* %arrayidx112, align 4, !dbg !7374
  %139 = load float*, float** %t.addr, align 8, !dbg !7375
  %arrayidx113 = getelementptr inbounds float, float* %139, i64 2, !dbg !7375
  store float %138, float* %arrayidx113, align 4, !dbg !7376
  %140 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7377
  %arrayidx114 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %140, i64 3, !dbg !7377
  %141 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx114, align 8, !dbg !7377
  %142 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7378
  %arrayidx115 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %142, i64 2, !dbg !7378
  store %struct.KeyBlock* %141, %struct.KeyBlock** %arrayidx115, align 8, !dbg !7379
  %143 = load %struct.KeyBlock*, %struct.KeyBlock** %k1, align 8, !dbg !7380
  %pos116 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %143, i32 0, i32 2, !dbg !7381
  %144 = load float, float* %pos116, align 8, !dbg !7381
  %145 = load float, float* %ofs, align 4, !dbg !7382
  %add117 = fadd float %144, %145, !dbg !7383
  %146 = load float*, float** %t.addr, align 8, !dbg !7384
  %arrayidx118 = getelementptr inbounds float, float* %146, i64 3, !dbg !7384
  store float %add117, float* %arrayidx118, align 4, !dbg !7385
  %147 = load %struct.KeyBlock*, %struct.KeyBlock** %k1, align 8, !dbg !7386
  %148 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7387
  %arrayidx119 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %148, i64 3, !dbg !7387
  store %struct.KeyBlock* %147, %struct.KeyBlock** %arrayidx119, align 8, !dbg !7388
  %149 = load float, float* %ofs, align 4, !dbg !7389
  %150 = load float, float* %lastpos, align 4, !dbg !7391
  %add120 = fadd float 0x4000CCCCC0000000, %150, !dbg !7392
  %cmp121 = fcmp ogt float %149, %add120, !dbg !7393
  br i1 %cmp121, label %if.then122, label %if.end123, !dbg !7394

if.then122:                                       ; preds = %if.end103
  br label %while.end124, !dbg !7395

if.end123:                                        ; preds = %if.end103
  br label %while.cond84, !dbg !7330, !llvm.loop !7396

while.end124:                                     ; preds = %if.then122, %if.then98, %while.cond84
  store i16 0, i16* %bsplinetype, align 2, !dbg !7398
  %151 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7399
  %arrayidx125 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %151, i64 1, !dbg !7399
  %152 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx125, align 8, !dbg !7399
  %type = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %152, i32 0, i32 4, !dbg !7401
  %153 = load i16, i16* %type, align 8, !dbg !7401
  %conv = sext i16 %153 to i32, !dbg !7399
  %cmp126 = icmp eq i32 %conv, 2, !dbg !7402
  br i1 %cmp126, label %if.then133, label %lor.lhs.false, !dbg !7403

lor.lhs.false:                                    ; preds = %while.end124
  %154 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7404
  %arrayidx128 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %154, i64 2, !dbg !7404
  %155 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx128, align 8, !dbg !7404
  %type129 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %155, i32 0, i32 4, !dbg !7405
  %156 = load i16, i16* %type129, align 8, !dbg !7405
  %conv130 = sext i16 %156 to i32, !dbg !7404
  %cmp131 = icmp eq i32 %conv130, 2, !dbg !7406
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !7407

if.then133:                                       ; preds = %lor.lhs.false, %while.end124
  store i16 1, i16* %bsplinetype, align 2, !dbg !7408
  br label %if.end134, !dbg !7409

if.end134:                                        ; preds = %if.then133, %lor.lhs.false
  %157 = load i32, i32* %cycl.addr, align 4, !dbg !7410
  %cmp135 = icmp eq i32 %157, 0, !dbg !7412
  br i1 %cmp135, label %if.then137, label %if.end168, !dbg !7413

if.then137:                                       ; preds = %if.end134
  %158 = load i16, i16* %bsplinetype, align 2, !dbg !7414
  %conv138 = sext i16 %158 to i32, !dbg !7414
  %cmp139 = icmp eq i32 %conv138, 0, !dbg !7417
  br i1 %cmp139, label %if.then141, label %if.else156, !dbg !7418

if.then141:                                       ; preds = %if.then137
  %159 = load float, float* %fac.addr, align 4, !dbg !7419
  %160 = load float*, float** %t.addr, align 8, !dbg !7422
  %arrayidx142 = getelementptr inbounds float, float* %160, i64 1, !dbg !7422
  %161 = load float, float* %arrayidx142, align 4, !dbg !7422
  %cmp143 = fcmp ole float %159, %161, !dbg !7423
  br i1 %cmp143, label %if.then145, label %if.end150, !dbg !7424

if.then145:                                       ; preds = %if.then141
  %162 = load float*, float** %t.addr, align 8, !dbg !7425
  %arrayidx146 = getelementptr inbounds float, float* %162, i64 1, !dbg !7425
  %163 = load float, float* %arrayidx146, align 4, !dbg !7425
  %164 = load float*, float** %t.addr, align 8, !dbg !7427
  %arrayidx147 = getelementptr inbounds float, float* %164, i64 2, !dbg !7427
  store float %163, float* %arrayidx147, align 4, !dbg !7428
  %165 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7429
  %arrayidx148 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %165, i64 1, !dbg !7429
  %166 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx148, align 8, !dbg !7429
  %167 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7430
  %arrayidx149 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %167, i64 2, !dbg !7430
  store %struct.KeyBlock* %166, %struct.KeyBlock** %arrayidx149, align 8, !dbg !7431
  store i32 1, i32* %retval, align 4, !dbg !7432
  br label %return, !dbg !7432

if.end150:                                        ; preds = %if.then141
  %168 = load float, float* %fac.addr, align 4, !dbg !7433
  %169 = load float*, float** %t.addr, align 8, !dbg !7435
  %arrayidx151 = getelementptr inbounds float, float* %169, i64 2, !dbg !7435
  %170 = load float, float* %arrayidx151, align 4, !dbg !7435
  %cmp152 = fcmp oge float %168, %170, !dbg !7436
  br i1 %cmp152, label %if.then154, label %if.end155, !dbg !7437

if.then154:                                       ; preds = %if.end150
  store i32 1, i32* %retval, align 4, !dbg !7438
  br label %return, !dbg !7438

if.end155:                                        ; preds = %if.end150
  br label %if.end167, !dbg !7440

if.else156:                                       ; preds = %if.then137
  %171 = load float, float* %fac.addr, align 4, !dbg !7441
  %172 = load float*, float** %t.addr, align 8, !dbg !7443
  %arrayidx157 = getelementptr inbounds float, float* %172, i64 2, !dbg !7443
  %173 = load float, float* %arrayidx157, align 4, !dbg !7443
  %cmp158 = fcmp ogt float %171, %173, !dbg !7444
  br i1 %cmp158, label %if.then160, label %if.end166, !dbg !7445

if.then160:                                       ; preds = %if.else156
  %174 = load float*, float** %t.addr, align 8, !dbg !7446
  %arrayidx161 = getelementptr inbounds float, float* %174, i64 2, !dbg !7446
  %175 = load float, float* %arrayidx161, align 4, !dbg !7446
  store float %175, float* %fac.addr, align 4, !dbg !7448
  %176 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7449
  %arrayidx162 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %176, i64 2, !dbg !7449
  %177 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx162, align 8, !dbg !7449
  %178 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7450
  %arrayidx163 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %178, i64 3, !dbg !7450
  store %struct.KeyBlock* %177, %struct.KeyBlock** %arrayidx163, align 8, !dbg !7451
  %179 = load float*, float** %t.addr, align 8, !dbg !7452
  %arrayidx164 = getelementptr inbounds float, float* %179, i64 2, !dbg !7452
  %180 = load float, float* %arrayidx164, align 4, !dbg !7452
  %181 = load float*, float** %t.addr, align 8, !dbg !7453
  %arrayidx165 = getelementptr inbounds float, float* %181, i64 3, !dbg !7453
  store float %180, float* %arrayidx165, align 4, !dbg !7454
  br label %if.end166, !dbg !7455

if.end166:                                        ; preds = %if.then160, %if.else156
  br label %if.end167

if.end167:                                        ; preds = %if.end166, %if.end155
  br label %if.end168, !dbg !7456

if.end168:                                        ; preds = %if.end167, %if.end134
  %182 = load float*, float** %t.addr, align 8, !dbg !7457
  %arrayidx169 = getelementptr inbounds float, float* %182, i64 2, !dbg !7457
  %183 = load float, float* %arrayidx169, align 4, !dbg !7457
  %184 = load float*, float** %t.addr, align 8, !dbg !7458
  %arrayidx170 = getelementptr inbounds float, float* %184, i64 1, !dbg !7458
  %185 = load float, float* %arrayidx170, align 4, !dbg !7458
  %sub171 = fsub float %183, %185, !dbg !7459
  store float %sub171, float* %d, align 4, !dbg !7460
  %186 = load float, float* %d, align 4, !dbg !7461
  %cmp172 = fcmp oeq float %186, 0.000000e+00, !dbg !7463
  br i1 %cmp172, label %if.then174, label %if.else180, !dbg !7464

if.then174:                                       ; preds = %if.end168
  %187 = load i16, i16* %bsplinetype, align 2, !dbg !7465
  %conv175 = sext i16 %187 to i32, !dbg !7465
  %cmp176 = icmp eq i32 %conv175, 0, !dbg !7468
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !7469

if.then178:                                       ; preds = %if.then174
  store i32 1, i32* %retval, align 4, !dbg !7470
  br label %return, !dbg !7470

if.end179:                                        ; preds = %if.then174
  br label %if.end183, !dbg !7472

if.else180:                                       ; preds = %if.end168
  %188 = load float, float* %fac.addr, align 4, !dbg !7473
  %189 = load float*, float** %t.addr, align 8, !dbg !7475
  %arrayidx181 = getelementptr inbounds float, float* %189, i64 1, !dbg !7475
  %190 = load float, float* %arrayidx181, align 4, !dbg !7475
  %sub182 = fsub float %188, %190, !dbg !7476
  %191 = load float, float* %d, align 4, !dbg !7477
  %div = fdiv float %sub182, %191, !dbg !7478
  store float %div, float* %d, align 4, !dbg !7479
  br label %if.end183

if.end183:                                        ; preds = %if.else180, %if.end179
  %192 = load float, float* %d, align 4, !dbg !7480
  %193 = load float*, float** %t.addr, align 8, !dbg !7481
  %194 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7482
  %arrayidx184 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %194, i64 1, !dbg !7482
  %195 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx184, align 8, !dbg !7482
  %type185 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %195, i32 0, i32 4, !dbg !7483
  %196 = load i16, i16* %type185, align 8, !dbg !7483
  %conv186 = sext i16 %196 to i32, !dbg !7482
  call void @key_curve_position_weights(float %192, float* %193, i32 %conv186), !dbg !7484
  %197 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7485
  %arrayidx187 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %197, i64 1, !dbg !7485
  %198 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx187, align 8, !dbg !7485
  %type188 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %198, i32 0, i32 4, !dbg !7487
  %199 = load i16, i16* %type188, align 8, !dbg !7487
  %conv189 = sext i16 %199 to i32, !dbg !7485
  %200 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7488
  %arrayidx190 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %200, i64 2, !dbg !7488
  %201 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx190, align 8, !dbg !7488
  %type191 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %201, i32 0, i32 4, !dbg !7489
  %202 = load i16, i16* %type191, align 8, !dbg !7489
  %conv192 = sext i16 %202 to i32, !dbg !7488
  %cmp193 = icmp ne i32 %conv189, %conv192, !dbg !7490
  br i1 %cmp193, label %if.then195, label %if.end200, !dbg !7491

if.then195:                                       ; preds = %if.end183
  call void @llvm.dbg.declare(metadata [4 x float]* %t_other, metadata !7492, metadata !DIExpression()), !dbg !7494
  %203 = load float, float* %d, align 4, !dbg !7495
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %t_other, i64 0, i64 0, !dbg !7496
  %204 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7497
  %arrayidx196 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %204, i64 2, !dbg !7497
  %205 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx196, align 8, !dbg !7497
  %type197 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %205, i32 0, i32 4, !dbg !7498
  %206 = load i16, i16* %type197, align 8, !dbg !7498
  %conv198 = sext i16 %206 to i32, !dbg !7497
  call void @key_curve_position_weights(float %203, float* %arraydecay, i32 %conv198), !dbg !7499
  %207 = load float*, float** %t.addr, align 8, !dbg !7500
  %208 = load float*, float** %t.addr, align 8, !dbg !7501
  %arraydecay199 = getelementptr inbounds [4 x float], [4 x float]* %t_other, i64 0, i64 0, !dbg !7502
  %209 = load float, float* %d, align 4, !dbg !7503
  call void @interp_v4_v4v4(float* %207, float* %208, float* %arraydecay199, float %209), !dbg !7504
  br label %if.end200, !dbg !7505

if.end200:                                        ; preds = %if.then195, %if.end183
  store i32 0, i32* %retval, align 4, !dbg !7506
  br label %return, !dbg !7506

return:                                           ; preds = %if.end200, %if.then178, %if.then154, %if.then145, %if.then18
  %210 = load i32, i32* %retval, align 4, !dbg !7507
  ret i32 %210, !dbg !7507
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_key(i32 %start, i32 %end, i32 %tot, i8* %poin, %struct.Key* %key, %struct.KeyBlock* %actkb, %struct.KeyBlock** %k, float* %t, i32 %mode) #0 !dbg !7508 {
entry:
  %start.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %tot.addr = alloca i32, align 4
  %poin.addr = alloca i8*, align 8
  %key.addr = alloca %struct.Key*, align 8
  %actkb.addr = alloca %struct.KeyBlock*, align 8
  %k.addr = alloca %struct.KeyBlock**, align 8
  %t.addr = alloca float*, align 8
  %mode.addr = alloca i32, align 4
  %k1tot = alloca float, align 4
  %k2tot = alloca float, align 4
  %k3tot = alloca float, align 4
  %k4tot = alloca float, align 4
  %k1d = alloca float, align 4
  %k2d = alloca float, align 4
  %k3d = alloca float, align 4
  %k4d = alloca float, align 4
  %a = alloca i32, align 4
  %ofs = alloca [32 x i32], align 16
  %ofsp = alloca i32*, align 8
  %flagdo = alloca i32, align 4
  %flagflo = alloca i32, align 4
  %elemsize = alloca i32, align 4
  %poinsize = alloca i32, align 4
  %k1 = alloca i8*, align 8
  %k2 = alloca i8*, align 8
  %k3 = alloca i8*, align 8
  %k4 = alloca i8*, align 8
  %freek1 = alloca i8*, align 8
  %freek2 = alloca i8*, align 8
  %freek3 = alloca i8*, align 8
  %freek4 = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %elemstr = alloca [8 x i8], align 1
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !7511, metadata !DIExpression()), !dbg !7512
  store i32 %end, i32* %end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end.addr, metadata !7513, metadata !DIExpression()), !dbg !7514
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !7515, metadata !DIExpression()), !dbg !7516
  store i8* %poin, i8** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin.addr, metadata !7517, metadata !DIExpression()), !dbg !7518
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !7519, metadata !DIExpression()), !dbg !7520
  store %struct.KeyBlock* %actkb, %struct.KeyBlock** %actkb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %actkb.addr, metadata !7521, metadata !DIExpression()), !dbg !7522
  store %struct.KeyBlock** %k, %struct.KeyBlock*** %k.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock*** %k.addr, metadata !7523, metadata !DIExpression()), !dbg !7524
  store float* %t, float** %t.addr, align 8
  call void @llvm.dbg.declare(metadata float** %t.addr, metadata !7525, metadata !DIExpression()), !dbg !7526
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7527, metadata !DIExpression()), !dbg !7528
  call void @llvm.dbg.declare(metadata float* %k1tot, metadata !7529, metadata !DIExpression()), !dbg !7530
  store float 0.000000e+00, float* %k1tot, align 4, !dbg !7530
  call void @llvm.dbg.declare(metadata float* %k2tot, metadata !7531, metadata !DIExpression()), !dbg !7532
  store float 0.000000e+00, float* %k2tot, align 4, !dbg !7532
  call void @llvm.dbg.declare(metadata float* %k3tot, metadata !7533, metadata !DIExpression()), !dbg !7534
  store float 0.000000e+00, float* %k3tot, align 4, !dbg !7534
  call void @llvm.dbg.declare(metadata float* %k4tot, metadata !7535, metadata !DIExpression()), !dbg !7536
  store float 0.000000e+00, float* %k4tot, align 4, !dbg !7536
  call void @llvm.dbg.declare(metadata float* %k1d, metadata !7537, metadata !DIExpression()), !dbg !7538
  store float 0.000000e+00, float* %k1d, align 4, !dbg !7538
  call void @llvm.dbg.declare(metadata float* %k2d, metadata !7539, metadata !DIExpression()), !dbg !7540
  store float 0.000000e+00, float* %k2d, align 4, !dbg !7540
  call void @llvm.dbg.declare(metadata float* %k3d, metadata !7541, metadata !DIExpression()), !dbg !7542
  store float 0.000000e+00, float* %k3d, align 4, !dbg !7542
  call void @llvm.dbg.declare(metadata float* %k4d, metadata !7543, metadata !DIExpression()), !dbg !7544
  store float 0.000000e+00, float* %k4d, align 4, !dbg !7544
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7545, metadata !DIExpression()), !dbg !7546
  call void @llvm.dbg.declare(metadata [32 x i32]* %ofs, metadata !7547, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.declare(metadata i32** %ofsp, metadata !7549, metadata !DIExpression()), !dbg !7550
  call void @llvm.dbg.declare(metadata i32* %flagdo, metadata !7551, metadata !DIExpression()), !dbg !7552
  store i32 15, i32* %flagdo, align 4, !dbg !7552
  call void @llvm.dbg.declare(metadata i32* %flagflo, metadata !7553, metadata !DIExpression()), !dbg !7554
  store i32 0, i32* %flagflo, align 4, !dbg !7554
  call void @llvm.dbg.declare(metadata i32* %elemsize, metadata !7555, metadata !DIExpression()), !dbg !7556
  call void @llvm.dbg.declare(metadata i32* %poinsize, metadata !7557, metadata !DIExpression()), !dbg !7558
  store i32 0, i32* %poinsize, align 4, !dbg !7558
  call void @llvm.dbg.declare(metadata i8** %k1, metadata !7559, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.declare(metadata i8** %k2, metadata !7561, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.declare(metadata i8** %k3, metadata !7563, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.declare(metadata i8** %k4, metadata !7565, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.declare(metadata i8** %freek1, metadata !7567, metadata !DIExpression()), !dbg !7568
  call void @llvm.dbg.declare(metadata i8** %freek2, metadata !7569, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.declare(metadata i8** %freek3, metadata !7571, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.declare(metadata i8** %freek4, metadata !7573, metadata !DIExpression()), !dbg !7574
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !7575, metadata !DIExpression()), !dbg !7576
  call void @llvm.dbg.declare(metadata [8 x i8]* %elemstr, metadata !7577, metadata !DIExpression()), !dbg !7578
  %arrayidx = getelementptr inbounds [32 x i32], [32 x i32]* %ofs, i64 0, i64 1, !dbg !7579
  store i32 0, i32* %arrayidx, align 4, !dbg !7580
  %0 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !7581
  %1 = load i32, i32* %mode.addr, align 4, !dbg !7583
  %arrayidx1 = getelementptr inbounds [32 x i32], [32 x i32]* %ofs, i64 0, i64 0, !dbg !7584
  %call = call zeroext i8 @key_pointer_size(%struct.Key* %0, i32 %1, i32* %poinsize, i32* %arrayidx1), !dbg !7585
  %tobool = icmp ne i8 %call, 0, !dbg !7585
  br i1 %tobool, label %if.end, label %if.then, !dbg !7586

if.then:                                          ; preds = %entry
  br label %if.end326, !dbg !7587

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %end.addr, align 4, !dbg !7588
  %3 = load i32, i32* %tot.addr, align 4, !dbg !7590
  %cmp = icmp sgt i32 %2, %3, !dbg !7591
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7592

if.then2:                                         ; preds = %if.end
  %4 = load i32, i32* %tot.addr, align 4, !dbg !7593
  store i32 %4, i32* %end.addr, align 4, !dbg !7594
  br label %if.end3, !dbg !7595

if.end3:                                          ; preds = %if.then2, %if.end
  %5 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !7596
  %6 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb.addr, align 8, !dbg !7597
  %7 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7598
  %arrayidx4 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %7, i64 0, !dbg !7598
  %8 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx4, align 8, !dbg !7598
  %call5 = call i8* @key_block_get_data(%struct.Key* %5, %struct.KeyBlock* %6, %struct.KeyBlock* %8, i8** %freek1), !dbg !7599
  store i8* %call5, i8** %k1, align 8, !dbg !7600
  %9 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !7601
  %10 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb.addr, align 8, !dbg !7602
  %11 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7603
  %arrayidx6 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %11, i64 1, !dbg !7603
  %12 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx6, align 8, !dbg !7603
  %call7 = call i8* @key_block_get_data(%struct.Key* %9, %struct.KeyBlock* %10, %struct.KeyBlock* %12, i8** %freek2), !dbg !7604
  store i8* %call7, i8** %k2, align 8, !dbg !7605
  %13 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !7606
  %14 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb.addr, align 8, !dbg !7607
  %15 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7608
  %arrayidx8 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %15, i64 2, !dbg !7608
  %16 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx8, align 8, !dbg !7608
  %call9 = call i8* @key_block_get_data(%struct.Key* %13, %struct.KeyBlock* %14, %struct.KeyBlock* %16, i8** %freek3), !dbg !7609
  store i8* %call9, i8** %k3, align 8, !dbg !7610
  %17 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !7611
  %18 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb.addr, align 8, !dbg !7612
  %19 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7613
  %arrayidx10 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %19, i64 3, !dbg !7613
  %20 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx10, align 8, !dbg !7613
  %call11 = call i8* @key_block_get_data(%struct.Key* %17, %struct.KeyBlock* %18, %struct.KeyBlock* %20, i8** %freek4), !dbg !7614
  store i8* %call11, i8** %k4, align 8, !dbg !7615
  %21 = load i32, i32* %tot.addr, align 4, !dbg !7616
  %22 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7618
  %arrayidx12 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %22, i64 0, !dbg !7618
  %23 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx12, align 8, !dbg !7618
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %23, i32 0, i32 8, !dbg !7619
  %24 = load i32, i32* %totelem, align 8, !dbg !7619
  %cmp13 = icmp ne i32 %21, %24, !dbg !7620
  br i1 %cmp13, label %if.then14, label %if.end23, !dbg !7621

if.then14:                                        ; preds = %if.end3
  store float 0.000000e+00, float* %k1tot, align 4, !dbg !7622
  %25 = load i32, i32* %flagflo, align 4, !dbg !7624
  %or = or i32 %25, 1, !dbg !7624
  store i32 %or, i32* %flagflo, align 4, !dbg !7624
  %26 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7625
  %arrayidx15 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %26, i64 0, !dbg !7625
  %27 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx15, align 8, !dbg !7625
  %totelem16 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %27, i32 0, i32 8, !dbg !7627
  %28 = load i32, i32* %totelem16, align 8, !dbg !7627
  %tobool17 = icmp ne i32 %28, 0, !dbg !7625
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !7628

if.then18:                                        ; preds = %if.then14
  %29 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7629
  %arrayidx19 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %29, i64 0, !dbg !7629
  %30 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx19, align 8, !dbg !7629
  %totelem20 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %30, i32 0, i32 8, !dbg !7631
  %31 = load i32, i32* %totelem20, align 8, !dbg !7631
  %conv = sitofp i32 %31 to float, !dbg !7629
  %32 = load i32, i32* %tot.addr, align 4, !dbg !7632
  %conv21 = sitofp i32 %32 to float, !dbg !7633
  %div = fdiv float %conv, %conv21, !dbg !7634
  store float %div, float* %k1d, align 4, !dbg !7635
  br label %if.end22, !dbg !7636

if.else:                                          ; preds = %if.then14
  %33 = load i32, i32* %flagdo, align 4, !dbg !7637
  %sub = sub nsw i32 %33, 1, !dbg !7637
  store i32 %sub, i32* %flagdo, align 4, !dbg !7637
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then18
  br label %if.end23, !dbg !7639

if.end23:                                         ; preds = %if.end22, %if.end3
  %34 = load i32, i32* %tot.addr, align 4, !dbg !7640
  %35 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7642
  %arrayidx24 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %35, i64 1, !dbg !7642
  %36 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx24, align 8, !dbg !7642
  %totelem25 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %36, i32 0, i32 8, !dbg !7643
  %37 = load i32, i32* %totelem25, align 8, !dbg !7643
  %cmp26 = icmp ne i32 %34, %37, !dbg !7644
  br i1 %cmp26, label %if.then28, label %if.end42, !dbg !7645

if.then28:                                        ; preds = %if.end23
  store float 0.000000e+00, float* %k2tot, align 4, !dbg !7646
  %38 = load i32, i32* %flagflo, align 4, !dbg !7648
  %or29 = or i32 %38, 2, !dbg !7648
  store i32 %or29, i32* %flagflo, align 4, !dbg !7648
  %39 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7649
  %arrayidx30 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %39, i64 0, !dbg !7649
  %40 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx30, align 8, !dbg !7649
  %totelem31 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %40, i32 0, i32 8, !dbg !7651
  %41 = load i32, i32* %totelem31, align 8, !dbg !7651
  %tobool32 = icmp ne i32 %41, 0, !dbg !7649
  br i1 %tobool32, label %if.then33, label %if.else39, !dbg !7652

if.then33:                                        ; preds = %if.then28
  %42 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7653
  %arrayidx34 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %42, i64 1, !dbg !7653
  %43 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx34, align 8, !dbg !7653
  %totelem35 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %43, i32 0, i32 8, !dbg !7655
  %44 = load i32, i32* %totelem35, align 8, !dbg !7655
  %conv36 = sitofp i32 %44 to float, !dbg !7653
  %45 = load i32, i32* %tot.addr, align 4, !dbg !7656
  %conv37 = sitofp i32 %45 to float, !dbg !7657
  %div38 = fdiv float %conv36, %conv37, !dbg !7658
  store float %div38, float* %k2d, align 4, !dbg !7659
  br label %if.end41, !dbg !7660

if.else39:                                        ; preds = %if.then28
  %46 = load i32, i32* %flagdo, align 4, !dbg !7661
  %sub40 = sub nsw i32 %46, 2, !dbg !7661
  store i32 %sub40, i32* %flagdo, align 4, !dbg !7661
  br label %if.end41

if.end41:                                         ; preds = %if.else39, %if.then33
  br label %if.end42, !dbg !7663

if.end42:                                         ; preds = %if.end41, %if.end23
  %47 = load i32, i32* %tot.addr, align 4, !dbg !7664
  %48 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7666
  %arrayidx43 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %48, i64 2, !dbg !7666
  %49 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx43, align 8, !dbg !7666
  %totelem44 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %49, i32 0, i32 8, !dbg !7667
  %50 = load i32, i32* %totelem44, align 8, !dbg !7667
  %cmp45 = icmp ne i32 %47, %50, !dbg !7668
  br i1 %cmp45, label %if.then47, label %if.end61, !dbg !7669

if.then47:                                        ; preds = %if.end42
  store float 0.000000e+00, float* %k3tot, align 4, !dbg !7670
  %51 = load i32, i32* %flagflo, align 4, !dbg !7672
  %or48 = or i32 %51, 4, !dbg !7672
  store i32 %or48, i32* %flagflo, align 4, !dbg !7672
  %52 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7673
  %arrayidx49 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %52, i64 0, !dbg !7673
  %53 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx49, align 8, !dbg !7673
  %totelem50 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %53, i32 0, i32 8, !dbg !7675
  %54 = load i32, i32* %totelem50, align 8, !dbg !7675
  %tobool51 = icmp ne i32 %54, 0, !dbg !7673
  br i1 %tobool51, label %if.then52, label %if.else58, !dbg !7676

if.then52:                                        ; preds = %if.then47
  %55 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7677
  %arrayidx53 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %55, i64 2, !dbg !7677
  %56 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx53, align 8, !dbg !7677
  %totelem54 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %56, i32 0, i32 8, !dbg !7679
  %57 = load i32, i32* %totelem54, align 8, !dbg !7679
  %conv55 = sitofp i32 %57 to float, !dbg !7677
  %58 = load i32, i32* %tot.addr, align 4, !dbg !7680
  %conv56 = sitofp i32 %58 to float, !dbg !7681
  %div57 = fdiv float %conv55, %conv56, !dbg !7682
  store float %div57, float* %k3d, align 4, !dbg !7683
  br label %if.end60, !dbg !7684

if.else58:                                        ; preds = %if.then47
  %59 = load i32, i32* %flagdo, align 4, !dbg !7685
  %sub59 = sub nsw i32 %59, 4, !dbg !7685
  store i32 %sub59, i32* %flagdo, align 4, !dbg !7685
  br label %if.end60

if.end60:                                         ; preds = %if.else58, %if.then52
  br label %if.end61, !dbg !7687

if.end61:                                         ; preds = %if.end60, %if.end42
  %60 = load i32, i32* %tot.addr, align 4, !dbg !7688
  %61 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7690
  %arrayidx62 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %61, i64 3, !dbg !7690
  %62 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx62, align 8, !dbg !7690
  %totelem63 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %62, i32 0, i32 8, !dbg !7691
  %63 = load i32, i32* %totelem63, align 8, !dbg !7691
  %cmp64 = icmp ne i32 %60, %63, !dbg !7692
  br i1 %cmp64, label %if.then66, label %if.end80, !dbg !7693

if.then66:                                        ; preds = %if.end61
  store float 0.000000e+00, float* %k4tot, align 4, !dbg !7694
  %64 = load i32, i32* %flagflo, align 4, !dbg !7696
  %or67 = or i32 %64, 8, !dbg !7696
  store i32 %or67, i32* %flagflo, align 4, !dbg !7696
  %65 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7697
  %arrayidx68 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %65, i64 0, !dbg !7697
  %66 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx68, align 8, !dbg !7697
  %totelem69 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %66, i32 0, i32 8, !dbg !7699
  %67 = load i32, i32* %totelem69, align 8, !dbg !7699
  %tobool70 = icmp ne i32 %67, 0, !dbg !7697
  br i1 %tobool70, label %if.then71, label %if.else77, !dbg !7700

if.then71:                                        ; preds = %if.then66
  %68 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !7701
  %arrayidx72 = getelementptr inbounds %struct.KeyBlock*, %struct.KeyBlock** %68, i64 3, !dbg !7701
  %69 = load %struct.KeyBlock*, %struct.KeyBlock** %arrayidx72, align 8, !dbg !7701
  %totelem73 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %69, i32 0, i32 8, !dbg !7703
  %70 = load i32, i32* %totelem73, align 8, !dbg !7703
  %conv74 = sitofp i32 %70 to float, !dbg !7701
  %71 = load i32, i32* %tot.addr, align 4, !dbg !7704
  %conv75 = sitofp i32 %71 to float, !dbg !7705
  %div76 = fdiv float %conv74, %conv75, !dbg !7706
  store float %div76, float* %k4d, align 4, !dbg !7707
  br label %if.end79, !dbg !7708

if.else77:                                        ; preds = %if.then66
  %72 = load i32, i32* %flagdo, align 4, !dbg !7709
  %sub78 = sub nsw i32 %72, 8, !dbg !7709
  store i32 %sub78, i32* %flagdo, align 4, !dbg !7709
  br label %if.end79

if.end79:                                         ; preds = %if.else77, %if.then71
  br label %if.end80, !dbg !7711

if.end80:                                         ; preds = %if.end79, %if.end61
  %73 = load i32, i32* %start.addr, align 4, !dbg !7712
  %cmp81 = icmp ne i32 %73, 0, !dbg !7714
  br i1 %cmp81, label %if.then83, label %if.end190, !dbg !7715

if.then83:                                        ; preds = %if.end80
  %74 = load i32, i32* %poinsize, align 4, !dbg !7716
  %75 = load i32, i32* %start.addr, align 4, !dbg !7718
  %mul = mul nsw i32 %74, %75, !dbg !7719
  %76 = load i8*, i8** %poin.addr, align 8, !dbg !7720
  %idx.ext = sext i32 %mul to i64, !dbg !7720
  %add.ptr = getelementptr inbounds i8, i8* %76, i64 %idx.ext, !dbg !7720
  store i8* %add.ptr, i8** %poin.addr, align 8, !dbg !7720
  %77 = load i32, i32* %flagdo, align 4, !dbg !7721
  %and = and i32 %77, 1, !dbg !7723
  %tobool84 = icmp ne i32 %and, 0, !dbg !7723
  br i1 %tobool84, label %if.then85, label %if.end108, !dbg !7724

if.then85:                                        ; preds = %if.then83
  %78 = load i32, i32* %flagflo, align 4, !dbg !7725
  %and86 = and i32 %78, 1, !dbg !7728
  %tobool87 = icmp ne i32 %and86, 0, !dbg !7728
  br i1 %tobool87, label %if.then88, label %if.else102, !dbg !7729

if.then88:                                        ; preds = %if.then85
  %79 = load i32, i32* %start.addr, align 4, !dbg !7730
  %conv89 = sitofp i32 %79 to float, !dbg !7730
  %80 = load float, float* %k1d, align 4, !dbg !7732
  %mul90 = fmul float %conv89, %80, !dbg !7733
  %81 = load float, float* %k1tot, align 4, !dbg !7734
  %add = fadd float %81, %mul90, !dbg !7734
  store float %add, float* %k1tot, align 4, !dbg !7734
  %82 = load float, float* %k1tot, align 4, !dbg !7735
  %conv91 = fpext float %82 to double, !dbg !7735
  %83 = call double @llvm.floor.f64(double %conv91), !dbg !7736
  %conv92 = fptosi double %83 to i32, !dbg !7737
  store i32 %conv92, i32* %a, align 4, !dbg !7738
  %84 = load i32, i32* %a, align 4, !dbg !7739
  %tobool93 = icmp ne i32 %84, 0, !dbg !7739
  br i1 %tobool93, label %if.then94, label %if.end101, !dbg !7741

if.then94:                                        ; preds = %if.then88
  %85 = load i32, i32* %a, align 4, !dbg !7742
  %conv95 = sitofp i32 %85 to float, !dbg !7742
  %86 = load float, float* %k1tot, align 4, !dbg !7744
  %sub96 = fsub float %86, %conv95, !dbg !7744
  store float %sub96, float* %k1tot, align 4, !dbg !7744
  %87 = load i32, i32* %a, align 4, !dbg !7745
  %88 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !7746
  %elemsize97 = getelementptr inbounds %struct.Key, %struct.Key* %88, i32 0, i32 4, !dbg !7747
  %89 = load i32, i32* %elemsize97, align 8, !dbg !7747
  %mul98 = mul nsw i32 %87, %89, !dbg !7748
  %90 = load i8*, i8** %k1, align 8, !dbg !7749
  %idx.ext99 = sext i32 %mul98 to i64, !dbg !7749
  %add.ptr100 = getelementptr inbounds i8, i8* %90, i64 %idx.ext99, !dbg !7749
  store i8* %add.ptr100, i8** %k1, align 8, !dbg !7749
  br label %if.end101, !dbg !7750

if.end101:                                        ; preds = %if.then94, %if.then88
  br label %if.end107, !dbg !7751

if.else102:                                       ; preds = %if.then85
  %91 = load i32, i32* %start.addr, align 4, !dbg !7752
  %92 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !7754
  %elemsize103 = getelementptr inbounds %struct.Key, %struct.Key* %92, i32 0, i32 4, !dbg !7755
  %93 = load i32, i32* %elemsize103, align 8, !dbg !7755
  %mul104 = mul nsw i32 %91, %93, !dbg !7756
  %94 = load i8*, i8** %k1, align 8, !dbg !7757
  %idx.ext105 = sext i32 %mul104 to i64, !dbg !7757
  %add.ptr106 = getelementptr inbounds i8, i8* %94, i64 %idx.ext105, !dbg !7757
  store i8* %add.ptr106, i8** %k1, align 8, !dbg !7757
  br label %if.end107

if.end107:                                        ; preds = %if.else102, %if.end101
  br label %if.end108, !dbg !7758

if.end108:                                        ; preds = %if.end107, %if.then83
  %95 = load i32, i32* %flagdo, align 4, !dbg !7759
  %and109 = and i32 %95, 2, !dbg !7761
  %tobool110 = icmp ne i32 %and109, 0, !dbg !7761
  br i1 %tobool110, label %if.then111, label %if.end135, !dbg !7762

if.then111:                                       ; preds = %if.end108
  %96 = load i32, i32* %flagflo, align 4, !dbg !7763
  %and112 = and i32 %96, 2, !dbg !7766
  %tobool113 = icmp ne i32 %and112, 0, !dbg !7766
  br i1 %tobool113, label %if.then114, label %if.else129, !dbg !7767

if.then114:                                       ; preds = %if.then111
  %97 = load i32, i32* %start.addr, align 4, !dbg !7768
  %conv115 = sitofp i32 %97 to float, !dbg !7768
  %98 = load float, float* %k2d, align 4, !dbg !7770
  %mul116 = fmul float %conv115, %98, !dbg !7771
  %99 = load float, float* %k2tot, align 4, !dbg !7772
  %add117 = fadd float %99, %mul116, !dbg !7772
  store float %add117, float* %k2tot, align 4, !dbg !7772
  %100 = load float, float* %k2tot, align 4, !dbg !7773
  %conv118 = fpext float %100 to double, !dbg !7773
  %101 = call double @llvm.floor.f64(double %conv118), !dbg !7774
  %conv119 = fptosi double %101 to i32, !dbg !7775
  store i32 %conv119, i32* %a, align 4, !dbg !7776
  %102 = load i32, i32* %a, align 4, !dbg !7777
  %tobool120 = icmp ne i32 %102, 0, !dbg !7777
  br i1 %tobool120, label %if.then121, label %if.end128, !dbg !7779

if.then121:                                       ; preds = %if.then114
  %103 = load i32, i32* %a, align 4, !dbg !7780
  %conv122 = sitofp i32 %103 to float, !dbg !7780
  %104 = load float, float* %k2tot, align 4, !dbg !7782
  %sub123 = fsub float %104, %conv122, !dbg !7782
  store float %sub123, float* %k2tot, align 4, !dbg !7782
  %105 = load i32, i32* %a, align 4, !dbg !7783
  %106 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !7784
  %elemsize124 = getelementptr inbounds %struct.Key, %struct.Key* %106, i32 0, i32 4, !dbg !7785
  %107 = load i32, i32* %elemsize124, align 8, !dbg !7785
  %mul125 = mul nsw i32 %105, %107, !dbg !7786
  %108 = load i8*, i8** %k2, align 8, !dbg !7787
  %idx.ext126 = sext i32 %mul125 to i64, !dbg !7787
  %add.ptr127 = getelementptr inbounds i8, i8* %108, i64 %idx.ext126, !dbg !7787
  store i8* %add.ptr127, i8** %k2, align 8, !dbg !7787
  br label %if.end128, !dbg !7788

if.end128:                                        ; preds = %if.then121, %if.then114
  br label %if.end134, !dbg !7789

if.else129:                                       ; preds = %if.then111
  %109 = load i32, i32* %start.addr, align 4, !dbg !7790
  %110 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !7792
  %elemsize130 = getelementptr inbounds %struct.Key, %struct.Key* %110, i32 0, i32 4, !dbg !7793
  %111 = load i32, i32* %elemsize130, align 8, !dbg !7793
  %mul131 = mul nsw i32 %109, %111, !dbg !7794
  %112 = load i8*, i8** %k2, align 8, !dbg !7795
  %idx.ext132 = sext i32 %mul131 to i64, !dbg !7795
  %add.ptr133 = getelementptr inbounds i8, i8* %112, i64 %idx.ext132, !dbg !7795
  store i8* %add.ptr133, i8** %k2, align 8, !dbg !7795
  br label %if.end134

if.end134:                                        ; preds = %if.else129, %if.end128
  br label %if.end135, !dbg !7796

if.end135:                                        ; preds = %if.end134, %if.end108
  %113 = load i32, i32* %flagdo, align 4, !dbg !7797
  %and136 = and i32 %113, 4, !dbg !7799
  %tobool137 = icmp ne i32 %and136, 0, !dbg !7799
  br i1 %tobool137, label %if.then138, label %if.end162, !dbg !7800

if.then138:                                       ; preds = %if.end135
  %114 = load i32, i32* %flagflo, align 4, !dbg !7801
  %and139 = and i32 %114, 4, !dbg !7804
  %tobool140 = icmp ne i32 %and139, 0, !dbg !7804
  br i1 %tobool140, label %if.then141, label %if.else156, !dbg !7805

if.then141:                                       ; preds = %if.then138
  %115 = load i32, i32* %start.addr, align 4, !dbg !7806
  %conv142 = sitofp i32 %115 to float, !dbg !7806
  %116 = load float, float* %k3d, align 4, !dbg !7808
  %mul143 = fmul float %conv142, %116, !dbg !7809
  %117 = load float, float* %k3tot, align 4, !dbg !7810
  %add144 = fadd float %117, %mul143, !dbg !7810
  store float %add144, float* %k3tot, align 4, !dbg !7810
  %118 = load float, float* %k3tot, align 4, !dbg !7811
  %conv145 = fpext float %118 to double, !dbg !7811
  %119 = call double @llvm.floor.f64(double %conv145), !dbg !7812
  %conv146 = fptosi double %119 to i32, !dbg !7813
  store i32 %conv146, i32* %a, align 4, !dbg !7814
  %120 = load i32, i32* %a, align 4, !dbg !7815
  %tobool147 = icmp ne i32 %120, 0, !dbg !7815
  br i1 %tobool147, label %if.then148, label %if.end155, !dbg !7817

if.then148:                                       ; preds = %if.then141
  %121 = load i32, i32* %a, align 4, !dbg !7818
  %conv149 = sitofp i32 %121 to float, !dbg !7818
  %122 = load float, float* %k3tot, align 4, !dbg !7820
  %sub150 = fsub float %122, %conv149, !dbg !7820
  store float %sub150, float* %k3tot, align 4, !dbg !7820
  %123 = load i32, i32* %a, align 4, !dbg !7821
  %124 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !7822
  %elemsize151 = getelementptr inbounds %struct.Key, %struct.Key* %124, i32 0, i32 4, !dbg !7823
  %125 = load i32, i32* %elemsize151, align 8, !dbg !7823
  %mul152 = mul nsw i32 %123, %125, !dbg !7824
  %126 = load i8*, i8** %k3, align 8, !dbg !7825
  %idx.ext153 = sext i32 %mul152 to i64, !dbg !7825
  %add.ptr154 = getelementptr inbounds i8, i8* %126, i64 %idx.ext153, !dbg !7825
  store i8* %add.ptr154, i8** %k3, align 8, !dbg !7825
  br label %if.end155, !dbg !7826

if.end155:                                        ; preds = %if.then148, %if.then141
  br label %if.end161, !dbg !7827

if.else156:                                       ; preds = %if.then138
  %127 = load i32, i32* %start.addr, align 4, !dbg !7828
  %128 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !7830
  %elemsize157 = getelementptr inbounds %struct.Key, %struct.Key* %128, i32 0, i32 4, !dbg !7831
  %129 = load i32, i32* %elemsize157, align 8, !dbg !7831
  %mul158 = mul nsw i32 %127, %129, !dbg !7832
  %130 = load i8*, i8** %k3, align 8, !dbg !7833
  %idx.ext159 = sext i32 %mul158 to i64, !dbg !7833
  %add.ptr160 = getelementptr inbounds i8, i8* %130, i64 %idx.ext159, !dbg !7833
  store i8* %add.ptr160, i8** %k3, align 8, !dbg !7833
  br label %if.end161

if.end161:                                        ; preds = %if.else156, %if.end155
  br label %if.end162, !dbg !7834

if.end162:                                        ; preds = %if.end161, %if.end135
  %131 = load i32, i32* %flagdo, align 4, !dbg !7835
  %and163 = and i32 %131, 8, !dbg !7837
  %tobool164 = icmp ne i32 %and163, 0, !dbg !7837
  br i1 %tobool164, label %if.then165, label %if.end189, !dbg !7838

if.then165:                                       ; preds = %if.end162
  %132 = load i32, i32* %flagflo, align 4, !dbg !7839
  %and166 = and i32 %132, 8, !dbg !7842
  %tobool167 = icmp ne i32 %and166, 0, !dbg !7842
  br i1 %tobool167, label %if.then168, label %if.else183, !dbg !7843

if.then168:                                       ; preds = %if.then165
  %133 = load i32, i32* %start.addr, align 4, !dbg !7844
  %conv169 = sitofp i32 %133 to float, !dbg !7844
  %134 = load float, float* %k4d, align 4, !dbg !7846
  %mul170 = fmul float %conv169, %134, !dbg !7847
  %135 = load float, float* %k4tot, align 4, !dbg !7848
  %add171 = fadd float %135, %mul170, !dbg !7848
  store float %add171, float* %k4tot, align 4, !dbg !7848
  %136 = load float, float* %k4tot, align 4, !dbg !7849
  %conv172 = fpext float %136 to double, !dbg !7849
  %137 = call double @llvm.floor.f64(double %conv172), !dbg !7850
  %conv173 = fptosi double %137 to i32, !dbg !7851
  store i32 %conv173, i32* %a, align 4, !dbg !7852
  %138 = load i32, i32* %a, align 4, !dbg !7853
  %tobool174 = icmp ne i32 %138, 0, !dbg !7853
  br i1 %tobool174, label %if.then175, label %if.end182, !dbg !7855

if.then175:                                       ; preds = %if.then168
  %139 = load i32, i32* %a, align 4, !dbg !7856
  %conv176 = sitofp i32 %139 to float, !dbg !7856
  %140 = load float, float* %k4tot, align 4, !dbg !7858
  %sub177 = fsub float %140, %conv176, !dbg !7858
  store float %sub177, float* %k4tot, align 4, !dbg !7858
  %141 = load i32, i32* %a, align 4, !dbg !7859
  %142 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !7860
  %elemsize178 = getelementptr inbounds %struct.Key, %struct.Key* %142, i32 0, i32 4, !dbg !7861
  %143 = load i32, i32* %elemsize178, align 8, !dbg !7861
  %mul179 = mul nsw i32 %141, %143, !dbg !7862
  %144 = load i8*, i8** %k4, align 8, !dbg !7863
  %idx.ext180 = sext i32 %mul179 to i64, !dbg !7863
  %add.ptr181 = getelementptr inbounds i8, i8* %144, i64 %idx.ext180, !dbg !7863
  store i8* %add.ptr181, i8** %k4, align 8, !dbg !7863
  br label %if.end182, !dbg !7864

if.end182:                                        ; preds = %if.then175, %if.then168
  br label %if.end188, !dbg !7865

if.else183:                                       ; preds = %if.then165
  %145 = load i32, i32* %start.addr, align 4, !dbg !7866
  %146 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !7868
  %elemsize184 = getelementptr inbounds %struct.Key, %struct.Key* %146, i32 0, i32 4, !dbg !7869
  %147 = load i32, i32* %elemsize184, align 8, !dbg !7869
  %mul185 = mul nsw i32 %145, %147, !dbg !7870
  %148 = load i8*, i8** %k4, align 8, !dbg !7871
  %idx.ext186 = sext i32 %mul185 to i64, !dbg !7871
  %add.ptr187 = getelementptr inbounds i8, i8* %148, i64 %idx.ext186, !dbg !7871
  store i8* %add.ptr187, i8** %k4, align 8, !dbg !7871
  br label %if.end188

if.end188:                                        ; preds = %if.else183, %if.end182
  br label %if.end189, !dbg !7872

if.end189:                                        ; preds = %if.end188, %if.end162
  br label %if.end190, !dbg !7873

if.end190:                                        ; preds = %if.end189, %if.end80
  %arrayidx191 = getelementptr inbounds [8 x i8], [8 x i8]* %elemstr, i64 0, i64 0, !dbg !7874
  store i8 1, i8* %arrayidx191, align 1, !dbg !7875
  %arrayidx192 = getelementptr inbounds [8 x i8], [8 x i8]* %elemstr, i64 0, i64 1, !dbg !7876
  store i8 100, i8* %arrayidx192, align 1, !dbg !7877
  %arrayidx193 = getelementptr inbounds [8 x i8], [8 x i8]* %elemstr, i64 0, i64 2, !dbg !7878
  store i8 0, i8* %arrayidx193, align 1, !dbg !7879
  %149 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !7880
  %elemsize194 = getelementptr inbounds %struct.Key, %struct.Key* %149, i32 0, i32 4, !dbg !7881
  %150 = load i32, i32* %elemsize194, align 8, !dbg !7881
  store i32 %150, i32* %elemsize, align 4, !dbg !7882
  %151 = load i32, i32* %mode.addr, align 4, !dbg !7883
  %cmp195 = icmp eq i32 %151, 2, !dbg !7885
  br i1 %cmp195, label %if.then197, label %if.end199, !dbg !7886

if.then197:                                       ; preds = %if.end190
  %152 = load i32, i32* %elemsize, align 4, !dbg !7887
  %mul198 = mul nsw i32 %152, 3, !dbg !7887
  store i32 %mul198, i32* %elemsize, align 4, !dbg !7887
  br label %if.end199, !dbg !7888

if.end199:                                        ; preds = %if.then197, %if.end190
  %153 = load i32, i32* %start.addr, align 4, !dbg !7889
  store i32 %153, i32* %a, align 4, !dbg !7891
  br label %for.cond, !dbg !7892

for.cond:                                         ; preds = %for.inc, %if.end199
  %154 = load i32, i32* %a, align 4, !dbg !7893
  %155 = load i32, i32* %end.addr, align 4, !dbg !7895
  %cmp200 = icmp slt i32 %154, %155, !dbg !7896
  br i1 %cmp200, label %for.body, label %for.end, !dbg !7897

for.body:                                         ; preds = %for.cond
  %156 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !7898
  %elemstr202 = getelementptr inbounds %struct.Key, %struct.Key* %156, i32 0, i32 3, !dbg !7900
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %elemstr202, i64 0, i64 0, !dbg !7898
  store i8* %arraydecay, i8** %cp, align 8, !dbg !7901
  %157 = load i32, i32* %mode.addr, align 4, !dbg !7902
  %cmp203 = icmp eq i32 %157, 2, !dbg !7904
  br i1 %cmp203, label %if.then205, label %if.end207, !dbg !7905

if.then205:                                       ; preds = %for.body
  %arraydecay206 = getelementptr inbounds [8 x i8], [8 x i8]* %elemstr, i64 0, i64 0, !dbg !7906
  store i8* %arraydecay206, i8** %cp, align 8, !dbg !7907
  br label %if.end207, !dbg !7908

if.end207:                                        ; preds = %if.then205, %for.body
  %arraydecay208 = getelementptr inbounds [32 x i32], [32 x i32]* %ofs, i64 0, i64 0, !dbg !7909
  store i32* %arraydecay208, i32** %ofsp, align 8, !dbg !7910
  br label %while.cond, !dbg !7911

while.cond:                                       ; preds = %sw.epilog, %if.end207
  %158 = load i8*, i8** %cp, align 8, !dbg !7912
  %arrayidx209 = getelementptr inbounds i8, i8* %158, i64 0, !dbg !7912
  %159 = load i8, i8* %arrayidx209, align 1, !dbg !7912
  %tobool210 = icmp ne i8 %159, 0, !dbg !7911
  br i1 %tobool210, label %while.body, label %while.end, !dbg !7911

while.body:                                       ; preds = %while.cond
  %160 = load i8*, i8** %cp, align 8, !dbg !7913
  %arrayidx211 = getelementptr inbounds i8, i8* %160, i64 1, !dbg !7913
  %161 = load i8, i8* %arrayidx211, align 1, !dbg !7913
  %conv212 = zext i8 %161 to i32, !dbg !7913
  switch i32 %conv212, label %sw.default [
    i32 4, label %sw.bb
    i32 101, label %sw.bb213
    i32 100, label %sw.bb214
  ], !dbg !7915

sw.bb:                                            ; preds = %while.body
  %162 = load i8*, i8** %poin.addr, align 8, !dbg !7916
  %163 = bitcast i8* %162 to float*, !dbg !7918
  %164 = load i8*, i8** %k1, align 8, !dbg !7919
  %165 = bitcast i8* %164 to float*, !dbg !7920
  %166 = load i8*, i8** %k2, align 8, !dbg !7921
  %167 = bitcast i8* %166 to float*, !dbg !7922
  %168 = load i8*, i8** %k3, align 8, !dbg !7923
  %169 = bitcast i8* %168 to float*, !dbg !7924
  %170 = load i8*, i8** %k4, align 8, !dbg !7925
  %171 = bitcast i8* %170 to float*, !dbg !7926
  %172 = load float*, float** %t.addr, align 8, !dbg !7927
  call void @flerp(i32 3, float* %163, float* %165, float* %167, float* %169, float* %171, float* %172), !dbg !7928
  br label %sw.epilog, !dbg !7929

sw.bb213:                                         ; preds = %while.body
  %173 = load i8*, i8** %poin.addr, align 8, !dbg !7930
  %174 = bitcast i8* %173 to float*, !dbg !7931
  %175 = load i8*, i8** %k1, align 8, !dbg !7932
  %176 = bitcast i8* %175 to float*, !dbg !7933
  %177 = load i8*, i8** %k2, align 8, !dbg !7934
  %178 = bitcast i8* %177 to float*, !dbg !7935
  %179 = load i8*, i8** %k3, align 8, !dbg !7936
  %180 = bitcast i8* %179 to float*, !dbg !7937
  %181 = load i8*, i8** %k4, align 8, !dbg !7938
  %182 = bitcast i8* %181 to float*, !dbg !7939
  %183 = load float*, float** %t.addr, align 8, !dbg !7940
  call void @flerp(i32 4, float* %174, float* %176, float* %178, float* %180, float* %182, float* %183), !dbg !7941
  br label %sw.epilog, !dbg !7942

sw.bb214:                                         ; preds = %while.body
  %184 = load i8*, i8** %poin.addr, align 8, !dbg !7943
  %185 = bitcast i8* %184 to float*, !dbg !7944
  %186 = load i8*, i8** %k1, align 8, !dbg !7945
  %187 = bitcast i8* %186 to float*, !dbg !7946
  %188 = load i8*, i8** %k2, align 8, !dbg !7947
  %189 = bitcast i8* %188 to float*, !dbg !7948
  %190 = load i8*, i8** %k3, align 8, !dbg !7949
  %191 = bitcast i8* %190 to float*, !dbg !7950
  %192 = load i8*, i8** %k4, align 8, !dbg !7951
  %193 = bitcast i8* %192 to float*, !dbg !7952
  %194 = load float*, float** %t.addr, align 8, !dbg !7953
  call void @flerp(i32 12, float* %185, float* %187, float* %189, float* %191, float* %193, float* %194), !dbg !7954
  br label %sw.epilog, !dbg !7955

sw.default:                                       ; preds = %while.body
  %195 = load i8*, i8** %freek1, align 8, !dbg !7956
  %tobool215 = icmp ne i8* %195, null, !dbg !7956
  br i1 %tobool215, label %if.then216, label %if.end217, !dbg !7958

if.then216:                                       ; preds = %sw.default
  %196 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7959
  %197 = load i8*, i8** %freek1, align 8, !dbg !7960
  call void %196(i8* %197), !dbg !7959
  br label %if.end217, !dbg !7959

if.end217:                                        ; preds = %if.then216, %sw.default
  %198 = load i8*, i8** %freek2, align 8, !dbg !7961
  %tobool218 = icmp ne i8* %198, null, !dbg !7961
  br i1 %tobool218, label %if.then219, label %if.end220, !dbg !7963

if.then219:                                       ; preds = %if.end217
  %199 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7964
  %200 = load i8*, i8** %freek2, align 8, !dbg !7965
  call void %199(i8* %200), !dbg !7964
  br label %if.end220, !dbg !7964

if.end220:                                        ; preds = %if.then219, %if.end217
  %201 = load i8*, i8** %freek3, align 8, !dbg !7966
  %tobool221 = icmp ne i8* %201, null, !dbg !7966
  br i1 %tobool221, label %if.then222, label %if.end223, !dbg !7968

if.then222:                                       ; preds = %if.end220
  %202 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7969
  %203 = load i8*, i8** %freek3, align 8, !dbg !7970
  call void %202(i8* %203), !dbg !7969
  br label %if.end223, !dbg !7969

if.end223:                                        ; preds = %if.then222, %if.end220
  %204 = load i8*, i8** %freek4, align 8, !dbg !7971
  %tobool224 = icmp ne i8* %204, null, !dbg !7971
  br i1 %tobool224, label %if.then225, label %if.end226, !dbg !7973

if.then225:                                       ; preds = %if.end223
  %205 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7974
  %206 = load i8*, i8** %freek4, align 8, !dbg !7975
  call void %205(i8* %206), !dbg !7974
  br label %if.end226, !dbg !7974

if.end226:                                        ; preds = %if.then225, %if.end223
  br label %if.end326, !dbg !7976

sw.epilog:                                        ; preds = %sw.bb214, %sw.bb213, %sw.bb
  %207 = load i32*, i32** %ofsp, align 8, !dbg !7977
  %208 = load i32, i32* %207, align 4, !dbg !7978
  %209 = load i8*, i8** %poin.addr, align 8, !dbg !7979
  %idx.ext227 = sext i32 %208 to i64, !dbg !7979
  %add.ptr228 = getelementptr inbounds i8, i8* %209, i64 %idx.ext227, !dbg !7979
  store i8* %add.ptr228, i8** %poin.addr, align 8, !dbg !7979
  %210 = load i8*, i8** %cp, align 8, !dbg !7980
  %add.ptr229 = getelementptr inbounds i8, i8* %210, i64 2, !dbg !7980
  store i8* %add.ptr229, i8** %cp, align 8, !dbg !7980
  %211 = load i32*, i32** %ofsp, align 8, !dbg !7981
  %incdec.ptr = getelementptr inbounds i32, i32* %211, i32 1, !dbg !7981
  store i32* %incdec.ptr, i32** %ofsp, align 8, !dbg !7981
  br label %while.cond, !dbg !7911, !llvm.loop !7982

while.end:                                        ; preds = %while.cond
  %212 = load i32, i32* %flagdo, align 4, !dbg !7984
  %and230 = and i32 %212, 1, !dbg !7986
  %tobool231 = icmp ne i32 %and230, 0, !dbg !7986
  br i1 %tobool231, label %if.then232, label %if.end249, !dbg !7987

if.then232:                                       ; preds = %while.end
  %213 = load i32, i32* %flagflo, align 4, !dbg !7988
  %and233 = and i32 %213, 1, !dbg !7991
  %tobool234 = icmp ne i32 %and233, 0, !dbg !7991
  br i1 %tobool234, label %if.then235, label %if.else245, !dbg !7992

if.then235:                                       ; preds = %if.then232
  %214 = load float, float* %k1d, align 4, !dbg !7993
  %215 = load float, float* %k1tot, align 4, !dbg !7995
  %add236 = fadd float %215, %214, !dbg !7995
  store float %add236, float* %k1tot, align 4, !dbg !7995
  br label %while.cond237, !dbg !7996

while.cond237:                                    ; preds = %while.body240, %if.then235
  %216 = load float, float* %k1tot, align 4, !dbg !7997
  %cmp238 = fcmp oge float %216, 1.000000e+00, !dbg !7998
  br i1 %cmp238, label %while.body240, label %while.end244, !dbg !7996

while.body240:                                    ; preds = %while.cond237
  %217 = load float, float* %k1tot, align 4, !dbg !7999
  %sub241 = fsub float %217, 1.000000e+00, !dbg !7999
  store float %sub241, float* %k1tot, align 4, !dbg !7999
  %218 = load i32, i32* %elemsize, align 4, !dbg !8001
  %219 = load i8*, i8** %k1, align 8, !dbg !8002
  %idx.ext242 = sext i32 %218 to i64, !dbg !8002
  %add.ptr243 = getelementptr inbounds i8, i8* %219, i64 %idx.ext242, !dbg !8002
  store i8* %add.ptr243, i8** %k1, align 8, !dbg !8002
  br label %while.cond237, !dbg !7996, !llvm.loop !8003

while.end244:                                     ; preds = %while.cond237
  br label %if.end248, !dbg !8005

if.else245:                                       ; preds = %if.then232
  %220 = load i32, i32* %elemsize, align 4, !dbg !8006
  %221 = load i8*, i8** %k1, align 8, !dbg !8007
  %idx.ext246 = sext i32 %220 to i64, !dbg !8007
  %add.ptr247 = getelementptr inbounds i8, i8* %221, i64 %idx.ext246, !dbg !8007
  store i8* %add.ptr247, i8** %k1, align 8, !dbg !8007
  br label %if.end248

if.end248:                                        ; preds = %if.else245, %while.end244
  br label %if.end249, !dbg !8008

if.end249:                                        ; preds = %if.end248, %while.end
  %222 = load i32, i32* %flagdo, align 4, !dbg !8009
  %and250 = and i32 %222, 2, !dbg !8011
  %tobool251 = icmp ne i32 %and250, 0, !dbg !8011
  br i1 %tobool251, label %if.then252, label %if.end269, !dbg !8012

if.then252:                                       ; preds = %if.end249
  %223 = load i32, i32* %flagflo, align 4, !dbg !8013
  %and253 = and i32 %223, 2, !dbg !8016
  %tobool254 = icmp ne i32 %and253, 0, !dbg !8016
  br i1 %tobool254, label %if.then255, label %if.else265, !dbg !8017

if.then255:                                       ; preds = %if.then252
  %224 = load float, float* %k2d, align 4, !dbg !8018
  %225 = load float, float* %k2tot, align 4, !dbg !8020
  %add256 = fadd float %225, %224, !dbg !8020
  store float %add256, float* %k2tot, align 4, !dbg !8020
  br label %while.cond257, !dbg !8021

while.cond257:                                    ; preds = %while.body260, %if.then255
  %226 = load float, float* %k2tot, align 4, !dbg !8022
  %cmp258 = fcmp oge float %226, 1.000000e+00, !dbg !8023
  br i1 %cmp258, label %while.body260, label %while.end264, !dbg !8021

while.body260:                                    ; preds = %while.cond257
  %227 = load float, float* %k2tot, align 4, !dbg !8024
  %sub261 = fsub float %227, 1.000000e+00, !dbg !8024
  store float %sub261, float* %k2tot, align 4, !dbg !8024
  %228 = load i32, i32* %elemsize, align 4, !dbg !8026
  %229 = load i8*, i8** %k2, align 8, !dbg !8027
  %idx.ext262 = sext i32 %228 to i64, !dbg !8027
  %add.ptr263 = getelementptr inbounds i8, i8* %229, i64 %idx.ext262, !dbg !8027
  store i8* %add.ptr263, i8** %k2, align 8, !dbg !8027
  br label %while.cond257, !dbg !8021, !llvm.loop !8028

while.end264:                                     ; preds = %while.cond257
  br label %if.end268, !dbg !8030

if.else265:                                       ; preds = %if.then252
  %230 = load i32, i32* %elemsize, align 4, !dbg !8031
  %231 = load i8*, i8** %k2, align 8, !dbg !8033
  %idx.ext266 = sext i32 %230 to i64, !dbg !8033
  %add.ptr267 = getelementptr inbounds i8, i8* %231, i64 %idx.ext266, !dbg !8033
  store i8* %add.ptr267, i8** %k2, align 8, !dbg !8033
  br label %if.end268

if.end268:                                        ; preds = %if.else265, %while.end264
  br label %if.end269, !dbg !8034

if.end269:                                        ; preds = %if.end268, %if.end249
  %232 = load i32, i32* %flagdo, align 4, !dbg !8035
  %and270 = and i32 %232, 4, !dbg !8037
  %tobool271 = icmp ne i32 %and270, 0, !dbg !8037
  br i1 %tobool271, label %if.then272, label %if.end289, !dbg !8038

if.then272:                                       ; preds = %if.end269
  %233 = load i32, i32* %flagflo, align 4, !dbg !8039
  %and273 = and i32 %233, 4, !dbg !8042
  %tobool274 = icmp ne i32 %and273, 0, !dbg !8042
  br i1 %tobool274, label %if.then275, label %if.else285, !dbg !8043

if.then275:                                       ; preds = %if.then272
  %234 = load float, float* %k3d, align 4, !dbg !8044
  %235 = load float, float* %k3tot, align 4, !dbg !8046
  %add276 = fadd float %235, %234, !dbg !8046
  store float %add276, float* %k3tot, align 4, !dbg !8046
  br label %while.cond277, !dbg !8047

while.cond277:                                    ; preds = %while.body280, %if.then275
  %236 = load float, float* %k3tot, align 4, !dbg !8048
  %cmp278 = fcmp oge float %236, 1.000000e+00, !dbg !8049
  br i1 %cmp278, label %while.body280, label %while.end284, !dbg !8047

while.body280:                                    ; preds = %while.cond277
  %237 = load float, float* %k3tot, align 4, !dbg !8050
  %sub281 = fsub float %237, 1.000000e+00, !dbg !8050
  store float %sub281, float* %k3tot, align 4, !dbg !8050
  %238 = load i32, i32* %elemsize, align 4, !dbg !8052
  %239 = load i8*, i8** %k3, align 8, !dbg !8053
  %idx.ext282 = sext i32 %238 to i64, !dbg !8053
  %add.ptr283 = getelementptr inbounds i8, i8* %239, i64 %idx.ext282, !dbg !8053
  store i8* %add.ptr283, i8** %k3, align 8, !dbg !8053
  br label %while.cond277, !dbg !8047, !llvm.loop !8054

while.end284:                                     ; preds = %while.cond277
  br label %if.end288, !dbg !8056

if.else285:                                       ; preds = %if.then272
  %240 = load i32, i32* %elemsize, align 4, !dbg !8057
  %241 = load i8*, i8** %k3, align 8, !dbg !8059
  %idx.ext286 = sext i32 %240 to i64, !dbg !8059
  %add.ptr287 = getelementptr inbounds i8, i8* %241, i64 %idx.ext286, !dbg !8059
  store i8* %add.ptr287, i8** %k3, align 8, !dbg !8059
  br label %if.end288

if.end288:                                        ; preds = %if.else285, %while.end284
  br label %if.end289, !dbg !8060

if.end289:                                        ; preds = %if.end288, %if.end269
  %242 = load i32, i32* %flagdo, align 4, !dbg !8061
  %and290 = and i32 %242, 8, !dbg !8063
  %tobool291 = icmp ne i32 %and290, 0, !dbg !8063
  br i1 %tobool291, label %if.then292, label %if.end309, !dbg !8064

if.then292:                                       ; preds = %if.end289
  %243 = load i32, i32* %flagflo, align 4, !dbg !8065
  %and293 = and i32 %243, 8, !dbg !8068
  %tobool294 = icmp ne i32 %and293, 0, !dbg !8068
  br i1 %tobool294, label %if.then295, label %if.else305, !dbg !8069

if.then295:                                       ; preds = %if.then292
  %244 = load float, float* %k4d, align 4, !dbg !8070
  %245 = load float, float* %k4tot, align 4, !dbg !8072
  %add296 = fadd float %245, %244, !dbg !8072
  store float %add296, float* %k4tot, align 4, !dbg !8072
  br label %while.cond297, !dbg !8073

while.cond297:                                    ; preds = %while.body300, %if.then295
  %246 = load float, float* %k4tot, align 4, !dbg !8074
  %cmp298 = fcmp oge float %246, 1.000000e+00, !dbg !8075
  br i1 %cmp298, label %while.body300, label %while.end304, !dbg !8073

while.body300:                                    ; preds = %while.cond297
  %247 = load float, float* %k4tot, align 4, !dbg !8076
  %sub301 = fsub float %247, 1.000000e+00, !dbg !8076
  store float %sub301, float* %k4tot, align 4, !dbg !8076
  %248 = load i32, i32* %elemsize, align 4, !dbg !8078
  %249 = load i8*, i8** %k4, align 8, !dbg !8079
  %idx.ext302 = sext i32 %248 to i64, !dbg !8079
  %add.ptr303 = getelementptr inbounds i8, i8* %249, i64 %idx.ext302, !dbg !8079
  store i8* %add.ptr303, i8** %k4, align 8, !dbg !8079
  br label %while.cond297, !dbg !8073, !llvm.loop !8080

while.end304:                                     ; preds = %while.cond297
  br label %if.end308, !dbg !8082

if.else305:                                       ; preds = %if.then292
  %250 = load i32, i32* %elemsize, align 4, !dbg !8083
  %251 = load i8*, i8** %k4, align 8, !dbg !8085
  %idx.ext306 = sext i32 %250 to i64, !dbg !8085
  %add.ptr307 = getelementptr inbounds i8, i8* %251, i64 %idx.ext306, !dbg !8085
  store i8* %add.ptr307, i8** %k4, align 8, !dbg !8085
  br label %if.end308

if.end308:                                        ; preds = %if.else305, %while.end304
  br label %if.end309, !dbg !8086

if.end309:                                        ; preds = %if.end308, %if.end289
  %252 = load i32, i32* %mode.addr, align 4, !dbg !8087
  %cmp310 = icmp eq i32 %252, 2, !dbg !8089
  br i1 %cmp310, label %if.then312, label %if.end314, !dbg !8090

if.then312:                                       ; preds = %if.end309
  %253 = load i32, i32* %a, align 4, !dbg !8091
  %add313 = add nsw i32 %253, 2, !dbg !8091
  store i32 %add313, i32* %a, align 4, !dbg !8091
  br label %if.end314, !dbg !8092

if.end314:                                        ; preds = %if.then312, %if.end309
  br label %for.inc, !dbg !8093

for.inc:                                          ; preds = %if.end314
  %254 = load i32, i32* %a, align 4, !dbg !8094
  %inc = add nsw i32 %254, 1, !dbg !8094
  store i32 %inc, i32* %a, align 4, !dbg !8094
  br label %for.cond, !dbg !8095, !llvm.loop !8096

for.end:                                          ; preds = %for.cond
  %255 = load i8*, i8** %freek1, align 8, !dbg !8098
  %tobool315 = icmp ne i8* %255, null, !dbg !8098
  br i1 %tobool315, label %if.then316, label %if.end317, !dbg !8100

if.then316:                                       ; preds = %for.end
  %256 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8101
  %257 = load i8*, i8** %freek1, align 8, !dbg !8102
  call void %256(i8* %257), !dbg !8101
  br label %if.end317, !dbg !8101

if.end317:                                        ; preds = %if.then316, %for.end
  %258 = load i8*, i8** %freek2, align 8, !dbg !8103
  %tobool318 = icmp ne i8* %258, null, !dbg !8103
  br i1 %tobool318, label %if.then319, label %if.end320, !dbg !8105

if.then319:                                       ; preds = %if.end317
  %259 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8106
  %260 = load i8*, i8** %freek2, align 8, !dbg !8107
  call void %259(i8* %260), !dbg !8106
  br label %if.end320, !dbg !8106

if.end320:                                        ; preds = %if.then319, %if.end317
  %261 = load i8*, i8** %freek3, align 8, !dbg !8108
  %tobool321 = icmp ne i8* %261, null, !dbg !8108
  br i1 %tobool321, label %if.then322, label %if.end323, !dbg !8110

if.then322:                                       ; preds = %if.end320
  %262 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8111
  %263 = load i8*, i8** %freek3, align 8, !dbg !8112
  call void %262(i8* %263), !dbg !8111
  br label %if.end323, !dbg !8111

if.end323:                                        ; preds = %if.then322, %if.end320
  %264 = load i8*, i8** %freek4, align 8, !dbg !8113
  %tobool324 = icmp ne i8* %264, null, !dbg !8113
  br i1 %tobool324, label %if.then325, label %if.end326, !dbg !8115

if.then325:                                       ; preds = %if.end323
  %265 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8116
  %266 = load i8*, i8** %freek4, align 8, !dbg !8117
  call void %265(i8* %266), !dbg !8116
  br label %if.end326, !dbg !8116

if.end326:                                        ; preds = %if.then, %if.end226, %if.then325, %if.end323
  ret void, !dbg !8118
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local void @interp_v4_v4v4(float*, float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @flerp(i32 %tot, float* %in, float* %f0, float* %f1, float* %f2, float* %f3, float* %t) #0 !dbg !8119 {
entry:
  %tot.addr = alloca i32, align 4
  %in.addr = alloca float*, align 8
  %f0.addr = alloca float*, align 8
  %f1.addr = alloca float*, align 8
  %f2.addr = alloca float*, align 8
  %f3.addr = alloca float*, align 8
  %t.addr = alloca float*, align 8
  %a = alloca i32, align 4
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !8122, metadata !DIExpression()), !dbg !8123
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !8124, metadata !DIExpression()), !dbg !8125
  store float* %f0, float** %f0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %f0.addr, metadata !8126, metadata !DIExpression()), !dbg !8127
  store float* %f1, float** %f1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %f1.addr, metadata !8128, metadata !DIExpression()), !dbg !8129
  store float* %f2, float** %f2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %f2.addr, metadata !8130, metadata !DIExpression()), !dbg !8131
  store float* %f3, float** %f3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %f3.addr, metadata !8132, metadata !DIExpression()), !dbg !8133
  store float* %t, float** %t.addr, align 8
  call void @llvm.dbg.declare(metadata float** %t.addr, metadata !8134, metadata !DIExpression()), !dbg !8135
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8136, metadata !DIExpression()), !dbg !8137
  store i32 0, i32* %a, align 4, !dbg !8138
  br label %for.cond, !dbg !8140

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %a, align 4, !dbg !8141
  %1 = load i32, i32* %tot.addr, align 4, !dbg !8143
  %cmp = icmp slt i32 %0, %1, !dbg !8144
  br i1 %cmp, label %for.body, label %for.end, !dbg !8145

for.body:                                         ; preds = %for.cond
  %2 = load float*, float** %t.addr, align 8, !dbg !8146
  %arrayidx = getelementptr inbounds float, float* %2, i64 0, !dbg !8146
  %3 = load float, float* %arrayidx, align 4, !dbg !8146
  %4 = load float*, float** %f0.addr, align 8, !dbg !8148
  %5 = load i32, i32* %a, align 4, !dbg !8149
  %idxprom = sext i32 %5 to i64, !dbg !8148
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 %idxprom, !dbg !8148
  %6 = load float, float* %arrayidx1, align 4, !dbg !8148
  %mul = fmul float %3, %6, !dbg !8150
  %7 = load float*, float** %t.addr, align 8, !dbg !8151
  %arrayidx2 = getelementptr inbounds float, float* %7, i64 1, !dbg !8151
  %8 = load float, float* %arrayidx2, align 4, !dbg !8151
  %9 = load float*, float** %f1.addr, align 8, !dbg !8152
  %10 = load i32, i32* %a, align 4, !dbg !8153
  %idxprom3 = sext i32 %10 to i64, !dbg !8152
  %arrayidx4 = getelementptr inbounds float, float* %9, i64 %idxprom3, !dbg !8152
  %11 = load float, float* %arrayidx4, align 4, !dbg !8152
  %mul5 = fmul float %8, %11, !dbg !8154
  %add = fadd float %mul, %mul5, !dbg !8155
  %12 = load float*, float** %t.addr, align 8, !dbg !8156
  %arrayidx6 = getelementptr inbounds float, float* %12, i64 2, !dbg !8156
  %13 = load float, float* %arrayidx6, align 4, !dbg !8156
  %14 = load float*, float** %f2.addr, align 8, !dbg !8157
  %15 = load i32, i32* %a, align 4, !dbg !8158
  %idxprom7 = sext i32 %15 to i64, !dbg !8157
  %arrayidx8 = getelementptr inbounds float, float* %14, i64 %idxprom7, !dbg !8157
  %16 = load float, float* %arrayidx8, align 4, !dbg !8157
  %mul9 = fmul float %13, %16, !dbg !8159
  %add10 = fadd float %add, %mul9, !dbg !8160
  %17 = load float*, float** %t.addr, align 8, !dbg !8161
  %arrayidx11 = getelementptr inbounds float, float* %17, i64 3, !dbg !8161
  %18 = load float, float* %arrayidx11, align 4, !dbg !8161
  %19 = load float*, float** %f3.addr, align 8, !dbg !8162
  %20 = load i32, i32* %a, align 4, !dbg !8163
  %idxprom12 = sext i32 %20 to i64, !dbg !8162
  %arrayidx13 = getelementptr inbounds float, float* %19, i64 %idxprom12, !dbg !8162
  %21 = load float, float* %arrayidx13, align 4, !dbg !8162
  %mul14 = fmul float %18, %21, !dbg !8164
  %add15 = fadd float %add10, %mul14, !dbg !8165
  %22 = load float*, float** %in.addr, align 8, !dbg !8166
  %23 = load i32, i32* %a, align 4, !dbg !8167
  %idxprom16 = sext i32 %23 to i64, !dbg !8166
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 %idxprom16, !dbg !8166
  store float %add15, float* %arrayidx17, align 4, !dbg !8168
  br label %for.inc, !dbg !8169

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %a, align 4, !dbg !8170
  %inc = add nsw i32 %24, 1, !dbg !8170
  store i32 %inc, i32* %a, align 4, !dbg !8170
  br label %for.cond, !dbg !8171, !llvm.loop !8172

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8174
}

declare dso_local void @outside_lattice(%struct.Lattice*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @do_rel_cu_key(%struct.Curve* %cu, %struct.Key* %key, %struct.KeyBlock* %actkb, i8* %out, i32 %tot) #0 !dbg !8175 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %key.addr = alloca %struct.Key*, align 8
  %actkb.addr = alloca %struct.KeyBlock*, align 8
  %out.addr = alloca i8*, align 8
  %tot.addr = alloca i32, align 4
  %nu = alloca %struct.Nurb*, align 8
  %a = alloca i32, align 4
  %step = alloca i32, align 4
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !8178, metadata !DIExpression()), !dbg !8179
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !8180, metadata !DIExpression()), !dbg !8181
  store %struct.KeyBlock* %actkb, %struct.KeyBlock** %actkb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %actkb.addr, metadata !8182, metadata !DIExpression()), !dbg !8183
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !8184, metadata !DIExpression()), !dbg !8185
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !8186, metadata !DIExpression()), !dbg !8187
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !8188, metadata !DIExpression()), !dbg !8189
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8190, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.declare(metadata i32* %step, metadata !8192, metadata !DIExpression()), !dbg !8193
  store i32 0, i32* %a, align 4, !dbg !8194
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !8196
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 3, !dbg !8197
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb, i32 0, i32 0, !dbg !8198
  %1 = load i8*, i8** %first, align 8, !dbg !8198
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !8196
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !8199
  br label %for.cond, !dbg !8200

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8201
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !8203
  br i1 %tobool, label %for.body, label %for.end, !dbg !8203

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8204
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 17, !dbg !8207
  %5 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !8207
  %tobool1 = icmp ne %struct.BPoint* %5, null, !dbg !8204
  br i1 %tobool1, label %if.then, label %if.else, !dbg !8208

if.then:                                          ; preds = %for.body
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8209
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 6, !dbg !8211
  %7 = load i32, i32* %pntsu, align 8, !dbg !8211
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8212
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 7, !dbg !8213
  %9 = load i32, i32* %pntsv, align 4, !dbg !8213
  %mul = mul nsw i32 %7, %9, !dbg !8214
  store i32 %mul, i32* %step, align 4, !dbg !8215
  %10 = load i32, i32* %a, align 4, !dbg !8216
  %11 = load i32, i32* %a, align 4, !dbg !8217
  %12 = load i32, i32* %step, align 4, !dbg !8218
  %add = add nsw i32 %11, %12, !dbg !8219
  %13 = load i32, i32* %tot.addr, align 4, !dbg !8220
  %14 = load i8*, i8** %out.addr, align 8, !dbg !8221
  %15 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !8222
  %16 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb.addr, align 8, !dbg !8223
  call void @BKE_key_evaluate_relative(i32 %10, i32 %add, i32 %13, i8* %14, %struct.Key* %15, %struct.KeyBlock* %16, float** null, i32 1), !dbg !8224
  br label %if.end8, !dbg !8225

if.else:                                          ; preds = %for.body
  %17 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8226
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %17, i32 0, i32 18, !dbg !8228
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !8228
  %tobool2 = icmp ne %struct.BezTriple* %18, null, !dbg !8226
  br i1 %tobool2, label %if.then3, label %if.else7, !dbg !8229

if.then3:                                         ; preds = %if.else
  %19 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8230
  %pntsu4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 6, !dbg !8232
  %20 = load i32, i32* %pntsu4, align 8, !dbg !8232
  %mul5 = mul nsw i32 3, %20, !dbg !8233
  store i32 %mul5, i32* %step, align 4, !dbg !8234
  %21 = load i32, i32* %a, align 4, !dbg !8235
  %22 = load i32, i32* %a, align 4, !dbg !8236
  %23 = load i32, i32* %step, align 4, !dbg !8237
  %add6 = add nsw i32 %22, %23, !dbg !8238
  %24 = load i32, i32* %tot.addr, align 4, !dbg !8239
  %25 = load i8*, i8** %out.addr, align 8, !dbg !8240
  %26 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !8241
  %27 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb.addr, align 8, !dbg !8242
  call void @BKE_key_evaluate_relative(i32 %21, i32 %add6, i32 %24, i8* %25, %struct.Key* %26, %struct.KeyBlock* %27, float** null, i32 2), !dbg !8243
  br label %if.end, !dbg !8244

if.else7:                                         ; preds = %if.else
  store i32 0, i32* %step, align 4, !dbg !8245
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then3
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !8247

for.inc:                                          ; preds = %if.end8
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8248
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 0, !dbg !8249
  %29 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !8249
  store %struct.Nurb* %29, %struct.Nurb** %nu, align 8, !dbg !8250
  %30 = load i32, i32* %step, align 4, !dbg !8251
  %31 = load i32, i32* %a, align 4, !dbg !8252
  %add9 = add nsw i32 %31, %30, !dbg !8252
  store i32 %add9, i32* %a, align 4, !dbg !8252
  br label %for.cond, !dbg !8253, !llvm.loop !8254

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8256
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_cu_key(%struct.Curve* %cu, %struct.Key* %key, %struct.KeyBlock* %actkb, %struct.KeyBlock** %k, float* %t, i8* %out, i32 %tot) #0 !dbg !8257 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %key.addr = alloca %struct.Key*, align 8
  %actkb.addr = alloca %struct.KeyBlock*, align 8
  %k.addr = alloca %struct.KeyBlock**, align 8
  %t.addr = alloca float*, align 8
  %out.addr = alloca i8*, align 8
  %tot.addr = alloca i32, align 4
  %nu = alloca %struct.Nurb*, align 8
  %a = alloca i32, align 4
  %step = alloca i32, align 4
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !8260, metadata !DIExpression()), !dbg !8261
  store %struct.Key* %key, %struct.Key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Key** %key.addr, metadata !8262, metadata !DIExpression()), !dbg !8263
  store %struct.KeyBlock* %actkb, %struct.KeyBlock** %actkb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %actkb.addr, metadata !8264, metadata !DIExpression()), !dbg !8265
  store %struct.KeyBlock** %k, %struct.KeyBlock*** %k.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock*** %k.addr, metadata !8266, metadata !DIExpression()), !dbg !8267
  store float* %t, float** %t.addr, align 8
  call void @llvm.dbg.declare(metadata float** %t.addr, metadata !8268, metadata !DIExpression()), !dbg !8269
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !8270, metadata !DIExpression()), !dbg !8271
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !8272, metadata !DIExpression()), !dbg !8273
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !8274, metadata !DIExpression()), !dbg !8275
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8276, metadata !DIExpression()), !dbg !8277
  call void @llvm.dbg.declare(metadata i32* %step, metadata !8278, metadata !DIExpression()), !dbg !8279
  store i32 0, i32* %a, align 4, !dbg !8280
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !8282
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 3, !dbg !8283
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb, i32 0, i32 0, !dbg !8284
  %1 = load i8*, i8** %first, align 8, !dbg !8284
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !8282
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !8285
  br label %for.cond, !dbg !8286

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8287
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !8289
  br i1 %tobool, label %for.body, label %for.end, !dbg !8289

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8290
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 17, !dbg !8293
  %5 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !8293
  %tobool1 = icmp ne %struct.BPoint* %5, null, !dbg !8290
  br i1 %tobool1, label %if.then, label %if.else, !dbg !8294

if.then:                                          ; preds = %for.body
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8295
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 6, !dbg !8297
  %7 = load i32, i32* %pntsu, align 8, !dbg !8297
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8298
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 7, !dbg !8299
  %9 = load i32, i32* %pntsv, align 4, !dbg !8299
  %mul = mul nsw i32 %7, %9, !dbg !8300
  store i32 %mul, i32* %step, align 4, !dbg !8301
  %10 = load i32, i32* %a, align 4, !dbg !8302
  %11 = load i32, i32* %a, align 4, !dbg !8303
  %12 = load i32, i32* %step, align 4, !dbg !8304
  %add = add nsw i32 %11, %12, !dbg !8305
  %13 = load i32, i32* %tot.addr, align 4, !dbg !8306
  %14 = load i8*, i8** %out.addr, align 8, !dbg !8307
  %15 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !8308
  %16 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb.addr, align 8, !dbg !8309
  %17 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !8310
  %18 = load float*, float** %t.addr, align 8, !dbg !8311
  call void @do_key(i32 %10, i32 %add, i32 %13, i8* %14, %struct.Key* %15, %struct.KeyBlock* %16, %struct.KeyBlock** %17, float* %18, i32 1), !dbg !8312
  br label %if.end8, !dbg !8313

if.else:                                          ; preds = %for.body
  %19 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8314
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 18, !dbg !8316
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !8316
  %tobool2 = icmp ne %struct.BezTriple* %20, null, !dbg !8314
  br i1 %tobool2, label %if.then3, label %if.else7, !dbg !8317

if.then3:                                         ; preds = %if.else
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8318
  %pntsu4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 6, !dbg !8320
  %22 = load i32, i32* %pntsu4, align 8, !dbg !8320
  %mul5 = mul nsw i32 3, %22, !dbg !8321
  store i32 %mul5, i32* %step, align 4, !dbg !8322
  %23 = load i32, i32* %a, align 4, !dbg !8323
  %24 = load i32, i32* %a, align 4, !dbg !8324
  %25 = load i32, i32* %step, align 4, !dbg !8325
  %add6 = add nsw i32 %24, %25, !dbg !8326
  %26 = load i32, i32* %tot.addr, align 4, !dbg !8327
  %27 = load i8*, i8** %out.addr, align 8, !dbg !8328
  %28 = load %struct.Key*, %struct.Key** %key.addr, align 8, !dbg !8329
  %29 = load %struct.KeyBlock*, %struct.KeyBlock** %actkb.addr, align 8, !dbg !8330
  %30 = load %struct.KeyBlock**, %struct.KeyBlock*** %k.addr, align 8, !dbg !8331
  %31 = load float*, float** %t.addr, align 8, !dbg !8332
  call void @do_key(i32 %23, i32 %add6, i32 %26, i8* %27, %struct.Key* %28, %struct.KeyBlock* %29, %struct.KeyBlock** %30, float* %31, i32 2), !dbg !8333
  br label %if.end, !dbg !8334

if.else7:                                         ; preds = %if.else
  store i32 0, i32* %step, align 4, !dbg !8335
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then3
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !8337

for.inc:                                          ; preds = %if.end8
  %32 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8338
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %32, i32 0, i32 0, !dbg !8339
  %33 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !8339
  store %struct.Nurb* %33, %struct.Nurb** %nu, align 8, !dbg !8340
  %34 = load i32, i32* %step, align 4, !dbg !8341
  %35 = load i32, i32* %a, align 4, !dbg !8342
  %add9 = add nsw i32 %35, %34, !dbg !8342
  store i32 %add9, i32* %a, align 4, !dbg !8342
  br label %for.cond, !dbg !8343, !llvm.loop !8344

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8346
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1945, !1946, !1947}
!llvm.ident = !{!1948}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "slurph_opt", scope: !2, file: !3, line: 77, type: !176, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !139, globals: !1944, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/key.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !11, !17, !22, !36, !47, !53, !59, !67, !74, !78, !95}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 110, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/makesdna/DNA_key_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "KEY_NORMAL", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "KEY_RELATIVE", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 124, baseType: !7, size: 32, elements: !12)
!12 = !{!13, !14, !15, !16}
!13 = !DIEnumerator(name: "KEY_LINEAR", value: 0, isUnsigned: true)
!14 = !DIEnumerator(name: "KEY_CARDINAL", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "KEY_BSPLINE", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "KEY_CATMULL_ROM", value: 3, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 132, baseType: !7, size: 32, elements: !18)
!18 = !{!19, !20, !21}
!19 = !DIEnumerator(name: "KEYBLOCK_MUTE", value: 1, isUnsigned: true)
!20 = !DIEnumerator(name: "KEYBLOCK_SEL", value: 2, isUnsigned: true)
!21 = !DIEnumerator(name: "KEYBLOCK_LOCKED", value: 4, isUnsigned: true)
!22 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !23, line: 339, baseType: !7, size: 32, elements: !24)
!23 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!24 = !{!25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35}
!25 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!26 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!27 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!28 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!29 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!30 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!31 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!32 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!33 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!34 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!35 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !37, line: 94, baseType: !7, size: 32, elements: !38)
!37 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!38 = !{!39, !40, !41, !42, !43, !44, !45, !46}
!39 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!40 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!41 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!42 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!43 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!44 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!45 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!46 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !37, line: 116, baseType: !7, size: 32, elements: !48)
!48 = !{!49, !50, !51, !52}
!49 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!50 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!51 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!52 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !37, line: 131, baseType: !7, size: 32, elements: !54)
!54 = !{!55, !56, !57, !58}
!55 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!56 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!57 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!58 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !37, line: 123, baseType: !7, size: 32, elements: !60)
!60 = !{!61, !62, !63, !64, !65, !66}
!61 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!62 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!63 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!64 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!65 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!66 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!67 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !37, line: 182, baseType: !7, size: 32, elements: !68)
!68 = !{!69, !70, !71, !72, !73}
!69 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!73 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !23, line: 626, baseType: !7, size: 32, elements: !75)
!75 = !{!76, !77}
!76 = !DIEnumerator(name: "OB_SHAPE_LOCK", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "OB_SHAPE_EDIT_MODE", value: 4, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BMIterType", file: !79, line: 57, baseType: !7, size: 32, elements: !80)
!79 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!80 = !{!81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94}
!81 = !DIEnumerator(name: "BM_VERTS_OF_MESH", value: 1, isUnsigned: true)
!82 = !DIEnumerator(name: "BM_EDGES_OF_MESH", value: 2, isUnsigned: true)
!83 = !DIEnumerator(name: "BM_FACES_OF_MESH", value: 3, isUnsigned: true)
!84 = !DIEnumerator(name: "BM_EDGES_OF_VERT", value: 4, isUnsigned: true)
!85 = !DIEnumerator(name: "BM_FACES_OF_VERT", value: 5, isUnsigned: true)
!86 = !DIEnumerator(name: "BM_LOOPS_OF_VERT", value: 6, isUnsigned: true)
!87 = !DIEnumerator(name: "BM_VERTS_OF_EDGE", value: 7, isUnsigned: true)
!88 = !DIEnumerator(name: "BM_FACES_OF_EDGE", value: 8, isUnsigned: true)
!89 = !DIEnumerator(name: "BM_VERTS_OF_FACE", value: 9, isUnsigned: true)
!90 = !DIEnumerator(name: "BM_EDGES_OF_FACE", value: 10, isUnsigned: true)
!91 = !DIEnumerator(name: "BM_LOOPS_OF_FACE", value: 11, isUnsigned: true)
!92 = !DIEnumerator(name: "BM_ALL_LOOPS_OF_FACE", value: 12, isUnsigned: true)
!93 = !DIEnumerator(name: "BM_LOOPS_OF_LOOP", value: 13, isUnsigned: true)
!94 = !DIEnumerator(name: "BM_LOOPS_OF_EDGE", value: 14, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !96, line: 76, baseType: !7, size: 32, elements: !97)
!96 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138}
!98 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!104 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!105 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!108 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!109 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!110 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!111 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!112 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!113 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!114 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!115 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!116 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!117 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!118 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!119 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!120 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!121 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!122 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!123 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!124 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!125 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!126 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!127 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!128 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!129 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!130 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!131 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!132 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!133 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!134 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!135 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!136 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!137 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!138 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!139 = !{!140, !211, !212, !146, !213, !215, !1784, !1834, !214, !176, !1935, !1936, !1940, !592, !653, !657, !635}
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !142, line: 130, baseType: !143)
!142 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !142, line: 117, size: 960, elements: !144)
!144 = !{!145, !147, !148, !150, !169, !173, !175, !177, !178, !179}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !143, file: !142, line: 118, baseType: !146, size: 64)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !143, file: !142, line: 118, baseType: !146, size: 64, offset: 64)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !143, file: !142, line: 119, baseType: !149, size: 64, offset: 128)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !143, file: !142, line: 120, baseType: !151, size: 64, offset: 192)
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !142, line: 136, size: 17600, elements: !153)
!153 = !{!154, !155, !156, !159, !164, !165, !166}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !152, file: !142, line: 137, baseType: !141, size: 960)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !152, file: !142, line: 138, baseType: !140, size: 64, offset: 960)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !152, file: !142, line: 139, baseType: !157, size: 64, offset: 1024)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!158 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !142, line: 43, flags: DIFlagFwdDecl)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !152, file: !142, line: 140, baseType: !160, size: 8192, offset: 1088)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 8192, elements: !162)
!161 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!162 = !{!163}
!163 = !DISubrange(count: 1024)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !152, file: !142, line: 141, baseType: !160, size: 8192, offset: 9280)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !152, file: !142, line: 148, baseType: !151, size: 64, offset: 17472)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !152, file: !142, line: 150, baseType: !167, size: 64, offset: 17536)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!168 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !142, line: 45, flags: DIFlagFwdDecl)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !143, file: !142, line: 121, baseType: !170, size: 528, offset: 256)
!170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 528, elements: !171)
!171 = !{!172}
!172 = !DISubrange(count: 66)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !143, file: !142, line: 126, baseType: !174, size: 16, offset: 784)
!174 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !143, file: !142, line: 127, baseType: !176, size: 32, offset: 800)
!176 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !143, file: !142, line: 128, baseType: !176, size: 32, offset: 832)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !143, file: !142, line: 128, baseType: !176, size: 32, offset: 864)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !143, file: !142, line: 129, baseType: !180, size: 64, offset: 896)
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !142, line: 75, baseType: !182)
!182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !142, line: 62, size: 1024, elements: !183)
!183 = !{!184, !186, !187, !188, !189, !190, !194, !195, !209, !210}
!184 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !182, file: !142, line: 63, baseType: !185, size: 64)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !182, file: !142, line: 63, baseType: !185, size: 64, offset: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !182, file: !142, line: 64, baseType: !161, size: 8, offset: 128)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !182, file: !142, line: 64, baseType: !161, size: 8, offset: 136)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !182, file: !142, line: 65, baseType: !174, size: 16, offset: 144)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !182, file: !142, line: 66, baseType: !191, size: 512, offset: 160)
!191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 512, elements: !192)
!192 = !{!193}
!193 = !DISubrange(count: 64)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !182, file: !142, line: 67, baseType: !176, size: 32, offset: 672)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !182, file: !142, line: 69, baseType: !196, size: 256, offset: 704)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !142, line: 60, baseType: !197)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !142, line: 48, size: 256, elements: !198)
!198 = !{!199, !200, !207, !208}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !197, file: !142, line: 49, baseType: !146, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !197, file: !142, line: 58, baseType: !201, size: 128, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !202, line: 71, baseType: !203)
!202 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !202, line: 69, size: 128, elements: !204)
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !203, file: !202, line: 70, baseType: !146, size: 64)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !203, file: !202, line: 70, baseType: !146, size: 64, offset: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !197, file: !142, line: 59, baseType: !176, size: 32, offset: 192)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !197, file: !142, line: 59, baseType: !176, size: 32, offset: 224)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !182, file: !142, line: 70, baseType: !176, size: 32, offset: 960)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !182, file: !142, line: 74, baseType: !176, size: 32, offset: 992)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 64)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!214 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !217, line: 133, baseType: !218)
!217 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !217, line: 58, size: 11008, elements: !219)
!219 = !{!220, !221, !291, !302, !306, !348, !353, !360, !369, !465, !471, !478, !486, !497, !510, !523, !534, !543, !555, !563, !565, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !218, file: !217, line: 59, baseType: !141, size: 960)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !218, file: !217, line: 60, baseType: !222, size: 64, offset: 960)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !224, line: 838, size: 768, elements: !225)
!224 = !DIFile(filename: "blender/source/blender/makesdna/DNA_anim_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!225 = !{!226, !241, !242, !252, !253, !284, !285, !286, !287, !288, !289, !290}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !223, file: !224, line: 840, baseType: !227, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAction", file: !229, line: 499, baseType: !230)
!229 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !229, line: 486, size: 1600, elements: !231)
!231 = !{!232, !233, !234, !235, !236, !237, !238, !239, !240}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !230, file: !229, line: 487, baseType: !141, size: 960)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !230, file: !229, line: 489, baseType: !201, size: 128, offset: 960)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !230, file: !229, line: 490, baseType: !201, size: 128, offset: 1088)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !230, file: !229, line: 491, baseType: !201, size: 128, offset: 1216)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !230, file: !229, line: 492, baseType: !201, size: 128, offset: 1344)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !230, file: !229, line: 494, baseType: !176, size: 32, offset: 1472)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !230, file: !229, line: 495, baseType: !176, size: 32, offset: 1504)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !230, file: !229, line: 497, baseType: !176, size: 32, offset: 1536)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !230, file: !229, line: 498, baseType: !176, size: 32, offset: 1568)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "tmpact", scope: !223, file: !224, line: 844, baseType: !227, size: 64, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !223, file: !224, line: 848, baseType: !243, size: 64, offset: 128)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimMapper", file: !224, line: 549, baseType: !245)
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimMapper", file: !224, line: 544, size: 320, elements: !246)
!246 = !{!247, !249, !250, !251}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !245, file: !224, line: 545, baseType: !248, size: 64)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !245, file: !224, line: 545, baseType: !248, size: 64, offset: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !245, file: !224, line: 547, baseType: !227, size: 64, offset: 128)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "mappings", scope: !245, file: !224, line: 548, baseType: !201, size: 128, offset: 192)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tracks", scope: !223, file: !224, line: 851, baseType: !201, size: 128, offset: 192)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "actstrip", scope: !223, file: !224, line: 853, baseType: !254, size: 64, offset: 320)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64)
!255 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaStrip", file: !224, line: 594, baseType: !256)
!256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaStrip", file: !224, line: 561, size: 1664, elements: !257)
!257 = !{!258, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !256, file: !224, line: 562, baseType: !259, size: 64)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !256, file: !224, line: 562, baseType: !259, size: 64, offset: 64)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !256, file: !224, line: 564, baseType: !201, size: 128, offset: 128)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !256, file: !224, line: 565, baseType: !227, size: 64, offset: 256)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !256, file: !224, line: 566, baseType: !243, size: 64, offset: 320)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "fcurves", scope: !256, file: !224, line: 568, baseType: !201, size: 128, offset: 384)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !256, file: !224, line: 569, baseType: !201, size: 128, offset: 512)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !256, file: !224, line: 571, baseType: !191, size: 512, offset: 640)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !256, file: !224, line: 573, baseType: !214, size: 32, offset: 1152)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "strip_time", scope: !256, file: !224, line: 574, baseType: !214, size: 32, offset: 1184)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !256, file: !224, line: 576, baseType: !214, size: 32, offset: 1216)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !256, file: !224, line: 576, baseType: !214, size: 32, offset: 1248)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "actstart", scope: !256, file: !224, line: 577, baseType: !214, size: 32, offset: 1280)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "actend", scope: !256, file: !224, line: 577, baseType: !214, size: 32, offset: 1312)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !256, file: !224, line: 579, baseType: !214, size: 32, offset: 1344)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !256, file: !224, line: 580, baseType: !214, size: 32, offset: 1376)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !256, file: !224, line: 582, baseType: !214, size: 32, offset: 1408)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !256, file: !224, line: 582, baseType: !214, size: 32, offset: 1440)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "blendmode", scope: !256, file: !224, line: 583, baseType: !174, size: 16, offset: 1472)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "extendmode", scope: !256, file: !224, line: 585, baseType: !174, size: 16, offset: 1488)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !256, file: !224, line: 586, baseType: !174, size: 16, offset: 1504)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !256, file: !224, line: 588, baseType: !174, size: 16, offset: 1520)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handle", scope: !256, file: !224, line: 590, baseType: !146, size: 64, offset: 1536)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !256, file: !224, line: 592, baseType: !176, size: 32, offset: 1600)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !256, file: !224, line: 593, baseType: !176, size: 32, offset: 1632)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "drivers", scope: !223, file: !224, line: 858, baseType: !201, size: 128, offset: 384)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "overrides", scope: !223, file: !224, line: 859, baseType: !201, size: 128, offset: 512)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !223, file: !224, line: 862, baseType: !176, size: 32, offset: 640)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !223, file: !224, line: 863, baseType: !176, size: 32, offset: 672)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "act_blendmode", scope: !223, file: !224, line: 866, baseType: !174, size: 16, offset: 704)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "act_extendmode", scope: !223, file: !224, line: 867, baseType: !174, size: 16, offset: 720)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "act_influence", scope: !223, file: !224, line: 868, baseType: !214, size: 32, offset: 736)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !218, file: !217, line: 62, baseType: !292, size: 64, offset: 1024)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !23, line: 97, size: 832, elements: !294)
!294 = !{!295, !300, !301}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !293, file: !23, line: 98, baseType: !296, size: 768)
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 768, elements: !297)
!297 = !{!298, !299}
!298 = !DISubrange(count: 8)
!299 = !DISubrange(count: 3)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !293, file: !23, line: 99, baseType: !176, size: 32, offset: 768)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !293, file: !23, line: 99, baseType: !176, size: 32, offset: 800)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !218, file: !217, line: 64, baseType: !303, size: 64, offset: 1088)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!304 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !305, line: 46, flags: DIFlagFwdDecl)
!305 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!306 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !218, file: !217, line: 65, baseType: !307, size: 64, offset: 1152)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !6, line: 73, size: 1792, elements: !309)
!309 = !{!310, !311, !312, !333, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !308, file: !6, line: 74, baseType: !141, size: 960)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !308, file: !6, line: 75, baseType: !222, size: 64, offset: 960)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "refkey", scope: !308, file: !6, line: 80, baseType: !313, size: 64, offset: 1024)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "KeyBlock", file: !6, line: 70, baseType: !315)
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KeyBlock", file: !6, line: 45, size: 1472, elements: !316)
!316 = !{!317, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !315, file: !6, line: 46, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !315, file: !6, line: 46, baseType: !318, size: 64, offset: 64)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !315, file: !6, line: 48, baseType: !214, size: 32, offset: 128)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !315, file: !6, line: 51, baseType: !214, size: 32, offset: 160)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !315, file: !6, line: 53, baseType: !174, size: 16, offset: 192)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !315, file: !6, line: 54, baseType: !174, size: 16, offset: 208)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "relative", scope: !315, file: !6, line: 56, baseType: !174, size: 16, offset: 224)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !315, file: !6, line: 57, baseType: !174, size: 16, offset: 240)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "totelem", scope: !315, file: !6, line: 59, baseType: !176, size: 32, offset: 256)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !315, file: !6, line: 60, baseType: !176, size: 32, offset: 288)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !315, file: !6, line: 62, baseType: !146, size: 64, offset: 320)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !315, file: !6, line: 63, baseType: !191, size: 512, offset: 384)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !315, file: !6, line: 64, baseType: !191, size: 512, offset: 896)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "slidermin", scope: !315, file: !6, line: 67, baseType: !214, size: 32, offset: 1408)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "slidermax", scope: !315, file: !6, line: 68, baseType: !214, size: 32, offset: 1440)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "elemstr", scope: !308, file: !6, line: 85, baseType: !334, size: 256, offset: 1088)
!334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 256, elements: !335)
!335 = !{!336}
!336 = !DISubrange(count: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !308, file: !6, line: 86, baseType: !176, size: 32, offset: 1344)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !308, file: !6, line: 87, baseType: !176, size: 32, offset: 1376)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !308, file: !6, line: 89, baseType: !201, size: 128, offset: 1408)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !308, file: !6, line: 90, baseType: !303, size: 64, offset: 1536)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !308, file: !6, line: 92, baseType: !140, size: 64, offset: 1600)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !308, file: !6, line: 94, baseType: !174, size: 16, offset: 1664)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !308, file: !6, line: 95, baseType: !174, size: 16, offset: 1680)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "slurph", scope: !308, file: !6, line: 96, baseType: !174, size: 16, offset: 1696)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !308, file: !6, line: 97, baseType: !174, size: 16, offset: 1712)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !308, file: !6, line: 101, baseType: !214, size: 32, offset: 1728)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "uidgen", scope: !308, file: !6, line: 104, baseType: !176, size: 32, offset: 1760)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !218, file: !217, line: 66, baseType: !349, size: 64, offset: 1216)
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !352, line: 46, flags: DIFlagFwdDecl)
!352 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!353 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !218, file: !217, line: 67, baseType: !354, size: 64, offset: 1280)
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !356, line: 154, size: 64, elements: !357)
!356 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!357 = !{!358, !359}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !355, file: !356, line: 155, baseType: !176, size: 32)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !355, file: !356, line: 156, baseType: !176, size: 32, offset: 32)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !218, file: !217, line: 71, baseType: !361, size: 64, offset: 1344)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !356, line: 79, size: 96, elements: !363)
!363 = !{!364, !365, !366, !367, !368}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !362, file: !356, line: 81, baseType: !176, size: 32)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !362, file: !356, line: 82, baseType: !176, size: 32, offset: 32)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !362, file: !356, line: 83, baseType: !174, size: 16, offset: 64)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !362, file: !356, line: 84, baseType: !161, size: 8, offset: 80)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !362, file: !356, line: 84, baseType: !161, size: 8, offset: 88)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !218, file: !217, line: 72, baseType: !370, size: 64, offset: 1408)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !356, line: 93, size: 128, elements: !372)
!372 = !{!373, !460, !461, !462, !463, !464}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !371, file: !356, line: 94, baseType: !374, size: 64)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !376, line: 77, size: 15424, elements: !377)
!376 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!377 = !{!378, !379, !380, !383, !386, !389, !392, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !411, !412, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !441, !442, !443, !449, !450, !454}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !375, file: !376, line: 78, baseType: !141, size: 960)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !375, file: !376, line: 80, baseType: !160, size: 8192, offset: 960)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !375, file: !376, line: 82, baseType: !381, size: 64, offset: 9152)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !376, line: 43, flags: DIFlagFwdDecl)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !375, file: !376, line: 83, baseType: !384, size: 64, offset: 9216)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!385 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !142, line: 46, flags: DIFlagFwdDecl)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !375, file: !376, line: 86, baseType: !387, size: 64, offset: 9280)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!388 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !376, line: 41, flags: DIFlagFwdDecl)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !375, file: !376, line: 87, baseType: !390, size: 64, offset: 9344)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !376, line: 44, flags: DIFlagFwdDecl)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !375, file: !376, line: 89, baseType: !393, size: 512, offset: 9408)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !390, size: 512, elements: !394)
!394 = !{!298}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !375, file: !376, line: 90, baseType: !174, size: 16, offset: 9920)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !375, file: !376, line: 90, baseType: !174, size: 16, offset: 9936)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !375, file: !376, line: 92, baseType: !174, size: 16, offset: 9952)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !375, file: !376, line: 92, baseType: !174, size: 16, offset: 9968)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !375, file: !376, line: 93, baseType: !174, size: 16, offset: 9984)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !375, file: !376, line: 93, baseType: !174, size: 16, offset: 10000)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !375, file: !376, line: 94, baseType: !176, size: 32, offset: 10016)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !375, file: !376, line: 97, baseType: !174, size: 16, offset: 10048)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !375, file: !376, line: 97, baseType: !174, size: 16, offset: 10064)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !375, file: !376, line: 98, baseType: !174, size: 16, offset: 10080)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !375, file: !376, line: 98, baseType: !174, size: 16, offset: 10096)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !375, file: !376, line: 99, baseType: !174, size: 16, offset: 10112)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !375, file: !376, line: 99, baseType: !174, size: 16, offset: 10128)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !375, file: !376, line: 100, baseType: !7, size: 32, offset: 10144)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !375, file: !376, line: 101, baseType: !410, size: 64, offset: 10176)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !375, file: !376, line: 103, baseType: !167, size: 64, offset: 10240)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !375, file: !376, line: 104, baseType: !413, size: 64, offset: 10304)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !142, line: 159, size: 448, elements: !415)
!415 = !{!416, !420, !421, !423, !424, !426}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !414, file: !142, line: 161, baseType: !417, size: 64)
!417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !418)
!418 = !{!419}
!419 = !DISubrange(count: 2)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !414, file: !142, line: 162, baseType: !417, size: 64, offset: 64)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !414, file: !142, line: 163, baseType: !422, size: 32, offset: 128)
!422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 32, elements: !418)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !414, file: !142, line: 164, baseType: !422, size: 32, offset: 160)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !414, file: !142, line: 165, baseType: !425, size: 128, offset: 192)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 128, elements: !418)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !414, file: !142, line: 166, baseType: !427, size: 128, offset: 320)
!427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !384, size: 128, elements: !418)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !375, file: !376, line: 107, baseType: !214, size: 32, offset: 10368)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !375, file: !376, line: 108, baseType: !176, size: 32, offset: 10400)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !375, file: !376, line: 109, baseType: !174, size: 16, offset: 10432)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !375, file: !376, line: 110, baseType: !174, size: 16, offset: 10448)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !375, file: !376, line: 113, baseType: !176, size: 32, offset: 10464)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !375, file: !376, line: 113, baseType: !176, size: 32, offset: 10496)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !375, file: !376, line: 114, baseType: !161, size: 8, offset: 10528)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !375, file: !376, line: 114, baseType: !161, size: 8, offset: 10536)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !375, file: !376, line: 115, baseType: !174, size: 16, offset: 10544)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !375, file: !376, line: 116, baseType: !438, size: 128, offset: 10560)
!438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 128, elements: !439)
!439 = !{!440}
!440 = !DISubrange(count: 4)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !375, file: !376, line: 119, baseType: !214, size: 32, offset: 10688)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !375, file: !376, line: 119, baseType: !214, size: 32, offset: 10720)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !375, file: !376, line: 122, baseType: !444, size: 512, offset: 10752)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !445, line: 182, baseType: !446)
!445 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !445, line: 180, size: 512, elements: !447)
!447 = !{!448}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !446, file: !445, line: 181, baseType: !191, size: 512)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !375, file: !376, line: 123, baseType: !161, size: 8, offset: 11264)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !375, file: !376, line: 125, baseType: !451, size: 56, offset: 11272)
!451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 56, elements: !452)
!452 = !{!453}
!453 = !DISubrange(count: 7)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !375, file: !376, line: 126, baseType: !455, size: 4096, offset: 11328)
!455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, size: 4096, elements: !394)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !376, line: 69, baseType: !457)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !376, line: 67, size: 512, elements: !458)
!458 = !{!459}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !457, file: !376, line: 68, baseType: !191, size: 512)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !371, file: !356, line: 95, baseType: !161, size: 8, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !371, file: !356, line: 95, baseType: !161, size: 8, offset: 72)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !371, file: !356, line: 96, baseType: !174, size: 16, offset: 80)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !371, file: !356, line: 96, baseType: !174, size: 16, offset: 96)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !371, file: !356, line: 96, baseType: !174, size: 16, offset: 112)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !218, file: !217, line: 73, baseType: !466, size: 64, offset: 1472)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !356, line: 88, size: 64, elements: !468)
!468 = !{!469, !470}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !467, file: !356, line: 89, baseType: !7, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !467, file: !356, line: 90, baseType: !7, size: 32, offset: 32)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !218, file: !217, line: 74, baseType: !472, size: 64, offset: 1536)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !356, line: 109, size: 96, elements: !474)
!474 = !{!475, !477}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !473, file: !356, line: 110, baseType: !476, size: 64)
!476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 64, elements: !418)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !473, file: !356, line: 111, baseType: !176, size: 32, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !218, file: !217, line: 75, baseType: !479, size: 64, offset: 1600)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !356, line: 129, size: 32, elements: !481)
!481 = !{!482, !483, !484, !485}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !480, file: !356, line: 130, baseType: !161, size: 8)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !480, file: !356, line: 130, baseType: !161, size: 8, offset: 8)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !480, file: !356, line: 130, baseType: !161, size: 8, offset: 16)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !480, file: !356, line: 130, baseType: !161, size: 8, offset: 24)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !218, file: !217, line: 80, baseType: !487, size: 64, offset: 1664)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !356, line: 42, size: 160, elements: !489)
!489 = !{!490, !491, !492, !493, !494, !495, !496}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !488, file: !356, line: 43, baseType: !7, size: 32)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !488, file: !356, line: 43, baseType: !7, size: 32, offset: 32)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !488, file: !356, line: 43, baseType: !7, size: 32, offset: 64)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !488, file: !356, line: 43, baseType: !7, size: 32, offset: 96)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !488, file: !356, line: 44, baseType: !174, size: 16, offset: 128)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !488, file: !356, line: 45, baseType: !161, size: 8, offset: 144)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !488, file: !356, line: 45, baseType: !161, size: 8, offset: 152)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !218, file: !217, line: 81, baseType: !498, size: 64, offset: 1728)
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !356, line: 160, size: 384, elements: !500)
!500 = !{!501, !504, !505, !506, !507, !508, !509}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !499, file: !356, line: 161, baseType: !502, size: 256)
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 256, elements: !503)
!503 = !{!440, !419}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !499, file: !356, line: 162, baseType: !374, size: 64, offset: 256)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !499, file: !356, line: 163, baseType: !161, size: 8, offset: 320)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !499, file: !356, line: 163, baseType: !161, size: 8, offset: 328)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !499, file: !356, line: 164, baseType: !174, size: 16, offset: 336)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !499, file: !356, line: 164, baseType: !174, size: 16, offset: 352)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !499, file: !356, line: 164, baseType: !174, size: 16, offset: 368)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !218, file: !217, line: 82, baseType: !511, size: 64, offset: 1792)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !217, line: 136, size: 512, elements: !513)
!513 = !{!514, !515, !516, !518, !519, !520, !521, !522}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !512, file: !217, line: 137, baseType: !146, size: 64)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !512, file: !217, line: 138, baseType: !502, size: 256, offset: 64)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !512, file: !217, line: 139, baseType: !517, size: 128, offset: 320)
!517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !439)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !512, file: !217, line: 140, baseType: !161, size: 8, offset: 448)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !512, file: !217, line: 140, baseType: !161, size: 8, offset: 456)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !512, file: !217, line: 141, baseType: !174, size: 16, offset: 464)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !512, file: !217, line: 141, baseType: !174, size: 16, offset: 480)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !512, file: !217, line: 141, baseType: !174, size: 16, offset: 496)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !218, file: !217, line: 83, baseType: !524, size: 64, offset: 1856)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !356, line: 65, size: 160, elements: !526)
!526 = !{!527, !530, !532, !533}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !525, file: !356, line: 66, baseType: !528, size: 96)
!528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 96, elements: !529)
!529 = !{!299}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !525, file: !356, line: 67, baseType: !531, size: 48, offset: 96)
!531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 48, elements: !529)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !525, file: !356, line: 68, baseType: !161, size: 8, offset: 144)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !525, file: !356, line: 68, baseType: !161, size: 8, offset: 152)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !218, file: !217, line: 84, baseType: !535, size: 64, offset: 1920)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !356, line: 48, size: 96, elements: !537)
!537 = !{!538, !539, !540, !541, !542}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !536, file: !356, line: 49, baseType: !7, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !536, file: !356, line: 49, baseType: !7, size: 32, offset: 32)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !536, file: !356, line: 50, baseType: !161, size: 8, offset: 64)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !536, file: !356, line: 50, baseType: !161, size: 8, offset: 72)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !536, file: !356, line: 51, baseType: !174, size: 16, offset: 80)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !218, file: !217, line: 85, baseType: !544, size: 64, offset: 1984)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !356, line: 59, size: 128, elements: !546)
!546 = !{!547, !553, !554}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !545, file: !356, line: 60, baseType: !548, size: 64)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !356, line: 54, size: 64, elements: !550)
!550 = !{!551, !552}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !549, file: !356, line: 55, baseType: !176, size: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !549, file: !356, line: 56, baseType: !214, size: 32, offset: 32)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !545, file: !356, line: 61, baseType: !176, size: 32, offset: 64)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !545, file: !356, line: 62, baseType: !176, size: 32, offset: 96)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !218, file: !217, line: 89, baseType: !556, size: 64, offset: 2048)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !356, line: 74, size: 32, elements: !558)
!558 = !{!559, !560, !561, !562}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !557, file: !356, line: 75, baseType: !161, size: 8)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !557, file: !356, line: 75, baseType: !161, size: 8, offset: 8)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !557, file: !356, line: 75, baseType: !161, size: 8, offset: 16)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !557, file: !356, line: 75, baseType: !161, size: 8, offset: 24)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !218, file: !217, line: 90, baseType: !564, size: 64, offset: 2112)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !218, file: !217, line: 93, baseType: !566, size: 64, offset: 2176)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !568, line: 54, size: 896, elements: !569)
!568 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!569 = !{!570, !764, !765, !766, !769, !770, !773, !774, !782, !786, !787, !788, !789, !790, !791, !1736}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !567, file: !568, line: 55, baseType: !571, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !573, line: 186, size: 8064, elements: !574)
!573 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!574 = !{!575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !587, !588, !589, !590, !651, !655, !659, !660, !661, !662, !663, !664, !665, !666, !720, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !572, file: !573, line: 187, baseType: !176, size: 32)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !572, file: !573, line: 187, baseType: !176, size: 32, offset: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !572, file: !573, line: 187, baseType: !176, size: 32, offset: 64)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !572, file: !573, line: 187, baseType: !176, size: 32, offset: 96)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !572, file: !573, line: 188, baseType: !176, size: 32, offset: 128)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !572, file: !573, line: 188, baseType: !176, size: 32, offset: 160)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !572, file: !573, line: 188, baseType: !176, size: 32, offset: 192)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !572, file: !573, line: 193, baseType: !161, size: 8, offset: 224)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !572, file: !573, line: 197, baseType: !161, size: 8, offset: 232)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !572, file: !573, line: 201, baseType: !585, size: 64, offset: 256)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64)
!586 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !96, line: 71, flags: DIFlagFwdDecl)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !572, file: !573, line: 201, baseType: !585, size: 64, offset: 320)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !572, file: !573, line: 201, baseType: !585, size: 64, offset: 384)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !572, file: !573, line: 201, baseType: !585, size: 64, offset: 448)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !572, file: !573, line: 208, baseType: !591, size: 64, offset: 512)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!593 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !573, line: 103, baseType: !594)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !573, line: 90, size: 448, elements: !595)
!595 = !{!596, !605, !610, !611, !612}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !594, file: !573, line: 91, baseType: !597, size: 128)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !573, line: 82, baseType: !598)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !573, line: 64, size: 128, elements: !599)
!599 = !{!600, !601, !602, !603, !604}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !598, file: !573, line: 65, baseType: !146, size: 64)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !598, file: !573, line: 66, baseType: !176, size: 32, offset: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !598, file: !573, line: 73, baseType: !161, size: 8, offset: 96)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !598, file: !573, line: 74, baseType: !161, size: 8, offset: 104)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !598, file: !573, line: 80, baseType: !161, size: 8, offset: 112)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !594, file: !573, line: 92, baseType: !606, size: 64, offset: 128)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !573, line: 180, size: 16, elements: !608)
!608 = !{!609}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !607, file: !573, line: 181, baseType: !174, size: 16)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !594, file: !573, line: 94, baseType: !528, size: 96, offset: 192)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !594, file: !573, line: 95, baseType: !528, size: 96, offset: 288)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !594, file: !573, line: 102, baseType: !613, size: 64, offset: 384)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !573, line: 110, size: 640, elements: !615)
!615 = !{!616, !617, !618, !620, !621, !644, !650}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !614, file: !573, line: 111, baseType: !597, size: 128)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !614, file: !573, line: 112, baseType: !606, size: 64, offset: 128)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !614, file: !573, line: 114, baseType: !619, size: 64, offset: 192)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !614, file: !573, line: 114, baseType: !619, size: 64, offset: 256)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !614, file: !573, line: 118, baseType: !622, size: 64, offset: 320)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !573, line: 125, size: 576, elements: !624)
!624 = !{!625, !626, !627, !628, !640, !641, !642, !643}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !623, file: !573, line: 126, baseType: !597, size: 128)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !623, file: !573, line: 129, baseType: !619, size: 64, offset: 128)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !623, file: !573, line: 130, baseType: !613, size: 64, offset: 192)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !623, file: !573, line: 131, baseType: !629, size: 64, offset: 256)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !573, line: 164, size: 448, elements: !631)
!631 = !{!632, !633, !634, !637, !638, !639}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !630, file: !573, line: 165, baseType: !597, size: 128)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !630, file: !573, line: 166, baseType: !606, size: 64, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !630, file: !573, line: 172, baseType: !635, size: 64, offset: 192)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !573, line: 140, baseType: !623)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !630, file: !573, line: 174, baseType: !176, size: 32, offset: 256)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !630, file: !573, line: 175, baseType: !528, size: 96, offset: 288)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !630, file: !573, line: 176, baseType: !174, size: 16, offset: 384)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !623, file: !573, line: 135, baseType: !622, size: 64, offset: 320)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !623, file: !573, line: 135, baseType: !622, size: 64, offset: 384)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !623, file: !573, line: 139, baseType: !622, size: 64, offset: 448)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !623, file: !573, line: 139, baseType: !622, size: 64, offset: 512)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !614, file: !573, line: 122, baseType: !645, size: 128, offset: 384)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !573, line: 108, baseType: !646)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !573, line: 106, size: 128, elements: !647)
!647 = !{!648, !649}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !646, file: !573, line: 107, baseType: !613, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !646, file: !573, line: 107, baseType: !613, size: 64, offset: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !614, file: !573, line: 122, baseType: !645, size: 128, offset: 512)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !572, file: !573, line: 209, baseType: !652, size: 64, offset: 576)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !573, line: 123, baseType: !614)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !572, file: !573, line: 210, baseType: !656, size: 64, offset: 640)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !573, line: 178, baseType: !630)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !572, file: !573, line: 213, baseType: !176, size: 32, offset: 704)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !572, file: !573, line: 214, baseType: !176, size: 32, offset: 736)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !572, file: !573, line: 215, baseType: !176, size: 32, offset: 768)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !572, file: !573, line: 218, baseType: !585, size: 64, offset: 832)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !572, file: !573, line: 218, baseType: !585, size: 64, offset: 896)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !572, file: !573, line: 218, baseType: !585, size: 64, offset: 960)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !572, file: !573, line: 220, baseType: !176, size: 32, offset: 1024)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !572, file: !573, line: 221, baseType: !667, size: 64, offset: 1088)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !37, line: 190, size: 10496, elements: !669)
!669 = !{!670, !706, !707, !713, !716, !717, !719}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !668, file: !37, line: 191, baseType: !671, size: 5120)
!671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !672, size: 5120, elements: !704)
!672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !37, line: 147, size: 320, elements: !673)
!673 = !{!674, !677, !679, !689, !690}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !672, file: !37, line: 148, baseType: !675, size: 64)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !161)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !672, file: !37, line: 149, baseType: !678, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !37, line: 112, baseType: !36)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !672, file: !37, line: 150, baseType: !680, size: 32, offset: 96)
!680 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !37, line: 142, baseType: !681)
!681 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !37, line: 138, size: 32, elements: !682)
!682 = !{!683, !685, !687}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !681, file: !37, line: 139, baseType: !684, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !37, line: 122, baseType: !47)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !681, file: !37, line: 140, baseType: !686, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !37, line: 136, baseType: !53)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !681, file: !37, line: 141, baseType: !688, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !37, line: 130, baseType: !59)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !672, file: !37, line: 152, baseType: !176, size: 32, offset: 128)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !672, file: !37, line: 162, baseType: !691, size: 128, offset: 192)
!691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !672, file: !37, line: 155, size: 128, elements: !692)
!692 = !{!693, !694, !695, !696, !697, !699}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !691, file: !37, line: 156, baseType: !176, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !691, file: !37, line: 157, baseType: !214, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !691, file: !37, line: 158, baseType: !146, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !691, file: !37, line: 159, baseType: !528, size: 96)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !691, file: !37, line: 160, baseType: !698, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !691, file: !37, line: 161, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !702, line: 48, baseType: !703)
!702 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!703 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !229, line: 47, flags: DIFlagFwdDecl)
!704 = !{!705}
!705 = !DISubrange(count: 16)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !668, file: !37, line: 192, baseType: !671, size: 5120, offset: 5120)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !668, file: !37, line: 193, baseType: !708, size: 64, offset: 10240)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DISubroutineType(types: !710)
!710 = !{null, !711, !667}
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !573, line: 246, baseType: !572)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !668, file: !37, line: 194, baseType: !714, size: 64, offset: 10304)
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 64)
!715 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !37, line: 194, flags: DIFlagFwdDecl)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !668, file: !37, line: 195, baseType: !176, size: 32, offset: 10368)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !668, file: !37, line: 196, baseType: !718, size: 32, offset: 10400)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !37, line: 188, baseType: !67)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !668, file: !37, line: 197, baseType: !176, size: 32, offset: 10432)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !572, file: !573, line: 223, baseType: !721, size: 1600, offset: 1152)
!721 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !96, line: 73, baseType: !722)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !96, line: 64, size: 1600, elements: !723)
!723 = !{!724, !739, !743, !744, !745, !746, !747}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !722, file: !96, line: 65, baseType: !725, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !96, line: 53, baseType: !727)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !96, line: 42, size: 832, elements: !728)
!728 = !{!729, !730, !731, !732, !733, !734, !735, !736, !737, !738}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !727, file: !96, line: 43, baseType: !176, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !727, file: !96, line: 44, baseType: !176, size: 32, offset: 32)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !727, file: !96, line: 45, baseType: !176, size: 32, offset: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !727, file: !96, line: 46, baseType: !176, size: 32, offset: 96)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !727, file: !96, line: 47, baseType: !176, size: 32, offset: 128)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !727, file: !96, line: 48, baseType: !176, size: 32, offset: 160)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !727, file: !96, line: 49, baseType: !176, size: 32, offset: 192)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !727, file: !96, line: 50, baseType: !176, size: 32, offset: 224)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !727, file: !96, line: 51, baseType: !191, size: 512, offset: 256)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !727, file: !96, line: 52, baseType: !146, size: 64, offset: 768)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !722, file: !96, line: 66, baseType: !740, size: 1312, offset: 64)
!740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 1312, elements: !741)
!741 = !{!742}
!742 = !DISubrange(count: 41)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !722, file: !96, line: 69, baseType: !176, size: 32, offset: 1376)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !722, file: !96, line: 69, baseType: !176, size: 32, offset: 1408)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !722, file: !96, line: 70, baseType: !176, size: 32, offset: 1440)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !722, file: !96, line: 71, baseType: !585, size: 64, offset: 1472)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !722, file: !96, line: 72, baseType: !748, size: 64, offset: 1536)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !96, line: 59, baseType: !750)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !96, line: 57, size: 8192, elements: !751)
!751 = !{!752}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !750, file: !96, line: 58, baseType: !160, size: 8192)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !572, file: !573, line: 223, baseType: !721, size: 1600, offset: 2752)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !572, file: !573, line: 223, baseType: !721, size: 1600, offset: 4352)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !572, file: !573, line: 223, baseType: !721, size: 1600, offset: 5952)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !572, file: !573, line: 233, baseType: !174, size: 16, offset: 7552)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !572, file: !573, line: 236, baseType: !176, size: 32, offset: 7584)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !572, file: !573, line: 238, baseType: !176, size: 32, offset: 7616)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !572, file: !573, line: 238, baseType: !176, size: 32, offset: 7648)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !572, file: !573, line: 239, baseType: !201, size: 128, offset: 7680)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !572, file: !573, line: 241, baseType: !657, size: 64, offset: 7808)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !572, file: !573, line: 243, baseType: !201, size: 128, offset: 7872)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !572, file: !573, line: 245, baseType: !146, size: 64, offset: 8000)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "emcopy", scope: !567, file: !568, line: 58, baseType: !566, size: 64, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "emcopyusers", scope: !567, file: !568, line: 59, baseType: !176, size: 32, offset: 128)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "looptris", scope: !567, file: !568, line: 63, baseType: !767, size: 64, offset: 192)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !622, size: 192, elements: !529)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "tottri", scope: !567, file: !568, line: 64, baseType: !176, size: 32, offset: 256)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !567, file: !568, line: 67, baseType: !771, size: 64, offset: 320)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !217, line: 40, flags: DIFlagFwdDecl)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "derivedCage", scope: !567, file: !568, line: 67, baseType: !771, size: 64, offset: 384)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !567, file: !568, line: 68, baseType: !775, size: 64, offset: 448)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !776, line: 48, baseType: !777)
!776 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !778, line: 27, baseType: !779)
!778 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !780, line: 45, baseType: !781)
!780 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!781 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColor", scope: !567, file: !568, line: 69, baseType: !783, size: 64, offset: 512)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !785, size: 32, elements: !439)
!785 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColorLen", scope: !567, file: !568, line: 70, baseType: !176, size: 32, offset: 576)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColor", scope: !567, file: !568, line: 71, baseType: !783, size: 64, offset: 640)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColorLen", scope: !567, file: !568, line: 72, baseType: !176, size: 32, offset: 704)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !567, file: !568, line: 75, baseType: !174, size: 16, offset: 736)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !567, file: !568, line: 76, baseType: !174, size: 16, offset: 752)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !567, file: !568, line: 79, baseType: !792, size: 64, offset: 768)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !23, line: 115, size: 11392, elements: !794)
!794 = !{!795, !796, !797, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !815, !816, !856, !857, !860, !861, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !961, !962, !963, !964, !965, !966, !967, !968, !969, !972, !975, !978, !979, !980, !981, !982, !985, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1017, !1020, !1023, !1024, !1724, !1725}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !793, file: !23, line: 116, baseType: !141, size: 960)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !793, file: !23, line: 117, baseType: !222, size: 64, offset: 960)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !793, file: !23, line: 119, baseType: !798, size: 64, offset: 1024)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !23, line: 57, flags: DIFlagFwdDecl)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !793, file: !23, line: 121, baseType: !174, size: 16, offset: 1088)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !793, file: !23, line: 121, baseType: !174, size: 16, offset: 1104)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !793, file: !23, line: 122, baseType: !176, size: 32, offset: 1120)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !793, file: !23, line: 122, baseType: !176, size: 32, offset: 1152)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !793, file: !23, line: 122, baseType: !176, size: 32, offset: 1184)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !793, file: !23, line: 123, baseType: !191, size: 512, offset: 1216)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !793, file: !23, line: 124, baseType: !792, size: 64, offset: 1728)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !793, file: !23, line: 124, baseType: !792, size: 64, offset: 1792)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !793, file: !23, line: 127, baseType: !792, size: 64, offset: 1856)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !793, file: !23, line: 127, baseType: !792, size: 64, offset: 1920)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !793, file: !23, line: 127, baseType: !792, size: 64, offset: 1984)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !793, file: !23, line: 128, baseType: !303, size: 64, offset: 2048)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !793, file: !23, line: 130, baseType: !292, size: 64, offset: 2112)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !793, file: !23, line: 131, baseType: !814, size: 64, offset: 2176)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !793, file: !23, line: 132, baseType: !814, size: 64, offset: 2240)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !793, file: !23, line: 133, baseType: !817, size: 64, offset: 2304)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !229, line: 334, size: 1728, elements: !819)
!819 = !{!820, !821, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !855}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !818, file: !229, line: 335, baseType: !201, size: 128)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !818, file: !229, line: 336, baseType: !822, size: 64, offset: 128)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !818, file: !229, line: 338, baseType: !174, size: 16, offset: 192)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !818, file: !229, line: 338, baseType: !174, size: 16, offset: 208)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !818, file: !229, line: 339, baseType: !7, size: 32, offset: 224)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !818, file: !229, line: 340, baseType: !176, size: 32, offset: 256)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !818, file: !229, line: 342, baseType: !214, size: 32, offset: 288)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !818, file: !229, line: 343, baseType: !528, size: 96, offset: 320)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !818, file: !229, line: 344, baseType: !528, size: 96, offset: 416)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !818, file: !229, line: 347, baseType: !201, size: 128, offset: 512)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !818, file: !229, line: 349, baseType: !176, size: 32, offset: 640)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !818, file: !229, line: 350, baseType: !176, size: 32, offset: 672)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !818, file: !229, line: 351, baseType: !146, size: 64, offset: 704)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !818, file: !229, line: 352, baseType: !146, size: 64, offset: 768)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !818, file: !229, line: 354, baseType: !836, size: 384, offset: 832)
!836 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !229, line: 116, baseType: !837)
!837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !229, line: 94, size: 384, elements: !838)
!838 = !{!839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !837, file: !229, line: 96, baseType: !176, size: 32)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !837, file: !229, line: 96, baseType: !176, size: 32, offset: 32)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !837, file: !229, line: 97, baseType: !176, size: 32, offset: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !837, file: !229, line: 97, baseType: !176, size: 32, offset: 96)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !837, file: !229, line: 99, baseType: !174, size: 16, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !837, file: !229, line: 100, baseType: !174, size: 16, offset: 144)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !837, file: !229, line: 102, baseType: !174, size: 16, offset: 160)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !837, file: !229, line: 105, baseType: !174, size: 16, offset: 176)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !837, file: !229, line: 108, baseType: !174, size: 16, offset: 192)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !837, file: !229, line: 109, baseType: !174, size: 16, offset: 208)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !837, file: !229, line: 111, baseType: !174, size: 16, offset: 224)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !837, file: !229, line: 112, baseType: !174, size: 16, offset: 240)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !837, file: !229, line: 114, baseType: !176, size: 32, offset: 256)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !837, file: !229, line: 114, baseType: !176, size: 32, offset: 288)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !837, file: !229, line: 115, baseType: !176, size: 32, offset: 320)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !837, file: !229, line: 115, baseType: !176, size: 32, offset: 352)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !818, file: !229, line: 355, baseType: !191, size: 512, offset: 1216)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !793, file: !23, line: 134, baseType: !146, size: 64, offset: 2368)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !793, file: !23, line: 136, baseType: !858, size: 64, offset: 2432)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !23, line: 58, flags: DIFlagFwdDecl)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !793, file: !23, line: 138, baseType: !836, size: 384, offset: 2496)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !793, file: !23, line: 139, baseType: !862, size: 64, offset: 2880)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !229, line: 80, baseType: !864)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !229, line: 72, size: 192, elements: !865)
!865 = !{!866, !873, !874, !875, !876}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !864, file: !229, line: 73, baseType: !867, size: 64)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !229, line: 59, baseType: !869)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !229, line: 56, size: 128, elements: !870)
!870 = !{!871, !872}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !869, file: !229, line: 57, baseType: !528, size: 96)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !869, file: !229, line: 58, baseType: !176, size: 32, offset: 96)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !864, file: !229, line: 74, baseType: !176, size: 32, offset: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !864, file: !229, line: 76, baseType: !176, size: 32, offset: 96)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !864, file: !229, line: 77, baseType: !176, size: 32, offset: 128)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !864, file: !229, line: 79, baseType: !176, size: 32, offset: 160)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !793, file: !23, line: 141, baseType: !201, size: 128, offset: 2944)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !793, file: !23, line: 142, baseType: !201, size: 128, offset: 3072)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !793, file: !23, line: 143, baseType: !201, size: 128, offset: 3200)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !793, file: !23, line: 144, baseType: !201, size: 128, offset: 3328)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !793, file: !23, line: 146, baseType: !176, size: 32, offset: 3456)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !793, file: !23, line: 147, baseType: !176, size: 32, offset: 3488)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !793, file: !23, line: 150, baseType: !349, size: 64, offset: 3520)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !793, file: !23, line: 151, baseType: !211, size: 64, offset: 3584)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !793, file: !23, line: 152, baseType: !176, size: 32, offset: 3648)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !793, file: !23, line: 153, baseType: !176, size: 32, offset: 3680)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !793, file: !23, line: 156, baseType: !528, size: 96, offset: 3712)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !793, file: !23, line: 156, baseType: !528, size: 96, offset: 3808)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !793, file: !23, line: 156, baseType: !528, size: 96, offset: 3904)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !793, file: !23, line: 157, baseType: !528, size: 96, offset: 4000)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !793, file: !23, line: 158, baseType: !528, size: 96, offset: 4096)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !793, file: !23, line: 159, baseType: !528, size: 96, offset: 4192)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !793, file: !23, line: 160, baseType: !528, size: 96, offset: 4288)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !793, file: !23, line: 160, baseType: !528, size: 96, offset: 4384)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !793, file: !23, line: 161, baseType: !438, size: 128, offset: 4480)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !793, file: !23, line: 161, baseType: !438, size: 128, offset: 4608)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !793, file: !23, line: 162, baseType: !528, size: 96, offset: 4736)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !793, file: !23, line: 162, baseType: !528, size: 96, offset: 4832)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !793, file: !23, line: 163, baseType: !214, size: 32, offset: 4928)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !793, file: !23, line: 163, baseType: !214, size: 32, offset: 4960)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !793, file: !23, line: 164, baseType: !902, size: 512, offset: 4992)
!902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 512, elements: !903)
!903 = !{!440, !440}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !793, file: !23, line: 165, baseType: !902, size: 512, offset: 5504)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !793, file: !23, line: 166, baseType: !902, size: 512, offset: 6016)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !793, file: !23, line: 167, baseType: !902, size: 512, offset: 6528)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !793, file: !23, line: 176, baseType: !902, size: 512, offset: 7040)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !793, file: !23, line: 178, baseType: !7, size: 32, offset: 7552)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !793, file: !23, line: 180, baseType: !174, size: 16, offset: 7584)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !793, file: !23, line: 181, baseType: !174, size: 16, offset: 7600)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !793, file: !23, line: 183, baseType: !174, size: 16, offset: 7616)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !793, file: !23, line: 183, baseType: !174, size: 16, offset: 7632)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !793, file: !23, line: 184, baseType: !174, size: 16, offset: 7648)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !793, file: !23, line: 184, baseType: !174, size: 16, offset: 7664)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !793, file: !23, line: 185, baseType: !174, size: 16, offset: 7680)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !793, file: !23, line: 186, baseType: !174, size: 16, offset: 7696)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !793, file: !23, line: 187, baseType: !174, size: 16, offset: 7712)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !793, file: !23, line: 188, baseType: !161, size: 8, offset: 7728)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !793, file: !23, line: 189, baseType: !161, size: 8, offset: 7736)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !793, file: !23, line: 192, baseType: !176, size: 32, offset: 7744)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !793, file: !23, line: 192, baseType: !176, size: 32, offset: 7776)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !793, file: !23, line: 192, baseType: !176, size: 32, offset: 7808)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !793, file: !23, line: 192, baseType: !176, size: 32, offset: 7840)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !793, file: !23, line: 194, baseType: !176, size: 32, offset: 7872)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !793, file: !23, line: 202, baseType: !214, size: 32, offset: 7904)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !793, file: !23, line: 202, baseType: !214, size: 32, offset: 7936)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !793, file: !23, line: 202, baseType: !214, size: 32, offset: 7968)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !793, file: !23, line: 211, baseType: !214, size: 32, offset: 8000)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !793, file: !23, line: 212, baseType: !214, size: 32, offset: 8032)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !793, file: !23, line: 213, baseType: !214, size: 32, offset: 8064)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !793, file: !23, line: 214, baseType: !214, size: 32, offset: 8096)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !793, file: !23, line: 215, baseType: !214, size: 32, offset: 8128)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !793, file: !23, line: 216, baseType: !214, size: 32, offset: 8160)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !793, file: !23, line: 219, baseType: !214, size: 32, offset: 8192)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !793, file: !23, line: 220, baseType: !214, size: 32, offset: 8224)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !793, file: !23, line: 221, baseType: !214, size: 32, offset: 8256)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !793, file: !23, line: 224, baseType: !938, size: 16, offset: 8288)
!938 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !793, file: !23, line: 224, baseType: !938, size: 16, offset: 8304)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !793, file: !23, line: 226, baseType: !174, size: 16, offset: 8320)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !793, file: !23, line: 228, baseType: !161, size: 8, offset: 8336)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !793, file: !23, line: 229, baseType: !161, size: 8, offset: 8344)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !793, file: !23, line: 231, baseType: !174, size: 16, offset: 8352)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !793, file: !23, line: 232, baseType: !161, size: 8, offset: 8368)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !793, file: !23, line: 233, baseType: !161, size: 8, offset: 8376)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !793, file: !23, line: 234, baseType: !214, size: 32, offset: 8384)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !793, file: !23, line: 235, baseType: !214, size: 32, offset: 8416)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !793, file: !23, line: 237, baseType: !201, size: 128, offset: 8448)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !793, file: !23, line: 238, baseType: !201, size: 128, offset: 8576)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !793, file: !23, line: 239, baseType: !201, size: 128, offset: 8704)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !793, file: !23, line: 240, baseType: !201, size: 128, offset: 8832)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !793, file: !23, line: 242, baseType: !214, size: 32, offset: 8960)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !793, file: !23, line: 244, baseType: !174, size: 16, offset: 8992)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !793, file: !23, line: 245, baseType: !938, size: 16, offset: 9008)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !793, file: !23, line: 246, baseType: !438, size: 128, offset: 9024)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !793, file: !23, line: 248, baseType: !176, size: 32, offset: 9152)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !793, file: !23, line: 249, baseType: !176, size: 32, offset: 9184)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !793, file: !23, line: 251, baseType: !959, size: 64, offset: 9216)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!960 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !23, line: 251, flags: DIFlagFwdDecl)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !793, file: !23, line: 253, baseType: !161, size: 8, offset: 9280)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !793, file: !23, line: 254, baseType: !161, size: 8, offset: 9288)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !793, file: !23, line: 255, baseType: !174, size: 16, offset: 9296)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !793, file: !23, line: 256, baseType: !528, size: 96, offset: 9312)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !793, file: !23, line: 258, baseType: !201, size: 128, offset: 9408)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !793, file: !23, line: 259, baseType: !201, size: 128, offset: 9536)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !793, file: !23, line: 260, baseType: !201, size: 128, offset: 9664)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !793, file: !23, line: 261, baseType: !201, size: 128, offset: 9792)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !793, file: !23, line: 263, baseType: !970, size: 64, offset: 9920)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!971 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !23, line: 52, flags: DIFlagFwdDecl)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !793, file: !23, line: 264, baseType: !973, size: 64, offset: 9984)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !23, line: 53, flags: DIFlagFwdDecl)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !793, file: !23, line: 265, baseType: !976, size: 64, offset: 10048)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64)
!977 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !229, line: 46, flags: DIFlagFwdDecl)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !793, file: !23, line: 267, baseType: !161, size: 8, offset: 10112)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !793, file: !23, line: 268, baseType: !161, size: 8, offset: 10120)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !793, file: !23, line: 269, baseType: !174, size: 16, offset: 10128)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !793, file: !23, line: 270, baseType: !214, size: 32, offset: 10144)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !793, file: !23, line: 272, baseType: !983, size: 64, offset: 10176)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !23, line: 54, flags: DIFlagFwdDecl)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !793, file: !23, line: 275, baseType: !986, size: 64, offset: 10240)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !988, line: 49, size: 448, elements: !989)
!988 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_curve.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!989 = !{!990, !991, !992, !993}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !987, file: !988, line: 50, baseType: !201, size: 128)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "bev", scope: !987, file: !988, line: 51, baseType: !201, size: 128, offset: 128)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "deformed_nurbs", scope: !987, file: !988, line: 52, baseType: !201, size: 128, offset: 256)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !987, file: !988, line: 53, baseType: !994, size: 64, offset: 384)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Path", file: !352, line: 65, size: 128, elements: !996)
!996 = !{!997, !1005, !1006}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !995, file: !352, line: 66, baseType: !998, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PathPoint", file: !352, line: 56, size: 320, elements: !1000)
!1000 = !{!1001, !1002, !1003, !1004}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !999, file: !352, line: 57, baseType: !438, size: 128)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !999, file: !352, line: 58, baseType: !438, size: 128, offset: 128)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !999, file: !352, line: 59, baseType: !214, size: 32, offset: 256)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !999, file: !352, line: 59, baseType: !214, size: 32, offset: 288)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !995, file: !352, line: 67, baseType: !176, size: 32, offset: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "totdist", scope: !995, file: !352, line: 68, baseType: !214, size: 32, offset: 96)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !793, file: !23, line: 277, baseType: !771, size: 64, offset: 10304)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !793, file: !23, line: 277, baseType: !771, size: 64, offset: 10368)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !793, file: !23, line: 278, baseType: !777, size: 64, offset: 10432)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !793, file: !23, line: 279, baseType: !777, size: 64, offset: 10496)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !793, file: !23, line: 280, baseType: !7, size: 32, offset: 10560)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !793, file: !23, line: 281, baseType: !7, size: 32, offset: 10592)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !793, file: !23, line: 283, baseType: !201, size: 128, offset: 10624)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !793, file: !23, line: 284, baseType: !201, size: 128, offset: 10752)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !793, file: !23, line: 285, baseType: !1016, size: 64, offset: 10880)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !793, file: !23, line: 287, baseType: !1018, size: 64, offset: 10944)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1019 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !23, line: 59, flags: DIFlagFwdDecl)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !793, file: !23, line: 288, baseType: !1021, size: 64, offset: 11008)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !23, line: 288, flags: DIFlagFwdDecl)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !793, file: !23, line: 290, baseType: !476, size: 64, offset: 11072)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !793, file: !23, line: 291, baseType: !1025, size: 64, offset: 11136)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !376, line: 65, baseType: !1027)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !376, line: 50, size: 320, elements: !1028)
!1028 = !{!1029, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1027, file: !376, line: 51, baseType: !1030, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !1032, line: 1216, size: 39680, elements: !1033)
!1032 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1033 = !{!1034, !1035, !1036, !1037, !1040, !1041, !1042, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1068, !1071, !1074, !1286, !1289, !1585, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1607, !1608, !1609, !1610, !1611, !1619, !1685, !1692, !1693, !1700, !1703, !1704, !1705, !1706, !1707, !1708}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1031, file: !1032, line: 1217, baseType: !141, size: 960)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1031, file: !1032, line: 1218, baseType: !222, size: 64, offset: 960)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1031, file: !1032, line: 1220, baseType: !792, size: 64, offset: 1024)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1031, file: !1032, line: 1221, baseType: !1038, size: 64, offset: 1088)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1032, line: 52, flags: DIFlagFwdDecl)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1031, file: !1032, line: 1223, baseType: !1030, size: 64, offset: 1152)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1031, file: !1032, line: 1225, baseType: !201, size: 128, offset: 1216)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1031, file: !1032, line: 1226, baseType: !1043, size: 64, offset: 1344)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !1032, line: 69, size: 320, elements: !1045)
!1045 = !{!1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1044, file: !1032, line: 70, baseType: !1043, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1044, file: !1032, line: 70, baseType: !1043, size: 64, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1044, file: !1032, line: 71, baseType: !7, size: 32, offset: 128)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1044, file: !1032, line: 71, baseType: !7, size: 32, offset: 160)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1044, file: !1032, line: 72, baseType: !176, size: 32, offset: 192)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1044, file: !1032, line: 73, baseType: !174, size: 16, offset: 224)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1044, file: !1032, line: 73, baseType: !174, size: 16, offset: 240)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1044, file: !1032, line: 74, baseType: !792, size: 64, offset: 256)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1031, file: !1032, line: 1227, baseType: !792, size: 64, offset: 1408)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1031, file: !1032, line: 1229, baseType: !528, size: 96, offset: 1472)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1031, file: !1032, line: 1230, baseType: !528, size: 96, offset: 1568)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1031, file: !1032, line: 1231, baseType: !528, size: 96, offset: 1664)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1031, file: !1032, line: 1231, baseType: !528, size: 96, offset: 1760)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1031, file: !1032, line: 1233, baseType: !7, size: 32, offset: 1856)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1031, file: !1032, line: 1234, baseType: !176, size: 32, offset: 1888)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1031, file: !1032, line: 1235, baseType: !7, size: 32, offset: 1920)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1031, file: !1032, line: 1237, baseType: !174, size: 16, offset: 1952)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1031, file: !1032, line: 1239, baseType: !161, size: 8, offset: 1968)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1031, file: !1032, line: 1240, baseType: !1065, size: 8, offset: 1976)
!1065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 8, elements: !1066)
!1066 = !{!1067}
!1067 = !DISubrange(count: 1)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1031, file: !1032, line: 1242, baseType: !1069, size: 64, offset: 1984)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !305, line: 248, flags: DIFlagFwdDecl)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1031, file: !1032, line: 1244, baseType: !1072, size: 64, offset: 2048)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1032, line: 59, flags: DIFlagFwdDecl)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1031, file: !1032, line: 1246, baseType: !1075, size: 64, offset: 2112)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !1032, line: 1067, size: 5184, elements: !1077)
!1077 = !{!1078, !1104, !1105, !1120, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1142, !1158, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1269}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1076, file: !1032, line: 1068, baseType: !1079, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !1032, line: 934, baseType: !1081)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !1032, line: 925, size: 576, elements: !1082)
!1082 = !{!1083, !1098, !1099, !1100, !1101, !1102, !1103}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1081, file: !1032, line: 926, baseType: !1084, size: 320)
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !1032, line: 830, baseType: !1085)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !1032, line: 813, size: 320, elements: !1086)
!1086 = !{!1087, !1090, !1093, !1094, !1095, !1096, !1097}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1085, file: !1032, line: 814, baseType: !1088, size: 64)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1032, line: 51, flags: DIFlagFwdDecl)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1085, file: !1032, line: 815, baseType: !1091, size: 64, offset: 64)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1032, line: 815, flags: DIFlagFwdDecl)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1085, file: !1032, line: 818, baseType: !146, size: 64, offset: 128)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1085, file: !1032, line: 819, baseType: !784, size: 32, offset: 192)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1085, file: !1032, line: 822, baseType: !176, size: 32, offset: 224)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1085, file: !1032, line: 826, baseType: !176, size: 32, offset: 256)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1085, file: !1032, line: 829, baseType: !176, size: 32, offset: 288)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1081, file: !1032, line: 928, baseType: !174, size: 16, offset: 320)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1081, file: !1032, line: 928, baseType: !174, size: 16, offset: 336)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1081, file: !1032, line: 929, baseType: !176, size: 32, offset: 352)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1081, file: !1032, line: 930, baseType: !410, size: 64, offset: 384)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1081, file: !1032, line: 931, baseType: !544, size: 64, offset: 448)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1081, file: !1032, line: 933, baseType: !146, size: 64, offset: 512)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1076, file: !1032, line: 1069, baseType: !1079, size: 64, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1076, file: !1032, line: 1070, baseType: !1106, size: 64, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !1032, line: 916, baseType: !1108)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !1032, line: 891, size: 704, elements: !1109)
!1109 = !{!1110, !1111, !1112, !1114, !1115, !1116, !1117, !1118, !1119}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1108, file: !1032, line: 892, baseType: !1084, size: 320)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1108, file: !1032, line: 896, baseType: !176, size: 32, offset: 320)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1108, file: !1032, line: 900, baseType: !1113, size: 96, offset: 352)
!1113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 96, elements: !529)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1108, file: !1032, line: 903, baseType: !214, size: 32, offset: 448)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1108, file: !1032, line: 906, baseType: !176, size: 32, offset: 480)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1108, file: !1032, line: 909, baseType: !214, size: 32, offset: 512)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1108, file: !1032, line: 912, baseType: !214, size: 32, offset: 544)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1108, file: !1032, line: 914, baseType: !792, size: 64, offset: 576)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1108, file: !1032, line: 915, baseType: !146, size: 64, offset: 640)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1076, file: !1032, line: 1071, baseType: !1121, size: 64, offset: 192)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !1032, line: 920, baseType: !1123)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !1032, line: 918, size: 320, elements: !1124)
!1124 = !{!1125}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1123, file: !1032, line: 919, baseType: !1084, size: 320)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1076, file: !1032, line: 1075, baseType: !214, size: 32, offset: 256)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1076, file: !1032, line: 1077, baseType: !214, size: 32, offset: 288)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1076, file: !1032, line: 1078, baseType: !214, size: 32, offset: 320)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1076, file: !1032, line: 1079, baseType: !174, size: 16, offset: 352)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1076, file: !1032, line: 1082, baseType: !174, size: 16, offset: 368)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1076, file: !1032, line: 1085, baseType: !161, size: 8, offset: 384)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1076, file: !1032, line: 1086, baseType: !161, size: 8, offset: 392)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1076, file: !1032, line: 1087, baseType: !161, size: 8, offset: 400)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1076, file: !1032, line: 1088, baseType: !161, size: 8, offset: 408)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1076, file: !1032, line: 1090, baseType: !214, size: 32, offset: 416)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1076, file: !1032, line: 1093, baseType: !174, size: 16, offset: 448)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1076, file: !1032, line: 1096, baseType: !161, size: 8, offset: 464)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1076, file: !1032, line: 1098, baseType: !1139, size: 40, offset: 472)
!1139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 40, elements: !1140)
!1140 = !{!1141}
!1141 = !DISubrange(count: 5)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1076, file: !1032, line: 1101, baseType: !1143, size: 832, offset: 512)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !1032, line: 836, size: 832, elements: !1144)
!1144 = !{!1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1143, file: !1032, line: 837, baseType: !1084, size: 320)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1143, file: !1032, line: 839, baseType: !174, size: 16, offset: 320)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1143, file: !1032, line: 839, baseType: !174, size: 16, offset: 336)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1143, file: !1032, line: 842, baseType: !174, size: 16, offset: 352)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1143, file: !1032, line: 842, baseType: !174, size: 16, offset: 368)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1143, file: !1032, line: 843, baseType: !422, size: 32, offset: 384)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1143, file: !1032, line: 845, baseType: !176, size: 32, offset: 416)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1143, file: !1032, line: 847, baseType: !146, size: 64, offset: 448)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1143, file: !1032, line: 848, baseType: !374, size: 64, offset: 512)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1143, file: !1032, line: 849, baseType: !374, size: 64, offset: 576)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1143, file: !1032, line: 850, baseType: !374, size: 64, offset: 640)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1143, file: !1032, line: 851, baseType: !528, size: 96, offset: 704)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1143, file: !1032, line: 852, baseType: !214, size: 32, offset: 800)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1076, file: !1032, line: 1104, baseType: !1159, size: 1344, offset: 1344)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !1032, line: 867, size: 1344, elements: !1160)
!1160 = !{!1161, !1162, !1163, !1164, !1165, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1159, file: !1032, line: 868, baseType: !174, size: 16)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1159, file: !1032, line: 869, baseType: !174, size: 16, offset: 16)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1159, file: !1032, line: 870, baseType: !174, size: 16, offset: 32)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1159, file: !1032, line: 871, baseType: !174, size: 16, offset: 48)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1159, file: !1032, line: 873, baseType: !1166, size: 896, offset: 64)
!1166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1167, size: 896, elements: !452)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !1032, line: 864, baseType: !1168)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !1032, line: 859, size: 128, elements: !1169)
!1169 = !{!1170, !1171, !1172, !1173, !1174, !1175}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1168, file: !1032, line: 860, baseType: !174, size: 16)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1168, file: !1032, line: 861, baseType: !174, size: 16, offset: 16)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1168, file: !1032, line: 861, baseType: !174, size: 16, offset: 32)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1168, file: !1032, line: 861, baseType: !174, size: 16, offset: 48)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1168, file: !1032, line: 862, baseType: !176, size: 32, offset: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1168, file: !1032, line: 863, baseType: !214, size: 32, offset: 96)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1159, file: !1032, line: 874, baseType: !146, size: 64, offset: 960)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1159, file: !1032, line: 876, baseType: !214, size: 32, offset: 1024)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1159, file: !1032, line: 876, baseType: !214, size: 32, offset: 1056)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1159, file: !1032, line: 878, baseType: !176, size: 32, offset: 1088)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1159, file: !1032, line: 879, baseType: !176, size: 32, offset: 1120)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1159, file: !1032, line: 881, baseType: !176, size: 32, offset: 1152)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1159, file: !1032, line: 881, baseType: !176, size: 32, offset: 1184)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1159, file: !1032, line: 883, baseType: !1030, size: 64, offset: 1216)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1159, file: !1032, line: 884, baseType: !792, size: 64, offset: 1280)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1076, file: !1032, line: 1107, baseType: !214, size: 32, offset: 2688)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1076, file: !1032, line: 1110, baseType: !214, size: 32, offset: 2720)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1076, file: !1032, line: 1113, baseType: !174, size: 16, offset: 2752)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1076, file: !1032, line: 1113, baseType: !174, size: 16, offset: 2768)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1076, file: !1032, line: 1116, baseType: !161, size: 8, offset: 2784)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1076, file: !1032, line: 1117, baseType: !1065, size: 8, offset: 2792)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1076, file: !1032, line: 1120, baseType: !174, size: 16, offset: 2800)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1076, file: !1032, line: 1121, baseType: !214, size: 32, offset: 2816)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1076, file: !1032, line: 1122, baseType: !214, size: 32, offset: 2848)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1076, file: !1032, line: 1123, baseType: !214, size: 32, offset: 2880)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1076, file: !1032, line: 1124, baseType: !214, size: 32, offset: 2912)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1076, file: !1032, line: 1125, baseType: !214, size: 32, offset: 2944)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1076, file: !1032, line: 1126, baseType: !214, size: 32, offset: 2976)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1076, file: !1032, line: 1127, baseType: !214, size: 32, offset: 3008)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1076, file: !1032, line: 1128, baseType: !214, size: 32, offset: 3040)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1076, file: !1032, line: 1129, baseType: !214, size: 32, offset: 3072)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1076, file: !1032, line: 1130, baseType: !214, size: 32, offset: 3104)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1076, file: !1032, line: 1131, baseType: !174, size: 16, offset: 3136)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1076, file: !1032, line: 1132, baseType: !161, size: 8, offset: 3152)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1076, file: !1032, line: 1133, baseType: !161, size: 8, offset: 3160)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1076, file: !1032, line: 1134, baseType: !1206, size: 24, offset: 3168)
!1206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 24, elements: !529)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1076, file: !1032, line: 1135, baseType: !161, size: 8, offset: 3192)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1076, file: !1032, line: 1138, baseType: !792, size: 64, offset: 3200)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1076, file: !1032, line: 1139, baseType: !161, size: 8, offset: 3264)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1076, file: !1032, line: 1140, baseType: !161, size: 8, offset: 3272)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1076, file: !1032, line: 1141, baseType: !161, size: 8, offset: 3280)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1076, file: !1032, line: 1142, baseType: !161, size: 8, offset: 3288)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1076, file: !1032, line: 1143, baseType: !161, size: 8, offset: 3296)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1076, file: !1032, line: 1144, baseType: !1215, size: 64, offset: 3304)
!1215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !394)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1076, file: !1032, line: 1145, baseType: !1215, size: 64, offset: 3368)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1076, file: !1032, line: 1148, baseType: !161, size: 8, offset: 3432)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1076, file: !1032, line: 1149, baseType: !161, size: 8, offset: 3440)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1076, file: !1032, line: 1152, baseType: !161, size: 8, offset: 3448)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1076, file: !1032, line: 1152, baseType: !161, size: 8, offset: 3456)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1076, file: !1032, line: 1153, baseType: !161, size: 8, offset: 3464)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1076, file: !1032, line: 1154, baseType: !174, size: 16, offset: 3472)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1076, file: !1032, line: 1154, baseType: !174, size: 16, offset: 3488)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1076, file: !1032, line: 1155, baseType: !174, size: 16, offset: 3504)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1076, file: !1032, line: 1155, baseType: !174, size: 16, offset: 3520)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1076, file: !1032, line: 1156, baseType: !161, size: 8, offset: 3536)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1076, file: !1032, line: 1157, baseType: !161, size: 8, offset: 3544)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1076, file: !1032, line: 1159, baseType: !161, size: 8, offset: 3552)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1076, file: !1032, line: 1160, baseType: !161, size: 8, offset: 3560)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1076, file: !1032, line: 1161, baseType: !161, size: 8, offset: 3568)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1076, file: !1032, line: 1162, baseType: !161, size: 8, offset: 3576)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1076, file: !1032, line: 1165, baseType: !176, size: 32, offset: 3584)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1076, file: !1032, line: 1166, baseType: !176, size: 32, offset: 3616)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1076, file: !1032, line: 1167, baseType: !176, size: 32, offset: 3648)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1076, file: !1032, line: 1168, baseType: !176, size: 32, offset: 3680)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1076, file: !1032, line: 1171, baseType: !174, size: 16, offset: 3712)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1076, file: !1032, line: 1171, baseType: !174, size: 16, offset: 3728)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1076, file: !1032, line: 1172, baseType: !176, size: 32, offset: 3744)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1076, file: !1032, line: 1173, baseType: !214, size: 32, offset: 3776)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1076, file: !1032, line: 1174, baseType: !214, size: 32, offset: 3808)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1076, file: !1032, line: 1177, baseType: !1242, size: 1024, offset: 3840)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !1032, line: 963, size: 1024, elements: !1243)
!1243 = !{!1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1267, !1268}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1242, file: !1032, line: 965, baseType: !176, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1242, file: !1032, line: 968, baseType: !214, size: 32, offset: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1242, file: !1032, line: 971, baseType: !214, size: 32, offset: 64)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1242, file: !1032, line: 974, baseType: !214, size: 32, offset: 96)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1242, file: !1032, line: 977, baseType: !528, size: 96, offset: 128)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1242, file: !1032, line: 979, baseType: !528, size: 96, offset: 224)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1242, file: !1032, line: 982, baseType: !176, size: 32, offset: 320)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1242, file: !1032, line: 987, baseType: !476, size: 64, offset: 352)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1242, file: !1032, line: 989, baseType: !214, size: 32, offset: 416)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1242, file: !1032, line: 994, baseType: !176, size: 32, offset: 448)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1242, file: !1032, line: 995, baseType: !176, size: 32, offset: 480)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1242, file: !1032, line: 997, baseType: !161, size: 8, offset: 512)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1242, file: !1032, line: 998, baseType: !451, size: 56, offset: 520)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1242, file: !1032, line: 1000, baseType: !214, size: 32, offset: 576)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1242, file: !1032, line: 1003, baseType: !476, size: 64, offset: 608)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1242, file: !1032, line: 1006, baseType: !176, size: 32, offset: 672)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1242, file: !1032, line: 1009, baseType: !214, size: 32, offset: 704)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1242, file: !1032, line: 1012, baseType: !476, size: 64, offset: 736)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1242, file: !1032, line: 1015, baseType: !476, size: 64, offset: 800)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1242, file: !1032, line: 1018, baseType: !176, size: 32, offset: 864)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1242, file: !1032, line: 1019, baseType: !1265, size: 64, offset: 896)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1032, line: 63, flags: DIFlagFwdDecl)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1242, file: !1032, line: 1023, baseType: !214, size: 32, offset: 960)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1242, file: !1032, line: 1024, baseType: !176, size: 32, offset: 992)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1076, file: !1032, line: 1179, baseType: !1270, size: 320, offset: 4864)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !1032, line: 1043, size: 320, elements: !1271)
!1271 = !{!1272, !1273, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1270, file: !1032, line: 1044, baseType: !161, size: 8)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1270, file: !1032, line: 1045, baseType: !1274, size: 16, offset: 8)
!1274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 16, elements: !418)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1270, file: !1032, line: 1048, baseType: !161, size: 8, offset: 24)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1270, file: !1032, line: 1049, baseType: !214, size: 32, offset: 32)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1270, file: !1032, line: 1049, baseType: !214, size: 32, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1270, file: !1032, line: 1052, baseType: !214, size: 32, offset: 96)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1270, file: !1032, line: 1052, baseType: !214, size: 32, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1270, file: !1032, line: 1053, baseType: !161, size: 8, offset: 160)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1270, file: !1032, line: 1054, baseType: !1206, size: 24, offset: 168)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1270, file: !1032, line: 1057, baseType: !214, size: 32, offset: 192)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1270, file: !1032, line: 1057, baseType: !214, size: 32, offset: 224)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1270, file: !1032, line: 1060, baseType: !214, size: 32, offset: 256)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1270, file: !1032, line: 1060, baseType: !214, size: 32, offset: 288)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1031, file: !1032, line: 1247, baseType: !1287, size: 64, offset: 2176)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !1032, line: 60, flags: DIFlagFwdDecl)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1031, file: !1032, line: 1251, baseType: !1290, size: 31872, offset: 2240)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !1032, line: 403, size: 31872, elements: !1291)
!1291 = !{!1292, !1375, !1395, !1404, !1424, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1564, !1565, !1566, !1567, !1583, !1584}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1290, file: !1032, line: 404, baseType: !1293, size: 1984)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !1032, line: 259, size: 1984, elements: !1294)
!1294 = !{!1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1312, !1370}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1293, file: !1032, line: 260, baseType: !161, size: 8)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1293, file: !1032, line: 263, baseType: !161, size: 8, offset: 8)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1293, file: !1032, line: 266, baseType: !161, size: 8, offset: 16)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1293, file: !1032, line: 267, baseType: !161, size: 8, offset: 24)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1293, file: !1032, line: 269, baseType: !161, size: 8, offset: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1293, file: !1032, line: 270, baseType: !161, size: 8, offset: 40)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1293, file: !1032, line: 276, baseType: !161, size: 8, offset: 48)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1293, file: !1032, line: 279, baseType: !161, size: 8, offset: 56)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1293, file: !1032, line: 280, baseType: !174, size: 16, offset: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1293, file: !1032, line: 280, baseType: !174, size: 16, offset: 80)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1293, file: !1032, line: 281, baseType: !214, size: 32, offset: 96)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1293, file: !1032, line: 284, baseType: !161, size: 8, offset: 128)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1293, file: !1032, line: 285, baseType: !161, size: 8, offset: 136)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1293, file: !1032, line: 287, baseType: !1309, size: 48, offset: 144)
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !1310)
!1310 = !{!1311}
!1311 = !DISubrange(count: 6)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1293, file: !1032, line: 290, baseType: !1313, size: 1280, offset: 192)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !445, line: 174, baseType: !1314)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !445, line: 166, size: 1280, elements: !1315)
!1315 = !{!1316, !1317, !1318, !1319, !1320, !1321, !1322, !1369}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1314, file: !445, line: 167, baseType: !176, size: 32)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1314, file: !445, line: 167, baseType: !176, size: 32, offset: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1314, file: !445, line: 168, baseType: !191, size: 512, offset: 64)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1314, file: !445, line: 169, baseType: !191, size: 512, offset: 576)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1314, file: !445, line: 170, baseType: !214, size: 32, offset: 1088)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1314, file: !445, line: 171, baseType: !214, size: 32, offset: 1120)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1314, file: !445, line: 172, baseType: !1323, size: 64, offset: 1152)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !445, line: 72, size: 3072, elements: !1325)
!1325 = !{!1326, !1327, !1328, !1329, !1330, !1339, !1340, !1365, !1366, !1367, !1368}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1324, file: !445, line: 73, baseType: !176, size: 32)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1324, file: !445, line: 73, baseType: !176, size: 32, offset: 32)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1324, file: !445, line: 74, baseType: !176, size: 32, offset: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1324, file: !445, line: 75, baseType: !176, size: 32, offset: 96)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1324, file: !445, line: 77, baseType: !1331, size: 128, offset: 128)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1332, line: 95, baseType: !1333)
!1332 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1332, line: 92, size: 128, elements: !1334)
!1334 = !{!1335, !1336, !1337, !1338}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1333, file: !1332, line: 93, baseType: !214, size: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1333, file: !1332, line: 93, baseType: !214, size: 32, offset: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1333, file: !1332, line: 94, baseType: !214, size: 32, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1333, file: !1332, line: 94, baseType: !214, size: 32, offset: 96)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1324, file: !445, line: 77, baseType: !1331, size: 128, offset: 256)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1324, file: !445, line: 79, baseType: !1341, size: 2304, offset: 384)
!1341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1342, size: 2304, elements: !439)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !445, line: 67, baseType: !1343)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !445, line: 55, size: 576, elements: !1344)
!1344 = !{!1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1361, !1362, !1363, !1364}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1343, file: !445, line: 56, baseType: !174, size: 16)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1343, file: !445, line: 56, baseType: !174, size: 16, offset: 16)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1343, file: !445, line: 58, baseType: !214, size: 32, offset: 32)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1343, file: !445, line: 59, baseType: !214, size: 32, offset: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1343, file: !445, line: 59, baseType: !214, size: 32, offset: 96)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1343, file: !445, line: 60, baseType: !476, size: 64, offset: 128)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1343, file: !445, line: 60, baseType: !476, size: 64, offset: 192)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1343, file: !445, line: 61, baseType: !1353, size: 64, offset: 256)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !445, line: 47, baseType: !1355)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !445, line: 44, size: 96, elements: !1356)
!1356 = !{!1357, !1358, !1359, !1360}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1355, file: !445, line: 45, baseType: !214, size: 32)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1355, file: !445, line: 45, baseType: !214, size: 32, offset: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1355, file: !445, line: 46, baseType: !174, size: 16, offset: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1355, file: !445, line: 46, baseType: !174, size: 16, offset: 80)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1343, file: !445, line: 62, baseType: !1353, size: 64, offset: 320)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1343, file: !445, line: 64, baseType: !1353, size: 64, offset: 384)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1343, file: !445, line: 65, baseType: !476, size: 64, offset: 448)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1343, file: !445, line: 66, baseType: !476, size: 64, offset: 512)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1324, file: !445, line: 80, baseType: !528, size: 96, offset: 2688)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1324, file: !445, line: 80, baseType: !528, size: 96, offset: 2784)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1324, file: !445, line: 81, baseType: !528, size: 96, offset: 2880)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1324, file: !445, line: 83, baseType: !528, size: 96, offset: 2976)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1314, file: !445, line: 173, baseType: !146, size: 64, offset: 1216)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1293, file: !1032, line: 291, baseType: !1371, size: 512, offset: 1472)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !445, line: 178, baseType: !1372)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !445, line: 176, size: 512, elements: !1373)
!1373 = !{!1374}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1372, file: !445, line: 177, baseType: !191, size: 512)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1290, file: !1032, line: 406, baseType: !1376, size: 64, offset: 1984)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !1032, line: 80, size: 1472, elements: !1378)
!1378 = !{!1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1377, file: !1032, line: 81, baseType: !146, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1377, file: !1032, line: 82, baseType: !146, size: 64, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1377, file: !1032, line: 83, baseType: !7, size: 32, offset: 128)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1377, file: !1032, line: 84, baseType: !7, size: 32, offset: 160)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1377, file: !1032, line: 86, baseType: !7, size: 32, offset: 192)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1377, file: !1032, line: 87, baseType: !7, size: 32, offset: 224)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1377, file: !1032, line: 88, baseType: !7, size: 32, offset: 256)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1377, file: !1032, line: 89, baseType: !7, size: 32, offset: 288)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1377, file: !1032, line: 90, baseType: !7, size: 32, offset: 320)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1377, file: !1032, line: 91, baseType: !7, size: 32, offset: 352)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1377, file: !1032, line: 92, baseType: !7, size: 32, offset: 384)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1377, file: !1032, line: 93, baseType: !7, size: 32, offset: 416)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1377, file: !1032, line: 95, baseType: !1392, size: 1024, offset: 448)
!1392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 1024, elements: !1393)
!1393 = !{!1394}
!1394 = !DISubrange(count: 128)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1290, file: !1032, line: 407, baseType: !1396, size: 64, offset: 2048)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !1032, line: 98, size: 1216, elements: !1398)
!1398 = !{!1399, !1400, !1401, !1402, !1403}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1397, file: !1032, line: 100, baseType: !146, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1397, file: !1032, line: 101, baseType: !146, size: 64, offset: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1397, file: !1032, line: 103, baseType: !7, size: 32, offset: 128)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1397, file: !1032, line: 104, baseType: !7, size: 32, offset: 160)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1397, file: !1032, line: 106, baseType: !1392, size: 1024, offset: 192)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1290, file: !1032, line: 408, baseType: !1405, size: 512, offset: 2112)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !1032, line: 109, size: 512, elements: !1406)
!1406 = !{!1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1405, file: !1032, line: 111, baseType: !176, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1405, file: !1032, line: 112, baseType: !176, size: 32, offset: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1405, file: !1032, line: 115, baseType: !176, size: 32, offset: 64)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1405, file: !1032, line: 116, baseType: !176, size: 32, offset: 96)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1405, file: !1032, line: 117, baseType: !176, size: 32, offset: 128)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1405, file: !1032, line: 118, baseType: !176, size: 32, offset: 160)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1405, file: !1032, line: 119, baseType: !176, size: 32, offset: 192)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1405, file: !1032, line: 120, baseType: !176, size: 32, offset: 224)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1405, file: !1032, line: 121, baseType: !176, size: 32, offset: 256)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1405, file: !1032, line: 122, baseType: !176, size: 32, offset: 288)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1405, file: !1032, line: 125, baseType: !176, size: 32, offset: 320)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1405, file: !1032, line: 126, baseType: !176, size: 32, offset: 352)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1405, file: !1032, line: 127, baseType: !174, size: 16, offset: 384)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1405, file: !1032, line: 128, baseType: !174, size: 16, offset: 400)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1405, file: !1032, line: 129, baseType: !176, size: 32, offset: 416)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1405, file: !1032, line: 130, baseType: !176, size: 32, offset: 448)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1405, file: !1032, line: 131, baseType: !176, size: 32, offset: 480)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1290, file: !1032, line: 409, baseType: !1425, size: 576, offset: 2624)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !1032, line: 134, size: 576, elements: !1426)
!1426 = !{!1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1425, file: !1032, line: 135, baseType: !176, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1425, file: !1032, line: 136, baseType: !176, size: 32, offset: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1425, file: !1032, line: 137, baseType: !176, size: 32, offset: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1425, file: !1032, line: 138, baseType: !176, size: 32, offset: 96)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1425, file: !1032, line: 139, baseType: !176, size: 32, offset: 128)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1425, file: !1032, line: 140, baseType: !176, size: 32, offset: 160)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1425, file: !1032, line: 141, baseType: !176, size: 32, offset: 192)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1425, file: !1032, line: 142, baseType: !176, size: 32, offset: 224)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1425, file: !1032, line: 143, baseType: !214, size: 32, offset: 256)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1425, file: !1032, line: 144, baseType: !176, size: 32, offset: 288)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1425, file: !1032, line: 145, baseType: !176, size: 32, offset: 320)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1425, file: !1032, line: 147, baseType: !176, size: 32, offset: 352)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1425, file: !1032, line: 148, baseType: !176, size: 32, offset: 384)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1425, file: !1032, line: 149, baseType: !176, size: 32, offset: 416)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1425, file: !1032, line: 150, baseType: !176, size: 32, offset: 448)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1425, file: !1032, line: 151, baseType: !176, size: 32, offset: 480)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1425, file: !1032, line: 152, baseType: !180, size: 64, offset: 512)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1290, file: !1032, line: 411, baseType: !176, size: 32, offset: 3200)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1290, file: !1032, line: 411, baseType: !176, size: 32, offset: 3232)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1290, file: !1032, line: 411, baseType: !176, size: 32, offset: 3264)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1290, file: !1032, line: 412, baseType: !214, size: 32, offset: 3296)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1290, file: !1032, line: 413, baseType: !176, size: 32, offset: 3328)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1290, file: !1032, line: 413, baseType: !176, size: 32, offset: 3360)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1290, file: !1032, line: 415, baseType: !176, size: 32, offset: 3392)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1290, file: !1032, line: 415, baseType: !176, size: 32, offset: 3424)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1290, file: !1032, line: 416, baseType: !174, size: 16, offset: 3456)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1290, file: !1032, line: 416, baseType: !174, size: 16, offset: 3472)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1290, file: !1032, line: 418, baseType: !214, size: 32, offset: 3488)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1290, file: !1032, line: 418, baseType: !214, size: 32, offset: 3520)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1290, file: !1032, line: 421, baseType: !214, size: 32, offset: 3552)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1290, file: !1032, line: 421, baseType: !214, size: 32, offset: 3584)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1290, file: !1032, line: 421, baseType: !214, size: 32, offset: 3616)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1290, file: !1032, line: 425, baseType: !174, size: 16, offset: 3648)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1290, file: !1032, line: 425, baseType: !174, size: 16, offset: 3664)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1290, file: !1032, line: 425, baseType: !174, size: 16, offset: 3680)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1290, file: !1032, line: 426, baseType: !174, size: 16, offset: 3696)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1290, file: !1032, line: 428, baseType: !174, size: 16, offset: 3712)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1290, file: !1032, line: 428, baseType: !174, size: 16, offset: 3728)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1290, file: !1032, line: 431, baseType: !176, size: 32, offset: 3744)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1290, file: !1032, line: 433, baseType: !174, size: 16, offset: 3776)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1290, file: !1032, line: 435, baseType: !174, size: 16, offset: 3792)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1290, file: !1032, line: 437, baseType: !174, size: 16, offset: 3808)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1290, file: !1032, line: 439, baseType: !174, size: 16, offset: 3824)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1290, file: !1032, line: 441, baseType: !174, size: 16, offset: 3840)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1290, file: !1032, line: 443, baseType: !174, size: 16, offset: 3856)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1290, file: !1032, line: 449, baseType: !176, size: 32, offset: 3872)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1290, file: !1032, line: 453, baseType: !176, size: 32, offset: 3904)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1290, file: !1032, line: 458, baseType: !174, size: 16, offset: 3936)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1290, file: !1032, line: 462, baseType: !174, size: 16, offset: 3952)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1290, file: !1032, line: 467, baseType: !176, size: 32, offset: 3968)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1290, file: !1032, line: 467, baseType: !176, size: 32, offset: 4000)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1290, file: !1032, line: 469, baseType: !174, size: 16, offset: 4032)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1290, file: !1032, line: 469, baseType: !174, size: 16, offset: 4048)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1290, file: !1032, line: 469, baseType: !174, size: 16, offset: 4064)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1290, file: !1032, line: 469, baseType: !174, size: 16, offset: 4080)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1290, file: !1032, line: 474, baseType: !174, size: 16, offset: 4096)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1290, file: !1032, line: 475, baseType: !161, size: 8, offset: 4112)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1290, file: !1032, line: 476, baseType: !161, size: 8, offset: 4120)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1290, file: !1032, line: 481, baseType: !176, size: 32, offset: 4128)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1290, file: !1032, line: 486, baseType: !176, size: 32, offset: 4160)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1290, file: !1032, line: 491, baseType: !176, size: 32, offset: 4192)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1290, file: !1032, line: 496, baseType: !174, size: 16, offset: 4224)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1290, file: !1032, line: 498, baseType: !174, size: 16, offset: 4240)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1290, file: !1032, line: 501, baseType: !174, size: 16, offset: 4256)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1290, file: !1032, line: 502, baseType: !174, size: 16, offset: 4272)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1290, file: !1032, line: 508, baseType: !174, size: 16, offset: 4288)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1290, file: !1032, line: 513, baseType: !174, size: 16, offset: 4304)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1290, file: !1032, line: 515, baseType: !174, size: 16, offset: 4320)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1290, file: !1032, line: 515, baseType: !174, size: 16, offset: 4336)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1290, file: !1032, line: 519, baseType: !1331, size: 128, offset: 4352)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1290, file: !1032, line: 519, baseType: !1331, size: 128, offset: 4480)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1290, file: !1032, line: 520, baseType: !1499, size: 128, offset: 4608)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1332, line: 89, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1332, line: 86, size: 128, elements: !1501)
!1501 = !{!1502, !1503, !1504, !1505}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1500, file: !1332, line: 87, baseType: !176, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1500, file: !1332, line: 87, baseType: !176, size: 32, offset: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1500, file: !1332, line: 88, baseType: !176, size: 32, offset: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1500, file: !1332, line: 88, baseType: !176, size: 32, offset: 96)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1290, file: !1032, line: 523, baseType: !201, size: 128, offset: 4736)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1290, file: !1032, line: 524, baseType: !174, size: 16, offset: 4864)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1290, file: !1032, line: 527, baseType: !174, size: 16, offset: 4880)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1290, file: !1032, line: 532, baseType: !214, size: 32, offset: 4896)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1290, file: !1032, line: 532, baseType: !214, size: 32, offset: 4928)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1290, file: !1032, line: 534, baseType: !214, size: 32, offset: 4960)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1290, file: !1032, line: 538, baseType: !214, size: 32, offset: 4992)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1290, file: !1032, line: 542, baseType: !176, size: 32, offset: 5024)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1290, file: !1032, line: 545, baseType: !214, size: 32, offset: 5056)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1290, file: !1032, line: 545, baseType: !214, size: 32, offset: 5088)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1290, file: !1032, line: 545, baseType: !214, size: 32, offset: 5120)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1290, file: !1032, line: 548, baseType: !214, size: 32, offset: 5152)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1290, file: !1032, line: 551, baseType: !174, size: 16, offset: 5184)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1290, file: !1032, line: 551, baseType: !174, size: 16, offset: 5200)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1290, file: !1032, line: 551, baseType: !174, size: 16, offset: 5216)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1290, file: !1032, line: 551, baseType: !174, size: 16, offset: 5232)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1290, file: !1032, line: 552, baseType: !174, size: 16, offset: 5248)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1290, file: !1032, line: 552, baseType: !174, size: 16, offset: 5264)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1290, file: !1032, line: 553, baseType: !214, size: 32, offset: 5280)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1290, file: !1032, line: 553, baseType: !214, size: 32, offset: 5312)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1290, file: !1032, line: 554, baseType: !174, size: 16, offset: 5344)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1290, file: !1032, line: 554, baseType: !174, size: 16, offset: 5360)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1290, file: !1032, line: 555, baseType: !214, size: 32, offset: 5376)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1290, file: !1032, line: 555, baseType: !214, size: 32, offset: 5408)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1290, file: !1032, line: 558, baseType: !160, size: 8192, offset: 5440)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1290, file: !1032, line: 561, baseType: !176, size: 32, offset: 13632)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1290, file: !1032, line: 562, baseType: !174, size: 16, offset: 13664)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1290, file: !1032, line: 562, baseType: !174, size: 16, offset: 13680)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1290, file: !1032, line: 565, baseType: !1535, size: 6144, offset: 13696)
!1535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 6144, elements: !1536)
!1536 = !{!1537}
!1537 = !DISubrange(count: 768)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1290, file: !1032, line: 568, baseType: !438, size: 128, offset: 19840)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1290, file: !1032, line: 569, baseType: !438, size: 128, offset: 19968)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1290, file: !1032, line: 572, baseType: !161, size: 8, offset: 20096)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1290, file: !1032, line: 573, baseType: !161, size: 8, offset: 20104)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1290, file: !1032, line: 574, baseType: !161, size: 8, offset: 20112)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1290, file: !1032, line: 575, baseType: !1139, size: 40, offset: 20120)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1290, file: !1032, line: 578, baseType: !176, size: 32, offset: 20160)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1290, file: !1032, line: 579, baseType: !174, size: 16, offset: 20192)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1290, file: !1032, line: 580, baseType: !174, size: 16, offset: 20208)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1290, file: !1032, line: 581, baseType: !214, size: 32, offset: 20224)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1290, file: !1032, line: 582, baseType: !214, size: 32, offset: 20256)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1290, file: !1032, line: 585, baseType: !174, size: 16, offset: 20288)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1290, file: !1032, line: 585, baseType: !174, size: 16, offset: 20304)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1290, file: !1032, line: 586, baseType: !214, size: 32, offset: 20320)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1290, file: !1032, line: 589, baseType: !174, size: 16, offset: 20352)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1290, file: !1032, line: 589, baseType: !174, size: 16, offset: 20368)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1290, file: !1032, line: 590, baseType: !176, size: 32, offset: 20384)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1290, file: !1032, line: 593, baseType: !174, size: 16, offset: 20416)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1290, file: !1032, line: 593, baseType: !174, size: 16, offset: 20432)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1290, file: !1032, line: 594, baseType: !174, size: 16, offset: 20448)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1290, file: !1032, line: 594, baseType: !174, size: 16, offset: 20464)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1290, file: !1032, line: 595, baseType: !214, size: 32, offset: 20480)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1290, file: !1032, line: 596, baseType: !214, size: 32, offset: 20512)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1290, file: !1032, line: 597, baseType: !1562, size: 64, offset: 20544)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64)
!1563 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !224, line: 205, flags: DIFlagFwdDecl)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1290, file: !1032, line: 600, baseType: !176, size: 32, offset: 20608)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1290, file: !1032, line: 601, baseType: !214, size: 32, offset: 20640)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1290, file: !1032, line: 604, baseType: !334, size: 256, offset: 20672)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1290, file: !1032, line: 607, baseType: !1568, size: 10880, offset: 20928)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !1032, line: 364, size: 10880, elements: !1569)
!1569 = !{!1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1568, file: !1032, line: 365, baseType: !1293, size: 1984)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1568, file: !1032, line: 367, baseType: !160, size: 8192, offset: 1984)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1568, file: !1032, line: 369, baseType: !174, size: 16, offset: 10176)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1568, file: !1032, line: 369, baseType: !174, size: 16, offset: 10192)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1568, file: !1032, line: 370, baseType: !174, size: 16, offset: 10208)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1568, file: !1032, line: 370, baseType: !174, size: 16, offset: 10224)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1568, file: !1032, line: 372, baseType: !214, size: 32, offset: 10240)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1568, file: !1032, line: 373, baseType: !214, size: 32, offset: 10272)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1568, file: !1032, line: 375, baseType: !1206, size: 24, offset: 10304)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1568, file: !1032, line: 376, baseType: !161, size: 8, offset: 10328)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1568, file: !1032, line: 378, baseType: !161, size: 8, offset: 10336)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1568, file: !1032, line: 379, baseType: !1206, size: 24, offset: 10344)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1568, file: !1032, line: 381, baseType: !191, size: 512, offset: 10368)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1290, file: !1032, line: 609, baseType: !176, size: 32, offset: 31808)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1290, file: !1032, line: 610, baseType: !176, size: 32, offset: 31840)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1031, file: !1032, line: 1252, baseType: !1586, size: 256, offset: 34112)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !1032, line: 158, size: 256, elements: !1587)
!1587 = !{!1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1586, file: !1032, line: 159, baseType: !176, size: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1586, file: !1032, line: 160, baseType: !214, size: 32, offset: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1586, file: !1032, line: 161, baseType: !214, size: 32, offset: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1586, file: !1032, line: 162, baseType: !214, size: 32, offset: 96)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1586, file: !1032, line: 163, baseType: !176, size: 32, offset: 128)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1586, file: !1032, line: 164, baseType: !174, size: 16, offset: 160)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1586, file: !1032, line: 165, baseType: !174, size: 16, offset: 176)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1586, file: !1032, line: 166, baseType: !214, size: 32, offset: 192)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1586, file: !1032, line: 167, baseType: !214, size: 32, offset: 224)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1031, file: !1032, line: 1254, baseType: !201, size: 128, offset: 34368)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1031, file: !1032, line: 1255, baseType: !201, size: 128, offset: 34496)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1031, file: !1032, line: 1257, baseType: !146, size: 64, offset: 34624)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1031, file: !1032, line: 1258, baseType: !146, size: 64, offset: 34688)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1031, file: !1032, line: 1259, baseType: !146, size: 64, offset: 34752)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1031, file: !1032, line: 1260, baseType: !146, size: 64, offset: 34816)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1031, file: !1032, line: 1262, baseType: !146, size: 64, offset: 34880)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1031, file: !1032, line: 1265, baseType: !1605, size: 64, offset: 34944)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64)
!1606 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !1032, line: 1265, flags: DIFlagFwdDecl)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1031, file: !1032, line: 1266, baseType: !174, size: 16, offset: 35008)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1031, file: !1032, line: 1267, baseType: !174, size: 16, offset: 35024)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1031, file: !1032, line: 1270, baseType: !176, size: 32, offset: 35040)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1031, file: !1032, line: 1271, baseType: !201, size: 128, offset: 35072)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1031, file: !1032, line: 1274, baseType: !1612, size: 128, offset: 35200)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !1032, line: 650, size: 128, elements: !1613)
!1613 = !{!1614, !1615, !1616, !1617, !1618}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1612, file: !1032, line: 651, baseType: !528, size: 96)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1612, file: !1032, line: 652, baseType: !161, size: 8, offset: 96)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1612, file: !1032, line: 652, baseType: !161, size: 8, offset: 104)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1612, file: !1032, line: 652, baseType: !161, size: 8, offset: 112)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1612, file: !1032, line: 652, baseType: !161, size: 8, offset: 120)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1031, file: !1032, line: 1275, baseType: !1620, size: 1472, offset: 35328)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !1032, line: 676, size: 1472, elements: !1621)
!1621 = !{!1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1643, !1644, !1645, !1646, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1620, file: !1032, line: 679, baseType: !1612, size: 128)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1620, file: !1032, line: 680, baseType: !174, size: 16, offset: 128)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1620, file: !1032, line: 680, baseType: !174, size: 16, offset: 144)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1620, file: !1032, line: 680, baseType: !174, size: 16, offset: 160)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1620, file: !1032, line: 680, baseType: !174, size: 16, offset: 176)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1620, file: !1032, line: 681, baseType: !174, size: 16, offset: 192)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1620, file: !1032, line: 681, baseType: !174, size: 16, offset: 208)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1620, file: !1032, line: 681, baseType: !174, size: 16, offset: 224)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1620, file: !1032, line: 681, baseType: !174, size: 16, offset: 240)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1620, file: !1032, line: 682, baseType: !174, size: 16, offset: 256)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1620, file: !1032, line: 682, baseType: !531, size: 48, offset: 272)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1620, file: !1032, line: 685, baseType: !1634, size: 192, offset: 320)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !1032, line: 633, size: 192, elements: !1635)
!1635 = !{!1636, !1637, !1638, !1639, !1640, !1641, !1642}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1634, file: !1032, line: 634, baseType: !174, size: 16)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1634, file: !1032, line: 634, baseType: !174, size: 16, offset: 16)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1634, file: !1032, line: 635, baseType: !174, size: 16, offset: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1634, file: !1032, line: 635, baseType: !174, size: 16, offset: 48)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1634, file: !1032, line: 636, baseType: !214, size: 32, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1634, file: !1032, line: 636, baseType: !214, size: 32, offset: 96)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1634, file: !1032, line: 637, baseType: !1562, size: 64, offset: 128)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1620, file: !1032, line: 686, baseType: !174, size: 16, offset: 512)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1620, file: !1032, line: 686, baseType: !174, size: 16, offset: 528)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1620, file: !1032, line: 687, baseType: !214, size: 32, offset: 544)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1620, file: !1032, line: 688, baseType: !1647, size: 448, offset: 576)
!1647 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !1032, line: 674, baseType: !1648)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !1032, line: 659, size: 448, elements: !1649)
!1649 = !{!1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1648, file: !1032, line: 660, baseType: !214, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1648, file: !1032, line: 661, baseType: !214, size: 32, offset: 32)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1648, file: !1032, line: 662, baseType: !214, size: 32, offset: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1648, file: !1032, line: 663, baseType: !214, size: 32, offset: 96)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1648, file: !1032, line: 664, baseType: !214, size: 32, offset: 128)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1648, file: !1032, line: 665, baseType: !214, size: 32, offset: 160)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1648, file: !1032, line: 666, baseType: !214, size: 32, offset: 192)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1648, file: !1032, line: 667, baseType: !214, size: 32, offset: 224)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1648, file: !1032, line: 668, baseType: !214, size: 32, offset: 256)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1648, file: !1032, line: 669, baseType: !214, size: 32, offset: 288)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1648, file: !1032, line: 670, baseType: !176, size: 32, offset: 320)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1648, file: !1032, line: 671, baseType: !214, size: 32, offset: 352)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1648, file: !1032, line: 672, baseType: !214, size: 32, offset: 384)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1648, file: !1032, line: 673, baseType: !174, size: 16, offset: 416)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1648, file: !1032, line: 673, baseType: !174, size: 16, offset: 432)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1620, file: !1032, line: 692, baseType: !214, size: 32, offset: 1024)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1620, file: !1032, line: 697, baseType: !214, size: 32, offset: 1056)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1620, file: !1032, line: 703, baseType: !176, size: 32, offset: 1088)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1620, file: !1032, line: 704, baseType: !174, size: 16, offset: 1120)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1620, file: !1032, line: 704, baseType: !174, size: 16, offset: 1136)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1620, file: !1032, line: 705, baseType: !174, size: 16, offset: 1152)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1620, file: !1032, line: 706, baseType: !174, size: 16, offset: 1168)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1620, file: !1032, line: 707, baseType: !174, size: 16, offset: 1184)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1620, file: !1032, line: 708, baseType: !174, size: 16, offset: 1200)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1620, file: !1032, line: 709, baseType: !174, size: 16, offset: 1216)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1620, file: !1032, line: 709, baseType: !174, size: 16, offset: 1232)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1620, file: !1032, line: 709, baseType: !174, size: 16, offset: 1248)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1620, file: !1032, line: 709, baseType: !174, size: 16, offset: 1264)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1620, file: !1032, line: 710, baseType: !174, size: 16, offset: 1280)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1620, file: !1032, line: 711, baseType: !174, size: 16, offset: 1296)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1620, file: !1032, line: 712, baseType: !214, size: 32, offset: 1312)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1620, file: !1032, line: 713, baseType: !214, size: 32, offset: 1344)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1620, file: !1032, line: 713, baseType: !214, size: 32, offset: 1376)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1620, file: !1032, line: 713, baseType: !214, size: 32, offset: 1408)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1620, file: !1032, line: 713, baseType: !214, size: 32, offset: 1440)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1031, file: !1032, line: 1278, baseType: !1686, size: 64, offset: 36800)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !1032, line: 1197, size: 64, elements: !1687)
!1687 = !{!1688, !1689, !1690, !1691}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1686, file: !1032, line: 1199, baseType: !214, size: 32)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1686, file: !1032, line: 1200, baseType: !161, size: 8, offset: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1686, file: !1032, line: 1201, baseType: !161, size: 8, offset: 40)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1686, file: !1032, line: 1202, baseType: !174, size: 16, offset: 48)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1031, file: !1032, line: 1281, baseType: !858, size: 64, offset: 36864)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1031, file: !1032, line: 1284, baseType: !1694, size: 192, offset: 36928)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !1032, line: 1208, size: 192, elements: !1695)
!1695 = !{!1696, !1697, !1698, !1699}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1694, file: !1032, line: 1209, baseType: !528, size: 96)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1694, file: !1032, line: 1210, baseType: !176, size: 32, offset: 96)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1694, file: !1032, line: 1210, baseType: !176, size: 32, offset: 128)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1694, file: !1032, line: 1210, baseType: !176, size: 32, offset: 160)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1031, file: !1032, line: 1287, baseType: !1701, size: 64, offset: 37120)
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64)
!1702 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1032, line: 62, flags: DIFlagFwdDecl)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1031, file: !1032, line: 1289, baseType: !777, size: 64, offset: 37184)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1031, file: !1032, line: 1290, baseType: !777, size: 64, offset: 37248)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1031, file: !1032, line: 1293, baseType: !1313, size: 1280, offset: 37312)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1031, file: !1032, line: 1294, baseType: !1371, size: 512, offset: 38592)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1031, file: !1032, line: 1295, baseType: !444, size: 512, offset: 39104)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1031, file: !1032, line: 1298, baseType: !1709, size: 64, offset: 39616)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !1032, line: 1298, flags: DIFlagFwdDecl)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1027, file: !376, line: 53, baseType: !176, size: 32, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1027, file: !376, line: 54, baseType: !176, size: 32, offset: 96)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1027, file: !376, line: 55, baseType: !176, size: 32, offset: 128)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1027, file: !376, line: 55, baseType: !176, size: 32, offset: 160)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1027, file: !376, line: 56, baseType: !161, size: 8, offset: 192)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1027, file: !376, line: 56, baseType: !161, size: 8, offset: 200)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1027, file: !376, line: 57, baseType: !161, size: 8, offset: 208)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1027, file: !376, line: 57, baseType: !161, size: 8, offset: 216)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1027, file: !376, line: 59, baseType: !174, size: 16, offset: 224)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1027, file: !376, line: 59, baseType: !174, size: 16, offset: 240)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1027, file: !376, line: 59, baseType: !174, size: 16, offset: 256)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1027, file: !376, line: 61, baseType: !174, size: 16, offset: 272)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1027, file: !376, line: 63, baseType: !176, size: 32, offset: 288)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !793, file: !23, line: 293, baseType: !201, size: 128, offset: 11200)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !793, file: !23, line: 294, baseType: !1726, size: 64, offset: 11328)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64)
!1727 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !23, line: 113, baseType: !1728)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !23, line: 108, size: 256, elements: !1729)
!1729 = !{!1730, !1732, !1733, !1734, !1735}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1728, file: !23, line: 109, baseType: !1731, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1728, file: !23, line: 109, baseType: !1731, size: 64, offset: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1728, file: !23, line: 110, baseType: !792, size: 64, offset: 128)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1728, file: !23, line: 111, baseType: !176, size: 32, offset: 192)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1728, file: !23, line: 112, baseType: !214, size: 32, offset: 224)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cdlayer", scope: !567, file: !568, line: 82, baseType: !176, size: 32, offset: 832)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !218, file: !217, line: 95, baseType: !722, size: 1600, offset: 2240)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !218, file: !217, line: 95, baseType: !722, size: 1600, offset: 3840)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !218, file: !217, line: 95, baseType: !722, size: 1600, offset: 5440)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !218, file: !217, line: 98, baseType: !722, size: 1600, offset: 7040)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !218, file: !217, line: 98, baseType: !722, size: 1600, offset: 8640)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !218, file: !217, line: 101, baseType: !176, size: 32, offset: 10240)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !218, file: !217, line: 101, baseType: !176, size: 32, offset: 10272)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !218, file: !217, line: 101, baseType: !176, size: 32, offset: 10304)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !218, file: !217, line: 101, baseType: !176, size: 32, offset: 10336)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !218, file: !217, line: 104, baseType: !176, size: 32, offset: 10368)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !218, file: !217, line: 104, baseType: !176, size: 32, offset: 10400)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !218, file: !217, line: 111, baseType: !176, size: 32, offset: 10432)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !218, file: !217, line: 114, baseType: !528, size: 96, offset: 10464)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !218, file: !217, line: 115, baseType: !528, size: 96, offset: 10560)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !218, file: !217, line: 116, baseType: !528, size: 96, offset: 10656)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !218, file: !217, line: 118, baseType: !176, size: 32, offset: 10752)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !218, file: !217, line: 119, baseType: !174, size: 16, offset: 10784)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !218, file: !217, line: 119, baseType: !174, size: 16, offset: 10800)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !218, file: !217, line: 120, baseType: !214, size: 32, offset: 10816)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !218, file: !217, line: 121, baseType: !176, size: 32, offset: 10848)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !218, file: !217, line: 124, baseType: !161, size: 8, offset: 10880)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !218, file: !217, line: 124, baseType: !161, size: 8, offset: 10888)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !218, file: !217, line: 126, baseType: !161, size: 8, offset: 10896)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !218, file: !217, line: 126, baseType: !161, size: 8, offset: 10904)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !218, file: !217, line: 127, baseType: !161, size: 8, offset: 10912)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !218, file: !217, line: 128, baseType: !161, size: 8, offset: 10920)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !218, file: !217, line: 130, baseType: !174, size: 16, offset: 10928)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !218, file: !217, line: 132, baseType: !1765, size: 64, offset: 10944)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !356, line: 233, size: 3584, elements: !1767)
!1767 = !{!1768, !1769, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !1766, file: !356, line: 234, baseType: !201, size: 128)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !1766, file: !356, line: 235, baseType: !1770, size: 64, offset: 128)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !356, line: 69, baseType: !525)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !1766, file: !356, line: 237, baseType: !785, size: 8, offset: 192)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1766, file: !356, line: 237, baseType: !785, size: 8, offset: 200)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !1766, file: !356, line: 237, baseType: !785, size: 8, offset: 208)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !1766, file: !356, line: 237, baseType: !785, size: 8, offset: 216)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !1766, file: !356, line: 237, baseType: !785, size: 8, offset: 224)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !1766, file: !356, line: 237, baseType: !785, size: 8, offset: 232)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !1766, file: !356, line: 238, baseType: !785, size: 8, offset: 240)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1766, file: !356, line: 238, baseType: !785, size: 8, offset: 248)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !1766, file: !356, line: 241, baseType: !721, size: 1600, offset: 256)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !1766, file: !356, line: 242, baseType: !721, size: 1600, offset: 1856)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !1766, file: !356, line: 243, baseType: !212, size: 64, offset: 3456)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !1766, file: !356, line: 244, baseType: !211, size: 64, offset: 3520)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DIDerivedType(tag: DW_TAG_typedef, name: "Lattice", file: !1786, line: 72, baseType: !1787)
!1786 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lattice_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Lattice", file: !1786, line: 52, size: 2240, elements: !1788)
!1788 = !{!1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1821, !1822, !1823, !1824, !1825}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1787, file: !1786, line: 53, baseType: !141, size: 960)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1787, file: !1786, line: 54, baseType: !222, size: 64, offset: 960)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !1787, file: !1786, line: 56, baseType: !174, size: 16, offset: 1024)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !1787, file: !1786, line: 56, baseType: !174, size: 16, offset: 1040)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "pntsw", scope: !1787, file: !1786, line: 56, baseType: !174, size: 16, offset: 1056)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1787, file: !1786, line: 56, baseType: !174, size: 16, offset: 1072)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "opntsu", scope: !1787, file: !1786, line: 57, baseType: !174, size: 16, offset: 1088)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "opntsv", scope: !1787, file: !1786, line: 57, baseType: !174, size: 16, offset: 1104)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "opntsw", scope: !1787, file: !1786, line: 57, baseType: !174, size: 16, offset: 1120)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1787, file: !1786, line: 57, baseType: !174, size: 16, offset: 1136)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "typeu", scope: !1787, file: !1786, line: 58, baseType: !161, size: 8, offset: 1152)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "typev", scope: !1787, file: !1786, line: 58, baseType: !161, size: 8, offset: 1160)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "typew", scope: !1787, file: !1786, line: 58, baseType: !161, size: 8, offset: 1168)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1787, file: !1786, line: 58, baseType: !161, size: 8, offset: 1176)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "actbp", scope: !1787, file: !1786, line: 59, baseType: !176, size: 32, offset: 1184)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "fu", scope: !1787, file: !1786, line: 61, baseType: !214, size: 32, offset: 1216)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !1787, file: !1786, line: 61, baseType: !214, size: 32, offset: 1248)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "fw", scope: !1787, file: !1786, line: 61, baseType: !214, size: 32, offset: 1280)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "du", scope: !1787, file: !1786, line: 61, baseType: !214, size: 32, offset: 1312)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "dv", scope: !1787, file: !1786, line: 61, baseType: !214, size: 32, offset: 1344)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1787, file: !1786, line: 61, baseType: !214, size: 32, offset: 1376)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1787, file: !1786, line: 63, baseType: !1811, size: 64, offset: 1408)
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BPoint", file: !352, line: 136, size: 288, elements: !1813)
!1813 = !{!1814, !1815, !1816, !1817, !1818, !1819, !1820}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1812, file: !352, line: 137, baseType: !438, size: 128)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !1812, file: !352, line: 138, baseType: !214, size: 32, offset: 128)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1812, file: !352, line: 138, baseType: !214, size: 32, offset: 160)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !1812, file: !352, line: 139, baseType: !174, size: 16, offset: 192)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !1812, file: !352, line: 139, baseType: !174, size: 16, offset: 208)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1812, file: !352, line: 140, baseType: !214, size: 32, offset: 224)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1812, file: !352, line: 140, baseType: !214, size: 32, offset: 256)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1787, file: !1786, line: 65, baseType: !303, size: 64, offset: 1472)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1787, file: !1786, line: 66, baseType: !307, size: 64, offset: 1536)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !1787, file: !1786, line: 68, baseType: !544, size: 64, offset: 1600)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !1787, file: !1786, line: 69, baseType: !191, size: 512, offset: 1664)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "editlatt", scope: !1787, file: !1786, line: 71, baseType: !1826, size: 64, offset: 2176)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditLatt", file: !1786, line: 44, size: 128, elements: !1828)
!1828 = !{!1829, !1831, !1832}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !1827, file: !1786, line: 45, baseType: !1830, size: 64)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !1827, file: !1786, line: 47, baseType: !176, size: 32, offset: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1827, file: !1786, line: 49, baseType: !1833, size: 32, offset: 96)
!1833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 32, elements: !439)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curve", file: !352, line: 273, baseType: !1836)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Curve", file: !352, line: 193, size: 4224, elements: !1837)
!1837 = !{!1838, !1839, !1840, !1841, !1842, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1902, !1903, !1906, !1907, !1908, !1909, !1917, !1918, !1919, !1928, !1929, !1930, !1931, !1932, !1933, !1934}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1836, file: !352, line: 194, baseType: !141, size: 960)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1836, file: !352, line: 195, baseType: !222, size: 64, offset: 960)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1836, file: !352, line: 197, baseType: !292, size: 64, offset: 1024)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "nurb", scope: !1836, file: !352, line: 199, baseType: !201, size: 128, offset: 1088)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "editnurb", scope: !1836, file: !352, line: 201, baseType: !1843, size: 64, offset: 1216)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditNurb", file: !352, line: 191, baseType: !1845)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditNurb", file: !352, line: 180, size: 256, elements: !1846)
!1846 = !{!1847, !1848, !1849, !1850}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "nurbs", scope: !1845, file: !352, line: 182, baseType: !201, size: 128)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "keyindex", scope: !1845, file: !352, line: 185, baseType: !822, size: 64, offset: 128)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !1845, file: !352, line: 188, baseType: !176, size: 32, offset: 192)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1845, file: !352, line: 190, baseType: !1833, size: 32, offset: 224)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "bevobj", scope: !1836, file: !352, line: 203, baseType: !792, size: 64, offset: 1280)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "taperobj", scope: !1836, file: !352, line: 203, baseType: !792, size: 64, offset: 1344)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "textoncurve", scope: !1836, file: !352, line: 203, baseType: !792, size: 64, offset: 1408)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1836, file: !352, line: 204, baseType: !303, size: 64, offset: 1472)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1836, file: !352, line: 205, baseType: !307, size: 64, offset: 1536)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1836, file: !352, line: 206, baseType: !349, size: 64, offset: 1600)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1836, file: !352, line: 209, baseType: !528, size: 96, offset: 1664)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1836, file: !352, line: 210, baseType: !528, size: 96, offset: 1760)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1836, file: !352, line: 211, baseType: !528, size: 96, offset: 1856)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1836, file: !352, line: 213, baseType: !174, size: 16, offset: 1952)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !1836, file: !352, line: 215, baseType: !174, size: 16, offset: 1968)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !1836, file: !352, line: 216, baseType: !174, size: 16, offset: 1984)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "twist_mode", scope: !1836, file: !352, line: 216, baseType: !174, size: 16, offset: 2000)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "twist_smooth", scope: !1836, file: !352, line: 217, baseType: !214, size: 32, offset: 2016)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "smallcaps_scale", scope: !1836, file: !352, line: 217, baseType: !214, size: 32, offset: 2048)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "pathlen", scope: !1836, file: !352, line: 219, baseType: !176, size: 32, offset: 2080)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "bevresol", scope: !1836, file: !352, line: 220, baseType: !174, size: 16, offset: 2112)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !1836, file: !352, line: 220, baseType: !174, size: 16, offset: 2128)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1836, file: !352, line: 221, baseType: !176, size: 32, offset: 2144)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1836, file: !352, line: 222, baseType: !214, size: 32, offset: 2176)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "ext1", scope: !1836, file: !352, line: 222, baseType: !214, size: 32, offset: 2208)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "ext2", scope: !1836, file: !352, line: 222, baseType: !214, size: 32, offset: 2240)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !1836, file: !352, line: 225, baseType: !174, size: 16, offset: 2272)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !1836, file: !352, line: 225, baseType: !174, size: 16, offset: 2288)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "resolu_ren", scope: !1836, file: !352, line: 226, baseType: !174, size: 16, offset: 2304)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "resolv_ren", scope: !1836, file: !352, line: 226, baseType: !174, size: 16, offset: 2320)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "actnu", scope: !1836, file: !352, line: 229, baseType: !176, size: 32, offset: 2336)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "actvert", scope: !1836, file: !352, line: 231, baseType: !176, size: 32, offset: 2368)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1836, file: !352, line: 233, baseType: !1833, size: 32, offset: 2400)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !1836, file: !352, line: 236, baseType: !174, size: 16, offset: 2432)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "spacemode", scope: !1836, file: !352, line: 237, baseType: !161, size: 8, offset: 2448)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1836, file: !352, line: 237, baseType: !161, size: 8, offset: 2456)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !1836, file: !352, line: 238, baseType: !214, size: 32, offset: 2464)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "linedist", scope: !1836, file: !352, line: 238, baseType: !214, size: 32, offset: 2496)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !1836, file: !352, line: 238, baseType: !214, size: 32, offset: 2528)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !1836, file: !352, line: 238, baseType: !214, size: 32, offset: 2560)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "wordspace", scope: !1836, file: !352, line: 238, baseType: !214, size: 32, offset: 2592)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "ulpos", scope: !1836, file: !352, line: 238, baseType: !214, size: 32, offset: 2624)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "ulheight", scope: !1836, file: !352, line: 238, baseType: !214, size: 32, offset: 2656)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !1836, file: !352, line: 239, baseType: !214, size: 32, offset: 2688)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !1836, file: !352, line: 239, baseType: !214, size: 32, offset: 2720)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "linewidth", scope: !1836, file: !352, line: 240, baseType: !214, size: 32, offset: 2752)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1836, file: !352, line: 244, baseType: !176, size: 32, offset: 2784)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "selstart", scope: !1836, file: !352, line: 245, baseType: !176, size: 32, offset: 2816)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !1836, file: !352, line: 245, baseType: !176, size: 32, offset: 2848)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "len_wchar", scope: !1836, file: !352, line: 248, baseType: !176, size: 32, offset: 2880)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1836, file: !352, line: 249, baseType: !176, size: 32, offset: 2912)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1836, file: !352, line: 250, baseType: !211, size: 64, offset: 2944)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "editfont", scope: !1836, file: !352, line: 251, baseType: !1900, size: 64, offset: 3008)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64)
!1901 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditFont", file: !352, line: 50, flags: DIFlagFwdDecl)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !1836, file: !352, line: 253, baseType: !191, size: 512, offset: 3072)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !1836, file: !352, line: 254, baseType: !1904, size: 64, offset: 3584)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64)
!1905 = !DICompositeType(tag: DW_TAG_structure_type, name: "VFont", file: !352, line: 47, flags: DIFlagFwdDecl)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "vfontb", scope: !1836, file: !352, line: 255, baseType: !1904, size: 64, offset: 3648)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "vfonti", scope: !1836, file: !352, line: 256, baseType: !1904, size: 64, offset: 3712)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "vfontbi", scope: !1836, file: !352, line: 257, baseType: !1904, size: 64, offset: 3776)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !1836, file: !352, line: 259, baseType: !1910, size: 64, offset: 3840)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextBox", file: !352, line: 176, size: 128, elements: !1912)
!1912 = !{!1913, !1914, !1915, !1916}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1911, file: !352, line: 177, baseType: !214, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1911, file: !352, line: 177, baseType: !214, size: 32, offset: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1911, file: !352, line: 177, baseType: !214, size: 32, offset: 64)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1911, file: !352, line: 177, baseType: !214, size: 32, offset: 96)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "totbox", scope: !1836, file: !352, line: 260, baseType: !176, size: 32, offset: 3904)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "actbox", scope: !1836, file: !352, line: 260, baseType: !176, size: 32, offset: 3936)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "strinfo", scope: !1836, file: !352, line: 262, baseType: !1920, size: 64, offset: 3968)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CharInfo", file: !352, line: 168, size: 64, elements: !1922)
!1922 = !{!1923, !1924, !1925, !1926, !1927}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "kern", scope: !1921, file: !352, line: 169, baseType: !174, size: 16)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1921, file: !352, line: 170, baseType: !174, size: 16, offset: 16)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1921, file: !352, line: 171, baseType: !161, size: 8, offset: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1921, file: !352, line: 172, baseType: !161, size: 8, offset: 40)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1921, file: !352, line: 173, baseType: !174, size: 16, offset: 48)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "curinfo", scope: !1836, file: !352, line: 263, baseType: !1921, size: 64, offset: 4032)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1836, file: !352, line: 267, baseType: !214, size: 32, offset: 4096)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1", scope: !1836, file: !352, line: 268, baseType: !214, size: 32, offset: 4128)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2", scope: !1836, file: !352, line: 268, baseType: !214, size: 32, offset: 4160)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1_mapping", scope: !1836, file: !352, line: 269, baseType: !161, size: 8, offset: 4192)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2_mapping", scope: !1836, file: !352, line: 269, baseType: !161, size: 8, offset: 4200)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1836, file: !352, line: 271, baseType: !1274, size: 16, offset: 4208)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIterType", file: !79, line: 79, baseType: !78)
!1936 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__begin_cb", file: !79, line: 158, baseType: !1937)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = !DISubroutineType(types: !1939)
!1939 = !{null, !146}
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__step_cb", file: !79, line: 159, baseType: !1941)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!1942 = !DISubroutineType(types: !1943)
!1943 = !{!146, !146}
!1944 = !{!0}
!1945 = !{i32 7, !"Dwarf Version", i32 4}
!1946 = !{i32 2, !"Debug Info Version", i32 3}
!1947 = !{i32 1, !"wchar_size", i32 4}
!1948 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1949 = distinct !DISubprogram(name: "BKE_key_free", scope: !3, file: !3, line: 80, type: !1950, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!1950 = !DISubroutineType(types: !1951)
!1951 = !{null, !1952}
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "Key", file: !6, line: 105, baseType: !308)
!1954 = !{}
!1955 = !DILocalVariable(name: "key", arg: 1, scope: !1949, file: !3, line: 80, type: !1952)
!1956 = !DILocation(line: 80, column: 24, scope: !1949)
!1957 = !DILocalVariable(name: "kb", scope: !1949, file: !3, line: 82, type: !313)
!1958 = !DILocation(line: 82, column: 12, scope: !1949)
!1959 = !DILocation(line: 84, column: 26, scope: !1949)
!1960 = !DILocation(line: 84, column: 20, scope: !1949)
!1961 = !DILocation(line: 84, column: 2, scope: !1949)
!1962 = !DILocation(line: 86, column: 2, scope: !1949)
!1963 = !DILocation(line: 86, column: 28, scope: !1949)
!1964 = !DILocation(line: 86, column: 33, scope: !1949)
!1965 = !DILocation(line: 86, column: 15, scope: !1949)
!1966 = !DILocation(line: 86, column: 13, scope: !1949)
!1967 = !DILocation(line: 87, column: 7, scope: !1968)
!1968 = distinct !DILexicalBlock(scope: !1969, file: !3, line: 87, column: 7)
!1969 = distinct !DILexicalBlock(scope: !1949, file: !3, line: 86, column: 42)
!1970 = !DILocation(line: 87, column: 11, scope: !1968)
!1971 = !DILocation(line: 87, column: 7, scope: !1969)
!1972 = !DILocation(line: 88, column: 4, scope: !1968)
!1973 = !DILocation(line: 88, column: 14, scope: !1968)
!1974 = !DILocation(line: 88, column: 18, scope: !1968)
!1975 = !DILocation(line: 89, column: 3, scope: !1969)
!1976 = !DILocation(line: 89, column: 13, scope: !1969)
!1977 = distinct !{!1977, !1962, !1978}
!1978 = !DILocation(line: 90, column: 2, scope: !1949)
!1979 = !DILocation(line: 91, column: 1, scope: !1949)
!1980 = distinct !DISubprogram(name: "BKE_key_free_nolib", scope: !3, file: !3, line: 93, type: !1950, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!1981 = !DILocalVariable(name: "key", arg: 1, scope: !1980, file: !3, line: 93, type: !1952)
!1982 = !DILocation(line: 93, column: 30, scope: !1980)
!1983 = !DILocalVariable(name: "kb", scope: !1980, file: !3, line: 95, type: !313)
!1984 = !DILocation(line: 95, column: 12, scope: !1980)
!1985 = !DILocation(line: 97, column: 2, scope: !1980)
!1986 = !DILocation(line: 97, column: 28, scope: !1980)
!1987 = !DILocation(line: 97, column: 33, scope: !1980)
!1988 = !DILocation(line: 97, column: 15, scope: !1980)
!1989 = !DILocation(line: 97, column: 13, scope: !1980)
!1990 = !DILocation(line: 98, column: 7, scope: !1991)
!1991 = distinct !DILexicalBlock(scope: !1992, file: !3, line: 98, column: 7)
!1992 = distinct !DILexicalBlock(scope: !1980, file: !3, line: 97, column: 42)
!1993 = !DILocation(line: 98, column: 11, scope: !1991)
!1994 = !DILocation(line: 98, column: 7, scope: !1992)
!1995 = !DILocation(line: 99, column: 4, scope: !1991)
!1996 = !DILocation(line: 99, column: 14, scope: !1991)
!1997 = !DILocation(line: 99, column: 18, scope: !1991)
!1998 = !DILocation(line: 100, column: 3, scope: !1992)
!1999 = !DILocation(line: 100, column: 13, scope: !1992)
!2000 = distinct !{!2000, !1985, !2001}
!2001 = !DILocation(line: 101, column: 2, scope: !1980)
!2002 = !DILocation(line: 102, column: 1, scope: !1980)
!2003 = distinct !DISubprogram(name: "BKE_key_add", scope: !3, file: !3, line: 104, type: !2004, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!2004 = !DISubroutineType(types: !2005)
!2005 = !{!307, !140}
!2006 = !DILocalVariable(name: "id", arg: 1, scope: !2003, file: !3, line: 104, type: !140)
!2007 = !DILocation(line: 104, column: 22, scope: !2003)
!2008 = !DILocalVariable(name: "key", scope: !2003, file: !3, line: 106, type: !1952)
!2009 = !DILocation(line: 106, column: 7, scope: !2003)
!2010 = !DILocalVariable(name: "el", scope: !2003, file: !3, line: 107, type: !211)
!2011 = !DILocation(line: 107, column: 8, scope: !2003)
!2012 = !DILocation(line: 109, column: 29, scope: !2003)
!2013 = !DILocation(line: 109, column: 8, scope: !2003)
!2014 = !DILocation(line: 109, column: 6, scope: !2003)
!2015 = !DILocation(line: 111, column: 2, scope: !2003)
!2016 = !DILocation(line: 111, column: 7, scope: !2003)
!2017 = !DILocation(line: 111, column: 12, scope: !2003)
!2018 = !DILocation(line: 112, column: 14, scope: !2003)
!2019 = !DILocation(line: 112, column: 2, scope: !2003)
!2020 = !DILocation(line: 112, column: 7, scope: !2003)
!2021 = !DILocation(line: 112, column: 12, scope: !2003)
!2022 = !DILocation(line: 114, column: 2, scope: !2003)
!2023 = !DILocation(line: 114, column: 7, scope: !2003)
!2024 = !DILocation(line: 114, column: 14, scope: !2003)
!2025 = !DILocation(line: 117, column: 10, scope: !2003)
!2026 = !DILocation(line: 117, column: 2, scope: !2003)
!2027 = !DILocation(line: 119, column: 9, scope: !2028)
!2028 = distinct !DILexicalBlock(scope: !2003, file: !3, line: 117, column: 24)
!2029 = !DILocation(line: 119, column: 14, scope: !2028)
!2030 = !DILocation(line: 119, column: 7, scope: !2028)
!2031 = !DILocation(line: 121, column: 4, scope: !2028)
!2032 = !DILocation(line: 121, column: 10, scope: !2028)
!2033 = !DILocation(line: 122, column: 4, scope: !2028)
!2034 = !DILocation(line: 122, column: 10, scope: !2028)
!2035 = !DILocation(line: 123, column: 4, scope: !2028)
!2036 = !DILocation(line: 123, column: 10, scope: !2028)
!2037 = !DILocation(line: 125, column: 4, scope: !2028)
!2038 = !DILocation(line: 125, column: 9, scope: !2028)
!2039 = !DILocation(line: 125, column: 18, scope: !2028)
!2040 = !DILocation(line: 127, column: 4, scope: !2028)
!2041 = !DILocation(line: 129, column: 9, scope: !2028)
!2042 = !DILocation(line: 129, column: 14, scope: !2028)
!2043 = !DILocation(line: 129, column: 7, scope: !2028)
!2044 = !DILocation(line: 131, column: 4, scope: !2028)
!2045 = !DILocation(line: 131, column: 10, scope: !2028)
!2046 = !DILocation(line: 132, column: 4, scope: !2028)
!2047 = !DILocation(line: 132, column: 10, scope: !2028)
!2048 = !DILocation(line: 133, column: 4, scope: !2028)
!2049 = !DILocation(line: 133, column: 10, scope: !2028)
!2050 = !DILocation(line: 135, column: 4, scope: !2028)
!2051 = !DILocation(line: 135, column: 9, scope: !2028)
!2052 = !DILocation(line: 135, column: 18, scope: !2028)
!2053 = !DILocation(line: 137, column: 4, scope: !2028)
!2054 = !DILocation(line: 139, column: 9, scope: !2028)
!2055 = !DILocation(line: 139, column: 14, scope: !2028)
!2056 = !DILocation(line: 139, column: 7, scope: !2028)
!2057 = !DILocation(line: 141, column: 4, scope: !2028)
!2058 = !DILocation(line: 141, column: 10, scope: !2028)
!2059 = !DILocation(line: 142, column: 4, scope: !2028)
!2060 = !DILocation(line: 142, column: 10, scope: !2028)
!2061 = !DILocation(line: 143, column: 4, scope: !2028)
!2062 = !DILocation(line: 143, column: 10, scope: !2028)
!2063 = !DILocation(line: 145, column: 4, scope: !2028)
!2064 = !DILocation(line: 145, column: 9, scope: !2028)
!2065 = !DILocation(line: 145, column: 18, scope: !2028)
!2066 = !DILocation(line: 147, column: 4, scope: !2028)
!2067 = !DILocation(line: 150, column: 9, scope: !2003)
!2068 = !DILocation(line: 150, column: 2, scope: !2003)
!2069 = distinct !DISubprogram(name: "BKE_key_copy", scope: !3, file: !3, line: 153, type: !2070, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{!307, !1952}
!2072 = !DILocalVariable(name: "key", arg: 1, scope: !2069, file: !3, line: 153, type: !1952)
!2073 = !DILocation(line: 153, column: 24, scope: !2069)
!2074 = !DILocalVariable(name: "keyn", scope: !2069, file: !3, line: 155, type: !1952)
!2075 = !DILocation(line: 155, column: 7, scope: !2069)
!2076 = !DILocalVariable(name: "kbn", scope: !2069, file: !3, line: 156, type: !313)
!2077 = !DILocation(line: 156, column: 12, scope: !2069)
!2078 = !DILocalVariable(name: "kb", scope: !2069, file: !3, line: 156, type: !313)
!2079 = !DILocation(line: 156, column: 18, scope: !2069)
!2080 = !DILocation(line: 158, column: 6, scope: !2081)
!2081 = distinct !DILexicalBlock(scope: !2069, file: !3, line: 158, column: 6)
!2082 = !DILocation(line: 158, column: 10, scope: !2081)
!2083 = !DILocation(line: 158, column: 6, scope: !2069)
!2084 = !DILocation(line: 158, column: 19, scope: !2081)
!2085 = !DILocation(line: 160, column: 28, scope: !2069)
!2086 = !DILocation(line: 160, column: 33, scope: !2069)
!2087 = !DILocation(line: 160, column: 9, scope: !2069)
!2088 = !DILocation(line: 160, column: 7, scope: !2069)
!2089 = !DILocation(line: 162, column: 21, scope: !2069)
!2090 = !DILocation(line: 162, column: 27, scope: !2069)
!2091 = !DILocation(line: 162, column: 35, scope: !2069)
!2092 = !DILocation(line: 162, column: 40, scope: !2069)
!2093 = !DILocation(line: 162, column: 2, scope: !2069)
!2094 = !DILocation(line: 164, column: 7, scope: !2069)
!2095 = !DILocation(line: 164, column: 12, scope: !2069)
!2096 = !DILocation(line: 164, column: 18, scope: !2069)
!2097 = !DILocation(line: 164, column: 5, scope: !2069)
!2098 = !DILocation(line: 165, column: 8, scope: !2069)
!2099 = !DILocation(line: 165, column: 14, scope: !2069)
!2100 = !DILocation(line: 165, column: 20, scope: !2069)
!2101 = !DILocation(line: 165, column: 6, scope: !2069)
!2102 = !DILocation(line: 166, column: 2, scope: !2069)
!2103 = !DILocation(line: 166, column: 9, scope: !2069)
!2104 = !DILocation(line: 168, column: 7, scope: !2105)
!2105 = distinct !DILexicalBlock(scope: !2106, file: !3, line: 168, column: 7)
!2106 = distinct !DILexicalBlock(scope: !2069, file: !3, line: 166, column: 14)
!2107 = !DILocation(line: 168, column: 12, scope: !2105)
!2108 = !DILocation(line: 168, column: 7, scope: !2106)
!2109 = !DILocation(line: 168, column: 30, scope: !2105)
!2110 = !DILocation(line: 168, column: 44, scope: !2105)
!2111 = !DILocation(line: 168, column: 49, scope: !2105)
!2112 = !DILocation(line: 168, column: 18, scope: !2105)
!2113 = !DILocation(line: 168, column: 23, scope: !2105)
!2114 = !DILocation(line: 168, column: 28, scope: !2105)
!2115 = !DILocation(line: 169, column: 7, scope: !2116)
!2116 = distinct !DILexicalBlock(scope: !2106, file: !3, line: 169, column: 7)
!2117 = !DILocation(line: 169, column: 13, scope: !2116)
!2118 = !DILocation(line: 169, column: 18, scope: !2116)
!2119 = !DILocation(line: 169, column: 10, scope: !2116)
!2120 = !DILocation(line: 169, column: 7, scope: !2106)
!2121 = !DILocation(line: 169, column: 41, scope: !2116)
!2122 = !DILocation(line: 169, column: 26, scope: !2116)
!2123 = !DILocation(line: 169, column: 32, scope: !2116)
!2124 = !DILocation(line: 169, column: 39, scope: !2116)
!2125 = !DILocation(line: 171, column: 9, scope: !2106)
!2126 = !DILocation(line: 171, column: 14, scope: !2106)
!2127 = !DILocation(line: 171, column: 7, scope: !2106)
!2128 = !DILocation(line: 172, column: 8, scope: !2106)
!2129 = !DILocation(line: 172, column: 12, scope: !2106)
!2130 = !DILocation(line: 172, column: 6, scope: !2106)
!2131 = distinct !{!2131, !2102, !2132}
!2132 = !DILocation(line: 173, column: 2, scope: !2069)
!2133 = !DILocation(line: 175, column: 9, scope: !2069)
!2134 = !DILocation(line: 175, column: 2, scope: !2069)
!2135 = !DILocation(line: 176, column: 1, scope: !2069)
!2136 = distinct !DISubprogram(name: "BKE_key_copy_nolib", scope: !3, file: !3, line: 179, type: !2070, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!2137 = !DILocalVariable(name: "key", arg: 1, scope: !2136, file: !3, line: 179, type: !1952)
!2138 = !DILocation(line: 179, column: 30, scope: !2136)
!2139 = !DILocalVariable(name: "keyn", scope: !2136, file: !3, line: 181, type: !1952)
!2140 = !DILocation(line: 181, column: 7, scope: !2136)
!2141 = !DILocalVariable(name: "kbn", scope: !2136, file: !3, line: 182, type: !313)
!2142 = !DILocation(line: 182, column: 12, scope: !2136)
!2143 = !DILocalVariable(name: "kb", scope: !2136, file: !3, line: 182, type: !313)
!2144 = !DILocation(line: 182, column: 18, scope: !2136)
!2145 = !DILocation(line: 184, column: 6, scope: !2146)
!2146 = distinct !DILexicalBlock(scope: !2136, file: !3, line: 184, column: 6)
!2147 = !DILocation(line: 184, column: 10, scope: !2146)
!2148 = !DILocation(line: 184, column: 6, scope: !2136)
!2149 = !DILocation(line: 185, column: 3, scope: !2146)
!2150 = !DILocation(line: 187, column: 9, scope: !2136)
!2151 = !DILocation(line: 187, column: 23, scope: !2136)
!2152 = !DILocation(line: 187, column: 7, scope: !2136)
!2153 = !DILocation(line: 189, column: 2, scope: !2136)
!2154 = !DILocation(line: 189, column: 8, scope: !2136)
!2155 = !DILocation(line: 189, column: 12, scope: !2136)
!2156 = !DILocation(line: 191, column: 21, scope: !2136)
!2157 = !DILocation(line: 191, column: 27, scope: !2136)
!2158 = !DILocation(line: 191, column: 35, scope: !2136)
!2159 = !DILocation(line: 191, column: 40, scope: !2136)
!2160 = !DILocation(line: 191, column: 2, scope: !2136)
!2161 = !DILocation(line: 193, column: 7, scope: !2136)
!2162 = !DILocation(line: 193, column: 12, scope: !2136)
!2163 = !DILocation(line: 193, column: 18, scope: !2136)
!2164 = !DILocation(line: 193, column: 5, scope: !2136)
!2165 = !DILocation(line: 194, column: 8, scope: !2136)
!2166 = !DILocation(line: 194, column: 14, scope: !2136)
!2167 = !DILocation(line: 194, column: 20, scope: !2136)
!2168 = !DILocation(line: 194, column: 6, scope: !2136)
!2169 = !DILocation(line: 195, column: 2, scope: !2136)
!2170 = !DILocation(line: 195, column: 9, scope: !2136)
!2171 = !DILocation(line: 197, column: 7, scope: !2172)
!2172 = distinct !DILexicalBlock(scope: !2173, file: !3, line: 197, column: 7)
!2173 = distinct !DILexicalBlock(scope: !2136, file: !3, line: 195, column: 14)
!2174 = !DILocation(line: 197, column: 12, scope: !2172)
!2175 = !DILocation(line: 197, column: 7, scope: !2173)
!2176 = !DILocation(line: 197, column: 30, scope: !2172)
!2177 = !DILocation(line: 197, column: 44, scope: !2172)
!2178 = !DILocation(line: 197, column: 49, scope: !2172)
!2179 = !DILocation(line: 197, column: 18, scope: !2172)
!2180 = !DILocation(line: 197, column: 23, scope: !2172)
!2181 = !DILocation(line: 197, column: 28, scope: !2172)
!2182 = !DILocation(line: 198, column: 7, scope: !2183)
!2183 = distinct !DILexicalBlock(scope: !2173, file: !3, line: 198, column: 7)
!2184 = !DILocation(line: 198, column: 13, scope: !2183)
!2185 = !DILocation(line: 198, column: 18, scope: !2183)
!2186 = !DILocation(line: 198, column: 10, scope: !2183)
!2187 = !DILocation(line: 198, column: 7, scope: !2173)
!2188 = !DILocation(line: 198, column: 41, scope: !2183)
!2189 = !DILocation(line: 198, column: 26, scope: !2183)
!2190 = !DILocation(line: 198, column: 32, scope: !2183)
!2191 = !DILocation(line: 198, column: 39, scope: !2183)
!2192 = !DILocation(line: 200, column: 9, scope: !2173)
!2193 = !DILocation(line: 200, column: 14, scope: !2173)
!2194 = !DILocation(line: 200, column: 7, scope: !2173)
!2195 = !DILocation(line: 201, column: 8, scope: !2173)
!2196 = !DILocation(line: 201, column: 12, scope: !2173)
!2197 = !DILocation(line: 201, column: 6, scope: !2173)
!2198 = distinct !{!2198, !2169, !2199}
!2199 = !DILocation(line: 202, column: 2, scope: !2136)
!2200 = !DILocation(line: 204, column: 9, scope: !2136)
!2201 = !DILocation(line: 204, column: 2, scope: !2136)
!2202 = !DILocation(line: 205, column: 1, scope: !2136)
!2203 = distinct !DISubprogram(name: "BKE_key_make_local", scope: !3, file: !3, line: 207, type: !1950, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!2204 = !DILocalVariable(name: "key", arg: 1, scope: !2203, file: !3, line: 207, type: !1952)
!2205 = !DILocation(line: 207, column: 30, scope: !2203)
!2206 = !DILocation(line: 214, column: 6, scope: !2207)
!2207 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 214, column: 6)
!2208 = !DILocation(line: 214, column: 10, scope: !2207)
!2209 = !DILocation(line: 214, column: 6, scope: !2203)
!2210 = !DILocation(line: 214, column: 19, scope: !2207)
!2211 = !DILocation(line: 216, column: 2, scope: !2203)
!2212 = !DILocation(line: 216, column: 7, scope: !2203)
!2213 = !DILocation(line: 216, column: 10, scope: !2203)
!2214 = !DILocation(line: 216, column: 14, scope: !2203)
!2215 = !DILocation(line: 217, column: 16, scope: !2203)
!2216 = !DILocation(line: 217, column: 21, scope: !2203)
!2217 = !DILocation(line: 217, column: 2, scope: !2203)
!2218 = !DILocation(line: 218, column: 1, scope: !2203)
!2219 = distinct !DISubprogram(name: "BKE_key_sort", scope: !3, file: !3, line: 225, type: !1950, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!2220 = !DILocalVariable(name: "key", arg: 1, scope: !2219, file: !3, line: 225, type: !1952)
!2221 = !DILocation(line: 225, column: 24, scope: !2219)
!2222 = !DILocalVariable(name: "kb", scope: !2219, file: !3, line: 227, type: !313)
!2223 = !DILocation(line: 227, column: 12, scope: !2219)
!2224 = !DILocalVariable(name: "kb2", scope: !2219, file: !3, line: 228, type: !313)
!2225 = !DILocation(line: 228, column: 12, scope: !2219)
!2226 = !DILocation(line: 231, column: 12, scope: !2227)
!2227 = distinct !DILexicalBlock(scope: !2219, file: !3, line: 231, column: 2)
!2228 = !DILocation(line: 231, column: 17, scope: !2227)
!2229 = !DILocation(line: 231, column: 23, scope: !2227)
!2230 = !DILocation(line: 231, column: 10, scope: !2227)
!2231 = !DILocation(line: 231, column: 7, scope: !2227)
!2232 = !DILocation(line: 231, column: 30, scope: !2233)
!2233 = distinct !DILexicalBlock(scope: !2227, file: !3, line: 231, column: 2)
!2234 = !DILocation(line: 231, column: 2, scope: !2227)
!2235 = !DILocation(line: 232, column: 8, scope: !2236)
!2236 = distinct !DILexicalBlock(scope: !2233, file: !3, line: 232, column: 7)
!2237 = !DILocation(line: 232, column: 12, scope: !2236)
!2238 = !DILocation(line: 232, column: 7, scope: !2236)
!2239 = !DILocation(line: 232, column: 18, scope: !2236)
!2240 = !DILocation(line: 232, column: 22, scope: !2236)
!2241 = !DILocation(line: 232, column: 26, scope: !2236)
!2242 = !DILocation(line: 232, column: 32, scope: !2236)
!2243 = !DILocation(line: 232, column: 36, scope: !2236)
!2244 = !DILocation(line: 232, column: 42, scope: !2236)
!2245 = !DILocation(line: 232, column: 30, scope: !2236)
!2246 = !DILocation(line: 232, column: 7, scope: !2233)
!2247 = !DILocation(line: 233, column: 4, scope: !2236)
!2248 = !DILocation(line: 232, column: 45, scope: !2236)
!2249 = !DILocation(line: 231, column: 39, scope: !2233)
!2250 = !DILocation(line: 231, column: 43, scope: !2233)
!2251 = !DILocation(line: 231, column: 37, scope: !2233)
!2252 = !DILocation(line: 231, column: 2, scope: !2233)
!2253 = distinct !{!2253, !2234, !2254}
!2254 = !DILocation(line: 233, column: 4, scope: !2227)
!2255 = !DILocation(line: 236, column: 6, scope: !2256)
!2256 = distinct !DILexicalBlock(scope: !2219, file: !3, line: 236, column: 6)
!2257 = !DILocation(line: 236, column: 6, scope: !2219)
!2258 = !DILocation(line: 237, column: 8, scope: !2259)
!2259 = distinct !DILexicalBlock(scope: !2256, file: !3, line: 236, column: 10)
!2260 = !DILocation(line: 237, column: 12, scope: !2259)
!2261 = !DILocation(line: 237, column: 6, scope: !2259)
!2262 = !DILocation(line: 238, column: 16, scope: !2259)
!2263 = !DILocation(line: 238, column: 21, scope: !2259)
!2264 = !DILocation(line: 238, column: 28, scope: !2259)
!2265 = !DILocation(line: 238, column: 3, scope: !2259)
!2266 = !DILocation(line: 241, column: 14, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !2259, file: !3, line: 241, column: 3)
!2268 = !DILocation(line: 241, column: 19, scope: !2267)
!2269 = !DILocation(line: 241, column: 25, scope: !2267)
!2270 = !DILocation(line: 241, column: 12, scope: !2267)
!2271 = !DILocation(line: 241, column: 8, scope: !2267)
!2272 = !DILocation(line: 241, column: 32, scope: !2273)
!2273 = distinct !DILexicalBlock(scope: !2267, file: !3, line: 241, column: 3)
!2274 = !DILocation(line: 241, column: 3, scope: !2267)
!2275 = !DILocation(line: 242, column: 8, scope: !2276)
!2276 = distinct !DILexicalBlock(scope: !2277, file: !3, line: 242, column: 8)
!2277 = distinct !DILexicalBlock(scope: !2273, file: !3, line: 241, column: 54)
!2278 = !DILocation(line: 242, column: 13, scope: !2276)
!2279 = !DILocation(line: 242, column: 19, scope: !2276)
!2280 = !DILocation(line: 242, column: 23, scope: !2276)
!2281 = !DILocation(line: 242, column: 17, scope: !2276)
!2282 = !DILocation(line: 242, column: 8, scope: !2277)
!2283 = !DILocation(line: 243, column: 26, scope: !2284)
!2284 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 242, column: 28)
!2285 = !DILocation(line: 243, column: 31, scope: !2284)
!2286 = !DILocation(line: 243, column: 38, scope: !2284)
!2287 = !DILocation(line: 243, column: 43, scope: !2284)
!2288 = !DILocation(line: 243, column: 49, scope: !2284)
!2289 = !DILocation(line: 243, column: 5, scope: !2284)
!2290 = !DILocation(line: 244, column: 5, scope: !2284)
!2291 = !DILocation(line: 246, column: 3, scope: !2277)
!2292 = !DILocation(line: 241, column: 43, scope: !2273)
!2293 = !DILocation(line: 241, column: 48, scope: !2273)
!2294 = !DILocation(line: 241, column: 41, scope: !2273)
!2295 = !DILocation(line: 241, column: 3, scope: !2273)
!2296 = distinct !{!2296, !2274, !2297}
!2297 = !DILocation(line: 246, column: 3, scope: !2267)
!2298 = !DILocation(line: 247, column: 2, scope: !2259)
!2299 = !DILocation(line: 250, column: 16, scope: !2219)
!2300 = !DILocation(line: 250, column: 21, scope: !2219)
!2301 = !DILocation(line: 250, column: 27, scope: !2219)
!2302 = !DILocation(line: 250, column: 2, scope: !2219)
!2303 = !DILocation(line: 250, column: 7, scope: !2219)
!2304 = !DILocation(line: 250, column: 14, scope: !2219)
!2305 = !DILocation(line: 251, column: 1, scope: !2219)
!2306 = distinct !DISubprogram(name: "key_curve_position_weights", scope: !3, file: !3, line: 255, type: !2307, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!2307 = !DISubroutineType(types: !2308)
!2308 = !{null, !214, !213, !176}
!2309 = !DILocalVariable(name: "t", arg: 1, scope: !2306, file: !3, line: 255, type: !214)
!2310 = !DILocation(line: 255, column: 39, scope: !2306)
!2311 = !DILocalVariable(name: "data", arg: 2, scope: !2306, file: !3, line: 255, type: !213)
!2312 = !DILocation(line: 255, column: 48, scope: !2306)
!2313 = !DILocalVariable(name: "type", arg: 3, scope: !2306, file: !3, line: 255, type: !176)
!2314 = !DILocation(line: 255, column: 61, scope: !2306)
!2315 = !DILocalVariable(name: "t2", scope: !2306, file: !3, line: 257, type: !214)
!2316 = !DILocation(line: 257, column: 8, scope: !2306)
!2317 = !DILocalVariable(name: "t3", scope: !2306, file: !3, line: 257, type: !214)
!2318 = !DILocation(line: 257, column: 12, scope: !2306)
!2319 = !DILocalVariable(name: "fc", scope: !2306, file: !3, line: 257, type: !214)
!2320 = !DILocation(line: 257, column: 16, scope: !2306)
!2321 = !DILocation(line: 259, column: 6, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !2306, file: !3, line: 259, column: 6)
!2323 = !DILocation(line: 259, column: 11, scope: !2322)
!2324 = !DILocation(line: 259, column: 6, scope: !2306)
!2325 = !DILocation(line: 260, column: 3, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 259, column: 26)
!2327 = !DILocation(line: 260, column: 11, scope: !2326)
!2328 = !DILocation(line: 261, column: 14, scope: !2326)
!2329 = !DILocation(line: 261, column: 13, scope: !2326)
!2330 = !DILocation(line: 261, column: 20, scope: !2326)
!2331 = !DILocation(line: 261, column: 3, scope: !2326)
!2332 = !DILocation(line: 261, column: 11, scope: !2326)
!2333 = !DILocation(line: 262, column: 14, scope: !2326)
!2334 = !DILocation(line: 262, column: 3, scope: !2326)
!2335 = !DILocation(line: 262, column: 11, scope: !2326)
!2336 = !DILocation(line: 263, column: 3, scope: !2326)
!2337 = !DILocation(line: 263, column: 11, scope: !2326)
!2338 = !DILocation(line: 264, column: 2, scope: !2326)
!2339 = !DILocation(line: 265, column: 11, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 265, column: 11)
!2341 = !DILocation(line: 265, column: 16, scope: !2340)
!2342 = !DILocation(line: 265, column: 11, scope: !2322)
!2343 = !DILocation(line: 266, column: 8, scope: !2344)
!2344 = distinct !DILexicalBlock(scope: !2340, file: !3, line: 265, column: 33)
!2345 = !DILocation(line: 266, column: 12, scope: !2344)
!2346 = !DILocation(line: 266, column: 10, scope: !2344)
!2347 = !DILocation(line: 266, column: 6, scope: !2344)
!2348 = !DILocation(line: 267, column: 8, scope: !2344)
!2349 = !DILocation(line: 267, column: 13, scope: !2344)
!2350 = !DILocation(line: 267, column: 11, scope: !2344)
!2351 = !DILocation(line: 267, column: 6, scope: !2344)
!2352 = !DILocation(line: 268, column: 6, scope: !2344)
!2353 = !DILocation(line: 270, column: 14, scope: !2344)
!2354 = !DILocation(line: 270, column: 13, scope: !2344)
!2355 = !DILocation(line: 270, column: 28, scope: !2344)
!2356 = !DILocation(line: 270, column: 26, scope: !2344)
!2357 = !DILocation(line: 270, column: 41, scope: !2344)
!2358 = !DILocation(line: 270, column: 39, scope: !2344)
!2359 = !DILocation(line: 270, column: 55, scope: !2344)
!2360 = !DILocation(line: 270, column: 53, scope: !2344)
!2361 = !DILocation(line: 270, column: 32, scope: !2344)
!2362 = !DILocation(line: 270, column: 60, scope: !2344)
!2363 = !DILocation(line: 270, column: 65, scope: !2344)
!2364 = !DILocation(line: 270, column: 63, scope: !2344)
!2365 = !DILocation(line: 270, column: 58, scope: !2344)
!2366 = !DILocation(line: 270, column: 3, scope: !2344)
!2367 = !DILocation(line: 270, column: 11, scope: !2344)
!2368 = !DILocation(line: 271, column: 22, scope: !2344)
!2369 = !DILocation(line: 271, column: 20, scope: !2344)
!2370 = !DILocation(line: 271, column: 28, scope: !2344)
!2371 = !DILocation(line: 271, column: 26, scope: !2344)
!2372 = !DILocation(line: 271, column: 35, scope: !2344)
!2373 = !DILocation(line: 271, column: 38, scope: !2344)
!2374 = !DILocation(line: 271, column: 55, scope: !2344)
!2375 = !DILocation(line: 271, column: 53, scope: !2344)
!2376 = !DILocation(line: 271, column: 32, scope: !2344)
!2377 = !DILocation(line: 271, column: 58, scope: !2344)
!2378 = !DILocation(line: 271, column: 3, scope: !2344)
!2379 = !DILocation(line: 271, column: 11, scope: !2344)
!2380 = !DILocation(line: 272, column: 15, scope: !2344)
!2381 = !DILocation(line: 272, column: 18, scope: !2344)
!2382 = !DILocation(line: 272, column: 28, scope: !2344)
!2383 = !DILocation(line: 272, column: 26, scope: !2344)
!2384 = !DILocation(line: 272, column: 49, scope: !2344)
!2385 = !DILocation(line: 272, column: 47, scope: !2344)
!2386 = !DILocation(line: 272, column: 40, scope: !2344)
!2387 = !DILocation(line: 272, column: 55, scope: !2344)
!2388 = !DILocation(line: 272, column: 53, scope: !2344)
!2389 = !DILocation(line: 272, column: 32, scope: !2344)
!2390 = !DILocation(line: 272, column: 60, scope: !2344)
!2391 = !DILocation(line: 272, column: 65, scope: !2344)
!2392 = !DILocation(line: 272, column: 63, scope: !2344)
!2393 = !DILocation(line: 272, column: 58, scope: !2344)
!2394 = !DILocation(line: 272, column: 3, scope: !2344)
!2395 = !DILocation(line: 272, column: 11, scope: !2344)
!2396 = !DILocation(line: 273, column: 14, scope: !2344)
!2397 = !DILocation(line: 273, column: 28, scope: !2344)
!2398 = !DILocation(line: 273, column: 26, scope: !2344)
!2399 = !DILocation(line: 273, column: 34, scope: !2344)
!2400 = !DILocation(line: 273, column: 39, scope: !2344)
!2401 = !DILocation(line: 273, column: 37, scope: !2344)
!2402 = !DILocation(line: 273, column: 32, scope: !2344)
!2403 = !DILocation(line: 273, column: 3, scope: !2344)
!2404 = !DILocation(line: 273, column: 11, scope: !2344)
!2405 = !DILocation(line: 274, column: 2, scope: !2344)
!2406 = !DILocation(line: 275, column: 11, scope: !2407)
!2407 = distinct !DILexicalBlock(scope: !2340, file: !3, line: 275, column: 11)
!2408 = !DILocation(line: 275, column: 16, scope: !2407)
!2409 = !DILocation(line: 275, column: 11, scope: !2340)
!2410 = !DILocation(line: 276, column: 8, scope: !2411)
!2411 = distinct !DILexicalBlock(scope: !2407, file: !3, line: 275, column: 32)
!2412 = !DILocation(line: 276, column: 12, scope: !2411)
!2413 = !DILocation(line: 276, column: 10, scope: !2411)
!2414 = !DILocation(line: 276, column: 6, scope: !2411)
!2415 = !DILocation(line: 277, column: 8, scope: !2411)
!2416 = !DILocation(line: 277, column: 13, scope: !2411)
!2417 = !DILocation(line: 277, column: 11, scope: !2411)
!2418 = !DILocation(line: 277, column: 6, scope: !2411)
!2419 = !DILocation(line: 279, column: 28, scope: !2411)
!2420 = !DILocation(line: 279, column: 26, scope: !2411)
!2421 = !DILocation(line: 279, column: 41, scope: !2411)
!2422 = !DILocation(line: 279, column: 39, scope: !2411)
!2423 = !DILocation(line: 279, column: 32, scope: !2411)
!2424 = !DILocation(line: 279, column: 55, scope: !2411)
!2425 = !DILocation(line: 279, column: 53, scope: !2411)
!2426 = !DILocation(line: 279, column: 46, scope: !2411)
!2427 = !DILocation(line: 279, column: 60, scope: !2411)
!2428 = !DILocation(line: 279, column: 3, scope: !2411)
!2429 = !DILocation(line: 279, column: 11, scope: !2411)
!2430 = !DILocation(line: 280, column: 28, scope: !2411)
!2431 = !DILocation(line: 280, column: 26, scope: !2411)
!2432 = !DILocation(line: 280, column: 34, scope: !2411)
!2433 = !DILocation(line: 280, column: 32, scope: !2411)
!2434 = !DILocation(line: 280, column: 60, scope: !2411)
!2435 = !DILocation(line: 280, column: 3, scope: !2411)
!2436 = !DILocation(line: 280, column: 11, scope: !2411)
!2437 = !DILocation(line: 281, column: 28, scope: !2411)
!2438 = !DILocation(line: 281, column: 26, scope: !2411)
!2439 = !DILocation(line: 281, column: 41, scope: !2411)
!2440 = !DILocation(line: 281, column: 39, scope: !2411)
!2441 = !DILocation(line: 281, column: 32, scope: !2411)
!2442 = !DILocation(line: 281, column: 55, scope: !2411)
!2443 = !DILocation(line: 281, column: 53, scope: !2411)
!2444 = !DILocation(line: 281, column: 46, scope: !2411)
!2445 = !DILocation(line: 281, column: 60, scope: !2411)
!2446 = !DILocation(line: 281, column: 3, scope: !2411)
!2447 = !DILocation(line: 281, column: 11, scope: !2411)
!2448 = !DILocation(line: 282, column: 28, scope: !2411)
!2449 = !DILocation(line: 282, column: 26, scope: !2411)
!2450 = !DILocation(line: 282, column: 3, scope: !2411)
!2451 = !DILocation(line: 282, column: 11, scope: !2411)
!2452 = !DILocation(line: 283, column: 2, scope: !2411)
!2453 = !DILocation(line: 284, column: 11, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2407, file: !3, line: 284, column: 11)
!2455 = !DILocation(line: 284, column: 16, scope: !2454)
!2456 = !DILocation(line: 284, column: 11, scope: !2407)
!2457 = !DILocation(line: 285, column: 8, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !2454, file: !3, line: 284, column: 36)
!2459 = !DILocation(line: 285, column: 12, scope: !2458)
!2460 = !DILocation(line: 285, column: 10, scope: !2458)
!2461 = !DILocation(line: 285, column: 6, scope: !2458)
!2462 = !DILocation(line: 286, column: 8, scope: !2458)
!2463 = !DILocation(line: 286, column: 13, scope: !2458)
!2464 = !DILocation(line: 286, column: 11, scope: !2458)
!2465 = !DILocation(line: 286, column: 6, scope: !2458)
!2466 = !DILocation(line: 287, column: 6, scope: !2458)
!2467 = !DILocation(line: 289, column: 14, scope: !2458)
!2468 = !DILocation(line: 289, column: 13, scope: !2458)
!2469 = !DILocation(line: 289, column: 28, scope: !2458)
!2470 = !DILocation(line: 289, column: 26, scope: !2458)
!2471 = !DILocation(line: 289, column: 41, scope: !2458)
!2472 = !DILocation(line: 289, column: 39, scope: !2458)
!2473 = !DILocation(line: 289, column: 55, scope: !2458)
!2474 = !DILocation(line: 289, column: 53, scope: !2458)
!2475 = !DILocation(line: 289, column: 32, scope: !2458)
!2476 = !DILocation(line: 289, column: 60, scope: !2458)
!2477 = !DILocation(line: 289, column: 65, scope: !2458)
!2478 = !DILocation(line: 289, column: 63, scope: !2458)
!2479 = !DILocation(line: 289, column: 58, scope: !2458)
!2480 = !DILocation(line: 289, column: 3, scope: !2458)
!2481 = !DILocation(line: 289, column: 11, scope: !2458)
!2482 = !DILocation(line: 290, column: 22, scope: !2458)
!2483 = !DILocation(line: 290, column: 20, scope: !2458)
!2484 = !DILocation(line: 290, column: 28, scope: !2458)
!2485 = !DILocation(line: 290, column: 26, scope: !2458)
!2486 = !DILocation(line: 290, column: 35, scope: !2458)
!2487 = !DILocation(line: 290, column: 38, scope: !2458)
!2488 = !DILocation(line: 290, column: 55, scope: !2458)
!2489 = !DILocation(line: 290, column: 53, scope: !2458)
!2490 = !DILocation(line: 290, column: 32, scope: !2458)
!2491 = !DILocation(line: 290, column: 58, scope: !2458)
!2492 = !DILocation(line: 290, column: 3, scope: !2458)
!2493 = !DILocation(line: 290, column: 11, scope: !2458)
!2494 = !DILocation(line: 291, column: 15, scope: !2458)
!2495 = !DILocation(line: 291, column: 18, scope: !2458)
!2496 = !DILocation(line: 291, column: 28, scope: !2458)
!2497 = !DILocation(line: 291, column: 26, scope: !2458)
!2498 = !DILocation(line: 291, column: 49, scope: !2458)
!2499 = !DILocation(line: 291, column: 47, scope: !2458)
!2500 = !DILocation(line: 291, column: 40, scope: !2458)
!2501 = !DILocation(line: 291, column: 55, scope: !2458)
!2502 = !DILocation(line: 291, column: 53, scope: !2458)
!2503 = !DILocation(line: 291, column: 32, scope: !2458)
!2504 = !DILocation(line: 291, column: 60, scope: !2458)
!2505 = !DILocation(line: 291, column: 65, scope: !2458)
!2506 = !DILocation(line: 291, column: 63, scope: !2458)
!2507 = !DILocation(line: 291, column: 58, scope: !2458)
!2508 = !DILocation(line: 291, column: 3, scope: !2458)
!2509 = !DILocation(line: 291, column: 11, scope: !2458)
!2510 = !DILocation(line: 292, column: 14, scope: !2458)
!2511 = !DILocation(line: 292, column: 28, scope: !2458)
!2512 = !DILocation(line: 292, column: 26, scope: !2458)
!2513 = !DILocation(line: 292, column: 34, scope: !2458)
!2514 = !DILocation(line: 292, column: 39, scope: !2458)
!2515 = !DILocation(line: 292, column: 37, scope: !2458)
!2516 = !DILocation(line: 292, column: 32, scope: !2458)
!2517 = !DILocation(line: 292, column: 3, scope: !2458)
!2518 = !DILocation(line: 292, column: 11, scope: !2458)
!2519 = !DILocation(line: 293, column: 2, scope: !2458)
!2520 = !DILocation(line: 294, column: 1, scope: !2306)
!2521 = distinct !DISubprogram(name: "key_curve_tangent_weights", scope: !3, file: !3, line: 297, type: !2307, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!2522 = !DILocalVariable(name: "t", arg: 1, scope: !2521, file: !3, line: 297, type: !214)
!2523 = !DILocation(line: 297, column: 38, scope: !2521)
!2524 = !DILocalVariable(name: "data", arg: 2, scope: !2521, file: !3, line: 297, type: !213)
!2525 = !DILocation(line: 297, column: 47, scope: !2521)
!2526 = !DILocalVariable(name: "type", arg: 3, scope: !2521, file: !3, line: 297, type: !176)
!2527 = !DILocation(line: 297, column: 60, scope: !2521)
!2528 = !DILocalVariable(name: "t2", scope: !2521, file: !3, line: 299, type: !214)
!2529 = !DILocation(line: 299, column: 8, scope: !2521)
!2530 = !DILocalVariable(name: "fc", scope: !2521, file: !3, line: 299, type: !214)
!2531 = !DILocation(line: 299, column: 12, scope: !2521)
!2532 = !DILocation(line: 301, column: 6, scope: !2533)
!2533 = distinct !DILexicalBlock(scope: !2521, file: !3, line: 301, column: 6)
!2534 = !DILocation(line: 301, column: 11, scope: !2533)
!2535 = !DILocation(line: 301, column: 6, scope: !2521)
!2536 = !DILocation(line: 302, column: 3, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2533, file: !3, line: 301, column: 26)
!2538 = !DILocation(line: 302, column: 11, scope: !2537)
!2539 = !DILocation(line: 303, column: 3, scope: !2537)
!2540 = !DILocation(line: 303, column: 11, scope: !2537)
!2541 = !DILocation(line: 304, column: 3, scope: !2537)
!2542 = !DILocation(line: 304, column: 11, scope: !2537)
!2543 = !DILocation(line: 305, column: 3, scope: !2537)
!2544 = !DILocation(line: 305, column: 11, scope: !2537)
!2545 = !DILocation(line: 306, column: 2, scope: !2537)
!2546 = !DILocation(line: 307, column: 11, scope: !2547)
!2547 = distinct !DILexicalBlock(scope: !2533, file: !3, line: 307, column: 11)
!2548 = !DILocation(line: 307, column: 16, scope: !2547)
!2549 = !DILocation(line: 307, column: 11, scope: !2533)
!2550 = !DILocation(line: 308, column: 8, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2547, file: !3, line: 307, column: 33)
!2552 = !DILocation(line: 308, column: 12, scope: !2551)
!2553 = !DILocation(line: 308, column: 10, scope: !2551)
!2554 = !DILocation(line: 308, column: 6, scope: !2551)
!2555 = !DILocation(line: 309, column: 6, scope: !2551)
!2556 = !DILocation(line: 311, column: 21, scope: !2551)
!2557 = !DILocation(line: 311, column: 19, scope: !2551)
!2558 = !DILocation(line: 311, column: 35, scope: !2551)
!2559 = !DILocation(line: 311, column: 33, scope: !2551)
!2560 = !DILocation(line: 311, column: 48, scope: !2551)
!2561 = !DILocation(line: 311, column: 46, scope: !2551)
!2562 = !DILocation(line: 311, column: 53, scope: !2551)
!2563 = !DILocation(line: 311, column: 51, scope: !2551)
!2564 = !DILocation(line: 311, column: 39, scope: !2551)
!2565 = !DILocation(line: 311, column: 74, scope: !2551)
!2566 = !DILocation(line: 311, column: 72, scope: !2551)
!2567 = !DILocation(line: 311, column: 3, scope: !2551)
!2568 = !DILocation(line: 311, column: 11, scope: !2551)
!2569 = !DILocation(line: 312, column: 29, scope: !2551)
!2570 = !DILocation(line: 312, column: 27, scope: !2551)
!2571 = !DILocation(line: 312, column: 19, scope: !2551)
!2572 = !DILocation(line: 312, column: 35, scope: !2551)
!2573 = !DILocation(line: 312, column: 33, scope: !2551)
!2574 = !DILocation(line: 312, column: 49, scope: !2551)
!2575 = !DILocation(line: 312, column: 52, scope: !2551)
!2576 = !DILocation(line: 312, column: 46, scope: !2551)
!2577 = !DILocation(line: 312, column: 62, scope: !2551)
!2578 = !DILocation(line: 312, column: 60, scope: !2551)
!2579 = !DILocation(line: 312, column: 39, scope: !2551)
!2580 = !DILocation(line: 312, column: 3, scope: !2551)
!2581 = !DILocation(line: 312, column: 11, scope: !2551)
!2582 = !DILocation(line: 313, column: 22, scope: !2551)
!2583 = !DILocation(line: 313, column: 25, scope: !2551)
!2584 = !DILocation(line: 313, column: 19, scope: !2551)
!2585 = !DILocation(line: 313, column: 35, scope: !2551)
!2586 = !DILocation(line: 313, column: 33, scope: !2551)
!2587 = !DILocation(line: 313, column: 63, scope: !2551)
!2588 = !DILocation(line: 313, column: 61, scope: !2551)
!2589 = !DILocation(line: 313, column: 54, scope: !2551)
!2590 = !DILocation(line: 313, column: 46, scope: !2551)
!2591 = !DILocation(line: 313, column: 69, scope: !2551)
!2592 = !DILocation(line: 313, column: 67, scope: !2551)
!2593 = !DILocation(line: 313, column: 39, scope: !2551)
!2594 = !DILocation(line: 313, column: 74, scope: !2551)
!2595 = !DILocation(line: 313, column: 72, scope: !2551)
!2596 = !DILocation(line: 313, column: 3, scope: !2551)
!2597 = !DILocation(line: 313, column: 11, scope: !2551)
!2598 = !DILocation(line: 314, column: 21, scope: !2551)
!2599 = !DILocation(line: 314, column: 19, scope: !2551)
!2600 = !DILocation(line: 314, column: 35, scope: !2551)
!2601 = !DILocation(line: 314, column: 33, scope: !2551)
!2602 = !DILocation(line: 314, column: 48, scope: !2551)
!2603 = !DILocation(line: 314, column: 46, scope: !2551)
!2604 = !DILocation(line: 314, column: 53, scope: !2551)
!2605 = !DILocation(line: 314, column: 51, scope: !2551)
!2606 = !DILocation(line: 314, column: 39, scope: !2551)
!2607 = !DILocation(line: 314, column: 3, scope: !2551)
!2608 = !DILocation(line: 314, column: 11, scope: !2551)
!2609 = !DILocation(line: 315, column: 2, scope: !2551)
!2610 = !DILocation(line: 316, column: 11, scope: !2611)
!2611 = distinct !DILexicalBlock(scope: !2547, file: !3, line: 316, column: 11)
!2612 = !DILocation(line: 316, column: 16, scope: !2611)
!2613 = !DILocation(line: 316, column: 11, scope: !2547)
!2614 = !DILocation(line: 317, column: 8, scope: !2615)
!2615 = distinct !DILexicalBlock(scope: !2611, file: !3, line: 316, column: 32)
!2616 = !DILocation(line: 317, column: 12, scope: !2615)
!2617 = !DILocation(line: 317, column: 10, scope: !2615)
!2618 = !DILocation(line: 317, column: 6, scope: !2615)
!2619 = !DILocation(line: 319, column: 21, scope: !2615)
!2620 = !DILocation(line: 319, column: 19, scope: !2615)
!2621 = !DILocation(line: 319, column: 27, scope: !2615)
!2622 = !DILocation(line: 319, column: 25, scope: !2615)
!2623 = !DILocation(line: 319, column: 37, scope: !2615)
!2624 = !DILocation(line: 319, column: 3, scope: !2615)
!2625 = !DILocation(line: 319, column: 11, scope: !2615)
!2626 = !DILocation(line: 320, column: 21, scope: !2615)
!2627 = !DILocation(line: 320, column: 19, scope: !2615)
!2628 = !DILocation(line: 320, column: 27, scope: !2615)
!2629 = !DILocation(line: 320, column: 29, scope: !2615)
!2630 = !DILocation(line: 320, column: 25, scope: !2615)
!2631 = !DILocation(line: 320, column: 3, scope: !2615)
!2632 = !DILocation(line: 320, column: 11, scope: !2615)
!2633 = !DILocation(line: 321, column: 21, scope: !2615)
!2634 = !DILocation(line: 321, column: 19, scope: !2615)
!2635 = !DILocation(line: 321, column: 27, scope: !2615)
!2636 = !DILocation(line: 321, column: 25, scope: !2615)
!2637 = !DILocation(line: 321, column: 37, scope: !2615)
!2638 = !DILocation(line: 321, column: 3, scope: !2615)
!2639 = !DILocation(line: 321, column: 11, scope: !2615)
!2640 = !DILocation(line: 322, column: 21, scope: !2615)
!2641 = !DILocation(line: 322, column: 19, scope: !2615)
!2642 = !DILocation(line: 322, column: 3, scope: !2615)
!2643 = !DILocation(line: 322, column: 11, scope: !2615)
!2644 = !DILocation(line: 323, column: 2, scope: !2615)
!2645 = !DILocation(line: 324, column: 11, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2611, file: !3, line: 324, column: 11)
!2647 = !DILocation(line: 324, column: 16, scope: !2646)
!2648 = !DILocation(line: 324, column: 11, scope: !2611)
!2649 = !DILocation(line: 325, column: 8, scope: !2650)
!2650 = distinct !DILexicalBlock(scope: !2646, file: !3, line: 324, column: 36)
!2651 = !DILocation(line: 325, column: 12, scope: !2650)
!2652 = !DILocation(line: 325, column: 10, scope: !2650)
!2653 = !DILocation(line: 325, column: 6, scope: !2650)
!2654 = !DILocation(line: 326, column: 6, scope: !2650)
!2655 = !DILocation(line: 328, column: 21, scope: !2650)
!2656 = !DILocation(line: 328, column: 19, scope: !2650)
!2657 = !DILocation(line: 328, column: 35, scope: !2650)
!2658 = !DILocation(line: 328, column: 33, scope: !2650)
!2659 = !DILocation(line: 328, column: 48, scope: !2650)
!2660 = !DILocation(line: 328, column: 46, scope: !2650)
!2661 = !DILocation(line: 328, column: 53, scope: !2650)
!2662 = !DILocation(line: 328, column: 51, scope: !2650)
!2663 = !DILocation(line: 328, column: 39, scope: !2650)
!2664 = !DILocation(line: 328, column: 74, scope: !2650)
!2665 = !DILocation(line: 328, column: 72, scope: !2650)
!2666 = !DILocation(line: 328, column: 3, scope: !2650)
!2667 = !DILocation(line: 328, column: 11, scope: !2650)
!2668 = !DILocation(line: 329, column: 29, scope: !2650)
!2669 = !DILocation(line: 329, column: 27, scope: !2650)
!2670 = !DILocation(line: 329, column: 19, scope: !2650)
!2671 = !DILocation(line: 329, column: 35, scope: !2650)
!2672 = !DILocation(line: 329, column: 33, scope: !2650)
!2673 = !DILocation(line: 329, column: 49, scope: !2650)
!2674 = !DILocation(line: 329, column: 52, scope: !2650)
!2675 = !DILocation(line: 329, column: 46, scope: !2650)
!2676 = !DILocation(line: 329, column: 62, scope: !2650)
!2677 = !DILocation(line: 329, column: 60, scope: !2650)
!2678 = !DILocation(line: 329, column: 39, scope: !2650)
!2679 = !DILocation(line: 329, column: 3, scope: !2650)
!2680 = !DILocation(line: 329, column: 11, scope: !2650)
!2681 = !DILocation(line: 330, column: 22, scope: !2650)
!2682 = !DILocation(line: 330, column: 25, scope: !2650)
!2683 = !DILocation(line: 330, column: 19, scope: !2650)
!2684 = !DILocation(line: 330, column: 35, scope: !2650)
!2685 = !DILocation(line: 330, column: 33, scope: !2650)
!2686 = !DILocation(line: 330, column: 63, scope: !2650)
!2687 = !DILocation(line: 330, column: 61, scope: !2650)
!2688 = !DILocation(line: 330, column: 54, scope: !2650)
!2689 = !DILocation(line: 330, column: 46, scope: !2650)
!2690 = !DILocation(line: 330, column: 69, scope: !2650)
!2691 = !DILocation(line: 330, column: 67, scope: !2650)
!2692 = !DILocation(line: 330, column: 39, scope: !2650)
!2693 = !DILocation(line: 330, column: 74, scope: !2650)
!2694 = !DILocation(line: 330, column: 72, scope: !2650)
!2695 = !DILocation(line: 330, column: 3, scope: !2650)
!2696 = !DILocation(line: 330, column: 11, scope: !2650)
!2697 = !DILocation(line: 331, column: 21, scope: !2650)
!2698 = !DILocation(line: 331, column: 19, scope: !2650)
!2699 = !DILocation(line: 331, column: 35, scope: !2650)
!2700 = !DILocation(line: 331, column: 33, scope: !2650)
!2701 = !DILocation(line: 331, column: 48, scope: !2650)
!2702 = !DILocation(line: 331, column: 46, scope: !2650)
!2703 = !DILocation(line: 331, column: 53, scope: !2650)
!2704 = !DILocation(line: 331, column: 51, scope: !2650)
!2705 = !DILocation(line: 331, column: 39, scope: !2650)
!2706 = !DILocation(line: 331, column: 3, scope: !2650)
!2707 = !DILocation(line: 331, column: 11, scope: !2650)
!2708 = !DILocation(line: 332, column: 2, scope: !2650)
!2709 = !DILocation(line: 333, column: 1, scope: !2521)
!2710 = distinct !DISubprogram(name: "key_curve_normal_weights", scope: !3, file: !3, line: 336, type: !2307, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!2711 = !DILocalVariable(name: "t", arg: 1, scope: !2710, file: !3, line: 336, type: !214)
!2712 = !DILocation(line: 336, column: 37, scope: !2710)
!2713 = !DILocalVariable(name: "data", arg: 2, scope: !2710, file: !3, line: 336, type: !213)
!2714 = !DILocation(line: 336, column: 46, scope: !2710)
!2715 = !DILocalVariable(name: "type", arg: 3, scope: !2710, file: !3, line: 336, type: !176)
!2716 = !DILocation(line: 336, column: 59, scope: !2710)
!2717 = !DILocalVariable(name: "fc", scope: !2710, file: !3, line: 338, type: !214)
!2718 = !DILocation(line: 338, column: 8, scope: !2710)
!2719 = !DILocation(line: 340, column: 6, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2710, file: !3, line: 340, column: 6)
!2721 = !DILocation(line: 340, column: 11, scope: !2720)
!2722 = !DILocation(line: 340, column: 6, scope: !2710)
!2723 = !DILocation(line: 341, column: 3, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2720, file: !3, line: 340, column: 26)
!2725 = !DILocation(line: 341, column: 11, scope: !2724)
!2726 = !DILocation(line: 342, column: 3, scope: !2724)
!2727 = !DILocation(line: 342, column: 11, scope: !2724)
!2728 = !DILocation(line: 343, column: 3, scope: !2724)
!2729 = !DILocation(line: 343, column: 11, scope: !2724)
!2730 = !DILocation(line: 344, column: 3, scope: !2724)
!2731 = !DILocation(line: 344, column: 11, scope: !2724)
!2732 = !DILocation(line: 345, column: 2, scope: !2724)
!2733 = !DILocation(line: 346, column: 11, scope: !2734)
!2734 = distinct !DILexicalBlock(scope: !2720, file: !3, line: 346, column: 11)
!2735 = !DILocation(line: 346, column: 16, scope: !2734)
!2736 = !DILocation(line: 346, column: 11, scope: !2720)
!2737 = !DILocation(line: 347, column: 6, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2734, file: !3, line: 346, column: 33)
!2739 = !DILocation(line: 349, column: 21, scope: !2738)
!2740 = !DILocation(line: 349, column: 19, scope: !2738)
!2741 = !DILocation(line: 349, column: 35, scope: !2738)
!2742 = !DILocation(line: 349, column: 33, scope: !2738)
!2743 = !DILocation(line: 349, column: 47, scope: !2738)
!2744 = !DILocation(line: 349, column: 45, scope: !2738)
!2745 = !DILocation(line: 349, column: 38, scope: !2738)
!2746 = !DILocation(line: 349, column: 3, scope: !2738)
!2747 = !DILocation(line: 349, column: 11, scope: !2738)
!2748 = !DILocation(line: 350, column: 29, scope: !2738)
!2749 = !DILocation(line: 350, column: 27, scope: !2738)
!2750 = !DILocation(line: 350, column: 19, scope: !2738)
!2751 = !DILocation(line: 350, column: 35, scope: !2738)
!2752 = !DILocation(line: 350, column: 33, scope: !2738)
!2753 = !DILocation(line: 350, column: 48, scope: !2738)
!2754 = !DILocation(line: 350, column: 51, scope: !2738)
!2755 = !DILocation(line: 350, column: 45, scope: !2738)
!2756 = !DILocation(line: 350, column: 38, scope: !2738)
!2757 = !DILocation(line: 350, column: 3, scope: !2738)
!2758 = !DILocation(line: 350, column: 11, scope: !2738)
!2759 = !DILocation(line: 351, column: 22, scope: !2738)
!2760 = !DILocation(line: 351, column: 25, scope: !2738)
!2761 = !DILocation(line: 351, column: 19, scope: !2738)
!2762 = !DILocation(line: 351, column: 35, scope: !2738)
!2763 = !DILocation(line: 351, column: 33, scope: !2738)
!2764 = !DILocation(line: 351, column: 62, scope: !2738)
!2765 = !DILocation(line: 351, column: 60, scope: !2738)
!2766 = !DILocation(line: 351, column: 53, scope: !2738)
!2767 = !DILocation(line: 351, column: 45, scope: !2738)
!2768 = !DILocation(line: 351, column: 38, scope: !2738)
!2769 = !DILocation(line: 351, column: 3, scope: !2738)
!2770 = !DILocation(line: 351, column: 11, scope: !2738)
!2771 = !DILocation(line: 352, column: 21, scope: !2738)
!2772 = !DILocation(line: 352, column: 19, scope: !2738)
!2773 = !DILocation(line: 352, column: 35, scope: !2738)
!2774 = !DILocation(line: 352, column: 33, scope: !2738)
!2775 = !DILocation(line: 352, column: 47, scope: !2738)
!2776 = !DILocation(line: 352, column: 45, scope: !2738)
!2777 = !DILocation(line: 352, column: 38, scope: !2738)
!2778 = !DILocation(line: 352, column: 3, scope: !2738)
!2779 = !DILocation(line: 352, column: 11, scope: !2738)
!2780 = !DILocation(line: 353, column: 2, scope: !2738)
!2781 = !DILocation(line: 354, column: 11, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2734, file: !3, line: 354, column: 11)
!2783 = !DILocation(line: 354, column: 16, scope: !2782)
!2784 = !DILocation(line: 354, column: 11, scope: !2734)
!2785 = !DILocation(line: 355, column: 21, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2782, file: !3, line: 354, column: 32)
!2787 = !DILocation(line: 355, column: 19, scope: !2786)
!2788 = !DILocation(line: 355, column: 24, scope: !2786)
!2789 = !DILocation(line: 355, column: 3, scope: !2786)
!2790 = !DILocation(line: 355, column: 11, scope: !2786)
!2791 = !DILocation(line: 356, column: 21, scope: !2786)
!2792 = !DILocation(line: 356, column: 19, scope: !2786)
!2793 = !DILocation(line: 356, column: 24, scope: !2786)
!2794 = !DILocation(line: 356, column: 3, scope: !2786)
!2795 = !DILocation(line: 356, column: 11, scope: !2786)
!2796 = !DILocation(line: 357, column: 21, scope: !2786)
!2797 = !DILocation(line: 357, column: 19, scope: !2786)
!2798 = !DILocation(line: 357, column: 24, scope: !2786)
!2799 = !DILocation(line: 357, column: 3, scope: !2786)
!2800 = !DILocation(line: 357, column: 11, scope: !2786)
!2801 = !DILocation(line: 358, column: 21, scope: !2786)
!2802 = !DILocation(line: 358, column: 19, scope: !2786)
!2803 = !DILocation(line: 358, column: 3, scope: !2786)
!2804 = !DILocation(line: 358, column: 11, scope: !2786)
!2805 = !DILocation(line: 359, column: 2, scope: !2786)
!2806 = !DILocation(line: 360, column: 11, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2782, file: !3, line: 360, column: 11)
!2808 = !DILocation(line: 360, column: 16, scope: !2807)
!2809 = !DILocation(line: 360, column: 11, scope: !2782)
!2810 = !DILocation(line: 361, column: 6, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2807, file: !3, line: 360, column: 36)
!2812 = !DILocation(line: 363, column: 21, scope: !2811)
!2813 = !DILocation(line: 363, column: 19, scope: !2811)
!2814 = !DILocation(line: 363, column: 35, scope: !2811)
!2815 = !DILocation(line: 363, column: 33, scope: !2811)
!2816 = !DILocation(line: 363, column: 47, scope: !2811)
!2817 = !DILocation(line: 363, column: 45, scope: !2811)
!2818 = !DILocation(line: 363, column: 38, scope: !2811)
!2819 = !DILocation(line: 363, column: 3, scope: !2811)
!2820 = !DILocation(line: 363, column: 11, scope: !2811)
!2821 = !DILocation(line: 364, column: 29, scope: !2811)
!2822 = !DILocation(line: 364, column: 27, scope: !2811)
!2823 = !DILocation(line: 364, column: 19, scope: !2811)
!2824 = !DILocation(line: 364, column: 35, scope: !2811)
!2825 = !DILocation(line: 364, column: 33, scope: !2811)
!2826 = !DILocation(line: 364, column: 48, scope: !2811)
!2827 = !DILocation(line: 364, column: 51, scope: !2811)
!2828 = !DILocation(line: 364, column: 45, scope: !2811)
!2829 = !DILocation(line: 364, column: 38, scope: !2811)
!2830 = !DILocation(line: 364, column: 3, scope: !2811)
!2831 = !DILocation(line: 364, column: 11, scope: !2811)
!2832 = !DILocation(line: 365, column: 22, scope: !2811)
!2833 = !DILocation(line: 365, column: 25, scope: !2811)
!2834 = !DILocation(line: 365, column: 19, scope: !2811)
!2835 = !DILocation(line: 365, column: 35, scope: !2811)
!2836 = !DILocation(line: 365, column: 33, scope: !2811)
!2837 = !DILocation(line: 365, column: 62, scope: !2811)
!2838 = !DILocation(line: 365, column: 60, scope: !2811)
!2839 = !DILocation(line: 365, column: 53, scope: !2811)
!2840 = !DILocation(line: 365, column: 45, scope: !2811)
!2841 = !DILocation(line: 365, column: 38, scope: !2811)
!2842 = !DILocation(line: 365, column: 3, scope: !2811)
!2843 = !DILocation(line: 365, column: 11, scope: !2811)
!2844 = !DILocation(line: 366, column: 21, scope: !2811)
!2845 = !DILocation(line: 366, column: 19, scope: !2811)
!2846 = !DILocation(line: 366, column: 35, scope: !2811)
!2847 = !DILocation(line: 366, column: 33, scope: !2811)
!2848 = !DILocation(line: 366, column: 47, scope: !2811)
!2849 = !DILocation(line: 366, column: 45, scope: !2811)
!2850 = !DILocation(line: 366, column: 38, scope: !2811)
!2851 = !DILocation(line: 366, column: 3, scope: !2811)
!2852 = !DILocation(line: 366, column: 11, scope: !2811)
!2853 = !DILocation(line: 367, column: 2, scope: !2811)
!2854 = !DILocation(line: 368, column: 1, scope: !2710)
!2855 = distinct !DISubprogram(name: "BKE_key_evaluate_relative", scope: !3, file: !3, line: 728, type: !2856, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!2856 = !DISubroutineType(types: !2857)
!2857 = !{null, !2858, !176, !2858, !211, !1952, !313, !2859, !2858}
!2858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!2859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!2860 = !DILocalVariable(name: "start", arg: 1, scope: !2855, file: !3, line: 728, type: !2858)
!2861 = !DILocation(line: 728, column: 42, scope: !2855)
!2862 = !DILocalVariable(name: "end", arg: 2, scope: !2855, file: !3, line: 728, type: !176)
!2863 = !DILocation(line: 728, column: 53, scope: !2855)
!2864 = !DILocalVariable(name: "tot", arg: 3, scope: !2855, file: !3, line: 728, type: !2858)
!2865 = !DILocation(line: 728, column: 68, scope: !2855)
!2866 = !DILocalVariable(name: "basispoin", arg: 4, scope: !2855, file: !3, line: 728, type: !211)
!2867 = !DILocation(line: 728, column: 79, scope: !2855)
!2868 = !DILocalVariable(name: "key", arg: 5, scope: !2855, file: !3, line: 728, type: !1952)
!2869 = !DILocation(line: 728, column: 95, scope: !2855)
!2870 = !DILocalVariable(name: "actkb", arg: 6, scope: !2855, file: !3, line: 728, type: !313)
!2871 = !DILocation(line: 728, column: 110, scope: !2855)
!2872 = !DILocalVariable(name: "per_keyblock_weights", arg: 7, scope: !2855, file: !3, line: 729, type: !2859)
!2873 = !DILocation(line: 729, column: 40, scope: !2855)
!2874 = !DILocalVariable(name: "mode", arg: 8, scope: !2855, file: !3, line: 729, type: !2858)
!2875 = !DILocation(line: 729, column: 72, scope: !2855)
!2876 = !DILocalVariable(name: "kb", scope: !2855, file: !3, line: 731, type: !313)
!2877 = !DILocation(line: 731, column: 12, scope: !2855)
!2878 = !DILocalVariable(name: "ofsp", scope: !2855, file: !3, line: 732, type: !2879)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!2880 = !DILocation(line: 732, column: 7, scope: !2855)
!2881 = !DILocalVariable(name: "ofs", scope: !2855, file: !3, line: 732, type: !1113)
!2882 = !DILocation(line: 732, column: 13, scope: !2855)
!2883 = !DILocalVariable(name: "elemsize", scope: !2855, file: !3, line: 732, type: !176)
!2884 = !DILocation(line: 732, column: 21, scope: !2855)
!2885 = !DILocalVariable(name: "b", scope: !2855, file: !3, line: 732, type: !176)
!2886 = !DILocation(line: 732, column: 31, scope: !2855)
!2887 = !DILocalVariable(name: "cp", scope: !2855, file: !3, line: 733, type: !211)
!2888 = !DILocation(line: 733, column: 8, scope: !2855)
!2889 = !DILocalVariable(name: "poin", scope: !2855, file: !3, line: 733, type: !211)
!2890 = !DILocation(line: 733, column: 13, scope: !2855)
!2891 = !DILocalVariable(name: "reffrom", scope: !2855, file: !3, line: 733, type: !211)
!2892 = !DILocation(line: 733, column: 20, scope: !2855)
!2893 = !DILocalVariable(name: "from", scope: !2855, file: !3, line: 733, type: !211)
!2894 = !DILocation(line: 733, column: 30, scope: !2855)
!2895 = !DILocalVariable(name: "elemstr", scope: !2855, file: !3, line: 733, type: !1215)
!2896 = !DILocation(line: 733, column: 36, scope: !2855)
!2897 = !DILocalVariable(name: "poinsize", scope: !2855, file: !3, line: 734, type: !176)
!2898 = !DILocation(line: 734, column: 6, scope: !2855)
!2899 = !DILocalVariable(name: "keyblock_index", scope: !2855, file: !3, line: 734, type: !176)
!2900 = !DILocation(line: 734, column: 16, scope: !2855)
!2901 = !DILocation(line: 737, column: 2, scope: !2855)
!2902 = !DILocation(line: 737, column: 9, scope: !2855)
!2903 = !DILocation(line: 739, column: 24, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2855, file: !3, line: 739, column: 6)
!2905 = !DILocation(line: 739, column: 29, scope: !2904)
!2906 = !DILocation(line: 739, column: 47, scope: !2904)
!2907 = !DILocation(line: 739, column: 7, scope: !2904)
!2908 = !DILocation(line: 739, column: 6, scope: !2855)
!2909 = !DILocation(line: 740, column: 3, scope: !2904)
!2910 = !DILocation(line: 742, column: 6, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2855, file: !3, line: 742, column: 6)
!2912 = !DILocation(line: 742, column: 12, scope: !2911)
!2913 = !DILocation(line: 742, column: 10, scope: !2911)
!2914 = !DILocation(line: 742, column: 6, scope: !2855)
!2915 = !DILocation(line: 742, column: 23, scope: !2911)
!2916 = !DILocation(line: 742, column: 21, scope: !2911)
!2917 = !DILocation(line: 742, column: 17, scope: !2911)
!2918 = !DILocation(line: 745, column: 2, scope: !2855)
!2919 = !DILocation(line: 745, column: 13, scope: !2855)
!2920 = !DILocation(line: 746, column: 2, scope: !2855)
!2921 = !DILocation(line: 746, column: 13, scope: !2855)
!2922 = !DILocation(line: 747, column: 2, scope: !2855)
!2923 = !DILocation(line: 747, column: 13, scope: !2855)
!2924 = !DILocation(line: 750, column: 13, scope: !2855)
!2925 = !DILocation(line: 750, column: 18, scope: !2855)
!2926 = !DILocation(line: 750, column: 11, scope: !2855)
!2927 = !DILocation(line: 751, column: 6, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2855, file: !3, line: 751, column: 6)
!2929 = !DILocation(line: 751, column: 11, scope: !2928)
!2930 = !DILocation(line: 751, column: 6, scope: !2855)
!2931 = !DILocation(line: 751, column: 43, scope: !2928)
!2932 = !DILocation(line: 751, column: 34, scope: !2928)
!2933 = !DILocation(line: 754, column: 9, scope: !2855)
!2934 = !DILocation(line: 754, column: 16, scope: !2855)
!2935 = !DILocation(line: 754, column: 21, scope: !2855)
!2936 = !DILocation(line: 754, column: 26, scope: !2855)
!2937 = !DILocation(line: 754, column: 37, scope: !2855)
!2938 = !DILocation(line: 754, column: 42, scope: !2855)
!2939 = !DILocation(line: 754, column: 49, scope: !2855)
!2940 = !DILocation(line: 754, column: 54, scope: !2855)
!2941 = !DILocation(line: 754, column: 68, scope: !2855)
!2942 = !DILocation(line: 754, column: 2, scope: !2855)
!2943 = !DILocation(line: 758, column: 12, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2855, file: !3, line: 758, column: 2)
!2945 = !DILocation(line: 758, column: 17, scope: !2944)
!2946 = !DILocation(line: 758, column: 23, scope: !2944)
!2947 = !DILocation(line: 758, column: 10, scope: !2944)
!2948 = !DILocation(line: 758, column: 45, scope: !2944)
!2949 = !DILocation(line: 758, column: 7, scope: !2944)
!2950 = !DILocation(line: 758, column: 50, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2944, file: !3, line: 758, column: 2)
!2952 = !DILocation(line: 758, column: 2, scope: !2944)
!2953 = !DILocation(line: 759, column: 7, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2955, file: !3, line: 759, column: 7)
!2955 = distinct !DILexicalBlock(scope: !2951, file: !3, line: 758, column: 87)
!2956 = !DILocation(line: 759, column: 13, scope: !2954)
!2957 = !DILocation(line: 759, column: 18, scope: !2954)
!2958 = !DILocation(line: 759, column: 10, scope: !2954)
!2959 = !DILocation(line: 759, column: 7, scope: !2955)
!2960 = !DILocalVariable(name: "icuval", scope: !2961, file: !3, line: 760, type: !214)
!2961 = distinct !DILexicalBlock(scope: !2954, file: !3, line: 759, column: 26)
!2962 = !DILocation(line: 760, column: 10, scope: !2961)
!2963 = !DILocation(line: 760, column: 19, scope: !2961)
!2964 = !DILocation(line: 760, column: 23, scope: !2961)
!2965 = !DILocation(line: 763, column: 10, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2961, file: !3, line: 763, column: 8)
!2967 = !DILocation(line: 763, column: 14, scope: !2966)
!2968 = !DILocation(line: 763, column: 19, scope: !2966)
!2969 = !DILocation(line: 763, column: 36, scope: !2966)
!2970 = !DILocation(line: 763, column: 39, scope: !2966)
!2971 = !DILocation(line: 763, column: 46, scope: !2966)
!2972 = !DILocation(line: 763, column: 54, scope: !2966)
!2973 = !DILocation(line: 763, column: 57, scope: !2966)
!2974 = !DILocation(line: 763, column: 61, scope: !2966)
!2975 = !DILocation(line: 763, column: 72, scope: !2966)
!2976 = !DILocation(line: 763, column: 69, scope: !2966)
!2977 = !DILocation(line: 763, column: 8, scope: !2961)
!2978 = !DILocalVariable(name: "refb", scope: !2979, file: !3, line: 764, type: !313)
!2979 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 763, column: 77)
!2980 = !DILocation(line: 764, column: 15, scope: !2979)
!2981 = !DILocalVariable(name: "weight", scope: !2979, file: !3, line: 765, type: !214)
!2982 = !DILocation(line: 765, column: 11, scope: !2979)
!2983 = !DILocalVariable(name: "weights", scope: !2979, file: !3, line: 765, type: !213)
!2984 = !DILocation(line: 765, column: 20, scope: !2979)
!2985 = !DILocation(line: 765, column: 30, scope: !2979)
!2986 = !DILocation(line: 765, column: 53, scope: !2979)
!2987 = !DILocation(line: 765, column: 74, scope: !2979)
!2988 = !DILocalVariable(name: "freefrom", scope: !2979, file: !3, line: 766, type: !211)
!2989 = !DILocation(line: 766, column: 11, scope: !2979)
!2990 = !DILocalVariable(name: "freereffrom", scope: !2979, file: !3, line: 766, type: !211)
!2991 = !DILocation(line: 766, column: 29, scope: !2979)
!2992 = !DILocation(line: 769, column: 26, scope: !2979)
!2993 = !DILocation(line: 769, column: 31, scope: !2979)
!2994 = !DILocation(line: 769, column: 38, scope: !2979)
!2995 = !DILocation(line: 769, column: 42, scope: !2979)
!2996 = !DILocation(line: 769, column: 12, scope: !2979)
!2997 = !DILocation(line: 769, column: 10, scope: !2979)
!2998 = !DILocation(line: 770, column: 9, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 770, column: 9)
!3000 = !DILocation(line: 770, column: 14, scope: !2999)
!3001 = !DILocation(line: 770, column: 9, scope: !2979)
!3002 = !DILocation(line: 770, column: 23, scope: !2999)
!3003 = !DILocation(line: 772, column: 12, scope: !2979)
!3004 = !DILocation(line: 772, column: 10, scope: !2979)
!3005 = !DILocation(line: 773, column: 31, scope: !2979)
!3006 = !DILocation(line: 773, column: 36, scope: !2979)
!3007 = !DILocation(line: 773, column: 43, scope: !2979)
!3008 = !DILocation(line: 773, column: 12, scope: !2979)
!3009 = !DILocation(line: 773, column: 10, scope: !2979)
!3010 = !DILocation(line: 774, column: 34, scope: !2979)
!3011 = !DILocation(line: 774, column: 39, scope: !2979)
!3012 = !DILocation(line: 774, column: 46, scope: !2979)
!3013 = !DILocation(line: 774, column: 15, scope: !2979)
!3014 = !DILocation(line: 774, column: 13, scope: !2979)
!3015 = !DILocation(line: 776, column: 13, scope: !2979)
!3016 = !DILocation(line: 776, column: 21, scope: !2979)
!3017 = !DILocation(line: 776, column: 19, scope: !2979)
!3018 = !DILocation(line: 776, column: 10, scope: !2979)
!3019 = !DILocation(line: 777, column: 16, scope: !2979)
!3020 = !DILocation(line: 777, column: 21, scope: !2979)
!3021 = !DILocation(line: 777, column: 32, scope: !2979)
!3022 = !DILocation(line: 777, column: 30, scope: !2979)
!3023 = !DILocation(line: 777, column: 13, scope: !2979)
!3024 = !DILocation(line: 778, column: 13, scope: !2979)
!3025 = !DILocation(line: 778, column: 18, scope: !2979)
!3026 = !DILocation(line: 778, column: 29, scope: !2979)
!3027 = !DILocation(line: 778, column: 27, scope: !2979)
!3028 = !DILocation(line: 778, column: 10, scope: !2979)
!3029 = !DILocation(line: 780, column: 14, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 780, column: 5)
!3031 = !DILocation(line: 780, column: 12, scope: !3030)
!3032 = !DILocation(line: 780, column: 10, scope: !3030)
!3033 = !DILocation(line: 780, column: 21, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3030, file: !3, line: 780, column: 5)
!3035 = !DILocation(line: 780, column: 25, scope: !3034)
!3036 = !DILocation(line: 780, column: 23, scope: !3034)
!3037 = !DILocation(line: 780, column: 5, scope: !3030)
!3038 = !DILocation(line: 782, column: 15, scope: !3039)
!3039 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 780, column: 35)
!3040 = !DILocation(line: 782, column: 27, scope: !3039)
!3041 = !DILocation(line: 782, column: 26, scope: !3039)
!3042 = !DILocation(line: 782, column: 37, scope: !3039)
!3043 = !DILocation(line: 782, column: 35, scope: !3039)
!3044 = !DILocation(line: 782, column: 47, scope: !3039)
!3045 = !DILocation(line: 782, column: 13, scope: !3039)
!3046 = !DILocation(line: 784, column: 11, scope: !3039)
!3047 = !DILocation(line: 784, column: 16, scope: !3039)
!3048 = !DILocation(line: 784, column: 9, scope: !3039)
!3049 = !DILocation(line: 785, column: 10, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 785, column: 10)
!3051 = !DILocation(line: 785, column: 15, scope: !3050)
!3052 = !DILocation(line: 785, column: 10, scope: !3039)
!3053 = !DILocation(line: 785, column: 43, scope: !3050)
!3054 = !DILocation(line: 785, column: 41, scope: !3050)
!3055 = !DILocation(line: 785, column: 38, scope: !3050)
!3056 = !DILocation(line: 787, column: 13, scope: !3039)
!3057 = !DILocation(line: 787, column: 11, scope: !3039)
!3058 = !DILocation(line: 789, column: 6, scope: !3039)
!3059 = !DILocation(line: 789, column: 13, scope: !3039)
!3060 = !DILocation(line: 791, column: 15, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 789, column: 20)
!3062 = !DILocation(line: 791, column: 7, scope: !3061)
!3063 = !DILocation(line: 793, column: 31, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !3061, file: !3, line: 791, column: 22)
!3065 = !DILocation(line: 793, column: 22, scope: !3064)
!3066 = !DILocation(line: 793, column: 46, scope: !3064)
!3067 = !DILocation(line: 793, column: 37, scope: !3064)
!3068 = !DILocation(line: 793, column: 64, scope: !3064)
!3069 = !DILocation(line: 793, column: 55, scope: !3064)
!3070 = !DILocation(line: 793, column: 70, scope: !3064)
!3071 = !DILocation(line: 793, column: 9, scope: !3064)
!3072 = !DILocation(line: 794, column: 9, scope: !3064)
!3073 = !DILocation(line: 796, column: 31, scope: !3064)
!3074 = !DILocation(line: 796, column: 22, scope: !3064)
!3075 = !DILocation(line: 796, column: 46, scope: !3064)
!3076 = !DILocation(line: 796, column: 37, scope: !3064)
!3077 = !DILocation(line: 796, column: 64, scope: !3064)
!3078 = !DILocation(line: 796, column: 55, scope: !3064)
!3079 = !DILocation(line: 796, column: 70, scope: !3064)
!3080 = !DILocation(line: 796, column: 9, scope: !3064)
!3081 = !DILocation(line: 797, column: 9, scope: !3064)
!3082 = !DILocation(line: 799, column: 32, scope: !3064)
!3083 = !DILocation(line: 799, column: 23, scope: !3064)
!3084 = !DILocation(line: 799, column: 47, scope: !3064)
!3085 = !DILocation(line: 799, column: 38, scope: !3064)
!3086 = !DILocation(line: 799, column: 65, scope: !3064)
!3087 = !DILocation(line: 799, column: 56, scope: !3064)
!3088 = !DILocation(line: 799, column: 71, scope: !3064)
!3089 = !DILocation(line: 799, column: 9, scope: !3064)
!3090 = !DILocation(line: 800, column: 9, scope: !3064)
!3091 = !DILocation(line: 803, column: 13, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !3064, file: !3, line: 803, column: 13)
!3093 = !DILocation(line: 803, column: 13, scope: !3064)
!3094 = !DILocation(line: 803, column: 23, scope: !3092)
!3095 = !DILocation(line: 803, column: 33, scope: !3092)
!3096 = !DILocation(line: 804, column: 13, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3064, file: !3, line: 804, column: 13)
!3098 = !DILocation(line: 804, column: 13, scope: !3064)
!3099 = !DILocation(line: 804, column: 26, scope: !3097)
!3100 = !DILocation(line: 804, column: 36, scope: !3097)
!3101 = !DILocation(line: 806, column: 9, scope: !3064)
!3102 = !DILocation(line: 809, column: 16, scope: !3061)
!3103 = !DILocation(line: 809, column: 15, scope: !3061)
!3104 = !DILocation(line: 809, column: 12, scope: !3061)
!3105 = !DILocation(line: 811, column: 10, scope: !3061)
!3106 = !DILocation(line: 812, column: 11, scope: !3061)
!3107 = distinct !{!3107, !3058, !3108}
!3108 = !DILocation(line: 813, column: 6, scope: !3039)
!3109 = !DILocation(line: 815, column: 17, scope: !3039)
!3110 = !DILocation(line: 815, column: 14, scope: !3039)
!3111 = !DILocation(line: 816, column: 14, scope: !3039)
!3112 = !DILocation(line: 816, column: 11, scope: !3039)
!3113 = !DILocation(line: 818, column: 10, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 818, column: 10)
!3115 = !DILocation(line: 818, column: 15, scope: !3114)
!3116 = !DILocation(line: 818, column: 10, scope: !3039)
!3117 = !DILocation(line: 818, column: 40, scope: !3114)
!3118 = !DILocation(line: 818, column: 38, scope: !3114)
!3119 = !DILocation(line: 819, column: 10, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 819, column: 10)
!3121 = !DILocation(line: 819, column: 10, scope: !3039)
!3122 = !DILocation(line: 819, column: 26, scope: !3120)
!3123 = !DILocation(line: 819, column: 19, scope: !3120)
!3124 = !DILocation(line: 820, column: 5, scope: !3039)
!3125 = !DILocation(line: 780, column: 31, scope: !3034)
!3126 = !DILocation(line: 780, column: 5, scope: !3034)
!3127 = distinct !{!3127, !3037, !3128}
!3128 = !DILocation(line: 820, column: 5, scope: !3030)
!3129 = !DILocation(line: 822, column: 9, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 822, column: 9)
!3131 = !DILocation(line: 822, column: 9, scope: !2979)
!3132 = !DILocation(line: 822, column: 19, scope: !3130)
!3133 = !DILocation(line: 822, column: 29, scope: !3130)
!3134 = !DILocation(line: 823, column: 9, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 823, column: 9)
!3136 = !DILocation(line: 823, column: 9, scope: !2979)
!3137 = !DILocation(line: 823, column: 22, scope: !3135)
!3138 = !DILocation(line: 823, column: 32, scope: !3135)
!3139 = !DILocation(line: 824, column: 4, scope: !2979)
!3140 = !DILocation(line: 825, column: 3, scope: !2961)
!3141 = !DILocation(line: 826, column: 2, scope: !2955)
!3142 = !DILocation(line: 758, column: 59, scope: !2951)
!3143 = !DILocation(line: 758, column: 63, scope: !2951)
!3144 = !DILocation(line: 758, column: 57, scope: !2951)
!3145 = !DILocation(line: 758, column: 83, scope: !2951)
!3146 = !DILocation(line: 758, column: 2, scope: !2951)
!3147 = distinct !{!3147, !2952, !3148}
!3148 = !DILocation(line: 826, column: 2, scope: !2944)
!3149 = !DILocation(line: 827, column: 1, scope: !2855)
!3150 = distinct !DISubprogram(name: "key_pointer_size", scope: !3, file: !3, line: 547, type: !3151, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!3151 = !DISubroutineType(types: !3152)
!3152 = !{!785, !3153, !2858, !2879, !2879}
!3153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3154, size: 64)
!3154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1953)
!3155 = !DILocalVariable(name: "key", arg: 1, scope: !3150, file: !3, line: 547, type: !3153)
!3156 = !DILocation(line: 547, column: 41, scope: !3150)
!3157 = !DILocalVariable(name: "mode", arg: 2, scope: !3150, file: !3, line: 547, type: !2858)
!3158 = !DILocation(line: 547, column: 56, scope: !3150)
!3159 = !DILocalVariable(name: "poinsize", arg: 3, scope: !3150, file: !3, line: 547, type: !2879)
!3160 = !DILocation(line: 547, column: 67, scope: !3150)
!3161 = !DILocalVariable(name: "ofs", arg: 4, scope: !3150, file: !3, line: 547, type: !2879)
!3162 = !DILocation(line: 547, column: 82, scope: !3150)
!3163 = !DILocation(line: 549, column: 6, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 549, column: 6)
!3165 = !DILocation(line: 549, column: 11, scope: !3164)
!3166 = !DILocation(line: 549, column: 16, scope: !3164)
!3167 = !DILocation(line: 549, column: 6, scope: !3150)
!3168 = !DILocation(line: 550, column: 3, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3164, file: !3, line: 549, column: 25)
!3170 = !DILocation(line: 553, column: 10, scope: !3150)
!3171 = !DILocation(line: 553, column: 2, scope: !3150)
!3172 = !DILocation(line: 555, column: 5, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 553, column: 31)
!3174 = !DILocation(line: 555, column: 9, scope: !3173)
!3175 = !DILocation(line: 556, column: 17, scope: !3173)
!3176 = !DILocation(line: 556, column: 16, scope: !3173)
!3177 = !DILocation(line: 556, column: 5, scope: !3173)
!3178 = !DILocation(line: 556, column: 14, scope: !3173)
!3179 = !DILocation(line: 557, column: 4, scope: !3173)
!3180 = !DILocation(line: 559, column: 5, scope: !3173)
!3181 = !DILocation(line: 559, column: 9, scope: !3173)
!3182 = !DILocation(line: 560, column: 17, scope: !3173)
!3183 = !DILocation(line: 560, column: 16, scope: !3173)
!3184 = !DILocation(line: 560, column: 5, scope: !3173)
!3185 = !DILocation(line: 560, column: 14, scope: !3173)
!3186 = !DILocation(line: 561, column: 4, scope: !3173)
!3187 = !DILocation(line: 563, column: 8, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3173, file: !3, line: 563, column: 8)
!3189 = !DILocation(line: 563, column: 13, scope: !3188)
!3190 = !DILocation(line: 563, column: 8, scope: !3173)
!3191 = !DILocation(line: 564, column: 6, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 563, column: 33)
!3193 = !DILocation(line: 564, column: 10, scope: !3192)
!3194 = !DILocation(line: 565, column: 18, scope: !3192)
!3195 = !DILocation(line: 565, column: 17, scope: !3192)
!3196 = !DILocation(line: 565, column: 6, scope: !3192)
!3197 = !DILocation(line: 565, column: 15, scope: !3192)
!3198 = !DILocation(line: 566, column: 4, scope: !3192)
!3199 = !DILocation(line: 568, column: 5, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 567, column: 9)
!3201 = !DILocation(line: 568, column: 12, scope: !3200)
!3202 = !DILocation(line: 569, column: 19, scope: !3200)
!3203 = !DILocation(line: 569, column: 18, scope: !3200)
!3204 = !DILocation(line: 569, column: 24, scope: !3200)
!3205 = !DILocation(line: 569, column: 6, scope: !3200)
!3206 = !DILocation(line: 569, column: 15, scope: !3200)
!3207 = !DILocation(line: 572, column: 4, scope: !3173)
!3208 = !DILocation(line: 575, column: 4, scope: !3173)
!3209 = !DILocation(line: 578, column: 2, scope: !3150)
!3210 = !DILocation(line: 579, column: 1, scope: !3150)
!3211 = distinct !DISubprogram(name: "cp_key", scope: !3, file: !3, line: 581, type: !3212, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!3212 = !DISubroutineType(types: !3213)
!3213 = !{null, !2858, !176, !2858, !211, !1952, !313, !313, !213, !2858}
!3214 = !DILocalVariable(name: "start", arg: 1, scope: !3211, file: !3, line: 581, type: !2858)
!3215 = !DILocation(line: 581, column: 30, scope: !3211)
!3216 = !DILocalVariable(name: "end", arg: 2, scope: !3211, file: !3, line: 581, type: !176)
!3217 = !DILocation(line: 581, column: 41, scope: !3211)
!3218 = !DILocalVariable(name: "tot", arg: 3, scope: !3211, file: !3, line: 581, type: !2858)
!3219 = !DILocation(line: 581, column: 56, scope: !3211)
!3220 = !DILocalVariable(name: "poin", arg: 4, scope: !3211, file: !3, line: 581, type: !211)
!3221 = !DILocation(line: 581, column: 67, scope: !3211)
!3222 = !DILocalVariable(name: "key", arg: 5, scope: !3211, file: !3, line: 581, type: !1952)
!3223 = !DILocation(line: 581, column: 78, scope: !3211)
!3224 = !DILocalVariable(name: "actkb", arg: 6, scope: !3211, file: !3, line: 581, type: !313)
!3225 = !DILocation(line: 581, column: 93, scope: !3211)
!3226 = !DILocalVariable(name: "kb", arg: 7, scope: !3211, file: !3, line: 581, type: !313)
!3227 = !DILocation(line: 581, column: 110, scope: !3211)
!3228 = !DILocalVariable(name: "weights", arg: 8, scope: !3211, file: !3, line: 581, type: !213)
!3229 = !DILocation(line: 581, column: 121, scope: !3211)
!3230 = !DILocalVariable(name: "mode", arg: 9, scope: !3211, file: !3, line: 581, type: !2858)
!3231 = !DILocation(line: 581, column: 140, scope: !3211)
!3232 = !DILocalVariable(name: "ktot", scope: !3211, file: !3, line: 583, type: !214)
!3233 = !DILocation(line: 583, column: 8, scope: !3211)
!3234 = !DILocalVariable(name: "kd", scope: !3211, file: !3, line: 583, type: !214)
!3235 = !DILocation(line: 583, column: 20, scope: !3211)
!3236 = !DILocalVariable(name: "elemsize", scope: !3211, file: !3, line: 584, type: !176)
!3237 = !DILocation(line: 584, column: 6, scope: !3211)
!3238 = !DILocalVariable(name: "poinsize", scope: !3211, file: !3, line: 584, type: !176)
!3239 = !DILocation(line: 584, column: 16, scope: !3211)
!3240 = !DILocalVariable(name: "a", scope: !3211, file: !3, line: 584, type: !176)
!3241 = !DILocation(line: 584, column: 30, scope: !3211)
!3242 = !DILocalVariable(name: "ofsp", scope: !3211, file: !3, line: 584, type: !2879)
!3243 = !DILocation(line: 584, column: 34, scope: !3211)
!3244 = !DILocalVariable(name: "ofs", scope: !3211, file: !3, line: 584, type: !3245)
!3245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 1024, elements: !335)
!3246 = !DILocation(line: 584, column: 40, scope: !3211)
!3247 = !DILocalVariable(name: "flagflo", scope: !3211, file: !3, line: 584, type: !176)
!3248 = !DILocation(line: 584, column: 49, scope: !3211)
!3249 = !DILocalVariable(name: "k1", scope: !3211, file: !3, line: 585, type: !211)
!3250 = !DILocation(line: 585, column: 8, scope: !3211)
!3251 = !DILocalVariable(name: "kref", scope: !3211, file: !3, line: 585, type: !211)
!3252 = !DILocation(line: 585, column: 13, scope: !3211)
!3253 = !DILocalVariable(name: "freek1", scope: !3211, file: !3, line: 585, type: !211)
!3254 = !DILocation(line: 585, column: 20, scope: !3211)
!3255 = !DILocalVariable(name: "freekref", scope: !3211, file: !3, line: 585, type: !211)
!3256 = !DILocation(line: 585, column: 29, scope: !3211)
!3257 = !DILocalVariable(name: "cp", scope: !3211, file: !3, line: 586, type: !211)
!3258 = !DILocation(line: 586, column: 8, scope: !3211)
!3259 = !DILocalVariable(name: "elemstr", scope: !3211, file: !3, line: 586, type: !1215)
!3260 = !DILocation(line: 586, column: 12, scope: !3211)
!3261 = !DILocation(line: 589, column: 2, scope: !3211)
!3262 = !DILocation(line: 589, column: 9, scope: !3211)
!3263 = !DILocation(line: 591, column: 24, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 591, column: 6)
!3265 = !DILocation(line: 591, column: 29, scope: !3264)
!3266 = !DILocation(line: 591, column: 47, scope: !3264)
!3267 = !DILocation(line: 591, column: 7, scope: !3264)
!3268 = !DILocation(line: 591, column: 6, scope: !3211)
!3269 = !DILocation(line: 592, column: 3, scope: !3264)
!3270 = !DILocation(line: 594, column: 6, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 594, column: 6)
!3272 = !DILocation(line: 594, column: 12, scope: !3271)
!3273 = !DILocation(line: 594, column: 10, scope: !3271)
!3274 = !DILocation(line: 594, column: 6, scope: !3211)
!3275 = !DILocation(line: 594, column: 23, scope: !3271)
!3276 = !DILocation(line: 594, column: 21, scope: !3271)
!3277 = !DILocation(line: 594, column: 17, scope: !3271)
!3278 = !DILocation(line: 596, column: 6, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 596, column: 6)
!3280 = !DILocation(line: 596, column: 13, scope: !3279)
!3281 = !DILocation(line: 596, column: 17, scope: !3279)
!3282 = !DILocation(line: 596, column: 10, scope: !3279)
!3283 = !DILocation(line: 596, column: 6, scope: !3211)
!3284 = !DILocation(line: 597, column: 8, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3279, file: !3, line: 596, column: 26)
!3286 = !DILocation(line: 598, column: 11, scope: !3285)
!3287 = !DILocation(line: 599, column: 7, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 599, column: 7)
!3289 = !DILocation(line: 599, column: 11, scope: !3288)
!3290 = !DILocation(line: 599, column: 7, scope: !3285)
!3291 = !DILocation(line: 600, column: 9, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3288, file: !3, line: 599, column: 20)
!3293 = !DILocation(line: 600, column: 13, scope: !3292)
!3294 = !DILocation(line: 600, column: 30, scope: !3292)
!3295 = !DILocation(line: 600, column: 23, scope: !3292)
!3296 = !DILocation(line: 600, column: 21, scope: !3292)
!3297 = !DILocation(line: 600, column: 7, scope: !3292)
!3298 = !DILocation(line: 601, column: 3, scope: !3292)
!3299 = !DILocation(line: 603, column: 4, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3288, file: !3, line: 602, column: 8)
!3301 = !DILocation(line: 605, column: 2, scope: !3285)
!3302 = !DILocation(line: 607, column: 26, scope: !3211)
!3303 = !DILocation(line: 607, column: 31, scope: !3211)
!3304 = !DILocation(line: 607, column: 38, scope: !3211)
!3305 = !DILocation(line: 607, column: 7, scope: !3211)
!3306 = !DILocation(line: 607, column: 5, scope: !3211)
!3307 = !DILocation(line: 608, column: 28, scope: !3211)
!3308 = !DILocation(line: 608, column: 33, scope: !3211)
!3309 = !DILocation(line: 608, column: 40, scope: !3211)
!3310 = !DILocation(line: 608, column: 45, scope: !3211)
!3311 = !DILocation(line: 608, column: 9, scope: !3211)
!3312 = !DILocation(line: 608, column: 7, scope: !3211)
!3313 = !DILocation(line: 611, column: 6, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 611, column: 6)
!3315 = !DILocation(line: 611, column: 12, scope: !3314)
!3316 = !DILocation(line: 611, column: 6, scope: !3211)
!3317 = !DILocation(line: 613, column: 11, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 611, column: 18)
!3319 = !DILocation(line: 613, column: 22, scope: !3318)
!3320 = !DILocation(line: 613, column: 20, scope: !3318)
!3321 = !DILocation(line: 613, column: 8, scope: !3318)
!3322 = !DILocation(line: 615, column: 7, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 615, column: 7)
!3324 = !DILocation(line: 615, column: 7, scope: !3318)
!3325 = !DILocation(line: 616, column: 12, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3323, file: !3, line: 615, column: 16)
!3327 = !DILocation(line: 616, column: 20, scope: !3326)
!3328 = !DILocation(line: 616, column: 18, scope: !3326)
!3329 = !DILocation(line: 616, column: 9, scope: !3326)
!3330 = !DILocation(line: 617, column: 19, scope: !3326)
!3331 = !DILocation(line: 617, column: 13, scope: !3326)
!3332 = !DILocation(line: 617, column: 8, scope: !3326)
!3333 = !DILocation(line: 617, column: 6, scope: !3326)
!3334 = !DILocation(line: 618, column: 8, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 618, column: 8)
!3336 = !DILocation(line: 618, column: 8, scope: !3326)
!3337 = !DILocation(line: 619, column: 13, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3335, file: !3, line: 618, column: 11)
!3339 = !DILocation(line: 619, column: 10, scope: !3338)
!3340 = !DILocation(line: 620, column: 11, scope: !3338)
!3341 = !DILocation(line: 620, column: 15, scope: !3338)
!3342 = !DILocation(line: 620, column: 20, scope: !3338)
!3343 = !DILocation(line: 620, column: 13, scope: !3338)
!3344 = !DILocation(line: 620, column: 8, scope: !3338)
!3345 = !DILocation(line: 621, column: 4, scope: !3338)
!3346 = !DILocation(line: 622, column: 3, scope: !3326)
!3347 = !DILocation(line: 624, column: 10, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3323, file: !3, line: 623, column: 8)
!3349 = !DILocation(line: 624, column: 18, scope: !3348)
!3350 = !DILocation(line: 624, column: 23, scope: !3348)
!3351 = !DILocation(line: 624, column: 16, scope: !3348)
!3352 = !DILocation(line: 624, column: 7, scope: !3348)
!3353 = !DILocation(line: 626, column: 2, scope: !3318)
!3354 = !DILocation(line: 628, column: 6, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 628, column: 6)
!3356 = !DILocation(line: 628, column: 11, scope: !3355)
!3357 = !DILocation(line: 628, column: 6, scope: !3211)
!3358 = !DILocation(line: 629, column: 3, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3355, file: !3, line: 628, column: 34)
!3360 = !DILocation(line: 629, column: 14, scope: !3359)
!3361 = !DILocation(line: 630, column: 3, scope: !3359)
!3362 = !DILocation(line: 630, column: 14, scope: !3359)
!3363 = !DILocation(line: 631, column: 3, scope: !3359)
!3364 = !DILocation(line: 631, column: 14, scope: !3359)
!3365 = !DILocation(line: 632, column: 2, scope: !3359)
!3366 = !DILocation(line: 635, column: 13, scope: !3211)
!3367 = !DILocation(line: 635, column: 18, scope: !3211)
!3368 = !DILocation(line: 635, column: 11, scope: !3211)
!3369 = !DILocation(line: 636, column: 6, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 636, column: 6)
!3371 = !DILocation(line: 636, column: 11, scope: !3370)
!3372 = !DILocation(line: 636, column: 6, scope: !3211)
!3373 = !DILocation(line: 636, column: 43, scope: !3370)
!3374 = !DILocation(line: 636, column: 34, scope: !3370)
!3375 = !DILocation(line: 638, column: 11, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 638, column: 2)
!3377 = !DILocation(line: 638, column: 9, scope: !3376)
!3378 = !DILocation(line: 638, column: 7, scope: !3376)
!3379 = !DILocation(line: 638, column: 18, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3376, file: !3, line: 638, column: 2)
!3381 = !DILocation(line: 638, column: 22, scope: !3380)
!3382 = !DILocation(line: 638, column: 20, scope: !3380)
!3383 = !DILocation(line: 638, column: 2, scope: !3376)
!3384 = !DILocation(line: 639, column: 8, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3380, file: !3, line: 638, column: 32)
!3386 = !DILocation(line: 639, column: 13, scope: !3385)
!3387 = !DILocation(line: 639, column: 6, scope: !3385)
!3388 = !DILocation(line: 640, column: 7, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3385, file: !3, line: 640, column: 7)
!3390 = !DILocation(line: 640, column: 12, scope: !3389)
!3391 = !DILocation(line: 640, column: 7, scope: !3385)
!3392 = !DILocation(line: 640, column: 40, scope: !3389)
!3393 = !DILocation(line: 640, column: 38, scope: !3389)
!3394 = !DILocation(line: 640, column: 35, scope: !3389)
!3395 = !DILocation(line: 642, column: 10, scope: !3385)
!3396 = !DILocation(line: 642, column: 8, scope: !3385)
!3397 = !DILocation(line: 644, column: 3, scope: !3385)
!3398 = !DILocation(line: 644, column: 10, scope: !3385)
!3399 = !DILocation(line: 646, column: 12, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3385, file: !3, line: 644, column: 17)
!3401 = !DILocation(line: 646, column: 4, scope: !3400)
!3402 = !DILocation(line: 648, column: 10, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 648, column: 10)
!3404 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 646, column: 19)
!3405 = !DILocation(line: 648, column: 10, scope: !3404)
!3406 = !DILocation(line: 649, column: 14, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3403, file: !3, line: 648, column: 19)
!3408 = !DILocation(line: 649, column: 20, scope: !3407)
!3409 = !DILocation(line: 649, column: 7, scope: !3407)
!3410 = !DILocation(line: 650, column: 12, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 650, column: 11)
!3412 = !DILocation(line: 650, column: 11, scope: !3411)
!3413 = !DILocation(line: 650, column: 20, scope: !3411)
!3414 = !DILocation(line: 650, column: 11, scope: !3407)
!3415 = !DILocation(line: 651, column: 18, scope: !3411)
!3416 = !DILocation(line: 651, column: 34, scope: !3411)
!3417 = !DILocation(line: 651, column: 25, scope: !3411)
!3418 = !DILocation(line: 651, column: 49, scope: !3411)
!3419 = !DILocation(line: 651, column: 40, scope: !3411)
!3420 = !DILocation(line: 651, column: 64, scope: !3411)
!3421 = !DILocation(line: 651, column: 55, scope: !3411)
!3422 = !DILocation(line: 651, column: 69, scope: !3411)
!3423 = !DILocation(line: 651, column: 68, scope: !3411)
!3424 = !DILocation(line: 651, column: 8, scope: !3411)
!3425 = !DILocation(line: 652, column: 14, scope: !3407)
!3426 = !DILocation(line: 653, column: 6, scope: !3407)
!3427 = !DILocation(line: 655, column: 14, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3403, file: !3, line: 654, column: 11)
!3429 = !DILocation(line: 655, column: 20, scope: !3428)
!3430 = !DILocation(line: 655, column: 7, scope: !3428)
!3431 = !DILocation(line: 657, column: 6, scope: !3404)
!3432 = !DILocation(line: 659, column: 13, scope: !3404)
!3433 = !DILocation(line: 659, column: 19, scope: !3404)
!3434 = !DILocation(line: 659, column: 6, scope: !3404)
!3435 = !DILocation(line: 660, column: 6, scope: !3404)
!3436 = !DILocation(line: 662, column: 13, scope: !3404)
!3437 = !DILocation(line: 662, column: 19, scope: !3404)
!3438 = !DILocation(line: 662, column: 6, scope: !3404)
!3439 = !DILocation(line: 663, column: 6, scope: !3404)
!3440 = !DILocation(line: 666, column: 10, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 666, column: 10)
!3442 = !DILocation(line: 666, column: 10, scope: !3404)
!3443 = !DILocation(line: 666, column: 18, scope: !3441)
!3444 = !DILocation(line: 666, column: 28, scope: !3441)
!3445 = !DILocation(line: 667, column: 10, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 667, column: 10)
!3447 = !DILocation(line: 667, column: 10, scope: !3404)
!3448 = !DILocation(line: 667, column: 20, scope: !3446)
!3449 = !DILocation(line: 667, column: 30, scope: !3446)
!3450 = !DILocation(line: 669, column: 6, scope: !3404)
!3451 = !DILocation(line: 672, column: 13, scope: !3400)
!3452 = !DILocation(line: 672, column: 12, scope: !3400)
!3453 = !DILocation(line: 672, column: 9, scope: !3400)
!3454 = !DILocation(line: 673, column: 7, scope: !3400)
!3455 = !DILocation(line: 673, column: 17, scope: !3400)
!3456 = distinct !{!3456, !3397, !3457}
!3457 = !DILocation(line: 674, column: 3, scope: !3385)
!3458 = !DILocation(line: 677, column: 7, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3385, file: !3, line: 677, column: 7)
!3460 = !DILocation(line: 677, column: 7, scope: !3385)
!3461 = !DILocation(line: 678, column: 12, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3459, file: !3, line: 677, column: 16)
!3463 = !DILocation(line: 678, column: 9, scope: !3462)
!3464 = !DILocation(line: 679, column: 4, scope: !3462)
!3465 = !DILocation(line: 679, column: 11, scope: !3462)
!3466 = !DILocation(line: 679, column: 16, scope: !3462)
!3467 = !DILocation(line: 680, column: 10, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3462, file: !3, line: 679, column: 25)
!3469 = !DILocation(line: 681, column: 11, scope: !3468)
!3470 = !DILocation(line: 681, column: 8, scope: !3468)
!3471 = !DILocation(line: 682, column: 13, scope: !3468)
!3472 = !DILocation(line: 682, column: 10, scope: !3468)
!3473 = distinct !{!3473, !3464, !3474}
!3474 = !DILocation(line: 683, column: 4, scope: !3462)
!3475 = !DILocation(line: 684, column: 3, scope: !3462)
!3476 = !DILocation(line: 686, column: 10, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3459, file: !3, line: 685, column: 8)
!3478 = !DILocation(line: 686, column: 7, scope: !3477)
!3479 = !DILocation(line: 687, column: 12, scope: !3477)
!3480 = !DILocation(line: 687, column: 9, scope: !3477)
!3481 = !DILocation(line: 690, column: 7, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3385, file: !3, line: 690, column: 7)
!3483 = !DILocation(line: 690, column: 12, scope: !3482)
!3484 = !DILocation(line: 690, column: 7, scope: !3385)
!3485 = !DILocation(line: 691, column: 6, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3482, file: !3, line: 690, column: 35)
!3487 = !DILocation(line: 692, column: 3, scope: !3486)
!3488 = !DILocation(line: 693, column: 2, scope: !3385)
!3489 = !DILocation(line: 638, column: 28, scope: !3380)
!3490 = !DILocation(line: 638, column: 2, scope: !3380)
!3491 = distinct !{!3491, !3383, !3492}
!3492 = !DILocation(line: 693, column: 2, scope: !3376)
!3493 = !DILocation(line: 695, column: 6, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 695, column: 6)
!3495 = !DILocation(line: 695, column: 6, scope: !3211)
!3496 = !DILocation(line: 695, column: 14, scope: !3494)
!3497 = !DILocation(line: 695, column: 24, scope: !3494)
!3498 = !DILocation(line: 696, column: 6, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 696, column: 6)
!3500 = !DILocation(line: 696, column: 6, scope: !3211)
!3501 = !DILocation(line: 696, column: 16, scope: !3499)
!3502 = !DILocation(line: 696, column: 26, scope: !3499)
!3503 = !DILocation(line: 697, column: 1, scope: !3211)
!3504 = distinct !DISubprogram(name: "key_block_get_data", scope: !3, file: !3, line: 512, type: !3505, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!3505 = !DISubroutineType(types: !3506)
!3506 = !{!211, !1952, !313, !313, !3507}
!3507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!3508 = !DILocalVariable(name: "key", arg: 1, scope: !3504, file: !3, line: 512, type: !1952)
!3509 = !DILocation(line: 512, column: 38, scope: !3504)
!3510 = !DILocalVariable(name: "actkb", arg: 2, scope: !3504, file: !3, line: 512, type: !313)
!3511 = !DILocation(line: 512, column: 53, scope: !3504)
!3512 = !DILocalVariable(name: "kb", arg: 3, scope: !3504, file: !3, line: 512, type: !313)
!3513 = !DILocation(line: 512, column: 70, scope: !3504)
!3514 = !DILocalVariable(name: "freedata", arg: 4, scope: !3504, file: !3, line: 512, type: !3507)
!3515 = !DILocation(line: 512, column: 81, scope: !3504)
!3516 = !DILocation(line: 514, column: 6, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3504, file: !3, line: 514, column: 6)
!3518 = !DILocation(line: 514, column: 12, scope: !3517)
!3519 = !DILocation(line: 514, column: 9, scope: !3517)
!3520 = !DILocation(line: 514, column: 6, scope: !3504)
!3521 = !DILocation(line: 517, column: 7, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3523, file: !3, line: 517, column: 7)
!3523 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 514, column: 19)
!3524 = !DILocation(line: 517, column: 27, scope: !3522)
!3525 = !DILocation(line: 517, column: 7, scope: !3523)
!3526 = !DILocalVariable(name: "me", scope: !3527, file: !3, line: 518, type: !215)
!3527 = distinct !DILexicalBlock(scope: !3522, file: !3, line: 517, column: 37)
!3528 = !DILocation(line: 518, column: 10, scope: !3527)
!3529 = !DILocalVariable(name: "eve", scope: !3527, file: !3, line: 519, type: !592)
!3530 = !DILocation(line: 519, column: 12, scope: !3527)
!3531 = !DILocalVariable(name: "iter", scope: !3527, file: !3, line: 520, type: !3532)
!3532 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter", file: !79, line: 186, baseType: !3533)
!3533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter", file: !79, line: 164, size: 512, elements: !3534)
!3534 = !{!3535, !3615, !3616, !3617, !3618}
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3533, file: !79, line: 179, baseType: !3536, size: 320)
!3536 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3533, file: !79, line: 166, size: 320, elements: !3537)
!3537 = !{!3538, !3553, !3559, !3567, !3575, !3581, !3587, !3593, !3597, !3603, !3609}
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "elem_of_mesh", scope: !3536, file: !79, line: 167, baseType: !3539, size: 192)
!3539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__elem_of_mesh", file: !79, line: 113, size: 192, elements: !3540)
!3540 = !{!3541}
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "pooliter", scope: !3539, file: !79, line: 114, baseType: !3542, size: 192)
!3542 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool_iter", file: !3543, line: 80, baseType: !3544)
!3543 = !DIFile(filename: "blender/source/blender/blenlib/BLI_mempool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_iter", file: !3543, line: 76, size: 192, elements: !3545)
!3545 = !{!3546, !3549, !3552}
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3544, file: !3543, line: 77, baseType: !3547, size: 64)
!3547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3548, size: 64)
!3548 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool", file: !3543, line: 47, baseType: !586)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "curchunk", scope: !3544, file: !3543, line: 78, baseType: !3550, size: 64, offset: 64)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_chunk", file: !3543, line: 45, flags: DIFlagFwdDecl)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "curindex", scope: !3544, file: !3543, line: 79, baseType: !7, size: 32, offset: 128)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_vert", scope: !3536, file: !79, line: 169, baseType: !3554, size: 192)
!3554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_vert", file: !79, line: 116, size: 192, elements: !3555)
!3555 = !{!3556, !3557, !3558}
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3554, file: !79, line: 117, baseType: !592, size: 64)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3554, file: !79, line: 118, baseType: !653, size: 64, offset: 64)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3554, file: !79, line: 118, baseType: !653, size: 64, offset: 128)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_vert", scope: !3536, file: !79, line: 170, baseType: !3560, size: 320)
!3560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_vert", file: !79, line: 120, size: 320, elements: !3561)
!3561 = !{!3562, !3563, !3564, !3565, !3566}
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3560, file: !79, line: 121, baseType: !592, size: 64)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3560, file: !79, line: 122, baseType: !635, size: 64, offset: 64)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3560, file: !79, line: 122, baseType: !635, size: 64, offset: 128)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3560, file: !79, line: 123, baseType: !653, size: 64, offset: 192)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3560, file: !79, line: 123, baseType: !653, size: 64, offset: 256)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_vert", scope: !3536, file: !79, line: 171, baseType: !3568, size: 320)
!3568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_vert", file: !79, line: 125, size: 320, elements: !3569)
!3569 = !{!3570, !3571, !3572, !3573, !3574}
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3568, file: !79, line: 126, baseType: !592, size: 64)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3568, file: !79, line: 127, baseType: !635, size: 64, offset: 64)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3568, file: !79, line: 127, baseType: !635, size: 64, offset: 128)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3568, file: !79, line: 128, baseType: !653, size: 64, offset: 192)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3568, file: !79, line: 128, baseType: !653, size: 64, offset: 256)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_edge", scope: !3536, file: !79, line: 172, baseType: !3576, size: 192)
!3576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_edge", file: !79, line: 130, size: 192, elements: !3577)
!3577 = !{!3578, !3579, !3580}
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3576, file: !79, line: 131, baseType: !653, size: 64)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3576, file: !79, line: 132, baseType: !635, size: 64, offset: 64)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3576, file: !79, line: 132, baseType: !635, size: 64, offset: 128)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_loop", scope: !3536, file: !79, line: 173, baseType: !3582, size: 192)
!3582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_loop", file: !79, line: 134, size: 192, elements: !3583)
!3583 = !{!3584, !3585, !3586}
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !3582, file: !79, line: 135, baseType: !635, size: 64)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3582, file: !79, line: 136, baseType: !635, size: 64, offset: 64)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3582, file: !79, line: 136, baseType: !635, size: 64, offset: 128)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_edge", scope: !3536, file: !79, line: 174, baseType: !3588, size: 192)
!3588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_edge", file: !79, line: 138, size: 192, elements: !3589)
!3589 = !{!3590, !3591, !3592}
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3588, file: !79, line: 139, baseType: !653, size: 64)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3588, file: !79, line: 140, baseType: !635, size: 64, offset: 64)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3588, file: !79, line: 140, baseType: !635, size: 64, offset: 128)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_edge", scope: !3536, file: !79, line: 175, baseType: !3594, size: 64)
!3594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_edge", file: !79, line: 142, size: 64, elements: !3595)
!3595 = !{!3596}
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3594, file: !79, line: 143, baseType: !653, size: 64)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_face", scope: !3536, file: !79, line: 176, baseType: !3598, size: 192)
!3598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_face", file: !79, line: 145, size: 192, elements: !3599)
!3599 = !{!3600, !3601, !3602}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3598, file: !79, line: 146, baseType: !657, size: 64)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3598, file: !79, line: 147, baseType: !635, size: 64, offset: 64)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3598, file: !79, line: 147, baseType: !635, size: 64, offset: 128)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_face", scope: !3536, file: !79, line: 177, baseType: !3604, size: 192)
!3604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_face", file: !79, line: 149, size: 192, elements: !3605)
!3605 = !{!3606, !3607, !3608}
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3604, file: !79, line: 150, baseType: !657, size: 64)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3604, file: !79, line: 151, baseType: !635, size: 64, offset: 64)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3604, file: !79, line: 151, baseType: !635, size: 64, offset: 128)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_face", scope: !3536, file: !79, line: 178, baseType: !3610, size: 192)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_face", file: !79, line: 153, size: 192, elements: !3611)
!3611 = !{!3612, !3613, !3614}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3610, file: !79, line: 154, baseType: !657, size: 64)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3610, file: !79, line: 155, baseType: !635, size: 64, offset: 64)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3610, file: !79, line: 155, baseType: !635, size: 64, offset: 128)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !3533, file: !79, line: 181, baseType: !1936, size: 64, offset: 320)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !3533, file: !79, line: 182, baseType: !1940, size: 64, offset: 384)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3533, file: !79, line: 184, baseType: !176, size: 32, offset: 448)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "itype", scope: !3533, file: !79, line: 185, baseType: !161, size: 8, offset: 480)
!3619 = !DILocation(line: 520, column: 11, scope: !3527)
!3620 = !DILocalVariable(name: "co", scope: !3527, file: !3, line: 521, type: !3621)
!3621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!3622 = !DILocation(line: 521, column: 12, scope: !3527)
!3623 = !DILocalVariable(name: "a", scope: !3527, file: !3, line: 522, type: !176)
!3624 = !DILocation(line: 522, column: 8, scope: !3527)
!3625 = !DILocation(line: 524, column: 17, scope: !3527)
!3626 = !DILocation(line: 524, column: 22, scope: !3527)
!3627 = !DILocation(line: 524, column: 9, scope: !3527)
!3628 = !DILocation(line: 524, column: 7, scope: !3527)
!3629 = !DILocation(line: 526, column: 8, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3527, file: !3, line: 526, column: 8)
!3631 = !DILocation(line: 526, column: 12, scope: !3630)
!3632 = !DILocation(line: 526, column: 24, scope: !3630)
!3633 = !DILocation(line: 526, column: 27, scope: !3630)
!3634 = !DILocation(line: 526, column: 31, scope: !3630)
!3635 = !DILocation(line: 526, column: 44, scope: !3630)
!3636 = !DILocation(line: 526, column: 48, scope: !3630)
!3637 = !DILocation(line: 526, column: 59, scope: !3630)
!3638 = !DILocation(line: 526, column: 63, scope: !3630)
!3639 = !DILocation(line: 526, column: 56, scope: !3630)
!3640 = !DILocation(line: 526, column: 8, scope: !3527)
!3641 = !DILocation(line: 527, column: 7, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 526, column: 72)
!3643 = !DILocation(line: 528, column: 10, scope: !3642)
!3644 = !DILocation(line: 528, column: 42, scope: !3642)
!3645 = !DILocation(line: 528, column: 46, scope: !3642)
!3646 = !DILocation(line: 528, column: 59, scope: !3642)
!3647 = !DILocation(line: 528, column: 63, scope: !3642)
!3648 = !DILocation(line: 528, column: 40, scope: !3642)
!3649 = !DILocation(line: 528, column: 8, scope: !3642)
!3650 = !DILocation(line: 530, column: 5, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3642, file: !3, line: 530, column: 5)
!3652 = !DILocation(line: 530, column: 5, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3651, file: !3, line: 530, column: 5)
!3654 = !DILocation(line: 531, column: 17, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3653, file: !3, line: 530, column: 70)
!3656 = !DILocation(line: 531, column: 20, scope: !3655)
!3657 = !DILocation(line: 531, column: 24, scope: !3655)
!3658 = !DILocation(line: 531, column: 29, scope: !3655)
!3659 = !DILocation(line: 531, column: 6, scope: !3655)
!3660 = !DILocation(line: 532, column: 7, scope: !3655)
!3661 = !DILocation(line: 533, column: 5, scope: !3655)
!3662 = distinct !{!3662, !3650, !3663}
!3663 = !DILocation(line: 533, column: 5, scope: !3651)
!3664 = !DILocation(line: 535, column: 25, scope: !3642)
!3665 = !DILocation(line: 535, column: 17, scope: !3642)
!3666 = !DILocation(line: 535, column: 6, scope: !3642)
!3667 = !DILocation(line: 535, column: 15, scope: !3642)
!3668 = !DILocation(line: 536, column: 20, scope: !3642)
!3669 = !DILocation(line: 536, column: 12, scope: !3642)
!3670 = !DILocation(line: 536, column: 5, scope: !3642)
!3671 = !DILocation(line: 538, column: 3, scope: !3527)
!3672 = !DILocation(line: 539, column: 2, scope: !3523)
!3673 = !DILocation(line: 541, column: 3, scope: !3504)
!3674 = !DILocation(line: 541, column: 12, scope: !3504)
!3675 = !DILocation(line: 542, column: 9, scope: !3504)
!3676 = !DILocation(line: 542, column: 13, scope: !3504)
!3677 = !DILocation(line: 542, column: 2, scope: !3504)
!3678 = !DILocation(line: 543, column: 1, scope: !3504)
!3679 = distinct !DISubprogram(name: "rel_flerp", scope: !3, file: !3, line: 503, type: !3680, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!3680 = !DISubroutineType(types: !3681)
!3681 = !{null, !176, !213, !213, !213, !214}
!3682 = !DILocalVariable(name: "tot", arg: 1, scope: !3679, file: !3, line: 503, type: !176)
!3683 = !DILocation(line: 503, column: 27, scope: !3679)
!3684 = !DILocalVariable(name: "in", arg: 2, scope: !3679, file: !3, line: 503, type: !213)
!3685 = !DILocation(line: 503, column: 39, scope: !3679)
!3686 = !DILocalVariable(name: "ref", arg: 3, scope: !3679, file: !3, line: 503, type: !213)
!3687 = !DILocation(line: 503, column: 50, scope: !3679)
!3688 = !DILocalVariable(name: "out", arg: 4, scope: !3679, file: !3, line: 503, type: !213)
!3689 = !DILocation(line: 503, column: 62, scope: !3679)
!3690 = !DILocalVariable(name: "fac", arg: 5, scope: !3679, file: !3, line: 503, type: !214)
!3691 = !DILocation(line: 503, column: 73, scope: !3679)
!3692 = !DILocalVariable(name: "a", scope: !3679, file: !3, line: 505, type: !176)
!3693 = !DILocation(line: 505, column: 6, scope: !3679)
!3694 = !DILocation(line: 507, column: 9, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 507, column: 2)
!3696 = !DILocation(line: 507, column: 7, scope: !3695)
!3697 = !DILocation(line: 507, column: 14, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3695, file: !3, line: 507, column: 2)
!3699 = !DILocation(line: 507, column: 18, scope: !3698)
!3700 = !DILocation(line: 507, column: 16, scope: !3698)
!3701 = !DILocation(line: 507, column: 2, scope: !3695)
!3702 = !DILocation(line: 508, column: 12, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3698, file: !3, line: 507, column: 28)
!3704 = !DILocation(line: 508, column: 19, scope: !3703)
!3705 = !DILocation(line: 508, column: 23, scope: !3703)
!3706 = !DILocation(line: 508, column: 28, scope: !3703)
!3707 = !DILocation(line: 508, column: 32, scope: !3703)
!3708 = !DILocation(line: 508, column: 26, scope: !3703)
!3709 = !DILocation(line: 508, column: 16, scope: !3703)
!3710 = !DILocation(line: 508, column: 3, scope: !3703)
!3711 = !DILocation(line: 508, column: 6, scope: !3703)
!3712 = !DILocation(line: 508, column: 9, scope: !3703)
!3713 = !DILocation(line: 509, column: 2, scope: !3703)
!3714 = !DILocation(line: 507, column: 24, scope: !3698)
!3715 = !DILocation(line: 507, column: 2, scope: !3698)
!3716 = distinct !{!3716, !3701, !3717}
!3717 = !DILocation(line: 509, column: 2, scope: !3695)
!3718 = !DILocation(line: 510, column: 1, scope: !3679)
!3719 = distinct !DISubprogram(name: "BKE_keyblock_get_per_block_weights", scope: !3, file: !3, line: 1125, type: !3720, scopeLine: 1126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!3720 = !DISubroutineType(types: !3721)
!3721 = !{!2859, !3722, !1952, !3724}
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 64)
!3723 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !23, line: 295, baseType: !793)
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3725, size: 64)
!3725 = !DIDerivedType(tag: DW_TAG_typedef, name: "WeightsArrayCache", file: !3726, line: 82, baseType: !3727)
!3726 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_key.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WeightsArrayCache", file: !3726, line: 79, size: 128, elements: !3728)
!3728 = !{!3729, !3730}
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "num_defgroup_weights", scope: !3727, file: !3726, line: 80, baseType: !176, size: 32)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "defgroup_weights", scope: !3727, file: !3726, line: 81, baseType: !2859, size: 64, offset: 64)
!3731 = !DILocalVariable(name: "ob", arg: 1, scope: !3719, file: !3, line: 1125, type: !3722)
!3732 = !DILocation(line: 1125, column: 52, scope: !3719)
!3733 = !DILocalVariable(name: "key", arg: 2, scope: !3719, file: !3, line: 1125, type: !1952)
!3734 = !DILocation(line: 1125, column: 61, scope: !3719)
!3735 = !DILocalVariable(name: "cache", arg: 3, scope: !3719, file: !3, line: 1125, type: !3724)
!3736 = !DILocation(line: 1125, column: 85, scope: !3719)
!3737 = !DILocalVariable(name: "keyblock", scope: !3719, file: !3, line: 1127, type: !313)
!3738 = !DILocation(line: 1127, column: 12, scope: !3719)
!3739 = !DILocalVariable(name: "per_keyblock_weights", scope: !3719, file: !3, line: 1128, type: !2859)
!3740 = !DILocation(line: 1128, column: 10, scope: !3719)
!3741 = !DILocalVariable(name: "keyblock_index", scope: !3719, file: !3, line: 1129, type: !176)
!3742 = !DILocation(line: 1129, column: 6, scope: !3719)
!3743 = !DILocation(line: 1132, column: 3, scope: !3719)
!3744 = !DILocation(line: 1132, column: 47, scope: !3719)
!3745 = !DILocation(line: 1132, column: 52, scope: !3719)
!3746 = !DILocation(line: 1132, column: 45, scope: !3719)
!3747 = !DILocation(line: 1131, column: 23, scope: !3719)
!3748 = !DILocation(line: 1135, column: 18, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3719, file: !3, line: 1135, column: 2)
!3750 = !DILocation(line: 1135, column: 23, scope: !3749)
!3751 = !DILocation(line: 1135, column: 29, scope: !3749)
!3752 = !DILocation(line: 1135, column: 16, scope: !3749)
!3753 = !DILocation(line: 1135, column: 51, scope: !3749)
!3754 = !DILocation(line: 1135, column: 7, scope: !3749)
!3755 = !DILocation(line: 1136, column: 7, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3749, file: !3, line: 1135, column: 2)
!3757 = !DILocation(line: 1135, column: 2, scope: !3749)
!3758 = !DILocation(line: 1139, column: 60, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3756, file: !3, line: 1138, column: 2)
!3760 = !DILocation(line: 1139, column: 64, scope: !3759)
!3761 = !DILocation(line: 1139, column: 74, scope: !3759)
!3762 = !DILocation(line: 1139, column: 82, scope: !3759)
!3763 = !DILocation(line: 1139, column: 42, scope: !3759)
!3764 = !DILocation(line: 1139, column: 3, scope: !3759)
!3765 = !DILocation(line: 1139, column: 24, scope: !3759)
!3766 = !DILocation(line: 1139, column: 40, scope: !3759)
!3767 = !DILocation(line: 1140, column: 2, scope: !3759)
!3768 = !DILocation(line: 1137, column: 18, scope: !3756)
!3769 = !DILocation(line: 1137, column: 28, scope: !3756)
!3770 = !DILocation(line: 1137, column: 16, scope: !3756)
!3771 = !DILocation(line: 1137, column: 48, scope: !3756)
!3772 = !DILocation(line: 1135, column: 2, scope: !3756)
!3773 = distinct !{!3773, !3757, !3774}
!3774 = !DILocation(line: 1140, column: 2, scope: !3749)
!3775 = !DILocation(line: 1142, column: 9, scope: !3719)
!3776 = !DILocation(line: 1142, column: 2, scope: !3719)
!3777 = distinct !DISubprogram(name: "get_weights_array", scope: !3, file: !3, line: 1053, type: !3778, scopeLine: 1054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!3778 = !DISubroutineType(types: !3779)
!3779 = !{!213, !3722, !211, !3724}
!3780 = !DILocalVariable(name: "ob", arg: 1, scope: !3777, file: !3, line: 1053, type: !3722)
!3781 = !DILocation(line: 1053, column: 41, scope: !3777)
!3782 = !DILocalVariable(name: "vgroup", arg: 2, scope: !3777, file: !3, line: 1053, type: !211)
!3783 = !DILocation(line: 1053, column: 51, scope: !3777)
!3784 = !DILocalVariable(name: "cache", arg: 3, scope: !3777, file: !3, line: 1053, type: !3724)
!3785 = !DILocation(line: 1053, column: 78, scope: !3777)
!3786 = !DILocalVariable(name: "dvert", scope: !3777, file: !3, line: 1055, type: !3787)
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3788, size: 64)
!3788 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformVert", file: !356, line: 63, baseType: !545)
!3789 = !DILocation(line: 1055, column: 15, scope: !3777)
!3790 = !DILocalVariable(name: "em", scope: !3777, file: !3, line: 1056, type: !3791)
!3791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3792, size: 64)
!3792 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEditMesh", file: !568, line: 83, baseType: !567)
!3793 = !DILocation(line: 1056, column: 14, scope: !3777)
!3794 = !DILocalVariable(name: "iter", scope: !3777, file: !3, line: 1057, type: !3532)
!3795 = !DILocation(line: 1057, column: 9, scope: !3777)
!3796 = !DILocalVariable(name: "eve", scope: !3777, file: !3, line: 1058, type: !592)
!3797 = !DILocation(line: 1058, column: 10, scope: !3777)
!3798 = !DILocalVariable(name: "totvert", scope: !3777, file: !3, line: 1059, type: !176)
!3799 = !DILocation(line: 1059, column: 6, scope: !3777)
!3800 = !DILocalVariable(name: "defgrp_index", scope: !3777, file: !3, line: 1059, type: !176)
!3801 = !DILocation(line: 1059, column: 19, scope: !3777)
!3802 = !DILocation(line: 1062, column: 6, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 1062, column: 6)
!3804 = !DILocation(line: 1062, column: 16, scope: !3803)
!3805 = !DILocation(line: 1062, column: 6, scope: !3777)
!3806 = !DILocation(line: 1062, column: 22, scope: !3803)
!3807 = !DILocation(line: 1065, column: 6, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 1065, column: 6)
!3809 = !DILocation(line: 1065, column: 10, scope: !3808)
!3810 = !DILocation(line: 1065, column: 15, scope: !3808)
!3811 = !DILocation(line: 1065, column: 6, scope: !3777)
!3812 = !DILocalVariable(name: "me", scope: !3813, file: !3, line: 1066, type: !215)
!3813 = distinct !DILexicalBlock(scope: !3808, file: !3, line: 1065, column: 27)
!3814 = !DILocation(line: 1066, column: 9, scope: !3813)
!3815 = !DILocation(line: 1066, column: 14, scope: !3813)
!3816 = !DILocation(line: 1066, column: 18, scope: !3813)
!3817 = !DILocation(line: 1067, column: 11, scope: !3813)
!3818 = !DILocation(line: 1067, column: 15, scope: !3813)
!3819 = !DILocation(line: 1067, column: 9, scope: !3813)
!3820 = !DILocation(line: 1068, column: 13, scope: !3813)
!3821 = !DILocation(line: 1068, column: 17, scope: !3813)
!3822 = !DILocation(line: 1068, column: 11, scope: !3813)
!3823 = !DILocation(line: 1070, column: 7, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 1070, column: 7)
!3825 = !DILocation(line: 1070, column: 11, scope: !3824)
!3826 = !DILocation(line: 1070, column: 23, scope: !3824)
!3827 = !DILocation(line: 1070, column: 26, scope: !3824)
!3828 = !DILocation(line: 1070, column: 30, scope: !3824)
!3829 = !DILocation(line: 1070, column: 43, scope: !3824)
!3830 = !DILocation(line: 1070, column: 47, scope: !3824)
!3831 = !DILocation(line: 1070, column: 58, scope: !3824)
!3832 = !DILocation(line: 1070, column: 55, scope: !3824)
!3833 = !DILocation(line: 1070, column: 7, scope: !3813)
!3834 = !DILocation(line: 1071, column: 9, scope: !3824)
!3835 = !DILocation(line: 1071, column: 13, scope: !3824)
!3836 = !DILocation(line: 1071, column: 7, scope: !3824)
!3837 = !DILocation(line: 1071, column: 4, scope: !3824)
!3838 = !DILocation(line: 1072, column: 2, scope: !3813)
!3839 = !DILocation(line: 1073, column: 11, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3808, file: !3, line: 1073, column: 11)
!3841 = !DILocation(line: 1073, column: 15, scope: !3840)
!3842 = !DILocation(line: 1073, column: 20, scope: !3840)
!3843 = !DILocation(line: 1073, column: 11, scope: !3808)
!3844 = !DILocalVariable(name: "lt", scope: !3845, file: !3, line: 1074, type: !1784)
!3845 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 1073, column: 35)
!3846 = !DILocation(line: 1074, column: 12, scope: !3845)
!3847 = !DILocation(line: 1074, column: 17, scope: !3845)
!3848 = !DILocation(line: 1074, column: 21, scope: !3845)
!3849 = !DILocation(line: 1075, column: 11, scope: !3845)
!3850 = !DILocation(line: 1075, column: 15, scope: !3845)
!3851 = !DILocation(line: 1075, column: 9, scope: !3845)
!3852 = !DILocation(line: 1076, column: 13, scope: !3845)
!3853 = !DILocation(line: 1076, column: 17, scope: !3845)
!3854 = !DILocation(line: 1076, column: 25, scope: !3845)
!3855 = !DILocation(line: 1076, column: 29, scope: !3845)
!3856 = !DILocation(line: 1076, column: 23, scope: !3845)
!3857 = !DILocation(line: 1076, column: 37, scope: !3845)
!3858 = !DILocation(line: 1076, column: 41, scope: !3845)
!3859 = !DILocation(line: 1076, column: 35, scope: !3845)
!3860 = !DILocation(line: 1076, column: 11, scope: !3845)
!3861 = !DILocation(line: 1077, column: 2, scope: !3845)
!3862 = !DILocation(line: 1079, column: 6, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 1079, column: 6)
!3864 = !DILocation(line: 1079, column: 12, scope: !3863)
!3865 = !DILocation(line: 1079, column: 6, scope: !3777)
!3866 = !DILocation(line: 1079, column: 21, scope: !3863)
!3867 = !DILocation(line: 1082, column: 37, scope: !3777)
!3868 = !DILocation(line: 1082, column: 41, scope: !3777)
!3869 = !DILocation(line: 1082, column: 17, scope: !3777)
!3870 = !DILocation(line: 1082, column: 15, scope: !3777)
!3871 = !DILocation(line: 1083, column: 6, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 1083, column: 6)
!3873 = !DILocation(line: 1083, column: 19, scope: !3872)
!3874 = !DILocation(line: 1083, column: 6, scope: !3777)
!3875 = !DILocalVariable(name: "weights", scope: !3876, file: !3, line: 1084, type: !213)
!3876 = distinct !DILexicalBlock(scope: !3872, file: !3, line: 1083, column: 26)
!3877 = !DILocation(line: 1084, column: 10, scope: !3876)
!3878 = !DILocalVariable(name: "i", scope: !3876, file: !3, line: 1085, type: !176)
!3879 = !DILocation(line: 1085, column: 7, scope: !3876)
!3880 = !DILocation(line: 1087, column: 7, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 1087, column: 7)
!3882 = !DILocation(line: 1087, column: 7, scope: !3876)
!3883 = !DILocation(line: 1088, column: 8, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !3, line: 1088, column: 8)
!3885 = distinct !DILexicalBlock(scope: !3881, file: !3, line: 1087, column: 14)
!3886 = !DILocation(line: 1088, column: 15, scope: !3884)
!3887 = !DILocation(line: 1088, column: 32, scope: !3884)
!3888 = !DILocation(line: 1088, column: 8, scope: !3885)
!3889 = !DILocalVariable(name: "num_defgroup", scope: !3890, file: !3, line: 1089, type: !176)
!3890 = distinct !DILexicalBlock(scope: !3884, file: !3, line: 1088, column: 41)
!3891 = !DILocation(line: 1089, column: 9, scope: !3890)
!3892 = !DILocation(line: 1089, column: 39, scope: !3890)
!3893 = !DILocation(line: 1089, column: 43, scope: !3890)
!3894 = !DILocation(line: 1089, column: 24, scope: !3890)
!3895 = !DILocation(line: 1091, column: 9, scope: !3890)
!3896 = !DILocation(line: 1091, column: 56, scope: !3890)
!3897 = !DILocation(line: 1091, column: 54, scope: !3890)
!3898 = !DILocation(line: 1090, column: 5, scope: !3890)
!3899 = !DILocation(line: 1090, column: 12, scope: !3890)
!3900 = !DILocation(line: 1090, column: 29, scope: !3890)
!3901 = !DILocation(line: 1093, column: 35, scope: !3890)
!3902 = !DILocation(line: 1093, column: 5, scope: !3890)
!3903 = !DILocation(line: 1093, column: 12, scope: !3890)
!3904 = !DILocation(line: 1093, column: 33, scope: !3890)
!3905 = !DILocation(line: 1094, column: 4, scope: !3890)
!3906 = !DILocation(line: 1096, column: 8, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3885, file: !3, line: 1096, column: 8)
!3908 = !DILocation(line: 1096, column: 15, scope: !3907)
!3909 = !DILocation(line: 1096, column: 32, scope: !3907)
!3910 = !DILocation(line: 1096, column: 8, scope: !3885)
!3911 = !DILocation(line: 1097, column: 12, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3907, file: !3, line: 1096, column: 47)
!3913 = !DILocation(line: 1097, column: 19, scope: !3912)
!3914 = !DILocation(line: 1097, column: 36, scope: !3912)
!3915 = !DILocation(line: 1097, column: 5, scope: !3912)
!3916 = !DILocation(line: 1099, column: 3, scope: !3885)
!3917 = !DILocation(line: 1101, column: 13, scope: !3876)
!3918 = !DILocation(line: 1101, column: 25, scope: !3876)
!3919 = !DILocation(line: 1101, column: 33, scope: !3876)
!3920 = !DILocation(line: 1101, column: 11, scope: !3876)
!3921 = !DILocation(line: 1103, column: 7, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 1103, column: 7)
!3923 = !DILocation(line: 1103, column: 7, scope: !3876)
!3924 = !DILocalVariable(name: "cd_dvert_offset", scope: !3925, file: !3, line: 1104, type: !2858)
!3925 = distinct !DILexicalBlock(scope: !3922, file: !3, line: 1103, column: 11)
!3926 = !DILocation(line: 1104, column: 14, scope: !3925)
!3927 = !DILocation(line: 1104, column: 55, scope: !3925)
!3928 = !DILocation(line: 1104, column: 59, scope: !3925)
!3929 = !DILocation(line: 1104, column: 63, scope: !3925)
!3930 = !DILocation(line: 1104, column: 32, scope: !3925)
!3931 = !DILocation(line: 1105, column: 4, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3925, file: !3, line: 1105, column: 4)
!3933 = !DILocation(line: 1105, column: 4, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 1105, column: 4)
!3935 = !DILocation(line: 1106, column: 13, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3934, file: !3, line: 1105, column: 65)
!3937 = !DILocation(line: 1106, column: 11, scope: !3936)
!3938 = !DILocation(line: 1107, column: 38, scope: !3936)
!3939 = !DILocation(line: 1107, column: 45, scope: !3936)
!3940 = !DILocation(line: 1107, column: 18, scope: !3936)
!3941 = !DILocation(line: 1107, column: 5, scope: !3936)
!3942 = !DILocation(line: 1107, column: 13, scope: !3936)
!3943 = !DILocation(line: 1107, column: 16, scope: !3936)
!3944 = !DILocation(line: 1108, column: 4, scope: !3936)
!3945 = distinct !{!3945, !3931, !3946}
!3946 = !DILocation(line: 1108, column: 4, scope: !3932)
!3947 = !DILocation(line: 1109, column: 3, scope: !3925)
!3948 = !DILocation(line: 1111, column: 11, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 1111, column: 4)
!3950 = distinct !DILexicalBlock(scope: !3922, file: !3, line: 1110, column: 8)
!3951 = !DILocation(line: 1111, column: 9, scope: !3949)
!3952 = !DILocation(line: 1111, column: 16, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 1111, column: 4)
!3954 = !DILocation(line: 1111, column: 20, scope: !3953)
!3955 = !DILocation(line: 1111, column: 18, scope: !3953)
!3956 = !DILocation(line: 1111, column: 4, scope: !3949)
!3957 = !DILocation(line: 1112, column: 38, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 1111, column: 43)
!3959 = !DILocation(line: 1112, column: 45, scope: !3958)
!3960 = !DILocation(line: 1112, column: 18, scope: !3958)
!3961 = !DILocation(line: 1112, column: 5, scope: !3958)
!3962 = !DILocation(line: 1112, column: 13, scope: !3958)
!3963 = !DILocation(line: 1112, column: 16, scope: !3958)
!3964 = !DILocation(line: 1113, column: 4, scope: !3958)
!3965 = !DILocation(line: 1111, column: 30, scope: !3953)
!3966 = !DILocation(line: 1111, column: 39, scope: !3953)
!3967 = !DILocation(line: 1111, column: 4, scope: !3953)
!3968 = distinct !{!3968, !3956, !3969}
!3969 = !DILocation(line: 1113, column: 4, scope: !3949)
!3970 = !DILocation(line: 1116, column: 7, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 1116, column: 7)
!3972 = !DILocation(line: 1116, column: 7, scope: !3876)
!3973 = !DILocation(line: 1117, column: 44, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 1116, column: 14)
!3975 = !DILocation(line: 1117, column: 4, scope: !3974)
!3976 = !DILocation(line: 1117, column: 11, scope: !3974)
!3977 = !DILocation(line: 1117, column: 28, scope: !3974)
!3978 = !DILocation(line: 1117, column: 42, scope: !3974)
!3979 = !DILocation(line: 1118, column: 3, scope: !3974)
!3980 = !DILocation(line: 1120, column: 10, scope: !3876)
!3981 = !DILocation(line: 1120, column: 3, scope: !3876)
!3982 = !DILocation(line: 1122, column: 2, scope: !3777)
!3983 = !DILocation(line: 1123, column: 1, scope: !3777)
!3984 = distinct !DISubprogram(name: "BKE_keyblock_free_per_block_weights", scope: !3, file: !3, line: 1145, type: !3985, scopeLine: 1146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!3985 = !DISubroutineType(types: !3986)
!3986 = !{null, !1952, !2859, !3724}
!3987 = !DILocalVariable(name: "key", arg: 1, scope: !3984, file: !3, line: 1145, type: !1952)
!3988 = !DILocation(line: 1145, column: 47, scope: !3984)
!3989 = !DILocalVariable(name: "per_keyblock_weights", arg: 2, scope: !3984, file: !3, line: 1145, type: !2859)
!3990 = !DILocation(line: 1145, column: 60, scope: !3984)
!3991 = !DILocalVariable(name: "cache", arg: 3, scope: !3984, file: !3, line: 1145, type: !3724)
!3992 = !DILocation(line: 1145, column: 101, scope: !3984)
!3993 = !DILocalVariable(name: "a", scope: !3984, file: !3, line: 1147, type: !176)
!3994 = !DILocation(line: 1147, column: 6, scope: !3984)
!3995 = !DILocation(line: 1149, column: 6, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3984, file: !3, line: 1149, column: 6)
!3997 = !DILocation(line: 1149, column: 6, scope: !3984)
!3998 = !DILocation(line: 1150, column: 7, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !4000, file: !3, line: 1150, column: 7)
!4000 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 1149, column: 13)
!4001 = !DILocation(line: 1150, column: 14, scope: !3999)
!4002 = !DILocation(line: 1150, column: 7, scope: !4000)
!4003 = !DILocation(line: 1151, column: 11, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !4005, file: !3, line: 1151, column: 4)
!4005 = distinct !DILexicalBlock(scope: !3999, file: !3, line: 1150, column: 36)
!4006 = !DILocation(line: 1151, column: 9, scope: !4004)
!4007 = !DILocation(line: 1151, column: 16, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 1151, column: 4)
!4009 = !DILocation(line: 1151, column: 20, scope: !4008)
!4010 = !DILocation(line: 1151, column: 27, scope: !4008)
!4011 = !DILocation(line: 1151, column: 18, scope: !4008)
!4012 = !DILocation(line: 1151, column: 4, scope: !4004)
!4013 = !DILocation(line: 1152, column: 9, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4015, file: !3, line: 1152, column: 9)
!4015 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 1151, column: 54)
!4016 = !DILocation(line: 1152, column: 16, scope: !4014)
!4017 = !DILocation(line: 1152, column: 33, scope: !4014)
!4018 = !DILocation(line: 1152, column: 9, scope: !4015)
!4019 = !DILocation(line: 1153, column: 6, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 1152, column: 37)
!4021 = !DILocation(line: 1153, column: 16, scope: !4020)
!4022 = !DILocation(line: 1153, column: 23, scope: !4020)
!4023 = !DILocation(line: 1153, column: 40, scope: !4020)
!4024 = !DILocation(line: 1154, column: 5, scope: !4020)
!4025 = !DILocation(line: 1155, column: 4, scope: !4015)
!4026 = !DILocation(line: 1151, column: 50, scope: !4008)
!4027 = !DILocation(line: 1151, column: 4, scope: !4008)
!4028 = distinct !{!4028, !4012, !4029}
!4029 = !DILocation(line: 1155, column: 4, scope: !4004)
!4030 = !DILocation(line: 1156, column: 4, scope: !4005)
!4031 = !DILocation(line: 1156, column: 14, scope: !4005)
!4032 = !DILocation(line: 1156, column: 21, scope: !4005)
!4033 = !DILocation(line: 1157, column: 3, scope: !4005)
!4034 = !DILocation(line: 1158, column: 3, scope: !4000)
!4035 = !DILocation(line: 1158, column: 10, scope: !4000)
!4036 = !DILocation(line: 1158, column: 27, scope: !4000)
!4037 = !DILocation(line: 1159, column: 2, scope: !4000)
!4038 = !DILocation(line: 1161, column: 10, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !3, line: 1161, column: 3)
!4040 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 1160, column: 7)
!4041 = !DILocation(line: 1161, column: 8, scope: !4039)
!4042 = !DILocation(line: 1161, column: 15, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4039, file: !3, line: 1161, column: 3)
!4044 = !DILocation(line: 1161, column: 19, scope: !4043)
!4045 = !DILocation(line: 1161, column: 24, scope: !4043)
!4046 = !DILocation(line: 1161, column: 17, scope: !4043)
!4047 = !DILocation(line: 1161, column: 3, scope: !4039)
!4048 = !DILocation(line: 1162, column: 8, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !3, line: 1162, column: 8)
!4050 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 1161, column: 37)
!4051 = !DILocation(line: 1162, column: 29, scope: !4049)
!4052 = !DILocation(line: 1162, column: 8, scope: !4050)
!4053 = !DILocation(line: 1163, column: 5, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 1162, column: 33)
!4055 = !DILocation(line: 1163, column: 15, scope: !4054)
!4056 = !DILocation(line: 1163, column: 36, scope: !4054)
!4057 = !DILocation(line: 1164, column: 4, scope: !4054)
!4058 = !DILocation(line: 1165, column: 3, scope: !4050)
!4059 = !DILocation(line: 1161, column: 33, scope: !4043)
!4060 = !DILocation(line: 1161, column: 3, scope: !4043)
!4061 = distinct !{!4061, !4047, !4062}
!4062 = !DILocation(line: 1165, column: 3, scope: !4039)
!4063 = !DILocation(line: 1168, column: 2, scope: !3984)
!4064 = !DILocation(line: 1168, column: 12, scope: !3984)
!4065 = !DILocation(line: 1169, column: 1, scope: !3984)
!4066 = distinct !DISubprogram(name: "BKE_key_evaluate_object_ex", scope: !3, file: !3, line: 1389, type: !4067, scopeLine: 1391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!4067 = !DISubroutineType(types: !4068)
!4068 = !{!213, !4069, !3722, !2879, !213, !4071}
!4069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4070, size: 64)
!4070 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !1032, line: 1299, baseType: !1031)
!4071 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !4072, line: 46, baseType: !781)
!4072 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!4073 = !DILocalVariable(name: "scene", arg: 1, scope: !4066, file: !3, line: 1389, type: !4069)
!4074 = !DILocation(line: 1389, column: 42, scope: !4066)
!4075 = !DILocalVariable(name: "ob", arg: 2, scope: !4066, file: !3, line: 1389, type: !3722)
!4076 = !DILocation(line: 1389, column: 57, scope: !4066)
!4077 = !DILocalVariable(name: "r_totelem", arg: 3, scope: !4066, file: !3, line: 1389, type: !2879)
!4078 = !DILocation(line: 1389, column: 66, scope: !4066)
!4079 = !DILocalVariable(name: "arr", arg: 4, scope: !4066, file: !3, line: 1390, type: !213)
!4080 = !DILocation(line: 1390, column: 42, scope: !4066)
!4081 = !DILocalVariable(name: "arr_size", arg: 5, scope: !4066, file: !3, line: 1390, type: !4071)
!4082 = !DILocation(line: 1390, column: 54, scope: !4066)
!4083 = !DILocalVariable(name: "key", scope: !4066, file: !3, line: 1392, type: !1952)
!4084 = !DILocation(line: 1392, column: 7, scope: !4066)
!4085 = !DILocation(line: 1392, column: 33, scope: !4066)
!4086 = !DILocation(line: 1392, column: 13, scope: !4066)
!4087 = !DILocalVariable(name: "actkb", scope: !4066, file: !3, line: 1393, type: !313)
!4088 = !DILocation(line: 1393, column: 12, scope: !4066)
!4089 = !DILocation(line: 1393, column: 45, scope: !4066)
!4090 = !DILocation(line: 1393, column: 20, scope: !4066)
!4091 = !DILocalVariable(name: "out", scope: !4066, file: !3, line: 1394, type: !211)
!4092 = !DILocation(line: 1394, column: 8, scope: !4066)
!4093 = !DILocalVariable(name: "tot", scope: !4066, file: !3, line: 1395, type: !176)
!4094 = !DILocation(line: 1395, column: 6, scope: !4066)
!4095 = !DILocalVariable(name: "size", scope: !4066, file: !3, line: 1395, type: !176)
!4096 = !DILocation(line: 1395, column: 15, scope: !4066)
!4097 = !DILocation(line: 1397, column: 6, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1397, column: 6)
!4099 = !DILocation(line: 1397, column: 10, scope: !4098)
!4100 = !DILocation(line: 1397, column: 18, scope: !4098)
!4101 = !DILocation(line: 1397, column: 44, scope: !4098)
!4102 = !DILocation(line: 1397, column: 49, scope: !4098)
!4103 = !DILocation(line: 1397, column: 21, scope: !4098)
!4104 = !DILocation(line: 1397, column: 6, scope: !4066)
!4105 = !DILocation(line: 1398, column: 3, scope: !4098)
!4106 = !DILocation(line: 1401, column: 6, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1401, column: 6)
!4108 = !DILocation(line: 1401, column: 10, scope: !4107)
!4109 = !DILocation(line: 1401, column: 15, scope: !4107)
!4110 = !DILocation(line: 1401, column: 6, scope: !4066)
!4111 = !DILocalVariable(name: "me", scope: !4112, file: !3, line: 1402, type: !215)
!4112 = distinct !DILexicalBlock(scope: !4107, file: !3, line: 1401, column: 27)
!4113 = !DILocation(line: 1402, column: 9, scope: !4112)
!4114 = !DILocation(line: 1402, column: 14, scope: !4112)
!4115 = !DILocation(line: 1402, column: 18, scope: !4112)
!4116 = !DILocation(line: 1404, column: 9, scope: !4112)
!4117 = !DILocation(line: 1404, column: 13, scope: !4112)
!4118 = !DILocation(line: 1404, column: 7, scope: !4112)
!4119 = !DILocation(line: 1405, column: 10, scope: !4112)
!4120 = !DILocation(line: 1405, column: 14, scope: !4112)
!4121 = !DILocation(line: 1405, column: 18, scope: !4112)
!4122 = !DILocation(line: 1405, column: 8, scope: !4112)
!4123 = !DILocation(line: 1406, column: 2, scope: !4112)
!4124 = !DILocation(line: 1407, column: 11, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4107, file: !3, line: 1407, column: 11)
!4126 = !DILocation(line: 1407, column: 15, scope: !4125)
!4127 = !DILocation(line: 1407, column: 20, scope: !4125)
!4128 = !DILocation(line: 1407, column: 11, scope: !4107)
!4129 = !DILocalVariable(name: "lt", scope: !4130, file: !3, line: 1408, type: !1784)
!4130 = distinct !DILexicalBlock(scope: !4125, file: !3, line: 1407, column: 35)
!4131 = !DILocation(line: 1408, column: 12, scope: !4130)
!4132 = !DILocation(line: 1408, column: 17, scope: !4130)
!4133 = !DILocation(line: 1408, column: 21, scope: !4130)
!4134 = !DILocation(line: 1410, column: 9, scope: !4130)
!4135 = !DILocation(line: 1410, column: 13, scope: !4130)
!4136 = !DILocation(line: 1410, column: 21, scope: !4130)
!4137 = !DILocation(line: 1410, column: 25, scope: !4130)
!4138 = !DILocation(line: 1410, column: 19, scope: !4130)
!4139 = !DILocation(line: 1410, column: 33, scope: !4130)
!4140 = !DILocation(line: 1410, column: 37, scope: !4130)
!4141 = !DILocation(line: 1410, column: 31, scope: !4130)
!4142 = !DILocation(line: 1410, column: 7, scope: !4130)
!4143 = !DILocation(line: 1411, column: 10, scope: !4130)
!4144 = !DILocation(line: 1411, column: 14, scope: !4130)
!4145 = !DILocation(line: 1411, column: 18, scope: !4130)
!4146 = !DILocation(line: 1411, column: 8, scope: !4130)
!4147 = !DILocation(line: 1412, column: 2, scope: !4130)
!4148 = !DILocation(line: 1413, column: 11, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4125, file: !3, line: 1413, column: 11)
!4150 = !DILocation(line: 1413, column: 11, scope: !4125)
!4151 = !DILocalVariable(name: "cu", scope: !4152, file: !3, line: 1414, type: !1834)
!4152 = distinct !DILexicalBlock(scope: !4149, file: !3, line: 1413, column: 46)
!4153 = !DILocation(line: 1414, column: 10, scope: !4152)
!4154 = !DILocation(line: 1414, column: 15, scope: !4152)
!4155 = !DILocation(line: 1414, column: 19, scope: !4152)
!4156 = !DILocalVariable(name: "nu", scope: !4152, file: !3, line: 1415, type: !4157)
!4157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4158, size: 64)
!4158 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nurb", file: !352, line: 166, baseType: !4159)
!4159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Nurb", file: !352, line: 147, size: 704, elements: !4160)
!4160 = !{!4161, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179, !4182, !4205, !4206, !4207}
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4159, file: !352, line: 148, baseType: !4162, size: 64)
!4162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4159, size: 64)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4159, file: !352, line: 148, baseType: !4162, size: 64, offset: 64)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4159, file: !352, line: 149, baseType: !174, size: 16, offset: 128)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !4159, file: !352, line: 150, baseType: !174, size: 16, offset: 144)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !4159, file: !352, line: 151, baseType: !174, size: 16, offset: 160)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4159, file: !352, line: 151, baseType: !174, size: 16, offset: 176)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !4159, file: !352, line: 152, baseType: !176, size: 32, offset: 192)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !4159, file: !352, line: 152, baseType: !176, size: 32, offset: 224)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4159, file: !352, line: 153, baseType: !422, size: 32, offset: 256)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !4159, file: !352, line: 154, baseType: !174, size: 16, offset: 288)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !4159, file: !352, line: 154, baseType: !174, size: 16, offset: 304)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "orderu", scope: !4159, file: !352, line: 155, baseType: !174, size: 16, offset: 320)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "orderv", scope: !4159, file: !352, line: 155, baseType: !174, size: 16, offset: 336)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "flagu", scope: !4159, file: !352, line: 156, baseType: !174, size: 16, offset: 352)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "flagv", scope: !4159, file: !352, line: 156, baseType: !174, size: 16, offset: 368)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "knotsu", scope: !4159, file: !352, line: 158, baseType: !213, size: 64, offset: 384)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "knotsv", scope: !4159, file: !352, line: 158, baseType: !213, size: 64, offset: 448)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4159, file: !352, line: 159, baseType: !4180, size: 64, offset: 512)
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 64)
!4181 = !DIDerivedType(tag: DW_TAG_typedef, name: "BPoint", file: !352, line: 141, baseType: !1812)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !4159, file: !352, line: 160, baseType: !4183, size: 64, offset: 576)
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4184, size: 64)
!4184 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !352, line: 133, baseType: !4185)
!4185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !352, line: 117, size: 576, elements: !4186)
!4186 = !{!4187, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204}
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4185, file: !352, line: 118, baseType: !4188, size: 288)
!4188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 288, elements: !4189)
!4189 = !{!299, !299}
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !4185, file: !352, line: 119, baseType: !214, size: 32, offset: 288)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !4185, file: !352, line: 119, baseType: !214, size: 32, offset: 320)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !4185, file: !352, line: 119, baseType: !214, size: 32, offset: 352)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !4185, file: !352, line: 121, baseType: !161, size: 8, offset: 384)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !4185, file: !352, line: 123, baseType: !161, size: 8, offset: 392)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !4185, file: !352, line: 123, baseType: !161, size: 8, offset: 400)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !4185, file: !352, line: 124, baseType: !161, size: 8, offset: 408)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !4185, file: !352, line: 124, baseType: !161, size: 8, offset: 416)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !4185, file: !352, line: 124, baseType: !161, size: 8, offset: 424)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !4185, file: !352, line: 126, baseType: !161, size: 8, offset: 432)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !4185, file: !352, line: 128, baseType: !161, size: 8, offset: 440)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !4185, file: !352, line: 129, baseType: !214, size: 32, offset: 448)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !4185, file: !352, line: 130, baseType: !214, size: 32, offset: 480)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !4185, file: !352, line: 130, baseType: !214, size: 32, offset: 512)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4185, file: !352, line: 132, baseType: !1833, size: 32, offset: 544)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "tilt_interp", scope: !4159, file: !352, line: 162, baseType: !174, size: 16, offset: 640)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "radius_interp", scope: !4159, file: !352, line: 163, baseType: !174, size: 16, offset: 656)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !4159, file: !352, line: 165, baseType: !176, size: 32, offset: 672)
!4208 = !DILocation(line: 1415, column: 9, scope: !4152)
!4209 = !DILocation(line: 1417, column: 13, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 1417, column: 3)
!4211 = !DILocation(line: 1417, column: 17, scope: !4210)
!4212 = !DILocation(line: 1417, column: 22, scope: !4210)
!4213 = !DILocation(line: 1417, column: 11, scope: !4210)
!4214 = !DILocation(line: 1417, column: 8, scope: !4210)
!4215 = !DILocation(line: 1417, column: 29, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4210, file: !3, line: 1417, column: 3)
!4217 = !DILocation(line: 1417, column: 3, scope: !4210)
!4218 = !DILocation(line: 1418, column: 8, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4220, file: !3, line: 1418, column: 8)
!4220 = distinct !DILexicalBlock(scope: !4216, file: !3, line: 1417, column: 48)
!4221 = !DILocation(line: 1418, column: 12, scope: !4219)
!4222 = !DILocation(line: 1418, column: 8, scope: !4220)
!4223 = !DILocation(line: 1419, column: 16, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 1418, column: 18)
!4225 = !DILocation(line: 1419, column: 20, scope: !4224)
!4226 = !DILocation(line: 1419, column: 14, scope: !4224)
!4227 = !DILocation(line: 1419, column: 9, scope: !4224)
!4228 = !DILocation(line: 1420, column: 13, scope: !4224)
!4229 = !DILocation(line: 1420, column: 17, scope: !4224)
!4230 = !DILocation(line: 1420, column: 23, scope: !4224)
!4231 = !DILocation(line: 1420, column: 28, scope: !4224)
!4232 = !DILocation(line: 1420, column: 10, scope: !4224)
!4233 = !DILocation(line: 1421, column: 4, scope: !4224)
!4234 = !DILocation(line: 1422, column: 13, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 1422, column: 13)
!4236 = !DILocation(line: 1422, column: 17, scope: !4235)
!4237 = !DILocation(line: 1422, column: 13, scope: !4219)
!4238 = !DILocation(line: 1423, column: 12, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 1422, column: 21)
!4240 = !DILocation(line: 1423, column: 16, scope: !4239)
!4241 = !DILocation(line: 1423, column: 24, scope: !4239)
!4242 = !DILocation(line: 1423, column: 28, scope: !4239)
!4243 = !DILocation(line: 1423, column: 22, scope: !4239)
!4244 = !DILocation(line: 1423, column: 9, scope: !4239)
!4245 = !DILocation(line: 1424, column: 13, scope: !4239)
!4246 = !DILocation(line: 1424, column: 17, scope: !4239)
!4247 = !DILocation(line: 1424, column: 25, scope: !4239)
!4248 = !DILocation(line: 1424, column: 29, scope: !4239)
!4249 = !DILocation(line: 1424, column: 23, scope: !4239)
!4250 = !DILocation(line: 1424, column: 35, scope: !4239)
!4251 = !DILocation(line: 1424, column: 40, scope: !4239)
!4252 = !DILocation(line: 1424, column: 10, scope: !4239)
!4253 = !DILocation(line: 1425, column: 4, scope: !4239)
!4254 = !DILocation(line: 1426, column: 3, scope: !4220)
!4255 = !DILocation(line: 1417, column: 38, scope: !4216)
!4256 = !DILocation(line: 1417, column: 42, scope: !4216)
!4257 = !DILocation(line: 1417, column: 36, scope: !4216)
!4258 = !DILocation(line: 1417, column: 3, scope: !4216)
!4259 = distinct !{!4259, !4217, !4260}
!4260 = !DILocation(line: 1426, column: 3, scope: !4210)
!4261 = !DILocation(line: 1427, column: 2, scope: !4152)
!4262 = !DILocation(line: 1430, column: 6, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1430, column: 6)
!4264 = !DILocation(line: 1430, column: 10, scope: !4263)
!4265 = !DILocation(line: 1430, column: 15, scope: !4263)
!4266 = !DILocation(line: 1430, column: 18, scope: !4263)
!4267 = !DILocation(line: 1430, column: 23, scope: !4263)
!4268 = !DILocation(line: 1430, column: 6, scope: !4066)
!4269 = !DILocation(line: 1431, column: 3, scope: !4263)
!4270 = !DILocation(line: 1434, column: 6, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1434, column: 6)
!4272 = !DILocation(line: 1434, column: 10, scope: !4271)
!4273 = !DILocation(line: 1434, column: 6, scope: !4066)
!4274 = !DILocation(line: 1435, column: 9, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4271, file: !3, line: 1434, column: 19)
!4276 = !DILocation(line: 1435, column: 21, scope: !4275)
!4277 = !DILocation(line: 1435, column: 7, scope: !4275)
!4278 = !DILocation(line: 1436, column: 2, scope: !4275)
!4279 = !DILocation(line: 1438, column: 7, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 1438, column: 7)
!4281 = distinct !DILexicalBlock(scope: !4271, file: !3, line: 1437, column: 7)
!4282 = !DILocation(line: 1438, column: 19, scope: !4280)
!4283 = !DILocation(line: 1438, column: 16, scope: !4280)
!4284 = !DILocation(line: 1438, column: 7, scope: !4281)
!4285 = !DILocation(line: 1439, column: 4, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4280, file: !3, line: 1438, column: 25)
!4287 = !DILocation(line: 1442, column: 17, scope: !4281)
!4288 = !DILocation(line: 1442, column: 9, scope: !4281)
!4289 = !DILocation(line: 1442, column: 7, scope: !4281)
!4290 = !DILocation(line: 1446, column: 20, scope: !4066)
!4291 = !DILocation(line: 1446, column: 24, scope: !4066)
!4292 = !DILocation(line: 1446, column: 14, scope: !4066)
!4293 = !DILocation(line: 1446, column: 2, scope: !4066)
!4294 = !DILocation(line: 1446, column: 7, scope: !4066)
!4295 = !DILocation(line: 1446, column: 12, scope: !4066)
!4296 = !DILocation(line: 1448, column: 6, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1448, column: 6)
!4298 = !DILocation(line: 1448, column: 10, scope: !4297)
!4299 = !DILocation(line: 1448, column: 20, scope: !4297)
!4300 = !DILocation(line: 1448, column: 6, scope: !4066)
!4301 = !DILocalVariable(name: "kb", scope: !4302, file: !3, line: 1450, type: !313)
!4302 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 1448, column: 37)
!4303 = !DILocation(line: 1450, column: 13, scope: !4302)
!4304 = !DILocation(line: 1450, column: 32, scope: !4302)
!4305 = !DILocation(line: 1450, column: 37, scope: !4302)
!4306 = !DILocation(line: 1450, column: 44, scope: !4302)
!4307 = !DILocation(line: 1450, column: 48, scope: !4302)
!4308 = !DILocation(line: 1450, column: 56, scope: !4302)
!4309 = !DILocation(line: 1450, column: 18, scope: !4302)
!4310 = !DILocation(line: 1452, column: 7, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 1452, column: 7)
!4312 = !DILocation(line: 1452, column: 10, scope: !4311)
!4313 = !DILocation(line: 1452, column: 14, scope: !4311)
!4314 = !DILocation(line: 1452, column: 18, scope: !4311)
!4315 = !DILocation(line: 1452, column: 23, scope: !4311)
!4316 = !DILocation(line: 1452, column: 7, scope: !4302)
!4317 = !DILocation(line: 1453, column: 9, scope: !4311)
!4318 = !DILocation(line: 1453, column: 14, scope: !4311)
!4319 = !DILocation(line: 1453, column: 7, scope: !4311)
!4320 = !DILocation(line: 1453, column: 4, scope: !4311)
!4321 = !DILocation(line: 1455, column: 7, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 1455, column: 7)
!4323 = !DILocation(line: 1455, column: 10, scope: !4322)
!4324 = !DILocation(line: 1455, column: 7, scope: !4302)
!4325 = !DILocation(line: 1456, column: 9, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4322, file: !3, line: 1455, column: 19)
!4327 = !DILocation(line: 1456, column: 14, scope: !4326)
!4328 = !DILocation(line: 1456, column: 20, scope: !4326)
!4329 = !DILocation(line: 1456, column: 7, scope: !4326)
!4330 = !DILocation(line: 1457, column: 4, scope: !4326)
!4331 = !DILocation(line: 1457, column: 8, scope: !4326)
!4332 = !DILocation(line: 1457, column: 16, scope: !4326)
!4333 = !DILocation(line: 1458, column: 3, scope: !4326)
!4334 = !DILocation(line: 1460, column: 7, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 1460, column: 7)
!4336 = !DILocation(line: 1460, column: 7, scope: !4302)
!4337 = !DILocalVariable(name: "weights", scope: !4338, file: !3, line: 1461, type: !213)
!4338 = distinct !DILexicalBlock(scope: !4335, file: !3, line: 1460, column: 41)
!4339 = !DILocation(line: 1461, column: 11, scope: !4338)
!4340 = !DILocation(line: 1461, column: 39, scope: !4338)
!4341 = !DILocation(line: 1461, column: 43, scope: !4338)
!4342 = !DILocation(line: 1461, column: 47, scope: !4338)
!4343 = !DILocation(line: 1461, column: 21, scope: !4338)
!4344 = !DILocation(line: 1463, column: 14, scope: !4338)
!4345 = !DILocation(line: 1463, column: 19, scope: !4338)
!4346 = !DILocation(line: 1463, column: 24, scope: !4338)
!4347 = !DILocation(line: 1463, column: 29, scope: !4338)
!4348 = !DILocation(line: 1463, column: 34, scope: !4338)
!4349 = !DILocation(line: 1463, column: 41, scope: !4338)
!4350 = !DILocation(line: 1463, column: 45, scope: !4338)
!4351 = !DILocation(line: 1463, column: 4, scope: !4338)
!4352 = !DILocation(line: 1465, column: 8, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 1465, column: 8)
!4354 = !DILocation(line: 1465, column: 8, scope: !4338)
!4355 = !DILocation(line: 1465, column: 17, scope: !4353)
!4356 = !DILocation(line: 1465, column: 27, scope: !4353)
!4357 = !DILocation(line: 1466, column: 3, scope: !4338)
!4358 = !DILocation(line: 1467, column: 12, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4335, file: !3, line: 1467, column: 12)
!4360 = !DILocation(line: 1467, column: 12, scope: !4335)
!4361 = !DILocation(line: 1468, column: 14, scope: !4359)
!4362 = !DILocation(line: 1468, column: 18, scope: !4359)
!4363 = !DILocation(line: 1468, column: 24, scope: !4359)
!4364 = !DILocation(line: 1468, column: 29, scope: !4359)
!4365 = !DILocation(line: 1468, column: 36, scope: !4359)
!4366 = !DILocation(line: 1468, column: 43, scope: !4359)
!4367 = !DILocation(line: 1468, column: 48, scope: !4359)
!4368 = !DILocation(line: 1468, column: 53, scope: !4359)
!4369 = !DILocation(line: 1468, column: 4, scope: !4359)
!4370 = !DILocation(line: 1469, column: 2, scope: !4302)
!4371 = !DILocation(line: 1472, column: 7, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4373, file: !3, line: 1472, column: 7)
!4373 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 1470, column: 7)
!4374 = !DILocation(line: 1472, column: 11, scope: !4372)
!4375 = !DILocation(line: 1472, column: 16, scope: !4372)
!4376 = !DILocation(line: 1472, column: 7, scope: !4373)
!4377 = !DILocation(line: 1472, column: 40, scope: !4372)
!4378 = !DILocation(line: 1472, column: 47, scope: !4372)
!4379 = !DILocation(line: 1472, column: 51, scope: !4372)
!4380 = !DILocation(line: 1472, column: 56, scope: !4372)
!4381 = !DILocation(line: 1472, column: 61, scope: !4372)
!4382 = !DILocation(line: 1472, column: 28, scope: !4372)
!4383 = !DILocation(line: 1473, column: 12, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4372, file: !3, line: 1473, column: 12)
!4385 = !DILocation(line: 1473, column: 16, scope: !4384)
!4386 = !DILocation(line: 1473, column: 21, scope: !4384)
!4387 = !DILocation(line: 1473, column: 12, scope: !4372)
!4388 = !DILocation(line: 1473, column: 48, scope: !4384)
!4389 = !DILocation(line: 1473, column: 55, scope: !4384)
!4390 = !DILocation(line: 1473, column: 59, scope: !4384)
!4391 = !DILocation(line: 1473, column: 64, scope: !4384)
!4392 = !DILocation(line: 1473, column: 69, scope: !4384)
!4393 = !DILocation(line: 1473, column: 36, scope: !4384)
!4394 = !DILocation(line: 1474, column: 12, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4384, file: !3, line: 1474, column: 12)
!4396 = !DILocation(line: 1474, column: 16, scope: !4395)
!4397 = !DILocation(line: 1474, column: 21, scope: !4395)
!4398 = !DILocation(line: 1474, column: 12, scope: !4384)
!4399 = !DILocation(line: 1474, column: 47, scope: !4395)
!4400 = !DILocation(line: 1474, column: 54, scope: !4395)
!4401 = !DILocation(line: 1474, column: 58, scope: !4395)
!4402 = !DILocation(line: 1474, column: 63, scope: !4395)
!4403 = !DILocation(line: 1474, column: 68, scope: !4395)
!4404 = !DILocation(line: 1474, column: 34, scope: !4395)
!4405 = !DILocation(line: 1475, column: 12, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4395, file: !3, line: 1475, column: 12)
!4407 = !DILocation(line: 1475, column: 16, scope: !4406)
!4408 = !DILocation(line: 1475, column: 21, scope: !4406)
!4409 = !DILocation(line: 1475, column: 12, scope: !4395)
!4410 = !DILocation(line: 1475, column: 46, scope: !4406)
!4411 = !DILocation(line: 1475, column: 53, scope: !4406)
!4412 = !DILocation(line: 1475, column: 57, scope: !4406)
!4413 = !DILocation(line: 1475, column: 62, scope: !4406)
!4414 = !DILocation(line: 1475, column: 67, scope: !4406)
!4415 = !DILocation(line: 1475, column: 33, scope: !4406)
!4416 = !DILocation(line: 1478, column: 6, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1478, column: 6)
!4418 = !DILocation(line: 1478, column: 6, scope: !4066)
!4419 = !DILocation(line: 1479, column: 16, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 1478, column: 17)
!4421 = !DILocation(line: 1479, column: 4, scope: !4420)
!4422 = !DILocation(line: 1479, column: 14, scope: !4420)
!4423 = !DILocation(line: 1480, column: 2, scope: !4420)
!4424 = !DILocation(line: 1481, column: 18, scope: !4066)
!4425 = !DILocation(line: 1481, column: 9, scope: !4066)
!4426 = !DILocation(line: 1481, column: 2, scope: !4066)
!4427 = !DILocation(line: 1482, column: 1, scope: !4066)
!4428 = distinct !DISubprogram(name: "BKE_key_from_object", scope: !3, file: !3, line: 1489, type: !4429, scopeLine: 1490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!4429 = !DISubroutineType(types: !4430)
!4430 = !{!307, !3722}
!4431 = !DILocalVariable(name: "ob", arg: 1, scope: !4428, file: !3, line: 1489, type: !3722)
!4432 = !DILocation(line: 1489, column: 34, scope: !4428)
!4433 = !DILocation(line: 1491, column: 6, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4428, file: !3, line: 1491, column: 6)
!4435 = !DILocation(line: 1491, column: 9, scope: !4434)
!4436 = !DILocation(line: 1491, column: 6, scope: !4428)
!4437 = !DILocation(line: 1491, column: 18, scope: !4434)
!4438 = !DILocation(line: 1493, column: 6, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4428, file: !3, line: 1493, column: 6)
!4440 = !DILocation(line: 1493, column: 10, scope: !4439)
!4441 = !DILocation(line: 1493, column: 15, scope: !4439)
!4442 = !DILocation(line: 1493, column: 6, scope: !4428)
!4443 = !DILocalVariable(name: "me", scope: !4444, file: !3, line: 1494, type: !215)
!4444 = distinct !DILexicalBlock(scope: !4439, file: !3, line: 1493, column: 27)
!4445 = !DILocation(line: 1494, column: 9, scope: !4444)
!4446 = !DILocation(line: 1494, column: 14, scope: !4444)
!4447 = !DILocation(line: 1494, column: 18, scope: !4444)
!4448 = !DILocation(line: 1495, column: 10, scope: !4444)
!4449 = !DILocation(line: 1495, column: 14, scope: !4444)
!4450 = !DILocation(line: 1495, column: 3, scope: !4444)
!4451 = !DILocation(line: 1497, column: 11, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4439, file: !3, line: 1497, column: 11)
!4453 = !DILocation(line: 1497, column: 11, scope: !4439)
!4454 = !DILocalVariable(name: "cu", scope: !4455, file: !3, line: 1498, type: !1834)
!4455 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 1497, column: 46)
!4456 = !DILocation(line: 1498, column: 10, scope: !4455)
!4457 = !DILocation(line: 1498, column: 15, scope: !4455)
!4458 = !DILocation(line: 1498, column: 19, scope: !4455)
!4459 = !DILocation(line: 1499, column: 10, scope: !4455)
!4460 = !DILocation(line: 1499, column: 14, scope: !4455)
!4461 = !DILocation(line: 1499, column: 3, scope: !4455)
!4462 = !DILocation(line: 1501, column: 11, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 1501, column: 11)
!4464 = !DILocation(line: 1501, column: 15, scope: !4463)
!4465 = !DILocation(line: 1501, column: 20, scope: !4463)
!4466 = !DILocation(line: 1501, column: 11, scope: !4452)
!4467 = !DILocalVariable(name: "lt", scope: !4468, file: !3, line: 1502, type: !1784)
!4468 = distinct !DILexicalBlock(scope: !4463, file: !3, line: 1501, column: 35)
!4469 = !DILocation(line: 1502, column: 12, scope: !4468)
!4470 = !DILocation(line: 1502, column: 17, scope: !4468)
!4471 = !DILocation(line: 1502, column: 21, scope: !4468)
!4472 = !DILocation(line: 1503, column: 10, scope: !4468)
!4473 = !DILocation(line: 1503, column: 14, scope: !4468)
!4474 = !DILocation(line: 1503, column: 3, scope: !4468)
!4475 = !DILocation(line: 1505, column: 2, scope: !4428)
!4476 = !DILocation(line: 1506, column: 1, scope: !4428)
!4477 = distinct !DISubprogram(name: "BKE_keyblock_from_object", scope: !3, file: !3, line: 1585, type: !4478, scopeLine: 1586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!4478 = !DISubroutineType(types: !4479)
!4479 = !{!318, !3722}
!4480 = !DILocalVariable(name: "ob", arg: 1, scope: !4477, file: !3, line: 1585, type: !3722)
!4481 = !DILocation(line: 1585, column: 44, scope: !4477)
!4482 = !DILocalVariable(name: "key", scope: !4477, file: !3, line: 1587, type: !1952)
!4483 = !DILocation(line: 1587, column: 7, scope: !4477)
!4484 = !DILocation(line: 1587, column: 33, scope: !4477)
!4485 = !DILocation(line: 1587, column: 13, scope: !4477)
!4486 = !DILocation(line: 1589, column: 6, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 1589, column: 6)
!4488 = !DILocation(line: 1589, column: 6, scope: !4477)
!4489 = !DILocalVariable(name: "kb", scope: !4490, file: !3, line: 1590, type: !313)
!4490 = distinct !DILexicalBlock(scope: !4487, file: !3, line: 1589, column: 11)
!4491 = !DILocation(line: 1590, column: 13, scope: !4490)
!4492 = !DILocation(line: 1590, column: 32, scope: !4490)
!4493 = !DILocation(line: 1590, column: 37, scope: !4490)
!4494 = !DILocation(line: 1590, column: 44, scope: !4490)
!4495 = !DILocation(line: 1590, column: 48, scope: !4490)
!4496 = !DILocation(line: 1590, column: 56, scope: !4490)
!4497 = !DILocation(line: 1590, column: 18, scope: !4490)
!4498 = !DILocation(line: 1591, column: 10, scope: !4490)
!4499 = !DILocation(line: 1591, column: 3, scope: !4490)
!4500 = !DILocation(line: 1594, column: 2, scope: !4477)
!4501 = !DILocation(line: 1595, column: 1, scope: !4477)
!4502 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !4503, file: !4503, line: 88, type: !4504, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!4503 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4504 = !DISubroutineType(types: !4505)
!4505 = !{!785, !4506}
!4506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4507, size: 64)
!4507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !203)
!4508 = !DILocalVariable(name: "lb", arg: 1, scope: !4502, file: !4503, line: 88, type: !4506)
!4509 = !DILocation(line: 88, column: 62, scope: !4502)
!4510 = !DILocation(line: 88, column: 76, scope: !4502)
!4511 = !DILocation(line: 88, column: 80, scope: !4502)
!4512 = !DILocation(line: 88, column: 86, scope: !4502)
!4513 = !DILocation(line: 88, column: 75, scope: !4502)
!4514 = !DILocation(line: 88, column: 68, scope: !4502)
!4515 = distinct !DISubprogram(name: "cp_cu_key", scope: !3, file: !3, line: 699, type: !4516, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!4516 = !DISubroutineType(types: !4517)
!4517 = !{null, !1834, !1952, !313, !313, !2858, !176, !211, !2858}
!4518 = !DILocalVariable(name: "cu", arg: 1, scope: !4515, file: !3, line: 699, type: !1834)
!4519 = !DILocation(line: 699, column: 30, scope: !4515)
!4520 = !DILocalVariable(name: "key", arg: 2, scope: !4515, file: !3, line: 699, type: !1952)
!4521 = !DILocation(line: 699, column: 39, scope: !4515)
!4522 = !DILocalVariable(name: "actkb", arg: 3, scope: !4515, file: !3, line: 699, type: !313)
!4523 = !DILocation(line: 699, column: 54, scope: !4515)
!4524 = !DILocalVariable(name: "kb", arg: 4, scope: !4515, file: !3, line: 699, type: !313)
!4525 = !DILocation(line: 699, column: 71, scope: !4515)
!4526 = !DILocalVariable(name: "start", arg: 5, scope: !4515, file: !3, line: 699, type: !2858)
!4527 = !DILocation(line: 699, column: 85, scope: !4515)
!4528 = !DILocalVariable(name: "end", arg: 6, scope: !4515, file: !3, line: 699, type: !176)
!4529 = !DILocation(line: 699, column: 96, scope: !4515)
!4530 = !DILocalVariable(name: "out", arg: 7, scope: !4515, file: !3, line: 699, type: !211)
!4531 = !DILocation(line: 699, column: 107, scope: !4515)
!4532 = !DILocalVariable(name: "tot", arg: 8, scope: !4515, file: !3, line: 699, type: !2858)
!4533 = !DILocation(line: 699, column: 122, scope: !4515)
!4534 = !DILocalVariable(name: "nu", scope: !4515, file: !3, line: 701, type: !4157)
!4535 = !DILocation(line: 701, column: 8, scope: !4515)
!4536 = !DILocalVariable(name: "a", scope: !4515, file: !3, line: 702, type: !176)
!4537 = !DILocation(line: 702, column: 6, scope: !4515)
!4538 = !DILocalVariable(name: "step", scope: !4515, file: !3, line: 702, type: !176)
!4539 = !DILocation(line: 702, column: 9, scope: !4515)
!4540 = !DILocalVariable(name: "a1", scope: !4515, file: !3, line: 702, type: !176)
!4541 = !DILocation(line: 702, column: 15, scope: !4515)
!4542 = !DILocalVariable(name: "a2", scope: !4515, file: !3, line: 702, type: !176)
!4543 = !DILocation(line: 702, column: 19, scope: !4515)
!4544 = !DILocation(line: 704, column: 9, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4515, file: !3, line: 704, column: 2)
!4546 = !DILocation(line: 704, column: 19, scope: !4545)
!4547 = !DILocation(line: 704, column: 23, scope: !4545)
!4548 = !DILocation(line: 704, column: 28, scope: !4545)
!4549 = !DILocation(line: 704, column: 17, scope: !4545)
!4550 = !DILocation(line: 704, column: 7, scope: !4545)
!4551 = !DILocation(line: 704, column: 35, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4545, file: !3, line: 704, column: 2)
!4553 = !DILocation(line: 704, column: 2, scope: !4545)
!4554 = !DILocation(line: 705, column: 7, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 705, column: 7)
!4556 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 704, column: 65)
!4557 = !DILocation(line: 705, column: 11, scope: !4555)
!4558 = !DILocation(line: 705, column: 7, scope: !4556)
!4559 = !DILocation(line: 706, column: 11, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 705, column: 15)
!4561 = !DILocation(line: 706, column: 15, scope: !4560)
!4562 = !DILocation(line: 706, column: 23, scope: !4560)
!4563 = !DILocation(line: 706, column: 27, scope: !4560)
!4564 = !DILocation(line: 706, column: 21, scope: !4560)
!4565 = !DILocation(line: 706, column: 9, scope: !4560)
!4566 = !DILocation(line: 708, column: 16, scope: !4560)
!4567 = !DILocation(line: 708, column: 19, scope: !4560)
!4568 = !DILocation(line: 708, column: 9, scope: !4560)
!4569 = !DILocation(line: 708, column: 7, scope: !4560)
!4570 = !DILocation(line: 709, column: 16, scope: !4560)
!4571 = !DILocation(line: 709, column: 20, scope: !4560)
!4572 = !DILocation(line: 709, column: 18, scope: !4560)
!4573 = !DILocation(line: 709, column: 26, scope: !4560)
!4574 = !DILocation(line: 709, column: 9, scope: !4560)
!4575 = !DILocation(line: 709, column: 7, scope: !4560)
!4576 = !DILocation(line: 711, column: 8, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4560, file: !3, line: 711, column: 8)
!4578 = !DILocation(line: 711, column: 13, scope: !4577)
!4579 = !DILocation(line: 711, column: 11, scope: !4577)
!4580 = !DILocation(line: 711, column: 8, scope: !4560)
!4581 = !DILocation(line: 711, column: 24, scope: !4577)
!4582 = !DILocation(line: 711, column: 28, scope: !4577)
!4583 = !DILocation(line: 711, column: 32, scope: !4577)
!4584 = !DILocation(line: 711, column: 37, scope: !4577)
!4585 = !DILocation(line: 711, column: 42, scope: !4577)
!4586 = !DILocation(line: 711, column: 47, scope: !4577)
!4587 = !DILocation(line: 711, column: 54, scope: !4577)
!4588 = !DILocation(line: 711, column: 17, scope: !4577)
!4589 = !DILocation(line: 712, column: 3, scope: !4560)
!4590 = !DILocation(line: 713, column: 12, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 713, column: 12)
!4592 = !DILocation(line: 713, column: 16, scope: !4591)
!4593 = !DILocation(line: 713, column: 12, scope: !4555)
!4594 = !DILocation(line: 714, column: 15, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4591, file: !3, line: 713, column: 22)
!4596 = !DILocation(line: 714, column: 19, scope: !4595)
!4597 = !DILocation(line: 714, column: 13, scope: !4595)
!4598 = !DILocation(line: 714, column: 9, scope: !4595)
!4599 = !DILocation(line: 717, column: 16, scope: !4595)
!4600 = !DILocation(line: 717, column: 19, scope: !4595)
!4601 = !DILocation(line: 717, column: 9, scope: !4595)
!4602 = !DILocation(line: 717, column: 7, scope: !4595)
!4603 = !DILocation(line: 718, column: 16, scope: !4595)
!4604 = !DILocation(line: 718, column: 20, scope: !4595)
!4605 = !DILocation(line: 718, column: 18, scope: !4595)
!4606 = !DILocation(line: 718, column: 26, scope: !4595)
!4607 = !DILocation(line: 718, column: 9, scope: !4595)
!4608 = !DILocation(line: 718, column: 7, scope: !4595)
!4609 = !DILocation(line: 720, column: 8, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 720, column: 8)
!4611 = !DILocation(line: 720, column: 13, scope: !4610)
!4612 = !DILocation(line: 720, column: 11, scope: !4610)
!4613 = !DILocation(line: 720, column: 8, scope: !4595)
!4614 = !DILocation(line: 720, column: 24, scope: !4610)
!4615 = !DILocation(line: 720, column: 28, scope: !4610)
!4616 = !DILocation(line: 720, column: 32, scope: !4610)
!4617 = !DILocation(line: 720, column: 37, scope: !4610)
!4618 = !DILocation(line: 720, column: 42, scope: !4610)
!4619 = !DILocation(line: 720, column: 47, scope: !4610)
!4620 = !DILocation(line: 720, column: 54, scope: !4610)
!4621 = !DILocation(line: 720, column: 17, scope: !4610)
!4622 = !DILocation(line: 721, column: 3, scope: !4595)
!4623 = !DILocation(line: 723, column: 9, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4591, file: !3, line: 722, column: 8)
!4625 = !DILocation(line: 725, column: 2, scope: !4556)
!4626 = !DILocation(line: 704, column: 44, scope: !4552)
!4627 = !DILocation(line: 704, column: 48, scope: !4552)
!4628 = !DILocation(line: 704, column: 42, scope: !4552)
!4629 = !DILocation(line: 704, column: 59, scope: !4552)
!4630 = !DILocation(line: 704, column: 56, scope: !4552)
!4631 = !DILocation(line: 704, column: 2, scope: !4552)
!4632 = distinct !{!4632, !4553, !4633}
!4633 = !DILocation(line: 725, column: 2, scope: !4545)
!4634 = !DILocation(line: 726, column: 1, scope: !4515)
!4635 = distinct !DISubprogram(name: "do_mesh_key", scope: !3, file: !3, line: 1171, type: !4636, scopeLine: 1172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!4636 = !DISubroutineType(types: !4637)
!4637 = !{null, !4069, !3722, !1952, !211, !2858}
!4638 = !DILocalVariable(name: "scene", arg: 1, scope: !4635, file: !3, line: 1171, type: !4069)
!4639 = !DILocation(line: 1171, column: 32, scope: !4635)
!4640 = !DILocalVariable(name: "ob", arg: 2, scope: !4635, file: !3, line: 1171, type: !3722)
!4641 = !DILocation(line: 1171, column: 47, scope: !4635)
!4642 = !DILocalVariable(name: "key", arg: 3, scope: !4635, file: !3, line: 1171, type: !1952)
!4643 = !DILocation(line: 1171, column: 56, scope: !4635)
!4644 = !DILocalVariable(name: "out", arg: 4, scope: !4635, file: !3, line: 1171, type: !211)
!4645 = !DILocation(line: 1171, column: 67, scope: !4635)
!4646 = !DILocalVariable(name: "tot", arg: 5, scope: !4635, file: !3, line: 1171, type: !2858)
!4647 = !DILocation(line: 1171, column: 82, scope: !4635)
!4648 = !DILocalVariable(name: "k", scope: !4635, file: !3, line: 1173, type: !4649)
!4649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !313, size: 256, elements: !439)
!4650 = !DILocation(line: 1173, column: 12, scope: !4635)
!4651 = !DILocalVariable(name: "actkb", scope: !4635, file: !3, line: 1173, type: !313)
!4652 = !DILocation(line: 1173, column: 19, scope: !4635)
!4653 = !DILocation(line: 1173, column: 52, scope: !4635)
!4654 = !DILocation(line: 1173, column: 27, scope: !4635)
!4655 = !DILocalVariable(name: "t", scope: !4635, file: !3, line: 1174, type: !438)
!4656 = !DILocation(line: 1174, column: 8, scope: !4635)
!4657 = !DILocalVariable(name: "flag", scope: !4635, file: !3, line: 1175, type: !176)
!4658 = !DILocation(line: 1175, column: 6, scope: !4635)
!4659 = !DILocation(line: 1177, column: 6, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4635, file: !3, line: 1177, column: 6)
!4661 = !DILocation(line: 1177, column: 11, scope: !4660)
!4662 = !DILocation(line: 1177, column: 18, scope: !4660)
!4663 = !DILocation(line: 1177, column: 21, scope: !4660)
!4664 = !DILocation(line: 1177, column: 26, scope: !4660)
!4665 = !DILocation(line: 1177, column: 31, scope: !4660)
!4666 = !DILocation(line: 1177, column: 6, scope: !4635)
!4667 = !DILocalVariable(name: "ctime_scaled", scope: !4668, file: !3, line: 1178, type: !4669)
!4668 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 1177, column: 48)
!4669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !214)
!4670 = !DILocation(line: 1178, column: 15, scope: !4668)
!4671 = !DILocation(line: 1178, column: 30, scope: !4668)
!4672 = !DILocation(line: 1178, column: 35, scope: !4668)
!4673 = !DILocation(line: 1178, column: 41, scope: !4668)
!4674 = !DILocalVariable(name: "delta", scope: !4668, file: !3, line: 1179, type: !214)
!4675 = !DILocation(line: 1179, column: 9, scope: !4668)
!4676 = !DILocation(line: 1179, column: 24, scope: !4668)
!4677 = !DILocation(line: 1179, column: 29, scope: !4668)
!4678 = !DILocation(line: 1179, column: 17, scope: !4668)
!4679 = !DILocation(line: 1179, column: 38, scope: !4668)
!4680 = !DILocation(line: 1179, column: 36, scope: !4668)
!4681 = !DILocalVariable(name: "cfra", scope: !4668, file: !3, line: 1180, type: !214)
!4682 = !DILocation(line: 1180, column: 9, scope: !4668)
!4683 = !DILocation(line: 1180, column: 36, scope: !4668)
!4684 = !DILocation(line: 1180, column: 16, scope: !4668)
!4685 = !DILocalVariable(name: "step", scope: !4668, file: !3, line: 1181, type: !176)
!4686 = !DILocation(line: 1181, column: 7, scope: !4668)
!4687 = !DILocalVariable(name: "a", scope: !4668, file: !3, line: 1181, type: !176)
!4688 = !DILocation(line: 1181, column: 13, scope: !4668)
!4689 = !DILocation(line: 1183, column: 7, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4668, file: !3, line: 1183, column: 7)
!4691 = !DILocation(line: 1183, column: 11, scope: !4690)
!4692 = !DILocation(line: 1183, column: 17, scope: !4690)
!4693 = !DILocation(line: 1183, column: 20, scope: !4690)
!4694 = !DILocation(line: 1183, column: 7, scope: !4668)
!4695 = !DILocation(line: 1184, column: 11, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 1183, column: 32)
!4697 = !DILocation(line: 1184, column: 15, scope: !4696)
!4698 = !DILocation(line: 1184, column: 9, scope: !4696)
!4699 = !DILocation(line: 1185, column: 13, scope: !4696)
!4700 = !DILocation(line: 1185, column: 10, scope: !4696)
!4701 = !DILocation(line: 1187, column: 3, scope: !4696)
!4702 = !DILocation(line: 1189, column: 9, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 1188, column: 8)
!4704 = !DILocation(line: 1192, column: 10, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4668, file: !3, line: 1192, column: 3)
!4706 = !DILocation(line: 1192, column: 8, scope: !4705)
!4707 = !DILocation(line: 1192, column: 15, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 1192, column: 3)
!4709 = !DILocation(line: 1192, column: 19, scope: !4708)
!4710 = !DILocation(line: 1192, column: 17, scope: !4708)
!4711 = !DILocation(line: 1192, column: 3, scope: !4705)
!4712 = !DILocation(line: 1193, column: 19, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1192, column: 50)
!4714 = !DILocation(line: 1193, column: 34, scope: !4713)
!4715 = !DILocation(line: 1193, column: 39, scope: !4713)
!4716 = !DILocation(line: 1193, column: 46, scope: !4713)
!4717 = !DILocation(line: 1193, column: 49, scope: !4713)
!4718 = !DILocation(line: 1193, column: 11, scope: !4713)
!4719 = !DILocation(line: 1193, column: 9, scope: !4713)
!4720 = !DILocation(line: 1195, column: 8, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4713, file: !3, line: 1195, column: 8)
!4722 = !DILocation(line: 1195, column: 13, scope: !4721)
!4723 = !DILocation(line: 1195, column: 8, scope: !4713)
!4724 = !DILocation(line: 1196, column: 12, scope: !4721)
!4725 = !DILocation(line: 1196, column: 15, scope: !4721)
!4726 = !DILocation(line: 1196, column: 19, scope: !4721)
!4727 = !DILocation(line: 1196, column: 17, scope: !4721)
!4728 = !DILocation(line: 1196, column: 25, scope: !4721)
!4729 = !DILocation(line: 1196, column: 38, scope: !4721)
!4730 = !DILocation(line: 1196, column: 43, scope: !4721)
!4731 = !DILocation(line: 1196, column: 48, scope: !4721)
!4732 = !DILocation(line: 1196, column: 55, scope: !4721)
!4733 = !DILocation(line: 1196, column: 58, scope: !4721)
!4734 = !DILocation(line: 1196, column: 5, scope: !4721)
!4735 = !DILocation(line: 1198, column: 12, scope: !4721)
!4736 = !DILocation(line: 1198, column: 15, scope: !4721)
!4737 = !DILocation(line: 1198, column: 19, scope: !4721)
!4738 = !DILocation(line: 1198, column: 17, scope: !4721)
!4739 = !DILocation(line: 1198, column: 25, scope: !4721)
!4740 = !DILocation(line: 1198, column: 38, scope: !4721)
!4741 = !DILocation(line: 1198, column: 43, scope: !4721)
!4742 = !DILocation(line: 1198, column: 48, scope: !4721)
!4743 = !DILocation(line: 1198, column: 55, scope: !4721)
!4744 = !DILocation(line: 1198, column: 5, scope: !4721)
!4745 = !DILocation(line: 1199, column: 3, scope: !4713)
!4746 = !DILocation(line: 1192, column: 29, scope: !4708)
!4747 = !DILocation(line: 1192, column: 26, scope: !4708)
!4748 = !DILocation(line: 1192, column: 43, scope: !4708)
!4749 = !DILocation(line: 1192, column: 40, scope: !4708)
!4750 = !DILocation(line: 1192, column: 3, scope: !4708)
!4751 = distinct !{!4751, !4711, !4752}
!4752 = !DILocation(line: 1199, column: 3, scope: !4705)
!4753 = !DILocation(line: 1200, column: 2, scope: !4668)
!4754 = !DILocation(line: 1202, column: 7, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 1202, column: 7)
!4756 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 1201, column: 7)
!4757 = !DILocation(line: 1202, column: 12, scope: !4755)
!4758 = !DILocation(line: 1202, column: 17, scope: !4755)
!4759 = !DILocation(line: 1202, column: 7, scope: !4756)
!4760 = !DILocalVariable(name: "cache", scope: !4761, file: !3, line: 1203, type: !3725)
!4761 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 1202, column: 34)
!4762 = !DILocation(line: 1203, column: 22, scope: !4761)
!4763 = !DILocalVariable(name: "per_keyblock_weights", scope: !4761, file: !3, line: 1204, type: !2859)
!4764 = !DILocation(line: 1204, column: 12, scope: !4761)
!4765 = !DILocation(line: 1205, column: 62, scope: !4761)
!4766 = !DILocation(line: 1205, column: 66, scope: !4761)
!4767 = !DILocation(line: 1205, column: 27, scope: !4761)
!4768 = !DILocation(line: 1205, column: 25, scope: !4761)
!4769 = !DILocation(line: 1206, column: 33, scope: !4761)
!4770 = !DILocation(line: 1206, column: 38, scope: !4761)
!4771 = !DILocation(line: 1206, column: 51, scope: !4761)
!4772 = !DILocation(line: 1206, column: 56, scope: !4761)
!4773 = !DILocation(line: 1206, column: 61, scope: !4761)
!4774 = !DILocation(line: 1206, column: 68, scope: !4761)
!4775 = !DILocation(line: 1206, column: 4, scope: !4761)
!4776 = !DILocation(line: 1207, column: 40, scope: !4761)
!4777 = !DILocation(line: 1207, column: 45, scope: !4761)
!4778 = !DILocation(line: 1207, column: 4, scope: !4761)
!4779 = !DILocation(line: 1208, column: 3, scope: !4761)
!4780 = !DILocalVariable(name: "ctime_scaled", scope: !4781, file: !3, line: 1210, type: !4669)
!4781 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 1209, column: 8)
!4782 = !DILocation(line: 1210, column: 16, scope: !4781)
!4783 = !DILocation(line: 1210, column: 31, scope: !4781)
!4784 = !DILocation(line: 1210, column: 36, scope: !4781)
!4785 = !DILocation(line: 1210, column: 42, scope: !4781)
!4786 = !DILocation(line: 1212, column: 19, scope: !4781)
!4787 = !DILocation(line: 1212, column: 34, scope: !4781)
!4788 = !DILocation(line: 1212, column: 39, scope: !4781)
!4789 = !DILocation(line: 1212, column: 46, scope: !4781)
!4790 = !DILocation(line: 1212, column: 49, scope: !4781)
!4791 = !DILocation(line: 1212, column: 11, scope: !4781)
!4792 = !DILocation(line: 1212, column: 9, scope: !4781)
!4793 = !DILocation(line: 1214, column: 8, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 1214, column: 8)
!4795 = !DILocation(line: 1214, column: 13, scope: !4794)
!4796 = !DILocation(line: 1214, column: 8, scope: !4781)
!4797 = !DILocation(line: 1215, column: 15, scope: !4794)
!4798 = !DILocation(line: 1215, column: 20, scope: !4794)
!4799 = !DILocation(line: 1215, column: 33, scope: !4794)
!4800 = !DILocation(line: 1215, column: 38, scope: !4794)
!4801 = !DILocation(line: 1215, column: 43, scope: !4794)
!4802 = !DILocation(line: 1215, column: 50, scope: !4794)
!4803 = !DILocation(line: 1215, column: 53, scope: !4794)
!4804 = !DILocation(line: 1215, column: 5, scope: !4794)
!4805 = !DILocation(line: 1217, column: 15, scope: !4794)
!4806 = !DILocation(line: 1217, column: 20, scope: !4794)
!4807 = !DILocation(line: 1217, column: 33, scope: !4794)
!4808 = !DILocation(line: 1217, column: 38, scope: !4794)
!4809 = !DILocation(line: 1217, column: 43, scope: !4794)
!4810 = !DILocation(line: 1217, column: 50, scope: !4794)
!4811 = !DILocation(line: 1217, column: 5, scope: !4794)
!4812 = !DILocation(line: 1220, column: 1, scope: !4635)
!4813 = distinct !DISubprogram(name: "do_latt_key", scope: !3, file: !3, line: 1344, type: !4636, scopeLine: 1345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!4814 = !DILocalVariable(name: "scene", arg: 1, scope: !4813, file: !3, line: 1344, type: !4069)
!4815 = !DILocation(line: 1344, column: 32, scope: !4813)
!4816 = !DILocalVariable(name: "ob", arg: 2, scope: !4813, file: !3, line: 1344, type: !3722)
!4817 = !DILocation(line: 1344, column: 47, scope: !4813)
!4818 = !DILocalVariable(name: "key", arg: 3, scope: !4813, file: !3, line: 1344, type: !1952)
!4819 = !DILocation(line: 1344, column: 56, scope: !4813)
!4820 = !DILocalVariable(name: "out", arg: 4, scope: !4813, file: !3, line: 1344, type: !211)
!4821 = !DILocation(line: 1344, column: 67, scope: !4813)
!4822 = !DILocalVariable(name: "tot", arg: 5, scope: !4813, file: !3, line: 1344, type: !2858)
!4823 = !DILocation(line: 1344, column: 82, scope: !4813)
!4824 = !DILocalVariable(name: "lt", scope: !4813, file: !3, line: 1346, type: !1784)
!4825 = !DILocation(line: 1346, column: 11, scope: !4813)
!4826 = !DILocation(line: 1346, column: 16, scope: !4813)
!4827 = !DILocation(line: 1346, column: 20, scope: !4813)
!4828 = !DILocalVariable(name: "k", scope: !4813, file: !3, line: 1347, type: !4649)
!4829 = !DILocation(line: 1347, column: 12, scope: !4813)
!4830 = !DILocalVariable(name: "actkb", scope: !4813, file: !3, line: 1347, type: !313)
!4831 = !DILocation(line: 1347, column: 19, scope: !4813)
!4832 = !DILocation(line: 1347, column: 52, scope: !4813)
!4833 = !DILocation(line: 1347, column: 27, scope: !4813)
!4834 = !DILocalVariable(name: "t", scope: !4813, file: !3, line: 1348, type: !438)
!4835 = !DILocation(line: 1348, column: 8, scope: !4813)
!4836 = !DILocalVariable(name: "flag", scope: !4813, file: !3, line: 1349, type: !176)
!4837 = !DILocation(line: 1349, column: 6, scope: !4813)
!4838 = !DILocation(line: 1351, column: 6, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 1351, column: 6)
!4840 = !DILocation(line: 1351, column: 11, scope: !4839)
!4841 = !DILocation(line: 1351, column: 18, scope: !4839)
!4842 = !DILocation(line: 1351, column: 21, scope: !4839)
!4843 = !DILocation(line: 1351, column: 26, scope: !4839)
!4844 = !DILocation(line: 1351, column: 31, scope: !4839)
!4845 = !DILocation(line: 1351, column: 6, scope: !4813)
!4846 = !DILocalVariable(name: "ctime_scaled", scope: !4847, file: !3, line: 1352, type: !4669)
!4847 = distinct !DILexicalBlock(scope: !4839, file: !3, line: 1351, column: 48)
!4848 = !DILocation(line: 1352, column: 15, scope: !4847)
!4849 = !DILocation(line: 1352, column: 30, scope: !4847)
!4850 = !DILocation(line: 1352, column: 35, scope: !4847)
!4851 = !DILocation(line: 1352, column: 41, scope: !4847)
!4852 = !DILocalVariable(name: "delta", scope: !4847, file: !3, line: 1353, type: !214)
!4853 = !DILocation(line: 1353, column: 9, scope: !4847)
!4854 = !DILocation(line: 1353, column: 24, scope: !4847)
!4855 = !DILocation(line: 1353, column: 29, scope: !4847)
!4856 = !DILocation(line: 1353, column: 17, scope: !4847)
!4857 = !DILocation(line: 1353, column: 38, scope: !4847)
!4858 = !DILocation(line: 1353, column: 36, scope: !4847)
!4859 = !DILocalVariable(name: "cfra", scope: !4847, file: !3, line: 1354, type: !214)
!4860 = !DILocation(line: 1354, column: 9, scope: !4847)
!4861 = !DILocation(line: 1354, column: 36, scope: !4847)
!4862 = !DILocation(line: 1354, column: 16, scope: !4847)
!4863 = !DILocalVariable(name: "a", scope: !4847, file: !3, line: 1355, type: !176)
!4864 = !DILocation(line: 1355, column: 7, scope: !4847)
!4865 = !DILocation(line: 1357, column: 10, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 1357, column: 3)
!4867 = !DILocation(line: 1357, column: 8, scope: !4866)
!4868 = !DILocation(line: 1357, column: 15, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 1357, column: 3)
!4870 = !DILocation(line: 1357, column: 19, scope: !4869)
!4871 = !DILocation(line: 1357, column: 17, scope: !4869)
!4872 = !DILocation(line: 1357, column: 3, scope: !4866)
!4873 = !DILocation(line: 1358, column: 19, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 1357, column: 44)
!4875 = !DILocation(line: 1358, column: 34, scope: !4874)
!4876 = !DILocation(line: 1358, column: 39, scope: !4874)
!4877 = !DILocation(line: 1358, column: 46, scope: !4874)
!4878 = !DILocation(line: 1358, column: 49, scope: !4874)
!4879 = !DILocation(line: 1358, column: 11, scope: !4874)
!4880 = !DILocation(line: 1358, column: 9, scope: !4874)
!4881 = !DILocation(line: 1360, column: 8, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1360, column: 8)
!4883 = !DILocation(line: 1360, column: 13, scope: !4882)
!4884 = !DILocation(line: 1360, column: 8, scope: !4874)
!4885 = !DILocation(line: 1361, column: 12, scope: !4882)
!4886 = !DILocation(line: 1361, column: 15, scope: !4882)
!4887 = !DILocation(line: 1361, column: 17, scope: !4882)
!4888 = !DILocation(line: 1361, column: 22, scope: !4882)
!4889 = !DILocation(line: 1361, column: 27, scope: !4882)
!4890 = !DILocation(line: 1361, column: 32, scope: !4882)
!4891 = !DILocation(line: 1361, column: 37, scope: !4882)
!4892 = !DILocation(line: 1361, column: 44, scope: !4882)
!4893 = !DILocation(line: 1361, column: 47, scope: !4882)
!4894 = !DILocation(line: 1361, column: 5, scope: !4882)
!4895 = !DILocation(line: 1363, column: 12, scope: !4882)
!4896 = !DILocation(line: 1363, column: 15, scope: !4882)
!4897 = !DILocation(line: 1363, column: 17, scope: !4882)
!4898 = !DILocation(line: 1363, column: 22, scope: !4882)
!4899 = !DILocation(line: 1363, column: 27, scope: !4882)
!4900 = !DILocation(line: 1363, column: 32, scope: !4882)
!4901 = !DILocation(line: 1363, column: 37, scope: !4882)
!4902 = !DILocation(line: 1363, column: 44, scope: !4882)
!4903 = !DILocation(line: 1363, column: 5, scope: !4882)
!4904 = !DILocation(line: 1364, column: 3, scope: !4874)
!4905 = !DILocation(line: 1357, column: 25, scope: !4869)
!4906 = !DILocation(line: 1357, column: 37, scope: !4869)
!4907 = !DILocation(line: 1357, column: 34, scope: !4869)
!4908 = !DILocation(line: 1357, column: 3, scope: !4869)
!4909 = distinct !{!4909, !4872, !4910}
!4910 = !DILocation(line: 1364, column: 3, scope: !4866)
!4911 = !DILocation(line: 1365, column: 2, scope: !4847)
!4912 = !DILocation(line: 1367, column: 7, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 1367, column: 7)
!4914 = distinct !DILexicalBlock(scope: !4839, file: !3, line: 1366, column: 7)
!4915 = !DILocation(line: 1367, column: 12, scope: !4913)
!4916 = !DILocation(line: 1367, column: 17, scope: !4913)
!4917 = !DILocation(line: 1367, column: 7, scope: !4914)
!4918 = !DILocalVariable(name: "per_keyblock_weights", scope: !4919, file: !3, line: 1368, type: !2859)
!4919 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 1367, column: 34)
!4920 = !DILocation(line: 1368, column: 12, scope: !4919)
!4921 = !DILocation(line: 1369, column: 62, scope: !4919)
!4922 = !DILocation(line: 1369, column: 66, scope: !4919)
!4923 = !DILocation(line: 1369, column: 27, scope: !4919)
!4924 = !DILocation(line: 1369, column: 25, scope: !4919)
!4925 = !DILocation(line: 1370, column: 33, scope: !4919)
!4926 = !DILocation(line: 1370, column: 38, scope: !4919)
!4927 = !DILocation(line: 1370, column: 51, scope: !4919)
!4928 = !DILocation(line: 1370, column: 56, scope: !4919)
!4929 = !DILocation(line: 1370, column: 61, scope: !4919)
!4930 = !DILocation(line: 1370, column: 68, scope: !4919)
!4931 = !DILocation(line: 1370, column: 4, scope: !4919)
!4932 = !DILocation(line: 1371, column: 40, scope: !4919)
!4933 = !DILocation(line: 1371, column: 45, scope: !4919)
!4934 = !DILocation(line: 1371, column: 4, scope: !4919)
!4935 = !DILocation(line: 1372, column: 3, scope: !4919)
!4936 = !DILocalVariable(name: "ctime_scaled", scope: !4937, file: !3, line: 1374, type: !4669)
!4937 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 1373, column: 8)
!4938 = !DILocation(line: 1374, column: 16, scope: !4937)
!4939 = !DILocation(line: 1374, column: 31, scope: !4937)
!4940 = !DILocation(line: 1374, column: 36, scope: !4937)
!4941 = !DILocation(line: 1374, column: 42, scope: !4937)
!4942 = !DILocation(line: 1376, column: 19, scope: !4937)
!4943 = !DILocation(line: 1376, column: 34, scope: !4937)
!4944 = !DILocation(line: 1376, column: 39, scope: !4937)
!4945 = !DILocation(line: 1376, column: 46, scope: !4937)
!4946 = !DILocation(line: 1376, column: 49, scope: !4937)
!4947 = !DILocation(line: 1376, column: 11, scope: !4937)
!4948 = !DILocation(line: 1376, column: 9, scope: !4937)
!4949 = !DILocation(line: 1378, column: 8, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4937, file: !3, line: 1378, column: 8)
!4951 = !DILocation(line: 1378, column: 13, scope: !4950)
!4952 = !DILocation(line: 1378, column: 8, scope: !4937)
!4953 = !DILocation(line: 1379, column: 15, scope: !4950)
!4954 = !DILocation(line: 1379, column: 20, scope: !4950)
!4955 = !DILocation(line: 1379, column: 33, scope: !4950)
!4956 = !DILocation(line: 1379, column: 38, scope: !4950)
!4957 = !DILocation(line: 1379, column: 43, scope: !4950)
!4958 = !DILocation(line: 1379, column: 50, scope: !4950)
!4959 = !DILocation(line: 1379, column: 53, scope: !4950)
!4960 = !DILocation(line: 1379, column: 5, scope: !4950)
!4961 = !DILocation(line: 1381, column: 15, scope: !4950)
!4962 = !DILocation(line: 1381, column: 20, scope: !4950)
!4963 = !DILocation(line: 1381, column: 33, scope: !4950)
!4964 = !DILocation(line: 1381, column: 38, scope: !4950)
!4965 = !DILocation(line: 1381, column: 43, scope: !4950)
!4966 = !DILocation(line: 1381, column: 50, scope: !4950)
!4967 = !DILocation(line: 1381, column: 5, scope: !4950)
!4968 = !DILocation(line: 1385, column: 6, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 1385, column: 6)
!4970 = !DILocation(line: 1385, column: 10, scope: !4969)
!4971 = !DILocation(line: 1385, column: 15, scope: !4969)
!4972 = !DILocation(line: 1385, column: 6, scope: !4813)
!4973 = !DILocation(line: 1385, column: 45, scope: !4969)
!4974 = !DILocation(line: 1385, column: 29, scope: !4969)
!4975 = !DILocation(line: 1386, column: 1, scope: !4813)
!4976 = distinct !DISubprogram(name: "do_curve_key", scope: !3, file: !3, line: 1262, type: !4636, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!4977 = !DILocalVariable(name: "scene", arg: 1, scope: !4976, file: !3, line: 1262, type: !4069)
!4978 = !DILocation(line: 1262, column: 33, scope: !4976)
!4979 = !DILocalVariable(name: "ob", arg: 2, scope: !4976, file: !3, line: 1262, type: !3722)
!4980 = !DILocation(line: 1262, column: 48, scope: !4976)
!4981 = !DILocalVariable(name: "key", arg: 3, scope: !4976, file: !3, line: 1262, type: !1952)
!4982 = !DILocation(line: 1262, column: 57, scope: !4976)
!4983 = !DILocalVariable(name: "out", arg: 4, scope: !4976, file: !3, line: 1262, type: !211)
!4984 = !DILocation(line: 1262, column: 68, scope: !4976)
!4985 = !DILocalVariable(name: "tot", arg: 5, scope: !4976, file: !3, line: 1262, type: !2858)
!4986 = !DILocation(line: 1262, column: 83, scope: !4976)
!4987 = !DILocalVariable(name: "cu", scope: !4976, file: !3, line: 1264, type: !1834)
!4988 = !DILocation(line: 1264, column: 9, scope: !4976)
!4989 = !DILocation(line: 1264, column: 14, scope: !4976)
!4990 = !DILocation(line: 1264, column: 18, scope: !4976)
!4991 = !DILocalVariable(name: "k", scope: !4976, file: !3, line: 1265, type: !4649)
!4992 = !DILocation(line: 1265, column: 12, scope: !4976)
!4993 = !DILocalVariable(name: "actkb", scope: !4976, file: !3, line: 1265, type: !313)
!4994 = !DILocation(line: 1265, column: 19, scope: !4976)
!4995 = !DILocation(line: 1265, column: 52, scope: !4976)
!4996 = !DILocation(line: 1265, column: 27, scope: !4976)
!4997 = !DILocalVariable(name: "t", scope: !4976, file: !3, line: 1266, type: !438)
!4998 = !DILocation(line: 1266, column: 8, scope: !4976)
!4999 = !DILocalVariable(name: "flag", scope: !4976, file: !3, line: 1267, type: !176)
!5000 = !DILocation(line: 1267, column: 6, scope: !4976)
!5001 = !DILocation(line: 1269, column: 6, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4976, file: !3, line: 1269, column: 6)
!5003 = !DILocation(line: 1269, column: 11, scope: !5002)
!5004 = !DILocation(line: 1269, column: 18, scope: !5002)
!5005 = !DILocation(line: 1269, column: 21, scope: !5002)
!5006 = !DILocation(line: 1269, column: 26, scope: !5002)
!5007 = !DILocation(line: 1269, column: 31, scope: !5002)
!5008 = !DILocation(line: 1269, column: 6, scope: !4976)
!5009 = !DILocalVariable(name: "ctime_scaled", scope: !5010, file: !3, line: 1270, type: !4669)
!5010 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 1269, column: 48)
!5011 = !DILocation(line: 1270, column: 15, scope: !5010)
!5012 = !DILocation(line: 1270, column: 30, scope: !5010)
!5013 = !DILocation(line: 1270, column: 35, scope: !5010)
!5014 = !DILocation(line: 1270, column: 41, scope: !5010)
!5015 = !DILocalVariable(name: "delta", scope: !5010, file: !3, line: 1271, type: !214)
!5016 = !DILocation(line: 1271, column: 9, scope: !5010)
!5017 = !DILocation(line: 1271, column: 24, scope: !5010)
!5018 = !DILocation(line: 1271, column: 29, scope: !5010)
!5019 = !DILocation(line: 1271, column: 17, scope: !5010)
!5020 = !DILocation(line: 1271, column: 38, scope: !5010)
!5021 = !DILocation(line: 1271, column: 36, scope: !5010)
!5022 = !DILocalVariable(name: "cfra", scope: !5010, file: !3, line: 1272, type: !214)
!5023 = !DILocation(line: 1272, column: 9, scope: !5010)
!5024 = !DILocation(line: 1272, column: 36, scope: !5010)
!5025 = !DILocation(line: 1272, column: 16, scope: !5010)
!5026 = !DILocalVariable(name: "nu", scope: !5010, file: !3, line: 1273, type: !4157)
!5027 = !DILocation(line: 1273, column: 9, scope: !5010)
!5028 = !DILocalVariable(name: "i", scope: !5010, file: !3, line: 1274, type: !176)
!5029 = !DILocation(line: 1274, column: 7, scope: !5010)
!5030 = !DILocalVariable(name: "remain", scope: !5010, file: !3, line: 1274, type: !176)
!5031 = !DILocation(line: 1274, column: 14, scope: !5010)
!5032 = !DILocalVariable(name: "step", scope: !5010, file: !3, line: 1275, type: !176)
!5033 = !DILocation(line: 1275, column: 7, scope: !5010)
!5034 = !DILocalVariable(name: "a", scope: !5010, file: !3, line: 1275, type: !176)
!5035 = !DILocation(line: 1275, column: 13, scope: !5010)
!5036 = !DILocation(line: 1277, column: 7, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 1277, column: 7)
!5038 = !DILocation(line: 1277, column: 11, scope: !5037)
!5039 = !DILocation(line: 1277, column: 17, scope: !5037)
!5040 = !DILocation(line: 1277, column: 20, scope: !5037)
!5041 = !DILocation(line: 1277, column: 7, scope: !5010)
!5042 = !DILocation(line: 1278, column: 11, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 1277, column: 32)
!5044 = !DILocation(line: 1278, column: 15, scope: !5043)
!5045 = !DILocation(line: 1278, column: 9, scope: !5043)
!5046 = !DILocation(line: 1279, column: 13, scope: !5043)
!5047 = !DILocation(line: 1279, column: 10, scope: !5043)
!5048 = !DILocation(line: 1281, column: 3, scope: !5043)
!5049 = !DILocation(line: 1283, column: 9, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 1282, column: 8)
!5051 = !DILocation(line: 1286, column: 13, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 1286, column: 3)
!5053 = !DILocation(line: 1286, column: 17, scope: !5052)
!5054 = !DILocation(line: 1286, column: 22, scope: !5052)
!5055 = !DILocation(line: 1286, column: 11, scope: !5052)
!5056 = !DILocation(line: 1286, column: 8, scope: !5052)
!5057 = !DILocation(line: 1286, column: 29, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5052, file: !3, line: 1286, column: 3)
!5059 = !DILocation(line: 1286, column: 3, scope: !5052)
!5060 = !DILocalVariable(name: "estep", scope: !5061, file: !3, line: 1287, type: !176)
!5061 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 1286, column: 48)
!5062 = !DILocation(line: 1287, column: 8, scope: !5061)
!5063 = !DILocalVariable(name: "mode", scope: !5061, file: !3, line: 1287, type: !176)
!5064 = !DILocation(line: 1287, column: 15, scope: !5061)
!5065 = !DILocation(line: 1289, column: 8, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 1289, column: 8)
!5067 = !DILocation(line: 1289, column: 12, scope: !5066)
!5068 = !DILocation(line: 1289, column: 8, scope: !5061)
!5069 = !DILocation(line: 1290, column: 10, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5066, file: !3, line: 1289, column: 16)
!5071 = !DILocation(line: 1291, column: 13, scope: !5070)
!5072 = !DILocation(line: 1291, column: 17, scope: !5070)
!5073 = !DILocation(line: 1291, column: 25, scope: !5070)
!5074 = !DILocation(line: 1291, column: 29, scope: !5070)
!5075 = !DILocation(line: 1291, column: 23, scope: !5070)
!5076 = !DILocation(line: 1291, column: 11, scope: !5070)
!5077 = !DILocation(line: 1292, column: 4, scope: !5070)
!5078 = !DILocation(line: 1293, column: 13, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5066, file: !3, line: 1293, column: 13)
!5080 = !DILocation(line: 1293, column: 17, scope: !5079)
!5081 = !DILocation(line: 1293, column: 13, scope: !5066)
!5082 = !DILocation(line: 1294, column: 10, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5079, file: !3, line: 1293, column: 23)
!5084 = !DILocation(line: 1295, column: 17, scope: !5083)
!5085 = !DILocation(line: 1295, column: 21, scope: !5083)
!5086 = !DILocation(line: 1295, column: 15, scope: !5083)
!5087 = !DILocation(line: 1295, column: 11, scope: !5083)
!5088 = !DILocation(line: 1296, column: 4, scope: !5083)
!5089 = !DILocation(line: 1298, column: 10, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5079, file: !3, line: 1297, column: 9)
!5091 = !DILocation(line: 1299, column: 11, scope: !5090)
!5092 = !DILocation(line: 1302, column: 6, scope: !5061)
!5093 = !DILocation(line: 1303, column: 4, scope: !5061)
!5094 = !DILocation(line: 1303, column: 11, scope: !5061)
!5095 = !DILocation(line: 1303, column: 15, scope: !5061)
!5096 = !DILocation(line: 1303, column: 13, scope: !5061)
!5097 = !DILocalVariable(name: "count", scope: !5098, file: !3, line: 1304, type: !176)
!5098 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 1303, column: 22)
!5099 = !DILocation(line: 1304, column: 9, scope: !5098)
!5100 = !DILocation(line: 1306, column: 9, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 1306, column: 9)
!5102 = !DILocation(line: 1306, column: 16, scope: !5101)
!5103 = !DILocation(line: 1306, column: 9, scope: !5098)
!5104 = !DILocation(line: 1307, column: 14, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 1306, column: 22)
!5106 = !DILocation(line: 1307, column: 11, scope: !5105)
!5107 = !DILocation(line: 1308, column: 21, scope: !5105)
!5108 = !DILocation(line: 1308, column: 36, scope: !5105)
!5109 = !DILocation(line: 1308, column: 41, scope: !5105)
!5110 = !DILocation(line: 1308, column: 48, scope: !5105)
!5111 = !DILocation(line: 1308, column: 51, scope: !5105)
!5112 = !DILocation(line: 1308, column: 13, scope: !5105)
!5113 = !DILocation(line: 1308, column: 11, scope: !5105)
!5114 = !DILocation(line: 1310, column: 15, scope: !5105)
!5115 = !DILocation(line: 1310, column: 13, scope: !5105)
!5116 = !DILocation(line: 1311, column: 5, scope: !5105)
!5117 = !DILocation(line: 1313, column: 20, scope: !5098)
!5118 = !DILocation(line: 1313, column: 28, scope: !5098)
!5119 = !DILocation(line: 1313, column: 13, scope: !5098)
!5120 = !DILocation(line: 1313, column: 11, scope: !5098)
!5121 = !DILocation(line: 1314, column: 9, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 1314, column: 9)
!5123 = !DILocation(line: 1314, column: 14, scope: !5122)
!5124 = !DILocation(line: 1314, column: 9, scope: !5098)
!5125 = !DILocation(line: 1315, column: 19, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 1314, column: 37)
!5127 = !DILocation(line: 1315, column: 25, scope: !5126)
!5128 = !DILocation(line: 1315, column: 17, scope: !5126)
!5129 = !DILocation(line: 1315, column: 12, scope: !5126)
!5130 = !DILocation(line: 1316, column: 5, scope: !5126)
!5131 = !DILocation(line: 1318, column: 9, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 1318, column: 9)
!5133 = !DILocation(line: 1318, column: 14, scope: !5132)
!5134 = !DILocation(line: 1318, column: 9, scope: !5098)
!5135 = !DILocation(line: 1319, column: 13, scope: !5132)
!5136 = !DILocation(line: 1319, column: 16, scope: !5132)
!5137 = !DILocation(line: 1319, column: 20, scope: !5132)
!5138 = !DILocation(line: 1319, column: 18, scope: !5132)
!5139 = !DILocation(line: 1319, column: 27, scope: !5132)
!5140 = !DILocation(line: 1319, column: 40, scope: !5132)
!5141 = !DILocation(line: 1319, column: 45, scope: !5132)
!5142 = !DILocation(line: 1319, column: 50, scope: !5132)
!5143 = !DILocation(line: 1319, column: 57, scope: !5132)
!5144 = !DILocation(line: 1319, column: 60, scope: !5132)
!5145 = !DILocation(line: 1319, column: 63, scope: !5132)
!5146 = !DILocation(line: 1319, column: 6, scope: !5132)
!5147 = !DILocation(line: 1321, column: 13, scope: !5132)
!5148 = !DILocation(line: 1321, column: 16, scope: !5132)
!5149 = !DILocation(line: 1321, column: 20, scope: !5132)
!5150 = !DILocation(line: 1321, column: 18, scope: !5132)
!5151 = !DILocation(line: 1321, column: 27, scope: !5132)
!5152 = !DILocation(line: 1321, column: 40, scope: !5132)
!5153 = !DILocation(line: 1321, column: 45, scope: !5132)
!5154 = !DILocation(line: 1321, column: 50, scope: !5132)
!5155 = !DILocation(line: 1321, column: 57, scope: !5132)
!5156 = !DILocation(line: 1321, column: 69, scope: !5132)
!5157 = !DILocation(line: 1321, column: 6, scope: !5132)
!5158 = !DILocation(line: 1323, column: 10, scope: !5098)
!5159 = !DILocation(line: 1323, column: 7, scope: !5098)
!5160 = !DILocation(line: 1324, column: 10, scope: !5098)
!5161 = !DILocation(line: 1324, column: 7, scope: !5098)
!5162 = !DILocation(line: 1325, column: 15, scope: !5098)
!5163 = !DILocation(line: 1325, column: 12, scope: !5098)
!5164 = distinct !{!5164, !5093, !5165}
!5165 = !DILocation(line: 1326, column: 4, scope: !5061)
!5166 = !DILocation(line: 1327, column: 3, scope: !5061)
!5167 = !DILocation(line: 1286, column: 38, scope: !5058)
!5168 = !DILocation(line: 1286, column: 42, scope: !5058)
!5169 = !DILocation(line: 1286, column: 36, scope: !5058)
!5170 = !DILocation(line: 1286, column: 3, scope: !5058)
!5171 = distinct !{!5171, !5059, !5172}
!5172 = !DILocation(line: 1327, column: 3, scope: !5052)
!5173 = !DILocation(line: 1328, column: 2, scope: !5010)
!5174 = !DILocation(line: 1330, column: 7, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 1330, column: 7)
!5176 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 1329, column: 7)
!5177 = !DILocation(line: 1330, column: 12, scope: !5175)
!5178 = !DILocation(line: 1330, column: 17, scope: !5175)
!5179 = !DILocation(line: 1330, column: 7, scope: !5176)
!5180 = !DILocation(line: 1331, column: 18, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5175, file: !3, line: 1330, column: 34)
!5182 = !DILocation(line: 1331, column: 22, scope: !5181)
!5183 = !DILocation(line: 1331, column: 26, scope: !5181)
!5184 = !DILocation(line: 1331, column: 31, scope: !5181)
!5185 = !DILocation(line: 1331, column: 38, scope: !5181)
!5186 = !DILocation(line: 1331, column: 43, scope: !5181)
!5187 = !DILocation(line: 1331, column: 4, scope: !5181)
!5188 = !DILocation(line: 1332, column: 3, scope: !5181)
!5189 = !DILocalVariable(name: "ctime_scaled", scope: !5190, file: !3, line: 1334, type: !4669)
!5190 = distinct !DILexicalBlock(scope: !5175, file: !3, line: 1333, column: 8)
!5191 = !DILocation(line: 1334, column: 16, scope: !5190)
!5192 = !DILocation(line: 1334, column: 31, scope: !5190)
!5193 = !DILocation(line: 1334, column: 36, scope: !5190)
!5194 = !DILocation(line: 1334, column: 42, scope: !5190)
!5195 = !DILocation(line: 1336, column: 19, scope: !5190)
!5196 = !DILocation(line: 1336, column: 34, scope: !5190)
!5197 = !DILocation(line: 1336, column: 39, scope: !5190)
!5198 = !DILocation(line: 1336, column: 46, scope: !5190)
!5199 = !DILocation(line: 1336, column: 49, scope: !5190)
!5200 = !DILocation(line: 1336, column: 11, scope: !5190)
!5201 = !DILocation(line: 1336, column: 9, scope: !5190)
!5202 = !DILocation(line: 1338, column: 8, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 1338, column: 8)
!5204 = !DILocation(line: 1338, column: 13, scope: !5203)
!5205 = !DILocation(line: 1338, column: 8, scope: !5190)
!5206 = !DILocation(line: 1338, column: 29, scope: !5203)
!5207 = !DILocation(line: 1338, column: 33, scope: !5203)
!5208 = !DILocation(line: 1338, column: 38, scope: !5203)
!5209 = !DILocation(line: 1338, column: 45, scope: !5203)
!5210 = !DILocation(line: 1338, column: 48, scope: !5203)
!5211 = !DILocation(line: 1338, column: 51, scope: !5203)
!5212 = !DILocation(line: 1338, column: 56, scope: !5203)
!5213 = !DILocation(line: 1338, column: 19, scope: !5203)
!5214 = !DILocation(line: 1339, column: 19, scope: !5203)
!5215 = !DILocation(line: 1339, column: 23, scope: !5203)
!5216 = !DILocation(line: 1339, column: 28, scope: !5203)
!5217 = !DILocation(line: 1339, column: 35, scope: !5203)
!5218 = !DILocation(line: 1339, column: 44, scope: !5203)
!5219 = !DILocation(line: 1339, column: 49, scope: !5203)
!5220 = !DILocation(line: 1339, column: 54, scope: !5203)
!5221 = !DILocation(line: 1339, column: 9, scope: !5203)
!5222 = !DILocation(line: 1342, column: 1, scope: !4976)
!5223 = distinct !DISubprogram(name: "BKE_key_evaluate_object", scope: !3, file: !3, line: 1484, type: !5224, scopeLine: 1485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!5224 = !DISubroutineType(types: !5225)
!5225 = !{!213, !4069, !3722, !2879}
!5226 = !DILocalVariable(name: "scene", arg: 1, scope: !5223, file: !3, line: 1484, type: !4069)
!5227 = !DILocation(line: 1484, column: 39, scope: !5223)
!5228 = !DILocalVariable(name: "ob", arg: 2, scope: !5223, file: !3, line: 1484, type: !3722)
!5229 = !DILocation(line: 1484, column: 54, scope: !5223)
!5230 = !DILocalVariable(name: "r_totelem", arg: 3, scope: !5223, file: !3, line: 1484, type: !2879)
!5231 = !DILocation(line: 1484, column: 63, scope: !5223)
!5232 = !DILocation(line: 1486, column: 36, scope: !5223)
!5233 = !DILocation(line: 1486, column: 43, scope: !5223)
!5234 = !DILocation(line: 1486, column: 47, scope: !5223)
!5235 = !DILocation(line: 1486, column: 9, scope: !5223)
!5236 = !DILocation(line: 1486, column: 2, scope: !5223)
!5237 = distinct !DISubprogram(name: "BKE_keyblock_add", scope: !3, file: !3, line: 1508, type: !5238, scopeLine: 1509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!5238 = !DISubroutineType(types: !5239)
!5239 = !{!318, !1952, !675}
!5240 = !DILocalVariable(name: "key", arg: 1, scope: !5237, file: !3, line: 1508, type: !1952)
!5241 = !DILocation(line: 1508, column: 33, scope: !5237)
!5242 = !DILocalVariable(name: "name", arg: 2, scope: !5237, file: !3, line: 1508, type: !675)
!5243 = !DILocation(line: 1508, column: 50, scope: !5237)
!5244 = !DILocalVariable(name: "kb", scope: !5237, file: !3, line: 1510, type: !313)
!5245 = !DILocation(line: 1510, column: 12, scope: !5237)
!5246 = !DILocalVariable(name: "curpos", scope: !5237, file: !3, line: 1511, type: !214)
!5247 = !DILocation(line: 1511, column: 8, scope: !5237)
!5248 = !DILocalVariable(name: "tot", scope: !5237, file: !3, line: 1512, type: !176)
!5249 = !DILocation(line: 1512, column: 6, scope: !5237)
!5250 = !DILocation(line: 1514, column: 7, scope: !5237)
!5251 = !DILocation(line: 1514, column: 12, scope: !5237)
!5252 = !DILocation(line: 1514, column: 18, scope: !5237)
!5253 = !DILocation(line: 1514, column: 5, scope: !5237)
!5254 = !DILocation(line: 1515, column: 6, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 1515, column: 6)
!5256 = !DILocation(line: 1515, column: 6, scope: !5237)
!5257 = !DILocation(line: 1515, column: 19, scope: !5255)
!5258 = !DILocation(line: 1515, column: 23, scope: !5255)
!5259 = !DILocation(line: 1515, column: 17, scope: !5255)
!5260 = !DILocation(line: 1515, column: 10, scope: !5255)
!5261 = !DILocation(line: 1517, column: 7, scope: !5237)
!5262 = !DILocation(line: 1517, column: 5, scope: !5237)
!5263 = !DILocation(line: 1518, column: 15, scope: !5237)
!5264 = !DILocation(line: 1518, column: 20, scope: !5237)
!5265 = !DILocation(line: 1518, column: 27, scope: !5237)
!5266 = !DILocation(line: 1518, column: 2, scope: !5237)
!5267 = !DILocation(line: 1519, column: 2, scope: !5237)
!5268 = !DILocation(line: 1519, column: 6, scope: !5237)
!5269 = !DILocation(line: 1519, column: 11, scope: !5237)
!5270 = !DILocation(line: 1521, column: 23, scope: !5237)
!5271 = !DILocation(line: 1521, column: 28, scope: !5237)
!5272 = !DILocation(line: 1521, column: 8, scope: !5237)
!5273 = !DILocation(line: 1521, column: 6, scope: !5237)
!5274 = !DILocation(line: 1522, column: 6, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 1522, column: 6)
!5276 = !DILocation(line: 1522, column: 6, scope: !5237)
!5277 = !DILocation(line: 1523, column: 15, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 1522, column: 12)
!5279 = !DILocation(line: 1523, column: 19, scope: !5278)
!5280 = !DILocation(line: 1523, column: 25, scope: !5278)
!5281 = !DILocation(line: 1523, column: 3, scope: !5278)
!5282 = !DILocation(line: 1524, column: 2, scope: !5278)
!5283 = !DILocation(line: 1526, column: 7, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5285, file: !3, line: 1526, column: 7)
!5285 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 1525, column: 7)
!5286 = !DILocation(line: 1526, column: 11, scope: !5284)
!5287 = !DILocation(line: 1526, column: 7, scope: !5285)
!5288 = !DILocation(line: 1527, column: 16, scope: !5284)
!5289 = !DILocation(line: 1527, column: 20, scope: !5284)
!5290 = !DILocation(line: 1527, column: 4, scope: !5284)
!5291 = !DILocation(line: 1529, column: 17, scope: !5284)
!5292 = !DILocation(line: 1529, column: 21, scope: !5284)
!5293 = !DILocation(line: 1529, column: 62, scope: !5284)
!5294 = !DILocation(line: 1529, column: 66, scope: !5284)
!5295 = !DILocation(line: 1529, column: 4, scope: !5284)
!5296 = !DILocation(line: 1532, column: 18, scope: !5237)
!5297 = !DILocation(line: 1532, column: 23, scope: !5237)
!5298 = !DILocation(line: 1532, column: 30, scope: !5237)
!5299 = !DILocation(line: 1532, column: 2, scope: !5237)
!5300 = !DILocation(line: 1534, column: 12, scope: !5237)
!5301 = !DILocation(line: 1534, column: 17, scope: !5237)
!5302 = !DILocation(line: 1534, column: 23, scope: !5237)
!5303 = !DILocation(line: 1534, column: 2, scope: !5237)
!5304 = !DILocation(line: 1534, column: 6, scope: !5237)
!5305 = !DILocation(line: 1534, column: 10, scope: !5237)
!5306 = !DILocation(line: 1536, column: 2, scope: !5237)
!5307 = !DILocation(line: 1536, column: 7, scope: !5237)
!5308 = !DILocation(line: 1536, column: 13, scope: !5237)
!5309 = !DILocation(line: 1537, column: 6, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 1537, column: 6)
!5311 = !DILocation(line: 1537, column: 11, scope: !5310)
!5312 = !DILocation(line: 1537, column: 18, scope: !5310)
!5313 = !DILocation(line: 1537, column: 6, scope: !5237)
!5314 = !DILocation(line: 1537, column: 38, scope: !5310)
!5315 = !DILocation(line: 1537, column: 24, scope: !5310)
!5316 = !DILocation(line: 1537, column: 29, scope: !5310)
!5317 = !DILocation(line: 1537, column: 36, scope: !5310)
!5318 = !DILocation(line: 1539, column: 2, scope: !5237)
!5319 = !DILocation(line: 1539, column: 6, scope: !5237)
!5320 = !DILocation(line: 1539, column: 16, scope: !5237)
!5321 = !DILocation(line: 1540, column: 2, scope: !5237)
!5322 = !DILocation(line: 1540, column: 6, scope: !5237)
!5323 = !DILocation(line: 1540, column: 16, scope: !5237)
!5324 = !DILocation(line: 1545, column: 12, scope: !5237)
!5325 = !DILocation(line: 1545, column: 19, scope: !5237)
!5326 = !DILocation(line: 1545, column: 2, scope: !5237)
!5327 = !DILocation(line: 1545, column: 6, scope: !5237)
!5328 = !DILocation(line: 1545, column: 10, scope: !5237)
!5329 = !DILocation(line: 1547, column: 9, scope: !5237)
!5330 = !DILocation(line: 1547, column: 2, scope: !5237)
!5331 = distinct !DISubprogram(name: "BKE_keyblock_add_ctime", scope: !3, file: !3, line: 1558, type: !5332, scopeLine: 1559, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!5332 = !DISubroutineType(types: !5333)
!5333 = !{!318, !1952, !675, !5334}
!5334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !785)
!5335 = !DILocalVariable(name: "key", arg: 1, scope: !5331, file: !3, line: 1558, type: !1952)
!5336 = !DILocation(line: 1558, column: 39, scope: !5331)
!5337 = !DILocalVariable(name: "name", arg: 2, scope: !5331, file: !3, line: 1558, type: !675)
!5338 = !DILocation(line: 1558, column: 56, scope: !5331)
!5339 = !DILocalVariable(name: "do_force", arg: 3, scope: !5331, file: !3, line: 1558, type: !5334)
!5340 = !DILocation(line: 1558, column: 73, scope: !5331)
!5341 = !DILocalVariable(name: "kb", scope: !5331, file: !3, line: 1560, type: !313)
!5342 = !DILocation(line: 1560, column: 12, scope: !5331)
!5343 = !DILocation(line: 1560, column: 34, scope: !5331)
!5344 = !DILocation(line: 1560, column: 39, scope: !5331)
!5345 = !DILocation(line: 1560, column: 17, scope: !5331)
!5346 = !DILocalVariable(name: "cpos", scope: !5331, file: !3, line: 1561, type: !4669)
!5347 = !DILocation(line: 1561, column: 14, scope: !5331)
!5348 = !DILocation(line: 1561, column: 21, scope: !5331)
!5349 = !DILocation(line: 1561, column: 26, scope: !5331)
!5350 = !DILocation(line: 1561, column: 32, scope: !5331)
!5351 = !DILocation(line: 1568, column: 7, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 1568, column: 6)
!5353 = !DILocation(line: 1568, column: 16, scope: !5352)
!5354 = !DILocation(line: 1568, column: 20, scope: !5352)
!5355 = !DILocation(line: 1568, column: 25, scope: !5352)
!5356 = !DILocation(line: 1568, column: 30, scope: !5352)
!5357 = !DILocation(line: 1568, column: 6, scope: !5331)
!5358 = !DILocalVariable(name: "it_kb", scope: !5359, file: !3, line: 1569, type: !313)
!5359 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 1568, column: 48)
!5360 = !DILocation(line: 1569, column: 13, scope: !5359)
!5361 = !DILocation(line: 1570, column: 16, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5359, file: !3, line: 1570, column: 3)
!5363 = !DILocation(line: 1570, column: 21, scope: !5362)
!5364 = !DILocation(line: 1570, column: 27, scope: !5362)
!5365 = !DILocation(line: 1570, column: 14, scope: !5362)
!5366 = !DILocation(line: 1570, column: 8, scope: !5362)
!5367 = !DILocation(line: 1570, column: 34, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 1570, column: 3)
!5369 = !DILocation(line: 1570, column: 3, scope: !5362)
!5370 = !DILocation(line: 1571, column: 8, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5372, file: !3, line: 1571, column: 8)
!5372 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 1570, column: 62)
!5373 = !DILocation(line: 1571, column: 15, scope: !5371)
!5374 = !DILocation(line: 1571, column: 22, scope: !5371)
!5375 = !DILocation(line: 1571, column: 19, scope: !5371)
!5376 = !DILocation(line: 1571, column: 8, scope: !5372)
!5377 = !DILocation(line: 1572, column: 12, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1571, column: 28)
!5379 = !DILocation(line: 1572, column: 5, scope: !5378)
!5380 = !DILocation(line: 1574, column: 3, scope: !5372)
!5381 = !DILocation(line: 1570, column: 49, scope: !5368)
!5382 = !DILocation(line: 1570, column: 56, scope: !5368)
!5383 = !DILocation(line: 1570, column: 47, scope: !5368)
!5384 = !DILocation(line: 1570, column: 3, scope: !5368)
!5385 = distinct !{!5385, !5369, !5386}
!5386 = !DILocation(line: 1574, column: 3, scope: !5362)
!5387 = !DILocation(line: 1575, column: 2, scope: !5359)
!5388 = !DILocation(line: 1576, column: 6, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 1576, column: 6)
!5390 = !DILocation(line: 1576, column: 15, scope: !5389)
!5391 = !DILocation(line: 1576, column: 19, scope: !5389)
!5392 = !DILocation(line: 1576, column: 24, scope: !5389)
!5393 = !DILocation(line: 1576, column: 29, scope: !5389)
!5394 = !DILocation(line: 1576, column: 6, scope: !5331)
!5395 = !DILocation(line: 1577, column: 13, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 1576, column: 47)
!5397 = !DILocation(line: 1577, column: 3, scope: !5396)
!5398 = !DILocation(line: 1577, column: 7, scope: !5396)
!5399 = !DILocation(line: 1577, column: 11, scope: !5396)
!5400 = !DILocation(line: 1578, column: 16, scope: !5396)
!5401 = !DILocation(line: 1578, column: 3, scope: !5396)
!5402 = !DILocation(line: 1579, column: 2, scope: !5396)
!5403 = !DILocation(line: 1581, column: 9, scope: !5331)
!5404 = !DILocation(line: 1581, column: 2, scope: !5331)
!5405 = !DILocation(line: 1582, column: 1, scope: !5331)
!5406 = distinct !DISubprogram(name: "BKE_keyblock_from_object_reference", scope: !3, file: !3, line: 1597, type: !4478, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!5407 = !DILocalVariable(name: "ob", arg: 1, scope: !5406, file: !3, line: 1597, type: !3722)
!5408 = !DILocation(line: 1597, column: 54, scope: !5406)
!5409 = !DILocalVariable(name: "key", scope: !5406, file: !3, line: 1599, type: !1952)
!5410 = !DILocation(line: 1599, column: 7, scope: !5406)
!5411 = !DILocation(line: 1599, column: 33, scope: !5406)
!5412 = !DILocation(line: 1599, column: 13, scope: !5406)
!5413 = !DILocation(line: 1601, column: 6, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 1601, column: 6)
!5415 = !DILocation(line: 1601, column: 6, scope: !5406)
!5416 = !DILocation(line: 1602, column: 10, scope: !5414)
!5417 = !DILocation(line: 1602, column: 15, scope: !5414)
!5418 = !DILocation(line: 1602, column: 3, scope: !5414)
!5419 = !DILocation(line: 1604, column: 2, scope: !5406)
!5420 = !DILocation(line: 1605, column: 1, scope: !5406)
!5421 = distinct !DISubprogram(name: "BKE_keyblock_from_key", scope: !3, file: !3, line: 1608, type: !5422, scopeLine: 1609, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!5422 = !DISubroutineType(types: !5423)
!5423 = !{!318, !1952, !176}
!5424 = !DILocalVariable(name: "key", arg: 1, scope: !5421, file: !3, line: 1608, type: !1952)
!5425 = !DILocation(line: 1608, column: 38, scope: !5421)
!5426 = !DILocalVariable(name: "index", arg: 2, scope: !5421, file: !3, line: 1608, type: !176)
!5427 = !DILocation(line: 1608, column: 47, scope: !5421)
!5428 = !DILocalVariable(name: "kb", scope: !5421, file: !3, line: 1610, type: !313)
!5429 = !DILocation(line: 1610, column: 12, scope: !5421)
!5430 = !DILocalVariable(name: "i", scope: !5421, file: !3, line: 1611, type: !176)
!5431 = !DILocation(line: 1611, column: 6, scope: !5421)
!5432 = !DILocation(line: 1613, column: 6, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 1613, column: 6)
!5434 = !DILocation(line: 1613, column: 6, scope: !5421)
!5435 = !DILocation(line: 1614, column: 8, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 1613, column: 11)
!5437 = !DILocation(line: 1614, column: 13, scope: !5436)
!5438 = !DILocation(line: 1614, column: 19, scope: !5436)
!5439 = !DILocation(line: 1614, column: 6, scope: !5436)
!5440 = !DILocation(line: 1616, column: 10, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 1616, column: 3)
!5442 = !DILocation(line: 1616, column: 8, scope: !5441)
!5443 = !DILocation(line: 1616, column: 15, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 1616, column: 3)
!5445 = !DILocation(line: 1616, column: 19, scope: !5444)
!5446 = !DILocation(line: 1616, column: 24, scope: !5444)
!5447 = !DILocation(line: 1616, column: 17, scope: !5444)
!5448 = !DILocation(line: 1616, column: 3, scope: !5441)
!5449 = !DILocation(line: 1617, column: 9, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5444, file: !3, line: 1616, column: 37)
!5451 = !DILocation(line: 1617, column: 13, scope: !5450)
!5452 = !DILocation(line: 1617, column: 7, scope: !5450)
!5453 = !DILocation(line: 1619, column: 8, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 1619, column: 8)
!5455 = !DILocation(line: 1619, column: 17, scope: !5454)
!5456 = !DILocation(line: 1619, column: 14, scope: !5454)
!5457 = !DILocation(line: 1619, column: 8, scope: !5450)
!5458 = !DILocation(line: 1620, column: 12, scope: !5454)
!5459 = !DILocation(line: 1620, column: 5, scope: !5454)
!5460 = !DILocation(line: 1621, column: 3, scope: !5450)
!5461 = !DILocation(line: 1616, column: 33, scope: !5444)
!5462 = !DILocation(line: 1616, column: 3, scope: !5444)
!5463 = distinct !{!5463, !5448, !5464}
!5464 = !DILocation(line: 1621, column: 3, scope: !5441)
!5465 = !DILocation(line: 1622, column: 2, scope: !5436)
!5466 = !DILocation(line: 1624, column: 2, scope: !5421)
!5467 = !DILocation(line: 1625, column: 1, scope: !5421)
!5468 = distinct !DISubprogram(name: "BKE_keyblock_find_name", scope: !3, file: !3, line: 1628, type: !5238, scopeLine: 1629, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!5469 = !DILocalVariable(name: "key", arg: 1, scope: !5468, file: !3, line: 1628, type: !1952)
!5470 = !DILocation(line: 1628, column: 39, scope: !5468)
!5471 = !DILocalVariable(name: "name", arg: 2, scope: !5468, file: !3, line: 1628, type: !675)
!5472 = !DILocation(line: 1628, column: 55, scope: !5468)
!5473 = !DILocation(line: 1630, column: 25, scope: !5468)
!5474 = !DILocation(line: 1630, column: 30, scope: !5468)
!5475 = !DILocation(line: 1630, column: 37, scope: !5468)
!5476 = !DILocation(line: 1630, column: 9, scope: !5468)
!5477 = !DILocation(line: 1630, column: 2, scope: !5468)
!5478 = distinct !DISubprogram(name: "BKE_keyblock_copy_settings", scope: !3, file: !3, line: 1636, type: !5479, scopeLine: 1637, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!5479 = !DISubroutineType(types: !5480)
!5480 = !{null, !313, !5481}
!5481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5482, size: 64)
!5482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !314)
!5483 = !DILocalVariable(name: "kb_dst", arg: 1, scope: !5478, file: !3, line: 1636, type: !313)
!5484 = !DILocation(line: 1636, column: 43, scope: !5478)
!5485 = !DILocalVariable(name: "kb_src", arg: 2, scope: !5478, file: !3, line: 1636, type: !5481)
!5486 = !DILocation(line: 1636, column: 67, scope: !5478)
!5487 = !DILocation(line: 1638, column: 23, scope: !5478)
!5488 = !DILocation(line: 1638, column: 31, scope: !5478)
!5489 = !DILocation(line: 1638, column: 2, scope: !5478)
!5490 = !DILocation(line: 1638, column: 10, scope: !5478)
!5491 = !DILocation(line: 1638, column: 21, scope: !5478)
!5492 = !DILocation(line: 1639, column: 23, scope: !5478)
!5493 = !DILocation(line: 1639, column: 31, scope: !5478)
!5494 = !DILocation(line: 1639, column: 2, scope: !5478)
!5495 = !DILocation(line: 1639, column: 10, scope: !5478)
!5496 = !DILocation(line: 1639, column: 21, scope: !5478)
!5497 = !DILocation(line: 1640, column: 23, scope: !5478)
!5498 = !DILocation(line: 1640, column: 31, scope: !5478)
!5499 = !DILocation(line: 1640, column: 2, scope: !5478)
!5500 = !DILocation(line: 1640, column: 10, scope: !5478)
!5501 = !DILocation(line: 1640, column: 21, scope: !5478)
!5502 = !DILocation(line: 1641, column: 23, scope: !5478)
!5503 = !DILocation(line: 1641, column: 31, scope: !5478)
!5504 = !DILocation(line: 1641, column: 2, scope: !5478)
!5505 = !DILocation(line: 1641, column: 10, scope: !5478)
!5506 = !DILocation(line: 1641, column: 21, scope: !5478)
!5507 = !DILocation(line: 1642, column: 14, scope: !5478)
!5508 = !DILocation(line: 1642, column: 22, scope: !5478)
!5509 = !DILocation(line: 1642, column: 30, scope: !5478)
!5510 = !DILocation(line: 1642, column: 38, scope: !5478)
!5511 = !DILocation(line: 1642, column: 2, scope: !5478)
!5512 = !DILocation(line: 1643, column: 23, scope: !5478)
!5513 = !DILocation(line: 1643, column: 31, scope: !5478)
!5514 = !DILocation(line: 1643, column: 2, scope: !5478)
!5515 = !DILocation(line: 1643, column: 10, scope: !5478)
!5516 = !DILocation(line: 1643, column: 21, scope: !5478)
!5517 = !DILocation(line: 1644, column: 23, scope: !5478)
!5518 = !DILocation(line: 1644, column: 31, scope: !5478)
!5519 = !DILocation(line: 1644, column: 2, scope: !5478)
!5520 = !DILocation(line: 1644, column: 10, scope: !5478)
!5521 = !DILocation(line: 1644, column: 21, scope: !5478)
!5522 = !DILocation(line: 1645, column: 1, scope: !5478)
!5523 = distinct !DISubprogram(name: "BKE_keyblock_curval_rnapath_get", scope: !3, file: !3, line: 1650, type: !5524, scopeLine: 1651, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!5524 = !DISubroutineType(types: !5525)
!5525 = !{!211, !1952, !313}
!5526 = !DILocalVariable(name: "key", arg: 1, scope: !5523, file: !3, line: 1650, type: !1952)
!5527 = !DILocation(line: 1650, column: 44, scope: !5523)
!5528 = !DILocalVariable(name: "kb", arg: 2, scope: !5523, file: !3, line: 1650, type: !313)
!5529 = !DILocation(line: 1650, column: 59, scope: !5523)
!5530 = !DILocalVariable(name: "ptr", scope: !5523, file: !3, line: 1652, type: !5531)
!5531 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !5532, line: 62, baseType: !5533)
!5532 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !5532, line: 55, size: 192, elements: !5534)
!5534 = !{!5535, !5539, !5542}
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5533, file: !5532, line: 58, baseType: !5536, size: 64)
!5536 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5533, file: !5532, line: 56, size: 64, elements: !5537)
!5537 = !{!5538}
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5536, file: !5532, line: 57, baseType: !146, size: 64)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5533, file: !5532, line: 60, baseType: !5540, size: 64, offset: 64)
!5540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5541, size: 64)
!5541 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !5532, line: 41, flags: DIFlagFwdDecl)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5533, file: !5532, line: 61, baseType: !146, size: 64, offset: 128)
!5543 = !DILocation(line: 1652, column: 13, scope: !5523)
!5544 = !DILocalVariable(name: "prop", scope: !5523, file: !3, line: 1653, type: !5545)
!5545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5546, size: 64)
!5546 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !5532, line: 333, baseType: !5547)
!5547 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !5548, line: 43, flags: DIFlagFwdDecl)
!5548 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_animsys.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5549 = !DILocation(line: 1653, column: 15, scope: !5523)
!5550 = !DILocation(line: 1656, column: 6, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 1656, column: 6)
!5552 = !DILocation(line: 1656, column: 6, scope: !5523)
!5553 = !DILocation(line: 1657, column: 3, scope: !5551)
!5554 = !DILocation(line: 1660, column: 22, scope: !5523)
!5555 = !DILocation(line: 1660, column: 27, scope: !5523)
!5556 = !DILocation(line: 1660, column: 46, scope: !5523)
!5557 = !DILocation(line: 1660, column: 2, scope: !5523)
!5558 = !DILocation(line: 1662, column: 9, scope: !5523)
!5559 = !DILocation(line: 1662, column: 7, scope: !5523)
!5560 = !DILocation(line: 1665, column: 44, scope: !5523)
!5561 = !DILocation(line: 1665, column: 9, scope: !5523)
!5562 = !DILocation(line: 1665, column: 2, scope: !5523)
!5563 = !DILocation(line: 1666, column: 1, scope: !5523)
!5564 = distinct !DISubprogram(name: "BKE_key_convert_from_lattice", scope: !3, file: !3, line: 1672, type: !5565, scopeLine: 1673, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!5565 = !DISubroutineType(types: !5566)
!5566 = !{null, !1784, !313}
!5567 = !DILocalVariable(name: "lt", arg: 1, scope: !5564, file: !3, line: 1672, type: !1784)
!5568 = !DILocation(line: 1672, column: 44, scope: !5564)
!5569 = !DILocalVariable(name: "kb", arg: 2, scope: !5564, file: !3, line: 1672, type: !313)
!5570 = !DILocation(line: 1672, column: 58, scope: !5564)
!5571 = !DILocalVariable(name: "bp", scope: !5564, file: !3, line: 1674, type: !4180)
!5572 = !DILocation(line: 1674, column: 10, scope: !5564)
!5573 = !DILocalVariable(name: "fp", scope: !5564, file: !3, line: 1675, type: !213)
!5574 = !DILocation(line: 1675, column: 9, scope: !5564)
!5575 = !DILocalVariable(name: "a", scope: !5564, file: !3, line: 1676, type: !176)
!5576 = !DILocation(line: 1676, column: 6, scope: !5564)
!5577 = !DILocalVariable(name: "tot", scope: !5564, file: !3, line: 1676, type: !176)
!5578 = !DILocation(line: 1676, column: 9, scope: !5564)
!5579 = !DILocation(line: 1678, column: 8, scope: !5564)
!5580 = !DILocation(line: 1678, column: 12, scope: !5564)
!5581 = !DILocation(line: 1678, column: 20, scope: !5564)
!5582 = !DILocation(line: 1678, column: 24, scope: !5564)
!5583 = !DILocation(line: 1678, column: 18, scope: !5564)
!5584 = !DILocation(line: 1678, column: 32, scope: !5564)
!5585 = !DILocation(line: 1678, column: 36, scope: !5564)
!5586 = !DILocation(line: 1678, column: 30, scope: !5564)
!5587 = !DILocation(line: 1678, column: 6, scope: !5564)
!5588 = !DILocation(line: 1679, column: 6, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 1679, column: 6)
!5590 = !DILocation(line: 1679, column: 10, scope: !5589)
!5591 = !DILocation(line: 1679, column: 6, scope: !5564)
!5592 = !DILocation(line: 1679, column: 16, scope: !5589)
!5593 = !DILocation(line: 1681, column: 6, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 1681, column: 6)
!5595 = !DILocation(line: 1681, column: 10, scope: !5594)
!5596 = !DILocation(line: 1681, column: 6, scope: !5564)
!5597 = !DILocation(line: 1681, column: 16, scope: !5594)
!5598 = !DILocation(line: 1681, column: 26, scope: !5594)
!5599 = !DILocation(line: 1681, column: 30, scope: !5594)
!5600 = !DILocation(line: 1683, column: 13, scope: !5564)
!5601 = !DILocation(line: 1683, column: 25, scope: !5564)
!5602 = !DILocation(line: 1683, column: 29, scope: !5564)
!5603 = !DILocation(line: 1683, column: 34, scope: !5564)
!5604 = !DILocation(line: 1683, column: 45, scope: !5564)
!5605 = !DILocation(line: 1683, column: 43, scope: !5564)
!5606 = !DILocation(line: 1683, column: 2, scope: !5564)
!5607 = !DILocation(line: 1683, column: 6, scope: !5564)
!5608 = !DILocation(line: 1683, column: 11, scope: !5564)
!5609 = !DILocation(line: 1684, column: 16, scope: !5564)
!5610 = !DILocation(line: 1684, column: 2, scope: !5564)
!5611 = !DILocation(line: 1684, column: 6, scope: !5564)
!5612 = !DILocation(line: 1684, column: 14, scope: !5564)
!5613 = !DILocation(line: 1686, column: 7, scope: !5564)
!5614 = !DILocation(line: 1686, column: 11, scope: !5564)
!5615 = !DILocation(line: 1686, column: 5, scope: !5564)
!5616 = !DILocation(line: 1687, column: 7, scope: !5564)
!5617 = !DILocation(line: 1687, column: 11, scope: !5564)
!5618 = !DILocation(line: 1687, column: 5, scope: !5564)
!5619 = !DILocation(line: 1688, column: 9, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 1688, column: 2)
!5621 = !DILocation(line: 1688, column: 7, scope: !5620)
!5622 = !DILocation(line: 1688, column: 14, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 1688, column: 2)
!5624 = !DILocation(line: 1688, column: 18, scope: !5623)
!5625 = !DILocation(line: 1688, column: 22, scope: !5623)
!5626 = !DILocation(line: 1688, column: 16, scope: !5623)
!5627 = !DILocation(line: 1688, column: 2, scope: !5620)
!5628 = !DILocation(line: 1689, column: 14, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5623, file: !3, line: 1688, column: 51)
!5630 = !DILocation(line: 1689, column: 18, scope: !5629)
!5631 = !DILocation(line: 1689, column: 22, scope: !5629)
!5632 = !DILocation(line: 1689, column: 3, scope: !5629)
!5633 = !DILocation(line: 1690, column: 2, scope: !5629)
!5634 = !DILocation(line: 1688, column: 32, scope: !5623)
!5635 = !DILocation(line: 1688, column: 39, scope: !5623)
!5636 = !DILocation(line: 1688, column: 47, scope: !5623)
!5637 = !DILocation(line: 1688, column: 2, scope: !5623)
!5638 = distinct !{!5638, !5627, !5639}
!5639 = !DILocation(line: 1690, column: 2, scope: !5620)
!5640 = !DILocation(line: 1691, column: 1, scope: !5564)
!5641 = distinct !DISubprogram(name: "copy_v3_v3", scope: !5642, file: !5642, line: 64, type: !5643, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!5642 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5643 = !DISubroutineType(types: !5644)
!5644 = !{null, !213, !5645}
!5645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4669, size: 64)
!5646 = !DILocalVariable(name: "r", arg: 1, scope: !5641, file: !5642, line: 64, type: !213)
!5647 = !DILocation(line: 64, column: 31, scope: !5641)
!5648 = !DILocalVariable(name: "a", arg: 2, scope: !5641, file: !5642, line: 64, type: !5645)
!5649 = !DILocation(line: 64, column: 49, scope: !5641)
!5650 = !DILocation(line: 66, column: 9, scope: !5641)
!5651 = !DILocation(line: 66, column: 2, scope: !5641)
!5652 = !DILocation(line: 66, column: 7, scope: !5641)
!5653 = !DILocation(line: 67, column: 9, scope: !5641)
!5654 = !DILocation(line: 67, column: 2, scope: !5641)
!5655 = !DILocation(line: 67, column: 7, scope: !5641)
!5656 = !DILocation(line: 68, column: 9, scope: !5641)
!5657 = !DILocation(line: 68, column: 2, scope: !5641)
!5658 = !DILocation(line: 68, column: 7, scope: !5641)
!5659 = !DILocation(line: 69, column: 1, scope: !5641)
!5660 = distinct !DISubprogram(name: "BKE_key_convert_to_lattice", scope: !3, file: !3, line: 1693, type: !5661, scopeLine: 1694, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!5661 = !DISubroutineType(types: !5662)
!5662 = !{null, !313, !1784}
!5663 = !DILocalVariable(name: "kb", arg: 1, scope: !5660, file: !3, line: 1693, type: !313)
!5664 = !DILocation(line: 1693, column: 43, scope: !5660)
!5665 = !DILocalVariable(name: "lt", arg: 2, scope: !5660, file: !3, line: 1693, type: !1784)
!5666 = !DILocation(line: 1693, column: 56, scope: !5660)
!5667 = !DILocalVariable(name: "bp", scope: !5660, file: !3, line: 1695, type: !4180)
!5668 = !DILocation(line: 1695, column: 10, scope: !5660)
!5669 = !DILocalVariable(name: "fp", scope: !5660, file: !3, line: 1696, type: !5645)
!5670 = !DILocation(line: 1696, column: 15, scope: !5660)
!5671 = !DILocalVariable(name: "a", scope: !5660, file: !3, line: 1697, type: !176)
!5672 = !DILocation(line: 1697, column: 6, scope: !5660)
!5673 = !DILocalVariable(name: "tot", scope: !5660, file: !3, line: 1697, type: !176)
!5674 = !DILocation(line: 1697, column: 9, scope: !5660)
!5675 = !DILocation(line: 1699, column: 7, scope: !5660)
!5676 = !DILocation(line: 1699, column: 11, scope: !5660)
!5677 = !DILocation(line: 1699, column: 5, scope: !5660)
!5678 = !DILocation(line: 1700, column: 7, scope: !5660)
!5679 = !DILocation(line: 1700, column: 11, scope: !5660)
!5680 = !DILocation(line: 1700, column: 5, scope: !5660)
!5681 = !DILocation(line: 1702, column: 8, scope: !5660)
!5682 = !DILocation(line: 1702, column: 12, scope: !5660)
!5683 = !DILocation(line: 1702, column: 20, scope: !5660)
!5684 = !DILocation(line: 1702, column: 24, scope: !5660)
!5685 = !DILocation(line: 1702, column: 18, scope: !5660)
!5686 = !DILocation(line: 1702, column: 32, scope: !5660)
!5687 = !DILocation(line: 1702, column: 36, scope: !5660)
!5688 = !DILocation(line: 1702, column: 30, scope: !5660)
!5689 = !DILocation(line: 1702, column: 6, scope: !5660)
!5690 = !DILocation(line: 1703, column: 15, scope: !5660)
!5691 = !DILocation(line: 1703, column: 19, scope: !5660)
!5692 = !DILocation(line: 1703, column: 28, scope: !5660)
!5693 = !DILocation(line: 1703, column: 8, scope: !5660)
!5694 = !DILocation(line: 1703, column: 6, scope: !5660)
!5695 = !DILocation(line: 1705, column: 9, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5660, file: !3, line: 1705, column: 2)
!5697 = !DILocation(line: 1705, column: 7, scope: !5696)
!5698 = !DILocation(line: 1705, column: 14, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5696, file: !3, line: 1705, column: 2)
!5700 = !DILocation(line: 1705, column: 18, scope: !5699)
!5701 = !DILocation(line: 1705, column: 16, scope: !5699)
!5702 = !DILocation(line: 1705, column: 2, scope: !5696)
!5703 = !DILocation(line: 1706, column: 14, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 1705, column: 43)
!5705 = !DILocation(line: 1706, column: 18, scope: !5704)
!5706 = !DILocation(line: 1706, column: 23, scope: !5704)
!5707 = !DILocation(line: 1706, column: 3, scope: !5704)
!5708 = !DILocation(line: 1707, column: 2, scope: !5704)
!5709 = !DILocation(line: 1705, column: 24, scope: !5699)
!5710 = !DILocation(line: 1705, column: 31, scope: !5699)
!5711 = !DILocation(line: 1705, column: 39, scope: !5699)
!5712 = !DILocation(line: 1705, column: 2, scope: !5699)
!5713 = distinct !{!5713, !5702, !5714}
!5714 = !DILocation(line: 1707, column: 2, scope: !5696)
!5715 = !DILocation(line: 1708, column: 1, scope: !5660)
!5716 = distinct !DISubprogram(name: "min_ii", scope: !5717, file: !5717, line: 211, type: !5718, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!5717 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5718 = !DISubroutineType(types: !5719)
!5719 = !{!176, !176, !176}
!5720 = !DILocalVariable(name: "a", arg: 1, scope: !5716, file: !5717, line: 211, type: !176)
!5721 = !DILocation(line: 211, column: 24, scope: !5716)
!5722 = !DILocalVariable(name: "b", arg: 2, scope: !5716, file: !5717, line: 211, type: !176)
!5723 = !DILocation(line: 211, column: 31, scope: !5716)
!5724 = !DILocation(line: 213, column: 10, scope: !5716)
!5725 = !DILocation(line: 213, column: 14, scope: !5716)
!5726 = !DILocation(line: 213, column: 12, scope: !5716)
!5727 = !DILocation(line: 213, column: 9, scope: !5716)
!5728 = !DILocation(line: 213, column: 19, scope: !5716)
!5729 = !DILocation(line: 213, column: 23, scope: !5716)
!5730 = !DILocation(line: 213, column: 2, scope: !5716)
!5731 = distinct !DISubprogram(name: "BKE_key_convert_from_curve", scope: !3, file: !3, line: 1711, type: !5732, scopeLine: 1712, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!5732 = !DISubroutineType(types: !5733)
!5733 = !{null, !1834, !313, !1016}
!5734 = !DILocalVariable(name: "cu", arg: 1, scope: !5731, file: !3, line: 1711, type: !1834)
!5735 = !DILocation(line: 1711, column: 40, scope: !5731)
!5736 = !DILocalVariable(name: "kb", arg: 2, scope: !5731, file: !3, line: 1711, type: !313)
!5737 = !DILocation(line: 1711, column: 54, scope: !5731)
!5738 = !DILocalVariable(name: "nurb", arg: 3, scope: !5731, file: !3, line: 1711, type: !1016)
!5739 = !DILocation(line: 1711, column: 68, scope: !5731)
!5740 = !DILocalVariable(name: "nu", scope: !5731, file: !3, line: 1713, type: !4157)
!5741 = !DILocation(line: 1713, column: 8, scope: !5731)
!5742 = !DILocalVariable(name: "bezt", scope: !5731, file: !3, line: 1714, type: !4183)
!5743 = !DILocation(line: 1714, column: 13, scope: !5731)
!5744 = !DILocalVariable(name: "bp", scope: !5731, file: !3, line: 1715, type: !4180)
!5745 = !DILocation(line: 1715, column: 10, scope: !5731)
!5746 = !DILocalVariable(name: "fp", scope: !5731, file: !3, line: 1716, type: !213)
!5747 = !DILocation(line: 1716, column: 9, scope: !5731)
!5748 = !DILocalVariable(name: "a", scope: !5731, file: !3, line: 1717, type: !176)
!5749 = !DILocation(line: 1717, column: 6, scope: !5731)
!5750 = !DILocalVariable(name: "tot", scope: !5731, file: !3, line: 1717, type: !176)
!5751 = !DILocation(line: 1717, column: 9, scope: !5731)
!5752 = !DILocation(line: 1720, column: 33, scope: !5731)
!5753 = !DILocation(line: 1720, column: 8, scope: !5731)
!5754 = !DILocation(line: 1720, column: 6, scope: !5731)
!5755 = !DILocation(line: 1721, column: 6, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 1721, column: 6)
!5757 = !DILocation(line: 1721, column: 10, scope: !5756)
!5758 = !DILocation(line: 1721, column: 6, scope: !5731)
!5759 = !DILocation(line: 1721, column: 16, scope: !5756)
!5760 = !DILocation(line: 1723, column: 6, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 1723, column: 6)
!5762 = !DILocation(line: 1723, column: 10, scope: !5761)
!5763 = !DILocation(line: 1723, column: 6, scope: !5731)
!5764 = !DILocation(line: 1723, column: 16, scope: !5761)
!5765 = !DILocation(line: 1723, column: 26, scope: !5761)
!5766 = !DILocation(line: 1723, column: 30, scope: !5761)
!5767 = !DILocation(line: 1725, column: 13, scope: !5731)
!5768 = !DILocation(line: 1725, column: 25, scope: !5731)
!5769 = !DILocation(line: 1725, column: 29, scope: !5731)
!5770 = !DILocation(line: 1725, column: 34, scope: !5731)
!5771 = !DILocation(line: 1725, column: 45, scope: !5731)
!5772 = !DILocation(line: 1725, column: 43, scope: !5731)
!5773 = !DILocation(line: 1725, column: 2, scope: !5731)
!5774 = !DILocation(line: 1725, column: 6, scope: !5731)
!5775 = !DILocation(line: 1725, column: 11, scope: !5731)
!5776 = !DILocation(line: 1726, column: 16, scope: !5731)
!5777 = !DILocation(line: 1726, column: 2, scope: !5731)
!5778 = !DILocation(line: 1726, column: 6, scope: !5731)
!5779 = !DILocation(line: 1726, column: 14, scope: !5731)
!5780 = !DILocation(line: 1728, column: 7, scope: !5731)
!5781 = !DILocation(line: 1728, column: 13, scope: !5731)
!5782 = !DILocation(line: 1728, column: 5, scope: !5731)
!5783 = !DILocation(line: 1729, column: 7, scope: !5731)
!5784 = !DILocation(line: 1729, column: 11, scope: !5731)
!5785 = !DILocation(line: 1729, column: 5, scope: !5731)
!5786 = !DILocation(line: 1730, column: 2, scope: !5731)
!5787 = !DILocation(line: 1730, column: 9, scope: !5731)
!5788 = !DILocation(line: 1732, column: 7, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5790, file: !3, line: 1732, column: 7)
!5790 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 1730, column: 13)
!5791 = !DILocation(line: 1732, column: 11, scope: !5789)
!5792 = !DILocation(line: 1732, column: 7, scope: !5790)
!5793 = !DILocation(line: 1733, column: 11, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5789, file: !3, line: 1732, column: 17)
!5795 = !DILocation(line: 1733, column: 15, scope: !5794)
!5796 = !DILocation(line: 1733, column: 9, scope: !5794)
!5797 = !DILocation(line: 1734, column: 8, scope: !5794)
!5798 = !DILocation(line: 1734, column: 12, scope: !5794)
!5799 = !DILocation(line: 1734, column: 6, scope: !5794)
!5800 = !DILocation(line: 1735, column: 4, scope: !5794)
!5801 = !DILocation(line: 1735, column: 12, scope: !5794)
!5802 = !DILocation(line: 1736, column: 16, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5794, file: !3, line: 1735, column: 16)
!5804 = !DILocation(line: 1736, column: 20, scope: !5803)
!5805 = !DILocation(line: 1736, column: 26, scope: !5803)
!5806 = !DILocation(line: 1736, column: 5, scope: !5803)
!5807 = !DILocation(line: 1737, column: 8, scope: !5803)
!5808 = !DILocation(line: 1738, column: 16, scope: !5803)
!5809 = !DILocation(line: 1738, column: 20, scope: !5803)
!5810 = !DILocation(line: 1738, column: 26, scope: !5803)
!5811 = !DILocation(line: 1738, column: 5, scope: !5803)
!5812 = !DILocation(line: 1739, column: 8, scope: !5803)
!5813 = !DILocation(line: 1740, column: 16, scope: !5803)
!5814 = !DILocation(line: 1740, column: 20, scope: !5803)
!5815 = !DILocation(line: 1740, column: 26, scope: !5803)
!5816 = !DILocation(line: 1740, column: 5, scope: !5803)
!5817 = !DILocation(line: 1741, column: 8, scope: !5803)
!5818 = !DILocation(line: 1742, column: 13, scope: !5803)
!5819 = !DILocation(line: 1742, column: 19, scope: !5803)
!5820 = !DILocation(line: 1742, column: 5, scope: !5803)
!5821 = !DILocation(line: 1742, column: 11, scope: !5803)
!5822 = !DILocation(line: 1743, column: 8, scope: !5803)
!5823 = !DILocation(line: 1744, column: 9, scope: !5803)
!5824 = distinct !{!5824, !5800, !5825}
!5825 = !DILocation(line: 1745, column: 4, scope: !5794)
!5826 = !DILocation(line: 1746, column: 3, scope: !5794)
!5827 = !DILocation(line: 1748, column: 9, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5789, file: !3, line: 1747, column: 8)
!5829 = !DILocation(line: 1748, column: 13, scope: !5828)
!5830 = !DILocation(line: 1748, column: 7, scope: !5828)
!5831 = !DILocation(line: 1749, column: 8, scope: !5828)
!5832 = !DILocation(line: 1749, column: 12, scope: !5828)
!5833 = !DILocation(line: 1749, column: 20, scope: !5828)
!5834 = !DILocation(line: 1749, column: 24, scope: !5828)
!5835 = !DILocation(line: 1749, column: 18, scope: !5828)
!5836 = !DILocation(line: 1749, column: 6, scope: !5828)
!5837 = !DILocation(line: 1750, column: 4, scope: !5828)
!5838 = !DILocation(line: 1750, column: 12, scope: !5828)
!5839 = !DILocation(line: 1751, column: 16, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5828, file: !3, line: 1750, column: 16)
!5841 = !DILocation(line: 1751, column: 20, scope: !5840)
!5842 = !DILocation(line: 1751, column: 24, scope: !5840)
!5843 = !DILocation(line: 1751, column: 5, scope: !5840)
!5844 = !DILocation(line: 1752, column: 13, scope: !5840)
!5845 = !DILocation(line: 1752, column: 17, scope: !5840)
!5846 = !DILocation(line: 1752, column: 5, scope: !5840)
!5847 = !DILocation(line: 1752, column: 11, scope: !5840)
!5848 = !DILocation(line: 1754, column: 8, scope: !5840)
!5849 = !DILocation(line: 1755, column: 7, scope: !5840)
!5850 = distinct !{!5850, !5837, !5851}
!5851 = !DILocation(line: 1756, column: 4, scope: !5828)
!5852 = !DILocation(line: 1758, column: 8, scope: !5790)
!5853 = !DILocation(line: 1758, column: 12, scope: !5790)
!5854 = !DILocation(line: 1758, column: 6, scope: !5790)
!5855 = distinct !{!5855, !5786, !5856}
!5856 = !DILocation(line: 1759, column: 2, scope: !5731)
!5857 = !DILocation(line: 1760, column: 1, scope: !5731)
!5858 = distinct !DISubprogram(name: "BKE_key_convert_to_curve", scope: !3, file: !3, line: 1762, type: !5859, scopeLine: 1763, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!5859 = !DISubroutineType(types: !5860)
!5860 = !{null, !313, !1834, !1016}
!5861 = !DILocalVariable(name: "kb", arg: 1, scope: !5858, file: !3, line: 1762, type: !313)
!5862 = !DILocation(line: 1762, column: 41, scope: !5858)
!5863 = !DILocalVariable(name: "UNUSED_cu", arg: 2, scope: !5858, file: !3, line: 1762, type: !1834)
!5864 = !DILocation(line: 1762, column: 52, scope: !5858)
!5865 = !DILocalVariable(name: "nurb", arg: 3, scope: !5858, file: !3, line: 1762, type: !1016)
!5866 = !DILocation(line: 1762, column: 74, scope: !5858)
!5867 = !DILocalVariable(name: "nu", scope: !5858, file: !3, line: 1764, type: !4157)
!5868 = !DILocation(line: 1764, column: 8, scope: !5858)
!5869 = !DILocalVariable(name: "bezt", scope: !5858, file: !3, line: 1765, type: !4183)
!5870 = !DILocation(line: 1765, column: 13, scope: !5858)
!5871 = !DILocalVariable(name: "bp", scope: !5858, file: !3, line: 1766, type: !4180)
!5872 = !DILocation(line: 1766, column: 10, scope: !5858)
!5873 = !DILocalVariable(name: "fp", scope: !5858, file: !3, line: 1767, type: !5645)
!5874 = !DILocation(line: 1767, column: 15, scope: !5858)
!5875 = !DILocalVariable(name: "a", scope: !5858, file: !3, line: 1768, type: !176)
!5876 = !DILocation(line: 1768, column: 6, scope: !5858)
!5877 = !DILocalVariable(name: "tot", scope: !5858, file: !3, line: 1768, type: !176)
!5878 = !DILocation(line: 1768, column: 9, scope: !5858)
!5879 = !DILocation(line: 1770, column: 7, scope: !5858)
!5880 = !DILocation(line: 1770, column: 13, scope: !5858)
!5881 = !DILocation(line: 1770, column: 5, scope: !5858)
!5882 = !DILocation(line: 1771, column: 7, scope: !5858)
!5883 = !DILocation(line: 1771, column: 11, scope: !5858)
!5884 = !DILocation(line: 1771, column: 5, scope: !5858)
!5885 = !DILocation(line: 1773, column: 33, scope: !5858)
!5886 = !DILocation(line: 1773, column: 8, scope: !5858)
!5887 = !DILocation(line: 1773, column: 6, scope: !5858)
!5888 = !DILocation(line: 1775, column: 15, scope: !5858)
!5889 = !DILocation(line: 1775, column: 19, scope: !5858)
!5890 = !DILocation(line: 1775, column: 28, scope: !5858)
!5891 = !DILocation(line: 1775, column: 8, scope: !5858)
!5892 = !DILocation(line: 1775, column: 6, scope: !5858)
!5893 = !DILocation(line: 1777, column: 2, scope: !5858)
!5894 = !DILocation(line: 1777, column: 9, scope: !5858)
!5895 = !DILocation(line: 1777, column: 12, scope: !5858)
!5896 = !DILocation(line: 1777, column: 15, scope: !5858)
!5897 = !DILocation(line: 1777, column: 19, scope: !5858)
!5898 = !DILocation(line: 0, scope: !5858)
!5899 = !DILocation(line: 1779, column: 7, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 1779, column: 7)
!5901 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 1777, column: 24)
!5902 = !DILocation(line: 1779, column: 11, scope: !5900)
!5903 = !DILocation(line: 1779, column: 7, scope: !5901)
!5904 = !DILocation(line: 1780, column: 11, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 1779, column: 17)
!5906 = !DILocation(line: 1780, column: 15, scope: !5905)
!5907 = !DILocation(line: 1780, column: 9, scope: !5905)
!5908 = !DILocation(line: 1781, column: 8, scope: !5905)
!5909 = !DILocation(line: 1781, column: 12, scope: !5905)
!5910 = !DILocation(line: 1781, column: 6, scope: !5905)
!5911 = !DILocation(line: 1782, column: 4, scope: !5905)
!5912 = !DILocation(line: 1782, column: 12, scope: !5905)
!5913 = !DILocation(line: 1782, column: 15, scope: !5905)
!5914 = !DILocation(line: 1782, column: 18, scope: !5905)
!5915 = !DILocation(line: 1782, column: 22, scope: !5905)
!5916 = !DILocation(line: 0, scope: !5905)
!5917 = !DILocation(line: 1783, column: 16, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5905, file: !3, line: 1782, column: 27)
!5919 = !DILocation(line: 1783, column: 22, scope: !5918)
!5920 = !DILocation(line: 1783, column: 30, scope: !5918)
!5921 = !DILocation(line: 1783, column: 5, scope: !5918)
!5922 = !DILocation(line: 1784, column: 8, scope: !5918)
!5923 = !DILocation(line: 1785, column: 16, scope: !5918)
!5924 = !DILocation(line: 1785, column: 22, scope: !5918)
!5925 = !DILocation(line: 1785, column: 30, scope: !5918)
!5926 = !DILocation(line: 1785, column: 5, scope: !5918)
!5927 = !DILocation(line: 1786, column: 8, scope: !5918)
!5928 = !DILocation(line: 1787, column: 16, scope: !5918)
!5929 = !DILocation(line: 1787, column: 22, scope: !5918)
!5930 = !DILocation(line: 1787, column: 30, scope: !5918)
!5931 = !DILocation(line: 1787, column: 5, scope: !5918)
!5932 = !DILocation(line: 1788, column: 8, scope: !5918)
!5933 = !DILocation(line: 1789, column: 18, scope: !5918)
!5934 = !DILocation(line: 1789, column: 5, scope: !5918)
!5935 = !DILocation(line: 1789, column: 11, scope: !5918)
!5936 = !DILocation(line: 1789, column: 16, scope: !5918)
!5937 = !DILocation(line: 1790, column: 8, scope: !5918)
!5938 = !DILocation(line: 1792, column: 9, scope: !5918)
!5939 = !DILocation(line: 1793, column: 9, scope: !5918)
!5940 = distinct !{!5940, !5911, !5941}
!5941 = !DILocation(line: 1794, column: 4, scope: !5905)
!5942 = !DILocation(line: 1795, column: 3, scope: !5905)
!5943 = !DILocation(line: 1797, column: 9, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 1796, column: 8)
!5945 = !DILocation(line: 1797, column: 13, scope: !5944)
!5946 = !DILocation(line: 1797, column: 7, scope: !5944)
!5947 = !DILocation(line: 1798, column: 8, scope: !5944)
!5948 = !DILocation(line: 1798, column: 12, scope: !5944)
!5949 = !DILocation(line: 1798, column: 20, scope: !5944)
!5950 = !DILocation(line: 1798, column: 24, scope: !5944)
!5951 = !DILocation(line: 1798, column: 18, scope: !5944)
!5952 = !DILocation(line: 1798, column: 6, scope: !5944)
!5953 = !DILocation(line: 1799, column: 4, scope: !5944)
!5954 = !DILocation(line: 1799, column: 12, scope: !5944)
!5955 = !DILocation(line: 1799, column: 15, scope: !5944)
!5956 = !DILocation(line: 1799, column: 18, scope: !5944)
!5957 = !DILocation(line: 1799, column: 22, scope: !5944)
!5958 = !DILocation(line: 0, scope: !5944)
!5959 = !DILocation(line: 1800, column: 16, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 1799, column: 27)
!5961 = !DILocation(line: 1800, column: 20, scope: !5960)
!5962 = !DILocation(line: 1800, column: 25, scope: !5960)
!5963 = !DILocation(line: 1800, column: 5, scope: !5960)
!5964 = !DILocation(line: 1801, column: 16, scope: !5960)
!5965 = !DILocation(line: 1801, column: 5, scope: !5960)
!5966 = !DILocation(line: 1801, column: 9, scope: !5960)
!5967 = !DILocation(line: 1801, column: 14, scope: !5960)
!5968 = !DILocation(line: 1803, column: 8, scope: !5960)
!5969 = !DILocation(line: 1804, column: 8, scope: !5960)
!5970 = !DILocation(line: 1805, column: 7, scope: !5960)
!5971 = distinct !{!5971, !5953, !5972}
!5972 = !DILocation(line: 1806, column: 4, scope: !5944)
!5973 = !DILocation(line: 1808, column: 8, scope: !5901)
!5974 = !DILocation(line: 1808, column: 12, scope: !5901)
!5975 = !DILocation(line: 1808, column: 6, scope: !5901)
!5976 = distinct !{!5976, !5893, !5977}
!5977 = !DILocation(line: 1809, column: 2, scope: !5858)
!5978 = !DILocation(line: 1810, column: 1, scope: !5858)
!5979 = distinct !DISubprogram(name: "BKE_key_convert_from_mesh", scope: !3, file: !3, line: 1813, type: !5980, scopeLine: 1814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!5980 = !DISubroutineType(types: !5981)
!5981 = !{null, !215, !313}
!5982 = !DILocalVariable(name: "me", arg: 1, scope: !5979, file: !3, line: 1813, type: !215)
!5983 = !DILocation(line: 1813, column: 38, scope: !5979)
!5984 = !DILocalVariable(name: "kb", arg: 2, scope: !5979, file: !3, line: 1813, type: !313)
!5985 = !DILocation(line: 1813, column: 52, scope: !5979)
!5986 = !DILocalVariable(name: "mvert", scope: !5979, file: !3, line: 1815, type: !1770)
!5987 = !DILocation(line: 1815, column: 9, scope: !5979)
!5988 = !DILocalVariable(name: "fp", scope: !5979, file: !3, line: 1816, type: !213)
!5989 = !DILocation(line: 1816, column: 9, scope: !5979)
!5990 = !DILocalVariable(name: "a", scope: !5979, file: !3, line: 1817, type: !176)
!5991 = !DILocation(line: 1817, column: 6, scope: !5979)
!5992 = !DILocation(line: 1819, column: 6, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 1819, column: 6)
!5994 = !DILocation(line: 1819, column: 10, scope: !5993)
!5995 = !DILocation(line: 1819, column: 18, scope: !5993)
!5996 = !DILocation(line: 1819, column: 6, scope: !5979)
!5997 = !DILocation(line: 1819, column: 24, scope: !5993)
!5998 = !DILocation(line: 1821, column: 6, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 1821, column: 6)
!6000 = !DILocation(line: 1821, column: 10, scope: !5999)
!6001 = !DILocation(line: 1821, column: 6, scope: !5979)
!6002 = !DILocation(line: 1821, column: 16, scope: !5999)
!6003 = !DILocation(line: 1821, column: 26, scope: !5999)
!6004 = !DILocation(line: 1821, column: 30, scope: !5999)
!6005 = !DILocation(line: 1823, column: 13, scope: !5979)
!6006 = !DILocation(line: 1823, column: 25, scope: !5979)
!6007 = !DILocation(line: 1823, column: 29, scope: !5979)
!6008 = !DILocation(line: 1823, column: 34, scope: !5979)
!6009 = !DILocation(line: 1823, column: 45, scope: !5979)
!6010 = !DILocation(line: 1823, column: 49, scope: !5979)
!6011 = !DILocation(line: 1823, column: 43, scope: !5979)
!6012 = !DILocation(line: 1823, column: 2, scope: !5979)
!6013 = !DILocation(line: 1823, column: 6, scope: !5979)
!6014 = !DILocation(line: 1823, column: 11, scope: !5979)
!6015 = !DILocation(line: 1824, column: 16, scope: !5979)
!6016 = !DILocation(line: 1824, column: 20, scope: !5979)
!6017 = !DILocation(line: 1824, column: 2, scope: !5979)
!6018 = !DILocation(line: 1824, column: 6, scope: !5979)
!6019 = !DILocation(line: 1824, column: 14, scope: !5979)
!6020 = !DILocation(line: 1826, column: 10, scope: !5979)
!6021 = !DILocation(line: 1826, column: 14, scope: !5979)
!6022 = !DILocation(line: 1826, column: 8, scope: !5979)
!6023 = !DILocation(line: 1827, column: 7, scope: !5979)
!6024 = !DILocation(line: 1827, column: 11, scope: !5979)
!6025 = !DILocation(line: 1827, column: 5, scope: !5979)
!6026 = !DILocation(line: 1828, column: 9, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 1828, column: 2)
!6028 = !DILocation(line: 1828, column: 7, scope: !6027)
!6029 = !DILocation(line: 1828, column: 14, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1828, column: 2)
!6031 = !DILocation(line: 1828, column: 18, scope: !6030)
!6032 = !DILocation(line: 1828, column: 22, scope: !6030)
!6033 = !DILocation(line: 1828, column: 16, scope: !6030)
!6034 = !DILocation(line: 1828, column: 2, scope: !6027)
!6035 = !DILocation(line: 1829, column: 14, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 1828, column: 54)
!6037 = !DILocation(line: 1829, column: 18, scope: !6036)
!6038 = !DILocation(line: 1829, column: 25, scope: !6036)
!6039 = !DILocation(line: 1829, column: 3, scope: !6036)
!6040 = !DILocation(line: 1831, column: 2, scope: !6036)
!6041 = !DILocation(line: 1828, column: 32, scope: !6030)
!6042 = !DILocation(line: 1828, column: 39, scope: !6030)
!6043 = !DILocation(line: 1828, column: 50, scope: !6030)
!6044 = !DILocation(line: 1828, column: 2, scope: !6030)
!6045 = distinct !{!6045, !6034, !6046}
!6046 = !DILocation(line: 1831, column: 2, scope: !6027)
!6047 = !DILocation(line: 1832, column: 1, scope: !5979)
!6048 = distinct !DISubprogram(name: "BKE_key_convert_to_mesh", scope: !3, file: !3, line: 1834, type: !6049, scopeLine: 1835, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!6049 = !DISubroutineType(types: !6050)
!6050 = !{null, !313, !215}
!6051 = !DILocalVariable(name: "kb", arg: 1, scope: !6048, file: !3, line: 1834, type: !313)
!6052 = !DILocation(line: 1834, column: 40, scope: !6048)
!6053 = !DILocalVariable(name: "me", arg: 2, scope: !6048, file: !3, line: 1834, type: !215)
!6054 = !DILocation(line: 1834, column: 50, scope: !6048)
!6055 = !DILocalVariable(name: "mvert", scope: !6048, file: !3, line: 1836, type: !1770)
!6056 = !DILocation(line: 1836, column: 9, scope: !6048)
!6057 = !DILocalVariable(name: "fp", scope: !6048, file: !3, line: 1837, type: !5645)
!6058 = !DILocation(line: 1837, column: 15, scope: !6048)
!6059 = !DILocalVariable(name: "a", scope: !6048, file: !3, line: 1838, type: !176)
!6060 = !DILocation(line: 1838, column: 6, scope: !6048)
!6061 = !DILocalVariable(name: "tot", scope: !6048, file: !3, line: 1838, type: !176)
!6062 = !DILocation(line: 1838, column: 9, scope: !6048)
!6063 = !DILocation(line: 1840, column: 10, scope: !6048)
!6064 = !DILocation(line: 1840, column: 14, scope: !6048)
!6065 = !DILocation(line: 1840, column: 8, scope: !6048)
!6066 = !DILocation(line: 1841, column: 7, scope: !6048)
!6067 = !DILocation(line: 1841, column: 11, scope: !6048)
!6068 = !DILocation(line: 1841, column: 5, scope: !6048)
!6069 = !DILocation(line: 1843, column: 15, scope: !6048)
!6070 = !DILocation(line: 1843, column: 19, scope: !6048)
!6071 = !DILocation(line: 1843, column: 28, scope: !6048)
!6072 = !DILocation(line: 1843, column: 32, scope: !6048)
!6073 = !DILocation(line: 1843, column: 8, scope: !6048)
!6074 = !DILocation(line: 1843, column: 6, scope: !6048)
!6075 = !DILocation(line: 1845, column: 9, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 1845, column: 2)
!6077 = !DILocation(line: 1845, column: 7, scope: !6076)
!6078 = !DILocation(line: 1845, column: 14, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 1845, column: 2)
!6080 = !DILocation(line: 1845, column: 18, scope: !6079)
!6081 = !DILocation(line: 1845, column: 16, scope: !6079)
!6082 = !DILocation(line: 1845, column: 2, scope: !6076)
!6083 = !DILocation(line: 1846, column: 14, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6079, file: !3, line: 1845, column: 46)
!6085 = !DILocation(line: 1846, column: 21, scope: !6084)
!6086 = !DILocation(line: 1846, column: 25, scope: !6084)
!6087 = !DILocation(line: 1846, column: 3, scope: !6084)
!6088 = !DILocation(line: 1847, column: 2, scope: !6084)
!6089 = !DILocation(line: 1845, column: 24, scope: !6079)
!6090 = !DILocation(line: 1845, column: 31, scope: !6079)
!6091 = !DILocation(line: 1845, column: 42, scope: !6079)
!6092 = !DILocation(line: 1845, column: 2, scope: !6079)
!6093 = distinct !{!6093, !6082, !6094}
!6094 = !DILocation(line: 1847, column: 2, scope: !6076)
!6095 = !DILocation(line: 1848, column: 1, scope: !6048)
!6096 = distinct !DISubprogram(name: "BKE_key_convert_to_vertcos", scope: !3, file: !3, line: 1851, type: !6097, scopeLine: 1852, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!6097 = !DISubroutineType(types: !6098)
!6098 = !{!3621, !3722, !313}
!6099 = !DILocalVariable(name: "ob", arg: 1, scope: !6096, file: !3, line: 1851, type: !3722)
!6100 = !DILocation(line: 1851, column: 44, scope: !6096)
!6101 = !DILocalVariable(name: "kb", arg: 2, scope: !6096, file: !3, line: 1851, type: !313)
!6102 = !DILocation(line: 1851, column: 58, scope: !6096)
!6103 = !DILocalVariable(name: "vertCos", scope: !6096, file: !3, line: 1853, type: !3621)
!6104 = !DILocation(line: 1853, column: 10, scope: !6096)
!6105 = !DILocalVariable(name: "co", scope: !6096, file: !3, line: 1853, type: !213)
!6106 = !DILocation(line: 1853, column: 24, scope: !6096)
!6107 = !DILocalVariable(name: "fp", scope: !6096, file: !3, line: 1854, type: !5645)
!6108 = !DILocation(line: 1854, column: 15, scope: !6096)
!6109 = !DILocation(line: 1854, column: 20, scope: !6096)
!6110 = !DILocation(line: 1854, column: 24, scope: !6096)
!6111 = !DILocalVariable(name: "tot", scope: !6096, file: !3, line: 1855, type: !176)
!6112 = !DILocation(line: 1855, column: 6, scope: !6096)
!6113 = !DILocalVariable(name: "a", scope: !6096, file: !3, line: 1855, type: !176)
!6114 = !DILocation(line: 1855, column: 15, scope: !6096)
!6115 = !DILocation(line: 1858, column: 6, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 1858, column: 6)
!6117 = !DILocation(line: 1858, column: 10, scope: !6116)
!6118 = !DILocation(line: 1858, column: 15, scope: !6116)
!6119 = !DILocation(line: 1858, column: 6, scope: !6096)
!6120 = !DILocalVariable(name: "me", scope: !6121, file: !3, line: 1859, type: !215)
!6121 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 1858, column: 27)
!6122 = !DILocation(line: 1859, column: 9, scope: !6121)
!6123 = !DILocation(line: 1859, column: 22, scope: !6121)
!6124 = !DILocation(line: 1859, column: 26, scope: !6121)
!6125 = !DILocation(line: 1859, column: 14, scope: !6121)
!6126 = !DILocation(line: 1860, column: 9, scope: !6121)
!6127 = !DILocation(line: 1860, column: 13, scope: !6121)
!6128 = !DILocation(line: 1860, column: 7, scope: !6121)
!6129 = !DILocation(line: 1861, column: 2, scope: !6121)
!6130 = !DILocation(line: 1862, column: 11, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 1862, column: 11)
!6132 = !DILocation(line: 1862, column: 15, scope: !6131)
!6133 = !DILocation(line: 1862, column: 20, scope: !6131)
!6134 = !DILocation(line: 1862, column: 11, scope: !6116)
!6135 = !DILocalVariable(name: "lt", scope: !6136, file: !3, line: 1863, type: !1784)
!6136 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 1862, column: 35)
!6137 = !DILocation(line: 1863, column: 12, scope: !6136)
!6138 = !DILocation(line: 1863, column: 28, scope: !6136)
!6139 = !DILocation(line: 1863, column: 32, scope: !6136)
!6140 = !DILocation(line: 1863, column: 17, scope: !6136)
!6141 = !DILocation(line: 1864, column: 9, scope: !6136)
!6142 = !DILocation(line: 1864, column: 13, scope: !6136)
!6143 = !DILocation(line: 1864, column: 21, scope: !6136)
!6144 = !DILocation(line: 1864, column: 25, scope: !6136)
!6145 = !DILocation(line: 1864, column: 19, scope: !6136)
!6146 = !DILocation(line: 1864, column: 33, scope: !6136)
!6147 = !DILocation(line: 1864, column: 37, scope: !6136)
!6148 = !DILocation(line: 1864, column: 31, scope: !6136)
!6149 = !DILocation(line: 1864, column: 7, scope: !6136)
!6150 = !DILocation(line: 1865, column: 2, scope: !6136)
!6151 = !DILocation(line: 1866, column: 11, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 1866, column: 11)
!6153 = !DILocation(line: 1866, column: 11, scope: !6131)
!6154 = !DILocalVariable(name: "cu", scope: !6155, file: !3, line: 1867, type: !1834)
!6155 = distinct !DILexicalBlock(scope: !6152, file: !3, line: 1866, column: 46)
!6156 = !DILocation(line: 1867, column: 10, scope: !6155)
!6157 = !DILocation(line: 1867, column: 24, scope: !6155)
!6158 = !DILocation(line: 1867, column: 28, scope: !6155)
!6159 = !DILocation(line: 1867, column: 15, scope: !6155)
!6160 = !DILocation(line: 1868, column: 35, scope: !6155)
!6161 = !DILocation(line: 1868, column: 39, scope: !6155)
!6162 = !DILocation(line: 1868, column: 9, scope: !6155)
!6163 = !DILocation(line: 1868, column: 7, scope: !6155)
!6164 = !DILocation(line: 1869, column: 2, scope: !6155)
!6165 = !DILocation(line: 1871, column: 6, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 1871, column: 6)
!6167 = !DILocation(line: 1871, column: 10, scope: !6166)
!6168 = !DILocation(line: 1871, column: 6, scope: !6096)
!6169 = !DILocation(line: 1871, column: 16, scope: !6166)
!6170 = !DILocation(line: 1873, column: 12, scope: !6096)
!6171 = !DILocation(line: 1873, column: 24, scope: !6096)
!6172 = !DILocation(line: 1873, column: 28, scope: !6096)
!6173 = !DILocation(line: 1873, column: 10, scope: !6096)
!6174 = !DILocation(line: 1876, column: 16, scope: !6096)
!6175 = !DILocation(line: 1876, column: 7, scope: !6096)
!6176 = !DILocation(line: 1876, column: 5, scope: !6096)
!6177 = !DILocation(line: 1878, column: 6, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 1878, column: 6)
!6179 = !DILocation(line: 1878, column: 6, scope: !6096)
!6180 = !DILocation(line: 1879, column: 10, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6182, file: !3, line: 1879, column: 3)
!6182 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 1878, column: 43)
!6183 = !DILocation(line: 1879, column: 8, scope: !6181)
!6184 = !DILocation(line: 1879, column: 15, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6181, file: !3, line: 1879, column: 3)
!6186 = !DILocation(line: 1879, column: 19, scope: !6185)
!6187 = !DILocation(line: 1879, column: 17, scope: !6185)
!6188 = !DILocation(line: 1879, column: 3, scope: !6181)
!6189 = !DILocation(line: 1880, column: 15, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6185, file: !3, line: 1879, column: 47)
!6191 = !DILocation(line: 1880, column: 19, scope: !6190)
!6192 = !DILocation(line: 1880, column: 4, scope: !6190)
!6193 = !DILocation(line: 1881, column: 3, scope: !6190)
!6194 = !DILocation(line: 1879, column: 25, scope: !6185)
!6195 = !DILocation(line: 1879, column: 32, scope: !6185)
!6196 = !DILocation(line: 1879, column: 41, scope: !6185)
!6197 = !DILocation(line: 1879, column: 3, scope: !6185)
!6198 = distinct !{!6198, !6188, !6199}
!6199 = !DILocation(line: 1881, column: 3, scope: !6181)
!6200 = !DILocation(line: 1882, column: 2, scope: !6182)
!6201 = !DILocation(line: 1883, column: 11, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 1883, column: 11)
!6203 = !DILocation(line: 1883, column: 11, scope: !6178)
!6204 = !DILocalVariable(name: "cu", scope: !6205, file: !3, line: 1884, type: !1834)
!6205 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 1883, column: 46)
!6206 = !DILocation(line: 1884, column: 10, scope: !6205)
!6207 = !DILocation(line: 1884, column: 24, scope: !6205)
!6208 = !DILocation(line: 1884, column: 28, scope: !6205)
!6209 = !DILocation(line: 1884, column: 15, scope: !6205)
!6210 = !DILocalVariable(name: "nu", scope: !6205, file: !3, line: 1885, type: !4157)
!6211 = !DILocation(line: 1885, column: 9, scope: !6205)
!6212 = !DILocation(line: 1885, column: 14, scope: !6205)
!6213 = !DILocation(line: 1885, column: 18, scope: !6205)
!6214 = !DILocation(line: 1885, column: 23, scope: !6205)
!6215 = !DILocalVariable(name: "bezt", scope: !6205, file: !3, line: 1886, type: !4183)
!6216 = !DILocation(line: 1886, column: 14, scope: !6205)
!6217 = !DILocalVariable(name: "bp", scope: !6205, file: !3, line: 1887, type: !4180)
!6218 = !DILocation(line: 1887, column: 11, scope: !6205)
!6219 = !DILocation(line: 1889, column: 3, scope: !6205)
!6220 = !DILocation(line: 1889, column: 10, scope: !6205)
!6221 = !DILocation(line: 1890, column: 8, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6223, file: !3, line: 1890, column: 8)
!6223 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 1889, column: 14)
!6224 = !DILocation(line: 1890, column: 12, scope: !6222)
!6225 = !DILocation(line: 1890, column: 8, scope: !6223)
!6226 = !DILocalVariable(name: "i", scope: !6227, file: !3, line: 1891, type: !176)
!6227 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 1890, column: 18)
!6228 = !DILocation(line: 1891, column: 9, scope: !6227)
!6229 = !DILocation(line: 1892, column: 12, scope: !6227)
!6230 = !DILocation(line: 1892, column: 16, scope: !6227)
!6231 = !DILocation(line: 1892, column: 10, scope: !6227)
!6232 = !DILocation(line: 1893, column: 9, scope: !6227)
!6233 = !DILocation(line: 1893, column: 13, scope: !6227)
!6234 = !DILocation(line: 1893, column: 7, scope: !6227)
!6235 = !DILocation(line: 1895, column: 5, scope: !6227)
!6236 = !DILocation(line: 1895, column: 13, scope: !6227)
!6237 = !DILocation(line: 1896, column: 13, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 1896, column: 6)
!6239 = distinct !DILexicalBlock(scope: !6227, file: !3, line: 1895, column: 17)
!6240 = !DILocation(line: 1896, column: 11, scope: !6238)
!6241 = !DILocation(line: 1896, column: 18, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 1896, column: 6)
!6243 = !DILocation(line: 1896, column: 20, scope: !6242)
!6244 = !DILocation(line: 1896, column: 6, scope: !6238)
!6245 = !DILocation(line: 1897, column: 18, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6242, file: !3, line: 1896, column: 30)
!6247 = !DILocation(line: 1897, column: 22, scope: !6246)
!6248 = !DILocation(line: 1897, column: 7, scope: !6246)
!6249 = !DILocation(line: 1898, column: 10, scope: !6246)
!6250 = !DILocation(line: 1898, column: 19, scope: !6246)
!6251 = !DILocation(line: 1899, column: 6, scope: !6246)
!6252 = !DILocation(line: 1896, column: 26, scope: !6242)
!6253 = !DILocation(line: 1896, column: 6, scope: !6242)
!6254 = distinct !{!6254, !6244, !6255}
!6255 = !DILocation(line: 1899, column: 6, scope: !6238)
!6256 = !DILocation(line: 1901, column: 9, scope: !6239)
!6257 = !DILocation(line: 1903, column: 10, scope: !6239)
!6258 = distinct !{!6258, !6235, !6259}
!6259 = !DILocation(line: 1904, column: 5, scope: !6227)
!6260 = !DILocation(line: 1905, column: 4, scope: !6227)
!6261 = !DILocation(line: 1907, column: 10, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 1906, column: 9)
!6263 = !DILocation(line: 1907, column: 14, scope: !6262)
!6264 = !DILocation(line: 1907, column: 8, scope: !6262)
!6265 = !DILocation(line: 1908, column: 9, scope: !6262)
!6266 = !DILocation(line: 1908, column: 13, scope: !6262)
!6267 = !DILocation(line: 1908, column: 21, scope: !6262)
!6268 = !DILocation(line: 1908, column: 25, scope: !6262)
!6269 = !DILocation(line: 1908, column: 19, scope: !6262)
!6270 = !DILocation(line: 1908, column: 7, scope: !6262)
!6271 = !DILocation(line: 1910, column: 5, scope: !6262)
!6272 = !DILocation(line: 1910, column: 13, scope: !6262)
!6273 = !DILocation(line: 1911, column: 17, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 1910, column: 17)
!6275 = !DILocation(line: 1911, column: 21, scope: !6274)
!6276 = !DILocation(line: 1911, column: 6, scope: !6274)
!6277 = !DILocation(line: 1913, column: 9, scope: !6274)
!6278 = !DILocation(line: 1914, column: 9, scope: !6274)
!6279 = !DILocation(line: 1916, column: 8, scope: !6274)
!6280 = distinct !{!6280, !6271, !6281}
!6281 = !DILocation(line: 1917, column: 5, scope: !6262)
!6282 = !DILocation(line: 1920, column: 9, scope: !6223)
!6283 = !DILocation(line: 1920, column: 13, scope: !6223)
!6284 = !DILocation(line: 1920, column: 7, scope: !6223)
!6285 = distinct !{!6285, !6219, !6286}
!6286 = !DILocation(line: 1921, column: 3, scope: !6205)
!6287 = !DILocation(line: 1922, column: 2, scope: !6205)
!6288 = !DILocation(line: 1924, column: 9, scope: !6096)
!6289 = !DILocation(line: 1924, column: 2, scope: !6096)
!6290 = !DILocation(line: 1925, column: 1, scope: !6096)
!6291 = distinct !DISubprogram(name: "BKE_key_convert_from_vertcos", scope: !3, file: !3, line: 1927, type: !6292, scopeLine: 1928, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!6292 = !DISubroutineType(types: !6293)
!6293 = !{null, !3722, !313, !3621}
!6294 = !DILocalVariable(name: "ob", arg: 1, scope: !6291, file: !3, line: 1927, type: !3722)
!6295 = !DILocation(line: 1927, column: 43, scope: !6291)
!6296 = !DILocalVariable(name: "kb", arg: 2, scope: !6291, file: !3, line: 1927, type: !313)
!6297 = !DILocation(line: 1927, column: 57, scope: !6291)
!6298 = !DILocalVariable(name: "vertCos", arg: 3, scope: !6291, file: !3, line: 1927, type: !3621)
!6299 = !DILocation(line: 1927, column: 69, scope: !6291)
!6300 = !DILocalVariable(name: "co", scope: !6291, file: !3, line: 1929, type: !213)
!6301 = !DILocation(line: 1929, column: 9, scope: !6291)
!6302 = !DILocation(line: 1929, column: 23, scope: !6291)
!6303 = !DILocation(line: 1929, column: 14, scope: !6291)
!6304 = !DILocalVariable(name: "fp", scope: !6291, file: !3, line: 1929, type: !213)
!6305 = !DILocation(line: 1929, column: 33, scope: !6291)
!6306 = !DILocalVariable(name: "tot", scope: !6291, file: !3, line: 1930, type: !176)
!6307 = !DILocation(line: 1930, column: 6, scope: !6291)
!6308 = !DILocalVariable(name: "a", scope: !6291, file: !3, line: 1930, type: !176)
!6309 = !DILocation(line: 1930, column: 15, scope: !6291)
!6310 = !DILocalVariable(name: "elemsize", scope: !6291, file: !3, line: 1930, type: !176)
!6311 = !DILocation(line: 1930, column: 18, scope: !6291)
!6312 = !DILocation(line: 1932, column: 6, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 1932, column: 6)
!6314 = !DILocation(line: 1932, column: 10, scope: !6313)
!6315 = !DILocation(line: 1932, column: 6, scope: !6291)
!6316 = !DILocation(line: 1932, column: 16, scope: !6313)
!6317 = !DILocation(line: 1932, column: 26, scope: !6313)
!6318 = !DILocation(line: 1932, column: 30, scope: !6313)
!6319 = !DILocation(line: 1935, column: 6, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 1935, column: 6)
!6321 = !DILocation(line: 1935, column: 10, scope: !6320)
!6322 = !DILocation(line: 1935, column: 15, scope: !6320)
!6323 = !DILocation(line: 1935, column: 6, scope: !6291)
!6324 = !DILocalVariable(name: "me", scope: !6325, file: !3, line: 1936, type: !215)
!6325 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 1935, column: 27)
!6326 = !DILocation(line: 1936, column: 9, scope: !6325)
!6327 = !DILocation(line: 1936, column: 22, scope: !6325)
!6328 = !DILocation(line: 1936, column: 26, scope: !6325)
!6329 = !DILocation(line: 1936, column: 14, scope: !6325)
!6330 = !DILocation(line: 1937, column: 9, scope: !6325)
!6331 = !DILocation(line: 1937, column: 13, scope: !6325)
!6332 = !DILocation(line: 1937, column: 7, scope: !6325)
!6333 = !DILocation(line: 1938, column: 14, scope: !6325)
!6334 = !DILocation(line: 1938, column: 18, scope: !6325)
!6335 = !DILocation(line: 1938, column: 23, scope: !6325)
!6336 = !DILocation(line: 1938, column: 12, scope: !6325)
!6337 = !DILocation(line: 1939, column: 2, scope: !6325)
!6338 = !DILocation(line: 1940, column: 11, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 1940, column: 11)
!6340 = !DILocation(line: 1940, column: 15, scope: !6339)
!6341 = !DILocation(line: 1940, column: 20, scope: !6339)
!6342 = !DILocation(line: 1940, column: 11, scope: !6320)
!6343 = !DILocalVariable(name: "lt", scope: !6344, file: !3, line: 1941, type: !1784)
!6344 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 1940, column: 35)
!6345 = !DILocation(line: 1941, column: 12, scope: !6344)
!6346 = !DILocation(line: 1941, column: 28, scope: !6344)
!6347 = !DILocation(line: 1941, column: 32, scope: !6344)
!6348 = !DILocation(line: 1941, column: 17, scope: !6344)
!6349 = !DILocation(line: 1942, column: 9, scope: !6344)
!6350 = !DILocation(line: 1942, column: 13, scope: !6344)
!6351 = !DILocation(line: 1942, column: 21, scope: !6344)
!6352 = !DILocation(line: 1942, column: 25, scope: !6344)
!6353 = !DILocation(line: 1942, column: 19, scope: !6344)
!6354 = !DILocation(line: 1942, column: 33, scope: !6344)
!6355 = !DILocation(line: 1942, column: 37, scope: !6344)
!6356 = !DILocation(line: 1942, column: 31, scope: !6344)
!6357 = !DILocation(line: 1942, column: 7, scope: !6344)
!6358 = !DILocation(line: 1943, column: 14, scope: !6344)
!6359 = !DILocation(line: 1943, column: 18, scope: !6344)
!6360 = !DILocation(line: 1943, column: 23, scope: !6344)
!6361 = !DILocation(line: 1943, column: 12, scope: !6344)
!6362 = !DILocation(line: 1944, column: 2, scope: !6344)
!6363 = !DILocation(line: 1945, column: 11, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 1945, column: 11)
!6365 = !DILocation(line: 1945, column: 11, scope: !6339)
!6366 = !DILocalVariable(name: "cu", scope: !6367, file: !3, line: 1946, type: !1834)
!6367 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 1945, column: 46)
!6368 = !DILocation(line: 1946, column: 10, scope: !6367)
!6369 = !DILocation(line: 1946, column: 24, scope: !6367)
!6370 = !DILocation(line: 1946, column: 28, scope: !6367)
!6371 = !DILocation(line: 1946, column: 15, scope: !6367)
!6372 = !DILocation(line: 1947, column: 14, scope: !6367)
!6373 = !DILocation(line: 1947, column: 18, scope: !6367)
!6374 = !DILocation(line: 1947, column: 23, scope: !6367)
!6375 = !DILocation(line: 1947, column: 12, scope: !6367)
!6376 = !DILocation(line: 1948, column: 35, scope: !6367)
!6377 = !DILocation(line: 1948, column: 39, scope: !6367)
!6378 = !DILocation(line: 1948, column: 9, scope: !6367)
!6379 = !DILocation(line: 1948, column: 7, scope: !6367)
!6380 = !DILocation(line: 1949, column: 2, scope: !6367)
!6381 = !DILocation(line: 1951, column: 6, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 1951, column: 6)
!6383 = !DILocation(line: 1951, column: 10, scope: !6382)
!6384 = !DILocation(line: 1951, column: 6, scope: !6291)
!6385 = !DILocation(line: 1952, column: 3, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 1951, column: 16)
!6387 = !DILocation(line: 1952, column: 7, scope: !6386)
!6388 = !DILocation(line: 1952, column: 12, scope: !6386)
!6389 = !DILocation(line: 1953, column: 3, scope: !6386)
!6390 = !DILocation(line: 1956, column: 18, scope: !6291)
!6391 = !DILocation(line: 1956, column: 30, scope: !6291)
!6392 = !DILocation(line: 1956, column: 36, scope: !6291)
!6393 = !DILocation(line: 1956, column: 34, scope: !6291)
!6394 = !DILocation(line: 1956, column: 7, scope: !6291)
!6395 = !DILocation(line: 1956, column: 11, scope: !6291)
!6396 = !DILocation(line: 1956, column: 16, scope: !6291)
!6397 = !DILocation(line: 1956, column: 5, scope: !6291)
!6398 = !DILocation(line: 1960, column: 6, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 1960, column: 6)
!6400 = !DILocation(line: 1960, column: 6, scope: !6291)
!6401 = !DILocation(line: 1961, column: 10, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6403, file: !3, line: 1961, column: 3)
!6403 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 1960, column: 43)
!6404 = !DILocation(line: 1961, column: 8, scope: !6402)
!6405 = !DILocation(line: 1961, column: 15, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6402, file: !3, line: 1961, column: 3)
!6407 = !DILocation(line: 1961, column: 19, scope: !6406)
!6408 = !DILocation(line: 1961, column: 17, scope: !6406)
!6409 = !DILocation(line: 1961, column: 3, scope: !6402)
!6410 = !DILocation(line: 1962, column: 15, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 1961, column: 47)
!6412 = !DILocation(line: 1962, column: 19, scope: !6411)
!6413 = !DILocation(line: 1962, column: 4, scope: !6411)
!6414 = !DILocation(line: 1963, column: 3, scope: !6411)
!6415 = !DILocation(line: 1961, column: 25, scope: !6406)
!6416 = !DILocation(line: 1961, column: 32, scope: !6406)
!6417 = !DILocation(line: 1961, column: 41, scope: !6406)
!6418 = !DILocation(line: 1961, column: 3, scope: !6406)
!6419 = distinct !{!6419, !6409, !6420}
!6420 = !DILocation(line: 1963, column: 3, scope: !6402)
!6421 = !DILocation(line: 1964, column: 2, scope: !6403)
!6422 = !DILocation(line: 1965, column: 11, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 1965, column: 11)
!6424 = !DILocation(line: 1965, column: 11, scope: !6399)
!6425 = !DILocalVariable(name: "cu", scope: !6426, file: !3, line: 1966, type: !1834)
!6426 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 1965, column: 46)
!6427 = !DILocation(line: 1966, column: 10, scope: !6426)
!6428 = !DILocation(line: 1966, column: 24, scope: !6426)
!6429 = !DILocation(line: 1966, column: 28, scope: !6426)
!6430 = !DILocation(line: 1966, column: 15, scope: !6426)
!6431 = !DILocalVariable(name: "nu", scope: !6426, file: !3, line: 1967, type: !4157)
!6432 = !DILocation(line: 1967, column: 9, scope: !6426)
!6433 = !DILocation(line: 1967, column: 14, scope: !6426)
!6434 = !DILocation(line: 1967, column: 18, scope: !6426)
!6435 = !DILocation(line: 1967, column: 23, scope: !6426)
!6436 = !DILocalVariable(name: "bezt", scope: !6426, file: !3, line: 1968, type: !4183)
!6437 = !DILocation(line: 1968, column: 14, scope: !6426)
!6438 = !DILocalVariable(name: "bp", scope: !6426, file: !3, line: 1969, type: !4180)
!6439 = !DILocation(line: 1969, column: 11, scope: !6426)
!6440 = !DILocation(line: 1971, column: 3, scope: !6426)
!6441 = !DILocation(line: 1971, column: 10, scope: !6426)
!6442 = !DILocation(line: 1972, column: 8, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 1972, column: 8)
!6444 = distinct !DILexicalBlock(scope: !6426, file: !3, line: 1971, column: 14)
!6445 = !DILocation(line: 1972, column: 12, scope: !6443)
!6446 = !DILocation(line: 1972, column: 8, scope: !6444)
!6447 = !DILocalVariable(name: "i", scope: !6448, file: !3, line: 1973, type: !176)
!6448 = distinct !DILexicalBlock(scope: !6443, file: !3, line: 1972, column: 18)
!6449 = !DILocation(line: 1973, column: 9, scope: !6448)
!6450 = !DILocation(line: 1974, column: 12, scope: !6448)
!6451 = !DILocation(line: 1974, column: 16, scope: !6448)
!6452 = !DILocation(line: 1974, column: 10, scope: !6448)
!6453 = !DILocation(line: 1975, column: 9, scope: !6448)
!6454 = !DILocation(line: 1975, column: 13, scope: !6448)
!6455 = !DILocation(line: 1975, column: 7, scope: !6448)
!6456 = !DILocation(line: 1977, column: 5, scope: !6448)
!6457 = !DILocation(line: 1977, column: 13, scope: !6448)
!6458 = !DILocation(line: 1978, column: 13, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 1978, column: 6)
!6460 = distinct !DILexicalBlock(scope: !6448, file: !3, line: 1977, column: 17)
!6461 = !DILocation(line: 1978, column: 11, scope: !6459)
!6462 = !DILocation(line: 1978, column: 18, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 1978, column: 6)
!6464 = !DILocation(line: 1978, column: 20, scope: !6463)
!6465 = !DILocation(line: 1978, column: 6, scope: !6459)
!6466 = !DILocation(line: 1979, column: 18, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 1978, column: 30)
!6468 = !DILocation(line: 1979, column: 22, scope: !6467)
!6469 = !DILocation(line: 1979, column: 7, scope: !6467)
!6470 = !DILocation(line: 1980, column: 10, scope: !6467)
!6471 = !DILocation(line: 1980, column: 19, scope: !6467)
!6472 = !DILocation(line: 1981, column: 6, scope: !6467)
!6473 = !DILocation(line: 1978, column: 26, scope: !6463)
!6474 = !DILocation(line: 1978, column: 6, scope: !6463)
!6475 = distinct !{!6475, !6465, !6476}
!6476 = !DILocation(line: 1981, column: 6, scope: !6459)
!6477 = !DILocation(line: 1983, column: 9, scope: !6460)
!6478 = !DILocation(line: 1985, column: 10, scope: !6460)
!6479 = distinct !{!6479, !6456, !6480}
!6480 = !DILocation(line: 1986, column: 5, scope: !6448)
!6481 = !DILocation(line: 1987, column: 4, scope: !6448)
!6482 = !DILocation(line: 1989, column: 10, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6443, file: !3, line: 1988, column: 9)
!6484 = !DILocation(line: 1989, column: 14, scope: !6483)
!6485 = !DILocation(line: 1989, column: 8, scope: !6483)
!6486 = !DILocation(line: 1990, column: 9, scope: !6483)
!6487 = !DILocation(line: 1990, column: 13, scope: !6483)
!6488 = !DILocation(line: 1990, column: 21, scope: !6483)
!6489 = !DILocation(line: 1990, column: 25, scope: !6483)
!6490 = !DILocation(line: 1990, column: 19, scope: !6483)
!6491 = !DILocation(line: 1990, column: 7, scope: !6483)
!6492 = !DILocation(line: 1992, column: 5, scope: !6483)
!6493 = !DILocation(line: 1992, column: 13, scope: !6483)
!6494 = !DILocation(line: 1993, column: 17, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6483, file: !3, line: 1992, column: 17)
!6496 = !DILocation(line: 1993, column: 21, scope: !6495)
!6497 = !DILocation(line: 1993, column: 6, scope: !6495)
!6498 = !DILocation(line: 1995, column: 9, scope: !6495)
!6499 = !DILocation(line: 1996, column: 9, scope: !6495)
!6500 = !DILocation(line: 1998, column: 8, scope: !6495)
!6501 = distinct !{!6501, !6492, !6502}
!6502 = !DILocation(line: 1999, column: 5, scope: !6483)
!6503 = !DILocation(line: 2002, column: 9, scope: !6444)
!6504 = !DILocation(line: 2002, column: 13, scope: !6444)
!6505 = !DILocation(line: 2002, column: 7, scope: !6444)
!6506 = distinct !{!6506, !6440, !6507}
!6507 = !DILocation(line: 2003, column: 3, scope: !6426)
!6508 = !DILocation(line: 2004, column: 2, scope: !6426)
!6509 = !DILocation(line: 2005, column: 1, scope: !6291)
!6510 = distinct !DISubprogram(name: "BKE_key_convert_from_offset", scope: !3, file: !3, line: 2007, type: !6292, scopeLine: 2008, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!6511 = !DILocalVariable(name: "ob", arg: 1, scope: !6510, file: !3, line: 2007, type: !3722)
!6512 = !DILocation(line: 2007, column: 42, scope: !6510)
!6513 = !DILocalVariable(name: "kb", arg: 2, scope: !6510, file: !3, line: 2007, type: !313)
!6514 = !DILocation(line: 2007, column: 56, scope: !6510)
!6515 = !DILocalVariable(name: "ofs", arg: 3, scope: !6510, file: !3, line: 2007, type: !3621)
!6516 = !DILocation(line: 2007, column: 68, scope: !6510)
!6517 = !DILocalVariable(name: "a", scope: !6510, file: !3, line: 2009, type: !176)
!6518 = !DILocation(line: 2009, column: 6, scope: !6510)
!6519 = !DILocalVariable(name: "co", scope: !6510, file: !3, line: 2010, type: !213)
!6520 = !DILocation(line: 2010, column: 9, scope: !6510)
!6521 = !DILocation(line: 2010, column: 23, scope: !6510)
!6522 = !DILocation(line: 2010, column: 14, scope: !6510)
!6523 = !DILocalVariable(name: "fp", scope: !6510, file: !3, line: 2010, type: !213)
!6524 = !DILocation(line: 2010, column: 29, scope: !6510)
!6525 = !DILocation(line: 2010, column: 34, scope: !6510)
!6526 = !DILocation(line: 2010, column: 38, scope: !6510)
!6527 = !DILocation(line: 2012, column: 6, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 2012, column: 6)
!6529 = !DILocation(line: 2012, column: 6, scope: !6510)
!6530 = !DILocation(line: 2013, column: 10, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6532, file: !3, line: 2013, column: 3)
!6532 = distinct !DILexicalBlock(scope: !6528, file: !3, line: 2012, column: 43)
!6533 = !DILocation(line: 2013, column: 8, scope: !6531)
!6534 = !DILocation(line: 2013, column: 15, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6531, file: !3, line: 2013, column: 3)
!6536 = !DILocation(line: 2013, column: 19, scope: !6535)
!6537 = !DILocation(line: 2013, column: 23, scope: !6535)
!6538 = !DILocation(line: 2013, column: 17, scope: !6535)
!6539 = !DILocation(line: 2013, column: 3, scope: !6531)
!6540 = !DILocation(line: 2014, column: 14, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 2013, column: 55)
!6542 = !DILocation(line: 2014, column: 18, scope: !6541)
!6543 = !DILocation(line: 2014, column: 4, scope: !6541)
!6544 = !DILocation(line: 2015, column: 3, scope: !6541)
!6545 = !DILocation(line: 2013, column: 33, scope: !6535)
!6546 = !DILocation(line: 2013, column: 40, scope: !6535)
!6547 = !DILocation(line: 2013, column: 49, scope: !6535)
!6548 = !DILocation(line: 2013, column: 3, scope: !6535)
!6549 = distinct !{!6549, !6539, !6550}
!6550 = !DILocation(line: 2015, column: 3, scope: !6531)
!6551 = !DILocation(line: 2016, column: 2, scope: !6532)
!6552 = !DILocation(line: 2017, column: 11, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6528, file: !3, line: 2017, column: 11)
!6554 = !DILocation(line: 2017, column: 11, scope: !6528)
!6555 = !DILocalVariable(name: "cu", scope: !6556, file: !3, line: 2018, type: !1834)
!6556 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 2017, column: 46)
!6557 = !DILocation(line: 2018, column: 10, scope: !6556)
!6558 = !DILocation(line: 2018, column: 24, scope: !6556)
!6559 = !DILocation(line: 2018, column: 28, scope: !6556)
!6560 = !DILocation(line: 2018, column: 15, scope: !6556)
!6561 = !DILocalVariable(name: "nu", scope: !6556, file: !3, line: 2019, type: !4157)
!6562 = !DILocation(line: 2019, column: 9, scope: !6556)
!6563 = !DILocation(line: 2019, column: 14, scope: !6556)
!6564 = !DILocation(line: 2019, column: 18, scope: !6556)
!6565 = !DILocation(line: 2019, column: 23, scope: !6556)
!6566 = !DILocalVariable(name: "bezt", scope: !6556, file: !3, line: 2020, type: !4183)
!6567 = !DILocation(line: 2020, column: 14, scope: !6556)
!6568 = !DILocalVariable(name: "bp", scope: !6556, file: !3, line: 2021, type: !4180)
!6569 = !DILocation(line: 2021, column: 11, scope: !6556)
!6570 = !DILocation(line: 2023, column: 3, scope: !6556)
!6571 = !DILocation(line: 2023, column: 10, scope: !6556)
!6572 = !DILocation(line: 2024, column: 8, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 2024, column: 8)
!6574 = distinct !DILexicalBlock(scope: !6556, file: !3, line: 2023, column: 14)
!6575 = !DILocation(line: 2024, column: 12, scope: !6573)
!6576 = !DILocation(line: 2024, column: 8, scope: !6574)
!6577 = !DILocalVariable(name: "i", scope: !6578, file: !3, line: 2025, type: !176)
!6578 = distinct !DILexicalBlock(scope: !6573, file: !3, line: 2024, column: 18)
!6579 = !DILocation(line: 2025, column: 9, scope: !6578)
!6580 = !DILocation(line: 2026, column: 12, scope: !6578)
!6581 = !DILocation(line: 2026, column: 16, scope: !6578)
!6582 = !DILocation(line: 2026, column: 10, scope: !6578)
!6583 = !DILocation(line: 2027, column: 9, scope: !6578)
!6584 = !DILocation(line: 2027, column: 13, scope: !6578)
!6585 = !DILocation(line: 2027, column: 7, scope: !6578)
!6586 = !DILocation(line: 2029, column: 5, scope: !6578)
!6587 = !DILocation(line: 2029, column: 13, scope: !6578)
!6588 = !DILocation(line: 2030, column: 13, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 2030, column: 6)
!6590 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 2029, column: 17)
!6591 = !DILocation(line: 2030, column: 11, scope: !6589)
!6592 = !DILocation(line: 2030, column: 18, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 2030, column: 6)
!6594 = !DILocation(line: 2030, column: 20, scope: !6593)
!6595 = !DILocation(line: 2030, column: 6, scope: !6589)
!6596 = !DILocation(line: 2031, column: 17, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 2030, column: 30)
!6598 = !DILocation(line: 2031, column: 21, scope: !6597)
!6599 = !DILocation(line: 2031, column: 7, scope: !6597)
!6600 = !DILocation(line: 2032, column: 10, scope: !6597)
!6601 = !DILocation(line: 2032, column: 19, scope: !6597)
!6602 = !DILocation(line: 2033, column: 6, scope: !6597)
!6603 = !DILocation(line: 2030, column: 26, scope: !6593)
!6604 = !DILocation(line: 2030, column: 6, scope: !6593)
!6605 = distinct !{!6605, !6595, !6606}
!6606 = !DILocation(line: 2033, column: 6, scope: !6589)
!6607 = !DILocation(line: 2035, column: 9, scope: !6590)
!6608 = !DILocation(line: 2037, column: 10, scope: !6590)
!6609 = distinct !{!6609, !6586, !6610}
!6610 = !DILocation(line: 2038, column: 5, scope: !6578)
!6611 = !DILocation(line: 2039, column: 4, scope: !6578)
!6612 = !DILocation(line: 2041, column: 10, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6573, file: !3, line: 2040, column: 9)
!6614 = !DILocation(line: 2041, column: 14, scope: !6613)
!6615 = !DILocation(line: 2041, column: 8, scope: !6613)
!6616 = !DILocation(line: 2042, column: 9, scope: !6613)
!6617 = !DILocation(line: 2042, column: 13, scope: !6613)
!6618 = !DILocation(line: 2042, column: 21, scope: !6613)
!6619 = !DILocation(line: 2042, column: 25, scope: !6613)
!6620 = !DILocation(line: 2042, column: 19, scope: !6613)
!6621 = !DILocation(line: 2042, column: 7, scope: !6613)
!6622 = !DILocation(line: 2044, column: 5, scope: !6613)
!6623 = !DILocation(line: 2044, column: 13, scope: !6613)
!6624 = !DILocation(line: 2045, column: 16, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 2044, column: 17)
!6626 = !DILocation(line: 2045, column: 20, scope: !6625)
!6627 = !DILocation(line: 2045, column: 6, scope: !6625)
!6628 = !DILocation(line: 2047, column: 9, scope: !6625)
!6629 = !DILocation(line: 2048, column: 9, scope: !6625)
!6630 = !DILocation(line: 2050, column: 8, scope: !6625)
!6631 = distinct !{!6631, !6622, !6632}
!6632 = !DILocation(line: 2051, column: 5, scope: !6613)
!6633 = !DILocation(line: 2054, column: 9, scope: !6574)
!6634 = !DILocation(line: 2054, column: 13, scope: !6574)
!6635 = !DILocation(line: 2054, column: 7, scope: !6574)
!6636 = distinct !{!6636, !6570, !6637}
!6637 = !DILocation(line: 2055, column: 3, scope: !6556)
!6638 = !DILocation(line: 2056, column: 2, scope: !6556)
!6639 = !DILocation(line: 2057, column: 1, scope: !6510)
!6640 = distinct !DISubprogram(name: "add_v3_v3", scope: !5642, file: !5642, line: 302, type: !5643, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!6641 = !DILocalVariable(name: "r", arg: 1, scope: !6640, file: !5642, line: 302, type: !213)
!6642 = !DILocation(line: 302, column: 30, scope: !6640)
!6643 = !DILocalVariable(name: "a", arg: 2, scope: !6640, file: !5642, line: 302, type: !5645)
!6644 = !DILocation(line: 302, column: 48, scope: !6640)
!6645 = !DILocation(line: 304, column: 10, scope: !6640)
!6646 = !DILocation(line: 304, column: 2, scope: !6640)
!6647 = !DILocation(line: 304, column: 7, scope: !6640)
!6648 = !DILocation(line: 305, column: 10, scope: !6640)
!6649 = !DILocation(line: 305, column: 2, scope: !6640)
!6650 = !DILocation(line: 305, column: 7, scope: !6640)
!6651 = !DILocation(line: 306, column: 10, scope: !6640)
!6652 = !DILocation(line: 306, column: 2, scope: !6640)
!6653 = !DILocation(line: 306, column: 7, scope: !6640)
!6654 = !DILocation(line: 307, column: 1, scope: !6640)
!6655 = distinct !DISubprogram(name: "BKE_keyblock_move", scope: !3, file: !3, line: 2068, type: !6656, scopeLine: 2069, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!6656 = !DISubroutineType(types: !6657)
!6657 = !{!785, !3722, !176, !176}
!6658 = !DILocalVariable(name: "ob", arg: 1, scope: !6655, file: !3, line: 2068, type: !3722)
!6659 = !DILocation(line: 2068, column: 32, scope: !6655)
!6660 = !DILocalVariable(name: "org_index", arg: 2, scope: !6655, file: !3, line: 2068, type: !176)
!6661 = !DILocation(line: 2068, column: 40, scope: !6655)
!6662 = !DILocalVariable(name: "new_index", arg: 3, scope: !6655, file: !3, line: 2068, type: !176)
!6663 = !DILocation(line: 2068, column: 55, scope: !6655)
!6664 = !DILocalVariable(name: "key", scope: !6655, file: !3, line: 2070, type: !1952)
!6665 = !DILocation(line: 2070, column: 7, scope: !6655)
!6666 = !DILocation(line: 2070, column: 33, scope: !6655)
!6667 = !DILocation(line: 2070, column: 13, scope: !6655)
!6668 = !DILocalVariable(name: "kb", scope: !6655, file: !3, line: 2071, type: !313)
!6669 = !DILocation(line: 2071, column: 12, scope: !6655)
!6670 = !DILocalVariable(name: "act_index", scope: !6655, file: !3, line: 2072, type: !2858)
!6671 = !DILocation(line: 2072, column: 12, scope: !6655)
!6672 = !DILocation(line: 2072, column: 24, scope: !6655)
!6673 = !DILocation(line: 2072, column: 28, scope: !6655)
!6674 = !DILocation(line: 2072, column: 36, scope: !6655)
!6675 = !DILocalVariable(name: "totkey", scope: !6655, file: !3, line: 2073, type: !2858)
!6676 = !DILocation(line: 2073, column: 12, scope: !6655)
!6677 = !DILocation(line: 2073, column: 21, scope: !6655)
!6678 = !DILocation(line: 2073, column: 26, scope: !6655)
!6679 = !DILocalVariable(name: "i", scope: !6655, file: !3, line: 2074, type: !176)
!6680 = !DILocation(line: 2074, column: 6, scope: !6655)
!6681 = !DILocalVariable(name: "rev", scope: !6655, file: !3, line: 2075, type: !785)
!6682 = !DILocation(line: 2075, column: 7, scope: !6655)
!6683 = !DILocalVariable(name: "in_range", scope: !6655, file: !3, line: 2075, type: !785)
!6684 = !DILocation(line: 2075, column: 12, scope: !6655)
!6685 = !DILocation(line: 2077, column: 6, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 2077, column: 6)
!6687 = !DILocation(line: 2077, column: 16, scope: !6686)
!6688 = !DILocation(line: 2077, column: 6, scope: !6655)
!6689 = !DILocation(line: 2078, column: 15, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 2077, column: 21)
!6691 = !DILocation(line: 2078, column: 13, scope: !6690)
!6692 = !DILocation(line: 2079, column: 2, scope: !6690)
!6693 = !DILocation(line: 2081, column: 2, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 2081, column: 2)
!6695 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 2081, column: 2)
!6696 = !DILocation(line: 2081, column: 2, scope: !6695)
!6697 = !DILocation(line: 2081, column: 2, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 2081, column: 2)
!6699 = !DILocation(line: 2082, column: 2, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6701, file: !3, line: 2082, column: 2)
!6701 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 2082, column: 2)
!6702 = !DILocation(line: 2082, column: 2, scope: !6701)
!6703 = !DILocation(line: 2082, column: 2, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 2082, column: 2)
!6705 = !DILocation(line: 2084, column: 6, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 2084, column: 6)
!6707 = !DILocation(line: 2084, column: 19, scope: !6706)
!6708 = !DILocation(line: 2084, column: 16, scope: !6706)
!6709 = !DILocation(line: 2084, column: 6, scope: !6655)
!6710 = !DILocation(line: 2085, column: 3, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6706, file: !3, line: 2084, column: 30)
!6712 = !DILocation(line: 2088, column: 10, scope: !6655)
!6713 = !DILocation(line: 2088, column: 22, scope: !6655)
!6714 = !DILocation(line: 2088, column: 20, scope: !6655)
!6715 = !DILocation(line: 2088, column: 33, scope: !6655)
!6716 = !DILocation(line: 2088, column: 8, scope: !6655)
!6717 = !DILocation(line: 2088, column: 6, scope: !6655)
!6718 = !DILocation(line: 2093, column: 13, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 2093, column: 2)
!6720 = !DILocation(line: 2093, column: 19, scope: !6719)
!6721 = !DILocation(line: 2093, column: 24, scope: !6719)
!6722 = !DILocation(line: 2093, column: 30, scope: !6719)
!6723 = !DILocation(line: 2093, column: 37, scope: !6719)
!6724 = !DILocation(line: 2093, column: 42, scope: !6719)
!6725 = !DILocation(line: 2093, column: 48, scope: !6719)
!6726 = !DILocation(line: 2093, column: 12, scope: !6719)
!6727 = !DILocation(line: 2093, column: 10, scope: !6719)
!6728 = !DILocation(line: 2093, column: 61, scope: !6719)
!6729 = !DILocation(line: 2093, column: 67, scope: !6719)
!6730 = !DILocation(line: 2093, column: 74, scope: !6719)
!6731 = !DILocation(line: 2093, column: 58, scope: !6719)
!6732 = !DILocation(line: 2093, column: 7, scope: !6719)
!6733 = !DILocation(line: 2094, column: 7, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6719, file: !3, line: 2093, column: 2)
!6735 = !DILocation(line: 2093, column: 2, scope: !6719)
!6736 = !DILocation(line: 2097, column: 7, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6738, file: !3, line: 2097, column: 7)
!6738 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 2096, column: 2)
!6739 = !DILocation(line: 2097, column: 12, scope: !6737)
!6740 = !DILocation(line: 2097, column: 9, scope: !6737)
!6741 = !DILocation(line: 2097, column: 7, scope: !6738)
!6742 = !DILocation(line: 2098, column: 13, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 2097, column: 23)
!6744 = !DILocation(line: 2099, column: 3, scope: !6743)
!6745 = !DILocation(line: 2100, column: 12, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 2100, column: 12)
!6747 = !DILocation(line: 2100, column: 17, scope: !6746)
!6748 = !DILocation(line: 2100, column: 14, scope: !6746)
!6749 = !DILocation(line: 2100, column: 12, scope: !6737)
!6750 = !DILocation(line: 2101, column: 13, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 2100, column: 28)
!6752 = !DILocation(line: 2102, column: 3, scope: !6751)
!6753 = !DILocation(line: 2104, column: 7, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6738, file: !3, line: 2104, column: 7)
!6755 = !DILocation(line: 2104, column: 7, scope: !6738)
!6756 = !DILocalVariable(name: "other_kb", scope: !6757, file: !3, line: 2105, type: !313)
!6757 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 2104, column: 17)
!6758 = !DILocation(line: 2105, column: 14, scope: !6757)
!6759 = !DILocation(line: 2105, column: 25, scope: !6757)
!6760 = !DILocation(line: 2105, column: 31, scope: !6757)
!6761 = !DILocation(line: 2105, column: 35, scope: !6757)
!6762 = !DILocation(line: 2105, column: 42, scope: !6757)
!6763 = !DILocation(line: 2105, column: 46, scope: !6757)
!6764 = !DILocation(line: 2108, column: 28, scope: !6757)
!6765 = !DILocation(line: 2108, column: 33, scope: !6757)
!6766 = !DILocation(line: 2108, column: 40, scope: !6757)
!6767 = !DILocation(line: 2108, column: 44, scope: !6757)
!6768 = !DILocation(line: 2108, column: 4, scope: !6757)
!6769 = !DILocalVariable(name: "sw_ap", scope: !6770, file: !3, line: 2111, type: !214)
!6770 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 2111, column: 4)
!6771 = !DILocation(line: 2111, column: 4, scope: !6770)
!6772 = !DILocation(line: 2113, column: 9, scope: !6757)
!6773 = !DILocation(line: 2113, column: 7, scope: !6757)
!6774 = !DILocation(line: 2114, column: 3, scope: !6757)
!6775 = !DILocation(line: 2117, column: 7, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6738, file: !3, line: 2117, column: 7)
!6777 = !DILocation(line: 2117, column: 11, scope: !6776)
!6778 = !DILocation(line: 2117, column: 23, scope: !6776)
!6779 = !DILocation(line: 2117, column: 20, scope: !6776)
!6780 = !DILocation(line: 2117, column: 7, scope: !6738)
!6781 = !DILocation(line: 2118, column: 19, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 2117, column: 34)
!6783 = !DILocation(line: 2118, column: 4, scope: !6782)
!6784 = !DILocation(line: 2118, column: 8, scope: !6782)
!6785 = !DILocation(line: 2118, column: 17, scope: !6782)
!6786 = !DILocation(line: 2119, column: 3, scope: !6782)
!6787 = !DILocation(line: 2120, column: 12, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 2120, column: 12)
!6789 = !DILocation(line: 2120, column: 16, scope: !6788)
!6790 = !DILocation(line: 2120, column: 27, scope: !6788)
!6791 = !DILocation(line: 2120, column: 25, scope: !6788)
!6792 = !DILocation(line: 2120, column: 37, scope: !6788)
!6793 = !DILocation(line: 2120, column: 40, scope: !6788)
!6794 = !DILocation(line: 2120, column: 44, scope: !6788)
!6795 = !DILocation(line: 2120, column: 56, scope: !6788)
!6796 = !DILocation(line: 2120, column: 53, scope: !6788)
!6797 = !DILocation(line: 2120, column: 12, scope: !6776)
!6798 = !DILocation(line: 2122, column: 4, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 2120, column: 67)
!6800 = !DILocation(line: 2122, column: 8, scope: !6799)
!6801 = !DILocation(line: 2122, column: 16, scope: !6799)
!6802 = !DILocation(line: 2123, column: 3, scope: !6799)
!6803 = !DILocation(line: 2124, column: 12, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 2124, column: 12)
!6805 = !DILocation(line: 2124, column: 16, scope: !6804)
!6806 = !DILocation(line: 2124, column: 27, scope: !6804)
!6807 = !DILocation(line: 2124, column: 25, scope: !6804)
!6808 = !DILocation(line: 2124, column: 37, scope: !6804)
!6809 = !DILocation(line: 2124, column: 40, scope: !6804)
!6810 = !DILocation(line: 2124, column: 44, scope: !6804)
!6811 = !DILocation(line: 2124, column: 56, scope: !6804)
!6812 = !DILocation(line: 2124, column: 53, scope: !6804)
!6813 = !DILocation(line: 2124, column: 12, scope: !6788)
!6814 = !DILocation(line: 2126, column: 4, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6804, file: !3, line: 2124, column: 67)
!6816 = !DILocation(line: 2126, column: 8, scope: !6815)
!6817 = !DILocation(line: 2126, column: 16, scope: !6815)
!6818 = !DILocation(line: 2127, column: 3, scope: !6815)
!6819 = !DILocation(line: 2128, column: 2, scope: !6738)
!6820 = !DILocation(line: 2095, column: 13, scope: !6734)
!6821 = !DILocation(line: 2095, column: 19, scope: !6734)
!6822 = !DILocation(line: 2095, column: 23, scope: !6734)
!6823 = !DILocation(line: 2095, column: 30, scope: !6734)
!6824 = !DILocation(line: 2095, column: 34, scope: !6734)
!6825 = !DILocation(line: 2095, column: 10, scope: !6734)
!6826 = !DILocation(line: 2095, column: 41, scope: !6734)
!6827 = !DILocation(line: 2095, column: 48, scope: !6734)
!6828 = !DILocation(line: 2095, column: 54, scope: !6734)
!6829 = !DILocation(line: 2093, column: 2, scope: !6734)
!6830 = distinct !{!6830, !6735, !6831}
!6831 = !DILocation(line: 2128, column: 2, scope: !6719)
!6832 = !DILocation(line: 2131, column: 6, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 2131, column: 6)
!6834 = !DILocation(line: 2131, column: 19, scope: !6833)
!6835 = !DILocation(line: 2131, column: 16, scope: !6833)
!6836 = !DILocation(line: 2131, column: 6, scope: !6655)
!6837 = !DILocation(line: 2132, column: 17, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 2131, column: 30)
!6839 = !DILocation(line: 2132, column: 27, scope: !6838)
!6840 = !DILocation(line: 2132, column: 3, scope: !6838)
!6841 = !DILocation(line: 2132, column: 7, scope: !6838)
!6842 = !DILocation(line: 2132, column: 15, scope: !6838)
!6843 = !DILocation(line: 2133, column: 2, scope: !6838)
!6844 = !DILocation(line: 2134, column: 11, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 2134, column: 11)
!6846 = !DILocation(line: 2134, column: 23, scope: !6845)
!6847 = !DILocation(line: 2134, column: 21, scope: !6845)
!6848 = !DILocation(line: 2134, column: 33, scope: !6845)
!6849 = !DILocation(line: 2134, column: 36, scope: !6845)
!6850 = !DILocation(line: 2134, column: 49, scope: !6845)
!6851 = !DILocation(line: 2134, column: 46, scope: !6845)
!6852 = !DILocation(line: 2134, column: 11, scope: !6833)
!6853 = !DILocation(line: 2135, column: 3, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 2134, column: 60)
!6855 = !DILocation(line: 2135, column: 7, scope: !6854)
!6856 = !DILocation(line: 2135, column: 14, scope: !6854)
!6857 = !DILocation(line: 2136, column: 2, scope: !6854)
!6858 = !DILocation(line: 2137, column: 11, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 2137, column: 11)
!6860 = !DILocation(line: 2137, column: 23, scope: !6859)
!6861 = !DILocation(line: 2137, column: 21, scope: !6859)
!6862 = !DILocation(line: 2137, column: 33, scope: !6859)
!6863 = !DILocation(line: 2137, column: 36, scope: !6859)
!6864 = !DILocation(line: 2137, column: 49, scope: !6859)
!6865 = !DILocation(line: 2137, column: 46, scope: !6859)
!6866 = !DILocation(line: 2137, column: 11, scope: !6845)
!6867 = !DILocation(line: 2138, column: 3, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6859, file: !3, line: 2137, column: 60)
!6869 = !DILocation(line: 2138, column: 7, scope: !6868)
!6870 = !DILocation(line: 2138, column: 14, scope: !6868)
!6871 = !DILocation(line: 2139, column: 2, scope: !6868)
!6872 = !DILocation(line: 2142, column: 16, scope: !6655)
!6873 = !DILocation(line: 2142, column: 21, scope: !6655)
!6874 = !DILocation(line: 2142, column: 27, scope: !6655)
!6875 = !DILocation(line: 2142, column: 2, scope: !6655)
!6876 = !DILocation(line: 2142, column: 7, scope: !6655)
!6877 = !DILocation(line: 2142, column: 14, scope: !6655)
!6878 = !DILocation(line: 2144, column: 2, scope: !6655)
!6879 = !DILocation(line: 2145, column: 1, scope: !6655)
!6880 = distinct !DISubprogram(name: "BM_iter_new", scope: !6881, file: !6881, line: 172, type: !6882, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!6881 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6882 = !DISubroutineType(types: !6883)
!6883 = !{!146, !6884, !711, !676, !146}
!6884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 64)
!6885 = !DILocalVariable(name: "iter", arg: 1, scope: !6880, file: !6881, line: 172, type: !6884)
!6886 = !DILocation(line: 172, column: 38, scope: !6880)
!6887 = !DILocalVariable(name: "bm", arg: 2, scope: !6880, file: !6881, line: 172, type: !711)
!6888 = !DILocation(line: 172, column: 51, scope: !6880)
!6889 = !DILocalVariable(name: "itype", arg: 3, scope: !6880, file: !6881, line: 172, type: !676)
!6890 = !DILocation(line: 172, column: 66, scope: !6880)
!6891 = !DILocalVariable(name: "data", arg: 4, scope: !6880, file: !6881, line: 172, type: !146)
!6892 = !DILocation(line: 172, column: 79, scope: !6880)
!6893 = !DILocation(line: 174, column: 6, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6880, file: !6881, line: 174, column: 6)
!6895 = !DILocation(line: 174, column: 6, scope: !6880)
!6896 = !DILocation(line: 175, column: 23, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6894, file: !6881, line: 174, column: 51)
!6898 = !DILocation(line: 175, column: 10, scope: !6897)
!6899 = !DILocation(line: 175, column: 3, scope: !6897)
!6900 = !DILocation(line: 178, column: 3, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6894, file: !6881, line: 177, column: 7)
!6902 = !DILocation(line: 180, column: 1, scope: !6880)
!6903 = distinct !DISubprogram(name: "BM_iter_step", scope: !6881, file: !6881, line: 40, type: !6904, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!6904 = !DISubroutineType(types: !6905)
!6905 = !{!146, !6884}
!6906 = !DILocalVariable(name: "iter", arg: 1, scope: !6903, file: !6881, line: 40, type: !6884)
!6907 = !DILocation(line: 40, column: 39, scope: !6903)
!6908 = !DILocation(line: 42, column: 9, scope: !6903)
!6909 = !DILocation(line: 42, column: 15, scope: !6903)
!6910 = !DILocation(line: 42, column: 20, scope: !6903)
!6911 = !DILocation(line: 42, column: 2, scope: !6903)
!6912 = distinct !DISubprogram(name: "BM_iter_init", scope: !6881, file: !6881, line: 53, type: !6913, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!6913 = !DISubroutineType(types: !6914)
!6914 = !{!785, !6884, !711, !676, !146}
!6915 = !DILocalVariable(name: "iter", arg: 1, scope: !6912, file: !6881, line: 53, type: !6884)
!6916 = !DILocation(line: 53, column: 38, scope: !6912)
!6917 = !DILocalVariable(name: "bm", arg: 2, scope: !6912, file: !6881, line: 53, type: !711)
!6918 = !DILocation(line: 53, column: 51, scope: !6912)
!6919 = !DILocalVariable(name: "itype", arg: 3, scope: !6912, file: !6881, line: 53, type: !676)
!6920 = !DILocation(line: 53, column: 66, scope: !6912)
!6921 = !DILocalVariable(name: "data", arg: 4, scope: !6912, file: !6881, line: 53, type: !146)
!6922 = !DILocation(line: 53, column: 79, scope: !6912)
!6923 = !DILocation(line: 56, column: 16, scope: !6912)
!6924 = !DILocation(line: 56, column: 2, scope: !6912)
!6925 = !DILocation(line: 56, column: 8, scope: !6912)
!6926 = !DILocation(line: 56, column: 14, scope: !6912)
!6927 = !DILocation(line: 59, column: 22, scope: !6912)
!6928 = !DILocation(line: 59, column: 10, scope: !6912)
!6929 = !DILocation(line: 59, column: 2, scope: !6912)
!6930 = !DILocation(line: 63, column: 4, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6912, file: !6881, line: 59, column: 29)
!6932 = !DILocation(line: 63, column: 10, scope: !6931)
!6933 = !DILocation(line: 63, column: 16, scope: !6931)
!6934 = !DILocation(line: 64, column: 4, scope: !6931)
!6935 = !DILocation(line: 64, column: 10, scope: !6931)
!6936 = !DILocation(line: 64, column: 16, scope: !6931)
!6937 = !DILocation(line: 65, column: 44, scope: !6931)
!6938 = !DILocation(line: 65, column: 48, scope: !6931)
!6939 = !DILocation(line: 65, column: 4, scope: !6931)
!6940 = !DILocation(line: 65, column: 10, scope: !6931)
!6941 = !DILocation(line: 65, column: 15, scope: !6931)
!6942 = !DILocation(line: 65, column: 28, scope: !6931)
!6943 = !DILocation(line: 65, column: 37, scope: !6931)
!6944 = !DILocation(line: 65, column: 42, scope: !6931)
!6945 = !DILocation(line: 66, column: 4, scope: !6931)
!6946 = !DILocation(line: 70, column: 4, scope: !6931)
!6947 = !DILocation(line: 70, column: 10, scope: !6931)
!6948 = !DILocation(line: 70, column: 16, scope: !6931)
!6949 = !DILocation(line: 71, column: 4, scope: !6931)
!6950 = !DILocation(line: 71, column: 10, scope: !6931)
!6951 = !DILocation(line: 71, column: 16, scope: !6931)
!6952 = !DILocation(line: 72, column: 44, scope: !6931)
!6953 = !DILocation(line: 72, column: 48, scope: !6931)
!6954 = !DILocation(line: 72, column: 4, scope: !6931)
!6955 = !DILocation(line: 72, column: 10, scope: !6931)
!6956 = !DILocation(line: 72, column: 15, scope: !6931)
!6957 = !DILocation(line: 72, column: 28, scope: !6931)
!6958 = !DILocation(line: 72, column: 37, scope: !6931)
!6959 = !DILocation(line: 72, column: 42, scope: !6931)
!6960 = !DILocation(line: 73, column: 4, scope: !6931)
!6961 = !DILocation(line: 77, column: 4, scope: !6931)
!6962 = !DILocation(line: 77, column: 10, scope: !6931)
!6963 = !DILocation(line: 77, column: 16, scope: !6931)
!6964 = !DILocation(line: 78, column: 4, scope: !6931)
!6965 = !DILocation(line: 78, column: 10, scope: !6931)
!6966 = !DILocation(line: 78, column: 16, scope: !6931)
!6967 = !DILocation(line: 79, column: 44, scope: !6931)
!6968 = !DILocation(line: 79, column: 48, scope: !6931)
!6969 = !DILocation(line: 79, column: 4, scope: !6931)
!6970 = !DILocation(line: 79, column: 10, scope: !6931)
!6971 = !DILocation(line: 79, column: 15, scope: !6931)
!6972 = !DILocation(line: 79, column: 28, scope: !6931)
!6973 = !DILocation(line: 79, column: 37, scope: !6931)
!6974 = !DILocation(line: 79, column: 42, scope: !6931)
!6975 = !DILocation(line: 80, column: 4, scope: !6931)
!6976 = !DILocation(line: 84, column: 4, scope: !6931)
!6977 = !DILocation(line: 84, column: 10, scope: !6931)
!6978 = !DILocation(line: 84, column: 16, scope: !6931)
!6979 = !DILocation(line: 85, column: 4, scope: !6931)
!6980 = !DILocation(line: 85, column: 10, scope: !6931)
!6981 = !DILocation(line: 85, column: 16, scope: !6931)
!6982 = !DILocation(line: 86, column: 46, scope: !6931)
!6983 = !DILocation(line: 86, column: 36, scope: !6931)
!6984 = !DILocation(line: 86, column: 4, scope: !6931)
!6985 = !DILocation(line: 86, column: 10, scope: !6931)
!6986 = !DILocation(line: 86, column: 15, scope: !6931)
!6987 = !DILocation(line: 86, column: 28, scope: !6931)
!6988 = !DILocation(line: 86, column: 34, scope: !6931)
!6989 = !DILocation(line: 87, column: 4, scope: !6931)
!6990 = !DILocation(line: 91, column: 4, scope: !6931)
!6991 = !DILocation(line: 91, column: 10, scope: !6931)
!6992 = !DILocation(line: 91, column: 16, scope: !6931)
!6993 = !DILocation(line: 92, column: 4, scope: !6931)
!6994 = !DILocation(line: 92, column: 10, scope: !6931)
!6995 = !DILocation(line: 92, column: 16, scope: !6931)
!6996 = !DILocation(line: 93, column: 46, scope: !6931)
!6997 = !DILocation(line: 93, column: 36, scope: !6931)
!6998 = !DILocation(line: 93, column: 4, scope: !6931)
!6999 = !DILocation(line: 93, column: 10, scope: !6931)
!7000 = !DILocation(line: 93, column: 15, scope: !6931)
!7001 = !DILocation(line: 93, column: 28, scope: !6931)
!7002 = !DILocation(line: 93, column: 34, scope: !6931)
!7003 = !DILocation(line: 94, column: 4, scope: !6931)
!7004 = !DILocation(line: 98, column: 4, scope: !6931)
!7005 = !DILocation(line: 98, column: 10, scope: !6931)
!7006 = !DILocation(line: 98, column: 16, scope: !6931)
!7007 = !DILocation(line: 99, column: 4, scope: !6931)
!7008 = !DILocation(line: 99, column: 10, scope: !6931)
!7009 = !DILocation(line: 99, column: 16, scope: !6931)
!7010 = !DILocation(line: 100, column: 46, scope: !6931)
!7011 = !DILocation(line: 100, column: 36, scope: !6931)
!7012 = !DILocation(line: 100, column: 4, scope: !6931)
!7013 = !DILocation(line: 100, column: 10, scope: !6931)
!7014 = !DILocation(line: 100, column: 15, scope: !6931)
!7015 = !DILocation(line: 100, column: 28, scope: !6931)
!7016 = !DILocation(line: 100, column: 34, scope: !6931)
!7017 = !DILocation(line: 101, column: 4, scope: !6931)
!7018 = !DILocation(line: 105, column: 4, scope: !6931)
!7019 = !DILocation(line: 105, column: 10, scope: !6931)
!7020 = !DILocation(line: 105, column: 16, scope: !6931)
!7021 = !DILocation(line: 106, column: 4, scope: !6931)
!7022 = !DILocation(line: 106, column: 10, scope: !6931)
!7023 = !DILocation(line: 106, column: 16, scope: !6931)
!7024 = !DILocation(line: 107, column: 46, scope: !6931)
!7025 = !DILocation(line: 107, column: 36, scope: !6931)
!7026 = !DILocation(line: 107, column: 4, scope: !6931)
!7027 = !DILocation(line: 107, column: 10, scope: !6931)
!7028 = !DILocation(line: 107, column: 15, scope: !6931)
!7029 = !DILocation(line: 107, column: 28, scope: !6931)
!7030 = !DILocation(line: 107, column: 34, scope: !6931)
!7031 = !DILocation(line: 108, column: 4, scope: !6931)
!7032 = !DILocation(line: 112, column: 4, scope: !6931)
!7033 = !DILocation(line: 112, column: 10, scope: !6931)
!7034 = !DILocation(line: 112, column: 16, scope: !6931)
!7035 = !DILocation(line: 113, column: 4, scope: !6931)
!7036 = !DILocation(line: 113, column: 10, scope: !6931)
!7037 = !DILocation(line: 113, column: 16, scope: !6931)
!7038 = !DILocation(line: 114, column: 46, scope: !6931)
!7039 = !DILocation(line: 114, column: 36, scope: !6931)
!7040 = !DILocation(line: 114, column: 4, scope: !6931)
!7041 = !DILocation(line: 114, column: 10, scope: !6931)
!7042 = !DILocation(line: 114, column: 15, scope: !6931)
!7043 = !DILocation(line: 114, column: 28, scope: !6931)
!7044 = !DILocation(line: 114, column: 34, scope: !6931)
!7045 = !DILocation(line: 115, column: 4, scope: !6931)
!7046 = !DILocation(line: 119, column: 4, scope: !6931)
!7047 = !DILocation(line: 119, column: 10, scope: !6931)
!7048 = !DILocation(line: 119, column: 16, scope: !6931)
!7049 = !DILocation(line: 120, column: 4, scope: !6931)
!7050 = !DILocation(line: 120, column: 10, scope: !6931)
!7051 = !DILocation(line: 120, column: 16, scope: !6931)
!7052 = !DILocation(line: 121, column: 46, scope: !6931)
!7053 = !DILocation(line: 121, column: 36, scope: !6931)
!7054 = !DILocation(line: 121, column: 4, scope: !6931)
!7055 = !DILocation(line: 121, column: 10, scope: !6931)
!7056 = !DILocation(line: 121, column: 15, scope: !6931)
!7057 = !DILocation(line: 121, column: 28, scope: !6931)
!7058 = !DILocation(line: 121, column: 34, scope: !6931)
!7059 = !DILocation(line: 122, column: 4, scope: !6931)
!7060 = !DILocation(line: 126, column: 4, scope: !6931)
!7061 = !DILocation(line: 126, column: 10, scope: !6931)
!7062 = !DILocation(line: 126, column: 16, scope: !6931)
!7063 = !DILocation(line: 127, column: 4, scope: !6931)
!7064 = !DILocation(line: 127, column: 10, scope: !6931)
!7065 = !DILocation(line: 127, column: 16, scope: !6931)
!7066 = !DILocation(line: 128, column: 46, scope: !6931)
!7067 = !DILocation(line: 128, column: 36, scope: !6931)
!7068 = !DILocation(line: 128, column: 4, scope: !6931)
!7069 = !DILocation(line: 128, column: 10, scope: !6931)
!7070 = !DILocation(line: 128, column: 15, scope: !6931)
!7071 = !DILocation(line: 128, column: 28, scope: !6931)
!7072 = !DILocation(line: 128, column: 34, scope: !6931)
!7073 = !DILocation(line: 129, column: 4, scope: !6931)
!7074 = !DILocation(line: 133, column: 4, scope: !6931)
!7075 = !DILocation(line: 133, column: 10, scope: !6931)
!7076 = !DILocation(line: 133, column: 16, scope: !6931)
!7077 = !DILocation(line: 134, column: 4, scope: !6931)
!7078 = !DILocation(line: 134, column: 10, scope: !6931)
!7079 = !DILocation(line: 134, column: 16, scope: !6931)
!7080 = !DILocation(line: 135, column: 46, scope: !6931)
!7081 = !DILocation(line: 135, column: 36, scope: !6931)
!7082 = !DILocation(line: 135, column: 4, scope: !6931)
!7083 = !DILocation(line: 135, column: 10, scope: !6931)
!7084 = !DILocation(line: 135, column: 15, scope: !6931)
!7085 = !DILocation(line: 135, column: 28, scope: !6931)
!7086 = !DILocation(line: 135, column: 34, scope: !6931)
!7087 = !DILocation(line: 136, column: 4, scope: !6931)
!7088 = !DILocation(line: 140, column: 4, scope: !6931)
!7089 = !DILocation(line: 140, column: 10, scope: !6931)
!7090 = !DILocation(line: 140, column: 16, scope: !6931)
!7091 = !DILocation(line: 141, column: 4, scope: !6931)
!7092 = !DILocation(line: 141, column: 10, scope: !6931)
!7093 = !DILocation(line: 141, column: 16, scope: !6931)
!7094 = !DILocation(line: 142, column: 46, scope: !6931)
!7095 = !DILocation(line: 142, column: 36, scope: !6931)
!7096 = !DILocation(line: 142, column: 4, scope: !6931)
!7097 = !DILocation(line: 142, column: 10, scope: !6931)
!7098 = !DILocation(line: 142, column: 15, scope: !6931)
!7099 = !DILocation(line: 142, column: 28, scope: !6931)
!7100 = !DILocation(line: 142, column: 34, scope: !6931)
!7101 = !DILocation(line: 143, column: 4, scope: !6931)
!7102 = !DILocation(line: 147, column: 4, scope: !6931)
!7103 = !DILocation(line: 147, column: 10, scope: !6931)
!7104 = !DILocation(line: 147, column: 16, scope: !6931)
!7105 = !DILocation(line: 148, column: 4, scope: !6931)
!7106 = !DILocation(line: 148, column: 10, scope: !6931)
!7107 = !DILocation(line: 148, column: 16, scope: !6931)
!7108 = !DILocation(line: 149, column: 46, scope: !6931)
!7109 = !DILocation(line: 149, column: 36, scope: !6931)
!7110 = !DILocation(line: 149, column: 4, scope: !6931)
!7111 = !DILocation(line: 149, column: 10, scope: !6931)
!7112 = !DILocation(line: 149, column: 15, scope: !6931)
!7113 = !DILocation(line: 149, column: 28, scope: !6931)
!7114 = !DILocation(line: 149, column: 34, scope: !6931)
!7115 = !DILocation(line: 150, column: 4, scope: !6931)
!7116 = !DILocation(line: 154, column: 4, scope: !6931)
!7117 = !DILocation(line: 158, column: 2, scope: !6912)
!7118 = !DILocation(line: 158, column: 8, scope: !6912)
!7119 = !DILocation(line: 158, column: 14, scope: !6912)
!7120 = !DILocation(line: 160, column: 2, scope: !6912)
!7121 = !DILocation(line: 161, column: 1, scope: !6912)
!7122 = distinct !DISubprogram(name: "max_ii", scope: !5717, file: !5717, line: 215, type: !5718, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!7123 = !DILocalVariable(name: "a", arg: 1, scope: !7122, file: !5717, line: 215, type: !176)
!7124 = !DILocation(line: 215, column: 24, scope: !7122)
!7125 = !DILocalVariable(name: "b", arg: 2, scope: !7122, file: !5717, line: 215, type: !176)
!7126 = !DILocation(line: 215, column: 31, scope: !7122)
!7127 = !DILocation(line: 217, column: 10, scope: !7122)
!7128 = !DILocation(line: 217, column: 14, scope: !7122)
!7129 = !DILocation(line: 217, column: 12, scope: !7122)
!7130 = !DILocation(line: 217, column: 9, scope: !7122)
!7131 = !DILocation(line: 217, column: 19, scope: !7122)
!7132 = !DILocation(line: 217, column: 23, scope: !7122)
!7133 = !DILocation(line: 217, column: 2, scope: !7122)
!7134 = distinct !DISubprogram(name: "setkeys", scope: !3, file: !3, line: 370, type: !7135, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!7135 = !DISubroutineType(types: !7136)
!7136 = !{!176, !214, !1016, !7137, !213, !176}
!7137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!7138 = !DILocalVariable(name: "fac", arg: 1, scope: !7134, file: !3, line: 370, type: !214)
!7139 = !DILocation(line: 370, column: 26, scope: !7134)
!7140 = !DILocalVariable(name: "lb", arg: 2, scope: !7134, file: !3, line: 370, type: !1016)
!7141 = !DILocation(line: 370, column: 41, scope: !7134)
!7142 = !DILocalVariable(name: "k", arg: 3, scope: !7134, file: !3, line: 370, type: !7137)
!7143 = !DILocation(line: 370, column: 55, scope: !7134)
!7144 = !DILocalVariable(name: "t", arg: 4, scope: !7134, file: !3, line: 370, type: !213)
!7145 = !DILocation(line: 370, column: 66, scope: !7134)
!7146 = !DILocalVariable(name: "cycl", arg: 5, scope: !7134, file: !3, line: 370, type: !176)
!7147 = !DILocation(line: 370, column: 76, scope: !7134)
!7148 = !DILocalVariable(name: "k1", scope: !7134, file: !3, line: 373, type: !313)
!7149 = !DILocation(line: 373, column: 12, scope: !7134)
!7150 = !DILocalVariable(name: "firstkey", scope: !7134, file: !3, line: 373, type: !313)
!7151 = !DILocation(line: 373, column: 17, scope: !7134)
!7152 = !DILocalVariable(name: "d", scope: !7134, file: !3, line: 374, type: !214)
!7153 = !DILocation(line: 374, column: 8, scope: !7134)
!7154 = !DILocalVariable(name: "dpos", scope: !7134, file: !3, line: 374, type: !214)
!7155 = !DILocation(line: 374, column: 11, scope: !7134)
!7156 = !DILocalVariable(name: "ofs", scope: !7134, file: !3, line: 374, type: !214)
!7157 = !DILocation(line: 374, column: 17, scope: !7134)
!7158 = !DILocalVariable(name: "lastpos", scope: !7134, file: !3, line: 374, type: !214)
!7159 = !DILocation(line: 374, column: 26, scope: !7134)
!7160 = !DILocalVariable(name: "bsplinetype", scope: !7134, file: !3, line: 375, type: !174)
!7161 = !DILocation(line: 375, column: 8, scope: !7134)
!7162 = !DILocation(line: 377, column: 13, scope: !7134)
!7163 = !DILocation(line: 377, column: 17, scope: !7134)
!7164 = !DILocation(line: 377, column: 11, scope: !7134)
!7165 = !DILocation(line: 378, column: 7, scope: !7134)
!7166 = !DILocation(line: 378, column: 11, scope: !7134)
!7167 = !DILocation(line: 378, column: 5, scope: !7134)
!7168 = !DILocation(line: 379, column: 12, scope: !7134)
!7169 = !DILocation(line: 379, column: 16, scope: !7134)
!7170 = !DILocation(line: 379, column: 10, scope: !7134)
!7171 = !DILocation(line: 380, column: 9, scope: !7134)
!7172 = !DILocation(line: 380, column: 19, scope: !7134)
!7173 = !DILocation(line: 380, column: 29, scope: !7134)
!7174 = !DILocation(line: 380, column: 17, scope: !7134)
!7175 = !DILocation(line: 380, column: 7, scope: !7134)
!7176 = !DILocation(line: 382, column: 6, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 382, column: 6)
!7178 = !DILocation(line: 382, column: 12, scope: !7177)
!7179 = !DILocation(line: 382, column: 22, scope: !7177)
!7180 = !DILocation(line: 382, column: 10, scope: !7177)
!7181 = !DILocation(line: 382, column: 6, scope: !7134)
!7182 = !DILocation(line: 382, column: 33, scope: !7177)
!7183 = !DILocation(line: 382, column: 43, scope: !7177)
!7184 = !DILocation(line: 382, column: 31, scope: !7177)
!7185 = !DILocation(line: 382, column: 27, scope: !7177)
!7186 = !DILocation(line: 383, column: 11, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 383, column: 11)
!7188 = !DILocation(line: 383, column: 17, scope: !7187)
!7189 = !DILocation(line: 383, column: 21, scope: !7187)
!7190 = !DILocation(line: 383, column: 15, scope: !7187)
!7191 = !DILocation(line: 383, column: 11, scope: !7177)
!7192 = !DILocation(line: 383, column: 32, scope: !7187)
!7193 = !DILocation(line: 383, column: 36, scope: !7187)
!7194 = !DILocation(line: 383, column: 30, scope: !7187)
!7195 = !DILocation(line: 383, column: 26, scope: !7187)
!7196 = !DILocation(line: 385, column: 35, scope: !7134)
!7197 = !DILocation(line: 385, column: 28, scope: !7134)
!7198 = !DILocation(line: 385, column: 33, scope: !7134)
!7199 = !DILocation(line: 385, column: 21, scope: !7134)
!7200 = !DILocation(line: 385, column: 26, scope: !7134)
!7201 = !DILocation(line: 385, column: 14, scope: !7134)
!7202 = !DILocation(line: 385, column: 19, scope: !7134)
!7203 = !DILocation(line: 385, column: 7, scope: !7134)
!7204 = !DILocation(line: 385, column: 12, scope: !7134)
!7205 = !DILocation(line: 385, column: 5, scope: !7134)
!7206 = !DILocation(line: 386, column: 30, scope: !7134)
!7207 = !DILocation(line: 386, column: 34, scope: !7134)
!7208 = !DILocation(line: 386, column: 23, scope: !7134)
!7209 = !DILocation(line: 386, column: 28, scope: !7134)
!7210 = !DILocation(line: 386, column: 16, scope: !7134)
!7211 = !DILocation(line: 386, column: 21, scope: !7134)
!7212 = !DILocation(line: 386, column: 9, scope: !7134)
!7213 = !DILocation(line: 386, column: 14, scope: !7134)
!7214 = !DILocation(line: 386, column: 2, scope: !7134)
!7215 = !DILocation(line: 386, column: 7, scope: !7134)
!7216 = !DILocation(line: 390, column: 6, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 390, column: 6)
!7218 = !DILocation(line: 390, column: 10, scope: !7217)
!7219 = !DILocation(line: 390, column: 15, scope: !7217)
!7220 = !DILocation(line: 390, column: 6, scope: !7134)
!7221 = !DILocation(line: 390, column: 24, scope: !7217)
!7222 = !DILocation(line: 392, column: 6, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 392, column: 6)
!7224 = !DILocation(line: 392, column: 6, scope: !7134)
!7225 = !DILocation(line: 393, column: 10, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 392, column: 12)
!7227 = !DILocation(line: 393, column: 14, scope: !7226)
!7228 = !DILocation(line: 393, column: 3, scope: !7226)
!7229 = !DILocation(line: 393, column: 8, scope: !7226)
!7230 = !DILocation(line: 394, column: 10, scope: !7226)
!7231 = !DILocation(line: 394, column: 16, scope: !7226)
!7232 = !DILocation(line: 394, column: 3, scope: !7226)
!7233 = !DILocation(line: 394, column: 8, scope: !7226)
!7234 = !DILocation(line: 395, column: 7, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 395, column: 7)
!7236 = !DILocation(line: 395, column: 12, scope: !7235)
!7237 = !DILocation(line: 395, column: 7, scope: !7226)
!7238 = !DILocation(line: 395, column: 28, scope: !7235)
!7239 = !DILocation(line: 395, column: 21, scope: !7235)
!7240 = !DILocation(line: 395, column: 26, scope: !7235)
!7241 = !DILocation(line: 396, column: 3, scope: !7226)
!7242 = !DILocation(line: 396, column: 10, scope: !7226)
!7243 = !DILocation(line: 397, column: 8, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7245, file: !3, line: 397, column: 8)
!7245 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 396, column: 14)
!7246 = !DILocation(line: 397, column: 12, scope: !7244)
!7247 = !DILocation(line: 397, column: 17, scope: !7244)
!7248 = !DILocation(line: 397, column: 8, scope: !7245)
!7249 = !DILocation(line: 397, column: 33, scope: !7244)
!7250 = !DILocation(line: 397, column: 26, scope: !7244)
!7251 = !DILocation(line: 397, column: 31, scope: !7244)
!7252 = !DILocation(line: 398, column: 9, scope: !7245)
!7253 = !DILocation(line: 398, column: 13, scope: !7245)
!7254 = !DILocation(line: 398, column: 7, scope: !7245)
!7255 = distinct !{!7255, !7241, !7256}
!7256 = !DILocation(line: 399, column: 3, scope: !7226)
!7257 = !DILocation(line: 401, column: 10, scope: !7226)
!7258 = !DILocation(line: 401, column: 16, scope: !7226)
!7259 = !DILocation(line: 401, column: 3, scope: !7226)
!7260 = !DILocation(line: 401, column: 8, scope: !7226)
!7261 = !DILocation(line: 402, column: 11, scope: !7226)
!7262 = !DILocation(line: 402, column: 3, scope: !7226)
!7263 = !DILocation(line: 402, column: 8, scope: !7226)
!7264 = !DILocation(line: 403, column: 10, scope: !7226)
!7265 = !DILocation(line: 403, column: 16, scope: !7226)
!7266 = !DILocation(line: 403, column: 22, scope: !7226)
!7267 = !DILocation(line: 403, column: 20, scope: !7226)
!7268 = !DILocation(line: 403, column: 3, scope: !7226)
!7269 = !DILocation(line: 403, column: 8, scope: !7226)
!7270 = !DILocation(line: 404, column: 10, scope: !7226)
!7271 = !DILocation(line: 404, column: 16, scope: !7226)
!7272 = !DILocation(line: 404, column: 22, scope: !7226)
!7273 = !DILocation(line: 404, column: 20, scope: !7226)
!7274 = !DILocation(line: 404, column: 3, scope: !7226)
!7275 = !DILocation(line: 404, column: 8, scope: !7226)
!7276 = !DILocation(line: 405, column: 10, scope: !7226)
!7277 = !DILocation(line: 405, column: 7, scope: !7226)
!7278 = !DILocation(line: 406, column: 9, scope: !7226)
!7279 = !DILocation(line: 406, column: 7, scope: !7226)
!7280 = !DILocation(line: 407, column: 7, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 407, column: 7)
!7282 = !DILocation(line: 407, column: 15, scope: !7281)
!7283 = !DILocation(line: 407, column: 12, scope: !7281)
!7284 = !DILocation(line: 407, column: 7, scope: !7226)
!7285 = !DILocation(line: 408, column: 12, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 407, column: 21)
!7287 = !DILocation(line: 408, column: 4, scope: !7286)
!7288 = !DILocation(line: 408, column: 9, scope: !7286)
!7289 = !DILocation(line: 409, column: 17, scope: !7286)
!7290 = !DILocation(line: 409, column: 15, scope: !7286)
!7291 = !DILocation(line: 409, column: 8, scope: !7286)
!7292 = !DILocation(line: 410, column: 3, scope: !7286)
!7293 = !DILocation(line: 411, column: 7, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 411, column: 7)
!7295 = !DILocation(line: 411, column: 13, scope: !7294)
!7296 = !DILocation(line: 411, column: 11, scope: !7294)
!7297 = !DILocation(line: 411, column: 7, scope: !7226)
!7298 = !DILocation(line: 411, column: 26, scope: !7294)
!7299 = !DILocation(line: 411, column: 23, scope: !7294)
!7300 = !DILocation(line: 411, column: 19, scope: !7294)
!7301 = !DILocation(line: 412, column: 8, scope: !7226)
!7302 = !DILocation(line: 412, column: 6, scope: !7226)
!7303 = !DILocation(line: 413, column: 2, scope: !7226)
!7304 = !DILocation(line: 415, column: 10, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 414, column: 7)
!7306 = !DILocation(line: 415, column: 14, scope: !7305)
!7307 = !DILocation(line: 415, column: 3, scope: !7305)
!7308 = !DILocation(line: 415, column: 8, scope: !7305)
!7309 = !DILocation(line: 416, column: 10, scope: !7305)
!7310 = !DILocation(line: 416, column: 16, scope: !7305)
!7311 = !DILocation(line: 416, column: 3, scope: !7305)
!7312 = !DILocation(line: 416, column: 8, scope: !7305)
!7313 = !DILocation(line: 417, column: 10, scope: !7305)
!7314 = !DILocation(line: 417, column: 16, scope: !7305)
!7315 = !DILocation(line: 417, column: 3, scope: !7305)
!7316 = !DILocation(line: 417, column: 8, scope: !7305)
!7317 = !DILocation(line: 418, column: 7, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7305, file: !3, line: 418, column: 7)
!7319 = !DILocation(line: 418, column: 12, scope: !7318)
!7320 = !DILocation(line: 418, column: 7, scope: !7305)
!7321 = !DILocation(line: 418, column: 28, scope: !7318)
!7322 = !DILocation(line: 418, column: 21, scope: !7318)
!7323 = !DILocation(line: 418, column: 26, scope: !7318)
!7324 = !DILocation(line: 419, column: 10, scope: !7305)
!7325 = !DILocation(line: 419, column: 16, scope: !7305)
!7326 = !DILocation(line: 419, column: 3, scope: !7305)
!7327 = !DILocation(line: 419, column: 8, scope: !7305)
!7328 = !DILocation(line: 420, column: 8, scope: !7305)
!7329 = !DILocation(line: 420, column: 6, scope: !7305)
!7330 = !DILocation(line: 423, column: 2, scope: !7134)
!7331 = !DILocation(line: 423, column: 9, scope: !7134)
!7332 = !DILocation(line: 423, column: 16, scope: !7134)
!7333 = !DILocation(line: 423, column: 14, scope: !7134)
!7334 = !DILocation(line: 424, column: 7, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 424, column: 7)
!7336 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 423, column: 21)
!7337 = !DILocation(line: 424, column: 11, scope: !7335)
!7338 = !DILocation(line: 424, column: 16, scope: !7335)
!7339 = !DILocation(line: 424, column: 7, scope: !7336)
!7340 = !DILocation(line: 425, column: 8, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 425, column: 8)
!7342 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 424, column: 25)
!7343 = !DILocation(line: 425, column: 8, scope: !7342)
!7344 = !DILocation(line: 426, column: 10, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 425, column: 14)
!7346 = !DILocation(line: 426, column: 8, scope: !7345)
!7347 = !DILocation(line: 427, column: 12, scope: !7345)
!7348 = !DILocation(line: 427, column: 9, scope: !7345)
!7349 = !DILocation(line: 428, column: 4, scope: !7345)
!7350 = !DILocation(line: 429, column: 13, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 429, column: 13)
!7352 = !DILocation(line: 429, column: 21, scope: !7351)
!7353 = !DILocation(line: 429, column: 18, scope: !7351)
!7354 = !DILocation(line: 429, column: 13, scope: !7341)
!7355 = !DILocation(line: 430, column: 5, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7351, file: !3, line: 429, column: 27)
!7357 = !DILocation(line: 432, column: 3, scope: !7342)
!7358 = !DILocation(line: 434, column: 9, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 433, column: 8)
!7360 = !DILocation(line: 434, column: 13, scope: !7359)
!7361 = !DILocation(line: 434, column: 7, scope: !7359)
!7362 = !DILocation(line: 437, column: 10, scope: !7336)
!7363 = !DILocation(line: 437, column: 3, scope: !7336)
!7364 = !DILocation(line: 437, column: 8, scope: !7336)
!7365 = !DILocation(line: 438, column: 10, scope: !7336)
!7366 = !DILocation(line: 438, column: 3, scope: !7336)
!7367 = !DILocation(line: 438, column: 8, scope: !7336)
!7368 = !DILocation(line: 439, column: 10, scope: !7336)
!7369 = !DILocation(line: 439, column: 3, scope: !7336)
!7370 = !DILocation(line: 439, column: 8, scope: !7336)
!7371 = !DILocation(line: 440, column: 10, scope: !7336)
!7372 = !DILocation(line: 440, column: 3, scope: !7336)
!7373 = !DILocation(line: 440, column: 8, scope: !7336)
!7374 = !DILocation(line: 441, column: 10, scope: !7336)
!7375 = !DILocation(line: 441, column: 3, scope: !7336)
!7376 = !DILocation(line: 441, column: 8, scope: !7336)
!7377 = !DILocation(line: 442, column: 10, scope: !7336)
!7378 = !DILocation(line: 442, column: 3, scope: !7336)
!7379 = !DILocation(line: 442, column: 8, scope: !7336)
!7380 = !DILocation(line: 443, column: 10, scope: !7336)
!7381 = !DILocation(line: 443, column: 14, scope: !7336)
!7382 = !DILocation(line: 443, column: 20, scope: !7336)
!7383 = !DILocation(line: 443, column: 18, scope: !7336)
!7384 = !DILocation(line: 443, column: 3, scope: !7336)
!7385 = !DILocation(line: 443, column: 8, scope: !7336)
!7386 = !DILocation(line: 444, column: 10, scope: !7336)
!7387 = !DILocation(line: 444, column: 3, scope: !7336)
!7388 = !DILocation(line: 444, column: 8, scope: !7336)
!7389 = !DILocation(line: 446, column: 7, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 446, column: 7)
!7391 = !DILocation(line: 446, column: 20, scope: !7390)
!7392 = !DILocation(line: 446, column: 18, scope: !7390)
!7393 = !DILocation(line: 446, column: 11, scope: !7390)
!7394 = !DILocation(line: 446, column: 7, scope: !7336)
!7395 = !DILocation(line: 446, column: 29, scope: !7390)
!7396 = distinct !{!7396, !7330, !7397}
!7397 = !DILocation(line: 447, column: 2, scope: !7134)
!7398 = !DILocation(line: 449, column: 14, scope: !7134)
!7399 = !DILocation(line: 450, column: 6, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 450, column: 6)
!7401 = !DILocation(line: 450, column: 12, scope: !7400)
!7402 = !DILocation(line: 450, column: 17, scope: !7400)
!7403 = !DILocation(line: 450, column: 32, scope: !7400)
!7404 = !DILocation(line: 450, column: 35, scope: !7400)
!7405 = !DILocation(line: 450, column: 41, scope: !7400)
!7406 = !DILocation(line: 450, column: 46, scope: !7400)
!7407 = !DILocation(line: 450, column: 6, scope: !7134)
!7408 = !DILocation(line: 450, column: 74, scope: !7400)
!7409 = !DILocation(line: 450, column: 62, scope: !7400)
!7410 = !DILocation(line: 453, column: 6, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 453, column: 6)
!7412 = !DILocation(line: 453, column: 11, scope: !7411)
!7413 = !DILocation(line: 453, column: 6, scope: !7134)
!7414 = !DILocation(line: 454, column: 7, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 454, column: 7)
!7416 = distinct !DILexicalBlock(scope: !7411, file: !3, line: 453, column: 17)
!7417 = !DILocation(line: 454, column: 19, scope: !7415)
!7418 = !DILocation(line: 454, column: 7, scope: !7416)
!7419 = !DILocation(line: 455, column: 8, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 455, column: 8)
!7421 = distinct !DILexicalBlock(scope: !7415, file: !3, line: 454, column: 25)
!7422 = !DILocation(line: 455, column: 15, scope: !7420)
!7423 = !DILocation(line: 455, column: 12, scope: !7420)
!7424 = !DILocation(line: 455, column: 8, scope: !7421)
!7425 = !DILocation(line: 456, column: 12, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 455, column: 21)
!7427 = !DILocation(line: 456, column: 5, scope: !7426)
!7428 = !DILocation(line: 456, column: 10, scope: !7426)
!7429 = !DILocation(line: 457, column: 12, scope: !7426)
!7430 = !DILocation(line: 457, column: 5, scope: !7426)
!7431 = !DILocation(line: 457, column: 10, scope: !7426)
!7432 = !DILocation(line: 458, column: 5, scope: !7426)
!7433 = !DILocation(line: 460, column: 8, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 460, column: 8)
!7435 = !DILocation(line: 460, column: 15, scope: !7434)
!7436 = !DILocation(line: 460, column: 12, scope: !7434)
!7437 = !DILocation(line: 460, column: 8, scope: !7421)
!7438 = !DILocation(line: 461, column: 5, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7434, file: !3, line: 460, column: 21)
!7440 = !DILocation(line: 463, column: 3, scope: !7421)
!7441 = !DILocation(line: 464, column: 12, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7415, file: !3, line: 464, column: 12)
!7443 = !DILocation(line: 464, column: 18, scope: !7442)
!7444 = !DILocation(line: 464, column: 16, scope: !7442)
!7445 = !DILocation(line: 464, column: 12, scope: !7415)
!7446 = !DILocation(line: 465, column: 10, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7442, file: !3, line: 464, column: 24)
!7448 = !DILocation(line: 465, column: 8, scope: !7447)
!7449 = !DILocation(line: 466, column: 11, scope: !7447)
!7450 = !DILocation(line: 466, column: 4, scope: !7447)
!7451 = !DILocation(line: 466, column: 9, scope: !7447)
!7452 = !DILocation(line: 467, column: 11, scope: !7447)
!7453 = !DILocation(line: 467, column: 4, scope: !7447)
!7454 = !DILocation(line: 467, column: 9, scope: !7447)
!7455 = !DILocation(line: 468, column: 3, scope: !7447)
!7456 = !DILocation(line: 469, column: 2, scope: !7416)
!7457 = !DILocation(line: 471, column: 6, scope: !7134)
!7458 = !DILocation(line: 471, column: 13, scope: !7134)
!7459 = !DILocation(line: 471, column: 11, scope: !7134)
!7460 = !DILocation(line: 471, column: 4, scope: !7134)
!7461 = !DILocation(line: 472, column: 6, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 472, column: 6)
!7463 = !DILocation(line: 472, column: 8, scope: !7462)
!7464 = !DILocation(line: 472, column: 6, scope: !7134)
!7465 = !DILocation(line: 473, column: 7, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7467, file: !3, line: 473, column: 7)
!7467 = distinct !DILexicalBlock(scope: !7462, file: !3, line: 472, column: 17)
!7468 = !DILocation(line: 473, column: 19, scope: !7466)
!7469 = !DILocation(line: 473, column: 7, scope: !7467)
!7470 = !DILocation(line: 474, column: 4, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 473, column: 25)
!7472 = !DILocation(line: 476, column: 2, scope: !7467)
!7473 = !DILocation(line: 478, column: 8, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7462, file: !3, line: 477, column: 7)
!7475 = !DILocation(line: 478, column: 14, scope: !7474)
!7476 = !DILocation(line: 478, column: 12, scope: !7474)
!7477 = !DILocation(line: 478, column: 22, scope: !7474)
!7478 = !DILocation(line: 478, column: 20, scope: !7474)
!7479 = !DILocation(line: 478, column: 5, scope: !7474)
!7480 = !DILocation(line: 482, column: 29, scope: !7134)
!7481 = !DILocation(line: 482, column: 32, scope: !7134)
!7482 = !DILocation(line: 482, column: 35, scope: !7134)
!7483 = !DILocation(line: 482, column: 41, scope: !7134)
!7484 = !DILocation(line: 482, column: 2, scope: !7134)
!7485 = !DILocation(line: 484, column: 6, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 484, column: 6)
!7487 = !DILocation(line: 484, column: 12, scope: !7486)
!7488 = !DILocation(line: 484, column: 20, scope: !7486)
!7489 = !DILocation(line: 484, column: 26, scope: !7486)
!7490 = !DILocation(line: 484, column: 17, scope: !7486)
!7491 = !DILocation(line: 484, column: 6, scope: !7134)
!7492 = !DILocalVariable(name: "t_other", scope: !7493, file: !3, line: 485, type: !438)
!7493 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 484, column: 32)
!7494 = !DILocation(line: 485, column: 9, scope: !7493)
!7495 = !DILocation(line: 486, column: 30, scope: !7493)
!7496 = !DILocation(line: 486, column: 33, scope: !7493)
!7497 = !DILocation(line: 486, column: 42, scope: !7493)
!7498 = !DILocation(line: 486, column: 48, scope: !7493)
!7499 = !DILocation(line: 486, column: 3, scope: !7493)
!7500 = !DILocation(line: 487, column: 18, scope: !7493)
!7501 = !DILocation(line: 487, column: 21, scope: !7493)
!7502 = !DILocation(line: 487, column: 24, scope: !7493)
!7503 = !DILocation(line: 487, column: 33, scope: !7493)
!7504 = !DILocation(line: 487, column: 3, scope: !7493)
!7505 = !DILocation(line: 488, column: 2, scope: !7493)
!7506 = !DILocation(line: 490, column: 2, scope: !7134)
!7507 = !DILocation(line: 492, column: 1, scope: !7134)
!7508 = distinct !DISubprogram(name: "do_key", scope: !3, file: !3, line: 830, type: !7509, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!7509 = !DISubroutineType(types: !7510)
!7510 = !{null, !2858, !176, !2858, !211, !1952, !313, !7137, !213, !2858}
!7511 = !DILocalVariable(name: "start", arg: 1, scope: !7508, file: !3, line: 830, type: !2858)
!7512 = !DILocation(line: 830, column: 30, scope: !7508)
!7513 = !DILocalVariable(name: "end", arg: 2, scope: !7508, file: !3, line: 830, type: !176)
!7514 = !DILocation(line: 830, column: 41, scope: !7508)
!7515 = !DILocalVariable(name: "tot", arg: 3, scope: !7508, file: !3, line: 830, type: !2858)
!7516 = !DILocation(line: 830, column: 56, scope: !7508)
!7517 = !DILocalVariable(name: "poin", arg: 4, scope: !7508, file: !3, line: 830, type: !211)
!7518 = !DILocation(line: 830, column: 67, scope: !7508)
!7519 = !DILocalVariable(name: "key", arg: 5, scope: !7508, file: !3, line: 830, type: !1952)
!7520 = !DILocation(line: 830, column: 78, scope: !7508)
!7521 = !DILocalVariable(name: "actkb", arg: 6, scope: !7508, file: !3, line: 830, type: !313)
!7522 = !DILocation(line: 830, column: 93, scope: !7508)
!7523 = !DILocalVariable(name: "k", arg: 7, scope: !7508, file: !3, line: 830, type: !7137)
!7524 = !DILocation(line: 830, column: 111, scope: !7508)
!7525 = !DILocalVariable(name: "t", arg: 8, scope: !7508, file: !3, line: 830, type: !213)
!7526 = !DILocation(line: 830, column: 121, scope: !7508)
!7527 = !DILocalVariable(name: "mode", arg: 9, scope: !7508, file: !3, line: 830, type: !2858)
!7528 = !DILocation(line: 830, column: 134, scope: !7508)
!7529 = !DILocalVariable(name: "k1tot", scope: !7508, file: !3, line: 832, type: !214)
!7530 = !DILocation(line: 832, column: 8, scope: !7508)
!7531 = !DILocalVariable(name: "k2tot", scope: !7508, file: !3, line: 832, type: !214)
!7532 = !DILocation(line: 832, column: 21, scope: !7508)
!7533 = !DILocalVariable(name: "k3tot", scope: !7508, file: !3, line: 832, type: !214)
!7534 = !DILocation(line: 832, column: 34, scope: !7508)
!7535 = !DILocalVariable(name: "k4tot", scope: !7508, file: !3, line: 832, type: !214)
!7536 = !DILocation(line: 832, column: 47, scope: !7508)
!7537 = !DILocalVariable(name: "k1d", scope: !7508, file: !3, line: 833, type: !214)
!7538 = !DILocation(line: 833, column: 8, scope: !7508)
!7539 = !DILocalVariable(name: "k2d", scope: !7508, file: !3, line: 833, type: !214)
!7540 = !DILocation(line: 833, column: 19, scope: !7508)
!7541 = !DILocalVariable(name: "k3d", scope: !7508, file: !3, line: 833, type: !214)
!7542 = !DILocation(line: 833, column: 30, scope: !7508)
!7543 = !DILocalVariable(name: "k4d", scope: !7508, file: !3, line: 833, type: !214)
!7544 = !DILocation(line: 833, column: 41, scope: !7508)
!7545 = !DILocalVariable(name: "a", scope: !7508, file: !3, line: 834, type: !176)
!7546 = !DILocation(line: 834, column: 6, scope: !7508)
!7547 = !DILocalVariable(name: "ofs", scope: !7508, file: !3, line: 834, type: !3245)
!7548 = !DILocation(line: 834, column: 9, scope: !7508)
!7549 = !DILocalVariable(name: "ofsp", scope: !7508, file: !3, line: 834, type: !2879)
!7550 = !DILocation(line: 834, column: 19, scope: !7508)
!7551 = !DILocalVariable(name: "flagdo", scope: !7508, file: !3, line: 835, type: !176)
!7552 = !DILocation(line: 835, column: 6, scope: !7508)
!7553 = !DILocalVariable(name: "flagflo", scope: !7508, file: !3, line: 835, type: !176)
!7554 = !DILocation(line: 835, column: 19, scope: !7508)
!7555 = !DILocalVariable(name: "elemsize", scope: !7508, file: !3, line: 835, type: !176)
!7556 = !DILocation(line: 835, column: 32, scope: !7508)
!7557 = !DILocalVariable(name: "poinsize", scope: !7508, file: !3, line: 835, type: !176)
!7558 = !DILocation(line: 835, column: 42, scope: !7508)
!7559 = !DILocalVariable(name: "k1", scope: !7508, file: !3, line: 836, type: !211)
!7560 = !DILocation(line: 836, column: 8, scope: !7508)
!7561 = !DILocalVariable(name: "k2", scope: !7508, file: !3, line: 836, type: !211)
!7562 = !DILocation(line: 836, column: 13, scope: !7508)
!7563 = !DILocalVariable(name: "k3", scope: !7508, file: !3, line: 836, type: !211)
!7564 = !DILocation(line: 836, column: 18, scope: !7508)
!7565 = !DILocalVariable(name: "k4", scope: !7508, file: !3, line: 836, type: !211)
!7566 = !DILocation(line: 836, column: 23, scope: !7508)
!7567 = !DILocalVariable(name: "freek1", scope: !7508, file: !3, line: 836, type: !211)
!7568 = !DILocation(line: 836, column: 28, scope: !7508)
!7569 = !DILocalVariable(name: "freek2", scope: !7508, file: !3, line: 836, type: !211)
!7570 = !DILocation(line: 836, column: 37, scope: !7508)
!7571 = !DILocalVariable(name: "freek3", scope: !7508, file: !3, line: 836, type: !211)
!7572 = !DILocation(line: 836, column: 46, scope: !7508)
!7573 = !DILocalVariable(name: "freek4", scope: !7508, file: !3, line: 836, type: !211)
!7574 = !DILocation(line: 836, column: 55, scope: !7508)
!7575 = !DILocalVariable(name: "cp", scope: !7508, file: !3, line: 837, type: !211)
!7576 = !DILocation(line: 837, column: 8, scope: !7508)
!7577 = !DILocalVariable(name: "elemstr", scope: !7508, file: !3, line: 837, type: !1215)
!7578 = !DILocation(line: 837, column: 12, scope: !7508)
!7579 = !DILocation(line: 840, column: 2, scope: !7508)
!7580 = !DILocation(line: 840, column: 9, scope: !7508)
!7581 = !DILocation(line: 842, column: 24, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 842, column: 6)
!7583 = !DILocation(line: 842, column: 29, scope: !7582)
!7584 = !DILocation(line: 842, column: 47, scope: !7582)
!7585 = !DILocation(line: 842, column: 7, scope: !7582)
!7586 = !DILocation(line: 842, column: 6, scope: !7508)
!7587 = !DILocation(line: 843, column: 3, scope: !7582)
!7588 = !DILocation(line: 845, column: 6, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 845, column: 6)
!7590 = !DILocation(line: 845, column: 12, scope: !7589)
!7591 = !DILocation(line: 845, column: 10, scope: !7589)
!7592 = !DILocation(line: 845, column: 6, scope: !7508)
!7593 = !DILocation(line: 845, column: 23, scope: !7589)
!7594 = !DILocation(line: 845, column: 21, scope: !7589)
!7595 = !DILocation(line: 845, column: 17, scope: !7589)
!7596 = !DILocation(line: 847, column: 26, scope: !7508)
!7597 = !DILocation(line: 847, column: 31, scope: !7508)
!7598 = !DILocation(line: 847, column: 38, scope: !7508)
!7599 = !DILocation(line: 847, column: 7, scope: !7508)
!7600 = !DILocation(line: 847, column: 5, scope: !7508)
!7601 = !DILocation(line: 848, column: 26, scope: !7508)
!7602 = !DILocation(line: 848, column: 31, scope: !7508)
!7603 = !DILocation(line: 848, column: 38, scope: !7508)
!7604 = !DILocation(line: 848, column: 7, scope: !7508)
!7605 = !DILocation(line: 848, column: 5, scope: !7508)
!7606 = !DILocation(line: 849, column: 26, scope: !7508)
!7607 = !DILocation(line: 849, column: 31, scope: !7508)
!7608 = !DILocation(line: 849, column: 38, scope: !7508)
!7609 = !DILocation(line: 849, column: 7, scope: !7508)
!7610 = !DILocation(line: 849, column: 5, scope: !7508)
!7611 = !DILocation(line: 850, column: 26, scope: !7508)
!7612 = !DILocation(line: 850, column: 31, scope: !7508)
!7613 = !DILocation(line: 850, column: 38, scope: !7508)
!7614 = !DILocation(line: 850, column: 7, scope: !7508)
!7615 = !DILocation(line: 850, column: 5, scope: !7508)
!7616 = !DILocation(line: 853, column: 6, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 853, column: 6)
!7618 = !DILocation(line: 853, column: 13, scope: !7617)
!7619 = !DILocation(line: 853, column: 19, scope: !7617)
!7620 = !DILocation(line: 853, column: 10, scope: !7617)
!7621 = !DILocation(line: 853, column: 6, scope: !7508)
!7622 = !DILocation(line: 854, column: 9, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7617, file: !3, line: 853, column: 28)
!7624 = !DILocation(line: 855, column: 11, scope: !7623)
!7625 = !DILocation(line: 856, column: 7, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 856, column: 7)
!7627 = !DILocation(line: 856, column: 13, scope: !7626)
!7628 = !DILocation(line: 856, column: 7, scope: !7623)
!7629 = !DILocation(line: 857, column: 10, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7626, file: !3, line: 856, column: 22)
!7631 = !DILocation(line: 857, column: 16, scope: !7630)
!7632 = !DILocation(line: 857, column: 33, scope: !7630)
!7633 = !DILocation(line: 857, column: 26, scope: !7630)
!7634 = !DILocation(line: 857, column: 24, scope: !7630)
!7635 = !DILocation(line: 857, column: 8, scope: !7630)
!7636 = !DILocation(line: 858, column: 3, scope: !7630)
!7637 = !DILocation(line: 860, column: 11, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7626, file: !3, line: 859, column: 8)
!7639 = !DILocation(line: 862, column: 2, scope: !7623)
!7640 = !DILocation(line: 863, column: 6, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 863, column: 6)
!7642 = !DILocation(line: 863, column: 13, scope: !7641)
!7643 = !DILocation(line: 863, column: 19, scope: !7641)
!7644 = !DILocation(line: 863, column: 10, scope: !7641)
!7645 = !DILocation(line: 863, column: 6, scope: !7508)
!7646 = !DILocation(line: 864, column: 9, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7641, file: !3, line: 863, column: 28)
!7648 = !DILocation(line: 865, column: 11, scope: !7647)
!7649 = !DILocation(line: 866, column: 7, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 866, column: 7)
!7651 = !DILocation(line: 866, column: 13, scope: !7650)
!7652 = !DILocation(line: 866, column: 7, scope: !7647)
!7653 = !DILocation(line: 867, column: 10, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 866, column: 22)
!7655 = !DILocation(line: 867, column: 16, scope: !7654)
!7656 = !DILocation(line: 867, column: 33, scope: !7654)
!7657 = !DILocation(line: 867, column: 26, scope: !7654)
!7658 = !DILocation(line: 867, column: 24, scope: !7654)
!7659 = !DILocation(line: 867, column: 8, scope: !7654)
!7660 = !DILocation(line: 868, column: 3, scope: !7654)
!7661 = !DILocation(line: 870, column: 11, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 869, column: 8)
!7663 = !DILocation(line: 872, column: 2, scope: !7647)
!7664 = !DILocation(line: 873, column: 6, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 873, column: 6)
!7666 = !DILocation(line: 873, column: 13, scope: !7665)
!7667 = !DILocation(line: 873, column: 19, scope: !7665)
!7668 = !DILocation(line: 873, column: 10, scope: !7665)
!7669 = !DILocation(line: 873, column: 6, scope: !7508)
!7670 = !DILocation(line: 874, column: 9, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 873, column: 28)
!7672 = !DILocation(line: 875, column: 11, scope: !7671)
!7673 = !DILocation(line: 876, column: 7, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 876, column: 7)
!7675 = !DILocation(line: 876, column: 13, scope: !7674)
!7676 = !DILocation(line: 876, column: 7, scope: !7671)
!7677 = !DILocation(line: 877, column: 10, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 876, column: 22)
!7679 = !DILocation(line: 877, column: 16, scope: !7678)
!7680 = !DILocation(line: 877, column: 33, scope: !7678)
!7681 = !DILocation(line: 877, column: 26, scope: !7678)
!7682 = !DILocation(line: 877, column: 24, scope: !7678)
!7683 = !DILocation(line: 877, column: 8, scope: !7678)
!7684 = !DILocation(line: 878, column: 3, scope: !7678)
!7685 = !DILocation(line: 880, column: 11, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 879, column: 8)
!7687 = !DILocation(line: 882, column: 2, scope: !7671)
!7688 = !DILocation(line: 883, column: 6, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 883, column: 6)
!7690 = !DILocation(line: 883, column: 13, scope: !7689)
!7691 = !DILocation(line: 883, column: 19, scope: !7689)
!7692 = !DILocation(line: 883, column: 10, scope: !7689)
!7693 = !DILocation(line: 883, column: 6, scope: !7508)
!7694 = !DILocation(line: 884, column: 9, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 883, column: 28)
!7696 = !DILocation(line: 885, column: 11, scope: !7695)
!7697 = !DILocation(line: 886, column: 7, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7695, file: !3, line: 886, column: 7)
!7699 = !DILocation(line: 886, column: 13, scope: !7698)
!7700 = !DILocation(line: 886, column: 7, scope: !7695)
!7701 = !DILocation(line: 887, column: 10, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 886, column: 22)
!7703 = !DILocation(line: 887, column: 16, scope: !7702)
!7704 = !DILocation(line: 887, column: 33, scope: !7702)
!7705 = !DILocation(line: 887, column: 26, scope: !7702)
!7706 = !DILocation(line: 887, column: 24, scope: !7702)
!7707 = !DILocation(line: 887, column: 8, scope: !7702)
!7708 = !DILocation(line: 888, column: 3, scope: !7702)
!7709 = !DILocation(line: 890, column: 11, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 889, column: 8)
!7711 = !DILocation(line: 892, column: 2, scope: !7695)
!7712 = !DILocation(line: 895, column: 6, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 895, column: 6)
!7714 = !DILocation(line: 895, column: 12, scope: !7713)
!7715 = !DILocation(line: 895, column: 6, scope: !7508)
!7716 = !DILocation(line: 897, column: 11, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 895, column: 18)
!7718 = !DILocation(line: 897, column: 22, scope: !7717)
!7719 = !DILocation(line: 897, column: 20, scope: !7717)
!7720 = !DILocation(line: 897, column: 8, scope: !7717)
!7721 = !DILocation(line: 899, column: 7, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 899, column: 7)
!7723 = !DILocation(line: 899, column: 14, scope: !7722)
!7724 = !DILocation(line: 899, column: 7, scope: !7717)
!7725 = !DILocation(line: 900, column: 8, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 900, column: 8)
!7727 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 899, column: 19)
!7728 = !DILocation(line: 900, column: 16, scope: !7726)
!7729 = !DILocation(line: 900, column: 8, scope: !7727)
!7730 = !DILocation(line: 901, column: 14, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7726, file: !3, line: 900, column: 21)
!7732 = !DILocation(line: 901, column: 22, scope: !7731)
!7733 = !DILocation(line: 901, column: 20, scope: !7731)
!7734 = !DILocation(line: 901, column: 11, scope: !7731)
!7735 = !DILocation(line: 902, column: 20, scope: !7731)
!7736 = !DILocation(line: 902, column: 14, scope: !7731)
!7737 = !DILocation(line: 902, column: 9, scope: !7731)
!7738 = !DILocation(line: 902, column: 7, scope: !7731)
!7739 = !DILocation(line: 903, column: 9, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 903, column: 9)
!7741 = !DILocation(line: 903, column: 9, scope: !7731)
!7742 = !DILocation(line: 904, column: 15, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 903, column: 12)
!7744 = !DILocation(line: 904, column: 12, scope: !7743)
!7745 = !DILocation(line: 905, column: 12, scope: !7743)
!7746 = !DILocation(line: 905, column: 16, scope: !7743)
!7747 = !DILocation(line: 905, column: 21, scope: !7743)
!7748 = !DILocation(line: 905, column: 14, scope: !7743)
!7749 = !DILocation(line: 905, column: 9, scope: !7743)
!7750 = !DILocation(line: 906, column: 5, scope: !7743)
!7751 = !DILocation(line: 907, column: 4, scope: !7731)
!7752 = !DILocation(line: 909, column: 11, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7726, file: !3, line: 908, column: 9)
!7754 = !DILocation(line: 909, column: 19, scope: !7753)
!7755 = !DILocation(line: 909, column: 24, scope: !7753)
!7756 = !DILocation(line: 909, column: 17, scope: !7753)
!7757 = !DILocation(line: 909, column: 8, scope: !7753)
!7758 = !DILocation(line: 911, column: 3, scope: !7727)
!7759 = !DILocation(line: 912, column: 7, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 912, column: 7)
!7761 = !DILocation(line: 912, column: 14, scope: !7760)
!7762 = !DILocation(line: 912, column: 7, scope: !7717)
!7763 = !DILocation(line: 913, column: 8, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 913, column: 8)
!7765 = distinct !DILexicalBlock(scope: !7760, file: !3, line: 912, column: 19)
!7766 = !DILocation(line: 913, column: 16, scope: !7764)
!7767 = !DILocation(line: 913, column: 8, scope: !7765)
!7768 = !DILocation(line: 914, column: 14, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7764, file: !3, line: 913, column: 21)
!7770 = !DILocation(line: 914, column: 22, scope: !7769)
!7771 = !DILocation(line: 914, column: 20, scope: !7769)
!7772 = !DILocation(line: 914, column: 11, scope: !7769)
!7773 = !DILocation(line: 915, column: 20, scope: !7769)
!7774 = !DILocation(line: 915, column: 14, scope: !7769)
!7775 = !DILocation(line: 915, column: 9, scope: !7769)
!7776 = !DILocation(line: 915, column: 7, scope: !7769)
!7777 = !DILocation(line: 916, column: 9, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 916, column: 9)
!7779 = !DILocation(line: 916, column: 9, scope: !7769)
!7780 = !DILocation(line: 917, column: 15, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7778, file: !3, line: 916, column: 12)
!7782 = !DILocation(line: 917, column: 12, scope: !7781)
!7783 = !DILocation(line: 918, column: 12, scope: !7781)
!7784 = !DILocation(line: 918, column: 16, scope: !7781)
!7785 = !DILocation(line: 918, column: 21, scope: !7781)
!7786 = !DILocation(line: 918, column: 14, scope: !7781)
!7787 = !DILocation(line: 918, column: 9, scope: !7781)
!7788 = !DILocation(line: 919, column: 5, scope: !7781)
!7789 = !DILocation(line: 920, column: 4, scope: !7769)
!7790 = !DILocation(line: 922, column: 11, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7764, file: !3, line: 921, column: 9)
!7792 = !DILocation(line: 922, column: 19, scope: !7791)
!7793 = !DILocation(line: 922, column: 24, scope: !7791)
!7794 = !DILocation(line: 922, column: 17, scope: !7791)
!7795 = !DILocation(line: 922, column: 8, scope: !7791)
!7796 = !DILocation(line: 924, column: 3, scope: !7765)
!7797 = !DILocation(line: 925, column: 7, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 925, column: 7)
!7799 = !DILocation(line: 925, column: 14, scope: !7798)
!7800 = !DILocation(line: 925, column: 7, scope: !7717)
!7801 = !DILocation(line: 926, column: 8, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 926, column: 8)
!7803 = distinct !DILexicalBlock(scope: !7798, file: !3, line: 925, column: 19)
!7804 = !DILocation(line: 926, column: 16, scope: !7802)
!7805 = !DILocation(line: 926, column: 8, scope: !7803)
!7806 = !DILocation(line: 927, column: 14, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 926, column: 21)
!7808 = !DILocation(line: 927, column: 22, scope: !7807)
!7809 = !DILocation(line: 927, column: 20, scope: !7807)
!7810 = !DILocation(line: 927, column: 11, scope: !7807)
!7811 = !DILocation(line: 928, column: 20, scope: !7807)
!7812 = !DILocation(line: 928, column: 14, scope: !7807)
!7813 = !DILocation(line: 928, column: 9, scope: !7807)
!7814 = !DILocation(line: 928, column: 7, scope: !7807)
!7815 = !DILocation(line: 929, column: 9, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7807, file: !3, line: 929, column: 9)
!7817 = !DILocation(line: 929, column: 9, scope: !7807)
!7818 = !DILocation(line: 930, column: 15, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7816, file: !3, line: 929, column: 12)
!7820 = !DILocation(line: 930, column: 12, scope: !7819)
!7821 = !DILocation(line: 931, column: 12, scope: !7819)
!7822 = !DILocation(line: 931, column: 16, scope: !7819)
!7823 = !DILocation(line: 931, column: 21, scope: !7819)
!7824 = !DILocation(line: 931, column: 14, scope: !7819)
!7825 = !DILocation(line: 931, column: 9, scope: !7819)
!7826 = !DILocation(line: 932, column: 5, scope: !7819)
!7827 = !DILocation(line: 933, column: 4, scope: !7807)
!7828 = !DILocation(line: 935, column: 11, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 934, column: 9)
!7830 = !DILocation(line: 935, column: 19, scope: !7829)
!7831 = !DILocation(line: 935, column: 24, scope: !7829)
!7832 = !DILocation(line: 935, column: 17, scope: !7829)
!7833 = !DILocation(line: 935, column: 8, scope: !7829)
!7834 = !DILocation(line: 937, column: 3, scope: !7803)
!7835 = !DILocation(line: 938, column: 7, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 938, column: 7)
!7837 = !DILocation(line: 938, column: 14, scope: !7836)
!7838 = !DILocation(line: 938, column: 7, scope: !7717)
!7839 = !DILocation(line: 939, column: 8, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7841, file: !3, line: 939, column: 8)
!7841 = distinct !DILexicalBlock(scope: !7836, file: !3, line: 938, column: 19)
!7842 = !DILocation(line: 939, column: 16, scope: !7840)
!7843 = !DILocation(line: 939, column: 8, scope: !7841)
!7844 = !DILocation(line: 940, column: 14, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7840, file: !3, line: 939, column: 21)
!7846 = !DILocation(line: 940, column: 22, scope: !7845)
!7847 = !DILocation(line: 940, column: 20, scope: !7845)
!7848 = !DILocation(line: 940, column: 11, scope: !7845)
!7849 = !DILocation(line: 941, column: 20, scope: !7845)
!7850 = !DILocation(line: 941, column: 14, scope: !7845)
!7851 = !DILocation(line: 941, column: 9, scope: !7845)
!7852 = !DILocation(line: 941, column: 7, scope: !7845)
!7853 = !DILocation(line: 942, column: 9, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7845, file: !3, line: 942, column: 9)
!7855 = !DILocation(line: 942, column: 9, scope: !7845)
!7856 = !DILocation(line: 943, column: 15, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 942, column: 12)
!7858 = !DILocation(line: 943, column: 12, scope: !7857)
!7859 = !DILocation(line: 944, column: 12, scope: !7857)
!7860 = !DILocation(line: 944, column: 16, scope: !7857)
!7861 = !DILocation(line: 944, column: 21, scope: !7857)
!7862 = !DILocation(line: 944, column: 14, scope: !7857)
!7863 = !DILocation(line: 944, column: 9, scope: !7857)
!7864 = !DILocation(line: 945, column: 5, scope: !7857)
!7865 = !DILocation(line: 946, column: 4, scope: !7845)
!7866 = !DILocation(line: 948, column: 11, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7840, file: !3, line: 947, column: 9)
!7868 = !DILocation(line: 948, column: 19, scope: !7867)
!7869 = !DILocation(line: 948, column: 24, scope: !7867)
!7870 = !DILocation(line: 948, column: 17, scope: !7867)
!7871 = !DILocation(line: 948, column: 8, scope: !7867)
!7872 = !DILocation(line: 950, column: 3, scope: !7841)
!7873 = !DILocation(line: 952, column: 2, scope: !7717)
!7874 = !DILocation(line: 955, column: 2, scope: !7508)
!7875 = !DILocation(line: 955, column: 13, scope: !7508)
!7876 = !DILocation(line: 956, column: 2, scope: !7508)
!7877 = !DILocation(line: 956, column: 13, scope: !7508)
!7878 = !DILocation(line: 957, column: 2, scope: !7508)
!7879 = !DILocation(line: 957, column: 13, scope: !7508)
!7880 = !DILocation(line: 960, column: 13, scope: !7508)
!7881 = !DILocation(line: 960, column: 18, scope: !7508)
!7882 = !DILocation(line: 960, column: 11, scope: !7508)
!7883 = !DILocation(line: 961, column: 6, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 961, column: 6)
!7885 = !DILocation(line: 961, column: 11, scope: !7884)
!7886 = !DILocation(line: 961, column: 6, scope: !7508)
!7887 = !DILocation(line: 961, column: 43, scope: !7884)
!7888 = !DILocation(line: 961, column: 34, scope: !7884)
!7889 = !DILocation(line: 963, column: 11, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 963, column: 2)
!7891 = !DILocation(line: 963, column: 9, scope: !7890)
!7892 = !DILocation(line: 963, column: 7, scope: !7890)
!7893 = !DILocation(line: 963, column: 18, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7890, file: !3, line: 963, column: 2)
!7895 = !DILocation(line: 963, column: 22, scope: !7894)
!7896 = !DILocation(line: 963, column: 20, scope: !7894)
!7897 = !DILocation(line: 963, column: 2, scope: !7890)
!7898 = !DILocation(line: 965, column: 8, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7894, file: !3, line: 963, column: 32)
!7900 = !DILocation(line: 965, column: 13, scope: !7899)
!7901 = !DILocation(line: 965, column: 6, scope: !7899)
!7902 = !DILocation(line: 966, column: 7, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 966, column: 7)
!7904 = !DILocation(line: 966, column: 12, scope: !7903)
!7905 = !DILocation(line: 966, column: 7, scope: !7899)
!7906 = !DILocation(line: 966, column: 40, scope: !7903)
!7907 = !DILocation(line: 966, column: 38, scope: !7903)
!7908 = !DILocation(line: 966, column: 35, scope: !7903)
!7909 = !DILocation(line: 968, column: 10, scope: !7899)
!7910 = !DILocation(line: 968, column: 8, scope: !7899)
!7911 = !DILocation(line: 970, column: 3, scope: !7899)
!7912 = !DILocation(line: 970, column: 10, scope: !7899)
!7913 = !DILocation(line: 972, column: 12, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 970, column: 17)
!7915 = !DILocation(line: 972, column: 4, scope: !7914)
!7916 = !DILocation(line: 974, column: 24, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 972, column: 19)
!7918 = !DILocation(line: 974, column: 15, scope: !7917)
!7919 = !DILocation(line: 974, column: 39, scope: !7917)
!7920 = !DILocation(line: 974, column: 30, scope: !7917)
!7921 = !DILocation(line: 974, column: 52, scope: !7917)
!7922 = !DILocation(line: 974, column: 43, scope: !7917)
!7923 = !DILocation(line: 974, column: 65, scope: !7917)
!7924 = !DILocation(line: 974, column: 56, scope: !7917)
!7925 = !DILocation(line: 974, column: 78, scope: !7917)
!7926 = !DILocation(line: 974, column: 69, scope: !7917)
!7927 = !DILocation(line: 974, column: 82, scope: !7917)
!7928 = !DILocation(line: 974, column: 6, scope: !7917)
!7929 = !DILocation(line: 975, column: 6, scope: !7917)
!7930 = !DILocation(line: 977, column: 24, scope: !7917)
!7931 = !DILocation(line: 977, column: 15, scope: !7917)
!7932 = !DILocation(line: 977, column: 39, scope: !7917)
!7933 = !DILocation(line: 977, column: 30, scope: !7917)
!7934 = !DILocation(line: 977, column: 52, scope: !7917)
!7935 = !DILocation(line: 977, column: 43, scope: !7917)
!7936 = !DILocation(line: 977, column: 65, scope: !7917)
!7937 = !DILocation(line: 977, column: 56, scope: !7917)
!7938 = !DILocation(line: 977, column: 78, scope: !7917)
!7939 = !DILocation(line: 977, column: 69, scope: !7917)
!7940 = !DILocation(line: 977, column: 82, scope: !7917)
!7941 = !DILocation(line: 977, column: 6, scope: !7917)
!7942 = !DILocation(line: 978, column: 6, scope: !7917)
!7943 = !DILocation(line: 980, column: 24, scope: !7917)
!7944 = !DILocation(line: 980, column: 16, scope: !7917)
!7945 = !DILocation(line: 980, column: 38, scope: !7917)
!7946 = !DILocation(line: 980, column: 30, scope: !7917)
!7947 = !DILocation(line: 980, column: 50, scope: !7917)
!7948 = !DILocation(line: 980, column: 42, scope: !7917)
!7949 = !DILocation(line: 980, column: 62, scope: !7917)
!7950 = !DILocation(line: 980, column: 54, scope: !7917)
!7951 = !DILocation(line: 980, column: 74, scope: !7917)
!7952 = !DILocation(line: 980, column: 66, scope: !7917)
!7953 = !DILocation(line: 980, column: 78, scope: !7917)
!7954 = !DILocation(line: 980, column: 6, scope: !7917)
!7955 = !DILocation(line: 981, column: 6, scope: !7917)
!7956 = !DILocation(line: 984, column: 10, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7917, file: !3, line: 984, column: 10)
!7958 = !DILocation(line: 984, column: 10, scope: !7917)
!7959 = !DILocation(line: 984, column: 18, scope: !7957)
!7960 = !DILocation(line: 984, column: 28, scope: !7957)
!7961 = !DILocation(line: 985, column: 10, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7917, file: !3, line: 985, column: 10)
!7963 = !DILocation(line: 985, column: 10, scope: !7917)
!7964 = !DILocation(line: 985, column: 18, scope: !7962)
!7965 = !DILocation(line: 985, column: 28, scope: !7962)
!7966 = !DILocation(line: 986, column: 10, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7917, file: !3, line: 986, column: 10)
!7968 = !DILocation(line: 986, column: 10, scope: !7917)
!7969 = !DILocation(line: 986, column: 18, scope: !7967)
!7970 = !DILocation(line: 986, column: 28, scope: !7967)
!7971 = !DILocation(line: 987, column: 10, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7917, file: !3, line: 987, column: 10)
!7973 = !DILocation(line: 987, column: 10, scope: !7917)
!7974 = !DILocation(line: 987, column: 18, scope: !7972)
!7975 = !DILocation(line: 987, column: 28, scope: !7972)
!7976 = !DILocation(line: 989, column: 6, scope: !7917)
!7977 = !DILocation(line: 992, column: 13, scope: !7914)
!7978 = !DILocation(line: 992, column: 12, scope: !7914)
!7979 = !DILocation(line: 992, column: 9, scope: !7914)
!7980 = !DILocation(line: 993, column: 7, scope: !7914)
!7981 = !DILocation(line: 994, column: 8, scope: !7914)
!7982 = distinct !{!7982, !7911, !7983}
!7983 = !DILocation(line: 995, column: 3, scope: !7899)
!7984 = !DILocation(line: 997, column: 7, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 997, column: 7)
!7986 = !DILocation(line: 997, column: 14, scope: !7985)
!7987 = !DILocation(line: 997, column: 7, scope: !7899)
!7988 = !DILocation(line: 998, column: 8, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7990, file: !3, line: 998, column: 8)
!7990 = distinct !DILexicalBlock(scope: !7985, file: !3, line: 997, column: 19)
!7991 = !DILocation(line: 998, column: 16, scope: !7989)
!7992 = !DILocation(line: 998, column: 8, scope: !7990)
!7993 = !DILocation(line: 999, column: 14, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7989, file: !3, line: 998, column: 21)
!7995 = !DILocation(line: 999, column: 11, scope: !7994)
!7996 = !DILocation(line: 1000, column: 5, scope: !7994)
!7997 = !DILocation(line: 1000, column: 12, scope: !7994)
!7998 = !DILocation(line: 1000, column: 18, scope: !7994)
!7999 = !DILocation(line: 1001, column: 12, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 1000, column: 27)
!8001 = !DILocation(line: 1002, column: 12, scope: !8000)
!8002 = !DILocation(line: 1002, column: 9, scope: !8000)
!8003 = distinct !{!8003, !7996, !8004}
!8004 = !DILocation(line: 1003, column: 5, scope: !7994)
!8005 = !DILocation(line: 1004, column: 4, scope: !7994)
!8006 = !DILocation(line: 1005, column: 15, scope: !7989)
!8007 = !DILocation(line: 1005, column: 12, scope: !7989)
!8008 = !DILocation(line: 1006, column: 3, scope: !7990)
!8009 = !DILocation(line: 1007, column: 7, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 1007, column: 7)
!8011 = !DILocation(line: 1007, column: 14, scope: !8010)
!8012 = !DILocation(line: 1007, column: 7, scope: !7899)
!8013 = !DILocation(line: 1008, column: 8, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8015, file: !3, line: 1008, column: 8)
!8015 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 1007, column: 19)
!8016 = !DILocation(line: 1008, column: 16, scope: !8014)
!8017 = !DILocation(line: 1008, column: 8, scope: !8015)
!8018 = !DILocation(line: 1009, column: 14, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8014, file: !3, line: 1008, column: 21)
!8020 = !DILocation(line: 1009, column: 11, scope: !8019)
!8021 = !DILocation(line: 1010, column: 5, scope: !8019)
!8022 = !DILocation(line: 1010, column: 12, scope: !8019)
!8023 = !DILocation(line: 1010, column: 18, scope: !8019)
!8024 = !DILocation(line: 1011, column: 12, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8019, file: !3, line: 1010, column: 27)
!8026 = !DILocation(line: 1012, column: 12, scope: !8025)
!8027 = !DILocation(line: 1012, column: 9, scope: !8025)
!8028 = distinct !{!8028, !8021, !8029}
!8029 = !DILocation(line: 1013, column: 5, scope: !8019)
!8030 = !DILocation(line: 1014, column: 4, scope: !8019)
!8031 = !DILocation(line: 1016, column: 11, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8014, file: !3, line: 1015, column: 9)
!8033 = !DILocation(line: 1016, column: 8, scope: !8032)
!8034 = !DILocation(line: 1018, column: 3, scope: !8015)
!8035 = !DILocation(line: 1019, column: 7, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 1019, column: 7)
!8037 = !DILocation(line: 1019, column: 14, scope: !8036)
!8038 = !DILocation(line: 1019, column: 7, scope: !7899)
!8039 = !DILocation(line: 1020, column: 8, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8041, file: !3, line: 1020, column: 8)
!8041 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 1019, column: 19)
!8042 = !DILocation(line: 1020, column: 16, scope: !8040)
!8043 = !DILocation(line: 1020, column: 8, scope: !8041)
!8044 = !DILocation(line: 1021, column: 14, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8040, file: !3, line: 1020, column: 21)
!8046 = !DILocation(line: 1021, column: 11, scope: !8045)
!8047 = !DILocation(line: 1022, column: 5, scope: !8045)
!8048 = !DILocation(line: 1022, column: 12, scope: !8045)
!8049 = !DILocation(line: 1022, column: 18, scope: !8045)
!8050 = !DILocation(line: 1023, column: 12, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8045, file: !3, line: 1022, column: 27)
!8052 = !DILocation(line: 1024, column: 12, scope: !8051)
!8053 = !DILocation(line: 1024, column: 9, scope: !8051)
!8054 = distinct !{!8054, !8047, !8055}
!8055 = !DILocation(line: 1025, column: 5, scope: !8045)
!8056 = !DILocation(line: 1026, column: 4, scope: !8045)
!8057 = !DILocation(line: 1028, column: 11, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8040, file: !3, line: 1027, column: 9)
!8059 = !DILocation(line: 1028, column: 8, scope: !8058)
!8060 = !DILocation(line: 1030, column: 3, scope: !8041)
!8061 = !DILocation(line: 1031, column: 7, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 1031, column: 7)
!8063 = !DILocation(line: 1031, column: 14, scope: !8062)
!8064 = !DILocation(line: 1031, column: 7, scope: !7899)
!8065 = !DILocation(line: 1032, column: 8, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8067, file: !3, line: 1032, column: 8)
!8067 = distinct !DILexicalBlock(scope: !8062, file: !3, line: 1031, column: 19)
!8068 = !DILocation(line: 1032, column: 16, scope: !8066)
!8069 = !DILocation(line: 1032, column: 8, scope: !8067)
!8070 = !DILocation(line: 1033, column: 14, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 1032, column: 21)
!8072 = !DILocation(line: 1033, column: 11, scope: !8071)
!8073 = !DILocation(line: 1034, column: 5, scope: !8071)
!8074 = !DILocation(line: 1034, column: 12, scope: !8071)
!8075 = !DILocation(line: 1034, column: 18, scope: !8071)
!8076 = !DILocation(line: 1035, column: 12, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 1034, column: 27)
!8078 = !DILocation(line: 1036, column: 12, scope: !8077)
!8079 = !DILocation(line: 1036, column: 9, scope: !8077)
!8080 = distinct !{!8080, !8073, !8081}
!8081 = !DILocation(line: 1037, column: 5, scope: !8071)
!8082 = !DILocation(line: 1038, column: 4, scope: !8071)
!8083 = !DILocation(line: 1040, column: 11, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 1039, column: 9)
!8085 = !DILocation(line: 1040, column: 8, scope: !8084)
!8086 = !DILocation(line: 1042, column: 3, scope: !8067)
!8087 = !DILocation(line: 1044, column: 7, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 1044, column: 7)
!8089 = !DILocation(line: 1044, column: 12, scope: !8088)
!8090 = !DILocation(line: 1044, column: 7, scope: !7899)
!8091 = !DILocation(line: 1044, column: 37, scope: !8088)
!8092 = !DILocation(line: 1044, column: 35, scope: !8088)
!8093 = !DILocation(line: 1045, column: 2, scope: !7899)
!8094 = !DILocation(line: 963, column: 28, scope: !7894)
!8095 = !DILocation(line: 963, column: 2, scope: !7894)
!8096 = distinct !{!8096, !7897, !8097}
!8097 = !DILocation(line: 1045, column: 2, scope: !7890)
!8098 = !DILocation(line: 1047, column: 6, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 1047, column: 6)
!8100 = !DILocation(line: 1047, column: 6, scope: !7508)
!8101 = !DILocation(line: 1047, column: 14, scope: !8099)
!8102 = !DILocation(line: 1047, column: 24, scope: !8099)
!8103 = !DILocation(line: 1048, column: 6, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 1048, column: 6)
!8105 = !DILocation(line: 1048, column: 6, scope: !7508)
!8106 = !DILocation(line: 1048, column: 14, scope: !8104)
!8107 = !DILocation(line: 1048, column: 24, scope: !8104)
!8108 = !DILocation(line: 1049, column: 6, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 1049, column: 6)
!8110 = !DILocation(line: 1049, column: 6, scope: !7508)
!8111 = !DILocation(line: 1049, column: 14, scope: !8109)
!8112 = !DILocation(line: 1049, column: 24, scope: !8109)
!8113 = !DILocation(line: 1050, column: 6, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 1050, column: 6)
!8115 = !DILocation(line: 1050, column: 6, scope: !7508)
!8116 = !DILocation(line: 1050, column: 14, scope: !8114)
!8117 = !DILocation(line: 1050, column: 24, scope: !8114)
!8118 = !DILocation(line: 1051, column: 1, scope: !7508)
!8119 = distinct !DISubprogram(name: "flerp", scope: !3, file: !3, line: 494, type: !8120, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!8120 = !DISubroutineType(types: !8121)
!8121 = !{null, !176, !213, !213, !213, !213, !213, !213}
!8122 = !DILocalVariable(name: "tot", arg: 1, scope: !8119, file: !3, line: 494, type: !176)
!8123 = !DILocation(line: 494, column: 23, scope: !8119)
!8124 = !DILocalVariable(name: "in", arg: 2, scope: !8119, file: !3, line: 494, type: !213)
!8125 = !DILocation(line: 494, column: 35, scope: !8119)
!8126 = !DILocalVariable(name: "f0", arg: 3, scope: !8119, file: !3, line: 494, type: !213)
!8127 = !DILocation(line: 494, column: 46, scope: !8119)
!8128 = !DILocalVariable(name: "f1", arg: 4, scope: !8119, file: !3, line: 494, type: !213)
!8129 = !DILocation(line: 494, column: 57, scope: !8119)
!8130 = !DILocalVariable(name: "f2", arg: 5, scope: !8119, file: !3, line: 494, type: !213)
!8131 = !DILocation(line: 494, column: 68, scope: !8119)
!8132 = !DILocalVariable(name: "f3", arg: 6, scope: !8119, file: !3, line: 494, type: !213)
!8133 = !DILocation(line: 494, column: 79, scope: !8119)
!8134 = !DILocalVariable(name: "t", arg: 7, scope: !8119, file: !3, line: 494, type: !213)
!8135 = !DILocation(line: 494, column: 90, scope: !8119)
!8136 = !DILocalVariable(name: "a", scope: !8119, file: !3, line: 496, type: !176)
!8137 = !DILocation(line: 496, column: 6, scope: !8119)
!8138 = !DILocation(line: 498, column: 9, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8119, file: !3, line: 498, column: 2)
!8140 = !DILocation(line: 498, column: 7, scope: !8139)
!8141 = !DILocation(line: 498, column: 14, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 498, column: 2)
!8143 = !DILocation(line: 498, column: 18, scope: !8142)
!8144 = !DILocation(line: 498, column: 16, scope: !8142)
!8145 = !DILocation(line: 498, column: 2, scope: !8139)
!8146 = !DILocation(line: 499, column: 11, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 498, column: 28)
!8148 = !DILocation(line: 499, column: 18, scope: !8147)
!8149 = !DILocation(line: 499, column: 21, scope: !8147)
!8150 = !DILocation(line: 499, column: 16, scope: !8147)
!8151 = !DILocation(line: 499, column: 26, scope: !8147)
!8152 = !DILocation(line: 499, column: 33, scope: !8147)
!8153 = !DILocation(line: 499, column: 36, scope: !8147)
!8154 = !DILocation(line: 499, column: 31, scope: !8147)
!8155 = !DILocation(line: 499, column: 24, scope: !8147)
!8156 = !DILocation(line: 499, column: 41, scope: !8147)
!8157 = !DILocation(line: 499, column: 48, scope: !8147)
!8158 = !DILocation(line: 499, column: 51, scope: !8147)
!8159 = !DILocation(line: 499, column: 46, scope: !8147)
!8160 = !DILocation(line: 499, column: 39, scope: !8147)
!8161 = !DILocation(line: 499, column: 56, scope: !8147)
!8162 = !DILocation(line: 499, column: 63, scope: !8147)
!8163 = !DILocation(line: 499, column: 66, scope: !8147)
!8164 = !DILocation(line: 499, column: 61, scope: !8147)
!8165 = !DILocation(line: 499, column: 54, scope: !8147)
!8166 = !DILocation(line: 499, column: 3, scope: !8147)
!8167 = !DILocation(line: 499, column: 6, scope: !8147)
!8168 = !DILocation(line: 499, column: 9, scope: !8147)
!8169 = !DILocation(line: 500, column: 2, scope: !8147)
!8170 = !DILocation(line: 498, column: 24, scope: !8142)
!8171 = !DILocation(line: 498, column: 2, scope: !8142)
!8172 = distinct !{!8172, !8145, !8173}
!8173 = !DILocation(line: 500, column: 2, scope: !8139)
!8174 = !DILocation(line: 501, column: 1, scope: !8119)
!8175 = distinct !DISubprogram(name: "do_rel_cu_key", scope: !3, file: !3, line: 1242, type: !8176, scopeLine: 1243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!8176 = !DISubroutineType(types: !8177)
!8177 = !{null, !1834, !1952, !313, !211, !2858}
!8178 = !DILocalVariable(name: "cu", arg: 1, scope: !8175, file: !3, line: 1242, type: !1834)
!8179 = !DILocation(line: 1242, column: 34, scope: !8175)
!8180 = !DILocalVariable(name: "key", arg: 2, scope: !8175, file: !3, line: 1242, type: !1952)
!8181 = !DILocation(line: 1242, column: 43, scope: !8175)
!8182 = !DILocalVariable(name: "actkb", arg: 3, scope: !8175, file: !3, line: 1242, type: !313)
!8183 = !DILocation(line: 1242, column: 58, scope: !8175)
!8184 = !DILocalVariable(name: "out", arg: 4, scope: !8175, file: !3, line: 1242, type: !211)
!8185 = !DILocation(line: 1242, column: 71, scope: !8175)
!8186 = !DILocalVariable(name: "tot", arg: 5, scope: !8175, file: !3, line: 1242, type: !2858)
!8187 = !DILocation(line: 1242, column: 86, scope: !8175)
!8188 = !DILocalVariable(name: "nu", scope: !8175, file: !3, line: 1244, type: !4157)
!8189 = !DILocation(line: 1244, column: 8, scope: !8175)
!8190 = !DILocalVariable(name: "a", scope: !8175, file: !3, line: 1245, type: !176)
!8191 = !DILocation(line: 1245, column: 6, scope: !8175)
!8192 = !DILocalVariable(name: "step", scope: !8175, file: !3, line: 1245, type: !176)
!8193 = !DILocation(line: 1245, column: 9, scope: !8175)
!8194 = !DILocation(line: 1247, column: 9, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 1247, column: 2)
!8196 = !DILocation(line: 1247, column: 19, scope: !8195)
!8197 = !DILocation(line: 1247, column: 23, scope: !8195)
!8198 = !DILocation(line: 1247, column: 28, scope: !8195)
!8199 = !DILocation(line: 1247, column: 17, scope: !8195)
!8200 = !DILocation(line: 1247, column: 7, scope: !8195)
!8201 = !DILocation(line: 1247, column: 35, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 1247, column: 2)
!8203 = !DILocation(line: 1247, column: 2, scope: !8195)
!8204 = !DILocation(line: 1248, column: 7, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8206, file: !3, line: 1248, column: 7)
!8206 = distinct !DILexicalBlock(scope: !8202, file: !3, line: 1247, column: 65)
!8207 = !DILocation(line: 1248, column: 11, scope: !8205)
!8208 = !DILocation(line: 1248, column: 7, scope: !8206)
!8209 = !DILocation(line: 1249, column: 11, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 1248, column: 15)
!8211 = !DILocation(line: 1249, column: 15, scope: !8210)
!8212 = !DILocation(line: 1249, column: 23, scope: !8210)
!8213 = !DILocation(line: 1249, column: 27, scope: !8210)
!8214 = !DILocation(line: 1249, column: 21, scope: !8210)
!8215 = !DILocation(line: 1249, column: 9, scope: !8210)
!8216 = !DILocation(line: 1250, column: 30, scope: !8210)
!8217 = !DILocation(line: 1250, column: 33, scope: !8210)
!8218 = !DILocation(line: 1250, column: 37, scope: !8210)
!8219 = !DILocation(line: 1250, column: 35, scope: !8210)
!8220 = !DILocation(line: 1250, column: 43, scope: !8210)
!8221 = !DILocation(line: 1250, column: 48, scope: !8210)
!8222 = !DILocation(line: 1250, column: 53, scope: !8210)
!8223 = !DILocation(line: 1250, column: 58, scope: !8210)
!8224 = !DILocation(line: 1250, column: 4, scope: !8210)
!8225 = !DILocation(line: 1251, column: 3, scope: !8210)
!8226 = !DILocation(line: 1252, column: 12, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 1252, column: 12)
!8228 = !DILocation(line: 1252, column: 16, scope: !8227)
!8229 = !DILocation(line: 1252, column: 12, scope: !8205)
!8230 = !DILocation(line: 1253, column: 15, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8227, file: !3, line: 1252, column: 22)
!8232 = !DILocation(line: 1253, column: 19, scope: !8231)
!8233 = !DILocation(line: 1253, column: 13, scope: !8231)
!8234 = !DILocation(line: 1253, column: 9, scope: !8231)
!8235 = !DILocation(line: 1254, column: 30, scope: !8231)
!8236 = !DILocation(line: 1254, column: 33, scope: !8231)
!8237 = !DILocation(line: 1254, column: 37, scope: !8231)
!8238 = !DILocation(line: 1254, column: 35, scope: !8231)
!8239 = !DILocation(line: 1254, column: 43, scope: !8231)
!8240 = !DILocation(line: 1254, column: 48, scope: !8231)
!8241 = !DILocation(line: 1254, column: 53, scope: !8231)
!8242 = !DILocation(line: 1254, column: 58, scope: !8231)
!8243 = !DILocation(line: 1254, column: 4, scope: !8231)
!8244 = !DILocation(line: 1255, column: 3, scope: !8231)
!8245 = !DILocation(line: 1257, column: 9, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8227, file: !3, line: 1256, column: 8)
!8247 = !DILocation(line: 1259, column: 2, scope: !8206)
!8248 = !DILocation(line: 1247, column: 44, scope: !8202)
!8249 = !DILocation(line: 1247, column: 48, scope: !8202)
!8250 = !DILocation(line: 1247, column: 42, scope: !8202)
!8251 = !DILocation(line: 1247, column: 59, scope: !8202)
!8252 = !DILocation(line: 1247, column: 56, scope: !8202)
!8253 = !DILocation(line: 1247, column: 2, scope: !8202)
!8254 = distinct !{!8254, !8203, !8255}
!8255 = !DILocation(line: 1259, column: 2, scope: !8195)
!8256 = !DILocation(line: 1260, column: 1, scope: !8175)
!8257 = distinct !DISubprogram(name: "do_cu_key", scope: !3, file: !3, line: 1222, type: !8258, scopeLine: 1223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1954)
!8258 = !DISubroutineType(types: !8259)
!8259 = !{null, !1834, !1952, !313, !7137, !213, !211, !2858}
!8260 = !DILocalVariable(name: "cu", arg: 1, scope: !8257, file: !3, line: 1222, type: !1834)
!8261 = !DILocation(line: 1222, column: 30, scope: !8257)
!8262 = !DILocalVariable(name: "key", arg: 2, scope: !8257, file: !3, line: 1222, type: !1952)
!8263 = !DILocation(line: 1222, column: 39, scope: !8257)
!8264 = !DILocalVariable(name: "actkb", arg: 3, scope: !8257, file: !3, line: 1222, type: !313)
!8265 = !DILocation(line: 1222, column: 54, scope: !8257)
!8266 = !DILocalVariable(name: "k", arg: 4, scope: !8257, file: !3, line: 1222, type: !7137)
!8267 = !DILocation(line: 1222, column: 72, scope: !8257)
!8268 = !DILocalVariable(name: "t", arg: 5, scope: !8257, file: !3, line: 1222, type: !213)
!8269 = !DILocation(line: 1222, column: 82, scope: !8257)
!8270 = !DILocalVariable(name: "out", arg: 6, scope: !8257, file: !3, line: 1222, type: !211)
!8271 = !DILocation(line: 1222, column: 91, scope: !8257)
!8272 = !DILocalVariable(name: "tot", arg: 7, scope: !8257, file: !3, line: 1222, type: !2858)
!8273 = !DILocation(line: 1222, column: 106, scope: !8257)
!8274 = !DILocalVariable(name: "nu", scope: !8257, file: !3, line: 1224, type: !4157)
!8275 = !DILocation(line: 1224, column: 8, scope: !8257)
!8276 = !DILocalVariable(name: "a", scope: !8257, file: !3, line: 1225, type: !176)
!8277 = !DILocation(line: 1225, column: 6, scope: !8257)
!8278 = !DILocalVariable(name: "step", scope: !8257, file: !3, line: 1225, type: !176)
!8279 = !DILocation(line: 1225, column: 9, scope: !8257)
!8280 = !DILocation(line: 1227, column: 9, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 1227, column: 2)
!8282 = !DILocation(line: 1227, column: 19, scope: !8281)
!8283 = !DILocation(line: 1227, column: 23, scope: !8281)
!8284 = !DILocation(line: 1227, column: 28, scope: !8281)
!8285 = !DILocation(line: 1227, column: 17, scope: !8281)
!8286 = !DILocation(line: 1227, column: 7, scope: !8281)
!8287 = !DILocation(line: 1227, column: 35, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 1227, column: 2)
!8289 = !DILocation(line: 1227, column: 2, scope: !8281)
!8290 = !DILocation(line: 1228, column: 7, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 1228, column: 7)
!8292 = distinct !DILexicalBlock(scope: !8288, file: !3, line: 1227, column: 65)
!8293 = !DILocation(line: 1228, column: 11, scope: !8291)
!8294 = !DILocation(line: 1228, column: 7, scope: !8292)
!8295 = !DILocation(line: 1229, column: 11, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 1228, column: 15)
!8297 = !DILocation(line: 1229, column: 15, scope: !8296)
!8298 = !DILocation(line: 1229, column: 23, scope: !8296)
!8299 = !DILocation(line: 1229, column: 27, scope: !8296)
!8300 = !DILocation(line: 1229, column: 21, scope: !8296)
!8301 = !DILocation(line: 1229, column: 9, scope: !8296)
!8302 = !DILocation(line: 1230, column: 11, scope: !8296)
!8303 = !DILocation(line: 1230, column: 14, scope: !8296)
!8304 = !DILocation(line: 1230, column: 18, scope: !8296)
!8305 = !DILocation(line: 1230, column: 16, scope: !8296)
!8306 = !DILocation(line: 1230, column: 24, scope: !8296)
!8307 = !DILocation(line: 1230, column: 29, scope: !8296)
!8308 = !DILocation(line: 1230, column: 34, scope: !8296)
!8309 = !DILocation(line: 1230, column: 39, scope: !8296)
!8310 = !DILocation(line: 1230, column: 46, scope: !8296)
!8311 = !DILocation(line: 1230, column: 49, scope: !8296)
!8312 = !DILocation(line: 1230, column: 4, scope: !8296)
!8313 = !DILocation(line: 1231, column: 3, scope: !8296)
!8314 = !DILocation(line: 1232, column: 12, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 1232, column: 12)
!8316 = !DILocation(line: 1232, column: 16, scope: !8315)
!8317 = !DILocation(line: 1232, column: 12, scope: !8291)
!8318 = !DILocation(line: 1233, column: 15, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8315, file: !3, line: 1232, column: 22)
!8320 = !DILocation(line: 1233, column: 19, scope: !8319)
!8321 = !DILocation(line: 1233, column: 13, scope: !8319)
!8322 = !DILocation(line: 1233, column: 9, scope: !8319)
!8323 = !DILocation(line: 1234, column: 11, scope: !8319)
!8324 = !DILocation(line: 1234, column: 14, scope: !8319)
!8325 = !DILocation(line: 1234, column: 18, scope: !8319)
!8326 = !DILocation(line: 1234, column: 16, scope: !8319)
!8327 = !DILocation(line: 1234, column: 24, scope: !8319)
!8328 = !DILocation(line: 1234, column: 29, scope: !8319)
!8329 = !DILocation(line: 1234, column: 34, scope: !8319)
!8330 = !DILocation(line: 1234, column: 39, scope: !8319)
!8331 = !DILocation(line: 1234, column: 46, scope: !8319)
!8332 = !DILocation(line: 1234, column: 49, scope: !8319)
!8333 = !DILocation(line: 1234, column: 4, scope: !8319)
!8334 = !DILocation(line: 1235, column: 3, scope: !8319)
!8335 = !DILocation(line: 1237, column: 9, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8315, file: !3, line: 1236, column: 8)
!8337 = !DILocation(line: 1239, column: 2, scope: !8292)
!8338 = !DILocation(line: 1227, column: 44, scope: !8288)
!8339 = !DILocation(line: 1227, column: 48, scope: !8288)
!8340 = !DILocation(line: 1227, column: 42, scope: !8288)
!8341 = !DILocation(line: 1227, column: 59, scope: !8288)
!8342 = !DILocation(line: 1227, column: 56, scope: !8288)
!8343 = !DILocation(line: 1227, column: 2, scope: !8288)
!8344 = distinct !{!8344, !8289, !8345}
!8345 = !DILocation(line: 1239, column: 2, scope: !8281)
!8346 = !DILocation(line: 1240, column: 1, scope: !8257)
