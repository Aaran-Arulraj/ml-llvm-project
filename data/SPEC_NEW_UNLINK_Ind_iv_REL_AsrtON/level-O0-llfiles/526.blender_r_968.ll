; ModuleID = 'blender/source/blender/editors/armature/editarmature_sketch.c'
source_filename = "blender/source/blender/editors/armature/editarmature_sketch.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.GHash = type opaque
%struct.RigGraph = type { %struct.ListBase, %struct.ListBase, float, void (%struct.BArc*)*, void (%struct.BNode*)*, void (%struct.BNode*, %struct.RadialArc*, i32)*, void (%struct.BNode*, %struct.BNode*, %struct.BNode*, %struct.BArc*, %struct.BArc*)*, i32, %struct.ListBase, %struct.ListBase*, %struct.RigNode*, %struct.ReebGraph*, %struct.TaskScheduler*, %struct.TaskPool*, %struct.GHash*, %struct.GHash*, %struct.Object* }
%struct.BArc = type { i8*, i8*, %struct.BNode*, %struct.BNode*, i32, float, i32, i32, i32 }
%struct.BNode = type { i8*, i8*, [3 x float], i32, i32, %struct.BArc**, i32, i32, i32, [3 x float] }
%struct.RadialArc = type { %struct.BArc*, [3 x float] }
%struct.ListBase = type { i8*, i8* }
%struct.RigNode = type { i8*, i8*, [3 x float], i32, i32, %struct.BArc**, i32, i32, i32, [3 x float], %struct.ReebNode* }
%struct.ReebNode = type { i8*, i8*, [3 x float], i32, i32, %struct.ReebArc**, i32, i32, i32, [3 x float], [3 x float], i32, float, i32, %struct.ReebNode*, %struct.ReebNode* }
%struct.ReebArc = type { i8*, i8*, %struct.ReebNode*, %struct.ReebNode*, i32, float, i32, i32, i32, %struct.ListBase, i32, %struct.EmbedBucket*, %struct.GHash*, float, %struct.ReebArc* }
%struct.EmbedBucket = type { float, i32, [3 x float], [3 x float] }
%struct.ReebGraph = type { %struct.ListBase, %struct.ListBase, float, void (%struct.BArc*)*, void (%struct.BNode*)*, void (%struct.BNode*, %struct.RadialArc*, i32)*, void (%struct.BNode*, %struct.BNode*, %struct.BNode*, %struct.BArc*, %struct.BArc*)*, i32, i32, %struct.EdgeHash*, i32, %struct.ReebGraph* }
%struct.EdgeHash = type opaque
%struct.TaskScheduler = type opaque
%struct.TaskPool = type opaque
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type opaque
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.StructRNA = type opaque
%struct.rctf = type { float, float, float, float }
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.SK_GestureAction = type { [64 x i8], i32 (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)*, void (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)* }
%struct.bContext = type opaque
%struct.SK_Gesture = type { %struct.SK_Stroke*, %struct.SK_Stroke*, %struct.ListBase, %struct.ListBase, i32, i32, i32 }
%struct.SK_Stroke = type { %struct.SK_Stroke*, %struct.SK_Stroke*, %struct.SK_Point*, i32, i32, i32 }
%struct.SK_Point = type { [3 x float], [2 x i16], [3 x float], float, i32, i32 }
%struct.SK_Sketch = type { %struct.ListBase, %struct.ListBase, %struct.SK_Stroke*, %struct.SK_Stroke*, %struct.SK_Point, %struct.SK_Overdraw }
%struct.SK_Overdraw = type { %struct.SK_Stroke*, i32, i32, i32 }
%struct.GHashIterator = type { %struct.GHash*, %struct.Entry*, i32 }
%struct.Entry = type opaque
%struct._gh_Entry = type { i8*, i8*, i8* }
%struct.bArmature = type { %struct.ID, %struct.AnimData*, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.Bone*, %struct.EditBone*, i8*, i32, i32, i32, i32, i16, i16, i32, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32 }
%struct.Bone = type { %struct.Bone*, %struct.Bone*, %struct.IDProperty*, %struct.Bone*, %struct.ListBase, [64 x i8], float, [3 x float], [3 x float], [3 x [3 x float]], i32, [3 x float], [3 x float], [4 x [4 x float]], float, float, float, float, float, float, float, float, float, float, [3 x float], i32, i16, [1 x i16] }
%struct.EditBone = type { %struct.EditBone*, %struct.EditBone*, %struct.IDProperty*, %struct.EditBone*, i8*, [64 x i8], float, [3 x float], [3 x float], i32, i32, float, float, float, float, float, float, float, float, float, float, i16 }
%struct.BGraph = type { %struct.ListBase, %struct.ListBase, float, void (%struct.BArc*)*, void (%struct.BNode*)*, void (%struct.BNode*, %struct.RadialArc*, i32)*, void (%struct.BNode*, %struct.BNode*, %struct.BNode*, %struct.BArc*, %struct.BArc*)* }
%struct.BArcIterator = type { i8* (i8*)*, i8* (i8*)*, i8* (i8*, i32)*, i8* (i8*)*, i8* (i8*, i32)*, i8* (i8*)*, i32 (i8*)*, float*, float*, float, i32, i32 }
%struct.SK_StrokeIterator = type { i8* (i8*)*, i8* (i8*)*, i8* (i8*, i32)*, i8* (i8*)*, i8* (i8*, i32)*, i8* (i8*)*, i32 (i8*)*, float*, float*, float, i32, i32, %struct.SK_Stroke*, i32, i32, i32 }
%struct.SK_Intersection = type { %struct.SK_Intersection*, %struct.SK_Intersection*, %struct.SK_Stroke*, i32, i32, i32, [3 x float], float }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.ViewContext = type { %struct.Scene*, %struct.Object*, %struct.Object*, %struct.ARegion*, %struct.View3D*, %struct.RegionView3D*, %struct.BMEditMesh*, [2 x i32] }
%struct.View3D = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], [4 x float], float, float, i8, [3 x i8], i32, i32, i16, i16, %struct.Object*, %struct.Object*, %struct.rctf, %struct.ListBase, %struct.BGpic*, %struct.View3D*, [64 x i8], i32, i32, i16, i16, i16, i16, i16, i16, float, float, float, float, [3 x float], [3 x float], i16, i16, i16, i8, i8, i8, i8, [2 x i8], %struct.ListBase, %struct.ListBase, %struct.ListBase, i8, i8, i8, [5 x i8], i8*, %struct.Material*, %struct.bGPdata* }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.BGpic = type { %struct.BGpic*, %struct.BGpic*, %struct.Image*, %struct.ImageUser, %struct.MovieClip*, %struct.MovieClipUser, float, float, float, float, i16, i16, i16, i16 }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.RegionView3D = type { [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [6 x [4 x float]], [6 x [4 x float]], %struct.BoundBox*, %struct.RegionView3D*, %struct.RenderEngine*, %struct.ViewDepths*, i8*, %struct.SmoothView3DStore*, %struct.wmTimer*, [4 x [4 x float]], [4 x float], float, float, float, float, [3 x float], float, i8, i8, i8, i8, i8, [3 x i8], [2 x float], i16, i16, [4 x float], i16, i16, float, [3 x float], float, [3 x float] }
%struct.RenderEngine = type opaque
%struct.ViewDepths = type { i16, i16, i16, i16, float*, [2 x double], i8 }
%struct.SmoothView3DStore = type opaque
%struct.BMEditMesh = type opaque
%struct.GLUquadric = type opaque
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type opaque
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.uiLayout = type opaque
%struct.PropertyRNA = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.SK_DrawData = type { [2 x i32], [2 x i32], i32 }
%struct.wmEventHandler = type opaque
%struct.DepthPeel = type { %struct.DepthPeel*, %struct.DepthPeel*, float, [3 x float], [3 x float], %struct.Object*, i32 }

@TEMPLATES_HASH = internal global %struct.GHash* null, align 8, !dbg !0
@.str = private unnamed_addr constant [21 x i8] c"makeListTemplates gh\00", align 1
@TEMPLATES_CURRENT = internal global i32 0, align 4, !dbg !259
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@TEMPLATES_MENU = internal global i8* null, align 8, !dbg !261
@MEM_freeN = external dso_local global void (i8*)*, align 8
@TEMPLATE_RIGG = internal global %struct.RigGraph* null, align 8, !dbg !265
@.str.2 = private unnamed_addr constant [7 x i8] c"Delete\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"SKETCH_OT_delete\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"Delete a sketch stroke\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"Select\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"SKETCH_OT_select\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"Select a sketch stroke\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"Cancel Stroke\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"SKETCH_OT_cancel_stroke\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"Cancel the current sketch stroke\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"Convert\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"SKETCH_OT_convert\00", align 1
@.str.13 = private unnamed_addr constant [51 x i8] c"Convert the selected sketch strokes to bone chains\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"End Stroke\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"SKETCH_OT_finish_stroke\00", align 1
@.str.16 = private unnamed_addr constant [39 x i8] c"End and keep the current sketch stroke\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"Draw Preview\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"SKETCH_OT_draw_preview\00", align 1
@.str.19 = private unnamed_addr constant [53 x i8] c"Draw preview of current sketch stroke (internal use)\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"snap\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"Snap\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"Draw Stroke\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"SKETCH_OT_draw_stroke\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"Start to draw a sketch stroke\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"Gesture\00", align 1
@.str.26 = private unnamed_addr constant [18 x i8] c"SKETCH_OT_gesture\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"Start to draw a gesture stroke\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.28 = private unnamed_addr constant [9 x i8] c"reeb arc\00", align 1
@.str.29 = private unnamed_addr constant [8 x i8] c"Buckets\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"reeb node\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"%i\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c"R\00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.34 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.35 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str.36 = private unnamed_addr constant [5 x i8] c"Bone\00", align 1
@__const.sk_drawSketch.selected_rgb = private unnamed_addr constant [3 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], align 4
@__const.sk_drawSketch.unselected_rgb = private unnamed_addr constant [3 x float] [float 1.000000e+00, float 5.000000e-01, float 0.000000e+00], align 4
@__const.sk_drawSketch.gesture_rgb = private unnamed_addr constant [3 x float] [float 0.000000e+00, float 5.000000e-01, float 1.000000e+00], align 4
@__const.sk_drawStroke.d_rgb = private unnamed_addr constant [3 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00], align 4
@__const.sk_drawNormal.vec2 = private unnamed_addr constant [3 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@__const.sk_drawEdge.vec2 = private unnamed_addr constant [3 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@LAST_SNAP_POINT_VALID = internal global i32 0, align 4, !dbg !1893
@LAST_SNAP_POINT = internal global [3 x float] zeroinitializer, align 4, !dbg !1895
@.str.37 = private unnamed_addr constant [15 x i8] c"SketchDrawData\00", align 1
@GESTURE_ACTIONS = internal global [8 x %struct.SK_GestureAction] [%struct.SK_GestureAction { [64 x i8] c"Cut\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)* @sk_detectCutGesture, void (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)* @sk_applyCutGesture }, %struct.SK_GestureAction { [64 x i8] c"Trim\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)* @sk_detectTrimGesture, void (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)* @sk_applyTrimGesture }, %struct.SK_GestureAction { [64 x i8] c"Command\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)* @sk_detectCommandGesture, void (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)* @sk_applyCommandGesture }, %struct.SK_GestureAction { [64 x i8] c"Delete\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)* @sk_detectDeleteGesture, void (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)* @sk_applyDeleteGesture }, %struct.SK_GestureAction { [64 x i8] c"Merge\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)* @sk_detectMergeGesture, void (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)* @sk_applyMergeGesture }, %struct.SK_GestureAction { [64 x i8] c"Reverse\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)* @sk_detectReverseGesture, void (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)* @sk_applyReverseGesture }, %struct.SK_GestureAction { [64 x i8] c"Convert\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)* @sk_detectConvertGesture, void (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)* @sk_applyConvertGesture }, %struct.SK_GestureAction zeroinitializer], align 16, !dbg !1897
@.str.38 = private unnamed_addr constant [13 x i8] c"Intersection\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BIF_makeListTemplates(%struct.bContext* %C) #0 !dbg !1946 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %obedit = alloca %struct.Object*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %base = alloca %struct.Base*, align 8
  %index = alloca i32, align 4
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !1952, metadata !DIExpression()), !dbg !1953
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !1954, metadata !DIExpression()), !dbg !1957
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !1958
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !1959
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !1957
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !1960, metadata !DIExpression()), !dbg !1963
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !1964
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !1965
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !1963
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !1966, metadata !DIExpression()), !dbg !1969
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !1970
  %call2 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %2), !dbg !1971
  store %struct.ToolSettings* %call2, %struct.ToolSettings** %ts, align 8, !dbg !1969
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !1972, metadata !DIExpression()), !dbg !1975
  call void @llvm.dbg.declare(metadata i32* %index, metadata !1976, metadata !DIExpression()), !dbg !1977
  store i32 0, i32* %index, align 4, !dbg !1977
  %3 = load %struct.GHash*, %struct.GHash** @TEMPLATES_HASH, align 8, !dbg !1978
  %cmp = icmp ne %struct.GHash* %3, null, !dbg !1980
  br i1 %cmp, label %if.then, label %if.end, !dbg !1981

if.then:                                          ; preds = %entry
  %4 = load %struct.GHash*, %struct.GHash** @TEMPLATES_HASH, align 8, !dbg !1982
  call void @BLI_ghash_free(%struct.GHash* %4, void (i8*)* null, void (i8*)* null), !dbg !1984
  br label %if.end, !dbg !1985

if.end:                                           ; preds = %if.then, %entry
  %call3 = call %struct.GHash* @BLI_ghash_int_new(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)), !dbg !1986
  store %struct.GHash* %call3, %struct.GHash** @TEMPLATES_HASH, align 8, !dbg !1987
  store i32 0, i32* @TEMPLATES_CURRENT, align 4, !dbg !1988
  %5 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !1989
  %base4 = getelementptr inbounds %struct.Scene, %struct.Scene* %5, i32 0, i32 5, !dbg !1989
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base4, i32 0, i32 0, !dbg !1989
  %6 = load i8*, i8** %first, align 8, !dbg !1989
  %7 = bitcast i8* %6 to %struct.Base*, !dbg !1989
  store %struct.Base* %7, %struct.Base** %base, align 8, !dbg !1991
  br label %for.cond, !dbg !1992

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !1993
  %tobool = icmp ne %struct.Base* %8, null, !dbg !1995
  br i1 %tobool, label %for.body, label %for.end, !dbg !1995

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !1996, metadata !DIExpression()), !dbg !1998
  %9 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !1999
  %object = getelementptr inbounds %struct.Base, %struct.Base* %9, i32 0, i32 7, !dbg !2000
  %10 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !2000
  store %struct.Object* %10, %struct.Object** %ob, align 8, !dbg !1998
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2001
  %12 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !2003
  %cmp5 = icmp ne %struct.Object* %11, %12, !dbg !2004
  br i1 %cmp5, label %land.lhs.true, label %if.end14, !dbg !2005

land.lhs.true:                                    ; preds = %for.body
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2006
  %type = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 3, !dbg !2007
  %14 = load i16, i16* %type, align 8, !dbg !2007
  %conv = sext i16 %14 to i32, !dbg !2006
  %cmp6 = icmp eq i32 %conv, 25, !dbg !2008
  br i1 %cmp6, label %if.then8, label %if.end14, !dbg !2009

if.then8:                                         ; preds = %land.lhs.true
  %15 = load i32, i32* %index, align 4, !dbg !2010
  %inc = add nsw i32 %15, 1, !dbg !2010
  store i32 %inc, i32* %index, align 4, !dbg !2010
  %16 = load %struct.GHash*, %struct.GHash** @TEMPLATES_HASH, align 8, !dbg !2012
  %17 = load i32, i32* %index, align 4, !dbg !2013
  %conv9 = sext i32 %17 to i64, !dbg !2013
  %18 = inttoptr i64 %conv9 to i8*, !dbg !2013
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2014
  %20 = bitcast %struct.Object* %19 to i8*, !dbg !2014
  call void @BLI_ghash_insert(%struct.GHash* %16, i8* %18, i8* %20), !dbg !2015
  %21 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2016
  %22 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !2018
  %skgen_template = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %22, i32 0, i32 41, !dbg !2019
  %23 = load %struct.Object*, %struct.Object** %skgen_template, align 8, !dbg !2019
  %cmp10 = icmp eq %struct.Object* %21, %23, !dbg !2020
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !2021

if.then12:                                        ; preds = %if.then8
  %24 = load i32, i32* %index, align 4, !dbg !2022
  store i32 %24, i32* @TEMPLATES_CURRENT, align 4, !dbg !2024
  br label %if.end13, !dbg !2025

if.end13:                                         ; preds = %if.then12, %if.then8
  br label %if.end14, !dbg !2026

if.end14:                                         ; preds = %if.end13, %land.lhs.true, %for.body
  br label %for.inc, !dbg !2027

for.inc:                                          ; preds = %if.end14
  %25 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !2028
  %next = getelementptr inbounds %struct.Base, %struct.Base* %25, i32 0, i32 0, !dbg !2029
  %26 = load %struct.Base*, %struct.Base** %next, align 8, !dbg !2029
  store %struct.Base* %26, %struct.Base** %base, align 8, !dbg !2030
  br label %for.cond, !dbg !2031, !llvm.loop !2032

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2034
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local %struct.Object* @CTX_data_edit_object(%struct.bContext*) #2

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

declare dso_local %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext*) #2

declare dso_local void @BLI_ghash_free(%struct.GHash*, void (i8*)*, void (i8*)*) #2

declare dso_local %struct.GHash* @BLI_ghash_int_new(i8*) #2

declare dso_local void @BLI_ghash_insert(%struct.GHash*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BIF_currentTemplate(%struct.bContext* %C) #0 !dbg !2035 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %ghi = alloca %struct.GHashIterator, align 8
  %ob = alloca %struct.Object*, align 8
  %key = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2038, metadata !DIExpression()), !dbg !2039
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !2040, metadata !DIExpression()), !dbg !2041
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2042
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !2043
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !2041
  %1 = load i32, i32* @TEMPLATES_CURRENT, align 4, !dbg !2044
  %cmp = icmp eq i32 %1, 0, !dbg !2046
  br i1 %cmp, label %land.lhs.true, label %if.end9, !dbg !2047

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !2048
  %skgen_template = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 41, !dbg !2049
  %3 = load %struct.Object*, %struct.Object** %skgen_template, align 8, !dbg !2049
  %cmp1 = icmp ne %struct.Object* %3, null, !dbg !2050
  br i1 %cmp1, label %if.then, label %if.end9, !dbg !2051

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.GHashIterator* %ghi, metadata !2052, metadata !DIExpression()), !dbg !2062
  %4 = load %struct.GHash*, %struct.GHash** @TEMPLATES_HASH, align 8, !dbg !2063
  call void @BLI_ghashIterator_init(%struct.GHashIterator* %ghi, %struct.GHash* %4), !dbg !2064
  br label %while.cond, !dbg !2065

while.cond:                                       ; preds = %if.end, %if.then
  %call2 = call zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %ghi), !dbg !2066
  %tobool = icmp ne i8 %call2, 0, !dbg !2067
  %lnot = xor i1 %tobool, true, !dbg !2067
  br i1 %lnot, label %while.body, label %while.end, !dbg !2065

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !2068, metadata !DIExpression()), !dbg !2070
  %call3 = call i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %ghi), !dbg !2071
  %5 = bitcast i8* %call3 to %struct.Object*, !dbg !2071
  store %struct.Object* %5, %struct.Object** %ob, align 8, !dbg !2070
  call void @llvm.dbg.declare(metadata i32* %key, metadata !2072, metadata !DIExpression()), !dbg !2073
  %call4 = call i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %ghi), !dbg !2074
  %6 = ptrtoint i8* %call4 to i64, !dbg !2074
  %conv = trunc i64 %6 to i32, !dbg !2074
  store i32 %conv, i32* %key, align 4, !dbg !2073
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2075
  %8 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !2077
  %skgen_template5 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %8, i32 0, i32 41, !dbg !2078
  %9 = load %struct.Object*, %struct.Object** %skgen_template5, align 8, !dbg !2078
  %cmp6 = icmp eq %struct.Object* %7, %9, !dbg !2079
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !2080

if.then8:                                         ; preds = %while.body
  %10 = load i32, i32* %key, align 4, !dbg !2081
  store i32 %10, i32* @TEMPLATES_CURRENT, align 4, !dbg !2083
  br label %while.end, !dbg !2084

if.end:                                           ; preds = %while.body
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %ghi), !dbg !2085
  br label %while.cond, !dbg !2065, !llvm.loop !2086

while.end:                                        ; preds = %if.then8, %while.cond
  br label %if.end9, !dbg !2088

if.end9:                                          ; preds = %while.end, %land.lhs.true, %entry
  %11 = load i32, i32* @TEMPLATES_CURRENT, align 4, !dbg !2089
  ret i32 %11, !dbg !2090
}

declare dso_local void @BLI_ghashIterator_init(%struct.GHashIterator*, %struct.GHash*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %ghi) #0 !dbg !2091 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !2095, metadata !DIExpression()), !dbg !2096
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !2097
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !2098
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !2098
  %tobool = icmp ne %struct.Entry* %1, null, !dbg !2099
  %lnot = xor i1 %tobool, true, !dbg !2099
  %lnot.ext = zext i1 %lnot to i32, !dbg !2099
  %conv = trunc i32 %lnot.ext to i8, !dbg !2099
  ret i8 %conv, !dbg !2100
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %ghi) #0 !dbg !2101 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !2104, metadata !DIExpression()), !dbg !2105
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !2106
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !2107
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !2107
  %2 = bitcast %struct.Entry* %1 to %struct._gh_Entry*, !dbg !2108
  %val = getelementptr inbounds %struct._gh_Entry, %struct._gh_Entry* %2, i32 0, i32 2, !dbg !2108
  %3 = load i8*, i8** %val, align 8, !dbg !2108
  ret i8* %3, !dbg !2109
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %ghi) #0 !dbg !2110 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !2111, metadata !DIExpression()), !dbg !2112
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !2113
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !2114
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !2114
  %2 = bitcast %struct.Entry* %1 to %struct._gh_Entry*, !dbg !2115
  %key = getelementptr inbounds %struct._gh_Entry, %struct._gh_Entry* %2, i32 0, i32 1, !dbg !2115
  %3 = load i8*, i8** %key, align 8, !dbg !2115
  ret i8* %3, !dbg !2116
}

declare dso_local void @BLI_ghashIterator_step(%struct.GHashIterator*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BIF_nbJointsTemplate(%struct.bContext* %C) #0 !dbg !2117 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %rg = alloca %struct.RigGraph*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2118, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !2120, metadata !DIExpression()), !dbg !2121
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2122
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !2123
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !2121
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg, metadata !2124, metadata !DIExpression()), !dbg !2125
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2126
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !2127
  %skgen_template = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 41, !dbg !2128
  %3 = load %struct.Object*, %struct.Object** %skgen_template, align 8, !dbg !2128
  %call1 = call %struct.RigGraph* @sk_makeTemplateGraph(%struct.bContext* %1, %struct.Object* %3), !dbg !2129
  store %struct.RigGraph* %call1, %struct.RigGraph** %rg, align 8, !dbg !2125
  %4 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2130
  %tobool = icmp ne %struct.RigGraph* %4, null, !dbg !2130
  br i1 %tobool, label %if.then, label %if.else, !dbg !2132

if.then:                                          ; preds = %entry
  %5 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2133
  %call2 = call i32 @RIG_nbJoints(%struct.RigGraph* %5), !dbg !2135
  store i32 %call2, i32* %retval, align 4, !dbg !2136
  br label %return, !dbg !2136

if.else:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !2137
  br label %return, !dbg !2137

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !2139
  ret i32 %6, !dbg !2139
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.RigGraph* @sk_makeTemplateGraph(%struct.bContext* %C, %struct.Object* %ob) #0 !dbg !2140 {
entry:
  %retval = alloca %struct.RigGraph*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %obedit = alloca %struct.Object*, align 8
  %arm = alloca %struct.bArmature*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2143, metadata !DIExpression()), !dbg !2144
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2145, metadata !DIExpression()), !dbg !2146
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !2147, metadata !DIExpression()), !dbg !2148
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2149
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !2150
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !2148
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2151
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !2153
  %cmp = icmp eq %struct.Object* %1, %2, !dbg !2154
  br i1 %cmp, label %if.then, label %if.end, !dbg !2155

if.then:                                          ; preds = %entry
  store %struct.RigGraph* null, %struct.RigGraph** %retval, align 8, !dbg !2156
  br label %return, !dbg !2156

if.end:                                           ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2158
  %cmp1 = icmp ne %struct.Object* %3, null, !dbg !2160
  br i1 %cmp1, label %if.then2, label %if.end11, !dbg !2161

if.then2:                                         ; preds = %if.end
  %4 = load %struct.RigGraph*, %struct.RigGraph** @TEMPLATE_RIGG, align 8, !dbg !2162
  %tobool = icmp ne %struct.RigGraph* %4, null, !dbg !2162
  br i1 %tobool, label %land.lhs.true, label %if.end6, !dbg !2165

land.lhs.true:                                    ; preds = %if.then2
  %5 = load %struct.RigGraph*, %struct.RigGraph** @TEMPLATE_RIGG, align 8, !dbg !2166
  %ob3 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %5, i32 0, i32 16, !dbg !2167
  %6 = load %struct.Object*, %struct.Object** %ob3, align 8, !dbg !2167
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2168
  %cmp4 = icmp ne %struct.Object* %6, %7, !dbg !2169
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !2170

if.then5:                                         ; preds = %land.lhs.true
  %8 = load %struct.RigGraph*, %struct.RigGraph** @TEMPLATE_RIGG, align 8, !dbg !2171
  %9 = bitcast %struct.RigGraph* %8 to %struct.BGraph*, !dbg !2173
  call void @RIG_freeRigGraph(%struct.BGraph* %9), !dbg !2174
  store %struct.RigGraph* null, %struct.RigGraph** @TEMPLATE_RIGG, align 8, !dbg !2175
  br label %if.end6, !dbg !2176

if.end6:                                          ; preds = %if.then5, %land.lhs.true, %if.then2
  %10 = load %struct.RigGraph*, %struct.RigGraph** @TEMPLATE_RIGG, align 8, !dbg !2177
  %cmp7 = icmp eq %struct.RigGraph* %10, null, !dbg !2179
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !2180

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !2181, metadata !DIExpression()), !dbg !2276
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2277
  %data = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 19, !dbg !2278
  %12 = load i8*, i8** %data, align 8, !dbg !2278
  %13 = bitcast i8* %12 to %struct.bArmature*, !dbg !2277
  store %struct.bArmature* %13, %struct.bArmature** %arm, align 8, !dbg !2279
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2280
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2281
  %16 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2282
  %call9 = call %struct.RigGraph* @RIG_graphFromArmature(%struct.bContext* %14, %struct.Object* %15, %struct.bArmature* %16), !dbg !2283
  store %struct.RigGraph* %call9, %struct.RigGraph** @TEMPLATE_RIGG, align 8, !dbg !2284
  br label %if.end10, !dbg !2285

if.end10:                                         ; preds = %if.then8, %if.end6
  br label %if.end11, !dbg !2286

if.end11:                                         ; preds = %if.end10, %if.end
  %17 = load %struct.RigGraph*, %struct.RigGraph** @TEMPLATE_RIGG, align 8, !dbg !2287
  store %struct.RigGraph* %17, %struct.RigGraph** %retval, align 8, !dbg !2288
  br label %return, !dbg !2288

return:                                           ; preds = %if.end11, %if.then
  %18 = load %struct.RigGraph*, %struct.RigGraph** %retval, align 8, !dbg !2289
  ret %struct.RigGraph* %18, !dbg !2289
}

declare dso_local i32 @RIG_nbJoints(%struct.RigGraph*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BIF_nameBoneTemplate(%struct.bContext* %C) #0 !dbg !2290 {
entry:
  %retval = alloca i8*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %stk = alloca %struct.SK_Sketch*, align 8
  %rg = alloca %struct.RigGraph*, align 8
  %index = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2295, metadata !DIExpression()), !dbg !2296
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !2297, metadata !DIExpression()), !dbg !2298
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2299
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !2300
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !2298
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %stk, metadata !2301, metadata !DIExpression()), !dbg !2302
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2303
  %call1 = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %1, i32 1), !dbg !2304
  store %struct.SK_Sketch* %call1, %struct.SK_Sketch** %stk, align 8, !dbg !2302
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg, metadata !2305, metadata !DIExpression()), !dbg !2306
  call void @llvm.dbg.declare(metadata i32* %index, metadata !2307, metadata !DIExpression()), !dbg !2308
  store i32 0, i32* %index, align 4, !dbg !2308
  %2 = load %struct.SK_Sketch*, %struct.SK_Sketch** %stk, align 8, !dbg !2309
  %tobool = icmp ne %struct.SK_Sketch* %2, null, !dbg !2309
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !2311

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.SK_Sketch*, %struct.SK_Sketch** %stk, align 8, !dbg !2312
  %active_stroke = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %3, i32 0, i32 2, !dbg !2313
  %4 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke, align 8, !dbg !2313
  %cmp = icmp ne %struct.SK_Stroke* %4, null, !dbg !2314
  br i1 %cmp, label %if.then, label %if.end, !dbg !2315

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.SK_Sketch*, %struct.SK_Sketch** %stk, align 8, !dbg !2316
  %active_stroke2 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %5, i32 0, i32 2, !dbg !2318
  %6 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke2, align 8, !dbg !2318
  %nb_points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %6, i32 0, i32 3, !dbg !2319
  %7 = load i32, i32* %nb_points, align 8, !dbg !2319
  store i32 %7, i32* %index, align 4, !dbg !2320
  br label %if.end, !dbg !2321

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2322
  %9 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !2323
  %skgen_template = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %9, i32 0, i32 41, !dbg !2324
  %10 = load %struct.Object*, %struct.Object** %skgen_template, align 8, !dbg !2324
  %call3 = call %struct.RigGraph* @sk_makeTemplateGraph(%struct.bContext* %8, %struct.Object* %10), !dbg !2325
  store %struct.RigGraph* %call3, %struct.RigGraph** %rg, align 8, !dbg !2326
  %11 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2327
  %cmp4 = icmp eq %struct.RigGraph* %11, null, !dbg !2329
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !2330

if.then5:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %retval, align 8, !dbg !2331
  br label %return, !dbg !2331

if.end6:                                          ; preds = %if.end
  %12 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2333
  %13 = load i32, i32* %index, align 4, !dbg !2334
  %call7 = call i8* @RIG_nameBone(%struct.RigGraph* %12, i32 0, i32 %13), !dbg !2335
  store i8* %call7, i8** %retval, align 8, !dbg !2336
  br label %return, !dbg !2336

return:                                           ; preds = %if.end6, %if.then5
  %14 = load i8*, i8** %retval, align 8, !dbg !2337
  ret i8* %14, !dbg !2337
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.SK_Sketch* @contextSketch(%struct.bContext* %C, i32 %create) #0 !dbg !2338 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %create.addr = alloca i32, align 4
  %obedit = alloca %struct.Object*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  %arm = alloca %struct.bArmature*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2341, metadata !DIExpression()), !dbg !2342
  store i32 %create, i32* %create.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %create.addr, metadata !2343, metadata !DIExpression()), !dbg !2344
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !2345, metadata !DIExpression()), !dbg !2346
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2347
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !2348
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !2346
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !2349, metadata !DIExpression()), !dbg !2350
  store %struct.SK_Sketch* null, %struct.SK_Sketch** %sketch, align 8, !dbg !2350
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !2351
  %tobool = icmp ne %struct.Object* %1, null, !dbg !2351
  br i1 %tobool, label %land.lhs.true, label %if.end11, !dbg !2353

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !2354
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !2355
  %3 = load i16, i16* %type, align 8, !dbg !2355
  %conv = sext i16 %3 to i32, !dbg !2354
  %cmp = icmp eq i32 %conv, 25, !dbg !2356
  br i1 %cmp, label %if.then, label %if.end11, !dbg !2357

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !2358, metadata !DIExpression()), !dbg !2360
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !2361
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !2362
  %5 = load i8*, i8** %data, align 8, !dbg !2362
  %6 = bitcast i8* %5 to %struct.bArmature*, !dbg !2361
  store %struct.bArmature* %6, %struct.bArmature** %arm, align 8, !dbg !2360
  %7 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2363
  %sketch2 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %7, i32 0, i32 7, !dbg !2365
  %8 = load i8*, i8** %sketch2, align 8, !dbg !2365
  %cmp3 = icmp eq i8* %8, null, !dbg !2366
  br i1 %cmp3, label %land.lhs.true5, label %if.end, !dbg !2367

land.lhs.true5:                                   ; preds = %if.then
  %9 = load i32, i32* %create.addr, align 4, !dbg !2368
  %tobool6 = icmp ne i32 %9, 0, !dbg !2368
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !2369

if.then7:                                         ; preds = %land.lhs.true5
  %call8 = call %struct.SK_Sketch* @createSketch(), !dbg !2370
  %10 = bitcast %struct.SK_Sketch* %call8 to i8*, !dbg !2370
  %11 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2372
  %sketch9 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %11, i32 0, i32 7, !dbg !2373
  store i8* %10, i8** %sketch9, align 8, !dbg !2374
  br label %if.end, !dbg !2375

if.end:                                           ; preds = %if.then7, %land.lhs.true5, %if.then
  %12 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !2376
  %sketch10 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %12, i32 0, i32 7, !dbg !2377
  %13 = load i8*, i8** %sketch10, align 8, !dbg !2377
  %14 = bitcast i8* %13 to %struct.SK_Sketch*, !dbg !2376
  store %struct.SK_Sketch* %14, %struct.SK_Sketch** %sketch, align 8, !dbg !2378
  br label %if.end11, !dbg !2379

if.end11:                                         ; preds = %if.end, %land.lhs.true, %entry
  %15 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !2380
  ret %struct.SK_Sketch* %15, !dbg !2381
}

declare dso_local i8* @RIG_nameBone(%struct.RigGraph*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BIF_freeTemplates(%struct.bContext* %UNUSED_C) #0 !dbg !2382 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !2385, metadata !DIExpression()), !dbg !2386
  %0 = load i8*, i8** @TEMPLATES_MENU, align 8, !dbg !2387
  %cmp = icmp ne i8* %0, null, !dbg !2389
  br i1 %cmp, label %if.then, label %if.end, !dbg !2390

if.then:                                          ; preds = %entry
  %1 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2391
  %2 = load i8*, i8** @TEMPLATES_MENU, align 8, !dbg !2393
  call void %1(i8* %2), !dbg !2391
  store i8* null, i8** @TEMPLATES_MENU, align 8, !dbg !2394
  br label %if.end, !dbg !2395

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.GHash*, %struct.GHash** @TEMPLATES_HASH, align 8, !dbg !2396
  %cmp1 = icmp ne %struct.GHash* %3, null, !dbg !2398
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2399

if.then2:                                         ; preds = %if.end
  %4 = load %struct.GHash*, %struct.GHash** @TEMPLATES_HASH, align 8, !dbg !2400
  call void @BLI_ghash_free(%struct.GHash* %4, void (i8*)* null, void (i8*)* null), !dbg !2402
  store %struct.GHash* null, %struct.GHash** @TEMPLATES_HASH, align 8, !dbg !2403
  br label %if.end3, !dbg !2404

if.end3:                                          ; preds = %if.then2, %if.end
  %5 = load %struct.RigGraph*, %struct.RigGraph** @TEMPLATE_RIGG, align 8, !dbg !2405
  %cmp4 = icmp ne %struct.RigGraph* %5, null, !dbg !2407
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !2408

if.then5:                                         ; preds = %if.end3
  %6 = load %struct.RigGraph*, %struct.RigGraph** @TEMPLATE_RIGG, align 8, !dbg !2409
  %7 = bitcast %struct.RigGraph* %6 to %struct.BGraph*, !dbg !2411
  call void @RIG_freeRigGraph(%struct.BGraph* %7), !dbg !2412
  store %struct.RigGraph* null, %struct.RigGraph** @TEMPLATE_RIGG, align 8, !dbg !2413
  br label %if.end6, !dbg !2414

if.end6:                                          ; preds = %if.then5, %if.end3
  ret void, !dbg !2415
}

declare dso_local void @RIG_freeRigGraph(%struct.BGraph*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BIF_setTemplate(%struct.bContext* %C, i32 %index) #0 !dbg !2416 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %index.addr = alloca i32, align 4
  %ts = alloca %struct.ToolSettings*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2419, metadata !DIExpression()), !dbg !2420
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !2421, metadata !DIExpression()), !dbg !2422
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !2423, metadata !DIExpression()), !dbg !2424
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2425
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !2426
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !2424
  %1 = load i32, i32* %index.addr, align 4, !dbg !2427
  %cmp = icmp sgt i32 %1, 0, !dbg !2429
  br i1 %cmp, label %if.then, label %if.else, !dbg !2430

if.then:                                          ; preds = %entry
  %2 = load %struct.GHash*, %struct.GHash** @TEMPLATES_HASH, align 8, !dbg !2431
  %3 = load i32, i32* %index.addr, align 4, !dbg !2433
  %conv = sext i32 %3 to i64, !dbg !2433
  %4 = inttoptr i64 %conv to i8*, !dbg !2433
  %call1 = call i8* @BLI_ghash_lookup(%struct.GHash* %2, i8* %4), !dbg !2434
  %5 = bitcast i8* %call1 to %struct.Object*, !dbg !2434
  %6 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !2435
  %skgen_template = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %6, i32 0, i32 41, !dbg !2436
  store %struct.Object* %5, %struct.Object** %skgen_template, align 8, !dbg !2437
  br label %if.end6, !dbg !2438

if.else:                                          ; preds = %entry
  %7 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !2439
  %skgen_template2 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %7, i32 0, i32 41, !dbg !2441
  store %struct.Object* null, %struct.Object** %skgen_template2, align 8, !dbg !2442
  %8 = load %struct.RigGraph*, %struct.RigGraph** @TEMPLATE_RIGG, align 8, !dbg !2443
  %cmp3 = icmp ne %struct.RigGraph* %8, null, !dbg !2445
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !2446

if.then5:                                         ; preds = %if.else
  %9 = load %struct.RigGraph*, %struct.RigGraph** @TEMPLATE_RIGG, align 8, !dbg !2447
  %10 = bitcast %struct.RigGraph* %9 to %struct.BGraph*, !dbg !2449
  call void @RIG_freeRigGraph(%struct.BGraph* %10), !dbg !2450
  br label %if.end, !dbg !2451

if.end:                                           ; preds = %if.then5, %if.else
  store %struct.RigGraph* null, %struct.RigGraph** @TEMPLATE_RIGG, align 8, !dbg !2452
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  ret void, !dbg !2453
}

declare dso_local i8* @BLI_ghash_lookup(%struct.GHash*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @sk_resetOverdraw(%struct.SK_Sketch* %sketch) #0 !dbg !2454 {
entry:
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !2457, metadata !DIExpression()), !dbg !2458
  %0 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !2459
  %over = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %0, i32 0, i32 5, !dbg !2460
  %target = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over, i32 0, i32 0, !dbg !2461
  store %struct.SK_Stroke* null, %struct.SK_Stroke** %target, align 8, !dbg !2462
  %1 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !2463
  %over1 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %1, i32 0, i32 5, !dbg !2464
  %start = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over1, i32 0, i32 1, !dbg !2465
  store i32 -1, i32* %start, align 8, !dbg !2466
  %2 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !2467
  %over2 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %2, i32 0, i32 5, !dbg !2468
  %end = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over2, i32 0, i32 2, !dbg !2469
  store i32 -1, i32* %end, align 4, !dbg !2470
  %3 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !2471
  %over3 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %3, i32 0, i32 5, !dbg !2472
  %count = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over3, i32 0, i32 3, !dbg !2473
  store i32 0, i32* %count, align 8, !dbg !2474
  ret void, !dbg !2475
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sk_hasOverdraw(%struct.SK_Sketch* %sketch, %struct.SK_Stroke* %stk) #0 !dbg !2476 {
entry:
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !2479, metadata !DIExpression()), !dbg !2480
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !2481, metadata !DIExpression()), !dbg !2482
  %0 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !2483
  %over = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %0, i32 0, i32 5, !dbg !2484
  %target = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over, i32 0, i32 0, !dbg !2485
  %1 = load %struct.SK_Stroke*, %struct.SK_Stroke** %target, align 8, !dbg !2485
  %tobool = icmp ne %struct.SK_Stroke* %1, null, !dbg !2483
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !2486

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !2487
  %over1 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %2, i32 0, i32 5, !dbg !2488
  %count = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over1, i32 0, i32 3, !dbg !2489
  %3 = load i32, i32* %count, align 8, !dbg !2489
  %cmp = icmp sge i32 %3, 5, !dbg !2490
  br i1 %cmp, label %land.lhs.true2, label %land.end, !dbg !2491

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !2492
  %over3 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %4, i32 0, i32 5, !dbg !2493
  %target4 = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over3, i32 0, i32 0, !dbg !2494
  %5 = load %struct.SK_Stroke*, %struct.SK_Stroke** %target4, align 8, !dbg !2494
  %6 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !2495
  %cmp5 = icmp eq %struct.SK_Stroke* %5, %6, !dbg !2496
  br i1 %cmp5, label %land.rhs, label %lor.lhs.false, !dbg !2497

lor.lhs.false:                                    ; preds = %land.lhs.true2
  %7 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !2498
  %cmp6 = icmp eq %struct.SK_Stroke* %7, null, !dbg !2499
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !2500

land.rhs:                                         ; preds = %lor.lhs.false, %land.lhs.true2
  %8 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !2501
  %over7 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %8, i32 0, i32 5, !dbg !2502
  %start = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over7, i32 0, i32 1, !dbg !2503
  %9 = load i32, i32* %start, align 8, !dbg !2503
  %cmp8 = icmp ne i32 %9, -1, !dbg !2504
  br i1 %cmp8, label %lor.end, label %lor.rhs, !dbg !2505

lor.rhs:                                          ; preds = %land.rhs
  %10 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !2506
  %over9 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %10, i32 0, i32 5, !dbg !2507
  %end = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over9, i32 0, i32 2, !dbg !2508
  %11 = load i32, i32* %end, align 4, !dbg !2508
  %cmp10 = icmp ne i32 %11, -1, !dbg !2509
  br label %lor.end, !dbg !2505

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %12 = phi i1 [ true, %land.rhs ], [ %cmp10, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %lor.lhs.false, %land.lhs.true, %entry
  %13 = phi i1 [ false, %lor.lhs.false ], [ false, %land.lhs.true ], [ false, %entry ], [ %12, %lor.end ], !dbg !2510
  %land.ext = zext i1 %13 to i32, !dbg !2500
  ret i32 %land.ext, !dbg !2511
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @initStrokeIterator(%struct.BArcIterator* %arg, %struct.SK_Stroke* %stk, i32 %start, i32 %end) #0 !dbg !2512 {
entry:
  %arg.addr = alloca %struct.BArcIterator*, align 8
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  %start.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %iter = alloca %struct.SK_StrokeIterator*, align 8
  store %struct.BArcIterator* %arg, %struct.BArcIterator** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BArcIterator** %arg.addr, metadata !2515, metadata !DIExpression()), !dbg !2516
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !2517, metadata !DIExpression()), !dbg !2518
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !2519, metadata !DIExpression()), !dbg !2520
  store i32 %end, i32* %end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end.addr, metadata !2521, metadata !DIExpression()), !dbg !2522
  call void @llvm.dbg.declare(metadata %struct.SK_StrokeIterator** %iter, metadata !2523, metadata !DIExpression()), !dbg !2524
  %0 = load %struct.BArcIterator*, %struct.BArcIterator** %arg.addr, align 8, !dbg !2525
  %1 = bitcast %struct.BArcIterator* %0 to %struct.SK_StrokeIterator*, !dbg !2526
  store %struct.SK_StrokeIterator* %1, %struct.SK_StrokeIterator** %iter, align 8, !dbg !2524
  %2 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !2527
  call void @initIteratorFct(%struct.SK_StrokeIterator* %2), !dbg !2528
  %3 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !2529
  %4 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !2530
  %stroke = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %4, i32 0, i32 12, !dbg !2531
  store %struct.SK_Stroke* %3, %struct.SK_Stroke** %stroke, align 8, !dbg !2532
  %5 = load i32, i32* %start.addr, align 4, !dbg !2533
  %6 = load i32, i32* %end.addr, align 4, !dbg !2535
  %cmp = icmp slt i32 %5, %6, !dbg !2536
  br i1 %cmp, label %if.then, label %if.else, !dbg !2537

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %start.addr, align 4, !dbg !2538
  %add = add nsw i32 %7, 1, !dbg !2540
  %8 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !2541
  %start1 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %8, i32 0, i32 13, !dbg !2542
  store i32 %add, i32* %start1, align 8, !dbg !2543
  %9 = load i32, i32* %end.addr, align 4, !dbg !2544
  %sub = sub nsw i32 %9, 1, !dbg !2545
  %10 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !2546
  %end2 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %10, i32 0, i32 14, !dbg !2547
  store i32 %sub, i32* %end2, align 4, !dbg !2548
  %11 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !2549
  %stride = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %11, i32 0, i32 15, !dbg !2550
  store i32 1, i32* %stride, align 8, !dbg !2551
  br label %if.end, !dbg !2552

if.else:                                          ; preds = %entry
  %12 = load i32, i32* %start.addr, align 4, !dbg !2553
  %sub3 = sub nsw i32 %12, 1, !dbg !2555
  %13 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !2556
  %start4 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %13, i32 0, i32 13, !dbg !2557
  store i32 %sub3, i32* %start4, align 8, !dbg !2558
  %14 = load i32, i32* %end.addr, align 4, !dbg !2559
  %add5 = add nsw i32 %14, 1, !dbg !2560
  %15 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !2561
  %end6 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %15, i32 0, i32 14, !dbg !2562
  store i32 %add5, i32* %end6, align 4, !dbg !2563
  %16 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !2564
  %stride7 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %16, i32 0, i32 15, !dbg !2565
  store i32 -1, i32* %stride7, align 8, !dbg !2566
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !2567
  %stride8 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %17, i32 0, i32 15, !dbg !2568
  %18 = load i32, i32* %stride8, align 8, !dbg !2568
  %19 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !2569
  %end9 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %19, i32 0, i32 14, !dbg !2570
  %20 = load i32, i32* %end9, align 4, !dbg !2570
  %21 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !2571
  %start10 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %21, i32 0, i32 13, !dbg !2572
  %22 = load i32, i32* %start10, align 8, !dbg !2572
  %sub11 = sub nsw i32 %20, %22, !dbg !2573
  %add12 = add nsw i32 %sub11, 1, !dbg !2574
  %mul = mul nsw i32 %18, %add12, !dbg !2575
  %23 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !2576
  %length = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %23, i32 0, i32 10, !dbg !2577
  store i32 %mul, i32* %length, align 4, !dbg !2578
  %24 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !2579
  %index = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %24, i32 0, i32 11, !dbg !2580
  store i32 -1, i32* %index, align 8, !dbg !2581
  ret void, !dbg !2582
}

; Function Attrs: noinline nounwind uwtable
define internal void @initIteratorFct(%struct.SK_StrokeIterator* %iter) #0 !dbg !2583 {
entry:
  %iter.addr = alloca %struct.SK_StrokeIterator*, align 8
  store %struct.SK_StrokeIterator* %iter, %struct.SK_StrokeIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_StrokeIterator** %iter.addr, metadata !2586, metadata !DIExpression()), !dbg !2587
  %0 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter.addr, align 8, !dbg !2588
  %head = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %0, i32 0, i32 0, !dbg !2589
  store i8* (i8*)* @headPoint, i8* (i8*)** %head, align 8, !dbg !2590
  %1 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter.addr, align 8, !dbg !2591
  %tail = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %1, i32 0, i32 1, !dbg !2592
  store i8* (i8*)* @tailPoint, i8* (i8*)** %tail, align 8, !dbg !2593
  %2 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter.addr, align 8, !dbg !2594
  %peek = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %2, i32 0, i32 2, !dbg !2595
  store i8* (i8*, i32)* @peekPoint, i8* (i8*, i32)** %peek, align 8, !dbg !2596
  %3 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter.addr, align 8, !dbg !2597
  %next = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %3, i32 0, i32 3, !dbg !2598
  store i8* (i8*)* @nextPoint, i8* (i8*)** %next, align 8, !dbg !2599
  %4 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter.addr, align 8, !dbg !2600
  %nextN = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %4, i32 0, i32 4, !dbg !2601
  store i8* (i8*, i32)* @nextNPoint, i8* (i8*, i32)** %nextN, align 8, !dbg !2602
  %5 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter.addr, align 8, !dbg !2603
  %previous = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %5, i32 0, i32 5, !dbg !2604
  store i8* (i8*)* @previousPoint, i8* (i8*)** %previous, align 8, !dbg !2605
  %6 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter.addr, align 8, !dbg !2606
  %stopped = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %6, i32 0, i32 6, !dbg !2607
  store i32 (i8*)* @iteratorStopped, i32 (i8*)** %stopped, align 8, !dbg !2608
  ret void, !dbg !2609
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sk_detectCutGesture(%struct.bContext* %UNUSED_C, %struct.SK_Gesture* %gest, %struct.SK_Sketch* %UNUSED_sketch) #0 !dbg !2610 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %gest.addr = alloca %struct.SK_Gesture*, align 8
  %UNUSED_sketch.addr = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !2611, metadata !DIExpression()), !dbg !2612
  store %struct.SK_Gesture* %gest, %struct.SK_Gesture** %gest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Gesture** %gest.addr, metadata !2613, metadata !DIExpression()), !dbg !2614
  store %struct.SK_Sketch* %UNUSED_sketch, %struct.SK_Sketch** %UNUSED_sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %UNUSED_sketch.addr, metadata !2615, metadata !DIExpression()), !dbg !2616
  %0 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !2617
  %nb_segments = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %0, i32 0, i32 6, !dbg !2619
  %1 = load i32, i32* %nb_segments, align 8, !dbg !2619
  %cmp = icmp eq i32 %1, 1, !dbg !2620
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2621

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !2622
  %nb_intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %2, i32 0, i32 5, !dbg !2623
  %3 = load i32, i32* %nb_intersections, align 4, !dbg !2623
  %cmp1 = icmp eq i32 %3, 1, !dbg !2624
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2625

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !2626
  br label %return, !dbg !2626

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !2628
  br label %return, !dbg !2628

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !2629
  ret i32 %4, !dbg !2629
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sk_applyCutGesture(%struct.bContext* %UNUSED_C, %struct.SK_Gesture* %gest, %struct.SK_Sketch* %UNUSED_sketch) #0 !dbg !2630 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %gest.addr = alloca %struct.SK_Gesture*, align 8
  %UNUSED_sketch.addr = alloca %struct.SK_Sketch*, align 8
  %isect = alloca %struct.SK_Intersection*, align 8
  %pt = alloca %struct.SK_Point, align 4
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !2631, metadata !DIExpression()), !dbg !2632
  store %struct.SK_Gesture* %gest, %struct.SK_Gesture** %gest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Gesture** %gest.addr, metadata !2633, metadata !DIExpression()), !dbg !2634
  store %struct.SK_Sketch* %UNUSED_sketch, %struct.SK_Sketch** %UNUSED_sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %UNUSED_sketch.addr, metadata !2635, metadata !DIExpression()), !dbg !2636
  call void @llvm.dbg.declare(metadata %struct.SK_Intersection** %isect, metadata !2637, metadata !DIExpression()), !dbg !2651
  %0 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !2652
  %intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %0, i32 0, i32 2, !dbg !2654
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %intersections, i32 0, i32 0, !dbg !2655
  %1 = load i8*, i8** %first, align 8, !dbg !2655
  %2 = bitcast i8* %1 to %struct.SK_Intersection*, !dbg !2652
  store %struct.SK_Intersection* %2, %struct.SK_Intersection** %isect, align 8, !dbg !2656
  br label %for.cond, !dbg !2657

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2658
  %tobool = icmp ne %struct.SK_Intersection* %3, null, !dbg !2660
  br i1 %tobool, label %for.body, label %for.end, !dbg !2660

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.SK_Point* %pt, metadata !2661, metadata !DIExpression()), !dbg !2663
  %type = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %pt, i32 0, i32 4, !dbg !2664
  store i32 1, i32* %type, align 4, !dbg !2665
  %mode = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %pt, i32 0, i32 5, !dbg !2666
  store i32 1, i32* %mode, align 4, !dbg !2667
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %pt, i32 0, i32 0, !dbg !2668
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !2669
  %4 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2670
  %p1 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %4, i32 0, i32 6, !dbg !2671
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !2670
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !2672
  %no = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %pt, i32 0, i32 2, !dbg !2673
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !2674
  %5 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2675
  %stroke = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %5, i32 0, i32 2, !dbg !2676
  %6 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke, align 8, !dbg !2676
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %6, i32 0, i32 2, !dbg !2677
  %7 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !2677
  %8 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2678
  %before = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %8, i32 0, i32 3, !dbg !2679
  %9 = load i32, i32* %before, align 8, !dbg !2679
  %idxprom = sext i32 %9 to i64, !dbg !2675
  %arrayidx = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %7, i64 %idxprom, !dbg !2675
  %no4 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx, i32 0, i32 2, !dbg !2680
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %no4, i64 0, i64 0, !dbg !2675
  call void @copy_v3_v3(float* %arraydecay3, float* %arraydecay5), !dbg !2681
  %10 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2682
  %stroke6 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %10, i32 0, i32 2, !dbg !2683
  %11 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke6, align 8, !dbg !2683
  %12 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2684
  %after = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %12, i32 0, i32 4, !dbg !2685
  %13 = load i32, i32* %after, align 4, !dbg !2685
  call void @sk_insertStrokePoint(%struct.SK_Stroke* %11, %struct.SK_Point* %pt, i32 %13), !dbg !2686
  br label %for.inc, !dbg !2687

for.inc:                                          ; preds = %for.body
  %14 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2688
  %next = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %14, i32 0, i32 0, !dbg !2689
  %15 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next, align 8, !dbg !2689
  store %struct.SK_Intersection* %15, %struct.SK_Intersection** %isect, align 8, !dbg !2690
  br label %for.cond, !dbg !2691, !llvm.loop !2692

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2694
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !2695 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !2701, metadata !DIExpression()), !dbg !2702
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2703, metadata !DIExpression()), !dbg !2704
  %0 = load float*, float** %a.addr, align 8, !dbg !2705
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2705
  %1 = load float, float* %arrayidx, align 4, !dbg !2705
  %2 = load float*, float** %r.addr, align 8, !dbg !2706
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2706
  store float %1, float* %arrayidx1, align 4, !dbg !2707
  %3 = load float*, float** %a.addr, align 8, !dbg !2708
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !2708
  %4 = load float, float* %arrayidx2, align 4, !dbg !2708
  %5 = load float*, float** %r.addr, align 8, !dbg !2709
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !2709
  store float %4, float* %arrayidx3, align 4, !dbg !2710
  %6 = load float*, float** %a.addr, align 8, !dbg !2711
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !2711
  %7 = load float, float* %arrayidx4, align 4, !dbg !2711
  %8 = load float*, float** %r.addr, align 8, !dbg !2712
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !2712
  store float %7, float* %arrayidx5, align 4, !dbg !2713
  ret void, !dbg !2714
}

declare dso_local void @sk_insertStrokePoint(%struct.SK_Stroke*, %struct.SK_Point*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sk_detectTrimGesture(%struct.bContext* %UNUSED_C, %struct.SK_Gesture* %gest, %struct.SK_Sketch* %UNUSED_sketch) #0 !dbg !2715 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %gest.addr = alloca %struct.SK_Gesture*, align 8
  %UNUSED_sketch.addr = alloca %struct.SK_Sketch*, align 8
  %s1 = alloca [3 x float], align 4
  %s2 = alloca [3 x float], align 4
  %angle = alloca float, align 4
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !2716, metadata !DIExpression()), !dbg !2717
  store %struct.SK_Gesture* %gest, %struct.SK_Gesture** %gest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Gesture** %gest.addr, metadata !2718, metadata !DIExpression()), !dbg !2719
  store %struct.SK_Sketch* %UNUSED_sketch, %struct.SK_Sketch** %UNUSED_sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %UNUSED_sketch.addr, metadata !2720, metadata !DIExpression()), !dbg !2721
  %0 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !2722
  %nb_segments = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %0, i32 0, i32 6, !dbg !2724
  %1 = load i32, i32* %nb_segments, align 8, !dbg !2724
  %cmp = icmp eq i32 %1, 2, !dbg !2725
  br i1 %cmp, label %land.lhs.true, label %if.end27, !dbg !2726

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !2727
  %nb_intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %2, i32 0, i32 5, !dbg !2728
  %3 = load i32, i32* %nb_intersections, align 4, !dbg !2728
  %cmp1 = icmp eq i32 %3, 1, !dbg !2729
  br i1 %cmp1, label %land.lhs.true2, label %if.end27, !dbg !2730

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !2731
  %nb_self_intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %4, i32 0, i32 4, !dbg !2732
  %5 = load i32, i32* %nb_self_intersections, align 8, !dbg !2732
  %cmp3 = icmp eq i32 %5, 0, !dbg !2733
  br i1 %cmp3, label %if.then, label %if.end27, !dbg !2734

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata [3 x float]* %s1, metadata !2735, metadata !DIExpression()), !dbg !2737
  call void @llvm.dbg.declare(metadata [3 x float]* %s2, metadata !2738, metadata !DIExpression()), !dbg !2739
  call void @llvm.dbg.declare(metadata float* %angle, metadata !2740, metadata !DIExpression()), !dbg !2741
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %s1, i64 0, i64 0, !dbg !2742
  %6 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !2743
  %segments = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %6, i32 0, i32 1, !dbg !2744
  %7 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments, align 8, !dbg !2744
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %7, i32 0, i32 2, !dbg !2745
  %8 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !2745
  %arrayidx = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %8, i64 1, !dbg !2743
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx, i32 0, i32 0, !dbg !2746
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !2743
  %9 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !2747
  %segments5 = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %9, i32 0, i32 1, !dbg !2748
  %10 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments5, align 8, !dbg !2748
  %points6 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %10, i32 0, i32 2, !dbg !2749
  %11 = load %struct.SK_Point*, %struct.SK_Point** %points6, align 8, !dbg !2749
  %arrayidx7 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %11, i64 0, !dbg !2747
  %p8 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx7, i32 0, i32 0, !dbg !2750
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %p8, i64 0, i64 0, !dbg !2747
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay4, float* %arraydecay9), !dbg !2751
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %s2, i64 0, i64 0, !dbg !2752
  %12 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !2753
  %segments11 = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %12, i32 0, i32 1, !dbg !2754
  %13 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments11, align 8, !dbg !2754
  %points12 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %13, i32 0, i32 2, !dbg !2755
  %14 = load %struct.SK_Point*, %struct.SK_Point** %points12, align 8, !dbg !2755
  %arrayidx13 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %14, i64 2, !dbg !2753
  %p14 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx13, i32 0, i32 0, !dbg !2756
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %p14, i64 0, i64 0, !dbg !2753
  %15 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !2757
  %segments16 = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %15, i32 0, i32 1, !dbg !2758
  %16 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments16, align 8, !dbg !2758
  %points17 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %16, i32 0, i32 2, !dbg !2759
  %17 = load %struct.SK_Point*, %struct.SK_Point** %points17, align 8, !dbg !2759
  %arrayidx18 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %17, i64 1, !dbg !2757
  %p19 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx18, i32 0, i32 0, !dbg !2760
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %p19, i64 0, i64 0, !dbg !2757
  call void @sub_v3_v3v3(float* %arraydecay10, float* %arraydecay15, float* %arraydecay20), !dbg !2761
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %s1, i64 0, i64 0, !dbg !2762
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %s2, i64 0, i64 0, !dbg !2762
  %call = call float @angle_v2v2(float* %arraydecay21, float* %arraydecay22), !dbg !2762
  %mul = fmul float %call, 0x404CA5DC20000000, !dbg !2762
  store float %mul, float* %angle, align 4, !dbg !2763
  %18 = load float, float* %angle, align 4, !dbg !2764
  %cmp23 = fcmp ogt float %18, 6.000000e+01, !dbg !2766
  br i1 %cmp23, label %land.lhs.true24, label %if.end, !dbg !2767

land.lhs.true24:                                  ; preds = %if.then
  %19 = load float, float* %angle, align 4, !dbg !2768
  %cmp25 = fcmp olt float %19, 1.200000e+02, !dbg !2769
  br i1 %cmp25, label %if.then26, label %if.end, !dbg !2770

if.then26:                                        ; preds = %land.lhs.true24
  store i32 1, i32* %retval, align 4, !dbg !2771
  br label %return, !dbg !2771

if.end:                                           ; preds = %land.lhs.true24, %if.then
  br label %if.end27, !dbg !2773

if.end27:                                         ; preds = %if.end, %land.lhs.true2, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !2774
  br label %return, !dbg !2774

return:                                           ; preds = %if.end27, %if.then26
  %20 = load i32, i32* %retval, align 4, !dbg !2775
  ret i32 %20, !dbg !2775
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !2776 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !2779, metadata !DIExpression()), !dbg !2780
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2781, metadata !DIExpression()), !dbg !2782
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !2783, metadata !DIExpression()), !dbg !2784
  %0 = load float*, float** %a.addr, align 8, !dbg !2785
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2785
  %1 = load float, float* %arrayidx, align 4, !dbg !2785
  %2 = load float*, float** %b.addr, align 8, !dbg !2786
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2786
  %3 = load float, float* %arrayidx1, align 4, !dbg !2786
  %sub = fsub float %1, %3, !dbg !2787
  %4 = load float*, float** %r.addr, align 8, !dbg !2788
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !2788
  store float %sub, float* %arrayidx2, align 4, !dbg !2789
  %5 = load float*, float** %a.addr, align 8, !dbg !2790
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !2790
  %6 = load float, float* %arrayidx3, align 4, !dbg !2790
  %7 = load float*, float** %b.addr, align 8, !dbg !2791
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !2791
  %8 = load float, float* %arrayidx4, align 4, !dbg !2791
  %sub5 = fsub float %6, %8, !dbg !2792
  %9 = load float*, float** %r.addr, align 8, !dbg !2793
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !2793
  store float %sub5, float* %arrayidx6, align 4, !dbg !2794
  %10 = load float*, float** %a.addr, align 8, !dbg !2795
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !2795
  %11 = load float, float* %arrayidx7, align 4, !dbg !2795
  %12 = load float*, float** %b.addr, align 8, !dbg !2796
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !2796
  %13 = load float, float* %arrayidx8, align 4, !dbg !2796
  %sub9 = fsub float %11, %13, !dbg !2797
  %14 = load float*, float** %r.addr, align 8, !dbg !2798
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !2798
  store float %sub9, float* %arrayidx10, align 4, !dbg !2799
  ret void, !dbg !2800
}

declare dso_local float @angle_v2v2(float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @sk_applyTrimGesture(%struct.bContext* %UNUSED_C, %struct.SK_Gesture* %gest, %struct.SK_Sketch* %UNUSED_sketch) #0 !dbg !2801 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %gest.addr = alloca %struct.SK_Gesture*, align 8
  %UNUSED_sketch.addr = alloca %struct.SK_Sketch*, align 8
  %isect = alloca %struct.SK_Intersection*, align 8
  %trim_dir = alloca [3 x float], align 4
  %pt = alloca %struct.SK_Point, align 4
  %stroke_dir = alloca [3 x float], align 4
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !2802, metadata !DIExpression()), !dbg !2803
  store %struct.SK_Gesture* %gest, %struct.SK_Gesture** %gest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Gesture** %gest.addr, metadata !2804, metadata !DIExpression()), !dbg !2805
  store %struct.SK_Sketch* %UNUSED_sketch, %struct.SK_Sketch** %UNUSED_sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %UNUSED_sketch.addr, metadata !2806, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.declare(metadata %struct.SK_Intersection** %isect, metadata !2808, metadata !DIExpression()), !dbg !2809
  call void @llvm.dbg.declare(metadata [3 x float]* %trim_dir, metadata !2810, metadata !DIExpression()), !dbg !2811
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %trim_dir, i64 0, i64 0, !dbg !2812
  %0 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !2813
  %segments = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %0, i32 0, i32 1, !dbg !2814
  %1 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments, align 8, !dbg !2814
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %1, i32 0, i32 2, !dbg !2815
  %2 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !2815
  %arrayidx = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %2, i64 2, !dbg !2813
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx, i32 0, i32 0, !dbg !2816
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !2813
  %3 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !2817
  %segments2 = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %3, i32 0, i32 1, !dbg !2818
  %4 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments2, align 8, !dbg !2818
  %points3 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %4, i32 0, i32 2, !dbg !2819
  %5 = load %struct.SK_Point*, %struct.SK_Point** %points3, align 8, !dbg !2819
  %arrayidx4 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %5, i64 1, !dbg !2817
  %p5 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx4, i32 0, i32 0, !dbg !2820
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %p5, i64 0, i64 0, !dbg !2817
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay1, float* %arraydecay6), !dbg !2821
  %6 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !2822
  %intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %6, i32 0, i32 2, !dbg !2824
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %intersections, i32 0, i32 0, !dbg !2825
  %7 = load i8*, i8** %first, align 8, !dbg !2825
  %8 = bitcast i8* %7 to %struct.SK_Intersection*, !dbg !2822
  store %struct.SK_Intersection* %8, %struct.SK_Intersection** %isect, align 8, !dbg !2826
  br label %for.cond, !dbg !2827

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2828
  %tobool = icmp ne %struct.SK_Intersection* %9, null, !dbg !2830
  br i1 %tobool, label %for.body, label %for.end, !dbg !2830

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.SK_Point* %pt, metadata !2831, metadata !DIExpression()), !dbg !2833
  call void @llvm.dbg.declare(metadata [3 x float]* %stroke_dir, metadata !2834, metadata !DIExpression()), !dbg !2835
  %type = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %pt, i32 0, i32 4, !dbg !2836
  store i32 1, i32* %type, align 4, !dbg !2837
  %mode = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %pt, i32 0, i32 5, !dbg !2838
  store i32 1, i32* %mode, align 4, !dbg !2839
  %p7 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %pt, i32 0, i32 0, !dbg !2840
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %p7, i64 0, i64 0, !dbg !2841
  %10 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2842
  %p9 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %10, i32 0, i32 6, !dbg !2843
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %p9, i64 0, i64 0, !dbg !2842
  call void @copy_v3_v3(float* %arraydecay8, float* %arraydecay10), !dbg !2844
  %no = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %pt, i32 0, i32 2, !dbg !2845
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !2846
  %11 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2847
  %stroke = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %11, i32 0, i32 2, !dbg !2848
  %12 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke, align 8, !dbg !2848
  %points12 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %12, i32 0, i32 2, !dbg !2849
  %13 = load %struct.SK_Point*, %struct.SK_Point** %points12, align 8, !dbg !2849
  %14 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2850
  %before = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %14, i32 0, i32 3, !dbg !2851
  %15 = load i32, i32* %before, align 8, !dbg !2851
  %idxprom = sext i32 %15 to i64, !dbg !2847
  %arrayidx13 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %13, i64 %idxprom, !dbg !2847
  %no14 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx13, i32 0, i32 2, !dbg !2852
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %no14, i64 0, i64 0, !dbg !2847
  call void @copy_v3_v3(float* %arraydecay11, float* %arraydecay15), !dbg !2853
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %stroke_dir, i64 0, i64 0, !dbg !2854
  %16 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2855
  %stroke17 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %16, i32 0, i32 2, !dbg !2856
  %17 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke17, align 8, !dbg !2856
  %points18 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %17, i32 0, i32 2, !dbg !2857
  %18 = load %struct.SK_Point*, %struct.SK_Point** %points18, align 8, !dbg !2857
  %19 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2858
  %after = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %19, i32 0, i32 4, !dbg !2859
  %20 = load i32, i32* %after, align 4, !dbg !2859
  %idxprom19 = sext i32 %20 to i64, !dbg !2855
  %arrayidx20 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %18, i64 %idxprom19, !dbg !2855
  %p21 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx20, i32 0, i32 0, !dbg !2860
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %p21, i64 0, i64 0, !dbg !2855
  %21 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2861
  %stroke23 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %21, i32 0, i32 2, !dbg !2862
  %22 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke23, align 8, !dbg !2862
  %points24 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %22, i32 0, i32 2, !dbg !2863
  %23 = load %struct.SK_Point*, %struct.SK_Point** %points24, align 8, !dbg !2863
  %24 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2864
  %before25 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %24, i32 0, i32 3, !dbg !2865
  %25 = load i32, i32* %before25, align 8, !dbg !2865
  %idxprom26 = sext i32 %25 to i64, !dbg !2861
  %arrayidx27 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %23, i64 %idxprom26, !dbg !2861
  %p28 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx27, i32 0, i32 0, !dbg !2866
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %p28, i64 0, i64 0, !dbg !2861
  call void @sub_v3_v3v3(float* %arraydecay16, float* %arraydecay22, float* %arraydecay29), !dbg !2867
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %stroke_dir, i64 0, i64 0, !dbg !2868
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %trim_dir, i64 0, i64 0, !dbg !2870
  %call = call float @dot_v3v3(float* %arraydecay30, float* %arraydecay31), !dbg !2871
  %cmp = fcmp ogt float %call, 0.000000e+00, !dbg !2872
  br i1 %cmp, label %if.then, label %if.else, !dbg !2873

if.then:                                          ; preds = %for.body
  %26 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2874
  %stroke32 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %26, i32 0, i32 2, !dbg !2876
  %27 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke32, align 8, !dbg !2876
  %28 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2877
  %after33 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %28, i32 0, i32 4, !dbg !2878
  %29 = load i32, i32* %after33, align 4, !dbg !2878
  call void @sk_replaceStrokePoint(%struct.SK_Stroke* %27, %struct.SK_Point* %pt, i32 %29), !dbg !2879
  %30 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2880
  %stroke34 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %30, i32 0, i32 2, !dbg !2881
  %31 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke34, align 8, !dbg !2881
  %32 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2882
  %after35 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %32, i32 0, i32 4, !dbg !2883
  %33 = load i32, i32* %after35, align 4, !dbg !2883
  call void @sk_trimStroke(%struct.SK_Stroke* %31, i32 0, i32 %33), !dbg !2884
  br label %if.end, !dbg !2885

if.else:                                          ; preds = %for.body
  %34 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2886
  %stroke36 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %34, i32 0, i32 2, !dbg !2888
  %35 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke36, align 8, !dbg !2888
  %36 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2889
  %before37 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %36, i32 0, i32 3, !dbg !2890
  %37 = load i32, i32* %before37, align 8, !dbg !2890
  call void @sk_replaceStrokePoint(%struct.SK_Stroke* %35, %struct.SK_Point* %pt, i32 %37), !dbg !2891
  %38 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2892
  %stroke38 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %38, i32 0, i32 2, !dbg !2893
  %39 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke38, align 8, !dbg !2893
  %40 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2894
  %before39 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %40, i32 0, i32 3, !dbg !2895
  %41 = load i32, i32* %before39, align 8, !dbg !2895
  %42 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2896
  %stroke40 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %42, i32 0, i32 2, !dbg !2897
  %43 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke40, align 8, !dbg !2897
  %nb_points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %43, i32 0, i32 3, !dbg !2898
  %44 = load i32, i32* %nb_points, align 8, !dbg !2898
  %sub = sub nsw i32 %44, 1, !dbg !2899
  call void @sk_trimStroke(%struct.SK_Stroke* %39, i32 %41, i32 %sub), !dbg !2900
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !2901

for.inc:                                          ; preds = %if.end
  %45 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2902
  %next = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %45, i32 0, i32 0, !dbg !2903
  %46 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next, align 8, !dbg !2903
  store %struct.SK_Intersection* %46, %struct.SK_Intersection** %isect, align 8, !dbg !2904
  br label %for.cond, !dbg !2905, !llvm.loop !2906

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2908
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !2909 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2912, metadata !DIExpression()), !dbg !2913
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !2914, metadata !DIExpression()), !dbg !2915
  %0 = load float*, float** %a.addr, align 8, !dbg !2916
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2916
  %1 = load float, float* %arrayidx, align 4, !dbg !2916
  %2 = load float*, float** %b.addr, align 8, !dbg !2917
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2917
  %3 = load float, float* %arrayidx1, align 4, !dbg !2917
  %mul = fmul float %1, %3, !dbg !2918
  %4 = load float*, float** %a.addr, align 8, !dbg !2919
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !2919
  %5 = load float, float* %arrayidx2, align 4, !dbg !2919
  %6 = load float*, float** %b.addr, align 8, !dbg !2920
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !2920
  %7 = load float, float* %arrayidx3, align 4, !dbg !2920
  %mul4 = fmul float %5, %7, !dbg !2921
  %add = fadd float %mul, %mul4, !dbg !2922
  %8 = load float*, float** %a.addr, align 8, !dbg !2923
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !2923
  %9 = load float, float* %arrayidx5, align 4, !dbg !2923
  %10 = load float*, float** %b.addr, align 8, !dbg !2924
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !2924
  %11 = load float, float* %arrayidx6, align 4, !dbg !2924
  %mul7 = fmul float %9, %11, !dbg !2925
  %add8 = fadd float %add, %mul7, !dbg !2926
  ret float %add8, !dbg !2927
}

declare dso_local void @sk_replaceStrokePoint(%struct.SK_Stroke*, %struct.SK_Point*, i32) #2

declare dso_local void @sk_trimStroke(%struct.SK_Stroke*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sk_detectCommandGesture(%struct.bContext* %UNUSED_C, %struct.SK_Gesture* %gest, %struct.SK_Sketch* %UNUSED_sketch) #0 !dbg !2928 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %gest.addr = alloca %struct.SK_Gesture*, align 8
  %UNUSED_sketch.addr = alloca %struct.SK_Sketch*, align 8
  %isect = alloca %struct.SK_Intersection*, align 8
  %self_isect = alloca %struct.SK_Intersection*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !2929, metadata !DIExpression()), !dbg !2930
  store %struct.SK_Gesture* %gest, %struct.SK_Gesture** %gest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Gesture** %gest.addr, metadata !2931, metadata !DIExpression()), !dbg !2932
  store %struct.SK_Sketch* %UNUSED_sketch, %struct.SK_Sketch** %UNUSED_sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %UNUSED_sketch.addr, metadata !2933, metadata !DIExpression()), !dbg !2934
  %0 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !2935
  %nb_segments = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %0, i32 0, i32 6, !dbg !2937
  %1 = load i32, i32* %nb_segments, align 8, !dbg !2937
  %cmp = icmp sgt i32 %1, 2, !dbg !2938
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !2939

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !2940
  %nb_intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %2, i32 0, i32 5, !dbg !2941
  %3 = load i32, i32* %nb_intersections, align 4, !dbg !2941
  %cmp1 = icmp eq i32 %3, 2, !dbg !2942
  br i1 %cmp1, label %land.lhs.true2, label %if.end16, !dbg !2943

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !2944
  %nb_self_intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %4, i32 0, i32 4, !dbg !2945
  %5 = load i32, i32* %nb_self_intersections, align 8, !dbg !2945
  %cmp3 = icmp eq i32 %5, 1, !dbg !2946
  br i1 %cmp3, label %if.then, label %if.end16, !dbg !2947

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata %struct.SK_Intersection** %isect, metadata !2948, metadata !DIExpression()), !dbg !2950
  call void @llvm.dbg.declare(metadata %struct.SK_Intersection** %self_isect, metadata !2951, metadata !DIExpression()), !dbg !2952
  %6 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !2953
  %intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %6, i32 0, i32 2, !dbg !2955
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %intersections, i32 0, i32 0, !dbg !2956
  %7 = load i8*, i8** %first, align 8, !dbg !2956
  %8 = bitcast i8* %7 to %struct.SK_Intersection*, !dbg !2953
  store %struct.SK_Intersection* %8, %struct.SK_Intersection** %isect, align 8, !dbg !2957
  br label %for.cond, !dbg !2958

for.cond:                                         ; preds = %for.inc, %if.then
  %9 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2959
  %tobool = icmp ne %struct.SK_Intersection* %9, null, !dbg !2961
  br i1 %tobool, label %for.body, label %for.end, !dbg !2961

for.body:                                         ; preds = %for.cond
  %10 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2962
  %stroke = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %10, i32 0, i32 2, !dbg !2965
  %11 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke, align 8, !dbg !2965
  %12 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2966
  %next = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %12, i32 0, i32 0, !dbg !2967
  %13 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next, align 8, !dbg !2967
  %stroke4 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %13, i32 0, i32 2, !dbg !2968
  %14 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke4, align 8, !dbg !2968
  %cmp5 = icmp eq %struct.SK_Stroke* %11, %14, !dbg !2969
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !2970

if.then6:                                         ; preds = %for.body
  %15 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2971
  %next7 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %15, i32 0, i32 0, !dbg !2973
  %16 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next7, align 8, !dbg !2973
  store %struct.SK_Intersection* %16, %struct.SK_Intersection** %isect, align 8, !dbg !2974
  br label %for.end, !dbg !2975

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !2976

for.inc:                                          ; preds = %if.end
  %17 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2977
  %next8 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %17, i32 0, i32 0, !dbg !2978
  %18 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next8, align 8, !dbg !2978
  store %struct.SK_Intersection* %18, %struct.SK_Intersection** %isect, align 8, !dbg !2979
  br label %for.cond, !dbg !2980, !llvm.loop !2981

for.end:                                          ; preds = %if.then6, %for.cond
  %19 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !2983
  %self_intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %19, i32 0, i32 3, !dbg !2984
  %first9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %self_intersections, i32 0, i32 0, !dbg !2985
  %20 = load i8*, i8** %first9, align 8, !dbg !2985
  %21 = bitcast i8* %20 to %struct.SK_Intersection*, !dbg !2983
  store %struct.SK_Intersection* %21, %struct.SK_Intersection** %self_isect, align 8, !dbg !2986
  %22 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2987
  %tobool10 = icmp ne %struct.SK_Intersection* %22, null, !dbg !2987
  br i1 %tobool10, label %land.lhs.true11, label %if.end15, !dbg !2989

land.lhs.true11:                                  ; preds = %for.end
  %23 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !2990
  %gesture_index = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %23, i32 0, i32 5, !dbg !2991
  %24 = load i32, i32* %gesture_index, align 8, !dbg !2991
  %25 = load %struct.SK_Intersection*, %struct.SK_Intersection** %self_isect, align 8, !dbg !2992
  %gesture_index12 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %25, i32 0, i32 5, !dbg !2993
  %26 = load i32, i32* %gesture_index12, align 8, !dbg !2993
  %cmp13 = icmp slt i32 %24, %26, !dbg !2994
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !2995

if.then14:                                        ; preds = %land.lhs.true11
  store i32 1, i32* %retval, align 4, !dbg !2996
  br label %return, !dbg !2996

if.end15:                                         ; preds = %land.lhs.true11, %for.end
  br label %if.end16, !dbg !2998

if.end16:                                         ; preds = %if.end15, %land.lhs.true2, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !2999
  br label %return, !dbg !2999

return:                                           ; preds = %if.end16, %if.then14
  %27 = load i32, i32* %retval, align 4, !dbg !3000
  ret i32 %27, !dbg !3000
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sk_applyCommandGesture(%struct.bContext* %UNUSED_C, %struct.SK_Gesture* %gest, %struct.SK_Sketch* %UNUSED_sketch) #0 !dbg !3001 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %gest.addr = alloca %struct.SK_Gesture*, align 8
  %UNUSED_sketch.addr = alloca %struct.SK_Sketch*, align 8
  %isect = alloca %struct.SK_Intersection*, align 8
  %command = alloca i32, align 4
  %i2 = alloca %struct.SK_Intersection*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !3002, metadata !DIExpression()), !dbg !3003
  store %struct.SK_Gesture* %gest, %struct.SK_Gesture** %gest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Gesture** %gest.addr, metadata !3004, metadata !DIExpression()), !dbg !3005
  store %struct.SK_Sketch* %UNUSED_sketch, %struct.SK_Sketch** %UNUSED_sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %UNUSED_sketch.addr, metadata !3006, metadata !DIExpression()), !dbg !3007
  call void @llvm.dbg.declare(metadata %struct.SK_Intersection** %isect, metadata !3008, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.declare(metadata i32* %command, metadata !3010, metadata !DIExpression()), !dbg !3011
  store i32 1, i32* %command, align 4, !dbg !3011
  %0 = load i32, i32* %command, align 4, !dbg !3012
  %cmp = icmp slt i32 %0, 1, !dbg !3014
  br i1 %cmp, label %if.then, label %if.end, !dbg !3015

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !3016

if.end:                                           ; preds = %entry
  %1 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3017
  %intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %1, i32 0, i32 2, !dbg !3019
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %intersections, i32 0, i32 0, !dbg !3020
  %2 = load i8*, i8** %first, align 8, !dbg !3020
  %3 = bitcast i8* %2 to %struct.SK_Intersection*, !dbg !3017
  store %struct.SK_Intersection* %3, %struct.SK_Intersection** %isect, align 8, !dbg !3021
  br label %for.cond, !dbg !3022

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3023
  %tobool = icmp ne %struct.SK_Intersection* %4, null, !dbg !3025
  br i1 %tobool, label %for.body, label %for.end, !dbg !3025

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.SK_Intersection** %i2, metadata !3026, metadata !DIExpression()), !dbg !3028
  %5 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3029
  %next = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %5, i32 0, i32 0, !dbg !3030
  %6 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next, align 8, !dbg !3030
  store %struct.SK_Intersection* %6, %struct.SK_Intersection** %i2, align 8, !dbg !3031
  %7 = load %struct.SK_Intersection*, %struct.SK_Intersection** %i2, align 8, !dbg !3032
  %tobool1 = icmp ne %struct.SK_Intersection* %7, null, !dbg !3032
  br i1 %tobool1, label %land.lhs.true, label %if.end16, !dbg !3034

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.SK_Intersection*, %struct.SK_Intersection** %i2, align 8, !dbg !3035
  %stroke = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %8, i32 0, i32 2, !dbg !3036
  %9 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke, align 8, !dbg !3036
  %10 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3037
  %stroke2 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %10, i32 0, i32 2, !dbg !3038
  %11 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke2, align 8, !dbg !3038
  %cmp3 = icmp eq %struct.SK_Stroke* %9, %11, !dbg !3039
  br i1 %cmp3, label %if.then4, label %if.end16, !dbg !3040

if.then4:                                         ; preds = %land.lhs.true
  %12 = load i32, i32* %command, align 4, !dbg !3041
  switch i32 %12, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb6
    i32 3, label %sw.bb12
  ], !dbg !3043

sw.bb:                                            ; preds = %if.then4
  %13 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3044
  %stroke5 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %13, i32 0, i32 2, !dbg !3046
  %14 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke5, align 8, !dbg !3046
  %15 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3047
  %before = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %15, i32 0, i32 3, !dbg !3048
  %16 = load i32, i32* %before, align 8, !dbg !3048
  %17 = load %struct.SK_Intersection*, %struct.SK_Intersection** %i2, align 8, !dbg !3049
  %after = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %17, i32 0, i32 4, !dbg !3050
  %18 = load i32, i32* %after, align 4, !dbg !3050
  call void @sk_flattenStroke(%struct.SK_Stroke* %14, i32 %16, i32 %18), !dbg !3051
  br label %sw.epilog, !dbg !3052

sw.bb6:                                           ; preds = %if.then4
  %19 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3053
  %stroke7 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %19, i32 0, i32 2, !dbg !3054
  %20 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke7, align 8, !dbg !3054
  %21 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3055
  %before8 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %21, i32 0, i32 3, !dbg !3056
  %22 = load i32, i32* %before8, align 8, !dbg !3056
  %23 = load %struct.SK_Intersection*, %struct.SK_Intersection** %i2, align 8, !dbg !3057
  %after9 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %23, i32 0, i32 4, !dbg !3058
  %24 = load i32, i32* %after9, align 4, !dbg !3058
  %25 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3059
  %p = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %25, i32 0, i32 6, !dbg !3060
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3059
  %26 = load %struct.SK_Intersection*, %struct.SK_Intersection** %i2, align 8, !dbg !3061
  %p10 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %26, i32 0, i32 6, !dbg !3062
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %p10, i64 0, i64 0, !dbg !3061
  call void @sk_straightenStroke(%struct.SK_Stroke* %20, i32 %22, i32 %24, float* %arraydecay, float* %arraydecay11), !dbg !3063
  br label %sw.epilog, !dbg !3064

sw.bb12:                                          ; preds = %if.then4
  %27 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3065
  %stroke13 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %27, i32 0, i32 2, !dbg !3066
  %28 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke13, align 8, !dbg !3066
  %29 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3067
  %before14 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %29, i32 0, i32 3, !dbg !3068
  %30 = load i32, i32* %before14, align 8, !dbg !3068
  %31 = load %struct.SK_Intersection*, %struct.SK_Intersection** %i2, align 8, !dbg !3069
  %after15 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %31, i32 0, i32 4, !dbg !3070
  %32 = load i32, i32* %after15, align 4, !dbg !3070
  call void @sk_polygonizeStroke(%struct.SK_Stroke* %28, i32 %30, i32 %32), !dbg !3071
  br label %sw.epilog, !dbg !3072

sw.epilog:                                        ; preds = %if.then4, %sw.bb12, %sw.bb6, %sw.bb
  %33 = load %struct.SK_Intersection*, %struct.SK_Intersection** %i2, align 8, !dbg !3073
  store %struct.SK_Intersection* %33, %struct.SK_Intersection** %isect, align 8, !dbg !3074
  br label %if.end16, !dbg !3075

if.end16:                                         ; preds = %sw.epilog, %land.lhs.true, %for.body
  br label %for.inc, !dbg !3076

for.inc:                                          ; preds = %if.end16
  %34 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3077
  %next17 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %34, i32 0, i32 0, !dbg !3078
  %35 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next17, align 8, !dbg !3078
  store %struct.SK_Intersection* %35, %struct.SK_Intersection** %isect, align 8, !dbg !3079
  br label %for.cond, !dbg !3080, !llvm.loop !3081

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !3083
}

declare dso_local void @sk_flattenStroke(%struct.SK_Stroke*, i32, i32) #2

declare dso_local void @sk_straightenStroke(%struct.SK_Stroke*, i32, i32, float*, float*) #2

declare dso_local void @sk_polygonizeStroke(%struct.SK_Stroke*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sk_detectDeleteGesture(%struct.bContext* %UNUSED_C, %struct.SK_Gesture* %gest, %struct.SK_Sketch* %UNUSED_sketch) #0 !dbg !3084 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %gest.addr = alloca %struct.SK_Gesture*, align 8
  %UNUSED_sketch.addr = alloca %struct.SK_Sketch*, align 8
  %s1 = alloca [3 x float], align 4
  %s2 = alloca [3 x float], align 4
  %angle = alloca float, align 4
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !3085, metadata !DIExpression()), !dbg !3086
  store %struct.SK_Gesture* %gest, %struct.SK_Gesture** %gest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Gesture** %gest.addr, metadata !3087, metadata !DIExpression()), !dbg !3088
  store %struct.SK_Sketch* %UNUSED_sketch, %struct.SK_Sketch** %UNUSED_sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %UNUSED_sketch.addr, metadata !3089, metadata !DIExpression()), !dbg !3090
  %0 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3091
  %nb_segments = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %0, i32 0, i32 6, !dbg !3093
  %1 = load i32, i32* %nb_segments, align 8, !dbg !3093
  %cmp = icmp eq i32 %1, 2, !dbg !3094
  br i1 %cmp, label %land.lhs.true, label %if.end23, !dbg !3095

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3096
  %nb_intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %2, i32 0, i32 5, !dbg !3097
  %3 = load i32, i32* %nb_intersections, align 4, !dbg !3097
  %cmp1 = icmp eq i32 %3, 2, !dbg !3098
  br i1 %cmp1, label %if.then, label %if.end23, !dbg !3099

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [3 x float]* %s1, metadata !3100, metadata !DIExpression()), !dbg !3102
  call void @llvm.dbg.declare(metadata [3 x float]* %s2, metadata !3103, metadata !DIExpression()), !dbg !3104
  call void @llvm.dbg.declare(metadata float* %angle, metadata !3105, metadata !DIExpression()), !dbg !3106
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %s1, i64 0, i64 0, !dbg !3107
  %4 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3108
  %segments = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %4, i32 0, i32 1, !dbg !3109
  %5 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments, align 8, !dbg !3109
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %5, i32 0, i32 2, !dbg !3110
  %6 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !3110
  %arrayidx = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %6, i64 1, !dbg !3108
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx, i32 0, i32 0, !dbg !3111
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3108
  %7 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3112
  %segments3 = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %7, i32 0, i32 1, !dbg !3113
  %8 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments3, align 8, !dbg !3113
  %points4 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %8, i32 0, i32 2, !dbg !3114
  %9 = load %struct.SK_Point*, %struct.SK_Point** %points4, align 8, !dbg !3114
  %arrayidx5 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %9, i64 0, !dbg !3112
  %p6 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx5, i32 0, i32 0, !dbg !3115
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %p6, i64 0, i64 0, !dbg !3112
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay2, float* %arraydecay7), !dbg !3116
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %s2, i64 0, i64 0, !dbg !3117
  %10 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3118
  %segments9 = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %10, i32 0, i32 1, !dbg !3119
  %11 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments9, align 8, !dbg !3119
  %points10 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %11, i32 0, i32 2, !dbg !3120
  %12 = load %struct.SK_Point*, %struct.SK_Point** %points10, align 8, !dbg !3120
  %arrayidx11 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %12, i64 2, !dbg !3118
  %p12 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx11, i32 0, i32 0, !dbg !3121
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %p12, i64 0, i64 0, !dbg !3118
  %13 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3122
  %segments14 = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %13, i32 0, i32 1, !dbg !3123
  %14 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments14, align 8, !dbg !3123
  %points15 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %14, i32 0, i32 2, !dbg !3124
  %15 = load %struct.SK_Point*, %struct.SK_Point** %points15, align 8, !dbg !3124
  %arrayidx16 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %15, i64 1, !dbg !3122
  %p17 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx16, i32 0, i32 0, !dbg !3125
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %p17, i64 0, i64 0, !dbg !3122
  call void @sub_v3_v3v3(float* %arraydecay8, float* %arraydecay13, float* %arraydecay18), !dbg !3126
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %s1, i64 0, i64 0, !dbg !3127
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %s2, i64 0, i64 0, !dbg !3127
  %call = call float @angle_v2v2(float* %arraydecay19, float* %arraydecay20), !dbg !3127
  %mul = fmul float %call, 0x404CA5DC20000000, !dbg !3127
  store float %mul, float* %angle, align 4, !dbg !3128
  %16 = load float, float* %angle, align 4, !dbg !3129
  %cmp21 = fcmp ogt float %16, 1.200000e+02, !dbg !3131
  br i1 %cmp21, label %if.then22, label %if.end, !dbg !3132

if.then22:                                        ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !3133
  br label %return, !dbg !3133

if.end:                                           ; preds = %if.then
  br label %if.end23, !dbg !3135

if.end23:                                         ; preds = %if.end, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !3136
  br label %return, !dbg !3136

return:                                           ; preds = %if.end23, %if.then22
  %17 = load i32, i32* %retval, align 4, !dbg !3137
  ret i32 %17, !dbg !3137
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sk_applyDeleteGesture(%struct.bContext* %UNUSED_C, %struct.SK_Gesture* %gest, %struct.SK_Sketch* %sketch) #0 !dbg !3138 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %gest.addr = alloca %struct.SK_Gesture*, align 8
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %isect = alloca %struct.SK_Intersection*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !3139, metadata !DIExpression()), !dbg !3140
  store %struct.SK_Gesture* %gest, %struct.SK_Gesture** %gest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Gesture** %gest.addr, metadata !3141, metadata !DIExpression()), !dbg !3142
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !3143, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.declare(metadata %struct.SK_Intersection** %isect, metadata !3145, metadata !DIExpression()), !dbg !3146
  %0 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3147
  %intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %0, i32 0, i32 2, !dbg !3149
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %intersections, i32 0, i32 0, !dbg !3150
  %1 = load i8*, i8** %first, align 8, !dbg !3150
  %2 = bitcast i8* %1 to %struct.SK_Intersection*, !dbg !3147
  store %struct.SK_Intersection* %2, %struct.SK_Intersection** %isect, align 8, !dbg !3151
  br label %for.cond, !dbg !3152

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3153
  %tobool = icmp ne %struct.SK_Intersection* %3, null, !dbg !3155
  br i1 %tobool, label %for.body, label %for.end, !dbg !3155

for.body:                                         ; preds = %for.cond
  %4 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3156
  %next = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %4, i32 0, i32 0, !dbg !3159
  %5 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next, align 8, !dbg !3159
  %tobool1 = icmp ne %struct.SK_Intersection* %5, null, !dbg !3156
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !3160

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3161
  %next2 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %6, i32 0, i32 0, !dbg !3162
  %7 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next2, align 8, !dbg !3162
  %stroke = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %7, i32 0, i32 2, !dbg !3163
  %8 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke, align 8, !dbg !3163
  %9 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3164
  %stroke3 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %9, i32 0, i32 2, !dbg !3165
  %10 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke3, align 8, !dbg !3165
  %cmp = icmp eq %struct.SK_Stroke* %8, %10, !dbg !3166
  br i1 %cmp, label %if.then, label %if.end, !dbg !3167

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3168
  %next4 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %11, i32 0, i32 0, !dbg !3170
  %12 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next4, align 8, !dbg !3170
  store %struct.SK_Intersection* %12, %struct.SK_Intersection** %isect, align 8, !dbg !3171
  %13 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !3172
  %14 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3173
  %stroke5 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %14, i32 0, i32 2, !dbg !3174
  %15 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke5, align 8, !dbg !3174
  call void @sk_removeStroke(%struct.SK_Sketch* %13, %struct.SK_Stroke* %15), !dbg !3175
  br label %if.end, !dbg !3176

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !3177

for.inc:                                          ; preds = %if.end
  %16 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3178
  %next6 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %16, i32 0, i32 0, !dbg !3179
  %17 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next6, align 8, !dbg !3179
  store %struct.SK_Intersection* %17, %struct.SK_Intersection** %isect, align 8, !dbg !3180
  br label %for.cond, !dbg !3181, !llvm.loop !3182

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3184
}

declare dso_local void @sk_removeStroke(%struct.SK_Sketch*, %struct.SK_Stroke*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sk_detectMergeGesture(%struct.bContext* %C, %struct.SK_Gesture* %gest, %struct.SK_Sketch* %UNUSED_sketch) #0 !dbg !3185 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %gest.addr = alloca %struct.SK_Gesture*, align 8
  %UNUSED_sketch.addr = alloca %struct.SK_Sketch*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %start_val = alloca [2 x i16], align 2
  %end_val = alloca [2 x i16], align 2
  %dist = alloca i16, align 2
  %isect = alloca %struct.SK_Intersection*, align 8
  %start_index = alloca i32, align 4
  %end_index = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3186, metadata !DIExpression()), !dbg !3187
  store %struct.SK_Gesture* %gest, %struct.SK_Gesture** %gest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Gesture** %gest.addr, metadata !3188, metadata !DIExpression()), !dbg !3189
  store %struct.SK_Sketch* %UNUSED_sketch, %struct.SK_Sketch** %UNUSED_sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %UNUSED_sketch.addr, metadata !3190, metadata !DIExpression()), !dbg !3191
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !3192, metadata !DIExpression()), !dbg !3396
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3397
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !3398
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !3396
  %1 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3399
  %nb_segments = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %1, i32 0, i32 6, !dbg !3401
  %2 = load i32, i32* %nb_segments, align 8, !dbg !3401
  %cmp = icmp sgt i32 %2, 2, !dbg !3402
  br i1 %cmp, label %land.lhs.true, label %if.end153, !dbg !3403

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3404
  %nb_intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %3, i32 0, i32 5, !dbg !3405
  %4 = load i32, i32* %nb_intersections, align 4, !dbg !3405
  %cmp1 = icmp eq i32 %4, 2, !dbg !3406
  br i1 %cmp1, label %if.then, label %if.end153, !dbg !3407

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [2 x i16]* %start_val, metadata !3408, metadata !DIExpression()), !dbg !3410
  call void @llvm.dbg.declare(metadata [2 x i16]* %end_val, metadata !3411, metadata !DIExpression()), !dbg !3412
  call void @llvm.dbg.declare(metadata i16* %dist, metadata !3413, metadata !DIExpression()), !dbg !3414
  %5 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3415
  %6 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3417
  %stk = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %6, i32 0, i32 0, !dbg !3418
  %7 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !3418
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %7, i32 0, i32 2, !dbg !3419
  %8 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !3419
  %arrayidx = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %8, i64 0, !dbg !3417
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx, i32 0, i32 0, !dbg !3420
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3417
  %arraydecay2 = getelementptr inbounds [2 x i16], [2 x i16]* %start_val, i64 0, i64 0, !dbg !3421
  %call3 = call i32 @ED_view3d_project_short_global(%struct.ARegion* %5, float* %arraydecay, i16* %arraydecay2, i32 0), !dbg !3422
  %cmp4 = icmp eq i32 %call3, 0, !dbg !3423
  br i1 %cmp4, label %land.lhs.true5, label %if.end152, !dbg !3424

land.lhs.true5:                                   ; preds = %if.then
  %9 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3425
  %10 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3426
  %stk6 = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %10, i32 0, i32 0, !dbg !3427
  %11 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk6, align 8, !dbg !3427
  %call7 = call %struct.SK_Point* @sk_lastStrokePoint(%struct.SK_Stroke* %11), !dbg !3428
  %p8 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %call7, i32 0, i32 0, !dbg !3429
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %p8, i64 0, i64 0, !dbg !3428
  %arraydecay10 = getelementptr inbounds [2 x i16], [2 x i16]* %end_val, i64 0, i64 0, !dbg !3430
  %call11 = call i32 @ED_view3d_project_short_global(%struct.ARegion* %9, float* %arraydecay9, i16* %arraydecay10, i32 0), !dbg !3431
  %cmp12 = icmp eq i32 %call11, 0, !dbg !3432
  br i1 %cmp12, label %if.then13, label %if.end152, !dbg !3433

if.then13:                                        ; preds = %land.lhs.true5
  %arrayidx14 = getelementptr inbounds [2 x i16], [2 x i16]* %start_val, i64 0, i64 0, !dbg !3434
  %12 = load i16, i16* %arrayidx14, align 2, !dbg !3434
  %conv = sext i16 %12 to i32, !dbg !3434
  %arrayidx15 = getelementptr inbounds [2 x i16], [2 x i16]* %end_val, i64 0, i64 0, !dbg !3434
  %13 = load i16, i16* %arrayidx15, align 2, !dbg !3434
  %conv16 = sext i16 %13 to i32, !dbg !3434
  %sub = sub nsw i32 %conv, %conv16, !dbg !3434
  %cmp17 = icmp slt i32 %sub, 0, !dbg !3434
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !3434

cond.true:                                        ; preds = %if.then13
  %arrayidx19 = getelementptr inbounds [2 x i16], [2 x i16]* %start_val, i64 0, i64 0, !dbg !3434
  %14 = load i16, i16* %arrayidx19, align 2, !dbg !3434
  %conv20 = sext i16 %14 to i32, !dbg !3434
  %arrayidx21 = getelementptr inbounds [2 x i16], [2 x i16]* %end_val, i64 0, i64 0, !dbg !3434
  %15 = load i16, i16* %arrayidx21, align 2, !dbg !3434
  %conv22 = sext i16 %15 to i32, !dbg !3434
  %sub23 = sub nsw i32 %conv20, %conv22, !dbg !3434
  %sub24 = sub nsw i32 0, %sub23, !dbg !3434
  br label %cond.end, !dbg !3434

cond.false:                                       ; preds = %if.then13
  %arrayidx25 = getelementptr inbounds [2 x i16], [2 x i16]* %start_val, i64 0, i64 0, !dbg !3434
  %16 = load i16, i16* %arrayidx25, align 2, !dbg !3434
  %conv26 = sext i16 %16 to i32, !dbg !3434
  %arrayidx27 = getelementptr inbounds [2 x i16], [2 x i16]* %end_val, i64 0, i64 0, !dbg !3434
  %17 = load i16, i16* %arrayidx27, align 2, !dbg !3434
  %conv28 = sext i16 %17 to i32, !dbg !3434
  %sub29 = sub nsw i32 %conv26, %conv28, !dbg !3434
  br label %cond.end, !dbg !3434

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub24, %cond.true ], [ %sub29, %cond.false ], !dbg !3434
  %arrayidx30 = getelementptr inbounds [2 x i16], [2 x i16]* %start_val, i64 0, i64 1, !dbg !3434
  %18 = load i16, i16* %arrayidx30, align 2, !dbg !3434
  %conv31 = sext i16 %18 to i32, !dbg !3434
  %arrayidx32 = getelementptr inbounds [2 x i16], [2 x i16]* %end_val, i64 0, i64 1, !dbg !3434
  %19 = load i16, i16* %arrayidx32, align 2, !dbg !3434
  %conv33 = sext i16 %19 to i32, !dbg !3434
  %sub34 = sub nsw i32 %conv31, %conv33, !dbg !3434
  %cmp35 = icmp slt i32 %sub34, 0, !dbg !3434
  br i1 %cmp35, label %cond.true37, label %cond.false44, !dbg !3434

cond.true37:                                      ; preds = %cond.end
  %arrayidx38 = getelementptr inbounds [2 x i16], [2 x i16]* %start_val, i64 0, i64 1, !dbg !3434
  %20 = load i16, i16* %arrayidx38, align 2, !dbg !3434
  %conv39 = sext i16 %20 to i32, !dbg !3434
  %arrayidx40 = getelementptr inbounds [2 x i16], [2 x i16]* %end_val, i64 0, i64 1, !dbg !3434
  %21 = load i16, i16* %arrayidx40, align 2, !dbg !3434
  %conv41 = sext i16 %21 to i32, !dbg !3434
  %sub42 = sub nsw i32 %conv39, %conv41, !dbg !3434
  %sub43 = sub nsw i32 0, %sub42, !dbg !3434
  br label %cond.end50, !dbg !3434

cond.false44:                                     ; preds = %cond.end
  %arrayidx45 = getelementptr inbounds [2 x i16], [2 x i16]* %start_val, i64 0, i64 1, !dbg !3434
  %22 = load i16, i16* %arrayidx45, align 2, !dbg !3434
  %conv46 = sext i16 %22 to i32, !dbg !3434
  %arrayidx47 = getelementptr inbounds [2 x i16], [2 x i16]* %end_val, i64 0, i64 1, !dbg !3434
  %23 = load i16, i16* %arrayidx47, align 2, !dbg !3434
  %conv48 = sext i16 %23 to i32, !dbg !3434
  %sub49 = sub nsw i32 %conv46, %conv48, !dbg !3434
  br label %cond.end50, !dbg !3434

cond.end50:                                       ; preds = %cond.false44, %cond.true37
  %cond51 = phi i32 [ %sub43, %cond.true37 ], [ %sub49, %cond.false44 ], !dbg !3434
  %cmp52 = icmp sgt i32 %cond, %cond51, !dbg !3434
  br i1 %cmp52, label %cond.true54, label %cond.false77, !dbg !3434

cond.true54:                                      ; preds = %cond.end50
  %arrayidx55 = getelementptr inbounds [2 x i16], [2 x i16]* %start_val, i64 0, i64 0, !dbg !3434
  %24 = load i16, i16* %arrayidx55, align 2, !dbg !3434
  %conv56 = sext i16 %24 to i32, !dbg !3434
  %arrayidx57 = getelementptr inbounds [2 x i16], [2 x i16]* %end_val, i64 0, i64 0, !dbg !3434
  %25 = load i16, i16* %arrayidx57, align 2, !dbg !3434
  %conv58 = sext i16 %25 to i32, !dbg !3434
  %sub59 = sub nsw i32 %conv56, %conv58, !dbg !3434
  %cmp60 = icmp slt i32 %sub59, 0, !dbg !3434
  br i1 %cmp60, label %cond.true62, label %cond.false69, !dbg !3434

cond.true62:                                      ; preds = %cond.true54
  %arrayidx63 = getelementptr inbounds [2 x i16], [2 x i16]* %start_val, i64 0, i64 0, !dbg !3434
  %26 = load i16, i16* %arrayidx63, align 2, !dbg !3434
  %conv64 = sext i16 %26 to i32, !dbg !3434
  %arrayidx65 = getelementptr inbounds [2 x i16], [2 x i16]* %end_val, i64 0, i64 0, !dbg !3434
  %27 = load i16, i16* %arrayidx65, align 2, !dbg !3434
  %conv66 = sext i16 %27 to i32, !dbg !3434
  %sub67 = sub nsw i32 %conv64, %conv66, !dbg !3434
  %sub68 = sub nsw i32 0, %sub67, !dbg !3434
  br label %cond.end75, !dbg !3434

cond.false69:                                     ; preds = %cond.true54
  %arrayidx70 = getelementptr inbounds [2 x i16], [2 x i16]* %start_val, i64 0, i64 0, !dbg !3434
  %28 = load i16, i16* %arrayidx70, align 2, !dbg !3434
  %conv71 = sext i16 %28 to i32, !dbg !3434
  %arrayidx72 = getelementptr inbounds [2 x i16], [2 x i16]* %end_val, i64 0, i64 0, !dbg !3434
  %29 = load i16, i16* %arrayidx72, align 2, !dbg !3434
  %conv73 = sext i16 %29 to i32, !dbg !3434
  %sub74 = sub nsw i32 %conv71, %conv73, !dbg !3434
  br label %cond.end75, !dbg !3434

cond.end75:                                       ; preds = %cond.false69, %cond.true62
  %cond76 = phi i32 [ %sub68, %cond.true62 ], [ %sub74, %cond.false69 ], !dbg !3434
  br label %cond.end100, !dbg !3434

cond.false77:                                     ; preds = %cond.end50
  %arrayidx78 = getelementptr inbounds [2 x i16], [2 x i16]* %start_val, i64 0, i64 1, !dbg !3434
  %30 = load i16, i16* %arrayidx78, align 2, !dbg !3434
  %conv79 = sext i16 %30 to i32, !dbg !3434
  %arrayidx80 = getelementptr inbounds [2 x i16], [2 x i16]* %end_val, i64 0, i64 1, !dbg !3434
  %31 = load i16, i16* %arrayidx80, align 2, !dbg !3434
  %conv81 = sext i16 %31 to i32, !dbg !3434
  %sub82 = sub nsw i32 %conv79, %conv81, !dbg !3434
  %cmp83 = icmp slt i32 %sub82, 0, !dbg !3434
  br i1 %cmp83, label %cond.true85, label %cond.false92, !dbg !3434

cond.true85:                                      ; preds = %cond.false77
  %arrayidx86 = getelementptr inbounds [2 x i16], [2 x i16]* %start_val, i64 0, i64 1, !dbg !3434
  %32 = load i16, i16* %arrayidx86, align 2, !dbg !3434
  %conv87 = sext i16 %32 to i32, !dbg !3434
  %arrayidx88 = getelementptr inbounds [2 x i16], [2 x i16]* %end_val, i64 0, i64 1, !dbg !3434
  %33 = load i16, i16* %arrayidx88, align 2, !dbg !3434
  %conv89 = sext i16 %33 to i32, !dbg !3434
  %sub90 = sub nsw i32 %conv87, %conv89, !dbg !3434
  %sub91 = sub nsw i32 0, %sub90, !dbg !3434
  br label %cond.end98, !dbg !3434

cond.false92:                                     ; preds = %cond.false77
  %arrayidx93 = getelementptr inbounds [2 x i16], [2 x i16]* %start_val, i64 0, i64 1, !dbg !3434
  %34 = load i16, i16* %arrayidx93, align 2, !dbg !3434
  %conv94 = sext i16 %34 to i32, !dbg !3434
  %arrayidx95 = getelementptr inbounds [2 x i16], [2 x i16]* %end_val, i64 0, i64 1, !dbg !3434
  %35 = load i16, i16* %arrayidx95, align 2, !dbg !3434
  %conv96 = sext i16 %35 to i32, !dbg !3434
  %sub97 = sub nsw i32 %conv94, %conv96, !dbg !3434
  br label %cond.end98, !dbg !3434

cond.end98:                                       ; preds = %cond.false92, %cond.true85
  %cond99 = phi i32 [ %sub91, %cond.true85 ], [ %sub97, %cond.false92 ], !dbg !3434
  br label %cond.end100, !dbg !3434

cond.end100:                                      ; preds = %cond.end98, %cond.end75
  %cond101 = phi i32 [ %cond76, %cond.end75 ], [ %cond99, %cond.end98 ], !dbg !3434
  %conv102 = trunc i32 %cond101 to i16, !dbg !3434
  store i16 %conv102, i16* %dist, align 2, !dbg !3436
  %36 = load i16, i16* %dist, align 2, !dbg !3437
  %conv103 = sext i16 %36 to i32, !dbg !3437
  %cmp104 = icmp sle i32 %conv103, 20, !dbg !3439
  br i1 %cmp104, label %if.then106, label %if.end151, !dbg !3440

if.then106:                                       ; preds = %cond.end100
  call void @llvm.dbg.declare(metadata %struct.SK_Intersection** %isect, metadata !3441, metadata !DIExpression()), !dbg !3443
  %37 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3444
  %intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %37, i32 0, i32 2, !dbg !3446
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %intersections, i32 0, i32 0, !dbg !3447
  %38 = load i8*, i8** %first, align 8, !dbg !3447
  %39 = bitcast i8* %38 to %struct.SK_Intersection*, !dbg !3444
  store %struct.SK_Intersection* %39, %struct.SK_Intersection** %isect, align 8, !dbg !3448
  br label %for.cond, !dbg !3449

for.cond:                                         ; preds = %for.inc148, %if.then106
  %40 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3450
  %tobool = icmp ne %struct.SK_Intersection* %40, null, !dbg !3452
  br i1 %tobool, label %for.body, label %for.end150, !dbg !3452

for.body:                                         ; preds = %for.cond
  %41 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3453
  %next = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %41, i32 0, i32 0, !dbg !3456
  %42 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next, align 8, !dbg !3456
  %tobool107 = icmp ne %struct.SK_Intersection* %42, null, !dbg !3453
  br i1 %tobool107, label %land.lhs.true108, label %if.end147, !dbg !3457

land.lhs.true108:                                 ; preds = %for.body
  %43 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3458
  %next109 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %43, i32 0, i32 0, !dbg !3459
  %44 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next109, align 8, !dbg !3459
  %stroke = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %44, i32 0, i32 2, !dbg !3460
  %45 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke, align 8, !dbg !3460
  %46 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3461
  %stroke110 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %46, i32 0, i32 2, !dbg !3462
  %47 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke110, align 8, !dbg !3462
  %cmp111 = icmp eq %struct.SK_Stroke* %45, %47, !dbg !3463
  br i1 %cmp111, label %if.then113, label %if.end147, !dbg !3464

if.then113:                                       ; preds = %land.lhs.true108
  call void @llvm.dbg.declare(metadata i32* %start_index, metadata !3465, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.declare(metadata i32* %end_index, metadata !3468, metadata !DIExpression()), !dbg !3469
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3470, metadata !DIExpression()), !dbg !3471
  %48 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3472
  %after = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %48, i32 0, i32 4, !dbg !3472
  %49 = load i32, i32* %after, align 4, !dbg !3472
  %50 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3472
  %next114 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %50, i32 0, i32 0, !dbg !3472
  %51 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next114, align 8, !dbg !3472
  %after115 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %51, i32 0, i32 4, !dbg !3472
  %52 = load i32, i32* %after115, align 4, !dbg !3472
  %cmp116 = icmp slt i32 %49, %52, !dbg !3472
  br i1 %cmp116, label %cond.true118, label %cond.false120, !dbg !3472

cond.true118:                                     ; preds = %if.then113
  %53 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3472
  %after119 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %53, i32 0, i32 4, !dbg !3472
  %54 = load i32, i32* %after119, align 4, !dbg !3472
  br label %cond.end123, !dbg !3472

cond.false120:                                    ; preds = %if.then113
  %55 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3472
  %next121 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %55, i32 0, i32 0, !dbg !3472
  %56 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next121, align 8, !dbg !3472
  %after122 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %56, i32 0, i32 4, !dbg !3472
  %57 = load i32, i32* %after122, align 4, !dbg !3472
  br label %cond.end123, !dbg !3472

cond.end123:                                      ; preds = %cond.false120, %cond.true118
  %cond124 = phi i32 [ %54, %cond.true118 ], [ %57, %cond.false120 ], !dbg !3472
  store i32 %cond124, i32* %start_index, align 4, !dbg !3473
  %58 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3474
  %before = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %58, i32 0, i32 3, !dbg !3474
  %59 = load i32, i32* %before, align 8, !dbg !3474
  %60 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3474
  %next125 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %60, i32 0, i32 0, !dbg !3474
  %61 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next125, align 8, !dbg !3474
  %before126 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %61, i32 0, i32 3, !dbg !3474
  %62 = load i32, i32* %before126, align 8, !dbg !3474
  %cmp127 = icmp sgt i32 %59, %62, !dbg !3474
  br i1 %cmp127, label %cond.true129, label %cond.false131, !dbg !3474

cond.true129:                                     ; preds = %cond.end123
  %63 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3474
  %before130 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %63, i32 0, i32 3, !dbg !3474
  %64 = load i32, i32* %before130, align 8, !dbg !3474
  br label %cond.end134, !dbg !3474

cond.false131:                                    ; preds = %cond.end123
  %65 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3474
  %next132 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %65, i32 0, i32 0, !dbg !3474
  %66 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next132, align 8, !dbg !3474
  %before133 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %66, i32 0, i32 3, !dbg !3474
  %67 = load i32, i32* %before133, align 8, !dbg !3474
  br label %cond.end134, !dbg !3474

cond.end134:                                      ; preds = %cond.false131, %cond.true129
  %cond135 = phi i32 [ %64, %cond.true129 ], [ %67, %cond.false131 ], !dbg !3474
  store i32 %cond135, i32* %end_index, align 4, !dbg !3475
  %68 = load i32, i32* %start_index, align 4, !dbg !3476
  store i32 %68, i32* %i, align 4, !dbg !3478
  br label %for.cond136, !dbg !3479

for.cond136:                                      ; preds = %for.inc, %cond.end134
  %69 = load i32, i32* %i, align 4, !dbg !3480
  %70 = load i32, i32* %end_index, align 4, !dbg !3482
  %cmp137 = icmp sle i32 %69, %70, !dbg !3483
  br i1 %cmp137, label %for.body139, label %for.end, !dbg !3484

for.body139:                                      ; preds = %for.cond136
  %71 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3485
  %stroke140 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %71, i32 0, i32 2, !dbg !3488
  %72 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke140, align 8, !dbg !3488
  %points141 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %72, i32 0, i32 2, !dbg !3489
  %73 = load %struct.SK_Point*, %struct.SK_Point** %points141, align 8, !dbg !3489
  %74 = load i32, i32* %i, align 4, !dbg !3490
  %idxprom = sext i32 %74 to i64, !dbg !3485
  %arrayidx142 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %73, i64 %idxprom, !dbg !3485
  %type = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx142, i32 0, i32 4, !dbg !3491
  %75 = load i32, i32* %type, align 4, !dbg !3491
  %cmp143 = icmp eq i32 %75, 1, !dbg !3492
  br i1 %cmp143, label %if.then145, label %if.end, !dbg !3493

if.then145:                                       ; preds = %for.body139
  store i32 1, i32* %retval, align 4, !dbg !3494
  br label %return, !dbg !3494

if.end:                                           ; preds = %for.body139
  br label %for.inc, !dbg !3496

for.inc:                                          ; preds = %if.end
  %76 = load i32, i32* %i, align 4, !dbg !3497
  %inc = add nsw i32 %76, 1, !dbg !3497
  store i32 %inc, i32* %i, align 4, !dbg !3497
  br label %for.cond136, !dbg !3498, !llvm.loop !3499

for.end:                                          ; preds = %for.cond136
  %77 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3501
  %next146 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %77, i32 0, i32 0, !dbg !3502
  %78 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next146, align 8, !dbg !3502
  store %struct.SK_Intersection* %78, %struct.SK_Intersection** %isect, align 8, !dbg !3503
  br label %if.end147, !dbg !3504

if.end147:                                        ; preds = %for.end, %land.lhs.true108, %for.body
  br label %for.inc148, !dbg !3505

for.inc148:                                       ; preds = %if.end147
  %79 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3506
  %next149 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %79, i32 0, i32 0, !dbg !3507
  %80 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next149, align 8, !dbg !3507
  store %struct.SK_Intersection* %80, %struct.SK_Intersection** %isect, align 8, !dbg !3508
  br label %for.cond, !dbg !3509, !llvm.loop !3510

for.end150:                                       ; preds = %for.cond
  br label %if.end151, !dbg !3512

if.end151:                                        ; preds = %for.end150, %cond.end100
  br label %if.end152, !dbg !3513

if.end152:                                        ; preds = %if.end151, %land.lhs.true5, %if.then
  br label %if.end153, !dbg !3514

if.end153:                                        ; preds = %if.end152, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !3515
  br label %return, !dbg !3515

return:                                           ; preds = %if.end153, %if.then145
  %81 = load i32, i32* %retval, align 4, !dbg !3516
  ret i32 %81, !dbg !3516
}

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #2

declare dso_local i32 @ED_view3d_project_short_global(%struct.ARegion*, float*, i16*, i32) #2

declare dso_local %struct.SK_Point* @sk_lastStrokePoint(%struct.SK_Stroke*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @sk_applyMergeGesture(%struct.bContext* %UNUSED_C, %struct.SK_Gesture* %gest, %struct.SK_Sketch* %UNUSED_sketch) #0 !dbg !3517 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %gest.addr = alloca %struct.SK_Gesture*, align 8
  %UNUSED_sketch.addr = alloca %struct.SK_Sketch*, align 8
  %isect = alloca %struct.SK_Intersection*, align 8
  %start_index = alloca i32, align 4
  %end_index = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !3518, metadata !DIExpression()), !dbg !3519
  store %struct.SK_Gesture* %gest, %struct.SK_Gesture** %gest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Gesture** %gest.addr, metadata !3520, metadata !DIExpression()), !dbg !3521
  store %struct.SK_Sketch* %UNUSED_sketch, %struct.SK_Sketch** %UNUSED_sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %UNUSED_sketch.addr, metadata !3522, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.declare(metadata %struct.SK_Intersection** %isect, metadata !3524, metadata !DIExpression()), !dbg !3525
  %0 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3526
  %intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %0, i32 0, i32 2, !dbg !3528
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %intersections, i32 0, i32 0, !dbg !3529
  %1 = load i8*, i8** %first, align 8, !dbg !3529
  %2 = bitcast i8* %1 to %struct.SK_Intersection*, !dbg !3526
  store %struct.SK_Intersection* %2, %struct.SK_Intersection** %isect, align 8, !dbg !3530
  br label %for.cond, !dbg !3531

for.cond:                                         ; preds = %for.inc33, %entry
  %3 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3532
  %tobool = icmp ne %struct.SK_Intersection* %3, null, !dbg !3534
  br i1 %tobool, label %for.body, label %for.end35, !dbg !3534

for.body:                                         ; preds = %for.cond
  %4 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3535
  %next = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %4, i32 0, i32 0, !dbg !3538
  %5 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next, align 8, !dbg !3538
  %tobool1 = icmp ne %struct.SK_Intersection* %5, null, !dbg !3535
  br i1 %tobool1, label %land.lhs.true, label %if.end32, !dbg !3539

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3540
  %next2 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %6, i32 0, i32 0, !dbg !3541
  %7 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next2, align 8, !dbg !3541
  %stroke = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %7, i32 0, i32 2, !dbg !3542
  %8 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke, align 8, !dbg !3542
  %9 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3543
  %stroke3 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %9, i32 0, i32 2, !dbg !3544
  %10 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke3, align 8, !dbg !3544
  %cmp = icmp eq %struct.SK_Stroke* %8, %10, !dbg !3545
  br i1 %cmp, label %if.then, label %if.end32, !dbg !3546

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %start_index, metadata !3547, metadata !DIExpression()), !dbg !3549
  call void @llvm.dbg.declare(metadata i32* %end_index, metadata !3550, metadata !DIExpression()), !dbg !3551
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3552, metadata !DIExpression()), !dbg !3553
  %11 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3554
  %after = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %11, i32 0, i32 4, !dbg !3554
  %12 = load i32, i32* %after, align 4, !dbg !3554
  %13 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3554
  %next4 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %13, i32 0, i32 0, !dbg !3554
  %14 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next4, align 8, !dbg !3554
  %after5 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %14, i32 0, i32 4, !dbg !3554
  %15 = load i32, i32* %after5, align 4, !dbg !3554
  %cmp6 = icmp slt i32 %12, %15, !dbg !3554
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !3554

cond.true:                                        ; preds = %if.then
  %16 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3554
  %after7 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %16, i32 0, i32 4, !dbg !3554
  %17 = load i32, i32* %after7, align 4, !dbg !3554
  br label %cond.end, !dbg !3554

cond.false:                                       ; preds = %if.then
  %18 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3554
  %next8 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %18, i32 0, i32 0, !dbg !3554
  %19 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next8, align 8, !dbg !3554
  %after9 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %19, i32 0, i32 4, !dbg !3554
  %20 = load i32, i32* %after9, align 4, !dbg !3554
  br label %cond.end, !dbg !3554

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %17, %cond.true ], [ %20, %cond.false ], !dbg !3554
  store i32 %cond, i32* %start_index, align 4, !dbg !3555
  %21 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3556
  %before = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %21, i32 0, i32 3, !dbg !3556
  %22 = load i32, i32* %before, align 8, !dbg !3556
  %23 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3556
  %next10 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %23, i32 0, i32 0, !dbg !3556
  %24 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next10, align 8, !dbg !3556
  %before11 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %24, i32 0, i32 3, !dbg !3556
  %25 = load i32, i32* %before11, align 8, !dbg !3556
  %cmp12 = icmp sgt i32 %22, %25, !dbg !3556
  br i1 %cmp12, label %cond.true13, label %cond.false15, !dbg !3556

cond.true13:                                      ; preds = %cond.end
  %26 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3556
  %before14 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %26, i32 0, i32 3, !dbg !3556
  %27 = load i32, i32* %before14, align 8, !dbg !3556
  br label %cond.end18, !dbg !3556

cond.false15:                                     ; preds = %cond.end
  %28 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3556
  %next16 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %28, i32 0, i32 0, !dbg !3556
  %29 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next16, align 8, !dbg !3556
  %before17 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %29, i32 0, i32 3, !dbg !3556
  %30 = load i32, i32* %before17, align 8, !dbg !3556
  br label %cond.end18, !dbg !3556

cond.end18:                                       ; preds = %cond.false15, %cond.true13
  %cond19 = phi i32 [ %27, %cond.true13 ], [ %30, %cond.false15 ], !dbg !3556
  store i32 %cond19, i32* %end_index, align 4, !dbg !3557
  %31 = load i32, i32* %start_index, align 4, !dbg !3558
  store i32 %31, i32* %i, align 4, !dbg !3560
  br label %for.cond20, !dbg !3561

for.cond20:                                       ; preds = %for.inc, %cond.end18
  %32 = load i32, i32* %i, align 4, !dbg !3562
  %33 = load i32, i32* %end_index, align 4, !dbg !3564
  %cmp21 = icmp sle i32 %32, %33, !dbg !3565
  br i1 %cmp21, label %for.body22, label %for.end, !dbg !3566

for.body22:                                       ; preds = %for.cond20
  %34 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3567
  %stroke23 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %34, i32 0, i32 2, !dbg !3570
  %35 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke23, align 8, !dbg !3570
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %35, i32 0, i32 2, !dbg !3571
  %36 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !3571
  %37 = load i32, i32* %i, align 4, !dbg !3572
  %idxprom = sext i32 %37 to i64, !dbg !3567
  %arrayidx = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %36, i64 %idxprom, !dbg !3567
  %type = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx, i32 0, i32 4, !dbg !3573
  %38 = load i32, i32* %type, align 4, !dbg !3573
  %cmp24 = icmp eq i32 %38, 1, !dbg !3574
  br i1 %cmp24, label %if.then25, label %if.end, !dbg !3575

if.then25:                                        ; preds = %for.body22
  %39 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3576
  %stroke26 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %39, i32 0, i32 2, !dbg !3578
  %40 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke26, align 8, !dbg !3578
  %points27 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %40, i32 0, i32 2, !dbg !3579
  %41 = load %struct.SK_Point*, %struct.SK_Point** %points27, align 8, !dbg !3579
  %42 = load i32, i32* %i, align 4, !dbg !3580
  %idxprom28 = sext i32 %42 to i64, !dbg !3576
  %arrayidx29 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %41, i64 %idxprom28, !dbg !3576
  %type30 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx29, i32 0, i32 4, !dbg !3581
  store i32 0, i32* %type30, align 4, !dbg !3582
  br label %if.end, !dbg !3583

if.end:                                           ; preds = %if.then25, %for.body22
  br label %for.inc, !dbg !3584

for.inc:                                          ; preds = %if.end
  %43 = load i32, i32* %i, align 4, !dbg !3585
  %inc = add nsw i32 %43, 1, !dbg !3585
  store i32 %inc, i32* %i, align 4, !dbg !3585
  br label %for.cond20, !dbg !3586, !llvm.loop !3587

for.end:                                          ; preds = %for.cond20
  %44 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3589
  %next31 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %44, i32 0, i32 0, !dbg !3590
  %45 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next31, align 8, !dbg !3590
  store %struct.SK_Intersection* %45, %struct.SK_Intersection** %isect, align 8, !dbg !3591
  br label %if.end32, !dbg !3592

if.end32:                                         ; preds = %for.end, %land.lhs.true, %for.body
  br label %for.inc33, !dbg !3593

for.inc33:                                        ; preds = %if.end32
  %46 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3594
  %next34 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %46, i32 0, i32 0, !dbg !3595
  %47 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next34, align 8, !dbg !3595
  store %struct.SK_Intersection* %47, %struct.SK_Intersection** %isect, align 8, !dbg !3596
  br label %for.cond, !dbg !3597, !llvm.loop !3598

for.end35:                                        ; preds = %for.cond
  ret void, !dbg !3600
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sk_detectReverseGesture(%struct.bContext* %UNUSED_C, %struct.SK_Gesture* %gest, %struct.SK_Sketch* %UNUSED_sketch) #0 !dbg !3601 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %gest.addr = alloca %struct.SK_Gesture*, align 8
  %UNUSED_sketch.addr = alloca %struct.SK_Sketch*, align 8
  %isect = alloca %struct.SK_Intersection*, align 8
  %start_v = alloca [3 x float], align 4
  %end_v = alloca [3 x float], align 4
  %angle = alloca float, align 4
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !3602, metadata !DIExpression()), !dbg !3603
  store %struct.SK_Gesture* %gest, %struct.SK_Gesture** %gest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Gesture** %gest.addr, metadata !3604, metadata !DIExpression()), !dbg !3605
  store %struct.SK_Sketch* %UNUSED_sketch, %struct.SK_Sketch** %UNUSED_sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %UNUSED_sketch.addr, metadata !3606, metadata !DIExpression()), !dbg !3607
  %0 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3608
  %nb_segments = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %0, i32 0, i32 6, !dbg !3610
  %1 = load i32, i32* %nb_segments, align 8, !dbg !3610
  %cmp = icmp sgt i32 %1, 2, !dbg !3611
  br i1 %cmp, label %land.lhs.true, label %if.end49, !dbg !3612

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3613
  %nb_intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %2, i32 0, i32 5, !dbg !3614
  %3 = load i32, i32* %nb_intersections, align 4, !dbg !3614
  %cmp1 = icmp eq i32 %3, 2, !dbg !3615
  br i1 %cmp1, label %land.lhs.true2, label %if.end49, !dbg !3616

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3617
  %nb_self_intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %4, i32 0, i32 4, !dbg !3618
  %5 = load i32, i32* %nb_self_intersections, align 8, !dbg !3618
  %cmp3 = icmp eq i32 %5, 0, !dbg !3619
  br i1 %cmp3, label %if.then, label %if.end49, !dbg !3620

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata %struct.SK_Intersection** %isect, metadata !3621, metadata !DIExpression()), !dbg !3623
  %6 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3624
  %intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %6, i32 0, i32 2, !dbg !3626
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %intersections, i32 0, i32 0, !dbg !3627
  %7 = load i8*, i8** %first, align 8, !dbg !3627
  %8 = bitcast i8* %7 to %struct.SK_Intersection*, !dbg !3624
  store %struct.SK_Intersection* %8, %struct.SK_Intersection** %isect, align 8, !dbg !3628
  br label %for.cond, !dbg !3629

for.cond:                                         ; preds = %for.inc, %if.then
  %9 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3630
  %tobool = icmp ne %struct.SK_Intersection* %9, null, !dbg !3632
  br i1 %tobool, label %for.body, label %for.end, !dbg !3632

for.body:                                         ; preds = %for.cond
  %10 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3633
  %next = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %10, i32 0, i32 0, !dbg !3636
  %11 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next, align 8, !dbg !3636
  %tobool4 = icmp ne %struct.SK_Intersection* %11, null, !dbg !3633
  br i1 %tobool4, label %land.lhs.true5, label %if.end47, !dbg !3637

land.lhs.true5:                                   ; preds = %for.body
  %12 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3638
  %next6 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %12, i32 0, i32 0, !dbg !3639
  %13 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next6, align 8, !dbg !3639
  %stroke = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %13, i32 0, i32 2, !dbg !3640
  %14 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke, align 8, !dbg !3640
  %15 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3641
  %stroke7 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %15, i32 0, i32 2, !dbg !3642
  %16 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke7, align 8, !dbg !3642
  %cmp8 = icmp eq %struct.SK_Stroke* %14, %16, !dbg !3643
  br i1 %cmp8, label %if.then9, label %if.end47, !dbg !3644

if.then9:                                         ; preds = %land.lhs.true5
  call void @llvm.dbg.declare(metadata [3 x float]* %start_v, metadata !3645, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.declare(metadata [3 x float]* %end_v, metadata !3648, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.declare(metadata float* %angle, metadata !3650, metadata !DIExpression()), !dbg !3651
  %17 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3652
  %gesture_index = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %17, i32 0, i32 5, !dbg !3654
  %18 = load i32, i32* %gesture_index, align 8, !dbg !3654
  %19 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3655
  %next10 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %19, i32 0, i32 0, !dbg !3656
  %20 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next10, align 8, !dbg !3656
  %gesture_index11 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %20, i32 0, i32 5, !dbg !3657
  %21 = load i32, i32* %gesture_index11, align 8, !dbg !3657
  %cmp12 = icmp slt i32 %18, %21, !dbg !3658
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !3659

if.then13:                                        ; preds = %if.then9
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %start_v, i64 0, i64 0, !dbg !3660
  %22 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3662
  %p = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %22, i32 0, i32 6, !dbg !3663
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !3662
  %23 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3664
  %stk = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %23, i32 0, i32 0, !dbg !3665
  %24 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !3665
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %24, i32 0, i32 2, !dbg !3666
  %25 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !3666
  %arrayidx = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %25, i64 0, !dbg !3664
  %p15 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx, i32 0, i32 0, !dbg !3667
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %p15, i64 0, i64 0, !dbg !3664
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay14, float* %arraydecay16), !dbg !3668
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %end_v, i64 0, i64 0, !dbg !3669
  %26 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3670
  %stk18 = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %26, i32 0, i32 0, !dbg !3671
  %27 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk18, align 8, !dbg !3671
  %call = call %struct.SK_Point* @sk_lastStrokePoint(%struct.SK_Stroke* %27), !dbg !3672
  %p19 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %call, i32 0, i32 0, !dbg !3673
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %p19, i64 0, i64 0, !dbg !3672
  %28 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3674
  %next21 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %28, i32 0, i32 0, !dbg !3675
  %29 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next21, align 8, !dbg !3675
  %p22 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %29, i32 0, i32 6, !dbg !3676
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %p22, i64 0, i64 0, !dbg !3674
  call void @sub_v3_v3v3(float* %arraydecay17, float* %arraydecay20, float* %arraydecay23), !dbg !3677
  br label %if.end, !dbg !3678

if.else:                                          ; preds = %if.then9
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %start_v, i64 0, i64 0, !dbg !3679
  %30 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3681
  %next25 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %30, i32 0, i32 0, !dbg !3682
  %31 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next25, align 8, !dbg !3682
  %p26 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %31, i32 0, i32 6, !dbg !3683
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %p26, i64 0, i64 0, !dbg !3681
  %32 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3684
  %stk28 = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %32, i32 0, i32 0, !dbg !3685
  %33 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk28, align 8, !dbg !3685
  %points29 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %33, i32 0, i32 2, !dbg !3686
  %34 = load %struct.SK_Point*, %struct.SK_Point** %points29, align 8, !dbg !3686
  %arrayidx30 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %34, i64 0, !dbg !3684
  %p31 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx30, i32 0, i32 0, !dbg !3687
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %p31, i64 0, i64 0, !dbg !3684
  call void @sub_v3_v3v3(float* %arraydecay24, float* %arraydecay27, float* %arraydecay32), !dbg !3688
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %end_v, i64 0, i64 0, !dbg !3689
  %35 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3690
  %stk34 = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %35, i32 0, i32 0, !dbg !3691
  %36 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk34, align 8, !dbg !3691
  %call35 = call %struct.SK_Point* @sk_lastStrokePoint(%struct.SK_Stroke* %36), !dbg !3692
  %p36 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %call35, i32 0, i32 0, !dbg !3693
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %p36, i64 0, i64 0, !dbg !3692
  %37 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3694
  %p38 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %37, i32 0, i32 6, !dbg !3695
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %p38, i64 0, i64 0, !dbg !3694
  call void @sub_v3_v3v3(float* %arraydecay33, float* %arraydecay37, float* %arraydecay39), !dbg !3696
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then13
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %start_v, i64 0, i64 0, !dbg !3697
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %end_v, i64 0, i64 0, !dbg !3697
  %call42 = call float @angle_v2v2(float* %arraydecay40, float* %arraydecay41), !dbg !3697
  %mul = fmul float %call42, 0x404CA5DC20000000, !dbg !3697
  store float %mul, float* %angle, align 4, !dbg !3698
  %38 = load float, float* %angle, align 4, !dbg !3699
  %cmp43 = fcmp ogt float %38, 1.200000e+02, !dbg !3701
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !3702

if.then44:                                        ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !3703
  br label %return, !dbg !3703

if.end45:                                         ; preds = %if.end
  %39 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3705
  %next46 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %39, i32 0, i32 0, !dbg !3706
  %40 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next46, align 8, !dbg !3706
  store %struct.SK_Intersection* %40, %struct.SK_Intersection** %isect, align 8, !dbg !3707
  br label %if.end47, !dbg !3708

if.end47:                                         ; preds = %if.end45, %land.lhs.true5, %for.body
  br label %for.inc, !dbg !3709

for.inc:                                          ; preds = %if.end47
  %41 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3710
  %next48 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %41, i32 0, i32 0, !dbg !3711
  %42 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next48, align 8, !dbg !3711
  store %struct.SK_Intersection* %42, %struct.SK_Intersection** %isect, align 8, !dbg !3712
  br label %for.cond, !dbg !3713, !llvm.loop !3714

for.end:                                          ; preds = %for.cond
  br label %if.end49, !dbg !3716

if.end49:                                         ; preds = %for.end, %land.lhs.true2, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !3717
  br label %return, !dbg !3717

return:                                           ; preds = %if.end49, %if.then44
  %43 = load i32, i32* %retval, align 4, !dbg !3718
  ret i32 %43, !dbg !3718
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sk_applyReverseGesture(%struct.bContext* %UNUSED_C, %struct.SK_Gesture* %gest, %struct.SK_Sketch* %UNUSED_sketch) #0 !dbg !3719 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %gest.addr = alloca %struct.SK_Gesture*, align 8
  %UNUSED_sketch.addr = alloca %struct.SK_Sketch*, align 8
  %isect = alloca %struct.SK_Intersection*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !3720, metadata !DIExpression()), !dbg !3721
  store %struct.SK_Gesture* %gest, %struct.SK_Gesture** %gest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Gesture** %gest.addr, metadata !3722, metadata !DIExpression()), !dbg !3723
  store %struct.SK_Sketch* %UNUSED_sketch, %struct.SK_Sketch** %UNUSED_sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %UNUSED_sketch.addr, metadata !3724, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.declare(metadata %struct.SK_Intersection** %isect, metadata !3726, metadata !DIExpression()), !dbg !3727
  %0 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3728
  %intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %0, i32 0, i32 2, !dbg !3730
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %intersections, i32 0, i32 0, !dbg !3731
  %1 = load i8*, i8** %first, align 8, !dbg !3731
  %2 = bitcast i8* %1 to %struct.SK_Intersection*, !dbg !3728
  store %struct.SK_Intersection* %2, %struct.SK_Intersection** %isect, align 8, !dbg !3732
  br label %for.cond, !dbg !3733

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3734
  %tobool = icmp ne %struct.SK_Intersection* %3, null, !dbg !3736
  br i1 %tobool, label %for.body, label %for.end, !dbg !3736

for.body:                                         ; preds = %for.cond
  %4 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3737
  %next = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %4, i32 0, i32 0, !dbg !3740
  %5 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next, align 8, !dbg !3740
  %tobool1 = icmp ne %struct.SK_Intersection* %5, null, !dbg !3737
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !3741

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3742
  %next2 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %6, i32 0, i32 0, !dbg !3743
  %7 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next2, align 8, !dbg !3743
  %stroke = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %7, i32 0, i32 2, !dbg !3744
  %8 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke, align 8, !dbg !3744
  %9 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3745
  %stroke3 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %9, i32 0, i32 2, !dbg !3746
  %10 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke3, align 8, !dbg !3746
  %cmp = icmp eq %struct.SK_Stroke* %8, %10, !dbg !3747
  br i1 %cmp, label %if.then, label %if.end, !dbg !3748

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3749
  %stroke4 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %11, i32 0, i32 2, !dbg !3751
  %12 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke4, align 8, !dbg !3751
  call void @sk_reverseStroke(%struct.SK_Stroke* %12), !dbg !3752
  %13 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3753
  %next5 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %13, i32 0, i32 0, !dbg !3754
  %14 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next5, align 8, !dbg !3754
  store %struct.SK_Intersection* %14, %struct.SK_Intersection** %isect, align 8, !dbg !3755
  br label %if.end, !dbg !3756

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !3757

for.inc:                                          ; preds = %if.end
  %15 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !3758
  %next6 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %15, i32 0, i32 0, !dbg !3759
  %16 = load %struct.SK_Intersection*, %struct.SK_Intersection** %next6, align 8, !dbg !3759
  store %struct.SK_Intersection* %16, %struct.SK_Intersection** %isect, align 8, !dbg !3760
  br label %for.cond, !dbg !3761, !llvm.loop !3762

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3764
}

declare dso_local void @sk_reverseStroke(%struct.SK_Stroke*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sk_detectConvertGesture(%struct.bContext* %UNUSED_C, %struct.SK_Gesture* %gest, %struct.SK_Sketch* %UNUSED_sketch) #0 !dbg !3765 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %gest.addr = alloca %struct.SK_Gesture*, align 8
  %UNUSED_sketch.addr = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !3766, metadata !DIExpression()), !dbg !3767
  store %struct.SK_Gesture* %gest, %struct.SK_Gesture** %gest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Gesture** %gest.addr, metadata !3768, metadata !DIExpression()), !dbg !3769
  store %struct.SK_Sketch* %UNUSED_sketch, %struct.SK_Sketch** %UNUSED_sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %UNUSED_sketch.addr, metadata !3770, metadata !DIExpression()), !dbg !3771
  %0 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3772
  %nb_segments = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %0, i32 0, i32 6, !dbg !3774
  %1 = load i32, i32* %nb_segments, align 8, !dbg !3774
  %cmp = icmp eq i32 %1, 3, !dbg !3775
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3776

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !3777
  %nb_self_intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %2, i32 0, i32 4, !dbg !3778
  %3 = load i32, i32* %nb_self_intersections, align 8, !dbg !3778
  %cmp1 = icmp eq i32 %3, 1, !dbg !3779
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3780

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !3781
  br label %return, !dbg !3781

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !3783
  br label %return, !dbg !3783

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !3784
  ret i32 %4, !dbg !3784
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sk_applyConvertGesture(%struct.bContext* %C, %struct.SK_Gesture* %UNUSED_gest, %struct.SK_Sketch* %sketch) #0 !dbg !3785 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_gest.addr = alloca %struct.SK_Gesture*, align 8
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3786, metadata !DIExpression()), !dbg !3787
  store %struct.SK_Gesture* %UNUSED_gest, %struct.SK_Gesture** %UNUSED_gest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Gesture** %UNUSED_gest.addr, metadata !3788, metadata !DIExpression()), !dbg !3789
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !3790, metadata !DIExpression()), !dbg !3791
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3792
  %1 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !3793
  call void @sk_convert(%struct.bContext* %0, %struct.SK_Sketch* %1), !dbg !3794
  ret void, !dbg !3795
}

; Function Attrs: noinline nounwind uwtable
define internal void @sk_convert(%struct.bContext* %C, %struct.SK_Sketch* %sketch) #0 !dbg !3796 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %stk = alloca %struct.SK_Stroke*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3799, metadata !DIExpression()), !dbg !3800
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !3801, metadata !DIExpression()), !dbg !3802
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !3803, metadata !DIExpression()), !dbg !3804
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3805
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !3806
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !3804
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk, metadata !3807, metadata !DIExpression()), !dbg !3808
  %1 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !3809
  %strokes = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %1, i32 0, i32 0, !dbg !3811
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %strokes, i32 0, i32 0, !dbg !3812
  %2 = load i8*, i8** %first, align 8, !dbg !3812
  %3 = bitcast i8* %2 to %struct.SK_Stroke*, !dbg !3809
  store %struct.SK_Stroke* %3, %struct.SK_Stroke** %stk, align 8, !dbg !3813
  br label %for.cond, !dbg !3814

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !3815
  %tobool = icmp ne %struct.SK_Stroke* %4, null, !dbg !3817
  br i1 %tobool, label %for.body, label %for.end, !dbg !3817

for.body:                                         ; preds = %for.cond
  %5 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !3818
  %selected = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %5, i32 0, i32 5, !dbg !3821
  %6 = load i32, i32* %selected, align 8, !dbg !3821
  %cmp = icmp eq i32 %6, 1, !dbg !3822
  br i1 %cmp, label %if.then, label %if.end4, !dbg !3823

if.then:                                          ; preds = %for.body
  %7 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !3824
  %bone_sketching_convert = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %7, i32 0, i32 43, !dbg !3827
  %8 = load i8, i8* %bone_sketching_convert, align 1, !dbg !3827
  %conv = zext i8 %8 to i32, !dbg !3824
  %cmp1 = icmp eq i32 %conv, 3, !dbg !3828
  br i1 %cmp1, label %if.then3, label %if.else, !dbg !3829

if.then3:                                         ; preds = %if.then
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3830
  %10 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !3832
  call void @sk_retargetStroke(%struct.bContext* %9, %struct.SK_Stroke* %10), !dbg !3833
  br label %if.end, !dbg !3834

if.else:                                          ; preds = %if.then
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3835
  %12 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !3837
  call void @sk_convertStroke(%struct.bContext* %11, %struct.SK_Stroke* %12), !dbg !3838
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end4, !dbg !3839

if.end4:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !3840

for.inc:                                          ; preds = %if.end4
  %13 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !3841
  %next = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %13, i32 0, i32 0, !dbg !3842
  %14 = load %struct.SK_Stroke*, %struct.SK_Stroke** %next, align 8, !dbg !3842
  store %struct.SK_Stroke* %14, %struct.SK_Stroke** %stk, align 8, !dbg !3843
  br label %for.cond, !dbg !3844, !llvm.loop !3845

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3847
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BDR_drawSketchNames(%struct.ViewContext* %vc) #0 !dbg !3848 {
entry:
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.ViewContext*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  store %struct.ViewContext* %vc, %struct.ViewContext** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc.addr, metadata !4016, metadata !DIExpression()), !dbg !4017
  %0 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4018
  %call = call i32 @ValidSketchViewContext(%struct.ViewContext* %0), !dbg !4020
  %tobool = icmp ne i32 %call, 0, !dbg !4020
  br i1 %tobool, label %if.then, label %if.end4, !dbg !4021

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !4022, metadata !DIExpression()), !dbg !4024
  %1 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4025
  %call1 = call %struct.SK_Sketch* @viewcontextSketch(%struct.ViewContext* %1, i32 0), !dbg !4026
  store %struct.SK_Sketch* %call1, %struct.SK_Sketch** %sketch, align 8, !dbg !4024
  %2 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4027
  %tobool2 = icmp ne %struct.SK_Sketch* %2, null, !dbg !4027
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !4029

if.then3:                                         ; preds = %if.then
  %3 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4030
  %scene = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %3, i32 0, i32 0, !dbg !4032
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4032
  %5 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4033
  %v3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %5, i32 0, i32 4, !dbg !4034
  %6 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !4034
  %7 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4035
  call void @sk_drawSketch(%struct.Scene* %4, %struct.View3D* %6, %struct.SK_Sketch* %7, i32 1), !dbg !4036
  store i32 1, i32* %retval, align 4, !dbg !4037
  br label %return, !dbg !4037

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !4038

if.end4:                                          ; preds = %if.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !4039
  br label %return, !dbg !4039

return:                                           ; preds = %if.end4, %if.then3
  %8 = load i32, i32* %retval, align 4, !dbg !4040
  ret i32 %8, !dbg !4040
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ValidSketchViewContext(%struct.ViewContext* %vc) #0 !dbg !4041 {
entry:
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.ViewContext*, align 8
  %obedit = alloca %struct.Object*, align 8
  %scene = alloca %struct.Scene*, align 8
  store %struct.ViewContext* %vc, %struct.ViewContext** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc.addr, metadata !4042, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4044, metadata !DIExpression()), !dbg !4045
  %0 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4046
  %obedit1 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %0, i32 0, i32 2, !dbg !4047
  %1 = load %struct.Object*, %struct.Object** %obedit1, align 8, !dbg !4047
  store %struct.Object* %1, %struct.Object** %obedit, align 8, !dbg !4045
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !4048, metadata !DIExpression()), !dbg !4049
  %2 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4050
  %scene2 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %2, i32 0, i32 0, !dbg !4051
  %3 = load %struct.Scene*, %struct.Scene** %scene2, align 8, !dbg !4051
  store %struct.Scene* %3, %struct.Scene** %scene, align 8, !dbg !4049
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4052
  %tobool = icmp ne %struct.Object* %4, null, !dbg !4052
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !4054

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4055
  %type = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 3, !dbg !4056
  %6 = load i16, i16* %type, align 8, !dbg !4056
  %conv = sext i16 %6 to i32, !dbg !4055
  %cmp = icmp eq i32 %conv, 25, !dbg !4057
  br i1 %cmp, label %land.lhs.true4, label %if.else, !dbg !4058

land.lhs.true4:                                   ; preds = %land.lhs.true
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4059
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 20, !dbg !4060
  %8 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4060
  %bone_sketching = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %8, i32 0, i32 42, !dbg !4061
  %9 = load i8, i8* %bone_sketching, align 8, !dbg !4061
  %conv5 = zext i8 %9 to i32, !dbg !4059
  %and = and i32 %conv5, 1, !dbg !4062
  %tobool6 = icmp ne i32 %and, 0, !dbg !4062
  br i1 %tobool6, label %if.then, label %if.else, !dbg !4063

if.then:                                          ; preds = %land.lhs.true4
  store i32 1, i32* %retval, align 4, !dbg !4064
  br label %return, !dbg !4064

if.else:                                          ; preds = %land.lhs.true4, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4066
  br label %return, !dbg !4066

return:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !4068
  ret i32 %10, !dbg !4068
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.SK_Sketch* @viewcontextSketch(%struct.ViewContext* %vc, i32 %create) #0 !dbg !4069 {
entry:
  %vc.addr = alloca %struct.ViewContext*, align 8
  %create.addr = alloca i32, align 4
  %obedit = alloca %struct.Object*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  %arm = alloca %struct.bArmature*, align 8
  store %struct.ViewContext* %vc, %struct.ViewContext** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc.addr, metadata !4072, metadata !DIExpression()), !dbg !4073
  store i32 %create, i32* %create.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %create.addr, metadata !4074, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4076, metadata !DIExpression()), !dbg !4077
  %0 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4078
  %obedit1 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %0, i32 0, i32 2, !dbg !4079
  %1 = load %struct.Object*, %struct.Object** %obedit1, align 8, !dbg !4079
  store %struct.Object* %1, %struct.Object** %obedit, align 8, !dbg !4077
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !4080, metadata !DIExpression()), !dbg !4081
  store %struct.SK_Sketch* null, %struct.SK_Sketch** %sketch, align 8, !dbg !4081
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4082
  %tobool = icmp ne %struct.Object* %2, null, !dbg !4082
  br i1 %tobool, label %land.lhs.true, label %if.end11, !dbg !4084

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4085
  %type = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !4086
  %4 = load i16, i16* %type, align 8, !dbg !4086
  %conv = sext i16 %4 to i32, !dbg !4085
  %cmp = icmp eq i32 %conv, 25, !dbg !4087
  br i1 %cmp, label %if.then, label %if.end11, !dbg !4088

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !4089, metadata !DIExpression()), !dbg !4091
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4092
  %data = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 19, !dbg !4093
  %6 = load i8*, i8** %data, align 8, !dbg !4093
  %7 = bitcast i8* %6 to %struct.bArmature*, !dbg !4092
  store %struct.bArmature* %7, %struct.bArmature** %arm, align 8, !dbg !4091
  %8 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4094
  %sketch3 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %8, i32 0, i32 7, !dbg !4096
  %9 = load i8*, i8** %sketch3, align 8, !dbg !4096
  %cmp4 = icmp eq i8* %9, null, !dbg !4097
  br i1 %cmp4, label %land.lhs.true6, label %if.end, !dbg !4098

land.lhs.true6:                                   ; preds = %if.then
  %10 = load i32, i32* %create.addr, align 4, !dbg !4099
  %tobool7 = icmp ne i32 %10, 0, !dbg !4099
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !4100

if.then8:                                         ; preds = %land.lhs.true6
  %call = call %struct.SK_Sketch* @createSketch(), !dbg !4101
  %11 = bitcast %struct.SK_Sketch* %call to i8*, !dbg !4101
  %12 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4103
  %sketch9 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %12, i32 0, i32 7, !dbg !4104
  store i8* %11, i8** %sketch9, align 8, !dbg !4105
  br label %if.end, !dbg !4106

if.end:                                           ; preds = %if.then8, %land.lhs.true6, %if.then
  %13 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4107
  %sketch10 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %13, i32 0, i32 7, !dbg !4108
  %14 = load i8*, i8** %sketch10, align 8, !dbg !4108
  %15 = bitcast i8* %14 to %struct.SK_Sketch*, !dbg !4107
  store %struct.SK_Sketch* %15, %struct.SK_Sketch** %sketch, align 8, !dbg !4109
  br label %if.end11, !dbg !4110

if.end11:                                         ; preds = %if.end, %land.lhs.true, %entry
  %16 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4111
  ret %struct.SK_Sketch* %16, !dbg !4112
}

; Function Attrs: noinline nounwind uwtable
define internal void @sk_drawSketch(%struct.Scene* %scene, %struct.View3D* %UNUSED_v3d, %struct.SK_Sketch* %sketch, i32 %with_names) #0 !dbg !4113 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %UNUSED_v3d.addr = alloca %struct.View3D*, align 8
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %with_names.addr = alloca i32, align 4
  %ts = alloca %struct.ToolSettings*, align 8
  %stk = alloca %struct.SK_Stroke*, align 8
  %id = alloca i32, align 4
  %selected_rgb = alloca [3 x float], align 4
  %unselected_rgb = alloca [3 x float], align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %last = alloca %struct.SK_Point*, align 8
  %quad = alloca %struct.GLUquadric*, align 8
  %gesture_rgb = alloca [3 x float], align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4118, metadata !DIExpression()), !dbg !4119
  store %struct.View3D* %UNUSED_v3d, %struct.View3D** %UNUSED_v3d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.View3D** %UNUSED_v3d.addr, metadata !4120, metadata !DIExpression()), !dbg !4121
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !4122, metadata !DIExpression()), !dbg !4123
  store i32 %with_names, i32* %with_names.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %with_names.addr, metadata !4124, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !4126, metadata !DIExpression()), !dbg !4127
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4128
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 20, !dbg !4129
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4129
  store %struct.ToolSettings* %1, %struct.ToolSettings** %ts, align 8, !dbg !4127
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk, metadata !4130, metadata !DIExpression()), !dbg !4131
  call void @glClear(i32 256), !dbg !4132
  call void @glEnable(i32 2929), !dbg !4133
  %2 = load i32, i32* %with_names.addr, align 4, !dbg !4134
  %tobool = icmp ne i32 %2, 0, !dbg !4134
  br i1 %tobool, label %if.then, label %if.else, !dbg !4136

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %id, metadata !4137, metadata !DIExpression()), !dbg !4139
  store i32 1, i32* %id, align 4, !dbg !4140
  %3 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !4142
  %strokes = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %3, i32 0, i32 0, !dbg !4143
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %strokes, i32 0, i32 0, !dbg !4144
  %4 = load i8*, i8** %first, align 8, !dbg !4144
  %5 = bitcast i8* %4 to %struct.SK_Stroke*, !dbg !4142
  store %struct.SK_Stroke* %5, %struct.SK_Stroke** %stk, align 8, !dbg !4145
  br label %for.cond, !dbg !4146

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !4147
  %tobool1 = icmp ne %struct.SK_Stroke* %6, null, !dbg !4149
  br i1 %tobool1, label %for.body, label %for.end, !dbg !4149

for.body:                                         ; preds = %for.cond
  %7 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !4150
  %8 = load i32, i32* %id, align 4, !dbg !4152
  call void @sk_drawStroke(%struct.SK_Stroke* %7, i32 %8, float* null, i32 -1, i32 -1), !dbg !4153
  br label %for.inc, !dbg !4154

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %id, align 4, !dbg !4155
  %inc = add nsw i32 %9, 1, !dbg !4155
  store i32 %inc, i32* %id, align 4, !dbg !4155
  %10 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !4156
  %next = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %10, i32 0, i32 0, !dbg !4157
  %11 = load %struct.SK_Stroke*, %struct.SK_Stroke** %next, align 8, !dbg !4157
  store %struct.SK_Stroke* %11, %struct.SK_Stroke** %stk, align 8, !dbg !4158
  br label %for.cond, !dbg !4159, !llvm.loop !4160

for.end:                                          ; preds = %for.cond
  %call = call zeroext i8 @GPU_select_load_id(i32 -1), !dbg !4162
  br label %if.end38, !dbg !4163

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %selected_rgb, metadata !4164, metadata !DIExpression()), !dbg !4166
  %12 = bitcast [3 x float]* %selected_rgb to i8*, !dbg !4166
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 bitcast ([3 x float]* @__const.sk_drawSketch.selected_rgb to i8*), i64 12, i1 false), !dbg !4166
  call void @llvm.dbg.declare(metadata [3 x float]* %unselected_rgb, metadata !4167, metadata !DIExpression()), !dbg !4168
  %13 = bitcast [3 x float]* %unselected_rgb to i8*, !dbg !4168
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 bitcast ([3 x float]* @__const.sk_drawSketch.unselected_rgb to i8*), i64 12, i1 false), !dbg !4168
  %14 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !4169
  %strokes2 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %14, i32 0, i32 0, !dbg !4171
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %strokes2, i32 0, i32 0, !dbg !4172
  %15 = load i8*, i8** %first3, align 8, !dbg !4172
  %16 = bitcast i8* %15 to %struct.SK_Stroke*, !dbg !4169
  store %struct.SK_Stroke* %16, %struct.SK_Stroke** %stk, align 8, !dbg !4173
  br label %for.cond4, !dbg !4174

for.cond4:                                        ; preds = %for.inc16, %if.else
  %17 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !4175
  %tobool5 = icmp ne %struct.SK_Stroke* %17, null, !dbg !4177
  br i1 %tobool5, label %for.body6, label %for.end18, !dbg !4177

for.body6:                                        ; preds = %for.cond4
  call void @llvm.dbg.declare(metadata i32* %start, metadata !4178, metadata !DIExpression()), !dbg !4180
  store i32 -1, i32* %start, align 4, !dbg !4180
  call void @llvm.dbg.declare(metadata i32* %end, metadata !4181, metadata !DIExpression()), !dbg !4182
  store i32 -1, i32* %end, align 4, !dbg !4182
  %18 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !4183
  %19 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !4185
  %call7 = call i32 @sk_hasOverdraw(%struct.SK_Sketch* %18, %struct.SK_Stroke* %19), !dbg !4186
  %tobool8 = icmp ne i32 %call7, 0, !dbg !4186
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !4187

if.then9:                                         ; preds = %for.body6
  %20 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !4188
  %call10 = call i32 @sk_adjustIndexes(%struct.SK_Sketch* %20, i32* %start, i32* %end), !dbg !4190
  br label %if.end, !dbg !4191

if.end:                                           ; preds = %if.then9, %for.body6
  %21 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !4192
  %22 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !4193
  %selected = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %22, i32 0, i32 5, !dbg !4194
  %23 = load i32, i32* %selected, align 8, !dbg !4194
  %cmp = icmp eq i32 %23, 1, !dbg !4195
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4193

cond.true:                                        ; preds = %if.end
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %selected_rgb, i64 0, i64 0, !dbg !4196
  br label %cond.end, !dbg !4193

cond.false:                                       ; preds = %if.end
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %unselected_rgb, i64 0, i64 0, !dbg !4197
  br label %cond.end, !dbg !4193

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay, %cond.true ], [ %arraydecay11, %cond.false ], !dbg !4193
  %24 = load i32, i32* %start, align 4, !dbg !4198
  %25 = load i32, i32* %end, align 4, !dbg !4199
  call void @sk_drawStroke(%struct.SK_Stroke* %21, i32 -1, float* %cond, i32 %24, i32 %25), !dbg !4200
  %26 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !4201
  %selected12 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %26, i32 0, i32 5, !dbg !4203
  %27 = load i32, i32* %selected12, align 8, !dbg !4203
  %cmp13 = icmp eq i32 %27, 1, !dbg !4204
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !4205

if.then14:                                        ; preds = %cond.end
  %28 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4206
  %29 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !4208
  call void @sk_drawStrokeSubdivision(%struct.ToolSettings* %28, %struct.SK_Stroke* %29), !dbg !4209
  br label %if.end15, !dbg !4210

if.end15:                                         ; preds = %if.then14, %cond.end
  br label %for.inc16, !dbg !4211

for.inc16:                                        ; preds = %if.end15
  %30 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !4212
  %next17 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %30, i32 0, i32 0, !dbg !4213
  %31 = load %struct.SK_Stroke*, %struct.SK_Stroke** %next17, align 8, !dbg !4213
  store %struct.SK_Stroke* %31, %struct.SK_Stroke** %stk, align 8, !dbg !4214
  br label %for.cond4, !dbg !4215, !llvm.loop !4216

for.end18:                                        ; preds = %for.cond4
  %32 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !4218
  %active_stroke = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %32, i32 0, i32 2, !dbg !4220
  %33 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke, align 8, !dbg !4220
  %cmp19 = icmp ne %struct.SK_Stroke* %33, null, !dbg !4221
  br i1 %cmp19, label %if.then20, label %if.end37, !dbg !4222

if.then20:                                        ; preds = %for.end18
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %last, metadata !4223, metadata !DIExpression()), !dbg !4225
  %34 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !4226
  %active_stroke21 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %34, i32 0, i32 2, !dbg !4227
  %35 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke21, align 8, !dbg !4227
  %call22 = call %struct.SK_Point* @sk_lastStrokePoint(%struct.SK_Stroke* %35), !dbg !4228
  store %struct.SK_Point* %call22, %struct.SK_Point** %last, align 8, !dbg !4225
  %36 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4229
  %bone_sketching = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %36, i32 0, i32 42, !dbg !4231
  %37 = load i8, i8* %bone_sketching, align 8, !dbg !4231
  %conv = zext i8 %37 to i32, !dbg !4229
  %and = and i32 %conv, 2, !dbg !4232
  %tobool23 = icmp ne i32 %and, 0, !dbg !4232
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !4233

if.then24:                                        ; preds = %if.then20
  %38 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4234
  %39 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !4236
  %active_stroke25 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %39, i32 0, i32 2, !dbg !4237
  %40 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke25, align 8, !dbg !4237
  call void @sk_drawStrokeSubdivision(%struct.ToolSettings* %38, %struct.SK_Stroke* %40), !dbg !4238
  br label %if.end26, !dbg !4239

if.end26:                                         ; preds = %if.then24, %if.then20
  %41 = load %struct.SK_Point*, %struct.SK_Point** %last, align 8, !dbg !4240
  %cmp27 = icmp ne %struct.SK_Point* %41, null, !dbg !4242
  br i1 %cmp27, label %if.then29, label %if.end36, !dbg !4243

if.then29:                                        ; preds = %if.end26
  call void @llvm.dbg.declare(metadata %struct.GLUquadric** %quad, metadata !4244, metadata !DIExpression()), !dbg !4250
  %call30 = call %struct.GLUquadric* @gluNewQuadric(), !dbg !4251
  store %struct.GLUquadric* %call30, %struct.GLUquadric** %quad, align 8, !dbg !4250
  %42 = load %struct.GLUquadric*, %struct.GLUquadric** %quad, align 8, !dbg !4252
  call void @gluQuadricNormals(%struct.GLUquadric* %42, i32 100000), !dbg !4253
  call void @glPushMatrix(), !dbg !4254
  call void @glEnable(i32 3042), !dbg !4255
  call void @glBlendFunc(i32 770, i32 771), !dbg !4256
  %43 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !4257
  %next_point = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %43, i32 0, i32 4, !dbg !4258
  %mode = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %next_point, i32 0, i32 5, !dbg !4259
  %44 = load i32, i32* %mode, align 4, !dbg !4259
  switch i32 %44, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb31
  ], !dbg !4260

sw.bb:                                            ; preds = %if.then29
  call void @glColor3f(float 0.000000e+00, float 1.000000e+00, float 0.000000e+00), !dbg !4261
  br label %sw.epilog, !dbg !4263

sw.bb31:                                          ; preds = %if.then29
  call void @glColor3f(float 0.000000e+00, float 0.000000e+00, float 0.000000e+00), !dbg !4264
  br label %sw.epilog, !dbg !4265

sw.epilog:                                        ; preds = %if.then29, %sw.bb31, %sw.bb
  %45 = load %struct.GLUquadric*, %struct.GLUquadric** %quad, align 8, !dbg !4266
  %46 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !4267
  %next_point32 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %46, i32 0, i32 4, !dbg !4268
  call void @sk_drawPoint(%struct.GLUquadric* %45, %struct.SK_Point* %next_point32, float 0x3FB99999A0000000), !dbg !4269
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %selected_rgb, i64 0, i64 0, !dbg !4270
  %47 = load float, float* %arrayidx, align 4, !dbg !4270
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %selected_rgb, i64 0, i64 1, !dbg !4271
  %48 = load float, float* %arrayidx33, align 4, !dbg !4271
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %selected_rgb, i64 0, i64 2, !dbg !4272
  %49 = load float, float* %arrayidx34, align 4, !dbg !4272
  call void @glColor4f(float %47, float %48, float %49, float 0x3FD3333340000000), !dbg !4273
  %50 = load %struct.GLUquadric*, %struct.GLUquadric** %quad, align 8, !dbg !4274
  %51 = load %struct.SK_Point*, %struct.SK_Point** %last, align 8, !dbg !4275
  %52 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !4276
  %next_point35 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %52, i32 0, i32 4, !dbg !4277
  call void @sk_drawEdge(%struct.GLUquadric* %50, %struct.SK_Point* %51, %struct.SK_Point* %next_point35, float 0x3FB99999A0000000), !dbg !4278
  call void @glDisable(i32 3042), !dbg !4279
  call void @glPopMatrix(), !dbg !4280
  %53 = load %struct.GLUquadric*, %struct.GLUquadric** %quad, align 8, !dbg !4281
  call void @gluDeleteQuadric(%struct.GLUquadric* %53), !dbg !4282
  br label %if.end36, !dbg !4283

if.end36:                                         ; preds = %sw.epilog, %if.end26
  br label %if.end37, !dbg !4284

if.end37:                                         ; preds = %if.end36, %for.end18
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %for.end
  call void @glDisable(i32 2929), !dbg !4285
  %54 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !4286
  %gesture = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %54, i32 0, i32 3, !dbg !4288
  %55 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture, align 8, !dbg !4288
  %cmp39 = icmp ne %struct.SK_Stroke* %55, null, !dbg !4289
  br i1 %cmp39, label %if.then41, label %if.end44, !dbg !4290

if.then41:                                        ; preds = %if.end38
  call void @llvm.dbg.declare(metadata [3 x float]* %gesture_rgb, metadata !4291, metadata !DIExpression()), !dbg !4293
  %56 = bitcast [3 x float]* %gesture_rgb to i8*, !dbg !4293
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 bitcast ([3 x float]* @__const.sk_drawSketch.gesture_rgb to i8*), i64 12, i1 false), !dbg !4293
  %57 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !4294
  %gesture42 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %57, i32 0, i32 3, !dbg !4295
  %58 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture42, align 8, !dbg !4295
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %gesture_rgb, i64 0, i64 0, !dbg !4296
  call void @sk_drawStroke(%struct.SK_Stroke* %58, i32 -1, float* %arraydecay43, i32 -1, i32 -1), !dbg !4297
  br label %if.end44, !dbg !4298

if.end44:                                         ; preds = %if.then41, %if.end38
  ret void, !dbg !4299
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BDR_drawSketch(%struct.bContext* %C) #0 !dbg !4300 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4301, metadata !DIExpression()), !dbg !4302
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4303
  %call = call i32 @ED_operator_sketch_mode(%struct.bContext* %0), !dbg !4305
  %tobool = icmp ne i32 %call, 0, !dbg !4305
  br i1 %tobool, label %if.then, label %if.end6, !dbg !4306

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !4307, metadata !DIExpression()), !dbg !4309
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4310
  %call1 = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %1, i32 0), !dbg !4311
  store %struct.SK_Sketch* %call1, %struct.SK_Sketch** %sketch, align 8, !dbg !4309
  %2 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4312
  %tobool2 = icmp ne %struct.SK_Sketch* %2, null, !dbg !4312
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !4314

if.then3:                                         ; preds = %if.then
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4315
  %call4 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %3), !dbg !4317
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4318
  %call5 = call %struct.View3D* @CTX_wm_view3d(%struct.bContext* %4), !dbg !4319
  %5 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4320
  call void @sk_drawSketch(%struct.Scene* %call4, %struct.View3D* %call5, %struct.SK_Sketch* %5, i32 0), !dbg !4321
  br label %if.end, !dbg !4322

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end6, !dbg !4323

if.end6:                                          ; preds = %if.end, %entry
  ret void, !dbg !4324
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_sketch_mode(%struct.bContext* %C) #0 !dbg !4325 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %obedit = alloca %struct.Object*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4326, metadata !DIExpression()), !dbg !4327
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4328, metadata !DIExpression()), !dbg !4329
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4330
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !4331
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !4329
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !4332, metadata !DIExpression()), !dbg !4333
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4334
  %call1 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %1), !dbg !4335
  store %struct.ToolSettings* %call1, %struct.ToolSettings** %ts, align 8, !dbg !4333
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4336
  %tobool = icmp ne %struct.Object* %2, null, !dbg !4336
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !4338

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4339
  %type = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !4340
  %4 = load i16, i16* %type, align 8, !dbg !4340
  %conv = sext i16 %4 to i32, !dbg !4339
  %cmp = icmp eq i32 %conv, 25, !dbg !4341
  br i1 %cmp, label %land.lhs.true3, label %if.else, !dbg !4342

land.lhs.true3:                                   ; preds = %land.lhs.true
  %5 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4343
  %bone_sketching = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %5, i32 0, i32 42, !dbg !4344
  %6 = load i8, i8* %bone_sketching, align 8, !dbg !4344
  %conv4 = zext i8 %6 to i32, !dbg !4343
  %and = and i32 %conv4, 1, !dbg !4345
  %tobool5 = icmp ne i32 %and, 0, !dbg !4345
  br i1 %tobool5, label %if.then, label %if.else, !dbg !4346

if.then:                                          ; preds = %land.lhs.true3
  store i32 1, i32* %retval, align 4, !dbg !4347
  br label %return, !dbg !4347

if.else:                                          ; preds = %land.lhs.true3, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4349
  br label %return, !dbg !4349

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !4351
  ret i32 %7, !dbg !4351
}

declare dso_local %struct.View3D* @CTX_wm_view3d(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BIF_sk_selectStroke(%struct.bContext* %C, i32* %mval, i16 signext %extend) #0 !dbg !4352 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %mval.addr = alloca i32*, align 8
  %extend.addr = alloca i16, align 2
  %ts = alloca %struct.ToolSettings*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4357, metadata !DIExpression()), !dbg !4358
  store i32* %mval, i32** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mval.addr, metadata !4359, metadata !DIExpression()), !dbg !4360
  store i16 %extend, i16* %extend.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %extend.addr, metadata !4361, metadata !DIExpression()), !dbg !4362
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !4363, metadata !DIExpression()), !dbg !4364
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4365
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !4366
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !4364
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !4367, metadata !DIExpression()), !dbg !4368
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4369
  %call1 = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %1, i32 0), !dbg !4370
  store %struct.SK_Sketch* %call1, %struct.SK_Sketch** %sketch, align 8, !dbg !4368
  %2 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4371
  %cmp = icmp ne %struct.SK_Sketch* %2, null, !dbg !4373
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !4374

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4375
  %bone_sketching = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %3, i32 0, i32 42, !dbg !4376
  %4 = load i8, i8* %bone_sketching, align 8, !dbg !4376
  %conv = zext i8 %4 to i32, !dbg !4375
  %and = and i32 %conv, 1, !dbg !4377
  %tobool = icmp ne i32 %and, 0, !dbg !4377
  br i1 %tobool, label %if.then, label %if.end7, !dbg !4378

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4379
  %6 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4382
  %7 = load i32*, i32** %mval.addr, align 8, !dbg !4383
  %8 = load i16, i16* %extend.addr, align 2, !dbg !4384
  %conv2 = sext i16 %8 to i32, !dbg !4384
  %call3 = call i32 @sk_selectStroke(%struct.bContext* %5, %struct.SK_Sketch* %6, i32* %7, i32 %conv2), !dbg !4385
  %tobool4 = icmp ne i32 %call3, 0, !dbg !4385
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !4386

if.then5:                                         ; preds = %if.then
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4387
  %call6 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %9), !dbg !4388
  call void @ED_area_tag_redraw(%struct.ScrArea* %call6), !dbg !4389
  br label %if.end, !dbg !4389

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end7, !dbg !4390

if.end7:                                          ; preds = %if.end, %land.lhs.true, %entry
  ret void, !dbg !4391
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sk_selectStroke(%struct.bContext* %C, %struct.SK_Sketch* %sketch, i32* %mval, i32 %extend) #0 !dbg !4392 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %mval.addr = alloca i32*, align 8
  %extend.addr = alloca i32, align 4
  %vc = alloca %struct.ViewContext, align 8
  %rect = alloca %struct.rcti, align 4
  %buffer = alloca [10000 x i32], align 16
  %hits = alloca i16, align 2
  %besthitresult = alloca i32, align 4
  %selected_stk = alloca %struct.SK_Stroke*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4395, metadata !DIExpression()), !dbg !4396
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !4397, metadata !DIExpression()), !dbg !4398
  store i32* %mval, i32** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mval.addr, metadata !4399, metadata !DIExpression()), !dbg !4400
  store i32 %extend, i32* %extend.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %extend.addr, metadata !4401, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.declare(metadata %struct.ViewContext* %vc, metadata !4403, metadata !DIExpression()), !dbg !4404
  call void @llvm.dbg.declare(metadata %struct.rcti* %rect, metadata !4405, metadata !DIExpression()), !dbg !4406
  call void @llvm.dbg.declare(metadata [10000 x i32]* %buffer, metadata !4407, metadata !DIExpression()), !dbg !4411
  call void @llvm.dbg.declare(metadata i16* %hits, metadata !4412, metadata !DIExpression()), !dbg !4413
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4414
  call void @view3d_set_viewcontext(%struct.bContext* %0, %struct.ViewContext* %vc), !dbg !4415
  %1 = load i32*, i32** %mval.addr, align 8, !dbg !4416
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 0, !dbg !4416
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4416
  %sub = sub nsw i32 %2, 5, !dbg !4417
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 0, !dbg !4418
  store i32 %sub, i32* %xmin, align 4, !dbg !4419
  %3 = load i32*, i32** %mval.addr, align 8, !dbg !4420
  %arrayidx1 = getelementptr inbounds i32, i32* %3, i64 0, !dbg !4420
  %4 = load i32, i32* %arrayidx1, align 4, !dbg !4420
  %add = add nsw i32 %4, 5, !dbg !4421
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 1, !dbg !4422
  store i32 %add, i32* %xmax, align 4, !dbg !4423
  %5 = load i32*, i32** %mval.addr, align 8, !dbg !4424
  %arrayidx2 = getelementptr inbounds i32, i32* %5, i64 1, !dbg !4424
  %6 = load i32, i32* %arrayidx2, align 4, !dbg !4424
  %sub3 = sub nsw i32 %6, 5, !dbg !4425
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 2, !dbg !4426
  store i32 %sub3, i32* %ymin, align 4, !dbg !4427
  %7 = load i32*, i32** %mval.addr, align 8, !dbg !4428
  %arrayidx4 = getelementptr inbounds i32, i32* %7, i64 1, !dbg !4428
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !4428
  %add5 = add nsw i32 %8, 5, !dbg !4429
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 3, !dbg !4430
  store i32 %add5, i32* %ymax, align 4, !dbg !4431
  %arraydecay = getelementptr inbounds [10000 x i32], [10000 x i32]* %buffer, i64 0, i64 0, !dbg !4432
  %call = call signext i16 @view3d_opengl_select(%struct.ViewContext* %vc, i32* %arraydecay, i32 10000, %struct.rcti* %rect, i8 zeroext 1), !dbg !4433
  store i16 %call, i16* %hits, align 2, !dbg !4434
  %9 = load i16, i16* %hits, align 2, !dbg !4435
  %conv = sext i16 %9 to i32, !dbg !4435
  %cmp = icmp sgt i32 %conv, 0, !dbg !4437
  br i1 %cmp, label %if.then, label %if.end25, !dbg !4438

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %besthitresult, metadata !4439, metadata !DIExpression()), !dbg !4441
  store i32 -1, i32* %besthitresult, align 4, !dbg !4441
  %10 = load i16, i16* %hits, align 2, !dbg !4442
  %conv7 = sext i16 %10 to i32, !dbg !4442
  %cmp8 = icmp eq i32 %conv7, 1, !dbg !4444
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !4445

if.then10:                                        ; preds = %if.then
  %arrayidx11 = getelementptr inbounds [10000 x i32], [10000 x i32]* %buffer, i64 0, i64 3, !dbg !4446
  %11 = load i32, i32* %arrayidx11, align 4, !dbg !4446
  store i32 %11, i32* %besthitresult, align 4, !dbg !4448
  br label %if.end, !dbg !4449

if.else:                                          ; preds = %if.then
  %arrayidx12 = getelementptr inbounds [10000 x i32], [10000 x i32]* %buffer, i64 0, i64 3, !dbg !4450
  %12 = load i32, i32* %arrayidx12, align 4, !dbg !4450
  store i32 %12, i32* %besthitresult, align 4, !dbg !4452
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then10
  %13 = load i32, i32* %besthitresult, align 4, !dbg !4453
  %cmp13 = icmp sgt i32 %13, 0, !dbg !4455
  br i1 %cmp13, label %if.then15, label %if.end24, !dbg !4456

if.then15:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %selected_stk, metadata !4457, metadata !DIExpression()), !dbg !4459
  %14 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !4460
  %strokes = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %14, i32 0, i32 0, !dbg !4461
  %15 = load i32, i32* %besthitresult, align 4, !dbg !4462
  %sub16 = sub nsw i32 %15, 1, !dbg !4463
  %call17 = call i8* @BLI_findlink(%struct.ListBase* %strokes, i32 %sub16), !dbg !4464
  %16 = bitcast i8* %call17 to %struct.SK_Stroke*, !dbg !4464
  store %struct.SK_Stroke* %16, %struct.SK_Stroke** %selected_stk, align 8, !dbg !4459
  %17 = load i32, i32* %extend.addr, align 4, !dbg !4465
  %cmp18 = icmp eq i32 %17, 0, !dbg !4467
  br i1 %cmp18, label %if.then20, label %if.else21, !dbg !4468

if.then20:                                        ; preds = %if.then15
  %18 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !4469
  call void @sk_selectAllSketch(%struct.SK_Sketch* %18, i32 -1), !dbg !4471
  %19 = load %struct.SK_Stroke*, %struct.SK_Stroke** %selected_stk, align 8, !dbg !4472
  %selected = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %19, i32 0, i32 5, !dbg !4473
  store i32 1, i32* %selected, align 8, !dbg !4474
  br label %if.end23, !dbg !4475

if.else21:                                        ; preds = %if.then15
  %20 = load %struct.SK_Stroke*, %struct.SK_Stroke** %selected_stk, align 8, !dbg !4476
  %selected22 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %20, i32 0, i32 5, !dbg !4478
  %21 = load i32, i32* %selected22, align 8, !dbg !4479
  %xor = xor i32 %21, 1, !dbg !4479
  store i32 %xor, i32* %selected22, align 8, !dbg !4479
  br label %if.end23

if.end23:                                         ; preds = %if.else21, %if.then20
  br label %if.end24, !dbg !4480

if.end24:                                         ; preds = %if.end23, %if.end
  store i32 1, i32* %retval, align 4, !dbg !4481
  br label %return, !dbg !4481

if.end25:                                         ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4482
  br label %return, !dbg !4482

return:                                           ; preds = %if.end25, %if.end24
  %22 = load i32, i32* %retval, align 4, !dbg !4483
  ret i32 %22, !dbg !4483
}

declare dso_local void @ED_area_tag_redraw(%struct.ScrArea*) #2

declare dso_local %struct.ScrArea* @CTX_wm_area(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BIF_convertSketch(%struct.bContext* %C) #0 !dbg !4484 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4485, metadata !DIExpression()), !dbg !4486
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4487
  %call = call i32 @ED_operator_sketch_full_mode(%struct.bContext* %0), !dbg !4489
  %tobool = icmp ne i32 %call, 0, !dbg !4489
  br i1 %tobool, label %if.then, label %if.end4, !dbg !4490

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !4491, metadata !DIExpression()), !dbg !4493
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4494
  %call1 = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %1, i32 0), !dbg !4495
  store %struct.SK_Sketch* %call1, %struct.SK_Sketch** %sketch, align 8, !dbg !4493
  %2 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4496
  %tobool2 = icmp ne %struct.SK_Sketch* %2, null, !dbg !4496
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !4498

if.then3:                                         ; preds = %if.then
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4499
  %4 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4501
  call void @sk_convert(%struct.bContext* %3, %struct.SK_Sketch* %4), !dbg !4502
  br label %if.end, !dbg !4503

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end4, !dbg !4504

if.end4:                                          ; preds = %if.end, %entry
  ret void, !dbg !4505
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_sketch_full_mode(%struct.bContext* %C) #0 !dbg !4506 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %obedit = alloca %struct.Object*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4507, metadata !DIExpression()), !dbg !4508
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4509, metadata !DIExpression()), !dbg !4510
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4511
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !4512
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !4510
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !4513, metadata !DIExpression()), !dbg !4514
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4515
  %call1 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %1), !dbg !4516
  store %struct.ToolSettings* %call1, %struct.ToolSettings** %ts, align 8, !dbg !4514
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4517
  %tobool = icmp ne %struct.Object* %2, null, !dbg !4517
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !4519

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4520
  %type = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !4521
  %4 = load i16, i16* %type, align 8, !dbg !4521
  %conv = sext i16 %4 to i32, !dbg !4520
  %cmp = icmp eq i32 %conv, 25, !dbg !4522
  br i1 %cmp, label %land.lhs.true3, label %if.else, !dbg !4523

land.lhs.true3:                                   ; preds = %land.lhs.true
  %5 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4524
  %bone_sketching = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %5, i32 0, i32 42, !dbg !4525
  %6 = load i8, i8* %bone_sketching, align 8, !dbg !4525
  %conv4 = zext i8 %6 to i32, !dbg !4524
  %and = and i32 %conv4, 1, !dbg !4526
  %tobool5 = icmp ne i32 %and, 0, !dbg !4526
  br i1 %tobool5, label %land.lhs.true6, label %if.else, !dbg !4527

land.lhs.true6:                                   ; preds = %land.lhs.true3
  %7 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4528
  %bone_sketching7 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %7, i32 0, i32 42, !dbg !4529
  %8 = load i8, i8* %bone_sketching7, align 8, !dbg !4529
  %conv8 = zext i8 %8 to i32, !dbg !4528
  %and9 = and i32 %conv8, 2, !dbg !4530
  %cmp10 = icmp eq i32 %and9, 0, !dbg !4531
  br i1 %cmp10, label %if.then, label %if.else, !dbg !4532

if.then:                                          ; preds = %land.lhs.true6
  store i32 1, i32* %retval, align 4, !dbg !4533
  br label %return, !dbg !4533

if.else:                                          ; preds = %land.lhs.true6, %land.lhs.true3, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4535
  br label %return, !dbg !4535

return:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !4537
  ret i32 %9, !dbg !4537
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BIF_deleteSketch(%struct.bContext* %C) #0 !dbg !4538 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4539, metadata !DIExpression()), !dbg !4540
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4541
  %call = call i32 @ED_operator_sketch_full_mode(%struct.bContext* %0), !dbg !4543
  %tobool = icmp ne i32 %call, 0, !dbg !4543
  br i1 %tobool, label %if.then, label %if.end4, !dbg !4544

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !4545, metadata !DIExpression()), !dbg !4547
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4548
  %call1 = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %1, i32 0), !dbg !4549
  store %struct.SK_Sketch* %call1, %struct.SK_Sketch** %sketch, align 8, !dbg !4547
  %2 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4550
  %tobool2 = icmp ne %struct.SK_Sketch* %2, null, !dbg !4550
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !4552

if.then3:                                         ; preds = %if.then
  %3 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4553
  call void @sk_deleteSelectedStrokes(%struct.SK_Sketch* %3), !dbg !4555
  br label %if.end, !dbg !4556

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end4, !dbg !4557

if.end4:                                          ; preds = %if.end, %entry
  ret void, !dbg !4558
}

declare dso_local void @sk_deleteSelectedStrokes(%struct.SK_Sketch*) #2

declare dso_local %struct.SK_Sketch* @createSketch() #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_sketch_mode_active_stroke(%struct.bContext* %C) #0 !dbg !4559 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4560, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !4562, metadata !DIExpression()), !dbg !4563
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4564
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !4565
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !4563
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !4566, metadata !DIExpression()), !dbg !4567
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4568
  %call1 = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %1, i32 0), !dbg !4569
  store %struct.SK_Sketch* %call1, %struct.SK_Sketch** %sketch, align 8, !dbg !4567
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4570
  %bone_sketching = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 42, !dbg !4572
  %3 = load i8, i8* %bone_sketching, align 8, !dbg !4572
  %conv = zext i8 %3 to i32, !dbg !4570
  %and = and i32 %conv, 1, !dbg !4573
  %tobool = icmp ne i32 %and, 0, !dbg !4573
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !4574

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4575
  %cmp = icmp ne %struct.SK_Sketch* %4, null, !dbg !4576
  br i1 %cmp, label %land.lhs.true3, label %if.else, !dbg !4577

land.lhs.true3:                                   ; preds = %land.lhs.true
  %5 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4578
  %active_stroke = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %5, i32 0, i32 2, !dbg !4579
  %6 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke, align 8, !dbg !4579
  %cmp4 = icmp ne %struct.SK_Stroke* %6, null, !dbg !4580
  br i1 %cmp4, label %if.then, label %if.else, !dbg !4581

if.then:                                          ; preds = %land.lhs.true3
  store i32 1, i32* %retval, align 4, !dbg !4582
  br label %return, !dbg !4582

if.else:                                          ; preds = %land.lhs.true3, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4584
  br label %return, !dbg !4584

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !4586
  ret i32 %7, !dbg !4586
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @SKETCH_OT_delete(%struct.wmOperatorType* %ot) #0 !dbg !4587 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4715, metadata !DIExpression()), !dbg !4716
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4717
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4718
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8** %name, align 8, !dbg !4719
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4720
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4721
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %idname, align 8, !dbg !4722
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4723
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4724
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8** %description, align 8, !dbg !4725
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4726
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4727
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @sketch_delete, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4728
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4729
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4730
  store i32 (%struct.bContext*)* @ED_operator_sketch_full_mode, i32 (%struct.bContext*)** %poll, align 8, !dbg !4731
  ret void, !dbg !4732
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sketch_delete(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op, %struct.wmEvent* %UNUSED_event) #0 !dbg !4733 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4741, metadata !DIExpression()), !dbg !4742
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !4743, metadata !DIExpression()), !dbg !4744
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !4745, metadata !DIExpression()), !dbg !4746
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !4747, metadata !DIExpression()), !dbg !4748
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4749
  %call = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %0, i32 0), !dbg !4750
  store %struct.SK_Sketch* %call, %struct.SK_Sketch** %sketch, align 8, !dbg !4748
  %1 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4751
  %tobool = icmp ne %struct.SK_Sketch* %1, null, !dbg !4751
  br i1 %tobool, label %if.then, label %if.end, !dbg !4753

if.then:                                          ; preds = %entry
  %2 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4754
  call void @sk_deleteSelectedStrokes(%struct.SK_Sketch* %2), !dbg !4756
  br label %if.end, !dbg !4757

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4758
  call void @WM_event_add_notifier(%struct.bContext* %3, i32 50855940, i8* null), !dbg !4759
  ret i32 4, !dbg !4760
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @SKETCH_OT_select(%struct.wmOperatorType* %ot) #0 !dbg !4761 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4762, metadata !DIExpression()), !dbg !4763
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4764
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4765
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8** %name, align 8, !dbg !4766
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4767
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4768
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8** %idname, align 8, !dbg !4769
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4770
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4771
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8** %description, align 8, !dbg !4772
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4773
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4774
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @sketch_select, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4775
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4776
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4777
  store i32 (%struct.bContext*)* @ED_operator_sketch_full_mode, i32 (%struct.bContext*)** %poll, align 8, !dbg !4778
  ret void, !dbg !4779
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sketch_select(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op, %struct.wmEvent* %event) #0 !dbg !4780 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  %extend = alloca i16, align 2
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4781, metadata !DIExpression()), !dbg !4782
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !4783, metadata !DIExpression()), !dbg !4784
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !4785, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !4787, metadata !DIExpression()), !dbg !4788
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4789
  %call = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %0, i32 0), !dbg !4790
  store %struct.SK_Sketch* %call, %struct.SK_Sketch** %sketch, align 8, !dbg !4788
  %1 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4791
  %tobool = icmp ne %struct.SK_Sketch* %1, null, !dbg !4791
  br i1 %tobool, label %if.then, label %if.end5, !dbg !4793

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %extend, metadata !4794, metadata !DIExpression()), !dbg !4796
  store i16 0, i16* %extend, align 2, !dbg !4796
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4797
  %3 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4799
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4800
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 6, !dbg !4801
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !4800
  %5 = load i16, i16* %extend, align 2, !dbg !4802
  %conv = sext i16 %5 to i32, !dbg !4802
  %call1 = call i32 @sk_selectStroke(%struct.bContext* %2, %struct.SK_Sketch* %3, i32* %arraydecay, i32 %conv), !dbg !4803
  %tobool2 = icmp ne i32 %call1, 0, !dbg !4803
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !4804

if.then3:                                         ; preds = %if.then
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4805
  %call4 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %6), !dbg !4806
  call void @ED_area_tag_redraw(%struct.ScrArea* %call4), !dbg !4807
  br label %if.end, !dbg !4807

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end5, !dbg !4808

if.end5:                                          ; preds = %if.end, %entry
  ret i32 4, !dbg !4809
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @SKETCH_OT_cancel_stroke(%struct.wmOperatorType* %ot) #0 !dbg !4810 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4811, metadata !DIExpression()), !dbg !4812
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4813
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4814
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i8** %name, align 8, !dbg !4815
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4816
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4817
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0), i8** %idname, align 8, !dbg !4818
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4819
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4820
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0), i8** %description, align 8, !dbg !4821
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4822
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4823
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @sketch_cancel_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4824
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4825
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4826
  store i32 (%struct.bContext*)* @ED_operator_sketch_mode_active_stroke, i32 (%struct.bContext*)** %poll, align 8, !dbg !4827
  ret void, !dbg !4828
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sketch_cancel_invoke(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op, %struct.wmEvent* %UNUSED_event) #0 !dbg !4829 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4830, metadata !DIExpression()), !dbg !4831
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !4832, metadata !DIExpression()), !dbg !4833
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !4834, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !4836, metadata !DIExpression()), !dbg !4837
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4838
  %call = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %0, i32 0), !dbg !4839
  store %struct.SK_Sketch* %call, %struct.SK_Sketch** %sketch, align 8, !dbg !4837
  %1 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4840
  %cmp = icmp ne %struct.SK_Sketch* %1, null, !dbg !4842
  br i1 %cmp, label %if.then, label %if.end, !dbg !4843

if.then:                                          ; preds = %entry
  %2 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4844
  call void @sk_cancelStroke(%struct.SK_Sketch* %2), !dbg !4846
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4847
  %call1 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %3), !dbg !4848
  call void @ED_area_tag_redraw(%struct.ScrArea* %call1), !dbg !4849
  store i32 4, i32* %retval, align 4, !dbg !4850
  br label %return, !dbg !4850

if.end:                                           ; preds = %entry
  store i32 8, i32* %retval, align 4, !dbg !4851
  br label %return, !dbg !4851

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !4852
  ret i32 %4, !dbg !4852
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @SKETCH_OT_convert(%struct.wmOperatorType* %ot) #0 !dbg !4853 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4854, metadata !DIExpression()), !dbg !4855
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4856
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4857
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i8** %name, align 8, !dbg !4858
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4859
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4860
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8** %idname, align 8, !dbg !4861
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4862
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4863
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i8** %description, align 8, !dbg !4864
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4865
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4866
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @sketch_convert, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4867
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4868
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4869
  store i32 (%struct.bContext*)* @ED_operator_sketch_full_mode, i32 (%struct.bContext*)** %poll, align 8, !dbg !4870
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4871
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !4872
  store i16 2, i16* %flag, align 8, !dbg !4873
  ret void, !dbg !4874
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sketch_convert(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op, %struct.wmEvent* %UNUSED_event) #0 !dbg !4875 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4876, metadata !DIExpression()), !dbg !4877
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !4878, metadata !DIExpression()), !dbg !4879
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !4880, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !4882, metadata !DIExpression()), !dbg !4883
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4884
  %call = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %0, i32 0), !dbg !4885
  store %struct.SK_Sketch* %call, %struct.SK_Sketch** %sketch, align 8, !dbg !4883
  %1 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4886
  %cmp = icmp ne %struct.SK_Sketch* %1, null, !dbg !4888
  br i1 %cmp, label %if.then, label %if.end, !dbg !4889

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4890
  %3 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4892
  call void @sk_convert(%struct.bContext* %2, %struct.SK_Sketch* %3), !dbg !4893
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4894
  %call1 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %4), !dbg !4895
  call void @ED_area_tag_redraw(%struct.ScrArea* %call1), !dbg !4896
  br label %if.end, !dbg !4897

if.end:                                           ; preds = %if.then, %entry
  ret i32 4, !dbg !4898
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @SKETCH_OT_finish_stroke(%struct.wmOperatorType* %ot) #0 !dbg !4899 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4900, metadata !DIExpression()), !dbg !4901
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4902
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4903
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8** %name, align 8, !dbg !4904
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4905
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4906
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i8** %idname, align 8, !dbg !4907
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4908
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4909
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.16, i64 0, i64 0), i8** %description, align 8, !dbg !4910
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4911
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4912
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @sketch_finish, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4913
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4914
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4915
  store i32 (%struct.bContext*)* @ED_operator_sketch_mode_active_stroke, i32 (%struct.bContext*)** %poll, align 8, !dbg !4916
  ret void, !dbg !4917
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sketch_finish(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op, %struct.wmEvent* %UNUSED_event) #0 !dbg !4918 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4919, metadata !DIExpression()), !dbg !4920
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !4921, metadata !DIExpression()), !dbg !4922
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !4923, metadata !DIExpression()), !dbg !4924
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !4925, metadata !DIExpression()), !dbg !4926
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4927
  %call = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %0, i32 0), !dbg !4928
  store %struct.SK_Sketch* %call, %struct.SK_Sketch** %sketch, align 8, !dbg !4926
  %1 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4929
  %cmp = icmp ne %struct.SK_Sketch* %1, null, !dbg !4931
  br i1 %cmp, label %if.then, label %if.end4, !dbg !4932

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4933
  %3 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4936
  %call1 = call i32 @sk_finish_stroke(%struct.bContext* %2, %struct.SK_Sketch* %3), !dbg !4937
  %tobool = icmp ne i32 %call1, 0, !dbg !4937
  br i1 %tobool, label %if.then2, label %if.end, !dbg !4938

if.then2:                                         ; preds = %if.then
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4939
  %call3 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %4), !dbg !4941
  call void @ED_area_tag_redraw(%struct.ScrArea* %call3), !dbg !4942
  store i32 4, i32* %retval, align 4, !dbg !4943
  br label %return, !dbg !4943

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !4944

if.end4:                                          ; preds = %if.end, %entry
  store i32 8, i32* %retval, align 4, !dbg !4945
  br label %return, !dbg !4945

return:                                           ; preds = %if.end4, %if.then2
  %5 = load i32, i32* %retval, align 4, !dbg !4946
  ret i32 %5, !dbg !4946
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @SKETCH_OT_draw_preview(%struct.wmOperatorType* %ot) #0 !dbg !4947 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4948, metadata !DIExpression()), !dbg !4949
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4950
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4951
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8** %name, align 8, !dbg !4952
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4953
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4954
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8** %idname, align 8, !dbg !4955
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4956
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4957
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.19, i64 0, i64 0), i8** %description, align 8, !dbg !4958
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4959
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4960
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @sketch_draw_preview, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4961
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4962
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4963
  store i32 (%struct.bContext*)* @ED_operator_sketch_mode_active_stroke, i32 (%struct.bContext*)** %poll, align 8, !dbg !4964
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4965
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !4966
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4966
  %7 = bitcast %struct.StructRNA* %6 to i8*, !dbg !4965
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)), !dbg !4967
  ret void, !dbg !4968
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sketch_draw_preview(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !4969 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %snap = alloca i8, align 1
  %sketch = alloca %struct.SK_Sketch*, align 8
  %dd = alloca %struct.SK_DrawData, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4970, metadata !DIExpression()), !dbg !4971
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4972, metadata !DIExpression()), !dbg !4973
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !4974, metadata !DIExpression()), !dbg !4975
  call void @llvm.dbg.declare(metadata i8* %snap, metadata !4976, metadata !DIExpression()), !dbg !4978
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4979
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !4980
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4980
  %call = call i32 @RNA_boolean_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0)), !dbg !4981
  %conv = trunc i32 %call to i8, !dbg !4981
  store i8 %conv, i8* %snap, align 1, !dbg !4978
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !4982, metadata !DIExpression()), !dbg !4983
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4984
  %call1 = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %2, i32 0), !dbg !4985
  store %struct.SK_Sketch* %call1, %struct.SK_Sketch** %sketch, align 8, !dbg !4983
  %3 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !4986
  %tobool = icmp ne %struct.SK_Sketch* %3, null, !dbg !4986
  br i1 %tobool, label %if.then, label %if.end, !dbg !4988

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SK_DrawData* %dd, metadata !4989, metadata !DIExpression()), !dbg !4997
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4998
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 6, !dbg !4999
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !4998
  call void @sk_initDrawData(%struct.SK_DrawData* %dd, i32* %arraydecay), !dbg !5000
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5001
  %6 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !5002
  %next_point = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %6, i32 0, i32 4, !dbg !5003
  %7 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !5004
  %8 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !5005
  %active_stroke = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %8, i32 0, i32 2, !dbg !5006
  %9 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke, align 8, !dbg !5006
  %10 = load i8, i8* %snap, align 1, !dbg !5007
  call void @sk_getStrokePoint(%struct.bContext* %5, %struct.SK_Point* %next_point, %struct.SK_Sketch* %7, %struct.SK_Stroke* %9, %struct.SK_DrawData* %dd, i8 zeroext %10), !dbg !5008
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5009
  %call2 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %11), !dbg !5010
  call void @ED_area_tag_redraw(%struct.ScrArea* %call2), !dbg !5011
  br label %if.end, !dbg !5012

if.end:                                           ; preds = %if.then, %entry
  ret i32 12, !dbg !5013
}

declare dso_local %struct.PropertyRNA* @RNA_def_boolean(i8*, i8*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @SKETCH_OT_draw_stroke(%struct.wmOperatorType* %ot) #0 !dbg !5014 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5015, metadata !DIExpression()), !dbg !5016
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5017
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5018
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i64 0, i64 0), i8** %name, align 8, !dbg !5019
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5020
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5021
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i64 0, i64 0), i8** %idname, align 8, !dbg !5022
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5023
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5024
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i64 0, i64 0), i8** %description, align 8, !dbg !5025
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5026
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5027
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @sketch_draw_stroke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5028
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5029
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !5030
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @sketch_draw_stroke_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !5031
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5032
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 7, !dbg !5033
  store void (%struct.bContext*, %struct.wmOperator*)* @sketch_draw_stroke_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !5034
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5035
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !5036
  store i32 (%struct.bContext*)* @ED_operator_sketch_mode, i32 (%struct.bContext*)** %poll, align 8, !dbg !5037
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5038
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !5039
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5039
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !5038
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)), !dbg !5040
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5041
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 19, !dbg !5042
  store i16 4, i16* %flag, align 8, !dbg !5043
  ret void, !dbg !5044
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sketch_draw_stroke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !5045 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %snap = alloca i8, align 1
  %dd = alloca %struct.SK_DrawData*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5046, metadata !DIExpression()), !dbg !5047
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5048, metadata !DIExpression()), !dbg !5049
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5050, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.declare(metadata i8* %snap, metadata !5052, metadata !DIExpression()), !dbg !5053
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5054
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !5055
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5055
  %call = call i32 @RNA_boolean_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0)), !dbg !5056
  %conv = trunc i32 %call to i8, !dbg !5056
  store i8 %conv, i8* %snap, align 1, !dbg !5053
  call void @llvm.dbg.declare(metadata %struct.SK_DrawData** %dd, metadata !5057, metadata !DIExpression()), !dbg !5059
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !5060, metadata !DIExpression()), !dbg !5061
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5062
  %call1 = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %2, i32 1), !dbg !5063
  store %struct.SK_Sketch* %call1, %struct.SK_Sketch** %sketch, align 8, !dbg !5061
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5064
  %call2 = call i8* %3(i64 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0)), !dbg !5064
  %4 = bitcast i8* %call2 to %struct.SK_DrawData*, !dbg !5064
  store %struct.SK_DrawData* %4, %struct.SK_DrawData** %dd, align 8, !dbg !5065
  %5 = bitcast %struct.SK_DrawData* %4 to i8*, !dbg !5066
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5067
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 5, !dbg !5068
  store i8* %5, i8** %customdata, align 8, !dbg !5069
  %7 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd, align 8, !dbg !5070
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5071
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 6, !dbg !5072
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !5071
  call void @sk_initDrawData(%struct.SK_DrawData* %7, i32* %arraydecay), !dbg !5073
  %9 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !5074
  call void @sk_start_draw_stroke(%struct.SK_Sketch* %9), !dbg !5075
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5076
  %11 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !5077
  %12 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !5078
  %active_stroke = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %12, i32 0, i32 2, !dbg !5079
  %13 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke, align 8, !dbg !5079
  %14 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd, align 8, !dbg !5080
  %15 = load i8, i8* %snap, align 1, !dbg !5081
  %call3 = call i32 @sk_draw_stroke(%struct.bContext* %10, %struct.SK_Sketch* %11, %struct.SK_Stroke* %13, %struct.SK_DrawData* %14, i8 zeroext %15), !dbg !5082
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5083
  %17 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5084
  %call4 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %16, %struct.wmOperator* %17), !dbg !5085
  ret i32 1, !dbg !5086
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sketch_draw_stroke_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !5087 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5088, metadata !DIExpression()), !dbg !5089
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5090, metadata !DIExpression()), !dbg !5091
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5092, metadata !DIExpression()), !dbg !5093
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !5094, metadata !DIExpression()), !dbg !5095
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5096
  %call = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %0, i32 1), !dbg !5097
  store %struct.SK_Sketch* %call, %struct.SK_Sketch** %sketch, align 8, !dbg !5095
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5098
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5099
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5100
  %4 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !5101
  %active_stroke = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %4, i32 0, i32 2, !dbg !5102
  %5 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke, align 8, !dbg !5102
  %call1 = call i32 @sketch_draw_modal(%struct.bContext* %1, %struct.wmOperator* %2, %struct.wmEvent* %3, i16 signext 0, %struct.SK_Stroke* %5), !dbg !5103
  ret i32 %call1, !dbg !5104
}

; Function Attrs: noinline nounwind uwtable
define internal void @sketch_draw_stroke_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5105 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5108, metadata !DIExpression()), !dbg !5109
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5110, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !5112, metadata !DIExpression()), !dbg !5113
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5114
  %call = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %0, i32 1), !dbg !5115
  store %struct.SK_Sketch* %call, %struct.SK_Sketch** %sketch, align 8, !dbg !5113
  %1 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !5116
  call void @sk_cancelStroke(%struct.SK_Sketch* %1), !dbg !5117
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5118
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5119
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 5, !dbg !5120
  %4 = load i8*, i8** %customdata, align 8, !dbg !5120
  call void %2(i8* %4), !dbg !5118
  ret void, !dbg !5121
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @SKETCH_OT_gesture(%struct.wmOperatorType* %ot) #0 !dbg !5122 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5123, metadata !DIExpression()), !dbg !5124
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5125
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5126
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i8** %name, align 8, !dbg !5127
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5128
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5129
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26, i64 0, i64 0), i8** %idname, align 8, !dbg !5130
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5131
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5132
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i64 0, i64 0), i8** %description, align 8, !dbg !5133
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5134
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5135
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @sketch_draw_gesture, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5136
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5137
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !5138
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @sketch_draw_gesture_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !5139
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5140
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 7, !dbg !5141
  store void (%struct.bContext*, %struct.wmOperator*)* @sketch_draw_gesture_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !5142
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5143
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !5144
  store i32 (%struct.bContext*)* @ED_operator_sketch_mode_gesture, i32 (%struct.bContext*)** %poll, align 8, !dbg !5145
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5146
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !5147
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5147
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !5146
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)), !dbg !5148
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5149
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 19, !dbg !5150
  store i16 4, i16* %flag, align 8, !dbg !5151
  ret void, !dbg !5152
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sketch_draw_gesture(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !5153 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %snap = alloca i8, align 1
  %dd = alloca %struct.SK_DrawData*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5154, metadata !DIExpression()), !dbg !5155
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5156, metadata !DIExpression()), !dbg !5157
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5158, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.declare(metadata i8* %snap, metadata !5160, metadata !DIExpression()), !dbg !5161
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5162
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !5163
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5163
  %call = call i32 @RNA_boolean_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0)), !dbg !5164
  %conv = trunc i32 %call to i8, !dbg !5164
  store i8 %conv, i8* %snap, align 1, !dbg !5161
  call void @llvm.dbg.declare(metadata %struct.SK_DrawData** %dd, metadata !5165, metadata !DIExpression()), !dbg !5166
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !5167, metadata !DIExpression()), !dbg !5168
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5169
  %call1 = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %2, i32 1), !dbg !5170
  store %struct.SK_Sketch* %call1, %struct.SK_Sketch** %sketch, align 8, !dbg !5168
  %3 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !5171
  call void @sk_cancelStroke(%struct.SK_Sketch* %3), !dbg !5172
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5173
  %call2 = call i8* %4(i64 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0)), !dbg !5173
  %5 = bitcast i8* %call2 to %struct.SK_DrawData*, !dbg !5173
  store %struct.SK_DrawData* %5, %struct.SK_DrawData** %dd, align 8, !dbg !5174
  %6 = bitcast %struct.SK_DrawData* %5 to i8*, !dbg !5175
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5176
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 5, !dbg !5177
  store i8* %6, i8** %customdata, align 8, !dbg !5178
  %8 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd, align 8, !dbg !5179
  %9 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5180
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %9, i32 0, i32 6, !dbg !5181
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !5180
  call void @sk_initDrawData(%struct.SK_DrawData* %8, i32* %arraydecay), !dbg !5182
  %10 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !5183
  call void @sk_start_draw_gesture(%struct.SK_Sketch* %10), !dbg !5184
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5185
  %12 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !5186
  %13 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !5187
  %gesture = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %13, i32 0, i32 3, !dbg !5188
  %14 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture, align 8, !dbg !5188
  %15 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd, align 8, !dbg !5189
  %16 = load i8, i8* %snap, align 1, !dbg !5190
  %call3 = call i32 @sk_draw_stroke(%struct.bContext* %11, %struct.SK_Sketch* %12, %struct.SK_Stroke* %14, %struct.SK_DrawData* %15, i8 zeroext %16), !dbg !5191
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5192
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5193
  %call4 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %17, %struct.wmOperator* %18), !dbg !5194
  ret i32 1, !dbg !5195
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sketch_draw_gesture_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !5196 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5197, metadata !DIExpression()), !dbg !5198
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5199, metadata !DIExpression()), !dbg !5200
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5201, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !5203, metadata !DIExpression()), !dbg !5204
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5205
  %call = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %0, i32 1), !dbg !5206
  store %struct.SK_Sketch* %call, %struct.SK_Sketch** %sketch, align 8, !dbg !5204
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5207
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5208
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5209
  %4 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !5210
  %gesture = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %4, i32 0, i32 3, !dbg !5211
  %5 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture, align 8, !dbg !5211
  %call1 = call i32 @sketch_draw_modal(%struct.bContext* %1, %struct.wmOperator* %2, %struct.wmEvent* %3, i16 signext 1, %struct.SK_Stroke* %5), !dbg !5212
  ret i32 %call1, !dbg !5213
}

; Function Attrs: noinline nounwind uwtable
define internal void @sketch_draw_gesture_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5214 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5215, metadata !DIExpression()), !dbg !5216
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5217, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !5219, metadata !DIExpression()), !dbg !5220
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5221
  %call = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %0, i32 1), !dbg !5222
  store %struct.SK_Sketch* %call, %struct.SK_Sketch** %sketch, align 8, !dbg !5220
  %1 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !5223
  call void @sk_cancelStroke(%struct.SK_Sketch* %1), !dbg !5224
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5225
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5226
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 5, !dbg !5227
  %4 = load i8*, i8** %customdata, align 8, !dbg !5227
  call void %2(i8* %4), !dbg !5225
  ret void, !dbg !5228
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ED_operator_sketch_mode_gesture(%struct.bContext* %C) #0 !dbg !5229 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5230, metadata !DIExpression()), !dbg !5231
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !5232, metadata !DIExpression()), !dbg !5233
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5234
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !5235
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !5233
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !5236, metadata !DIExpression()), !dbg !5237
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5238
  %call1 = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %1, i32 0), !dbg !5239
  store %struct.SK_Sketch* %call1, %struct.SK_Sketch** %sketch, align 8, !dbg !5237
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !5240
  %bone_sketching = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 42, !dbg !5242
  %3 = load i8, i8* %bone_sketching, align 8, !dbg !5242
  %conv = zext i8 %3 to i32, !dbg !5240
  %and = and i32 %conv, 1, !dbg !5243
  %tobool = icmp ne i32 %and, 0, !dbg !5243
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !5244

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !5245
  %bone_sketching2 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %4, i32 0, i32 42, !dbg !5246
  %5 = load i8, i8* %bone_sketching2, align 8, !dbg !5246
  %conv3 = zext i8 %5 to i32, !dbg !5245
  %and4 = and i32 %conv3, 2, !dbg !5247
  %cmp = icmp eq i32 %and4, 0, !dbg !5248
  br i1 %cmp, label %land.lhs.true6, label %if.else, !dbg !5249

land.lhs.true6:                                   ; preds = %land.lhs.true
  %6 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !5250
  %cmp7 = icmp ne %struct.SK_Sketch* %6, null, !dbg !5251
  br i1 %cmp7, label %land.lhs.true9, label %if.else, !dbg !5252

land.lhs.true9:                                   ; preds = %land.lhs.true6
  %7 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !5253
  %active_stroke = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %7, i32 0, i32 2, !dbg !5254
  %8 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke, align 8, !dbg !5254
  %cmp10 = icmp eq %struct.SK_Stroke* %8, null, !dbg !5255
  br i1 %cmp10, label %if.then, label %if.else, !dbg !5256

if.then:                                          ; preds = %land.lhs.true9
  store i32 1, i32* %retval, align 4, !dbg !5257
  br label %return, !dbg !5257

if.else:                                          ; preds = %land.lhs.true9, %land.lhs.true6, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !5259
  br label %return, !dbg !5259

return:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !5261
  ret i32 %9, !dbg !5261
}

declare dso_local %struct.RigGraph* @RIG_graphFromArmature(%struct.bContext*, %struct.Object*, %struct.bArmature*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @headPoint(i8* %arg) #0 !dbg !5262 {
entry:
  %arg.addr = alloca i8*, align 8
  %iter = alloca %struct.SK_StrokeIterator*, align 8
  %result = alloca %struct.SK_Point*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5263, metadata !DIExpression()), !dbg !5264
  call void @llvm.dbg.declare(metadata %struct.SK_StrokeIterator** %iter, metadata !5265, metadata !DIExpression()), !dbg !5266
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !5267
  %1 = bitcast i8* %0 to %struct.SK_StrokeIterator*, !dbg !5268
  store %struct.SK_StrokeIterator* %1, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5266
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %result, metadata !5269, metadata !DIExpression()), !dbg !5270
  store %struct.SK_Point* null, %struct.SK_Point** %result, align 8, !dbg !5270
  %2 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5271
  %stroke = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %2, i32 0, i32 12, !dbg !5272
  %3 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke, align 8, !dbg !5272
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %3, i32 0, i32 2, !dbg !5273
  %4 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !5273
  %5 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5274
  %start = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %5, i32 0, i32 13, !dbg !5275
  %6 = load i32, i32* %start, align 8, !dbg !5275
  %7 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5276
  %stride = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %7, i32 0, i32 15, !dbg !5277
  %8 = load i32, i32* %stride, align 8, !dbg !5277
  %sub = sub nsw i32 %6, %8, !dbg !5278
  %idxprom = sext i32 %sub to i64, !dbg !5271
  %arrayidx = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %4, i64 %idxprom, !dbg !5271
  store %struct.SK_Point* %arrayidx, %struct.SK_Point** %result, align 8, !dbg !5279
  %9 = load %struct.SK_Point*, %struct.SK_Point** %result, align 8, !dbg !5280
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %9, i32 0, i32 0, !dbg !5281
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !5280
  %10 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5282
  %p1 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %10, i32 0, i32 7, !dbg !5283
  store float* %arraydecay, float** %p1, align 8, !dbg !5284
  %11 = load %struct.SK_Point*, %struct.SK_Point** %result, align 8, !dbg !5285
  %no = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %11, i32 0, i32 2, !dbg !5286
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5285
  %12 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5287
  %no3 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %12, i32 0, i32 8, !dbg !5288
  store float* %arraydecay2, float** %no3, align 8, !dbg !5289
  %13 = load %struct.SK_Point*, %struct.SK_Point** %result, align 8, !dbg !5290
  %size = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %13, i32 0, i32 3, !dbg !5291
  %14 = load float, float* %size, align 4, !dbg !5291
  %15 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5292
  %size4 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %15, i32 0, i32 9, !dbg !5293
  store float %14, float* %size4, align 8, !dbg !5294
  %16 = load %struct.SK_Point*, %struct.SK_Point** %result, align 8, !dbg !5295
  %17 = bitcast %struct.SK_Point* %16 to i8*, !dbg !5295
  ret i8* %17, !dbg !5296
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @tailPoint(i8* %arg) #0 !dbg !5297 {
entry:
  %arg.addr = alloca i8*, align 8
  %iter = alloca %struct.SK_StrokeIterator*, align 8
  %result = alloca %struct.SK_Point*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5298, metadata !DIExpression()), !dbg !5299
  call void @llvm.dbg.declare(metadata %struct.SK_StrokeIterator** %iter, metadata !5300, metadata !DIExpression()), !dbg !5301
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !5302
  %1 = bitcast i8* %0 to %struct.SK_StrokeIterator*, !dbg !5303
  store %struct.SK_StrokeIterator* %1, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5301
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %result, metadata !5304, metadata !DIExpression()), !dbg !5305
  store %struct.SK_Point* null, %struct.SK_Point** %result, align 8, !dbg !5305
  %2 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5306
  %stroke = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %2, i32 0, i32 12, !dbg !5307
  %3 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke, align 8, !dbg !5307
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %3, i32 0, i32 2, !dbg !5308
  %4 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !5308
  %5 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5309
  %end = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %5, i32 0, i32 14, !dbg !5310
  %6 = load i32, i32* %end, align 4, !dbg !5310
  %7 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5311
  %stride = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %7, i32 0, i32 15, !dbg !5312
  %8 = load i32, i32* %stride, align 8, !dbg !5312
  %add = add nsw i32 %6, %8, !dbg !5313
  %idxprom = sext i32 %add to i64, !dbg !5306
  %arrayidx = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %4, i64 %idxprom, !dbg !5306
  store %struct.SK_Point* %arrayidx, %struct.SK_Point** %result, align 8, !dbg !5314
  %9 = load %struct.SK_Point*, %struct.SK_Point** %result, align 8, !dbg !5315
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %9, i32 0, i32 0, !dbg !5316
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !5315
  %10 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5317
  %p1 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %10, i32 0, i32 7, !dbg !5318
  store float* %arraydecay, float** %p1, align 8, !dbg !5319
  %11 = load %struct.SK_Point*, %struct.SK_Point** %result, align 8, !dbg !5320
  %no = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %11, i32 0, i32 2, !dbg !5321
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5320
  %12 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5322
  %no3 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %12, i32 0, i32 8, !dbg !5323
  store float* %arraydecay2, float** %no3, align 8, !dbg !5324
  %13 = load %struct.SK_Point*, %struct.SK_Point** %result, align 8, !dbg !5325
  %size = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %13, i32 0, i32 3, !dbg !5326
  %14 = load float, float* %size, align 4, !dbg !5326
  %15 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5327
  %size4 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %15, i32 0, i32 9, !dbg !5328
  store float %14, float* %size4, align 8, !dbg !5329
  %16 = load %struct.SK_Point*, %struct.SK_Point** %result, align 8, !dbg !5330
  %17 = bitcast %struct.SK_Point* %16 to i8*, !dbg !5330
  ret i8* %17, !dbg !5331
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @peekPoint(i8* %arg, i32 %n) #0 !dbg !5332 {
entry:
  %arg.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %iter = alloca %struct.SK_StrokeIterator*, align 8
  %result = alloca %struct.SK_Point*, align 8
  %index = alloca i32, align 4
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5333, metadata !DIExpression()), !dbg !5334
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5335, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.declare(metadata %struct.SK_StrokeIterator** %iter, metadata !5337, metadata !DIExpression()), !dbg !5338
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !5339
  %1 = bitcast i8* %0 to %struct.SK_StrokeIterator*, !dbg !5340
  store %struct.SK_StrokeIterator* %1, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5338
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %result, metadata !5341, metadata !DIExpression()), !dbg !5342
  store %struct.SK_Point* null, %struct.SK_Point** %result, align 8, !dbg !5342
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5343, metadata !DIExpression()), !dbg !5344
  %2 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5345
  %index1 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %2, i32 0, i32 11, !dbg !5346
  %3 = load i32, i32* %index1, align 8, !dbg !5346
  %4 = load i32, i32* %n.addr, align 4, !dbg !5347
  %add = add nsw i32 %3, %4, !dbg !5348
  store i32 %add, i32* %index, align 4, !dbg !5344
  %5 = load i32, i32* %index, align 4, !dbg !5349
  %6 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5351
  %length = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %6, i32 0, i32 10, !dbg !5352
  %7 = load i32, i32* %length, align 4, !dbg !5352
  %cmp = icmp slt i32 %5, %7, !dbg !5353
  br i1 %cmp, label %if.then, label %if.end, !dbg !5354

if.then:                                          ; preds = %entry
  %8 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5355
  %9 = load i32, i32* %index, align 4, !dbg !5357
  %call = call %struct.SK_Point* @setIteratorValues(%struct.SK_StrokeIterator* %8, i32 %9), !dbg !5358
  store %struct.SK_Point* %call, %struct.SK_Point** %result, align 8, !dbg !5359
  br label %if.end, !dbg !5360

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.SK_Point*, %struct.SK_Point** %result, align 8, !dbg !5361
  %11 = bitcast %struct.SK_Point* %10 to i8*, !dbg !5361
  ret i8* %11, !dbg !5362
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @nextPoint(i8* %arg) #0 !dbg !5363 {
entry:
  %arg.addr = alloca i8*, align 8
  %iter = alloca %struct.SK_StrokeIterator*, align 8
  %result = alloca %struct.SK_Point*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5364, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.declare(metadata %struct.SK_StrokeIterator** %iter, metadata !5366, metadata !DIExpression()), !dbg !5367
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !5368
  %1 = bitcast i8* %0 to %struct.SK_StrokeIterator*, !dbg !5369
  store %struct.SK_StrokeIterator* %1, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5367
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %result, metadata !5370, metadata !DIExpression()), !dbg !5371
  store %struct.SK_Point* null, %struct.SK_Point** %result, align 8, !dbg !5371
  %2 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5372
  %index = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %2, i32 0, i32 11, !dbg !5373
  %3 = load i32, i32* %index, align 8, !dbg !5374
  %inc = add nsw i32 %3, 1, !dbg !5374
  store i32 %inc, i32* %index, align 8, !dbg !5374
  %4 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5375
  %index1 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %4, i32 0, i32 11, !dbg !5377
  %5 = load i32, i32* %index1, align 8, !dbg !5377
  %6 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5378
  %length = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %6, i32 0, i32 10, !dbg !5379
  %7 = load i32, i32* %length, align 4, !dbg !5379
  %cmp = icmp slt i32 %5, %7, !dbg !5380
  br i1 %cmp, label %if.then, label %if.end, !dbg !5381

if.then:                                          ; preds = %entry
  %8 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5382
  %9 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5384
  %index2 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %9, i32 0, i32 11, !dbg !5385
  %10 = load i32, i32* %index2, align 8, !dbg !5385
  %call = call %struct.SK_Point* @setIteratorValues(%struct.SK_StrokeIterator* %8, i32 %10), !dbg !5386
  store %struct.SK_Point* %call, %struct.SK_Point** %result, align 8, !dbg !5387
  br label %if.end, !dbg !5388

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.SK_Point*, %struct.SK_Point** %result, align 8, !dbg !5389
  %12 = bitcast %struct.SK_Point* %11 to i8*, !dbg !5389
  ret i8* %12, !dbg !5390
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @nextNPoint(i8* %arg, i32 %n) #0 !dbg !5391 {
entry:
  %arg.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %iter = alloca %struct.SK_StrokeIterator*, align 8
  %result = alloca %struct.SK_Point*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5392, metadata !DIExpression()), !dbg !5393
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5394, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.declare(metadata %struct.SK_StrokeIterator** %iter, metadata !5396, metadata !DIExpression()), !dbg !5397
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !5398
  %1 = bitcast i8* %0 to %struct.SK_StrokeIterator*, !dbg !5399
  store %struct.SK_StrokeIterator* %1, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5397
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %result, metadata !5400, metadata !DIExpression()), !dbg !5401
  store %struct.SK_Point* null, %struct.SK_Point** %result, align 8, !dbg !5401
  %2 = load i32, i32* %n.addr, align 4, !dbg !5402
  %3 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5403
  %index = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %3, i32 0, i32 11, !dbg !5404
  %4 = load i32, i32* %index, align 8, !dbg !5405
  %add = add nsw i32 %4, %2, !dbg !5405
  store i32 %add, i32* %index, align 8, !dbg !5405
  %5 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5406
  %index1 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %5, i32 0, i32 11, !dbg !5408
  %6 = load i32, i32* %index1, align 8, !dbg !5408
  %7 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5409
  %length = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %7, i32 0, i32 10, !dbg !5410
  %8 = load i32, i32* %length, align 4, !dbg !5410
  %cmp = icmp slt i32 %6, %8, !dbg !5411
  br i1 %cmp, label %if.then, label %if.end, !dbg !5412

if.then:                                          ; preds = %entry
  %9 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5413
  %10 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5415
  %index2 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %10, i32 0, i32 11, !dbg !5416
  %11 = load i32, i32* %index2, align 8, !dbg !5416
  %call = call %struct.SK_Point* @setIteratorValues(%struct.SK_StrokeIterator* %9, i32 %11), !dbg !5417
  store %struct.SK_Point* %call, %struct.SK_Point** %result, align 8, !dbg !5418
  br label %if.end, !dbg !5419

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.SK_Point*, %struct.SK_Point** %result, align 8, !dbg !5420
  %13 = bitcast %struct.SK_Point* %12 to i8*, !dbg !5420
  ret i8* %13, !dbg !5421
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @previousPoint(i8* %arg) #0 !dbg !5422 {
entry:
  %arg.addr = alloca i8*, align 8
  %iter = alloca %struct.SK_StrokeIterator*, align 8
  %result = alloca %struct.SK_Point*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5423, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.declare(metadata %struct.SK_StrokeIterator** %iter, metadata !5425, metadata !DIExpression()), !dbg !5426
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !5427
  %1 = bitcast i8* %0 to %struct.SK_StrokeIterator*, !dbg !5428
  store %struct.SK_StrokeIterator* %1, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5426
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %result, metadata !5429, metadata !DIExpression()), !dbg !5430
  store %struct.SK_Point* null, %struct.SK_Point** %result, align 8, !dbg !5430
  %2 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5431
  %index = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %2, i32 0, i32 11, !dbg !5433
  %3 = load i32, i32* %index, align 8, !dbg !5433
  %cmp = icmp sgt i32 %3, 0, !dbg !5434
  br i1 %cmp, label %if.then, label %if.end, !dbg !5435

if.then:                                          ; preds = %entry
  %4 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5436
  %index1 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %4, i32 0, i32 11, !dbg !5438
  %5 = load i32, i32* %index1, align 8, !dbg !5439
  %dec = add nsw i32 %5, -1, !dbg !5439
  store i32 %dec, i32* %index1, align 8, !dbg !5439
  %6 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5440
  %7 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5441
  %index2 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %7, i32 0, i32 11, !dbg !5442
  %8 = load i32, i32* %index2, align 8, !dbg !5442
  %call = call %struct.SK_Point* @setIteratorValues(%struct.SK_StrokeIterator* %6, i32 %8), !dbg !5443
  store %struct.SK_Point* %call, %struct.SK_Point** %result, align 8, !dbg !5444
  br label %if.end, !dbg !5445

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.SK_Point*, %struct.SK_Point** %result, align 8, !dbg !5446
  %10 = bitcast %struct.SK_Point* %9 to i8*, !dbg !5446
  ret i8* %10, !dbg !5447
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @iteratorStopped(i8* %arg) #0 !dbg !5448 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %iter = alloca %struct.SK_StrokeIterator*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5449, metadata !DIExpression()), !dbg !5450
  call void @llvm.dbg.declare(metadata %struct.SK_StrokeIterator** %iter, metadata !5451, metadata !DIExpression()), !dbg !5452
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !5453
  %1 = bitcast i8* %0 to %struct.SK_StrokeIterator*, !dbg !5454
  store %struct.SK_StrokeIterator* %1, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5452
  %2 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5455
  %index = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %2, i32 0, i32 11, !dbg !5457
  %3 = load i32, i32* %index, align 8, !dbg !5457
  %4 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter, align 8, !dbg !5458
  %length = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %4, i32 0, i32 10, !dbg !5459
  %5 = load i32, i32* %length, align 4, !dbg !5459
  %cmp = icmp sge i32 %3, %5, !dbg !5460
  br i1 %cmp, label %if.then, label %if.else, !dbg !5461

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !5462
  br label %return, !dbg !5462

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5464
  br label %return, !dbg !5464

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !5466
  ret i32 %6, !dbg !5466
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.SK_Point* @setIteratorValues(%struct.SK_StrokeIterator* %iter, i32 %index) #0 !dbg !5467 {
entry:
  %iter.addr = alloca %struct.SK_StrokeIterator*, align 8
  %index.addr = alloca i32, align 4
  %pt = alloca %struct.SK_Point*, align 8
  store %struct.SK_StrokeIterator* %iter, %struct.SK_StrokeIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_StrokeIterator** %iter.addr, metadata !5470, metadata !DIExpression()), !dbg !5471
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5472, metadata !DIExpression()), !dbg !5473
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %pt, metadata !5474, metadata !DIExpression()), !dbg !5475
  store %struct.SK_Point* null, %struct.SK_Point** %pt, align 8, !dbg !5475
  %0 = load i32, i32* %index.addr, align 4, !dbg !5476
  %cmp = icmp sge i32 %0, 0, !dbg !5478
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5479

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %index.addr, align 4, !dbg !5480
  %2 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter.addr, align 8, !dbg !5481
  %length = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %2, i32 0, i32 10, !dbg !5482
  %3 = load i32, i32* %length, align 4, !dbg !5482
  %cmp1 = icmp slt i32 %1, %3, !dbg !5483
  br i1 %cmp1, label %if.then, label %if.else, !dbg !5484

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter.addr, align 8, !dbg !5485
  %stroke = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %4, i32 0, i32 12, !dbg !5487
  %5 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke, align 8, !dbg !5487
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %5, i32 0, i32 2, !dbg !5488
  %6 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !5488
  %7 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter.addr, align 8, !dbg !5489
  %start = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %7, i32 0, i32 13, !dbg !5490
  %8 = load i32, i32* %start, align 8, !dbg !5490
  %9 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter.addr, align 8, !dbg !5491
  %stride = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %9, i32 0, i32 15, !dbg !5492
  %10 = load i32, i32* %stride, align 8, !dbg !5492
  %11 = load i32, i32* %index.addr, align 4, !dbg !5493
  %mul = mul nsw i32 %10, %11, !dbg !5494
  %add = add nsw i32 %8, %mul, !dbg !5495
  %idxprom = sext i32 %add to i64, !dbg !5485
  %arrayidx = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %6, i64 %idxprom, !dbg !5485
  store %struct.SK_Point* %arrayidx, %struct.SK_Point** %pt, align 8, !dbg !5496
  %12 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !5497
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %12, i32 0, i32 0, !dbg !5498
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !5497
  %13 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter.addr, align 8, !dbg !5499
  %p2 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %13, i32 0, i32 7, !dbg !5500
  store float* %arraydecay, float** %p2, align 8, !dbg !5501
  %14 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !5502
  %no = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %14, i32 0, i32 2, !dbg !5503
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5502
  %15 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter.addr, align 8, !dbg !5504
  %no4 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %15, i32 0, i32 8, !dbg !5505
  store float* %arraydecay3, float** %no4, align 8, !dbg !5506
  %16 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !5507
  %size = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %16, i32 0, i32 3, !dbg !5508
  %17 = load float, float* %size, align 4, !dbg !5508
  %18 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter.addr, align 8, !dbg !5509
  %size5 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %18, i32 0, i32 9, !dbg !5510
  store float %17, float* %size5, align 8, !dbg !5511
  br label %if.end, !dbg !5512

if.else:                                          ; preds = %land.lhs.true, %entry
  %19 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter.addr, align 8, !dbg !5513
  %p6 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %19, i32 0, i32 7, !dbg !5515
  store float* null, float** %p6, align 8, !dbg !5516
  %20 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter.addr, align 8, !dbg !5517
  %no7 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %20, i32 0, i32 8, !dbg !5518
  store float* null, float** %no7, align 8, !dbg !5519
  %21 = load %struct.SK_StrokeIterator*, %struct.SK_StrokeIterator** %iter.addr, align 8, !dbg !5520
  %size8 = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %21, i32 0, i32 9, !dbg !5521
  store float 0.000000e+00, float* %size8, align 8, !dbg !5522
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %22 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !5523
  ret %struct.SK_Point* %22, !dbg !5524
}

; Function Attrs: noinline nounwind uwtable
define internal void @sk_retargetStroke(%struct.bContext* %C, %struct.SK_Stroke* %stk) #0 !dbg !5525 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %obedit = alloca %struct.Object*, align 8
  %imat = alloca [4 x [4 x float]], align 16
  %tmat = alloca [3 x [3 x float]], align 16
  %arc = alloca %struct.ReebArc*, align 8
  %rg = alloca %struct.RigGraph*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5528, metadata !DIExpression()), !dbg !5529
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !5530, metadata !DIExpression()), !dbg !5531
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !5532, metadata !DIExpression()), !dbg !5533
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5534
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !5535
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !5533
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5536, metadata !DIExpression()), !dbg !5537
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5538
  %call1 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %1), !dbg !5539
  store %struct.Object* %call1, %struct.Object** %obedit, align 8, !dbg !5537
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !5540, metadata !DIExpression()), !dbg !5541
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %tmat, metadata !5542, metadata !DIExpression()), !dbg !5543
  call void @llvm.dbg.declare(metadata %struct.ReebArc** %arc, metadata !5544, metadata !DIExpression()), !dbg !5547
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg, metadata !5548, metadata !DIExpression()), !dbg !5549
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !5550
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5551
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 47, !dbg !5552
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !5551
  %call3 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay2), !dbg !5553
  %arraydecay4 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !5554
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5555
  %obmat5 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 47, !dbg !5556
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat5, i64 0, i64 0, !dbg !5555
  call void @copy_m3_m4([3 x float]* %arraydecay4, [4 x float]* %arraydecay6), !dbg !5557
  %arraydecay7 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !5558
  call void @transpose_m3([3 x float]* %arraydecay7), !dbg !5559
  %4 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !5560
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !5561
  %arraydecay9 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !5562
  %call10 = call %struct.ReebArc* @sk_strokeToArc(%struct.SK_Stroke* %4, [4 x float]* %arraydecay8, [3 x float]* %arraydecay9), !dbg !5563
  store %struct.ReebArc* %call10, %struct.ReebArc** %arc, align 8, !dbg !5564
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5565
  %6 = load %struct.ReebArc*, %struct.ReebArc** %arc, align 8, !dbg !5566
  call void @sk_autoname(%struct.bContext* %5, %struct.ReebArc* %6), !dbg !5567
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5568
  %8 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !5569
  %skgen_template = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %8, i32 0, i32 41, !dbg !5570
  %9 = load %struct.Object*, %struct.Object** %skgen_template, align 8, !dbg !5570
  %call11 = call %struct.RigGraph* @sk_makeTemplateGraph(%struct.bContext* %7, %struct.Object* %9), !dbg !5571
  store %struct.RigGraph* %call11, %struct.RigGraph** %rg, align 8, !dbg !5572
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5573
  %11 = load %struct.ReebArc*, %struct.ReebArc** %arc, align 8, !dbg !5574
  %12 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5575
  call void @BIF_retargetArc(%struct.bContext* %10, %struct.ReebArc* %11, %struct.RigGraph* %12), !dbg !5576
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5577
  call void @sk_autoname(%struct.bContext* %13, %struct.ReebArc* null), !dbg !5578
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5579
  %15 = load %struct.ReebArc*, %struct.ReebArc** %arc, align 8, !dbg !5580
  %head = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %15, i32 0, i32 2, !dbg !5581
  %16 = load %struct.ReebNode*, %struct.ReebNode** %head, align 8, !dbg !5581
  %17 = bitcast %struct.ReebNode* %16 to i8*, !dbg !5580
  call void %14(i8* %17), !dbg !5579
  %18 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5582
  %19 = load %struct.ReebArc*, %struct.ReebArc** %arc, align 8, !dbg !5583
  %tail = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %19, i32 0, i32 3, !dbg !5584
  %20 = load %struct.ReebNode*, %struct.ReebNode** %tail, align 8, !dbg !5584
  %21 = bitcast %struct.ReebNode* %20 to i8*, !dbg !5583
  call void %18(i8* %21), !dbg !5582
  %22 = load %struct.ReebArc*, %struct.ReebArc** %arc, align 8, !dbg !5585
  %23 = bitcast %struct.ReebArc* %22 to %struct.BArc*, !dbg !5586
  call void @REEB_freeArc(%struct.BArc* %23), !dbg !5587
  ret void, !dbg !5588
}

; Function Attrs: noinline nounwind uwtable
define internal void @sk_convertStroke(%struct.bContext* %C, %struct.SK_Stroke* %stk) #0 !dbg !5589 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  %obedit = alloca %struct.Object*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %head = alloca %struct.SK_Point*, align 8
  %parent = alloca %struct.EditBone*, align 8
  %invmat = alloca [4 x [4 x float]], align 16
  %tmat = alloca [3 x [3 x float]], align 16
  %head_index = alloca i32, align 4
  %i = alloca i32, align 4
  %pt = alloca %struct.SK_Point*, align 8
  %bone = alloca %struct.EditBone*, align 8
  %new_parent = alloca %struct.EditBone*, align 8
  %sk_iter = alloca %struct.SK_StrokeIterator, align 8
  %iter = alloca %struct.BArcIterator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5590, metadata !DIExpression()), !dbg !5591
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !5592, metadata !DIExpression()), !dbg !5593
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5594, metadata !DIExpression()), !dbg !5595
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5596
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5597
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5595
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !5598, metadata !DIExpression()), !dbg !5599
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5600
  %call1 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %1), !dbg !5601
  store %struct.ToolSettings* %call1, %struct.ToolSettings** %ts, align 8, !dbg !5599
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !5602, metadata !DIExpression()), !dbg !5603
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5604
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !5605
  %3 = load i8*, i8** %data, align 8, !dbg !5605
  %4 = bitcast i8* %3 to %struct.bArmature*, !dbg !5604
  store %struct.bArmature* %4, %struct.bArmature** %arm, align 8, !dbg !5603
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %head, metadata !5606, metadata !DIExpression()), !dbg !5607
  call void @llvm.dbg.declare(metadata %struct.EditBone** %parent, metadata !5608, metadata !DIExpression()), !dbg !5611
  store %struct.EditBone* null, %struct.EditBone** %parent, align 8, !dbg !5611
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %invmat, metadata !5612, metadata !DIExpression()), !dbg !5613
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %tmat, metadata !5614, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.declare(metadata i32* %head_index, metadata !5616, metadata !DIExpression()), !dbg !5617
  store i32 0, i32* %head_index, align 4, !dbg !5617
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5618, metadata !DIExpression()), !dbg !5619
  store %struct.SK_Point* null, %struct.SK_Point** %head, align 8, !dbg !5620
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat, i64 0, i64 0, !dbg !5621
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5622
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 47, !dbg !5623
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !5622
  %call3 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay2), !dbg !5624
  %arraydecay4 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !5625
  %6 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5626
  %obmat5 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 47, !dbg !5627
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat5, i64 0, i64 0, !dbg !5626
  call void @copy_m3_m4([3 x float]* %arraydecay4, [4 x float]* %arraydecay6), !dbg !5628
  %arraydecay7 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !5629
  call void @transpose_m3([3 x float]* %arraydecay7), !dbg !5630
  store i32 0, i32* %i, align 4, !dbg !5631
  br label %for.cond, !dbg !5633

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !5634
  %8 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !5636
  %nb_points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %8, i32 0, i32 3, !dbg !5637
  %9 = load i32, i32* %nb_points, align 8, !dbg !5637
  %cmp = icmp slt i32 %7, %9, !dbg !5638
  br i1 %cmp, label %for.body, label %for.end, !dbg !5639

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %pt, metadata !5640, metadata !DIExpression()), !dbg !5642
  %10 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !5643
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %10, i32 0, i32 2, !dbg !5644
  %11 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !5644
  %12 = load i32, i32* %i, align 4, !dbg !5645
  %idx.ext = sext i32 %12 to i64, !dbg !5646
  %add.ptr = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %11, i64 %idx.ext, !dbg !5646
  store %struct.SK_Point* %add.ptr, %struct.SK_Point** %pt, align 8, !dbg !5642
  %13 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !5647
  %type = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %13, i32 0, i32 4, !dbg !5649
  %14 = load i32, i32* %type, align 4, !dbg !5649
  %cmp8 = icmp eq i32 %14, 1, !dbg !5650
  br i1 %cmp8, label %if.then, label %if.end76, !dbg !5651

if.then:                                          ; preds = %for.body
  %15 = load %struct.SK_Point*, %struct.SK_Point** %head, align 8, !dbg !5652
  %cmp9 = icmp eq %struct.SK_Point* %15, null, !dbg !5655
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !5656

if.then10:                                        ; preds = %if.then
  %16 = load i32, i32* %i, align 4, !dbg !5657
  store i32 %16, i32* %head_index, align 4, !dbg !5659
  %17 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !5660
  store %struct.SK_Point* %17, %struct.SK_Point** %head, align 8, !dbg !5661
  br label %if.end75, !dbg !5662

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.EditBone** %bone, metadata !5663, metadata !DIExpression()), !dbg !5665
  store %struct.EditBone* null, %struct.EditBone** %bone, align 8, !dbg !5665
  call void @llvm.dbg.declare(metadata %struct.EditBone** %new_parent, metadata !5666, metadata !DIExpression()), !dbg !5667
  %18 = load i32, i32* %i, align 4, !dbg !5668
  %19 = load i32, i32* %head_index, align 4, !dbg !5670
  %sub = sub nsw i32 %18, %19, !dbg !5671
  %cmp11 = icmp sgt i32 %sub, 1, !dbg !5672
  br i1 %cmp11, label %if.then12, label %if.end41, !dbg !5673

if.then12:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.SK_StrokeIterator* %sk_iter, metadata !5674, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.declare(metadata %struct.BArcIterator** %iter, metadata !5677, metadata !DIExpression()), !dbg !5678
  %20 = bitcast %struct.SK_StrokeIterator* %sk_iter to %struct.BArcIterator*, !dbg !5679
  store %struct.BArcIterator* %20, %struct.BArcIterator** %iter, align 8, !dbg !5678
  %21 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !5680
  %22 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !5681
  %23 = load i32, i32* %head_index, align 4, !dbg !5682
  %24 = load i32, i32* %i, align 4, !dbg !5683
  call void @initStrokeIterator(%struct.BArcIterator* %21, %struct.SK_Stroke* %22, i32 %23, i32 %24), !dbg !5684
  %25 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !5685
  %bone_sketching_convert = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %25, i32 0, i32 43, !dbg !5687
  %26 = load i8, i8* %bone_sketching_convert, align 1, !dbg !5687
  %conv = zext i8 %26 to i32, !dbg !5685
  %cmp13 = icmp eq i32 %conv, 2, !dbg !5688
  br i1 %cmp13, label %if.then15, label %if.else19, !dbg !5689

if.then15:                                        ; preds = %if.then12
  %27 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !5690
  %28 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !5692
  %29 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !5693
  %edbo = getelementptr inbounds %struct.bArmature, %struct.bArmature* %29, i32 0, i32 4, !dbg !5694
  %30 = load %struct.ListBase*, %struct.ListBase** %edbo, align 8, !dbg !5694
  %31 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !5695
  %arraydecay16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat, i64 0, i64 0, !dbg !5696
  %arraydecay17 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !5697
  %call18 = call %struct.EditBone* @subdivideArcBy(%struct.ToolSettings* %27, %struct.bArmature* %28, %struct.ListBase* %30, %struct.BArcIterator* %31, [4 x float]* %arraydecay16, [3 x float]* %arraydecay17, i32 (%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*)* @nextAdaptativeSubdivision), !dbg !5698
  store %struct.EditBone* %call18, %struct.EditBone** %bone, align 8, !dbg !5699
  br label %if.end40, !dbg !5700

if.else19:                                        ; preds = %if.then12
  %32 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !5701
  %bone_sketching_convert20 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %32, i32 0, i32 43, !dbg !5703
  %33 = load i8, i8* %bone_sketching_convert20, align 1, !dbg !5703
  %conv21 = zext i8 %33 to i32, !dbg !5701
  %cmp22 = icmp eq i32 %conv21, 1, !dbg !5704
  br i1 %cmp22, label %if.then24, label %if.else29, !dbg !5705

if.then24:                                        ; preds = %if.else19
  %34 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !5706
  %35 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !5708
  %36 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !5709
  %edbo25 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %36, i32 0, i32 4, !dbg !5710
  %37 = load %struct.ListBase*, %struct.ListBase** %edbo25, align 8, !dbg !5710
  %38 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !5711
  %arraydecay26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat, i64 0, i64 0, !dbg !5712
  %arraydecay27 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !5713
  %call28 = call %struct.EditBone* @subdivideArcBy(%struct.ToolSettings* %34, %struct.bArmature* %35, %struct.ListBase* %37, %struct.BArcIterator* %38, [4 x float]* %arraydecay26, [3 x float]* %arraydecay27, i32 (%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*)* @nextLengthSubdivision), !dbg !5714
  store %struct.EditBone* %call28, %struct.EditBone** %bone, align 8, !dbg !5715
  br label %if.end39, !dbg !5716

if.else29:                                        ; preds = %if.else19
  %39 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !5717
  %bone_sketching_convert30 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %39, i32 0, i32 43, !dbg !5719
  %40 = load i8, i8* %bone_sketching_convert30, align 1, !dbg !5719
  %conv31 = zext i8 %40 to i32, !dbg !5717
  %cmp32 = icmp eq i32 %conv31, 0, !dbg !5720
  br i1 %cmp32, label %if.then34, label %if.end, !dbg !5721

if.then34:                                        ; preds = %if.else29
  %41 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !5722
  %42 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !5724
  %43 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !5725
  %edbo35 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %43, i32 0, i32 4, !dbg !5726
  %44 = load %struct.ListBase*, %struct.ListBase** %edbo35, align 8, !dbg !5726
  %45 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !5727
  %arraydecay36 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat, i64 0, i64 0, !dbg !5728
  %arraydecay37 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !5729
  %call38 = call %struct.EditBone* @subdivideArcBy(%struct.ToolSettings* %41, %struct.bArmature* %42, %struct.ListBase* %44, %struct.BArcIterator* %45, [4 x float]* %arraydecay36, [3 x float]* %arraydecay37, i32 (%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*)* @nextFixedSubdivision), !dbg !5730
  store %struct.EditBone* %call38, %struct.EditBone** %bone, align 8, !dbg !5731
  br label %if.end, !dbg !5732

if.end:                                           ; preds = %if.then34, %if.else29
  br label %if.end39

if.end39:                                         ; preds = %if.end, %if.then24
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then15
  br label %if.end41, !dbg !5733

if.end41:                                         ; preds = %if.end40, %if.else
  %46 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !5734
  %cmp42 = icmp eq %struct.EditBone* %46, null, !dbg !5736
  br i1 %cmp42, label %if.then44, label %if.end61, !dbg !5737

if.then44:                                        ; preds = %if.end41
  %47 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !5738
  %call45 = call %struct.EditBone* @ED_armature_edit_bone_add(%struct.bArmature* %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0)), !dbg !5740
  store %struct.EditBone* %call45, %struct.EditBone** %bone, align 8, !dbg !5741
  %48 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !5742
  %head46 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %48, i32 0, i32 7, !dbg !5743
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %head46, i64 0, i64 0, !dbg !5742
  %49 = load %struct.SK_Point*, %struct.SK_Point** %head, align 8, !dbg !5744
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %49, i32 0, i32 0, !dbg !5745
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !5744
  call void @copy_v3_v3(float* %arraydecay47, float* %arraydecay48), !dbg !5746
  %50 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !5747
  %tail = getelementptr inbounds %struct.EditBone, %struct.EditBone* %50, i32 0, i32 8, !dbg !5748
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !5747
  %51 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !5749
  %p50 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %51, i32 0, i32 0, !dbg !5750
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %p50, i64 0, i64 0, !dbg !5749
  call void @copy_v3_v3(float* %arraydecay49, float* %arraydecay51), !dbg !5751
  %arraydecay52 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat, i64 0, i64 0, !dbg !5752
  %52 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !5753
  %head53 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %52, i32 0, i32 7, !dbg !5754
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %head53, i64 0, i64 0, !dbg !5753
  call void @mul_m4_v3([4 x float]* %arraydecay52, float* %arraydecay54), !dbg !5755
  %arraydecay55 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat, i64 0, i64 0, !dbg !5756
  %53 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !5757
  %tail56 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %53, i32 0, i32 8, !dbg !5758
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %tail56, i64 0, i64 0, !dbg !5757
  call void @mul_m4_v3([4 x float]* %arraydecay55, float* %arraydecay57), !dbg !5759
  %54 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !5760
  %55 = load %struct.SK_Point*, %struct.SK_Point** %head, align 8, !dbg !5761
  %no = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %55, i32 0, i32 2, !dbg !5762
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5761
  %arraydecay59 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat, i64 0, i64 0, !dbg !5763
  %arraydecay60 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !5764
  call void @setBoneRollFromNormal(%struct.EditBone* %54, float* %arraydecay58, [4 x float]* %arraydecay59, [3 x float]* %arraydecay60), !dbg !5765
  br label %if.end61, !dbg !5766

if.end61:                                         ; preds = %if.then44, %if.end41
  %56 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !5767
  store %struct.EditBone* %56, %struct.EditBone** %new_parent, align 8, !dbg !5768
  %57 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !5769
  %flag = getelementptr inbounds %struct.EditBone, %struct.EditBone* %57, i32 0, i32 9, !dbg !5770
  %58 = load i32, i32* %flag, align 4, !dbg !5771
  %or = or i32 %58, 7, !dbg !5771
  store i32 %or, i32* %flag, align 4, !dbg !5771
  br label %while.cond, !dbg !5772

while.cond:                                       ; preds = %while.body, %if.end61
  %59 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !5773
  %parent62 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %59, i32 0, i32 3, !dbg !5774
  %60 = load %struct.EditBone*, %struct.EditBone** %parent62, align 8, !dbg !5774
  %cmp63 = icmp ne %struct.EditBone* %60, null, !dbg !5775
  br i1 %cmp63, label %while.body, label %while.end, !dbg !5772

while.body:                                       ; preds = %while.cond
  %61 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !5776
  %parent65 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %61, i32 0, i32 3, !dbg !5778
  %62 = load %struct.EditBone*, %struct.EditBone** %parent65, align 8, !dbg !5778
  store %struct.EditBone* %62, %struct.EditBone** %bone, align 8, !dbg !5779
  %63 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !5780
  %flag66 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %63, i32 0, i32 9, !dbg !5781
  %64 = load i32, i32* %flag66, align 4, !dbg !5782
  %or67 = or i32 %64, 7, !dbg !5782
  store i32 %or67, i32* %flag66, align 4, !dbg !5782
  br label %while.cond, !dbg !5772, !llvm.loop !5783

while.end:                                        ; preds = %while.cond
  %65 = load %struct.EditBone*, %struct.EditBone** %parent, align 8, !dbg !5785
  %cmp68 = icmp ne %struct.EditBone* %65, null, !dbg !5787
  br i1 %cmp68, label %if.then70, label %if.end74, !dbg !5788

if.then70:                                        ; preds = %while.end
  %66 = load %struct.EditBone*, %struct.EditBone** %parent, align 8, !dbg !5789
  %67 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !5791
  %parent71 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %67, i32 0, i32 3, !dbg !5792
  store %struct.EditBone* %66, %struct.EditBone** %parent71, align 8, !dbg !5793
  %68 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !5794
  %flag72 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %68, i32 0, i32 9, !dbg !5795
  %69 = load i32, i32* %flag72, align 4, !dbg !5796
  %or73 = or i32 %69, 16, !dbg !5796
  store i32 %or73, i32* %flag72, align 4, !dbg !5796
  br label %if.end74, !dbg !5797

if.end74:                                         ; preds = %if.then70, %while.end
  %70 = load %struct.EditBone*, %struct.EditBone** %new_parent, align 8, !dbg !5798
  store %struct.EditBone* %70, %struct.EditBone** %parent, align 8, !dbg !5799
  %71 = load i32, i32* %i, align 4, !dbg !5800
  store i32 %71, i32* %head_index, align 4, !dbg !5801
  %72 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !5802
  store %struct.SK_Point* %72, %struct.SK_Point** %head, align 8, !dbg !5803
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then10
  br label %if.end76, !dbg !5804

if.end76:                                         ; preds = %if.end75, %for.body
  br label %for.inc, !dbg !5805

for.inc:                                          ; preds = %if.end76
  %73 = load i32, i32* %i, align 4, !dbg !5806
  %inc = add nsw i32 %73, 1, !dbg !5806
  store i32 %inc, i32* %i, align 4, !dbg !5806
  br label %for.cond, !dbg !5807, !llvm.loop !5808

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5810
}

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local void @copy_m3_m4([3 x float]*, [4 x float]*) #2

declare dso_local void @transpose_m3([3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.ReebArc* @sk_strokeToArc(%struct.SK_Stroke* %stk, [4 x float]* %imat, [3 x float]* %tmat) #0 !dbg !5811 {
entry:
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  %imat.addr = alloca [4 x float]*, align 8
  %tmat.addr = alloca [3 x float]*, align 8
  %arc = alloca %struct.ReebArc*, align 8
  %i = alloca i32, align 4
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !5816, metadata !DIExpression()), !dbg !5817
  store [4 x float]* %imat, [4 x float]** %imat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %imat.addr, metadata !5818, metadata !DIExpression()), !dbg !5819
  store [3 x float]* %tmat, [3 x float]** %tmat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %tmat.addr, metadata !5820, metadata !DIExpression()), !dbg !5821
  call void @llvm.dbg.declare(metadata %struct.ReebArc** %arc, metadata !5822, metadata !DIExpression()), !dbg !5823
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5824, metadata !DIExpression()), !dbg !5825
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5826
  %call = call i8* %0(i64 112, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0)), !dbg !5826
  %1 = bitcast i8* %call to %struct.ReebArc*, !dbg !5826
  store %struct.ReebArc* %1, %struct.ReebArc** %arc, align 8, !dbg !5827
  %2 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !5828
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %2, i32 0, i32 2, !dbg !5829
  %3 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !5829
  %4 = load [4 x float]*, [4 x float]** %imat.addr, align 8, !dbg !5830
  %5 = load [3 x float]*, [3 x float]** %tmat.addr, align 8, !dbg !5831
  %call1 = call %struct.ReebNode* @sk_pointToNode(%struct.SK_Point* %3, [4 x float]* %4, [3 x float]* %5), !dbg !5832
  %6 = load %struct.ReebArc*, %struct.ReebArc** %arc, align 8, !dbg !5833
  %head = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %6, i32 0, i32 2, !dbg !5834
  store %struct.ReebNode* %call1, %struct.ReebNode** %head, align 8, !dbg !5835
  %7 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !5836
  %call2 = call %struct.SK_Point* @sk_lastStrokePoint(%struct.SK_Stroke* %7), !dbg !5837
  %8 = load [4 x float]*, [4 x float]** %imat.addr, align 8, !dbg !5838
  %9 = load [3 x float]*, [3 x float]** %tmat.addr, align 8, !dbg !5839
  %call3 = call %struct.ReebNode* @sk_pointToNode(%struct.SK_Point* %call2, [4 x float]* %8, [3 x float]* %9), !dbg !5840
  %10 = load %struct.ReebArc*, %struct.ReebArc** %arc, align 8, !dbg !5841
  %tail = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %10, i32 0, i32 3, !dbg !5842
  store %struct.ReebNode* %call3, %struct.ReebNode** %tail, align 8, !dbg !5843
  %11 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !5844
  %nb_points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %11, i32 0, i32 3, !dbg !5845
  %12 = load i32, i32* %nb_points, align 8, !dbg !5845
  %sub = sub nsw i32 %12, 2, !dbg !5846
  %13 = load %struct.ReebArc*, %struct.ReebArc** %arc, align 8, !dbg !5847
  %bcount = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %13, i32 0, i32 10, !dbg !5848
  store i32 %sub, i32* %bcount, align 8, !dbg !5849
  %14 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5850
  %15 = load %struct.ReebArc*, %struct.ReebArc** %arc, align 8, !dbg !5851
  %bcount4 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %15, i32 0, i32 10, !dbg !5852
  %16 = load i32, i32* %bcount4, align 8, !dbg !5852
  %conv = sext i32 %16 to i64, !dbg !5851
  %mul = mul i64 32, %conv, !dbg !5853
  %call5 = call i8* %14(i64 %mul, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0)), !dbg !5850
  %17 = bitcast i8* %call5 to %struct.EmbedBucket*, !dbg !5850
  %18 = load %struct.ReebArc*, %struct.ReebArc** %arc, align 8, !dbg !5854
  %buckets = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %18, i32 0, i32 11, !dbg !5855
  store %struct.EmbedBucket* %17, %struct.EmbedBucket** %buckets, align 8, !dbg !5856
  store i32 0, i32* %i, align 4, !dbg !5857
  br label %for.cond, !dbg !5859

for.cond:                                         ; preds = %for.inc, %entry
  %19 = load i32, i32* %i, align 4, !dbg !5860
  %20 = load %struct.ReebArc*, %struct.ReebArc** %arc, align 8, !dbg !5862
  %bcount6 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %20, i32 0, i32 10, !dbg !5863
  %21 = load i32, i32* %bcount6, align 8, !dbg !5863
  %cmp = icmp slt i32 %19, %21, !dbg !5864
  br i1 %cmp, label %for.body, label %for.end, !dbg !5865

for.body:                                         ; preds = %for.cond
  %22 = load %struct.ReebArc*, %struct.ReebArc** %arc, align 8, !dbg !5866
  %buckets8 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %22, i32 0, i32 11, !dbg !5868
  %23 = load %struct.EmbedBucket*, %struct.EmbedBucket** %buckets8, align 8, !dbg !5868
  %24 = load i32, i32* %i, align 4, !dbg !5869
  %idxprom = sext i32 %24 to i64, !dbg !5866
  %arrayidx = getelementptr inbounds %struct.EmbedBucket, %struct.EmbedBucket* %23, i64 %idxprom, !dbg !5866
  %p = getelementptr inbounds %struct.EmbedBucket, %struct.EmbedBucket* %arrayidx, i32 0, i32 2, !dbg !5870
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !5866
  %25 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !5871
  %points9 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %25, i32 0, i32 2, !dbg !5872
  %26 = load %struct.SK_Point*, %struct.SK_Point** %points9, align 8, !dbg !5872
  %27 = load i32, i32* %i, align 4, !dbg !5873
  %add = add nsw i32 %27, 1, !dbg !5874
  %idxprom10 = sext i32 %add to i64, !dbg !5871
  %arrayidx11 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %26, i64 %idxprom10, !dbg !5871
  %p12 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx11, i32 0, i32 0, !dbg !5875
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %p12, i64 0, i64 0, !dbg !5871
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay13), !dbg !5876
  %28 = load [4 x float]*, [4 x float]** %imat.addr, align 8, !dbg !5877
  %29 = load %struct.ReebArc*, %struct.ReebArc** %arc, align 8, !dbg !5878
  %buckets14 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %29, i32 0, i32 11, !dbg !5879
  %30 = load %struct.EmbedBucket*, %struct.EmbedBucket** %buckets14, align 8, !dbg !5879
  %31 = load i32, i32* %i, align 4, !dbg !5880
  %idxprom15 = sext i32 %31 to i64, !dbg !5878
  %arrayidx16 = getelementptr inbounds %struct.EmbedBucket, %struct.EmbedBucket* %30, i64 %idxprom15, !dbg !5878
  %p17 = getelementptr inbounds %struct.EmbedBucket, %struct.EmbedBucket* %arrayidx16, i32 0, i32 2, !dbg !5881
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %p17, i64 0, i64 0, !dbg !5878
  call void @mul_m4_v3([4 x float]* %28, float* %arraydecay18), !dbg !5882
  %32 = load %struct.ReebArc*, %struct.ReebArc** %arc, align 8, !dbg !5883
  %buckets19 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %32, i32 0, i32 11, !dbg !5884
  %33 = load %struct.EmbedBucket*, %struct.EmbedBucket** %buckets19, align 8, !dbg !5884
  %34 = load i32, i32* %i, align 4, !dbg !5885
  %idxprom20 = sext i32 %34 to i64, !dbg !5883
  %arrayidx21 = getelementptr inbounds %struct.EmbedBucket, %struct.EmbedBucket* %33, i64 %idxprom20, !dbg !5883
  %no = getelementptr inbounds %struct.EmbedBucket, %struct.EmbedBucket* %arrayidx21, i32 0, i32 3, !dbg !5886
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5883
  %35 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !5887
  %points23 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %35, i32 0, i32 2, !dbg !5888
  %36 = load %struct.SK_Point*, %struct.SK_Point** %points23, align 8, !dbg !5888
  %37 = load i32, i32* %i, align 4, !dbg !5889
  %add24 = add nsw i32 %37, 1, !dbg !5890
  %idxprom25 = sext i32 %add24 to i64, !dbg !5887
  %arrayidx26 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %36, i64 %idxprom25, !dbg !5887
  %no27 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx26, i32 0, i32 2, !dbg !5891
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %no27, i64 0, i64 0, !dbg !5887
  call void @copy_v3_v3(float* %arraydecay22, float* %arraydecay28), !dbg !5892
  %38 = load [3 x float]*, [3 x float]** %tmat.addr, align 8, !dbg !5893
  %39 = load %struct.ReebArc*, %struct.ReebArc** %arc, align 8, !dbg !5894
  %buckets29 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %39, i32 0, i32 11, !dbg !5895
  %40 = load %struct.EmbedBucket*, %struct.EmbedBucket** %buckets29, align 8, !dbg !5895
  %41 = load i32, i32* %i, align 4, !dbg !5896
  %idxprom30 = sext i32 %41 to i64, !dbg !5894
  %arrayidx31 = getelementptr inbounds %struct.EmbedBucket, %struct.EmbedBucket* %40, i64 %idxprom30, !dbg !5894
  %no32 = getelementptr inbounds %struct.EmbedBucket, %struct.EmbedBucket* %arrayidx31, i32 0, i32 3, !dbg !5897
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %no32, i64 0, i64 0, !dbg !5894
  call void @mul_m3_v3([3 x float]* %38, float* %arraydecay33), !dbg !5898
  br label %for.inc, !dbg !5899

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %i, align 4, !dbg !5900
  %inc = add nsw i32 %42, 1, !dbg !5900
  store i32 %inc, i32* %i, align 4, !dbg !5900
  br label %for.cond, !dbg !5901, !llvm.loop !5902

for.end:                                          ; preds = %for.cond
  %43 = load %struct.ReebArc*, %struct.ReebArc** %arc, align 8, !dbg !5904
  ret %struct.ReebArc* %43, !dbg !5905
}

; Function Attrs: noinline nounwind uwtable
define internal void @sk_autoname(%struct.bContext* %C, %struct.ReebArc* %arc) #0 !dbg !5906 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %arc.addr = alloca %struct.ReebArc*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %num = alloca i8*, align 8
  %i = alloca i32, align 4
  %side = alloca i8*, align 8
  %valid = alloca i32, align 4
  %caps = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5909, metadata !DIExpression()), !dbg !5910
  store %struct.ReebArc* %arc, %struct.ReebArc** %arc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReebArc** %arc.addr, metadata !5911, metadata !DIExpression()), !dbg !5912
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !5913, metadata !DIExpression()), !dbg !5914
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5915
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !5916
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !5914
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !5917
  %skgen_retarget_options = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %1, i32 0, i32 45, !dbg !5919
  %2 = load i8, i8* %skgen_retarget_options, align 1, !dbg !5919
  %conv = zext i8 %2 to i32, !dbg !5917
  %and = and i32 %conv, 1, !dbg !5920
  %tobool = icmp ne i32 %and, 0, !dbg !5920
  br i1 %tobool, label %if.then, label %if.end44, !dbg !5921

if.then:                                          ; preds = %entry
  %3 = load %struct.ReebArc*, %struct.ReebArc** %arc.addr, align 8, !dbg !5922
  %cmp = icmp eq %struct.ReebArc* %3, null, !dbg !5925
  br i1 %cmp, label %if.then2, label %if.else, !dbg !5926

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %num, metadata !5927, metadata !DIExpression()), !dbg !5929
  %4 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !5930
  %skgen_num_string = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %4, i32 0, i32 48, !dbg !5931
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %skgen_num_string, i64 0, i64 0, !dbg !5930
  store i8* %arraydecay, i8** %num, align 8, !dbg !5929
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5932, metadata !DIExpression()), !dbg !5933
  %5 = load i8*, i8** %num, align 8, !dbg !5934
  %call3 = call i32 @atoi(i8* %5) #6, !dbg !5935
  store i32 %call3, i32* %i, align 4, !dbg !5933
  %6 = load i32, i32* %i, align 4, !dbg !5936
  %inc = add nsw i32 %6, 1, !dbg !5936
  store i32 %inc, i32* %i, align 4, !dbg !5936
  %7 = load i8*, i8** %num, align 8, !dbg !5937
  %8 = load i32, i32* %i, align 4, !dbg !5938
  %call4 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %7, i64 8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i32 %8), !dbg !5939
  br label %if.end43, !dbg !5940

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %side, metadata !5941, metadata !DIExpression()), !dbg !5943
  %9 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !5944
  %skgen_side_string = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %9, i32 0, i32 47, !dbg !5945
  %arraydecay5 = getelementptr inbounds [8 x i8], [8 x i8]* %skgen_side_string, i64 0, i64 0, !dbg !5944
  store i8* %arraydecay5, i8** %side, align 8, !dbg !5943
  call void @llvm.dbg.declare(metadata i32* %valid, metadata !5946, metadata !DIExpression()), !dbg !5947
  store i32 0, i32* %valid, align 4, !dbg !5947
  call void @llvm.dbg.declare(metadata i32* %caps, metadata !5948, metadata !DIExpression()), !dbg !5949
  store i32 0, i32* %caps, align 4, !dbg !5949
  %10 = load i8*, i8** %side, align 8, !dbg !5950
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 0, !dbg !5950
  %11 = load i8, i8* %arrayidx, align 1, !dbg !5950
  %conv6 = zext i8 %11 to i32, !dbg !5950
  %cmp7 = icmp eq i32 %conv6, 0, !dbg !5952
  br i1 %cmp7, label %if.then9, label %if.else10, !dbg !5953

if.then9:                                         ; preds = %if.else
  store i32 1, i32* %valid, align 4, !dbg !5954
  br label %if.end28, !dbg !5956

if.else10:                                        ; preds = %if.else
  %12 = load i8*, i8** %side, align 8, !dbg !5957
  %call11 = call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !5959
  %cmp12 = icmp eq i32 %call11, 0, !dbg !5960
  br i1 %cmp12, label %if.then17, label %lor.lhs.false, !dbg !5961

lor.lhs.false:                                    ; preds = %if.else10
  %13 = load i8*, i8** %side, align 8, !dbg !5962
  %call14 = call i32 @strcmp(i8* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !5963
  %cmp15 = icmp eq i32 %call14, 0, !dbg !5964
  br i1 %cmp15, label %if.then17, label %if.else18, !dbg !5965

if.then17:                                        ; preds = %lor.lhs.false, %if.else10
  store i32 1, i32* %valid, align 4, !dbg !5966
  store i32 1, i32* %caps, align 4, !dbg !5968
  br label %if.end27, !dbg !5969

if.else18:                                        ; preds = %lor.lhs.false
  %14 = load i8*, i8** %side, align 8, !dbg !5970
  %call19 = call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !5972
  %cmp20 = icmp eq i32 %call19, 0, !dbg !5973
  br i1 %cmp20, label %if.then26, label %lor.lhs.false22, !dbg !5974

lor.lhs.false22:                                  ; preds = %if.else18
  %15 = load i8*, i8** %side, align 8, !dbg !5975
  %call23 = call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !5976
  %cmp24 = icmp eq i32 %call23, 0, !dbg !5977
  br i1 %cmp24, label %if.then26, label %if.end, !dbg !5978

if.then26:                                        ; preds = %lor.lhs.false22, %if.else18
  store i32 1, i32* %valid, align 4, !dbg !5979
  store i32 0, i32* %caps, align 4, !dbg !5981
  br label %if.end, !dbg !5982

if.end:                                           ; preds = %if.then26, %lor.lhs.false22
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then17
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then9
  %16 = load i32, i32* %valid, align 4, !dbg !5983
  %tobool29 = icmp ne i32 %16, 0, !dbg !5983
  br i1 %tobool29, label %if.then30, label %if.end42, !dbg !5985

if.then30:                                        ; preds = %if.end28
  %17 = load %struct.ReebArc*, %struct.ReebArc** %arc.addr, align 8, !dbg !5986
  %head = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %17, i32 0, i32 2, !dbg !5989
  %18 = load %struct.ReebNode*, %struct.ReebNode** %head, align 8, !dbg !5989
  %p = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %18, i32 0, i32 2, !dbg !5990
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !5986
  %19 = load float, float* %arrayidx31, align 8, !dbg !5986
  %cmp32 = fcmp olt float %19, 0.000000e+00, !dbg !5991
  br i1 %cmp32, label %if.then34, label %if.else37, !dbg !5992

if.then34:                                        ; preds = %if.then30
  %20 = load i8*, i8** %side, align 8, !dbg !5993
  %21 = load i32, i32* %caps, align 4, !dbg !5995
  %tobool35 = icmp ne i32 %21, 0, !dbg !5995
  %22 = zext i1 %tobool35 to i64, !dbg !5995
  %cond = select i1 %tobool35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0), !dbg !5995
  %call36 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %20, i64 8, i8* %cond), !dbg !5996
  br label %if.end41, !dbg !5997

if.else37:                                        ; preds = %if.then30
  %23 = load i8*, i8** %side, align 8, !dbg !5998
  %24 = load i32, i32* %caps, align 4, !dbg !6000
  %tobool38 = icmp ne i32 %24, 0, !dbg !6000
  %25 = zext i1 %tobool38 to i64, !dbg !6000
  %cond39 = select i1 %tobool38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0), !dbg !6000
  %call40 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %23, i64 8, i8* %cond39), !dbg !6001
  br label %if.end41

if.end41:                                         ; preds = %if.else37, %if.then34
  br label %if.end42, !dbg !6002

if.end42:                                         ; preds = %if.end41, %if.end28
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then2
  br label %if.end44, !dbg !6003

if.end44:                                         ; preds = %if.end43, %entry
  ret void, !dbg !6004
}

declare dso_local void @BIF_retargetArc(%struct.bContext*, %struct.ReebArc*, %struct.RigGraph*) #2

declare dso_local void @REEB_freeArc(%struct.BArc*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.ReebNode* @sk_pointToNode(%struct.SK_Point* %pt, [4 x float]* %imat, [3 x float]* %tmat) #0 !dbg !6005 {
entry:
  %pt.addr = alloca %struct.SK_Point*, align 8
  %imat.addr = alloca [4 x float]*, align 8
  %tmat.addr = alloca [3 x float]*, align 8
  %node = alloca %struct.ReebNode*, align 8
  store %struct.SK_Point* %pt, %struct.SK_Point** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %pt.addr, metadata !6008, metadata !DIExpression()), !dbg !6009
  store [4 x float]* %imat, [4 x float]** %imat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %imat.addr, metadata !6010, metadata !DIExpression()), !dbg !6011
  store [3 x float]* %tmat, [3 x float]** %tmat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %tmat.addr, metadata !6012, metadata !DIExpression()), !dbg !6013
  call void @llvm.dbg.declare(metadata %struct.ReebNode** %node, metadata !6014, metadata !DIExpression()), !dbg !6015
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6016
  %call = call i8* %0(i64 112, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0)), !dbg !6016
  %1 = bitcast i8* %call to %struct.ReebNode*, !dbg !6016
  store %struct.ReebNode* %1, %struct.ReebNode** %node, align 8, !dbg !6017
  %2 = load %struct.ReebNode*, %struct.ReebNode** %node, align 8, !dbg !6018
  %p = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %2, i32 0, i32 2, !dbg !6019
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !6018
  %3 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !6020
  %p1 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %3, i32 0, i32 0, !dbg !6021
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !6020
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !6022
  %4 = load [4 x float]*, [4 x float]** %imat.addr, align 8, !dbg !6023
  %5 = load %struct.ReebNode*, %struct.ReebNode** %node, align 8, !dbg !6024
  %p3 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %5, i32 0, i32 2, !dbg !6025
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %p3, i64 0, i64 0, !dbg !6024
  call void @mul_m4_v3([4 x float]* %4, float* %arraydecay4), !dbg !6026
  %6 = load %struct.ReebNode*, %struct.ReebNode** %node, align 8, !dbg !6027
  %no = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %6, i32 0, i32 10, !dbg !6028
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !6027
  %7 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !6029
  %no6 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %7, i32 0, i32 2, !dbg !6030
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %no6, i64 0, i64 0, !dbg !6029
  call void @copy_v3_v3(float* %arraydecay5, float* %arraydecay7), !dbg !6031
  %8 = load [3 x float]*, [3 x float]** %tmat.addr, align 8, !dbg !6032
  %9 = load %struct.ReebNode*, %struct.ReebNode** %node, align 8, !dbg !6033
  %no8 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %9, i32 0, i32 10, !dbg !6034
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %no8, i64 0, i64 0, !dbg !6033
  call void @mul_m3_v3([3 x float]* %8, float* %arraydecay9), !dbg !6035
  %10 = load %struct.ReebNode*, %struct.ReebNode** %node, align 8, !dbg !6036
  ret %struct.ReebNode* %10, !dbg !6037
}

declare dso_local void @mul_m4_v3([4 x float]*, float*) #2

declare dso_local void @mul_m3_v3([3 x float]*, float*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #3

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

declare dso_local %struct.EditBone* @subdivideArcBy(%struct.ToolSettings*, %struct.bArmature*, %struct.ListBase*, %struct.BArcIterator*, [4 x float]*, [3 x float]*, i32 (%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*)*) #2

declare dso_local i32 @nextAdaptativeSubdivision(%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*) #2

declare dso_local i32 @nextLengthSubdivision(%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*) #2

declare dso_local i32 @nextFixedSubdivision(%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*) #2

declare dso_local %struct.EditBone* @ED_armature_edit_bone_add(%struct.bArmature*, i8*) #2

declare dso_local void @setBoneRollFromNormal(%struct.EditBone*, float*, [4 x float]*, [3 x float]*) #2

declare dso_local void @glClear(i32) #2

declare dso_local void @glEnable(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sk_drawStroke(%struct.SK_Stroke* %stk, i32 %id, float* %color, i32 %start, i32 %end) #0 !dbg !6038 {
entry:
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  %id.addr = alloca i32, align 4
  %color.addr = alloca float*, align 8
  %start.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %rgb = alloca [3 x float], align 4
  %i = alloca i32, align 4
  %quad = alloca %struct.GLUquadric*, align 8
  %d_rgb = alloca [3 x float], align 4
  %pt = alloca %struct.SK_Point*, align 8
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !6041, metadata !DIExpression()), !dbg !6042
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !6043, metadata !DIExpression()), !dbg !6044
  store float* %color, float** %color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %color.addr, metadata !6045, metadata !DIExpression()), !dbg !6046
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !6047, metadata !DIExpression()), !dbg !6048
  store i32 %end, i32* %end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end.addr, metadata !6049, metadata !DIExpression()), !dbg !6050
  call void @llvm.dbg.declare(metadata [3 x float]* %rgb, metadata !6051, metadata !DIExpression()), !dbg !6052
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6053, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.declare(metadata %struct.GLUquadric** %quad, metadata !6055, metadata !DIExpression()), !dbg !6056
  %call = call %struct.GLUquadric* @gluNewQuadric(), !dbg !6057
  store %struct.GLUquadric* %call, %struct.GLUquadric** %quad, align 8, !dbg !6056
  %0 = load %struct.GLUquadric*, %struct.GLUquadric** %quad, align 8, !dbg !6058
  call void @gluQuadricNormals(%struct.GLUquadric* %0, i32 100000), !dbg !6059
  %1 = load i32, i32* %id.addr, align 4, !dbg !6060
  %cmp = icmp ne i32 %1, -1, !dbg !6062
  br i1 %cmp, label %if.then, label %if.else, !dbg !6063

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %id.addr, align 4, !dbg !6064
  %call1 = call zeroext i8 @GPU_select_load_id(i32 %2), !dbg !6066
  store i32 0, i32* %i, align 4, !dbg !6067
  br label %for.cond, !dbg !6069

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, i32* %i, align 4, !dbg !6070
  %4 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !6072
  %nb_points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %4, i32 0, i32 3, !dbg !6073
  %5 = load i32, i32* %nb_points, align 8, !dbg !6073
  %cmp2 = icmp slt i32 %3, %5, !dbg !6074
  br i1 %cmp2, label %for.body, label %for.end, !dbg !6075

for.body:                                         ; preds = %for.cond
  call void @glPushMatrix(), !dbg !6076
  %6 = load %struct.GLUquadric*, %struct.GLUquadric** %quad, align 8, !dbg !6078
  %7 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !6079
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %7, i32 0, i32 2, !dbg !6080
  %8 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !6080
  %9 = load i32, i32* %i, align 4, !dbg !6081
  %idx.ext = sext i32 %9 to i64, !dbg !6082
  %add.ptr = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %8, i64 %idx.ext, !dbg !6082
  call void @sk_drawPoint(%struct.GLUquadric* %6, %struct.SK_Point* %add.ptr, float 0x3FB99999A0000000), !dbg !6083
  %10 = load i32, i32* %i, align 4, !dbg !6084
  %cmp3 = icmp sgt i32 %10, 0, !dbg !6086
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !6087

if.then4:                                         ; preds = %for.body
  %11 = load %struct.GLUquadric*, %struct.GLUquadric** %quad, align 8, !dbg !6088
  %12 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !6090
  %points5 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %12, i32 0, i32 2, !dbg !6091
  %13 = load %struct.SK_Point*, %struct.SK_Point** %points5, align 8, !dbg !6091
  %14 = load i32, i32* %i, align 4, !dbg !6092
  %idx.ext6 = sext i32 %14 to i64, !dbg !6093
  %add.ptr7 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %13, i64 %idx.ext6, !dbg !6093
  %add.ptr8 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %add.ptr7, i64 -1, !dbg !6094
  %15 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !6095
  %points9 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %15, i32 0, i32 2, !dbg !6096
  %16 = load %struct.SK_Point*, %struct.SK_Point** %points9, align 8, !dbg !6096
  %17 = load i32, i32* %i, align 4, !dbg !6097
  %idx.ext10 = sext i32 %17 to i64, !dbg !6098
  %add.ptr11 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %16, i64 %idx.ext10, !dbg !6098
  call void @sk_drawEdge(%struct.GLUquadric* %11, %struct.SK_Point* %add.ptr8, %struct.SK_Point* %add.ptr11, float 0x3FB99999A0000000), !dbg !6099
  br label %if.end, !dbg !6100

if.end:                                           ; preds = %if.then4, %for.body
  call void @glPopMatrix(), !dbg !6101
  br label %for.inc, !dbg !6102

for.inc:                                          ; preds = %if.end
  %18 = load i32, i32* %i, align 4, !dbg !6103
  %inc = add nsw i32 %18, 1, !dbg !6103
  store i32 %inc, i32* %i, align 4, !dbg !6103
  br label %for.cond, !dbg !6104, !llvm.loop !6105

for.end:                                          ; preds = %for.cond
  br label %if.end51, !dbg !6107

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %d_rgb, metadata !6108, metadata !DIExpression()), !dbg !6110
  %19 = bitcast [3 x float]* %d_rgb to i8*, !dbg !6110
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 bitcast ([3 x float]* @__const.sk_drawStroke.d_rgb to i8*), i64 12, i1 false), !dbg !6110
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !6111
  %20 = load float*, float** %color.addr, align 8, !dbg !6112
  call void @copy_v3_v3(float* %arraydecay, float* %20), !dbg !6113
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %d_rgb, i64 0, i64 0, !dbg !6114
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !6115
  call void @sub_v3_v3(float* %arraydecay12, float* %arraydecay13), !dbg !6116
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %d_rgb, i64 0, i64 0, !dbg !6117
  %21 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !6118
  %nb_points15 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %21, i32 0, i32 3, !dbg !6119
  %22 = load i32, i32* %nb_points15, align 8, !dbg !6119
  %conv = sitofp i32 %22 to float, !dbg !6120
  %div = fdiv float 1.000000e+00, %conv, !dbg !6121
  call void @mul_v3_fl(float* %arraydecay14, float %div), !dbg !6122
  store i32 0, i32* %i, align 4, !dbg !6123
  br label %for.cond16, !dbg !6125

for.cond16:                                       ; preds = %for.inc48, %if.else
  %23 = load i32, i32* %i, align 4, !dbg !6126
  %24 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !6128
  %nb_points17 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %24, i32 0, i32 3, !dbg !6129
  %25 = load i32, i32* %nb_points17, align 8, !dbg !6129
  %cmp18 = icmp slt i32 %23, %25, !dbg !6130
  br i1 %cmp18, label %for.body20, label %for.end50, !dbg !6131

for.body20:                                       ; preds = %for.cond16
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %pt, metadata !6132, metadata !DIExpression()), !dbg !6134
  %26 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !6135
  %points21 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %26, i32 0, i32 2, !dbg !6136
  %27 = load %struct.SK_Point*, %struct.SK_Point** %points21, align 8, !dbg !6136
  %28 = load i32, i32* %i, align 4, !dbg !6137
  %idx.ext22 = sext i32 %28 to i64, !dbg !6138
  %add.ptr23 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %27, i64 %idx.ext22, !dbg !6138
  store %struct.SK_Point* %add.ptr23, %struct.SK_Point** %pt, align 8, !dbg !6134
  call void @glPushMatrix(), !dbg !6139
  %29 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !6140
  %type = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %29, i32 0, i32 4, !dbg !6142
  %30 = load i32, i32* %type, align 4, !dbg !6142
  %cmp24 = icmp eq i32 %30, 1, !dbg !6143
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !6144

if.then26:                                        ; preds = %for.body20
  call void @glColor3f(float 0.000000e+00, float 0.000000e+00, float 0.000000e+00), !dbg !6145
  %31 = load %struct.GLUquadric*, %struct.GLUquadric** %quad, align 8, !dbg !6147
  %32 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !6148
  call void @sk_drawPoint(%struct.GLUquadric* %31, %struct.SK_Point* %32, float 0x3FC3333340000000), !dbg !6149
  %33 = load %struct.GLUquadric*, %struct.GLUquadric** %quad, align 8, !dbg !6150
  %34 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !6151
  call void @sk_drawNormal(%struct.GLUquadric* %33, %struct.SK_Point* %34, float 0x3FA99999A0000000, float 0x3FECCCCCC0000000), !dbg !6152
  br label %if.end27, !dbg !6153

if.end27:                                         ; preds = %if.then26, %for.body20
  %35 = load i32, i32* %i, align 4, !dbg !6154
  %36 = load i32, i32* %start.addr, align 4, !dbg !6156
  %cmp28 = icmp sge i32 %35, %36, !dbg !6157
  br i1 %cmp28, label %land.lhs.true, label %if.else33, !dbg !6158

land.lhs.true:                                    ; preds = %if.end27
  %37 = load i32, i32* %i, align 4, !dbg !6159
  %38 = load i32, i32* %end.addr, align 4, !dbg !6160
  %cmp30 = icmp sle i32 %37, %38, !dbg !6161
  br i1 %cmp30, label %if.then32, label %if.else33, !dbg !6162

if.then32:                                        ; preds = %land.lhs.true
  call void @glColor3f(float 0x3FD3333340000000, float 0x3FD3333340000000, float 0x3FD3333340000000), !dbg !6163
  br label %if.end35, !dbg !6165

if.else33:                                        ; preds = %land.lhs.true, %if.end27
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !6166
  call void @glColor3fv(float* %arraydecay34), !dbg !6168
  br label %if.end35

if.end35:                                         ; preds = %if.else33, %if.then32
  %39 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !6169
  %type36 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %39, i32 0, i32 4, !dbg !6171
  %40 = load i32, i32* %type36, align 4, !dbg !6171
  %cmp37 = icmp ne i32 %40, 1, !dbg !6172
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !6173

if.then39:                                        ; preds = %if.end35
  %41 = load %struct.GLUquadric*, %struct.GLUquadric** %quad, align 8, !dbg !6174
  %42 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !6176
  call void @sk_drawPoint(%struct.GLUquadric* %41, %struct.SK_Point* %42, float 0x3FB99999A0000000), !dbg !6177
  br label %if.end40, !dbg !6178

if.end40:                                         ; preds = %if.then39, %if.end35
  %43 = load i32, i32* %i, align 4, !dbg !6179
  %cmp41 = icmp sgt i32 %43, 0, !dbg !6181
  br i1 %cmp41, label %if.then43, label %if.end45, !dbg !6182

if.then43:                                        ; preds = %if.end40
  %44 = load %struct.GLUquadric*, %struct.GLUquadric** %quad, align 8, !dbg !6183
  %45 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !6185
  %add.ptr44 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %45, i64 -1, !dbg !6186
  %46 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !6187
  call void @sk_drawEdge(%struct.GLUquadric* %44, %struct.SK_Point* %add.ptr44, %struct.SK_Point* %46, float 0x3FB99999A0000000), !dbg !6188
  br label %if.end45, !dbg !6189

if.end45:                                         ; preds = %if.then43, %if.end40
  call void @glPopMatrix(), !dbg !6190
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !6191
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %d_rgb, i64 0, i64 0, !dbg !6192
  call void @add_v3_v3(float* %arraydecay46, float* %arraydecay47), !dbg !6193
  br label %for.inc48, !dbg !6194

for.inc48:                                        ; preds = %if.end45
  %47 = load i32, i32* %i, align 4, !dbg !6195
  %inc49 = add nsw i32 %47, 1, !dbg !6195
  store i32 %inc49, i32* %i, align 4, !dbg !6195
  br label %for.cond16, !dbg !6196, !llvm.loop !6197

for.end50:                                        ; preds = %for.cond16
  br label %if.end51

if.end51:                                         ; preds = %for.end50, %for.end
  %48 = load %struct.GLUquadric*, %struct.GLUquadric** %quad, align 8, !dbg !6199
  call void @gluDeleteQuadric(%struct.GLUquadric* %48), !dbg !6200
  ret void, !dbg !6201
}

declare dso_local zeroext i8 @GPU_select_load_id(i32) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @sk_adjustIndexes(%struct.SK_Sketch* %sketch, i32* %start, i32* %end) #0 !dbg !6202 {
entry:
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %start.addr = alloca i32*, align 8
  %end.addr = alloca i32*, align 8
  %retval1 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !6206, metadata !DIExpression()), !dbg !6207
  store i32* %start, i32** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %start.addr, metadata !6208, metadata !DIExpression()), !dbg !6209
  store i32* %end, i32** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %end.addr, metadata !6210, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !6212, metadata !DIExpression()), !dbg !6213
  store i32 0, i32* %retval1, align 4, !dbg !6213
  %0 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6214
  %over = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %0, i32 0, i32 5, !dbg !6215
  %start2 = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over, i32 0, i32 1, !dbg !6216
  %1 = load i32, i32* %start2, align 8, !dbg !6216
  %2 = load i32*, i32** %start.addr, align 8, !dbg !6217
  store i32 %1, i32* %2, align 4, !dbg !6218
  %3 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6219
  %over3 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %3, i32 0, i32 5, !dbg !6220
  %end4 = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over3, i32 0, i32 2, !dbg !6221
  %4 = load i32, i32* %end4, align 4, !dbg !6221
  %5 = load i32*, i32** %end.addr, align 8, !dbg !6222
  store i32 %4, i32* %5, align 4, !dbg !6223
  %6 = load i32*, i32** %start.addr, align 8, !dbg !6224
  %7 = load i32, i32* %6, align 4, !dbg !6226
  %cmp = icmp eq i32 %7, -1, !dbg !6227
  br i1 %cmp, label %if.then, label %if.end, !dbg !6228

if.then:                                          ; preds = %entry
  %8 = load i32*, i32** %start.addr, align 8, !dbg !6229
  store i32 0, i32* %8, align 4, !dbg !6231
  br label %if.end, !dbg !6232

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32*, i32** %end.addr, align 8, !dbg !6233
  %10 = load i32, i32* %9, align 4, !dbg !6235
  %cmp5 = icmp eq i32 %10, -1, !dbg !6236
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !6237

if.then6:                                         ; preds = %if.end
  %11 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6238
  %over7 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %11, i32 0, i32 5, !dbg !6240
  %target = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over7, i32 0, i32 0, !dbg !6241
  %12 = load %struct.SK_Stroke*, %struct.SK_Stroke** %target, align 8, !dbg !6241
  %nb_points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %12, i32 0, i32 3, !dbg !6242
  %13 = load i32, i32* %nb_points, align 8, !dbg !6242
  %sub = sub nsw i32 %13, 1, !dbg !6243
  %14 = load i32*, i32** %end.addr, align 8, !dbg !6244
  store i32 %sub, i32* %14, align 4, !dbg !6245
  br label %if.end8, !dbg !6246

if.end8:                                          ; preds = %if.then6, %if.end
  %15 = load i32*, i32** %end.addr, align 8, !dbg !6247
  %16 = load i32, i32* %15, align 4, !dbg !6249
  %17 = load i32*, i32** %start.addr, align 8, !dbg !6250
  %18 = load i32, i32* %17, align 4, !dbg !6251
  %cmp9 = icmp slt i32 %16, %18, !dbg !6252
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !6253

if.then10:                                        ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !6254, metadata !DIExpression()), !dbg !6256
  %19 = load i32*, i32** %start.addr, align 8, !dbg !6257
  %20 = load i32, i32* %19, align 4, !dbg !6258
  store i32 %20, i32* %tmp, align 4, !dbg !6256
  %21 = load i32*, i32** %end.addr, align 8, !dbg !6259
  %22 = load i32, i32* %21, align 4, !dbg !6260
  %23 = load i32*, i32** %start.addr, align 8, !dbg !6261
  store i32 %22, i32* %23, align 4, !dbg !6262
  %24 = load i32, i32* %tmp, align 4, !dbg !6263
  %25 = load i32*, i32** %end.addr, align 8, !dbg !6264
  store i32 %24, i32* %25, align 4, !dbg !6265
  store i32 1, i32* %retval1, align 4, !dbg !6266
  br label %if.end11, !dbg !6267

if.end11:                                         ; preds = %if.then10, %if.end8
  %26 = load i32, i32* %retval1, align 4, !dbg !6268
  ret i32 %26, !dbg !6269
}

; Function Attrs: noinline nounwind uwtable
define internal void @sk_drawStrokeSubdivision(%struct.ToolSettings* %toolsettings, %struct.SK_Stroke* %stk) #0 !dbg !6270 {
entry:
  %toolsettings.addr = alloca %struct.ToolSettings*, align 8
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  %head_index = alloca i32, align 4
  %i = alloca i32, align 4
  %pt = alloca %struct.SK_Point*, align 8
  %sk_iter = alloca %struct.SK_StrokeIterator, align 8
  %iter = alloca %struct.BArcIterator*, align 8
  store %struct.ToolSettings* %toolsettings, %struct.ToolSettings** %toolsettings.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %toolsettings.addr, metadata !6273, metadata !DIExpression()), !dbg !6274
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !6275, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.declare(metadata i32* %head_index, metadata !6277, metadata !DIExpression()), !dbg !6278
  store i32 -1, i32* %head_index, align 4, !dbg !6278
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6279, metadata !DIExpression()), !dbg !6280
  %0 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings.addr, align 8, !dbg !6281
  %bone_sketching_convert = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %0, i32 0, i32 43, !dbg !6283
  %1 = load i8, i8* %bone_sketching_convert, align 1, !dbg !6283
  %conv = zext i8 %1 to i32, !dbg !6281
  %cmp = icmp eq i32 %conv, 3, !dbg !6284
  br i1 %cmp, label %if.then, label %if.end, !dbg !6285

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !6286

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !6288
  br label %for.cond, !dbg !6290

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !6291
  %3 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !6293
  %nb_points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %3, i32 0, i32 3, !dbg !6294
  %4 = load i32, i32* %nb_points, align 8, !dbg !6294
  %cmp2 = icmp slt i32 %2, %4, !dbg !6295
  br i1 %cmp2, label %for.body, label %for.end, !dbg !6296

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %pt, metadata !6297, metadata !DIExpression()), !dbg !6299
  %5 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !6300
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %5, i32 0, i32 2, !dbg !6301
  %6 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !6301
  %7 = load i32, i32* %i, align 4, !dbg !6302
  %idx.ext = sext i32 %7 to i64, !dbg !6303
  %add.ptr = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %6, i64 %idx.ext, !dbg !6303
  store %struct.SK_Point* %add.ptr, %struct.SK_Point** %pt, align 8, !dbg !6299
  %8 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !6304
  %type = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %8, i32 0, i32 4, !dbg !6306
  %9 = load i32, i32* %type, align 4, !dbg !6306
  %cmp4 = icmp eq i32 %9, 1, !dbg !6307
  br i1 %cmp4, label %if.then9, label %lor.lhs.false, !dbg !6308

lor.lhs.false:                                    ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !6309
  %11 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !6310
  %nb_points6 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %11, i32 0, i32 3, !dbg !6311
  %12 = load i32, i32* %nb_points6, align 8, !dbg !6311
  %sub = sub nsw i32 %12, 1, !dbg !6312
  %cmp7 = icmp eq i32 %10, %sub, !dbg !6313
  br i1 %cmp7, label %if.then9, label %if.end39, !dbg !6314

if.then9:                                         ; preds = %lor.lhs.false, %for.body
  %13 = load i32, i32* %head_index, align 4, !dbg !6315
  %cmp10 = icmp eq i32 %13, -1, !dbg !6318
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !6319

if.then12:                                        ; preds = %if.then9
  %14 = load i32, i32* %i, align 4, !dbg !6320
  store i32 %14, i32* %head_index, align 4, !dbg !6322
  br label %if.end38, !dbg !6323

if.else:                                          ; preds = %if.then9
  %15 = load i32, i32* %i, align 4, !dbg !6324
  %16 = load i32, i32* %head_index, align 4, !dbg !6327
  %sub13 = sub nsw i32 %15, %16, !dbg !6328
  %cmp14 = icmp sgt i32 %sub13, 1, !dbg !6329
  br i1 %cmp14, label %if.then16, label %if.end37, !dbg !6330

if.then16:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.SK_StrokeIterator* %sk_iter, metadata !6331, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.declare(metadata %struct.BArcIterator** %iter, metadata !6334, metadata !DIExpression()), !dbg !6335
  %17 = bitcast %struct.SK_StrokeIterator* %sk_iter to %struct.BArcIterator*, !dbg !6336
  store %struct.BArcIterator* %17, %struct.BArcIterator** %iter, align 8, !dbg !6335
  %18 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !6337
  %19 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !6338
  %20 = load i32, i32* %head_index, align 4, !dbg !6339
  %21 = load i32, i32* %i, align 4, !dbg !6340
  call void @initStrokeIterator(%struct.BArcIterator* %18, %struct.SK_Stroke* %19, i32 %20, i32 %21), !dbg !6341
  %22 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings.addr, align 8, !dbg !6342
  %bone_sketching_convert17 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %22, i32 0, i32 43, !dbg !6344
  %23 = load i8, i8* %bone_sketching_convert17, align 1, !dbg !6344
  %conv18 = zext i8 %23 to i32, !dbg !6342
  %cmp19 = icmp eq i32 %conv18, 2, !dbg !6345
  br i1 %cmp19, label %if.then21, label %if.else22, !dbg !6346

if.then21:                                        ; preds = %if.then16
  %24 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings.addr, align 8, !dbg !6347
  %25 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !6349
  call void @drawSubdividedStrokeBy(%struct.ToolSettings* %24, %struct.BArcIterator* %25, i32 (%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*)* @nextAdaptativeSubdivision), !dbg !6350
  br label %if.end36, !dbg !6351

if.else22:                                        ; preds = %if.then16
  %26 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings.addr, align 8, !dbg !6352
  %bone_sketching_convert23 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %26, i32 0, i32 43, !dbg !6354
  %27 = load i8, i8* %bone_sketching_convert23, align 1, !dbg !6354
  %conv24 = zext i8 %27 to i32, !dbg !6352
  %cmp25 = icmp eq i32 %conv24, 1, !dbg !6355
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !6356

if.then27:                                        ; preds = %if.else22
  %28 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings.addr, align 8, !dbg !6357
  %29 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !6359
  call void @drawSubdividedStrokeBy(%struct.ToolSettings* %28, %struct.BArcIterator* %29, i32 (%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*)* @nextLengthSubdivision), !dbg !6360
  br label %if.end35, !dbg !6361

if.else28:                                        ; preds = %if.else22
  %30 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings.addr, align 8, !dbg !6362
  %bone_sketching_convert29 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %30, i32 0, i32 43, !dbg !6364
  %31 = load i8, i8* %bone_sketching_convert29, align 1, !dbg !6364
  %conv30 = zext i8 %31 to i32, !dbg !6362
  %cmp31 = icmp eq i32 %conv30, 0, !dbg !6365
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !6366

if.then33:                                        ; preds = %if.else28
  %32 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings.addr, align 8, !dbg !6367
  %33 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !6369
  call void @drawSubdividedStrokeBy(%struct.ToolSettings* %32, %struct.BArcIterator* %33, i32 (%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*)* @nextFixedSubdivision), !dbg !6370
  br label %if.end34, !dbg !6371

if.end34:                                         ; preds = %if.then33, %if.else28
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then27
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then21
  br label %if.end37, !dbg !6372

if.end37:                                         ; preds = %if.end36, %if.else
  %34 = load i32, i32* %i, align 4, !dbg !6373
  store i32 %34, i32* %head_index, align 4, !dbg !6374
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then12
  br label %if.end39, !dbg !6375

if.end39:                                         ; preds = %if.end38, %lor.lhs.false
  br label %for.inc, !dbg !6376

for.inc:                                          ; preds = %if.end39
  %35 = load i32, i32* %i, align 4, !dbg !6377
  %inc = add nsw i32 %35, 1, !dbg !6377
  store i32 %inc, i32* %i, align 4, !dbg !6377
  br label %for.cond, !dbg !6378, !llvm.loop !6379

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !6381
}

declare dso_local %struct.GLUquadric* @gluNewQuadric() #2

declare dso_local void @gluQuadricNormals(%struct.GLUquadric*, i32) #2

declare dso_local void @glPushMatrix() #2

declare dso_local void @glBlendFunc(i32, i32) #2

declare dso_local void @glColor3f(float, float, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sk_drawPoint(%struct.GLUquadric* %quad, %struct.SK_Point* %pt, float %size) #0 !dbg !6382 {
entry:
  %quad.addr = alloca %struct.GLUquadric*, align 8
  %pt.addr = alloca %struct.SK_Point*, align 8
  %size.addr = alloca float, align 4
  store %struct.GLUquadric* %quad, %struct.GLUquadric** %quad.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GLUquadric** %quad.addr, metadata !6385, metadata !DIExpression()), !dbg !6386
  store %struct.SK_Point* %pt, %struct.SK_Point** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %pt.addr, metadata !6387, metadata !DIExpression()), !dbg !6388
  store float %size, float* %size.addr, align 4
  call void @llvm.dbg.declare(metadata float* %size.addr, metadata !6389, metadata !DIExpression()), !dbg !6390
  %0 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !6391
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %0, i32 0, i32 0, !dbg !6392
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !6391
  %1 = load float, float* %arrayidx, align 4, !dbg !6391
  %2 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !6393
  %p1 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %2, i32 0, i32 0, !dbg !6394
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 1, !dbg !6393
  %3 = load float, float* %arrayidx2, align 4, !dbg !6393
  %4 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !6395
  %p3 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %4, i32 0, i32 0, !dbg !6396
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %p3, i64 0, i64 2, !dbg !6395
  %5 = load float, float* %arrayidx4, align 4, !dbg !6395
  call void @glTranslatef(float %1, float %3, float %5), !dbg !6397
  %6 = load %struct.GLUquadric*, %struct.GLUquadric** %quad.addr, align 8, !dbg !6398
  %7 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !6399
  %8 = load float, float* %size.addr, align 4, !dbg !6400
  %call = call float @sk_clampPointSize(%struct.SK_Point* %7, float %8), !dbg !6401
  %conv = fpext float %call to double, !dbg !6401
  call void @gluSphere(%struct.GLUquadric* %6, double %conv, i32 8, i32 8), !dbg !6402
  ret void, !dbg !6403
}

declare dso_local void @glColor4f(float, float, float, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sk_drawEdge(%struct.GLUquadric* %quad, %struct.SK_Point* %pt0, %struct.SK_Point* %pt1, float %size) #0 !dbg !6404 {
entry:
  %quad.addr = alloca %struct.GLUquadric*, align 8
  %pt0.addr = alloca %struct.SK_Point*, align 8
  %pt1.addr = alloca %struct.SK_Point*, align 8
  %size.addr = alloca float, align 4
  %vec1 = alloca [3 x float], align 4
  %vec2 = alloca [3 x float], align 4
  %axis = alloca [3 x float], align 4
  %angle = alloca float, align 4
  %length = alloca float, align 4
  store %struct.GLUquadric* %quad, %struct.GLUquadric** %quad.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GLUquadric** %quad.addr, metadata !6407, metadata !DIExpression()), !dbg !6408
  store %struct.SK_Point* %pt0, %struct.SK_Point** %pt0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %pt0.addr, metadata !6409, metadata !DIExpression()), !dbg !6410
  store %struct.SK_Point* %pt1, %struct.SK_Point** %pt1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %pt1.addr, metadata !6411, metadata !DIExpression()), !dbg !6412
  store float %size, float* %size.addr, align 4
  call void @llvm.dbg.declare(metadata float* %size.addr, metadata !6413, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.declare(metadata [3 x float]* %vec1, metadata !6415, metadata !DIExpression()), !dbg !6416
  call void @llvm.dbg.declare(metadata [3 x float]* %vec2, metadata !6417, metadata !DIExpression()), !dbg !6418
  %0 = bitcast [3 x float]* %vec2 to i8*, !dbg !6418
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 bitcast ([3 x float]* @__const.sk_drawEdge.vec2 to i8*), i64 12, i1 false), !dbg !6418
  call void @llvm.dbg.declare(metadata [3 x float]* %axis, metadata !6419, metadata !DIExpression()), !dbg !6420
  call void @llvm.dbg.declare(metadata float* %angle, metadata !6421, metadata !DIExpression()), !dbg !6422
  call void @llvm.dbg.declare(metadata float* %length, metadata !6423, metadata !DIExpression()), !dbg !6424
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !6425
  %1 = load %struct.SK_Point*, %struct.SK_Point** %pt1.addr, align 8, !dbg !6426
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %1, i32 0, i32 0, !dbg !6427
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !6426
  %2 = load %struct.SK_Point*, %struct.SK_Point** %pt0.addr, align 8, !dbg !6428
  %p2 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %2, i32 0, i32 0, !dbg !6429
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 0, !dbg !6428
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay1, float* %arraydecay3), !dbg !6430
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !6431
  %call = call float @normalize_v3(float* %arraydecay4), !dbg !6432
  store float %call, float* %length, align 4, !dbg !6433
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !6434
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !6435
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !6436
  call void @cross_v3_v3v3(float* %arraydecay5, float* %arraydecay6, float* %arraydecay7), !dbg !6437
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !6438
  %call9 = call zeroext i8 @is_zero_v3(float* %arraydecay8), !dbg !6440
  %tobool = icmp ne i8 %call9, 0, !dbg !6440
  br i1 %tobool, label %if.then, label %if.end, !dbg !6441

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 1, !dbg !6442
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !6444
  br label %if.end, !dbg !6445

if.end:                                           ; preds = %if.then, %entry
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !6446
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !6447
  %call12 = call float @angle_normalized_v3v3(float* %arraydecay10, float* %arraydecay11), !dbg !6448
  store float %call12, float* %angle, align 4, !dbg !6449
  %3 = load float, float* %angle, align 4, !dbg !6450
  %mul = fmul float %3, 0x404CA5DC20000000, !dbg !6451
  %add = fadd float %mul, 1.800000e+02, !dbg !6452
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !6453
  %4 = load float, float* %arrayidx13, align 4, !dbg !6453
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 1, !dbg !6454
  %5 = load float, float* %arrayidx14, align 4, !dbg !6454
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 2, !dbg !6455
  %6 = load float, float* %arrayidx15, align 4, !dbg !6455
  call void @glRotatef(float %add, float %4, float %5, float %6), !dbg !6456
  %7 = load %struct.GLUquadric*, %struct.GLUquadric** %quad.addr, align 8, !dbg !6457
  %8 = load %struct.SK_Point*, %struct.SK_Point** %pt1.addr, align 8, !dbg !6458
  %9 = load float, float* %size.addr, align 4, !dbg !6459
  %call16 = call float @sk_clampPointSize(%struct.SK_Point* %8, float %9), !dbg !6460
  %conv = fpext float %call16 to double, !dbg !6460
  %10 = load %struct.SK_Point*, %struct.SK_Point** %pt0.addr, align 8, !dbg !6461
  %11 = load float, float* %size.addr, align 4, !dbg !6462
  %call17 = call float @sk_clampPointSize(%struct.SK_Point* %10, float %11), !dbg !6463
  %conv18 = fpext float %call17 to double, !dbg !6463
  %12 = load float, float* %length, align 4, !dbg !6464
  %conv19 = fpext float %12 to double, !dbg !6464
  call void @gluCylinder(%struct.GLUquadric* %7, double %conv, double %conv18, double %conv19, i32 8, i32 8), !dbg !6465
  ret void, !dbg !6466
}

declare dso_local void @glDisable(i32) #2

declare dso_local void @glPopMatrix() #2

declare dso_local void @gluDeleteQuadric(%struct.GLUquadric*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3(float* %r, float* %a) #0 !dbg !6467 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6468, metadata !DIExpression()), !dbg !6469
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6470, metadata !DIExpression()), !dbg !6471
  %0 = load float*, float** %a.addr, align 8, !dbg !6472
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6472
  %1 = load float, float* %arrayidx, align 4, !dbg !6472
  %2 = load float*, float** %r.addr, align 8, !dbg !6473
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6473
  %3 = load float, float* %arrayidx1, align 4, !dbg !6474
  %sub = fsub float %3, %1, !dbg !6474
  store float %sub, float* %arrayidx1, align 4, !dbg !6474
  %4 = load float*, float** %a.addr, align 8, !dbg !6475
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6475
  %5 = load float, float* %arrayidx2, align 4, !dbg !6475
  %6 = load float*, float** %r.addr, align 8, !dbg !6476
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6476
  %7 = load float, float* %arrayidx3, align 4, !dbg !6477
  %sub4 = fsub float %7, %5, !dbg !6477
  store float %sub4, float* %arrayidx3, align 4, !dbg !6477
  %8 = load float*, float** %a.addr, align 8, !dbg !6478
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6478
  %9 = load float, float* %arrayidx5, align 4, !dbg !6478
  %10 = load float*, float** %r.addr, align 8, !dbg !6479
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !6479
  %11 = load float, float* %arrayidx6, align 4, !dbg !6480
  %sub7 = fsub float %11, %9, !dbg !6480
  store float %sub7, float* %arrayidx6, align 4, !dbg !6480
  ret void, !dbg !6481
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !6482 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6485, metadata !DIExpression()), !dbg !6486
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !6487, metadata !DIExpression()), !dbg !6488
  %0 = load float, float* %f.addr, align 4, !dbg !6489
  %1 = load float*, float** %r.addr, align 8, !dbg !6490
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !6490
  %2 = load float, float* %arrayidx, align 4, !dbg !6491
  %mul = fmul float %2, %0, !dbg !6491
  store float %mul, float* %arrayidx, align 4, !dbg !6491
  %3 = load float, float* %f.addr, align 4, !dbg !6492
  %4 = load float*, float** %r.addr, align 8, !dbg !6493
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !6493
  %5 = load float, float* %arrayidx1, align 4, !dbg !6494
  %mul2 = fmul float %5, %3, !dbg !6494
  store float %mul2, float* %arrayidx1, align 4, !dbg !6494
  %6 = load float, float* %f.addr, align 4, !dbg !6495
  %7 = load float*, float** %r.addr, align 8, !dbg !6496
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !6496
  %8 = load float, float* %arrayidx3, align 4, !dbg !6497
  %mul4 = fmul float %8, %6, !dbg !6497
  store float %mul4, float* %arrayidx3, align 4, !dbg !6497
  ret void, !dbg !6498
}

; Function Attrs: noinline nounwind uwtable
define internal void @sk_drawNormal(%struct.GLUquadric* %quad, %struct.SK_Point* %pt, float %size, float %height) #0 !dbg !6499 {
entry:
  %quad.addr = alloca %struct.GLUquadric*, align 8
  %pt.addr = alloca %struct.SK_Point*, align 8
  %size.addr = alloca float, align 4
  %height.addr = alloca float, align 4
  %vec2 = alloca [3 x float], align 4
  %axis = alloca [3 x float], align 4
  %angle = alloca float, align 4
  store %struct.GLUquadric* %quad, %struct.GLUquadric** %quad.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GLUquadric** %quad.addr, metadata !6502, metadata !DIExpression()), !dbg !6503
  store %struct.SK_Point* %pt, %struct.SK_Point** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %pt.addr, metadata !6504, metadata !DIExpression()), !dbg !6505
  store float %size, float* %size.addr, align 4
  call void @llvm.dbg.declare(metadata float* %size.addr, metadata !6506, metadata !DIExpression()), !dbg !6507
  store float %height, float* %height.addr, align 4
  call void @llvm.dbg.declare(metadata float* %height.addr, metadata !6508, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.declare(metadata [3 x float]* %vec2, metadata !6510, metadata !DIExpression()), !dbg !6511
  %0 = bitcast [3 x float]* %vec2 to i8*, !dbg !6511
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 bitcast ([3 x float]* @__const.sk_drawNormal.vec2 to i8*), i64 12, i1 false), !dbg !6511
  call void @llvm.dbg.declare(metadata [3 x float]* %axis, metadata !6512, metadata !DIExpression()), !dbg !6513
  call void @llvm.dbg.declare(metadata float* %angle, metadata !6514, metadata !DIExpression()), !dbg !6515
  call void @glPushMatrix(), !dbg !6516
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !6517
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !6518
  %1 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !6519
  %no = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %1, i32 0, i32 2, !dbg !6520
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !6519
  call void @cross_v3_v3v3(float* %arraydecay, float* %arraydecay1, float* %arraydecay2), !dbg !6521
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !6522
  %call = call zeroext i8 @is_zero_v3(float* %arraydecay3), !dbg !6524
  %tobool = icmp ne i8 %call, 0, !dbg !6524
  br i1 %tobool, label %if.then, label %if.end, !dbg !6525

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 1, !dbg !6526
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !6528
  br label %if.end, !dbg !6529

if.end:                                           ; preds = %if.then, %entry
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %vec2, i64 0, i64 0, !dbg !6530
  %2 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !6531
  %no5 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %2, i32 0, i32 2, !dbg !6532
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %no5, i64 0, i64 0, !dbg !6531
  %call7 = call float @angle_normalized_v3v3(float* %arraydecay4, float* %arraydecay6), !dbg !6533
  store float %call7, float* %angle, align 4, !dbg !6534
  %3 = load float, float* %angle, align 4, !dbg !6535
  %mul = fmul float %3, 0x404CA5DC20000000, !dbg !6536
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !6537
  %4 = load float, float* %arrayidx8, align 4, !dbg !6537
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 1, !dbg !6538
  %5 = load float, float* %arrayidx9, align 4, !dbg !6538
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 2, !dbg !6539
  %6 = load float, float* %arrayidx10, align 4, !dbg !6539
  call void @glRotatef(float %mul, float %4, float %5, float %6), !dbg !6540
  call void @glColor3f(float 0.000000e+00, float 1.000000e+00, float 1.000000e+00), !dbg !6541
  %7 = load %struct.GLUquadric*, %struct.GLUquadric** %quad.addr, align 8, !dbg !6542
  %8 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !6543
  %9 = load float, float* %size.addr, align 4, !dbg !6544
  %call11 = call float @sk_clampPointSize(%struct.SK_Point* %8, float %9), !dbg !6545
  %conv = fpext float %call11 to double, !dbg !6545
  %10 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !6546
  %11 = load float, float* %height.addr, align 4, !dbg !6547
  %call12 = call float @sk_clampPointSize(%struct.SK_Point* %10, float %11), !dbg !6548
  %conv13 = fpext float %call12 to double, !dbg !6548
  call void @gluCylinder(%struct.GLUquadric* %7, double %conv, double 0.000000e+00, double %conv13, i32 10, i32 2), !dbg !6549
  call void @glPopMatrix(), !dbg !6550
  ret void, !dbg !6551
}

declare dso_local void @glColor3fv(float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !6552 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6553, metadata !DIExpression()), !dbg !6554
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6555, metadata !DIExpression()), !dbg !6556
  %0 = load float*, float** %a.addr, align 8, !dbg !6557
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6557
  %1 = load float, float* %arrayidx, align 4, !dbg !6557
  %2 = load float*, float** %r.addr, align 8, !dbg !6558
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6558
  %3 = load float, float* %arrayidx1, align 4, !dbg !6559
  %add = fadd float %3, %1, !dbg !6559
  store float %add, float* %arrayidx1, align 4, !dbg !6559
  %4 = load float*, float** %a.addr, align 8, !dbg !6560
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6560
  %5 = load float, float* %arrayidx2, align 4, !dbg !6560
  %6 = load float*, float** %r.addr, align 8, !dbg !6561
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6561
  %7 = load float, float* %arrayidx3, align 4, !dbg !6562
  %add4 = fadd float %7, %5, !dbg !6562
  store float %add4, float* %arrayidx3, align 4, !dbg !6562
  %8 = load float*, float** %a.addr, align 8, !dbg !6563
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6563
  %9 = load float, float* %arrayidx5, align 4, !dbg !6563
  %10 = load float*, float** %r.addr, align 8, !dbg !6564
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !6564
  %11 = load float, float* %arrayidx6, align 4, !dbg !6565
  %add7 = fadd float %11, %9, !dbg !6565
  store float %add7, float* %arrayidx6, align 4, !dbg !6565
  ret void, !dbg !6566
}

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !6567 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6568, metadata !DIExpression()), !dbg !6569
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6570, metadata !DIExpression()), !dbg !6571
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6572, metadata !DIExpression()), !dbg !6573
  %0 = load float*, float** %a.addr, align 8, !dbg !6574
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !6574
  %1 = load float, float* %arrayidx, align 4, !dbg !6574
  %2 = load float*, float** %b.addr, align 8, !dbg !6575
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !6575
  %3 = load float, float* %arrayidx1, align 4, !dbg !6575
  %mul = fmul float %1, %3, !dbg !6576
  %4 = load float*, float** %a.addr, align 8, !dbg !6577
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !6577
  %5 = load float, float* %arrayidx2, align 4, !dbg !6577
  %6 = load float*, float** %b.addr, align 8, !dbg !6578
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6578
  %7 = load float, float* %arrayidx3, align 4, !dbg !6578
  %mul4 = fmul float %5, %7, !dbg !6579
  %sub = fsub float %mul, %mul4, !dbg !6580
  %8 = load float*, float** %r.addr, align 8, !dbg !6581
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !6581
  store float %sub, float* %arrayidx5, align 4, !dbg !6582
  %9 = load float*, float** %a.addr, align 8, !dbg !6583
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !6583
  %10 = load float, float* %arrayidx6, align 4, !dbg !6583
  %11 = load float*, float** %b.addr, align 8, !dbg !6584
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !6584
  %12 = load float, float* %arrayidx7, align 4, !dbg !6584
  %mul8 = fmul float %10, %12, !dbg !6585
  %13 = load float*, float** %a.addr, align 8, !dbg !6586
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !6586
  %14 = load float, float* %arrayidx9, align 4, !dbg !6586
  %15 = load float*, float** %b.addr, align 8, !dbg !6587
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !6587
  %16 = load float, float* %arrayidx10, align 4, !dbg !6587
  %mul11 = fmul float %14, %16, !dbg !6588
  %sub12 = fsub float %mul8, %mul11, !dbg !6589
  %17 = load float*, float** %r.addr, align 8, !dbg !6590
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !6590
  store float %sub12, float* %arrayidx13, align 4, !dbg !6591
  %18 = load float*, float** %a.addr, align 8, !dbg !6592
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !6592
  %19 = load float, float* %arrayidx14, align 4, !dbg !6592
  %20 = load float*, float** %b.addr, align 8, !dbg !6593
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !6593
  %21 = load float, float* %arrayidx15, align 4, !dbg !6593
  %mul16 = fmul float %19, %21, !dbg !6594
  %22 = load float*, float** %a.addr, align 8, !dbg !6595
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !6595
  %23 = load float, float* %arrayidx17, align 4, !dbg !6595
  %24 = load float*, float** %b.addr, align 8, !dbg !6596
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !6596
  %25 = load float, float* %arrayidx18, align 4, !dbg !6596
  %mul19 = fmul float %23, %25, !dbg !6597
  %sub20 = fsub float %mul16, %mul19, !dbg !6598
  %26 = load float*, float** %r.addr, align 8, !dbg !6599
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !6599
  store float %sub20, float* %arrayidx21, align 4, !dbg !6600
  ret void, !dbg !6601
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @is_zero_v3(float* %v) #0 !dbg !6602 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !6605, metadata !DIExpression()), !dbg !6606
  %0 = load float*, float** %v.addr, align 8, !dbg !6607
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6607
  %1 = load float, float* %arrayidx, align 4, !dbg !6607
  %cmp = fcmp oeq float %1, 0.000000e+00, !dbg !6608
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !6609

land.lhs.true:                                    ; preds = %entry
  %2 = load float*, float** %v.addr, align 8, !dbg !6610
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !6610
  %3 = load float, float* %arrayidx1, align 4, !dbg !6610
  %cmp2 = fcmp oeq float %3, 0.000000e+00, !dbg !6611
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !6612

land.rhs:                                         ; preds = %land.lhs.true
  %4 = load float*, float** %v.addr, align 8, !dbg !6613
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 2, !dbg !6613
  %5 = load float, float* %arrayidx3, align 4, !dbg !6613
  %cmp4 = fcmp oeq float %5, 0.000000e+00, !dbg !6614
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %6 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp4, %land.rhs ], !dbg !6615
  %land.ext = zext i1 %6 to i32, !dbg !6612
  %conv = trunc i32 %land.ext to i8, !dbg !6616
  ret i8 %conv, !dbg !6617
}

declare dso_local float @angle_normalized_v3v3(float*, float*) #2

declare dso_local void @glRotatef(float, float, float, float) #2

declare dso_local void @gluCylinder(%struct.GLUquadric*, double, double, double, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float @sk_clampPointSize(%struct.SK_Point* %pt, float %size) #0 !dbg !6618 {
entry:
  %pt.addr = alloca %struct.SK_Point*, align 8
  %size.addr = alloca float, align 4
  store %struct.SK_Point* %pt, %struct.SK_Point** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %pt.addr, metadata !6621, metadata !DIExpression()), !dbg !6622
  store float %size, float* %size.addr, align 4
  call void @llvm.dbg.declare(metadata float* %size.addr, metadata !6623, metadata !DIExpression()), !dbg !6624
  %0 = load float, float* %size.addr, align 4, !dbg !6625
  %1 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !6626
  %size1 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %1, i32 0, i32 3, !dbg !6627
  %2 = load float, float* %size1, align 4, !dbg !6627
  %mul = fmul float %0, %2, !dbg !6628
  %3 = load float, float* %size.addr, align 4, !dbg !6629
  %div = fdiv float %3, 2.000000e+00, !dbg !6630
  %call = call float @max_ff(float %mul, float %div), !dbg !6631
  ret float %call, !dbg !6632
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !6633 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !6637, metadata !DIExpression()), !dbg !6638
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !6639, metadata !DIExpression()), !dbg !6640
  %0 = load float, float* %a.addr, align 4, !dbg !6641
  %1 = load float, float* %b.addr, align 4, !dbg !6642
  %cmp = fcmp ogt float %0, %1, !dbg !6643
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6644

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !6645
  br label %cond.end, !dbg !6644

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !6646
  br label %cond.end, !dbg !6644

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !6644
  ret float %cond, !dbg !6647
}

; Function Attrs: noinline nounwind uwtable
define internal void @drawSubdividedStrokeBy(%struct.ToolSettings* %toolsettings, %struct.BArcIterator* %iter, i32 (%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*)* %next_subdividion) #0 !dbg !6648 {
entry:
  %toolsettings.addr = alloca %struct.ToolSettings*, align 8
  %iter.addr = alloca %struct.BArcIterator*, align 8
  %next_subdividion.addr = alloca i32 (%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*)*, align 8
  %stk = alloca %struct.SK_Stroke*, align 8
  %head = alloca [3 x float], align 4
  %tail = alloca [3 x float], align 4
  %bone_start = alloca i32, align 4
  %end = alloca i32, align 4
  %index = alloca i32, align 4
  %quad = alloca %struct.GLUquadric*, align 8
  %pt = alloca %struct.SK_Point*, align 8
  store %struct.ToolSettings* %toolsettings, %struct.ToolSettings** %toolsettings.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %toolsettings.addr, metadata !6657, metadata !DIExpression()), !dbg !6658
  store %struct.BArcIterator* %iter, %struct.BArcIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BArcIterator** %iter.addr, metadata !6659, metadata !DIExpression()), !dbg !6660
  store i32 (%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*)* %next_subdividion, i32 (%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*)** %next_subdividion.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*)** %next_subdividion.addr, metadata !6661, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk, metadata !6663, metadata !DIExpression()), !dbg !6664
  %0 = load %struct.BArcIterator*, %struct.BArcIterator** %iter.addr, align 8, !dbg !6665
  %1 = bitcast %struct.BArcIterator* %0 to %struct.SK_StrokeIterator*, !dbg !6666
  %stroke = getelementptr inbounds %struct.SK_StrokeIterator, %struct.SK_StrokeIterator* %1, i32 0, i32 12, !dbg !6666
  %2 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke, align 8, !dbg !6666
  store %struct.SK_Stroke* %2, %struct.SK_Stroke** %stk, align 8, !dbg !6664
  call void @llvm.dbg.declare(metadata [3 x float]* %head, metadata !6667, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.declare(metadata [3 x float]* %tail, metadata !6669, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.declare(metadata i32* %bone_start, metadata !6671, metadata !DIExpression()), !dbg !6672
  store i32 0, i32* %bone_start, align 4, !dbg !6672
  call void @llvm.dbg.declare(metadata i32* %end, metadata !6673, metadata !DIExpression()), !dbg !6674
  %3 = load %struct.BArcIterator*, %struct.BArcIterator** %iter.addr, align 8, !dbg !6675
  %length = getelementptr inbounds %struct.BArcIterator, %struct.BArcIterator* %3, i32 0, i32 10, !dbg !6676
  %4 = load i32, i32* %length, align 4, !dbg !6676
  store i32 %4, i32* %end, align 4, !dbg !6674
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6677, metadata !DIExpression()), !dbg !6678
  call void @llvm.dbg.declare(metadata %struct.GLUquadric** %quad, metadata !6679, metadata !DIExpression()), !dbg !6680
  %call = call %struct.GLUquadric* @gluNewQuadric(), !dbg !6681
  store %struct.GLUquadric* %call, %struct.GLUquadric** %quad, align 8, !dbg !6680
  %5 = load %struct.GLUquadric*, %struct.GLUquadric** %quad, align 8, !dbg !6682
  call void @gluQuadricNormals(%struct.GLUquadric* %5, i32 100000), !dbg !6683
  %6 = load %struct.BArcIterator*, %struct.BArcIterator** %iter.addr, align 8, !dbg !6684
  %head1 = getelementptr inbounds %struct.BArcIterator, %struct.BArcIterator* %6, i32 0, i32 0, !dbg !6685
  %7 = load i8* (i8*)*, i8* (i8*)** %head1, align 8, !dbg !6685
  %8 = load %struct.BArcIterator*, %struct.BArcIterator** %iter.addr, align 8, !dbg !6686
  %9 = bitcast %struct.BArcIterator* %8 to i8*, !dbg !6686
  %call2 = call i8* %7(i8* %9), !dbg !6684
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !6687
  %10 = load %struct.BArcIterator*, %struct.BArcIterator** %iter.addr, align 8, !dbg !6688
  %p = getelementptr inbounds %struct.BArcIterator, %struct.BArcIterator* %10, i32 0, i32 7, !dbg !6689
  %11 = load float*, float** %p, align 8, !dbg !6689
  call void @copy_v3_v3(float* %arraydecay, float* %11), !dbg !6690
  %12 = load i32 (%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*)*, i32 (%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*)** %next_subdividion.addr, align 8, !dbg !6691
  %13 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings.addr, align 8, !dbg !6692
  %14 = load %struct.BArcIterator*, %struct.BArcIterator** %iter.addr, align 8, !dbg !6693
  %15 = load i32, i32* %bone_start, align 4, !dbg !6694
  %16 = load i32, i32* %end, align 4, !dbg !6695
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !6696
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !6697
  %call5 = call i32 %12(%struct.ToolSettings* %13, %struct.BArcIterator* %14, i32 %15, i32 %16, float* %arraydecay3, float* %arraydecay4), !dbg !6691
  store i32 %call5, i32* %index, align 4, !dbg !6698
  br label %while.cond, !dbg !6699

while.cond:                                       ; preds = %while.body, %entry
  %17 = load i32, i32* %index, align 4, !dbg !6700
  %cmp = icmp ne i32 %17, -1, !dbg !6701
  br i1 %cmp, label %while.body, label %while.end, !dbg !6699

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %pt, metadata !6702, metadata !DIExpression()), !dbg !6704
  %18 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !6705
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %18, i32 0, i32 2, !dbg !6706
  %19 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !6706
  %20 = load i32, i32* %index, align 4, !dbg !6707
  %idx.ext = sext i32 %20 to i64, !dbg !6708
  %add.ptr = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %19, i64 %idx.ext, !dbg !6708
  store %struct.SK_Point* %add.ptr, %struct.SK_Point** %pt, align 8, !dbg !6704
  call void @glPushMatrix(), !dbg !6709
  call void @glColor3f(float 0.000000e+00, float 1.000000e+00, float 0.000000e+00), !dbg !6710
  %21 = load %struct.GLUquadric*, %struct.GLUquadric** %quad, align 8, !dbg !6711
  %22 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !6712
  call void @sk_drawPoint(%struct.GLUquadric* %21, %struct.SK_Point* %22, float 0x3FC3333340000000), !dbg !6713
  %23 = load %struct.GLUquadric*, %struct.GLUquadric** %quad, align 8, !dbg !6714
  %24 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !6715
  call void @sk_drawNormal(%struct.GLUquadric* %23, %struct.SK_Point* %24, float 0x3FA99999A0000000, float 0x3FECCCCCC0000000), !dbg !6716
  call void @glPopMatrix(), !dbg !6717
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !6718
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !6719
  call void @copy_v3_v3(float* %arraydecay6, float* %arraydecay7), !dbg !6720
  %25 = load i32, i32* %index, align 4, !dbg !6721
  store i32 %25, i32* %bone_start, align 4, !dbg !6722
  %26 = load i32 (%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*)*, i32 (%struct.ToolSettings*, %struct.BArcIterator*, i32, i32, float*, float*)** %next_subdividion.addr, align 8, !dbg !6723
  %27 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings.addr, align 8, !dbg !6724
  %28 = load %struct.BArcIterator*, %struct.BArcIterator** %iter.addr, align 8, !dbg !6725
  %29 = load i32, i32* %bone_start, align 4, !dbg !6726
  %30 = load i32, i32* %end, align 4, !dbg !6727
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !6728
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !6729
  %call10 = call i32 %26(%struct.ToolSettings* %27, %struct.BArcIterator* %28, i32 %29, i32 %30, float* %arraydecay8, float* %arraydecay9), !dbg !6723
  store i32 %call10, i32* %index, align 4, !dbg !6730
  br label %while.cond, !dbg !6699, !llvm.loop !6731

while.end:                                        ; preds = %while.cond
  %31 = load %struct.GLUquadric*, %struct.GLUquadric** %quad, align 8, !dbg !6733
  call void @gluDeleteQuadric(%struct.GLUquadric* %31), !dbg !6734
  ret void, !dbg !6735
}

declare dso_local void @glTranslatef(float, float, float) #2

declare dso_local void @gluSphere(%struct.GLUquadric*, double, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !6736 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !6739, metadata !DIExpression()), !dbg !6740
  %0 = load float*, float** %n.addr, align 8, !dbg !6741
  %1 = load float*, float** %n.addr, align 8, !dbg !6742
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !6743
  ret float %call, !dbg !6744
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !6745 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6748, metadata !DIExpression()), !dbg !6749
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6750, metadata !DIExpression()), !dbg !6751
  call void @llvm.dbg.declare(metadata float* %d, metadata !6752, metadata !DIExpression()), !dbg !6753
  %0 = load float*, float** %a.addr, align 8, !dbg !6754
  %1 = load float*, float** %a.addr, align 8, !dbg !6755
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !6756
  store float %call, float* %d, align 4, !dbg !6753
  %2 = load float, float* %d, align 4, !dbg !6757
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !6759
  br i1 %cmp, label %if.then, label %if.else, !dbg !6760

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !6761
  %call1 = call float @sqrtf(float %3) #7, !dbg !6763
  store float %call1, float* %d, align 4, !dbg !6764
  %4 = load float*, float** %r.addr, align 8, !dbg !6765
  %5 = load float*, float** %a.addr, align 8, !dbg !6766
  %6 = load float, float* %d, align 4, !dbg !6767
  %div = fdiv float 1.000000e+00, %6, !dbg !6768
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !6769
  br label %if.end, !dbg !6770

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !6771
  call void @zero_v3(float* %7), !dbg !6773
  store float 0.000000e+00, float* %d, align 4, !dbg !6774
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !6775
  ret float %8, !dbg !6776
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #5

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !6777 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6780, metadata !DIExpression()), !dbg !6781
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6782, metadata !DIExpression()), !dbg !6783
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !6784, metadata !DIExpression()), !dbg !6785
  %0 = load float*, float** %a.addr, align 8, !dbg !6786
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6786
  %1 = load float, float* %arrayidx, align 4, !dbg !6786
  %2 = load float, float* %f.addr, align 4, !dbg !6787
  %mul = fmul float %1, %2, !dbg !6788
  %3 = load float*, float** %r.addr, align 8, !dbg !6789
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !6789
  store float %mul, float* %arrayidx1, align 4, !dbg !6790
  %4 = load float*, float** %a.addr, align 8, !dbg !6791
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6791
  %5 = load float, float* %arrayidx2, align 4, !dbg !6791
  %6 = load float, float* %f.addr, align 4, !dbg !6792
  %mul3 = fmul float %5, %6, !dbg !6793
  %7 = load float*, float** %r.addr, align 8, !dbg !6794
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !6794
  store float %mul3, float* %arrayidx4, align 4, !dbg !6795
  %8 = load float*, float** %a.addr, align 8, !dbg !6796
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6796
  %9 = load float, float* %arrayidx5, align 4, !dbg !6796
  %10 = load float, float* %f.addr, align 4, !dbg !6797
  %mul6 = fmul float %9, %10, !dbg !6798
  %11 = load float*, float** %r.addr, align 8, !dbg !6799
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !6799
  store float %mul6, float* %arrayidx7, align 4, !dbg !6800
  ret void, !dbg !6801
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !6802 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6805, metadata !DIExpression()), !dbg !6806
  %0 = load float*, float** %r.addr, align 8, !dbg !6807
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6807
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6808
  %1 = load float*, float** %r.addr, align 8, !dbg !6809
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !6809
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !6810
  %2 = load float*, float** %r.addr, align 8, !dbg !6811
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !6811
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !6812
  ret void, !dbg !6813
}

declare dso_local void @view3d_set_viewcontext(%struct.bContext*, %struct.ViewContext*) #2

declare dso_local signext i16 @view3d_opengl_select(%struct.ViewContext*, i32*, i32, %struct.rcti*, i8 zeroext) #2

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

declare dso_local void @sk_selectAllSketch(%struct.SK_Sketch*, i32) #2

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sk_cancelStroke(%struct.SK_Sketch* %sketch) #0 !dbg !6814 {
entry:
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !6815, metadata !DIExpression()), !dbg !6816
  %0 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6817
  %active_stroke = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %0, i32 0, i32 2, !dbg !6819
  %1 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke, align 8, !dbg !6819
  %cmp = icmp ne %struct.SK_Stroke* %1, null, !dbg !6820
  br i1 %cmp, label %if.then, label %if.end, !dbg !6821

if.then:                                          ; preds = %entry
  %2 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6822
  call void @sk_resetOverdraw(%struct.SK_Sketch* %2), !dbg !6824
  %3 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6825
  %4 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6826
  %active_stroke1 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %4, i32 0, i32 2, !dbg !6827
  %5 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke1, align 8, !dbg !6827
  call void @sk_removeStroke(%struct.SK_Sketch* %3, %struct.SK_Stroke* %5), !dbg !6828
  br label %if.end, !dbg !6829

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6830
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sk_finish_stroke(%struct.bContext* %C, %struct.SK_Sketch* %sketch) #0 !dbg !6831 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %stk = alloca %struct.SK_Stroke*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6834, metadata !DIExpression()), !dbg !6835
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !6836, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !6838, metadata !DIExpression()), !dbg !6839
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6840
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !6841
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !6839
  %1 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6842
  %active_stroke = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %1, i32 0, i32 2, !dbg !6844
  %2 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke, align 8, !dbg !6844
  %cmp = icmp ne %struct.SK_Stroke* %2, null, !dbg !6845
  br i1 %cmp, label %if.then, label %if.end8, !dbg !6846

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk, metadata !6847, metadata !DIExpression()), !dbg !6849
  %3 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6850
  %active_stroke1 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %3, i32 0, i32 2, !dbg !6851
  %4 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke1, align 8, !dbg !6851
  store %struct.SK_Stroke* %4, %struct.SK_Stroke** %stk, align 8, !dbg !6849
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6852
  %6 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6853
  call void @sk_endStroke(%struct.bContext* %5, %struct.SK_Sketch* %6), !dbg !6854
  %7 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !6855
  %bone_sketching = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %7, i32 0, i32 42, !dbg !6857
  %8 = load i8, i8* %bone_sketching, align 8, !dbg !6857
  %conv = zext i8 %8 to i32, !dbg !6855
  %and = and i32 %conv, 2, !dbg !6858
  %tobool = icmp ne i32 %and, 0, !dbg !6858
  br i1 %tobool, label %if.then2, label %if.end7, !dbg !6859

if.then2:                                         ; preds = %if.then
  %9 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !6860
  %bone_sketching_convert = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %9, i32 0, i32 43, !dbg !6863
  %10 = load i8, i8* %bone_sketching_convert, align 1, !dbg !6863
  %conv3 = zext i8 %10 to i32, !dbg !6860
  %cmp4 = icmp eq i32 %conv3, 3, !dbg !6864
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !6865

if.then6:                                         ; preds = %if.then2
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6866
  %12 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !6868
  call void @sk_retargetStroke(%struct.bContext* %11, %struct.SK_Stroke* %12), !dbg !6869
  br label %if.end, !dbg !6870

if.else:                                          ; preds = %if.then2
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6871
  %14 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !6873
  call void @sk_convertStroke(%struct.bContext* %13, %struct.SK_Stroke* %14), !dbg !6874
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %15 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6875
  %16 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !6876
  call void @sk_removeStroke(%struct.SK_Sketch* %15, %struct.SK_Stroke* %16), !dbg !6877
  br label %if.end7, !dbg !6878

if.end7:                                          ; preds = %if.end, %if.then
  store i32 1, i32* %retval, align 4, !dbg !6879
  br label %return, !dbg !6879

if.end8:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6880
  br label %return, !dbg !6880

return:                                           ; preds = %if.end8, %if.end7
  %17 = load i32, i32* %retval, align 4, !dbg !6881
  ret i32 %17, !dbg !6881
}

; Function Attrs: noinline nounwind uwtable
define internal void @sk_endStroke(%struct.bContext* %C, %struct.SK_Sketch* %sketch) #0 !dbg !6882 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6883, metadata !DIExpression()), !dbg !6884
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !6885, metadata !DIExpression()), !dbg !6886
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !6887, metadata !DIExpression()), !dbg !6888
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6889
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !6890
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !6888
  %1 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6891
  %active_stroke = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %1, i32 0, i32 2, !dbg !6892
  %2 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke, align 8, !dbg !6892
  call void @sk_shrinkStrokeBuffer(%struct.SK_Stroke* %2), !dbg !6893
  %3 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !6894
  %bone_sketching = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %3, i32 0, i32 42, !dbg !6896
  %4 = load i8, i8* %bone_sketching, align 8, !dbg !6896
  %conv = zext i8 %4 to i32, !dbg !6894
  %and = and i32 %conv, 4, !dbg !6897
  %tobool = icmp ne i32 %and, 0, !dbg !6897
  br i1 %tobool, label %if.then, label %if.end, !dbg !6898

if.then:                                          ; preds = %entry
  %5 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6899
  call void @sk_endOverdraw(%struct.SK_Sketch* %5), !dbg !6901
  br label %if.end, !dbg !6902

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6903
  %active_stroke1 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %6, i32 0, i32 2, !dbg !6904
  store %struct.SK_Stroke* null, %struct.SK_Stroke** %active_stroke1, align 8, !dbg !6905
  ret void, !dbg !6906
}

declare dso_local void @sk_shrinkStrokeBuffer(%struct.SK_Stroke*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sk_endOverdraw(%struct.SK_Sketch* %sketch) #0 !dbg !6907 {
entry:
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %stk = alloca %struct.SK_Stroke*, align 8
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !6908, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk, metadata !6910, metadata !DIExpression()), !dbg !6911
  %0 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6912
  %active_stroke = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %0, i32 0, i32 2, !dbg !6913
  %1 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke, align 8, !dbg !6913
  store %struct.SK_Stroke* %1, %struct.SK_Stroke** %stk, align 8, !dbg !6911
  %2 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6914
  %call = call i32 @sk_hasOverdraw(%struct.SK_Sketch* %2, %struct.SK_Stroke* null), !dbg !6916
  %tobool = icmp ne i32 %call, 0, !dbg !6916
  br i1 %tobool, label %if.then, label %if.end20, !dbg !6917

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %start, metadata !6918, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.declare(metadata i32* %end, metadata !6921, metadata !DIExpression()), !dbg !6922
  %3 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6923
  %call1 = call i32 @sk_adjustIndexes(%struct.SK_Sketch* %3, i32* %start, i32* %end), !dbg !6925
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6925
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !6926

if.then3:                                         ; preds = %if.then
  %4 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !6927
  call void @sk_reverseStroke(%struct.SK_Stroke* %4), !dbg !6929
  br label %if.end, !dbg !6930

if.end:                                           ; preds = %if.then3, %if.then
  %5 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !6931
  %nb_points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %5, i32 0, i32 3, !dbg !6933
  %6 = load i32, i32* %nb_points, align 8, !dbg !6933
  %cmp = icmp sgt i32 %6, 1, !dbg !6934
  br i1 %cmp, label %if.then4, label %if.end15, !dbg !6935

if.then4:                                         ; preds = %if.end
  %7 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6936
  %over = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %7, i32 0, i32 5, !dbg !6938
  %target = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over, i32 0, i32 0, !dbg !6939
  %8 = load %struct.SK_Stroke*, %struct.SK_Stroke** %target, align 8, !dbg !6939
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %8, i32 0, i32 2, !dbg !6940
  %9 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !6940
  %10 = load i32, i32* %start, align 4, !dbg !6941
  %idxprom = sext i32 %10 to i64, !dbg !6936
  %arrayidx = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %9, i64 %idxprom, !dbg !6936
  %type = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx, i32 0, i32 4, !dbg !6942
  %11 = load i32, i32* %type, align 4, !dbg !6942
  %12 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !6943
  %points5 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %12, i32 0, i32 2, !dbg !6944
  %13 = load %struct.SK_Point*, %struct.SK_Point** %points5, align 8, !dbg !6944
  %type6 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %13, i32 0, i32 4, !dbg !6945
  store i32 %11, i32* %type6, align 4, !dbg !6946
  %14 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6947
  %over7 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %14, i32 0, i32 5, !dbg !6948
  %target8 = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over7, i32 0, i32 0, !dbg !6949
  %15 = load %struct.SK_Stroke*, %struct.SK_Stroke** %target8, align 8, !dbg !6949
  %points9 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %15, i32 0, i32 2, !dbg !6950
  %16 = load %struct.SK_Point*, %struct.SK_Point** %points9, align 8, !dbg !6950
  %17 = load i32, i32* %end, align 4, !dbg !6951
  %idxprom10 = sext i32 %17 to i64, !dbg !6947
  %arrayidx11 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %16, i64 %idxprom10, !dbg !6947
  %type12 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx11, i32 0, i32 4, !dbg !6952
  %18 = load i32, i32* %type12, align 4, !dbg !6952
  %19 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !6953
  %call13 = call %struct.SK_Point* @sk_lastStrokePoint(%struct.SK_Stroke* %19), !dbg !6954
  %type14 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %call13, i32 0, i32 4, !dbg !6955
  store i32 %18, i32* %type14, align 4, !dbg !6956
  br label %if.end15, !dbg !6957

if.end15:                                         ; preds = %if.then4, %if.end
  %20 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6958
  %over16 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %20, i32 0, i32 5, !dbg !6959
  %target17 = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over16, i32 0, i32 0, !dbg !6960
  %21 = load %struct.SK_Stroke*, %struct.SK_Stroke** %target17, align 8, !dbg !6960
  %22 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !6961
  %points18 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %22, i32 0, i32 2, !dbg !6962
  %23 = load %struct.SK_Point*, %struct.SK_Point** %points18, align 8, !dbg !6962
  %24 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !6963
  %nb_points19 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %24, i32 0, i32 3, !dbg !6964
  %25 = load i32, i32* %nb_points19, align 8, !dbg !6964
  %26 = load i32, i32* %start, align 4, !dbg !6965
  %27 = load i32, i32* %end, align 4, !dbg !6966
  call void @sk_insertStrokePoints(%struct.SK_Stroke* %21, %struct.SK_Point* %23, i32 %25, i32 %26, i32 %27), !dbg !6967
  %28 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6968
  %29 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !6969
  call void @sk_removeStroke(%struct.SK_Sketch* %28, %struct.SK_Stroke* %29), !dbg !6970
  %30 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6971
  call void @sk_resetOverdraw(%struct.SK_Sketch* %30), !dbg !6972
  br label %if.end20, !dbg !6973

if.end20:                                         ; preds = %if.end15, %entry
  ret void, !dbg !6974
}

declare dso_local void @sk_insertStrokePoints(%struct.SK_Stroke*, %struct.SK_Point*, i32, i32, i32) #2

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #2

declare dso_local void @sk_initDrawData(%struct.SK_DrawData*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sk_getStrokePoint(%struct.bContext* %C, %struct.SK_Point* %pt, %struct.SK_Sketch* %sketch, %struct.SK_Stroke* %stk, %struct.SK_DrawData* %dd, i8 zeroext %snap) #0 !dbg !6975 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %pt.addr = alloca %struct.SK_Point*, align 8
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  %dd.addr = alloca %struct.SK_DrawData*, align 8
  %snap.addr = alloca i8, align 1
  %point_added = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6978, metadata !DIExpression()), !dbg !6979
  store %struct.SK_Point* %pt, %struct.SK_Point** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %pt.addr, metadata !6980, metadata !DIExpression()), !dbg !6981
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !6982, metadata !DIExpression()), !dbg !6983
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !6984, metadata !DIExpression()), !dbg !6985
  store %struct.SK_DrawData* %dd, %struct.SK_DrawData** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_DrawData** %dd.addr, metadata !6986, metadata !DIExpression()), !dbg !6987
  store i8 %snap, i8* %snap.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %snap.addr, metadata !6988, metadata !DIExpression()), !dbg !6989
  call void @llvm.dbg.declare(metadata i32* %point_added, metadata !6990, metadata !DIExpression()), !dbg !6991
  store i32 0, i32* %point_added, align 4, !dbg !6991
  %0 = load i8, i8* %snap.addr, align 1, !dbg !6992
  %tobool = icmp ne i8 %0, 0, !dbg !6992
  br i1 %tobool, label %if.then, label %if.else, !dbg !6994

if.then:                                          ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6995
  %2 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !6997
  %3 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !6998
  %4 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !6999
  %5 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7000
  %call = call i32 @sk_getStrokeSnapPoint(%struct.bContext* %1, %struct.SK_Point* %2, %struct.SK_Sketch* %3, %struct.SK_Stroke* %4, %struct.SK_DrawData* %5), !dbg !7001
  store i32 %call, i32* %point_added, align 4, !dbg !7002
  store i32 1, i32* @LAST_SNAP_POINT_VALID, align 4, !dbg !7003
  %6 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !7004
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %6, i32 0, i32 0, !dbg !7005
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !7004
  call void @copy_v3_v3(float* getelementptr inbounds ([3 x float], [3 x float]* @LAST_SNAP_POINT, i64 0, i64 0), float* %arraydecay), !dbg !7006
  br label %if.end, !dbg !7007

if.else:                                          ; preds = %entry
  store i32 0, i32* @LAST_SNAP_POINT_VALID, align 4, !dbg !7008
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %point_added, align 4, !dbg !7010
  %cmp = icmp eq i32 %7, 0, !dbg !7012
  br i1 %cmp, label %if.then1, label %if.end3, !dbg !7013

if.then1:                                         ; preds = %if.end
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7014
  %9 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !7016
  %10 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7017
  %11 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7018
  %12 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7019
  %call2 = call i32 @sk_getStrokeDrawPoint(%struct.bContext* %8, %struct.SK_Point* %9, %struct.SK_Sketch* %10, %struct.SK_Stroke* %11, %struct.SK_DrawData* %12), !dbg !7020
  store i32 %call2, i32* %point_added, align 4, !dbg !7021
  br label %if.end3, !dbg !7022

if.end3:                                          ; preds = %if.then1, %if.end
  ret void, !dbg !7023
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sk_getStrokeSnapPoint(%struct.bContext* %C, %struct.SK_Point* %pt, %struct.SK_Sketch* %sketch, %struct.SK_Stroke* %stk, %struct.SK_DrawData* %dd) #0 !dbg !7024 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %pt.addr = alloca %struct.SK_Point*, align 8
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  %dd.addr = alloca %struct.SK_DrawData*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %point_added = alloca i32, align 4
  %p1 = alloca %struct.DepthPeel*, align 8
  %p2 = alloca %struct.DepthPeel*, align 8
  %last_p = alloca float*, align 8
  %dist = alloca float, align 4
  %p = alloca [3 x float], align 4
  %size = alloca float, align 4
  %mvalf = alloca [2 x float], align 4
  %vec = alloca [3 x float], align 4
  %new_dist = alloca float, align 4
  %new_size = alloca float, align 4
  %peel = alloca %struct.DepthPeel*, align 8
  %snap_stk = alloca %struct.SK_Stroke*, align 8
  %vec107 = alloca [3 x float], align 4
  %no = alloca [3 x float], align 4
  %mval108 = alloca [2 x float], align 4
  %found = alloca i32, align 4
  %dist_px = alloca float, align 4
  %spt = alloca %struct.SK_Point*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7027, metadata !DIExpression()), !dbg !7028
  store %struct.SK_Point* %pt, %struct.SK_Point** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %pt.addr, metadata !7029, metadata !DIExpression()), !dbg !7030
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !7031, metadata !DIExpression()), !dbg !7032
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !7033, metadata !DIExpression()), !dbg !7034
  store %struct.SK_DrawData* %dd, %struct.SK_DrawData** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_DrawData** %dd.addr, metadata !7035, metadata !DIExpression()), !dbg !7036
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !7037, metadata !DIExpression()), !dbg !7038
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7039
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !7040
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !7038
  call void @llvm.dbg.declare(metadata i32* %point_added, metadata !7041, metadata !DIExpression()), !dbg !7042
  store i32 0, i32* %point_added, align 4, !dbg !7042
  %1 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7043
  %snap_mode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %1, i32 0, i32 51, !dbg !7045
  %2 = load i8, i8* %snap_mode, align 1, !dbg !7045
  %conv = zext i8 %2 to i32, !dbg !7043
  %cmp = icmp eq i32 %conv, 4, !dbg !7046
  br i1 %cmp, label %if.then, label %if.else106, !dbg !7047

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.DepthPeel** %p1, metadata !7048, metadata !DIExpression()), !dbg !7062
  call void @llvm.dbg.declare(metadata %struct.DepthPeel** %p2, metadata !7063, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.declare(metadata float** %last_p, metadata !7065, metadata !DIExpression()), !dbg !7066
  store float* null, float** %last_p, align 8, !dbg !7066
  call void @llvm.dbg.declare(metadata float* %dist, metadata !7067, metadata !DIExpression()), !dbg !7068
  store float 0x47EFFFFFE0000000, float* %dist, align 4, !dbg !7068
  call void @llvm.dbg.declare(metadata [3 x float]* %p, metadata !7069, metadata !DIExpression()), !dbg !7070
  %3 = bitcast [3 x float]* %p to i8*, !dbg !7070
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 12, i1 false), !dbg !7070
  call void @llvm.dbg.declare(metadata float* %size, metadata !7071, metadata !DIExpression()), !dbg !7072
  store float 0.000000e+00, float* %size, align 4, !dbg !7072
  call void @llvm.dbg.declare(metadata [2 x float]* %mvalf, metadata !7073, metadata !DIExpression()), !dbg !7074
  %4 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7075
  %depth_peels = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %4, i32 0, i32 1, !dbg !7076
  call void @BLI_freelistN(%struct.ListBase* %depth_peels), !dbg !7077
  %5 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7078
  %depth_peels2 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %5, i32 0, i32 1, !dbg !7079
  call void @BLI_listbase_clear(%struct.ListBase* %depth_peels2), !dbg !7080
  %6 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7081
  %mval = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %6, i32 0, i32 0, !dbg !7082
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !7081
  %7 = load i32, i32* %arrayidx, align 4, !dbg !7081
  %conv3 = sitofp i32 %7 to float, !dbg !7081
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %mvalf, i64 0, i64 0, !dbg !7083
  store float %conv3, float* %arrayidx4, align 4, !dbg !7084
  %8 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7085
  %mval5 = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %8, i32 0, i32 0, !dbg !7086
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %mval5, i64 0, i64 1, !dbg !7085
  %9 = load i32, i32* %arrayidx6, align 4, !dbg !7085
  %conv7 = sitofp i32 %9 to float, !dbg !7085
  %arrayidx8 = getelementptr inbounds [2 x float], [2 x float]* %mvalf, i64 0, i64 1, !dbg !7087
  store float %conv7, float* %arrayidx8, align 4, !dbg !7088
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7089
  %11 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7090
  %depth_peels9 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %11, i32 0, i32 1, !dbg !7091
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %mvalf, i64 0, i64 0, !dbg !7092
  %call10 = call zeroext i8 @peelObjectsContext(%struct.bContext* %10, %struct.ListBase* %depth_peels9, float* %arraydecay, i32 0), !dbg !7093
  %12 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7094
  %nb_points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %12, i32 0, i32 3, !dbg !7096
  %13 = load i32, i32* %nb_points, align 8, !dbg !7096
  %cmp11 = icmp sgt i32 %13, 0, !dbg !7097
  br i1 %cmp11, label %land.lhs.true, label %if.else, !dbg !7098

land.lhs.true:                                    ; preds = %if.then
  %14 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7099
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %14, i32 0, i32 2, !dbg !7100
  %15 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !7100
  %16 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7101
  %nb_points13 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %16, i32 0, i32 3, !dbg !7102
  %17 = load i32, i32* %nb_points13, align 8, !dbg !7102
  %sub = sub nsw i32 %17, 1, !dbg !7103
  %idxprom = sext i32 %sub to i64, !dbg !7099
  %arrayidx14 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %15, i64 %idxprom, !dbg !7099
  %type = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx14, i32 0, i32 4, !dbg !7104
  %18 = load i32, i32* %type, align 4, !dbg !7104
  %cmp15 = icmp eq i32 %18, 0, !dbg !7105
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !7106

if.then17:                                        ; preds = %land.lhs.true
  %19 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7107
  %points18 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %19, i32 0, i32 2, !dbg !7109
  %20 = load %struct.SK_Point*, %struct.SK_Point** %points18, align 8, !dbg !7109
  %21 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7110
  %nb_points19 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %21, i32 0, i32 3, !dbg !7111
  %22 = load i32, i32* %nb_points19, align 8, !dbg !7111
  %sub20 = sub nsw i32 %22, 1, !dbg !7112
  %idxprom21 = sext i32 %sub20 to i64, !dbg !7107
  %arrayidx22 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %20, i64 %idxprom21, !dbg !7107
  %p23 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx22, i32 0, i32 0, !dbg !7113
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %p23, i64 0, i64 0, !dbg !7107
  store float* %arraydecay24, float** %last_p, align 8, !dbg !7114
  br label %if.end26, !dbg !7115

if.else:                                          ; preds = %land.lhs.true, %if.then
  %23 = load i32, i32* @LAST_SNAP_POINT_VALID, align 4, !dbg !7116
  %tobool = icmp ne i32 %23, 0, !dbg !7116
  br i1 %tobool, label %if.then25, label %if.end, !dbg !7118

if.then25:                                        ; preds = %if.else
  store float* getelementptr inbounds ([3 x float], [3 x float]* @LAST_SNAP_POINT, i64 0, i64 0), float** %last_p, align 8, !dbg !7119
  br label %if.end, !dbg !7121

if.end:                                           ; preds = %if.then25, %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end, %if.then17
  %24 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7122
  %depth_peels27 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %24, i32 0, i32 1, !dbg !7124
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %depth_peels27, i32 0, i32 0, !dbg !7125
  %25 = load i8*, i8** %first, align 8, !dbg !7125
  %26 = bitcast i8* %25 to %struct.DepthPeel*, !dbg !7122
  store %struct.DepthPeel* %26, %struct.DepthPeel** %p1, align 8, !dbg !7126
  br label %for.cond, !dbg !7127

for.cond:                                         ; preds = %for.inc93, %if.end26
  %27 = load %struct.DepthPeel*, %struct.DepthPeel** %p1, align 8, !dbg !7128
  %tobool28 = icmp ne %struct.DepthPeel* %27, null, !dbg !7130
  br i1 %tobool28, label %for.body, label %for.end95, !dbg !7130

for.body:                                         ; preds = %for.cond
  %28 = load %struct.DepthPeel*, %struct.DepthPeel** %p1, align 8, !dbg !7131
  %flag = getelementptr inbounds %struct.DepthPeel, %struct.DepthPeel* %28, i32 0, i32 6, !dbg !7134
  %29 = load i32, i32* %flag, align 8, !dbg !7134
  %cmp29 = icmp eq i32 %29, 0, !dbg !7135
  br i1 %cmp29, label %if.then31, label %if.end92, !dbg !7136

if.then31:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !7137, metadata !DIExpression()), !dbg !7139
  call void @llvm.dbg.declare(metadata float* %new_dist, metadata !7140, metadata !DIExpression()), !dbg !7141
  call void @llvm.dbg.declare(metadata float* %new_size, metadata !7142, metadata !DIExpression()), !dbg !7143
  store float 0.000000e+00, float* %new_size, align 4, !dbg !7143
  store %struct.DepthPeel* null, %struct.DepthPeel** %p2, align 8, !dbg !7144
  %30 = load %struct.DepthPeel*, %struct.DepthPeel** %p1, align 8, !dbg !7145
  %flag32 = getelementptr inbounds %struct.DepthPeel, %struct.DepthPeel* %30, i32 0, i32 6, !dbg !7146
  store i32 1, i32* %flag32, align 8, !dbg !7147
  %31 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7148
  %snap_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %31, i32 0, i32 54, !dbg !7150
  %32 = load i16, i16* %snap_flag, align 2, !dbg !7150
  %conv33 = sext i16 %32 to i32, !dbg !7148
  %and = and i32 %conv33, 4, !dbg !7151
  %tobool34 = icmp ne i32 %and, 0, !dbg !7151
  br i1 %tobool34, label %if.then35, label %if.else46, !dbg !7152

if.then35:                                        ; preds = %if.then31
  call void @llvm.dbg.declare(metadata %struct.DepthPeel** %peel, metadata !7153, metadata !DIExpression()), !dbg !7155
  %33 = load %struct.DepthPeel*, %struct.DepthPeel** %p1, align 8, !dbg !7156
  %next = getelementptr inbounds %struct.DepthPeel, %struct.DepthPeel* %33, i32 0, i32 0, !dbg !7158
  %34 = load %struct.DepthPeel*, %struct.DepthPeel** %next, align 8, !dbg !7158
  store %struct.DepthPeel* %34, %struct.DepthPeel** %peel, align 8, !dbg !7159
  br label %for.cond36, !dbg !7160

for.cond36:                                       ; preds = %for.inc, %if.then35
  %35 = load %struct.DepthPeel*, %struct.DepthPeel** %peel, align 8, !dbg !7161
  %tobool37 = icmp ne %struct.DepthPeel* %35, null, !dbg !7163
  br i1 %tobool37, label %for.body38, label %for.end, !dbg !7163

for.body38:                                       ; preds = %for.cond36
  %36 = load %struct.DepthPeel*, %struct.DepthPeel** %peel, align 8, !dbg !7164
  %ob = getelementptr inbounds %struct.DepthPeel, %struct.DepthPeel* %36, i32 0, i32 5, !dbg !7167
  %37 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7167
  %38 = load %struct.DepthPeel*, %struct.DepthPeel** %p1, align 8, !dbg !7168
  %ob39 = getelementptr inbounds %struct.DepthPeel, %struct.DepthPeel* %38, i32 0, i32 5, !dbg !7169
  %39 = load %struct.Object*, %struct.Object** %ob39, align 8, !dbg !7169
  %cmp40 = icmp eq %struct.Object* %37, %39, !dbg !7170
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !7171

if.then42:                                        ; preds = %for.body38
  %40 = load %struct.DepthPeel*, %struct.DepthPeel** %peel, align 8, !dbg !7172
  %flag43 = getelementptr inbounds %struct.DepthPeel, %struct.DepthPeel* %40, i32 0, i32 6, !dbg !7174
  store i32 1, i32* %flag43, align 8, !dbg !7175
  %41 = load %struct.DepthPeel*, %struct.DepthPeel** %peel, align 8, !dbg !7176
  store %struct.DepthPeel* %41, %struct.DepthPeel** %p2, align 8, !dbg !7177
  br label %if.end44, !dbg !7178

if.end44:                                         ; preds = %if.then42, %for.body38
  br label %for.inc, !dbg !7179

for.inc:                                          ; preds = %if.end44
  %42 = load %struct.DepthPeel*, %struct.DepthPeel** %peel, align 8, !dbg !7180
  %next45 = getelementptr inbounds %struct.DepthPeel, %struct.DepthPeel* %42, i32 0, i32 0, !dbg !7181
  %43 = load %struct.DepthPeel*, %struct.DepthPeel** %next45, align 8, !dbg !7181
  store %struct.DepthPeel* %43, %struct.DepthPeel** %peel, align 8, !dbg !7182
  br label %for.cond36, !dbg !7183, !llvm.loop !7184

for.end:                                          ; preds = %for.cond36
  br label %if.end58, !dbg !7186

if.else46:                                        ; preds = %if.then31
  %44 = load %struct.DepthPeel*, %struct.DepthPeel** %p1, align 8, !dbg !7187
  %next47 = getelementptr inbounds %struct.DepthPeel, %struct.DepthPeel* %44, i32 0, i32 0, !dbg !7190
  %45 = load %struct.DepthPeel*, %struct.DepthPeel** %next47, align 8, !dbg !7190
  store %struct.DepthPeel* %45, %struct.DepthPeel** %p2, align 8, !dbg !7191
  br label %for.cond48, !dbg !7192

for.cond48:                                       ; preds = %for.inc55, %if.else46
  %46 = load %struct.DepthPeel*, %struct.DepthPeel** %p2, align 8, !dbg !7193
  %tobool49 = icmp ne %struct.DepthPeel* %46, null, !dbg !7193
  br i1 %tobool49, label %land.rhs, label %land.end, !dbg !7195

land.rhs:                                         ; preds = %for.cond48
  %47 = load %struct.DepthPeel*, %struct.DepthPeel** %p2, align 8, !dbg !7196
  %ob50 = getelementptr inbounds %struct.DepthPeel, %struct.DepthPeel* %47, i32 0, i32 5, !dbg !7197
  %48 = load %struct.Object*, %struct.Object** %ob50, align 8, !dbg !7197
  %49 = load %struct.DepthPeel*, %struct.DepthPeel** %p1, align 8, !dbg !7198
  %ob51 = getelementptr inbounds %struct.DepthPeel, %struct.DepthPeel* %49, i32 0, i32 5, !dbg !7199
  %50 = load %struct.Object*, %struct.Object** %ob51, align 8, !dbg !7199
  %cmp52 = icmp ne %struct.Object* %48, %50, !dbg !7200
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond48
  %51 = phi i1 [ false, %for.cond48 ], [ %cmp52, %land.rhs ], !dbg !7201
  br i1 %51, label %for.body54, label %for.end57, !dbg !7202

for.body54:                                       ; preds = %land.end
  br label %for.inc55, !dbg !7203

for.inc55:                                        ; preds = %for.body54
  %52 = load %struct.DepthPeel*, %struct.DepthPeel** %p2, align 8, !dbg !7205
  %next56 = getelementptr inbounds %struct.DepthPeel, %struct.DepthPeel* %52, i32 0, i32 0, !dbg !7206
  %53 = load %struct.DepthPeel*, %struct.DepthPeel** %next56, align 8, !dbg !7206
  store %struct.DepthPeel* %53, %struct.DepthPeel** %p2, align 8, !dbg !7207
  br label %for.cond48, !dbg !7208, !llvm.loop !7209

for.end57:                                        ; preds = %land.end
  br label %if.end58

if.end58:                                         ; preds = %for.end57, %for.end
  %54 = load %struct.DepthPeel*, %struct.DepthPeel** %p2, align 8, !dbg !7211
  %tobool59 = icmp ne %struct.DepthPeel* %54, null, !dbg !7211
  br i1 %tobool59, label %if.then60, label %if.else73, !dbg !7213

if.then60:                                        ; preds = %if.end58
  %55 = load %struct.DepthPeel*, %struct.DepthPeel** %p2, align 8, !dbg !7214
  %flag61 = getelementptr inbounds %struct.DepthPeel, %struct.DepthPeel* %55, i32 0, i32 6, !dbg !7216
  store i32 1, i32* %flag61, align 8, !dbg !7217
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !7218
  %56 = load %struct.DepthPeel*, %struct.DepthPeel** %p1, align 8, !dbg !7219
  %p63 = getelementptr inbounds %struct.DepthPeel, %struct.DepthPeel* %56, i32 0, i32 3, !dbg !7220
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %p63, i64 0, i64 0, !dbg !7219
  %57 = load %struct.DepthPeel*, %struct.DepthPeel** %p2, align 8, !dbg !7221
  %p65 = getelementptr inbounds %struct.DepthPeel, %struct.DepthPeel* %57, i32 0, i32 3, !dbg !7222
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %p65, i64 0, i64 0, !dbg !7221
  call void @add_v3_v3v3(float* %arraydecay62, float* %arraydecay64, float* %arraydecay66), !dbg !7223
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !7224
  call void @mul_v3_fl(float* %arraydecay67, float 5.000000e-01), !dbg !7225
  %58 = load %struct.DepthPeel*, %struct.DepthPeel** %p1, align 8, !dbg !7226
  %p68 = getelementptr inbounds %struct.DepthPeel, %struct.DepthPeel* %58, i32 0, i32 3, !dbg !7227
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %p68, i64 0, i64 0, !dbg !7226
  %59 = load %struct.DepthPeel*, %struct.DepthPeel** %p2, align 8, !dbg !7228
  %p70 = getelementptr inbounds %struct.DepthPeel, %struct.DepthPeel* %59, i32 0, i32 3, !dbg !7229
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %p70, i64 0, i64 0, !dbg !7228
  %call72 = call float @len_v3v3(float* %arraydecay69, float* %arraydecay71), !dbg !7230
  store float %call72, float* %new_size, align 4, !dbg !7231
  br label %if.end77, !dbg !7232

if.else73:                                        ; preds = %if.end58
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !7233
  %60 = load %struct.DepthPeel*, %struct.DepthPeel** %p1, align 8, !dbg !7235
  %p75 = getelementptr inbounds %struct.DepthPeel, %struct.DepthPeel* %60, i32 0, i32 3, !dbg !7236
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %p75, i64 0, i64 0, !dbg !7235
  call void @copy_v3_v3(float* %arraydecay74, float* %arraydecay76), !dbg !7237
  br label %if.end77

if.end77:                                         ; preds = %if.else73, %if.then60
  %61 = load float*, float** %last_p, align 8, !dbg !7238
  %cmp78 = icmp eq float* %61, null, !dbg !7240
  br i1 %cmp78, label %if.then80, label %if.end83, !dbg !7241

if.then80:                                        ; preds = %if.end77
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !7242
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !7244
  call void @copy_v3_v3(float* %arraydecay81, float* %arraydecay82), !dbg !7245
  %62 = load float, float* %new_size, align 4, !dbg !7246
  store float %62, float* %size, align 4, !dbg !7247
  store float 0.000000e+00, float* %dist, align 4, !dbg !7248
  br label %for.end95, !dbg !7249

if.end83:                                         ; preds = %if.end77
  %63 = load float*, float** %last_p, align 8, !dbg !7250
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !7251
  %call85 = call float @len_v3v3(float* %63, float* %arraydecay84), !dbg !7252
  store float %call85, float* %new_dist, align 4, !dbg !7253
  %64 = load float, float* %new_dist, align 4, !dbg !7254
  %65 = load float, float* %dist, align 4, !dbg !7256
  %cmp86 = fcmp olt float %64, %65, !dbg !7257
  br i1 %cmp86, label %if.then88, label %if.end91, !dbg !7258

if.then88:                                        ; preds = %if.end83
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !7259
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !7261
  call void @copy_v3_v3(float* %arraydecay89, float* %arraydecay90), !dbg !7262
  %66 = load float, float* %new_dist, align 4, !dbg !7263
  store float %66, float* %dist, align 4, !dbg !7264
  %67 = load float, float* %new_size, align 4, !dbg !7265
  store float %67, float* %size, align 4, !dbg !7266
  br label %if.end91, !dbg !7267

if.end91:                                         ; preds = %if.then88, %if.end83
  br label %if.end92, !dbg !7268

if.end92:                                         ; preds = %if.end91, %for.body
  br label %for.inc93, !dbg !7269

for.inc93:                                        ; preds = %if.end92
  %68 = load %struct.DepthPeel*, %struct.DepthPeel** %p1, align 8, !dbg !7270
  %next94 = getelementptr inbounds %struct.DepthPeel, %struct.DepthPeel* %68, i32 0, i32 0, !dbg !7271
  %69 = load %struct.DepthPeel*, %struct.DepthPeel** %next94, align 8, !dbg !7271
  store %struct.DepthPeel* %69, %struct.DepthPeel** %p1, align 8, !dbg !7272
  br label %for.cond, !dbg !7273, !llvm.loop !7274

for.end95:                                        ; preds = %if.then80, %for.cond
  %70 = load float, float* %dist, align 4, !dbg !7276
  %cmp96 = fcmp une float %70, 0x47EFFFFFE0000000, !dbg !7278
  br i1 %cmp96, label %if.then98, label %if.end105, !dbg !7279

if.then98:                                        ; preds = %for.end95
  %71 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7280
  %type99 = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %71, i32 0, i32 2, !dbg !7282
  %72 = load i32, i32* %type99, align 4, !dbg !7282
  %73 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !7283
  %type100 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %73, i32 0, i32 4, !dbg !7284
  store i32 %72, i32* %type100, align 4, !dbg !7285
  %74 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !7286
  %mode = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %74, i32 0, i32 5, !dbg !7287
  store i32 0, i32* %mode, align 4, !dbg !7288
  %75 = load float, float* %size, align 4, !dbg !7289
  %div = fdiv float %75, 2.000000e+00, !dbg !7290
  %76 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !7291
  %size101 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %76, i32 0, i32 3, !dbg !7292
  store float %div, float* %size101, align 4, !dbg !7293
  %77 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !7294
  %p102 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %77, i32 0, i32 0, !dbg !7295
  %arraydecay103 = getelementptr inbounds [3 x float], [3 x float]* %p102, i64 0, i64 0, !dbg !7294
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !7296
  call void @copy_v3_v3(float* %arraydecay103, float* %arraydecay104), !dbg !7297
  store i32 1, i32* %point_added, align 4, !dbg !7298
  br label %if.end105, !dbg !7299

if.end105:                                        ; preds = %if.then98, %for.end95
  br label %if.end158, !dbg !7300

if.else106:                                       ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %snap_stk, metadata !7301, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.declare(metadata [3 x float]* %vec107, metadata !7304, metadata !DIExpression()), !dbg !7305
  call void @llvm.dbg.declare(metadata [3 x float]* %no, metadata !7306, metadata !DIExpression()), !dbg !7307
  call void @llvm.dbg.declare(metadata [2 x float]* %mval108, metadata !7308, metadata !DIExpression()), !dbg !7309
  call void @llvm.dbg.declare(metadata i32* %found, metadata !7310, metadata !DIExpression()), !dbg !7311
  store i32 0, i32* %found, align 4, !dbg !7311
  call void @llvm.dbg.declare(metadata float* %dist_px, metadata !7312, metadata !DIExpression()), !dbg !7313
  store float 3.000000e+01, float* %dist_px, align 4, !dbg !7313
  %78 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7314
  %strokes = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %78, i32 0, i32 0, !dbg !7316
  %first109 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %strokes, i32 0, i32 0, !dbg !7317
  %79 = load i8*, i8** %first109, align 8, !dbg !7317
  %80 = bitcast i8* %79 to %struct.SK_Stroke*, !dbg !7314
  store %struct.SK_Stroke* %80, %struct.SK_Stroke** %snap_stk, align 8, !dbg !7318
  br label %for.cond110, !dbg !7319

for.cond110:                                      ; preds = %for.inc132, %if.else106
  %81 = load %struct.SK_Stroke*, %struct.SK_Stroke** %snap_stk, align 8, !dbg !7320
  %tobool111 = icmp ne %struct.SK_Stroke* %81, null, !dbg !7322
  br i1 %tobool111, label %for.body112, label %for.end134, !dbg !7322

for.body112:                                      ; preds = %for.cond110
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %spt, metadata !7323, metadata !DIExpression()), !dbg !7325
  store %struct.SK_Point* null, %struct.SK_Point** %spt, align 8, !dbg !7325
  %82 = load %struct.SK_Stroke*, %struct.SK_Stroke** %snap_stk, align 8, !dbg !7326
  %83 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7328
  %cmp113 = icmp eq %struct.SK_Stroke* %82, %83, !dbg !7329
  br i1 %cmp113, label %if.then115, label %if.else119, !dbg !7330

if.then115:                                       ; preds = %for.body112
  %84 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7331
  %85 = load %struct.SK_Stroke*, %struct.SK_Stroke** %snap_stk, align 8, !dbg !7333
  %86 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7334
  %mval116 = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %86, i32 0, i32 0, !dbg !7335
  %arraydecay117 = getelementptr inbounds [2 x i32], [2 x i32]* %mval116, i64 0, i64 0, !dbg !7334
  %call118 = call %struct.SK_Point* @sk_snapPointStroke(%struct.bContext* %84, %struct.SK_Stroke* %85, i32* %arraydecay117, float* %dist_px, i32* null, i32 0), !dbg !7336
  store %struct.SK_Point* %call118, %struct.SK_Point** %spt, align 8, !dbg !7337
  br label %if.end123, !dbg !7338

if.else119:                                       ; preds = %for.body112
  %87 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7339
  %88 = load %struct.SK_Stroke*, %struct.SK_Stroke** %snap_stk, align 8, !dbg !7341
  %89 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7342
  %mval120 = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %89, i32 0, i32 0, !dbg !7343
  %arraydecay121 = getelementptr inbounds [2 x i32], [2 x i32]* %mval120, i64 0, i64 0, !dbg !7342
  %call122 = call %struct.SK_Point* @sk_snapPointStroke(%struct.bContext* %87, %struct.SK_Stroke* %88, i32* %arraydecay121, float* %dist_px, i32* null, i32 1), !dbg !7344
  store %struct.SK_Point* %call122, %struct.SK_Point** %spt, align 8, !dbg !7345
  br label %if.end123

if.end123:                                        ; preds = %if.else119, %if.then115
  %90 = load %struct.SK_Point*, %struct.SK_Point** %spt, align 8, !dbg !7346
  %cmp124 = icmp ne %struct.SK_Point* %90, null, !dbg !7348
  br i1 %cmp124, label %if.then126, label %if.end131, !dbg !7349

if.then126:                                       ; preds = %if.end123
  %91 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !7350
  %p127 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %91, i32 0, i32 0, !dbg !7352
  %arraydecay128 = getelementptr inbounds [3 x float], [3 x float]* %p127, i64 0, i64 0, !dbg !7350
  %92 = load %struct.SK_Point*, %struct.SK_Point** %spt, align 8, !dbg !7353
  %p129 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %92, i32 0, i32 0, !dbg !7354
  %arraydecay130 = getelementptr inbounds [3 x float], [3 x float]* %p129, i64 0, i64 0, !dbg !7353
  call void @copy_v3_v3(float* %arraydecay128, float* %arraydecay130), !dbg !7355
  store i32 1, i32* %point_added, align 4, !dbg !7356
  br label %if.end131, !dbg !7357

if.end131:                                        ; preds = %if.then126, %if.end123
  br label %for.inc132, !dbg !7358

for.inc132:                                       ; preds = %if.end131
  %93 = load %struct.SK_Stroke*, %struct.SK_Stroke** %snap_stk, align 8, !dbg !7359
  %next133 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %93, i32 0, i32 0, !dbg !7360
  %94 = load %struct.SK_Stroke*, %struct.SK_Stroke** %next133, align 8, !dbg !7360
  store %struct.SK_Stroke* %94, %struct.SK_Stroke** %snap_stk, align 8, !dbg !7361
  br label %for.cond110, !dbg !7362, !llvm.loop !7363

for.end134:                                       ; preds = %for.cond110
  %95 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7365
  %mval135 = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %95, i32 0, i32 0, !dbg !7366
  %arrayidx136 = getelementptr inbounds [2 x i32], [2 x i32]* %mval135, i64 0, i64 0, !dbg !7365
  %96 = load i32, i32* %arrayidx136, align 4, !dbg !7365
  %conv137 = sitofp i32 %96 to float, !dbg !7365
  %arrayidx138 = getelementptr inbounds [2 x float], [2 x float]* %mval108, i64 0, i64 0, !dbg !7367
  store float %conv137, float* %arrayidx138, align 4, !dbg !7368
  %97 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7369
  %mval139 = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %97, i32 0, i32 0, !dbg !7370
  %arrayidx140 = getelementptr inbounds [2 x i32], [2 x i32]* %mval139, i64 0, i64 1, !dbg !7369
  %98 = load i32, i32* %arrayidx140, align 4, !dbg !7369
  %conv141 = sitofp i32 %98 to float, !dbg !7369
  %arrayidx142 = getelementptr inbounds [2 x float], [2 x float]* %mval108, i64 0, i64 1, !dbg !7371
  store float %conv141, float* %arrayidx142, align 4, !dbg !7372
  %99 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7373
  %arraydecay143 = getelementptr inbounds [2 x float], [2 x float]* %mval108, i64 0, i64 0, !dbg !7374
  %arraydecay144 = getelementptr inbounds [3 x float], [3 x float]* %vec107, i64 0, i64 0, !dbg !7375
  %arraydecay145 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !7376
  %call146 = call zeroext i8 @snapObjectsContext(%struct.bContext* %99, float* %arraydecay143, float* %dist_px, float* %arraydecay144, float* %arraydecay145, i32 1), !dbg !7377
  %conv147 = zext i8 %call146 to i32, !dbg !7377
  store i32 %conv147, i32* %found, align 4, !dbg !7378
  %100 = load i32, i32* %found, align 4, !dbg !7379
  %cmp148 = icmp eq i32 %100, 1, !dbg !7381
  br i1 %cmp148, label %if.then150, label %if.end157, !dbg !7382

if.then150:                                       ; preds = %for.end134
  %101 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7383
  %type151 = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %101, i32 0, i32 2, !dbg !7385
  %102 = load i32, i32* %type151, align 4, !dbg !7385
  %103 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !7386
  %type152 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %103, i32 0, i32 4, !dbg !7387
  store i32 %102, i32* %type152, align 4, !dbg !7388
  %104 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !7389
  %mode153 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %104, i32 0, i32 5, !dbg !7390
  store i32 0, i32* %mode153, align 4, !dbg !7391
  %105 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !7392
  %p154 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %105, i32 0, i32 0, !dbg !7393
  %arraydecay155 = getelementptr inbounds [3 x float], [3 x float]* %p154, i64 0, i64 0, !dbg !7392
  %arraydecay156 = getelementptr inbounds [3 x float], [3 x float]* %vec107, i64 0, i64 0, !dbg !7394
  call void @copy_v3_v3(float* %arraydecay155, float* %arraydecay156), !dbg !7395
  store i32 1, i32* %point_added, align 4, !dbg !7396
  br label %if.end157, !dbg !7397

if.end157:                                        ; preds = %if.then150, %for.end134
  br label %if.end158

if.end158:                                        ; preds = %if.end157, %if.end105
  %106 = load i32, i32* %point_added, align 4, !dbg !7398
  ret i32 %106, !dbg !7399
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sk_getStrokeDrawPoint(%struct.bContext* %C, %struct.SK_Point* %pt, %struct.SK_Sketch* %UNUSED_sketch, %struct.SK_Stroke* %stk, %struct.SK_DrawData* %dd) #0 !dbg !7400 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %pt.addr = alloca %struct.SK_Point*, align 8
  %UNUSED_sketch.addr = alloca %struct.SK_Sketch*, align 8
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  %dd.addr = alloca %struct.SK_DrawData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7401, metadata !DIExpression()), !dbg !7402
  store %struct.SK_Point* %pt, %struct.SK_Point** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %pt.addr, metadata !7403, metadata !DIExpression()), !dbg !7404
  store %struct.SK_Sketch* %UNUSED_sketch, %struct.SK_Sketch** %UNUSED_sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %UNUSED_sketch.addr, metadata !7405, metadata !DIExpression()), !dbg !7406
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !7407, metadata !DIExpression()), !dbg !7408
  store %struct.SK_DrawData* %dd, %struct.SK_DrawData** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_DrawData** %dd.addr, metadata !7409, metadata !DIExpression()), !dbg !7410
  %0 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7411
  %type = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %0, i32 0, i32 2, !dbg !7412
  %1 = load i32, i32* %type, align 4, !dbg !7412
  %2 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !7413
  %type1 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %2, i32 0, i32 4, !dbg !7414
  store i32 %1, i32* %type1, align 4, !dbg !7415
  %3 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !7416
  %mode = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %3, i32 0, i32 5, !dbg !7417
  store i32 1, i32* %mode, align 4, !dbg !7418
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7419
  %5 = load %struct.SK_Point*, %struct.SK_Point** %pt.addr, align 8, !dbg !7420
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %5, i32 0, i32 0, !dbg !7421
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !7420
  %6 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7422
  %7 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7423
  call void @sk_projectDrawPoint(%struct.bContext* %4, float* %arraydecay, %struct.SK_Stroke* %6, %struct.SK_DrawData* %7), !dbg !7424
  ret i32 1, !dbg !7425
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !7426 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !7431, metadata !DIExpression()), !dbg !7432
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !7433
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !7434
  store i8* null, i8** %last, align 8, !dbg !7435
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !7436
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !7437
  store i8* null, i8** %first, align 8, !dbg !7438
  ret void, !dbg !7439
}

declare dso_local zeroext i8 @peelObjectsContext(%struct.bContext*, %struct.ListBase*, float*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !7440 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7441, metadata !DIExpression()), !dbg !7442
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7443, metadata !DIExpression()), !dbg !7444
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7445, metadata !DIExpression()), !dbg !7446
  %0 = load float*, float** %a.addr, align 8, !dbg !7447
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7447
  %1 = load float, float* %arrayidx, align 4, !dbg !7447
  %2 = load float*, float** %b.addr, align 8, !dbg !7448
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7448
  %3 = load float, float* %arrayidx1, align 4, !dbg !7448
  %add = fadd float %1, %3, !dbg !7449
  %4 = load float*, float** %r.addr, align 8, !dbg !7450
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !7450
  store float %add, float* %arrayidx2, align 4, !dbg !7451
  %5 = load float*, float** %a.addr, align 8, !dbg !7452
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !7452
  %6 = load float, float* %arrayidx3, align 4, !dbg !7452
  %7 = load float*, float** %b.addr, align 8, !dbg !7453
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !7453
  %8 = load float, float* %arrayidx4, align 4, !dbg !7453
  %add5 = fadd float %6, %8, !dbg !7454
  %9 = load float*, float** %r.addr, align 8, !dbg !7455
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !7455
  store float %add5, float* %arrayidx6, align 4, !dbg !7456
  %10 = load float*, float** %a.addr, align 8, !dbg !7457
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !7457
  %11 = load float, float* %arrayidx7, align 4, !dbg !7457
  %12 = load float*, float** %b.addr, align 8, !dbg !7458
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !7458
  %13 = load float, float* %arrayidx8, align 4, !dbg !7458
  %add9 = fadd float %11, %13, !dbg !7459
  %14 = load float*, float** %r.addr, align 8, !dbg !7460
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !7460
  store float %add9, float* %arrayidx10, align 4, !dbg !7461
  ret void, !dbg !7462
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !7463 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7464, metadata !DIExpression()), !dbg !7465
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7466, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !7468, metadata !DIExpression()), !dbg !7469
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !7470
  %0 = load float*, float** %b.addr, align 8, !dbg !7471
  %1 = load float*, float** %a.addr, align 8, !dbg !7472
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !7473
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !7474
  %call = call float @len_v3(float* %arraydecay1), !dbg !7475
  ret float %call, !dbg !7476
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.SK_Point* @sk_snapPointStroke(%struct.bContext* %C, %struct.SK_Stroke* %stk, i32* %mval, float* %r_dist_px, i32* %index, i32 %all_pts) #0 !dbg !7477 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  %mval.addr = alloca i32*, align 8
  %r_dist_px.addr = alloca float*, align 8
  %index.addr = alloca i32*, align 8
  %all_pts.addr = alloca i32, align 4
  %ar = alloca %struct.ARegion*, align 8
  %pt = alloca %struct.SK_Point*, align 8
  %i = alloca i32, align 4
  %pval = alloca [2 x i16], align 2
  %pdist = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7480, metadata !DIExpression()), !dbg !7481
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !7482, metadata !DIExpression()), !dbg !7483
  store i32* %mval, i32** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mval.addr, metadata !7484, metadata !DIExpression()), !dbg !7485
  store float* %r_dist_px, float** %r_dist_px.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_dist_px.addr, metadata !7486, metadata !DIExpression()), !dbg !7487
  store i32* %index, i32** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index.addr, metadata !7488, metadata !DIExpression()), !dbg !7489
  store i32 %all_pts, i32* %all_pts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %all_pts.addr, metadata !7490, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !7492, metadata !DIExpression()), !dbg !7493
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7494
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !7495
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !7493
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %pt, metadata !7496, metadata !DIExpression()), !dbg !7497
  store %struct.SK_Point* null, %struct.SK_Point** %pt, align 8, !dbg !7497
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7498, metadata !DIExpression()), !dbg !7499
  store i32 0, i32* %i, align 4, !dbg !7500
  br label %for.cond, !dbg !7502

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !7503
  %2 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7505
  %nb_points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %2, i32 0, i32 3, !dbg !7506
  %3 = load i32, i32* %nb_points, align 8, !dbg !7506
  %cmp = icmp slt i32 %1, %3, !dbg !7507
  br i1 %cmp, label %for.body, label %for.end, !dbg !7508

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %all_pts.addr, align 4, !dbg !7509
  %tobool = icmp ne i32 %4, 0, !dbg !7509
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7512

lor.lhs.false:                                    ; preds = %for.body
  %5 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7513
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %5, i32 0, i32 2, !dbg !7514
  %6 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !7514
  %7 = load i32, i32* %i, align 4, !dbg !7515
  %idxprom = sext i32 %7 to i64, !dbg !7513
  %arrayidx = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %6, i64 %idxprom, !dbg !7513
  %type = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx, i32 0, i32 4, !dbg !7516
  %8 = load i32, i32* %type, align 4, !dbg !7516
  %cmp1 = icmp eq i32 %8, 1, !dbg !7517
  br i1 %cmp1, label %if.then, label %if.end52, !dbg !7518

if.then:                                          ; preds = %lor.lhs.false, %for.body
  call void @llvm.dbg.declare(metadata [2 x i16]* %pval, metadata !7519, metadata !DIExpression()), !dbg !7521
  call void @llvm.dbg.declare(metadata i32* %pdist, metadata !7522, metadata !DIExpression()), !dbg !7523
  %9 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7524
  %10 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7526
  %points2 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %10, i32 0, i32 2, !dbg !7527
  %11 = load %struct.SK_Point*, %struct.SK_Point** %points2, align 8, !dbg !7527
  %12 = load i32, i32* %i, align 4, !dbg !7528
  %idxprom3 = sext i32 %12 to i64, !dbg !7526
  %arrayidx4 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %11, i64 %idxprom3, !dbg !7526
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx4, i32 0, i32 0, !dbg !7529
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !7526
  %arraydecay5 = getelementptr inbounds [2 x i16], [2 x i16]* %pval, i64 0, i64 0, !dbg !7530
  %call6 = call i32 @ED_view3d_project_short_global(%struct.ARegion* %9, float* %arraydecay, i16* %arraydecay5, i32 0), !dbg !7531
  %cmp7 = icmp eq i32 %call6, 0, !dbg !7532
  br i1 %cmp7, label %if.then8, label %if.end51, !dbg !7533

if.then8:                                         ; preds = %if.then
  %arrayidx9 = getelementptr inbounds [2 x i16], [2 x i16]* %pval, i64 0, i64 0, !dbg !7534
  %13 = load i16, i16* %arrayidx9, align 2, !dbg !7534
  %conv = sext i16 %13 to i32, !dbg !7534
  %14 = load i32*, i32** %mval.addr, align 8, !dbg !7534
  %arrayidx10 = getelementptr inbounds i32, i32* %14, i64 0, !dbg !7534
  %15 = load i32, i32* %arrayidx10, align 4, !dbg !7534
  %sub = sub nsw i32 %conv, %15, !dbg !7534
  %cmp11 = icmp slt i32 %sub, 0, !dbg !7534
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !7534

cond.true:                                        ; preds = %if.then8
  %arrayidx13 = getelementptr inbounds [2 x i16], [2 x i16]* %pval, i64 0, i64 0, !dbg !7534
  %16 = load i16, i16* %arrayidx13, align 2, !dbg !7534
  %conv14 = sext i16 %16 to i32, !dbg !7534
  %17 = load i32*, i32** %mval.addr, align 8, !dbg !7534
  %arrayidx15 = getelementptr inbounds i32, i32* %17, i64 0, !dbg !7534
  %18 = load i32, i32* %arrayidx15, align 4, !dbg !7534
  %sub16 = sub nsw i32 %conv14, %18, !dbg !7534
  %sub17 = sub nsw i32 0, %sub16, !dbg !7534
  br label %cond.end, !dbg !7534

cond.false:                                       ; preds = %if.then8
  %arrayidx18 = getelementptr inbounds [2 x i16], [2 x i16]* %pval, i64 0, i64 0, !dbg !7534
  %19 = load i16, i16* %arrayidx18, align 2, !dbg !7534
  %conv19 = sext i16 %19 to i32, !dbg !7534
  %20 = load i32*, i32** %mval.addr, align 8, !dbg !7534
  %arrayidx20 = getelementptr inbounds i32, i32* %20, i64 0, !dbg !7534
  %21 = load i32, i32* %arrayidx20, align 4, !dbg !7534
  %sub21 = sub nsw i32 %conv19, %21, !dbg !7534
  br label %cond.end, !dbg !7534

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub17, %cond.true ], [ %sub21, %cond.false ], !dbg !7534
  %arrayidx22 = getelementptr inbounds [2 x i16], [2 x i16]* %pval, i64 0, i64 1, !dbg !7536
  %22 = load i16, i16* %arrayidx22, align 2, !dbg !7536
  %conv23 = sext i16 %22 to i32, !dbg !7536
  %23 = load i32*, i32** %mval.addr, align 8, !dbg !7536
  %arrayidx24 = getelementptr inbounds i32, i32* %23, i64 1, !dbg !7536
  %24 = load i32, i32* %arrayidx24, align 4, !dbg !7536
  %sub25 = sub nsw i32 %conv23, %24, !dbg !7536
  %cmp26 = icmp slt i32 %sub25, 0, !dbg !7536
  br i1 %cmp26, label %cond.true28, label %cond.false34, !dbg !7536

cond.true28:                                      ; preds = %cond.end
  %arrayidx29 = getelementptr inbounds [2 x i16], [2 x i16]* %pval, i64 0, i64 1, !dbg !7536
  %25 = load i16, i16* %arrayidx29, align 2, !dbg !7536
  %conv30 = sext i16 %25 to i32, !dbg !7536
  %26 = load i32*, i32** %mval.addr, align 8, !dbg !7536
  %arrayidx31 = getelementptr inbounds i32, i32* %26, i64 1, !dbg !7536
  %27 = load i32, i32* %arrayidx31, align 4, !dbg !7536
  %sub32 = sub nsw i32 %conv30, %27, !dbg !7536
  %sub33 = sub nsw i32 0, %sub32, !dbg !7536
  br label %cond.end39, !dbg !7536

cond.false34:                                     ; preds = %cond.end
  %arrayidx35 = getelementptr inbounds [2 x i16], [2 x i16]* %pval, i64 0, i64 1, !dbg !7536
  %28 = load i16, i16* %arrayidx35, align 2, !dbg !7536
  %conv36 = sext i16 %28 to i32, !dbg !7536
  %29 = load i32*, i32** %mval.addr, align 8, !dbg !7536
  %arrayidx37 = getelementptr inbounds i32, i32* %29, i64 1, !dbg !7536
  %30 = load i32, i32* %arrayidx37, align 4, !dbg !7536
  %sub38 = sub nsw i32 %conv36, %30, !dbg !7536
  br label %cond.end39, !dbg !7536

cond.end39:                                       ; preds = %cond.false34, %cond.true28
  %cond40 = phi i32 [ %sub33, %cond.true28 ], [ %sub38, %cond.false34 ], !dbg !7536
  %add = add nsw i32 %cond, %cond40, !dbg !7537
  store i32 %add, i32* %pdist, align 4, !dbg !7538
  %31 = load i32, i32* %pdist, align 4, !dbg !7539
  %conv41 = sitofp i32 %31 to float, !dbg !7539
  %32 = load float*, float** %r_dist_px.addr, align 8, !dbg !7541
  %33 = load float, float* %32, align 4, !dbg !7542
  %cmp42 = fcmp olt float %conv41, %33, !dbg !7543
  br i1 %cmp42, label %if.then44, label %if.end50, !dbg !7544

if.then44:                                        ; preds = %cond.end39
  %34 = load i32, i32* %pdist, align 4, !dbg !7545
  %conv45 = sitofp i32 %34 to float, !dbg !7545
  %35 = load float*, float** %r_dist_px.addr, align 8, !dbg !7547
  store float %conv45, float* %35, align 4, !dbg !7548
  %36 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7549
  %points46 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %36, i32 0, i32 2, !dbg !7550
  %37 = load %struct.SK_Point*, %struct.SK_Point** %points46, align 8, !dbg !7550
  %38 = load i32, i32* %i, align 4, !dbg !7551
  %idx.ext = sext i32 %38 to i64, !dbg !7552
  %add.ptr = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %37, i64 %idx.ext, !dbg !7552
  store %struct.SK_Point* %add.ptr, %struct.SK_Point** %pt, align 8, !dbg !7553
  %39 = load i32*, i32** %index.addr, align 8, !dbg !7554
  %cmp47 = icmp ne i32* %39, null, !dbg !7556
  br i1 %cmp47, label %if.then49, label %if.end, !dbg !7557

if.then49:                                        ; preds = %if.then44
  %40 = load i32, i32* %i, align 4, !dbg !7558
  %41 = load i32*, i32** %index.addr, align 8, !dbg !7560
  store i32 %40, i32* %41, align 4, !dbg !7561
  br label %if.end, !dbg !7562

if.end:                                           ; preds = %if.then49, %if.then44
  br label %if.end50, !dbg !7563

if.end50:                                         ; preds = %if.end, %cond.end39
  br label %if.end51, !dbg !7564

if.end51:                                         ; preds = %if.end50, %if.then
  br label %if.end52, !dbg !7565

if.end52:                                         ; preds = %if.end51, %lor.lhs.false
  br label %for.inc, !dbg !7566

for.inc:                                          ; preds = %if.end52
  %42 = load i32, i32* %i, align 4, !dbg !7567
  %inc = add nsw i32 %42, 1, !dbg !7567
  store i32 %inc, i32* %i, align 4, !dbg !7567
  br label %for.cond, !dbg !7568, !llvm.loop !7569

for.end:                                          ; preds = %for.cond
  %43 = load %struct.SK_Point*, %struct.SK_Point** %pt, align 8, !dbg !7571
  ret %struct.SK_Point* %43, !dbg !7572
}

declare dso_local zeroext i8 @snapObjectsContext(%struct.bContext*, float*, float*, float*, float*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !7573 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7576, metadata !DIExpression()), !dbg !7577
  %0 = load float*, float** %a.addr, align 8, !dbg !7578
  %1 = load float*, float** %a.addr, align 8, !dbg !7579
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !7580
  %call1 = call float @sqrtf(float %call) #7, !dbg !7581
  ret float %call1, !dbg !7582
}

; Function Attrs: noinline nounwind uwtable
define internal void @sk_projectDrawPoint(%struct.bContext* %C, float* %vec, %struct.SK_Stroke* %stk, %struct.SK_DrawData* %dd) #0 !dbg !7583 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %vec.addr = alloca float*, align 8
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  %dd.addr = alloca %struct.SK_DrawData*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %last = alloca %struct.SK_Point*, align 8
  %cval = alloca [2 x i16], align 2
  %fp = alloca [3 x float], align 4
  %dvec = alloca [3 x float], align 4
  %mval_f = alloca [2 x float], align 4
  %zfac = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7586, metadata !DIExpression()), !dbg !7587
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !7588, metadata !DIExpression()), !dbg !7589
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !7590, metadata !DIExpression()), !dbg !7591
  store %struct.SK_DrawData* %dd, %struct.SK_DrawData** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_DrawData** %dd.addr, metadata !7592, metadata !DIExpression()), !dbg !7593
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !7594, metadata !DIExpression()), !dbg !7595
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7596
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !7597
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !7595
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %last, metadata !7598, metadata !DIExpression()), !dbg !7599
  %1 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7600
  %call1 = call %struct.SK_Point* @sk_lastStrokePoint(%struct.SK_Stroke* %1), !dbg !7601
  store %struct.SK_Point* %call1, %struct.SK_Point** %last, align 8, !dbg !7599
  call void @llvm.dbg.declare(metadata [2 x i16]* %cval, metadata !7602, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.declare(metadata [3 x float]* %fp, metadata !7604, metadata !DIExpression()), !dbg !7605
  %2 = bitcast [3 x float]* %fp to i8*, !dbg !7605
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 12, i1 false), !dbg !7605
  call void @llvm.dbg.declare(metadata [3 x float]* %dvec, metadata !7606, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.declare(metadata [2 x float]* %mval_f, metadata !7608, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.declare(metadata float* %zfac, metadata !7610, metadata !DIExpression()), !dbg !7611
  %3 = load %struct.SK_Point*, %struct.SK_Point** %last, align 8, !dbg !7612
  %cmp = icmp ne %struct.SK_Point* %3, null, !dbg !7614
  br i1 %cmp, label %if.then, label %if.end, !dbg !7615

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %fp, i64 0, i64 0, !dbg !7616
  %4 = load %struct.SK_Point*, %struct.SK_Point** %last, align 8, !dbg !7618
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %4, i32 0, i32 0, !dbg !7619
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !7618
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !7620
  br label %if.end, !dbg !7621

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7622
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %5, i32 0, i32 30, !dbg !7623
  %6 = load i8*, i8** %regiondata, align 8, !dbg !7623
  %7 = bitcast i8* %6 to %struct.RegionView3D*, !dbg !7622
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %fp, i64 0, i64 0, !dbg !7624
  %call4 = call float @ED_view3d_calc_zfac(%struct.RegionView3D* %7, float* %arraydecay3, i8* null), !dbg !7625
  store float %call4, float* %zfac, align 4, !dbg !7626
  %8 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7627
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %fp, i64 0, i64 0, !dbg !7629
  %arraydecay6 = getelementptr inbounds [2 x i16], [2 x i16]* %cval, i64 0, i64 0, !dbg !7630
  %call7 = call i32 @ED_view3d_project_short_global(%struct.ARegion* %8, float* %arraydecay5, i16* %arraydecay6, i32 0), !dbg !7631
  %cmp8 = icmp eq i32 %call7, 0, !dbg !7632
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !7633

if.then9:                                         ; preds = %if.end
  %arraydecay10 = getelementptr inbounds [2 x i16], [2 x i16]* %cval, i64 0, i64 0, !dbg !7634
  %9 = load i16, i16* %arraydecay10, align 2, !dbg !7634
  %conv = sext i16 %9 to i32, !dbg !7634
  %10 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7634
  %mval = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %10, i32 0, i32 0, !dbg !7634
  %arraydecay11 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !7634
  %11 = load i32, i32* %arraydecay11, align 4, !dbg !7634
  %sub = sub nsw i32 %conv, %11, !dbg !7634
  %conv12 = sitofp i32 %sub to float, !dbg !7634
  %arraydecay13 = getelementptr inbounds [2 x float], [2 x float]* %mval_f, i64 0, i64 0, !dbg !7634
  store float %conv12, float* %arraydecay13, align 4, !dbg !7634
  %arraydecay14 = getelementptr inbounds [2 x i16], [2 x i16]* %cval, i64 0, i64 0, !dbg !7634
  %add.ptr = getelementptr inbounds i16, i16* %arraydecay14, i64 1, !dbg !7634
  %12 = load i16, i16* %add.ptr, align 2, !dbg !7634
  %conv15 = sext i16 %12 to i32, !dbg !7634
  %13 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7634
  %mval16 = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %13, i32 0, i32 0, !dbg !7634
  %arraydecay17 = getelementptr inbounds [2 x i32], [2 x i32]* %mval16, i64 0, i64 0, !dbg !7634
  %add.ptr18 = getelementptr inbounds i32, i32* %arraydecay17, i64 1, !dbg !7634
  %14 = load i32, i32* %add.ptr18, align 4, !dbg !7634
  %sub19 = sub nsw i32 %conv15, %14, !dbg !7634
  %conv20 = sitofp i32 %sub19 to float, !dbg !7634
  %arraydecay21 = getelementptr inbounds [2 x float], [2 x float]* %mval_f, i64 0, i64 0, !dbg !7634
  %add.ptr22 = getelementptr inbounds float, float* %arraydecay21, i64 1, !dbg !7634
  store float %conv20, float* %add.ptr22, align 4, !dbg !7634
  %15 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7637
  %arraydecay23 = getelementptr inbounds [2 x float], [2 x float]* %mval_f, i64 0, i64 0, !dbg !7638
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !7639
  %16 = load float, float* %zfac, align 4, !dbg !7640
  call void @ED_view3d_win_to_delta(%struct.ARegion* %15, float* %arraydecay23, float* %arraydecay24, float %16), !dbg !7641
  %17 = load float*, float** %vec.addr, align 8, !dbg !7642
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %fp, i64 0, i64 0, !dbg !7643
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !7644
  call void @sub_v3_v3v3(float* %17, float* %arraydecay25, float* %arraydecay26), !dbg !7645
  br label %if.end27, !dbg !7646

if.else:                                          ; preds = %if.end
  %18 = load float*, float** %vec.addr, align 8, !dbg !7647
  call void @zero_v3(float* %18), !dbg !7649
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then9
  ret void, !dbg !7650
}

declare dso_local float @ED_view3d_calc_zfac(%struct.RegionView3D*, float*, i8*) #2

declare dso_local void @ED_view3d_win_to_delta(%struct.ARegion*, float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sk_start_draw_stroke(%struct.SK_Sketch* %sketch) #0 !dbg !7651 {
entry:
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !7652, metadata !DIExpression()), !dbg !7653
  %0 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7654
  %active_stroke = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %0, i32 0, i32 2, !dbg !7656
  %1 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke, align 8, !dbg !7656
  %cmp = icmp eq %struct.SK_Stroke* %1, null, !dbg !7657
  br i1 %cmp, label %if.then, label %if.end, !dbg !7658

if.then:                                          ; preds = %entry
  %2 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7659
  call void @sk_startStroke(%struct.SK_Sketch* %2), !dbg !7661
  %3 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7662
  call void @sk_selectAllSketch(%struct.SK_Sketch* %3, i32 -1), !dbg !7663
  %4 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7664
  %active_stroke1 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %4, i32 0, i32 2, !dbg !7665
  %5 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke1, align 8, !dbg !7665
  %selected = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %5, i32 0, i32 5, !dbg !7666
  store i32 1, i32* %selected, align 8, !dbg !7667
  br label %if.end, !dbg !7668

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7669
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sk_draw_stroke(%struct.bContext* %C, %struct.SK_Sketch* %sketch, %struct.SK_Stroke* %stk, %struct.SK_DrawData* %dd, i8 zeroext %snap) #0 !dbg !7670 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  %dd.addr = alloca %struct.SK_DrawData*, align 8
  %snap.addr = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7673, metadata !DIExpression()), !dbg !7674
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !7675, metadata !DIExpression()), !dbg !7676
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !7677, metadata !DIExpression()), !dbg !7678
  store %struct.SK_DrawData* %dd, %struct.SK_DrawData** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_DrawData** %dd.addr, metadata !7679, metadata !DIExpression()), !dbg !7680
  store i8 %snap, i8* %snap.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %snap.addr, metadata !7681, metadata !DIExpression()), !dbg !7682
  %0 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7683
  %call = call i32 @sk_stroke_filtermval(%struct.SK_DrawData* %0), !dbg !7685
  %tobool = icmp ne i32 %call, 0, !dbg !7685
  br i1 %tobool, label %if.then, label %if.end, !dbg !7686

if.then:                                          ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7687
  %2 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7689
  %3 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7690
  %4 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7691
  %5 = load i8, i8* %snap.addr, align 1, !dbg !7692
  call void @sk_addStrokePoint(%struct.bContext* %1, %struct.SK_Sketch* %2, %struct.SK_Stroke* %3, %struct.SK_DrawData* %4, i8 zeroext %5), !dbg !7693
  %6 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7694
  call void @sk_updateDrawData(%struct.SK_DrawData* %6), !dbg !7695
  %7 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7696
  %8 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7697
  call void @sk_updateNextPoint(%struct.SK_Sketch* %7, %struct.SK_Stroke* %8), !dbg !7698
  store i32 1, i32* %retval, align 4, !dbg !7699
  br label %return, !dbg !7699

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7700
  br label %return, !dbg !7700

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7701
  ret i32 %9, !dbg !7701
}

declare dso_local %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext*, %struct.wmOperator*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sk_startStroke(%struct.SK_Sketch* %sketch) #0 !dbg !7702 {
entry:
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %stk = alloca %struct.SK_Stroke*, align 8
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !7703, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk, metadata !7705, metadata !DIExpression()), !dbg !7706
  %call = call %struct.SK_Stroke* @sk_createStroke(), !dbg !7707
  store %struct.SK_Stroke* %call, %struct.SK_Stroke** %stk, align 8, !dbg !7706
  %0 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7708
  %strokes = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %0, i32 0, i32 0, !dbg !7709
  %1 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !7710
  %2 = bitcast %struct.SK_Stroke* %1 to i8*, !dbg !7710
  call void @BLI_addtail(%struct.ListBase* %strokes, i8* %2), !dbg !7711
  %3 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !7712
  %4 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7713
  %active_stroke = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %4, i32 0, i32 2, !dbg !7714
  store %struct.SK_Stroke* %3, %struct.SK_Stroke** %active_stroke, align 8, !dbg !7715
  %5 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7716
  call void @sk_resetOverdraw(%struct.SK_Sketch* %5), !dbg !7717
  ret void, !dbg !7718
}

declare dso_local %struct.SK_Stroke* @sk_createStroke() #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

declare dso_local i32 @sk_stroke_filtermval(%struct.SK_DrawData*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sk_addStrokePoint(%struct.bContext* %C, %struct.SK_Sketch* %sketch, %struct.SK_Stroke* %stk, %struct.SK_DrawData* %dd, i8 zeroext %snap) #0 !dbg !7719 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  %dd.addr = alloca %struct.SK_DrawData*, align 8
  %snap.addr = alloca i8, align 1
  %ts = alloca %struct.ToolSettings*, align 8
  %point_added = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7722, metadata !DIExpression()), !dbg !7723
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !7724, metadata !DIExpression()), !dbg !7725
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !7726, metadata !DIExpression()), !dbg !7727
  store %struct.SK_DrawData* %dd, %struct.SK_DrawData** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_DrawData** %dd.addr, metadata !7728, metadata !DIExpression()), !dbg !7729
  store i8 %snap, i8* %snap.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %snap.addr, metadata !7730, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !7732, metadata !DIExpression()), !dbg !7733
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7734
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !7735
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !7733
  call void @llvm.dbg.declare(metadata i32* %point_added, metadata !7736, metadata !DIExpression()), !dbg !7737
  store i32 0, i32* %point_added, align 4, !dbg !7737
  %1 = load i8, i8* %snap.addr, align 1, !dbg !7738
  %tobool = icmp ne i8 %1, 0, !dbg !7738
  br i1 %tobool, label %if.then, label %if.end, !dbg !7740

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7741
  %3 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7743
  %4 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7744
  %5 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7745
  %call1 = call i32 @sk_addStrokeSnapPoint(%struct.bContext* %2, %struct.SK_Sketch* %3, %struct.SK_Stroke* %4, %struct.SK_DrawData* %5), !dbg !7746
  store i32 %call1, i32* %point_added, align 4, !dbg !7747
  br label %if.end, !dbg !7748

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %point_added, align 4, !dbg !7749
  %cmp = icmp eq i32 %6, 0, !dbg !7751
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !7752

if.then2:                                         ; preds = %if.end
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7753
  %8 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7755
  %9 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7756
  %10 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7757
  %call3 = call i32 @sk_addStrokeDrawPoint(%struct.bContext* %7, %struct.SK_Sketch* %8, %struct.SK_Stroke* %9, %struct.SK_DrawData* %10), !dbg !7758
  store i32 %call3, i32* %point_added, align 4, !dbg !7759
  br label %if.end4, !dbg !7760

if.end4:                                          ; preds = %if.then2, %if.end
  %11 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7761
  %12 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7763
  %active_stroke = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %12, i32 0, i32 2, !dbg !7764
  %13 = load %struct.SK_Stroke*, %struct.SK_Stroke** %active_stroke, align 8, !dbg !7764
  %cmp5 = icmp eq %struct.SK_Stroke* %11, %13, !dbg !7765
  br i1 %cmp5, label %land.lhs.true, label %if.end8, !dbg !7766

land.lhs.true:                                    ; preds = %if.end4
  %14 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7767
  %bone_sketching = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %14, i32 0, i32 42, !dbg !7768
  %15 = load i8, i8* %bone_sketching, align 8, !dbg !7768
  %conv = zext i8 %15 to i32, !dbg !7767
  %and = and i32 %conv, 4, !dbg !7769
  %tobool6 = icmp ne i32 %and, 0, !dbg !7769
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7770

if.then7:                                         ; preds = %land.lhs.true
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7771
  %17 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7773
  %18 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7774
  %19 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7775
  call void @sk_updateOverdraw(%struct.bContext* %16, %struct.SK_Sketch* %17, %struct.SK_Stroke* %18, %struct.SK_DrawData* %19), !dbg !7776
  br label %if.end8, !dbg !7777

if.end8:                                          ; preds = %if.then7, %land.lhs.true, %if.end4
  ret void, !dbg !7778
}

; Function Attrs: noinline nounwind uwtable
define internal void @sk_updateDrawData(%struct.SK_DrawData* %dd) #0 !dbg !7779 {
entry:
  %dd.addr = alloca %struct.SK_DrawData*, align 8
  store %struct.SK_DrawData* %dd, %struct.SK_DrawData** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_DrawData** %dd.addr, metadata !7782, metadata !DIExpression()), !dbg !7783
  %0 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7784
  %type = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %0, i32 0, i32 2, !dbg !7785
  store i32 0, i32* %type, align 4, !dbg !7786
  %1 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7787
  %mval = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %1, i32 0, i32 0, !dbg !7788
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !7787
  %2 = load i32, i32* %arrayidx, align 4, !dbg !7787
  %3 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7789
  %previous_mval = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %3, i32 0, i32 1, !dbg !7790
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %previous_mval, i64 0, i64 0, !dbg !7789
  store i32 %2, i32* %arrayidx1, align 4, !dbg !7791
  %4 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7792
  %mval2 = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %4, i32 0, i32 0, !dbg !7793
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %mval2, i64 0, i64 1, !dbg !7792
  %5 = load i32, i32* %arrayidx3, align 4, !dbg !7792
  %6 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7794
  %previous_mval4 = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %6, i32 0, i32 1, !dbg !7795
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %previous_mval4, i64 0, i64 1, !dbg !7794
  store i32 %5, i32* %arrayidx5, align 4, !dbg !7796
  ret void, !dbg !7797
}

declare dso_local void @sk_updateNextPoint(%struct.SK_Sketch*, %struct.SK_Stroke*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @sk_addStrokeSnapPoint(%struct.bContext* %C, %struct.SK_Sketch* %sketch, %struct.SK_Stroke* %stk, %struct.SK_DrawData* %dd) #0 !dbg !7798 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  %dd.addr = alloca %struct.SK_DrawData*, align 8
  %point_added = alloca i32, align 4
  %ar = alloca %struct.ARegion*, align 8
  %rv3d = alloca %struct.RegionView3D*, align 8
  %pt = alloca %struct.SK_Point, align 4
  %final_p = alloca [3 x float], align 4
  %length = alloca float, align 4
  %distance = alloca float, align 4
  %total = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7801, metadata !DIExpression()), !dbg !7802
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !7803, metadata !DIExpression()), !dbg !7804
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !7805, metadata !DIExpression()), !dbg !7806
  store %struct.SK_DrawData* %dd, %struct.SK_DrawData** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_DrawData** %dd.addr, metadata !7807, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.declare(metadata i32* %point_added, metadata !7809, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !7811, metadata !DIExpression()), !dbg !7812
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7813
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !7814
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !7812
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !7815, metadata !DIExpression()), !dbg !7818
  %1 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7819
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %1, i32 0, i32 30, !dbg !7820
  %2 = load i8*, i8** %regiondata, align 8, !dbg !7820
  %3 = bitcast i8* %2 to %struct.RegionView3D*, !dbg !7819
  store %struct.RegionView3D* %3, %struct.RegionView3D** %rv3d, align 8, !dbg !7818
  call void @llvm.dbg.declare(metadata %struct.SK_Point* %pt, metadata !7821, metadata !DIExpression()), !dbg !7822
  %4 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7823
  %5 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !7824
  %viewinv = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %5, i32 0, i32 2, !dbg !7825
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 2, !dbg !7824
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !7824
  call void @sk_initPoint(%struct.SK_Point* %pt, %struct.SK_DrawData* %4, float* %arraydecay), !dbg !7826
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7827
  %7 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7828
  %8 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7829
  %9 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7830
  %call1 = call i32 @sk_getStrokeSnapPoint(%struct.bContext* %6, %struct.SK_Point* %pt, %struct.SK_Sketch* %7, %struct.SK_Stroke* %8, %struct.SK_DrawData* %9), !dbg !7831
  store i32 %call1, i32* %point_added, align 4, !dbg !7832
  %10 = load i32, i32* %point_added, align 4, !dbg !7833
  %tobool = icmp ne i32 %10, 0, !dbg !7833
  br i1 %tobool, label %if.then, label %if.end46, !dbg !7835

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %final_p, metadata !7836, metadata !DIExpression()), !dbg !7838
  call void @llvm.dbg.declare(metadata float* %length, metadata !7839, metadata !DIExpression()), !dbg !7840
  call void @llvm.dbg.declare(metadata float* %distance, metadata !7841, metadata !DIExpression()), !dbg !7842
  call void @llvm.dbg.declare(metadata i32* %total, metadata !7843, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7845, metadata !DIExpression()), !dbg !7846
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %final_p, i64 0, i64 0, !dbg !7847
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %pt, i32 0, i32 0, !dbg !7848
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !7849
  call void @copy_v3_v3(float* %arraydecay2, float* %arraydecay3), !dbg !7850
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7851
  %p4 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %pt, i32 0, i32 0, !dbg !7852
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %p4, i64 0, i64 0, !dbg !7853
  %12 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7854
  %13 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7855
  call void @sk_projectDrawPoint(%struct.bContext* %11, float* %arraydecay5, %struct.SK_Stroke* %12, %struct.SK_DrawData* %13), !dbg !7856
  %14 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7857
  call void @sk_appendStrokePoint(%struct.SK_Stroke* %14, %struct.SK_Point* %pt), !dbg !7858
  store i32 0, i32* %total, align 4, !dbg !7859
  store float 0.000000e+00, float* %length, align 4, !dbg !7860
  %15 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7861
  %nb_points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %15, i32 0, i32 3, !dbg !7863
  %16 = load i32, i32* %nb_points, align 8, !dbg !7863
  %sub = sub nsw i32 %16, 2, !dbg !7864
  store i32 %sub, i32* %i, align 4, !dbg !7865
  br label %for.cond, !dbg !7866

for.cond:                                         ; preds = %for.inc, %if.then
  %17 = load i32, i32* %i, align 4, !dbg !7867
  %cmp = icmp sgt i32 %17, 0, !dbg !7869
  br i1 %cmp, label %for.body, label %for.end, !dbg !7870

for.body:                                         ; preds = %for.cond
  %18 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7871
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %18, i32 0, i32 2, !dbg !7873
  %19 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !7873
  %20 = load i32, i32* %i, align 4, !dbg !7874
  %idxprom = sext i32 %20 to i64, !dbg !7871
  %arrayidx6 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %19, i64 %idxprom, !dbg !7871
  %p7 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx6, i32 0, i32 0, !dbg !7875
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %p7, i64 0, i64 0, !dbg !7871
  %21 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7876
  %points9 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %21, i32 0, i32 2, !dbg !7877
  %22 = load %struct.SK_Point*, %struct.SK_Point** %points9, align 8, !dbg !7877
  %23 = load i32, i32* %i, align 4, !dbg !7878
  %add = add nsw i32 %23, 1, !dbg !7879
  %idxprom10 = sext i32 %add to i64, !dbg !7876
  %arrayidx11 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %22, i64 %idxprom10, !dbg !7876
  %p12 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx11, i32 0, i32 0, !dbg !7880
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %p12, i64 0, i64 0, !dbg !7876
  %call14 = call float @len_v3v3(float* %arraydecay8, float* %arraydecay13), !dbg !7881
  %24 = load float, float* %length, align 4, !dbg !7882
  %add15 = fadd float %24, %call14, !dbg !7882
  store float %add15, float* %length, align 4, !dbg !7882
  %25 = load i32, i32* %total, align 4, !dbg !7883
  %inc = add nsw i32 %25, 1, !dbg !7883
  store i32 %inc, i32* %total, align 4, !dbg !7883
  %26 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7884
  %points16 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %26, i32 0, i32 2, !dbg !7886
  %27 = load %struct.SK_Point*, %struct.SK_Point** %points16, align 8, !dbg !7886
  %28 = load i32, i32* %i, align 4, !dbg !7887
  %idxprom17 = sext i32 %28 to i64, !dbg !7884
  %arrayidx18 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %27, i64 %idxprom17, !dbg !7884
  %mode = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx18, i32 0, i32 5, !dbg !7888
  %29 = load i32, i32* %mode, align 4, !dbg !7888
  %cmp19 = icmp eq i32 %29, 0, !dbg !7889
  br i1 %cmp19, label %if.then24, label %lor.lhs.false, !dbg !7890

lor.lhs.false:                                    ; preds = %for.body
  %30 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7891
  %points20 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %30, i32 0, i32 2, !dbg !7892
  %31 = load %struct.SK_Point*, %struct.SK_Point** %points20, align 8, !dbg !7892
  %32 = load i32, i32* %i, align 4, !dbg !7893
  %idxprom21 = sext i32 %32 to i64, !dbg !7891
  %arrayidx22 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %31, i64 %idxprom21, !dbg !7891
  %type = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx22, i32 0, i32 4, !dbg !7894
  %33 = load i32, i32* %type, align 4, !dbg !7894
  %cmp23 = icmp eq i32 %33, 1, !dbg !7895
  br i1 %cmp23, label %if.then24, label %if.end, !dbg !7896

if.then24:                                        ; preds = %lor.lhs.false, %for.body
  br label %for.end, !dbg !7897

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc, !dbg !7899

for.inc:                                          ; preds = %if.end
  %34 = load i32, i32* %i, align 4, !dbg !7900
  %dec = add nsw i32 %34, -1, !dbg !7900
  store i32 %dec, i32* %i, align 4, !dbg !7900
  br label %for.cond, !dbg !7901, !llvm.loop !7902

for.end:                                          ; preds = %if.then24, %for.cond
  %35 = load i32, i32* %total, align 4, !dbg !7904
  %cmp25 = icmp sgt i32 %35, 1, !dbg !7906
  br i1 %cmp25, label %if.then26, label %if.end37, !dbg !7907

if.then26:                                        ; preds = %for.end
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7908
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %final_p, i64 0, i64 0, !dbg !7910
  %37 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7911
  %points28 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %37, i32 0, i32 2, !dbg !7912
  %38 = load %struct.SK_Point*, %struct.SK_Point** %points28, align 8, !dbg !7912
  %39 = load i32, i32* %i, align 4, !dbg !7913
  %idxprom29 = sext i32 %39 to i64, !dbg !7911
  %arrayidx30 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %38, i64 %idxprom29, !dbg !7911
  %p31 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx30, i32 0, i32 0, !dbg !7914
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %p31, i64 0, i64 0, !dbg !7911
  %call33 = call float @sk_distanceDepth(%struct.bContext* %36, float* %arraydecay27, float* %arraydecay32), !dbg !7915
  store float %call33, float* %distance, align 4, !dbg !7916
  %40 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7917
  %41 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7918
  %42 = load i32, i32* %i, align 4, !dbg !7919
  %add34 = add nsw i32 %42, 1, !dbg !7920
  %43 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7921
  %nb_points35 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %43, i32 0, i32 3, !dbg !7922
  %44 = load i32, i32* %nb_points35, align 8, !dbg !7922
  %sub36 = sub nsw i32 %44, 2, !dbg !7923
  %45 = load float, float* %length, align 4, !dbg !7924
  %46 = load float, float* %distance, align 4, !dbg !7925
  call void @sk_interpolateDepth(%struct.bContext* %40, %struct.SK_Stroke* %41, i32 %add34, i32 %sub36, float %45, float %46), !dbg !7926
  br label %if.end37, !dbg !7927

if.end37:                                         ; preds = %if.then26, %for.end
  %47 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7928
  %points38 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %47, i32 0, i32 2, !dbg !7929
  %48 = load %struct.SK_Point*, %struct.SK_Point** %points38, align 8, !dbg !7929
  %49 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7930
  %nb_points39 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %49, i32 0, i32 3, !dbg !7931
  %50 = load i32, i32* %nb_points39, align 8, !dbg !7931
  %sub40 = sub nsw i32 %50, 1, !dbg !7932
  %idxprom41 = sext i32 %sub40 to i64, !dbg !7928
  %arrayidx42 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %48, i64 %idxprom41, !dbg !7928
  %p43 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx42, i32 0, i32 0, !dbg !7933
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %p43, i64 0, i64 0, !dbg !7928
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %final_p, i64 0, i64 0, !dbg !7934
  call void @copy_v3_v3(float* %arraydecay44, float* %arraydecay45), !dbg !7935
  store i32 1, i32* %point_added, align 4, !dbg !7936
  br label %if.end46, !dbg !7937

if.end46:                                         ; preds = %if.end37, %entry
  %51 = load i32, i32* %point_added, align 4, !dbg !7938
  ret i32 %51, !dbg !7939
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sk_addStrokeDrawPoint(%struct.bContext* %C, %struct.SK_Sketch* %sketch, %struct.SK_Stroke* %stk, %struct.SK_DrawData* %dd) #0 !dbg !7940 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  %dd.addr = alloca %struct.SK_DrawData*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %rv3d = alloca %struct.RegionView3D*, align 8
  %pt = alloca %struct.SK_Point, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7941, metadata !DIExpression()), !dbg !7942
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !7943, metadata !DIExpression()), !dbg !7944
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !7945, metadata !DIExpression()), !dbg !7946
  store %struct.SK_DrawData* %dd, %struct.SK_DrawData** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_DrawData** %dd.addr, metadata !7947, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !7949, metadata !DIExpression()), !dbg !7950
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7951
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !7952
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !7950
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !7953, metadata !DIExpression()), !dbg !7954
  %1 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7955
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %1, i32 0, i32 30, !dbg !7956
  %2 = load i8*, i8** %regiondata, align 8, !dbg !7956
  %3 = bitcast i8* %2 to %struct.RegionView3D*, !dbg !7955
  store %struct.RegionView3D* %3, %struct.RegionView3D** %rv3d, align 8, !dbg !7954
  call void @llvm.dbg.declare(metadata %struct.SK_Point* %pt, metadata !7957, metadata !DIExpression()), !dbg !7958
  %4 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7959
  %5 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !7960
  %viewinv = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %5, i32 0, i32 2, !dbg !7961
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 2, !dbg !7960
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !7960
  call void @sk_initPoint(%struct.SK_Point* %pt, %struct.SK_DrawData* %4, float* %arraydecay), !dbg !7962
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7963
  %7 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7964
  %8 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7965
  %9 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !7966
  %call1 = call i32 @sk_getStrokeDrawPoint(%struct.bContext* %6, %struct.SK_Point* %pt, %struct.SK_Sketch* %7, %struct.SK_Stroke* %8, %struct.SK_DrawData* %9), !dbg !7967
  %10 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !7968
  call void @sk_appendStrokePoint(%struct.SK_Stroke* %10, %struct.SK_Point* %pt), !dbg !7969
  ret i32 1, !dbg !7970
}

; Function Attrs: noinline nounwind uwtable
define internal void @sk_updateOverdraw(%struct.bContext* %C, %struct.SK_Sketch* %sketch, %struct.SK_Stroke* %stk, %struct.SK_DrawData* %dd) #0 !dbg !7971 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  %dd.addr = alloca %struct.SK_DrawData*, align 8
  %target1 = alloca %struct.SK_Stroke*, align 8
  %closest_index = alloca i32, align 4
  %dist_px = alloca float, align 4
  %index = alloca i32, align 4
  %spt = alloca %struct.SK_Point*, align 8
  %closest_pt = alloca %struct.SK_Point*, align 8
  %dist_px35 = alloca float, align 4
  %index36 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7974, metadata !DIExpression()), !dbg !7975
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !7976, metadata !DIExpression()), !dbg !7977
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !7978, metadata !DIExpression()), !dbg !7979
  store %struct.SK_DrawData* %dd, %struct.SK_DrawData** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_DrawData** %dd.addr, metadata !7980, metadata !DIExpression()), !dbg !7981
  %0 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7982
  %over = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %0, i32 0, i32 5, !dbg !7984
  %target = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over, i32 0, i32 0, !dbg !7985
  %1 = load %struct.SK_Stroke*, %struct.SK_Stroke** %target, align 8, !dbg !7985
  %cmp = icmp eq %struct.SK_Stroke* %1, null, !dbg !7986
  br i1 %cmp, label %if.then, label %if.else30, !dbg !7987

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %target1, metadata !7988, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.declare(metadata i32* %closest_index, metadata !7991, metadata !DIExpression()), !dbg !7992
  store i32 -1, i32* %closest_index, align 4, !dbg !7992
  call void @llvm.dbg.declare(metadata float* %dist_px, metadata !7993, metadata !DIExpression()), !dbg !7994
  store float 6.000000e+01, float* %dist_px, align 4, !dbg !7994
  %2 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !7995
  %strokes = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %2, i32 0, i32 0, !dbg !7997
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %strokes, i32 0, i32 0, !dbg !7998
  %3 = load i8*, i8** %first, align 8, !dbg !7998
  %4 = bitcast i8* %3 to %struct.SK_Stroke*, !dbg !7995
  store %struct.SK_Stroke* %4, %struct.SK_Stroke** %target1, align 8, !dbg !7999
  br label %for.cond, !dbg !8000

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load %struct.SK_Stroke*, %struct.SK_Stroke** %target1, align 8, !dbg !8001
  %tobool = icmp ne %struct.SK_Stroke* %5, null, !dbg !8003
  br i1 %tobool, label %for.body, label %for.end, !dbg !8003

for.body:                                         ; preds = %for.cond
  %6 = load %struct.SK_Stroke*, %struct.SK_Stroke** %target1, align 8, !dbg !8004
  %7 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !8007
  %cmp2 = icmp ne %struct.SK_Stroke* %6, %7, !dbg !8008
  br i1 %cmp2, label %if.then3, label %if.end8, !dbg !8009

if.then3:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8010, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %spt, metadata !8013, metadata !DIExpression()), !dbg !8014
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8015
  %9 = load %struct.SK_Stroke*, %struct.SK_Stroke** %target1, align 8, !dbg !8016
  %10 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !8017
  %mval = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %10, i32 0, i32 0, !dbg !8018
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !8017
  %call = call %struct.SK_Point* @sk_snapPointStroke(%struct.bContext* %8, %struct.SK_Stroke* %9, i32* %arraydecay, float* %dist_px, i32* %index, i32 1), !dbg !8019
  store %struct.SK_Point* %call, %struct.SK_Point** %spt, align 8, !dbg !8014
  %11 = load %struct.SK_Point*, %struct.SK_Point** %spt, align 8, !dbg !8020
  %cmp4 = icmp ne %struct.SK_Point* %11, null, !dbg !8022
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !8023

if.then5:                                         ; preds = %if.then3
  %12 = load %struct.SK_Stroke*, %struct.SK_Stroke** %target1, align 8, !dbg !8024
  %13 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !8026
  %over6 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %13, i32 0, i32 5, !dbg !8027
  %target7 = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over6, i32 0, i32 0, !dbg !8028
  store %struct.SK_Stroke* %12, %struct.SK_Stroke** %target7, align 8, !dbg !8029
  %14 = load i32, i32* %index, align 4, !dbg !8030
  store i32 %14, i32* %closest_index, align 4, !dbg !8031
  br label %if.end, !dbg !8032

if.end:                                           ; preds = %if.then5, %if.then3
  br label %if.end8, !dbg !8033

if.end8:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !8034

for.inc:                                          ; preds = %if.end8
  %15 = load %struct.SK_Stroke*, %struct.SK_Stroke** %target1, align 8, !dbg !8035
  %next = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %15, i32 0, i32 0, !dbg !8036
  %16 = load %struct.SK_Stroke*, %struct.SK_Stroke** %next, align 8, !dbg !8036
  store %struct.SK_Stroke* %16, %struct.SK_Stroke** %target1, align 8, !dbg !8037
  br label %for.cond, !dbg !8038, !llvm.loop !8039

for.end:                                          ; preds = %for.cond
  %17 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !8041
  %over9 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %17, i32 0, i32 5, !dbg !8043
  %target10 = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over9, i32 0, i32 0, !dbg !8044
  %18 = load %struct.SK_Stroke*, %struct.SK_Stroke** %target10, align 8, !dbg !8044
  %cmp11 = icmp ne %struct.SK_Stroke* %18, null, !dbg !8045
  br i1 %cmp11, label %if.then12, label %if.end29, !dbg !8046

if.then12:                                        ; preds = %for.end
  %19 = load i32, i32* %closest_index, align 4, !dbg !8047
  %cmp13 = icmp sgt i32 %19, -1, !dbg !8050
  br i1 %cmp13, label %if.then14, label %if.end22, !dbg !8051

if.then14:                                        ; preds = %if.then12
  %20 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !8052
  %call15 = call %struct.SK_Point* @sk_lastStrokePoint(%struct.SK_Stroke* %20), !dbg !8055
  %type = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %call15, i32 0, i32 4, !dbg !8056
  %21 = load i32, i32* %type, align 4, !dbg !8056
  %cmp16 = icmp eq i32 %21, 1, !dbg !8057
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !8058

if.then17:                                        ; preds = %if.then14
  %22 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !8059
  %over18 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %22, i32 0, i32 5, !dbg !8061
  %count = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over18, i32 0, i32 3, !dbg !8062
  store i32 5, i32* %count, align 8, !dbg !8063
  br label %if.end21, !dbg !8064

if.else:                                          ; preds = %if.then14
  %23 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !8065
  %over19 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %23, i32 0, i32 5, !dbg !8067
  %count20 = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over19, i32 0, i32 3, !dbg !8068
  %24 = load i32, i32* %count20, align 8, !dbg !8069
  %inc = add nsw i32 %24, 1, !dbg !8069
  store i32 %inc, i32* %count20, align 8, !dbg !8069
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then17
  br label %if.end22, !dbg !8070

if.end22:                                         ; preds = %if.end21, %if.then12
  %25 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !8071
  %nb_points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %25, i32 0, i32 3, !dbg !8073
  %26 = load i32, i32* %nb_points, align 8, !dbg !8073
  %cmp23 = icmp eq i32 %26, 1, !dbg !8074
  br i1 %cmp23, label %if.then24, label %if.else26, !dbg !8075

if.then24:                                        ; preds = %if.end22
  %27 = load i32, i32* %closest_index, align 4, !dbg !8076
  %28 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !8078
  %over25 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %28, i32 0, i32 5, !dbg !8079
  %start = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over25, i32 0, i32 1, !dbg !8080
  store i32 %27, i32* %start, align 8, !dbg !8081
  br label %if.end28, !dbg !8082

if.else26:                                        ; preds = %if.end22
  %29 = load i32, i32* %closest_index, align 4, !dbg !8083
  %30 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !8085
  %over27 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %30, i32 0, i32 5, !dbg !8086
  %end = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over27, i32 0, i32 2, !dbg !8087
  store i32 %29, i32* %end, align 4, !dbg !8088
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %if.then24
  br label %if.end29, !dbg !8089

if.end29:                                         ; preds = %if.end28, %for.end
  br label %if.end62, !dbg !8090

if.else30:                                        ; preds = %entry
  %31 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !8091
  %over31 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %31, i32 0, i32 5, !dbg !8093
  %target32 = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over31, i32 0, i32 0, !dbg !8094
  %32 = load %struct.SK_Stroke*, %struct.SK_Stroke** %target32, align 8, !dbg !8094
  %cmp33 = icmp ne %struct.SK_Stroke* %32, null, !dbg !8095
  br i1 %cmp33, label %if.then34, label %if.end61, !dbg !8096

if.then34:                                        ; preds = %if.else30
  call void @llvm.dbg.declare(metadata %struct.SK_Point** %closest_pt, metadata !8097, metadata !DIExpression()), !dbg !8099
  store %struct.SK_Point* null, %struct.SK_Point** %closest_pt, align 8, !dbg !8099
  call void @llvm.dbg.declare(metadata float* %dist_px35, metadata !8100, metadata !DIExpression()), !dbg !8101
  store float 6.000000e+01, float* %dist_px35, align 4, !dbg !8101
  call void @llvm.dbg.declare(metadata i32* %index36, metadata !8102, metadata !DIExpression()), !dbg !8103
  %33 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8104
  %34 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !8105
  %over37 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %34, i32 0, i32 5, !dbg !8106
  %target38 = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over37, i32 0, i32 0, !dbg !8107
  %35 = load %struct.SK_Stroke*, %struct.SK_Stroke** %target38, align 8, !dbg !8107
  %36 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd.addr, align 8, !dbg !8108
  %mval39 = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %36, i32 0, i32 0, !dbg !8109
  %arraydecay40 = getelementptr inbounds [2 x i32], [2 x i32]* %mval39, i64 0, i64 0, !dbg !8108
  %call41 = call %struct.SK_Point* @sk_snapPointStroke(%struct.bContext* %33, %struct.SK_Stroke* %35, i32* %arraydecay40, float* %dist_px35, i32* %index36, i32 1), !dbg !8110
  store %struct.SK_Point* %call41, %struct.SK_Point** %closest_pt, align 8, !dbg !8111
  %37 = load %struct.SK_Point*, %struct.SK_Point** %closest_pt, align 8, !dbg !8112
  %cmp42 = icmp ne %struct.SK_Point* %37, null, !dbg !8114
  br i1 %cmp42, label %if.then43, label %if.else57, !dbg !8115

if.then43:                                        ; preds = %if.then34
  %38 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !8116
  %call44 = call %struct.SK_Point* @sk_lastStrokePoint(%struct.SK_Stroke* %38), !dbg !8119
  %type45 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %call44, i32 0, i32 4, !dbg !8120
  %39 = load i32, i32* %type45, align 4, !dbg !8120
  %cmp46 = icmp eq i32 %39, 1, !dbg !8121
  br i1 %cmp46, label %if.then47, label %if.else50, !dbg !8122

if.then47:                                        ; preds = %if.then43
  %40 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !8123
  %over48 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %40, i32 0, i32 5, !dbg !8125
  %count49 = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over48, i32 0, i32 3, !dbg !8126
  store i32 5, i32* %count49, align 8, !dbg !8127
  br label %if.end54, !dbg !8128

if.else50:                                        ; preds = %if.then43
  %41 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !8129
  %over51 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %41, i32 0, i32 5, !dbg !8131
  %count52 = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over51, i32 0, i32 3, !dbg !8132
  %42 = load i32, i32* %count52, align 8, !dbg !8133
  %inc53 = add nsw i32 %42, 1, !dbg !8133
  store i32 %inc53, i32* %count52, align 8, !dbg !8133
  br label %if.end54

if.end54:                                         ; preds = %if.else50, %if.then47
  %43 = load i32, i32* %index36, align 4, !dbg !8134
  %44 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !8135
  %over55 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %44, i32 0, i32 5, !dbg !8136
  %end56 = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over55, i32 0, i32 2, !dbg !8137
  store i32 %43, i32* %end56, align 4, !dbg !8138
  br label %if.end60, !dbg !8139

if.else57:                                        ; preds = %if.then34
  %45 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !8140
  %over58 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %45, i32 0, i32 5, !dbg !8142
  %end59 = getelementptr inbounds %struct.SK_Overdraw, %struct.SK_Overdraw* %over58, i32 0, i32 2, !dbg !8143
  store i32 -1, i32* %end59, align 4, !dbg !8144
  br label %if.end60

if.end60:                                         ; preds = %if.else57, %if.end54
  br label %if.end61, !dbg !8145

if.end61:                                         ; preds = %if.end60, %if.else30
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end29
  ret void, !dbg !8146
}

declare dso_local void @sk_initPoint(%struct.SK_Point*, %struct.SK_DrawData*, float*) #2

declare dso_local void @sk_appendStrokePoint(%struct.SK_Stroke*, %struct.SK_Point*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @sk_distanceDepth(%struct.bContext* %C, float* %p1, float* %p2) #0 !dbg !8147 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %p1.addr = alloca float*, align 8
  %p2.addr = alloca float*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %rv3d = alloca %struct.RegionView3D*, align 8
  %vec = alloca [3 x float], align 4
  %distance = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8150, metadata !DIExpression()), !dbg !8151
  store float* %p1, float** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p1.addr, metadata !8152, metadata !DIExpression()), !dbg !8153
  store float* %p2, float** %p2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p2.addr, metadata !8154, metadata !DIExpression()), !dbg !8155
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !8156, metadata !DIExpression()), !dbg !8157
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8158
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !8159
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !8157
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !8160, metadata !DIExpression()), !dbg !8161
  %1 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8162
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %1, i32 0, i32 30, !dbg !8163
  %2 = load i8*, i8** %regiondata, align 8, !dbg !8163
  %3 = bitcast i8* %2 to %struct.RegionView3D*, !dbg !8162
  store %struct.RegionView3D* %3, %struct.RegionView3D** %rv3d, align 8, !dbg !8161
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !8164, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.declare(metadata float* %distance, metadata !8166, metadata !DIExpression()), !dbg !8167
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8168
  %4 = load float*, float** %p1.addr, align 8, !dbg !8169
  %5 = load float*, float** %p2.addr, align 8, !dbg !8170
  call void @sub_v3_v3v3(float* %arraydecay, float* %4, float* %5), !dbg !8171
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8172
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8173
  %6 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !8174
  %viewinv = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %6, i32 0, i32 2, !dbg !8175
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 2, !dbg !8174
  %arraydecay3 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !8174
  call void @project_v3_v3v3(float* %arraydecay1, float* %arraydecay2, float* %arraydecay3), !dbg !8176
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8177
  %call5 = call float @len_v3(float* %arraydecay4), !dbg !8178
  store float %call5, float* %distance, align 4, !dbg !8179
  %7 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !8180
  %viewinv6 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %7, i32 0, i32 2, !dbg !8182
  %arrayidx7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv6, i64 0, i64 2, !dbg !8180
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx7, i64 0, i64 0, !dbg !8180
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8183
  %call10 = call float @dot_v3v3(float* %arraydecay8, float* %arraydecay9), !dbg !8184
  %cmp = fcmp ogt float %call10, 0.000000e+00, !dbg !8185
  br i1 %cmp, label %if.then, label %if.end, !dbg !8186

if.then:                                          ; preds = %entry
  %8 = load float, float* %distance, align 4, !dbg !8187
  %mul = fmul float %8, -1.000000e+00, !dbg !8187
  store float %mul, float* %distance, align 4, !dbg !8187
  br label %if.end, !dbg !8189

if.end:                                           ; preds = %if.then, %entry
  %9 = load float, float* %distance, align 4, !dbg !8190
  ret float %9, !dbg !8191
}

; Function Attrs: noinline nounwind uwtable
define internal void @sk_interpolateDepth(%struct.bContext* %C, %struct.SK_Stroke* %stk, i32 %start, i32 %end, float %length, float %distance) #0 !dbg !8192 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  %start.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %length.addr = alloca float, align 4
  %distance.addr = alloca float, align 4
  %ar = alloca %struct.ARegion*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %v3d = alloca %struct.View3D*, align 8
  %progress = alloca float, align 4
  %i = alloca i32, align 4
  %ray_start = alloca [3 x float], align 4
  %ray_normal = alloca [3 x float], align 4
  %delta = alloca float, align 4
  %pval = alloca [2 x float], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8195, metadata !DIExpression()), !dbg !8196
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !8197, metadata !DIExpression()), !dbg !8198
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !8199, metadata !DIExpression()), !dbg !8200
  store i32 %end, i32* %end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end.addr, metadata !8201, metadata !DIExpression()), !dbg !8202
  store float %length, float* %length.addr, align 4
  call void @llvm.dbg.declare(metadata float* %length.addr, metadata !8203, metadata !DIExpression()), !dbg !8204
  store float %distance, float* %distance.addr, align 4
  call void @llvm.dbg.declare(metadata float* %distance.addr, metadata !8205, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !8207, metadata !DIExpression()), !dbg !8208
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8209
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !8210
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !8208
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !8211, metadata !DIExpression()), !dbg !8260
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8261
  %call1 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %1), !dbg !8262
  store %struct.ScrArea* %call1, %struct.ScrArea** %sa, align 8, !dbg !8260
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d, metadata !8263, metadata !DIExpression()), !dbg !8264
  %2 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8265
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %2, i32 0, i32 19, !dbg !8266
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !8267
  %3 = load i8*, i8** %first, align 8, !dbg !8267
  %4 = bitcast i8* %3 to %struct.View3D*, !dbg !8265
  store %struct.View3D* %4, %struct.View3D** %v3d, align 8, !dbg !8264
  call void @llvm.dbg.declare(metadata float* %progress, metadata !8268, metadata !DIExpression()), !dbg !8269
  store float 0.000000e+00, float* %progress, align 4, !dbg !8269
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8270, metadata !DIExpression()), !dbg !8271
  %5 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !8272
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %5, i32 0, i32 2, !dbg !8273
  %6 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !8273
  %7 = load i32, i32* %start.addr, align 4, !dbg !8274
  %idxprom = sext i32 %7 to i64, !dbg !8272
  %arrayidx = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %6, i64 %idxprom, !dbg !8272
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx, i32 0, i32 0, !dbg !8275
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !8272
  %8 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !8276
  %points2 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %8, i32 0, i32 2, !dbg !8277
  %9 = load %struct.SK_Point*, %struct.SK_Point** %points2, align 8, !dbg !8277
  %10 = load i32, i32* %start.addr, align 4, !dbg !8278
  %sub = sub nsw i32 %10, 1, !dbg !8279
  %idxprom3 = sext i32 %sub to i64, !dbg !8276
  %arrayidx4 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %9, i64 %idxprom3, !dbg !8276
  %p5 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx4, i32 0, i32 0, !dbg !8280
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %p5, i64 0, i64 0, !dbg !8276
  %call7 = call float @len_v3v3(float* %arraydecay, float* %arraydecay6), !dbg !8281
  store float %call7, float* %progress, align 4, !dbg !8282
  %11 = load i32, i32* %start.addr, align 4, !dbg !8283
  store i32 %11, i32* %i, align 4, !dbg !8285
  br label %for.cond, !dbg !8286

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load i32, i32* %i, align 4, !dbg !8287
  %13 = load i32, i32* %end.addr, align 4, !dbg !8289
  %cmp = icmp sle i32 %12, %13, !dbg !8290
  br i1 %cmp, label %for.body, label %for.end, !dbg !8291

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_start, metadata !8292, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_normal, metadata !8295, metadata !DIExpression()), !dbg !8296
  call void @llvm.dbg.declare(metadata float* %delta, metadata !8297, metadata !DIExpression()), !dbg !8298
  %14 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !8299
  %points8 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %14, i32 0, i32 2, !dbg !8300
  %15 = load %struct.SK_Point*, %struct.SK_Point** %points8, align 8, !dbg !8300
  %16 = load i32, i32* %i, align 4, !dbg !8301
  %idxprom9 = sext i32 %16 to i64, !dbg !8299
  %arrayidx10 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %15, i64 %idxprom9, !dbg !8299
  %p11 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx10, i32 0, i32 0, !dbg !8302
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %p11, i64 0, i64 0, !dbg !8299
  %17 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !8303
  %points13 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %17, i32 0, i32 2, !dbg !8304
  %18 = load %struct.SK_Point*, %struct.SK_Point** %points13, align 8, !dbg !8304
  %19 = load i32, i32* %i, align 4, !dbg !8305
  %add = add nsw i32 %19, 1, !dbg !8306
  %idxprom14 = sext i32 %add to i64, !dbg !8303
  %arrayidx15 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %18, i64 %idxprom14, !dbg !8303
  %p16 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx15, i32 0, i32 0, !dbg !8307
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %p16, i64 0, i64 0, !dbg !8303
  %call18 = call float @len_v3v3(float* %arraydecay12, float* %arraydecay17), !dbg !8308
  store float %call18, float* %delta, align 4, !dbg !8298
  call void @llvm.dbg.declare(metadata [2 x float]* %pval, metadata !8309, metadata !DIExpression()), !dbg !8310
  %20 = bitcast [2 x float]* %pval to i8*, !dbg !8310
  call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 8, i1 false), !dbg !8310
  %21 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8311
  %22 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !8312
  %points19 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %22, i32 0, i32 2, !dbg !8313
  %23 = load %struct.SK_Point*, %struct.SK_Point** %points19, align 8, !dbg !8313
  %24 = load i32, i32* %i, align 4, !dbg !8314
  %idxprom20 = sext i32 %24 to i64, !dbg !8312
  %arrayidx21 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %23, i64 %idxprom20, !dbg !8312
  %p22 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx21, i32 0, i32 0, !dbg !8315
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %p22, i64 0, i64 0, !dbg !8312
  %arraydecay24 = getelementptr inbounds [2 x float], [2 x float]* %pval, i64 0, i64 0, !dbg !8316
  %call25 = call i32 @ED_view3d_project_float_global(%struct.ARegion* %21, float* %arraydecay23, float* %arraydecay24, i32 0), !dbg !8317
  %25 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8318
  %26 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !8319
  %arraydecay26 = getelementptr inbounds [2 x float], [2 x float]* %pval, i64 0, i64 0, !dbg !8320
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !8321
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %ray_normal, i64 0, i64 0, !dbg !8322
  %call29 = call zeroext i8 @ED_view3d_win_to_ray(%struct.ARegion* %25, %struct.View3D* %26, float* %arraydecay26, float* %arraydecay27, float* %arraydecay28, i8 zeroext 0), !dbg !8323
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %ray_normal, i64 0, i64 0, !dbg !8324
  %27 = load float, float* %distance.addr, align 4, !dbg !8325
  %28 = load float, float* %progress, align 4, !dbg !8326
  %mul = fmul float %27, %28, !dbg !8327
  %29 = load float, float* %length.addr, align 4, !dbg !8328
  %div = fdiv float %mul, %29, !dbg !8329
  call void @mul_v3_fl(float* %arraydecay30, float %div), !dbg !8330
  %30 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !8331
  %points31 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %30, i32 0, i32 2, !dbg !8332
  %31 = load %struct.SK_Point*, %struct.SK_Point** %points31, align 8, !dbg !8332
  %32 = load i32, i32* %i, align 4, !dbg !8333
  %idxprom32 = sext i32 %32 to i64, !dbg !8331
  %arrayidx33 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %31, i64 %idxprom32, !dbg !8331
  %p34 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx33, i32 0, i32 0, !dbg !8334
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %p34, i64 0, i64 0, !dbg !8331
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %ray_normal, i64 0, i64 0, !dbg !8335
  call void @add_v3_v3(float* %arraydecay35, float* %arraydecay36), !dbg !8336
  %33 = load float, float* %delta, align 4, !dbg !8337
  %34 = load float, float* %progress, align 4, !dbg !8338
  %add37 = fadd float %34, %33, !dbg !8338
  store float %add37, float* %progress, align 4, !dbg !8338
  br label %for.inc, !dbg !8339

for.inc:                                          ; preds = %for.body
  %35 = load i32, i32* %i, align 4, !dbg !8340
  %inc = add nsw i32 %35, 1, !dbg !8340
  store i32 %inc, i32* %i, align 4, !dbg !8340
  br label %for.cond, !dbg !8341, !llvm.loop !8342

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8344
}

declare dso_local void @project_v3_v3v3(float*, float*, float*) #2

declare dso_local i32 @ED_view3d_project_float_global(%struct.ARegion*, float*, float*, i32) #2

declare dso_local zeroext i8 @ED_view3d_win_to_ray(%struct.ARegion*, %struct.View3D*, float*, float*, float*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @sketch_draw_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event, i16 signext %gesture, %struct.SK_Stroke* %stk) #0 !dbg !8345 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %gesture.addr = alloca i16, align 2
  %stk.addr = alloca %struct.SK_Stroke*, align 8
  %snap = alloca i8, align 1
  %dd = alloca %struct.SK_DrawData*, align 8
  %sketch = alloca %struct.SK_Sketch*, align 8
  %retval2 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8348, metadata !DIExpression()), !dbg !8349
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8350, metadata !DIExpression()), !dbg !8351
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !8352, metadata !DIExpression()), !dbg !8353
  store i16 %gesture, i16* %gesture.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %gesture.addr, metadata !8354, metadata !DIExpression()), !dbg !8355
  store %struct.SK_Stroke* %stk, %struct.SK_Stroke** %stk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk.addr, metadata !8356, metadata !DIExpression()), !dbg !8357
  call void @llvm.dbg.declare(metadata i8* %snap, metadata !8358, metadata !DIExpression()), !dbg !8359
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8360
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !8361
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8361
  %call = call i32 @RNA_boolean_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0)), !dbg !8362
  %conv = trunc i32 %call to i8, !dbg !8362
  store i8 %conv, i8* %snap, align 1, !dbg !8359
  call void @llvm.dbg.declare(metadata %struct.SK_DrawData** %dd, metadata !8363, metadata !DIExpression()), !dbg !8364
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8365
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 5, !dbg !8366
  %3 = load i8*, i8** %customdata, align 8, !dbg !8366
  %4 = bitcast i8* %3 to %struct.SK_DrawData*, !dbg !8365
  store %struct.SK_DrawData* %4, %struct.SK_DrawData** %dd, align 8, !dbg !8364
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch, metadata !8367, metadata !DIExpression()), !dbg !8368
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8369
  %call1 = call %struct.SK_Sketch* @contextSketch(%struct.bContext* %5, i32 1), !dbg !8370
  store %struct.SK_Sketch* %call1, %struct.SK_Sketch** %sketch, align 8, !dbg !8368
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !8371, metadata !DIExpression()), !dbg !8372
  store i32 1, i32* %retval2, align 4, !dbg !8372
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8373
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 2, !dbg !8374
  %7 = load i16, i16* %type, align 8, !dbg !8374
  %conv3 = sext i16 %7 to i32, !dbg !8373
  switch i32 %conv3, label %sw.epilog [
    i32 212, label %sw.bb
    i32 215, label %sw.bb
    i32 4, label %sw.bb9
    i32 17, label %sw.bb9
    i32 218, label %sw.bb18
    i32 1, label %sw.bb21
  ], !dbg !8375

sw.bb:                                            ; preds = %entry, %entry
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8376
  %ctrl = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 18, !dbg !8378
  %9 = load i16, i16* %ctrl, align 2, !dbg !8378
  %conv4 = sext i16 %9 to i32, !dbg !8376
  %cmp = icmp ne i32 %conv4, 0, !dbg !8379
  %conv5 = zext i1 %cmp to i32, !dbg !8379
  %conv6 = trunc i32 %conv5 to i8, !dbg !8376
  store i8 %conv6, i8* %snap, align 1, !dbg !8380
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8381
  %ptr7 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !8382
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr7, align 8, !dbg !8382
  %12 = load i8, i8* %snap, align 1, !dbg !8383
  %conv8 = zext i8 %12 to i32, !dbg !8383
  call void @RNA_boolean_set(%struct.PointerRNA* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0), i32 %conv8), !dbg !8384
  br label %sw.epilog, !dbg !8385

sw.bb9:                                           ; preds = %entry, %entry
  %13 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8386
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %13, i32 0, i32 6, !dbg !8387
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !8386
  %14 = load i32, i32* %arrayidx, align 4, !dbg !8386
  %15 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd, align 8, !dbg !8388
  %mval10 = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %15, i32 0, i32 0, !dbg !8389
  %arrayidx11 = getelementptr inbounds [2 x i32], [2 x i32]* %mval10, i64 0, i64 0, !dbg !8388
  store i32 %14, i32* %arrayidx11, align 4, !dbg !8390
  %16 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8391
  %mval12 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %16, i32 0, i32 6, !dbg !8392
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %mval12, i64 0, i64 1, !dbg !8391
  %17 = load i32, i32* %arrayidx13, align 4, !dbg !8391
  %18 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd, align 8, !dbg !8393
  %mval14 = getelementptr inbounds %struct.SK_DrawData, %struct.SK_DrawData* %18, i32 0, i32 0, !dbg !8394
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %mval14, i64 0, i64 1, !dbg !8393
  store i32 %17, i32* %arrayidx15, align 4, !dbg !8395
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8396
  %20 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !8397
  %21 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !8398
  %22 = load %struct.SK_DrawData*, %struct.SK_DrawData** %dd, align 8, !dbg !8399
  %23 = load i8, i8* %snap, align 1, !dbg !8400
  %call16 = call i32 @sk_draw_stroke(%struct.bContext* %19, %struct.SK_Sketch* %20, %struct.SK_Stroke* %21, %struct.SK_DrawData* %22, i8 zeroext %23), !dbg !8401
  %24 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8402
  %call17 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %24), !dbg !8403
  call void @ED_area_tag_redraw(%struct.ScrArea* %call17), !dbg !8404
  br label %sw.epilog, !dbg !8405

sw.bb18:                                          ; preds = %entry
  %25 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8406
  %type19 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %25, i32 0, i32 4, !dbg !8407
  %26 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type19, align 8, !dbg !8407
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %26, i32 0, i32 7, !dbg !8408
  %27 = load void (%struct.bContext*, %struct.wmOperator*)*, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !8408
  %28 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8409
  %29 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8410
  call void %27(%struct.bContext* %28, %struct.wmOperator* %29), !dbg !8406
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8411
  %call20 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %30), !dbg !8412
  call void @ED_area_tag_redraw(%struct.ScrArea* %call20), !dbg !8413
  store i32 2, i32* %retval2, align 4, !dbg !8414
  br label %sw.epilog, !dbg !8415

sw.bb21:                                          ; preds = %entry
  %31 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8416
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %31, i32 0, i32 3, !dbg !8418
  %32 = load i16, i16* %val, align 2, !dbg !8418
  %conv22 = sext i16 %32 to i32, !dbg !8416
  %cmp23 = icmp eq i32 %conv22, 2, !dbg !8419
  br i1 %cmp23, label %if.then, label %if.end38, !dbg !8420

if.then:                                          ; preds = %sw.bb21
  %33 = load i16, i16* %gesture.addr, align 2, !dbg !8421
  %conv25 = sext i16 %33 to i32, !dbg !8421
  %cmp26 = icmp eq i32 %conv25, 0, !dbg !8424
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !8425

if.then28:                                        ; preds = %if.then
  %34 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !8426
  call void @sk_endContinuousStroke(%struct.SK_Stroke* %34), !dbg !8428
  %35 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !8429
  call void @sk_filterLastContinuousStroke(%struct.SK_Stroke* %35), !dbg !8430
  %36 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !8431
  %37 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !8432
  call void @sk_updateNextPoint(%struct.SK_Sketch* %36, %struct.SK_Stroke* %37), !dbg !8433
  %38 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8434
  %call29 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %38), !dbg !8435
  call void @ED_area_tag_redraw(%struct.ScrArea* %call29), !dbg !8436
  %39 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8437
  %40 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8438
  %customdata30 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %40, i32 0, i32 5, !dbg !8439
  %41 = load i8*, i8** %customdata30, align 8, !dbg !8439
  call void %39(i8* %41), !dbg !8437
  store i32 4, i32* %retval2, align 4, !dbg !8440
  br label %if.end37, !dbg !8441

if.else:                                          ; preds = %if.then
  %42 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !8442
  call void @sk_endContinuousStroke(%struct.SK_Stroke* %42), !dbg !8444
  %43 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !8445
  call void @sk_filterLastContinuousStroke(%struct.SK_Stroke* %43), !dbg !8446
  %44 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !8447
  %nb_points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %44, i32 0, i32 3, !dbg !8449
  %45 = load i32, i32* %nb_points, align 8, !dbg !8449
  %cmp31 = icmp sgt i32 %45, 1, !dbg !8450
  br i1 %cmp31, label %if.then33, label %if.end, !dbg !8451

if.then33:                                        ; preds = %if.else
  %46 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8452
  %47 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !8454
  call void @sk_applyGesture(%struct.bContext* %46, %struct.SK_Sketch* %47), !dbg !8455
  br label %if.end, !dbg !8456

if.end:                                           ; preds = %if.then33, %if.else
  %48 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk.addr, align 8, !dbg !8457
  call void @sk_freeStroke(%struct.SK_Stroke* %48), !dbg !8458
  %49 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch, align 8, !dbg !8459
  %gesture34 = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %49, i32 0, i32 3, !dbg !8460
  store %struct.SK_Stroke* null, %struct.SK_Stroke** %gesture34, align 8, !dbg !8461
  %50 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8462
  %call35 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %50), !dbg !8463
  call void @ED_area_tag_redraw(%struct.ScrArea* %call35), !dbg !8464
  %51 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8465
  %52 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8466
  %customdata36 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %52, i32 0, i32 5, !dbg !8467
  %53 = load i8*, i8** %customdata36, align 8, !dbg !8467
  call void %51(i8* %53), !dbg !8465
  store i32 4, i32* %retval2, align 4, !dbg !8468
  br label %if.end37

if.end37:                                         ; preds = %if.end, %if.then28
  br label %if.end38, !dbg !8469

if.end38:                                         ; preds = %if.end37, %sw.bb21
  br label %sw.epilog, !dbg !8470

sw.epilog:                                        ; preds = %entry, %if.end38, %sw.bb18, %sw.bb9, %sw.bb
  %54 = load i32, i32* %retval2, align 4, !dbg !8471
  ret i32 %54, !dbg !8472
}

declare dso_local void @RNA_boolean_set(%struct.PointerRNA*, i8*, i32) #2

declare dso_local void @sk_endContinuousStroke(%struct.SK_Stroke*) #2

declare dso_local void @sk_filterLastContinuousStroke(%struct.SK_Stroke*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sk_applyGesture(%struct.bContext* %C, %struct.SK_Sketch* %sketch) #0 !dbg !8473 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %gest = alloca %struct.SK_Gesture, align 8
  %act = alloca %struct.SK_GestureAction*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8474, metadata !DIExpression()), !dbg !8475
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !8476, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.declare(metadata %struct.SK_Gesture* %gest, metadata !8478, metadata !DIExpression()), !dbg !8479
  call void @llvm.dbg.declare(metadata %struct.SK_GestureAction** %act, metadata !8480, metadata !DIExpression()), !dbg !8482
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8483
  %1 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !8484
  call void @sk_initGesture(%struct.bContext* %0, %struct.SK_Gesture* %gest, %struct.SK_Sketch* %1), !dbg !8485
  store %struct.SK_GestureAction* getelementptr inbounds ([8 x %struct.SK_GestureAction], [8 x %struct.SK_GestureAction]* @GESTURE_ACTIONS, i64 0, i64 0), %struct.SK_GestureAction** %act, align 8, !dbg !8486
  br label %for.cond, !dbg !8488

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.SK_GestureAction*, %struct.SK_GestureAction** %act, align 8, !dbg !8489
  %apply = getelementptr inbounds %struct.SK_GestureAction, %struct.SK_GestureAction* %2, i32 0, i32 2, !dbg !8491
  %3 = load void (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)*, void (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)** %apply, align 8, !dbg !8491
  %cmp = icmp ne void (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)* %3, null, !dbg !8492
  br i1 %cmp, label %for.body, label %for.end, !dbg !8493

for.body:                                         ; preds = %for.cond
  %4 = load %struct.SK_GestureAction*, %struct.SK_GestureAction** %act, align 8, !dbg !8494
  %detect = getelementptr inbounds %struct.SK_GestureAction, %struct.SK_GestureAction* %4, i32 0, i32 1, !dbg !8497
  %5 = load i32 (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)*, i32 (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)** %detect, align 8, !dbg !8497
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8498
  %7 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !8499
  %call = call i32 %5(%struct.bContext* %6, %struct.SK_Gesture* %gest, %struct.SK_Sketch* %7), !dbg !8494
  %tobool = icmp ne i32 %call, 0, !dbg !8494
  br i1 %tobool, label %if.then, label %if.end, !dbg !8500

if.then:                                          ; preds = %for.body
  %8 = load %struct.SK_GestureAction*, %struct.SK_GestureAction** %act, align 8, !dbg !8501
  %apply1 = getelementptr inbounds %struct.SK_GestureAction, %struct.SK_GestureAction* %8, i32 0, i32 2, !dbg !8503
  %9 = load void (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)*, void (%struct.bContext*, %struct.SK_Gesture*, %struct.SK_Sketch*)** %apply1, align 8, !dbg !8503
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8504
  %11 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !8505
  call void %9(%struct.bContext* %10, %struct.SK_Gesture* %gest, %struct.SK_Sketch* %11), !dbg !8501
  br label %for.end, !dbg !8506

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8507

for.inc:                                          ; preds = %if.end
  %12 = load %struct.SK_GestureAction*, %struct.SK_GestureAction** %act, align 8, !dbg !8508
  %incdec.ptr = getelementptr inbounds %struct.SK_GestureAction, %struct.SK_GestureAction* %12, i32 1, !dbg !8508
  store %struct.SK_GestureAction* %incdec.ptr, %struct.SK_GestureAction** %act, align 8, !dbg !8508
  br label %for.cond, !dbg !8509, !llvm.loop !8510

for.end:                                          ; preds = %if.then, %for.cond
  call void @sk_freeGesture(%struct.SK_Gesture* %gest), !dbg !8512
  ret void, !dbg !8513
}

declare dso_local void @sk_freeStroke(%struct.SK_Stroke*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sk_initGesture(%struct.bContext* %C, %struct.SK_Gesture* %gest, %struct.SK_Sketch* %sketch) #0 !dbg !8514 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %gest.addr = alloca %struct.SK_Gesture*, align 8
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8515, metadata !DIExpression()), !dbg !8516
  store %struct.SK_Gesture* %gest, %struct.SK_Gesture** %gest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Gesture** %gest.addr, metadata !8517, metadata !DIExpression()), !dbg !8518
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !8519, metadata !DIExpression()), !dbg !8520
  %0 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !8521
  %intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %0, i32 0, i32 2, !dbg !8522
  call void @BLI_listbase_clear(%struct.ListBase* %intersections), !dbg !8523
  %1 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !8524
  %self_intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %1, i32 0, i32 3, !dbg !8525
  call void @BLI_listbase_clear(%struct.ListBase* %self_intersections), !dbg !8526
  %call = call %struct.SK_Stroke* @sk_createStroke(), !dbg !8527
  %2 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !8528
  %segments = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %2, i32 0, i32 1, !dbg !8529
  store %struct.SK_Stroke* %call, %struct.SK_Stroke** %segments, align 8, !dbg !8530
  %3 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !8531
  %gesture = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %3, i32 0, i32 3, !dbg !8532
  %4 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture, align 8, !dbg !8532
  %5 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !8533
  %stk = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %5, i32 0, i32 0, !dbg !8534
  store %struct.SK_Stroke* %4, %struct.SK_Stroke** %stk, align 8, !dbg !8535
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8536
  %7 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !8537
  %self_intersections1 = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %7, i32 0, i32 3, !dbg !8538
  %8 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !8539
  %stk2 = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %8, i32 0, i32 0, !dbg !8540
  %9 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk2, align 8, !dbg !8540
  %call3 = call i32 @sk_getSelfIntersections(%struct.bContext* %6, %struct.ListBase* %self_intersections1, %struct.SK_Stroke* %9), !dbg !8541
  %10 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !8542
  %nb_self_intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %10, i32 0, i32 4, !dbg !8543
  store i32 %call3, i32* %nb_self_intersections, align 8, !dbg !8544
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8545
  %12 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !8546
  %intersections4 = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %12, i32 0, i32 2, !dbg !8547
  %13 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !8548
  %14 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !8549
  %stk5 = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %14, i32 0, i32 0, !dbg !8550
  %15 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk5, align 8, !dbg !8550
  %call6 = call i32 @sk_getIntersections(%struct.bContext* %11, %struct.ListBase* %intersections4, %struct.SK_Sketch* %13, %struct.SK_Stroke* %15), !dbg !8551
  %16 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !8552
  %nb_intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %16, i32 0, i32 5, !dbg !8553
  store i32 %call6, i32* %nb_intersections, align 4, !dbg !8554
  %17 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !8555
  %segments7 = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %17, i32 0, i32 1, !dbg !8556
  %18 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments7, align 8, !dbg !8556
  %19 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !8557
  %stk8 = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %19, i32 0, i32 0, !dbg !8558
  %20 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk8, align 8, !dbg !8558
  %call9 = call i32 @sk_getSegments(%struct.SK_Stroke* %18, %struct.SK_Stroke* %20), !dbg !8559
  %21 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !8560
  %nb_segments = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %21, i32 0, i32 6, !dbg !8561
  store i32 %call9, i32* %nb_segments, align 8, !dbg !8562
  ret void, !dbg !8563
}

; Function Attrs: noinline nounwind uwtable
define internal void @sk_freeGesture(%struct.SK_Gesture* %gest) #0 !dbg !8564 {
entry:
  %gest.addr = alloca %struct.SK_Gesture*, align 8
  store %struct.SK_Gesture* %gest, %struct.SK_Gesture** %gest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Gesture** %gest.addr, metadata !8567, metadata !DIExpression()), !dbg !8568
  %0 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !8569
  %segments = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %0, i32 0, i32 1, !dbg !8570
  %1 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments, align 8, !dbg !8570
  call void @sk_freeStroke(%struct.SK_Stroke* %1), !dbg !8571
  %2 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !8572
  %intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %2, i32 0, i32 2, !dbg !8573
  call void @BLI_freelistN(%struct.ListBase* %intersections), !dbg !8574
  %3 = load %struct.SK_Gesture*, %struct.SK_Gesture** %gest.addr, align 8, !dbg !8575
  %self_intersections = getelementptr inbounds %struct.SK_Gesture, %struct.SK_Gesture* %3, i32 0, i32 3, !dbg !8576
  call void @BLI_freelistN(%struct.ListBase* %self_intersections), !dbg !8577
  ret void, !dbg !8578
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sk_getSelfIntersections(%struct.bContext* %C, %struct.ListBase* %list, %struct.SK_Stroke* %gesture) #0 !dbg !8579 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %gesture.addr = alloca %struct.SK_Stroke*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %added = alloca i32, align 4
  %s_i = alloca i32, align 4
  %s_p1 = alloca [3 x float], align 4
  %s_p2 = alloca [3 x float], align 4
  %g_i = alloca i32, align 4
  %g_p1 = alloca [3 x float], align 4
  %g_p2 = alloca [3 x float], align 4
  %vi = alloca [3 x float], align 4
  %lambda = alloca float, align 4
  %isect = alloca %struct.SK_Intersection*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8582, metadata !DIExpression()), !dbg !8583
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !8584, metadata !DIExpression()), !dbg !8585
  store %struct.SK_Stroke* %gesture, %struct.SK_Stroke** %gesture.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %gesture.addr, metadata !8586, metadata !DIExpression()), !dbg !8587
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !8588, metadata !DIExpression()), !dbg !8589
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8590
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !8591
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !8589
  call void @llvm.dbg.declare(metadata i32* %added, metadata !8592, metadata !DIExpression()), !dbg !8593
  store i32 0, i32* %added, align 4, !dbg !8593
  call void @llvm.dbg.declare(metadata i32* %s_i, metadata !8594, metadata !DIExpression()), !dbg !8595
  store i32 0, i32* %s_i, align 4, !dbg !8596
  br label %for.cond, !dbg !8598

for.cond:                                         ; preds = %for.inc62, %entry
  %1 = load i32, i32* %s_i, align 4, !dbg !8599
  %2 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !8601
  %nb_points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %2, i32 0, i32 3, !dbg !8602
  %3 = load i32, i32* %nb_points, align 8, !dbg !8602
  %sub = sub nsw i32 %3, 1, !dbg !8603
  %cmp = icmp slt i32 %1, %sub, !dbg !8604
  br i1 %cmp, label %for.body, label %for.end64, !dbg !8605

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [3 x float]* %s_p1, metadata !8606, metadata !DIExpression()), !dbg !8608
  %4 = bitcast [3 x float]* %s_p1 to i8*, !dbg !8608
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 12, i1 false), !dbg !8608
  call void @llvm.dbg.declare(metadata [3 x float]* %s_p2, metadata !8609, metadata !DIExpression()), !dbg !8610
  %5 = bitcast [3 x float]* %s_p2 to i8*, !dbg !8610
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 12, i1 false), !dbg !8610
  call void @llvm.dbg.declare(metadata i32* %g_i, metadata !8611, metadata !DIExpression()), !dbg !8612
  %6 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8613
  %7 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !8614
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %7, i32 0, i32 2, !dbg !8615
  %8 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !8615
  %9 = load i32, i32* %s_i, align 4, !dbg !8616
  %idxprom = sext i32 %9 to i64, !dbg !8614
  %arrayidx = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %8, i64 %idxprom, !dbg !8614
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx, i32 0, i32 0, !dbg !8617
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !8614
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %s_p1, i64 0, i64 0, !dbg !8618
  %call2 = call i32 @ED_view3d_project_float_global(%struct.ARegion* %6, float* %arraydecay, float* %arraydecay1, i32 0), !dbg !8619
  %10 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8620
  %11 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !8621
  %points3 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %11, i32 0, i32 2, !dbg !8622
  %12 = load %struct.SK_Point*, %struct.SK_Point** %points3, align 8, !dbg !8622
  %13 = load i32, i32* %s_i, align 4, !dbg !8623
  %add = add nsw i32 %13, 1, !dbg !8624
  %idxprom4 = sext i32 %add to i64, !dbg !8621
  %arrayidx5 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %12, i64 %idxprom4, !dbg !8621
  %p6 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx5, i32 0, i32 0, !dbg !8625
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %p6, i64 0, i64 0, !dbg !8621
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %s_p2, i64 0, i64 0, !dbg !8626
  %call9 = call i32 @ED_view3d_project_float_global(%struct.ARegion* %10, float* %arraydecay7, float* %arraydecay8, i32 0), !dbg !8627
  %14 = load i32, i32* %s_i, align 4, !dbg !8628
  %add10 = add nsw i32 %14, 2, !dbg !8630
  store i32 %add10, i32* %g_i, align 4, !dbg !8631
  br label %for.cond11, !dbg !8632

for.cond11:                                       ; preds = %for.inc, %for.body
  %15 = load i32, i32* %g_i, align 4, !dbg !8633
  %16 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !8635
  %nb_points12 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %16, i32 0, i32 3, !dbg !8636
  %17 = load i32, i32* %nb_points12, align 8, !dbg !8636
  %sub13 = sub nsw i32 %17, 1, !dbg !8637
  %cmp14 = icmp slt i32 %15, %sub13, !dbg !8638
  br i1 %cmp14, label %for.body15, label %for.end, !dbg !8639

for.body15:                                       ; preds = %for.cond11
  call void @llvm.dbg.declare(metadata [3 x float]* %g_p1, metadata !8640, metadata !DIExpression()), !dbg !8642
  %18 = bitcast [3 x float]* %g_p1 to i8*, !dbg !8642
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 12, i1 false), !dbg !8642
  call void @llvm.dbg.declare(metadata [3 x float]* %g_p2, metadata !8643, metadata !DIExpression()), !dbg !8644
  %19 = bitcast [3 x float]* %g_p2 to i8*, !dbg !8644
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 12, i1 false), !dbg !8644
  call void @llvm.dbg.declare(metadata [3 x float]* %vi, metadata !8645, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !8647, metadata !DIExpression()), !dbg !8648
  %20 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8649
  %21 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !8650
  %points16 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %21, i32 0, i32 2, !dbg !8651
  %22 = load %struct.SK_Point*, %struct.SK_Point** %points16, align 8, !dbg !8651
  %23 = load i32, i32* %g_i, align 4, !dbg !8652
  %idxprom17 = sext i32 %23 to i64, !dbg !8650
  %arrayidx18 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %22, i64 %idxprom17, !dbg !8650
  %p19 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx18, i32 0, i32 0, !dbg !8653
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %p19, i64 0, i64 0, !dbg !8650
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %g_p1, i64 0, i64 0, !dbg !8654
  %call22 = call i32 @ED_view3d_project_float_global(%struct.ARegion* %20, float* %arraydecay20, float* %arraydecay21, i32 0), !dbg !8655
  %24 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8656
  %25 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !8657
  %points23 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %25, i32 0, i32 2, !dbg !8658
  %26 = load %struct.SK_Point*, %struct.SK_Point** %points23, align 8, !dbg !8658
  %27 = load i32, i32* %g_i, align 4, !dbg !8659
  %add24 = add nsw i32 %27, 1, !dbg !8660
  %idxprom25 = sext i32 %add24 to i64, !dbg !8657
  %arrayidx26 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %26, i64 %idxprom25, !dbg !8657
  %p27 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx26, i32 0, i32 0, !dbg !8661
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %p27, i64 0, i64 0, !dbg !8657
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %g_p2, i64 0, i64 0, !dbg !8662
  %call30 = call i32 @ED_view3d_project_float_global(%struct.ARegion* %24, float* %arraydecay28, float* %arraydecay29, i32 0), !dbg !8663
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %s_p1, i64 0, i64 0, !dbg !8664
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %s_p2, i64 0, i64 0, !dbg !8666
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %g_p1, i64 0, i64 0, !dbg !8667
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %g_p2, i64 0, i64 0, !dbg !8668
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %vi, i64 0, i64 0, !dbg !8669
  %call36 = call zeroext i8 @isect_line_line_strict_v3(float* %arraydecay31, float* %arraydecay32, float* %arraydecay33, float* %arraydecay34, float* %arraydecay35, float* %lambda), !dbg !8670
  %tobool = icmp ne i8 %call36, 0, !dbg !8670
  br i1 %tobool, label %if.then, label %if.end, !dbg !8671

if.then:                                          ; preds = %for.body15
  call void @llvm.dbg.declare(metadata %struct.SK_Intersection** %isect, metadata !8672, metadata !DIExpression()), !dbg !8674
  %28 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8675
  %call37 = call i8* %28(i64 56, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i64 0, i64 0)), !dbg !8675
  %29 = bitcast i8* %call37 to %struct.SK_Intersection*, !dbg !8675
  store %struct.SK_Intersection* %29, %struct.SK_Intersection** %isect, align 8, !dbg !8674
  %30 = load i32, i32* %g_i, align 4, !dbg !8676
  %31 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !8677
  %gesture_index = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %31, i32 0, i32 5, !dbg !8678
  store i32 %30, i32* %gesture_index, align 8, !dbg !8679
  %32 = load i32, i32* %s_i, align 4, !dbg !8680
  %33 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !8681
  %before = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %33, i32 0, i32 3, !dbg !8682
  store i32 %32, i32* %before, align 8, !dbg !8683
  %34 = load i32, i32* %s_i, align 4, !dbg !8684
  %add38 = add nsw i32 %34, 1, !dbg !8685
  %35 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !8686
  %after = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %35, i32 0, i32 4, !dbg !8687
  store i32 %add38, i32* %after, align 4, !dbg !8688
  %36 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !8689
  %37 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !8690
  %stroke = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %37, i32 0, i32 2, !dbg !8691
  store %struct.SK_Stroke* %36, %struct.SK_Stroke** %stroke, align 8, !dbg !8692
  %38 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !8693
  %p39 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %38, i32 0, i32 6, !dbg !8694
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %p39, i64 0, i64 0, !dbg !8693
  %39 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !8695
  %points41 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %39, i32 0, i32 2, !dbg !8696
  %40 = load %struct.SK_Point*, %struct.SK_Point** %points41, align 8, !dbg !8696
  %41 = load i32, i32* %s_i, align 4, !dbg !8697
  %add42 = add nsw i32 %41, 1, !dbg !8698
  %idxprom43 = sext i32 %add42 to i64, !dbg !8695
  %arrayidx44 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %40, i64 %idxprom43, !dbg !8695
  %p45 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx44, i32 0, i32 0, !dbg !8699
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %p45, i64 0, i64 0, !dbg !8695
  %42 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !8700
  %points47 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %42, i32 0, i32 2, !dbg !8701
  %43 = load %struct.SK_Point*, %struct.SK_Point** %points47, align 8, !dbg !8701
  %44 = load i32, i32* %s_i, align 4, !dbg !8702
  %idxprom48 = sext i32 %44 to i64, !dbg !8700
  %arrayidx49 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %43, i64 %idxprom48, !dbg !8700
  %p50 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx49, i32 0, i32 0, !dbg !8703
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %p50, i64 0, i64 0, !dbg !8700
  call void @sub_v3_v3v3(float* %arraydecay40, float* %arraydecay46, float* %arraydecay51), !dbg !8704
  %45 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !8705
  %p52 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %45, i32 0, i32 6, !dbg !8706
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %p52, i64 0, i64 0, !dbg !8705
  %46 = load float, float* %lambda, align 4, !dbg !8707
  call void @mul_v3_fl(float* %arraydecay53, float %46), !dbg !8708
  %47 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !8709
  %p54 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %47, i32 0, i32 6, !dbg !8710
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %p54, i64 0, i64 0, !dbg !8709
  %48 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !8711
  %points56 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %48, i32 0, i32 2, !dbg !8712
  %49 = load %struct.SK_Point*, %struct.SK_Point** %points56, align 8, !dbg !8712
  %50 = load i32, i32* %s_i, align 4, !dbg !8713
  %idxprom57 = sext i32 %50 to i64, !dbg !8711
  %arrayidx58 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %49, i64 %idxprom57, !dbg !8711
  %p59 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx58, i32 0, i32 0, !dbg !8714
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %p59, i64 0, i64 0, !dbg !8711
  call void @add_v3_v3(float* %arraydecay55, float* %arraydecay60), !dbg !8715
  %51 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !8716
  %52 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !8717
  %53 = bitcast %struct.SK_Intersection* %52 to i8*, !dbg !8717
  call void @BLI_addtail(%struct.ListBase* %51, i8* %53), !dbg !8718
  %54 = load i32, i32* %added, align 4, !dbg !8719
  %inc = add nsw i32 %54, 1, !dbg !8719
  store i32 %inc, i32* %added, align 4, !dbg !8719
  br label %if.end, !dbg !8720

if.end:                                           ; preds = %if.then, %for.body15
  br label %for.inc, !dbg !8721

for.inc:                                          ; preds = %if.end
  %55 = load i32, i32* %g_i, align 4, !dbg !8722
  %inc61 = add nsw i32 %55, 1, !dbg !8722
  store i32 %inc61, i32* %g_i, align 4, !dbg !8722
  br label %for.cond11, !dbg !8723, !llvm.loop !8724

for.end:                                          ; preds = %for.cond11
  br label %for.inc62, !dbg !8726

for.inc62:                                        ; preds = %for.end
  %56 = load i32, i32* %s_i, align 4, !dbg !8727
  %inc63 = add nsw i32 %56, 1, !dbg !8727
  store i32 %inc63, i32* %s_i, align 4, !dbg !8727
  br label %for.cond, !dbg !8728, !llvm.loop !8729

for.end64:                                        ; preds = %for.cond
  %57 = load i32, i32* %added, align 4, !dbg !8731
  ret i32 %57, !dbg !8732
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sk_getIntersections(%struct.bContext* %C, %struct.ListBase* %list, %struct.SK_Sketch* %sketch, %struct.SK_Stroke* %gesture) #0 !dbg !8733 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  %gesture.addr = alloca %struct.SK_Stroke*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %v3d = alloca %struct.View3D*, align 8
  %stk = alloca %struct.SK_Stroke*, align 8
  %added = alloca i32, align 4
  %s_added = alloca i32, align 4
  %s_i = alloca i32, align 4
  %s_p1 = alloca [3 x float], align 4
  %s_p2 = alloca [3 x float], align 4
  %g_i = alloca i32, align 4
  %g_p1 = alloca [3 x float], align 4
  %g_p2 = alloca [3 x float], align 4
  %vi = alloca [3 x float], align 4
  %lambda = alloca float, align 4
  %isect = alloca %struct.SK_Intersection*, align 8
  %ray_start = alloca [3 x float], align 4
  %ray_end = alloca [3 x float], align 4
  %mval = alloca [2 x float], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8736, metadata !DIExpression()), !dbg !8737
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !8738, metadata !DIExpression()), !dbg !8739
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !8740, metadata !DIExpression()), !dbg !8741
  store %struct.SK_Stroke* %gesture, %struct.SK_Stroke** %gesture.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %gesture.addr, metadata !8742, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !8744, metadata !DIExpression()), !dbg !8745
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8746
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !8747
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !8745
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !8748, metadata !DIExpression()), !dbg !8749
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8750
  %call1 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %1), !dbg !8751
  store %struct.ScrArea* %call1, %struct.ScrArea** %sa, align 8, !dbg !8749
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d, metadata !8752, metadata !DIExpression()), !dbg !8753
  %2 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8754
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %2, i32 0, i32 19, !dbg !8755
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !8756
  %3 = load i8*, i8** %first, align 8, !dbg !8756
  %4 = bitcast i8* %3 to %struct.View3D*, !dbg !8754
  store %struct.View3D* %4, %struct.View3D** %v3d, align 8, !dbg !8753
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %stk, metadata !8757, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.declare(metadata i32* %added, metadata !8759, metadata !DIExpression()), !dbg !8760
  store i32 0, i32* %added, align 4, !dbg !8760
  %5 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !8761
  %strokes = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %5, i32 0, i32 0, !dbg !8763
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %strokes, i32 0, i32 0, !dbg !8764
  %6 = load i8*, i8** %first2, align 8, !dbg !8764
  %7 = bitcast i8* %6 to %struct.SK_Stroke*, !dbg !8761
  store %struct.SK_Stroke* %7, %struct.SK_Stroke** %stk, align 8, !dbg !8765
  br label %for.cond, !dbg !8766

for.cond:                                         ; preds = %for.inc74, %entry
  %8 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !8767
  %tobool = icmp ne %struct.SK_Stroke* %8, null, !dbg !8769
  br i1 %tobool, label %for.body, label %for.end75, !dbg !8769

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %s_added, metadata !8770, metadata !DIExpression()), !dbg !8772
  store i32 0, i32* %s_added, align 4, !dbg !8772
  call void @llvm.dbg.declare(metadata i32* %s_i, metadata !8773, metadata !DIExpression()), !dbg !8774
  store i32 0, i32* %s_i, align 4, !dbg !8775
  br label %for.cond3, !dbg !8777

for.cond3:                                        ; preds = %for.inc70, %for.body
  %9 = load i32, i32* %s_i, align 4, !dbg !8778
  %10 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !8780
  %nb_points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %10, i32 0, i32 3, !dbg !8781
  %11 = load i32, i32* %nb_points, align 8, !dbg !8781
  %sub = sub nsw i32 %11, 1, !dbg !8782
  %cmp = icmp slt i32 %9, %sub, !dbg !8783
  br i1 %cmp, label %for.body4, label %for.end72, !dbg !8784

for.body4:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata [3 x float]* %s_p1, metadata !8785, metadata !DIExpression()), !dbg !8787
  %12 = bitcast [3 x float]* %s_p1 to i8*, !dbg !8787
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 12, i1 false), !dbg !8787
  call void @llvm.dbg.declare(metadata [3 x float]* %s_p2, metadata !8788, metadata !DIExpression()), !dbg !8789
  %13 = bitcast [3 x float]* %s_p2 to i8*, !dbg !8789
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 12, i1 false), !dbg !8789
  call void @llvm.dbg.declare(metadata i32* %g_i, metadata !8790, metadata !DIExpression()), !dbg !8791
  %14 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8792
  %15 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !8793
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %15, i32 0, i32 2, !dbg !8794
  %16 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !8794
  %17 = load i32, i32* %s_i, align 4, !dbg !8795
  %idxprom = sext i32 %17 to i64, !dbg !8793
  %arrayidx = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %16, i64 %idxprom, !dbg !8793
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx, i32 0, i32 0, !dbg !8796
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !8793
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %s_p1, i64 0, i64 0, !dbg !8797
  %call6 = call i32 @ED_view3d_project_float_global(%struct.ARegion* %14, float* %arraydecay, float* %arraydecay5, i32 0), !dbg !8798
  %18 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8799
  %19 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !8800
  %points7 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %19, i32 0, i32 2, !dbg !8801
  %20 = load %struct.SK_Point*, %struct.SK_Point** %points7, align 8, !dbg !8801
  %21 = load i32, i32* %s_i, align 4, !dbg !8802
  %add = add nsw i32 %21, 1, !dbg !8803
  %idxprom8 = sext i32 %add to i64, !dbg !8800
  %arrayidx9 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %20, i64 %idxprom8, !dbg !8800
  %p10 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx9, i32 0, i32 0, !dbg !8804
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %p10, i64 0, i64 0, !dbg !8800
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %s_p2, i64 0, i64 0, !dbg !8805
  %call13 = call i32 @ED_view3d_project_float_global(%struct.ARegion* %18, float* %arraydecay11, float* %arraydecay12, i32 0), !dbg !8806
  store i32 0, i32* %g_i, align 4, !dbg !8807
  br label %for.cond14, !dbg !8809

for.cond14:                                       ; preds = %for.inc, %for.body4
  %22 = load i32, i32* %g_i, align 4, !dbg !8810
  %23 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !8812
  %nb_points15 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %23, i32 0, i32 3, !dbg !8813
  %24 = load i32, i32* %nb_points15, align 8, !dbg !8813
  %sub16 = sub nsw i32 %24, 1, !dbg !8814
  %cmp17 = icmp slt i32 %22, %sub16, !dbg !8815
  br i1 %cmp17, label %for.body18, label %for.end, !dbg !8816

for.body18:                                       ; preds = %for.cond14
  call void @llvm.dbg.declare(metadata [3 x float]* %g_p1, metadata !8817, metadata !DIExpression()), !dbg !8819
  %25 = bitcast [3 x float]* %g_p1 to i8*, !dbg !8819
  call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 12, i1 false), !dbg !8819
  call void @llvm.dbg.declare(metadata [3 x float]* %g_p2, metadata !8820, metadata !DIExpression()), !dbg !8821
  %26 = bitcast [3 x float]* %g_p2 to i8*, !dbg !8821
  call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 12, i1 false), !dbg !8821
  call void @llvm.dbg.declare(metadata [3 x float]* %vi, metadata !8822, metadata !DIExpression()), !dbg !8823
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !8824, metadata !DIExpression()), !dbg !8825
  %27 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8826
  %28 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !8827
  %points19 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %28, i32 0, i32 2, !dbg !8828
  %29 = load %struct.SK_Point*, %struct.SK_Point** %points19, align 8, !dbg !8828
  %30 = load i32, i32* %g_i, align 4, !dbg !8829
  %idxprom20 = sext i32 %30 to i64, !dbg !8827
  %arrayidx21 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %29, i64 %idxprom20, !dbg !8827
  %p22 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx21, i32 0, i32 0, !dbg !8830
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %p22, i64 0, i64 0, !dbg !8827
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %g_p1, i64 0, i64 0, !dbg !8831
  %call25 = call i32 @ED_view3d_project_float_global(%struct.ARegion* %27, float* %arraydecay23, float* %arraydecay24, i32 0), !dbg !8832
  %31 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8833
  %32 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !8834
  %points26 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %32, i32 0, i32 2, !dbg !8835
  %33 = load %struct.SK_Point*, %struct.SK_Point** %points26, align 8, !dbg !8835
  %34 = load i32, i32* %g_i, align 4, !dbg !8836
  %add27 = add nsw i32 %34, 1, !dbg !8837
  %idxprom28 = sext i32 %add27 to i64, !dbg !8834
  %arrayidx29 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %33, i64 %idxprom28, !dbg !8834
  %p30 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx29, i32 0, i32 0, !dbg !8838
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %p30, i64 0, i64 0, !dbg !8834
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %g_p2, i64 0, i64 0, !dbg !8839
  %call33 = call i32 @ED_view3d_project_float_global(%struct.ARegion* %31, float* %arraydecay31, float* %arraydecay32, i32 0), !dbg !8840
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %s_p1, i64 0, i64 0, !dbg !8841
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %s_p2, i64 0, i64 0, !dbg !8843
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %g_p1, i64 0, i64 0, !dbg !8844
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %g_p2, i64 0, i64 0, !dbg !8845
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %vi, i64 0, i64 0, !dbg !8846
  %call39 = call zeroext i8 @isect_line_line_strict_v3(float* %arraydecay34, float* %arraydecay35, float* %arraydecay36, float* %arraydecay37, float* %arraydecay38, float* %lambda), !dbg !8847
  %tobool40 = icmp ne i8 %call39, 0, !dbg !8847
  br i1 %tobool40, label %if.then, label %if.end, !dbg !8848

if.then:                                          ; preds = %for.body18
  call void @llvm.dbg.declare(metadata %struct.SK_Intersection** %isect, metadata !8849, metadata !DIExpression()), !dbg !8851
  %35 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8852
  %call41 = call i8* %35(i64 56, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i64 0, i64 0)), !dbg !8852
  %36 = bitcast i8* %call41 to %struct.SK_Intersection*, !dbg !8852
  store %struct.SK_Intersection* %36, %struct.SK_Intersection** %isect, align 8, !dbg !8851
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_start, metadata !8853, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_end, metadata !8855, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.declare(metadata [2 x float]* %mval, metadata !8857, metadata !DIExpression()), !dbg !8858
  %37 = load i32, i32* %g_i, align 4, !dbg !8859
  %38 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !8860
  %gesture_index = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %38, i32 0, i32 5, !dbg !8861
  store i32 %37, i32* %gesture_index, align 8, !dbg !8862
  %39 = load i32, i32* %s_i, align 4, !dbg !8863
  %40 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !8864
  %before = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %40, i32 0, i32 3, !dbg !8865
  store i32 %39, i32* %before, align 8, !dbg !8866
  %41 = load i32, i32* %s_i, align 4, !dbg !8867
  %add42 = add nsw i32 %41, 1, !dbg !8868
  %42 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !8869
  %after = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %42, i32 0, i32 4, !dbg !8870
  store i32 %add42, i32* %after, align 4, !dbg !8871
  %43 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !8872
  %44 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !8873
  %stroke = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %44, i32 0, i32 2, !dbg !8874
  store %struct.SK_Stroke* %43, %struct.SK_Stroke** %stroke, align 8, !dbg !8875
  %45 = load float, float* %lambda, align 4, !dbg !8876
  %46 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !8877
  %lambda43 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %46, i32 0, i32 7, !dbg !8878
  store float %45, float* %lambda43, align 8, !dbg !8879
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %vi, i64 0, i64 0, !dbg !8880
  %47 = load float, float* %arrayidx44, align 4, !dbg !8880
  %arrayidx45 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !8881
  store float %47, float* %arrayidx45, align 4, !dbg !8882
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %vi, i64 0, i64 1, !dbg !8883
  %48 = load float, float* %arrayidx46, align 4, !dbg !8883
  %arrayidx47 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 1, !dbg !8884
  store float %48, float* %arrayidx47, align 4, !dbg !8885
  %49 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8886
  %50 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !8887
  %arraydecay48 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !8888
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !8889
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %ray_end, i64 0, i64 0, !dbg !8890
  %call51 = call zeroext i8 @ED_view3d_win_to_segment(%struct.ARegion* %49, %struct.View3D* %50, float* %arraydecay48, float* %arraydecay49, float* %arraydecay50, i8 zeroext 1), !dbg !8891
  %51 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !8892
  %points52 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %51, i32 0, i32 2, !dbg !8893
  %52 = load %struct.SK_Point*, %struct.SK_Point** %points52, align 8, !dbg !8893
  %53 = load i32, i32* %s_i, align 4, !dbg !8894
  %idxprom53 = sext i32 %53 to i64, !dbg !8892
  %arrayidx54 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %52, i64 %idxprom53, !dbg !8892
  %p55 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx54, i32 0, i32 0, !dbg !8895
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %p55, i64 0, i64 0, !dbg !8892
  %54 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !8896
  %points57 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %54, i32 0, i32 2, !dbg !8897
  %55 = load %struct.SK_Point*, %struct.SK_Point** %points57, align 8, !dbg !8897
  %56 = load i32, i32* %s_i, align 4, !dbg !8898
  %add58 = add nsw i32 %56, 1, !dbg !8899
  %idxprom59 = sext i32 %add58 to i64, !dbg !8896
  %arrayidx60 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %55, i64 %idxprom59, !dbg !8896
  %p61 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx60, i32 0, i32 0, !dbg !8900
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %p61, i64 0, i64 0, !dbg !8896
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !8901
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %ray_end, i64 0, i64 0, !dbg !8902
  %57 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !8903
  %p65 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %57, i32 0, i32 6, !dbg !8904
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %p65, i64 0, i64 0, !dbg !8903
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %vi, i64 0, i64 0, !dbg !8905
  %call68 = call i32 @isect_line_line_v3(float* %arraydecay56, float* %arraydecay62, float* %arraydecay63, float* %arraydecay64, float* %arraydecay66, float* %arraydecay67), !dbg !8906
  %58 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !8907
  %59 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect, align 8, !dbg !8908
  %60 = bitcast %struct.SK_Intersection* %59 to i8*, !dbg !8908
  call void @BLI_addtail(%struct.ListBase* %58, i8* %60), !dbg !8909
  %61 = load i32, i32* %s_added, align 4, !dbg !8910
  %inc = add nsw i32 %61, 1, !dbg !8910
  store i32 %inc, i32* %s_added, align 4, !dbg !8910
  br label %if.end, !dbg !8911

if.end:                                           ; preds = %if.then, %for.body18
  br label %for.inc, !dbg !8912

for.inc:                                          ; preds = %if.end
  %62 = load i32, i32* %g_i, align 4, !dbg !8913
  %inc69 = add nsw i32 %62, 1, !dbg !8913
  store i32 %inc69, i32* %g_i, align 4, !dbg !8913
  br label %for.cond14, !dbg !8914, !llvm.loop !8915

for.end:                                          ; preds = %for.cond14
  br label %for.inc70, !dbg !8917

for.inc70:                                        ; preds = %for.end
  %63 = load i32, i32* %s_i, align 4, !dbg !8918
  %inc71 = add nsw i32 %63, 1, !dbg !8918
  store i32 %inc71, i32* %s_i, align 4, !dbg !8918
  br label %for.cond3, !dbg !8919, !llvm.loop !8920

for.end72:                                        ; preds = %for.cond3
  %64 = load i32, i32* %s_added, align 4, !dbg !8922
  %65 = load i32, i32* %added, align 4, !dbg !8922
  %cmp73 = icmp sgt i32 %64, %65, !dbg !8922
  br i1 %cmp73, label %cond.true, label %cond.false, !dbg !8922

cond.true:                                        ; preds = %for.end72
  %66 = load i32, i32* %s_added, align 4, !dbg !8922
  br label %cond.end, !dbg !8922

cond.false:                                       ; preds = %for.end72
  %67 = load i32, i32* %added, align 4, !dbg !8922
  br label %cond.end, !dbg !8922

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %66, %cond.true ], [ %67, %cond.false ], !dbg !8922
  store i32 %cond, i32* %added, align 4, !dbg !8923
  br label %for.inc74, !dbg !8924

for.inc74:                                        ; preds = %cond.end
  %68 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stk, align 8, !dbg !8925
  %next = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %68, i32 0, i32 0, !dbg !8926
  %69 = load %struct.SK_Stroke*, %struct.SK_Stroke** %next, align 8, !dbg !8926
  store %struct.SK_Stroke* %69, %struct.SK_Stroke** %stk, align 8, !dbg !8927
  br label %for.cond, !dbg !8928, !llvm.loop !8929

for.end75:                                        ; preds = %for.cond
  %70 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !8931
  call void @BLI_sortlist(%struct.ListBase* %70, i32 (i8*, i8*)* @cmpIntersections), !dbg !8932
  %71 = load i32, i32* %added, align 4, !dbg !8933
  ret i32 %71, !dbg !8934
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sk_getSegments(%struct.SK_Stroke* %segments, %struct.SK_Stroke* %gesture) #0 !dbg !8935 {
entry:
  %segments.addr = alloca %struct.SK_Stroke*, align 8
  %gesture.addr = alloca %struct.SK_Stroke*, align 8
  %sk_iter = alloca %struct.SK_StrokeIterator, align 8
  %iter = alloca %struct.BArcIterator*, align 8
  %CORRELATION_THRESHOLD = alloca float, align 4
  %vec = alloca float*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %n = alloca [3 x float], align 4
  store %struct.SK_Stroke* %segments, %struct.SK_Stroke** %segments.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %segments.addr, metadata !8938, metadata !DIExpression()), !dbg !8939
  store %struct.SK_Stroke* %gesture, %struct.SK_Stroke** %gesture.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Stroke** %gesture.addr, metadata !8940, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.declare(metadata %struct.SK_StrokeIterator* %sk_iter, metadata !8942, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.declare(metadata %struct.BArcIterator** %iter, metadata !8944, metadata !DIExpression()), !dbg !8945
  %0 = bitcast %struct.SK_StrokeIterator* %sk_iter to %struct.BArcIterator*, !dbg !8946
  store %struct.BArcIterator* %0, %struct.BArcIterator** %iter, align 8, !dbg !8945
  call void @llvm.dbg.declare(metadata float* %CORRELATION_THRESHOLD, metadata !8947, metadata !DIExpression()), !dbg !8948
  store float 0x3FEFAE1480000000, float* %CORRELATION_THRESHOLD, align 4, !dbg !8948
  call void @llvm.dbg.declare(metadata float** %vec, metadata !8949, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8951, metadata !DIExpression()), !dbg !8952
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8953, metadata !DIExpression()), !dbg !8954
  %1 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments.addr, align 8, !dbg !8955
  %2 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !8956
  %points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %2, i32 0, i32 2, !dbg !8957
  %3 = load %struct.SK_Point*, %struct.SK_Point** %points, align 8, !dbg !8957
  %arrayidx = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %3, i64 0, !dbg !8956
  call void @sk_appendStrokePoint(%struct.SK_Stroke* %1, %struct.SK_Point* %arrayidx), !dbg !8958
  %4 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments.addr, align 8, !dbg !8959
  %points1 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %4, i32 0, i32 2, !dbg !8960
  %5 = load %struct.SK_Point*, %struct.SK_Point** %points1, align 8, !dbg !8960
  %6 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments.addr, align 8, !dbg !8961
  %nb_points = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %6, i32 0, i32 3, !dbg !8962
  %7 = load i32, i32* %nb_points, align 8, !dbg !8962
  %sub = sub nsw i32 %7, 1, !dbg !8963
  %idxprom = sext i32 %sub to i64, !dbg !8959
  %arrayidx2 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %5, i64 %idxprom, !dbg !8959
  %p = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx2, i32 0, i32 0, !dbg !8964
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !8959
  store float* %arraydecay, float** %vec, align 8, !dbg !8965
  %8 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !8966
  %9 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !8967
  %10 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !8968
  %nb_points3 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %10, i32 0, i32 3, !dbg !8969
  %11 = load i32, i32* %nb_points3, align 8, !dbg !8969
  %sub4 = sub nsw i32 %11, 1, !dbg !8970
  call void @initStrokeIterator(%struct.BArcIterator* %8, %struct.SK_Stroke* %9, i32 0, i32 %sub4), !dbg !8971
  store i32 1, i32* %i, align 4, !dbg !8972
  store i32 0, i32* %j, align 4, !dbg !8974
  br label %for.cond, !dbg !8975

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load i32, i32* %i, align 4, !dbg !8976
  %13 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !8978
  %nb_points5 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %13, i32 0, i32 3, !dbg !8979
  %14 = load i32, i32* %nb_points5, align 8, !dbg !8979
  %cmp = icmp slt i32 %12, %14, !dbg !8980
  br i1 %cmp, label %for.body, label %for.end, !dbg !8981

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [3 x float]* %n, metadata !8982, metadata !DIExpression()), !dbg !8984
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !8985
  %15 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !8986
  %points7 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %15, i32 0, i32 2, !dbg !8987
  %16 = load %struct.SK_Point*, %struct.SK_Point** %points7, align 8, !dbg !8987
  %17 = load i32, i32* %i, align 4, !dbg !8988
  %idxprom8 = sext i32 %17 to i64, !dbg !8986
  %arrayidx9 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %16, i64 %idxprom8, !dbg !8986
  %p10 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx9, i32 0, i32 0, !dbg !8989
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %p10, i64 0, i64 0, !dbg !8986
  %18 = load float*, float** %vec, align 8, !dbg !8990
  call void @sub_v3_v3v3(float* %arraydecay6, float* %arraydecay11, float* %18), !dbg !8991
  %19 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !8992
  %20 = load i32, i32* %j, align 4, !dbg !8994
  %21 = load i32, i32* %i, align 4, !dbg !8995
  %22 = load float*, float** %vec, align 8, !dbg !8996
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !8997
  %call = call float @calcArcCorrelation(%struct.BArcIterator* %19, i32 %20, i32 %21, float* %22, float* %arraydecay12), !dbg !8998
  %23 = load float, float* %CORRELATION_THRESHOLD, align 4, !dbg !8999
  %cmp13 = fcmp olt float %call, %23, !dbg !9000
  br i1 %cmp13, label %if.then, label %if.end, !dbg !9001

if.then:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !9002
  %sub14 = sub nsw i32 %24, 1, !dbg !9004
  store i32 %sub14, i32* %j, align 4, !dbg !9005
  %25 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments.addr, align 8, !dbg !9006
  %26 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !9007
  %points15 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %26, i32 0, i32 2, !dbg !9008
  %27 = load %struct.SK_Point*, %struct.SK_Point** %points15, align 8, !dbg !9008
  %28 = load i32, i32* %j, align 4, !dbg !9009
  %idxprom16 = sext i32 %28 to i64, !dbg !9007
  %arrayidx17 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %27, i64 %idxprom16, !dbg !9007
  call void @sk_appendStrokePoint(%struct.SK_Stroke* %25, %struct.SK_Point* %arrayidx17), !dbg !9010
  %29 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments.addr, align 8, !dbg !9011
  %points18 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %29, i32 0, i32 2, !dbg !9012
  %30 = load %struct.SK_Point*, %struct.SK_Point** %points18, align 8, !dbg !9012
  %31 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments.addr, align 8, !dbg !9013
  %nb_points19 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %31, i32 0, i32 3, !dbg !9014
  %32 = load i32, i32* %nb_points19, align 8, !dbg !9014
  %sub20 = sub nsw i32 %32, 1, !dbg !9015
  %idxprom21 = sext i32 %sub20 to i64, !dbg !9011
  %arrayidx22 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %30, i64 %idxprom21, !dbg !9011
  %p23 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx22, i32 0, i32 0, !dbg !9016
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %p23, i64 0, i64 0, !dbg !9011
  store float* %arraydecay24, float** %vec, align 8, !dbg !9017
  %33 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments.addr, align 8, !dbg !9018
  %points25 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %33, i32 0, i32 2, !dbg !9019
  %34 = load %struct.SK_Point*, %struct.SK_Point** %points25, align 8, !dbg !9019
  %35 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments.addr, align 8, !dbg !9020
  %nb_points26 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %35, i32 0, i32 3, !dbg !9021
  %36 = load i32, i32* %nb_points26, align 8, !dbg !9021
  %sub27 = sub nsw i32 %36, 1, !dbg !9022
  %idxprom28 = sext i32 %sub27 to i64, !dbg !9018
  %arrayidx29 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %34, i64 %idxprom28, !dbg !9018
  %type = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %arrayidx29, i32 0, i32 4, !dbg !9023
  store i32 1, i32* %type, align 4, !dbg !9024
  br label %if.end, !dbg !9025

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !9026

for.inc:                                          ; preds = %if.end
  %37 = load i32, i32* %i, align 4, !dbg !9027
  %inc = add nsw i32 %37, 1, !dbg !9027
  store i32 %inc, i32* %i, align 4, !dbg !9027
  br label %for.cond, !dbg !9028, !llvm.loop !9029

for.end:                                          ; preds = %for.cond
  %38 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments.addr, align 8, !dbg !9031
  %39 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !9032
  %points30 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %39, i32 0, i32 2, !dbg !9033
  %40 = load %struct.SK_Point*, %struct.SK_Point** %points30, align 8, !dbg !9033
  %41 = load %struct.SK_Stroke*, %struct.SK_Stroke** %gesture.addr, align 8, !dbg !9034
  %nb_points31 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %41, i32 0, i32 3, !dbg !9035
  %42 = load i32, i32* %nb_points31, align 8, !dbg !9035
  %sub32 = sub nsw i32 %42, 1, !dbg !9036
  %idxprom33 = sext i32 %sub32 to i64, !dbg !9032
  %arrayidx34 = getelementptr inbounds %struct.SK_Point, %struct.SK_Point* %40, i64 %idxprom33, !dbg !9032
  call void @sk_appendStrokePoint(%struct.SK_Stroke* %38, %struct.SK_Point* %arrayidx34), !dbg !9037
  %43 = load %struct.SK_Stroke*, %struct.SK_Stroke** %segments.addr, align 8, !dbg !9038
  %nb_points35 = getelementptr inbounds %struct.SK_Stroke, %struct.SK_Stroke* %43, i32 0, i32 3, !dbg !9039
  %44 = load i32, i32* %nb_points35, align 8, !dbg !9039
  %sub36 = sub nsw i32 %44, 1, !dbg !9040
  ret i32 %sub36, !dbg !9041
}

declare dso_local zeroext i8 @isect_line_line_strict_v3(float*, float*, float*, float*, float*, float*) #2

declare dso_local zeroext i8 @ED_view3d_win_to_segment(%struct.ARegion*, %struct.View3D*, float*, float*, float*, i8 zeroext) #2

declare dso_local i32 @isect_line_line_v3(float*, float*, float*, float*, float*, float*) #2

declare dso_local void @BLI_sortlist(%struct.ListBase*, i32 (i8*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @cmpIntersections(i8* %i1, i8* %i2) #0 !dbg !9042 {
entry:
  %retval = alloca i32, align 4
  %i1.addr = alloca i8*, align 8
  %i2.addr = alloca i8*, align 8
  %isect1 = alloca %struct.SK_Intersection*, align 8
  %isect2 = alloca %struct.SK_Intersection*, align 8
  store i8* %i1, i8** %i1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %i1.addr, metadata !9047, metadata !DIExpression()), !dbg !9048
  store i8* %i2, i8** %i2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %i2.addr, metadata !9049, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.declare(metadata %struct.SK_Intersection** %isect1, metadata !9051, metadata !DIExpression()), !dbg !9054
  %0 = load i8*, i8** %i1.addr, align 8, !dbg !9055
  %1 = bitcast i8* %0 to %struct.SK_Intersection*, !dbg !9055
  store %struct.SK_Intersection* %1, %struct.SK_Intersection** %isect1, align 8, !dbg !9054
  call void @llvm.dbg.declare(metadata %struct.SK_Intersection** %isect2, metadata !9056, metadata !DIExpression()), !dbg !9057
  %2 = load i8*, i8** %i2.addr, align 8, !dbg !9058
  %3 = bitcast i8* %2 to %struct.SK_Intersection*, !dbg !9058
  store %struct.SK_Intersection* %3, %struct.SK_Intersection** %isect2, align 8, !dbg !9057
  %4 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect1, align 8, !dbg !9059
  %stroke = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %4, i32 0, i32 2, !dbg !9061
  %5 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke, align 8, !dbg !9061
  %6 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect2, align 8, !dbg !9062
  %stroke1 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %6, i32 0, i32 2, !dbg !9063
  %7 = load %struct.SK_Stroke*, %struct.SK_Stroke** %stroke1, align 8, !dbg !9063
  %cmp = icmp eq %struct.SK_Stroke* %5, %7, !dbg !9064
  br i1 %cmp, label %if.then, label %if.end21, !dbg !9065

if.then:                                          ; preds = %entry
  %8 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect1, align 8, !dbg !9066
  %before = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %8, i32 0, i32 3, !dbg !9069
  %9 = load i32, i32* %before, align 8, !dbg !9069
  %10 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect2, align 8, !dbg !9070
  %before2 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %10, i32 0, i32 3, !dbg !9071
  %11 = load i32, i32* %before2, align 8, !dbg !9071
  %cmp3 = icmp slt i32 %9, %11, !dbg !9072
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !9073

if.then4:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !9074
  br label %return, !dbg !9074

if.else:                                          ; preds = %if.then
  %12 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect1, align 8, !dbg !9076
  %before5 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %12, i32 0, i32 3, !dbg !9078
  %13 = load i32, i32* %before5, align 8, !dbg !9078
  %14 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect2, align 8, !dbg !9079
  %before6 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %14, i32 0, i32 3, !dbg !9080
  %15 = load i32, i32* %before6, align 8, !dbg !9080
  %cmp7 = icmp sgt i32 %13, %15, !dbg !9081
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !9082

if.then8:                                         ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !9083
  br label %return, !dbg !9083

if.else9:                                         ; preds = %if.else
  %16 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect1, align 8, !dbg !9085
  %lambda = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %16, i32 0, i32 7, !dbg !9088
  %17 = load float, float* %lambda, align 8, !dbg !9088
  %18 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect2, align 8, !dbg !9089
  %lambda10 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %18, i32 0, i32 7, !dbg !9090
  %19 = load float, float* %lambda10, align 8, !dbg !9090
  %cmp11 = fcmp olt float %17, %19, !dbg !9091
  br i1 %cmp11, label %if.then12, label %if.else13, !dbg !9092

if.then12:                                        ; preds = %if.else9
  store i32 -1, i32* %retval, align 4, !dbg !9093
  br label %return, !dbg !9093

if.else13:                                        ; preds = %if.else9
  %20 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect1, align 8, !dbg !9095
  %lambda14 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %20, i32 0, i32 7, !dbg !9097
  %21 = load float, float* %lambda14, align 8, !dbg !9097
  %22 = load %struct.SK_Intersection*, %struct.SK_Intersection** %isect2, align 8, !dbg !9098
  %lambda15 = getelementptr inbounds %struct.SK_Intersection, %struct.SK_Intersection* %22, i32 0, i32 7, !dbg !9099
  %23 = load float, float* %lambda15, align 8, !dbg !9099
  %cmp16 = fcmp ogt float %21, %23, !dbg !9100
  br i1 %cmp16, label %if.then17, label %if.end, !dbg !9101

if.then17:                                        ; preds = %if.else13
  store i32 1, i32* %retval, align 4, !dbg !9102
  br label %return, !dbg !9102

if.end:                                           ; preds = %if.else13
  br label %if.end18

if.end18:                                         ; preds = %if.end
  br label %if.end19

if.end19:                                         ; preds = %if.end18
  br label %if.end20

if.end20:                                         ; preds = %if.end19
  br label %if.end21, !dbg !9104

if.end21:                                         ; preds = %if.end20, %entry
  store i32 0, i32* %retval, align 4, !dbg !9105
  br label %return, !dbg !9105

return:                                           ; preds = %if.end21, %if.then17, %if.then12, %if.then8, %if.then4
  %24 = load i32, i32* %retval, align 4, !dbg !9106
  ret i32 %24, !dbg !9106
}

declare dso_local float @calcArcCorrelation(%struct.BArcIterator*, i32, i32, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sk_start_draw_gesture(%struct.SK_Sketch* %sketch) #0 !dbg !9107 {
entry:
  %sketch.addr = alloca %struct.SK_Sketch*, align 8
  store %struct.SK_Sketch* %sketch, %struct.SK_Sketch** %sketch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SK_Sketch** %sketch.addr, metadata !9108, metadata !DIExpression()), !dbg !9109
  %call = call %struct.SK_Stroke* @sk_createStroke(), !dbg !9110
  %0 = load %struct.SK_Sketch*, %struct.SK_Sketch** %sketch.addr, align 8, !dbg !9111
  %gesture = getelementptr inbounds %struct.SK_Sketch, %struct.SK_Sketch* %0, i32 0, i32 3, !dbg !9112
  store %struct.SK_Stroke* %call, %struct.SK_Stroke** %gesture, align 8, !dbg !9113
  ret void, !dbg !9114
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1942, !1943, !1944}
!llvm.ident = !{!1945}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "TEMPLATES_HASH", scope: !2, file: !3, line: 138, type: !380, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !86, globals: !258, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/editors/armature/editarmature_sketch.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !20, !25, !29, !37, !45, !71, !80}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 339, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19}
!9 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!16 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!17 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!18 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!19 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SK_PType", file: !21, line: 29, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_sketch.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!22 = !{!23, !24}
!23 = !DIEnumerator(name: "PT_CONTINUOUS", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "PT_EXACT", value: 1, isUnsigned: true)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SK_PMode", file: !21, line: 34, baseType: !7, size: 32, elements: !26)
!26 = !{!27, !28}
!27 = !DIEnumerator(name: "PT_SNAP", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "PT_PROJECT", value: 1, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !30, line: 119, baseType: !7, size: 32, elements: !31)
!30 = !DIFile(filename: "blender/source/blender/editors/include/ED_view3d.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!31 = !{!32, !33, !34, !35, !36}
!32 = !DIEnumerator(name: "V3D_PROJ_TEST_NOP", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_BB", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_WIN", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_NEAR", value: 4, isUnsigned: true)
!36 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_ZERO", value: 8, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !30, line: 109, baseType: !7, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43, !44}
!39 = !DIEnumerator(name: "V3D_PROJ_RET_OK", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_NEAR", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_ZERO", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_BB", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_WIN", value: 4, isUnsigned: true)
!44 = !DIEnumerator(name: "V3D_PROJ_RET_OVERFLOW", value: 5, isUnsigned: true)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBone_Flag", file: !46, line: 187, baseType: !7, size: 32, elements: !47)
!46 = !DIFile(filename: "blender/source/blender/makesdna/DNA_armature_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!47 = !{!48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70}
!48 = !DIEnumerator(name: "BONE_SELECTED", value: 1, isUnsigned: true)
!49 = !DIEnumerator(name: "BONE_ROOTSEL", value: 2, isUnsigned: true)
!50 = !DIEnumerator(name: "BONE_TIPSEL", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "BONE_TRANSFORM", value: 8, isUnsigned: true)
!52 = !DIEnumerator(name: "BONE_CONNECTED", value: 16, isUnsigned: true)
!53 = !DIEnumerator(name: "BONE_HIDDEN_P", value: 64, isUnsigned: true)
!54 = !DIEnumerator(name: "BONE_DONE", value: 128, isUnsigned: true)
!55 = !DIEnumerator(name: "BONE_DRAW_ACTIVE", value: 256, isUnsigned: true)
!56 = !DIEnumerator(name: "BONE_HINGE", value: 512, isUnsigned: true)
!57 = !DIEnumerator(name: "BONE_HIDDEN_A", value: 1024, isUnsigned: true)
!58 = !DIEnumerator(name: "BONE_MULT_VG_ENV", value: 2048, isUnsigned: true)
!59 = !DIEnumerator(name: "BONE_NO_DEFORM", value: 4096, isUnsigned: true)
!60 = !DIEnumerator(name: "BONE_UNKEYED", value: 8192, isUnsigned: true)
!61 = !DIEnumerator(name: "BONE_HINGE_CHILD_TRANSFORM", value: 16384, isUnsigned: true)
!62 = !DIEnumerator(name: "BONE_NO_SCALE", value: 32768, isUnsigned: true)
!63 = !DIEnumerator(name: "BONE_HIDDEN_PG", value: 65536, isUnsigned: true)
!64 = !DIEnumerator(name: "BONE_DRAWWIRE", value: 131072, isUnsigned: true)
!65 = !DIEnumerator(name: "BONE_NO_CYCLICOFFSET", value: 262144, isUnsigned: true)
!66 = !DIEnumerator(name: "BONE_EDITMODE_LOCKED", value: 524288, isUnsigned: true)
!67 = !DIEnumerator(name: "BONE_TRANSFORM_CHILD", value: 1048576, isUnsigned: true)
!68 = !DIEnumerator(name: "BONE_UNSELECTABLE", value: 2097152, isUnsigned: true)
!69 = !DIEnumerator(name: "BONE_NO_LOCAL_LOCATION", value: 4194304, isUnsigned: true)
!70 = !DIEnumerator(name: "BONE_RELATIVE_PARENTING", value: 8388608, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !72, line: 351, baseType: !7, size: 32, elements: !73)
!72 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!73 = !{!74, !75, !76, !77, !78, !79}
!74 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!75 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!76 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!77 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!78 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!79 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SnapMode", file: !81, line: 172, baseType: !7, size: 32, elements: !82)
!81 = !DIFile(filename: "blender/source/blender/editors/include/ED_transform.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!82 = !{!83, !84, !85}
!83 = !DIEnumerator(name: "SNAP_ALL", value: 0, isUnsigned: true)
!84 = !DIEnumerator(name: "SNAP_NOT_SELECTED", value: 1, isUnsigned: true)
!85 = !DIEnumerator(name: "SNAP_NOT_OBEDIT", value: 2, isUnsigned: true)
!86 = !{!87, !88, !91, !92, !161, !106, !225, !233, !240, !242}
!87 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!88 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !89, line: 87, baseType: !90)
!89 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!90 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!91 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!92 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64)
!93 = !DIDerivedType(tag: DW_TAG_typedef, name: "BGraph", file: !94, line: 62, baseType: !95)
!94 = !DIFile(filename: "blender/source/blender/blenlib/BLI_graph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!95 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BGraph", file: !94, line: 51, size: 576, elements: !96)
!96 = !{!97, !104, !105, !107, !141, !146, !156}
!97 = !DIDerivedType(tag: DW_TAG_member, name: "arcs", scope: !95, file: !94, line: 52, baseType: !98, size: 128)
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !99, line: 71, baseType: !100)
!99 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !99, line: 69, size: 128, elements: !101)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !100, file: !99, line: 70, baseType: !87, size: 64)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !100, file: !99, line: 70, baseType: !87, size: 64, offset: 64)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !95, file: !94, line: 53, baseType: !98, size: 128, offset: 128)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !95, file: !94, line: 55, baseType: !106, size: 32, offset: 256)
!106 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "free_arc", scope: !95, file: !94, line: 58, baseType: !108, size: 64, offset: 320)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "FreeArc", file: !94, line: 40, baseType: !109)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!110 = !DISubroutineType(types: !111)
!111 = !{null, !112}
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BArc", file: !94, line: 79, size: 448, elements: !114)
!114 = !{!115, !116, !117, !135, !136, !137, !138, !139, !140}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !113, file: !94, line: 80, baseType: !87, size: 64)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !113, file: !94, line: 80, baseType: !87, size: 64, offset: 64)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !113, file: !94, line: 81, baseType: !118, size: 64, offset: 128)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BNode", file: !94, line: 64, size: 576, elements: !120)
!120 = !{!121, !122, !123, !127, !128, !129, !131, !132, !133, !134}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !119, file: !94, line: 65, baseType: !87, size: 64)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !119, file: !94, line: 65, baseType: !87, size: 64, offset: 64)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !119, file: !94, line: 66, baseType: !124, size: 96, offset: 128)
!124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 96, elements: !125)
!125 = !{!126}
!126 = !DISubrange(count: 3)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !119, file: !94, line: 67, baseType: !91, size: 32, offset: 224)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "degree", scope: !119, file: !94, line: 69, baseType: !91, size: 32, offset: 256)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "arcs", scope: !119, file: !94, line: 70, baseType: !130, size: 64, offset: 320)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 64)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "subgraph_index", scope: !119, file: !94, line: 72, baseType: !91, size: 32, offset: 384)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_level", scope: !119, file: !94, line: 74, baseType: !91, size: 32, offset: 416)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flag", scope: !119, file: !94, line: 75, baseType: !91, size: 32, offset: 448)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_axis", scope: !119, file: !94, line: 76, baseType: !124, size: 96, offset: 480)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !113, file: !94, line: 81, baseType: !118, size: 64, offset: 192)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !113, file: !94, line: 82, baseType: !91, size: 32, offset: 256)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !113, file: !94, line: 84, baseType: !106, size: 32, offset: 288)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_level", scope: !113, file: !94, line: 86, baseType: !91, size: 32, offset: 320)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_group", scope: !113, file: !94, line: 87, baseType: !91, size: 32, offset: 352)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flag", scope: !113, file: !94, line: 88, baseType: !91, size: 32, offset: 384)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !95, file: !94, line: 59, baseType: !142, size: 64, offset: 384)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "FreeNode", file: !94, line: 41, baseType: !143)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!144 = !DISubroutineType(types: !145)
!145 = !{null, !118}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symmetry", scope: !95, file: !94, line: 60, baseType: !147, size: 64, offset: 448)
!147 = !DIDerivedType(tag: DW_TAG_typedef, name: "RadialSymmetry", file: !94, line: 42, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!149 = !DISubroutineType(types: !150)
!150 = !{null, !118, !151, !91}
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RadialArc", file: !94, line: 126, size: 192, elements: !153)
!153 = !{!154, !155}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "arc", scope: !152, file: !94, line: 127, baseType: !112, size: 64)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !152, file: !94, line: 128, baseType: !124, size: 96, offset: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "axial_symmetry", scope: !95, file: !94, line: 61, baseType: !157, size: 64, offset: 512)
!157 = !DIDerivedType(tag: DW_TAG_typedef, name: "AxialSymmetry", file: !94, line: 43, baseType: !158)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!159 = !DISubroutineType(types: !160)
!160 = !{null, !118, !118, !118, !112, !112}
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 64)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "SK_StrokeIterator", file: !3, line: 94, baseType: !163)
!163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SK_StrokeIterator", file: !3, line: 75, size: 896, elements: !164)
!164 = !{!165, !170, !172, !177, !179, !181, !183, !188, !190, !191, !192, !193, !194, !222, !223, !224}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !163, file: !3, line: 76, baseType: !166, size: 64)
!166 = !DIDerivedType(tag: DW_TAG_typedef, name: "HeadFct", file: !94, line: 101, baseType: !167)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!168 = !DISubroutineType(types: !169)
!169 = !{!87, !87}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !163, file: !3, line: 77, baseType: !171, size: 64, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "TailFct", file: !94, line: 102, baseType: !167)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "peek", scope: !163, file: !3, line: 78, baseType: !173, size: 64, offset: 128)
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "PeekFct", file: !94, line: 103, baseType: !174)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!175 = !DISubroutineType(types: !176)
!176 = !{!87, !87, !91}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !163, file: !3, line: 79, baseType: !178, size: 64, offset: 192)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "NextFct", file: !94, line: 104, baseType: !167)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "nextN", scope: !163, file: !3, line: 80, baseType: !180, size: 64, offset: 256)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "NextNFct", file: !94, line: 105, baseType: !174)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !163, file: !3, line: 81, baseType: !182, size: 64, offset: 320)
!182 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviousFct", file: !94, line: 106, baseType: !167)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !163, file: !3, line: 82, baseType: !184, size: 64, offset: 384)
!184 = !DIDerivedType(tag: DW_TAG_typedef, name: "StoppedFct", file: !94, line: 107, baseType: !185)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64)
!186 = !DISubroutineType(types: !187)
!187 = !{!91, !87}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !163, file: !3, line: 84, baseType: !189, size: 64, offset: 448)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 64)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !163, file: !3, line: 84, baseType: !189, size: 64, offset: 512)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !163, file: !3, line: 85, baseType: !106, size: 32, offset: 576)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !163, file: !3, line: 87, baseType: !91, size: 32, offset: 608)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !163, file: !3, line: 88, baseType: !91, size: 32, offset: 640)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !163, file: !3, line: 90, baseType: !195, size: 64, offset: 704)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "SK_Stroke", file: !21, line: 55, baseType: !197)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SK_Stroke", file: !21, line: 48, size: 320, elements: !198)
!198 = !{!199, !201, !202, !219, !220, !221}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !197, file: !21, line: 49, baseType: !200, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !197, file: !21, line: 49, baseType: !200, size: 64, offset: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !197, file: !21, line: 51, baseType: !203, size: 64, offset: 128)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "SK_Point", file: !21, line: 46, baseType: !205)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SK_Point", file: !21, line: 39, size: 320, elements: !206)
!206 = !{!207, !208, !213, !214, !215, !217}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !205, file: !21, line: 40, baseType: !124, size: 96)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "p2d", scope: !205, file: !21, line: 41, baseType: !209, size: 32, offset: 96)
!209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 32, elements: !211)
!210 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!211 = !{!212}
!212 = !DISubrange(count: 2)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !205, file: !21, line: 42, baseType: !124, size: 96, offset: 128)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !205, file: !21, line: 43, baseType: !106, size: 32, offset: 224)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !205, file: !21, line: 44, baseType: !216, size: 32, offset: 256)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "SK_PType", file: !21, line: 32, baseType: !20)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !205, file: !21, line: 45, baseType: !218, size: 32, offset: 288)
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "SK_PMode", file: !21, line: 37, baseType: !25)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "nb_points", scope: !197, file: !21, line: 52, baseType: !91, size: 32, offset: 192)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !197, file: !21, line: 53, baseType: !91, size: 32, offset: 224)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !197, file: !21, line: 54, baseType: !91, size: 32, offset: 256)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !163, file: !3, line: 91, baseType: !91, size: 32, offset: 768)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !163, file: !3, line: 92, baseType: !91, size: 32, offset: 800)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !163, file: !3, line: 93, baseType: !91, size: 32, offset: 832)
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!226 = !DISubroutineType(types: !227)
!227 = !{!91, !228}
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !230, line: 69, baseType: !231)
!230 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!231 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !232, line: 44, flags: DIFlagFwdDecl)
!232 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gh_Entry", file: !235, line: 94, size: 192, elements: !236)
!235 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!236 = !{!237, !238, !239}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !234, file: !235, line: 94, baseType: !87, size: 64)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !234, file: !235, line: 94, baseType: !87, size: 64, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !234, file: !235, line: 94, baseType: !87, size: 64, offset: 128)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 64)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "BArc", file: !94, line: 89, baseType: !113)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "BArcIterator", file: !94, line: 123, baseType: !244)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BArcIterator", file: !94, line: 109, size: 704, elements: !245)
!245 = !{!246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !244, file: !94, line: 110, baseType: !166, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !244, file: !94, line: 111, baseType: !171, size: 64, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "peek", scope: !244, file: !94, line: 112, baseType: !173, size: 64, offset: 128)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !244, file: !94, line: 113, baseType: !178, size: 64, offset: 192)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "nextN", scope: !244, file: !94, line: 114, baseType: !180, size: 64, offset: 256)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !244, file: !94, line: 115, baseType: !182, size: 64, offset: 320)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !244, file: !94, line: 116, baseType: !184, size: 64, offset: 384)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !244, file: !94, line: 118, baseType: !189, size: 64, offset: 448)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !244, file: !94, line: 118, baseType: !189, size: 64, offset: 512)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !244, file: !94, line: 119, baseType: !106, size: 32, offset: 576)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !244, file: !94, line: 121, baseType: !91, size: 32, offset: 608)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !244, file: !94, line: 122, baseType: !91, size: 32, offset: 640)
!258 = !{!0, !259, !261, !265, !1893, !1895, !1897}
!259 = !DIGlobalVariableExpression(var: !260, expr: !DIExpression())
!260 = distinct !DIGlobalVariable(name: "TEMPLATES_CURRENT", scope: !2, file: !3, line: 137, type: !91, isLocal: true, isDefinition: true)
!261 = !DIGlobalVariableExpression(var: !262, expr: !DIExpression())
!262 = distinct !DIGlobalVariable(name: "TEMPLATES_MENU", scope: !2, file: !3, line: 136, type: !263, isLocal: true, isDefinition: true)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!264 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!265 = !DIGlobalVariableExpression(var: !266, expr: !DIExpression())
!266 = distinct !DIGlobalVariable(name: "TEMPLATE_RIGG", scope: !2, file: !3, line: 139, type: !267, isLocal: true, isDefinition: true)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "RigGraph", file: !269, line: 79, baseType: !270)
!269 = !DIFile(filename: "blender/source/blender/editors/armature/BIF_retarget.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RigGraph", file: !269, line: 51, size: 1280, elements: !271)
!271 = !{!272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !283, !349, !369, !375, !379, !382, !383}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "arcs", scope: !270, file: !269, line: 52, baseType: !98, size: 128)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !270, file: !269, line: 53, baseType: !98, size: 128, offset: 128)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !270, file: !269, line: 55, baseType: !106, size: 32, offset: 256)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "free_arc", scope: !270, file: !269, line: 57, baseType: !108, size: 64, offset: 320)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !270, file: !269, line: 58, baseType: !142, size: 64, offset: 384)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symmetry", scope: !270, file: !269, line: 59, baseType: !147, size: 64, offset: 448)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "axial_symmetry", scope: !270, file: !269, line: 60, baseType: !157, size: 64, offset: 512)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !270, file: !269, line: 63, baseType: !91, size: 32, offset: 576)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "controls", scope: !270, file: !269, line: 65, baseType: !98, size: 128, offset: 640)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "editbones", scope: !270, file: !269, line: 66, baseType: !282, size: 64, offset: 768)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !270, file: !269, line: 68, baseType: !284, size: 64, offset: 832)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RigNode", file: !269, line: 81, size: 640, elements: !286)
!286 = !{!287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !285, file: !269, line: 82, baseType: !87, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !285, file: !269, line: 82, baseType: !87, size: 64, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !285, file: !269, line: 83, baseType: !124, size: 96, offset: 128)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !285, file: !269, line: 84, baseType: !91, size: 32, offset: 224)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "degree", scope: !285, file: !269, line: 86, baseType: !91, size: 32, offset: 256)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "arcs", scope: !285, file: !269, line: 87, baseType: !130, size: 64, offset: 320)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "subgraph_index", scope: !285, file: !269, line: 89, baseType: !91, size: 32, offset: 384)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_level", scope: !285, file: !269, line: 91, baseType: !91, size: 32, offset: 416)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flag", scope: !285, file: !269, line: 92, baseType: !91, size: 32, offset: 448)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_axis", scope: !285, file: !269, line: 93, baseType: !124, size: 96, offset: 480)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "link_mesh", scope: !285, file: !269, line: 96, baseType: !298, size: 64, offset: 576)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!299 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReebNode", file: !300, line: 91, baseType: !301)
!300 = !DIFile(filename: "blender/source/blender/editors/armature/reeb.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReebNode", file: !300, line: 69, size: 896, elements: !302)
!302 = !{!303, !304, !305, !306, !307, !308, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348}
!303 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !301, file: !300, line: 70, baseType: !87, size: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !301, file: !300, line: 70, baseType: !87, size: 64, offset: 64)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !301, file: !300, line: 71, baseType: !124, size: 96, offset: 128)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !301, file: !300, line: 72, baseType: !91, size: 32, offset: 224)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "degree", scope: !301, file: !300, line: 74, baseType: !91, size: 32, offset: 256)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "arcs", scope: !301, file: !300, line: 75, baseType: !309, size: 64, offset: 320)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReebArc", file: !300, line: 101, size: 896, elements: !312)
!312 = !{!313, !314, !315, !317, !318, !319, !320, !321, !322, !323, !324, !325, !333, !337, !338}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !311, file: !300, line: 102, baseType: !87, size: 64)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !311, file: !300, line: 102, baseType: !87, size: 64, offset: 64)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !311, file: !300, line: 103, baseType: !316, size: 64, offset: 128)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !311, file: !300, line: 103, baseType: !316, size: 64, offset: 192)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !311, file: !300, line: 104, baseType: !91, size: 32, offset: 256)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !311, file: !300, line: 106, baseType: !106, size: 32, offset: 288)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_level", scope: !311, file: !300, line: 108, baseType: !91, size: 32, offset: 320)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_group", scope: !311, file: !300, line: 109, baseType: !91, size: 32, offset: 352)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flag", scope: !311, file: !300, line: 110, baseType: !91, size: 32, offset: 384)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !311, file: !300, line: 113, baseType: !98, size: 128, offset: 448)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "bcount", scope: !311, file: !300, line: 114, baseType: !91, size: 32, offset: 576)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !311, file: !300, line: 115, baseType: !326, size: 64, offset: 640)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EmbedBucket", file: !300, line: 62, size: 256, elements: !328)
!328 = !{!329, !330, !331, !332}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !327, file: !300, line: 63, baseType: !106, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "nv", scope: !327, file: !300, line: 64, baseType: !91, size: 32, offset: 32)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !327, file: !300, line: 65, baseType: !124, size: 96, offset: 64)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !327, file: !300, line: 66, baseType: !124, size: 96, offset: 160)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "faces", scope: !311, file: !300, line: 117, baseType: !334, size: 64, offset: 704)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!335 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !336, line: 47, flags: DIFlagFwdDecl)
!336 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!337 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !311, file: !300, line: 118, baseType: !106, size: 32, offset: 768)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "link_up", scope: !311, file: !300, line: 119, baseType: !310, size: 64, offset: 832)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "subgraph_index", scope: !301, file: !300, line: 77, baseType: !91, size: 32, offset: 384)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_level", scope: !301, file: !300, line: 79, baseType: !91, size: 32, offset: 416)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flag", scope: !301, file: !300, line: 80, baseType: !91, size: 32, offset: 448)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_axis", scope: !301, file: !300, line: 81, baseType: !124, size: 96, offset: 480)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !301, file: !300, line: 84, baseType: !124, size: 96, offset: 576)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !301, file: !300, line: 86, baseType: !91, size: 32, offset: 672)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !301, file: !300, line: 87, baseType: !106, size: 32, offset: 704)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "multi_level", scope: !301, file: !300, line: 88, baseType: !91, size: 32, offset: 736)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "link_down", scope: !301, file: !300, line: 89, baseType: !316, size: 64, offset: 768)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "link_up", scope: !301, file: !300, line: 90, baseType: !316, size: 64, offset: 832)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "link_mesh", scope: !270, file: !269, line: 69, baseType: !350, size: 64, offset: 896)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReebGraph", file: !300, line: 60, baseType: !352)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReebGraph", file: !300, line: 43, size: 832, elements: !353)
!353 = !{!354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !366, !367}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "arcs", scope: !352, file: !300, line: 44, baseType: !98, size: 128)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !352, file: !300, line: 45, baseType: !98, size: 128, offset: 128)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !352, file: !300, line: 47, baseType: !106, size: 32, offset: 256)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "free_arc", scope: !352, file: !300, line: 49, baseType: !108, size: 64, offset: 320)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !352, file: !300, line: 50, baseType: !142, size: 64, offset: 384)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symmetry", scope: !352, file: !300, line: 51, baseType: !147, size: 64, offset: 448)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "axial_symmetry", scope: !352, file: !300, line: 52, baseType: !157, size: 64, offset: 512)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !352, file: !300, line: 55, baseType: !91, size: 32, offset: 576)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "totnodes", scope: !352, file: !300, line: 56, baseType: !91, size: 32, offset: 608)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "emap", scope: !352, file: !300, line: 57, baseType: !364, size: 64, offset: 640)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64)
!365 = !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeHash", file: !300, line: 38, flags: DIFlagFwdDecl)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "multi_level", scope: !352, file: !300, line: 58, baseType: !91, size: 32, offset: 704)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "link_up", scope: !352, file: !300, line: 59, baseType: !368, size: 64, offset: 768)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "task_scheduler", scope: !270, file: !269, line: 72, baseType: !370, size: 64, offset: 960)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskScheduler", file: !372, line: 44, baseType: !373)
!372 = !DIFile(filename: "blender/source/blender/blenlib/BLI_task.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!373 = !DICompositeType(tag: DW_TAG_structure_type, name: "TaskScheduler", file: !374, line: 57, flags: DIFlagFwdDecl)
!374 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!375 = !DIDerivedType(tag: DW_TAG_member, name: "task_pool", scope: !270, file: !269, line: 73, baseType: !376, size: 64, offset: 1024)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskPool", file: !372, line: 75, baseType: !378)
!378 = !DICompositeType(tag: DW_TAG_structure_type, name: "TaskPool", file: !372, line: 75, flags: DIFlagFwdDecl)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "bones_map", scope: !270, file: !269, line: 75, baseType: !380, size: 64, offset: 1088)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !235, line: 48, baseType: !335)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "controls_map", scope: !270, file: !269, line: 76, baseType: !380, size: 64, offset: 1152)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !270, file: !269, line: 78, baseType: !384, size: 64, offset: 1216)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !6, line: 115, size: 11392, elements: !386)
!386 = !{!387, !449, !453, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !470, !480, !493, !494, !533, !534, !537, !538, !554, !555, !556, !557, !558, !559, !560, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !579, !580, !581, !582, !583, !584, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !644, !645, !646, !647, !648, !649, !650, !651, !652, !655, !658, !661, !662, !663, !664, !665, !668, !671, !674, !675, !681, !682, !683, !684, !685, !686, !687, !690, !693, !695, !1881, !1882}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !385, file: !6, line: 116, baseType: !388, size: 960)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !389, line: 130, baseType: !390)
!389 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !389, line: 117, size: 960, elements: !391)
!391 = !{!392, !393, !394, !396, !415, !419, !420, !421, !422, !423}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !390, file: !389, line: 118, baseType: !87, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !390, file: !389, line: 118, baseType: !87, size: 64, offset: 64)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !390, file: !389, line: 119, baseType: !395, size: 64, offset: 128)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !390, file: !389, line: 120, baseType: !397, size: 64, offset: 192)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !389, line: 136, size: 17600, elements: !399)
!399 = !{!400, !401, !403, !406, !410, !411, !412}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !398, file: !389, line: 137, baseType: !388, size: 960)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !398, file: !389, line: 138, baseType: !402, size: 64, offset: 960)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !398, file: !389, line: 139, baseType: !404, size: 64, offset: 1024)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !389, line: 43, flags: DIFlagFwdDecl)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !398, file: !389, line: 140, baseType: !407, size: 8192, offset: 1088)
!407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 8192, elements: !408)
!408 = !{!409}
!409 = !DISubrange(count: 1024)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !398, file: !389, line: 141, baseType: !407, size: 8192, offset: 9280)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !398, file: !389, line: 148, baseType: !397, size: 64, offset: 17472)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !398, file: !389, line: 150, baseType: !413, size: 64, offset: 17536)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!414 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !389, line: 45, flags: DIFlagFwdDecl)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !390, file: !389, line: 121, baseType: !416, size: 528, offset: 256)
!416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 528, elements: !417)
!417 = !{!418}
!418 = !DISubrange(count: 66)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !390, file: !389, line: 126, baseType: !210, size: 16, offset: 784)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !390, file: !389, line: 127, baseType: !91, size: 32, offset: 800)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !390, file: !389, line: 128, baseType: !91, size: 32, offset: 832)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !390, file: !389, line: 128, baseType: !91, size: 32, offset: 864)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !390, file: !389, line: 129, baseType: !424, size: 64, offset: 896)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !389, line: 75, baseType: !426)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !389, line: 62, size: 1024, elements: !427)
!427 = !{!428, !430, !431, !432, !433, !434, !438, !439, !447, !448}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !426, file: !389, line: 63, baseType: !429, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !426, file: !389, line: 63, baseType: !429, size: 64, offset: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !426, file: !389, line: 64, baseType: !264, size: 8, offset: 128)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !426, file: !389, line: 64, baseType: !264, size: 8, offset: 136)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !426, file: !389, line: 65, baseType: !210, size: 16, offset: 144)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !426, file: !389, line: 66, baseType: !435, size: 512, offset: 160)
!435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 512, elements: !436)
!436 = !{!437}
!437 = !DISubrange(count: 64)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !426, file: !389, line: 67, baseType: !91, size: 32, offset: 672)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !426, file: !389, line: 69, baseType: !440, size: 256, offset: 704)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !389, line: 60, baseType: !441)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !389, line: 48, size: 256, elements: !442)
!442 = !{!443, !444, !445, !446}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !441, file: !389, line: 49, baseType: !87, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !441, file: !389, line: 58, baseType: !98, size: 128, offset: 64)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !441, file: !389, line: 59, baseType: !91, size: 32, offset: 192)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !441, file: !389, line: 59, baseType: !91, size: 32, offset: 224)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !426, file: !389, line: 70, baseType: !91, size: 32, offset: 960)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !426, file: !389, line: 74, baseType: !91, size: 32, offset: 992)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !385, file: !6, line: 117, baseType: !450, size: 64, offset: 960)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !452, line: 45, flags: DIFlagFwdDecl)
!452 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!453 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !385, file: !6, line: 119, baseType: !454, size: 64, offset: 1024)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !6, line: 57, flags: DIFlagFwdDecl)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !385, file: !6, line: 121, baseType: !210, size: 16, offset: 1088)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !385, file: !6, line: 121, baseType: !210, size: 16, offset: 1104)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !385, file: !6, line: 122, baseType: !91, size: 32, offset: 1120)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !385, file: !6, line: 122, baseType: !91, size: 32, offset: 1152)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !385, file: !6, line: 122, baseType: !91, size: 32, offset: 1184)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !385, file: !6, line: 123, baseType: !435, size: 512, offset: 1216)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !385, file: !6, line: 124, baseType: !384, size: 64, offset: 1728)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !385, file: !6, line: 124, baseType: !384, size: 64, offset: 1792)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !385, file: !6, line: 127, baseType: !384, size: 64, offset: 1856)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !385, file: !6, line: 127, baseType: !384, size: 64, offset: 1920)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !385, file: !6, line: 127, baseType: !384, size: 64, offset: 1984)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !385, file: !6, line: 128, baseType: !468, size: 64, offset: 2048)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !452, line: 46, flags: DIFlagFwdDecl)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !385, file: !6, line: 130, baseType: !471, size: 64, offset: 2112)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !6, line: 97, size: 832, elements: !473)
!473 = !{!474, !478, !479}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !472, file: !6, line: 98, baseType: !475, size: 768)
!475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 768, elements: !476)
!476 = !{!477, !126}
!477 = !DISubrange(count: 8)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !472, file: !6, line: 99, baseType: !91, size: 32, offset: 768)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !472, file: !6, line: 99, baseType: !91, size: 32, offset: 800)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !385, file: !6, line: 131, baseType: !481, size: 64, offset: 2176)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !336, line: 486, size: 1600, elements: !483)
!483 = !{!484, !485, !486, !487, !488, !489, !490, !491, !492}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !482, file: !336, line: 487, baseType: !388, size: 960)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !482, file: !336, line: 489, baseType: !98, size: 128, offset: 960)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !482, file: !336, line: 490, baseType: !98, size: 128, offset: 1088)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !482, file: !336, line: 491, baseType: !98, size: 128, offset: 1216)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !482, file: !336, line: 492, baseType: !98, size: 128, offset: 1344)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !482, file: !336, line: 494, baseType: !91, size: 32, offset: 1472)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !482, file: !336, line: 495, baseType: !91, size: 32, offset: 1504)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !482, file: !336, line: 497, baseType: !91, size: 32, offset: 1536)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !482, file: !336, line: 498, baseType: !91, size: 32, offset: 1568)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !385, file: !6, line: 132, baseType: !481, size: 64, offset: 2240)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !385, file: !6, line: 133, baseType: !495, size: 64, offset: 2304)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !336, line: 334, size: 1728, elements: !497)
!497 = !{!498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !532}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !496, file: !336, line: 335, baseType: !98, size: 128)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !496, file: !336, line: 336, baseType: !334, size: 64, offset: 128)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !496, file: !336, line: 338, baseType: !210, size: 16, offset: 192)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !496, file: !336, line: 338, baseType: !210, size: 16, offset: 208)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !496, file: !336, line: 339, baseType: !7, size: 32, offset: 224)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !496, file: !336, line: 340, baseType: !91, size: 32, offset: 256)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !496, file: !336, line: 342, baseType: !106, size: 32, offset: 288)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !496, file: !336, line: 343, baseType: !124, size: 96, offset: 320)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !496, file: !336, line: 344, baseType: !124, size: 96, offset: 416)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !496, file: !336, line: 347, baseType: !98, size: 128, offset: 512)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !496, file: !336, line: 349, baseType: !91, size: 32, offset: 640)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !496, file: !336, line: 350, baseType: !91, size: 32, offset: 672)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !496, file: !336, line: 351, baseType: !87, size: 64, offset: 704)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !496, file: !336, line: 352, baseType: !87, size: 64, offset: 768)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !496, file: !336, line: 354, baseType: !513, size: 384, offset: 832)
!513 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !336, line: 116, baseType: !514)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !336, line: 94, size: 384, elements: !515)
!515 = !{!516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !514, file: !336, line: 96, baseType: !91, size: 32)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !514, file: !336, line: 96, baseType: !91, size: 32, offset: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !514, file: !336, line: 97, baseType: !91, size: 32, offset: 64)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !514, file: !336, line: 97, baseType: !91, size: 32, offset: 96)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !514, file: !336, line: 99, baseType: !210, size: 16, offset: 128)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !514, file: !336, line: 100, baseType: !210, size: 16, offset: 144)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !514, file: !336, line: 102, baseType: !210, size: 16, offset: 160)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !514, file: !336, line: 105, baseType: !210, size: 16, offset: 176)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !514, file: !336, line: 108, baseType: !210, size: 16, offset: 192)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !514, file: !336, line: 109, baseType: !210, size: 16, offset: 208)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !514, file: !336, line: 111, baseType: !210, size: 16, offset: 224)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !514, file: !336, line: 112, baseType: !210, size: 16, offset: 240)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !514, file: !336, line: 114, baseType: !91, size: 32, offset: 256)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !514, file: !336, line: 114, baseType: !91, size: 32, offset: 288)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !514, file: !336, line: 115, baseType: !91, size: 32, offset: 320)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !514, file: !336, line: 115, baseType: !91, size: 32, offset: 352)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !496, file: !336, line: 355, baseType: !435, size: 512, offset: 1216)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !385, file: !6, line: 134, baseType: !87, size: 64, offset: 2368)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !385, file: !6, line: 136, baseType: !535, size: 64, offset: 2432)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!536 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !6, line: 58, flags: DIFlagFwdDecl)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !385, file: !6, line: 138, baseType: !513, size: 384, offset: 2496)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !385, file: !6, line: 139, baseType: !539, size: 64, offset: 2880)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !336, line: 80, baseType: !541)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !336, line: 72, size: 192, elements: !542)
!542 = !{!543, !550, !551, !552, !553}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !541, file: !336, line: 73, baseType: !544, size: 64)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !336, line: 59, baseType: !546)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !336, line: 56, size: 128, elements: !547)
!547 = !{!548, !549}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !546, file: !336, line: 57, baseType: !124, size: 96)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !546, file: !336, line: 58, baseType: !91, size: 32, offset: 96)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !541, file: !336, line: 74, baseType: !91, size: 32, offset: 64)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !541, file: !336, line: 76, baseType: !91, size: 32, offset: 96)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !541, file: !336, line: 77, baseType: !91, size: 32, offset: 128)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !541, file: !336, line: 79, baseType: !91, size: 32, offset: 160)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !385, file: !6, line: 141, baseType: !98, size: 128, offset: 2944)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !385, file: !6, line: 142, baseType: !98, size: 128, offset: 3072)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !385, file: !6, line: 143, baseType: !98, size: 128, offset: 3200)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !385, file: !6, line: 144, baseType: !98, size: 128, offset: 3328)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !385, file: !6, line: 146, baseType: !91, size: 32, offset: 3456)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !385, file: !6, line: 147, baseType: !91, size: 32, offset: 3488)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !385, file: !6, line: 150, baseType: !561, size: 64, offset: 3520)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !6, line: 50, flags: DIFlagFwdDecl)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !385, file: !6, line: 151, baseType: !263, size: 64, offset: 3584)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !385, file: !6, line: 152, baseType: !91, size: 32, offset: 3648)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !385, file: !6, line: 153, baseType: !91, size: 32, offset: 3680)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !385, file: !6, line: 156, baseType: !124, size: 96, offset: 3712)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !385, file: !6, line: 156, baseType: !124, size: 96, offset: 3808)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !385, file: !6, line: 156, baseType: !124, size: 96, offset: 3904)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !385, file: !6, line: 157, baseType: !124, size: 96, offset: 4000)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !385, file: !6, line: 158, baseType: !124, size: 96, offset: 4096)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !385, file: !6, line: 159, baseType: !124, size: 96, offset: 4192)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !385, file: !6, line: 160, baseType: !124, size: 96, offset: 4288)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !385, file: !6, line: 160, baseType: !124, size: 96, offset: 4384)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !385, file: !6, line: 161, baseType: !576, size: 128, offset: 4480)
!576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 128, elements: !577)
!577 = !{!578}
!578 = !DISubrange(count: 4)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !385, file: !6, line: 161, baseType: !576, size: 128, offset: 4608)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !385, file: !6, line: 162, baseType: !124, size: 96, offset: 4736)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !385, file: !6, line: 162, baseType: !124, size: 96, offset: 4832)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !385, file: !6, line: 163, baseType: !106, size: 32, offset: 4928)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !385, file: !6, line: 163, baseType: !106, size: 32, offset: 4960)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !385, file: !6, line: 164, baseType: !585, size: 512, offset: 4992)
!585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 512, elements: !586)
!586 = !{!578, !578}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !385, file: !6, line: 165, baseType: !585, size: 512, offset: 5504)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !385, file: !6, line: 166, baseType: !585, size: 512, offset: 6016)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !385, file: !6, line: 167, baseType: !585, size: 512, offset: 6528)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !385, file: !6, line: 176, baseType: !585, size: 512, offset: 7040)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !385, file: !6, line: 178, baseType: !7, size: 32, offset: 7552)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !385, file: !6, line: 180, baseType: !210, size: 16, offset: 7584)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !385, file: !6, line: 181, baseType: !210, size: 16, offset: 7600)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !385, file: !6, line: 183, baseType: !210, size: 16, offset: 7616)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !385, file: !6, line: 183, baseType: !210, size: 16, offset: 7632)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !385, file: !6, line: 184, baseType: !210, size: 16, offset: 7648)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !385, file: !6, line: 184, baseType: !210, size: 16, offset: 7664)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !385, file: !6, line: 185, baseType: !210, size: 16, offset: 7680)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !385, file: !6, line: 186, baseType: !210, size: 16, offset: 7696)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !385, file: !6, line: 187, baseType: !210, size: 16, offset: 7712)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !385, file: !6, line: 188, baseType: !264, size: 8, offset: 7728)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !385, file: !6, line: 189, baseType: !264, size: 8, offset: 7736)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !385, file: !6, line: 192, baseType: !91, size: 32, offset: 7744)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !385, file: !6, line: 192, baseType: !91, size: 32, offset: 7776)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !385, file: !6, line: 192, baseType: !91, size: 32, offset: 7808)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !385, file: !6, line: 192, baseType: !91, size: 32, offset: 7840)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !385, file: !6, line: 194, baseType: !91, size: 32, offset: 7872)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !385, file: !6, line: 202, baseType: !106, size: 32, offset: 7904)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !385, file: !6, line: 202, baseType: !106, size: 32, offset: 7936)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !385, file: !6, line: 202, baseType: !106, size: 32, offset: 7968)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !385, file: !6, line: 211, baseType: !106, size: 32, offset: 8000)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !385, file: !6, line: 212, baseType: !106, size: 32, offset: 8032)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !385, file: !6, line: 213, baseType: !106, size: 32, offset: 8064)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !385, file: !6, line: 214, baseType: !106, size: 32, offset: 8096)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !385, file: !6, line: 215, baseType: !106, size: 32, offset: 8128)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !385, file: !6, line: 216, baseType: !106, size: 32, offset: 8160)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !385, file: !6, line: 219, baseType: !106, size: 32, offset: 8192)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !385, file: !6, line: 220, baseType: !106, size: 32, offset: 8224)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !385, file: !6, line: 221, baseType: !106, size: 32, offset: 8256)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !385, file: !6, line: 224, baseType: !621, size: 16, offset: 8288)
!621 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !385, file: !6, line: 224, baseType: !621, size: 16, offset: 8304)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !385, file: !6, line: 226, baseType: !210, size: 16, offset: 8320)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !385, file: !6, line: 228, baseType: !264, size: 8, offset: 8336)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !385, file: !6, line: 229, baseType: !264, size: 8, offset: 8344)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !385, file: !6, line: 231, baseType: !210, size: 16, offset: 8352)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !385, file: !6, line: 232, baseType: !264, size: 8, offset: 8368)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !385, file: !6, line: 233, baseType: !264, size: 8, offset: 8376)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !385, file: !6, line: 234, baseType: !106, size: 32, offset: 8384)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !385, file: !6, line: 235, baseType: !106, size: 32, offset: 8416)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !385, file: !6, line: 237, baseType: !98, size: 128, offset: 8448)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !385, file: !6, line: 238, baseType: !98, size: 128, offset: 8576)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !385, file: !6, line: 239, baseType: !98, size: 128, offset: 8704)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !385, file: !6, line: 240, baseType: !98, size: 128, offset: 8832)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !385, file: !6, line: 242, baseType: !106, size: 32, offset: 8960)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !385, file: !6, line: 244, baseType: !210, size: 16, offset: 8992)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !385, file: !6, line: 245, baseType: !621, size: 16, offset: 9008)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !385, file: !6, line: 246, baseType: !576, size: 128, offset: 9024)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !385, file: !6, line: 248, baseType: !91, size: 32, offset: 9152)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !385, file: !6, line: 249, baseType: !91, size: 32, offset: 9184)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !385, file: !6, line: 251, baseType: !642, size: 64, offset: 9216)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !6, line: 251, flags: DIFlagFwdDecl)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !385, file: !6, line: 253, baseType: !264, size: 8, offset: 9280)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !385, file: !6, line: 254, baseType: !264, size: 8, offset: 9288)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !385, file: !6, line: 255, baseType: !210, size: 16, offset: 9296)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !385, file: !6, line: 256, baseType: !124, size: 96, offset: 9312)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !385, file: !6, line: 258, baseType: !98, size: 128, offset: 9408)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !385, file: !6, line: 259, baseType: !98, size: 128, offset: 9536)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !385, file: !6, line: 260, baseType: !98, size: 128, offset: 9664)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !385, file: !6, line: 261, baseType: !98, size: 128, offset: 9792)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !385, file: !6, line: 263, baseType: !653, size: 64, offset: 9920)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !6, line: 52, flags: DIFlagFwdDecl)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !385, file: !6, line: 264, baseType: !656, size: 64, offset: 9984)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !6, line: 53, flags: DIFlagFwdDecl)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !385, file: !6, line: 265, baseType: !659, size: 64, offset: 10048)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !336, line: 46, flags: DIFlagFwdDecl)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !385, file: !6, line: 267, baseType: !264, size: 8, offset: 10112)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !385, file: !6, line: 268, baseType: !264, size: 8, offset: 10120)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !385, file: !6, line: 269, baseType: !210, size: 16, offset: 10128)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !385, file: !6, line: 270, baseType: !106, size: 32, offset: 10144)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !385, file: !6, line: 272, baseType: !666, size: 64, offset: 10176)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !6, line: 54, flags: DIFlagFwdDecl)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !385, file: !6, line: 275, baseType: !669, size: 64, offset: 10240)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !6, line: 275, flags: DIFlagFwdDecl)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !385, file: !6, line: 277, baseType: !672, size: 64, offset: 10304)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !6, line: 56, flags: DIFlagFwdDecl)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !385, file: !6, line: 277, baseType: !672, size: 64, offset: 10368)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !385, file: !6, line: 278, baseType: !676, size: 64, offset: 10432)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !677, line: 27, baseType: !678)
!677 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !679, line: 45, baseType: !680)
!679 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!680 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !385, file: !6, line: 279, baseType: !676, size: 64, offset: 10496)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !385, file: !6, line: 280, baseType: !7, size: 32, offset: 10560)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !385, file: !6, line: 281, baseType: !7, size: 32, offset: 10592)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !385, file: !6, line: 283, baseType: !98, size: 128, offset: 10624)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !385, file: !6, line: 284, baseType: !98, size: 128, offset: 10752)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !385, file: !6, line: 285, baseType: !282, size: 64, offset: 10880)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !385, file: !6, line: 287, baseType: !688, size: 64, offset: 10944)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !6, line: 59, flags: DIFlagFwdDecl)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !385, file: !6, line: 288, baseType: !691, size: 64, offset: 11008)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !6, line: 288, flags: DIFlagFwdDecl)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !385, file: !6, line: 290, baseType: !694, size: 64, offset: 11072)
!694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 64, elements: !211)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !385, file: !6, line: 291, baseType: !696, size: 64, offset: 11136)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !698, line: 65, baseType: !699)
!698 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !698, line: 50, size: 320, elements: !700)
!700 = !{!701, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !699, file: !698, line: 51, baseType: !702, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !704, line: 1216, size: 39680, elements: !705)
!704 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!705 = !{!706, !707, !708, !709, !712, !713, !714, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !740, !810, !1236, !1451, !1454, !1743, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1765, !1766, !1767, !1768, !1769, !1777, !1844, !1851, !1852, !1859, !1860, !1861, !1862, !1863, !1864, !1865}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !703, file: !704, line: 1217, baseType: !388, size: 960)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !703, file: !704, line: 1218, baseType: !450, size: 64, offset: 960)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !703, file: !704, line: 1220, baseType: !384, size: 64, offset: 1024)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !703, file: !704, line: 1221, baseType: !710, size: 64, offset: 1088)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !704, line: 52, flags: DIFlagFwdDecl)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !703, file: !704, line: 1223, baseType: !702, size: 64, offset: 1152)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !703, file: !704, line: 1225, baseType: !98, size: 128, offset: 1216)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !703, file: !704, line: 1226, baseType: !715, size: 64, offset: 1344)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !704, line: 69, size: 320, elements: !717)
!717 = !{!718, !719, !720, !721, !722, !723, !724, !725}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !716, file: !704, line: 70, baseType: !715, size: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !716, file: !704, line: 70, baseType: !715, size: 64, offset: 64)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !716, file: !704, line: 71, baseType: !7, size: 32, offset: 128)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !716, file: !704, line: 71, baseType: !7, size: 32, offset: 160)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !716, file: !704, line: 72, baseType: !91, size: 32, offset: 192)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !716, file: !704, line: 73, baseType: !210, size: 16, offset: 224)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !716, file: !704, line: 73, baseType: !210, size: 16, offset: 240)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !716, file: !704, line: 74, baseType: !384, size: 64, offset: 256)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !703, file: !704, line: 1227, baseType: !384, size: 64, offset: 1408)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !703, file: !704, line: 1229, baseType: !124, size: 96, offset: 1472)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !703, file: !704, line: 1230, baseType: !124, size: 96, offset: 1568)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !703, file: !704, line: 1231, baseType: !124, size: 96, offset: 1664)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !703, file: !704, line: 1231, baseType: !124, size: 96, offset: 1760)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !703, file: !704, line: 1233, baseType: !7, size: 32, offset: 1856)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !703, file: !704, line: 1234, baseType: !91, size: 32, offset: 1888)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !703, file: !704, line: 1235, baseType: !7, size: 32, offset: 1920)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !703, file: !704, line: 1237, baseType: !210, size: 16, offset: 1952)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !703, file: !704, line: 1239, baseType: !264, size: 8, offset: 1968)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !703, file: !704, line: 1240, baseType: !737, size: 8, offset: 1976)
!737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 8, elements: !738)
!738 = !{!739}
!739 = !DISubrange(count: 1)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !703, file: !704, line: 1242, baseType: !741, size: 64, offset: 1984)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !743, line: 328, size: 3456, elements: !744)
!743 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!744 = !{!745, !746, !747, !750, !751, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !779, !780, !781, !784, !789, !790, !793, !797, !801, !802, !806, !807, !808, !809}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !742, file: !743, line: 329, baseType: !388, size: 960)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !742, file: !743, line: 330, baseType: !450, size: 64, offset: 960)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !742, file: !743, line: 332, baseType: !748, size: 64, offset: 1024)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !743, line: 332, flags: DIFlagFwdDecl)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !742, file: !743, line: 333, baseType: !435, size: 512, offset: 1088)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !742, file: !743, line: 335, baseType: !752, size: 64, offset: 1600)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !232, line: 41, flags: DIFlagFwdDecl)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !742, file: !743, line: 337, baseType: !535, size: 64, offset: 1664)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !742, file: !743, line: 338, baseType: !694, size: 64, offset: 1728)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !742, file: !743, line: 340, baseType: !98, size: 128, offset: 1792)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !742, file: !743, line: 340, baseType: !98, size: 128, offset: 1920)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !742, file: !743, line: 342, baseType: !91, size: 32, offset: 2048)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !742, file: !743, line: 342, baseType: !91, size: 32, offset: 2080)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !742, file: !743, line: 343, baseType: !91, size: 32, offset: 2112)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !742, file: !743, line: 345, baseType: !91, size: 32, offset: 2144)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !742, file: !743, line: 346, baseType: !91, size: 32, offset: 2176)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !742, file: !743, line: 347, baseType: !210, size: 16, offset: 2208)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !742, file: !743, line: 348, baseType: !210, size: 16, offset: 2224)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !742, file: !743, line: 349, baseType: !91, size: 32, offset: 2240)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !742, file: !743, line: 351, baseType: !91, size: 32, offset: 2272)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !742, file: !743, line: 353, baseType: !210, size: 16, offset: 2304)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !742, file: !743, line: 354, baseType: !210, size: 16, offset: 2320)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !742, file: !743, line: 355, baseType: !91, size: 32, offset: 2336)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !742, file: !743, line: 357, baseType: !771, size: 128, offset: 2368)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !772, line: 95, baseType: !773)
!772 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !772, line: 92, size: 128, elements: !774)
!774 = !{!775, !776, !777, !778}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !773, file: !772, line: 93, baseType: !106, size: 32)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !773, file: !772, line: 93, baseType: !106, size: 32, offset: 32)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !773, file: !772, line: 94, baseType: !106, size: 32, offset: 64)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !773, file: !772, line: 94, baseType: !106, size: 32, offset: 96)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !742, file: !743, line: 363, baseType: !98, size: 128, offset: 2496)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !742, file: !743, line: 363, baseType: !98, size: 128, offset: 2624)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !742, file: !743, line: 368, baseType: !782, size: 64, offset: 2752)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !743, line: 48, flags: DIFlagFwdDecl)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !742, file: !743, line: 372, baseType: !785, size: 32, offset: 2816)
!785 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !743, line: 274, baseType: !786)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !743, line: 271, size: 32, elements: !787)
!787 = !{!788}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !786, file: !743, line: 273, baseType: !7, size: 32)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !742, file: !743, line: 373, baseType: !91, size: 32, offset: 2848)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !742, file: !743, line: 382, baseType: !791, size: 64, offset: 2880)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !743, line: 46, flags: DIFlagFwdDecl)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !742, file: !743, line: 385, baseType: !794, size: 64, offset: 2944)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = !DISubroutineType(types: !796)
!796 = !{null, !87, !106}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !742, file: !743, line: 386, baseType: !798, size: 64, offset: 3008)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DISubroutineType(types: !800)
!800 = !{null, !87, !263}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !742, file: !743, line: 387, baseType: !185, size: 64, offset: 3072)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !742, file: !743, line: 388, baseType: !803, size: 64, offset: 3136)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = !DISubroutineType(types: !805)
!805 = !{null, !87}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !742, file: !743, line: 389, baseType: !87, size: 64, offset: 3200)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !742, file: !743, line: 389, baseType: !87, size: 64, offset: 3264)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !742, file: !743, line: 389, baseType: !87, size: 64, offset: 3328)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !742, file: !743, line: 389, baseType: !87, size: 64, offset: 3392)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !703, file: !704, line: 1244, baseType: !811, size: 64, offset: 2048)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !813, line: 200, size: 17024, elements: !814)
!813 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!814 = !{!815, !816, !817, !818, !1229, !1230, !1231, !1232, !1233, !1234, !1235}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !812, file: !813, line: 201, baseType: !282, size: 64)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !812, file: !813, line: 202, baseType: !98, size: 128, offset: 64)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !812, file: !813, line: 203, baseType: !98, size: 128, offset: 192)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !812, file: !813, line: 206, baseType: !819, size: 64, offset: 320)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !813, line: 190, baseType: !821)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !813, line: 126, size: 2816, elements: !822)
!822 = !{!823, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !921, !922, !923, !924, !1201, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1228}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !821, file: !813, line: 127, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !821, file: !813, line: 127, baseType: !824, size: 64, offset: 64)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !821, file: !813, line: 128, baseType: !87, size: 64, offset: 128)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !821, file: !813, line: 129, baseType: !87, size: 64, offset: 192)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !821, file: !813, line: 130, baseType: !435, size: 512, offset: 256)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !821, file: !813, line: 132, baseType: !91, size: 32, offset: 768)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !821, file: !813, line: 132, baseType: !91, size: 32, offset: 800)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !821, file: !813, line: 133, baseType: !91, size: 32, offset: 832)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !821, file: !813, line: 134, baseType: !91, size: 32, offset: 864)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !821, file: !813, line: 134, baseType: !91, size: 32, offset: 896)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !821, file: !813, line: 134, baseType: !91, size: 32, offset: 928)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !821, file: !813, line: 135, baseType: !91, size: 32, offset: 960)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !821, file: !813, line: 135, baseType: !91, size: 32, offset: 992)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !821, file: !813, line: 136, baseType: !91, size: 32, offset: 1024)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !821, file: !813, line: 136, baseType: !91, size: 32, offset: 1056)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !821, file: !813, line: 137, baseType: !91, size: 32, offset: 1088)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !821, file: !813, line: 137, baseType: !91, size: 32, offset: 1120)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !821, file: !813, line: 138, baseType: !106, size: 32, offset: 1152)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !821, file: !813, line: 139, baseType: !106, size: 32, offset: 1184)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !821, file: !813, line: 139, baseType: !106, size: 32, offset: 1216)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !821, file: !813, line: 141, baseType: !210, size: 16, offset: 1248)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !821, file: !813, line: 142, baseType: !210, size: 16, offset: 1264)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !821, file: !813, line: 143, baseType: !91, size: 32, offset: 1280)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !821, file: !813, line: 144, baseType: !91, size: 32, offset: 1312)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !821, file: !813, line: 146, baseType: !849, size: 64, offset: 1344)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !813, line: 114, baseType: !851)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !813, line: 99, size: 7232, elements: !852)
!852 = !{!853, !855, !856, !857, !858, !859, !860, !871, !875, !889, !898, !905, !915}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !851, file: !813, line: 100, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !851, file: !813, line: 100, baseType: !854, size: 64, offset: 64)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !851, file: !813, line: 101, baseType: !91, size: 32, offset: 128)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !851, file: !813, line: 101, baseType: !91, size: 32, offset: 160)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !851, file: !813, line: 102, baseType: !91, size: 32, offset: 192)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !851, file: !813, line: 102, baseType: !91, size: 32, offset: 224)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !851, file: !813, line: 103, baseType: !861, size: 64, offset: 256)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !813, line: 59, baseType: !863)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !813, line: 56, size: 2112, elements: !864)
!864 = !{!865, !869, !870}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !863, file: !813, line: 57, baseType: !866, size: 2048)
!866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 2048, elements: !867)
!867 = !{!868}
!868 = !DISubrange(count: 256)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !863, file: !813, line: 58, baseType: !91, size: 32, offset: 2048)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !863, file: !813, line: 58, baseType: !91, size: 32, offset: 2080)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !851, file: !813, line: 106, baseType: !872, size: 6144, offset: 320)
!872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 6144, elements: !873)
!873 = !{!874}
!874 = !DISubrange(count: 768)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !851, file: !813, line: 107, baseType: !876, size: 64, offset: 6464)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !813, line: 97, baseType: !878)
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !813, line: 83, size: 8320, elements: !879)
!879 = !{!880, !881, !882, !885, !886, !887, !888}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !878, file: !813, line: 84, baseType: !872, size: 6144)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !878, file: !813, line: 87, baseType: !866, size: 2048, offset: 6144)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !878, file: !813, line: 88, baseType: !883, size: 64, offset: 8192)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !698, line: 41, flags: DIFlagFwdDecl)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !878, file: !813, line: 90, baseType: !210, size: 16, offset: 8256)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !878, file: !813, line: 92, baseType: !210, size: 16, offset: 8272)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !878, file: !813, line: 93, baseType: !210, size: 16, offset: 8288)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !878, file: !813, line: 95, baseType: !210, size: 16, offset: 8304)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !851, file: !813, line: 108, baseType: !890, size: 64, offset: 6528)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !813, line: 66, baseType: !892)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !813, line: 61, size: 128, elements: !893)
!893 = !{!894, !895, !896, !897}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !892, file: !813, line: 62, baseType: !91, size: 32)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !892, file: !813, line: 63, baseType: !91, size: 32, offset: 32)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !892, file: !813, line: 64, baseType: !91, size: 32, offset: 64)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !892, file: !813, line: 65, baseType: !91, size: 32, offset: 96)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !851, file: !813, line: 109, baseType: !899, size: 64, offset: 6592)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !813, line: 71, baseType: !901)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !813, line: 68, size: 64, elements: !902)
!902 = !{!903, !904}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !901, file: !813, line: 69, baseType: !91, size: 32)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !901, file: !813, line: 70, baseType: !91, size: 32, offset: 32)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !851, file: !813, line: 110, baseType: !906, size: 64, offset: 6656)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !813, line: 81, baseType: !908)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !813, line: 73, size: 352, elements: !909)
!909 = !{!910, !911, !912, !913, !914}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !908, file: !813, line: 74, baseType: !124, size: 96)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !908, file: !813, line: 75, baseType: !124, size: 96, offset: 96)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !908, file: !813, line: 76, baseType: !124, size: 96, offset: 192)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !908, file: !813, line: 77, baseType: !91, size: 32, offset: 288)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !908, file: !813, line: 78, baseType: !91, size: 32, offset: 320)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !851, file: !813, line: 113, baseType: !916, size: 512, offset: 6720)
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !917, line: 182, baseType: !918)
!917 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !917, line: 180, size: 512, elements: !919)
!919 = !{!920}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !918, file: !917, line: 181, baseType: !435, size: 512)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !821, file: !813, line: 148, baseType: !468, size: 64, offset: 1408)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !821, file: !813, line: 151, baseType: !702, size: 64, offset: 1472)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !821, file: !813, line: 152, baseType: !384, size: 64, offset: 1536)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !821, file: !813, line: 153, baseType: !925, size: 64, offset: 1600)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !927, line: 64, size: 19136, elements: !928)
!927 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!928 = !{!929, !930, !931, !932, !933, !934, !936, !937, !938, !939, !942, !943, !1187, !1188, !1196, !1197, !1198, !1199, !1200}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !926, file: !927, line: 65, baseType: !388, size: 960)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !926, file: !927, line: 66, baseType: !450, size: 64, offset: 960)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !926, file: !927, line: 68, baseType: !407, size: 8192, offset: 1024)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !926, file: !927, line: 70, baseType: !91, size: 32, offset: 9216)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !926, file: !927, line: 71, baseType: !91, size: 32, offset: 9248)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !926, file: !927, line: 72, baseType: !935, size: 64, offset: 9280)
!935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 64, elements: !211)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !926, file: !927, line: 74, baseType: !106, size: 32, offset: 9344)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !926, file: !927, line: 74, baseType: !106, size: 32, offset: 9376)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !926, file: !927, line: 76, baseType: !883, size: 64, offset: 9408)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !926, file: !927, line: 77, baseType: !940, size: 64, offset: 9472)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !927, line: 77, flags: DIFlagFwdDecl)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !926, file: !927, line: 78, baseType: !535, size: 64, offset: 9536)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !926, file: !927, line: 80, baseType: !944, size: 2624, offset: 9600)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !945, line: 340, size: 2624, elements: !946)
!945 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!946 = !{!947, !975, !993, !994, !995, !1010, !1068, !1069, !1167, !1168, !1169, !1170, !1176}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !944, file: !945, line: 341, baseType: !948, size: 576)
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !945, line: 251, baseType: !949)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !945, line: 207, size: 576, elements: !950)
!950 = !{!951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !949, file: !945, line: 208, baseType: !91, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !949, file: !945, line: 211, baseType: !210, size: 16, offset: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !949, file: !945, line: 212, baseType: !210, size: 16, offset: 48)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !949, file: !945, line: 213, baseType: !106, size: 32, offset: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !949, file: !945, line: 214, baseType: !210, size: 16, offset: 96)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !949, file: !945, line: 215, baseType: !210, size: 16, offset: 112)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !949, file: !945, line: 216, baseType: !210, size: 16, offset: 128)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !949, file: !945, line: 217, baseType: !210, size: 16, offset: 144)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !949, file: !945, line: 218, baseType: !210, size: 16, offset: 160)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !949, file: !945, line: 219, baseType: !210, size: 16, offset: 176)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !949, file: !945, line: 220, baseType: !106, size: 32, offset: 192)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !949, file: !945, line: 222, baseType: !210, size: 16, offset: 224)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !949, file: !945, line: 225, baseType: !210, size: 16, offset: 240)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !949, file: !945, line: 228, baseType: !91, size: 32, offset: 256)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !949, file: !945, line: 229, baseType: !91, size: 32, offset: 288)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !949, file: !945, line: 233, baseType: !91, size: 32, offset: 320)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !949, file: !945, line: 236, baseType: !210, size: 16, offset: 352)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !949, file: !945, line: 236, baseType: !210, size: 16, offset: 368)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !949, file: !945, line: 241, baseType: !106, size: 32, offset: 384)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !949, file: !945, line: 244, baseType: !91, size: 32, offset: 416)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !949, file: !945, line: 244, baseType: !91, size: 32, offset: 448)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !949, file: !945, line: 245, baseType: !106, size: 32, offset: 480)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !949, file: !945, line: 248, baseType: !106, size: 32, offset: 512)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !949, file: !945, line: 250, baseType: !91, size: 32, offset: 544)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !944, file: !945, line: 342, baseType: !976, size: 448, offset: 576)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !945, line: 79, baseType: !977)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !945, line: 61, size: 448, elements: !978)
!978 = !{!979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !977, file: !945, line: 62, baseType: !87, size: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !977, file: !945, line: 64, baseType: !210, size: 16, offset: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !977, file: !945, line: 65, baseType: !210, size: 16, offset: 80)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !977, file: !945, line: 67, baseType: !106, size: 32, offset: 96)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !977, file: !945, line: 68, baseType: !106, size: 32, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !977, file: !945, line: 69, baseType: !106, size: 32, offset: 160)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !977, file: !945, line: 70, baseType: !210, size: 16, offset: 192)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !977, file: !945, line: 71, baseType: !210, size: 16, offset: 208)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !977, file: !945, line: 72, baseType: !694, size: 64, offset: 224)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !977, file: !945, line: 75, baseType: !106, size: 32, offset: 288)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !977, file: !945, line: 75, baseType: !106, size: 32, offset: 320)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !977, file: !945, line: 75, baseType: !106, size: 32, offset: 352)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !977, file: !945, line: 78, baseType: !106, size: 32, offset: 384)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !977, file: !945, line: 78, baseType: !106, size: 32, offset: 416)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !944, file: !945, line: 343, baseType: !98, size: 128, offset: 1024)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !944, file: !945, line: 344, baseType: !98, size: 128, offset: 1152)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !944, file: !945, line: 345, baseType: !996, size: 192, offset: 1280)
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !945, line: 278, baseType: !997)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !945, line: 270, size: 192, elements: !998)
!998 = !{!999, !1000, !1001, !1002, !1003}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !997, file: !945, line: 271, baseType: !91, size: 32)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !997, file: !945, line: 273, baseType: !106, size: 32, offset: 32)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !997, file: !945, line: 275, baseType: !91, size: 32, offset: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !997, file: !945, line: 276, baseType: !91, size: 32, offset: 96)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !997, file: !945, line: 277, baseType: !1004, size: 64, offset: 128)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !945, line: 55, size: 576, elements: !1006)
!1006 = !{!1007, !1008, !1009}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1005, file: !945, line: 56, baseType: !91, size: 32)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1005, file: !945, line: 57, baseType: !106, size: 32, offset: 32)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1005, file: !945, line: 58, baseType: !585, size: 512, offset: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !944, file: !945, line: 346, baseType: !1011, size: 384, offset: 1472)
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !945, line: 268, baseType: !1012)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !945, line: 253, size: 384, elements: !1013)
!1013 = !{!1014, !1015, !1016, !1017, !1018, !1062, !1063, !1064, !1065, !1066, !1067}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1012, file: !945, line: 254, baseType: !91, size: 32)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !1012, file: !945, line: 255, baseType: !91, size: 32, offset: 32)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1012, file: !945, line: 255, baseType: !91, size: 32, offset: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !1012, file: !945, line: 258, baseType: !106, size: 32, offset: 96)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !1012, file: !945, line: 259, baseType: !1019, size: 64, offset: 128)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !945, line: 164, baseType: !1021)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !945, line: 108, size: 1664, elements: !1022)
!1022 = !{!1023, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1021, file: !945, line: 109, baseType: !1024, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1021, file: !945, line: 109, baseType: !1024, size: 64, offset: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1021, file: !945, line: 111, baseType: !435, size: 512, offset: 128)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !1021, file: !945, line: 119, baseType: !694, size: 64, offset: 640)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !1021, file: !945, line: 119, baseType: !694, size: 64, offset: 704)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1021, file: !945, line: 125, baseType: !694, size: 64, offset: 768)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1021, file: !945, line: 125, baseType: !694, size: 64, offset: 832)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1021, file: !945, line: 127, baseType: !694, size: 64, offset: 896)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1021, file: !945, line: 130, baseType: !91, size: 32, offset: 960)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1021, file: !945, line: 131, baseType: !91, size: 32, offset: 992)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1021, file: !945, line: 132, baseType: !1035, size: 64, offset: 1024)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !945, line: 106, baseType: !1037)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !945, line: 81, size: 512, elements: !1038)
!1038 = !{!1039, !1040, !1043, !1044, !1045, !1046}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1037, file: !945, line: 82, baseType: !694, size: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !1037, file: !945, line: 97, baseType: !1041, size: 256, offset: 64)
!1041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 256, elements: !1042)
!1042 = !{!578, !212}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1037, file: !945, line: 102, baseType: !694, size: 64, offset: 320)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1037, file: !945, line: 102, baseType: !694, size: 64, offset: 384)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1037, file: !945, line: 104, baseType: !91, size: 32, offset: 448)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1037, file: !945, line: 105, baseType: !91, size: 32, offset: 480)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !1021, file: !945, line: 135, baseType: !124, size: 96, offset: 1088)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1021, file: !945, line: 136, baseType: !106, size: 32, offset: 1184)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1021, file: !945, line: 139, baseType: !91, size: 32, offset: 1216)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !1021, file: !945, line: 139, baseType: !91, size: 32, offset: 1248)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !1021, file: !945, line: 139, baseType: !91, size: 32, offset: 1280)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1021, file: !945, line: 140, baseType: !124, size: 96, offset: 1312)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !1021, file: !945, line: 143, baseType: !210, size: 16, offset: 1408)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1021, file: !945, line: 144, baseType: !210, size: 16, offset: 1424)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !1021, file: !945, line: 145, baseType: !210, size: 16, offset: 1440)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !1021, file: !945, line: 148, baseType: !210, size: 16, offset: 1456)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !1021, file: !945, line: 149, baseType: !91, size: 32, offset: 1472)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !1021, file: !945, line: 150, baseType: !106, size: 32, offset: 1504)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1021, file: !945, line: 152, baseType: !535, size: 64, offset: 1536)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1021, file: !945, line: 163, baseType: !106, size: 32, offset: 1600)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1021, file: !945, line: 163, baseType: !106, size: 32, offset: 1632)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !1012, file: !945, line: 261, baseType: !106, size: 32, offset: 192)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !1012, file: !945, line: 261, baseType: !106, size: 32, offset: 224)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !1012, file: !945, line: 261, baseType: !106, size: 32, offset: 256)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1012, file: !945, line: 263, baseType: !91, size: 32, offset: 288)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1012, file: !945, line: 266, baseType: !91, size: 32, offset: 320)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1012, file: !945, line: 267, baseType: !106, size: 32, offset: 352)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !944, file: !945, line: 347, baseType: !1019, size: 64, offset: 1856)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !944, file: !945, line: 348, baseType: !1070, size: 64, offset: 1920)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !945, line: 205, baseType: !1072)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !945, line: 186, size: 1024, elements: !1073)
!1073 = !{!1074, !1076, !1077, !1078, !1080, !1081, !1082, !1090, !1091, !1092, !1165, !1166}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1072, file: !945, line: 187, baseType: !1075, size: 64)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1072, file: !945, line: 187, baseType: !1075, size: 64, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1072, file: !945, line: 189, baseType: !435, size: 512, offset: 128)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !1072, file: !945, line: 191, baseType: !1079, size: 64, offset: 640)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !1072, file: !945, line: 193, baseType: !91, size: 32, offset: 704)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1072, file: !945, line: 193, baseType: !91, size: 32, offset: 736)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1072, file: !945, line: 195, baseType: !1083, size: 64, offset: 768)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64)
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !945, line: 184, baseType: !1085)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !945, line: 166, size: 320, elements: !1086)
!1086 = !{!1087, !1088, !1089}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !1085, file: !945, line: 180, baseType: !1041, size: 256)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1085, file: !945, line: 182, baseType: !91, size: 32, offset: 256)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1085, file: !945, line: 183, baseType: !91, size: 32, offset: 288)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1072, file: !945, line: 196, baseType: !91, size: 32, offset: 832)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1072, file: !945, line: 198, baseType: !91, size: 32, offset: 864)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1072, file: !945, line: 200, baseType: !1093, size: 64, offset: 896)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !698, line: 77, size: 15424, elements: !1095)
!1095 = !{!1096, !1097, !1098, !1101, !1104, !1105, !1108, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1127, !1128, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1159}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1094, file: !698, line: 78, baseType: !388, size: 960)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1094, file: !698, line: 80, baseType: !407, size: 8192, offset: 960)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1094, file: !698, line: 82, baseType: !1099, size: 64, offset: 9152)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !698, line: 43, flags: DIFlagFwdDecl)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1094, file: !698, line: 83, baseType: !1102, size: 64, offset: 9216)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !389, line: 46, flags: DIFlagFwdDecl)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1094, file: !698, line: 86, baseType: !883, size: 64, offset: 9280)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1094, file: !698, line: 87, baseType: !1106, size: 64, offset: 9344)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !698, line: 44, flags: DIFlagFwdDecl)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1094, file: !698, line: 89, baseType: !1109, size: 512, offset: 9408)
!1109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1106, size: 512, elements: !1110)
!1110 = !{!477}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1094, file: !698, line: 90, baseType: !210, size: 16, offset: 9920)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1094, file: !698, line: 90, baseType: !210, size: 16, offset: 9936)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1094, file: !698, line: 92, baseType: !210, size: 16, offset: 9952)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1094, file: !698, line: 92, baseType: !210, size: 16, offset: 9968)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1094, file: !698, line: 93, baseType: !210, size: 16, offset: 9984)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1094, file: !698, line: 93, baseType: !210, size: 16, offset: 10000)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1094, file: !698, line: 94, baseType: !91, size: 32, offset: 10016)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1094, file: !698, line: 97, baseType: !210, size: 16, offset: 10048)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1094, file: !698, line: 97, baseType: !210, size: 16, offset: 10064)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1094, file: !698, line: 98, baseType: !210, size: 16, offset: 10080)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1094, file: !698, line: 98, baseType: !210, size: 16, offset: 10096)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1094, file: !698, line: 99, baseType: !210, size: 16, offset: 10112)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1094, file: !698, line: 99, baseType: !210, size: 16, offset: 10128)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1094, file: !698, line: 100, baseType: !7, size: 32, offset: 10144)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1094, file: !698, line: 101, baseType: !1126, size: 64, offset: 10176)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1094, file: !698, line: 103, baseType: !413, size: 64, offset: 10240)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1094, file: !698, line: 104, baseType: !1129, size: 64, offset: 10304)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !389, line: 159, size: 448, elements: !1131)
!1131 = !{!1132, !1134, !1135, !1136, !1137, !1139}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1130, file: !389, line: 161, baseType: !1133, size: 64)
!1133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !211)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1130, file: !389, line: 162, baseType: !1133, size: 64, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1130, file: !389, line: 163, baseType: !209, size: 32, offset: 128)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1130, file: !389, line: 164, baseType: !209, size: 32, offset: 160)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1130, file: !389, line: 165, baseType: !1138, size: 128, offset: 192)
!1138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1126, size: 128, elements: !211)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1130, file: !389, line: 166, baseType: !1140, size: 128, offset: 320)
!1140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1102, size: 128, elements: !211)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1094, file: !698, line: 107, baseType: !106, size: 32, offset: 10368)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1094, file: !698, line: 108, baseType: !91, size: 32, offset: 10400)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1094, file: !698, line: 109, baseType: !210, size: 16, offset: 10432)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1094, file: !698, line: 110, baseType: !210, size: 16, offset: 10448)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1094, file: !698, line: 113, baseType: !91, size: 32, offset: 10464)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1094, file: !698, line: 113, baseType: !91, size: 32, offset: 10496)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1094, file: !698, line: 114, baseType: !264, size: 8, offset: 10528)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1094, file: !698, line: 114, baseType: !264, size: 8, offset: 10536)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1094, file: !698, line: 115, baseType: !210, size: 16, offset: 10544)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1094, file: !698, line: 116, baseType: !576, size: 128, offset: 10560)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1094, file: !698, line: 119, baseType: !106, size: 32, offset: 10688)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1094, file: !698, line: 119, baseType: !106, size: 32, offset: 10720)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1094, file: !698, line: 122, baseType: !916, size: 512, offset: 10752)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1094, file: !698, line: 123, baseType: !264, size: 8, offset: 11264)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1094, file: !698, line: 125, baseType: !1156, size: 56, offset: 11272)
!1156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 56, elements: !1157)
!1157 = !{!1158}
!1158 = !DISubrange(count: 7)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1094, file: !698, line: 126, baseType: !1160, size: 4096, offset: 11328)
!1160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1161, size: 4096, elements: !1110)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !698, line: 69, baseType: !1162)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !698, line: 67, size: 512, elements: !1163)
!1163 = !{!1164}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1162, file: !698, line: 68, baseType: !435, size: 512)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !1072, file: !945, line: 201, baseType: !106, size: 32, offset: 960)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1072, file: !945, line: 204, baseType: !91, size: 32, offset: 992)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !944, file: !945, line: 350, baseType: !98, size: 128, offset: 1984)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !944, file: !945, line: 351, baseType: !91, size: 32, offset: 2112)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !944, file: !945, line: 351, baseType: !91, size: 32, offset: 2144)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !944, file: !945, line: 353, baseType: !1171, size: 64, offset: 2176)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !945, line: 297, baseType: !1173)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !945, line: 295, size: 2048, elements: !1174)
!1174 = !{!1175}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1173, file: !945, line: 296, baseType: !866, size: 2048)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !944, file: !945, line: 355, baseType: !1177, size: 384, offset: 2240)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !945, line: 338, baseType: !1178)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !945, line: 322, size: 384, elements: !1179)
!1179 = !{!1180, !1181, !1182, !1183, !1184, !1185, !1186}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1178, file: !945, line: 323, baseType: !91, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1178, file: !945, line: 325, baseType: !210, size: 16, offset: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1178, file: !945, line: 326, baseType: !210, size: 16, offset: 48)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1178, file: !945, line: 331, baseType: !98, size: 128, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1178, file: !945, line: 334, baseType: !98, size: 128, offset: 192)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1178, file: !945, line: 335, baseType: !91, size: 32, offset: 320)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1178, file: !945, line: 337, baseType: !91, size: 32, offset: 352)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !926, file: !927, line: 81, baseType: !87, size: 64, offset: 12224)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !926, file: !927, line: 85, baseType: !1189, size: 6208, offset: 12288)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !927, line: 55, size: 6208, elements: !1190)
!1190 = !{!1191, !1192, !1193, !1194, !1195}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1189, file: !927, line: 56, baseType: !872, size: 6144)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1189, file: !927, line: 58, baseType: !210, size: 16, offset: 6144)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1189, file: !927, line: 59, baseType: !210, size: 16, offset: 6160)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1189, file: !927, line: 60, baseType: !210, size: 16, offset: 6176)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1189, file: !927, line: 61, baseType: !210, size: 16, offset: 6192)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !926, file: !927, line: 86, baseType: !91, size: 32, offset: 18496)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !926, file: !927, line: 88, baseType: !91, size: 32, offset: 18528)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !926, file: !927, line: 90, baseType: !91, size: 32, offset: 18560)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !926, file: !927, line: 94, baseType: !91, size: 32, offset: 18592)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !926, file: !927, line: 100, baseType: !916, size: 512, offset: 18624)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !821, file: !813, line: 154, baseType: !1202, size: 64, offset: 1664)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !230, line: 264, flags: DIFlagFwdDecl)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !821, file: !813, line: 156, baseType: !883, size: 64, offset: 1728)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !821, file: !813, line: 158, baseType: !106, size: 32, offset: 1792)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !821, file: !813, line: 159, baseType: !106, size: 32, offset: 1824)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !821, file: !813, line: 162, baseType: !824, size: 64, offset: 1856)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !821, file: !813, line: 162, baseType: !824, size: 64, offset: 1920)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !821, file: !813, line: 162, baseType: !824, size: 64, offset: 1984)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !821, file: !813, line: 164, baseType: !98, size: 128, offset: 2048)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !821, file: !813, line: 166, baseType: !1212, size: 64, offset: 2176)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 64)
!1213 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !813, line: 51, flags: DIFlagFwdDecl)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !821, file: !813, line: 167, baseType: !87, size: 64, offset: 2240)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !821, file: !813, line: 168, baseType: !106, size: 32, offset: 2304)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !821, file: !813, line: 170, baseType: !106, size: 32, offset: 2336)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !821, file: !813, line: 170, baseType: !106, size: 32, offset: 2368)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !821, file: !813, line: 171, baseType: !106, size: 32, offset: 2400)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !821, file: !813, line: 173, baseType: !87, size: 64, offset: 2432)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !821, file: !813, line: 175, baseType: !91, size: 32, offset: 2496)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !821, file: !813, line: 176, baseType: !91, size: 32, offset: 2528)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !821, file: !813, line: 179, baseType: !91, size: 32, offset: 2560)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !821, file: !813, line: 180, baseType: !106, size: 32, offset: 2592)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !821, file: !813, line: 183, baseType: !91, size: 32, offset: 2624)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !821, file: !813, line: 185, baseType: !264, size: 8, offset: 2656)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !821, file: !813, line: 186, baseType: !1227, size: 24, offset: 2664)
!1227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 24, elements: !125)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !821, file: !813, line: 189, baseType: !98, size: 128, offset: 2688)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !812, file: !813, line: 207, baseType: !407, size: 8192, offset: 384)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !812, file: !813, line: 208, baseType: !407, size: 8192, offset: 8576)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !812, file: !813, line: 210, baseType: !91, size: 32, offset: 16768)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !812, file: !813, line: 210, baseType: !91, size: 32, offset: 16800)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !812, file: !813, line: 211, baseType: !91, size: 32, offset: 16832)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !812, file: !813, line: 211, baseType: !91, size: 32, offset: 16864)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !812, file: !813, line: 212, baseType: !771, size: 128, offset: 16896)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !703, file: !704, line: 1246, baseType: !1237, size: 64, offset: 2112)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !704, line: 1067, size: 5184, elements: !1239)
!1239 = !{!1240, !1270, !1271, !1286, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1308, !1324, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1434}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1238, file: !704, line: 1068, baseType: !1241, size: 64)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !704, line: 934, baseType: !1243)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !704, line: 925, size: 576, elements: !1244)
!1244 = !{!1245, !1262, !1263, !1264, !1265, !1266, !1269}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1243, file: !704, line: 926, baseType: !1246, size: 320)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !704, line: 830, baseType: !1247)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !704, line: 813, size: 320, elements: !1248)
!1248 = !{!1249, !1252, !1255, !1256, !1259, !1260, !1261}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1247, file: !704, line: 814, baseType: !1250, size: 64)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64)
!1251 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !704, line: 51, flags: DIFlagFwdDecl)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1247, file: !704, line: 815, baseType: !1253, size: 64, offset: 64)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !704, line: 815, flags: DIFlagFwdDecl)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1247, file: !704, line: 818, baseType: !87, size: 64, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1247, file: !704, line: 819, baseType: !1257, size: 32, offset: 192)
!1257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1258, size: 32, elements: !577)
!1258 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1247, file: !704, line: 822, baseType: !91, size: 32, offset: 224)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1247, file: !704, line: 826, baseType: !91, size: 32, offset: 256)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1247, file: !704, line: 829, baseType: !91, size: 32, offset: 288)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1243, file: !704, line: 928, baseType: !210, size: 16, offset: 320)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1243, file: !704, line: 928, baseType: !210, size: 16, offset: 336)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1243, file: !704, line: 929, baseType: !91, size: 32, offset: 352)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1243, file: !704, line: 930, baseType: !1126, size: 64, offset: 384)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1243, file: !704, line: 931, baseType: !1267, size: 64, offset: 448)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !704, line: 931, flags: DIFlagFwdDecl)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1243, file: !704, line: 933, baseType: !87, size: 64, offset: 512)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1238, file: !704, line: 1069, baseType: !1241, size: 64, offset: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1238, file: !704, line: 1070, baseType: !1272, size: 64, offset: 128)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !704, line: 916, baseType: !1274)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !704, line: 891, size: 704, elements: !1275)
!1275 = !{!1276, !1277, !1278, !1280, !1281, !1282, !1283, !1284, !1285}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1274, file: !704, line: 892, baseType: !1246, size: 320)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1274, file: !704, line: 896, baseType: !91, size: 32, offset: 320)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1274, file: !704, line: 900, baseType: !1279, size: 96, offset: 352)
!1279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 96, elements: !125)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1274, file: !704, line: 903, baseType: !106, size: 32, offset: 448)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1274, file: !704, line: 906, baseType: !91, size: 32, offset: 480)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1274, file: !704, line: 909, baseType: !106, size: 32, offset: 512)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1274, file: !704, line: 912, baseType: !106, size: 32, offset: 544)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1274, file: !704, line: 914, baseType: !384, size: 64, offset: 576)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1274, file: !704, line: 915, baseType: !87, size: 64, offset: 640)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1238, file: !704, line: 1071, baseType: !1287, size: 64, offset: 192)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !704, line: 920, baseType: !1289)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !704, line: 918, size: 320, elements: !1290)
!1290 = !{!1291}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1289, file: !704, line: 919, baseType: !1246, size: 320)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1238, file: !704, line: 1075, baseType: !106, size: 32, offset: 256)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1238, file: !704, line: 1077, baseType: !106, size: 32, offset: 288)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1238, file: !704, line: 1078, baseType: !106, size: 32, offset: 320)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1238, file: !704, line: 1079, baseType: !210, size: 16, offset: 352)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1238, file: !704, line: 1082, baseType: !210, size: 16, offset: 368)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1238, file: !704, line: 1085, baseType: !264, size: 8, offset: 384)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1238, file: !704, line: 1086, baseType: !264, size: 8, offset: 392)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1238, file: !704, line: 1087, baseType: !264, size: 8, offset: 400)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1238, file: !704, line: 1088, baseType: !264, size: 8, offset: 408)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1238, file: !704, line: 1090, baseType: !106, size: 32, offset: 416)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1238, file: !704, line: 1093, baseType: !210, size: 16, offset: 448)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1238, file: !704, line: 1096, baseType: !264, size: 8, offset: 464)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1238, file: !704, line: 1098, baseType: !1305, size: 40, offset: 472)
!1305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 40, elements: !1306)
!1306 = !{!1307}
!1307 = !DISubrange(count: 5)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1238, file: !704, line: 1101, baseType: !1309, size: 832, offset: 512)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !704, line: 836, size: 832, elements: !1310)
!1310 = !{!1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1309, file: !704, line: 837, baseType: !1246, size: 320)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1309, file: !704, line: 839, baseType: !210, size: 16, offset: 320)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1309, file: !704, line: 839, baseType: !210, size: 16, offset: 336)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1309, file: !704, line: 842, baseType: !210, size: 16, offset: 352)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1309, file: !704, line: 842, baseType: !210, size: 16, offset: 368)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1309, file: !704, line: 843, baseType: !209, size: 32, offset: 384)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1309, file: !704, line: 845, baseType: !91, size: 32, offset: 416)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1309, file: !704, line: 847, baseType: !87, size: 64, offset: 448)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1309, file: !704, line: 848, baseType: !1093, size: 64, offset: 512)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1309, file: !704, line: 849, baseType: !1093, size: 64, offset: 576)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1309, file: !704, line: 850, baseType: !1093, size: 64, offset: 640)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1309, file: !704, line: 851, baseType: !124, size: 96, offset: 704)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1309, file: !704, line: 852, baseType: !106, size: 32, offset: 800)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1238, file: !704, line: 1104, baseType: !1325, size: 1344, offset: 1344)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !704, line: 867, size: 1344, elements: !1326)
!1326 = !{!1327, !1328, !1329, !1330, !1331, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1325, file: !704, line: 868, baseType: !210, size: 16)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1325, file: !704, line: 869, baseType: !210, size: 16, offset: 16)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1325, file: !704, line: 870, baseType: !210, size: 16, offset: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1325, file: !704, line: 871, baseType: !210, size: 16, offset: 48)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1325, file: !704, line: 873, baseType: !1332, size: 896, offset: 64)
!1332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1333, size: 896, elements: !1157)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !704, line: 864, baseType: !1334)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !704, line: 859, size: 128, elements: !1335)
!1335 = !{!1336, !1337, !1338, !1339, !1340, !1341}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1334, file: !704, line: 860, baseType: !210, size: 16)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1334, file: !704, line: 861, baseType: !210, size: 16, offset: 16)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1334, file: !704, line: 861, baseType: !210, size: 16, offset: 32)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1334, file: !704, line: 861, baseType: !210, size: 16, offset: 48)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1334, file: !704, line: 862, baseType: !91, size: 32, offset: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1334, file: !704, line: 863, baseType: !106, size: 32, offset: 96)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1325, file: !704, line: 874, baseType: !87, size: 64, offset: 960)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1325, file: !704, line: 876, baseType: !106, size: 32, offset: 1024)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1325, file: !704, line: 876, baseType: !106, size: 32, offset: 1056)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1325, file: !704, line: 878, baseType: !91, size: 32, offset: 1088)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1325, file: !704, line: 879, baseType: !91, size: 32, offset: 1120)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1325, file: !704, line: 881, baseType: !91, size: 32, offset: 1152)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1325, file: !704, line: 881, baseType: !91, size: 32, offset: 1184)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1325, file: !704, line: 883, baseType: !702, size: 64, offset: 1216)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1325, file: !704, line: 884, baseType: !384, size: 64, offset: 1280)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1238, file: !704, line: 1107, baseType: !106, size: 32, offset: 2688)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1238, file: !704, line: 1110, baseType: !106, size: 32, offset: 2720)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1238, file: !704, line: 1113, baseType: !210, size: 16, offset: 2752)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1238, file: !704, line: 1113, baseType: !210, size: 16, offset: 2768)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1238, file: !704, line: 1116, baseType: !264, size: 8, offset: 2784)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1238, file: !704, line: 1117, baseType: !737, size: 8, offset: 2792)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1238, file: !704, line: 1120, baseType: !210, size: 16, offset: 2800)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1238, file: !704, line: 1121, baseType: !106, size: 32, offset: 2816)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1238, file: !704, line: 1122, baseType: !106, size: 32, offset: 2848)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1238, file: !704, line: 1123, baseType: !106, size: 32, offset: 2880)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1238, file: !704, line: 1124, baseType: !106, size: 32, offset: 2912)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1238, file: !704, line: 1125, baseType: !106, size: 32, offset: 2944)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1238, file: !704, line: 1126, baseType: !106, size: 32, offset: 2976)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1238, file: !704, line: 1127, baseType: !106, size: 32, offset: 3008)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1238, file: !704, line: 1128, baseType: !106, size: 32, offset: 3040)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1238, file: !704, line: 1129, baseType: !106, size: 32, offset: 3072)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1238, file: !704, line: 1130, baseType: !106, size: 32, offset: 3104)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1238, file: !704, line: 1131, baseType: !210, size: 16, offset: 3136)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1238, file: !704, line: 1132, baseType: !264, size: 8, offset: 3152)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1238, file: !704, line: 1133, baseType: !264, size: 8, offset: 3160)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1238, file: !704, line: 1134, baseType: !1227, size: 24, offset: 3168)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1238, file: !704, line: 1135, baseType: !264, size: 8, offset: 3192)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1238, file: !704, line: 1138, baseType: !384, size: 64, offset: 3200)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1238, file: !704, line: 1139, baseType: !264, size: 8, offset: 3264)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1238, file: !704, line: 1140, baseType: !264, size: 8, offset: 3272)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1238, file: !704, line: 1141, baseType: !264, size: 8, offset: 3280)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1238, file: !704, line: 1142, baseType: !264, size: 8, offset: 3288)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1238, file: !704, line: 1143, baseType: !264, size: 8, offset: 3296)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1238, file: !704, line: 1144, baseType: !1380, size: 64, offset: 3304)
!1380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 64, elements: !1110)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1238, file: !704, line: 1145, baseType: !1380, size: 64, offset: 3368)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1238, file: !704, line: 1148, baseType: !264, size: 8, offset: 3432)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1238, file: !704, line: 1149, baseType: !264, size: 8, offset: 3440)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1238, file: !704, line: 1152, baseType: !264, size: 8, offset: 3448)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1238, file: !704, line: 1152, baseType: !264, size: 8, offset: 3456)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1238, file: !704, line: 1153, baseType: !264, size: 8, offset: 3464)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1238, file: !704, line: 1154, baseType: !210, size: 16, offset: 3472)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1238, file: !704, line: 1154, baseType: !210, size: 16, offset: 3488)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1238, file: !704, line: 1155, baseType: !210, size: 16, offset: 3504)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1238, file: !704, line: 1155, baseType: !210, size: 16, offset: 3520)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1238, file: !704, line: 1156, baseType: !264, size: 8, offset: 3536)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1238, file: !704, line: 1157, baseType: !264, size: 8, offset: 3544)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1238, file: !704, line: 1159, baseType: !264, size: 8, offset: 3552)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1238, file: !704, line: 1160, baseType: !264, size: 8, offset: 3560)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1238, file: !704, line: 1161, baseType: !264, size: 8, offset: 3568)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1238, file: !704, line: 1162, baseType: !264, size: 8, offset: 3576)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1238, file: !704, line: 1165, baseType: !91, size: 32, offset: 3584)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1238, file: !704, line: 1166, baseType: !91, size: 32, offset: 3616)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1238, file: !704, line: 1167, baseType: !91, size: 32, offset: 3648)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1238, file: !704, line: 1168, baseType: !91, size: 32, offset: 3680)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1238, file: !704, line: 1171, baseType: !210, size: 16, offset: 3712)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1238, file: !704, line: 1171, baseType: !210, size: 16, offset: 3728)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1238, file: !704, line: 1172, baseType: !91, size: 32, offset: 3744)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1238, file: !704, line: 1173, baseType: !106, size: 32, offset: 3776)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1238, file: !704, line: 1174, baseType: !106, size: 32, offset: 3808)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1238, file: !704, line: 1177, baseType: !1407, size: 1024, offset: 3840)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !704, line: 963, size: 1024, elements: !1408)
!1408 = !{!1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1432, !1433}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1407, file: !704, line: 965, baseType: !91, size: 32)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1407, file: !704, line: 968, baseType: !106, size: 32, offset: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1407, file: !704, line: 971, baseType: !106, size: 32, offset: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1407, file: !704, line: 974, baseType: !106, size: 32, offset: 96)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1407, file: !704, line: 977, baseType: !124, size: 96, offset: 128)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1407, file: !704, line: 979, baseType: !124, size: 96, offset: 224)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1407, file: !704, line: 982, baseType: !91, size: 32, offset: 320)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1407, file: !704, line: 987, baseType: !694, size: 64, offset: 352)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1407, file: !704, line: 989, baseType: !106, size: 32, offset: 416)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1407, file: !704, line: 994, baseType: !91, size: 32, offset: 448)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1407, file: !704, line: 995, baseType: !91, size: 32, offset: 480)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1407, file: !704, line: 997, baseType: !264, size: 8, offset: 512)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1407, file: !704, line: 998, baseType: !1156, size: 56, offset: 520)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1407, file: !704, line: 1000, baseType: !106, size: 32, offset: 576)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1407, file: !704, line: 1003, baseType: !694, size: 64, offset: 608)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1407, file: !704, line: 1006, baseType: !91, size: 32, offset: 672)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1407, file: !704, line: 1009, baseType: !106, size: 32, offset: 704)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1407, file: !704, line: 1012, baseType: !694, size: 64, offset: 736)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1407, file: !704, line: 1015, baseType: !694, size: 64, offset: 800)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1407, file: !704, line: 1018, baseType: !91, size: 32, offset: 864)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1407, file: !704, line: 1019, baseType: !1430, size: 64, offset: 896)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !704, line: 63, flags: DIFlagFwdDecl)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1407, file: !704, line: 1023, baseType: !106, size: 32, offset: 960)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1407, file: !704, line: 1024, baseType: !91, size: 32, offset: 992)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1238, file: !704, line: 1179, baseType: !1435, size: 320, offset: 4864)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !704, line: 1043, size: 320, elements: !1436)
!1436 = !{!1437, !1438, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1435, file: !704, line: 1044, baseType: !264, size: 8)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1435, file: !704, line: 1045, baseType: !1439, size: 16, offset: 8)
!1439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 16, elements: !211)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1435, file: !704, line: 1048, baseType: !264, size: 8, offset: 24)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1435, file: !704, line: 1049, baseType: !106, size: 32, offset: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1435, file: !704, line: 1049, baseType: !106, size: 32, offset: 64)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1435, file: !704, line: 1052, baseType: !106, size: 32, offset: 96)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1435, file: !704, line: 1052, baseType: !106, size: 32, offset: 128)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1435, file: !704, line: 1053, baseType: !264, size: 8, offset: 160)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1435, file: !704, line: 1054, baseType: !1227, size: 24, offset: 168)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1435, file: !704, line: 1057, baseType: !106, size: 32, offset: 192)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1435, file: !704, line: 1057, baseType: !106, size: 32, offset: 224)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1435, file: !704, line: 1060, baseType: !106, size: 32, offset: 256)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1435, file: !704, line: 1060, baseType: !106, size: 32, offset: 288)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !703, file: !704, line: 1247, baseType: !1452, size: 64, offset: 2176)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !704, line: 60, flags: DIFlagFwdDecl)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !703, file: !704, line: 1251, baseType: !1455, size: 31872, offset: 2240)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !704, line: 403, size: 31872, elements: !1456)
!1456 = !{!1457, !1532, !1552, !1561, !1581, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1719, !1720, !1721, !1725, !1741, !1742}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1455, file: !704, line: 404, baseType: !1458, size: 1984)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !704, line: 259, size: 1984, elements: !1459)
!1459 = !{!1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1477, !1527}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1458, file: !704, line: 260, baseType: !264, size: 8)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1458, file: !704, line: 263, baseType: !264, size: 8, offset: 8)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1458, file: !704, line: 266, baseType: !264, size: 8, offset: 16)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1458, file: !704, line: 267, baseType: !264, size: 8, offset: 24)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1458, file: !704, line: 269, baseType: !264, size: 8, offset: 32)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1458, file: !704, line: 270, baseType: !264, size: 8, offset: 40)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1458, file: !704, line: 276, baseType: !264, size: 8, offset: 48)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1458, file: !704, line: 279, baseType: !264, size: 8, offset: 56)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1458, file: !704, line: 280, baseType: !210, size: 16, offset: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1458, file: !704, line: 280, baseType: !210, size: 16, offset: 80)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1458, file: !704, line: 281, baseType: !106, size: 32, offset: 96)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1458, file: !704, line: 284, baseType: !264, size: 8, offset: 128)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1458, file: !704, line: 285, baseType: !264, size: 8, offset: 136)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1458, file: !704, line: 287, baseType: !1474, size: 48, offset: 144)
!1474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 48, elements: !1475)
!1475 = !{!1476}
!1476 = !DISubrange(count: 6)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1458, file: !704, line: 290, baseType: !1478, size: 1280, offset: 192)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !917, line: 174, baseType: !1479)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !917, line: 166, size: 1280, elements: !1480)
!1480 = !{!1481, !1482, !1483, !1484, !1485, !1486, !1487, !1526}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1479, file: !917, line: 167, baseType: !91, size: 32)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1479, file: !917, line: 167, baseType: !91, size: 32, offset: 32)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1479, file: !917, line: 168, baseType: !435, size: 512, offset: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1479, file: !917, line: 169, baseType: !435, size: 512, offset: 576)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1479, file: !917, line: 170, baseType: !106, size: 32, offset: 1088)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1479, file: !917, line: 171, baseType: !106, size: 32, offset: 1120)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1479, file: !917, line: 172, baseType: !1488, size: 64, offset: 1152)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !917, line: 72, size: 3072, elements: !1490)
!1490 = !{!1491, !1492, !1493, !1494, !1495, !1496, !1497, !1522, !1523, !1524, !1525}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1489, file: !917, line: 73, baseType: !91, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1489, file: !917, line: 73, baseType: !91, size: 32, offset: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1489, file: !917, line: 74, baseType: !91, size: 32, offset: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1489, file: !917, line: 75, baseType: !91, size: 32, offset: 96)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1489, file: !917, line: 77, baseType: !771, size: 128, offset: 128)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1489, file: !917, line: 77, baseType: !771, size: 128, offset: 256)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1489, file: !917, line: 79, baseType: !1498, size: 2304, offset: 384)
!1498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1499, size: 2304, elements: !577)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !917, line: 67, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !917, line: 55, size: 576, elements: !1501)
!1501 = !{!1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1518, !1519, !1520, !1521}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1500, file: !917, line: 56, baseType: !210, size: 16)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1500, file: !917, line: 56, baseType: !210, size: 16, offset: 16)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1500, file: !917, line: 58, baseType: !106, size: 32, offset: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1500, file: !917, line: 59, baseType: !106, size: 32, offset: 64)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1500, file: !917, line: 59, baseType: !106, size: 32, offset: 96)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1500, file: !917, line: 60, baseType: !694, size: 64, offset: 128)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1500, file: !917, line: 60, baseType: !694, size: 64, offset: 192)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1500, file: !917, line: 61, baseType: !1510, size: 64, offset: 256)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !917, line: 47, baseType: !1512)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !917, line: 44, size: 96, elements: !1513)
!1513 = !{!1514, !1515, !1516, !1517}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1512, file: !917, line: 45, baseType: !106, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1512, file: !917, line: 45, baseType: !106, size: 32, offset: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1512, file: !917, line: 46, baseType: !210, size: 16, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1512, file: !917, line: 46, baseType: !210, size: 16, offset: 80)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1500, file: !917, line: 62, baseType: !1510, size: 64, offset: 320)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1500, file: !917, line: 64, baseType: !1510, size: 64, offset: 384)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1500, file: !917, line: 65, baseType: !694, size: 64, offset: 448)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1500, file: !917, line: 66, baseType: !694, size: 64, offset: 512)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1489, file: !917, line: 80, baseType: !124, size: 96, offset: 2688)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1489, file: !917, line: 80, baseType: !124, size: 96, offset: 2784)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1489, file: !917, line: 81, baseType: !124, size: 96, offset: 2880)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1489, file: !917, line: 83, baseType: !124, size: 96, offset: 2976)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1479, file: !917, line: 173, baseType: !87, size: 64, offset: 1216)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1458, file: !704, line: 291, baseType: !1528, size: 512, offset: 1472)
!1528 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !917, line: 178, baseType: !1529)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !917, line: 176, size: 512, elements: !1530)
!1530 = !{!1531}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1529, file: !917, line: 177, baseType: !435, size: 512)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1455, file: !704, line: 406, baseType: !1533, size: 64, offset: 1984)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !704, line: 80, size: 1472, elements: !1535)
!1535 = !{!1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1534, file: !704, line: 81, baseType: !87, size: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1534, file: !704, line: 82, baseType: !87, size: 64, offset: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1534, file: !704, line: 83, baseType: !7, size: 32, offset: 128)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1534, file: !704, line: 84, baseType: !7, size: 32, offset: 160)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1534, file: !704, line: 86, baseType: !7, size: 32, offset: 192)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1534, file: !704, line: 87, baseType: !7, size: 32, offset: 224)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1534, file: !704, line: 88, baseType: !7, size: 32, offset: 256)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1534, file: !704, line: 89, baseType: !7, size: 32, offset: 288)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1534, file: !704, line: 90, baseType: !7, size: 32, offset: 320)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1534, file: !704, line: 91, baseType: !7, size: 32, offset: 352)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1534, file: !704, line: 92, baseType: !7, size: 32, offset: 384)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1534, file: !704, line: 93, baseType: !7, size: 32, offset: 416)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1534, file: !704, line: 95, baseType: !1549, size: 1024, offset: 448)
!1549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 1024, elements: !1550)
!1550 = !{!1551}
!1551 = !DISubrange(count: 128)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1455, file: !704, line: 407, baseType: !1553, size: 64, offset: 2048)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !704, line: 98, size: 1216, elements: !1555)
!1555 = !{!1556, !1557, !1558, !1559, !1560}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1554, file: !704, line: 100, baseType: !87, size: 64)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1554, file: !704, line: 101, baseType: !87, size: 64, offset: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1554, file: !704, line: 103, baseType: !7, size: 32, offset: 128)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1554, file: !704, line: 104, baseType: !7, size: 32, offset: 160)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1554, file: !704, line: 106, baseType: !1549, size: 1024, offset: 192)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1455, file: !704, line: 408, baseType: !1562, size: 512, offset: 2112)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !704, line: 109, size: 512, elements: !1563)
!1563 = !{!1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1562, file: !704, line: 111, baseType: !91, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1562, file: !704, line: 112, baseType: !91, size: 32, offset: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1562, file: !704, line: 115, baseType: !91, size: 32, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1562, file: !704, line: 116, baseType: !91, size: 32, offset: 96)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1562, file: !704, line: 117, baseType: !91, size: 32, offset: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1562, file: !704, line: 118, baseType: !91, size: 32, offset: 160)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1562, file: !704, line: 119, baseType: !91, size: 32, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1562, file: !704, line: 120, baseType: !91, size: 32, offset: 224)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1562, file: !704, line: 121, baseType: !91, size: 32, offset: 256)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1562, file: !704, line: 122, baseType: !91, size: 32, offset: 288)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1562, file: !704, line: 125, baseType: !91, size: 32, offset: 320)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1562, file: !704, line: 126, baseType: !91, size: 32, offset: 352)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1562, file: !704, line: 127, baseType: !210, size: 16, offset: 384)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1562, file: !704, line: 128, baseType: !210, size: 16, offset: 400)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1562, file: !704, line: 129, baseType: !91, size: 32, offset: 416)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1562, file: !704, line: 130, baseType: !91, size: 32, offset: 448)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1562, file: !704, line: 131, baseType: !91, size: 32, offset: 480)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1455, file: !704, line: 409, baseType: !1582, size: 576, offset: 2624)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !704, line: 134, size: 576, elements: !1583)
!1583 = !{!1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1582, file: !704, line: 135, baseType: !91, size: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1582, file: !704, line: 136, baseType: !91, size: 32, offset: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1582, file: !704, line: 137, baseType: !91, size: 32, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1582, file: !704, line: 138, baseType: !91, size: 32, offset: 96)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1582, file: !704, line: 139, baseType: !91, size: 32, offset: 128)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1582, file: !704, line: 140, baseType: !91, size: 32, offset: 160)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1582, file: !704, line: 141, baseType: !91, size: 32, offset: 192)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1582, file: !704, line: 142, baseType: !91, size: 32, offset: 224)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1582, file: !704, line: 143, baseType: !106, size: 32, offset: 256)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1582, file: !704, line: 144, baseType: !91, size: 32, offset: 288)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1582, file: !704, line: 145, baseType: !91, size: 32, offset: 320)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1582, file: !704, line: 147, baseType: !91, size: 32, offset: 352)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1582, file: !704, line: 148, baseType: !91, size: 32, offset: 384)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1582, file: !704, line: 149, baseType: !91, size: 32, offset: 416)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1582, file: !704, line: 150, baseType: !91, size: 32, offset: 448)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1582, file: !704, line: 151, baseType: !91, size: 32, offset: 480)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1582, file: !704, line: 152, baseType: !424, size: 64, offset: 512)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1455, file: !704, line: 411, baseType: !91, size: 32, offset: 3200)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1455, file: !704, line: 411, baseType: !91, size: 32, offset: 3232)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1455, file: !704, line: 411, baseType: !91, size: 32, offset: 3264)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1455, file: !704, line: 412, baseType: !106, size: 32, offset: 3296)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1455, file: !704, line: 413, baseType: !91, size: 32, offset: 3328)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1455, file: !704, line: 413, baseType: !91, size: 32, offset: 3360)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1455, file: !704, line: 415, baseType: !91, size: 32, offset: 3392)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1455, file: !704, line: 415, baseType: !91, size: 32, offset: 3424)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1455, file: !704, line: 416, baseType: !210, size: 16, offset: 3456)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1455, file: !704, line: 416, baseType: !210, size: 16, offset: 3472)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1455, file: !704, line: 418, baseType: !106, size: 32, offset: 3488)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1455, file: !704, line: 418, baseType: !106, size: 32, offset: 3520)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1455, file: !704, line: 421, baseType: !106, size: 32, offset: 3552)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1455, file: !704, line: 421, baseType: !106, size: 32, offset: 3584)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1455, file: !704, line: 421, baseType: !106, size: 32, offset: 3616)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1455, file: !704, line: 425, baseType: !210, size: 16, offset: 3648)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1455, file: !704, line: 425, baseType: !210, size: 16, offset: 3664)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1455, file: !704, line: 425, baseType: !210, size: 16, offset: 3680)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1455, file: !704, line: 426, baseType: !210, size: 16, offset: 3696)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1455, file: !704, line: 428, baseType: !210, size: 16, offset: 3712)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1455, file: !704, line: 428, baseType: !210, size: 16, offset: 3728)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1455, file: !704, line: 431, baseType: !91, size: 32, offset: 3744)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1455, file: !704, line: 433, baseType: !210, size: 16, offset: 3776)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1455, file: !704, line: 435, baseType: !210, size: 16, offset: 3792)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1455, file: !704, line: 437, baseType: !210, size: 16, offset: 3808)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1455, file: !704, line: 439, baseType: !210, size: 16, offset: 3824)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1455, file: !704, line: 441, baseType: !210, size: 16, offset: 3840)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1455, file: !704, line: 443, baseType: !210, size: 16, offset: 3856)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1455, file: !704, line: 449, baseType: !91, size: 32, offset: 3872)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1455, file: !704, line: 453, baseType: !91, size: 32, offset: 3904)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1455, file: !704, line: 458, baseType: !210, size: 16, offset: 3936)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1455, file: !704, line: 462, baseType: !210, size: 16, offset: 3952)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1455, file: !704, line: 467, baseType: !91, size: 32, offset: 3968)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1455, file: !704, line: 467, baseType: !91, size: 32, offset: 4000)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1455, file: !704, line: 469, baseType: !210, size: 16, offset: 4032)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1455, file: !704, line: 469, baseType: !210, size: 16, offset: 4048)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1455, file: !704, line: 469, baseType: !210, size: 16, offset: 4064)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1455, file: !704, line: 469, baseType: !210, size: 16, offset: 4080)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1455, file: !704, line: 474, baseType: !210, size: 16, offset: 4096)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1455, file: !704, line: 475, baseType: !264, size: 8, offset: 4112)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1455, file: !704, line: 476, baseType: !264, size: 8, offset: 4120)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1455, file: !704, line: 481, baseType: !91, size: 32, offset: 4128)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1455, file: !704, line: 486, baseType: !91, size: 32, offset: 4160)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1455, file: !704, line: 491, baseType: !91, size: 32, offset: 4192)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1455, file: !704, line: 496, baseType: !210, size: 16, offset: 4224)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1455, file: !704, line: 498, baseType: !210, size: 16, offset: 4240)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1455, file: !704, line: 501, baseType: !210, size: 16, offset: 4256)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1455, file: !704, line: 502, baseType: !210, size: 16, offset: 4272)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1455, file: !704, line: 508, baseType: !210, size: 16, offset: 4288)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1455, file: !704, line: 513, baseType: !210, size: 16, offset: 4304)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1455, file: !704, line: 515, baseType: !210, size: 16, offset: 4320)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1455, file: !704, line: 515, baseType: !210, size: 16, offset: 4336)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1455, file: !704, line: 519, baseType: !771, size: 128, offset: 4352)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1455, file: !704, line: 519, baseType: !771, size: 128, offset: 4480)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1455, file: !704, line: 520, baseType: !1656, size: 128, offset: 4608)
!1656 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !772, line: 89, baseType: !1657)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !772, line: 86, size: 128, elements: !1658)
!1658 = !{!1659, !1660, !1661, !1662}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1657, file: !772, line: 87, baseType: !91, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1657, file: !772, line: 87, baseType: !91, size: 32, offset: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1657, file: !772, line: 88, baseType: !91, size: 32, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1657, file: !772, line: 88, baseType: !91, size: 32, offset: 96)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1455, file: !704, line: 523, baseType: !98, size: 128, offset: 4736)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1455, file: !704, line: 524, baseType: !210, size: 16, offset: 4864)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1455, file: !704, line: 527, baseType: !210, size: 16, offset: 4880)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1455, file: !704, line: 532, baseType: !106, size: 32, offset: 4896)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1455, file: !704, line: 532, baseType: !106, size: 32, offset: 4928)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1455, file: !704, line: 534, baseType: !106, size: 32, offset: 4960)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1455, file: !704, line: 538, baseType: !106, size: 32, offset: 4992)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1455, file: !704, line: 542, baseType: !91, size: 32, offset: 5024)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1455, file: !704, line: 545, baseType: !106, size: 32, offset: 5056)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1455, file: !704, line: 545, baseType: !106, size: 32, offset: 5088)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1455, file: !704, line: 545, baseType: !106, size: 32, offset: 5120)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1455, file: !704, line: 548, baseType: !106, size: 32, offset: 5152)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1455, file: !704, line: 551, baseType: !210, size: 16, offset: 5184)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1455, file: !704, line: 551, baseType: !210, size: 16, offset: 5200)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1455, file: !704, line: 551, baseType: !210, size: 16, offset: 5216)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1455, file: !704, line: 551, baseType: !210, size: 16, offset: 5232)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1455, file: !704, line: 552, baseType: !210, size: 16, offset: 5248)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1455, file: !704, line: 552, baseType: !210, size: 16, offset: 5264)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1455, file: !704, line: 553, baseType: !106, size: 32, offset: 5280)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1455, file: !704, line: 553, baseType: !106, size: 32, offset: 5312)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1455, file: !704, line: 554, baseType: !210, size: 16, offset: 5344)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1455, file: !704, line: 554, baseType: !210, size: 16, offset: 5360)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1455, file: !704, line: 555, baseType: !106, size: 32, offset: 5376)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1455, file: !704, line: 555, baseType: !106, size: 32, offset: 5408)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1455, file: !704, line: 558, baseType: !407, size: 8192, offset: 5440)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1455, file: !704, line: 561, baseType: !91, size: 32, offset: 13632)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1455, file: !704, line: 562, baseType: !210, size: 16, offset: 13664)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1455, file: !704, line: 562, baseType: !210, size: 16, offset: 13680)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1455, file: !704, line: 565, baseType: !872, size: 6144, offset: 13696)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1455, file: !704, line: 568, baseType: !576, size: 128, offset: 19840)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1455, file: !704, line: 569, baseType: !576, size: 128, offset: 19968)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1455, file: !704, line: 572, baseType: !264, size: 8, offset: 20096)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1455, file: !704, line: 573, baseType: !264, size: 8, offset: 20104)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1455, file: !704, line: 574, baseType: !264, size: 8, offset: 20112)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1455, file: !704, line: 575, baseType: !1305, size: 40, offset: 20120)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1455, file: !704, line: 578, baseType: !91, size: 32, offset: 20160)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1455, file: !704, line: 579, baseType: !210, size: 16, offset: 20192)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1455, file: !704, line: 580, baseType: !210, size: 16, offset: 20208)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1455, file: !704, line: 581, baseType: !106, size: 32, offset: 20224)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1455, file: !704, line: 582, baseType: !106, size: 32, offset: 20256)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1455, file: !704, line: 585, baseType: !210, size: 16, offset: 20288)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1455, file: !704, line: 585, baseType: !210, size: 16, offset: 20304)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1455, file: !704, line: 586, baseType: !106, size: 32, offset: 20320)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1455, file: !704, line: 589, baseType: !210, size: 16, offset: 20352)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1455, file: !704, line: 589, baseType: !210, size: 16, offset: 20368)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1455, file: !704, line: 590, baseType: !91, size: 32, offset: 20384)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1455, file: !704, line: 593, baseType: !210, size: 16, offset: 20416)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1455, file: !704, line: 593, baseType: !210, size: 16, offset: 20432)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1455, file: !704, line: 594, baseType: !210, size: 16, offset: 20448)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1455, file: !704, line: 594, baseType: !210, size: 16, offset: 20464)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1455, file: !704, line: 595, baseType: !106, size: 32, offset: 20480)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1455, file: !704, line: 596, baseType: !106, size: 32, offset: 20512)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1455, file: !704, line: 597, baseType: !1716, size: 64, offset: 20544)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1718, line: 44, flags: DIFlagFwdDecl)
!1718 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1455, file: !704, line: 600, baseType: !91, size: 32, offset: 20608)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1455, file: !704, line: 601, baseType: !106, size: 32, offset: 20640)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1455, file: !704, line: 604, baseType: !1722, size: 256, offset: 20672)
!1722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 256, elements: !1723)
!1723 = !{!1724}
!1724 = !DISubrange(count: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1455, file: !704, line: 607, baseType: !1726, size: 10880, offset: 20928)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !704, line: 364, size: 10880, elements: !1727)
!1727 = !{!1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1726, file: !704, line: 365, baseType: !1458, size: 1984)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1726, file: !704, line: 367, baseType: !407, size: 8192, offset: 1984)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1726, file: !704, line: 369, baseType: !210, size: 16, offset: 10176)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1726, file: !704, line: 369, baseType: !210, size: 16, offset: 10192)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1726, file: !704, line: 370, baseType: !210, size: 16, offset: 10208)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1726, file: !704, line: 370, baseType: !210, size: 16, offset: 10224)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1726, file: !704, line: 372, baseType: !106, size: 32, offset: 10240)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1726, file: !704, line: 373, baseType: !106, size: 32, offset: 10272)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1726, file: !704, line: 375, baseType: !1227, size: 24, offset: 10304)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1726, file: !704, line: 376, baseType: !264, size: 8, offset: 10328)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1726, file: !704, line: 378, baseType: !264, size: 8, offset: 10336)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1726, file: !704, line: 379, baseType: !1227, size: 24, offset: 10344)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1726, file: !704, line: 381, baseType: !435, size: 512, offset: 10368)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1455, file: !704, line: 609, baseType: !91, size: 32, offset: 31808)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1455, file: !704, line: 610, baseType: !91, size: 32, offset: 31840)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !703, file: !704, line: 1252, baseType: !1744, size: 256, offset: 34112)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !704, line: 158, size: 256, elements: !1745)
!1745 = !{!1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1744, file: !704, line: 159, baseType: !91, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1744, file: !704, line: 160, baseType: !106, size: 32, offset: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1744, file: !704, line: 161, baseType: !106, size: 32, offset: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1744, file: !704, line: 162, baseType: !106, size: 32, offset: 96)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1744, file: !704, line: 163, baseType: !91, size: 32, offset: 128)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1744, file: !704, line: 164, baseType: !210, size: 16, offset: 160)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1744, file: !704, line: 165, baseType: !210, size: 16, offset: 176)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1744, file: !704, line: 166, baseType: !106, size: 32, offset: 192)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1744, file: !704, line: 167, baseType: !106, size: 32, offset: 224)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !703, file: !704, line: 1254, baseType: !98, size: 128, offset: 34368)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !703, file: !704, line: 1255, baseType: !98, size: 128, offset: 34496)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !703, file: !704, line: 1257, baseType: !87, size: 64, offset: 34624)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !703, file: !704, line: 1258, baseType: !87, size: 64, offset: 34688)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !703, file: !704, line: 1259, baseType: !87, size: 64, offset: 34752)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !703, file: !704, line: 1260, baseType: !87, size: 64, offset: 34816)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !703, file: !704, line: 1262, baseType: !87, size: 64, offset: 34880)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !703, file: !704, line: 1265, baseType: !1763, size: 64, offset: 34944)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 64)
!1764 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !704, line: 1265, flags: DIFlagFwdDecl)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !703, file: !704, line: 1266, baseType: !210, size: 16, offset: 35008)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !703, file: !704, line: 1267, baseType: !210, size: 16, offset: 35024)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !703, file: !704, line: 1270, baseType: !91, size: 32, offset: 35040)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !703, file: !704, line: 1271, baseType: !98, size: 128, offset: 35072)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !703, file: !704, line: 1274, baseType: !1770, size: 128, offset: 35200)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !704, line: 650, size: 128, elements: !1771)
!1771 = !{!1772, !1773, !1774, !1775, !1776}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1770, file: !704, line: 651, baseType: !124, size: 96)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1770, file: !704, line: 652, baseType: !264, size: 8, offset: 96)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1770, file: !704, line: 652, baseType: !264, size: 8, offset: 104)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1770, file: !704, line: 652, baseType: !264, size: 8, offset: 112)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1770, file: !704, line: 652, baseType: !264, size: 8, offset: 120)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !703, file: !704, line: 1275, baseType: !1778, size: 1472, offset: 35328)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !704, line: 676, size: 1472, elements: !1779)
!1779 = !{!1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1792, !1802, !1803, !1804, !1805, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1778, file: !704, line: 679, baseType: !1770, size: 128)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1778, file: !704, line: 680, baseType: !210, size: 16, offset: 128)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1778, file: !704, line: 680, baseType: !210, size: 16, offset: 144)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1778, file: !704, line: 680, baseType: !210, size: 16, offset: 160)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1778, file: !704, line: 680, baseType: !210, size: 16, offset: 176)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1778, file: !704, line: 681, baseType: !210, size: 16, offset: 192)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1778, file: !704, line: 681, baseType: !210, size: 16, offset: 208)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1778, file: !704, line: 681, baseType: !210, size: 16, offset: 224)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1778, file: !704, line: 681, baseType: !210, size: 16, offset: 240)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1778, file: !704, line: 682, baseType: !210, size: 16, offset: 256)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1778, file: !704, line: 682, baseType: !1791, size: 48, offset: 272)
!1791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 48, elements: !125)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1778, file: !704, line: 685, baseType: !1793, size: 192, offset: 320)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !704, line: 633, size: 192, elements: !1794)
!1794 = !{!1795, !1796, !1797, !1798, !1799, !1800, !1801}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1793, file: !704, line: 634, baseType: !210, size: 16)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1793, file: !704, line: 634, baseType: !210, size: 16, offset: 16)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1793, file: !704, line: 635, baseType: !210, size: 16, offset: 32)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1793, file: !704, line: 635, baseType: !210, size: 16, offset: 48)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1793, file: !704, line: 636, baseType: !106, size: 32, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1793, file: !704, line: 636, baseType: !106, size: 32, offset: 96)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1793, file: !704, line: 637, baseType: !1716, size: 64, offset: 128)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1778, file: !704, line: 686, baseType: !210, size: 16, offset: 512)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1778, file: !704, line: 686, baseType: !210, size: 16, offset: 528)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1778, file: !704, line: 687, baseType: !106, size: 32, offset: 544)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1778, file: !704, line: 688, baseType: !1806, size: 448, offset: 576)
!1806 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !704, line: 674, baseType: !1807)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !704, line: 659, size: 448, elements: !1808)
!1808 = !{!1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1807, file: !704, line: 660, baseType: !106, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1807, file: !704, line: 661, baseType: !106, size: 32, offset: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1807, file: !704, line: 662, baseType: !106, size: 32, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1807, file: !704, line: 663, baseType: !106, size: 32, offset: 96)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1807, file: !704, line: 664, baseType: !106, size: 32, offset: 128)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1807, file: !704, line: 665, baseType: !106, size: 32, offset: 160)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1807, file: !704, line: 666, baseType: !106, size: 32, offset: 192)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1807, file: !704, line: 667, baseType: !106, size: 32, offset: 224)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1807, file: !704, line: 668, baseType: !106, size: 32, offset: 256)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1807, file: !704, line: 669, baseType: !106, size: 32, offset: 288)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1807, file: !704, line: 670, baseType: !91, size: 32, offset: 320)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1807, file: !704, line: 671, baseType: !106, size: 32, offset: 352)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1807, file: !704, line: 672, baseType: !106, size: 32, offset: 384)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1807, file: !704, line: 673, baseType: !210, size: 16, offset: 416)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1807, file: !704, line: 673, baseType: !210, size: 16, offset: 432)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1778, file: !704, line: 692, baseType: !106, size: 32, offset: 1024)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1778, file: !704, line: 697, baseType: !106, size: 32, offset: 1056)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1778, file: !704, line: 703, baseType: !91, size: 32, offset: 1088)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1778, file: !704, line: 704, baseType: !210, size: 16, offset: 1120)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1778, file: !704, line: 704, baseType: !210, size: 16, offset: 1136)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1778, file: !704, line: 705, baseType: !210, size: 16, offset: 1152)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1778, file: !704, line: 706, baseType: !210, size: 16, offset: 1168)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1778, file: !704, line: 707, baseType: !210, size: 16, offset: 1184)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1778, file: !704, line: 708, baseType: !210, size: 16, offset: 1200)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1778, file: !704, line: 709, baseType: !210, size: 16, offset: 1216)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1778, file: !704, line: 709, baseType: !210, size: 16, offset: 1232)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1778, file: !704, line: 709, baseType: !210, size: 16, offset: 1248)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1778, file: !704, line: 709, baseType: !210, size: 16, offset: 1264)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1778, file: !704, line: 710, baseType: !210, size: 16, offset: 1280)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1778, file: !704, line: 711, baseType: !210, size: 16, offset: 1296)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1778, file: !704, line: 712, baseType: !106, size: 32, offset: 1312)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1778, file: !704, line: 713, baseType: !106, size: 32, offset: 1344)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1778, file: !704, line: 713, baseType: !106, size: 32, offset: 1376)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1778, file: !704, line: 713, baseType: !106, size: 32, offset: 1408)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1778, file: !704, line: 713, baseType: !106, size: 32, offset: 1440)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !703, file: !704, line: 1278, baseType: !1845, size: 64, offset: 36800)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !704, line: 1197, size: 64, elements: !1846)
!1846 = !{!1847, !1848, !1849, !1850}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1845, file: !704, line: 1199, baseType: !106, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1845, file: !704, line: 1200, baseType: !264, size: 8, offset: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1845, file: !704, line: 1201, baseType: !264, size: 8, offset: 40)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1845, file: !704, line: 1202, baseType: !210, size: 16, offset: 48)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !703, file: !704, line: 1281, baseType: !535, size: 64, offset: 36864)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !703, file: !704, line: 1284, baseType: !1853, size: 192, offset: 36928)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !704, line: 1208, size: 192, elements: !1854)
!1854 = !{!1855, !1856, !1857, !1858}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1853, file: !704, line: 1209, baseType: !124, size: 96)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1853, file: !704, line: 1210, baseType: !91, size: 32, offset: 96)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1853, file: !704, line: 1210, baseType: !91, size: 32, offset: 128)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1853, file: !704, line: 1210, baseType: !91, size: 32, offset: 160)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !703, file: !704, line: 1287, baseType: !925, size: 64, offset: 37120)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !703, file: !704, line: 1289, baseType: !676, size: 64, offset: 37184)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !703, file: !704, line: 1290, baseType: !676, size: 64, offset: 37248)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !703, file: !704, line: 1293, baseType: !1478, size: 1280, offset: 37312)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !703, file: !704, line: 1294, baseType: !1528, size: 512, offset: 38592)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !703, file: !704, line: 1295, baseType: !916, size: 512, offset: 39104)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !703, file: !704, line: 1298, baseType: !1866, size: 64, offset: 39616)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 64)
!1867 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !704, line: 1298, flags: DIFlagFwdDecl)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !699, file: !698, line: 53, baseType: !91, size: 32, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !699, file: !698, line: 54, baseType: !91, size: 32, offset: 96)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !699, file: !698, line: 55, baseType: !91, size: 32, offset: 128)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !699, file: !698, line: 55, baseType: !91, size: 32, offset: 160)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !699, file: !698, line: 56, baseType: !264, size: 8, offset: 192)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !699, file: !698, line: 56, baseType: !264, size: 8, offset: 200)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !699, file: !698, line: 57, baseType: !264, size: 8, offset: 208)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !699, file: !698, line: 57, baseType: !264, size: 8, offset: 216)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !699, file: !698, line: 59, baseType: !210, size: 16, offset: 224)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !699, file: !698, line: 59, baseType: !210, size: 16, offset: 240)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !699, file: !698, line: 59, baseType: !210, size: 16, offset: 256)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !699, file: !698, line: 61, baseType: !210, size: 16, offset: 272)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !699, file: !698, line: 63, baseType: !91, size: 32, offset: 288)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !385, file: !6, line: 293, baseType: !98, size: 128, offset: 11200)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !385, file: !6, line: 294, baseType: !1883, size: 64, offset: 11328)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !6, line: 113, baseType: !1885)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !6, line: 108, size: 256, elements: !1886)
!1886 = !{!1887, !1889, !1890, !1891, !1892}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1885, file: !6, line: 109, baseType: !1888, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1885, file: !6, line: 109, baseType: !1888, size: 64, offset: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1885, file: !6, line: 110, baseType: !384, size: 64, offset: 128)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1885, file: !6, line: 111, baseType: !91, size: 32, offset: 192)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1885, file: !6, line: 112, baseType: !106, size: 32, offset: 224)
!1893 = !DIGlobalVariableExpression(var: !1894, expr: !DIExpression())
!1894 = distinct !DIGlobalVariable(name: "LAST_SNAP_POINT_VALID", scope: !2, file: !3, line: 71, type: !91, isLocal: true, isDefinition: true)
!1895 = !DIGlobalVariableExpression(var: !1896, expr: !DIExpression())
!1896 = distinct !DIGlobalVariable(name: "LAST_SNAP_POINT", scope: !2, file: !3, line: 72, type: !124, isLocal: true, isDefinition: true)
!1897 = !DIGlobalVariableExpression(var: !1898, expr: !DIExpression())
!1898 = distinct !DIGlobalVariable(name: "GESTURE_ACTIONS", scope: !2, file: !3, line: 123, type: !1899, isLocal: true, isDefinition: true)
!1899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1900, size: 5120, elements: !1110)
!1900 = !DIDerivedType(tag: DW_TAG_typedef, name: "SK_GestureAction", file: !3, line: 65, baseType: !1901)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SK_GestureAction", file: !3, line: 61, size: 640, elements: !1902)
!1902 = !{!1903, !1904, !1937}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1901, file: !3, line: 62, baseType: !435, size: 512)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "detect", scope: !1901, file: !3, line: 63, baseType: !1905, size: 64, offset: 512)
!1905 = !DIDerivedType(tag: DW_TAG_typedef, name: "GestureDetectFct", file: !3, line: 58, baseType: !1906)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64)
!1907 = !DISubroutineType(types: !1908)
!1908 = !{!91, !228, !1909, !1920}
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "SK_Gesture", file: !21, line: 103, baseType: !1911)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SK_Gesture", file: !21, line: 93, size: 512, elements: !1912)
!1912 = !{!1913, !1914, !1915, !1916, !1917, !1918, !1919}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "stk", scope: !1911, file: !21, line: 94, baseType: !195, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !1911, file: !21, line: 95, baseType: !195, size: 64, offset: 64)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "intersections", scope: !1911, file: !21, line: 97, baseType: !98, size: 128, offset: 128)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "self_intersections", scope: !1911, file: !21, line: 98, baseType: !98, size: 128, offset: 256)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "nb_self_intersections", scope: !1911, file: !21, line: 100, baseType: !91, size: 32, offset: 384)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "nb_intersections", scope: !1911, file: !21, line: 101, baseType: !91, size: 32, offset: 416)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "nb_segments", scope: !1911, file: !21, line: 102, baseType: !91, size: 32, offset: 448)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DIDerivedType(tag: DW_TAG_typedef, name: "SK_Sketch", file: !21, line: 90, baseType: !1922)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SK_Sketch", file: !21, line: 83, size: 896, elements: !1923)
!1923 = !{!1924, !1925, !1926, !1927, !1928, !1929}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "strokes", scope: !1922, file: !21, line: 84, baseType: !98, size: 128)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "depth_peels", scope: !1922, file: !21, line: 85, baseType: !98, size: 128, offset: 128)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "active_stroke", scope: !1922, file: !21, line: 86, baseType: !195, size: 64, offset: 256)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !1922, file: !21, line: 87, baseType: !195, size: 64, offset: 320)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "next_point", scope: !1922, file: !21, line: 88, baseType: !204, size: 320, offset: 384)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "over", scope: !1922, file: !21, line: 89, baseType: !1930, size: 192, offset: 704)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "SK_Overdraw", file: !21, line: 63, baseType: !1931)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SK_Overdraw", file: !21, line: 59, size: 192, elements: !1932)
!1932 = !{!1933, !1934, !1935, !1936}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !1931, file: !21, line: 60, baseType: !195, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1931, file: !21, line: 61, baseType: !91, size: 32, offset: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1931, file: !21, line: 61, baseType: !91, size: 32, offset: 96)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1931, file: !21, line: 62, baseType: !91, size: 32, offset: 128)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "apply", scope: !1901, file: !3, line: 64, baseType: !1938, size: 64, offset: 576)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "GestureApplyFct", file: !3, line: 59, baseType: !1939)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DISubroutineType(types: !1941)
!1941 = !{null, !228, !1909, !1920}
!1942 = !{i32 7, !"Dwarf Version", i32 4}
!1943 = !{i32 2, !"Debug Info Version", i32 3}
!1944 = !{i32 1, !"wchar_size", i32 4}
!1945 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1946 = distinct !DISubprogram(name: "BIF_makeListTemplates", scope: !3, file: !3, line: 141, type: !1947, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{null, !1949}
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !229)
!1951 = !{}
!1952 = !DILocalVariable(name: "C", arg: 1, scope: !1946, file: !3, line: 141, type: !1949)
!1953 = !DILocation(line: 141, column: 44, scope: !1946)
!1954 = !DILocalVariable(name: "obedit", scope: !1946, file: !3, line: 143, type: !1955)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !6, line: 295, baseType: !385)
!1957 = !DILocation(line: 143, column: 10, scope: !1946)
!1958 = !DILocation(line: 143, column: 40, scope: !1946)
!1959 = !DILocation(line: 143, column: 19, scope: !1946)
!1960 = !DILocalVariable(name: "scene", scope: !1946, file: !3, line: 144, type: !1961)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !704, line: 1299, baseType: !703)
!1963 = !DILocation(line: 144, column: 9, scope: !1946)
!1964 = !DILocation(line: 144, column: 32, scope: !1946)
!1965 = !DILocation(line: 144, column: 17, scope: !1946)
!1966 = !DILocalVariable(name: "ts", scope: !1946, file: !3, line: 145, type: !1967)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DIDerivedType(tag: DW_TAG_typedef, name: "ToolSettings", file: !704, line: 1180, baseType: !1238)
!1969 = !DILocation(line: 145, column: 16, scope: !1946)
!1970 = !DILocation(line: 145, column: 44, scope: !1946)
!1971 = !DILocation(line: 145, column: 21, scope: !1946)
!1972 = !DILocalVariable(name: "base", scope: !1946, file: !3, line: 146, type: !1973)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 64)
!1974 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !704, line: 75, baseType: !716)
!1975 = !DILocation(line: 146, column: 8, scope: !1946)
!1976 = !DILocalVariable(name: "index", scope: !1946, file: !3, line: 147, type: !91)
!1977 = !DILocation(line: 147, column: 6, scope: !1946)
!1978 = !DILocation(line: 149, column: 6, scope: !1979)
!1979 = distinct !DILexicalBlock(scope: !1946, file: !3, line: 149, column: 6)
!1980 = !DILocation(line: 149, column: 21, scope: !1979)
!1981 = !DILocation(line: 149, column: 6, scope: !1946)
!1982 = !DILocation(line: 150, column: 18, scope: !1983)
!1983 = distinct !DILexicalBlock(scope: !1979, file: !3, line: 149, column: 30)
!1984 = !DILocation(line: 150, column: 3, scope: !1983)
!1985 = !DILocation(line: 151, column: 2, scope: !1983)
!1986 = !DILocation(line: 153, column: 19, scope: !1946)
!1987 = !DILocation(line: 153, column: 17, scope: !1946)
!1988 = !DILocation(line: 154, column: 20, scope: !1946)
!1989 = !DILocation(line: 156, column: 14, scope: !1990)
!1990 = distinct !DILexicalBlock(scope: !1946, file: !3, line: 156, column: 2)
!1991 = !DILocation(line: 156, column: 12, scope: !1990)
!1992 = !DILocation(line: 156, column: 7, scope: !1990)
!1993 = !DILocation(line: 156, column: 25, scope: !1994)
!1994 = distinct !DILexicalBlock(scope: !1990, file: !3, line: 156, column: 2)
!1995 = !DILocation(line: 156, column: 2, scope: !1990)
!1996 = !DILocalVariable(name: "ob", scope: !1997, file: !3, line: 157, type: !1955)
!1997 = distinct !DILexicalBlock(scope: !1994, file: !3, line: 156, column: 50)
!1998 = !DILocation(line: 157, column: 11, scope: !1997)
!1999 = !DILocation(line: 157, column: 16, scope: !1997)
!2000 = !DILocation(line: 157, column: 22, scope: !1997)
!2001 = !DILocation(line: 159, column: 7, scope: !2002)
!2002 = distinct !DILexicalBlock(scope: !1997, file: !3, line: 159, column: 7)
!2003 = !DILocation(line: 159, column: 13, scope: !2002)
!2004 = !DILocation(line: 159, column: 10, scope: !2002)
!2005 = !DILocation(line: 159, column: 20, scope: !2002)
!2006 = !DILocation(line: 159, column: 23, scope: !2002)
!2007 = !DILocation(line: 159, column: 27, scope: !2002)
!2008 = !DILocation(line: 159, column: 32, scope: !2002)
!2009 = !DILocation(line: 159, column: 7, scope: !1997)
!2010 = !DILocation(line: 160, column: 9, scope: !2011)
!2011 = distinct !DILexicalBlock(scope: !2002, file: !3, line: 159, column: 48)
!2012 = !DILocation(line: 161, column: 21, scope: !2011)
!2013 = !DILocation(line: 161, column: 37, scope: !2011)
!2014 = !DILocation(line: 161, column: 64, scope: !2011)
!2015 = !DILocation(line: 161, column: 4, scope: !2011)
!2016 = !DILocation(line: 163, column: 8, scope: !2017)
!2017 = distinct !DILexicalBlock(scope: !2011, file: !3, line: 163, column: 8)
!2018 = !DILocation(line: 163, column: 14, scope: !2017)
!2019 = !DILocation(line: 163, column: 18, scope: !2017)
!2020 = !DILocation(line: 163, column: 11, scope: !2017)
!2021 = !DILocation(line: 163, column: 8, scope: !2011)
!2022 = !DILocation(line: 164, column: 25, scope: !2023)
!2023 = distinct !DILexicalBlock(scope: !2017, file: !3, line: 163, column: 34)
!2024 = !DILocation(line: 164, column: 23, scope: !2023)
!2025 = !DILocation(line: 165, column: 4, scope: !2023)
!2026 = !DILocation(line: 166, column: 3, scope: !2011)
!2027 = !DILocation(line: 167, column: 2, scope: !1997)
!2028 = !DILocation(line: 156, column: 38, scope: !1994)
!2029 = !DILocation(line: 156, column: 44, scope: !1994)
!2030 = !DILocation(line: 156, column: 36, scope: !1994)
!2031 = !DILocation(line: 156, column: 2, scope: !1994)
!2032 = distinct !{!2032, !1995, !2033}
!2033 = !DILocation(line: 167, column: 2, scope: !1990)
!2034 = !DILocation(line: 168, column: 1, scope: !1946)
!2035 = distinct !DISubprogram(name: "BIF_currentTemplate", scope: !3, file: !3, line: 202, type: !2036, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2036 = !DISubroutineType(types: !2037)
!2037 = !{!91, !1949}
!2038 = !DILocalVariable(name: "C", arg: 1, scope: !2035, file: !3, line: 202, type: !1949)
!2039 = !DILocation(line: 202, column: 43, scope: !2035)
!2040 = !DILocalVariable(name: "ts", scope: !2035, file: !3, line: 204, type: !1967)
!2041 = !DILocation(line: 204, column: 16, scope: !2035)
!2042 = !DILocation(line: 204, column: 44, scope: !2035)
!2043 = !DILocation(line: 204, column: 21, scope: !2035)
!2044 = !DILocation(line: 206, column: 6, scope: !2045)
!2045 = distinct !DILexicalBlock(scope: !2035, file: !3, line: 206, column: 6)
!2046 = !DILocation(line: 206, column: 24, scope: !2045)
!2047 = !DILocation(line: 206, column: 29, scope: !2045)
!2048 = !DILocation(line: 206, column: 32, scope: !2045)
!2049 = !DILocation(line: 206, column: 36, scope: !2045)
!2050 = !DILocation(line: 206, column: 51, scope: !2045)
!2051 = !DILocation(line: 206, column: 6, scope: !2035)
!2052 = !DILocalVariable(name: "ghi", scope: !2053, file: !3, line: 207, type: !2054)
!2053 = distinct !DILexicalBlock(scope: !2045, file: !3, line: 206, column: 60)
!2054 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHashIterator", file: !235, line: 54, baseType: !2055)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GHashIterator", file: !235, line: 50, size: 192, elements: !2056)
!2056 = !{!2057, !2058, !2061}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "gh", scope: !2055, file: !235, line: 51, baseType: !380, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "curEntry", scope: !2055, file: !235, line: 52, baseType: !2059, size: 64, offset: 64)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = !DICompositeType(tag: DW_TAG_structure_type, name: "Entry", file: !235, line: 52, flags: DIFlagFwdDecl)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "curBucket", scope: !2055, file: !235, line: 53, baseType: !7, size: 32, offset: 128)
!2062 = !DILocation(line: 207, column: 17, scope: !2053)
!2063 = !DILocation(line: 208, column: 32, scope: !2053)
!2064 = !DILocation(line: 208, column: 3, scope: !2053)
!2065 = !DILocation(line: 210, column: 3, scope: !2053)
!2066 = !DILocation(line: 210, column: 11, scope: !2053)
!2067 = !DILocation(line: 210, column: 10, scope: !2053)
!2068 = !DILocalVariable(name: "ob", scope: !2069, file: !3, line: 211, type: !1955)
!2069 = distinct !DILexicalBlock(scope: !2053, file: !3, line: 210, column: 41)
!2070 = !DILocation(line: 211, column: 12, scope: !2069)
!2071 = !DILocation(line: 211, column: 17, scope: !2069)
!2072 = !DILocalVariable(name: "key", scope: !2069, file: !3, line: 212, type: !91)
!2073 = !DILocation(line: 212, column: 8, scope: !2069)
!2074 = !DILocation(line: 212, column: 14, scope: !2069)
!2075 = !DILocation(line: 214, column: 8, scope: !2076)
!2076 = distinct !DILexicalBlock(scope: !2069, file: !3, line: 214, column: 8)
!2077 = !DILocation(line: 214, column: 14, scope: !2076)
!2078 = !DILocation(line: 214, column: 18, scope: !2076)
!2079 = !DILocation(line: 214, column: 11, scope: !2076)
!2080 = !DILocation(line: 214, column: 8, scope: !2069)
!2081 = !DILocation(line: 215, column: 25, scope: !2082)
!2082 = distinct !DILexicalBlock(scope: !2076, file: !3, line: 214, column: 34)
!2083 = !DILocation(line: 215, column: 23, scope: !2082)
!2084 = !DILocation(line: 216, column: 5, scope: !2082)
!2085 = !DILocation(line: 219, column: 4, scope: !2069)
!2086 = distinct !{!2086, !2065, !2087}
!2087 = !DILocation(line: 220, column: 3, scope: !2053)
!2088 = !DILocation(line: 221, column: 2, scope: !2053)
!2089 = !DILocation(line: 223, column: 9, scope: !2035)
!2090 = !DILocation(line: 223, column: 2, scope: !2035)
!2091 = distinct !DISubprogram(name: "BLI_ghashIterator_done", scope: !235, file: !235, line: 98, type: !2092, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2092 = !DISubroutineType(types: !2093)
!2093 = !{!1258, !2094}
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 64)
!2095 = !DILocalVariable(name: "ghi", arg: 1, scope: !2091, file: !235, line: 98, type: !2094)
!2096 = !DILocation(line: 98, column: 57, scope: !2091)
!2097 = !DILocation(line: 98, column: 78, scope: !2091)
!2098 = !DILocation(line: 98, column: 83, scope: !2091)
!2099 = !DILocation(line: 98, column: 77, scope: !2091)
!2100 = !DILocation(line: 98, column: 70, scope: !2091)
!2101 = distinct !DISubprogram(name: "BLI_ghashIterator_getValue", scope: !235, file: !235, line: 96, type: !2102, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2102 = !DISubroutineType(types: !2103)
!2103 = !{!87, !2094}
!2104 = !DILocalVariable(name: "ghi", arg: 1, scope: !2101, file: !235, line: 96, type: !2094)
!2105 = !DILocation(line: 96, column: 61, scope: !2101)
!2106 = !DILocation(line: 96, column: 99, scope: !2101)
!2107 = !DILocation(line: 96, column: 104, scope: !2101)
!2108 = !DILocation(line: 96, column: 115, scope: !2101)
!2109 = !DILocation(line: 96, column: 70, scope: !2101)
!2110 = distinct !DISubprogram(name: "BLI_ghashIterator_getKey", scope: !235, file: !235, line: 95, type: !2102, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2111 = !DILocalVariable(name: "ghi", arg: 1, scope: !2110, file: !235, line: 95, type: !2094)
!2112 = !DILocation(line: 95, column: 59, scope: !2110)
!2113 = !DILocation(line: 95, column: 99, scope: !2110)
!2114 = !DILocation(line: 95, column: 104, scope: !2110)
!2115 = !DILocation(line: 95, column: 115, scope: !2110)
!2116 = !DILocation(line: 95, column: 70, scope: !2110)
!2117 = distinct !DISubprogram(name: "BIF_nbJointsTemplate", scope: !3, file: !3, line: 251, type: !2036, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2118 = !DILocalVariable(name: "C", arg: 1, scope: !2117, file: !3, line: 251, type: !1949)
!2119 = !DILocation(line: 251, column: 42, scope: !2117)
!2120 = !DILocalVariable(name: "ts", scope: !2117, file: !3, line: 253, type: !1967)
!2121 = !DILocation(line: 253, column: 16, scope: !2117)
!2122 = !DILocation(line: 253, column: 44, scope: !2117)
!2123 = !DILocation(line: 253, column: 21, scope: !2117)
!2124 = !DILocalVariable(name: "rg", scope: !2117, file: !3, line: 254, type: !267)
!2125 = !DILocation(line: 254, column: 12, scope: !2117)
!2126 = !DILocation(line: 254, column: 38, scope: !2117)
!2127 = !DILocation(line: 254, column: 41, scope: !2117)
!2128 = !DILocation(line: 254, column: 45, scope: !2117)
!2129 = !DILocation(line: 254, column: 17, scope: !2117)
!2130 = !DILocation(line: 256, column: 6, scope: !2131)
!2131 = distinct !DILexicalBlock(scope: !2117, file: !3, line: 256, column: 6)
!2132 = !DILocation(line: 256, column: 6, scope: !2117)
!2133 = !DILocation(line: 257, column: 23, scope: !2134)
!2134 = distinct !DILexicalBlock(scope: !2131, file: !3, line: 256, column: 10)
!2135 = !DILocation(line: 257, column: 10, scope: !2134)
!2136 = !DILocation(line: 257, column: 3, scope: !2134)
!2137 = !DILocation(line: 260, column: 3, scope: !2138)
!2138 = distinct !DILexicalBlock(scope: !2131, file: !3, line: 259, column: 7)
!2139 = !DILocation(line: 262, column: 1, scope: !2117)
!2140 = distinct !DISubprogram(name: "sk_makeTemplateGraph", scope: !3, file: !3, line: 226, type: !2141, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!267, !1949, !1955}
!2143 = !DILocalVariable(name: "C", arg: 1, scope: !2140, file: !3, line: 226, type: !1949)
!2144 = !DILocation(line: 226, column: 55, scope: !2140)
!2145 = !DILocalVariable(name: "ob", arg: 2, scope: !2140, file: !3, line: 226, type: !1955)
!2146 = !DILocation(line: 226, column: 66, scope: !2140)
!2147 = !DILocalVariable(name: "obedit", scope: !2140, file: !3, line: 228, type: !1955)
!2148 = !DILocation(line: 228, column: 10, scope: !2140)
!2149 = !DILocation(line: 228, column: 40, scope: !2140)
!2150 = !DILocation(line: 228, column: 19, scope: !2140)
!2151 = !DILocation(line: 229, column: 6, scope: !2152)
!2152 = distinct !DILexicalBlock(scope: !2140, file: !3, line: 229, column: 6)
!2153 = !DILocation(line: 229, column: 12, scope: !2152)
!2154 = !DILocation(line: 229, column: 9, scope: !2152)
!2155 = !DILocation(line: 229, column: 6, scope: !2140)
!2156 = !DILocation(line: 230, column: 3, scope: !2157)
!2157 = distinct !DILexicalBlock(scope: !2152, file: !3, line: 229, column: 20)
!2158 = !DILocation(line: 233, column: 6, scope: !2159)
!2159 = distinct !DILexicalBlock(scope: !2140, file: !3, line: 233, column: 6)
!2160 = !DILocation(line: 233, column: 9, scope: !2159)
!2161 = !DILocation(line: 233, column: 6, scope: !2140)
!2162 = !DILocation(line: 234, column: 7, scope: !2163)
!2163 = distinct !DILexicalBlock(scope: !2164, file: !3, line: 234, column: 7)
!2164 = distinct !DILexicalBlock(scope: !2159, file: !3, line: 233, column: 18)
!2165 = !DILocation(line: 234, column: 21, scope: !2163)
!2166 = !DILocation(line: 234, column: 24, scope: !2163)
!2167 = !DILocation(line: 234, column: 39, scope: !2163)
!2168 = !DILocation(line: 234, column: 45, scope: !2163)
!2169 = !DILocation(line: 234, column: 42, scope: !2163)
!2170 = !DILocation(line: 234, column: 7, scope: !2164)
!2171 = !DILocation(line: 235, column: 31, scope: !2172)
!2172 = distinct !DILexicalBlock(scope: !2163, file: !3, line: 234, column: 49)
!2173 = !DILocation(line: 235, column: 21, scope: !2172)
!2174 = !DILocation(line: 235, column: 4, scope: !2172)
!2175 = !DILocation(line: 236, column: 18, scope: !2172)
!2176 = !DILocation(line: 237, column: 3, scope: !2172)
!2177 = !DILocation(line: 239, column: 7, scope: !2178)
!2178 = distinct !DILexicalBlock(scope: !2164, file: !3, line: 239, column: 7)
!2179 = !DILocation(line: 239, column: 21, scope: !2178)
!2180 = !DILocation(line: 239, column: 7, scope: !2164)
!2181 = !DILocalVariable(name: "arm", scope: !2182, file: !3, line: 240, type: !2183)
!2182 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 239, column: 30)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2184 = !DIDerivedType(tag: DW_TAG_typedef, name: "bArmature", file: !46, line: 114, baseType: !2185)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bArmature", file: !46, line: 78, size: 2048, elements: !2186)
!2186 = !{!2187, !2188, !2189, !2190, !2191, !2192, !2229, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2185, file: !46, line: 79, baseType: !388, size: 960)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2185, file: !46, line: 80, baseType: !450, size: 64, offset: 960)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "bonebase", scope: !2185, file: !46, line: 82, baseType: !98, size: 128, offset: 1024)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "chainbase", scope: !2185, file: !46, line: 83, baseType: !98, size: 128, offset: 1152)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "edbo", scope: !2185, file: !46, line: 84, baseType: !282, size: 64, offset: 1280)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "act_bone", scope: !2185, file: !46, line: 92, baseType: !2193, size: 64, offset: 1344)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64)
!2194 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bone", file: !46, line: 76, baseType: !2195)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Bone", file: !46, line: 48, size: 2624, elements: !2196)
!2196 = !{!2197, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2195, file: !46, line: 49, baseType: !2198, size: 64)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2195, file: !46, line: 49, baseType: !2198, size: 64, offset: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !2195, file: !46, line: 50, baseType: !424, size: 64, offset: 128)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2195, file: !46, line: 51, baseType: !2198, size: 64, offset: 192)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "childbase", scope: !2195, file: !46, line: 52, baseType: !98, size: 128, offset: 256)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2195, file: !46, line: 53, baseType: !435, size: 512, offset: 384)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !2195, file: !46, line: 55, baseType: !106, size: 32, offset: 896)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2195, file: !46, line: 56, baseType: !124, size: 96, offset: 928)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2195, file: !46, line: 57, baseType: !124, size: 96, offset: 1024)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "bone_mat", scope: !2195, file: !46, line: 58, baseType: !2208, size: 288, offset: 1120)
!2208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 288, elements: !2209)
!2209 = !{!126, !126}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2195, file: !46, line: 60, baseType: !91, size: 32, offset: 1408)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "arm_head", scope: !2195, file: !46, line: 62, baseType: !124, size: 96, offset: 1440)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "arm_tail", scope: !2195, file: !46, line: 63, baseType: !124, size: 96, offset: 1536)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "arm_mat", scope: !2195, file: !46, line: 64, baseType: !585, size: 512, offset: 1632)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "arm_roll", scope: !2195, file: !46, line: 65, baseType: !106, size: 32, offset: 2144)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2195, file: !46, line: 67, baseType: !106, size: 32, offset: 2176)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2195, file: !46, line: 67, baseType: !106, size: 32, offset: 2208)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !2195, file: !46, line: 68, baseType: !106, size: 32, offset: 2240)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2195, file: !46, line: 68, baseType: !106, size: 32, offset: 2272)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !2195, file: !46, line: 68, baseType: !106, size: 32, offset: 2304)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !2195, file: !46, line: 69, baseType: !106, size: 32, offset: 2336)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !2195, file: !46, line: 69, baseType: !106, size: 32, offset: 2368)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !2195, file: !46, line: 70, baseType: !106, size: 32, offset: 2400)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !2195, file: !46, line: 70, baseType: !106, size: 32, offset: 2432)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2195, file: !46, line: 72, baseType: !124, size: 96, offset: 2464)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !2195, file: !46, line: 73, baseType: !91, size: 32, offset: 2560)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !2195, file: !46, line: 74, baseType: !210, size: 16, offset: 2592)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2195, file: !46, line: 75, baseType: !2228, size: 16, offset: 2608)
!2228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 16, elements: !738)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "act_edbone", scope: !2185, file: !46, line: 93, baseType: !2230, size: 64, offset: 1408)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditBone", file: !2232, line: 56, size: 1472, elements: !2233)
!2232 = !DIFile(filename: "blender/source/blender/editors/include/ED_armature.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2233 = !{!2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2231, file: !2232, line: 57, baseType: !2230, size: 64)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2231, file: !2232, line: 57, baseType: !2230, size: 64, offset: 64)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !2231, file: !2232, line: 58, baseType: !429, size: 64, offset: 128)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2231, file: !2232, line: 59, baseType: !2230, size: 64, offset: 192)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2231, file: !2232, line: 62, baseType: !87, size: 64, offset: 256)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2231, file: !2232, line: 64, baseType: !435, size: 512, offset: 320)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !2231, file: !2232, line: 65, baseType: !106, size: 32, offset: 832)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2231, file: !2232, line: 70, baseType: !124, size: 96, offset: 864)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2231, file: !2232, line: 71, baseType: !124, size: 96, offset: 960)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2231, file: !2232, line: 75, baseType: !91, size: 32, offset: 1056)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !2231, file: !2232, line: 76, baseType: !91, size: 32, offset: 1088)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2231, file: !2232, line: 78, baseType: !106, size: 32, offset: 1120)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2231, file: !2232, line: 78, baseType: !106, size: 32, offset: 1152)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !2231, file: !2232, line: 79, baseType: !106, size: 32, offset: 1184)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2231, file: !2232, line: 79, baseType: !106, size: 32, offset: 1216)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !2231, file: !2232, line: 79, baseType: !106, size: 32, offset: 1248)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !2231, file: !2232, line: 80, baseType: !106, size: 32, offset: 1280)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !2231, file: !2232, line: 80, baseType: !106, size: 32, offset: 1312)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !2231, file: !2232, line: 81, baseType: !106, size: 32, offset: 1344)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !2231, file: !2232, line: 81, baseType: !106, size: 32, offset: 1376)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "oldlength", scope: !2231, file: !2232, line: 83, baseType: !106, size: 32, offset: 1408)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !2231, file: !2232, line: 85, baseType: !210, size: 16, offset: 1440)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "sketch", scope: !2185, file: !46, line: 95, baseType: !87, size: 64, offset: 1472)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2185, file: !46, line: 97, baseType: !91, size: 32, offset: 1536)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !2185, file: !46, line: 98, baseType: !91, size: 32, offset: 1568)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "gevertdeformer", scope: !2185, file: !46, line: 99, baseType: !91, size: 32, offset: 1600)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2185, file: !46, line: 100, baseType: !91, size: 32, offset: 1632)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "deformflag", scope: !2185, file: !46, line: 101, baseType: !210, size: 16, offset: 1664)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "pathflag", scope: !2185, file: !46, line: 102, baseType: !210, size: 16, offset: 1680)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "layer_used", scope: !2185, file: !46, line: 104, baseType: !7, size: 32, offset: 1696)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !2185, file: !46, line: 105, baseType: !7, size: 32, offset: 1728)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "layer_protected", scope: !2185, file: !46, line: 105, baseType: !7, size: 32, offset: 1760)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "ghostep", scope: !2185, file: !46, line: 108, baseType: !210, size: 16, offset: 1792)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsize", scope: !2185, file: !46, line: 108, baseType: !210, size: 16, offset: 1808)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "ghosttype", scope: !2185, file: !46, line: 109, baseType: !210, size: 16, offset: 1824)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "pathsize", scope: !2185, file: !46, line: 109, baseType: !210, size: 16, offset: 1840)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsf", scope: !2185, file: !46, line: 110, baseType: !91, size: 32, offset: 1856)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "ghostef", scope: !2185, file: !46, line: 110, baseType: !91, size: 32, offset: 1888)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "pathsf", scope: !2185, file: !46, line: 111, baseType: !91, size: 32, offset: 1920)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "pathef", scope: !2185, file: !46, line: 111, baseType: !91, size: 32, offset: 1952)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "pathbc", scope: !2185, file: !46, line: 112, baseType: !91, size: 32, offset: 1984)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "pathac", scope: !2185, file: !46, line: 112, baseType: !91, size: 32, offset: 2016)
!2276 = !DILocation(line: 240, column: 15, scope: !2182)
!2277 = !DILocation(line: 242, column: 10, scope: !2182)
!2278 = !DILocation(line: 242, column: 14, scope: !2182)
!2279 = !DILocation(line: 242, column: 8, scope: !2182)
!2280 = !DILocation(line: 244, column: 42, scope: !2182)
!2281 = !DILocation(line: 244, column: 45, scope: !2182)
!2282 = !DILocation(line: 244, column: 49, scope: !2182)
!2283 = !DILocation(line: 244, column: 20, scope: !2182)
!2284 = !DILocation(line: 244, column: 18, scope: !2182)
!2285 = !DILocation(line: 245, column: 3, scope: !2182)
!2286 = !DILocation(line: 246, column: 2, scope: !2164)
!2287 = !DILocation(line: 248, column: 9, scope: !2140)
!2288 = !DILocation(line: 248, column: 2, scope: !2140)
!2289 = !DILocation(line: 249, column: 1, scope: !2140)
!2290 = distinct !DISubprogram(name: "BIF_nameBoneTemplate", scope: !3, file: !3, line: 264, type: !2291, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2291 = !DISubroutineType(types: !2292)
!2292 = !{!2293, !1949}
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 64)
!2294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!2295 = !DILocalVariable(name: "C", arg: 1, scope: !2290, file: !3, line: 264, type: !1949)
!2296 = !DILocation(line: 264, column: 50, scope: !2290)
!2297 = !DILocalVariable(name: "ts", scope: !2290, file: !3, line: 266, type: !1967)
!2298 = !DILocation(line: 266, column: 16, scope: !2290)
!2299 = !DILocation(line: 266, column: 44, scope: !2290)
!2300 = !DILocation(line: 266, column: 21, scope: !2290)
!2301 = !DILocalVariable(name: "stk", scope: !2290, file: !3, line: 267, type: !1920)
!2302 = !DILocation(line: 267, column: 13, scope: !2290)
!2303 = !DILocation(line: 267, column: 33, scope: !2290)
!2304 = !DILocation(line: 267, column: 19, scope: !2290)
!2305 = !DILocalVariable(name: "rg", scope: !2290, file: !3, line: 268, type: !267)
!2306 = !DILocation(line: 268, column: 12, scope: !2290)
!2307 = !DILocalVariable(name: "index", scope: !2290, file: !3, line: 269, type: !91)
!2308 = !DILocation(line: 269, column: 6, scope: !2290)
!2309 = !DILocation(line: 271, column: 6, scope: !2310)
!2310 = distinct !DILexicalBlock(scope: !2290, file: !3, line: 271, column: 6)
!2311 = !DILocation(line: 271, column: 10, scope: !2310)
!2312 = !DILocation(line: 271, column: 13, scope: !2310)
!2313 = !DILocation(line: 271, column: 18, scope: !2310)
!2314 = !DILocation(line: 271, column: 32, scope: !2310)
!2315 = !DILocation(line: 271, column: 6, scope: !2290)
!2316 = !DILocation(line: 272, column: 11, scope: !2317)
!2317 = distinct !DILexicalBlock(scope: !2310, file: !3, line: 271, column: 41)
!2318 = !DILocation(line: 272, column: 16, scope: !2317)
!2319 = !DILocation(line: 272, column: 31, scope: !2317)
!2320 = !DILocation(line: 272, column: 9, scope: !2317)
!2321 = !DILocation(line: 273, column: 2, scope: !2317)
!2322 = !DILocation(line: 275, column: 28, scope: !2290)
!2323 = !DILocation(line: 275, column: 31, scope: !2290)
!2324 = !DILocation(line: 275, column: 35, scope: !2290)
!2325 = !DILocation(line: 275, column: 7, scope: !2290)
!2326 = !DILocation(line: 275, column: 5, scope: !2290)
!2327 = !DILocation(line: 277, column: 6, scope: !2328)
!2328 = distinct !DILexicalBlock(scope: !2290, file: !3, line: 277, column: 6)
!2329 = !DILocation(line: 277, column: 9, scope: !2328)
!2330 = !DILocation(line: 277, column: 6, scope: !2290)
!2331 = !DILocation(line: 278, column: 3, scope: !2332)
!2332 = distinct !DILexicalBlock(scope: !2328, file: !3, line: 277, column: 18)
!2333 = !DILocation(line: 281, column: 22, scope: !2290)
!2334 = !DILocation(line: 281, column: 29, scope: !2290)
!2335 = !DILocation(line: 281, column: 9, scope: !2290)
!2336 = !DILocation(line: 281, column: 2, scope: !2290)
!2337 = !DILocation(line: 282, column: 1, scope: !2290)
!2338 = distinct !DISubprogram(name: "contextSketch", scope: !3, file: !3, line: 2300, type: !2339, scopeLine: 2301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2339 = !DISubroutineType(types: !2340)
!2340 = !{!1920, !1949, !91}
!2341 = !DILocalVariable(name: "C", arg: 1, scope: !2338, file: !3, line: 2300, type: !1949)
!2342 = !DILocation(line: 2300, column: 42, scope: !2338)
!2343 = !DILocalVariable(name: "create", arg: 2, scope: !2338, file: !3, line: 2300, type: !91)
!2344 = !DILocation(line: 2300, column: 49, scope: !2338)
!2345 = !DILocalVariable(name: "obedit", scope: !2338, file: !3, line: 2302, type: !1955)
!2346 = !DILocation(line: 2302, column: 10, scope: !2338)
!2347 = !DILocation(line: 2302, column: 40, scope: !2338)
!2348 = !DILocation(line: 2302, column: 19, scope: !2338)
!2349 = !DILocalVariable(name: "sketch", scope: !2338, file: !3, line: 2303, type: !1920)
!2350 = !DILocation(line: 2303, column: 13, scope: !2338)
!2351 = !DILocation(line: 2305, column: 6, scope: !2352)
!2352 = distinct !DILexicalBlock(scope: !2338, file: !3, line: 2305, column: 6)
!2353 = !DILocation(line: 2305, column: 13, scope: !2352)
!2354 = !DILocation(line: 2305, column: 16, scope: !2352)
!2355 = !DILocation(line: 2305, column: 24, scope: !2352)
!2356 = !DILocation(line: 2305, column: 29, scope: !2352)
!2357 = !DILocation(line: 2305, column: 6, scope: !2338)
!2358 = !DILocalVariable(name: "arm", scope: !2359, file: !3, line: 2306, type: !2183)
!2359 = distinct !DILexicalBlock(scope: !2352, file: !3, line: 2305, column: 45)
!2360 = !DILocation(line: 2306, column: 14, scope: !2359)
!2361 = !DILocation(line: 2306, column: 20, scope: !2359)
!2362 = !DILocation(line: 2306, column: 28, scope: !2359)
!2363 = !DILocation(line: 2308, column: 7, scope: !2364)
!2364 = distinct !DILexicalBlock(scope: !2359, file: !3, line: 2308, column: 7)
!2365 = !DILocation(line: 2308, column: 12, scope: !2364)
!2366 = !DILocation(line: 2308, column: 19, scope: !2364)
!2367 = !DILocation(line: 2308, column: 27, scope: !2364)
!2368 = !DILocation(line: 2308, column: 30, scope: !2364)
!2369 = !DILocation(line: 2308, column: 7, scope: !2359)
!2370 = !DILocation(line: 2309, column: 18, scope: !2371)
!2371 = distinct !DILexicalBlock(scope: !2364, file: !3, line: 2308, column: 38)
!2372 = !DILocation(line: 2309, column: 4, scope: !2371)
!2373 = !DILocation(line: 2309, column: 9, scope: !2371)
!2374 = !DILocation(line: 2309, column: 16, scope: !2371)
!2375 = !DILocation(line: 2310, column: 3, scope: !2371)
!2376 = !DILocation(line: 2311, column: 12, scope: !2359)
!2377 = !DILocation(line: 2311, column: 17, scope: !2359)
!2378 = !DILocation(line: 2311, column: 10, scope: !2359)
!2379 = !DILocation(line: 2312, column: 2, scope: !2359)
!2380 = !DILocation(line: 2314, column: 9, scope: !2338)
!2381 = !DILocation(line: 2314, column: 2, scope: !2338)
!2382 = distinct !DISubprogram(name: "BIF_freeTemplates", scope: !3, file: !3, line: 284, type: !2383, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2383 = !DISubroutineType(types: !2384)
!2384 = !{null, !228}
!2385 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !2382, file: !3, line: 284, type: !228)
!2386 = !DILocation(line: 284, column: 35, scope: !2382)
!2387 = !DILocation(line: 286, column: 6, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2382, file: !3, line: 286, column: 6)
!2389 = !DILocation(line: 286, column: 21, scope: !2388)
!2390 = !DILocation(line: 286, column: 6, scope: !2382)
!2391 = !DILocation(line: 287, column: 3, scope: !2392)
!2392 = distinct !DILexicalBlock(scope: !2388, file: !3, line: 286, column: 30)
!2393 = !DILocation(line: 287, column: 13, scope: !2392)
!2394 = !DILocation(line: 288, column: 18, scope: !2392)
!2395 = !DILocation(line: 289, column: 2, scope: !2392)
!2396 = !DILocation(line: 291, column: 6, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2382, file: !3, line: 291, column: 6)
!2398 = !DILocation(line: 291, column: 21, scope: !2397)
!2399 = !DILocation(line: 291, column: 6, scope: !2382)
!2400 = !DILocation(line: 292, column: 18, scope: !2401)
!2401 = distinct !DILexicalBlock(scope: !2397, file: !3, line: 291, column: 30)
!2402 = !DILocation(line: 292, column: 3, scope: !2401)
!2403 = !DILocation(line: 293, column: 18, scope: !2401)
!2404 = !DILocation(line: 294, column: 2, scope: !2401)
!2405 = !DILocation(line: 296, column: 6, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2382, file: !3, line: 296, column: 6)
!2407 = !DILocation(line: 296, column: 20, scope: !2406)
!2408 = !DILocation(line: 296, column: 6, scope: !2382)
!2409 = !DILocation(line: 297, column: 30, scope: !2410)
!2410 = distinct !DILexicalBlock(scope: !2406, file: !3, line: 296, column: 29)
!2411 = !DILocation(line: 297, column: 20, scope: !2410)
!2412 = !DILocation(line: 297, column: 3, scope: !2410)
!2413 = !DILocation(line: 298, column: 17, scope: !2410)
!2414 = !DILocation(line: 299, column: 2, scope: !2410)
!2415 = !DILocation(line: 300, column: 1, scope: !2382)
!2416 = distinct !DISubprogram(name: "BIF_setTemplate", scope: !3, file: !3, line: 302, type: !2417, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2417 = !DISubroutineType(types: !2418)
!2418 = !{null, !228, !91}
!2419 = !DILocalVariable(name: "C", arg: 1, scope: !2416, file: !3, line: 302, type: !228)
!2420 = !DILocation(line: 302, column: 33, scope: !2416)
!2421 = !DILocalVariable(name: "index", arg: 2, scope: !2416, file: !3, line: 302, type: !91)
!2422 = !DILocation(line: 302, column: 40, scope: !2416)
!2423 = !DILocalVariable(name: "ts", scope: !2416, file: !3, line: 304, type: !1967)
!2424 = !DILocation(line: 304, column: 16, scope: !2416)
!2425 = !DILocation(line: 304, column: 44, scope: !2416)
!2426 = !DILocation(line: 304, column: 21, scope: !2416)
!2427 = !DILocation(line: 305, column: 6, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !2416, file: !3, line: 305, column: 6)
!2429 = !DILocation(line: 305, column: 12, scope: !2428)
!2430 = !DILocation(line: 305, column: 6, scope: !2416)
!2431 = !DILocation(line: 306, column: 41, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !2428, file: !3, line: 305, column: 17)
!2433 = !DILocation(line: 306, column: 57, scope: !2432)
!2434 = !DILocation(line: 306, column: 24, scope: !2432)
!2435 = !DILocation(line: 306, column: 3, scope: !2432)
!2436 = !DILocation(line: 306, column: 7, scope: !2432)
!2437 = !DILocation(line: 306, column: 22, scope: !2432)
!2438 = !DILocation(line: 307, column: 2, scope: !2432)
!2439 = !DILocation(line: 309, column: 3, scope: !2440)
!2440 = distinct !DILexicalBlock(scope: !2428, file: !3, line: 308, column: 7)
!2441 = !DILocation(line: 309, column: 7, scope: !2440)
!2442 = !DILocation(line: 309, column: 22, scope: !2440)
!2443 = !DILocation(line: 311, column: 7, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2440, file: !3, line: 311, column: 7)
!2445 = !DILocation(line: 311, column: 21, scope: !2444)
!2446 = !DILocation(line: 311, column: 7, scope: !2440)
!2447 = !DILocation(line: 312, column: 31, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2444, file: !3, line: 311, column: 30)
!2449 = !DILocation(line: 312, column: 21, scope: !2448)
!2450 = !DILocation(line: 312, column: 4, scope: !2448)
!2451 = !DILocation(line: 313, column: 3, scope: !2448)
!2452 = !DILocation(line: 314, column: 17, scope: !2440)
!2453 = !DILocation(line: 316, column: 1, scope: !2416)
!2454 = distinct !DISubprogram(name: "sk_resetOverdraw", scope: !3, file: !3, line: 715, type: !2455, scopeLine: 716, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2455 = !DISubroutineType(types: !2456)
!2456 = !{null, !1920}
!2457 = !DILocalVariable(name: "sketch", arg: 1, scope: !2454, file: !3, line: 715, type: !1920)
!2458 = !DILocation(line: 715, column: 34, scope: !2454)
!2459 = !DILocation(line: 717, column: 2, scope: !2454)
!2460 = !DILocation(line: 717, column: 10, scope: !2454)
!2461 = !DILocation(line: 717, column: 15, scope: !2454)
!2462 = !DILocation(line: 717, column: 22, scope: !2454)
!2463 = !DILocation(line: 718, column: 2, scope: !2454)
!2464 = !DILocation(line: 718, column: 10, scope: !2454)
!2465 = !DILocation(line: 718, column: 15, scope: !2454)
!2466 = !DILocation(line: 718, column: 21, scope: !2454)
!2467 = !DILocation(line: 719, column: 2, scope: !2454)
!2468 = !DILocation(line: 719, column: 10, scope: !2454)
!2469 = !DILocation(line: 719, column: 15, scope: !2454)
!2470 = !DILocation(line: 719, column: 19, scope: !2454)
!2471 = !DILocation(line: 720, column: 2, scope: !2454)
!2472 = !DILocation(line: 720, column: 10, scope: !2454)
!2473 = !DILocation(line: 720, column: 15, scope: !2454)
!2474 = !DILocation(line: 720, column: 21, scope: !2454)
!2475 = !DILocation(line: 721, column: 1, scope: !2454)
!2476 = distinct !DISubprogram(name: "sk_hasOverdraw", scope: !3, file: !3, line: 723, type: !2477, scopeLine: 724, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2477 = !DISubroutineType(types: !2478)
!2478 = !{!91, !1920, !195}
!2479 = !DILocalVariable(name: "sketch", arg: 1, scope: !2476, file: !3, line: 723, type: !1920)
!2480 = !DILocation(line: 723, column: 31, scope: !2476)
!2481 = !DILocalVariable(name: "stk", arg: 2, scope: !2476, file: !3, line: 723, type: !195)
!2482 = !DILocation(line: 723, column: 50, scope: !2476)
!2483 = !DILocation(line: 725, column: 9, scope: !2476)
!2484 = !DILocation(line: 725, column: 17, scope: !2476)
!2485 = !DILocation(line: 725, column: 22, scope: !2476)
!2486 = !DILocation(line: 725, column: 29, scope: !2476)
!2487 = !DILocation(line: 726, column: 9, scope: !2476)
!2488 = !DILocation(line: 726, column: 17, scope: !2476)
!2489 = !DILocation(line: 726, column: 22, scope: !2476)
!2490 = !DILocation(line: 726, column: 28, scope: !2476)
!2491 = !DILocation(line: 726, column: 49, scope: !2476)
!2492 = !DILocation(line: 727, column: 10, scope: !2476)
!2493 = !DILocation(line: 727, column: 18, scope: !2476)
!2494 = !DILocation(line: 727, column: 23, scope: !2476)
!2495 = !DILocation(line: 727, column: 33, scope: !2476)
!2496 = !DILocation(line: 727, column: 30, scope: !2476)
!2497 = !DILocation(line: 727, column: 37, scope: !2476)
!2498 = !DILocation(line: 727, column: 40, scope: !2476)
!2499 = !DILocation(line: 727, column: 44, scope: !2476)
!2500 = !DILocation(line: 727, column: 53, scope: !2476)
!2501 = !DILocation(line: 728, column: 10, scope: !2476)
!2502 = !DILocation(line: 728, column: 18, scope: !2476)
!2503 = !DILocation(line: 728, column: 23, scope: !2476)
!2504 = !DILocation(line: 728, column: 29, scope: !2476)
!2505 = !DILocation(line: 728, column: 35, scope: !2476)
!2506 = !DILocation(line: 728, column: 38, scope: !2476)
!2507 = !DILocation(line: 728, column: 46, scope: !2476)
!2508 = !DILocation(line: 728, column: 51, scope: !2476)
!2509 = !DILocation(line: 728, column: 55, scope: !2476)
!2510 = !DILocation(line: 0, scope: !2476)
!2511 = !DILocation(line: 725, column: 2, scope: !2476)
!2512 = distinct !DISubprogram(name: "initStrokeIterator", scope: !3, file: !3, line: 1229, type: !2513, scopeLine: 1230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2513 = !DISubroutineType(types: !2514)
!2514 = !{null, !242, !195, !91, !91}
!2515 = !DILocalVariable(name: "arg", arg: 1, scope: !2512, file: !3, line: 1229, type: !242)
!2516 = !DILocation(line: 1229, column: 39, scope: !2512)
!2517 = !DILocalVariable(name: "stk", arg: 2, scope: !2512, file: !3, line: 1229, type: !195)
!2518 = !DILocation(line: 1229, column: 55, scope: !2512)
!2519 = !DILocalVariable(name: "start", arg: 3, scope: !2512, file: !3, line: 1229, type: !91)
!2520 = !DILocation(line: 1229, column: 64, scope: !2512)
!2521 = !DILocalVariable(name: "end", arg: 4, scope: !2512, file: !3, line: 1229, type: !91)
!2522 = !DILocation(line: 1229, column: 75, scope: !2512)
!2523 = !DILocalVariable(name: "iter", scope: !2512, file: !3, line: 1231, type: !161)
!2524 = !DILocation(line: 1231, column: 21, scope: !2512)
!2525 = !DILocation(line: 1231, column: 49, scope: !2512)
!2526 = !DILocation(line: 1231, column: 28, scope: !2512)
!2527 = !DILocation(line: 1233, column: 18, scope: !2512)
!2528 = !DILocation(line: 1233, column: 2, scope: !2512)
!2529 = !DILocation(line: 1234, column: 17, scope: !2512)
!2530 = !DILocation(line: 1234, column: 2, scope: !2512)
!2531 = !DILocation(line: 1234, column: 8, scope: !2512)
!2532 = !DILocation(line: 1234, column: 15, scope: !2512)
!2533 = !DILocation(line: 1236, column: 6, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2512, file: !3, line: 1236, column: 6)
!2535 = !DILocation(line: 1236, column: 14, scope: !2534)
!2536 = !DILocation(line: 1236, column: 12, scope: !2534)
!2537 = !DILocation(line: 1236, column: 6, scope: !2512)
!2538 = !DILocation(line: 1237, column: 17, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !2534, file: !3, line: 1236, column: 19)
!2540 = !DILocation(line: 1237, column: 23, scope: !2539)
!2541 = !DILocation(line: 1237, column: 3, scope: !2539)
!2542 = !DILocation(line: 1237, column: 9, scope: !2539)
!2543 = !DILocation(line: 1237, column: 15, scope: !2539)
!2544 = !DILocation(line: 1238, column: 15, scope: !2539)
!2545 = !DILocation(line: 1238, column: 19, scope: !2539)
!2546 = !DILocation(line: 1238, column: 3, scope: !2539)
!2547 = !DILocation(line: 1238, column: 9, scope: !2539)
!2548 = !DILocation(line: 1238, column: 13, scope: !2539)
!2549 = !DILocation(line: 1239, column: 3, scope: !2539)
!2550 = !DILocation(line: 1239, column: 9, scope: !2539)
!2551 = !DILocation(line: 1239, column: 16, scope: !2539)
!2552 = !DILocation(line: 1240, column: 2, scope: !2539)
!2553 = !DILocation(line: 1242, column: 17, scope: !2554)
!2554 = distinct !DILexicalBlock(scope: !2534, file: !3, line: 1241, column: 7)
!2555 = !DILocation(line: 1242, column: 23, scope: !2554)
!2556 = !DILocation(line: 1242, column: 3, scope: !2554)
!2557 = !DILocation(line: 1242, column: 9, scope: !2554)
!2558 = !DILocation(line: 1242, column: 15, scope: !2554)
!2559 = !DILocation(line: 1243, column: 15, scope: !2554)
!2560 = !DILocation(line: 1243, column: 19, scope: !2554)
!2561 = !DILocation(line: 1243, column: 3, scope: !2554)
!2562 = !DILocation(line: 1243, column: 9, scope: !2554)
!2563 = !DILocation(line: 1243, column: 13, scope: !2554)
!2564 = !DILocation(line: 1244, column: 3, scope: !2554)
!2565 = !DILocation(line: 1244, column: 9, scope: !2554)
!2566 = !DILocation(line: 1244, column: 16, scope: !2554)
!2567 = !DILocation(line: 1247, column: 17, scope: !2512)
!2568 = !DILocation(line: 1247, column: 23, scope: !2512)
!2569 = !DILocation(line: 1247, column: 33, scope: !2512)
!2570 = !DILocation(line: 1247, column: 39, scope: !2512)
!2571 = !DILocation(line: 1247, column: 45, scope: !2512)
!2572 = !DILocation(line: 1247, column: 51, scope: !2512)
!2573 = !DILocation(line: 1247, column: 43, scope: !2512)
!2574 = !DILocation(line: 1247, column: 57, scope: !2512)
!2575 = !DILocation(line: 1247, column: 30, scope: !2512)
!2576 = !DILocation(line: 1247, column: 2, scope: !2512)
!2577 = !DILocation(line: 1247, column: 8, scope: !2512)
!2578 = !DILocation(line: 1247, column: 15, scope: !2512)
!2579 = !DILocation(line: 1249, column: 2, scope: !2512)
!2580 = !DILocation(line: 1249, column: 8, scope: !2512)
!2581 = !DILocation(line: 1249, column: 14, scope: !2512)
!2582 = !DILocation(line: 1250, column: 1, scope: !2512)
!2583 = distinct !DISubprogram(name: "initIteratorFct", scope: !3, file: !3, line: 1199, type: !2584, scopeLine: 1200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2584 = !DISubroutineType(types: !2585)
!2585 = !{null, !161}
!2586 = !DILocalVariable(name: "iter", arg: 1, scope: !2583, file: !3, line: 1199, type: !161)
!2587 = !DILocation(line: 1199, column: 48, scope: !2583)
!2588 = !DILocation(line: 1201, column: 2, scope: !2583)
!2589 = !DILocation(line: 1201, column: 8, scope: !2583)
!2590 = !DILocation(line: 1201, column: 13, scope: !2583)
!2591 = !DILocation(line: 1202, column: 2, scope: !2583)
!2592 = !DILocation(line: 1202, column: 8, scope: !2583)
!2593 = !DILocation(line: 1202, column: 13, scope: !2583)
!2594 = !DILocation(line: 1203, column: 2, scope: !2583)
!2595 = !DILocation(line: 1203, column: 8, scope: !2583)
!2596 = !DILocation(line: 1203, column: 13, scope: !2583)
!2597 = !DILocation(line: 1204, column: 2, scope: !2583)
!2598 = !DILocation(line: 1204, column: 8, scope: !2583)
!2599 = !DILocation(line: 1204, column: 13, scope: !2583)
!2600 = !DILocation(line: 1205, column: 2, scope: !2583)
!2601 = !DILocation(line: 1205, column: 8, scope: !2583)
!2602 = !DILocation(line: 1205, column: 14, scope: !2583)
!2603 = !DILocation(line: 1206, column: 2, scope: !2583)
!2604 = !DILocation(line: 1206, column: 8, scope: !2583)
!2605 = !DILocation(line: 1206, column: 17, scope: !2583)
!2606 = !DILocation(line: 1207, column: 2, scope: !2583)
!2607 = !DILocation(line: 1207, column: 8, scope: !2583)
!2608 = !DILocation(line: 1207, column: 16, scope: !2583)
!2609 = !DILocation(line: 1208, column: 1, scope: !2583)
!2610 = distinct !DISubprogram(name: "sk_detectCutGesture", scope: !3, file: !3, line: 1620, type: !1907, scopeLine: 1621, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2611 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !2610, file: !3, line: 1620, type: !228)
!2612 = !DILocation(line: 1620, column: 35, scope: !2610)
!2613 = !DILocalVariable(name: "gest", arg: 2, scope: !2610, file: !3, line: 1620, type: !1909)
!2614 = !DILocation(line: 1620, column: 58, scope: !2610)
!2615 = !DILocalVariable(name: "UNUSED_sketch", arg: 3, scope: !2610, file: !3, line: 1620, type: !1920)
!2616 = !DILocation(line: 1620, column: 75, scope: !2610)
!2617 = !DILocation(line: 1622, column: 6, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2610, file: !3, line: 1622, column: 6)
!2619 = !DILocation(line: 1622, column: 12, scope: !2618)
!2620 = !DILocation(line: 1622, column: 24, scope: !2618)
!2621 = !DILocation(line: 1622, column: 29, scope: !2618)
!2622 = !DILocation(line: 1622, column: 32, scope: !2618)
!2623 = !DILocation(line: 1622, column: 38, scope: !2618)
!2624 = !DILocation(line: 1622, column: 55, scope: !2618)
!2625 = !DILocation(line: 1622, column: 6, scope: !2610)
!2626 = !DILocation(line: 1623, column: 3, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !2618, file: !3, line: 1622, column: 61)
!2628 = !DILocation(line: 1626, column: 2, scope: !2610)
!2629 = !DILocation(line: 1627, column: 1, scope: !2610)
!2630 = distinct !DISubprogram(name: "sk_applyCutGesture", scope: !3, file: !3, line: 1629, type: !1940, scopeLine: 1630, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2631 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !2630, file: !3, line: 1629, type: !228)
!2632 = !DILocation(line: 1629, column: 35, scope: !2630)
!2633 = !DILocalVariable(name: "gest", arg: 2, scope: !2630, file: !3, line: 1629, type: !1909)
!2634 = !DILocation(line: 1629, column: 58, scope: !2630)
!2635 = !DILocalVariable(name: "UNUSED_sketch", arg: 3, scope: !2630, file: !3, line: 1629, type: !1920)
!2636 = !DILocation(line: 1629, column: 75, scope: !2630)
!2637 = !DILocalVariable(name: "isect", scope: !2630, file: !3, line: 1631, type: !2638)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 64)
!2639 = !DIDerivedType(tag: DW_TAG_typedef, name: "SK_Intersection", file: !21, line: 81, baseType: !2640)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SK_Intersection", file: !21, line: 73, size: 448, elements: !2641)
!2641 = !{!2642, !2644, !2645, !2646, !2647, !2648, !2649, !2650}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2640, file: !21, line: 74, baseType: !2643, size: 64)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 64)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2640, file: !21, line: 74, baseType: !2643, size: 64, offset: 64)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !2640, file: !21, line: 75, baseType: !195, size: 64, offset: 128)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !2640, file: !21, line: 76, baseType: !91, size: 32, offset: 192)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !2640, file: !21, line: 77, baseType: !91, size: 32, offset: 224)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "gesture_index", scope: !2640, file: !21, line: 78, baseType: !91, size: 32, offset: 256)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2640, file: !21, line: 79, baseType: !124, size: 96, offset: 288)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "lambda", scope: !2640, file: !21, line: 80, baseType: !106, size: 32, offset: 384)
!2651 = !DILocation(line: 1631, column: 19, scope: !2630)
!2652 = !DILocation(line: 1633, column: 15, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2630, file: !3, line: 1633, column: 2)
!2654 = !DILocation(line: 1633, column: 21, scope: !2653)
!2655 = !DILocation(line: 1633, column: 35, scope: !2653)
!2656 = !DILocation(line: 1633, column: 13, scope: !2653)
!2657 = !DILocation(line: 1633, column: 7, scope: !2653)
!2658 = !DILocation(line: 1633, column: 42, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2653, file: !3, line: 1633, column: 2)
!2660 = !DILocation(line: 1633, column: 2, scope: !2653)
!2661 = !DILocalVariable(name: "pt", scope: !2662, file: !3, line: 1634, type: !204)
!2662 = distinct !DILexicalBlock(scope: !2659, file: !3, line: 1633, column: 70)
!2663 = !DILocation(line: 1634, column: 12, scope: !2662)
!2664 = !DILocation(line: 1636, column: 6, scope: !2662)
!2665 = !DILocation(line: 1636, column: 11, scope: !2662)
!2666 = !DILocation(line: 1637, column: 6, scope: !2662)
!2667 = !DILocation(line: 1637, column: 11, scope: !2662)
!2668 = !DILocation(line: 1638, column: 17, scope: !2662)
!2669 = !DILocation(line: 1638, column: 14, scope: !2662)
!2670 = !DILocation(line: 1638, column: 20, scope: !2662)
!2671 = !DILocation(line: 1638, column: 27, scope: !2662)
!2672 = !DILocation(line: 1638, column: 3, scope: !2662)
!2673 = !DILocation(line: 1639, column: 17, scope: !2662)
!2674 = !DILocation(line: 1639, column: 14, scope: !2662)
!2675 = !DILocation(line: 1639, column: 21, scope: !2662)
!2676 = !DILocation(line: 1639, column: 28, scope: !2662)
!2677 = !DILocation(line: 1639, column: 36, scope: !2662)
!2678 = !DILocation(line: 1639, column: 43, scope: !2662)
!2679 = !DILocation(line: 1639, column: 50, scope: !2662)
!2680 = !DILocation(line: 1639, column: 58, scope: !2662)
!2681 = !DILocation(line: 1639, column: 3, scope: !2662)
!2682 = !DILocation(line: 1641, column: 24, scope: !2662)
!2683 = !DILocation(line: 1641, column: 31, scope: !2662)
!2684 = !DILocation(line: 1641, column: 44, scope: !2662)
!2685 = !DILocation(line: 1641, column: 51, scope: !2662)
!2686 = !DILocation(line: 1641, column: 3, scope: !2662)
!2687 = !DILocation(line: 1642, column: 2, scope: !2662)
!2688 = !DILocation(line: 1633, column: 57, scope: !2659)
!2689 = !DILocation(line: 1633, column: 64, scope: !2659)
!2690 = !DILocation(line: 1633, column: 55, scope: !2659)
!2691 = !DILocation(line: 1633, column: 2, scope: !2659)
!2692 = distinct !{!2692, !2660, !2693}
!2693 = !DILocation(line: 1642, column: 2, scope: !2653)
!2694 = !DILocation(line: 1643, column: 1, scope: !2630)
!2695 = distinct !DISubprogram(name: "copy_v3_v3", scope: !2696, file: !2696, line: 64, type: !2697, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2696 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2697 = !DISubroutineType(types: !2698)
!2698 = !{null, !189, !2699}
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 64)
!2700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !106)
!2701 = !DILocalVariable(name: "r", arg: 1, scope: !2695, file: !2696, line: 64, type: !189)
!2702 = !DILocation(line: 64, column: 31, scope: !2695)
!2703 = !DILocalVariable(name: "a", arg: 2, scope: !2695, file: !2696, line: 64, type: !2699)
!2704 = !DILocation(line: 64, column: 49, scope: !2695)
!2705 = !DILocation(line: 66, column: 9, scope: !2695)
!2706 = !DILocation(line: 66, column: 2, scope: !2695)
!2707 = !DILocation(line: 66, column: 7, scope: !2695)
!2708 = !DILocation(line: 67, column: 9, scope: !2695)
!2709 = !DILocation(line: 67, column: 2, scope: !2695)
!2710 = !DILocation(line: 67, column: 7, scope: !2695)
!2711 = !DILocation(line: 68, column: 9, scope: !2695)
!2712 = !DILocation(line: 68, column: 2, scope: !2695)
!2713 = !DILocation(line: 68, column: 7, scope: !2695)
!2714 = !DILocation(line: 69, column: 1, scope: !2695)
!2715 = distinct !DISubprogram(name: "sk_detectTrimGesture", scope: !3, file: !3, line: 1645, type: !1907, scopeLine: 1646, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2716 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !2715, file: !3, line: 1645, type: !228)
!2717 = !DILocation(line: 1645, column: 36, scope: !2715)
!2718 = !DILocalVariable(name: "gest", arg: 2, scope: !2715, file: !3, line: 1645, type: !1909)
!2719 = !DILocation(line: 1645, column: 59, scope: !2715)
!2720 = !DILocalVariable(name: "UNUSED_sketch", arg: 3, scope: !2715, file: !3, line: 1645, type: !1920)
!2721 = !DILocation(line: 1645, column: 76, scope: !2715)
!2722 = !DILocation(line: 1647, column: 6, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2715, file: !3, line: 1647, column: 6)
!2724 = !DILocation(line: 1647, column: 12, scope: !2723)
!2725 = !DILocation(line: 1647, column: 24, scope: !2723)
!2726 = !DILocation(line: 1647, column: 29, scope: !2723)
!2727 = !DILocation(line: 1647, column: 32, scope: !2723)
!2728 = !DILocation(line: 1647, column: 38, scope: !2723)
!2729 = !DILocation(line: 1647, column: 55, scope: !2723)
!2730 = !DILocation(line: 1647, column: 60, scope: !2723)
!2731 = !DILocation(line: 1647, column: 63, scope: !2723)
!2732 = !DILocation(line: 1647, column: 69, scope: !2723)
!2733 = !DILocation(line: 1647, column: 91, scope: !2723)
!2734 = !DILocation(line: 1647, column: 6, scope: !2715)
!2735 = !DILocalVariable(name: "s1", scope: !2736, file: !3, line: 1648, type: !124)
!2736 = distinct !DILexicalBlock(scope: !2723, file: !3, line: 1647, column: 97)
!2737 = !DILocation(line: 1648, column: 9, scope: !2736)
!2738 = !DILocalVariable(name: "s2", scope: !2736, file: !3, line: 1648, type: !124)
!2739 = !DILocation(line: 1648, column: 16, scope: !2736)
!2740 = !DILocalVariable(name: "angle", scope: !2736, file: !3, line: 1649, type: !106)
!2741 = !DILocation(line: 1649, column: 9, scope: !2736)
!2742 = !DILocation(line: 1651, column: 15, scope: !2736)
!2743 = !DILocation(line: 1651, column: 19, scope: !2736)
!2744 = !DILocation(line: 1651, column: 25, scope: !2736)
!2745 = !DILocation(line: 1651, column: 35, scope: !2736)
!2746 = !DILocation(line: 1651, column: 45, scope: !2736)
!2747 = !DILocation(line: 1651, column: 48, scope: !2736)
!2748 = !DILocation(line: 1651, column: 54, scope: !2736)
!2749 = !DILocation(line: 1651, column: 64, scope: !2736)
!2750 = !DILocation(line: 1651, column: 74, scope: !2736)
!2751 = !DILocation(line: 1651, column: 3, scope: !2736)
!2752 = !DILocation(line: 1652, column: 15, scope: !2736)
!2753 = !DILocation(line: 1652, column: 19, scope: !2736)
!2754 = !DILocation(line: 1652, column: 25, scope: !2736)
!2755 = !DILocation(line: 1652, column: 35, scope: !2736)
!2756 = !DILocation(line: 1652, column: 45, scope: !2736)
!2757 = !DILocation(line: 1652, column: 48, scope: !2736)
!2758 = !DILocation(line: 1652, column: 54, scope: !2736)
!2759 = !DILocation(line: 1652, column: 64, scope: !2736)
!2760 = !DILocation(line: 1652, column: 74, scope: !2736)
!2761 = !DILocation(line: 1652, column: 3, scope: !2736)
!2762 = !DILocation(line: 1654, column: 11, scope: !2736)
!2763 = !DILocation(line: 1654, column: 9, scope: !2736)
!2764 = !DILocation(line: 1656, column: 7, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2736, file: !3, line: 1656, column: 7)
!2766 = !DILocation(line: 1656, column: 13, scope: !2765)
!2767 = !DILocation(line: 1656, column: 18, scope: !2765)
!2768 = !DILocation(line: 1656, column: 21, scope: !2765)
!2769 = !DILocation(line: 1656, column: 27, scope: !2765)
!2770 = !DILocation(line: 1656, column: 7, scope: !2736)
!2771 = !DILocation(line: 1657, column: 4, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2765, file: !3, line: 1656, column: 34)
!2773 = !DILocation(line: 1659, column: 2, scope: !2736)
!2774 = !DILocation(line: 1661, column: 2, scope: !2715)
!2775 = !DILocation(line: 1662, column: 1, scope: !2715)
!2776 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !2696, file: !2696, line: 357, type: !2777, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2777 = !DISubroutineType(types: !2778)
!2778 = !{null, !189, !2699, !2699}
!2779 = !DILocalVariable(name: "r", arg: 1, scope: !2776, file: !2696, line: 357, type: !189)
!2780 = !DILocation(line: 357, column: 32, scope: !2776)
!2781 = !DILocalVariable(name: "a", arg: 2, scope: !2776, file: !2696, line: 357, type: !2699)
!2782 = !DILocation(line: 357, column: 50, scope: !2776)
!2783 = !DILocalVariable(name: "b", arg: 3, scope: !2776, file: !2696, line: 357, type: !2699)
!2784 = !DILocation(line: 357, column: 68, scope: !2776)
!2785 = !DILocation(line: 359, column: 9, scope: !2776)
!2786 = !DILocation(line: 359, column: 16, scope: !2776)
!2787 = !DILocation(line: 359, column: 14, scope: !2776)
!2788 = !DILocation(line: 359, column: 2, scope: !2776)
!2789 = !DILocation(line: 359, column: 7, scope: !2776)
!2790 = !DILocation(line: 360, column: 9, scope: !2776)
!2791 = !DILocation(line: 360, column: 16, scope: !2776)
!2792 = !DILocation(line: 360, column: 14, scope: !2776)
!2793 = !DILocation(line: 360, column: 2, scope: !2776)
!2794 = !DILocation(line: 360, column: 7, scope: !2776)
!2795 = !DILocation(line: 361, column: 9, scope: !2776)
!2796 = !DILocation(line: 361, column: 16, scope: !2776)
!2797 = !DILocation(line: 361, column: 14, scope: !2776)
!2798 = !DILocation(line: 361, column: 2, scope: !2776)
!2799 = !DILocation(line: 361, column: 7, scope: !2776)
!2800 = !DILocation(line: 362, column: 1, scope: !2776)
!2801 = distinct !DISubprogram(name: "sk_applyTrimGesture", scope: !3, file: !3, line: 1664, type: !1940, scopeLine: 1665, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2802 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !2801, file: !3, line: 1664, type: !228)
!2803 = !DILocation(line: 1664, column: 36, scope: !2801)
!2804 = !DILocalVariable(name: "gest", arg: 2, scope: !2801, file: !3, line: 1664, type: !1909)
!2805 = !DILocation(line: 1664, column: 59, scope: !2801)
!2806 = !DILocalVariable(name: "UNUSED_sketch", arg: 3, scope: !2801, file: !3, line: 1664, type: !1920)
!2807 = !DILocation(line: 1664, column: 76, scope: !2801)
!2808 = !DILocalVariable(name: "isect", scope: !2801, file: !3, line: 1666, type: !2638)
!2809 = !DILocation(line: 1666, column: 19, scope: !2801)
!2810 = !DILocalVariable(name: "trim_dir", scope: !2801, file: !3, line: 1667, type: !124)
!2811 = !DILocation(line: 1667, column: 8, scope: !2801)
!2812 = !DILocation(line: 1669, column: 14, scope: !2801)
!2813 = !DILocation(line: 1669, column: 24, scope: !2801)
!2814 = !DILocation(line: 1669, column: 30, scope: !2801)
!2815 = !DILocation(line: 1669, column: 40, scope: !2801)
!2816 = !DILocation(line: 1669, column: 50, scope: !2801)
!2817 = !DILocation(line: 1669, column: 53, scope: !2801)
!2818 = !DILocation(line: 1669, column: 59, scope: !2801)
!2819 = !DILocation(line: 1669, column: 69, scope: !2801)
!2820 = !DILocation(line: 1669, column: 79, scope: !2801)
!2821 = !DILocation(line: 1669, column: 2, scope: !2801)
!2822 = !DILocation(line: 1671, column: 15, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 1671, column: 2)
!2824 = !DILocation(line: 1671, column: 21, scope: !2823)
!2825 = !DILocation(line: 1671, column: 35, scope: !2823)
!2826 = !DILocation(line: 1671, column: 13, scope: !2823)
!2827 = !DILocation(line: 1671, column: 7, scope: !2823)
!2828 = !DILocation(line: 1671, column: 42, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 1671, column: 2)
!2830 = !DILocation(line: 1671, column: 2, scope: !2823)
!2831 = !DILocalVariable(name: "pt", scope: !2832, file: !3, line: 1672, type: !204)
!2832 = distinct !DILexicalBlock(scope: !2829, file: !3, line: 1671, column: 70)
!2833 = !DILocation(line: 1672, column: 12, scope: !2832)
!2834 = !DILocalVariable(name: "stroke_dir", scope: !2832, file: !3, line: 1673, type: !124)
!2835 = !DILocation(line: 1673, column: 9, scope: !2832)
!2836 = !DILocation(line: 1675, column: 6, scope: !2832)
!2837 = !DILocation(line: 1675, column: 11, scope: !2832)
!2838 = !DILocation(line: 1676, column: 6, scope: !2832)
!2839 = !DILocation(line: 1676, column: 11, scope: !2832)
!2840 = !DILocation(line: 1677, column: 17, scope: !2832)
!2841 = !DILocation(line: 1677, column: 14, scope: !2832)
!2842 = !DILocation(line: 1677, column: 20, scope: !2832)
!2843 = !DILocation(line: 1677, column: 27, scope: !2832)
!2844 = !DILocation(line: 1677, column: 3, scope: !2832)
!2845 = !DILocation(line: 1678, column: 17, scope: !2832)
!2846 = !DILocation(line: 1678, column: 14, scope: !2832)
!2847 = !DILocation(line: 1678, column: 21, scope: !2832)
!2848 = !DILocation(line: 1678, column: 28, scope: !2832)
!2849 = !DILocation(line: 1678, column: 36, scope: !2832)
!2850 = !DILocation(line: 1678, column: 43, scope: !2832)
!2851 = !DILocation(line: 1678, column: 50, scope: !2832)
!2852 = !DILocation(line: 1678, column: 58, scope: !2832)
!2853 = !DILocation(line: 1678, column: 3, scope: !2832)
!2854 = !DILocation(line: 1680, column: 15, scope: !2832)
!2855 = !DILocation(line: 1680, column: 27, scope: !2832)
!2856 = !DILocation(line: 1680, column: 34, scope: !2832)
!2857 = !DILocation(line: 1680, column: 42, scope: !2832)
!2858 = !DILocation(line: 1680, column: 49, scope: !2832)
!2859 = !DILocation(line: 1680, column: 56, scope: !2832)
!2860 = !DILocation(line: 1680, column: 63, scope: !2832)
!2861 = !DILocation(line: 1680, column: 66, scope: !2832)
!2862 = !DILocation(line: 1680, column: 73, scope: !2832)
!2863 = !DILocation(line: 1680, column: 81, scope: !2832)
!2864 = !DILocation(line: 1680, column: 88, scope: !2832)
!2865 = !DILocation(line: 1680, column: 95, scope: !2832)
!2866 = !DILocation(line: 1680, column: 103, scope: !2832)
!2867 = !DILocation(line: 1680, column: 3, scope: !2832)
!2868 = !DILocation(line: 1683, column: 16, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2832, file: !3, line: 1683, column: 7)
!2870 = !DILocation(line: 1683, column: 28, scope: !2869)
!2871 = !DILocation(line: 1683, column: 7, scope: !2869)
!2872 = !DILocation(line: 1683, column: 38, scope: !2869)
!2873 = !DILocation(line: 1683, column: 7, scope: !2832)
!2874 = !DILocation(line: 1684, column: 26, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2869, file: !3, line: 1683, column: 43)
!2876 = !DILocation(line: 1684, column: 33, scope: !2875)
!2877 = !DILocation(line: 1684, column: 46, scope: !2875)
!2878 = !DILocation(line: 1684, column: 53, scope: !2875)
!2879 = !DILocation(line: 1684, column: 4, scope: !2875)
!2880 = !DILocation(line: 1685, column: 18, scope: !2875)
!2881 = !DILocation(line: 1685, column: 25, scope: !2875)
!2882 = !DILocation(line: 1685, column: 36, scope: !2875)
!2883 = !DILocation(line: 1685, column: 43, scope: !2875)
!2884 = !DILocation(line: 1685, column: 4, scope: !2875)
!2885 = !DILocation(line: 1686, column: 3, scope: !2875)
!2886 = !DILocation(line: 1689, column: 26, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2869, file: !3, line: 1688, column: 8)
!2888 = !DILocation(line: 1689, column: 33, scope: !2887)
!2889 = !DILocation(line: 1689, column: 46, scope: !2887)
!2890 = !DILocation(line: 1689, column: 53, scope: !2887)
!2891 = !DILocation(line: 1689, column: 4, scope: !2887)
!2892 = !DILocation(line: 1690, column: 18, scope: !2887)
!2893 = !DILocation(line: 1690, column: 25, scope: !2887)
!2894 = !DILocation(line: 1690, column: 33, scope: !2887)
!2895 = !DILocation(line: 1690, column: 40, scope: !2887)
!2896 = !DILocation(line: 1690, column: 48, scope: !2887)
!2897 = !DILocation(line: 1690, column: 55, scope: !2887)
!2898 = !DILocation(line: 1690, column: 63, scope: !2887)
!2899 = !DILocation(line: 1690, column: 73, scope: !2887)
!2900 = !DILocation(line: 1690, column: 4, scope: !2887)
!2901 = !DILocation(line: 1693, column: 2, scope: !2832)
!2902 = !DILocation(line: 1671, column: 57, scope: !2829)
!2903 = !DILocation(line: 1671, column: 64, scope: !2829)
!2904 = !DILocation(line: 1671, column: 55, scope: !2829)
!2905 = !DILocation(line: 1671, column: 2, scope: !2829)
!2906 = distinct !{!2906, !2830, !2907}
!2907 = !DILocation(line: 1693, column: 2, scope: !2823)
!2908 = !DILocation(line: 1694, column: 1, scope: !2801)
!2909 = distinct !DISubprogram(name: "dot_v3v3", scope: !2696, file: !2696, line: 619, type: !2910, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2910 = !DISubroutineType(types: !2911)
!2911 = !{!106, !2699, !2699}
!2912 = !DILocalVariable(name: "a", arg: 1, scope: !2909, file: !2696, line: 619, type: !2699)
!2913 = !DILocation(line: 619, column: 36, scope: !2909)
!2914 = !DILocalVariable(name: "b", arg: 2, scope: !2909, file: !2696, line: 619, type: !2699)
!2915 = !DILocation(line: 619, column: 54, scope: !2909)
!2916 = !DILocation(line: 621, column: 9, scope: !2909)
!2917 = !DILocation(line: 621, column: 16, scope: !2909)
!2918 = !DILocation(line: 621, column: 14, scope: !2909)
!2919 = !DILocation(line: 621, column: 23, scope: !2909)
!2920 = !DILocation(line: 621, column: 30, scope: !2909)
!2921 = !DILocation(line: 621, column: 28, scope: !2909)
!2922 = !DILocation(line: 621, column: 21, scope: !2909)
!2923 = !DILocation(line: 621, column: 37, scope: !2909)
!2924 = !DILocation(line: 621, column: 44, scope: !2909)
!2925 = !DILocation(line: 621, column: 42, scope: !2909)
!2926 = !DILocation(line: 621, column: 35, scope: !2909)
!2927 = !DILocation(line: 621, column: 2, scope: !2909)
!2928 = distinct !DISubprogram(name: "sk_detectCommandGesture", scope: !3, file: !3, line: 1696, type: !1907, scopeLine: 1697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!2929 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !2928, file: !3, line: 1696, type: !228)
!2930 = !DILocation(line: 1696, column: 39, scope: !2928)
!2931 = !DILocalVariable(name: "gest", arg: 2, scope: !2928, file: !3, line: 1696, type: !1909)
!2932 = !DILocation(line: 1696, column: 62, scope: !2928)
!2933 = !DILocalVariable(name: "UNUSED_sketch", arg: 3, scope: !2928, file: !3, line: 1696, type: !1920)
!2934 = !DILocation(line: 1696, column: 79, scope: !2928)
!2935 = !DILocation(line: 1698, column: 6, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2928, file: !3, line: 1698, column: 6)
!2937 = !DILocation(line: 1698, column: 12, scope: !2936)
!2938 = !DILocation(line: 1698, column: 24, scope: !2936)
!2939 = !DILocation(line: 1698, column: 28, scope: !2936)
!2940 = !DILocation(line: 1698, column: 31, scope: !2936)
!2941 = !DILocation(line: 1698, column: 37, scope: !2936)
!2942 = !DILocation(line: 1698, column: 54, scope: !2936)
!2943 = !DILocation(line: 1698, column: 59, scope: !2936)
!2944 = !DILocation(line: 1698, column: 62, scope: !2936)
!2945 = !DILocation(line: 1698, column: 68, scope: !2936)
!2946 = !DILocation(line: 1698, column: 90, scope: !2936)
!2947 = !DILocation(line: 1698, column: 6, scope: !2928)
!2948 = !DILocalVariable(name: "isect", scope: !2949, file: !3, line: 1699, type: !2638)
!2949 = distinct !DILexicalBlock(scope: !2936, file: !3, line: 1698, column: 96)
!2950 = !DILocation(line: 1699, column: 20, scope: !2949)
!2951 = !DILocalVariable(name: "self_isect", scope: !2949, file: !3, line: 1699, type: !2638)
!2952 = !DILocation(line: 1699, column: 28, scope: !2949)
!2953 = !DILocation(line: 1702, column: 16, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 1702, column: 3)
!2955 = !DILocation(line: 1702, column: 22, scope: !2954)
!2956 = !DILocation(line: 1702, column: 36, scope: !2954)
!2957 = !DILocation(line: 1702, column: 14, scope: !2954)
!2958 = !DILocation(line: 1702, column: 8, scope: !2954)
!2959 = !DILocation(line: 1702, column: 43, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2954, file: !3, line: 1702, column: 3)
!2961 = !DILocation(line: 1702, column: 3, scope: !2954)
!2962 = !DILocation(line: 1703, column: 8, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2964, file: !3, line: 1703, column: 8)
!2964 = distinct !DILexicalBlock(scope: !2960, file: !3, line: 1702, column: 71)
!2965 = !DILocation(line: 1703, column: 15, scope: !2963)
!2966 = !DILocation(line: 1703, column: 25, scope: !2963)
!2967 = !DILocation(line: 1703, column: 32, scope: !2963)
!2968 = !DILocation(line: 1703, column: 38, scope: !2963)
!2969 = !DILocation(line: 1703, column: 22, scope: !2963)
!2970 = !DILocation(line: 1703, column: 8, scope: !2964)
!2971 = !DILocation(line: 1704, column: 13, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2963, file: !3, line: 1703, column: 46)
!2973 = !DILocation(line: 1704, column: 20, scope: !2972)
!2974 = !DILocation(line: 1704, column: 11, scope: !2972)
!2975 = !DILocation(line: 1705, column: 5, scope: !2972)
!2976 = !DILocation(line: 1707, column: 3, scope: !2964)
!2977 = !DILocation(line: 1702, column: 58, scope: !2960)
!2978 = !DILocation(line: 1702, column: 65, scope: !2960)
!2979 = !DILocation(line: 1702, column: 56, scope: !2960)
!2980 = !DILocation(line: 1702, column: 3, scope: !2960)
!2981 = distinct !{!2981, !2961, !2982}
!2982 = !DILocation(line: 1707, column: 3, scope: !2954)
!2983 = !DILocation(line: 1709, column: 16, scope: !2949)
!2984 = !DILocation(line: 1709, column: 22, scope: !2949)
!2985 = !DILocation(line: 1709, column: 41, scope: !2949)
!2986 = !DILocation(line: 1709, column: 14, scope: !2949)
!2987 = !DILocation(line: 1711, column: 7, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 1711, column: 7)
!2989 = !DILocation(line: 1711, column: 13, scope: !2988)
!2990 = !DILocation(line: 1711, column: 16, scope: !2988)
!2991 = !DILocation(line: 1711, column: 23, scope: !2988)
!2992 = !DILocation(line: 1711, column: 39, scope: !2988)
!2993 = !DILocation(line: 1711, column: 51, scope: !2988)
!2994 = !DILocation(line: 1711, column: 37, scope: !2988)
!2995 = !DILocation(line: 1711, column: 7, scope: !2949)
!2996 = !DILocation(line: 1712, column: 4, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2988, file: !3, line: 1711, column: 66)
!2998 = !DILocation(line: 1714, column: 2, scope: !2949)
!2999 = !DILocation(line: 1716, column: 2, scope: !2928)
!3000 = !DILocation(line: 1717, column: 1, scope: !2928)
!3001 = distinct !DISubprogram(name: "sk_applyCommandGesture", scope: !3, file: !3, line: 1719, type: !1940, scopeLine: 1720, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!3002 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !3001, file: !3, line: 1719, type: !228)
!3003 = !DILocation(line: 1719, column: 39, scope: !3001)
!3004 = !DILocalVariable(name: "gest", arg: 2, scope: !3001, file: !3, line: 1719, type: !1909)
!3005 = !DILocation(line: 1719, column: 62, scope: !3001)
!3006 = !DILocalVariable(name: "UNUSED_sketch", arg: 3, scope: !3001, file: !3, line: 1719, type: !1920)
!3007 = !DILocation(line: 1719, column: 79, scope: !3001)
!3008 = !DILocalVariable(name: "isect", scope: !3001, file: !3, line: 1721, type: !2638)
!3009 = !DILocation(line: 1721, column: 19, scope: !3001)
!3010 = !DILocalVariable(name: "command", scope: !3001, file: !3, line: 1722, type: !91)
!3011 = !DILocation(line: 1722, column: 6, scope: !3001)
!3012 = !DILocation(line: 1726, column: 6, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !3001, file: !3, line: 1726, column: 6)
!3014 = !DILocation(line: 1726, column: 14, scope: !3013)
!3015 = !DILocation(line: 1726, column: 6, scope: !3001)
!3016 = !DILocation(line: 1726, column: 19, scope: !3013)
!3017 = !DILocation(line: 1728, column: 15, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3001, file: !3, line: 1728, column: 2)
!3019 = !DILocation(line: 1728, column: 21, scope: !3018)
!3020 = !DILocation(line: 1728, column: 35, scope: !3018)
!3021 = !DILocation(line: 1728, column: 13, scope: !3018)
!3022 = !DILocation(line: 1728, column: 7, scope: !3018)
!3023 = !DILocation(line: 1728, column: 42, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !3018, file: !3, line: 1728, column: 2)
!3025 = !DILocation(line: 1728, column: 2, scope: !3018)
!3026 = !DILocalVariable(name: "i2", scope: !3027, file: !3, line: 1729, type: !2638)
!3027 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1728, column: 70)
!3028 = !DILocation(line: 1729, column: 20, scope: !3027)
!3029 = !DILocation(line: 1731, column: 8, scope: !3027)
!3030 = !DILocation(line: 1731, column: 15, scope: !3027)
!3031 = !DILocation(line: 1731, column: 6, scope: !3027)
!3032 = !DILocation(line: 1733, column: 7, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 1733, column: 7)
!3034 = !DILocation(line: 1733, column: 10, scope: !3033)
!3035 = !DILocation(line: 1733, column: 13, scope: !3033)
!3036 = !DILocation(line: 1733, column: 17, scope: !3033)
!3037 = !DILocation(line: 1733, column: 27, scope: !3033)
!3038 = !DILocation(line: 1733, column: 34, scope: !3033)
!3039 = !DILocation(line: 1733, column: 24, scope: !3033)
!3040 = !DILocation(line: 1733, column: 7, scope: !3027)
!3041 = !DILocation(line: 1734, column: 12, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3033, file: !3, line: 1733, column: 42)
!3043 = !DILocation(line: 1734, column: 4, scope: !3042)
!3044 = !DILocation(line: 1736, column: 23, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3042, file: !3, line: 1734, column: 21)
!3046 = !DILocation(line: 1736, column: 30, scope: !3045)
!3047 = !DILocation(line: 1736, column: 38, scope: !3045)
!3048 = !DILocation(line: 1736, column: 45, scope: !3045)
!3049 = !DILocation(line: 1736, column: 53, scope: !3045)
!3050 = !DILocation(line: 1736, column: 57, scope: !3045)
!3051 = !DILocation(line: 1736, column: 6, scope: !3045)
!3052 = !DILocation(line: 1737, column: 6, scope: !3045)
!3053 = !DILocation(line: 1739, column: 26, scope: !3045)
!3054 = !DILocation(line: 1739, column: 33, scope: !3045)
!3055 = !DILocation(line: 1739, column: 41, scope: !3045)
!3056 = !DILocation(line: 1739, column: 48, scope: !3045)
!3057 = !DILocation(line: 1739, column: 56, scope: !3045)
!3058 = !DILocation(line: 1739, column: 60, scope: !3045)
!3059 = !DILocation(line: 1739, column: 67, scope: !3045)
!3060 = !DILocation(line: 1739, column: 74, scope: !3045)
!3061 = !DILocation(line: 1739, column: 77, scope: !3045)
!3062 = !DILocation(line: 1739, column: 81, scope: !3045)
!3063 = !DILocation(line: 1739, column: 6, scope: !3045)
!3064 = !DILocation(line: 1740, column: 6, scope: !3045)
!3065 = !DILocation(line: 1742, column: 26, scope: !3045)
!3066 = !DILocation(line: 1742, column: 33, scope: !3045)
!3067 = !DILocation(line: 1742, column: 41, scope: !3045)
!3068 = !DILocation(line: 1742, column: 48, scope: !3045)
!3069 = !DILocation(line: 1742, column: 56, scope: !3045)
!3070 = !DILocation(line: 1742, column: 60, scope: !3045)
!3071 = !DILocation(line: 1742, column: 6, scope: !3045)
!3072 = !DILocation(line: 1743, column: 6, scope: !3045)
!3073 = !DILocation(line: 1746, column: 12, scope: !3042)
!3074 = !DILocation(line: 1746, column: 10, scope: !3042)
!3075 = !DILocation(line: 1747, column: 3, scope: !3042)
!3076 = !DILocation(line: 1748, column: 2, scope: !3027)
!3077 = !DILocation(line: 1728, column: 57, scope: !3024)
!3078 = !DILocation(line: 1728, column: 64, scope: !3024)
!3079 = !DILocation(line: 1728, column: 55, scope: !3024)
!3080 = !DILocation(line: 1728, column: 2, scope: !3024)
!3081 = distinct !{!3081, !3025, !3082}
!3082 = !DILocation(line: 1748, column: 2, scope: !3018)
!3083 = !DILocation(line: 1749, column: 1, scope: !3001)
!3084 = distinct !DISubprogram(name: "sk_detectDeleteGesture", scope: !3, file: !3, line: 1751, type: !1907, scopeLine: 1752, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!3085 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !3084, file: !3, line: 1751, type: !228)
!3086 = !DILocation(line: 1751, column: 38, scope: !3084)
!3087 = !DILocalVariable(name: "gest", arg: 2, scope: !3084, file: !3, line: 1751, type: !1909)
!3088 = !DILocation(line: 1751, column: 61, scope: !3084)
!3089 = !DILocalVariable(name: "UNUSED_sketch", arg: 3, scope: !3084, file: !3, line: 1751, type: !1920)
!3090 = !DILocation(line: 1751, column: 78, scope: !3084)
!3091 = !DILocation(line: 1753, column: 6, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !3084, file: !3, line: 1753, column: 6)
!3093 = !DILocation(line: 1753, column: 12, scope: !3092)
!3094 = !DILocation(line: 1753, column: 24, scope: !3092)
!3095 = !DILocation(line: 1753, column: 29, scope: !3092)
!3096 = !DILocation(line: 1753, column: 32, scope: !3092)
!3097 = !DILocation(line: 1753, column: 38, scope: !3092)
!3098 = !DILocation(line: 1753, column: 55, scope: !3092)
!3099 = !DILocation(line: 1753, column: 6, scope: !3084)
!3100 = !DILocalVariable(name: "s1", scope: !3101, file: !3, line: 1754, type: !124)
!3101 = distinct !DILexicalBlock(scope: !3092, file: !3, line: 1753, column: 61)
!3102 = !DILocation(line: 1754, column: 9, scope: !3101)
!3103 = !DILocalVariable(name: "s2", scope: !3101, file: !3, line: 1754, type: !124)
!3104 = !DILocation(line: 1754, column: 16, scope: !3101)
!3105 = !DILocalVariable(name: "angle", scope: !3101, file: !3, line: 1755, type: !106)
!3106 = !DILocation(line: 1755, column: 9, scope: !3101)
!3107 = !DILocation(line: 1757, column: 15, scope: !3101)
!3108 = !DILocation(line: 1757, column: 19, scope: !3101)
!3109 = !DILocation(line: 1757, column: 25, scope: !3101)
!3110 = !DILocation(line: 1757, column: 35, scope: !3101)
!3111 = !DILocation(line: 1757, column: 45, scope: !3101)
!3112 = !DILocation(line: 1757, column: 48, scope: !3101)
!3113 = !DILocation(line: 1757, column: 54, scope: !3101)
!3114 = !DILocation(line: 1757, column: 64, scope: !3101)
!3115 = !DILocation(line: 1757, column: 74, scope: !3101)
!3116 = !DILocation(line: 1757, column: 3, scope: !3101)
!3117 = !DILocation(line: 1758, column: 15, scope: !3101)
!3118 = !DILocation(line: 1758, column: 19, scope: !3101)
!3119 = !DILocation(line: 1758, column: 25, scope: !3101)
!3120 = !DILocation(line: 1758, column: 35, scope: !3101)
!3121 = !DILocation(line: 1758, column: 45, scope: !3101)
!3122 = !DILocation(line: 1758, column: 48, scope: !3101)
!3123 = !DILocation(line: 1758, column: 54, scope: !3101)
!3124 = !DILocation(line: 1758, column: 64, scope: !3101)
!3125 = !DILocation(line: 1758, column: 74, scope: !3101)
!3126 = !DILocation(line: 1758, column: 3, scope: !3101)
!3127 = !DILocation(line: 1760, column: 11, scope: !3101)
!3128 = !DILocation(line: 1760, column: 9, scope: !3101)
!3129 = !DILocation(line: 1762, column: 7, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3101, file: !3, line: 1762, column: 7)
!3131 = !DILocation(line: 1762, column: 13, scope: !3130)
!3132 = !DILocation(line: 1762, column: 7, scope: !3101)
!3133 = !DILocation(line: 1763, column: 4, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3130, file: !3, line: 1762, column: 20)
!3135 = !DILocation(line: 1765, column: 2, scope: !3101)
!3136 = !DILocation(line: 1767, column: 2, scope: !3084)
!3137 = !DILocation(line: 1768, column: 1, scope: !3084)
!3138 = distinct !DISubprogram(name: "sk_applyDeleteGesture", scope: !3, file: !3, line: 1770, type: !1940, scopeLine: 1771, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!3139 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !3138, file: !3, line: 1770, type: !228)
!3140 = !DILocation(line: 1770, column: 38, scope: !3138)
!3141 = !DILocalVariable(name: "gest", arg: 2, scope: !3138, file: !3, line: 1770, type: !1909)
!3142 = !DILocation(line: 1770, column: 61, scope: !3138)
!3143 = !DILocalVariable(name: "sketch", arg: 3, scope: !3138, file: !3, line: 1770, type: !1920)
!3144 = !DILocation(line: 1770, column: 78, scope: !3138)
!3145 = !DILocalVariable(name: "isect", scope: !3138, file: !3, line: 1772, type: !2638)
!3146 = !DILocation(line: 1772, column: 19, scope: !3138)
!3147 = !DILocation(line: 1774, column: 15, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3138, file: !3, line: 1774, column: 2)
!3149 = !DILocation(line: 1774, column: 21, scope: !3148)
!3150 = !DILocation(line: 1774, column: 35, scope: !3148)
!3151 = !DILocation(line: 1774, column: 13, scope: !3148)
!3152 = !DILocation(line: 1774, column: 7, scope: !3148)
!3153 = !DILocation(line: 1774, column: 42, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3148, file: !3, line: 1774, column: 2)
!3155 = !DILocation(line: 1774, column: 2, scope: !3148)
!3156 = !DILocation(line: 1776, column: 7, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3158, file: !3, line: 1776, column: 7)
!3158 = distinct !DILexicalBlock(scope: !3154, file: !3, line: 1774, column: 70)
!3159 = !DILocation(line: 1776, column: 14, scope: !3157)
!3160 = !DILocation(line: 1776, column: 19, scope: !3157)
!3161 = !DILocation(line: 1776, column: 22, scope: !3157)
!3162 = !DILocation(line: 1776, column: 29, scope: !3157)
!3163 = !DILocation(line: 1776, column: 35, scope: !3157)
!3164 = !DILocation(line: 1776, column: 45, scope: !3157)
!3165 = !DILocation(line: 1776, column: 52, scope: !3157)
!3166 = !DILocation(line: 1776, column: 42, scope: !3157)
!3167 = !DILocation(line: 1776, column: 7, scope: !3158)
!3168 = !DILocation(line: 1777, column: 12, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3157, file: !3, line: 1776, column: 60)
!3170 = !DILocation(line: 1777, column: 19, scope: !3169)
!3171 = !DILocation(line: 1777, column: 10, scope: !3169)
!3172 = !DILocation(line: 1779, column: 20, scope: !3169)
!3173 = !DILocation(line: 1779, column: 28, scope: !3169)
!3174 = !DILocation(line: 1779, column: 35, scope: !3169)
!3175 = !DILocation(line: 1779, column: 4, scope: !3169)
!3176 = !DILocation(line: 1780, column: 3, scope: !3169)
!3177 = !DILocation(line: 1781, column: 2, scope: !3158)
!3178 = !DILocation(line: 1774, column: 57, scope: !3154)
!3179 = !DILocation(line: 1774, column: 64, scope: !3154)
!3180 = !DILocation(line: 1774, column: 55, scope: !3154)
!3181 = !DILocation(line: 1774, column: 2, scope: !3154)
!3182 = distinct !{!3182, !3155, !3183}
!3183 = !DILocation(line: 1781, column: 2, scope: !3148)
!3184 = !DILocation(line: 1782, column: 1, scope: !3138)
!3185 = distinct !DISubprogram(name: "sk_detectMergeGesture", scope: !3, file: !3, line: 1784, type: !1907, scopeLine: 1785, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!3186 = !DILocalVariable(name: "C", arg: 1, scope: !3185, file: !3, line: 1784, type: !228)
!3187 = !DILocation(line: 1784, column: 37, scope: !3185)
!3188 = !DILocalVariable(name: "gest", arg: 2, scope: !3185, file: !3, line: 1784, type: !1909)
!3189 = !DILocation(line: 1784, column: 52, scope: !3185)
!3190 = !DILocalVariable(name: "UNUSED_sketch", arg: 3, scope: !3185, file: !3, line: 1784, type: !1920)
!3191 = !DILocation(line: 1784, column: 69, scope: !3185)
!3192 = !DILocalVariable(name: "ar", scope: !3185, file: !3, line: 1786, type: !3193)
!3193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3194, size: 64)
!3194 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !3195, line: 267, baseType: !3196)
!3195 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !3195, line: 230, size: 3072, elements: !3197)
!3197 = !{!3198, !3200, !3201, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3196, file: !3195, line: 231, baseType: !3199, size: 64)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 64)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3196, file: !3195, line: 231, baseType: !3199, size: 64, offset: 64)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !3196, file: !3195, line: 233, baseType: !3202, size: 1280, offset: 128)
!3202 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !3203, line: 71, baseType: !3204)
!3203 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !3203, line: 40, size: 1280, elements: !3205)
!3205 = !{!3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3233}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !3204, file: !3203, line: 41, baseType: !771, size: 128)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !3204, file: !3203, line: 41, baseType: !771, size: 128, offset: 128)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !3204, file: !3203, line: 42, baseType: !1656, size: 128, offset: 256)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !3204, file: !3203, line: 42, baseType: !1656, size: 128, offset: 384)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3204, file: !3203, line: 43, baseType: !1656, size: 128, offset: 512)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3204, file: !3203, line: 45, baseType: !694, size: 64, offset: 640)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3204, file: !3203, line: 45, baseType: !694, size: 64, offset: 704)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !3204, file: !3203, line: 46, baseType: !106, size: 32, offset: 768)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !3204, file: !3203, line: 46, baseType: !106, size: 32, offset: 800)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !3204, file: !3203, line: 48, baseType: !210, size: 16, offset: 832)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !3204, file: !3203, line: 49, baseType: !210, size: 16, offset: 848)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !3204, file: !3203, line: 51, baseType: !210, size: 16, offset: 864)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !3204, file: !3203, line: 52, baseType: !210, size: 16, offset: 880)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !3204, file: !3203, line: 53, baseType: !210, size: 16, offset: 896)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3204, file: !3203, line: 55, baseType: !210, size: 16, offset: 912)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3204, file: !3203, line: 56, baseType: !210, size: 16, offset: 928)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3204, file: !3203, line: 58, baseType: !210, size: 16, offset: 944)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3204, file: !3203, line: 58, baseType: !210, size: 16, offset: 960)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !3204, file: !3203, line: 59, baseType: !210, size: 16, offset: 976)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !3204, file: !3203, line: 59, baseType: !210, size: 16, offset: 992)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !3204, file: !3203, line: 61, baseType: !210, size: 16, offset: 1008)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !3204, file: !3203, line: 63, baseType: !189, size: 64, offset: 1024)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !3204, file: !3203, line: 64, baseType: !91, size: 32, offset: 1088)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !3204, file: !3203, line: 65, baseType: !91, size: 32, offset: 1120)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !3204, file: !3203, line: 68, baseType: !3231, size: 64, offset: 1152)
!3231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 64)
!3232 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !3203, line: 68, flags: DIFlagFwdDecl)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !3204, file: !3203, line: 69, baseType: !3234, size: 64, offset: 1216)
!3234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3235, size: 64)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !3236, line: 490, size: 768, elements: !3237)
!3236 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3237 = !{!3238, !3239, !3240, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3235, file: !3236, line: 491, baseType: !3234, size: 64)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3235, file: !3236, line: 491, baseType: !3234, size: 64, offset: 64)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !3235, file: !3236, line: 493, baseType: !3241, size: 64, offset: 128)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!3242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !72, line: 169, size: 2048, elements: !3243)
!3243 = !{!3244, !3245, !3246, !3247, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3332, !3335, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356}
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3242, file: !72, line: 170, baseType: !3241, size: 64)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3242, file: !72, line: 170, baseType: !3241, size: 64, offset: 64)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !3242, file: !72, line: 172, baseType: !87, size: 64, offset: 128)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !3242, file: !72, line: 174, baseType: !3248, size: 64, offset: 192)
!3248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3249, size: 64)
!3249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !3195, line: 49, size: 1984, elements: !3250)
!3250 = !{!3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273}
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3249, file: !3195, line: 50, baseType: !388, size: 960)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !3249, file: !3195, line: 52, baseType: !98, size: 128, offset: 960)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !3249, file: !3195, line: 53, baseType: !98, size: 128, offset: 1088)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !3249, file: !3195, line: 54, baseType: !98, size: 128, offset: 1216)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3249, file: !3195, line: 55, baseType: !98, size: 128, offset: 1344)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3249, file: !3195, line: 57, baseType: !702, size: 64, offset: 1472)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !3249, file: !3195, line: 58, baseType: !702, size: 64, offset: 1536)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !3249, file: !3195, line: 60, baseType: !91, size: 32, offset: 1600)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3249, file: !3195, line: 61, baseType: !91, size: 32, offset: 1632)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3249, file: !3195, line: 63, baseType: !210, size: 16, offset: 1664)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3249, file: !3195, line: 64, baseType: !210, size: 16, offset: 1680)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !3249, file: !3195, line: 65, baseType: !210, size: 16, offset: 1696)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !3249, file: !3195, line: 66, baseType: !210, size: 16, offset: 1712)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !3249, file: !3195, line: 67, baseType: !210, size: 16, offset: 1728)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !3249, file: !3195, line: 68, baseType: !210, size: 16, offset: 1744)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !3249, file: !3195, line: 69, baseType: !210, size: 16, offset: 1760)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !3249, file: !3195, line: 70, baseType: !210, size: 16, offset: 1776)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !3249, file: !3195, line: 71, baseType: !210, size: 16, offset: 1792)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !3249, file: !3195, line: 73, baseType: !210, size: 16, offset: 1808)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !3249, file: !3195, line: 74, baseType: !210, size: 16, offset: 1824)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3249, file: !3195, line: 76, baseType: !210, size: 16, offset: 1840)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !3249, file: !3195, line: 78, baseType: !3234, size: 64, offset: 1856)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3249, file: !3195, line: 79, baseType: !87, size: 64, offset: 1920)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !3242, file: !72, line: 175, baseType: !3248, size: 64, offset: 256)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !3242, file: !72, line: 176, baseType: !435, size: 512, offset: 320)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !3242, file: !72, line: 178, baseType: !210, size: 16, offset: 832)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !3242, file: !72, line: 178, baseType: !210, size: 16, offset: 848)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !3242, file: !72, line: 178, baseType: !210, size: 16, offset: 864)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !3242, file: !72, line: 178, baseType: !210, size: 16, offset: 880)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !3242, file: !72, line: 179, baseType: !210, size: 16, offset: 896)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !3242, file: !72, line: 180, baseType: !210, size: 16, offset: 912)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3242, file: !72, line: 181, baseType: !210, size: 16, offset: 928)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !3242, file: !72, line: 182, baseType: !210, size: 16, offset: 944)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !3242, file: !72, line: 183, baseType: !210, size: 16, offset: 960)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !3242, file: !72, line: 184, baseType: !210, size: 16, offset: 976)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !3242, file: !72, line: 185, baseType: !210, size: 16, offset: 992)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !3242, file: !72, line: 186, baseType: !210, size: 16, offset: 1008)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !3242, file: !72, line: 188, baseType: !91, size: 32, offset: 1024)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !3242, file: !72, line: 190, baseType: !210, size: 16, offset: 1056)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !3242, file: !72, line: 191, baseType: !210, size: 16, offset: 1072)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !3242, file: !72, line: 194, baseType: !3292, size: 64, offset: 1088)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3293, size: 64)
!3293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !3236, line: 421, size: 960, elements: !3294)
!3294 = !{!3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3328, !3329, !3330, !3331}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3293, file: !3236, line: 422, baseType: !3292, size: 64)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3293, file: !3236, line: 422, baseType: !3292, size: 64, offset: 64)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3293, file: !3236, line: 424, baseType: !210, size: 16, offset: 128)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3293, file: !3236, line: 425, baseType: !210, size: 16, offset: 144)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3293, file: !3236, line: 426, baseType: !91, size: 32, offset: 160)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3293, file: !3236, line: 426, baseType: !91, size: 32, offset: 192)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !3293, file: !3236, line: 427, baseType: !935, size: 64, offset: 224)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !3293, file: !3236, line: 428, baseType: !1474, size: 48, offset: 288)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !3293, file: !3236, line: 431, baseType: !264, size: 8, offset: 336)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3293, file: !3236, line: 432, baseType: !264, size: 8, offset: 344)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !3293, file: !3236, line: 435, baseType: !210, size: 16, offset: 352)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !3293, file: !3236, line: 436, baseType: !210, size: 16, offset: 368)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !3293, file: !3236, line: 437, baseType: !91, size: 32, offset: 384)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !3293, file: !3236, line: 437, baseType: !91, size: 32, offset: 416)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !3293, file: !3236, line: 438, baseType: !3310, size: 64, offset: 448)
!3310 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !3293, file: !3236, line: 439, baseType: !91, size: 32, offset: 512)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !3293, file: !3236, line: 439, baseType: !91, size: 32, offset: 544)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !3293, file: !3236, line: 442, baseType: !210, size: 16, offset: 576)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !3293, file: !3236, line: 442, baseType: !210, size: 16, offset: 592)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !3293, file: !3236, line: 442, baseType: !210, size: 16, offset: 608)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !3293, file: !3236, line: 442, baseType: !210, size: 16, offset: 624)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !3293, file: !3236, line: 443, baseType: !210, size: 16, offset: 640)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !3293, file: !3236, line: 446, baseType: !210, size: 16, offset: 656)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !3293, file: !3236, line: 449, baseType: !2293, size: 64, offset: 704)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !3293, file: !3236, line: 452, baseType: !3321, size: 64, offset: 768)
!3321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 64)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !3236, line: 463, size: 128, elements: !3323)
!3323 = !{!3324, !3325, !3326, !3327}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !3322, file: !3236, line: 464, baseType: !91, size: 32)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !3322, file: !3236, line: 465, baseType: !106, size: 32, offset: 32)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !3322, file: !3236, line: 466, baseType: !106, size: 32, offset: 64)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !3322, file: !3236, line: 467, baseType: !106, size: 32, offset: 96)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !3293, file: !3236, line: 455, baseType: !210, size: 16, offset: 832)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !3293, file: !3236, line: 456, baseType: !210, size: 16, offset: 848)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3293, file: !3236, line: 457, baseType: !91, size: 32, offset: 864)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3293, file: !3236, line: 458, baseType: !87, size: 64, offset: 896)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !3242, file: !72, line: 196, baseType: !3333, size: 64, offset: 1152)
!3333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3334, size: 64)
!3334 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !72, line: 55, flags: DIFlagFwdDecl)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !3242, file: !72, line: 198, baseType: !3336, size: 64, offset: 1216)
!3336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3337, size: 64)
!3337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !3236, line: 398, size: 448, elements: !3338)
!3338 = !{!3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348}
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3337, file: !3236, line: 399, baseType: !3336, size: 64)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3337, file: !3236, line: 399, baseType: !3336, size: 64, offset: 64)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !3337, file: !3236, line: 400, baseType: !91, size: 32, offset: 128)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3337, file: !3236, line: 401, baseType: !91, size: 32, offset: 160)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3337, file: !3236, line: 402, baseType: !91, size: 32, offset: 192)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !3337, file: !3236, line: 403, baseType: !91, size: 32, offset: 224)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3337, file: !3236, line: 404, baseType: !91, size: 32, offset: 256)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3337, file: !3236, line: 405, baseType: !91, size: 32, offset: 288)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3337, file: !3236, line: 407, baseType: !87, size: 64, offset: 320)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !3337, file: !3236, line: 414, baseType: !87, size: 64, offset: 384)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !3242, file: !72, line: 200, baseType: !91, size: 32, offset: 1280)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !3242, file: !72, line: 200, baseType: !91, size: 32, offset: 1312)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !3242, file: !72, line: 201, baseType: !87, size: 64, offset: 1344)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3242, file: !72, line: 203, baseType: !98, size: 128, offset: 1408)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3242, file: !72, line: 204, baseType: !98, size: 128, offset: 1536)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !3242, file: !72, line: 205, baseType: !98, size: 128, offset: 1664)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !3242, file: !72, line: 207, baseType: !98, size: 128, offset: 1792)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !3242, file: !72, line: 208, baseType: !98, size: 128, offset: 1920)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !3235, file: !3236, line: 495, baseType: !3310, size: 64, offset: 192)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !3235, file: !3236, line: 496, baseType: !91, size: 32, offset: 256)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3235, file: !3236, line: 497, baseType: !87, size: 64, offset: 320)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3235, file: !3236, line: 499, baseType: !3310, size: 64, offset: 384)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3235, file: !3236, line: 500, baseType: !3310, size: 64, offset: 448)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !3235, file: !3236, line: 502, baseType: !3310, size: 64, offset: 512)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !3235, file: !3236, line: 503, baseType: !3310, size: 64, offset: 576)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3235, file: !3236, line: 504, baseType: !3310, size: 64, offset: 640)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !3235, file: !3236, line: 505, baseType: !91, size: 32, offset: 704)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !3196, file: !3195, line: 234, baseType: !1656, size: 128, offset: 1408)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !3196, file: !3195, line: 235, baseType: !1656, size: 128, offset: 1536)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3196, file: !3195, line: 236, baseType: !210, size: 16, offset: 1664)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3196, file: !3195, line: 236, baseType: !210, size: 16, offset: 1680)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !3196, file: !3195, line: 238, baseType: !210, size: 16, offset: 1696)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !3196, file: !3195, line: 239, baseType: !210, size: 16, offset: 1712)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !3196, file: !3195, line: 240, baseType: !210, size: 16, offset: 1728)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3196, file: !3195, line: 241, baseType: !210, size: 16, offset: 1744)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !3196, file: !3195, line: 243, baseType: !106, size: 32, offset: 1760)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !3196, file: !3195, line: 244, baseType: !210, size: 16, offset: 1792)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !3196, file: !3195, line: 244, baseType: !210, size: 16, offset: 1808)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !3196, file: !3195, line: 246, baseType: !210, size: 16, offset: 1824)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !3196, file: !3195, line: 247, baseType: !210, size: 16, offset: 1840)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !3196, file: !3195, line: 248, baseType: !210, size: 16, offset: 1856)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !3196, file: !3195, line: 249, baseType: !210, size: 16, offset: 1872)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !3196, file: !3195, line: 250, baseType: !210, size: 16, offset: 1888)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3196, file: !3195, line: 251, baseType: !210, size: 16, offset: 1904)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3196, file: !3195, line: 253, baseType: !3384, size: 64, offset: 1920)
!3384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 64)
!3385 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !3195, line: 42, flags: DIFlagFwdDecl)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !3196, file: !3195, line: 255, baseType: !98, size: 128, offset: 1984)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !3196, file: !3195, line: 256, baseType: !98, size: 128, offset: 2112)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !3196, file: !3195, line: 257, baseType: !98, size: 128, offset: 2240)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !3196, file: !3195, line: 258, baseType: !98, size: 128, offset: 2368)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !3196, file: !3195, line: 259, baseType: !98, size: 128, offset: 2496)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3196, file: !3195, line: 260, baseType: !98, size: 128, offset: 2624)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !3196, file: !3195, line: 261, baseType: !98, size: 128, offset: 2752)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !3196, file: !3195, line: 263, baseType: !3234, size: 64, offset: 2880)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !3196, file: !3195, line: 265, baseType: !263, size: 64, offset: 2944)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !3196, file: !3195, line: 266, baseType: !87, size: 64, offset: 3008)
!3396 = !DILocation(line: 1786, column: 11, scope: !3185)
!3397 = !DILocation(line: 1786, column: 30, scope: !3185)
!3398 = !DILocation(line: 1786, column: 16, scope: !3185)
!3399 = !DILocation(line: 1787, column: 6, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3185, file: !3, line: 1787, column: 6)
!3401 = !DILocation(line: 1787, column: 12, scope: !3400)
!3402 = !DILocation(line: 1787, column: 24, scope: !3400)
!3403 = !DILocation(line: 1787, column: 28, scope: !3400)
!3404 = !DILocation(line: 1787, column: 31, scope: !3400)
!3405 = !DILocation(line: 1787, column: 37, scope: !3400)
!3406 = !DILocation(line: 1787, column: 54, scope: !3400)
!3407 = !DILocation(line: 1787, column: 6, scope: !3185)
!3408 = !DILocalVariable(name: "start_val", scope: !3409, file: !3, line: 1788, type: !209)
!3409 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 1787, column: 60)
!3410 = !DILocation(line: 1788, column: 9, scope: !3409)
!3411 = !DILocalVariable(name: "end_val", scope: !3409, file: !3, line: 1788, type: !209)
!3412 = !DILocation(line: 1788, column: 23, scope: !3409)
!3413 = !DILocalVariable(name: "dist", scope: !3409, file: !3, line: 1789, type: !210)
!3414 = !DILocation(line: 1789, column: 9, scope: !3409)
!3415 = !DILocation(line: 1791, column: 39, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 1791, column: 7)
!3417 = !DILocation(line: 1791, column: 43, scope: !3416)
!3418 = !DILocation(line: 1791, column: 49, scope: !3416)
!3419 = !DILocation(line: 1791, column: 54, scope: !3416)
!3420 = !DILocation(line: 1791, column: 64, scope: !3416)
!3421 = !DILocation(line: 1791, column: 77, scope: !3416)
!3422 = !DILocation(line: 1791, column: 8, scope: !3416)
!3423 = !DILocation(line: 1791, column: 107, scope: !3416)
!3424 = !DILocation(line: 1791, column: 127, scope: !3416)
!3425 = !DILocation(line: 1792, column: 39, scope: !3416)
!3426 = !DILocation(line: 1792, column: 62, scope: !3416)
!3427 = !DILocation(line: 1792, column: 68, scope: !3416)
!3428 = !DILocation(line: 1792, column: 43, scope: !3416)
!3429 = !DILocation(line: 1792, column: 74, scope: !3416)
!3430 = !DILocation(line: 1792, column: 77, scope: !3416)
!3431 = !DILocation(line: 1792, column: 8, scope: !3416)
!3432 = !DILocation(line: 1792, column: 107, scope: !3416)
!3433 = !DILocation(line: 1791, column: 7, scope: !3409)
!3434 = !DILocation(line: 1795, column: 11, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3416, file: !3, line: 1793, column: 3)
!3436 = !DILocation(line: 1795, column: 9, scope: !3435)
!3437 = !DILocation(line: 1798, column: 8, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3435, file: !3, line: 1798, column: 8)
!3439 = !DILocation(line: 1798, column: 13, scope: !3438)
!3440 = !DILocation(line: 1798, column: 8, scope: !3435)
!3441 = !DILocalVariable(name: "isect", scope: !3442, file: !3, line: 1799, type: !2638)
!3442 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 1798, column: 20)
!3443 = !DILocation(line: 1799, column: 22, scope: !3442)
!3444 = !DILocation(line: 1802, column: 18, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3442, file: !3, line: 1802, column: 5)
!3446 = !DILocation(line: 1802, column: 24, scope: !3445)
!3447 = !DILocation(line: 1802, column: 38, scope: !3445)
!3448 = !DILocation(line: 1802, column: 16, scope: !3445)
!3449 = !DILocation(line: 1802, column: 10, scope: !3445)
!3450 = !DILocation(line: 1802, column: 45, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 1802, column: 5)
!3452 = !DILocation(line: 1802, column: 5, scope: !3445)
!3453 = !DILocation(line: 1804, column: 10, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3455, file: !3, line: 1804, column: 10)
!3455 = distinct !DILexicalBlock(scope: !3451, file: !3, line: 1802, column: 73)
!3456 = !DILocation(line: 1804, column: 17, scope: !3454)
!3457 = !DILocation(line: 1804, column: 22, scope: !3454)
!3458 = !DILocation(line: 1804, column: 25, scope: !3454)
!3459 = !DILocation(line: 1804, column: 32, scope: !3454)
!3460 = !DILocation(line: 1804, column: 38, scope: !3454)
!3461 = !DILocation(line: 1804, column: 48, scope: !3454)
!3462 = !DILocation(line: 1804, column: 55, scope: !3454)
!3463 = !DILocation(line: 1804, column: 45, scope: !3454)
!3464 = !DILocation(line: 1804, column: 10, scope: !3455)
!3465 = !DILocalVariable(name: "start_index", scope: !3466, file: !3, line: 1805, type: !91)
!3466 = distinct !DILexicalBlock(scope: !3454, file: !3, line: 1804, column: 63)
!3467 = !DILocation(line: 1805, column: 11, scope: !3466)
!3468 = !DILocalVariable(name: "end_index", scope: !3466, file: !3, line: 1805, type: !91)
!3469 = !DILocation(line: 1805, column: 24, scope: !3466)
!3470 = !DILocalVariable(name: "i", scope: !3466, file: !3, line: 1806, type: !91)
!3471 = !DILocation(line: 1806, column: 11, scope: !3466)
!3472 = !DILocation(line: 1808, column: 21, scope: !3466)
!3473 = !DILocation(line: 1808, column: 19, scope: !3466)
!3474 = !DILocation(line: 1809, column: 19, scope: !3466)
!3475 = !DILocation(line: 1809, column: 17, scope: !3466)
!3476 = !DILocation(line: 1811, column: 16, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3466, file: !3, line: 1811, column: 7)
!3478 = !DILocation(line: 1811, column: 14, scope: !3477)
!3479 = !DILocation(line: 1811, column: 12, scope: !3477)
!3480 = !DILocation(line: 1811, column: 29, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3477, file: !3, line: 1811, column: 7)
!3482 = !DILocation(line: 1811, column: 34, scope: !3481)
!3483 = !DILocation(line: 1811, column: 31, scope: !3481)
!3484 = !DILocation(line: 1811, column: 7, scope: !3477)
!3485 = !DILocation(line: 1812, column: 12, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3487, file: !3, line: 1812, column: 12)
!3487 = distinct !DILexicalBlock(scope: !3481, file: !3, line: 1811, column: 50)
!3488 = !DILocation(line: 1812, column: 19, scope: !3486)
!3489 = !DILocation(line: 1812, column: 27, scope: !3486)
!3490 = !DILocation(line: 1812, column: 34, scope: !3486)
!3491 = !DILocation(line: 1812, column: 37, scope: !3486)
!3492 = !DILocation(line: 1812, column: 42, scope: !3486)
!3493 = !DILocation(line: 1812, column: 12, scope: !3487)
!3494 = !DILocation(line: 1813, column: 9, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 1812, column: 55)
!3496 = !DILocation(line: 1815, column: 7, scope: !3487)
!3497 = !DILocation(line: 1811, column: 46, scope: !3481)
!3498 = !DILocation(line: 1811, column: 7, scope: !3481)
!3499 = distinct !{!3499, !3484, !3500}
!3500 = !DILocation(line: 1815, column: 7, scope: !3477)
!3501 = !DILocation(line: 1818, column: 15, scope: !3466)
!3502 = !DILocation(line: 1818, column: 22, scope: !3466)
!3503 = !DILocation(line: 1818, column: 13, scope: !3466)
!3504 = !DILocation(line: 1819, column: 6, scope: !3466)
!3505 = !DILocation(line: 1820, column: 5, scope: !3455)
!3506 = !DILocation(line: 1802, column: 60, scope: !3451)
!3507 = !DILocation(line: 1802, column: 67, scope: !3451)
!3508 = !DILocation(line: 1802, column: 58, scope: !3451)
!3509 = !DILocation(line: 1802, column: 5, scope: !3451)
!3510 = distinct !{!3510, !3452, !3511}
!3511 = !DILocation(line: 1820, column: 5, scope: !3445)
!3512 = !DILocation(line: 1821, column: 4, scope: !3442)
!3513 = !DILocation(line: 1822, column: 3, scope: !3435)
!3514 = !DILocation(line: 1823, column: 2, scope: !3409)
!3515 = !DILocation(line: 1825, column: 2, scope: !3185)
!3516 = !DILocation(line: 1826, column: 1, scope: !3185)
!3517 = distinct !DISubprogram(name: "sk_applyMergeGesture", scope: !3, file: !3, line: 1828, type: !1940, scopeLine: 1829, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!3518 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !3517, file: !3, line: 1828, type: !228)
!3519 = !DILocation(line: 1828, column: 37, scope: !3517)
!3520 = !DILocalVariable(name: "gest", arg: 2, scope: !3517, file: !3, line: 1828, type: !1909)
!3521 = !DILocation(line: 1828, column: 60, scope: !3517)
!3522 = !DILocalVariable(name: "UNUSED_sketch", arg: 3, scope: !3517, file: !3, line: 1828, type: !1920)
!3523 = !DILocation(line: 1828, column: 77, scope: !3517)
!3524 = !DILocalVariable(name: "isect", scope: !3517, file: !3, line: 1830, type: !2638)
!3525 = !DILocation(line: 1830, column: 19, scope: !3517)
!3526 = !DILocation(line: 1833, column: 15, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 1833, column: 2)
!3528 = !DILocation(line: 1833, column: 21, scope: !3527)
!3529 = !DILocation(line: 1833, column: 35, scope: !3527)
!3530 = !DILocation(line: 1833, column: 13, scope: !3527)
!3531 = !DILocation(line: 1833, column: 7, scope: !3527)
!3532 = !DILocation(line: 1833, column: 42, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3527, file: !3, line: 1833, column: 2)
!3534 = !DILocation(line: 1833, column: 2, scope: !3527)
!3535 = !DILocation(line: 1835, column: 7, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3537, file: !3, line: 1835, column: 7)
!3537 = distinct !DILexicalBlock(scope: !3533, file: !3, line: 1833, column: 70)
!3538 = !DILocation(line: 1835, column: 14, scope: !3536)
!3539 = !DILocation(line: 1835, column: 19, scope: !3536)
!3540 = !DILocation(line: 1835, column: 22, scope: !3536)
!3541 = !DILocation(line: 1835, column: 29, scope: !3536)
!3542 = !DILocation(line: 1835, column: 35, scope: !3536)
!3543 = !DILocation(line: 1835, column: 45, scope: !3536)
!3544 = !DILocation(line: 1835, column: 52, scope: !3536)
!3545 = !DILocation(line: 1835, column: 42, scope: !3536)
!3546 = !DILocation(line: 1835, column: 7, scope: !3537)
!3547 = !DILocalVariable(name: "start_index", scope: !3548, file: !3, line: 1836, type: !91)
!3548 = distinct !DILexicalBlock(scope: !3536, file: !3, line: 1835, column: 60)
!3549 = !DILocation(line: 1836, column: 8, scope: !3548)
!3550 = !DILocalVariable(name: "end_index", scope: !3548, file: !3, line: 1836, type: !91)
!3551 = !DILocation(line: 1836, column: 21, scope: !3548)
!3552 = !DILocalVariable(name: "i", scope: !3548, file: !3, line: 1837, type: !91)
!3553 = !DILocation(line: 1837, column: 8, scope: !3548)
!3554 = !DILocation(line: 1839, column: 18, scope: !3548)
!3555 = !DILocation(line: 1839, column: 16, scope: !3548)
!3556 = !DILocation(line: 1840, column: 16, scope: !3548)
!3557 = !DILocation(line: 1840, column: 14, scope: !3548)
!3558 = !DILocation(line: 1842, column: 13, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3548, file: !3, line: 1842, column: 4)
!3560 = !DILocation(line: 1842, column: 11, scope: !3559)
!3561 = !DILocation(line: 1842, column: 9, scope: !3559)
!3562 = !DILocation(line: 1842, column: 26, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3559, file: !3, line: 1842, column: 4)
!3564 = !DILocation(line: 1842, column: 31, scope: !3563)
!3565 = !DILocation(line: 1842, column: 28, scope: !3563)
!3566 = !DILocation(line: 1842, column: 4, scope: !3559)
!3567 = !DILocation(line: 1844, column: 9, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3569, file: !3, line: 1844, column: 9)
!3569 = distinct !DILexicalBlock(scope: !3563, file: !3, line: 1842, column: 47)
!3570 = !DILocation(line: 1844, column: 16, scope: !3568)
!3571 = !DILocation(line: 1844, column: 24, scope: !3568)
!3572 = !DILocation(line: 1844, column: 31, scope: !3568)
!3573 = !DILocation(line: 1844, column: 34, scope: !3568)
!3574 = !DILocation(line: 1844, column: 39, scope: !3568)
!3575 = !DILocation(line: 1844, column: 9, scope: !3569)
!3576 = !DILocation(line: 1845, column: 6, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 1844, column: 52)
!3578 = !DILocation(line: 1845, column: 13, scope: !3577)
!3579 = !DILocation(line: 1845, column: 21, scope: !3577)
!3580 = !DILocation(line: 1845, column: 28, scope: !3577)
!3581 = !DILocation(line: 1845, column: 31, scope: !3577)
!3582 = !DILocation(line: 1845, column: 36, scope: !3577)
!3583 = !DILocation(line: 1846, column: 5, scope: !3577)
!3584 = !DILocation(line: 1847, column: 4, scope: !3569)
!3585 = !DILocation(line: 1842, column: 43, scope: !3563)
!3586 = !DILocation(line: 1842, column: 4, scope: !3563)
!3587 = distinct !{!3587, !3566, !3588}
!3588 = !DILocation(line: 1847, column: 4, scope: !3559)
!3589 = !DILocation(line: 1850, column: 12, scope: !3548)
!3590 = !DILocation(line: 1850, column: 19, scope: !3548)
!3591 = !DILocation(line: 1850, column: 10, scope: !3548)
!3592 = !DILocation(line: 1851, column: 3, scope: !3548)
!3593 = !DILocation(line: 1852, column: 2, scope: !3537)
!3594 = !DILocation(line: 1833, column: 57, scope: !3533)
!3595 = !DILocation(line: 1833, column: 64, scope: !3533)
!3596 = !DILocation(line: 1833, column: 55, scope: !3533)
!3597 = !DILocation(line: 1833, column: 2, scope: !3533)
!3598 = distinct !{!3598, !3534, !3599}
!3599 = !DILocation(line: 1852, column: 2, scope: !3527)
!3600 = !DILocation(line: 1853, column: 1, scope: !3517)
!3601 = distinct !DISubprogram(name: "sk_detectReverseGesture", scope: !3, file: !3, line: 1855, type: !1907, scopeLine: 1856, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!3602 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !3601, file: !3, line: 1855, type: !228)
!3603 = !DILocation(line: 1855, column: 39, scope: !3601)
!3604 = !DILocalVariable(name: "gest", arg: 2, scope: !3601, file: !3, line: 1855, type: !1909)
!3605 = !DILocation(line: 1855, column: 62, scope: !3601)
!3606 = !DILocalVariable(name: "UNUSED_sketch", arg: 3, scope: !3601, file: !3, line: 1855, type: !1920)
!3607 = !DILocation(line: 1855, column: 79, scope: !3601)
!3608 = !DILocation(line: 1857, column: 6, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3601, file: !3, line: 1857, column: 6)
!3610 = !DILocation(line: 1857, column: 12, scope: !3609)
!3611 = !DILocation(line: 1857, column: 24, scope: !3609)
!3612 = !DILocation(line: 1857, column: 28, scope: !3609)
!3613 = !DILocation(line: 1857, column: 31, scope: !3609)
!3614 = !DILocation(line: 1857, column: 37, scope: !3609)
!3615 = !DILocation(line: 1857, column: 54, scope: !3609)
!3616 = !DILocation(line: 1857, column: 59, scope: !3609)
!3617 = !DILocation(line: 1857, column: 62, scope: !3609)
!3618 = !DILocation(line: 1857, column: 68, scope: !3609)
!3619 = !DILocation(line: 1857, column: 90, scope: !3609)
!3620 = !DILocation(line: 1857, column: 6, scope: !3601)
!3621 = !DILocalVariable(name: "isect", scope: !3622, file: !3, line: 1858, type: !2638)
!3622 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 1857, column: 96)
!3623 = !DILocation(line: 1858, column: 20, scope: !3622)
!3624 = !DILocation(line: 1861, column: 16, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 1861, column: 3)
!3626 = !DILocation(line: 1861, column: 22, scope: !3625)
!3627 = !DILocation(line: 1861, column: 36, scope: !3625)
!3628 = !DILocation(line: 1861, column: 14, scope: !3625)
!3629 = !DILocation(line: 1861, column: 8, scope: !3625)
!3630 = !DILocation(line: 1861, column: 43, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 1861, column: 3)
!3632 = !DILocation(line: 1861, column: 3, scope: !3625)
!3633 = !DILocation(line: 1863, column: 8, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3635, file: !3, line: 1863, column: 8)
!3635 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 1861, column: 71)
!3636 = !DILocation(line: 1863, column: 15, scope: !3634)
!3637 = !DILocation(line: 1863, column: 20, scope: !3634)
!3638 = !DILocation(line: 1863, column: 23, scope: !3634)
!3639 = !DILocation(line: 1863, column: 30, scope: !3634)
!3640 = !DILocation(line: 1863, column: 36, scope: !3634)
!3641 = !DILocation(line: 1863, column: 46, scope: !3634)
!3642 = !DILocation(line: 1863, column: 53, scope: !3634)
!3643 = !DILocation(line: 1863, column: 43, scope: !3634)
!3644 = !DILocation(line: 1863, column: 8, scope: !3635)
!3645 = !DILocalVariable(name: "start_v", scope: !3646, file: !3, line: 1864, type: !124)
!3646 = distinct !DILexicalBlock(scope: !3634, file: !3, line: 1863, column: 61)
!3647 = !DILocation(line: 1864, column: 11, scope: !3646)
!3648 = !DILocalVariable(name: "end_v", scope: !3646, file: !3, line: 1864, type: !124)
!3649 = !DILocation(line: 1864, column: 23, scope: !3646)
!3650 = !DILocalVariable(name: "angle", scope: !3646, file: !3, line: 1865, type: !106)
!3651 = !DILocation(line: 1865, column: 11, scope: !3646)
!3652 = !DILocation(line: 1867, column: 9, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3646, file: !3, line: 1867, column: 9)
!3654 = !DILocation(line: 1867, column: 16, scope: !3653)
!3655 = !DILocation(line: 1867, column: 32, scope: !3653)
!3656 = !DILocation(line: 1867, column: 39, scope: !3653)
!3657 = !DILocation(line: 1867, column: 45, scope: !3653)
!3658 = !DILocation(line: 1867, column: 30, scope: !3653)
!3659 = !DILocation(line: 1867, column: 9, scope: !3646)
!3660 = !DILocation(line: 1868, column: 18, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3653, file: !3, line: 1867, column: 60)
!3662 = !DILocation(line: 1868, column: 27, scope: !3661)
!3663 = !DILocation(line: 1868, column: 34, scope: !3661)
!3664 = !DILocation(line: 1868, column: 37, scope: !3661)
!3665 = !DILocation(line: 1868, column: 43, scope: !3661)
!3666 = !DILocation(line: 1868, column: 48, scope: !3661)
!3667 = !DILocation(line: 1868, column: 58, scope: !3661)
!3668 = !DILocation(line: 1868, column: 6, scope: !3661)
!3669 = !DILocation(line: 1869, column: 18, scope: !3661)
!3670 = !DILocation(line: 1869, column: 44, scope: !3661)
!3671 = !DILocation(line: 1869, column: 50, scope: !3661)
!3672 = !DILocation(line: 1869, column: 25, scope: !3661)
!3673 = !DILocation(line: 1869, column: 56, scope: !3661)
!3674 = !DILocation(line: 1869, column: 59, scope: !3661)
!3675 = !DILocation(line: 1869, column: 66, scope: !3661)
!3676 = !DILocation(line: 1869, column: 72, scope: !3661)
!3677 = !DILocation(line: 1869, column: 6, scope: !3661)
!3678 = !DILocation(line: 1870, column: 5, scope: !3661)
!3679 = !DILocation(line: 1872, column: 18, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3653, file: !3, line: 1871, column: 10)
!3681 = !DILocation(line: 1872, column: 27, scope: !3680)
!3682 = !DILocation(line: 1872, column: 34, scope: !3680)
!3683 = !DILocation(line: 1872, column: 40, scope: !3680)
!3684 = !DILocation(line: 1872, column: 43, scope: !3680)
!3685 = !DILocation(line: 1872, column: 49, scope: !3680)
!3686 = !DILocation(line: 1872, column: 54, scope: !3680)
!3687 = !DILocation(line: 1872, column: 64, scope: !3680)
!3688 = !DILocation(line: 1872, column: 6, scope: !3680)
!3689 = !DILocation(line: 1873, column: 18, scope: !3680)
!3690 = !DILocation(line: 1873, column: 44, scope: !3680)
!3691 = !DILocation(line: 1873, column: 50, scope: !3680)
!3692 = !DILocation(line: 1873, column: 25, scope: !3680)
!3693 = !DILocation(line: 1873, column: 56, scope: !3680)
!3694 = !DILocation(line: 1873, column: 59, scope: !3680)
!3695 = !DILocation(line: 1873, column: 66, scope: !3680)
!3696 = !DILocation(line: 1873, column: 6, scope: !3680)
!3697 = !DILocation(line: 1876, column: 13, scope: !3646)
!3698 = !DILocation(line: 1876, column: 11, scope: !3646)
!3699 = !DILocation(line: 1878, column: 9, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3646, file: !3, line: 1878, column: 9)
!3701 = !DILocation(line: 1878, column: 15, scope: !3700)
!3702 = !DILocation(line: 1878, column: 9, scope: !3646)
!3703 = !DILocation(line: 1879, column: 6, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3700, file: !3, line: 1878, column: 22)
!3705 = !DILocation(line: 1883, column: 13, scope: !3646)
!3706 = !DILocation(line: 1883, column: 20, scope: !3646)
!3707 = !DILocation(line: 1883, column: 11, scope: !3646)
!3708 = !DILocation(line: 1884, column: 4, scope: !3646)
!3709 = !DILocation(line: 1885, column: 3, scope: !3635)
!3710 = !DILocation(line: 1861, column: 58, scope: !3631)
!3711 = !DILocation(line: 1861, column: 65, scope: !3631)
!3712 = !DILocation(line: 1861, column: 56, scope: !3631)
!3713 = !DILocation(line: 1861, column: 3, scope: !3631)
!3714 = distinct !{!3714, !3632, !3715}
!3715 = !DILocation(line: 1885, column: 3, scope: !3625)
!3716 = !DILocation(line: 1886, column: 2, scope: !3622)
!3717 = !DILocation(line: 1888, column: 2, scope: !3601)
!3718 = !DILocation(line: 1889, column: 1, scope: !3601)
!3719 = distinct !DISubprogram(name: "sk_applyReverseGesture", scope: !3, file: !3, line: 1891, type: !1940, scopeLine: 1892, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!3720 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !3719, file: !3, line: 1891, type: !228)
!3721 = !DILocation(line: 1891, column: 39, scope: !3719)
!3722 = !DILocalVariable(name: "gest", arg: 2, scope: !3719, file: !3, line: 1891, type: !1909)
!3723 = !DILocation(line: 1891, column: 62, scope: !3719)
!3724 = !DILocalVariable(name: "UNUSED_sketch", arg: 3, scope: !3719, file: !3, line: 1891, type: !1920)
!3725 = !DILocation(line: 1891, column: 79, scope: !3719)
!3726 = !DILocalVariable(name: "isect", scope: !3719, file: !3, line: 1893, type: !2638)
!3727 = !DILocation(line: 1893, column: 19, scope: !3719)
!3728 = !DILocation(line: 1895, column: 15, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3719, file: !3, line: 1895, column: 2)
!3730 = !DILocation(line: 1895, column: 21, scope: !3729)
!3731 = !DILocation(line: 1895, column: 35, scope: !3729)
!3732 = !DILocation(line: 1895, column: 13, scope: !3729)
!3733 = !DILocation(line: 1895, column: 7, scope: !3729)
!3734 = !DILocation(line: 1895, column: 42, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 1895, column: 2)
!3736 = !DILocation(line: 1895, column: 2, scope: !3729)
!3737 = !DILocation(line: 1897, column: 7, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 1897, column: 7)
!3739 = distinct !DILexicalBlock(scope: !3735, file: !3, line: 1895, column: 70)
!3740 = !DILocation(line: 1897, column: 14, scope: !3738)
!3741 = !DILocation(line: 1897, column: 19, scope: !3738)
!3742 = !DILocation(line: 1897, column: 22, scope: !3738)
!3743 = !DILocation(line: 1897, column: 29, scope: !3738)
!3744 = !DILocation(line: 1897, column: 35, scope: !3738)
!3745 = !DILocation(line: 1897, column: 45, scope: !3738)
!3746 = !DILocation(line: 1897, column: 52, scope: !3738)
!3747 = !DILocation(line: 1897, column: 42, scope: !3738)
!3748 = !DILocation(line: 1897, column: 7, scope: !3739)
!3749 = !DILocation(line: 1898, column: 21, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3738, file: !3, line: 1897, column: 60)
!3751 = !DILocation(line: 1898, column: 28, scope: !3750)
!3752 = !DILocation(line: 1898, column: 4, scope: !3750)
!3753 = !DILocation(line: 1901, column: 12, scope: !3750)
!3754 = !DILocation(line: 1901, column: 19, scope: !3750)
!3755 = !DILocation(line: 1901, column: 10, scope: !3750)
!3756 = !DILocation(line: 1902, column: 3, scope: !3750)
!3757 = !DILocation(line: 1903, column: 2, scope: !3739)
!3758 = !DILocation(line: 1895, column: 57, scope: !3735)
!3759 = !DILocation(line: 1895, column: 64, scope: !3735)
!3760 = !DILocation(line: 1895, column: 55, scope: !3735)
!3761 = !DILocation(line: 1895, column: 2, scope: !3735)
!3762 = distinct !{!3762, !3736, !3763}
!3763 = !DILocation(line: 1903, column: 2, scope: !3729)
!3764 = !DILocation(line: 1904, column: 1, scope: !3719)
!3765 = distinct !DISubprogram(name: "sk_detectConvertGesture", scope: !3, file: !3, line: 1906, type: !1907, scopeLine: 1907, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!3766 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !3765, file: !3, line: 1906, type: !228)
!3767 = !DILocation(line: 1906, column: 39, scope: !3765)
!3768 = !DILocalVariable(name: "gest", arg: 2, scope: !3765, file: !3, line: 1906, type: !1909)
!3769 = !DILocation(line: 1906, column: 62, scope: !3765)
!3770 = !DILocalVariable(name: "UNUSED_sketch", arg: 3, scope: !3765, file: !3, line: 1906, type: !1920)
!3771 = !DILocation(line: 1906, column: 79, scope: !3765)
!3772 = !DILocation(line: 1908, column: 6, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3765, file: !3, line: 1908, column: 6)
!3774 = !DILocation(line: 1908, column: 12, scope: !3773)
!3775 = !DILocation(line: 1908, column: 24, scope: !3773)
!3776 = !DILocation(line: 1908, column: 29, scope: !3773)
!3777 = !DILocation(line: 1908, column: 32, scope: !3773)
!3778 = !DILocation(line: 1908, column: 38, scope: !3773)
!3779 = !DILocation(line: 1908, column: 60, scope: !3773)
!3780 = !DILocation(line: 1908, column: 6, scope: !3765)
!3781 = !DILocation(line: 1909, column: 3, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 1908, column: 66)
!3783 = !DILocation(line: 1911, column: 2, scope: !3765)
!3784 = !DILocation(line: 1912, column: 1, scope: !3765)
!3785 = distinct !DISubprogram(name: "sk_applyConvertGesture", scope: !3, file: !3, line: 1914, type: !1940, scopeLine: 1915, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!3786 = !DILocalVariable(name: "C", arg: 1, scope: !3785, file: !3, line: 1914, type: !228)
!3787 = !DILocation(line: 1914, column: 39, scope: !3785)
!3788 = !DILocalVariable(name: "UNUSED_gest", arg: 2, scope: !3785, file: !3, line: 1914, type: !1909)
!3789 = !DILocation(line: 1914, column: 54, scope: !3785)
!3790 = !DILocalVariable(name: "sketch", arg: 3, scope: !3785, file: !3, line: 1914, type: !1920)
!3791 = !DILocation(line: 1914, column: 79, scope: !3785)
!3792 = !DILocation(line: 1916, column: 13, scope: !3785)
!3793 = !DILocation(line: 1916, column: 16, scope: !3785)
!3794 = !DILocation(line: 1916, column: 2, scope: !3785)
!3795 = !DILocation(line: 1917, column: 1, scope: !3785)
!3796 = distinct !DISubprogram(name: "sk_convert", scope: !3, file: !3, line: 1427, type: !3797, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!3797 = !DISubroutineType(types: !3798)
!3798 = !{null, !228, !1920}
!3799 = !DILocalVariable(name: "C", arg: 1, scope: !3796, file: !3, line: 1427, type: !228)
!3800 = !DILocation(line: 1427, column: 34, scope: !3796)
!3801 = !DILocalVariable(name: "sketch", arg: 2, scope: !3796, file: !3, line: 1427, type: !1920)
!3802 = !DILocation(line: 1427, column: 48, scope: !3796)
!3803 = !DILocalVariable(name: "ts", scope: !3796, file: !3, line: 1429, type: !1967)
!3804 = !DILocation(line: 1429, column: 16, scope: !3796)
!3805 = !DILocation(line: 1429, column: 44, scope: !3796)
!3806 = !DILocation(line: 1429, column: 21, scope: !3796)
!3807 = !DILocalVariable(name: "stk", scope: !3796, file: !3, line: 1430, type: !195)
!3808 = !DILocation(line: 1430, column: 13, scope: !3796)
!3809 = !DILocation(line: 1432, column: 13, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3796, file: !3, line: 1432, column: 2)
!3811 = !DILocation(line: 1432, column: 21, scope: !3810)
!3812 = !DILocation(line: 1432, column: 29, scope: !3810)
!3813 = !DILocation(line: 1432, column: 11, scope: !3810)
!3814 = !DILocation(line: 1432, column: 7, scope: !3810)
!3815 = !DILocation(line: 1432, column: 36, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3810, file: !3, line: 1432, column: 2)
!3817 = !DILocation(line: 1432, column: 2, scope: !3810)
!3818 = !DILocation(line: 1433, column: 7, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 1433, column: 7)
!3820 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 1432, column: 58)
!3821 = !DILocation(line: 1433, column: 12, scope: !3819)
!3822 = !DILocation(line: 1433, column: 21, scope: !3819)
!3823 = !DILocation(line: 1433, column: 7, scope: !3820)
!3824 = !DILocation(line: 1434, column: 8, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 1434, column: 8)
!3826 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 1433, column: 27)
!3827 = !DILocation(line: 1434, column: 12, scope: !3825)
!3828 = !DILocation(line: 1434, column: 35, scope: !3825)
!3829 = !DILocation(line: 1434, column: 8, scope: !3826)
!3830 = !DILocation(line: 1435, column: 23, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 1434, column: 59)
!3832 = !DILocation(line: 1435, column: 26, scope: !3831)
!3833 = !DILocation(line: 1435, column: 5, scope: !3831)
!3834 = !DILocation(line: 1436, column: 4, scope: !3831)
!3835 = !DILocation(line: 1438, column: 22, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 1437, column: 9)
!3837 = !DILocation(line: 1438, column: 25, scope: !3836)
!3838 = !DILocation(line: 1438, column: 5, scope: !3836)
!3839 = !DILocation(line: 1442, column: 3, scope: !3826)
!3840 = !DILocation(line: 1443, column: 2, scope: !3820)
!3841 = !DILocation(line: 1432, column: 47, scope: !3816)
!3842 = !DILocation(line: 1432, column: 52, scope: !3816)
!3843 = !DILocation(line: 1432, column: 45, scope: !3816)
!3844 = !DILocation(line: 1432, column: 2, scope: !3816)
!3845 = distinct !{!3845, !3817, !3846}
!3846 = !DILocation(line: 1443, column: 2, scope: !3810)
!3847 = !DILocation(line: 1444, column: 1, scope: !3796)
!3848 = distinct !DISubprogram(name: "BDR_drawSketchNames", scope: !3, file: !3, line: 2214, type: !3849, scopeLine: 2215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{!91, !3851}
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 64)
!3852 = !DIDerivedType(tag: DW_TAG_typedef, name: "ViewContext", file: !30, line: 75, baseType: !3853)
!3853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ViewContext", file: !30, line: 66, size: 512, elements: !3854)
!3854 = !{!3855, !3856, !3857, !3858, !3859, !3951, !4012, !4015}
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3853, file: !30, line: 67, baseType: !702, size: 64)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "obact", scope: !3853, file: !30, line: 68, baseType: !384, size: 64, offset: 64)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !3853, file: !30, line: 69, baseType: !384, size: 64, offset: 128)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "ar", scope: !3853, file: !30, line: 70, baseType: !3199, size: 64, offset: 192)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "v3d", scope: !3853, file: !30, line: 71, baseType: !3860, size: 64, offset: 256)
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View3D", file: !3862, line: 151, size: 3008, elements: !3863)
!3862 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view3d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3863 = !{!3864, !3876, !3877, !3878, !3879, !3880, !3881, !3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890, !3891, !3892, !3893, !3894, !3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3950}
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3861, file: !3862, line: 152, baseType: !3865, size: 64)
!3865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3866, size: 64)
!3866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !3867, line: 85, size: 448, elements: !3868)
!3867 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3868 = !{!3869, !3870, !3871, !3872, !3873, !3874}
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3866, file: !3867, line: 86, baseType: !3865, size: 64)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3866, file: !3867, line: 86, baseType: !3865, size: 64, offset: 64)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3866, file: !3867, line: 87, baseType: !98, size: 128, offset: 128)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3866, file: !3867, line: 88, baseType: !91, size: 32, offset: 256)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !3866, file: !3867, line: 89, baseType: !106, size: 32, offset: 288)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !3866, file: !3867, line: 90, baseType: !3875, size: 128, offset: 320)
!3875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 128, elements: !1110)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3861, file: !3862, line: 152, baseType: !3865, size: 64, offset: 64)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3861, file: !3862, line: 153, baseType: !98, size: 128, offset: 128)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3861, file: !3862, line: 154, baseType: !91, size: 32, offset: 256)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !3861, file: !3862, line: 155, baseType: !106, size: 32, offset: 288)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !3861, file: !3862, line: 156, baseType: !3875, size: 128, offset: 320)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !3861, file: !3862, line: 158, baseType: !576, size: 128, offset: 448)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !3861, file: !3862, line: 159, baseType: !106, size: 32, offset: 576)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_size", scope: !3861, file: !3862, line: 161, baseType: !106, size: 32, offset: 608)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_drawtype", scope: !3861, file: !3862, line: 162, baseType: !264, size: 8, offset: 640)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3861, file: !3862, line: 163, baseType: !1227, size: 24, offset: 648)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "lay_prev", scope: !3861, file: !3862, line: 165, baseType: !7, size: 32, offset: 672)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "lay_used", scope: !3861, file: !3862, line: 166, baseType: !7, size: 32, offset: 704)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !3861, file: !3862, line: 168, baseType: !210, size: 16, offset: 736)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !3861, file: !3862, line: 169, baseType: !210, size: 16, offset: 752)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !3861, file: !3862, line: 171, baseType: !384, size: 64, offset: 768)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre", scope: !3861, file: !3862, line: 171, baseType: !384, size: 64, offset: 832)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "render_border", scope: !3861, file: !3862, line: 172, baseType: !771, size: 128, offset: 896)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "bgpicbase", scope: !3861, file: !3862, line: 174, baseType: !100, size: 128, offset: 1024)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "bgpic", scope: !3861, file: !3862, line: 175, baseType: !3895, size: 64, offset: 1152)
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 64)
!3896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BGpic", file: !3862, line: 70, size: 832, elements: !3897)
!3897 = !{!3898, !3899, !3900, !3901, !3902, !3903, !3909, !3910, !3911, !3912, !3913, !3914, !3915, !3916}
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3896, file: !3862, line: 71, baseType: !3895, size: 64)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3896, file: !3862, line: 71, baseType: !3895, size: 64, offset: 64)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !3896, file: !3862, line: 73, baseType: !1093, size: 64, offset: 128)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !3896, file: !3862, line: 74, baseType: !699, size: 320, offset: 192)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !3896, file: !3862, line: 75, baseType: !925, size: 64, offset: 512)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "cuser", scope: !3896, file: !3862, line: 76, baseType: !3904, size: 64, offset: 576)
!3904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !927, line: 50, size: 64, elements: !3905)
!3905 = !{!3906, !3907, !3908}
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !3904, file: !927, line: 51, baseType: !91, size: 32)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !3904, file: !927, line: 52, baseType: !210, size: 16, offset: 32)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !3904, file: !927, line: 52, baseType: !210, size: 16, offset: 48)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !3896, file: !3862, line: 77, baseType: !106, size: 32, offset: 640)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !3896, file: !3862, line: 77, baseType: !106, size: 32, offset: 672)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3896, file: !3862, line: 77, baseType: !106, size: 32, offset: 704)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !3896, file: !3862, line: 77, baseType: !106, size: 32, offset: 736)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !3896, file: !3862, line: 78, baseType: !210, size: 16, offset: 768)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3896, file: !3862, line: 79, baseType: !210, size: 16, offset: 784)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !3896, file: !3862, line: 80, baseType: !210, size: 16, offset: 800)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3896, file: !3862, line: 80, baseType: !210, size: 16, offset: 816)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !3861, file: !3862, line: 177, baseType: !3860, size: 64, offset: 1216)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_bone", scope: !3861, file: !3862, line: 179, baseType: !435, size: 512, offset: 1280)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3861, file: !3862, line: 181, baseType: !7, size: 32, offset: 1792)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !3861, file: !3862, line: 182, baseType: !91, size: 32, offset: 1824)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !3861, file: !3862, line: 187, baseType: !210, size: 16, offset: 1856)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_cursor", scope: !3861, file: !3862, line: 188, baseType: !210, size: 16, offset: 1872)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "scenelock", scope: !3861, file: !3862, line: 189, baseType: !210, size: 16, offset: 1888)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !3861, file: !3862, line: 189, baseType: !210, size: 16, offset: 1904)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3861, file: !3862, line: 190, baseType: !210, size: 16, offset: 1920)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !3861, file: !3862, line: 190, baseType: !210, size: 16, offset: 1936)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !3861, file: !3862, line: 192, baseType: !106, size: 32, offset: 1952)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !3861, file: !3862, line: 192, baseType: !106, size: 32, offset: 1984)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "near", scope: !3861, file: !3862, line: 193, baseType: !106, size: 32, offset: 2016)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "far", scope: !3861, file: !3862, line: 193, baseType: !106, size: 32, offset: 2048)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !3861, file: !3862, line: 194, baseType: !124, size: 96, offset: 2080)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !3861, file: !3862, line: 195, baseType: !124, size: 96, offset: 2176)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "matcap_icon", scope: !3861, file: !3862, line: 197, baseType: !210, size: 16, offset: 2272)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "gridlines", scope: !3861, file: !3862, line: 199, baseType: !210, size: 16, offset: 2288)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "gridsubdiv", scope: !3861, file: !3862, line: 200, baseType: !210, size: 16, offset: 2304)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "gridflag", scope: !3861, file: !3862, line: 201, baseType: !264, size: 8, offset: 2320)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "twtype", scope: !3861, file: !3862, line: 204, baseType: !264, size: 8, offset: 2328)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "twmode", scope: !3861, file: !3862, line: 204, baseType: !264, size: 8, offset: 2336)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "twflag", scope: !3861, file: !3862, line: 204, baseType: !264, size: 8, offset: 2344)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3861, file: !3862, line: 204, baseType: !1439, size: 16, offset: 2352)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_transp", scope: !3861, file: !3862, line: 207, baseType: !100, size: 128, offset: 2368)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xray", scope: !3861, file: !3862, line: 208, baseType: !100, size: 128, offset: 2496)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xraytransp", scope: !3861, file: !3862, line: 209, baseType: !100, size: 128, offset: 2624)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !3861, file: !3862, line: 212, baseType: !264, size: 8, offset: 2752)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !3861, file: !3862, line: 212, baseType: !264, size: 8, offset: 2760)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "xray", scope: !3861, file: !3862, line: 212, baseType: !264, size: 8, offset: 2768)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3861, file: !3862, line: 213, baseType: !1305, size: 40, offset: 2776)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "properties_storage", scope: !3861, file: !3862, line: 215, baseType: !87, size: 64, offset: 2816)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "defmaterial", scope: !3861, file: !3862, line: 216, baseType: !562, size: 64, offset: 2880)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !3861, file: !3862, line: 219, baseType: !535, size: 64, offset: 2944)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "rv3d", scope: !3853, file: !30, line: 72, baseType: !3952, size: 64, offset: 320)
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3953, size: 64)
!3953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RegionView3D", file: !3862, line: 85, size: 7040, elements: !3954)
!3954 = !{!3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3965, !3966, !3967, !3968, !3971, !3983, !3984, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011}
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !3953, file: !3862, line: 87, baseType: !585, size: 512)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !3953, file: !3862, line: 88, baseType: !585, size: 512, offset: 512)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !3953, file: !3862, line: 89, baseType: !585, size: 512, offset: 1024)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !3953, file: !3862, line: 90, baseType: !585, size: 512, offset: 1536)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "persinv", scope: !3953, file: !3862, line: 91, baseType: !585, size: 512, offset: 2048)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "viewmatob", scope: !3953, file: !3862, line: 94, baseType: !585, size: 512, offset: 2560)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "persmatob", scope: !3953, file: !3862, line: 95, baseType: !585, size: 512, offset: 3072)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !3953, file: !3862, line: 99, baseType: !3963, size: 768, offset: 3584)
!3963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 768, elements: !3964)
!3964 = !{!1476, !578}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "clip_local", scope: !3953, file: !3862, line: 100, baseType: !3963, size: 768, offset: 4352)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "clipbb", scope: !3953, file: !3862, line: 101, baseType: !471, size: 64, offset: 5120)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !3953, file: !3862, line: 103, baseType: !3952, size: 64, offset: 5184)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "render_engine", scope: !3953, file: !3862, line: 104, baseType: !3969, size: 64, offset: 5248)
!3969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3970, size: 64)
!3970 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !3862, line: 44, flags: DIFlagFwdDecl)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !3953, file: !3862, line: 105, baseType: !3972, size: 64, offset: 5312)
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 64)
!3973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ViewDepths", file: !30, line: 77, size: 320, elements: !3974)
!3974 = !{!3975, !3976, !3977, !3978, !3979, !3980, !3982}
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !3973, file: !30, line: 78, baseType: !621, size: 16)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !3973, file: !30, line: 78, baseType: !621, size: 16, offset: 16)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3973, file: !30, line: 79, baseType: !210, size: 16, offset: 32)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3973, file: !30, line: 79, baseType: !210, size: 16, offset: 48)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !3973, file: !30, line: 80, baseType: !189, size: 64, offset: 64)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "depth_range", scope: !3973, file: !30, line: 81, baseType: !3981, size: 128, offset: 128)
!3981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3310, size: 128, elements: !211)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "damaged", scope: !3973, file: !30, line: 83, baseType: !1258, size: 8, offset: 256)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "gpuoffscreen", scope: !3953, file: !3862, line: 106, baseType: !87, size: 64, offset: 5376)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !3953, file: !3862, line: 109, baseType: !3985, size: 64, offset: 5440)
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView3DStore", file: !3862, line: 46, flags: DIFlagFwdDecl)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !3953, file: !3862, line: 110, baseType: !3234, size: 64, offset: 5504)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "twmat", scope: !3953, file: !3862, line: 114, baseType: !585, size: 512, offset: 5568)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !3953, file: !3862, line: 116, baseType: !576, size: 128, offset: 6080)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !3953, file: !3862, line: 117, baseType: !106, size: 32, offset: 6208)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "camdx", scope: !3953, file: !3862, line: 118, baseType: !106, size: 32, offset: 6240)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "camdy", scope: !3953, file: !3862, line: 118, baseType: !106, size: 32, offset: 6272)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !3953, file: !3862, line: 119, baseType: !106, size: 32, offset: 6304)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !3953, file: !3862, line: 120, baseType: !124, size: 96, offset: 6336)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "camzoom", scope: !3953, file: !3862, line: 122, baseType: !106, size: 32, offset: 6432)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "is_persp", scope: !3953, file: !3862, line: 123, baseType: !264, size: 8, offset: 6464)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !3953, file: !3862, line: 125, baseType: !264, size: 8, offset: 6472)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !3953, file: !3862, line: 126, baseType: !264, size: 8, offset: 6480)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock", scope: !3953, file: !3862, line: 127, baseType: !264, size: 8, offset: 6488)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock_quad", scope: !3953, file: !3862, line: 128, baseType: !264, size: 8, offset: 6496)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3953, file: !3862, line: 129, baseType: !1227, size: 24, offset: 6504)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "ofs_lock", scope: !3953, file: !3862, line: 130, baseType: !694, size: 64, offset: 6528)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "twdrawflag", scope: !3953, file: !3862, line: 132, baseType: !210, size: 16, offset: 6592)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !3953, file: !3862, line: 133, baseType: !210, size: 16, offset: 6608)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "lviewquat", scope: !3953, file: !3862, line: 137, baseType: !576, size: 128, offset: 6624)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "lpersp", scope: !3953, file: !3862, line: 138, baseType: !210, size: 16, offset: 6752)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "lview", scope: !3953, file: !3862, line: 138, baseType: !210, size: 16, offset: 6768)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "gridview", scope: !3953, file: !3862, line: 140, baseType: !106, size: 32, offset: 6784)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "tw_idot", scope: !3953, file: !3862, line: 141, baseType: !124, size: 96, offset: 6816)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "rot_angle", scope: !3953, file: !3862, line: 145, baseType: !106, size: 32, offset: 6912)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "rot_axis", scope: !3953, file: !3862, line: 146, baseType: !124, size: 96, offset: 6944)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "em", scope: !3853, file: !30, line: 73, baseType: !4013, size: 64, offset: 384)
!4013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4014, size: 64)
!4014 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !30, line: 73, flags: DIFlagFwdDecl)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !3853, file: !30, line: 74, baseType: !935, size: 64, offset: 448)
!4016 = !DILocalVariable(name: "vc", arg: 1, scope: !3848, file: !3, line: 2214, type: !3851)
!4017 = !DILocation(line: 2214, column: 38, scope: !3848)
!4018 = !DILocation(line: 2216, column: 29, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 2216, column: 6)
!4020 = !DILocation(line: 2216, column: 6, scope: !4019)
!4021 = !DILocation(line: 2216, column: 6, scope: !3848)
!4022 = !DILocalVariable(name: "sketch", scope: !4023, file: !3, line: 2217, type: !1920)
!4023 = distinct !DILexicalBlock(scope: !4019, file: !3, line: 2216, column: 34)
!4024 = !DILocation(line: 2217, column: 14, scope: !4023)
!4025 = !DILocation(line: 2217, column: 41, scope: !4023)
!4026 = !DILocation(line: 2217, column: 23, scope: !4023)
!4027 = !DILocation(line: 2218, column: 7, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4023, file: !3, line: 2218, column: 7)
!4029 = !DILocation(line: 2218, column: 7, scope: !4023)
!4030 = !DILocation(line: 2219, column: 18, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 2218, column: 15)
!4032 = !DILocation(line: 2219, column: 22, scope: !4031)
!4033 = !DILocation(line: 2219, column: 29, scope: !4031)
!4034 = !DILocation(line: 2219, column: 33, scope: !4031)
!4035 = !DILocation(line: 2219, column: 38, scope: !4031)
!4036 = !DILocation(line: 2219, column: 4, scope: !4031)
!4037 = !DILocation(line: 2220, column: 4, scope: !4031)
!4038 = !DILocation(line: 2222, column: 2, scope: !4023)
!4039 = !DILocation(line: 2224, column: 2, scope: !3848)
!4040 = !DILocation(line: 2225, column: 1, scope: !3848)
!4041 = distinct !DISubprogram(name: "ValidSketchViewContext", scope: !3, file: !3, line: 2198, type: !3849, scopeLine: 2199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4042 = !DILocalVariable(name: "vc", arg: 1, scope: !4041, file: !3, line: 2198, type: !3851)
!4043 = !DILocation(line: 2198, column: 48, scope: !4041)
!4044 = !DILocalVariable(name: "obedit", scope: !4041, file: !3, line: 2200, type: !1955)
!4045 = !DILocation(line: 2200, column: 10, scope: !4041)
!4046 = !DILocation(line: 2200, column: 19, scope: !4041)
!4047 = !DILocation(line: 2200, column: 23, scope: !4041)
!4048 = !DILocalVariable(name: "scene", scope: !4041, file: !3, line: 2201, type: !1961)
!4049 = !DILocation(line: 2201, column: 9, scope: !4041)
!4050 = !DILocation(line: 2201, column: 17, scope: !4041)
!4051 = !DILocation(line: 2201, column: 21, scope: !4041)
!4052 = !DILocation(line: 2203, column: 6, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4041, file: !3, line: 2203, column: 6)
!4054 = !DILocation(line: 2203, column: 13, scope: !4053)
!4055 = !DILocation(line: 2204, column: 6, scope: !4053)
!4056 = !DILocation(line: 2204, column: 14, scope: !4053)
!4057 = !DILocation(line: 2204, column: 19, scope: !4053)
!4058 = !DILocation(line: 2204, column: 34, scope: !4053)
!4059 = !DILocation(line: 2205, column: 6, scope: !4053)
!4060 = !DILocation(line: 2205, column: 13, scope: !4053)
!4061 = !DILocation(line: 2205, column: 27, scope: !4053)
!4062 = !DILocation(line: 2205, column: 42, scope: !4053)
!4063 = !DILocation(line: 2203, column: 6, scope: !4041)
!4064 = !DILocation(line: 2207, column: 3, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4053, file: !3, line: 2206, column: 2)
!4066 = !DILocation(line: 2210, column: 3, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4053, file: !3, line: 2209, column: 7)
!4068 = !DILocation(line: 2212, column: 1, scope: !4041)
!4069 = distinct !DISubprogram(name: "viewcontextSketch", scope: !3, file: !3, line: 2317, type: !4070, scopeLine: 2318, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4070 = !DISubroutineType(types: !4071)
!4071 = !{!1920, !3851, !91}
!4072 = !DILocalVariable(name: "vc", arg: 1, scope: !4069, file: !3, line: 2317, type: !3851)
!4073 = !DILocation(line: 2317, column: 43, scope: !4069)
!4074 = !DILocalVariable(name: "create", arg: 2, scope: !4069, file: !3, line: 2317, type: !91)
!4075 = !DILocation(line: 2317, column: 51, scope: !4069)
!4076 = !DILocalVariable(name: "obedit", scope: !4069, file: !3, line: 2319, type: !1955)
!4077 = !DILocation(line: 2319, column: 10, scope: !4069)
!4078 = !DILocation(line: 2319, column: 19, scope: !4069)
!4079 = !DILocation(line: 2319, column: 23, scope: !4069)
!4080 = !DILocalVariable(name: "sketch", scope: !4069, file: !3, line: 2320, type: !1920)
!4081 = !DILocation(line: 2320, column: 13, scope: !4069)
!4082 = !DILocation(line: 2322, column: 6, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 2322, column: 6)
!4084 = !DILocation(line: 2322, column: 13, scope: !4083)
!4085 = !DILocation(line: 2322, column: 16, scope: !4083)
!4086 = !DILocation(line: 2322, column: 24, scope: !4083)
!4087 = !DILocation(line: 2322, column: 29, scope: !4083)
!4088 = !DILocation(line: 2322, column: 6, scope: !4069)
!4089 = !DILocalVariable(name: "arm", scope: !4090, file: !3, line: 2323, type: !2183)
!4090 = distinct !DILexicalBlock(scope: !4083, file: !3, line: 2322, column: 45)
!4091 = !DILocation(line: 2323, column: 14, scope: !4090)
!4092 = !DILocation(line: 2323, column: 20, scope: !4090)
!4093 = !DILocation(line: 2323, column: 28, scope: !4090)
!4094 = !DILocation(line: 2325, column: 7, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 2325, column: 7)
!4096 = !DILocation(line: 2325, column: 12, scope: !4095)
!4097 = !DILocation(line: 2325, column: 19, scope: !4095)
!4098 = !DILocation(line: 2325, column: 27, scope: !4095)
!4099 = !DILocation(line: 2325, column: 30, scope: !4095)
!4100 = !DILocation(line: 2325, column: 7, scope: !4090)
!4101 = !DILocation(line: 2326, column: 18, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4095, file: !3, line: 2325, column: 38)
!4103 = !DILocation(line: 2326, column: 4, scope: !4102)
!4104 = !DILocation(line: 2326, column: 9, scope: !4102)
!4105 = !DILocation(line: 2326, column: 16, scope: !4102)
!4106 = !DILocation(line: 2327, column: 3, scope: !4102)
!4107 = !DILocation(line: 2328, column: 12, scope: !4090)
!4108 = !DILocation(line: 2328, column: 17, scope: !4090)
!4109 = !DILocation(line: 2328, column: 10, scope: !4090)
!4110 = !DILocation(line: 2329, column: 2, scope: !4090)
!4111 = !DILocation(line: 2331, column: 9, scope: !4069)
!4112 = !DILocation(line: 2331, column: 2, scope: !4069)
!4113 = distinct !DISubprogram(name: "sk_drawSketch", scope: !3, file: !3, line: 2023, type: !4114, scopeLine: 2024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4114 = !DISubroutineType(types: !4115)
!4115 = !{null, !1961, !4116, !1920, !91}
!4116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4117, size: 64)
!4117 = !DIDerivedType(tag: DW_TAG_typedef, name: "View3D", file: !3862, line: 221, baseType: !3861)
!4118 = !DILocalVariable(name: "scene", arg: 1, scope: !4113, file: !3, line: 2023, type: !1961)
!4119 = !DILocation(line: 2023, column: 34, scope: !4113)
!4120 = !DILocalVariable(name: "UNUSED_v3d", arg: 2, scope: !4113, file: !3, line: 2023, type: !4116)
!4121 = !DILocation(line: 2023, column: 49, scope: !4113)
!4122 = !DILocalVariable(name: "sketch", arg: 3, scope: !4113, file: !3, line: 2023, type: !1920)
!4123 = !DILocation(line: 2023, column: 73, scope: !4113)
!4124 = !DILocalVariable(name: "with_names", arg: 4, scope: !4113, file: !3, line: 2023, type: !91)
!4125 = !DILocation(line: 2023, column: 85, scope: !4113)
!4126 = !DILocalVariable(name: "ts", scope: !4113, file: !3, line: 2025, type: !1967)
!4127 = !DILocation(line: 2025, column: 16, scope: !4113)
!4128 = !DILocation(line: 2025, column: 21, scope: !4113)
!4129 = !DILocation(line: 2025, column: 28, scope: !4113)
!4130 = !DILocalVariable(name: "stk", scope: !4113, file: !3, line: 2026, type: !195)
!4131 = !DILocation(line: 2026, column: 13, scope: !4113)
!4132 = !DILocation(line: 2028, column: 2, scope: !4113)
!4133 = !DILocation(line: 2029, column: 2, scope: !4113)
!4134 = !DILocation(line: 2031, column: 6, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4113, file: !3, line: 2031, column: 6)
!4136 = !DILocation(line: 2031, column: 6, scope: !4113)
!4137 = !DILocalVariable(name: "id", scope: !4138, file: !3, line: 2032, type: !91)
!4138 = distinct !DILexicalBlock(scope: !4135, file: !3, line: 2031, column: 18)
!4139 = !DILocation(line: 2032, column: 7, scope: !4138)
!4140 = !DILocation(line: 2033, column: 11, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4138, file: !3, line: 2033, column: 3)
!4142 = !DILocation(line: 2033, column: 22, scope: !4141)
!4143 = !DILocation(line: 2033, column: 30, scope: !4141)
!4144 = !DILocation(line: 2033, column: 38, scope: !4141)
!4145 = !DILocation(line: 2033, column: 20, scope: !4141)
!4146 = !DILocation(line: 2033, column: 8, scope: !4141)
!4147 = !DILocation(line: 2033, column: 45, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4141, file: !3, line: 2033, column: 3)
!4149 = !DILocation(line: 2033, column: 3, scope: !4141)
!4150 = !DILocation(line: 2034, column: 18, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 2033, column: 73)
!4152 = !DILocation(line: 2034, column: 23, scope: !4151)
!4153 = !DILocation(line: 2034, column: 4, scope: !4151)
!4154 = !DILocation(line: 2035, column: 3, scope: !4151)
!4155 = !DILocation(line: 2033, column: 52, scope: !4148)
!4156 = !DILocation(line: 2033, column: 62, scope: !4148)
!4157 = !DILocation(line: 2033, column: 67, scope: !4148)
!4158 = !DILocation(line: 2033, column: 60, scope: !4148)
!4159 = !DILocation(line: 2033, column: 3, scope: !4148)
!4160 = distinct !{!4160, !4149, !4161}
!4161 = !DILocation(line: 2035, column: 3, scope: !4141)
!4162 = !DILocation(line: 2037, column: 3, scope: !4138)
!4163 = !DILocation(line: 2038, column: 2, scope: !4138)
!4164 = !DILocalVariable(name: "selected_rgb", scope: !4165, file: !3, line: 2040, type: !124)
!4165 = distinct !DILexicalBlock(scope: !4135, file: !3, line: 2039, column: 7)
!4166 = !DILocation(line: 2040, column: 9, scope: !4165)
!4167 = !DILocalVariable(name: "unselected_rgb", scope: !4165, file: !3, line: 2041, type: !124)
!4168 = !DILocation(line: 2041, column: 9, scope: !4165)
!4169 = !DILocation(line: 2043, column: 14, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 2043, column: 3)
!4171 = !DILocation(line: 2043, column: 22, scope: !4170)
!4172 = !DILocation(line: 2043, column: 30, scope: !4170)
!4173 = !DILocation(line: 2043, column: 12, scope: !4170)
!4174 = !DILocation(line: 2043, column: 8, scope: !4170)
!4175 = !DILocation(line: 2043, column: 37, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4170, file: !3, line: 2043, column: 3)
!4177 = !DILocation(line: 2043, column: 3, scope: !4170)
!4178 = !DILocalVariable(name: "start", scope: !4179, file: !3, line: 2044, type: !91)
!4179 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 2043, column: 59)
!4180 = !DILocation(line: 2044, column: 8, scope: !4179)
!4181 = !DILocalVariable(name: "end", scope: !4179, file: !3, line: 2045, type: !91)
!4182 = !DILocation(line: 2045, column: 8, scope: !4179)
!4183 = !DILocation(line: 2047, column: 23, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 2047, column: 8)
!4185 = !DILocation(line: 2047, column: 31, scope: !4184)
!4186 = !DILocation(line: 2047, column: 8, scope: !4184)
!4187 = !DILocation(line: 2047, column: 8, scope: !4179)
!4188 = !DILocation(line: 2048, column: 22, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4184, file: !3, line: 2047, column: 37)
!4190 = !DILocation(line: 2048, column: 5, scope: !4189)
!4191 = !DILocation(line: 2049, column: 4, scope: !4189)
!4192 = !DILocation(line: 2051, column: 18, scope: !4179)
!4193 = !DILocation(line: 2051, column: 28, scope: !4179)
!4194 = !DILocation(line: 2051, column: 33, scope: !4179)
!4195 = !DILocation(line: 2051, column: 42, scope: !4179)
!4196 = !DILocation(line: 2051, column: 49, scope: !4179)
!4197 = !DILocation(line: 2051, column: 64, scope: !4179)
!4198 = !DILocation(line: 2051, column: 81, scope: !4179)
!4199 = !DILocation(line: 2051, column: 88, scope: !4179)
!4200 = !DILocation(line: 2051, column: 4, scope: !4179)
!4201 = !DILocation(line: 2053, column: 8, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 2053, column: 8)
!4203 = !DILocation(line: 2053, column: 13, scope: !4202)
!4204 = !DILocation(line: 2053, column: 22, scope: !4202)
!4205 = !DILocation(line: 2053, column: 8, scope: !4179)
!4206 = !DILocation(line: 2054, column: 30, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4202, file: !3, line: 2053, column: 28)
!4208 = !DILocation(line: 2054, column: 34, scope: !4207)
!4209 = !DILocation(line: 2054, column: 5, scope: !4207)
!4210 = !DILocation(line: 2055, column: 4, scope: !4207)
!4211 = !DILocation(line: 2056, column: 3, scope: !4179)
!4212 = !DILocation(line: 2043, column: 48, scope: !4176)
!4213 = !DILocation(line: 2043, column: 53, scope: !4176)
!4214 = !DILocation(line: 2043, column: 46, scope: !4176)
!4215 = !DILocation(line: 2043, column: 3, scope: !4176)
!4216 = distinct !{!4216, !4177, !4217}
!4217 = !DILocation(line: 2056, column: 3, scope: !4170)
!4218 = !DILocation(line: 2058, column: 7, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 2058, column: 7)
!4220 = !DILocation(line: 2058, column: 15, scope: !4219)
!4221 = !DILocation(line: 2058, column: 29, scope: !4219)
!4222 = !DILocation(line: 2058, column: 7, scope: !4165)
!4223 = !DILocalVariable(name: "last", scope: !4224, file: !3, line: 2059, type: !203)
!4224 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 2058, column: 38)
!4225 = !DILocation(line: 2059, column: 14, scope: !4224)
!4226 = !DILocation(line: 2059, column: 40, scope: !4224)
!4227 = !DILocation(line: 2059, column: 48, scope: !4224)
!4228 = !DILocation(line: 2059, column: 21, scope: !4224)
!4229 = !DILocation(line: 2061, column: 8, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 2061, column: 8)
!4231 = !DILocation(line: 2061, column: 12, scope: !4230)
!4232 = !DILocation(line: 2061, column: 27, scope: !4230)
!4233 = !DILocation(line: 2061, column: 8, scope: !4224)
!4234 = !DILocation(line: 2062, column: 30, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4230, file: !3, line: 2061, column: 51)
!4236 = !DILocation(line: 2062, column: 34, scope: !4235)
!4237 = !DILocation(line: 2062, column: 42, scope: !4235)
!4238 = !DILocation(line: 2062, column: 5, scope: !4235)
!4239 = !DILocation(line: 2063, column: 4, scope: !4235)
!4240 = !DILocation(line: 2065, column: 8, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 2065, column: 8)
!4242 = !DILocation(line: 2065, column: 13, scope: !4241)
!4243 = !DILocation(line: 2065, column: 8, scope: !4224)
!4244 = !DILocalVariable(name: "quad", scope: !4245, file: !3, line: 2066, type: !4246)
!4245 = distinct !DILexicalBlock(scope: !4241, file: !3, line: 2065, column: 22)
!4246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4247, size: 64)
!4247 = !DIDerivedType(tag: DW_TAG_typedef, name: "GLUquadric", file: !4248, line: 280, baseType: !4249)
!4248 = !DIFile(filename: "include/GL/glu.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4249 = !DICompositeType(tag: DW_TAG_structure_type, name: "GLUquadric", file: !4248, line: 280, flags: DIFlagFwdDecl)
!4250 = !DILocation(line: 2066, column: 17, scope: !4245)
!4251 = !DILocation(line: 2066, column: 24, scope: !4245)
!4252 = !DILocation(line: 2067, column: 23, scope: !4245)
!4253 = !DILocation(line: 2067, column: 5, scope: !4245)
!4254 = !DILocation(line: 2069, column: 5, scope: !4245)
!4255 = !DILocation(line: 2071, column: 5, scope: !4245)
!4256 = !DILocation(line: 2072, column: 5, scope: !4245)
!4257 = !DILocation(line: 2074, column: 13, scope: !4245)
!4258 = !DILocation(line: 2074, column: 21, scope: !4245)
!4259 = !DILocation(line: 2074, column: 32, scope: !4245)
!4260 = !DILocation(line: 2074, column: 5, scope: !4245)
!4261 = !DILocation(line: 2076, column: 7, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4245, file: !3, line: 2074, column: 38)
!4263 = !DILocation(line: 2077, column: 7, scope: !4262)
!4264 = !DILocation(line: 2079, column: 7, scope: !4262)
!4265 = !DILocation(line: 2080, column: 7, scope: !4262)
!4266 = !DILocation(line: 2083, column: 18, scope: !4245)
!4267 = !DILocation(line: 2083, column: 25, scope: !4245)
!4268 = !DILocation(line: 2083, column: 33, scope: !4245)
!4269 = !DILocation(line: 2083, column: 5, scope: !4245)
!4270 = !DILocation(line: 2085, column: 15, scope: !4245)
!4271 = !DILocation(line: 2085, column: 32, scope: !4245)
!4272 = !DILocation(line: 2085, column: 49, scope: !4245)
!4273 = !DILocation(line: 2085, column: 5, scope: !4245)
!4274 = !DILocation(line: 2087, column: 17, scope: !4245)
!4275 = !DILocation(line: 2087, column: 23, scope: !4245)
!4276 = !DILocation(line: 2087, column: 30, scope: !4245)
!4277 = !DILocation(line: 2087, column: 38, scope: !4245)
!4278 = !DILocation(line: 2087, column: 5, scope: !4245)
!4279 = !DILocation(line: 2089, column: 5, scope: !4245)
!4280 = !DILocation(line: 2091, column: 5, scope: !4245)
!4281 = !DILocation(line: 2093, column: 22, scope: !4245)
!4282 = !DILocation(line: 2093, column: 5, scope: !4245)
!4283 = !DILocation(line: 2094, column: 4, scope: !4245)
!4284 = !DILocation(line: 2095, column: 3, scope: !4224)
!4285 = !DILocation(line: 2130, column: 2, scope: !4113)
!4286 = !DILocation(line: 2133, column: 6, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4113, file: !3, line: 2133, column: 6)
!4288 = !DILocation(line: 2133, column: 14, scope: !4287)
!4289 = !DILocation(line: 2133, column: 22, scope: !4287)
!4290 = !DILocation(line: 2133, column: 6, scope: !4113)
!4291 = !DILocalVariable(name: "gesture_rgb", scope: !4292, file: !3, line: 2134, type: !124)
!4292 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 2133, column: 72)
!4293 = !DILocation(line: 2134, column: 9, scope: !4292)
!4294 = !DILocation(line: 2135, column: 17, scope: !4292)
!4295 = !DILocation(line: 2135, column: 25, scope: !4292)
!4296 = !DILocation(line: 2135, column: 38, scope: !4292)
!4297 = !DILocation(line: 2135, column: 3, scope: !4292)
!4298 = !DILocation(line: 2136, column: 2, scope: !4292)
!4299 = !DILocation(line: 2137, column: 1, scope: !4113)
!4300 = distinct !DISubprogram(name: "BDR_drawSketch", scope: !3, file: !3, line: 2227, type: !1947, scopeLine: 2228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4301 = !DILocalVariable(name: "C", arg: 1, scope: !4300, file: !3, line: 2227, type: !1949)
!4302 = !DILocation(line: 2227, column: 37, scope: !4300)
!4303 = !DILocation(line: 2229, column: 30, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4300, file: !3, line: 2229, column: 6)
!4305 = !DILocation(line: 2229, column: 6, scope: !4304)
!4306 = !DILocation(line: 2229, column: 6, scope: !4300)
!4307 = !DILocalVariable(name: "sketch", scope: !4308, file: !3, line: 2230, type: !1920)
!4308 = distinct !DILexicalBlock(scope: !4304, file: !3, line: 2229, column: 34)
!4309 = !DILocation(line: 2230, column: 14, scope: !4308)
!4310 = !DILocation(line: 2230, column: 37, scope: !4308)
!4311 = !DILocation(line: 2230, column: 23, scope: !4308)
!4312 = !DILocation(line: 2231, column: 7, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 2231, column: 7)
!4314 = !DILocation(line: 2231, column: 7, scope: !4308)
!4315 = !DILocation(line: 2232, column: 33, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 2231, column: 15)
!4317 = !DILocation(line: 2232, column: 18, scope: !4316)
!4318 = !DILocation(line: 2232, column: 51, scope: !4316)
!4319 = !DILocation(line: 2232, column: 37, scope: !4316)
!4320 = !DILocation(line: 2232, column: 55, scope: !4316)
!4321 = !DILocation(line: 2232, column: 4, scope: !4316)
!4322 = !DILocation(line: 2233, column: 3, scope: !4316)
!4323 = !DILocation(line: 2234, column: 2, scope: !4308)
!4324 = !DILocation(line: 2235, column: 1, scope: !4300)
!4325 = distinct !DISubprogram(name: "ED_operator_sketch_mode", scope: !3, file: !3, line: 2567, type: !2036, scopeLine: 2568, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4326 = !DILocalVariable(name: "C", arg: 1, scope: !4325, file: !3, line: 2567, type: !1949)
!4327 = !DILocation(line: 2567, column: 45, scope: !4325)
!4328 = !DILocalVariable(name: "obedit", scope: !4325, file: !3, line: 2569, type: !1955)
!4329 = !DILocation(line: 2569, column: 10, scope: !4325)
!4330 = !DILocation(line: 2569, column: 40, scope: !4325)
!4331 = !DILocation(line: 2569, column: 19, scope: !4325)
!4332 = !DILocalVariable(name: "ts", scope: !4325, file: !3, line: 2570, type: !1967)
!4333 = !DILocation(line: 2570, column: 16, scope: !4325)
!4334 = !DILocation(line: 2570, column: 44, scope: !4325)
!4335 = !DILocation(line: 2570, column: 21, scope: !4325)
!4336 = !DILocation(line: 2572, column: 6, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4325, file: !3, line: 2572, column: 6)
!4338 = !DILocation(line: 2572, column: 13, scope: !4337)
!4339 = !DILocation(line: 2573, column: 6, scope: !4337)
!4340 = !DILocation(line: 2573, column: 14, scope: !4337)
!4341 = !DILocation(line: 2573, column: 19, scope: !4337)
!4342 = !DILocation(line: 2573, column: 34, scope: !4337)
!4343 = !DILocation(line: 2574, column: 6, scope: !4337)
!4344 = !DILocation(line: 2574, column: 10, scope: !4337)
!4345 = !DILocation(line: 2574, column: 25, scope: !4337)
!4346 = !DILocation(line: 2572, column: 6, scope: !4325)
!4347 = !DILocation(line: 2576, column: 3, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 2575, column: 2)
!4349 = !DILocation(line: 2579, column: 3, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 2578, column: 7)
!4351 = !DILocation(line: 2581, column: 1, scope: !4325)
!4352 = distinct !DISubprogram(name: "BIF_sk_selectStroke", scope: !3, file: !3, line: 2248, type: !4353, scopeLine: 2249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4353 = !DISubroutineType(types: !4354)
!4354 = !{null, !228, !4355, !210}
!4355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4356, size: 64)
!4356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !91)
!4357 = !DILocalVariable(name: "C", arg: 1, scope: !4352, file: !3, line: 2248, type: !228)
!4358 = !DILocation(line: 2248, column: 36, scope: !4352)
!4359 = !DILocalVariable(name: "mval", arg: 2, scope: !4352, file: !3, line: 2248, type: !4355)
!4360 = !DILocation(line: 2248, column: 49, scope: !4352)
!4361 = !DILocalVariable(name: "extend", arg: 3, scope: !4352, file: !3, line: 2248, type: !210)
!4362 = !DILocation(line: 2248, column: 64, scope: !4352)
!4363 = !DILocalVariable(name: "ts", scope: !4352, file: !3, line: 2250, type: !1967)
!4364 = !DILocation(line: 2250, column: 16, scope: !4352)
!4365 = !DILocation(line: 2250, column: 44, scope: !4352)
!4366 = !DILocation(line: 2250, column: 21, scope: !4352)
!4367 = !DILocalVariable(name: "sketch", scope: !4352, file: !3, line: 2251, type: !1920)
!4368 = !DILocation(line: 2251, column: 13, scope: !4352)
!4369 = !DILocation(line: 2251, column: 36, scope: !4352)
!4370 = !DILocation(line: 2251, column: 22, scope: !4352)
!4371 = !DILocation(line: 2253, column: 6, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4352, file: !3, line: 2253, column: 6)
!4373 = !DILocation(line: 2253, column: 13, scope: !4372)
!4374 = !DILocation(line: 2253, column: 21, scope: !4372)
!4375 = !DILocation(line: 2253, column: 24, scope: !4372)
!4376 = !DILocation(line: 2253, column: 28, scope: !4372)
!4377 = !DILocation(line: 2253, column: 43, scope: !4372)
!4378 = !DILocation(line: 2253, column: 6, scope: !4352)
!4379 = !DILocation(line: 2254, column: 23, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4381, file: !3, line: 2254, column: 7)
!4381 = distinct !DILexicalBlock(scope: !4372, file: !3, line: 2253, column: 61)
!4382 = !DILocation(line: 2254, column: 26, scope: !4380)
!4383 = !DILocation(line: 2254, column: 34, scope: !4380)
!4384 = !DILocation(line: 2254, column: 40, scope: !4380)
!4385 = !DILocation(line: 2254, column: 7, scope: !4380)
!4386 = !DILocation(line: 2254, column: 7, scope: !4381)
!4387 = !DILocation(line: 2255, column: 35, scope: !4380)
!4388 = !DILocation(line: 2255, column: 23, scope: !4380)
!4389 = !DILocation(line: 2255, column: 4, scope: !4380)
!4390 = !DILocation(line: 2256, column: 2, scope: !4381)
!4391 = !DILocation(line: 2257, column: 1, scope: !4352)
!4392 = distinct !DISubprogram(name: "sk_selectStroke", scope: !3, file: !3, line: 1960, type: !4393, scopeLine: 1961, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4393 = !DISubroutineType(types: !4394)
!4394 = !{!91, !228, !1920, !4355, !91}
!4395 = !DILocalVariable(name: "C", arg: 1, scope: !4392, file: !3, line: 1960, type: !228)
!4396 = !DILocation(line: 1960, column: 38, scope: !4392)
!4397 = !DILocalVariable(name: "sketch", arg: 2, scope: !4392, file: !3, line: 1960, type: !1920)
!4398 = !DILocation(line: 1960, column: 52, scope: !4392)
!4399 = !DILocalVariable(name: "mval", arg: 3, scope: !4392, file: !3, line: 1960, type: !4355)
!4400 = !DILocation(line: 1960, column: 70, scope: !4392)
!4401 = !DILocalVariable(name: "extend", arg: 4, scope: !4392, file: !3, line: 1960, type: !91)
!4402 = !DILocation(line: 1960, column: 83, scope: !4392)
!4403 = !DILocalVariable(name: "vc", scope: !4392, file: !3, line: 1962, type: !3852)
!4404 = !DILocation(line: 1962, column: 14, scope: !4392)
!4405 = !DILocalVariable(name: "rect", scope: !4392, file: !3, line: 1963, type: !1656)
!4406 = !DILocation(line: 1963, column: 7, scope: !4392)
!4407 = !DILocalVariable(name: "buffer", scope: !4392, file: !3, line: 1964, type: !4408)
!4408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 320000, elements: !4409)
!4409 = !{!4410}
!4410 = !DISubrange(count: 10000)
!4411 = !DILocation(line: 1964, column: 15, scope: !4392)
!4412 = !DILocalVariable(name: "hits", scope: !4392, file: !3, line: 1965, type: !210)
!4413 = !DILocation(line: 1965, column: 8, scope: !4392)
!4414 = !DILocation(line: 1967, column: 25, scope: !4392)
!4415 = !DILocation(line: 1967, column: 2, scope: !4392)
!4416 = !DILocation(line: 1969, column: 14, scope: !4392)
!4417 = !DILocation(line: 1969, column: 22, scope: !4392)
!4418 = !DILocation(line: 1969, column: 7, scope: !4392)
!4419 = !DILocation(line: 1969, column: 12, scope: !4392)
!4420 = !DILocation(line: 1970, column: 14, scope: !4392)
!4421 = !DILocation(line: 1970, column: 22, scope: !4392)
!4422 = !DILocation(line: 1970, column: 7, scope: !4392)
!4423 = !DILocation(line: 1970, column: 12, scope: !4392)
!4424 = !DILocation(line: 1971, column: 14, scope: !4392)
!4425 = !DILocation(line: 1971, column: 22, scope: !4392)
!4426 = !DILocation(line: 1971, column: 7, scope: !4392)
!4427 = !DILocation(line: 1971, column: 12, scope: !4392)
!4428 = !DILocation(line: 1972, column: 14, scope: !4392)
!4429 = !DILocation(line: 1972, column: 22, scope: !4392)
!4430 = !DILocation(line: 1972, column: 7, scope: !4392)
!4431 = !DILocation(line: 1972, column: 12, scope: !4392)
!4432 = !DILocation(line: 1974, column: 35, scope: !4392)
!4433 = !DILocation(line: 1974, column: 9, scope: !4392)
!4434 = !DILocation(line: 1974, column: 7, scope: !4392)
!4435 = !DILocation(line: 1976, column: 6, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4392, file: !3, line: 1976, column: 6)
!4437 = !DILocation(line: 1976, column: 11, scope: !4436)
!4438 = !DILocation(line: 1976, column: 6, scope: !4392)
!4439 = !DILocalVariable(name: "besthitresult", scope: !4440, file: !3, line: 1977, type: !91)
!4440 = distinct !DILexicalBlock(scope: !4436, file: !3, line: 1976, column: 16)
!4441 = !DILocation(line: 1977, column: 7, scope: !4440)
!4442 = !DILocation(line: 1979, column: 7, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 1979, column: 7)
!4444 = !DILocation(line: 1979, column: 12, scope: !4443)
!4445 = !DILocation(line: 1979, column: 7, scope: !4440)
!4446 = !DILocation(line: 1980, column: 20, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 1979, column: 18)
!4448 = !DILocation(line: 1980, column: 18, scope: !4447)
!4449 = !DILocation(line: 1981, column: 3, scope: !4447)
!4450 = !DILocation(line: 1983, column: 20, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 1982, column: 8)
!4452 = !DILocation(line: 1983, column: 18, scope: !4451)
!4453 = !DILocation(line: 1987, column: 7, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 1987, column: 7)
!4455 = !DILocation(line: 1987, column: 21, scope: !4454)
!4456 = !DILocation(line: 1987, column: 7, scope: !4440)
!4457 = !DILocalVariable(name: "selected_stk", scope: !4458, file: !3, line: 1988, type: !195)
!4458 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 1987, column: 26)
!4459 = !DILocation(line: 1988, column: 15, scope: !4458)
!4460 = !DILocation(line: 1988, column: 44, scope: !4458)
!4461 = !DILocation(line: 1988, column: 52, scope: !4458)
!4462 = !DILocation(line: 1988, column: 61, scope: !4458)
!4463 = !DILocation(line: 1988, column: 75, scope: !4458)
!4464 = !DILocation(line: 1988, column: 30, scope: !4458)
!4465 = !DILocation(line: 1990, column: 8, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 1990, column: 8)
!4467 = !DILocation(line: 1990, column: 15, scope: !4466)
!4468 = !DILocation(line: 1990, column: 8, scope: !4458)
!4469 = !DILocation(line: 1991, column: 24, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 1990, column: 21)
!4471 = !DILocation(line: 1991, column: 5, scope: !4470)
!4472 = !DILocation(line: 1993, column: 5, scope: !4470)
!4473 = !DILocation(line: 1993, column: 19, scope: !4470)
!4474 = !DILocation(line: 1993, column: 28, scope: !4470)
!4475 = !DILocation(line: 1994, column: 4, scope: !4470)
!4476 = !DILocation(line: 1996, column: 5, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 1995, column: 9)
!4478 = !DILocation(line: 1996, column: 19, scope: !4477)
!4479 = !DILocation(line: 1996, column: 28, scope: !4477)
!4480 = !DILocation(line: 2000, column: 3, scope: !4458)
!4481 = !DILocation(line: 2001, column: 3, scope: !4440)
!4482 = !DILocation(line: 2004, column: 2, scope: !4392)
!4483 = !DILocation(line: 2005, column: 1, scope: !4392)
!4484 = distinct !DISubprogram(name: "BIF_convertSketch", scope: !3, file: !3, line: 2259, type: !2383, scopeLine: 2260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4485 = !DILocalVariable(name: "C", arg: 1, scope: !4484, file: !3, line: 2259, type: !228)
!4486 = !DILocation(line: 2259, column: 34, scope: !4484)
!4487 = !DILocation(line: 2261, column: 35, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 2261, column: 6)
!4489 = !DILocation(line: 2261, column: 6, scope: !4488)
!4490 = !DILocation(line: 2261, column: 6, scope: !4484)
!4491 = !DILocalVariable(name: "sketch", scope: !4492, file: !3, line: 2262, type: !1920)
!4492 = distinct !DILexicalBlock(scope: !4488, file: !3, line: 2261, column: 39)
!4493 = !DILocation(line: 2262, column: 14, scope: !4492)
!4494 = !DILocation(line: 2262, column: 37, scope: !4492)
!4495 = !DILocation(line: 2262, column: 23, scope: !4492)
!4496 = !DILocation(line: 2263, column: 7, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4492, file: !3, line: 2263, column: 7)
!4498 = !DILocation(line: 2263, column: 7, scope: !4492)
!4499 = !DILocation(line: 2264, column: 15, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 2263, column: 15)
!4501 = !DILocation(line: 2264, column: 18, scope: !4500)
!4502 = !DILocation(line: 2264, column: 4, scope: !4500)
!4503 = !DILocation(line: 2268, column: 3, scope: !4500)
!4504 = !DILocation(line: 2269, column: 2, scope: !4492)
!4505 = !DILocation(line: 2270, column: 1, scope: !4484)
!4506 = distinct !DISubprogram(name: "ED_operator_sketch_full_mode", scope: !3, file: !3, line: 2550, type: !226, scopeLine: 2551, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4507 = !DILocalVariable(name: "C", arg: 1, scope: !4506, file: !3, line: 2550, type: !228)
!4508 = !DILocation(line: 2550, column: 44, scope: !4506)
!4509 = !DILocalVariable(name: "obedit", scope: !4506, file: !3, line: 2552, type: !1955)
!4510 = !DILocation(line: 2552, column: 10, scope: !4506)
!4511 = !DILocation(line: 2552, column: 40, scope: !4506)
!4512 = !DILocation(line: 2552, column: 19, scope: !4506)
!4513 = !DILocalVariable(name: "ts", scope: !4506, file: !3, line: 2553, type: !1967)
!4514 = !DILocation(line: 2553, column: 16, scope: !4506)
!4515 = !DILocation(line: 2553, column: 44, scope: !4506)
!4516 = !DILocation(line: 2553, column: 21, scope: !4506)
!4517 = !DILocation(line: 2555, column: 6, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 2555, column: 6)
!4519 = !DILocation(line: 2555, column: 13, scope: !4518)
!4520 = !DILocation(line: 2556, column: 6, scope: !4518)
!4521 = !DILocation(line: 2556, column: 14, scope: !4518)
!4522 = !DILocation(line: 2556, column: 19, scope: !4518)
!4523 = !DILocation(line: 2556, column: 34, scope: !4518)
!4524 = !DILocation(line: 2557, column: 6, scope: !4518)
!4525 = !DILocation(line: 2557, column: 10, scope: !4518)
!4526 = !DILocation(line: 2557, column: 25, scope: !4518)
!4527 = !DILocation(line: 2557, column: 42, scope: !4518)
!4528 = !DILocation(line: 2558, column: 7, scope: !4518)
!4529 = !DILocation(line: 2558, column: 11, scope: !4518)
!4530 = !DILocation(line: 2558, column: 26, scope: !4518)
!4531 = !DILocation(line: 2558, column: 50, scope: !4518)
!4532 = !DILocation(line: 2555, column: 6, scope: !4506)
!4533 = !DILocation(line: 2560, column: 3, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4518, file: !3, line: 2559, column: 2)
!4535 = !DILocation(line: 2563, column: 3, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4518, file: !3, line: 2562, column: 7)
!4537 = !DILocation(line: 2565, column: 1, scope: !4506)
!4538 = distinct !DISubprogram(name: "BIF_deleteSketch", scope: !3, file: !3, line: 2272, type: !2383, scopeLine: 2273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4539 = !DILocalVariable(name: "C", arg: 1, scope: !4538, file: !3, line: 2272, type: !228)
!4540 = !DILocation(line: 2272, column: 33, scope: !4538)
!4541 = !DILocation(line: 2274, column: 35, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 2274, column: 6)
!4543 = !DILocation(line: 2274, column: 6, scope: !4542)
!4544 = !DILocation(line: 2274, column: 6, scope: !4538)
!4545 = !DILocalVariable(name: "sketch", scope: !4546, file: !3, line: 2275, type: !1920)
!4546 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 2274, column: 39)
!4547 = !DILocation(line: 2275, column: 14, scope: !4546)
!4548 = !DILocation(line: 2275, column: 37, scope: !4546)
!4549 = !DILocation(line: 2275, column: 23, scope: !4546)
!4550 = !DILocation(line: 2276, column: 7, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4546, file: !3, line: 2276, column: 7)
!4552 = !DILocation(line: 2276, column: 7, scope: !4546)
!4553 = !DILocation(line: 2277, column: 29, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4551, file: !3, line: 2276, column: 15)
!4555 = !DILocation(line: 2277, column: 4, scope: !4554)
!4556 = !DILocation(line: 2280, column: 3, scope: !4554)
!4557 = !DILocation(line: 2281, column: 2, scope: !4546)
!4558 = !DILocation(line: 2282, column: 1, scope: !4538)
!4559 = distinct !DISubprogram(name: "ED_operator_sketch_mode_active_stroke", scope: !3, file: !3, line: 2517, type: !226, scopeLine: 2518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4560 = !DILocalVariable(name: "C", arg: 1, scope: !4559, file: !3, line: 2517, type: !228)
!4561 = !DILocation(line: 2517, column: 53, scope: !4559)
!4562 = !DILocalVariable(name: "ts", scope: !4559, file: !3, line: 2519, type: !1967)
!4563 = !DILocation(line: 2519, column: 16, scope: !4559)
!4564 = !DILocation(line: 2519, column: 44, scope: !4559)
!4565 = !DILocation(line: 2519, column: 21, scope: !4559)
!4566 = !DILocalVariable(name: "sketch", scope: !4559, file: !3, line: 2520, type: !1920)
!4567 = !DILocation(line: 2520, column: 13, scope: !4559)
!4568 = !DILocation(line: 2520, column: 36, scope: !4559)
!4569 = !DILocation(line: 2520, column: 22, scope: !4559)
!4570 = !DILocation(line: 2522, column: 6, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 2522, column: 6)
!4572 = !DILocation(line: 2522, column: 10, scope: !4571)
!4573 = !DILocation(line: 2522, column: 25, scope: !4571)
!4574 = !DILocation(line: 2522, column: 42, scope: !4571)
!4575 = !DILocation(line: 2523, column: 6, scope: !4571)
!4576 = !DILocation(line: 2523, column: 13, scope: !4571)
!4577 = !DILocation(line: 2523, column: 21, scope: !4571)
!4578 = !DILocation(line: 2524, column: 6, scope: !4571)
!4579 = !DILocation(line: 2524, column: 14, scope: !4571)
!4580 = !DILocation(line: 2524, column: 28, scope: !4571)
!4581 = !DILocation(line: 2522, column: 6, scope: !4559)
!4582 = !DILocation(line: 2526, column: 3, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4571, file: !3, line: 2525, column: 2)
!4584 = !DILocation(line: 2529, column: 3, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4571, file: !3, line: 2528, column: 7)
!4586 = !DILocation(line: 2531, column: 1, scope: !4559)
!4587 = distinct !DISubprogram(name: "SKETCH_OT_delete", scope: !3, file: !3, line: 2585, type: !4588, scopeLine: 2586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4588 = !DISubroutineType(types: !4589)
!4589 = !{null, !4590}
!4590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4591, size: 64)
!4591 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !3236, line: 568, baseType: !4592)
!4592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !3236, line: 508, size: 1536, elements: !4593)
!4593 = !{!4594, !4595, !4596, !4597, !4598, !4641, !4645, !4651, !4655, !4656, !4660, !4661, !4662, !4663, !4667, !4668, !4683, !4684, !4688, !4714}
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4592, file: !3236, line: 509, baseType: !2293, size: 64)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !4592, file: !3236, line: 510, baseType: !2293, size: 64, offset: 64)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !4592, file: !3236, line: 511, baseType: !2293, size: 64, offset: 128)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !4592, file: !3236, line: 512, baseType: !2293, size: 64, offset: 192)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !4592, file: !3236, line: 518, baseType: !4599, size: 64, offset: 256)
!4599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4600, size: 64)
!4600 = !DISubroutineType(types: !4601)
!4601 = !{!91, !4602, !4603}
!4602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64)
!4603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4604, size: 64)
!4604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !72, line: 328, size: 1344, elements: !4605)
!4605 = !{!4606, !4607, !4608, !4609, !4610, !4612, !4613, !4614, !4624, !4634, !4635, !4636, !4639, !4640}
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4604, file: !72, line: 329, baseType: !4603, size: 64)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4604, file: !72, line: 329, baseType: !4603, size: 64, offset: 64)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !4604, file: !72, line: 332, baseType: !435, size: 512, offset: 128)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4604, file: !72, line: 333, baseType: !424, size: 64, offset: 640)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4604, file: !72, line: 336, baseType: !4611, size: 64, offset: 704)
!4611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4592, size: 64)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !4604, file: !72, line: 337, baseType: !87, size: 64, offset: 768)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !4604, file: !72, line: 338, baseType: !87, size: 64, offset: 832)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4604, file: !72, line: 340, baseType: !4615, size: 64, offset: 896)
!4615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4616, size: 64)
!4616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !232, line: 55, size: 192, elements: !4617)
!4617 = !{!4618, !4622, !4623}
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4616, file: !232, line: 58, baseType: !4619, size: 64)
!4619 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4616, file: !232, line: 56, size: 64, elements: !4620)
!4620 = !{!4621}
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4619, file: !232, line: 57, baseType: !87, size: 64)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4616, file: !232, line: 60, baseType: !752, size: 64, offset: 64)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4616, file: !232, line: 61, baseType: !87, size: 64, offset: 128)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !4604, file: !72, line: 341, baseType: !4625, size: 64, offset: 960)
!4625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4626, size: 64)
!4626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !72, line: 106, size: 320, elements: !4627)
!4627 = !{!4628, !4629, !4630, !4631, !4632, !4633}
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4626, file: !72, line: 107, baseType: !98, size: 128)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !4626, file: !72, line: 108, baseType: !91, size: 32, offset: 128)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !4626, file: !72, line: 109, baseType: !91, size: 32, offset: 160)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4626, file: !72, line: 110, baseType: !91, size: 32, offset: 192)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4626, file: !72, line: 110, baseType: !91, size: 32, offset: 224)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !4626, file: !72, line: 111, baseType: !3234, size: 64, offset: 256)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !4604, file: !72, line: 343, baseType: !98, size: 128, offset: 1024)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !4604, file: !72, line: 344, baseType: !4603, size: 64, offset: 1152)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !4604, file: !72, line: 345, baseType: !4637, size: 64, offset: 1216)
!4637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4638, size: 64)
!4638 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !3195, line: 46, flags: DIFlagFwdDecl)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4604, file: !72, line: 346, baseType: !210, size: 16, offset: 1280)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4604, file: !72, line: 346, baseType: !1791, size: 48, offset: 1296)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !4592, file: !3236, line: 524, baseType: !4642, size: 64, offset: 320)
!4642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4643, size: 64)
!4643 = !DISubroutineType(types: !4644)
!4644 = !{!1258, !4602, !4603}
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !4592, file: !3236, line: 530, baseType: !4646, size: 64, offset: 384)
!4646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4647, size: 64)
!4647 = !DISubroutineType(types: !4648)
!4648 = !{!91, !4602, !4603, !4649}
!4649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4650, size: 64)
!4650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3293)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !4592, file: !3236, line: 531, baseType: !4652, size: 64, offset: 448)
!4652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4653, size: 64)
!4653 = !DISubroutineType(types: !4654)
!4654 = !{null, !4602, !4603}
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !4592, file: !3236, line: 532, baseType: !4646, size: 64, offset: 512)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4592, file: !3236, line: 536, baseType: !4657, size: 64, offset: 576)
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4658, size: 64)
!4658 = !DISubroutineType(types: !4659)
!4659 = !{!91, !4602}
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !4592, file: !3236, line: 539, baseType: !4652, size: 64, offset: 640)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !4592, file: !3236, line: 542, baseType: !752, size: 64, offset: 704)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !4592, file: !3236, line: 545, baseType: !429, size: 64, offset: 768)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !4592, file: !3236, line: 549, baseType: !4664, size: 64, offset: 832)
!4664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4665, size: 64)
!4665 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !232, line: 333, baseType: !4666)
!4666 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !232, line: 39, flags: DIFlagFwdDecl)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !4592, file: !3236, line: 552, baseType: !98, size: 128, offset: 896)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !4592, file: !3236, line: 555, baseType: !4669, size: 64, offset: 1024)
!4669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4670, size: 64)
!4670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !72, line: 281, size: 1088, elements: !4671)
!4671 = !{!4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682}
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4670, file: !72, line: 282, baseType: !4669, size: 64)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4670, file: !72, line: 282, baseType: !4669, size: 64, offset: 64)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !4670, file: !72, line: 284, baseType: !98, size: 128, offset: 128)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !4670, file: !72, line: 285, baseType: !98, size: 128, offset: 256)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !4670, file: !72, line: 287, baseType: !435, size: 512, offset: 384)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !4670, file: !72, line: 288, baseType: !210, size: 16, offset: 896)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !4670, file: !72, line: 289, baseType: !210, size: 16, offset: 912)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4670, file: !72, line: 291, baseType: !210, size: 16, offset: 928)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !4670, file: !72, line: 292, baseType: !210, size: 16, offset: 944)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4670, file: !72, line: 295, baseType: !4657, size: 64, offset: 960)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !4670, file: !72, line: 296, baseType: !87, size: 64, offset: 1024)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !4592, file: !3236, line: 559, baseType: !87, size: 64, offset: 1088)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !4592, file: !3236, line: 560, baseType: !4685, size: 64, offset: 1152)
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4686, size: 64)
!4686 = !DISubroutineType(types: !4687)
!4687 = !{!91, !4602, !4611}
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !4592, file: !3236, line: 563, baseType: !4689, size: 256, offset: 1216)
!4689 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !232, line: 436, baseType: !4690)
!4690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !232, line: 430, size: 256, elements: !4691)
!4691 = !{!4692, !4693, !4696, !4712}
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4690, file: !232, line: 431, baseType: !87, size: 64)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !4690, file: !232, line: 432, baseType: !4694, size: 64, offset: 64)
!4694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4695, size: 64)
!4695 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !232, line: 417, baseType: !753)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !4690, file: !232, line: 433, baseType: !4697, size: 64, offset: 128)
!4697 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !232, line: 408, baseType: !4698)
!4698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4699, size: 64)
!4699 = !DISubroutineType(types: !4700)
!4700 = !{!91, !4602, !4615, !4701, !4703}
!4701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4702, size: 64)
!4702 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !232, line: 38, flags: DIFlagFwdDecl)
!4703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4704, size: 64)
!4704 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !232, line: 348, baseType: !4705)
!4705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !232, line: 337, size: 256, elements: !4706)
!4706 = !{!4707, !4708, !4709, !4710, !4711}
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4705, file: !232, line: 339, baseType: !87, size: 64)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4705, file: !232, line: 342, baseType: !4701, size: 64, offset: 64)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !4705, file: !232, line: 345, baseType: !91, size: 32, offset: 128)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !4705, file: !232, line: 347, baseType: !91, size: 32, offset: 160)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !4705, file: !232, line: 347, baseType: !91, size: 32, offset: 192)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4690, file: !232, line: 434, baseType: !4713, size: 64, offset: 192)
!4713 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !232, line: 409, baseType: !803)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4592, file: !3236, line: 566, baseType: !210, size: 16, offset: 1472)
!4715 = !DILocalVariable(name: "ot", arg: 1, scope: !4587, file: !3, line: 2585, type: !4590)
!4716 = !DILocation(line: 2585, column: 39, scope: !4587)
!4717 = !DILocation(line: 2588, column: 2, scope: !4587)
!4718 = !DILocation(line: 2588, column: 6, scope: !4587)
!4719 = !DILocation(line: 2588, column: 11, scope: !4587)
!4720 = !DILocation(line: 2589, column: 2, scope: !4587)
!4721 = !DILocation(line: 2589, column: 6, scope: !4587)
!4722 = !DILocation(line: 2589, column: 13, scope: !4587)
!4723 = !DILocation(line: 2590, column: 2, scope: !4587)
!4724 = !DILocation(line: 2590, column: 6, scope: !4587)
!4725 = !DILocation(line: 2590, column: 18, scope: !4587)
!4726 = !DILocation(line: 2593, column: 2, scope: !4587)
!4727 = !DILocation(line: 2593, column: 6, scope: !4587)
!4728 = !DILocation(line: 2593, column: 13, scope: !4587)
!4729 = !DILocation(line: 2595, column: 2, scope: !4587)
!4730 = !DILocation(line: 2595, column: 6, scope: !4587)
!4731 = !DILocation(line: 2595, column: 11, scope: !4587)
!4732 = !DILocation(line: 2599, column: 1, scope: !4587)
!4733 = distinct !DISubprogram(name: "sketch_delete", scope: !3, file: !3, line: 2237, type: !4734, scopeLine: 2238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4734 = !DISubroutineType(types: !4735)
!4735 = !{!91, !228, !4736, !4738}
!4736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4737, size: 64)
!4737 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !72, line: 348, baseType: !4604)
!4738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4739, size: 64)
!4739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4740)
!4740 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !3236, line: 460, baseType: !3293)
!4741 = !DILocalVariable(name: "C", arg: 1, scope: !4733, file: !3, line: 2237, type: !228)
!4742 = !DILocation(line: 2237, column: 36, scope: !4733)
!4743 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !4733, file: !3, line: 2237, type: !4736)
!4744 = !DILocation(line: 2237, column: 51, scope: !4733)
!4745 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !4733, file: !3, line: 2237, type: !4738)
!4746 = !DILocation(line: 2237, column: 78, scope: !4733)
!4747 = !DILocalVariable(name: "sketch", scope: !4733, file: !3, line: 2239, type: !1920)
!4748 = !DILocation(line: 2239, column: 13, scope: !4733)
!4749 = !DILocation(line: 2239, column: 36, scope: !4733)
!4750 = !DILocation(line: 2239, column: 22, scope: !4733)
!4751 = !DILocation(line: 2240, column: 6, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 2240, column: 6)
!4753 = !DILocation(line: 2240, column: 6, scope: !4733)
!4754 = !DILocation(line: 2241, column: 28, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 2240, column: 14)
!4756 = !DILocation(line: 2241, column: 3, scope: !4755)
!4757 = !DILocation(line: 2243, column: 2, scope: !4755)
!4758 = !DILocation(line: 2244, column: 24, scope: !4733)
!4759 = !DILocation(line: 2244, column: 2, scope: !4733)
!4760 = !DILocation(line: 2245, column: 2, scope: !4733)
!4761 = distinct !DISubprogram(name: "SKETCH_OT_select", scope: !3, file: !3, line: 2601, type: !4588, scopeLine: 2602, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4762 = !DILocalVariable(name: "ot", arg: 1, scope: !4761, file: !3, line: 2601, type: !4590)
!4763 = !DILocation(line: 2601, column: 39, scope: !4761)
!4764 = !DILocation(line: 2604, column: 2, scope: !4761)
!4765 = !DILocation(line: 2604, column: 6, scope: !4761)
!4766 = !DILocation(line: 2604, column: 11, scope: !4761)
!4767 = !DILocation(line: 2605, column: 2, scope: !4761)
!4768 = !DILocation(line: 2605, column: 6, scope: !4761)
!4769 = !DILocation(line: 2605, column: 13, scope: !4761)
!4770 = !DILocation(line: 2606, column: 2, scope: !4761)
!4771 = !DILocation(line: 2606, column: 6, scope: !4761)
!4772 = !DILocation(line: 2606, column: 18, scope: !4761)
!4773 = !DILocation(line: 2609, column: 2, scope: !4761)
!4774 = !DILocation(line: 2609, column: 6, scope: !4761)
!4775 = !DILocation(line: 2609, column: 13, scope: !4761)
!4776 = !DILocation(line: 2611, column: 2, scope: !4761)
!4777 = !DILocation(line: 2611, column: 6, scope: !4761)
!4778 = !DILocation(line: 2611, column: 11, scope: !4761)
!4779 = !DILocation(line: 2615, column: 1, scope: !4761)
!4780 = distinct !DISubprogram(name: "sketch_select", scope: !3, file: !3, line: 2367, type: !4734, scopeLine: 2368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4781 = !DILocalVariable(name: "C", arg: 1, scope: !4780, file: !3, line: 2367, type: !228)
!4782 = !DILocation(line: 2367, column: 36, scope: !4780)
!4783 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !4780, file: !3, line: 2367, type: !4736)
!4784 = !DILocation(line: 2367, column: 51, scope: !4780)
!4785 = !DILocalVariable(name: "event", arg: 3, scope: !4780, file: !3, line: 2367, type: !4738)
!4786 = !DILocation(line: 2367, column: 78, scope: !4780)
!4787 = !DILocalVariable(name: "sketch", scope: !4780, file: !3, line: 2369, type: !1920)
!4788 = !DILocation(line: 2369, column: 13, scope: !4780)
!4789 = !DILocation(line: 2369, column: 36, scope: !4780)
!4790 = !DILocation(line: 2369, column: 22, scope: !4780)
!4791 = !DILocation(line: 2370, column: 6, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 2370, column: 6)
!4793 = !DILocation(line: 2370, column: 6, scope: !4780)
!4794 = !DILocalVariable(name: "extend", scope: !4795, file: !3, line: 2371, type: !210)
!4795 = distinct !DILexicalBlock(scope: !4792, file: !3, line: 2370, column: 14)
!4796 = !DILocation(line: 2371, column: 9, scope: !4795)
!4797 = !DILocation(line: 2372, column: 23, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 2372, column: 7)
!4799 = !DILocation(line: 2372, column: 26, scope: !4798)
!4800 = !DILocation(line: 2372, column: 34, scope: !4798)
!4801 = !DILocation(line: 2372, column: 41, scope: !4798)
!4802 = !DILocation(line: 2372, column: 47, scope: !4798)
!4803 = !DILocation(line: 2372, column: 7, scope: !4798)
!4804 = !DILocation(line: 2372, column: 7, scope: !4795)
!4805 = !DILocation(line: 2373, column: 35, scope: !4798)
!4806 = !DILocation(line: 2373, column: 23, scope: !4798)
!4807 = !DILocation(line: 2373, column: 4, scope: !4798)
!4808 = !DILocation(line: 2374, column: 2, scope: !4795)
!4809 = !DILocation(line: 2376, column: 2, scope: !4780)
!4810 = distinct !DISubprogram(name: "SKETCH_OT_cancel_stroke", scope: !3, file: !3, line: 2617, type: !4588, scopeLine: 2618, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4811 = !DILocalVariable(name: "ot", arg: 1, scope: !4810, file: !3, line: 2617, type: !4590)
!4812 = !DILocation(line: 2617, column: 46, scope: !4810)
!4813 = !DILocation(line: 2620, column: 2, scope: !4810)
!4814 = !DILocation(line: 2620, column: 6, scope: !4810)
!4815 = !DILocation(line: 2620, column: 11, scope: !4810)
!4816 = !DILocation(line: 2621, column: 2, scope: !4810)
!4817 = !DILocation(line: 2621, column: 6, scope: !4810)
!4818 = !DILocation(line: 2621, column: 13, scope: !4810)
!4819 = !DILocation(line: 2622, column: 2, scope: !4810)
!4820 = !DILocation(line: 2622, column: 6, scope: !4810)
!4821 = !DILocation(line: 2622, column: 18, scope: !4810)
!4822 = !DILocation(line: 2625, column: 2, scope: !4810)
!4823 = !DILocation(line: 2625, column: 6, scope: !4810)
!4824 = !DILocation(line: 2625, column: 13, scope: !4810)
!4825 = !DILocation(line: 2627, column: 2, scope: !4810)
!4826 = !DILocation(line: 2627, column: 6, scope: !4810)
!4827 = !DILocation(line: 2627, column: 11, scope: !4810)
!4828 = !DILocation(line: 2631, column: 1, scope: !4810)
!4829 = distinct !DISubprogram(name: "sketch_cancel_invoke", scope: !3, file: !3, line: 2344, type: !4734, scopeLine: 2345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4830 = !DILocalVariable(name: "C", arg: 1, scope: !4829, file: !3, line: 2344, type: !228)
!4831 = !DILocation(line: 2344, column: 43, scope: !4829)
!4832 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !4829, file: !3, line: 2344, type: !4736)
!4833 = !DILocation(line: 2344, column: 58, scope: !4829)
!4834 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !4829, file: !3, line: 2344, type: !4738)
!4835 = !DILocation(line: 2344, column: 85, scope: !4829)
!4836 = !DILocalVariable(name: "sketch", scope: !4829, file: !3, line: 2346, type: !1920)
!4837 = !DILocation(line: 2346, column: 13, scope: !4829)
!4838 = !DILocation(line: 2346, column: 36, scope: !4829)
!4839 = !DILocation(line: 2346, column: 22, scope: !4829)
!4840 = !DILocation(line: 2347, column: 6, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4829, file: !3, line: 2347, column: 6)
!4842 = !DILocation(line: 2347, column: 13, scope: !4841)
!4843 = !DILocation(line: 2347, column: 6, scope: !4829)
!4844 = !DILocation(line: 2348, column: 19, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4841, file: !3, line: 2347, column: 22)
!4846 = !DILocation(line: 2348, column: 3, scope: !4845)
!4847 = !DILocation(line: 2349, column: 34, scope: !4845)
!4848 = !DILocation(line: 2349, column: 22, scope: !4845)
!4849 = !DILocation(line: 2349, column: 3, scope: !4845)
!4850 = !DILocation(line: 2350, column: 3, scope: !4845)
!4851 = !DILocation(line: 2352, column: 2, scope: !4829)
!4852 = !DILocation(line: 2353, column: 1, scope: !4829)
!4853 = distinct !DISubprogram(name: "SKETCH_OT_convert", scope: !3, file: !3, line: 2633, type: !4588, scopeLine: 2634, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4854 = !DILocalVariable(name: "ot", arg: 1, scope: !4853, file: !3, line: 2633, type: !4590)
!4855 = !DILocation(line: 2633, column: 40, scope: !4853)
!4856 = !DILocation(line: 2636, column: 2, scope: !4853)
!4857 = !DILocation(line: 2636, column: 6, scope: !4853)
!4858 = !DILocation(line: 2636, column: 11, scope: !4853)
!4859 = !DILocation(line: 2637, column: 2, scope: !4853)
!4860 = !DILocation(line: 2637, column: 6, scope: !4853)
!4861 = !DILocation(line: 2637, column: 13, scope: !4853)
!4862 = !DILocation(line: 2638, column: 2, scope: !4853)
!4863 = !DILocation(line: 2638, column: 6, scope: !4853)
!4864 = !DILocation(line: 2638, column: 18, scope: !4853)
!4865 = !DILocation(line: 2641, column: 2, scope: !4853)
!4866 = !DILocation(line: 2641, column: 6, scope: !4853)
!4867 = !DILocation(line: 2641, column: 13, scope: !4853)
!4868 = !DILocation(line: 2643, column: 2, scope: !4853)
!4869 = !DILocation(line: 2643, column: 6, scope: !4853)
!4870 = !DILocation(line: 2643, column: 11, scope: !4853)
!4871 = !DILocation(line: 2646, column: 2, scope: !4853)
!4872 = !DILocation(line: 2646, column: 6, scope: !4853)
!4873 = !DILocation(line: 2646, column: 11, scope: !4853)
!4874 = !DILocation(line: 2647, column: 1, scope: !4853)
!4875 = distinct !DISubprogram(name: "sketch_convert", scope: !3, file: !3, line: 2334, type: !4734, scopeLine: 2335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4876 = !DILocalVariable(name: "C", arg: 1, scope: !4875, file: !3, line: 2334, type: !228)
!4877 = !DILocation(line: 2334, column: 37, scope: !4875)
!4878 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !4875, file: !3, line: 2334, type: !4736)
!4879 = !DILocation(line: 2334, column: 52, scope: !4875)
!4880 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !4875, file: !3, line: 2334, type: !4738)
!4881 = !DILocation(line: 2334, column: 79, scope: !4875)
!4882 = !DILocalVariable(name: "sketch", scope: !4875, file: !3, line: 2336, type: !1920)
!4883 = !DILocation(line: 2336, column: 13, scope: !4875)
!4884 = !DILocation(line: 2336, column: 36, scope: !4875)
!4885 = !DILocation(line: 2336, column: 22, scope: !4875)
!4886 = !DILocation(line: 2337, column: 6, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 2337, column: 6)
!4888 = !DILocation(line: 2337, column: 13, scope: !4887)
!4889 = !DILocation(line: 2337, column: 6, scope: !4875)
!4890 = !DILocation(line: 2338, column: 14, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 2337, column: 22)
!4892 = !DILocation(line: 2338, column: 17, scope: !4891)
!4893 = !DILocation(line: 2338, column: 3, scope: !4891)
!4894 = !DILocation(line: 2339, column: 34, scope: !4891)
!4895 = !DILocation(line: 2339, column: 22, scope: !4891)
!4896 = !DILocation(line: 2339, column: 3, scope: !4891)
!4897 = !DILocation(line: 2340, column: 2, scope: !4891)
!4898 = !DILocation(line: 2341, column: 2, scope: !4875)
!4899 = distinct !DISubprogram(name: "SKETCH_OT_finish_stroke", scope: !3, file: !3, line: 2649, type: !4588, scopeLine: 2650, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4900 = !DILocalVariable(name: "ot", arg: 1, scope: !4899, file: !3, line: 2649, type: !4590)
!4901 = !DILocation(line: 2649, column: 46, scope: !4899)
!4902 = !DILocation(line: 2652, column: 2, scope: !4899)
!4903 = !DILocation(line: 2652, column: 6, scope: !4899)
!4904 = !DILocation(line: 2652, column: 11, scope: !4899)
!4905 = !DILocation(line: 2653, column: 2, scope: !4899)
!4906 = !DILocation(line: 2653, column: 6, scope: !4899)
!4907 = !DILocation(line: 2653, column: 13, scope: !4899)
!4908 = !DILocation(line: 2654, column: 2, scope: !4899)
!4909 = !DILocation(line: 2654, column: 6, scope: !4899)
!4910 = !DILocation(line: 2654, column: 18, scope: !4899)
!4911 = !DILocation(line: 2657, column: 2, scope: !4899)
!4912 = !DILocation(line: 2657, column: 6, scope: !4899)
!4913 = !DILocation(line: 2657, column: 13, scope: !4899)
!4914 = !DILocation(line: 2659, column: 2, scope: !4899)
!4915 = !DILocation(line: 2659, column: 6, scope: !4899)
!4916 = !DILocation(line: 2659, column: 11, scope: !4899)
!4917 = !DILocation(line: 2663, column: 1, scope: !4899)
!4918 = distinct !DISubprogram(name: "sketch_finish", scope: !3, file: !3, line: 2355, type: !4734, scopeLine: 2356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4919 = !DILocalVariable(name: "C", arg: 1, scope: !4918, file: !3, line: 2355, type: !228)
!4920 = !DILocation(line: 2355, column: 36, scope: !4918)
!4921 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !4918, file: !3, line: 2355, type: !4736)
!4922 = !DILocation(line: 2355, column: 51, scope: !4918)
!4923 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !4918, file: !3, line: 2355, type: !4738)
!4924 = !DILocation(line: 2355, column: 78, scope: !4918)
!4925 = !DILocalVariable(name: "sketch", scope: !4918, file: !3, line: 2357, type: !1920)
!4926 = !DILocation(line: 2357, column: 13, scope: !4918)
!4927 = !DILocation(line: 2357, column: 36, scope: !4918)
!4928 = !DILocation(line: 2357, column: 22, scope: !4918)
!4929 = !DILocation(line: 2358, column: 6, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 2358, column: 6)
!4931 = !DILocation(line: 2358, column: 13, scope: !4930)
!4932 = !DILocation(line: 2358, column: 6, scope: !4918)
!4933 = !DILocation(line: 2359, column: 24, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 2359, column: 7)
!4935 = distinct !DILexicalBlock(scope: !4930, file: !3, line: 2358, column: 22)
!4936 = !DILocation(line: 2359, column: 27, scope: !4934)
!4937 = !DILocation(line: 2359, column: 7, scope: !4934)
!4938 = !DILocation(line: 2359, column: 7, scope: !4935)
!4939 = !DILocation(line: 2360, column: 35, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 2359, column: 36)
!4941 = !DILocation(line: 2360, column: 23, scope: !4940)
!4942 = !DILocation(line: 2360, column: 4, scope: !4940)
!4943 = !DILocation(line: 2361, column: 4, scope: !4940)
!4944 = !DILocation(line: 2363, column: 2, scope: !4935)
!4945 = !DILocation(line: 2364, column: 2, scope: !4918)
!4946 = !DILocation(line: 2365, column: 1, scope: !4918)
!4947 = distinct !DISubprogram(name: "SKETCH_OT_draw_preview", scope: !3, file: !3, line: 2665, type: !4588, scopeLine: 2666, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4948 = !DILocalVariable(name: "ot", arg: 1, scope: !4947, file: !3, line: 2665, type: !4590)
!4949 = !DILocation(line: 2665, column: 45, scope: !4947)
!4950 = !DILocation(line: 2668, column: 2, scope: !4947)
!4951 = !DILocation(line: 2668, column: 6, scope: !4947)
!4952 = !DILocation(line: 2668, column: 11, scope: !4947)
!4953 = !DILocation(line: 2669, column: 2, scope: !4947)
!4954 = !DILocation(line: 2669, column: 6, scope: !4947)
!4955 = !DILocation(line: 2669, column: 13, scope: !4947)
!4956 = !DILocation(line: 2670, column: 2, scope: !4947)
!4957 = !DILocation(line: 2670, column: 6, scope: !4947)
!4958 = !DILocation(line: 2670, column: 18, scope: !4947)
!4959 = !DILocation(line: 2673, column: 2, scope: !4947)
!4960 = !DILocation(line: 2673, column: 6, scope: !4947)
!4961 = !DILocation(line: 2673, column: 13, scope: !4947)
!4962 = !DILocation(line: 2675, column: 2, scope: !4947)
!4963 = !DILocation(line: 2675, column: 6, scope: !4947)
!4964 = !DILocation(line: 2675, column: 11, scope: !4947)
!4965 = !DILocation(line: 2677, column: 18, scope: !4947)
!4966 = !DILocation(line: 2677, column: 22, scope: !4947)
!4967 = !DILocation(line: 2677, column: 2, scope: !4947)
!4968 = !DILocation(line: 2681, column: 1, scope: !4947)
!4969 = distinct !DISubprogram(name: "sketch_draw_preview", scope: !3, file: !3, line: 2499, type: !4734, scopeLine: 2500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!4970 = !DILocalVariable(name: "C", arg: 1, scope: !4969, file: !3, line: 2499, type: !228)
!4971 = !DILocation(line: 2499, column: 42, scope: !4969)
!4972 = !DILocalVariable(name: "op", arg: 2, scope: !4969, file: !3, line: 2499, type: !4736)
!4973 = !DILocation(line: 2499, column: 57, scope: !4969)
!4974 = !DILocalVariable(name: "event", arg: 3, scope: !4969, file: !3, line: 2499, type: !4738)
!4975 = !DILocation(line: 2499, column: 76, scope: !4969)
!4976 = !DILocalVariable(name: "snap", scope: !4969, file: !3, line: 2501, type: !4977)
!4977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1258)
!4978 = !DILocation(line: 2501, column: 13, scope: !4969)
!4979 = !DILocation(line: 2501, column: 36, scope: !4969)
!4980 = !DILocation(line: 2501, column: 40, scope: !4969)
!4981 = !DILocation(line: 2501, column: 20, scope: !4969)
!4982 = !DILocalVariable(name: "sketch", scope: !4969, file: !3, line: 2502, type: !1920)
!4983 = !DILocation(line: 2502, column: 13, scope: !4969)
!4984 = !DILocation(line: 2502, column: 36, scope: !4969)
!4985 = !DILocation(line: 2502, column: 22, scope: !4969)
!4986 = !DILocation(line: 2504, column: 6, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4969, file: !3, line: 2504, column: 6)
!4988 = !DILocation(line: 2504, column: 6, scope: !4969)
!4989 = !DILocalVariable(name: "dd", scope: !4990, file: !3, line: 2505, type: !4991)
!4990 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 2504, column: 14)
!4991 = !DIDerivedType(tag: DW_TAG_typedef, name: "SK_DrawData", file: !21, line: 71, baseType: !4992)
!4992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SK_DrawData", file: !21, line: 67, size: 160, elements: !4993)
!4993 = !{!4994, !4995, !4996}
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !4992, file: !21, line: 68, baseType: !935, size: 64)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "previous_mval", scope: !4992, file: !21, line: 69, baseType: !935, size: 64, offset: 64)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4992, file: !21, line: 70, baseType: !216, size: 32, offset: 128)
!4997 = !DILocation(line: 2505, column: 15, scope: !4990)
!4998 = !DILocation(line: 2507, column: 24, scope: !4990)
!4999 = !DILocation(line: 2507, column: 31, scope: !4990)
!5000 = !DILocation(line: 2507, column: 3, scope: !4990)
!5001 = !DILocation(line: 2508, column: 21, scope: !4990)
!5002 = !DILocation(line: 2508, column: 25, scope: !4990)
!5003 = !DILocation(line: 2508, column: 33, scope: !4990)
!5004 = !DILocation(line: 2508, column: 45, scope: !4990)
!5005 = !DILocation(line: 2508, column: 53, scope: !4990)
!5006 = !DILocation(line: 2508, column: 61, scope: !4990)
!5007 = !DILocation(line: 2508, column: 81, scope: !4990)
!5008 = !DILocation(line: 2508, column: 3, scope: !4990)
!5009 = !DILocation(line: 2509, column: 34, scope: !4990)
!5010 = !DILocation(line: 2509, column: 22, scope: !4990)
!5011 = !DILocation(line: 2509, column: 3, scope: !4990)
!5012 = !DILocation(line: 2510, column: 2, scope: !4990)
!5013 = !DILocation(line: 2512, column: 2, scope: !4969)
!5014 = distinct !DISubprogram(name: "SKETCH_OT_draw_stroke", scope: !3, file: !3, line: 2683, type: !4588, scopeLine: 2684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5015 = !DILocalVariable(name: "ot", arg: 1, scope: !5014, file: !3, line: 2683, type: !4590)
!5016 = !DILocation(line: 2683, column: 44, scope: !5014)
!5017 = !DILocation(line: 2686, column: 2, scope: !5014)
!5018 = !DILocation(line: 2686, column: 6, scope: !5014)
!5019 = !DILocation(line: 2686, column: 11, scope: !5014)
!5020 = !DILocation(line: 2687, column: 2, scope: !5014)
!5021 = !DILocation(line: 2687, column: 6, scope: !5014)
!5022 = !DILocation(line: 2687, column: 13, scope: !5014)
!5023 = !DILocation(line: 2688, column: 2, scope: !5014)
!5024 = !DILocation(line: 2688, column: 6, scope: !5014)
!5025 = !DILocation(line: 2688, column: 18, scope: !5014)
!5026 = !DILocation(line: 2691, column: 2, scope: !5014)
!5027 = !DILocation(line: 2691, column: 6, scope: !5014)
!5028 = !DILocation(line: 2691, column: 13, scope: !5014)
!5029 = !DILocation(line: 2692, column: 2, scope: !5014)
!5030 = !DILocation(line: 2692, column: 6, scope: !5014)
!5031 = !DILocation(line: 2692, column: 13, scope: !5014)
!5032 = !DILocation(line: 2693, column: 2, scope: !5014)
!5033 = !DILocation(line: 2693, column: 6, scope: !5014)
!5034 = !DILocation(line: 2693, column: 13, scope: !5014)
!5035 = !DILocation(line: 2695, column: 2, scope: !5014)
!5036 = !DILocation(line: 2695, column: 6, scope: !5014)
!5037 = !DILocation(line: 2695, column: 11, scope: !5014)
!5038 = !DILocation(line: 2697, column: 18, scope: !5014)
!5039 = !DILocation(line: 2697, column: 22, scope: !5014)
!5040 = !DILocation(line: 2697, column: 2, scope: !5014)
!5041 = !DILocation(line: 2700, column: 2, scope: !5014)
!5042 = !DILocation(line: 2700, column: 6, scope: !5014)
!5043 = !DILocation(line: 2700, column: 11, scope: !5014)
!5044 = !DILocation(line: 2701, column: 1, scope: !5014)
!5045 = distinct !DISubprogram(name: "sketch_draw_stroke", scope: !3, file: !3, line: 2386, type: !4734, scopeLine: 2387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5046 = !DILocalVariable(name: "C", arg: 1, scope: !5045, file: !3, line: 2386, type: !228)
!5047 = !DILocation(line: 2386, column: 41, scope: !5045)
!5048 = !DILocalVariable(name: "op", arg: 2, scope: !5045, file: !3, line: 2386, type: !4736)
!5049 = !DILocation(line: 2386, column: 56, scope: !5045)
!5050 = !DILocalVariable(name: "event", arg: 3, scope: !5045, file: !3, line: 2386, type: !4738)
!5051 = !DILocation(line: 2386, column: 75, scope: !5045)
!5052 = !DILocalVariable(name: "snap", scope: !5045, file: !3, line: 2388, type: !4977)
!5053 = !DILocation(line: 2388, column: 13, scope: !5045)
!5054 = !DILocation(line: 2388, column: 36, scope: !5045)
!5055 = !DILocation(line: 2388, column: 40, scope: !5045)
!5056 = !DILocation(line: 2388, column: 20, scope: !5045)
!5057 = !DILocalVariable(name: "dd", scope: !5045, file: !3, line: 2389, type: !5058)
!5058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4991, size: 64)
!5059 = !DILocation(line: 2389, column: 15, scope: !5045)
!5060 = !DILocalVariable(name: "sketch", scope: !5045, file: !3, line: 2390, type: !1920)
!5061 = !DILocation(line: 2390, column: 13, scope: !5045)
!5062 = !DILocation(line: 2390, column: 36, scope: !5045)
!5063 = !DILocation(line: 2390, column: 22, scope: !5045)
!5064 = !DILocation(line: 2392, column: 24, scope: !5045)
!5065 = !DILocation(line: 2392, column: 22, scope: !5045)
!5066 = !DILocation(line: 2392, column: 19, scope: !5045)
!5067 = !DILocation(line: 2392, column: 2, scope: !5045)
!5068 = !DILocation(line: 2392, column: 6, scope: !5045)
!5069 = !DILocation(line: 2392, column: 17, scope: !5045)
!5070 = !DILocation(line: 2393, column: 18, scope: !5045)
!5071 = !DILocation(line: 2393, column: 22, scope: !5045)
!5072 = !DILocation(line: 2393, column: 29, scope: !5045)
!5073 = !DILocation(line: 2393, column: 2, scope: !5045)
!5074 = !DILocation(line: 2395, column: 23, scope: !5045)
!5075 = !DILocation(line: 2395, column: 2, scope: !5045)
!5076 = !DILocation(line: 2397, column: 17, scope: !5045)
!5077 = !DILocation(line: 2397, column: 20, scope: !5045)
!5078 = !DILocation(line: 2397, column: 28, scope: !5045)
!5079 = !DILocation(line: 2397, column: 36, scope: !5045)
!5080 = !DILocation(line: 2397, column: 51, scope: !5045)
!5081 = !DILocation(line: 2397, column: 55, scope: !5045)
!5082 = !DILocation(line: 2397, column: 2, scope: !5045)
!5083 = !DILocation(line: 2399, column: 29, scope: !5045)
!5084 = !DILocation(line: 2399, column: 32, scope: !5045)
!5085 = !DILocation(line: 2399, column: 2, scope: !5045)
!5086 = !DILocation(line: 2401, column: 2, scope: !5045)
!5087 = distinct !DISubprogram(name: "sketch_draw_stroke_modal", scope: !3, file: !3, line: 2487, type: !4734, scopeLine: 2488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5088 = !DILocalVariable(name: "C", arg: 1, scope: !5087, file: !3, line: 2487, type: !228)
!5089 = !DILocation(line: 2487, column: 47, scope: !5087)
!5090 = !DILocalVariable(name: "op", arg: 2, scope: !5087, file: !3, line: 2487, type: !4736)
!5091 = !DILocation(line: 2487, column: 62, scope: !5087)
!5092 = !DILocalVariable(name: "event", arg: 3, scope: !5087, file: !3, line: 2487, type: !4738)
!5093 = !DILocation(line: 2487, column: 81, scope: !5087)
!5094 = !DILocalVariable(name: "sketch", scope: !5087, file: !3, line: 2489, type: !1920)
!5095 = !DILocation(line: 2489, column: 13, scope: !5087)
!5096 = !DILocation(line: 2489, column: 36, scope: !5087)
!5097 = !DILocation(line: 2489, column: 22, scope: !5087)
!5098 = !DILocation(line: 2490, column: 27, scope: !5087)
!5099 = !DILocation(line: 2490, column: 30, scope: !5087)
!5100 = !DILocation(line: 2490, column: 34, scope: !5087)
!5101 = !DILocation(line: 2490, column: 44, scope: !5087)
!5102 = !DILocation(line: 2490, column: 52, scope: !5087)
!5103 = !DILocation(line: 2490, column: 9, scope: !5087)
!5104 = !DILocation(line: 2490, column: 2, scope: !5087)
!5105 = distinct !DISubprogram(name: "sketch_draw_stroke_cancel", scope: !3, file: !3, line: 2379, type: !5106, scopeLine: 2380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5106 = !DISubroutineType(types: !5107)
!5107 = !{null, !228, !4736}
!5108 = !DILocalVariable(name: "C", arg: 1, scope: !5105, file: !3, line: 2379, type: !228)
!5109 = !DILocation(line: 2379, column: 49, scope: !5105)
!5110 = !DILocalVariable(name: "op", arg: 2, scope: !5105, file: !3, line: 2379, type: !4736)
!5111 = !DILocation(line: 2379, column: 64, scope: !5105)
!5112 = !DILocalVariable(name: "sketch", scope: !5105, file: !3, line: 2381, type: !1920)
!5113 = !DILocation(line: 2381, column: 13, scope: !5105)
!5114 = !DILocation(line: 2381, column: 36, scope: !5105)
!5115 = !DILocation(line: 2381, column: 22, scope: !5105)
!5116 = !DILocation(line: 2382, column: 18, scope: !5105)
!5117 = !DILocation(line: 2382, column: 2, scope: !5105)
!5118 = !DILocation(line: 2383, column: 2, scope: !5105)
!5119 = !DILocation(line: 2383, column: 12, scope: !5105)
!5120 = !DILocation(line: 2383, column: 16, scope: !5105)
!5121 = !DILocation(line: 2384, column: 1, scope: !5105)
!5122 = distinct !DISubprogram(name: "SKETCH_OT_gesture", scope: !3, file: !3, line: 2703, type: !4588, scopeLine: 2704, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5123 = !DILocalVariable(name: "ot", arg: 1, scope: !5122, file: !3, line: 2703, type: !4590)
!5124 = !DILocation(line: 2703, column: 40, scope: !5122)
!5125 = !DILocation(line: 2706, column: 2, scope: !5122)
!5126 = !DILocation(line: 2706, column: 6, scope: !5122)
!5127 = !DILocation(line: 2706, column: 11, scope: !5122)
!5128 = !DILocation(line: 2707, column: 2, scope: !5122)
!5129 = !DILocation(line: 2707, column: 6, scope: !5122)
!5130 = !DILocation(line: 2707, column: 13, scope: !5122)
!5131 = !DILocation(line: 2708, column: 2, scope: !5122)
!5132 = !DILocation(line: 2708, column: 6, scope: !5122)
!5133 = !DILocation(line: 2708, column: 18, scope: !5122)
!5134 = !DILocation(line: 2711, column: 2, scope: !5122)
!5135 = !DILocation(line: 2711, column: 6, scope: !5122)
!5136 = !DILocation(line: 2711, column: 13, scope: !5122)
!5137 = !DILocation(line: 2712, column: 2, scope: !5122)
!5138 = !DILocation(line: 2712, column: 6, scope: !5122)
!5139 = !DILocation(line: 2712, column: 13, scope: !5122)
!5140 = !DILocation(line: 2713, column: 2, scope: !5122)
!5141 = !DILocation(line: 2713, column: 6, scope: !5122)
!5142 = !DILocation(line: 2713, column: 13, scope: !5122)
!5143 = !DILocation(line: 2715, column: 2, scope: !5122)
!5144 = !DILocation(line: 2715, column: 6, scope: !5122)
!5145 = !DILocation(line: 2715, column: 11, scope: !5122)
!5146 = !DILocation(line: 2717, column: 18, scope: !5122)
!5147 = !DILocation(line: 2717, column: 22, scope: !5122)
!5148 = !DILocation(line: 2717, column: 2, scope: !5122)
!5149 = !DILocation(line: 2720, column: 2, scope: !5122)
!5150 = !DILocation(line: 2720, column: 6, scope: !5122)
!5151 = !DILocation(line: 2720, column: 11, scope: !5122)
!5152 = !DILocation(line: 2721, column: 1, scope: !5122)
!5153 = distinct !DISubprogram(name: "sketch_draw_gesture", scope: !3, file: !3, line: 2411, type: !4734, scopeLine: 2412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5154 = !DILocalVariable(name: "C", arg: 1, scope: !5153, file: !3, line: 2411, type: !228)
!5155 = !DILocation(line: 2411, column: 42, scope: !5153)
!5156 = !DILocalVariable(name: "op", arg: 2, scope: !5153, file: !3, line: 2411, type: !4736)
!5157 = !DILocation(line: 2411, column: 57, scope: !5153)
!5158 = !DILocalVariable(name: "event", arg: 3, scope: !5153, file: !3, line: 2411, type: !4738)
!5159 = !DILocation(line: 2411, column: 76, scope: !5153)
!5160 = !DILocalVariable(name: "snap", scope: !5153, file: !3, line: 2413, type: !4977)
!5161 = !DILocation(line: 2413, column: 13, scope: !5153)
!5162 = !DILocation(line: 2413, column: 36, scope: !5153)
!5163 = !DILocation(line: 2413, column: 40, scope: !5153)
!5164 = !DILocation(line: 2413, column: 20, scope: !5153)
!5165 = !DILocalVariable(name: "dd", scope: !5153, file: !3, line: 2414, type: !5058)
!5166 = !DILocation(line: 2414, column: 15, scope: !5153)
!5167 = !DILocalVariable(name: "sketch", scope: !5153, file: !3, line: 2415, type: !1920)
!5168 = !DILocation(line: 2415, column: 13, scope: !5153)
!5169 = !DILocation(line: 2415, column: 36, scope: !5153)
!5170 = !DILocation(line: 2415, column: 22, scope: !5153)
!5171 = !DILocation(line: 2416, column: 18, scope: !5153)
!5172 = !DILocation(line: 2416, column: 2, scope: !5153)
!5173 = !DILocation(line: 2418, column: 24, scope: !5153)
!5174 = !DILocation(line: 2418, column: 22, scope: !5153)
!5175 = !DILocation(line: 2418, column: 19, scope: !5153)
!5176 = !DILocation(line: 2418, column: 2, scope: !5153)
!5177 = !DILocation(line: 2418, column: 6, scope: !5153)
!5178 = !DILocation(line: 2418, column: 17, scope: !5153)
!5179 = !DILocation(line: 2419, column: 18, scope: !5153)
!5180 = !DILocation(line: 2419, column: 22, scope: !5153)
!5181 = !DILocation(line: 2419, column: 29, scope: !5153)
!5182 = !DILocation(line: 2419, column: 2, scope: !5153)
!5183 = !DILocation(line: 2421, column: 24, scope: !5153)
!5184 = !DILocation(line: 2421, column: 2, scope: !5153)
!5185 = !DILocation(line: 2422, column: 17, scope: !5153)
!5186 = !DILocation(line: 2422, column: 20, scope: !5153)
!5187 = !DILocation(line: 2422, column: 28, scope: !5153)
!5188 = !DILocation(line: 2422, column: 36, scope: !5153)
!5189 = !DILocation(line: 2422, column: 45, scope: !5153)
!5190 = !DILocation(line: 2422, column: 49, scope: !5153)
!5191 = !DILocation(line: 2422, column: 2, scope: !5153)
!5192 = !DILocation(line: 2424, column: 29, scope: !5153)
!5193 = !DILocation(line: 2424, column: 32, scope: !5153)
!5194 = !DILocation(line: 2424, column: 2, scope: !5153)
!5195 = !DILocation(line: 2426, column: 2, scope: !5153)
!5196 = distinct !DISubprogram(name: "sketch_draw_gesture_modal", scope: !3, file: !3, line: 2493, type: !4734, scopeLine: 2494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5197 = !DILocalVariable(name: "C", arg: 1, scope: !5196, file: !3, line: 2493, type: !228)
!5198 = !DILocation(line: 2493, column: 48, scope: !5196)
!5199 = !DILocalVariable(name: "op", arg: 2, scope: !5196, file: !3, line: 2493, type: !4736)
!5200 = !DILocation(line: 2493, column: 63, scope: !5196)
!5201 = !DILocalVariable(name: "event", arg: 3, scope: !5196, file: !3, line: 2493, type: !4738)
!5202 = !DILocation(line: 2493, column: 82, scope: !5196)
!5203 = !DILocalVariable(name: "sketch", scope: !5196, file: !3, line: 2495, type: !1920)
!5204 = !DILocation(line: 2495, column: 13, scope: !5196)
!5205 = !DILocation(line: 2495, column: 36, scope: !5196)
!5206 = !DILocation(line: 2495, column: 22, scope: !5196)
!5207 = !DILocation(line: 2496, column: 27, scope: !5196)
!5208 = !DILocation(line: 2496, column: 30, scope: !5196)
!5209 = !DILocation(line: 2496, column: 34, scope: !5196)
!5210 = !DILocation(line: 2496, column: 44, scope: !5196)
!5211 = !DILocation(line: 2496, column: 52, scope: !5196)
!5212 = !DILocation(line: 2496, column: 9, scope: !5196)
!5213 = !DILocation(line: 2496, column: 2, scope: !5196)
!5214 = distinct !DISubprogram(name: "sketch_draw_gesture_cancel", scope: !3, file: !3, line: 2404, type: !5106, scopeLine: 2405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5215 = !DILocalVariable(name: "C", arg: 1, scope: !5214, file: !3, line: 2404, type: !228)
!5216 = !DILocation(line: 2404, column: 50, scope: !5214)
!5217 = !DILocalVariable(name: "op", arg: 2, scope: !5214, file: !3, line: 2404, type: !4736)
!5218 = !DILocation(line: 2404, column: 65, scope: !5214)
!5219 = !DILocalVariable(name: "sketch", scope: !5214, file: !3, line: 2406, type: !1920)
!5220 = !DILocation(line: 2406, column: 13, scope: !5214)
!5221 = !DILocation(line: 2406, column: 36, scope: !5214)
!5222 = !DILocation(line: 2406, column: 22, scope: !5214)
!5223 = !DILocation(line: 2407, column: 18, scope: !5214)
!5224 = !DILocation(line: 2407, column: 2, scope: !5214)
!5225 = !DILocation(line: 2408, column: 2, scope: !5214)
!5226 = !DILocation(line: 2408, column: 12, scope: !5214)
!5227 = !DILocation(line: 2408, column: 16, scope: !5214)
!5228 = !DILocation(line: 2409, column: 1, scope: !5214)
!5229 = distinct !DISubprogram(name: "ED_operator_sketch_mode_gesture", scope: !3, file: !3, line: 2533, type: !226, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5230 = !DILocalVariable(name: "C", arg: 1, scope: !5229, file: !3, line: 2533, type: !228)
!5231 = !DILocation(line: 2533, column: 54, scope: !5229)
!5232 = !DILocalVariable(name: "ts", scope: !5229, file: !3, line: 2535, type: !1967)
!5233 = !DILocation(line: 2535, column: 16, scope: !5229)
!5234 = !DILocation(line: 2535, column: 44, scope: !5229)
!5235 = !DILocation(line: 2535, column: 21, scope: !5229)
!5236 = !DILocalVariable(name: "sketch", scope: !5229, file: !3, line: 2536, type: !1920)
!5237 = !DILocation(line: 2536, column: 13, scope: !5229)
!5238 = !DILocation(line: 2536, column: 36, scope: !5229)
!5239 = !DILocation(line: 2536, column: 22, scope: !5229)
!5240 = !DILocation(line: 2538, column: 6, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 2538, column: 6)
!5242 = !DILocation(line: 2538, column: 10, scope: !5241)
!5243 = !DILocation(line: 2538, column: 25, scope: !5241)
!5244 = !DILocation(line: 2538, column: 42, scope: !5241)
!5245 = !DILocation(line: 2539, column: 7, scope: !5241)
!5246 = !DILocation(line: 2539, column: 11, scope: !5241)
!5247 = !DILocation(line: 2539, column: 26, scope: !5241)
!5248 = !DILocation(line: 2539, column: 50, scope: !5241)
!5249 = !DILocation(line: 2539, column: 55, scope: !5241)
!5250 = !DILocation(line: 2540, column: 6, scope: !5241)
!5251 = !DILocation(line: 2540, column: 13, scope: !5241)
!5252 = !DILocation(line: 2540, column: 21, scope: !5241)
!5253 = !DILocation(line: 2541, column: 6, scope: !5241)
!5254 = !DILocation(line: 2541, column: 14, scope: !5241)
!5255 = !DILocation(line: 2541, column: 28, scope: !5241)
!5256 = !DILocation(line: 2538, column: 6, scope: !5229)
!5257 = !DILocation(line: 2543, column: 3, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 2542, column: 2)
!5259 = !DILocation(line: 2546, column: 3, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 2545, column: 7)
!5261 = !DILocation(line: 2548, column: 1, scope: !5229)
!5262 = distinct !DISubprogram(name: "headPoint", scope: !3, file: !3, line: 1253, type: !168, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5263 = !DILocalVariable(name: "arg", arg: 1, scope: !5262, file: !3, line: 1253, type: !87)
!5264 = !DILocation(line: 1253, column: 30, scope: !5262)
!5265 = !DILocalVariable(name: "iter", scope: !5262, file: !3, line: 1255, type: !161)
!5266 = !DILocation(line: 1255, column: 21, scope: !5262)
!5267 = !DILocation(line: 1255, column: 49, scope: !5262)
!5268 = !DILocation(line: 1255, column: 28, scope: !5262)
!5269 = !DILocalVariable(name: "result", scope: !5262, file: !3, line: 1256, type: !203)
!5270 = !DILocation(line: 1256, column: 12, scope: !5262)
!5271 = !DILocation(line: 1258, column: 13, scope: !5262)
!5272 = !DILocation(line: 1258, column: 19, scope: !5262)
!5273 = !DILocation(line: 1258, column: 27, scope: !5262)
!5274 = !DILocation(line: 1258, column: 34, scope: !5262)
!5275 = !DILocation(line: 1258, column: 40, scope: !5262)
!5276 = !DILocation(line: 1258, column: 48, scope: !5262)
!5277 = !DILocation(line: 1258, column: 54, scope: !5262)
!5278 = !DILocation(line: 1258, column: 46, scope: !5262)
!5279 = !DILocation(line: 1258, column: 9, scope: !5262)
!5280 = !DILocation(line: 1259, column: 12, scope: !5262)
!5281 = !DILocation(line: 1259, column: 20, scope: !5262)
!5282 = !DILocation(line: 1259, column: 2, scope: !5262)
!5283 = !DILocation(line: 1259, column: 8, scope: !5262)
!5284 = !DILocation(line: 1259, column: 10, scope: !5262)
!5285 = !DILocation(line: 1260, column: 13, scope: !5262)
!5286 = !DILocation(line: 1260, column: 21, scope: !5262)
!5287 = !DILocation(line: 1260, column: 2, scope: !5262)
!5288 = !DILocation(line: 1260, column: 8, scope: !5262)
!5289 = !DILocation(line: 1260, column: 11, scope: !5262)
!5290 = !DILocation(line: 1261, column: 15, scope: !5262)
!5291 = !DILocation(line: 1261, column: 23, scope: !5262)
!5292 = !DILocation(line: 1261, column: 2, scope: !5262)
!5293 = !DILocation(line: 1261, column: 8, scope: !5262)
!5294 = !DILocation(line: 1261, column: 13, scope: !5262)
!5295 = !DILocation(line: 1263, column: 9, scope: !5262)
!5296 = !DILocation(line: 1263, column: 2, scope: !5262)
!5297 = distinct !DISubprogram(name: "tailPoint", scope: !3, file: !3, line: 1266, type: !168, scopeLine: 1267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5298 = !DILocalVariable(name: "arg", arg: 1, scope: !5297, file: !3, line: 1266, type: !87)
!5299 = !DILocation(line: 1266, column: 30, scope: !5297)
!5300 = !DILocalVariable(name: "iter", scope: !5297, file: !3, line: 1268, type: !161)
!5301 = !DILocation(line: 1268, column: 21, scope: !5297)
!5302 = !DILocation(line: 1268, column: 49, scope: !5297)
!5303 = !DILocation(line: 1268, column: 28, scope: !5297)
!5304 = !DILocalVariable(name: "result", scope: !5297, file: !3, line: 1269, type: !203)
!5305 = !DILocation(line: 1269, column: 12, scope: !5297)
!5306 = !DILocation(line: 1271, column: 13, scope: !5297)
!5307 = !DILocation(line: 1271, column: 19, scope: !5297)
!5308 = !DILocation(line: 1271, column: 27, scope: !5297)
!5309 = !DILocation(line: 1271, column: 34, scope: !5297)
!5310 = !DILocation(line: 1271, column: 40, scope: !5297)
!5311 = !DILocation(line: 1271, column: 46, scope: !5297)
!5312 = !DILocation(line: 1271, column: 52, scope: !5297)
!5313 = !DILocation(line: 1271, column: 44, scope: !5297)
!5314 = !DILocation(line: 1271, column: 9, scope: !5297)
!5315 = !DILocation(line: 1272, column: 12, scope: !5297)
!5316 = !DILocation(line: 1272, column: 20, scope: !5297)
!5317 = !DILocation(line: 1272, column: 2, scope: !5297)
!5318 = !DILocation(line: 1272, column: 8, scope: !5297)
!5319 = !DILocation(line: 1272, column: 10, scope: !5297)
!5320 = !DILocation(line: 1273, column: 13, scope: !5297)
!5321 = !DILocation(line: 1273, column: 21, scope: !5297)
!5322 = !DILocation(line: 1273, column: 2, scope: !5297)
!5323 = !DILocation(line: 1273, column: 8, scope: !5297)
!5324 = !DILocation(line: 1273, column: 11, scope: !5297)
!5325 = !DILocation(line: 1274, column: 15, scope: !5297)
!5326 = !DILocation(line: 1274, column: 23, scope: !5297)
!5327 = !DILocation(line: 1274, column: 2, scope: !5297)
!5328 = !DILocation(line: 1274, column: 8, scope: !5297)
!5329 = !DILocation(line: 1274, column: 13, scope: !5297)
!5330 = !DILocation(line: 1276, column: 9, scope: !5297)
!5331 = !DILocation(line: 1276, column: 2, scope: !5297)
!5332 = distinct !DISubprogram(name: "peekPoint", scope: !3, file: !3, line: 1307, type: !175, scopeLine: 1308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5333 = !DILocalVariable(name: "arg", arg: 1, scope: !5332, file: !3, line: 1307, type: !87)
!5334 = !DILocation(line: 1307, column: 30, scope: !5332)
!5335 = !DILocalVariable(name: "n", arg: 2, scope: !5332, file: !3, line: 1307, type: !91)
!5336 = !DILocation(line: 1307, column: 39, scope: !5332)
!5337 = !DILocalVariable(name: "iter", scope: !5332, file: !3, line: 1309, type: !161)
!5338 = !DILocation(line: 1309, column: 21, scope: !5332)
!5339 = !DILocation(line: 1309, column: 49, scope: !5332)
!5340 = !DILocation(line: 1309, column: 28, scope: !5332)
!5341 = !DILocalVariable(name: "result", scope: !5332, file: !3, line: 1310, type: !203)
!5342 = !DILocation(line: 1310, column: 12, scope: !5332)
!5343 = !DILocalVariable(name: "index", scope: !5332, file: !3, line: 1311, type: !91)
!5344 = !DILocation(line: 1311, column: 6, scope: !5332)
!5345 = !DILocation(line: 1311, column: 14, scope: !5332)
!5346 = !DILocation(line: 1311, column: 20, scope: !5332)
!5347 = !DILocation(line: 1311, column: 28, scope: !5332)
!5348 = !DILocation(line: 1311, column: 26, scope: !5332)
!5349 = !DILocation(line: 1314, column: 6, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5332, file: !3, line: 1314, column: 6)
!5351 = !DILocation(line: 1314, column: 14, scope: !5350)
!5352 = !DILocation(line: 1314, column: 20, scope: !5350)
!5353 = !DILocation(line: 1314, column: 12, scope: !5350)
!5354 = !DILocation(line: 1314, column: 6, scope: !5332)
!5355 = !DILocation(line: 1315, column: 30, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5350, file: !3, line: 1314, column: 28)
!5357 = !DILocation(line: 1315, column: 36, scope: !5356)
!5358 = !DILocation(line: 1315, column: 12, scope: !5356)
!5359 = !DILocation(line: 1315, column: 10, scope: !5356)
!5360 = !DILocation(line: 1316, column: 2, scope: !5356)
!5361 = !DILocation(line: 1318, column: 9, scope: !5332)
!5362 = !DILocation(line: 1318, column: 2, scope: !5332)
!5363 = distinct !DISubprogram(name: "nextPoint", scope: !3, file: !3, line: 1279, type: !168, scopeLine: 1280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5364 = !DILocalVariable(name: "arg", arg: 1, scope: !5363, file: !3, line: 1279, type: !87)
!5365 = !DILocation(line: 1279, column: 30, scope: !5363)
!5366 = !DILocalVariable(name: "iter", scope: !5363, file: !3, line: 1281, type: !161)
!5367 = !DILocation(line: 1281, column: 21, scope: !5363)
!5368 = !DILocation(line: 1281, column: 49, scope: !5363)
!5369 = !DILocation(line: 1281, column: 28, scope: !5363)
!5370 = !DILocalVariable(name: "result", scope: !5363, file: !3, line: 1282, type: !203)
!5371 = !DILocation(line: 1282, column: 12, scope: !5363)
!5372 = !DILocation(line: 1284, column: 2, scope: !5363)
!5373 = !DILocation(line: 1284, column: 8, scope: !5363)
!5374 = !DILocation(line: 1284, column: 13, scope: !5363)
!5375 = !DILocation(line: 1285, column: 6, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 1285, column: 6)
!5377 = !DILocation(line: 1285, column: 12, scope: !5376)
!5378 = !DILocation(line: 1285, column: 20, scope: !5376)
!5379 = !DILocation(line: 1285, column: 26, scope: !5376)
!5380 = !DILocation(line: 1285, column: 18, scope: !5376)
!5381 = !DILocation(line: 1285, column: 6, scope: !5363)
!5382 = !DILocation(line: 1286, column: 30, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 1285, column: 34)
!5384 = !DILocation(line: 1286, column: 36, scope: !5383)
!5385 = !DILocation(line: 1286, column: 42, scope: !5383)
!5386 = !DILocation(line: 1286, column: 12, scope: !5383)
!5387 = !DILocation(line: 1286, column: 10, scope: !5383)
!5388 = !DILocation(line: 1287, column: 2, scope: !5383)
!5389 = !DILocation(line: 1289, column: 9, scope: !5363)
!5390 = !DILocation(line: 1289, column: 2, scope: !5363)
!5391 = distinct !DISubprogram(name: "nextNPoint", scope: !3, file: !3, line: 1292, type: !175, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5392 = !DILocalVariable(name: "arg", arg: 1, scope: !5391, file: !3, line: 1292, type: !87)
!5393 = !DILocation(line: 1292, column: 31, scope: !5391)
!5394 = !DILocalVariable(name: "n", arg: 2, scope: !5391, file: !3, line: 1292, type: !91)
!5395 = !DILocation(line: 1292, column: 40, scope: !5391)
!5396 = !DILocalVariable(name: "iter", scope: !5391, file: !3, line: 1294, type: !161)
!5397 = !DILocation(line: 1294, column: 21, scope: !5391)
!5398 = !DILocation(line: 1294, column: 49, scope: !5391)
!5399 = !DILocation(line: 1294, column: 28, scope: !5391)
!5400 = !DILocalVariable(name: "result", scope: !5391, file: !3, line: 1295, type: !203)
!5401 = !DILocation(line: 1295, column: 12, scope: !5391)
!5402 = !DILocation(line: 1297, column: 17, scope: !5391)
!5403 = !DILocation(line: 1297, column: 2, scope: !5391)
!5404 = !DILocation(line: 1297, column: 8, scope: !5391)
!5405 = !DILocation(line: 1297, column: 14, scope: !5391)
!5406 = !DILocation(line: 1300, column: 6, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 1300, column: 6)
!5408 = !DILocation(line: 1300, column: 12, scope: !5407)
!5409 = !DILocation(line: 1300, column: 20, scope: !5407)
!5410 = !DILocation(line: 1300, column: 26, scope: !5407)
!5411 = !DILocation(line: 1300, column: 18, scope: !5407)
!5412 = !DILocation(line: 1300, column: 6, scope: !5391)
!5413 = !DILocation(line: 1301, column: 30, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5407, file: !3, line: 1300, column: 34)
!5415 = !DILocation(line: 1301, column: 36, scope: !5414)
!5416 = !DILocation(line: 1301, column: 42, scope: !5414)
!5417 = !DILocation(line: 1301, column: 12, scope: !5414)
!5418 = !DILocation(line: 1301, column: 10, scope: !5414)
!5419 = !DILocation(line: 1302, column: 2, scope: !5414)
!5420 = !DILocation(line: 1304, column: 9, scope: !5391)
!5421 = !DILocation(line: 1304, column: 2, scope: !5391)
!5422 = distinct !DISubprogram(name: "previousPoint", scope: !3, file: !3, line: 1321, type: !168, scopeLine: 1322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5423 = !DILocalVariable(name: "arg", arg: 1, scope: !5422, file: !3, line: 1321, type: !87)
!5424 = !DILocation(line: 1321, column: 34, scope: !5422)
!5425 = !DILocalVariable(name: "iter", scope: !5422, file: !3, line: 1323, type: !161)
!5426 = !DILocation(line: 1323, column: 21, scope: !5422)
!5427 = !DILocation(line: 1323, column: 49, scope: !5422)
!5428 = !DILocation(line: 1323, column: 28, scope: !5422)
!5429 = !DILocalVariable(name: "result", scope: !5422, file: !3, line: 1324, type: !203)
!5430 = !DILocation(line: 1324, column: 12, scope: !5422)
!5431 = !DILocation(line: 1326, column: 6, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 1326, column: 6)
!5433 = !DILocation(line: 1326, column: 12, scope: !5432)
!5434 = !DILocation(line: 1326, column: 18, scope: !5432)
!5435 = !DILocation(line: 1326, column: 6, scope: !5422)
!5436 = !DILocation(line: 1327, column: 3, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 1326, column: 23)
!5438 = !DILocation(line: 1327, column: 9, scope: !5437)
!5439 = !DILocation(line: 1327, column: 14, scope: !5437)
!5440 = !DILocation(line: 1328, column: 30, scope: !5437)
!5441 = !DILocation(line: 1328, column: 36, scope: !5437)
!5442 = !DILocation(line: 1328, column: 42, scope: !5437)
!5443 = !DILocation(line: 1328, column: 12, scope: !5437)
!5444 = !DILocation(line: 1328, column: 10, scope: !5437)
!5445 = !DILocation(line: 1329, column: 2, scope: !5437)
!5446 = !DILocation(line: 1331, column: 9, scope: !5422)
!5447 = !DILocation(line: 1331, column: 2, scope: !5422)
!5448 = distinct !DISubprogram(name: "iteratorStopped", scope: !3, file: !3, line: 1334, type: !186, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5449 = !DILocalVariable(name: "arg", arg: 1, scope: !5448, file: !3, line: 1334, type: !87)
!5450 = !DILocation(line: 1334, column: 34, scope: !5448)
!5451 = !DILocalVariable(name: "iter", scope: !5448, file: !3, line: 1336, type: !161)
!5452 = !DILocation(line: 1336, column: 21, scope: !5448)
!5453 = !DILocation(line: 1336, column: 49, scope: !5448)
!5454 = !DILocation(line: 1336, column: 28, scope: !5448)
!5455 = !DILocation(line: 1338, column: 6, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 1338, column: 6)
!5457 = !DILocation(line: 1338, column: 12, scope: !5456)
!5458 = !DILocation(line: 1338, column: 21, scope: !5456)
!5459 = !DILocation(line: 1338, column: 27, scope: !5456)
!5460 = !DILocation(line: 1338, column: 18, scope: !5456)
!5461 = !DILocation(line: 1338, column: 6, scope: !5448)
!5462 = !DILocation(line: 1339, column: 3, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 1338, column: 35)
!5464 = !DILocation(line: 1342, column: 3, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 1341, column: 7)
!5466 = !DILocation(line: 1344, column: 1, scope: !5448)
!5467 = distinct !DISubprogram(name: "setIteratorValues", scope: !3, file: !3, line: 1210, type: !5468, scopeLine: 1211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5468 = !DISubroutineType(types: !5469)
!5469 = !{!203, !161, !91}
!5470 = !DILocalVariable(name: "iter", arg: 1, scope: !5467, file: !3, line: 1210, type: !161)
!5471 = !DILocation(line: 1210, column: 55, scope: !5467)
!5472 = !DILocalVariable(name: "index", arg: 2, scope: !5467, file: !3, line: 1210, type: !91)
!5473 = !DILocation(line: 1210, column: 65, scope: !5467)
!5474 = !DILocalVariable(name: "pt", scope: !5467, file: !3, line: 1212, type: !203)
!5475 = !DILocation(line: 1212, column: 12, scope: !5467)
!5476 = !DILocation(line: 1214, column: 6, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 1214, column: 6)
!5478 = !DILocation(line: 1214, column: 12, scope: !5477)
!5479 = !DILocation(line: 1214, column: 17, scope: !5477)
!5480 = !DILocation(line: 1214, column: 20, scope: !5477)
!5481 = !DILocation(line: 1214, column: 28, scope: !5477)
!5482 = !DILocation(line: 1214, column: 34, scope: !5477)
!5483 = !DILocation(line: 1214, column: 26, scope: !5477)
!5484 = !DILocation(line: 1214, column: 6, scope: !5467)
!5485 = !DILocation(line: 1215, column: 10, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5477, file: !3, line: 1214, column: 42)
!5487 = !DILocation(line: 1215, column: 16, scope: !5486)
!5488 = !DILocation(line: 1215, column: 24, scope: !5486)
!5489 = !DILocation(line: 1215, column: 31, scope: !5486)
!5490 = !DILocation(line: 1215, column: 37, scope: !5486)
!5491 = !DILocation(line: 1215, column: 46, scope: !5486)
!5492 = !DILocation(line: 1215, column: 52, scope: !5486)
!5493 = !DILocation(line: 1215, column: 61, scope: !5486)
!5494 = !DILocation(line: 1215, column: 59, scope: !5486)
!5495 = !DILocation(line: 1215, column: 43, scope: !5486)
!5496 = !DILocation(line: 1215, column: 6, scope: !5486)
!5497 = !DILocation(line: 1216, column: 13, scope: !5486)
!5498 = !DILocation(line: 1216, column: 17, scope: !5486)
!5499 = !DILocation(line: 1216, column: 3, scope: !5486)
!5500 = !DILocation(line: 1216, column: 9, scope: !5486)
!5501 = !DILocation(line: 1216, column: 11, scope: !5486)
!5502 = !DILocation(line: 1217, column: 14, scope: !5486)
!5503 = !DILocation(line: 1217, column: 18, scope: !5486)
!5504 = !DILocation(line: 1217, column: 3, scope: !5486)
!5505 = !DILocation(line: 1217, column: 9, scope: !5486)
!5506 = !DILocation(line: 1217, column: 12, scope: !5486)
!5507 = !DILocation(line: 1218, column: 16, scope: !5486)
!5508 = !DILocation(line: 1218, column: 20, scope: !5486)
!5509 = !DILocation(line: 1218, column: 3, scope: !5486)
!5510 = !DILocation(line: 1218, column: 9, scope: !5486)
!5511 = !DILocation(line: 1218, column: 14, scope: !5486)
!5512 = !DILocation(line: 1219, column: 2, scope: !5486)
!5513 = !DILocation(line: 1221, column: 3, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5477, file: !3, line: 1220, column: 7)
!5515 = !DILocation(line: 1221, column: 9, scope: !5514)
!5516 = !DILocation(line: 1221, column: 11, scope: !5514)
!5517 = !DILocation(line: 1222, column: 3, scope: !5514)
!5518 = !DILocation(line: 1222, column: 9, scope: !5514)
!5519 = !DILocation(line: 1222, column: 12, scope: !5514)
!5520 = !DILocation(line: 1223, column: 3, scope: !5514)
!5521 = !DILocation(line: 1223, column: 9, scope: !5514)
!5522 = !DILocation(line: 1223, column: 14, scope: !5514)
!5523 = !DILocation(line: 1226, column: 9, scope: !5467)
!5524 = !DILocation(line: 1226, column: 2, scope: !5467)
!5525 = distinct !DISubprogram(name: "sk_retargetStroke", scope: !3, file: !3, line: 396, type: !5526, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5526 = !DISubroutineType(types: !5527)
!5527 = !{null, !228, !195}
!5528 = !DILocalVariable(name: "C", arg: 1, scope: !5525, file: !3, line: 396, type: !228)
!5529 = !DILocation(line: 396, column: 41, scope: !5525)
!5530 = !DILocalVariable(name: "stk", arg: 2, scope: !5525, file: !3, line: 396, type: !195)
!5531 = !DILocation(line: 396, column: 55, scope: !5525)
!5532 = !DILocalVariable(name: "ts", scope: !5525, file: !3, line: 398, type: !1967)
!5533 = !DILocation(line: 398, column: 16, scope: !5525)
!5534 = !DILocation(line: 398, column: 44, scope: !5525)
!5535 = !DILocation(line: 398, column: 21, scope: !5525)
!5536 = !DILocalVariable(name: "obedit", scope: !5525, file: !3, line: 399, type: !1955)
!5537 = !DILocation(line: 399, column: 10, scope: !5525)
!5538 = !DILocation(line: 399, column: 40, scope: !5525)
!5539 = !DILocation(line: 399, column: 19, scope: !5525)
!5540 = !DILocalVariable(name: "imat", scope: !5525, file: !3, line: 400, type: !585)
!5541 = !DILocation(line: 400, column: 8, scope: !5525)
!5542 = !DILocalVariable(name: "tmat", scope: !5525, file: !3, line: 401, type: !2208)
!5543 = !DILocation(line: 401, column: 8, scope: !5525)
!5544 = !DILocalVariable(name: "arc", scope: !5525, file: !3, line: 402, type: !5545)
!5545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5546, size: 64)
!5546 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReebArc", file: !300, line: 120, baseType: !311)
!5547 = !DILocation(line: 402, column: 11, scope: !5525)
!5548 = !DILocalVariable(name: "rg", scope: !5525, file: !3, line: 403, type: !267)
!5549 = !DILocation(line: 403, column: 12, scope: !5525)
!5550 = !DILocation(line: 405, column: 15, scope: !5525)
!5551 = !DILocation(line: 405, column: 21, scope: !5525)
!5552 = !DILocation(line: 405, column: 29, scope: !5525)
!5553 = !DILocation(line: 405, column: 2, scope: !5525)
!5554 = !DILocation(line: 407, column: 13, scope: !5525)
!5555 = !DILocation(line: 407, column: 19, scope: !5525)
!5556 = !DILocation(line: 407, column: 27, scope: !5525)
!5557 = !DILocation(line: 407, column: 2, scope: !5525)
!5558 = !DILocation(line: 408, column: 15, scope: !5525)
!5559 = !DILocation(line: 408, column: 2, scope: !5525)
!5560 = !DILocation(line: 410, column: 23, scope: !5525)
!5561 = !DILocation(line: 410, column: 28, scope: !5525)
!5562 = !DILocation(line: 410, column: 34, scope: !5525)
!5563 = !DILocation(line: 410, column: 8, scope: !5525)
!5564 = !DILocation(line: 410, column: 6, scope: !5525)
!5565 = !DILocation(line: 412, column: 14, scope: !5525)
!5566 = !DILocation(line: 412, column: 17, scope: !5525)
!5567 = !DILocation(line: 412, column: 2, scope: !5525)
!5568 = !DILocation(line: 414, column: 28, scope: !5525)
!5569 = !DILocation(line: 414, column: 31, scope: !5525)
!5570 = !DILocation(line: 414, column: 35, scope: !5525)
!5571 = !DILocation(line: 414, column: 7, scope: !5525)
!5572 = !DILocation(line: 414, column: 5, scope: !5525)
!5573 = !DILocation(line: 416, column: 18, scope: !5525)
!5574 = !DILocation(line: 416, column: 21, scope: !5525)
!5575 = !DILocation(line: 416, column: 26, scope: !5525)
!5576 = !DILocation(line: 416, column: 2, scope: !5525)
!5577 = !DILocation(line: 418, column: 14, scope: !5525)
!5578 = !DILocation(line: 418, column: 2, scope: !5525)
!5579 = !DILocation(line: 420, column: 2, scope: !5525)
!5580 = !DILocation(line: 420, column: 12, scope: !5525)
!5581 = !DILocation(line: 420, column: 17, scope: !5525)
!5582 = !DILocation(line: 421, column: 2, scope: !5525)
!5583 = !DILocation(line: 421, column: 12, scope: !5525)
!5584 = !DILocation(line: 421, column: 17, scope: !5525)
!5585 = !DILocation(line: 422, column: 23, scope: !5525)
!5586 = !DILocation(line: 422, column: 15, scope: !5525)
!5587 = !DILocation(line: 422, column: 2, scope: !5525)
!5588 = !DILocation(line: 423, column: 1, scope: !5525)
!5589 = distinct !DISubprogram(name: "sk_convertStroke", scope: !3, file: !3, line: 1346, type: !5526, scopeLine: 1347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5590 = !DILocalVariable(name: "C", arg: 1, scope: !5589, file: !3, line: 1346, type: !228)
!5591 = !DILocation(line: 1346, column: 40, scope: !5589)
!5592 = !DILocalVariable(name: "stk", arg: 2, scope: !5589, file: !3, line: 1346, type: !195)
!5593 = !DILocation(line: 1346, column: 54, scope: !5589)
!5594 = !DILocalVariable(name: "obedit", scope: !5589, file: !3, line: 1348, type: !1955)
!5595 = !DILocation(line: 1348, column: 10, scope: !5589)
!5596 = !DILocation(line: 1348, column: 40, scope: !5589)
!5597 = !DILocation(line: 1348, column: 19, scope: !5589)
!5598 = !DILocalVariable(name: "ts", scope: !5589, file: !3, line: 1349, type: !1967)
!5599 = !DILocation(line: 1349, column: 16, scope: !5589)
!5600 = !DILocation(line: 1349, column: 44, scope: !5589)
!5601 = !DILocation(line: 1349, column: 21, scope: !5589)
!5602 = !DILocalVariable(name: "arm", scope: !5589, file: !3, line: 1350, type: !2183)
!5603 = !DILocation(line: 1350, column: 13, scope: !5589)
!5604 = !DILocation(line: 1350, column: 19, scope: !5589)
!5605 = !DILocation(line: 1350, column: 27, scope: !5589)
!5606 = !DILocalVariable(name: "head", scope: !5589, file: !3, line: 1351, type: !203)
!5607 = !DILocation(line: 1351, column: 12, scope: !5589)
!5608 = !DILocalVariable(name: "parent", scope: !5589, file: !3, line: 1352, type: !5609)
!5609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5610, size: 64)
!5610 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditBone", file: !2232, line: 86, baseType: !2231)
!5611 = !DILocation(line: 1352, column: 12, scope: !5589)
!5612 = !DILocalVariable(name: "invmat", scope: !5589, file: !3, line: 1353, type: !585)
!5613 = !DILocation(line: 1353, column: 8, scope: !5589)
!5614 = !DILocalVariable(name: "tmat", scope: !5589, file: !3, line: 1354, type: !2208)
!5615 = !DILocation(line: 1354, column: 8, scope: !5589)
!5616 = !DILocalVariable(name: "head_index", scope: !5589, file: !3, line: 1355, type: !91)
!5617 = !DILocation(line: 1355, column: 6, scope: !5589)
!5618 = !DILocalVariable(name: "i", scope: !5589, file: !3, line: 1356, type: !91)
!5619 = !DILocation(line: 1356, column: 6, scope: !5589)
!5620 = !DILocation(line: 1358, column: 7, scope: !5589)
!5621 = !DILocation(line: 1360, column: 15, scope: !5589)
!5622 = !DILocation(line: 1360, column: 23, scope: !5589)
!5623 = !DILocation(line: 1360, column: 31, scope: !5589)
!5624 = !DILocation(line: 1360, column: 2, scope: !5589)
!5625 = !DILocation(line: 1362, column: 13, scope: !5589)
!5626 = !DILocation(line: 1362, column: 19, scope: !5589)
!5627 = !DILocation(line: 1362, column: 27, scope: !5589)
!5628 = !DILocation(line: 1362, column: 2, scope: !5589)
!5629 = !DILocation(line: 1363, column: 15, scope: !5589)
!5630 = !DILocation(line: 1363, column: 2, scope: !5589)
!5631 = !DILocation(line: 1365, column: 9, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 1365, column: 2)
!5633 = !DILocation(line: 1365, column: 7, scope: !5632)
!5634 = !DILocation(line: 1365, column: 14, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 1365, column: 2)
!5636 = !DILocation(line: 1365, column: 18, scope: !5635)
!5637 = !DILocation(line: 1365, column: 23, scope: !5635)
!5638 = !DILocation(line: 1365, column: 16, scope: !5635)
!5639 = !DILocation(line: 1365, column: 2, scope: !5632)
!5640 = !DILocalVariable(name: "pt", scope: !5641, file: !3, line: 1366, type: !203)
!5641 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 1365, column: 39)
!5642 = !DILocation(line: 1366, column: 13, scope: !5641)
!5643 = !DILocation(line: 1366, column: 18, scope: !5641)
!5644 = !DILocation(line: 1366, column: 23, scope: !5641)
!5645 = !DILocation(line: 1366, column: 32, scope: !5641)
!5646 = !DILocation(line: 1366, column: 30, scope: !5641)
!5647 = !DILocation(line: 1368, column: 7, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 1368, column: 7)
!5649 = !DILocation(line: 1368, column: 11, scope: !5648)
!5650 = !DILocation(line: 1368, column: 16, scope: !5648)
!5651 = !DILocation(line: 1368, column: 7, scope: !5641)
!5652 = !DILocation(line: 1369, column: 8, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 1369, column: 8)
!5654 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 1368, column: 29)
!5655 = !DILocation(line: 1369, column: 13, scope: !5653)
!5656 = !DILocation(line: 1369, column: 8, scope: !5654)
!5657 = !DILocation(line: 1370, column: 18, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 1369, column: 22)
!5659 = !DILocation(line: 1370, column: 16, scope: !5658)
!5660 = !DILocation(line: 1371, column: 12, scope: !5658)
!5661 = !DILocation(line: 1371, column: 10, scope: !5658)
!5662 = !DILocation(line: 1372, column: 4, scope: !5658)
!5663 = !DILocalVariable(name: "bone", scope: !5664, file: !3, line: 1374, type: !5609)
!5664 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 1373, column: 9)
!5665 = !DILocation(line: 1374, column: 15, scope: !5664)
!5666 = !DILocalVariable(name: "new_parent", scope: !5664, file: !3, line: 1375, type: !5609)
!5667 = !DILocation(line: 1375, column: 15, scope: !5664)
!5668 = !DILocation(line: 1377, column: 9, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 1377, column: 9)
!5670 = !DILocation(line: 1377, column: 13, scope: !5669)
!5671 = !DILocation(line: 1377, column: 11, scope: !5669)
!5672 = !DILocation(line: 1377, column: 24, scope: !5669)
!5673 = !DILocation(line: 1377, column: 9, scope: !5664)
!5674 = !DILocalVariable(name: "sk_iter", scope: !5675, file: !3, line: 1378, type: !162)
!5675 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 1377, column: 29)
!5676 = !DILocation(line: 1378, column: 24, scope: !5675)
!5677 = !DILocalVariable(name: "iter", scope: !5675, file: !3, line: 1379, type: !242)
!5678 = !DILocation(line: 1379, column: 20, scope: !5675)
!5679 = !DILocation(line: 1379, column: 27, scope: !5675)
!5680 = !DILocation(line: 1381, column: 25, scope: !5675)
!5681 = !DILocation(line: 1381, column: 31, scope: !5675)
!5682 = !DILocation(line: 1381, column: 36, scope: !5675)
!5683 = !DILocation(line: 1381, column: 48, scope: !5675)
!5684 = !DILocation(line: 1381, column: 6, scope: !5675)
!5685 = !DILocation(line: 1383, column: 10, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5675, file: !3, line: 1383, column: 10)
!5687 = !DILocation(line: 1383, column: 14, scope: !5686)
!5688 = !DILocation(line: 1383, column: 37, scope: !5686)
!5689 = !DILocation(line: 1383, column: 10, scope: !5675)
!5690 = !DILocation(line: 1384, column: 29, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5686, file: !3, line: 1383, column: 67)
!5692 = !DILocation(line: 1384, column: 33, scope: !5691)
!5693 = !DILocation(line: 1384, column: 38, scope: !5691)
!5694 = !DILocation(line: 1384, column: 43, scope: !5691)
!5695 = !DILocation(line: 1384, column: 49, scope: !5691)
!5696 = !DILocation(line: 1384, column: 55, scope: !5691)
!5697 = !DILocation(line: 1384, column: 63, scope: !5691)
!5698 = !DILocation(line: 1384, column: 14, scope: !5691)
!5699 = !DILocation(line: 1384, column: 12, scope: !5691)
!5700 = !DILocation(line: 1385, column: 6, scope: !5691)
!5701 = !DILocation(line: 1386, column: 15, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5686, file: !3, line: 1386, column: 15)
!5703 = !DILocation(line: 1386, column: 19, scope: !5702)
!5704 = !DILocation(line: 1386, column: 42, scope: !5702)
!5705 = !DILocation(line: 1386, column: 15, scope: !5686)
!5706 = !DILocation(line: 1387, column: 29, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 1386, column: 68)
!5708 = !DILocation(line: 1387, column: 33, scope: !5707)
!5709 = !DILocation(line: 1387, column: 38, scope: !5707)
!5710 = !DILocation(line: 1387, column: 43, scope: !5707)
!5711 = !DILocation(line: 1387, column: 49, scope: !5707)
!5712 = !DILocation(line: 1387, column: 55, scope: !5707)
!5713 = !DILocation(line: 1387, column: 63, scope: !5707)
!5714 = !DILocation(line: 1387, column: 14, scope: !5707)
!5715 = !DILocation(line: 1387, column: 12, scope: !5707)
!5716 = !DILocation(line: 1388, column: 6, scope: !5707)
!5717 = !DILocation(line: 1389, column: 15, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 1389, column: 15)
!5719 = !DILocation(line: 1389, column: 19, scope: !5718)
!5720 = !DILocation(line: 1389, column: 42, scope: !5718)
!5721 = !DILocation(line: 1389, column: 15, scope: !5702)
!5722 = !DILocation(line: 1390, column: 29, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5718, file: !3, line: 1389, column: 67)
!5724 = !DILocation(line: 1390, column: 33, scope: !5723)
!5725 = !DILocation(line: 1390, column: 38, scope: !5723)
!5726 = !DILocation(line: 1390, column: 43, scope: !5723)
!5727 = !DILocation(line: 1390, column: 49, scope: !5723)
!5728 = !DILocation(line: 1390, column: 55, scope: !5723)
!5729 = !DILocation(line: 1390, column: 63, scope: !5723)
!5730 = !DILocation(line: 1390, column: 14, scope: !5723)
!5731 = !DILocation(line: 1390, column: 12, scope: !5723)
!5732 = !DILocation(line: 1391, column: 6, scope: !5723)
!5733 = !DILocation(line: 1392, column: 5, scope: !5675)
!5734 = !DILocation(line: 1394, column: 9, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 1394, column: 9)
!5736 = !DILocation(line: 1394, column: 14, scope: !5735)
!5737 = !DILocation(line: 1394, column: 9, scope: !5664)
!5738 = !DILocation(line: 1395, column: 39, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 1394, column: 23)
!5740 = !DILocation(line: 1395, column: 13, scope: !5739)
!5741 = !DILocation(line: 1395, column: 11, scope: !5739)
!5742 = !DILocation(line: 1397, column: 17, scope: !5739)
!5743 = !DILocation(line: 1397, column: 23, scope: !5739)
!5744 = !DILocation(line: 1397, column: 29, scope: !5739)
!5745 = !DILocation(line: 1397, column: 35, scope: !5739)
!5746 = !DILocation(line: 1397, column: 6, scope: !5739)
!5747 = !DILocation(line: 1398, column: 17, scope: !5739)
!5748 = !DILocation(line: 1398, column: 23, scope: !5739)
!5749 = !DILocation(line: 1398, column: 29, scope: !5739)
!5750 = !DILocation(line: 1398, column: 33, scope: !5739)
!5751 = !DILocation(line: 1398, column: 6, scope: !5739)
!5752 = !DILocation(line: 1400, column: 16, scope: !5739)
!5753 = !DILocation(line: 1400, column: 24, scope: !5739)
!5754 = !DILocation(line: 1400, column: 30, scope: !5739)
!5755 = !DILocation(line: 1400, column: 6, scope: !5739)
!5756 = !DILocation(line: 1401, column: 16, scope: !5739)
!5757 = !DILocation(line: 1401, column: 24, scope: !5739)
!5758 = !DILocation(line: 1401, column: 30, scope: !5739)
!5759 = !DILocation(line: 1401, column: 6, scope: !5739)
!5760 = !DILocation(line: 1402, column: 28, scope: !5739)
!5761 = !DILocation(line: 1402, column: 34, scope: !5739)
!5762 = !DILocation(line: 1402, column: 40, scope: !5739)
!5763 = !DILocation(line: 1402, column: 44, scope: !5739)
!5764 = !DILocation(line: 1402, column: 52, scope: !5739)
!5765 = !DILocation(line: 1402, column: 6, scope: !5739)
!5766 = !DILocation(line: 1403, column: 5, scope: !5739)
!5767 = !DILocation(line: 1405, column: 18, scope: !5664)
!5768 = !DILocation(line: 1405, column: 16, scope: !5664)
!5769 = !DILocation(line: 1406, column: 5, scope: !5664)
!5770 = !DILocation(line: 1406, column: 11, scope: !5664)
!5771 = !DILocation(line: 1406, column: 16, scope: !5664)
!5772 = !DILocation(line: 1409, column: 5, scope: !5664)
!5773 = !DILocation(line: 1409, column: 12, scope: !5664)
!5774 = !DILocation(line: 1409, column: 18, scope: !5664)
!5775 = !DILocation(line: 1409, column: 25, scope: !5664)
!5776 = !DILocation(line: 1410, column: 13, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 1409, column: 34)
!5778 = !DILocation(line: 1410, column: 19, scope: !5777)
!5779 = !DILocation(line: 1410, column: 11, scope: !5777)
!5780 = !DILocation(line: 1411, column: 6, scope: !5777)
!5781 = !DILocation(line: 1411, column: 12, scope: !5777)
!5782 = !DILocation(line: 1411, column: 17, scope: !5777)
!5783 = distinct !{!5783, !5772, !5784}
!5784 = !DILocation(line: 1412, column: 5, scope: !5664)
!5785 = !DILocation(line: 1414, column: 9, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 1414, column: 9)
!5787 = !DILocation(line: 1414, column: 16, scope: !5786)
!5788 = !DILocation(line: 1414, column: 9, scope: !5664)
!5789 = !DILocation(line: 1415, column: 21, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5786, file: !3, line: 1414, column: 25)
!5791 = !DILocation(line: 1415, column: 6, scope: !5790)
!5792 = !DILocation(line: 1415, column: 12, scope: !5790)
!5793 = !DILocation(line: 1415, column: 19, scope: !5790)
!5794 = !DILocation(line: 1416, column: 6, scope: !5790)
!5795 = !DILocation(line: 1416, column: 12, scope: !5790)
!5796 = !DILocation(line: 1416, column: 17, scope: !5790)
!5797 = !DILocation(line: 1417, column: 5, scope: !5790)
!5798 = !DILocation(line: 1419, column: 14, scope: !5664)
!5799 = !DILocation(line: 1419, column: 12, scope: !5664)
!5800 = !DILocation(line: 1420, column: 18, scope: !5664)
!5801 = !DILocation(line: 1420, column: 16, scope: !5664)
!5802 = !DILocation(line: 1421, column: 12, scope: !5664)
!5803 = !DILocation(line: 1421, column: 10, scope: !5664)
!5804 = !DILocation(line: 1423, column: 3, scope: !5654)
!5805 = !DILocation(line: 1424, column: 2, scope: !5641)
!5806 = !DILocation(line: 1365, column: 35, scope: !5635)
!5807 = !DILocation(line: 1365, column: 2, scope: !5635)
!5808 = distinct !{!5808, !5639, !5809}
!5809 = !DILocation(line: 1424, column: 2, scope: !5632)
!5810 = !DILocation(line: 1425, column: 1, scope: !5589)
!5811 = distinct !DISubprogram(name: "sk_strokeToArc", scope: !3, file: !3, line: 373, type: !5812, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5812 = !DISubroutineType(types: !5813)
!5813 = !{!5545, !195, !5814, !5815}
!5814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!5815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64)
!5816 = !DILocalVariable(name: "stk", arg: 1, scope: !5811, file: !3, line: 373, type: !195)
!5817 = !DILocation(line: 373, column: 43, scope: !5811)
!5818 = !DILocalVariable(name: "imat", arg: 2, scope: !5811, file: !3, line: 373, type: !5814)
!5819 = !DILocation(line: 373, column: 54, scope: !5811)
!5820 = !DILocalVariable(name: "tmat", arg: 3, scope: !5811, file: !3, line: 373, type: !5815)
!5821 = !DILocation(line: 373, column: 72, scope: !5811)
!5822 = !DILocalVariable(name: "arc", scope: !5811, file: !3, line: 375, type: !5545)
!5823 = !DILocation(line: 375, column: 11, scope: !5811)
!5824 = !DILocalVariable(name: "i", scope: !5811, file: !3, line: 376, type: !91)
!5825 = !DILocation(line: 376, column: 6, scope: !5811)
!5826 = !DILocation(line: 378, column: 8, scope: !5811)
!5827 = !DILocation(line: 378, column: 6, scope: !5811)
!5828 = !DILocation(line: 379, column: 29, scope: !5811)
!5829 = !DILocation(line: 379, column: 34, scope: !5811)
!5830 = !DILocation(line: 379, column: 42, scope: !5811)
!5831 = !DILocation(line: 379, column: 48, scope: !5811)
!5832 = !DILocation(line: 379, column: 14, scope: !5811)
!5833 = !DILocation(line: 379, column: 2, scope: !5811)
!5834 = !DILocation(line: 379, column: 7, scope: !5811)
!5835 = !DILocation(line: 379, column: 12, scope: !5811)
!5836 = !DILocation(line: 380, column: 48, scope: !5811)
!5837 = !DILocation(line: 380, column: 29, scope: !5811)
!5838 = !DILocation(line: 380, column: 54, scope: !5811)
!5839 = !DILocation(line: 380, column: 60, scope: !5811)
!5840 = !DILocation(line: 380, column: 14, scope: !5811)
!5841 = !DILocation(line: 380, column: 2, scope: !5811)
!5842 = !DILocation(line: 380, column: 7, scope: !5811)
!5843 = !DILocation(line: 380, column: 12, scope: !5811)
!5844 = !DILocation(line: 382, column: 16, scope: !5811)
!5845 = !DILocation(line: 382, column: 21, scope: !5811)
!5846 = !DILocation(line: 382, column: 31, scope: !5811)
!5847 = !DILocation(line: 382, column: 2, scope: !5811)
!5848 = !DILocation(line: 382, column: 7, scope: !5811)
!5849 = !DILocation(line: 382, column: 14, scope: !5811)
!5850 = !DILocation(line: 383, column: 17, scope: !5811)
!5851 = !DILocation(line: 383, column: 51, scope: !5811)
!5852 = !DILocation(line: 383, column: 56, scope: !5811)
!5853 = !DILocation(line: 383, column: 49, scope: !5811)
!5854 = !DILocation(line: 383, column: 2, scope: !5811)
!5855 = !DILocation(line: 383, column: 7, scope: !5811)
!5856 = !DILocation(line: 383, column: 15, scope: !5811)
!5857 = !DILocation(line: 385, column: 9, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5811, file: !3, line: 385, column: 2)
!5859 = !DILocation(line: 385, column: 7, scope: !5858)
!5860 = !DILocation(line: 385, column: 14, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 385, column: 2)
!5862 = !DILocation(line: 385, column: 18, scope: !5861)
!5863 = !DILocation(line: 385, column: 23, scope: !5861)
!5864 = !DILocation(line: 385, column: 16, scope: !5861)
!5865 = !DILocation(line: 385, column: 2, scope: !5858)
!5866 = !DILocation(line: 386, column: 14, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 385, column: 36)
!5868 = !DILocation(line: 386, column: 19, scope: !5867)
!5869 = !DILocation(line: 386, column: 27, scope: !5867)
!5870 = !DILocation(line: 386, column: 30, scope: !5867)
!5871 = !DILocation(line: 386, column: 33, scope: !5867)
!5872 = !DILocation(line: 386, column: 38, scope: !5867)
!5873 = !DILocation(line: 386, column: 45, scope: !5867)
!5874 = !DILocation(line: 386, column: 47, scope: !5867)
!5875 = !DILocation(line: 386, column: 52, scope: !5867)
!5876 = !DILocation(line: 386, column: 3, scope: !5867)
!5877 = !DILocation(line: 387, column: 13, scope: !5867)
!5878 = !DILocation(line: 387, column: 19, scope: !5867)
!5879 = !DILocation(line: 387, column: 24, scope: !5867)
!5880 = !DILocation(line: 387, column: 32, scope: !5867)
!5881 = !DILocation(line: 387, column: 35, scope: !5867)
!5882 = !DILocation(line: 387, column: 3, scope: !5867)
!5883 = !DILocation(line: 389, column: 14, scope: !5867)
!5884 = !DILocation(line: 389, column: 19, scope: !5867)
!5885 = !DILocation(line: 389, column: 27, scope: !5867)
!5886 = !DILocation(line: 389, column: 30, scope: !5867)
!5887 = !DILocation(line: 389, column: 34, scope: !5867)
!5888 = !DILocation(line: 389, column: 39, scope: !5867)
!5889 = !DILocation(line: 389, column: 46, scope: !5867)
!5890 = !DILocation(line: 389, column: 48, scope: !5867)
!5891 = !DILocation(line: 389, column: 53, scope: !5867)
!5892 = !DILocation(line: 389, column: 3, scope: !5867)
!5893 = !DILocation(line: 390, column: 13, scope: !5867)
!5894 = !DILocation(line: 390, column: 19, scope: !5867)
!5895 = !DILocation(line: 390, column: 24, scope: !5867)
!5896 = !DILocation(line: 390, column: 32, scope: !5867)
!5897 = !DILocation(line: 390, column: 35, scope: !5867)
!5898 = !DILocation(line: 390, column: 3, scope: !5867)
!5899 = !DILocation(line: 391, column: 2, scope: !5867)
!5900 = !DILocation(line: 385, column: 32, scope: !5861)
!5901 = !DILocation(line: 385, column: 2, scope: !5861)
!5902 = distinct !{!5902, !5865, !5903}
!5903 = !DILocation(line: 391, column: 2, scope: !5858)
!5904 = !DILocation(line: 393, column: 9, scope: !5811)
!5905 = !DILocation(line: 393, column: 2, scope: !5811)
!5906 = distinct !DISubprogram(name: "sk_autoname", scope: !3, file: !3, line: 320, type: !5907, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!5907 = !DISubroutineType(types: !5908)
!5908 = !{null, !228, !5545}
!5909 = !DILocalVariable(name: "C", arg: 1, scope: !5906, file: !3, line: 320, type: !228)
!5910 = !DILocation(line: 320, column: 35, scope: !5906)
!5911 = !DILocalVariable(name: "arc", arg: 2, scope: !5906, file: !3, line: 320, type: !5545)
!5912 = !DILocation(line: 320, column: 47, scope: !5906)
!5913 = !DILocalVariable(name: "ts", scope: !5906, file: !3, line: 322, type: !1967)
!5914 = !DILocation(line: 322, column: 16, scope: !5906)
!5915 = !DILocation(line: 322, column: 44, scope: !5906)
!5916 = !DILocation(line: 322, column: 21, scope: !5906)
!5917 = !DILocation(line: 323, column: 6, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5906, file: !3, line: 323, column: 6)
!5919 = !DILocation(line: 323, column: 10, scope: !5918)
!5920 = !DILocation(line: 323, column: 33, scope: !5918)
!5921 = !DILocation(line: 323, column: 6, scope: !5906)
!5922 = !DILocation(line: 324, column: 7, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 324, column: 7)
!5924 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 323, column: 57)
!5925 = !DILocation(line: 324, column: 11, scope: !5923)
!5926 = !DILocation(line: 324, column: 7, scope: !5924)
!5927 = !DILocalVariable(name: "num", scope: !5928, file: !3, line: 325, type: !263)
!5928 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 324, column: 20)
!5929 = !DILocation(line: 325, column: 10, scope: !5928)
!5930 = !DILocation(line: 325, column: 16, scope: !5928)
!5931 = !DILocation(line: 325, column: 20, scope: !5928)
!5932 = !DILocalVariable(name: "i", scope: !5928, file: !3, line: 326, type: !91)
!5933 = !DILocation(line: 326, column: 8, scope: !5928)
!5934 = !DILocation(line: 326, column: 17, scope: !5928)
!5935 = !DILocation(line: 326, column: 12, scope: !5928)
!5936 = !DILocation(line: 327, column: 5, scope: !5928)
!5937 = !DILocation(line: 328, column: 17, scope: !5928)
!5938 = !DILocation(line: 328, column: 31, scope: !5928)
!5939 = !DILocation(line: 328, column: 4, scope: !5928)
!5940 = !DILocation(line: 329, column: 3, scope: !5928)
!5941 = !DILocalVariable(name: "side", scope: !5942, file: !3, line: 331, type: !263)
!5942 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 330, column: 8)
!5943 = !DILocation(line: 331, column: 10, scope: !5942)
!5944 = !DILocation(line: 331, column: 17, scope: !5942)
!5945 = !DILocation(line: 331, column: 21, scope: !5942)
!5946 = !DILocalVariable(name: "valid", scope: !5942, file: !3, line: 332, type: !91)
!5947 = !DILocation(line: 332, column: 8, scope: !5942)
!5948 = !DILocalVariable(name: "caps", scope: !5942, file: !3, line: 333, type: !91)
!5949 = !DILocation(line: 333, column: 8, scope: !5942)
!5950 = !DILocation(line: 335, column: 8, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 335, column: 8)
!5952 = !DILocation(line: 335, column: 16, scope: !5951)
!5953 = !DILocation(line: 335, column: 8, scope: !5942)
!5954 = !DILocation(line: 336, column: 11, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 335, column: 25)
!5956 = !DILocation(line: 337, column: 4, scope: !5955)
!5957 = !DILocation(line: 338, column: 20, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 338, column: 13)
!5959 = !DILocation(line: 338, column: 13, scope: !5958)
!5960 = !DILocation(line: 338, column: 31, scope: !5958)
!5961 = !DILocation(line: 338, column: 36, scope: !5958)
!5962 = !DILocation(line: 338, column: 46, scope: !5958)
!5963 = !DILocation(line: 338, column: 39, scope: !5958)
!5964 = !DILocation(line: 338, column: 57, scope: !5958)
!5965 = !DILocation(line: 338, column: 13, scope: !5951)
!5966 = !DILocation(line: 339, column: 11, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5958, file: !3, line: 338, column: 63)
!5968 = !DILocation(line: 340, column: 10, scope: !5967)
!5969 = !DILocation(line: 341, column: 4, scope: !5967)
!5970 = !DILocation(line: 342, column: 20, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5958, file: !3, line: 342, column: 13)
!5972 = !DILocation(line: 342, column: 13, scope: !5971)
!5973 = !DILocation(line: 342, column: 31, scope: !5971)
!5974 = !DILocation(line: 342, column: 36, scope: !5971)
!5975 = !DILocation(line: 342, column: 46, scope: !5971)
!5976 = !DILocation(line: 342, column: 39, scope: !5971)
!5977 = !DILocation(line: 342, column: 57, scope: !5971)
!5978 = !DILocation(line: 342, column: 13, scope: !5958)
!5979 = !DILocation(line: 343, column: 11, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5971, file: !3, line: 342, column: 63)
!5981 = !DILocation(line: 344, column: 10, scope: !5980)
!5982 = !DILocation(line: 345, column: 4, scope: !5980)
!5983 = !DILocation(line: 347, column: 8, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 347, column: 8)
!5985 = !DILocation(line: 347, column: 8, scope: !5942)
!5986 = !DILocation(line: 348, column: 9, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 348, column: 9)
!5988 = distinct !DILexicalBlock(scope: !5984, file: !3, line: 347, column: 15)
!5989 = !DILocation(line: 348, column: 14, scope: !5987)
!5990 = !DILocation(line: 348, column: 20, scope: !5987)
!5991 = !DILocation(line: 348, column: 25, scope: !5987)
!5992 = !DILocation(line: 348, column: 9, scope: !5988)
!5993 = !DILocation(line: 349, column: 19, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 348, column: 30)
!5995 = !DILocation(line: 349, column: 28, scope: !5994)
!5996 = !DILocation(line: 349, column: 6, scope: !5994)
!5997 = !DILocation(line: 350, column: 5, scope: !5994)
!5998 = !DILocation(line: 352, column: 19, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 351, column: 10)
!6000 = !DILocation(line: 352, column: 28, scope: !5999)
!6001 = !DILocation(line: 352, column: 6, scope: !5999)
!6002 = !DILocation(line: 354, column: 4, scope: !5988)
!6003 = !DILocation(line: 356, column: 2, scope: !5924)
!6004 = !DILocation(line: 357, column: 1, scope: !5906)
!6005 = distinct !DISubprogram(name: "sk_pointToNode", scope: !3, file: !3, line: 359, type: !6006, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6006 = !DISubroutineType(types: !6007)
!6007 = !{!298, !203, !5814, !5815}
!6008 = !DILocalVariable(name: "pt", arg: 1, scope: !6005, file: !3, line: 359, type: !203)
!6009 = !DILocation(line: 359, column: 43, scope: !6005)
!6010 = !DILocalVariable(name: "imat", arg: 2, scope: !6005, file: !3, line: 359, type: !5814)
!6011 = !DILocation(line: 359, column: 53, scope: !6005)
!6012 = !DILocalVariable(name: "tmat", arg: 3, scope: !6005, file: !3, line: 359, type: !5815)
!6013 = !DILocation(line: 359, column: 71, scope: !6005)
!6014 = !DILocalVariable(name: "node", scope: !6005, file: !3, line: 361, type: !298)
!6015 = !DILocation(line: 361, column: 12, scope: !6005)
!6016 = !DILocation(line: 363, column: 9, scope: !6005)
!6017 = !DILocation(line: 363, column: 7, scope: !6005)
!6018 = !DILocation(line: 364, column: 13, scope: !6005)
!6019 = !DILocation(line: 364, column: 19, scope: !6005)
!6020 = !DILocation(line: 364, column: 22, scope: !6005)
!6021 = !DILocation(line: 364, column: 26, scope: !6005)
!6022 = !DILocation(line: 364, column: 2, scope: !6005)
!6023 = !DILocation(line: 365, column: 12, scope: !6005)
!6024 = !DILocation(line: 365, column: 18, scope: !6005)
!6025 = !DILocation(line: 365, column: 24, scope: !6005)
!6026 = !DILocation(line: 365, column: 2, scope: !6005)
!6027 = !DILocation(line: 367, column: 13, scope: !6005)
!6028 = !DILocation(line: 367, column: 19, scope: !6005)
!6029 = !DILocation(line: 367, column: 23, scope: !6005)
!6030 = !DILocation(line: 367, column: 27, scope: !6005)
!6031 = !DILocation(line: 367, column: 2, scope: !6005)
!6032 = !DILocation(line: 368, column: 12, scope: !6005)
!6033 = !DILocation(line: 368, column: 18, scope: !6005)
!6034 = !DILocation(line: 368, column: 24, scope: !6005)
!6035 = !DILocation(line: 368, column: 2, scope: !6005)
!6036 = !DILocation(line: 370, column: 9, scope: !6005)
!6037 = !DILocation(line: 370, column: 2, scope: !6005)
!6038 = distinct !DISubprogram(name: "sk_drawStroke", scope: !3, file: !3, line: 490, type: !6039, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6039 = !DISubroutineType(types: !6040)
!6040 = !{null, !195, !91, !189, !91, !91}
!6041 = !DILocalVariable(name: "stk", arg: 1, scope: !6038, file: !3, line: 490, type: !195)
!6042 = !DILocation(line: 490, column: 38, scope: !6038)
!6043 = !DILocalVariable(name: "id", arg: 2, scope: !6038, file: !3, line: 490, type: !91)
!6044 = !DILocation(line: 490, column: 47, scope: !6038)
!6045 = !DILocalVariable(name: "color", arg: 3, scope: !6038, file: !3, line: 490, type: !189)
!6046 = !DILocation(line: 490, column: 57, scope: !6038)
!6047 = !DILocalVariable(name: "start", arg: 4, scope: !6038, file: !3, line: 490, type: !91)
!6048 = !DILocation(line: 490, column: 71, scope: !6038)
!6049 = !DILocalVariable(name: "end", arg: 5, scope: !6038, file: !3, line: 490, type: !91)
!6050 = !DILocation(line: 490, column: 82, scope: !6038)
!6051 = !DILocalVariable(name: "rgb", scope: !6038, file: !3, line: 492, type: !124)
!6052 = !DILocation(line: 492, column: 8, scope: !6038)
!6053 = !DILocalVariable(name: "i", scope: !6038, file: !3, line: 493, type: !91)
!6054 = !DILocation(line: 493, column: 6, scope: !6038)
!6055 = !DILocalVariable(name: "quad", scope: !6038, file: !3, line: 494, type: !4246)
!6056 = !DILocation(line: 494, column: 14, scope: !6038)
!6057 = !DILocation(line: 494, column: 21, scope: !6038)
!6058 = !DILocation(line: 495, column: 20, scope: !6038)
!6059 = !DILocation(line: 495, column: 2, scope: !6038)
!6060 = !DILocation(line: 497, column: 6, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 497, column: 6)
!6062 = !DILocation(line: 497, column: 9, scope: !6061)
!6063 = !DILocation(line: 497, column: 6, scope: !6038)
!6064 = !DILocation(line: 498, column: 22, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 497, column: 16)
!6066 = !DILocation(line: 498, column: 3, scope: !6065)
!6067 = !DILocation(line: 500, column: 10, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 500, column: 3)
!6069 = !DILocation(line: 500, column: 8, scope: !6068)
!6070 = !DILocation(line: 500, column: 15, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6068, file: !3, line: 500, column: 3)
!6072 = !DILocation(line: 500, column: 19, scope: !6071)
!6073 = !DILocation(line: 500, column: 24, scope: !6071)
!6074 = !DILocation(line: 500, column: 17, scope: !6071)
!6075 = !DILocation(line: 500, column: 3, scope: !6068)
!6076 = !DILocation(line: 501, column: 4, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 500, column: 40)
!6078 = !DILocation(line: 503, column: 17, scope: !6077)
!6079 = !DILocation(line: 503, column: 23, scope: !6077)
!6080 = !DILocation(line: 503, column: 28, scope: !6077)
!6081 = !DILocation(line: 503, column: 37, scope: !6077)
!6082 = !DILocation(line: 503, column: 35, scope: !6077)
!6083 = !DILocation(line: 503, column: 4, scope: !6077)
!6084 = !DILocation(line: 505, column: 8, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 505, column: 8)
!6086 = !DILocation(line: 505, column: 10, scope: !6085)
!6087 = !DILocation(line: 505, column: 8, scope: !6077)
!6088 = !DILocation(line: 506, column: 17, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6085, file: !3, line: 505, column: 15)
!6090 = !DILocation(line: 506, column: 23, scope: !6089)
!6091 = !DILocation(line: 506, column: 28, scope: !6089)
!6092 = !DILocation(line: 506, column: 37, scope: !6089)
!6093 = !DILocation(line: 506, column: 35, scope: !6089)
!6094 = !DILocation(line: 506, column: 39, scope: !6089)
!6095 = !DILocation(line: 506, column: 44, scope: !6089)
!6096 = !DILocation(line: 506, column: 49, scope: !6089)
!6097 = !DILocation(line: 506, column: 58, scope: !6089)
!6098 = !DILocation(line: 506, column: 56, scope: !6089)
!6099 = !DILocation(line: 506, column: 5, scope: !6089)
!6100 = !DILocation(line: 507, column: 4, scope: !6089)
!6101 = !DILocation(line: 509, column: 4, scope: !6077)
!6102 = !DILocation(line: 510, column: 3, scope: !6077)
!6103 = !DILocation(line: 500, column: 36, scope: !6071)
!6104 = !DILocation(line: 500, column: 3, scope: !6071)
!6105 = distinct !{!6105, !6075, !6106}
!6106 = !DILocation(line: 510, column: 3, scope: !6068)
!6107 = !DILocation(line: 512, column: 2, scope: !6065)
!6108 = !DILocalVariable(name: "d_rgb", scope: !6109, file: !3, line: 514, type: !124)
!6109 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 513, column: 7)
!6110 = !DILocation(line: 514, column: 9, scope: !6109)
!6111 = !DILocation(line: 516, column: 14, scope: !6109)
!6112 = !DILocation(line: 516, column: 19, scope: !6109)
!6113 = !DILocation(line: 516, column: 3, scope: !6109)
!6114 = !DILocation(line: 517, column: 13, scope: !6109)
!6115 = !DILocation(line: 517, column: 20, scope: !6109)
!6116 = !DILocation(line: 517, column: 3, scope: !6109)
!6117 = !DILocation(line: 518, column: 13, scope: !6109)
!6118 = !DILocation(line: 518, column: 34, scope: !6109)
!6119 = !DILocation(line: 518, column: 39, scope: !6109)
!6120 = !DILocation(line: 518, column: 27, scope: !6109)
!6121 = !DILocation(line: 518, column: 25, scope: !6109)
!6122 = !DILocation(line: 518, column: 3, scope: !6109)
!6123 = !DILocation(line: 520, column: 10, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 520, column: 3)
!6125 = !DILocation(line: 520, column: 8, scope: !6124)
!6126 = !DILocation(line: 520, column: 15, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 520, column: 3)
!6128 = !DILocation(line: 520, column: 19, scope: !6127)
!6129 = !DILocation(line: 520, column: 24, scope: !6127)
!6130 = !DILocation(line: 520, column: 17, scope: !6127)
!6131 = !DILocation(line: 520, column: 3, scope: !6124)
!6132 = !DILocalVariable(name: "pt", scope: !6133, file: !3, line: 521, type: !203)
!6133 = distinct !DILexicalBlock(scope: !6127, file: !3, line: 520, column: 40)
!6134 = !DILocation(line: 521, column: 14, scope: !6133)
!6135 = !DILocation(line: 521, column: 19, scope: !6133)
!6136 = !DILocation(line: 521, column: 24, scope: !6133)
!6137 = !DILocation(line: 521, column: 33, scope: !6133)
!6138 = !DILocation(line: 521, column: 31, scope: !6133)
!6139 = !DILocation(line: 523, column: 4, scope: !6133)
!6140 = !DILocation(line: 525, column: 8, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 525, column: 8)
!6142 = !DILocation(line: 525, column: 12, scope: !6141)
!6143 = !DILocation(line: 525, column: 17, scope: !6141)
!6144 = !DILocation(line: 525, column: 8, scope: !6133)
!6145 = !DILocation(line: 526, column: 5, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6141, file: !3, line: 525, column: 30)
!6147 = !DILocation(line: 527, column: 18, scope: !6146)
!6148 = !DILocation(line: 527, column: 24, scope: !6146)
!6149 = !DILocation(line: 527, column: 5, scope: !6146)
!6150 = !DILocation(line: 528, column: 19, scope: !6146)
!6151 = !DILocation(line: 528, column: 25, scope: !6146)
!6152 = !DILocation(line: 528, column: 5, scope: !6146)
!6153 = !DILocation(line: 529, column: 4, scope: !6146)
!6154 = !DILocation(line: 531, column: 8, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 531, column: 8)
!6156 = !DILocation(line: 531, column: 13, scope: !6155)
!6157 = !DILocation(line: 531, column: 10, scope: !6155)
!6158 = !DILocation(line: 531, column: 19, scope: !6155)
!6159 = !DILocation(line: 531, column: 22, scope: !6155)
!6160 = !DILocation(line: 531, column: 27, scope: !6155)
!6161 = !DILocation(line: 531, column: 24, scope: !6155)
!6162 = !DILocation(line: 531, column: 8, scope: !6133)
!6163 = !DILocation(line: 532, column: 5, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6155, file: !3, line: 531, column: 32)
!6165 = !DILocation(line: 533, column: 4, scope: !6164)
!6166 = !DILocation(line: 535, column: 16, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6155, file: !3, line: 534, column: 9)
!6168 = !DILocation(line: 535, column: 5, scope: !6167)
!6169 = !DILocation(line: 538, column: 8, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 538, column: 8)
!6171 = !DILocation(line: 538, column: 12, scope: !6170)
!6172 = !DILocation(line: 538, column: 17, scope: !6170)
!6173 = !DILocation(line: 538, column: 8, scope: !6133)
!6174 = !DILocation(line: 540, column: 18, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6170, file: !3, line: 538, column: 30)
!6176 = !DILocation(line: 540, column: 24, scope: !6175)
!6177 = !DILocation(line: 540, column: 5, scope: !6175)
!6178 = !DILocation(line: 541, column: 4, scope: !6175)
!6179 = !DILocation(line: 543, column: 8, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 543, column: 8)
!6181 = !DILocation(line: 543, column: 10, scope: !6180)
!6182 = !DILocation(line: 543, column: 8, scope: !6133)
!6183 = !DILocation(line: 544, column: 17, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6180, file: !3, line: 543, column: 15)
!6185 = !DILocation(line: 544, column: 23, scope: !6184)
!6186 = !DILocation(line: 544, column: 26, scope: !6184)
!6187 = !DILocation(line: 544, column: 31, scope: !6184)
!6188 = !DILocation(line: 544, column: 5, scope: !6184)
!6189 = !DILocation(line: 545, column: 4, scope: !6184)
!6190 = !DILocation(line: 547, column: 4, scope: !6133)
!6191 = !DILocation(line: 549, column: 14, scope: !6133)
!6192 = !DILocation(line: 549, column: 19, scope: !6133)
!6193 = !DILocation(line: 549, column: 4, scope: !6133)
!6194 = !DILocation(line: 550, column: 3, scope: !6133)
!6195 = !DILocation(line: 520, column: 36, scope: !6127)
!6196 = !DILocation(line: 520, column: 3, scope: !6127)
!6197 = distinct !{!6197, !6131, !6198}
!6198 = !DILocation(line: 550, column: 3, scope: !6124)
!6199 = !DILocation(line: 553, column: 19, scope: !6038)
!6200 = !DILocation(line: 553, column: 2, scope: !6038)
!6201 = !DILocation(line: 554, column: 1, scope: !6038)
!6202 = distinct !DISubprogram(name: "sk_adjustIndexes", scope: !3, file: !3, line: 793, type: !6203, scopeLine: 794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6203 = !DISubroutineType(types: !6204)
!6204 = !{!91, !1920, !6205, !6205}
!6205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64)
!6206 = !DILocalVariable(name: "sketch", arg: 1, scope: !6202, file: !3, line: 793, type: !1920)
!6207 = !DILocation(line: 793, column: 40, scope: !6202)
!6208 = !DILocalVariable(name: "start", arg: 2, scope: !6202, file: !3, line: 793, type: !6205)
!6209 = !DILocation(line: 793, column: 53, scope: !6202)
!6210 = !DILocalVariable(name: "end", arg: 3, scope: !6202, file: !3, line: 793, type: !6205)
!6211 = !DILocation(line: 793, column: 65, scope: !6202)
!6212 = !DILocalVariable(name: "retval", scope: !6202, file: !3, line: 795, type: !91)
!6213 = !DILocation(line: 795, column: 6, scope: !6202)
!6214 = !DILocation(line: 797, column: 11, scope: !6202)
!6215 = !DILocation(line: 797, column: 19, scope: !6202)
!6216 = !DILocation(line: 797, column: 24, scope: !6202)
!6217 = !DILocation(line: 797, column: 3, scope: !6202)
!6218 = !DILocation(line: 797, column: 9, scope: !6202)
!6219 = !DILocation(line: 798, column: 9, scope: !6202)
!6220 = !DILocation(line: 798, column: 17, scope: !6202)
!6221 = !DILocation(line: 798, column: 22, scope: !6202)
!6222 = !DILocation(line: 798, column: 3, scope: !6202)
!6223 = !DILocation(line: 798, column: 7, scope: !6202)
!6224 = !DILocation(line: 800, column: 7, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 800, column: 6)
!6226 = !DILocation(line: 800, column: 6, scope: !6225)
!6227 = !DILocation(line: 800, column: 13, scope: !6225)
!6228 = !DILocation(line: 800, column: 6, scope: !6202)
!6229 = !DILocation(line: 801, column: 4, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 800, column: 20)
!6231 = !DILocation(line: 801, column: 10, scope: !6230)
!6232 = !DILocation(line: 802, column: 2, scope: !6230)
!6233 = !DILocation(line: 804, column: 7, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 804, column: 6)
!6235 = !DILocation(line: 804, column: 6, scope: !6234)
!6236 = !DILocation(line: 804, column: 11, scope: !6234)
!6237 = !DILocation(line: 804, column: 6, scope: !6202)
!6238 = !DILocation(line: 805, column: 10, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 804, column: 18)
!6240 = !DILocation(line: 805, column: 18, scope: !6239)
!6241 = !DILocation(line: 805, column: 23, scope: !6239)
!6242 = !DILocation(line: 805, column: 31, scope: !6239)
!6243 = !DILocation(line: 805, column: 41, scope: !6239)
!6244 = !DILocation(line: 805, column: 4, scope: !6239)
!6245 = !DILocation(line: 805, column: 8, scope: !6239)
!6246 = !DILocation(line: 806, column: 2, scope: !6239)
!6247 = !DILocation(line: 808, column: 7, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 808, column: 6)
!6249 = !DILocation(line: 808, column: 6, scope: !6248)
!6250 = !DILocation(line: 808, column: 14, scope: !6248)
!6251 = !DILocation(line: 808, column: 13, scope: !6248)
!6252 = !DILocation(line: 808, column: 11, scope: !6248)
!6253 = !DILocation(line: 808, column: 6, scope: !6202)
!6254 = !DILocalVariable(name: "tmp", scope: !6255, file: !3, line: 809, type: !91)
!6255 = distinct !DILexicalBlock(scope: !6248, file: !3, line: 808, column: 21)
!6256 = !DILocation(line: 809, column: 7, scope: !6255)
!6257 = !DILocation(line: 809, column: 14, scope: !6255)
!6258 = !DILocation(line: 809, column: 13, scope: !6255)
!6259 = !DILocation(line: 810, column: 13, scope: !6255)
!6260 = !DILocation(line: 810, column: 12, scope: !6255)
!6261 = !DILocation(line: 810, column: 4, scope: !6255)
!6262 = !DILocation(line: 810, column: 10, scope: !6255)
!6263 = !DILocation(line: 811, column: 10, scope: !6255)
!6264 = !DILocation(line: 811, column: 4, scope: !6255)
!6265 = !DILocation(line: 811, column: 8, scope: !6255)
!6266 = !DILocation(line: 812, column: 10, scope: !6255)
!6267 = !DILocation(line: 813, column: 2, scope: !6255)
!6268 = !DILocation(line: 815, column: 9, scope: !6202)
!6269 = !DILocation(line: 815, column: 2, scope: !6202)
!6270 = distinct !DISubprogram(name: "sk_drawStrokeSubdivision", scope: !3, file: !3, line: 591, type: !6271, scopeLine: 592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6271 = !DISubroutineType(types: !6272)
!6272 = !{null, !1967, !195}
!6273 = !DILocalVariable(name: "toolsettings", arg: 1, scope: !6270, file: !3, line: 591, type: !1967)
!6274 = !DILocation(line: 591, column: 52, scope: !6270)
!6275 = !DILocalVariable(name: "stk", arg: 2, scope: !6270, file: !3, line: 591, type: !195)
!6276 = !DILocation(line: 591, column: 77, scope: !6270)
!6277 = !DILocalVariable(name: "head_index", scope: !6270, file: !3, line: 593, type: !91)
!6278 = !DILocation(line: 593, column: 6, scope: !6270)
!6279 = !DILocalVariable(name: "i", scope: !6270, file: !3, line: 594, type: !91)
!6280 = !DILocation(line: 594, column: 6, scope: !6270)
!6281 = !DILocation(line: 596, column: 6, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 596, column: 6)
!6283 = !DILocation(line: 596, column: 20, scope: !6282)
!6284 = !DILocation(line: 596, column: 43, scope: !6282)
!6285 = !DILocation(line: 596, column: 6, scope: !6270)
!6286 = !DILocation(line: 597, column: 3, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 596, column: 67)
!6288 = !DILocation(line: 601, column: 9, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 601, column: 2)
!6290 = !DILocation(line: 601, column: 7, scope: !6289)
!6291 = !DILocation(line: 601, column: 14, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6289, file: !3, line: 601, column: 2)
!6293 = !DILocation(line: 601, column: 18, scope: !6292)
!6294 = !DILocation(line: 601, column: 23, scope: !6292)
!6295 = !DILocation(line: 601, column: 16, scope: !6292)
!6296 = !DILocation(line: 601, column: 2, scope: !6289)
!6297 = !DILocalVariable(name: "pt", scope: !6298, file: !3, line: 602, type: !203)
!6298 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 601, column: 39)
!6299 = !DILocation(line: 602, column: 13, scope: !6298)
!6300 = !DILocation(line: 602, column: 18, scope: !6298)
!6301 = !DILocation(line: 602, column: 23, scope: !6298)
!6302 = !DILocation(line: 602, column: 32, scope: !6298)
!6303 = !DILocation(line: 602, column: 30, scope: !6298)
!6304 = !DILocation(line: 604, column: 7, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 604, column: 7)
!6306 = !DILocation(line: 604, column: 11, scope: !6305)
!6307 = !DILocation(line: 604, column: 16, scope: !6305)
!6308 = !DILocation(line: 604, column: 28, scope: !6305)
!6309 = !DILocation(line: 604, column: 31, scope: !6305)
!6310 = !DILocation(line: 604, column: 36, scope: !6305)
!6311 = !DILocation(line: 604, column: 41, scope: !6305)
!6312 = !DILocation(line: 604, column: 51, scope: !6305)
!6313 = !DILocation(line: 604, column: 33, scope: !6305)
!6314 = !DILocation(line: 604, column: 7, scope: !6298)
!6315 = !DILocation(line: 605, column: 8, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 605, column: 8)
!6317 = distinct !DILexicalBlock(scope: !6305, file: !3, line: 604, column: 93)
!6318 = !DILocation(line: 605, column: 19, scope: !6316)
!6319 = !DILocation(line: 605, column: 8, scope: !6317)
!6320 = !DILocation(line: 606, column: 18, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 605, column: 26)
!6322 = !DILocation(line: 606, column: 16, scope: !6321)
!6323 = !DILocation(line: 607, column: 4, scope: !6321)
!6324 = !DILocation(line: 609, column: 9, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6326, file: !3, line: 609, column: 9)
!6326 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 608, column: 9)
!6327 = !DILocation(line: 609, column: 13, scope: !6325)
!6328 = !DILocation(line: 609, column: 11, scope: !6325)
!6329 = !DILocation(line: 609, column: 24, scope: !6325)
!6330 = !DILocation(line: 609, column: 9, scope: !6326)
!6331 = !DILocalVariable(name: "sk_iter", scope: !6332, file: !3, line: 610, type: !162)
!6332 = distinct !DILexicalBlock(scope: !6325, file: !3, line: 609, column: 29)
!6333 = !DILocation(line: 610, column: 24, scope: !6332)
!6334 = !DILocalVariable(name: "iter", scope: !6332, file: !3, line: 611, type: !242)
!6335 = !DILocation(line: 611, column: 20, scope: !6332)
!6336 = !DILocation(line: 611, column: 27, scope: !6332)
!6337 = !DILocation(line: 613, column: 25, scope: !6332)
!6338 = !DILocation(line: 613, column: 31, scope: !6332)
!6339 = !DILocation(line: 613, column: 36, scope: !6332)
!6340 = !DILocation(line: 613, column: 48, scope: !6332)
!6341 = !DILocation(line: 613, column: 6, scope: !6332)
!6342 = !DILocation(line: 615, column: 10, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 615, column: 10)
!6344 = !DILocation(line: 615, column: 24, scope: !6343)
!6345 = !DILocation(line: 615, column: 47, scope: !6343)
!6346 = !DILocation(line: 615, column: 10, scope: !6332)
!6347 = !DILocation(line: 616, column: 30, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 615, column: 77)
!6349 = !DILocation(line: 616, column: 44, scope: !6348)
!6350 = !DILocation(line: 616, column: 7, scope: !6348)
!6351 = !DILocation(line: 617, column: 6, scope: !6348)
!6352 = !DILocation(line: 618, column: 15, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 618, column: 15)
!6354 = !DILocation(line: 618, column: 29, scope: !6353)
!6355 = !DILocation(line: 618, column: 52, scope: !6353)
!6356 = !DILocation(line: 618, column: 15, scope: !6343)
!6357 = !DILocation(line: 619, column: 30, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 618, column: 78)
!6359 = !DILocation(line: 619, column: 44, scope: !6358)
!6360 = !DILocation(line: 619, column: 7, scope: !6358)
!6361 = !DILocation(line: 620, column: 6, scope: !6358)
!6362 = !DILocation(line: 621, column: 15, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 621, column: 15)
!6364 = !DILocation(line: 621, column: 29, scope: !6363)
!6365 = !DILocation(line: 621, column: 52, scope: !6363)
!6366 = !DILocation(line: 621, column: 15, scope: !6353)
!6367 = !DILocation(line: 622, column: 30, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 621, column: 77)
!6369 = !DILocation(line: 622, column: 44, scope: !6368)
!6370 = !DILocation(line: 622, column: 7, scope: !6368)
!6371 = !DILocation(line: 623, column: 6, scope: !6368)
!6372 = !DILocation(line: 625, column: 5, scope: !6332)
!6373 = !DILocation(line: 627, column: 18, scope: !6326)
!6374 = !DILocation(line: 627, column: 16, scope: !6326)
!6375 = !DILocation(line: 629, column: 3, scope: !6317)
!6376 = !DILocation(line: 630, column: 2, scope: !6298)
!6377 = !DILocation(line: 601, column: 35, scope: !6292)
!6378 = !DILocation(line: 601, column: 2, scope: !6292)
!6379 = distinct !{!6379, !6296, !6380}
!6380 = !DILocation(line: 630, column: 2, scope: !6289)
!6381 = !DILocation(line: 631, column: 1, scope: !6270)
!6382 = distinct !DISubprogram(name: "sk_drawPoint", scope: !3, file: !3, line: 441, type: !6383, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6383 = !DISubroutineType(types: !6384)
!6384 = !{null, !4246, !203, !106}
!6385 = !DILocalVariable(name: "quad", arg: 1, scope: !6382, file: !3, line: 441, type: !4246)
!6386 = !DILocation(line: 441, column: 38, scope: !6382)
!6387 = !DILocalVariable(name: "pt", arg: 2, scope: !6382, file: !3, line: 441, type: !203)
!6388 = !DILocation(line: 441, column: 54, scope: !6382)
!6389 = !DILocalVariable(name: "size", arg: 3, scope: !6382, file: !3, line: 441, type: !106)
!6390 = !DILocation(line: 441, column: 64, scope: !6382)
!6391 = !DILocation(line: 443, column: 15, scope: !6382)
!6392 = !DILocation(line: 443, column: 19, scope: !6382)
!6393 = !DILocation(line: 443, column: 25, scope: !6382)
!6394 = !DILocation(line: 443, column: 29, scope: !6382)
!6395 = !DILocation(line: 443, column: 35, scope: !6382)
!6396 = !DILocation(line: 443, column: 39, scope: !6382)
!6397 = !DILocation(line: 443, column: 2, scope: !6382)
!6398 = !DILocation(line: 444, column: 12, scope: !6382)
!6399 = !DILocation(line: 444, column: 36, scope: !6382)
!6400 = !DILocation(line: 444, column: 40, scope: !6382)
!6401 = !DILocation(line: 444, column: 18, scope: !6382)
!6402 = !DILocation(line: 444, column: 2, scope: !6382)
!6403 = !DILocation(line: 445, column: 1, scope: !6382)
!6404 = distinct !DISubprogram(name: "sk_drawEdge", scope: !3, file: !3, line: 447, type: !6405, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6405 = !DISubroutineType(types: !6406)
!6406 = !{null, !4246, !203, !203, !106}
!6407 = !DILocalVariable(name: "quad", arg: 1, scope: !6404, file: !3, line: 447, type: !4246)
!6408 = !DILocation(line: 447, column: 37, scope: !6404)
!6409 = !DILocalVariable(name: "pt0", arg: 2, scope: !6404, file: !3, line: 447, type: !203)
!6410 = !DILocation(line: 447, column: 53, scope: !6404)
!6411 = !DILocalVariable(name: "pt1", arg: 3, scope: !6404, file: !3, line: 447, type: !203)
!6412 = !DILocation(line: 447, column: 68, scope: !6404)
!6413 = !DILocalVariable(name: "size", arg: 4, scope: !6404, file: !3, line: 447, type: !106)
!6414 = !DILocation(line: 447, column: 79, scope: !6404)
!6415 = !DILocalVariable(name: "vec1", scope: !6404, file: !3, line: 449, type: !124)
!6416 = !DILocation(line: 449, column: 8, scope: !6404)
!6417 = !DILocalVariable(name: "vec2", scope: !6404, file: !3, line: 449, type: !124)
!6418 = !DILocation(line: 449, column: 17, scope: !6404)
!6419 = !DILocalVariable(name: "axis", scope: !6404, file: !3, line: 449, type: !124)
!6420 = !DILocation(line: 449, column: 38, scope: !6404)
!6421 = !DILocalVariable(name: "angle", scope: !6404, file: !3, line: 450, type: !106)
!6422 = !DILocation(line: 450, column: 8, scope: !6404)
!6423 = !DILocalVariable(name: "length", scope: !6404, file: !3, line: 450, type: !106)
!6424 = !DILocation(line: 450, column: 15, scope: !6404)
!6425 = !DILocation(line: 452, column: 14, scope: !6404)
!6426 = !DILocation(line: 452, column: 20, scope: !6404)
!6427 = !DILocation(line: 452, column: 25, scope: !6404)
!6428 = !DILocation(line: 452, column: 28, scope: !6404)
!6429 = !DILocation(line: 452, column: 33, scope: !6404)
!6430 = !DILocation(line: 452, column: 2, scope: !6404)
!6431 = !DILocation(line: 453, column: 24, scope: !6404)
!6432 = !DILocation(line: 453, column: 11, scope: !6404)
!6433 = !DILocation(line: 453, column: 9, scope: !6404)
!6434 = !DILocation(line: 454, column: 16, scope: !6404)
!6435 = !DILocation(line: 454, column: 22, scope: !6404)
!6436 = !DILocation(line: 454, column: 28, scope: !6404)
!6437 = !DILocation(line: 454, column: 2, scope: !6404)
!6438 = !DILocation(line: 456, column: 17, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 456, column: 6)
!6440 = !DILocation(line: 456, column: 6, scope: !6439)
!6441 = !DILocation(line: 456, column: 6, scope: !6404)
!6442 = !DILocation(line: 457, column: 3, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6439, file: !3, line: 456, column: 24)
!6444 = !DILocation(line: 457, column: 11, scope: !6443)
!6445 = !DILocation(line: 458, column: 2, scope: !6443)
!6446 = !DILocation(line: 460, column: 32, scope: !6404)
!6447 = !DILocation(line: 460, column: 38, scope: !6404)
!6448 = !DILocation(line: 460, column: 10, scope: !6404)
!6449 = !DILocation(line: 460, column: 8, scope: !6404)
!6450 = !DILocation(line: 462, column: 12, scope: !6404)
!6451 = !DILocation(line: 462, column: 18, scope: !6404)
!6452 = !DILocation(line: 462, column: 42, scope: !6404)
!6453 = !DILocation(line: 462, column: 52, scope: !6404)
!6454 = !DILocation(line: 462, column: 61, scope: !6404)
!6455 = !DILocation(line: 462, column: 70, scope: !6404)
!6456 = !DILocation(line: 462, column: 2, scope: !6404)
!6457 = !DILocation(line: 464, column: 14, scope: !6404)
!6458 = !DILocation(line: 464, column: 38, scope: !6404)
!6459 = !DILocation(line: 464, column: 43, scope: !6404)
!6460 = !DILocation(line: 464, column: 20, scope: !6404)
!6461 = !DILocation(line: 464, column: 68, scope: !6404)
!6462 = !DILocation(line: 464, column: 73, scope: !6404)
!6463 = !DILocation(line: 464, column: 50, scope: !6404)
!6464 = !DILocation(line: 464, column: 80, scope: !6404)
!6465 = !DILocation(line: 464, column: 2, scope: !6404)
!6466 = !DILocation(line: 465, column: 1, scope: !6404)
!6467 = distinct !DISubprogram(name: "sub_v3_v3", scope: !2696, file: !2696, line: 350, type: !2697, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6468 = !DILocalVariable(name: "r", arg: 1, scope: !6467, file: !2696, line: 350, type: !189)
!6469 = !DILocation(line: 350, column: 30, scope: !6467)
!6470 = !DILocalVariable(name: "a", arg: 2, scope: !6467, file: !2696, line: 350, type: !2699)
!6471 = !DILocation(line: 350, column: 48, scope: !6467)
!6472 = !DILocation(line: 352, column: 10, scope: !6467)
!6473 = !DILocation(line: 352, column: 2, scope: !6467)
!6474 = !DILocation(line: 352, column: 7, scope: !6467)
!6475 = !DILocation(line: 353, column: 10, scope: !6467)
!6476 = !DILocation(line: 353, column: 2, scope: !6467)
!6477 = !DILocation(line: 353, column: 7, scope: !6467)
!6478 = !DILocation(line: 354, column: 10, scope: !6467)
!6479 = !DILocation(line: 354, column: 2, scope: !6467)
!6480 = !DILocation(line: 354, column: 7, scope: !6467)
!6481 = !DILocation(line: 355, column: 1, scope: !6467)
!6482 = distinct !DISubprogram(name: "mul_v3_fl", scope: !2696, file: !2696, line: 392, type: !6483, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6483 = !DISubroutineType(types: !6484)
!6484 = !{null, !189, !106}
!6485 = !DILocalVariable(name: "r", arg: 1, scope: !6482, file: !2696, line: 392, type: !189)
!6486 = !DILocation(line: 392, column: 30, scope: !6482)
!6487 = !DILocalVariable(name: "f", arg: 2, scope: !6482, file: !2696, line: 392, type: !106)
!6488 = !DILocation(line: 392, column: 42, scope: !6482)
!6489 = !DILocation(line: 394, column: 10, scope: !6482)
!6490 = !DILocation(line: 394, column: 2, scope: !6482)
!6491 = !DILocation(line: 394, column: 7, scope: !6482)
!6492 = !DILocation(line: 395, column: 10, scope: !6482)
!6493 = !DILocation(line: 395, column: 2, scope: !6482)
!6494 = !DILocation(line: 395, column: 7, scope: !6482)
!6495 = !DILocation(line: 396, column: 10, scope: !6482)
!6496 = !DILocation(line: 396, column: 2, scope: !6482)
!6497 = !DILocation(line: 396, column: 7, scope: !6482)
!6498 = !DILocation(line: 397, column: 1, scope: !6482)
!6499 = distinct !DISubprogram(name: "sk_drawNormal", scope: !3, file: !3, line: 467, type: !6500, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6500 = !DISubroutineType(types: !6501)
!6501 = !{null, !4246, !203, !106, !106}
!6502 = !DILocalVariable(name: "quad", arg: 1, scope: !6499, file: !3, line: 467, type: !4246)
!6503 = !DILocation(line: 467, column: 39, scope: !6499)
!6504 = !DILocalVariable(name: "pt", arg: 2, scope: !6499, file: !3, line: 467, type: !203)
!6505 = !DILocation(line: 467, column: 55, scope: !6499)
!6506 = !DILocalVariable(name: "size", arg: 3, scope: !6499, file: !3, line: 467, type: !106)
!6507 = !DILocation(line: 467, column: 65, scope: !6499)
!6508 = !DILocalVariable(name: "height", arg: 4, scope: !6499, file: !3, line: 467, type: !106)
!6509 = !DILocation(line: 467, column: 77, scope: !6499)
!6510 = !DILocalVariable(name: "vec2", scope: !6499, file: !3, line: 469, type: !124)
!6511 = !DILocation(line: 469, column: 8, scope: !6499)
!6512 = !DILocalVariable(name: "axis", scope: !6499, file: !3, line: 469, type: !124)
!6513 = !DILocation(line: 469, column: 29, scope: !6499)
!6514 = !DILocalVariable(name: "angle", scope: !6499, file: !3, line: 470, type: !106)
!6515 = !DILocation(line: 470, column: 8, scope: !6499)
!6516 = !DILocation(line: 472, column: 2, scope: !6499)
!6517 = !DILocation(line: 474, column: 16, scope: !6499)
!6518 = !DILocation(line: 474, column: 22, scope: !6499)
!6519 = !DILocation(line: 474, column: 28, scope: !6499)
!6520 = !DILocation(line: 474, column: 32, scope: !6499)
!6521 = !DILocation(line: 474, column: 2, scope: !6499)
!6522 = !DILocation(line: 476, column: 17, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 476, column: 6)
!6524 = !DILocation(line: 476, column: 6, scope: !6523)
!6525 = !DILocation(line: 476, column: 6, scope: !6499)
!6526 = !DILocation(line: 477, column: 3, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 476, column: 24)
!6528 = !DILocation(line: 477, column: 11, scope: !6527)
!6529 = !DILocation(line: 478, column: 2, scope: !6527)
!6530 = !DILocation(line: 480, column: 32, scope: !6499)
!6531 = !DILocation(line: 480, column: 38, scope: !6499)
!6532 = !DILocation(line: 480, column: 42, scope: !6499)
!6533 = !DILocation(line: 480, column: 10, scope: !6499)
!6534 = !DILocation(line: 480, column: 8, scope: !6499)
!6535 = !DILocation(line: 482, column: 12, scope: !6499)
!6536 = !DILocation(line: 482, column: 18, scope: !6499)
!6537 = !DILocation(line: 482, column: 43, scope: !6499)
!6538 = !DILocation(line: 482, column: 52, scope: !6499)
!6539 = !DILocation(line: 482, column: 61, scope: !6499)
!6540 = !DILocation(line: 482, column: 2, scope: !6499)
!6541 = !DILocation(line: 484, column: 2, scope: !6499)
!6542 = !DILocation(line: 485, column: 14, scope: !6499)
!6543 = !DILocation(line: 485, column: 38, scope: !6499)
!6544 = !DILocation(line: 485, column: 42, scope: !6499)
!6545 = !DILocation(line: 485, column: 20, scope: !6499)
!6546 = !DILocation(line: 485, column: 70, scope: !6499)
!6547 = !DILocation(line: 485, column: 74, scope: !6499)
!6548 = !DILocation(line: 485, column: 52, scope: !6499)
!6549 = !DILocation(line: 485, column: 2, scope: !6499)
!6550 = !DILocation(line: 487, column: 2, scope: !6499)
!6551 = !DILocation(line: 488, column: 1, scope: !6499)
!6552 = distinct !DISubprogram(name: "add_v3_v3", scope: !2696, file: !2696, line: 302, type: !2697, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6553 = !DILocalVariable(name: "r", arg: 1, scope: !6552, file: !2696, line: 302, type: !189)
!6554 = !DILocation(line: 302, column: 30, scope: !6552)
!6555 = !DILocalVariable(name: "a", arg: 2, scope: !6552, file: !2696, line: 302, type: !2699)
!6556 = !DILocation(line: 302, column: 48, scope: !6552)
!6557 = !DILocation(line: 304, column: 10, scope: !6552)
!6558 = !DILocation(line: 304, column: 2, scope: !6552)
!6559 = !DILocation(line: 304, column: 7, scope: !6552)
!6560 = !DILocation(line: 305, column: 10, scope: !6552)
!6561 = !DILocation(line: 305, column: 2, scope: !6552)
!6562 = !DILocation(line: 305, column: 7, scope: !6552)
!6563 = !DILocation(line: 306, column: 10, scope: !6552)
!6564 = !DILocation(line: 306, column: 2, scope: !6552)
!6565 = !DILocation(line: 306, column: 7, scope: !6552)
!6566 = !DILocation(line: 307, column: 1, scope: !6552)
!6567 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !2696, file: !2696, line: 634, type: !2777, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6568 = !DILocalVariable(name: "r", arg: 1, scope: !6567, file: !2696, line: 634, type: !189)
!6569 = !DILocation(line: 634, column: 34, scope: !6567)
!6570 = !DILocalVariable(name: "a", arg: 2, scope: !6567, file: !2696, line: 634, type: !2699)
!6571 = !DILocation(line: 634, column: 52, scope: !6567)
!6572 = !DILocalVariable(name: "b", arg: 3, scope: !6567, file: !2696, line: 634, type: !2699)
!6573 = !DILocation(line: 634, column: 70, scope: !6567)
!6574 = !DILocation(line: 637, column: 9, scope: !6567)
!6575 = !DILocation(line: 637, column: 16, scope: !6567)
!6576 = !DILocation(line: 637, column: 14, scope: !6567)
!6577 = !DILocation(line: 637, column: 23, scope: !6567)
!6578 = !DILocation(line: 637, column: 30, scope: !6567)
!6579 = !DILocation(line: 637, column: 28, scope: !6567)
!6580 = !DILocation(line: 637, column: 21, scope: !6567)
!6581 = !DILocation(line: 637, column: 2, scope: !6567)
!6582 = !DILocation(line: 637, column: 7, scope: !6567)
!6583 = !DILocation(line: 638, column: 9, scope: !6567)
!6584 = !DILocation(line: 638, column: 16, scope: !6567)
!6585 = !DILocation(line: 638, column: 14, scope: !6567)
!6586 = !DILocation(line: 638, column: 23, scope: !6567)
!6587 = !DILocation(line: 638, column: 30, scope: !6567)
!6588 = !DILocation(line: 638, column: 28, scope: !6567)
!6589 = !DILocation(line: 638, column: 21, scope: !6567)
!6590 = !DILocation(line: 638, column: 2, scope: !6567)
!6591 = !DILocation(line: 638, column: 7, scope: !6567)
!6592 = !DILocation(line: 639, column: 9, scope: !6567)
!6593 = !DILocation(line: 639, column: 16, scope: !6567)
!6594 = !DILocation(line: 639, column: 14, scope: !6567)
!6595 = !DILocation(line: 639, column: 23, scope: !6567)
!6596 = !DILocation(line: 639, column: 30, scope: !6567)
!6597 = !DILocation(line: 639, column: 28, scope: !6567)
!6598 = !DILocation(line: 639, column: 21, scope: !6567)
!6599 = !DILocation(line: 639, column: 2, scope: !6567)
!6600 = !DILocation(line: 639, column: 7, scope: !6567)
!6601 = !DILocation(line: 640, column: 1, scope: !6567)
!6602 = distinct !DISubprogram(name: "is_zero_v3", scope: !2696, file: !2696, line: 857, type: !6603, scopeLine: 858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6603 = !DISubroutineType(types: !6604)
!6604 = !{!1258, !2699}
!6605 = !DILocalVariable(name: "v", arg: 1, scope: !6602, file: !2696, line: 857, type: !2699)
!6606 = !DILocation(line: 857, column: 37, scope: !6602)
!6607 = !DILocation(line: 859, column: 10, scope: !6602)
!6608 = !DILocation(line: 859, column: 15, scope: !6602)
!6609 = !DILocation(line: 859, column: 23, scope: !6602)
!6610 = !DILocation(line: 859, column: 26, scope: !6602)
!6611 = !DILocation(line: 859, column: 31, scope: !6602)
!6612 = !DILocation(line: 859, column: 39, scope: !6602)
!6613 = !DILocation(line: 859, column: 42, scope: !6602)
!6614 = !DILocation(line: 859, column: 47, scope: !6602)
!6615 = !DILocation(line: 0, scope: !6602)
!6616 = !DILocation(line: 859, column: 9, scope: !6602)
!6617 = !DILocation(line: 859, column: 2, scope: !6602)
!6618 = distinct !DISubprogram(name: "sk_clampPointSize", scope: !3, file: !3, line: 436, type: !6619, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6619 = !DISubroutineType(types: !6620)
!6620 = !{!106, !203, !106}
!6621 = !DILocalVariable(name: "pt", arg: 1, scope: !6618, file: !3, line: 436, type: !203)
!6622 = !DILocation(line: 436, column: 42, scope: !6618)
!6623 = !DILocalVariable(name: "size", arg: 2, scope: !6618, file: !3, line: 436, type: !106)
!6624 = !DILocation(line: 436, column: 52, scope: !6618)
!6625 = !DILocation(line: 438, column: 16, scope: !6618)
!6626 = !DILocation(line: 438, column: 23, scope: !6618)
!6627 = !DILocation(line: 438, column: 27, scope: !6618)
!6628 = !DILocation(line: 438, column: 21, scope: !6618)
!6629 = !DILocation(line: 438, column: 33, scope: !6618)
!6630 = !DILocation(line: 438, column: 38, scope: !6618)
!6631 = !DILocation(line: 438, column: 9, scope: !6618)
!6632 = !DILocation(line: 438, column: 2, scope: !6618)
!6633 = distinct !DISubprogram(name: "max_ff", scope: !6634, file: !6634, line: 206, type: !6635, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6634 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6635 = !DISubroutineType(types: !6636)
!6636 = !{!106, !106, !106}
!6637 = !DILocalVariable(name: "a", arg: 1, scope: !6633, file: !6634, line: 206, type: !106)
!6638 = !DILocation(line: 206, column: 28, scope: !6633)
!6639 = !DILocalVariable(name: "b", arg: 2, scope: !6633, file: !6634, line: 206, type: !106)
!6640 = !DILocation(line: 206, column: 37, scope: !6633)
!6641 = !DILocation(line: 208, column: 10, scope: !6633)
!6642 = !DILocation(line: 208, column: 14, scope: !6633)
!6643 = !DILocation(line: 208, column: 12, scope: !6633)
!6644 = !DILocation(line: 208, column: 9, scope: !6633)
!6645 = !DILocation(line: 208, column: 19, scope: !6633)
!6646 = !DILocation(line: 208, column: 23, scope: !6633)
!6647 = !DILocation(line: 208, column: 2, scope: !6633)
!6648 = distinct !DISubprogram(name: "drawSubdividedStrokeBy", scope: !3, file: !3, line: 556, type: !6649, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6649 = !DISubroutineType(types: !6650)
!6650 = !{null, !1967, !242, !6651}
!6651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6652, size: 64)
!6652 = !DIDerivedType(tag: DW_TAG_typedef, name: "NextSubdivisionFunc", file: !6653, line: 35, baseType: !6654)
!6653 = !DIFile(filename: "blender/source/blender/editors/armature/BIF_generate.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6654 = !DISubroutineType(types: !6655)
!6655 = !{!91, !1237, !6656, !91, !91, !189, !189}
!6656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!6657 = !DILocalVariable(name: "toolsettings", arg: 1, scope: !6648, file: !3, line: 556, type: !1967)
!6658 = !DILocation(line: 556, column: 50, scope: !6648)
!6659 = !DILocalVariable(name: "iter", arg: 2, scope: !6648, file: !3, line: 556, type: !242)
!6660 = !DILocation(line: 556, column: 78, scope: !6648)
!6661 = !DILocalVariable(name: "next_subdividion", arg: 3, scope: !6648, file: !3, line: 556, type: !6651)
!6662 = !DILocation(line: 556, column: 104, scope: !6648)
!6663 = !DILocalVariable(name: "stk", scope: !6648, file: !3, line: 558, type: !195)
!6664 = !DILocation(line: 558, column: 13, scope: !6648)
!6665 = !DILocation(line: 558, column: 41, scope: !6648)
!6666 = !DILocation(line: 558, column: 48, scope: !6648)
!6667 = !DILocalVariable(name: "head", scope: !6648, file: !3, line: 559, type: !124)
!6668 = !DILocation(line: 559, column: 8, scope: !6648)
!6669 = !DILocalVariable(name: "tail", scope: !6648, file: !3, line: 559, type: !124)
!6670 = !DILocation(line: 559, column: 17, scope: !6648)
!6671 = !DILocalVariable(name: "bone_start", scope: !6648, file: !3, line: 560, type: !91)
!6672 = !DILocation(line: 560, column: 6, scope: !6648)
!6673 = !DILocalVariable(name: "end", scope: !6648, file: !3, line: 561, type: !91)
!6674 = !DILocation(line: 561, column: 6, scope: !6648)
!6675 = !DILocation(line: 561, column: 12, scope: !6648)
!6676 = !DILocation(line: 561, column: 18, scope: !6648)
!6677 = !DILocalVariable(name: "index", scope: !6648, file: !3, line: 562, type: !91)
!6678 = !DILocation(line: 562, column: 6, scope: !6648)
!6679 = !DILocalVariable(name: "quad", scope: !6648, file: !3, line: 563, type: !4246)
!6680 = !DILocation(line: 563, column: 14, scope: !6648)
!6681 = !DILocation(line: 563, column: 21, scope: !6648)
!6682 = !DILocation(line: 564, column: 20, scope: !6648)
!6683 = !DILocation(line: 564, column: 2, scope: !6648)
!6684 = !DILocation(line: 566, column: 2, scope: !6648)
!6685 = !DILocation(line: 566, column: 8, scope: !6648)
!6686 = !DILocation(line: 566, column: 13, scope: !6648)
!6687 = !DILocation(line: 567, column: 13, scope: !6648)
!6688 = !DILocation(line: 567, column: 19, scope: !6648)
!6689 = !DILocation(line: 567, column: 25, scope: !6648)
!6690 = !DILocation(line: 567, column: 2, scope: !6648)
!6691 = !DILocation(line: 569, column: 10, scope: !6648)
!6692 = !DILocation(line: 569, column: 27, scope: !6648)
!6693 = !DILocation(line: 569, column: 41, scope: !6648)
!6694 = !DILocation(line: 569, column: 47, scope: !6648)
!6695 = !DILocation(line: 569, column: 59, scope: !6648)
!6696 = !DILocation(line: 569, column: 64, scope: !6648)
!6697 = !DILocation(line: 569, column: 70, scope: !6648)
!6698 = !DILocation(line: 569, column: 8, scope: !6648)
!6699 = !DILocation(line: 570, column: 2, scope: !6648)
!6700 = !DILocation(line: 570, column: 9, scope: !6648)
!6701 = !DILocation(line: 570, column: 15, scope: !6648)
!6702 = !DILocalVariable(name: "pt", scope: !6703, file: !3, line: 571, type: !203)
!6703 = distinct !DILexicalBlock(scope: !6648, file: !3, line: 570, column: 22)
!6704 = !DILocation(line: 571, column: 13, scope: !6703)
!6705 = !DILocation(line: 571, column: 18, scope: !6703)
!6706 = !DILocation(line: 571, column: 23, scope: !6703)
!6707 = !DILocation(line: 571, column: 32, scope: !6703)
!6708 = !DILocation(line: 571, column: 30, scope: !6703)
!6709 = !DILocation(line: 573, column: 3, scope: !6703)
!6710 = !DILocation(line: 575, column: 3, scope: !6703)
!6711 = !DILocation(line: 576, column: 16, scope: !6703)
!6712 = !DILocation(line: 576, column: 22, scope: !6703)
!6713 = !DILocation(line: 576, column: 3, scope: !6703)
!6714 = !DILocation(line: 578, column: 17, scope: !6703)
!6715 = !DILocation(line: 578, column: 23, scope: !6703)
!6716 = !DILocation(line: 578, column: 3, scope: !6703)
!6717 = !DILocation(line: 580, column: 3, scope: !6703)
!6718 = !DILocation(line: 582, column: 14, scope: !6703)
!6719 = !DILocation(line: 582, column: 20, scope: !6703)
!6720 = !DILocation(line: 582, column: 3, scope: !6703)
!6721 = !DILocation(line: 583, column: 16, scope: !6703)
!6722 = !DILocation(line: 583, column: 14, scope: !6703)
!6723 = !DILocation(line: 585, column: 11, scope: !6703)
!6724 = !DILocation(line: 585, column: 28, scope: !6703)
!6725 = !DILocation(line: 585, column: 42, scope: !6703)
!6726 = !DILocation(line: 585, column: 48, scope: !6703)
!6727 = !DILocation(line: 585, column: 60, scope: !6703)
!6728 = !DILocation(line: 585, column: 65, scope: !6703)
!6729 = !DILocation(line: 585, column: 71, scope: !6703)
!6730 = !DILocation(line: 585, column: 9, scope: !6703)
!6731 = distinct !{!6731, !6699, !6732}
!6732 = !DILocation(line: 586, column: 2, scope: !6648)
!6733 = !DILocation(line: 588, column: 19, scope: !6648)
!6734 = !DILocation(line: 588, column: 2, scope: !6648)
!6735 = !DILocation(line: 589, column: 1, scope: !6648)
!6736 = distinct !DISubprogram(name: "normalize_v3", scope: !2696, file: !2696, line: 830, type: !6737, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6737 = !DISubroutineType(types: !6738)
!6738 = !{!106, !189}
!6739 = !DILocalVariable(name: "n", arg: 1, scope: !6736, file: !2696, line: 830, type: !189)
!6740 = !DILocation(line: 830, column: 34, scope: !6736)
!6741 = !DILocation(line: 832, column: 25, scope: !6736)
!6742 = !DILocation(line: 832, column: 28, scope: !6736)
!6743 = !DILocation(line: 832, column: 9, scope: !6736)
!6744 = !DILocation(line: 832, column: 2, scope: !6736)
!6745 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !2696, file: !2696, line: 788, type: !6746, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6746 = !DISubroutineType(types: !6747)
!6747 = !{!106, !189, !2699}
!6748 = !DILocalVariable(name: "r", arg: 1, scope: !6745, file: !2696, line: 788, type: !189)
!6749 = !DILocation(line: 788, column: 37, scope: !6745)
!6750 = !DILocalVariable(name: "a", arg: 2, scope: !6745, file: !2696, line: 788, type: !2699)
!6751 = !DILocation(line: 788, column: 55, scope: !6745)
!6752 = !DILocalVariable(name: "d", scope: !6745, file: !2696, line: 790, type: !106)
!6753 = !DILocation(line: 790, column: 8, scope: !6745)
!6754 = !DILocation(line: 790, column: 21, scope: !6745)
!6755 = !DILocation(line: 790, column: 24, scope: !6745)
!6756 = !DILocation(line: 790, column: 12, scope: !6745)
!6757 = !DILocation(line: 794, column: 6, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6745, file: !2696, line: 794, column: 6)
!6759 = !DILocation(line: 794, column: 8, scope: !6758)
!6760 = !DILocation(line: 794, column: 6, scope: !6745)
!6761 = !DILocation(line: 795, column: 13, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6758, file: !2696, line: 794, column: 20)
!6763 = !DILocation(line: 795, column: 7, scope: !6762)
!6764 = !DILocation(line: 795, column: 5, scope: !6762)
!6765 = !DILocation(line: 796, column: 15, scope: !6762)
!6766 = !DILocation(line: 796, column: 18, scope: !6762)
!6767 = !DILocation(line: 796, column: 28, scope: !6762)
!6768 = !DILocation(line: 796, column: 26, scope: !6762)
!6769 = !DILocation(line: 796, column: 3, scope: !6762)
!6770 = !DILocation(line: 797, column: 2, scope: !6762)
!6771 = !DILocation(line: 799, column: 11, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6758, file: !2696, line: 798, column: 7)
!6773 = !DILocation(line: 799, column: 3, scope: !6772)
!6774 = !DILocation(line: 800, column: 5, scope: !6772)
!6775 = !DILocation(line: 803, column: 9, scope: !6745)
!6776 = !DILocation(line: 803, column: 2, scope: !6745)
!6777 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !2696, file: !2696, line: 399, type: !6778, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6778 = !DISubroutineType(types: !6779)
!6779 = !{null, !189, !2699, !106}
!6780 = !DILocalVariable(name: "r", arg: 1, scope: !6777, file: !2696, line: 399, type: !189)
!6781 = !DILocation(line: 399, column: 32, scope: !6777)
!6782 = !DILocalVariable(name: "a", arg: 2, scope: !6777, file: !2696, line: 399, type: !2699)
!6783 = !DILocation(line: 399, column: 50, scope: !6777)
!6784 = !DILocalVariable(name: "f", arg: 3, scope: !6777, file: !2696, line: 399, type: !106)
!6785 = !DILocation(line: 399, column: 62, scope: !6777)
!6786 = !DILocation(line: 401, column: 9, scope: !6777)
!6787 = !DILocation(line: 401, column: 16, scope: !6777)
!6788 = !DILocation(line: 401, column: 14, scope: !6777)
!6789 = !DILocation(line: 401, column: 2, scope: !6777)
!6790 = !DILocation(line: 401, column: 7, scope: !6777)
!6791 = !DILocation(line: 402, column: 9, scope: !6777)
!6792 = !DILocation(line: 402, column: 16, scope: !6777)
!6793 = !DILocation(line: 402, column: 14, scope: !6777)
!6794 = !DILocation(line: 402, column: 2, scope: !6777)
!6795 = !DILocation(line: 402, column: 7, scope: !6777)
!6796 = !DILocation(line: 403, column: 9, scope: !6777)
!6797 = !DILocation(line: 403, column: 16, scope: !6777)
!6798 = !DILocation(line: 403, column: 14, scope: !6777)
!6799 = !DILocation(line: 403, column: 2, scope: !6777)
!6800 = !DILocation(line: 403, column: 7, scope: !6777)
!6801 = !DILocation(line: 404, column: 1, scope: !6777)
!6802 = distinct !DISubprogram(name: "zero_v3", scope: !2696, file: !2696, line: 43, type: !6803, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6803 = !DISubroutineType(types: !6804)
!6804 = !{null, !189}
!6805 = !DILocalVariable(name: "r", arg: 1, scope: !6802, file: !2696, line: 43, type: !189)
!6806 = !DILocation(line: 43, column: 28, scope: !6802)
!6807 = !DILocation(line: 45, column: 2, scope: !6802)
!6808 = !DILocation(line: 45, column: 7, scope: !6802)
!6809 = !DILocation(line: 46, column: 2, scope: !6802)
!6810 = !DILocation(line: 46, column: 7, scope: !6802)
!6811 = !DILocation(line: 47, column: 2, scope: !6802)
!6812 = !DILocation(line: 47, column: 7, scope: !6802)
!6813 = !DILocation(line: 48, column: 1, scope: !6802)
!6814 = distinct !DISubprogram(name: "sk_cancelStroke", scope: !3, file: !3, line: 427, type: !2455, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6815 = !DILocalVariable(name: "sketch", arg: 1, scope: !6814, file: !3, line: 427, type: !1920)
!6816 = !DILocation(line: 427, column: 40, scope: !6814)
!6817 = !DILocation(line: 429, column: 6, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 429, column: 6)
!6819 = !DILocation(line: 429, column: 14, scope: !6818)
!6820 = !DILocation(line: 429, column: 28, scope: !6818)
!6821 = !DILocation(line: 429, column: 6, scope: !6814)
!6822 = !DILocation(line: 430, column: 20, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 429, column: 37)
!6824 = !DILocation(line: 430, column: 3, scope: !6823)
!6825 = !DILocation(line: 431, column: 19, scope: !6823)
!6826 = !DILocation(line: 431, column: 27, scope: !6823)
!6827 = !DILocation(line: 431, column: 35, scope: !6823)
!6828 = !DILocation(line: 431, column: 3, scope: !6823)
!6829 = !DILocation(line: 432, column: 2, scope: !6823)
!6830 = !DILocation(line: 433, column: 1, scope: !6814)
!6831 = distinct !DISubprogram(name: "sk_finish_stroke", scope: !3, file: !3, line: 2139, type: !6832, scopeLine: 2140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6832 = !DISubroutineType(types: !6833)
!6833 = !{!91, !228, !1920}
!6834 = !DILocalVariable(name: "C", arg: 1, scope: !6831, file: !3, line: 2139, type: !228)
!6835 = !DILocation(line: 2139, column: 39, scope: !6831)
!6836 = !DILocalVariable(name: "sketch", arg: 2, scope: !6831, file: !3, line: 2139, type: !1920)
!6837 = !DILocation(line: 2139, column: 53, scope: !6831)
!6838 = !DILocalVariable(name: "ts", scope: !6831, file: !3, line: 2141, type: !1967)
!6839 = !DILocation(line: 2141, column: 16, scope: !6831)
!6840 = !DILocation(line: 2141, column: 44, scope: !6831)
!6841 = !DILocation(line: 2141, column: 21, scope: !6831)
!6842 = !DILocation(line: 2143, column: 6, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 2143, column: 6)
!6844 = !DILocation(line: 2143, column: 14, scope: !6843)
!6845 = !DILocation(line: 2143, column: 28, scope: !6843)
!6846 = !DILocation(line: 2143, column: 6, scope: !6831)
!6847 = !DILocalVariable(name: "stk", scope: !6848, file: !3, line: 2144, type: !195)
!6848 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 2143, column: 37)
!6849 = !DILocation(line: 2144, column: 14, scope: !6848)
!6850 = !DILocation(line: 2144, column: 20, scope: !6848)
!6851 = !DILocation(line: 2144, column: 28, scope: !6848)
!6852 = !DILocation(line: 2146, column: 16, scope: !6848)
!6853 = !DILocation(line: 2146, column: 19, scope: !6848)
!6854 = !DILocation(line: 2146, column: 3, scope: !6848)
!6855 = !DILocation(line: 2148, column: 7, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 2148, column: 7)
!6857 = !DILocation(line: 2148, column: 11, scope: !6856)
!6858 = !DILocation(line: 2148, column: 26, scope: !6856)
!6859 = !DILocation(line: 2148, column: 7, scope: !6848)
!6860 = !DILocation(line: 2149, column: 8, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6862, file: !3, line: 2149, column: 8)
!6862 = distinct !DILexicalBlock(scope: !6856, file: !3, line: 2148, column: 50)
!6863 = !DILocation(line: 2149, column: 12, scope: !6861)
!6864 = !DILocation(line: 2149, column: 35, scope: !6861)
!6865 = !DILocation(line: 2149, column: 8, scope: !6862)
!6866 = !DILocation(line: 2150, column: 23, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 2149, column: 59)
!6868 = !DILocation(line: 2150, column: 26, scope: !6867)
!6869 = !DILocation(line: 2150, column: 5, scope: !6867)
!6870 = !DILocation(line: 2151, column: 4, scope: !6867)
!6871 = !DILocation(line: 2153, column: 22, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 2152, column: 9)
!6873 = !DILocation(line: 2153, column: 25, scope: !6872)
!6874 = !DILocation(line: 2153, column: 5, scope: !6872)
!6875 = !DILocation(line: 2157, column: 20, scope: !6862)
!6876 = !DILocation(line: 2157, column: 28, scope: !6862)
!6877 = !DILocation(line: 2157, column: 4, scope: !6862)
!6878 = !DILocation(line: 2160, column: 3, scope: !6862)
!6879 = !DILocation(line: 2164, column: 3, scope: !6848)
!6880 = !DILocation(line: 2167, column: 2, scope: !6831)
!6881 = !DILocation(line: 2168, column: 1, scope: !6831)
!6882 = distinct !DISubprogram(name: "sk_endStroke", scope: !3, file: !3, line: 854, type: !3797, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6883 = !DILocalVariable(name: "C", arg: 1, scope: !6882, file: !3, line: 854, type: !228)
!6884 = !DILocation(line: 854, column: 36, scope: !6882)
!6885 = !DILocalVariable(name: "sketch", arg: 2, scope: !6882, file: !3, line: 854, type: !1920)
!6886 = !DILocation(line: 854, column: 50, scope: !6882)
!6887 = !DILocalVariable(name: "ts", scope: !6882, file: !3, line: 856, type: !1967)
!6888 = !DILocation(line: 856, column: 16, scope: !6882)
!6889 = !DILocation(line: 856, column: 44, scope: !6882)
!6890 = !DILocation(line: 856, column: 21, scope: !6882)
!6891 = !DILocation(line: 857, column: 24, scope: !6882)
!6892 = !DILocation(line: 857, column: 32, scope: !6882)
!6893 = !DILocation(line: 857, column: 2, scope: !6882)
!6894 = !DILocation(line: 859, column: 6, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 859, column: 6)
!6896 = !DILocation(line: 859, column: 10, scope: !6895)
!6897 = !DILocation(line: 859, column: 25, scope: !6895)
!6898 = !DILocation(line: 859, column: 6, scope: !6882)
!6899 = !DILocation(line: 860, column: 18, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 859, column: 50)
!6901 = !DILocation(line: 860, column: 3, scope: !6900)
!6902 = !DILocation(line: 861, column: 2, scope: !6900)
!6903 = !DILocation(line: 863, column: 2, scope: !6882)
!6904 = !DILocation(line: 863, column: 10, scope: !6882)
!6905 = !DILocation(line: 863, column: 24, scope: !6882)
!6906 = !DILocation(line: 864, column: 1, scope: !6882)
!6907 = distinct !DISubprogram(name: "sk_endOverdraw", scope: !3, file: !3, line: 818, type: !2455, scopeLine: 819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6908 = !DILocalVariable(name: "sketch", arg: 1, scope: !6907, file: !3, line: 818, type: !1920)
!6909 = !DILocation(line: 818, column: 39, scope: !6907)
!6910 = !DILocalVariable(name: "stk", scope: !6907, file: !3, line: 820, type: !195)
!6911 = !DILocation(line: 820, column: 13, scope: !6907)
!6912 = !DILocation(line: 820, column: 19, scope: !6907)
!6913 = !DILocation(line: 820, column: 27, scope: !6907)
!6914 = !DILocation(line: 822, column: 21, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 822, column: 6)
!6916 = !DILocation(line: 822, column: 6, scope: !6915)
!6917 = !DILocation(line: 822, column: 6, scope: !6907)
!6918 = !DILocalVariable(name: "start", scope: !6919, file: !3, line: 823, type: !91)
!6919 = distinct !DILexicalBlock(scope: !6915, file: !3, line: 822, column: 36)
!6920 = !DILocation(line: 823, column: 7, scope: !6919)
!6921 = !DILocalVariable(name: "end", scope: !6919, file: !3, line: 824, type: !91)
!6922 = !DILocation(line: 824, column: 7, scope: !6919)
!6923 = !DILocation(line: 826, column: 24, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 826, column: 7)
!6925 = !DILocation(line: 826, column: 7, scope: !6924)
!6926 = !DILocation(line: 826, column: 7, scope: !6919)
!6927 = !DILocation(line: 827, column: 21, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 826, column: 47)
!6929 = !DILocation(line: 827, column: 4, scope: !6928)
!6930 = !DILocation(line: 828, column: 3, scope: !6928)
!6931 = !DILocation(line: 830, column: 7, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 830, column: 7)
!6933 = !DILocation(line: 830, column: 12, scope: !6932)
!6934 = !DILocation(line: 830, column: 22, scope: !6932)
!6935 = !DILocation(line: 830, column: 7, scope: !6919)
!6936 = !DILocation(line: 831, column: 24, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 830, column: 27)
!6938 = !DILocation(line: 831, column: 32, scope: !6937)
!6939 = !DILocation(line: 831, column: 37, scope: !6937)
!6940 = !DILocation(line: 831, column: 45, scope: !6937)
!6941 = !DILocation(line: 831, column: 52, scope: !6937)
!6942 = !DILocation(line: 831, column: 59, scope: !6937)
!6943 = !DILocation(line: 831, column: 4, scope: !6937)
!6944 = !DILocation(line: 831, column: 9, scope: !6937)
!6945 = !DILocation(line: 831, column: 17, scope: !6937)
!6946 = !DILocation(line: 831, column: 22, scope: !6937)
!6947 = !DILocation(line: 832, column: 36, scope: !6937)
!6948 = !DILocation(line: 832, column: 44, scope: !6937)
!6949 = !DILocation(line: 832, column: 49, scope: !6937)
!6950 = !DILocation(line: 832, column: 57, scope: !6937)
!6951 = !DILocation(line: 832, column: 64, scope: !6937)
!6952 = !DILocation(line: 832, column: 69, scope: !6937)
!6953 = !DILocation(line: 832, column: 23, scope: !6937)
!6954 = !DILocation(line: 832, column: 4, scope: !6937)
!6955 = !DILocation(line: 832, column: 29, scope: !6937)
!6956 = !DILocation(line: 832, column: 34, scope: !6937)
!6957 = !DILocation(line: 833, column: 3, scope: !6937)
!6958 = !DILocation(line: 835, column: 25, scope: !6919)
!6959 = !DILocation(line: 835, column: 33, scope: !6919)
!6960 = !DILocation(line: 835, column: 38, scope: !6919)
!6961 = !DILocation(line: 835, column: 46, scope: !6919)
!6962 = !DILocation(line: 835, column: 51, scope: !6919)
!6963 = !DILocation(line: 835, column: 59, scope: !6919)
!6964 = !DILocation(line: 835, column: 64, scope: !6919)
!6965 = !DILocation(line: 835, column: 75, scope: !6919)
!6966 = !DILocation(line: 835, column: 82, scope: !6919)
!6967 = !DILocation(line: 835, column: 3, scope: !6919)
!6968 = !DILocation(line: 837, column: 19, scope: !6919)
!6969 = !DILocation(line: 837, column: 27, scope: !6919)
!6970 = !DILocation(line: 837, column: 3, scope: !6919)
!6971 = !DILocation(line: 839, column: 20, scope: !6919)
!6972 = !DILocation(line: 839, column: 3, scope: !6919)
!6973 = !DILocation(line: 840, column: 2, scope: !6919)
!6974 = !DILocation(line: 841, column: 1, scope: !6907)
!6975 = distinct !DISubprogram(name: "sk_getStrokePoint", scope: !3, file: !3, line: 1171, type: !6976, scopeLine: 1172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!6976 = !DISubroutineType(types: !6977)
!6977 = !{null, !228, !203, !1920, !195, !5058, !4977}
!6978 = !DILocalVariable(name: "C", arg: 1, scope: !6975, file: !3, line: 1171, type: !228)
!6979 = !DILocation(line: 1171, column: 41, scope: !6975)
!6980 = !DILocalVariable(name: "pt", arg: 2, scope: !6975, file: !3, line: 1171, type: !203)
!6981 = !DILocation(line: 1171, column: 54, scope: !6975)
!6982 = !DILocalVariable(name: "sketch", arg: 3, scope: !6975, file: !3, line: 1171, type: !1920)
!6983 = !DILocation(line: 1171, column: 69, scope: !6975)
!6984 = !DILocalVariable(name: "stk", arg: 4, scope: !6975, file: !3, line: 1171, type: !195)
!6985 = !DILocation(line: 1171, column: 88, scope: !6975)
!6986 = !DILocalVariable(name: "dd", arg: 5, scope: !6975, file: !3, line: 1171, type: !5058)
!6987 = !DILocation(line: 1171, column: 106, scope: !6975)
!6988 = !DILocalVariable(name: "snap", arg: 6, scope: !6975, file: !3, line: 1171, type: !4977)
!6989 = !DILocation(line: 1171, column: 121, scope: !6975)
!6990 = !DILocalVariable(name: "point_added", scope: !6975, file: !3, line: 1173, type: !91)
!6991 = !DILocation(line: 1173, column: 6, scope: !6975)
!6992 = !DILocation(line: 1175, column: 6, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6975, file: !3, line: 1175, column: 6)
!6994 = !DILocation(line: 1175, column: 6, scope: !6975)
!6995 = !DILocation(line: 1176, column: 39, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 1175, column: 12)
!6997 = !DILocation(line: 1176, column: 42, scope: !6996)
!6998 = !DILocation(line: 1176, column: 46, scope: !6996)
!6999 = !DILocation(line: 1176, column: 54, scope: !6996)
!7000 = !DILocation(line: 1176, column: 59, scope: !6996)
!7001 = !DILocation(line: 1176, column: 17, scope: !6996)
!7002 = !DILocation(line: 1176, column: 15, scope: !6996)
!7003 = !DILocation(line: 1177, column: 25, scope: !6996)
!7004 = !DILocation(line: 1178, column: 31, scope: !6996)
!7005 = !DILocation(line: 1178, column: 35, scope: !6996)
!7006 = !DILocation(line: 1178, column: 3, scope: !6996)
!7007 = !DILocation(line: 1179, column: 2, scope: !6996)
!7008 = !DILocation(line: 1181, column: 25, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 1180, column: 7)
!7010 = !DILocation(line: 1184, column: 6, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !6975, file: !3, line: 1184, column: 6)
!7012 = !DILocation(line: 1184, column: 18, scope: !7011)
!7013 = !DILocation(line: 1184, column: 6, scope: !6975)
!7014 = !DILocation(line: 1185, column: 39, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 1184, column: 24)
!7016 = !DILocation(line: 1185, column: 42, scope: !7015)
!7017 = !DILocation(line: 1185, column: 46, scope: !7015)
!7018 = !DILocation(line: 1185, column: 54, scope: !7015)
!7019 = !DILocation(line: 1185, column: 59, scope: !7015)
!7020 = !DILocation(line: 1185, column: 17, scope: !7015)
!7021 = !DILocation(line: 1185, column: 15, scope: !7015)
!7022 = !DILocation(line: 1186, column: 2, scope: !7015)
!7023 = !DILocation(line: 1187, column: 1, scope: !6975)
!7024 = distinct !DISubprogram(name: "sk_getStrokeSnapPoint", scope: !3, file: !3, line: 971, type: !7025, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!7025 = !DISubroutineType(types: !7026)
!7026 = !{!91, !228, !203, !1920, !195, !5058}
!7027 = !DILocalVariable(name: "C", arg: 1, scope: !7024, file: !3, line: 971, type: !228)
!7028 = !DILocation(line: 971, column: 44, scope: !7024)
!7029 = !DILocalVariable(name: "pt", arg: 2, scope: !7024, file: !3, line: 971, type: !203)
!7030 = !DILocation(line: 971, column: 57, scope: !7024)
!7031 = !DILocalVariable(name: "sketch", arg: 3, scope: !7024, file: !3, line: 971, type: !1920)
!7032 = !DILocation(line: 971, column: 72, scope: !7024)
!7033 = !DILocalVariable(name: "stk", arg: 4, scope: !7024, file: !3, line: 971, type: !195)
!7034 = !DILocation(line: 971, column: 91, scope: !7024)
!7035 = !DILocalVariable(name: "dd", arg: 5, scope: !7024, file: !3, line: 971, type: !5058)
!7036 = !DILocation(line: 971, column: 109, scope: !7024)
!7037 = !DILocalVariable(name: "ts", scope: !7024, file: !3, line: 973, type: !1967)
!7038 = !DILocation(line: 973, column: 16, scope: !7024)
!7039 = !DILocation(line: 973, column: 44, scope: !7024)
!7040 = !DILocation(line: 973, column: 21, scope: !7024)
!7041 = !DILocalVariable(name: "point_added", scope: !7024, file: !3, line: 974, type: !91)
!7042 = !DILocation(line: 974, column: 6, scope: !7024)
!7043 = !DILocation(line: 976, column: 6, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7024, file: !3, line: 976, column: 6)
!7045 = !DILocation(line: 976, column: 10, scope: !7044)
!7046 = !DILocation(line: 976, column: 20, scope: !7044)
!7047 = !DILocation(line: 976, column: 6, scope: !7024)
!7048 = !DILocalVariable(name: "p1", scope: !7049, file: !3, line: 977, type: !7050)
!7049 = distinct !DILexicalBlock(scope: !7044, file: !3, line: 976, column: 45)
!7050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7051, size: 64)
!7051 = !DIDerivedType(tag: DW_TAG_typedef, name: "DepthPeel", file: !81, line: 168, baseType: !7052)
!7052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DepthPeel", file: !81, line: 160, size: 512, elements: !7053)
!7053 = !{!7054, !7056, !7057, !7058, !7059, !7060, !7061}
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7052, file: !81, line: 161, baseType: !7055, size: 64)
!7055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7052, size: 64)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7052, file: !81, line: 161, baseType: !7055, size: 64, offset: 64)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !7052, file: !81, line: 163, baseType: !106, size: 32, offset: 128)
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !7052, file: !81, line: 164, baseType: !124, size: 96, offset: 160)
!7059 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !7052, file: !81, line: 165, baseType: !124, size: 96, offset: 256)
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !7052, file: !81, line: 166, baseType: !384, size: 64, offset: 384)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7052, file: !81, line: 167, baseType: !91, size: 32, offset: 448)
!7062 = !DILocation(line: 977, column: 14, scope: !7049)
!7063 = !DILocalVariable(name: "p2", scope: !7049, file: !3, line: 977, type: !7050)
!7064 = !DILocation(line: 977, column: 19, scope: !7049)
!7065 = !DILocalVariable(name: "last_p", scope: !7049, file: !3, line: 978, type: !189)
!7066 = !DILocation(line: 978, column: 10, scope: !7049)
!7067 = !DILocalVariable(name: "dist", scope: !7049, file: !3, line: 979, type: !106)
!7068 = !DILocation(line: 979, column: 9, scope: !7049)
!7069 = !DILocalVariable(name: "p", scope: !7049, file: !3, line: 980, type: !124)
!7070 = !DILocation(line: 980, column: 9, scope: !7049)
!7071 = !DILocalVariable(name: "size", scope: !7049, file: !3, line: 981, type: !106)
!7072 = !DILocation(line: 981, column: 9, scope: !7049)
!7073 = !DILocalVariable(name: "mvalf", scope: !7049, file: !3, line: 982, type: !694)
!7074 = !DILocation(line: 982, column: 9, scope: !7049)
!7075 = !DILocation(line: 984, column: 18, scope: !7049)
!7076 = !DILocation(line: 984, column: 26, scope: !7049)
!7077 = !DILocation(line: 984, column: 3, scope: !7049)
!7078 = !DILocation(line: 985, column: 23, scope: !7049)
!7079 = !DILocation(line: 985, column: 31, scope: !7049)
!7080 = !DILocation(line: 985, column: 3, scope: !7049)
!7081 = !DILocation(line: 987, column: 14, scope: !7049)
!7082 = !DILocation(line: 987, column: 18, scope: !7049)
!7083 = !DILocation(line: 987, column: 3, scope: !7049)
!7084 = !DILocation(line: 987, column: 12, scope: !7049)
!7085 = !DILocation(line: 988, column: 14, scope: !7049)
!7086 = !DILocation(line: 988, column: 18, scope: !7049)
!7087 = !DILocation(line: 988, column: 3, scope: !7049)
!7088 = !DILocation(line: 988, column: 12, scope: !7049)
!7089 = !DILocation(line: 989, column: 22, scope: !7049)
!7090 = !DILocation(line: 989, column: 26, scope: !7049)
!7091 = !DILocation(line: 989, column: 34, scope: !7049)
!7092 = !DILocation(line: 989, column: 47, scope: !7049)
!7093 = !DILocation(line: 989, column: 3, scope: !7049)
!7094 = !DILocation(line: 991, column: 7, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 991, column: 7)
!7096 = !DILocation(line: 991, column: 12, scope: !7095)
!7097 = !DILocation(line: 991, column: 22, scope: !7095)
!7098 = !DILocation(line: 991, column: 26, scope: !7095)
!7099 = !DILocation(line: 991, column: 29, scope: !7095)
!7100 = !DILocation(line: 991, column: 34, scope: !7095)
!7101 = !DILocation(line: 991, column: 41, scope: !7095)
!7102 = !DILocation(line: 991, column: 46, scope: !7095)
!7103 = !DILocation(line: 991, column: 56, scope: !7095)
!7104 = !DILocation(line: 991, column: 61, scope: !7095)
!7105 = !DILocation(line: 991, column: 66, scope: !7095)
!7106 = !DILocation(line: 991, column: 7, scope: !7049)
!7107 = !DILocation(line: 992, column: 13, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 991, column: 84)
!7109 = !DILocation(line: 992, column: 18, scope: !7108)
!7110 = !DILocation(line: 992, column: 25, scope: !7108)
!7111 = !DILocation(line: 992, column: 30, scope: !7108)
!7112 = !DILocation(line: 992, column: 40, scope: !7108)
!7113 = !DILocation(line: 992, column: 45, scope: !7108)
!7114 = !DILocation(line: 992, column: 11, scope: !7108)
!7115 = !DILocation(line: 993, column: 3, scope: !7108)
!7116 = !DILocation(line: 994, column: 12, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 994, column: 12)
!7118 = !DILocation(line: 994, column: 12, scope: !7095)
!7119 = !DILocation(line: 995, column: 11, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 994, column: 35)
!7121 = !DILocation(line: 996, column: 3, scope: !7120)
!7122 = !DILocation(line: 999, column: 13, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 999, column: 3)
!7124 = !DILocation(line: 999, column: 21, scope: !7123)
!7125 = !DILocation(line: 999, column: 33, scope: !7123)
!7126 = !DILocation(line: 999, column: 11, scope: !7123)
!7127 = !DILocation(line: 999, column: 8, scope: !7123)
!7128 = !DILocation(line: 999, column: 40, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 999, column: 3)
!7130 = !DILocation(line: 999, column: 3, scope: !7123)
!7131 = !DILocation(line: 1000, column: 8, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7133, file: !3, line: 1000, column: 8)
!7133 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 999, column: 59)
!7134 = !DILocation(line: 1000, column: 12, scope: !7132)
!7135 = !DILocation(line: 1000, column: 17, scope: !7132)
!7136 = !DILocation(line: 1000, column: 8, scope: !7133)
!7137 = !DILocalVariable(name: "vec", scope: !7138, file: !3, line: 1001, type: !124)
!7138 = distinct !DILexicalBlock(scope: !7132, file: !3, line: 1000, column: 23)
!7139 = !DILocation(line: 1001, column: 11, scope: !7138)
!7140 = !DILocalVariable(name: "new_dist", scope: !7138, file: !3, line: 1002, type: !106)
!7141 = !DILocation(line: 1002, column: 11, scope: !7138)
!7142 = !DILocalVariable(name: "new_size", scope: !7138, file: !3, line: 1003, type: !106)
!7143 = !DILocation(line: 1003, column: 11, scope: !7138)
!7144 = !DILocation(line: 1005, column: 8, scope: !7138)
!7145 = !DILocation(line: 1006, column: 5, scope: !7138)
!7146 = !DILocation(line: 1006, column: 9, scope: !7138)
!7147 = !DILocation(line: 1006, column: 14, scope: !7138)
!7148 = !DILocation(line: 1009, column: 9, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 1009, column: 9)
!7150 = !DILocation(line: 1009, column: 13, scope: !7149)
!7151 = !DILocation(line: 1009, column: 23, scope: !7149)
!7152 = !DILocation(line: 1009, column: 9, scope: !7138)
!7153 = !DILocalVariable(name: "peel", scope: !7154, file: !3, line: 1010, type: !7050)
!7154 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 1009, column: 47)
!7155 = !DILocation(line: 1010, column: 17, scope: !7154)
!7156 = !DILocation(line: 1011, column: 18, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 1011, column: 6)
!7158 = !DILocation(line: 1011, column: 22, scope: !7157)
!7159 = !DILocation(line: 1011, column: 16, scope: !7157)
!7160 = !DILocation(line: 1011, column: 11, scope: !7157)
!7161 = !DILocation(line: 1011, column: 28, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1011, column: 6)
!7163 = !DILocation(line: 1011, column: 6, scope: !7157)
!7164 = !DILocation(line: 1012, column: 11, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7166, file: !3, line: 1012, column: 11)
!7166 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 1011, column: 53)
!7167 = !DILocation(line: 1012, column: 17, scope: !7165)
!7168 = !DILocation(line: 1012, column: 23, scope: !7165)
!7169 = !DILocation(line: 1012, column: 27, scope: !7165)
!7170 = !DILocation(line: 1012, column: 20, scope: !7165)
!7171 = !DILocation(line: 1012, column: 11, scope: !7166)
!7172 = !DILocation(line: 1013, column: 8, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1012, column: 31)
!7174 = !DILocation(line: 1013, column: 14, scope: !7173)
!7175 = !DILocation(line: 1013, column: 19, scope: !7173)
!7176 = !DILocation(line: 1014, column: 13, scope: !7173)
!7177 = !DILocation(line: 1014, column: 11, scope: !7173)
!7178 = !DILocation(line: 1015, column: 7, scope: !7173)
!7179 = !DILocation(line: 1016, column: 6, scope: !7166)
!7180 = !DILocation(line: 1011, column: 41, scope: !7162)
!7181 = !DILocation(line: 1011, column: 47, scope: !7162)
!7182 = !DILocation(line: 1011, column: 39, scope: !7162)
!7183 = !DILocation(line: 1011, column: 6, scope: !7162)
!7184 = distinct !{!7184, !7163, !7185}
!7185 = !DILocation(line: 1016, column: 6, scope: !7157)
!7186 = !DILocation(line: 1017, column: 5, scope: !7154)
!7187 = !DILocation(line: 1020, column: 16, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7189, file: !3, line: 1020, column: 6)
!7189 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 1019, column: 10)
!7190 = !DILocation(line: 1020, column: 20, scope: !7188)
!7191 = !DILocation(line: 1020, column: 14, scope: !7188)
!7192 = !DILocation(line: 1020, column: 11, scope: !7188)
!7193 = !DILocation(line: 1020, column: 26, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 1020, column: 6)
!7195 = !DILocation(line: 1020, column: 29, scope: !7194)
!7196 = !DILocation(line: 1020, column: 32, scope: !7194)
!7197 = !DILocation(line: 1020, column: 36, scope: !7194)
!7198 = !DILocation(line: 1020, column: 42, scope: !7194)
!7199 = !DILocation(line: 1020, column: 46, scope: !7194)
!7200 = !DILocation(line: 1020, column: 39, scope: !7194)
!7201 = !DILocation(line: 0, scope: !7194)
!7202 = !DILocation(line: 1020, column: 6, scope: !7188)
!7203 = !DILocation(line: 1022, column: 6, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7194, file: !3, line: 1020, column: 65)
!7205 = !DILocation(line: 1020, column: 55, scope: !7194)
!7206 = !DILocation(line: 1020, column: 59, scope: !7194)
!7207 = !DILocation(line: 1020, column: 53, scope: !7194)
!7208 = !DILocation(line: 1020, column: 6, scope: !7194)
!7209 = distinct !{!7209, !7202, !7210}
!7210 = !DILocation(line: 1022, column: 6, scope: !7188)
!7211 = !DILocation(line: 1025, column: 9, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 1025, column: 9)
!7213 = !DILocation(line: 1025, column: 9, scope: !7138)
!7214 = !DILocation(line: 1026, column: 6, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7212, file: !3, line: 1025, column: 13)
!7216 = !DILocation(line: 1026, column: 10, scope: !7215)
!7217 = !DILocation(line: 1026, column: 15, scope: !7215)
!7218 = !DILocation(line: 1028, column: 18, scope: !7215)
!7219 = !DILocation(line: 1028, column: 23, scope: !7215)
!7220 = !DILocation(line: 1028, column: 27, scope: !7215)
!7221 = !DILocation(line: 1028, column: 30, scope: !7215)
!7222 = !DILocation(line: 1028, column: 34, scope: !7215)
!7223 = !DILocation(line: 1028, column: 6, scope: !7215)
!7224 = !DILocation(line: 1029, column: 16, scope: !7215)
!7225 = !DILocation(line: 1029, column: 6, scope: !7215)
!7226 = !DILocation(line: 1030, column: 26, scope: !7215)
!7227 = !DILocation(line: 1030, column: 30, scope: !7215)
!7228 = !DILocation(line: 1030, column: 33, scope: !7215)
!7229 = !DILocation(line: 1030, column: 37, scope: !7215)
!7230 = !DILocation(line: 1030, column: 17, scope: !7215)
!7231 = !DILocation(line: 1030, column: 15, scope: !7215)
!7232 = !DILocation(line: 1031, column: 5, scope: !7215)
!7233 = !DILocation(line: 1033, column: 17, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7212, file: !3, line: 1032, column: 10)
!7235 = !DILocation(line: 1033, column: 22, scope: !7234)
!7236 = !DILocation(line: 1033, column: 26, scope: !7234)
!7237 = !DILocation(line: 1033, column: 6, scope: !7234)
!7238 = !DILocation(line: 1036, column: 9, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 1036, column: 9)
!7240 = !DILocation(line: 1036, column: 16, scope: !7239)
!7241 = !DILocation(line: 1036, column: 9, scope: !7138)
!7242 = !DILocation(line: 1037, column: 17, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 1036, column: 25)
!7244 = !DILocation(line: 1037, column: 20, scope: !7243)
!7245 = !DILocation(line: 1037, column: 6, scope: !7243)
!7246 = !DILocation(line: 1038, column: 13, scope: !7243)
!7247 = !DILocation(line: 1038, column: 11, scope: !7243)
!7248 = !DILocation(line: 1039, column: 11, scope: !7243)
!7249 = !DILocation(line: 1040, column: 6, scope: !7243)
!7250 = !DILocation(line: 1043, column: 25, scope: !7138)
!7251 = !DILocation(line: 1043, column: 33, scope: !7138)
!7252 = !DILocation(line: 1043, column: 16, scope: !7138)
!7253 = !DILocation(line: 1043, column: 14, scope: !7138)
!7254 = !DILocation(line: 1045, column: 9, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 1045, column: 9)
!7256 = !DILocation(line: 1045, column: 20, scope: !7255)
!7257 = !DILocation(line: 1045, column: 18, scope: !7255)
!7258 = !DILocation(line: 1045, column: 9, scope: !7138)
!7259 = !DILocation(line: 1046, column: 17, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7255, file: !3, line: 1045, column: 26)
!7261 = !DILocation(line: 1046, column: 20, scope: !7260)
!7262 = !DILocation(line: 1046, column: 6, scope: !7260)
!7263 = !DILocation(line: 1047, column: 13, scope: !7260)
!7264 = !DILocation(line: 1047, column: 11, scope: !7260)
!7265 = !DILocation(line: 1048, column: 13, scope: !7260)
!7266 = !DILocation(line: 1048, column: 11, scope: !7260)
!7267 = !DILocation(line: 1049, column: 5, scope: !7260)
!7268 = !DILocation(line: 1050, column: 4, scope: !7138)
!7269 = !DILocation(line: 1051, column: 3, scope: !7133)
!7270 = !DILocation(line: 999, column: 49, scope: !7129)
!7271 = !DILocation(line: 999, column: 53, scope: !7129)
!7272 = !DILocation(line: 999, column: 47, scope: !7129)
!7273 = !DILocation(line: 999, column: 3, scope: !7129)
!7274 = distinct !{!7274, !7130, !7275}
!7275 = !DILocation(line: 1051, column: 3, scope: !7123)
!7276 = !DILocation(line: 1053, column: 7, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 1053, column: 7)
!7278 = !DILocation(line: 1053, column: 12, scope: !7277)
!7279 = !DILocation(line: 1053, column: 7, scope: !7049)
!7280 = !DILocation(line: 1054, column: 15, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7277, file: !3, line: 1053, column: 24)
!7282 = !DILocation(line: 1054, column: 19, scope: !7281)
!7283 = !DILocation(line: 1054, column: 4, scope: !7281)
!7284 = !DILocation(line: 1054, column: 8, scope: !7281)
!7285 = !DILocation(line: 1054, column: 13, scope: !7281)
!7286 = !DILocation(line: 1055, column: 4, scope: !7281)
!7287 = !DILocation(line: 1055, column: 8, scope: !7281)
!7288 = !DILocation(line: 1055, column: 13, scope: !7281)
!7289 = !DILocation(line: 1056, column: 15, scope: !7281)
!7290 = !DILocation(line: 1056, column: 20, scope: !7281)
!7291 = !DILocation(line: 1056, column: 4, scope: !7281)
!7292 = !DILocation(line: 1056, column: 8, scope: !7281)
!7293 = !DILocation(line: 1056, column: 13, scope: !7281)
!7294 = !DILocation(line: 1057, column: 15, scope: !7281)
!7295 = !DILocation(line: 1057, column: 19, scope: !7281)
!7296 = !DILocation(line: 1057, column: 22, scope: !7281)
!7297 = !DILocation(line: 1057, column: 4, scope: !7281)
!7298 = !DILocation(line: 1059, column: 16, scope: !7281)
!7299 = !DILocation(line: 1060, column: 3, scope: !7281)
!7300 = !DILocation(line: 1063, column: 2, scope: !7049)
!7301 = !DILocalVariable(name: "snap_stk", scope: !7302, file: !3, line: 1065, type: !195)
!7302 = distinct !DILexicalBlock(scope: !7044, file: !3, line: 1064, column: 7)
!7303 = !DILocation(line: 1065, column: 14, scope: !7302)
!7304 = !DILocalVariable(name: "vec", scope: !7302, file: !3, line: 1066, type: !124)
!7305 = !DILocation(line: 1066, column: 9, scope: !7302)
!7306 = !DILocalVariable(name: "no", scope: !7302, file: !3, line: 1067, type: !124)
!7307 = !DILocation(line: 1067, column: 9, scope: !7302)
!7308 = !DILocalVariable(name: "mval", scope: !7302, file: !3, line: 1068, type: !694)
!7309 = !DILocation(line: 1068, column: 9, scope: !7302)
!7310 = !DILocalVariable(name: "found", scope: !7302, file: !3, line: 1069, type: !91)
!7311 = !DILocation(line: 1069, column: 7, scope: !7302)
!7312 = !DILocalVariable(name: "dist_px", scope: !7302, file: !3, line: 1070, type: !106)
!7313 = !DILocation(line: 1070, column: 9, scope: !7302)
!7314 = !DILocation(line: 1074, column: 19, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 1074, column: 3)
!7316 = !DILocation(line: 1074, column: 27, scope: !7315)
!7317 = !DILocation(line: 1074, column: 35, scope: !7315)
!7318 = !DILocation(line: 1074, column: 17, scope: !7315)
!7319 = !DILocation(line: 1074, column: 8, scope: !7315)
!7320 = !DILocation(line: 1074, column: 42, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 1074, column: 3)
!7322 = !DILocation(line: 1074, column: 3, scope: !7315)
!7323 = !DILocalVariable(name: "spt", scope: !7324, file: !3, line: 1075, type: !203)
!7324 = distinct !DILexicalBlock(scope: !7321, file: !3, line: 1074, column: 79)
!7325 = !DILocation(line: 1075, column: 14, scope: !7324)
!7326 = !DILocation(line: 1076, column: 8, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 1076, column: 8)
!7328 = !DILocation(line: 1076, column: 20, scope: !7327)
!7329 = !DILocation(line: 1076, column: 17, scope: !7327)
!7330 = !DILocation(line: 1076, column: 8, scope: !7324)
!7331 = !DILocation(line: 1077, column: 30, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 1076, column: 25)
!7333 = !DILocation(line: 1077, column: 33, scope: !7332)
!7334 = !DILocation(line: 1077, column: 43, scope: !7332)
!7335 = !DILocation(line: 1077, column: 47, scope: !7332)
!7336 = !DILocation(line: 1077, column: 11, scope: !7332)
!7337 = !DILocation(line: 1077, column: 9, scope: !7332)
!7338 = !DILocation(line: 1078, column: 4, scope: !7332)
!7339 = !DILocation(line: 1080, column: 30, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 1079, column: 9)
!7341 = !DILocation(line: 1080, column: 33, scope: !7340)
!7342 = !DILocation(line: 1080, column: 43, scope: !7340)
!7343 = !DILocation(line: 1080, column: 47, scope: !7340)
!7344 = !DILocation(line: 1080, column: 11, scope: !7340)
!7345 = !DILocation(line: 1080, column: 9, scope: !7340)
!7346 = !DILocation(line: 1083, column: 8, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 1083, column: 8)
!7348 = !DILocation(line: 1083, column: 12, scope: !7347)
!7349 = !DILocation(line: 1083, column: 8, scope: !7324)
!7350 = !DILocation(line: 1084, column: 16, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7347, file: !3, line: 1083, column: 21)
!7352 = !DILocation(line: 1084, column: 20, scope: !7351)
!7353 = !DILocation(line: 1084, column: 23, scope: !7351)
!7354 = !DILocation(line: 1084, column: 28, scope: !7351)
!7355 = !DILocation(line: 1084, column: 5, scope: !7351)
!7356 = !DILocation(line: 1085, column: 17, scope: !7351)
!7357 = !DILocation(line: 1086, column: 4, scope: !7351)
!7358 = !DILocation(line: 1087, column: 3, scope: !7324)
!7359 = !DILocation(line: 1074, column: 63, scope: !7321)
!7360 = !DILocation(line: 1074, column: 73, scope: !7321)
!7361 = !DILocation(line: 1074, column: 61, scope: !7321)
!7362 = !DILocation(line: 1074, column: 3, scope: !7321)
!7363 = distinct !{!7363, !7322, !7364}
!7364 = !DILocation(line: 1087, column: 3, scope: !7315)
!7365 = !DILocation(line: 1089, column: 13, scope: !7302)
!7366 = !DILocation(line: 1089, column: 17, scope: !7302)
!7367 = !DILocation(line: 1089, column: 3, scope: !7302)
!7368 = !DILocation(line: 1089, column: 11, scope: !7302)
!7369 = !DILocation(line: 1090, column: 13, scope: !7302)
!7370 = !DILocation(line: 1090, column: 17, scope: !7302)
!7371 = !DILocation(line: 1090, column: 3, scope: !7302)
!7372 = !DILocation(line: 1090, column: 11, scope: !7302)
!7373 = !DILocation(line: 1093, column: 30, scope: !7302)
!7374 = !DILocation(line: 1093, column: 33, scope: !7302)
!7375 = !DILocation(line: 1093, column: 49, scope: !7302)
!7376 = !DILocation(line: 1093, column: 54, scope: !7302)
!7377 = !DILocation(line: 1093, column: 11, scope: !7302)
!7378 = !DILocation(line: 1093, column: 9, scope: !7302)
!7379 = !DILocation(line: 1094, column: 7, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 1094, column: 7)
!7381 = !DILocation(line: 1094, column: 13, scope: !7380)
!7382 = !DILocation(line: 1094, column: 7, scope: !7302)
!7383 = !DILocation(line: 1095, column: 15, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7380, file: !3, line: 1094, column: 19)
!7385 = !DILocation(line: 1095, column: 19, scope: !7384)
!7386 = !DILocation(line: 1095, column: 4, scope: !7384)
!7387 = !DILocation(line: 1095, column: 8, scope: !7384)
!7388 = !DILocation(line: 1095, column: 13, scope: !7384)
!7389 = !DILocation(line: 1096, column: 4, scope: !7384)
!7390 = !DILocation(line: 1096, column: 8, scope: !7384)
!7391 = !DILocation(line: 1096, column: 13, scope: !7384)
!7392 = !DILocation(line: 1097, column: 15, scope: !7384)
!7393 = !DILocation(line: 1097, column: 19, scope: !7384)
!7394 = !DILocation(line: 1097, column: 22, scope: !7384)
!7395 = !DILocation(line: 1097, column: 4, scope: !7384)
!7396 = !DILocation(line: 1099, column: 16, scope: !7384)
!7397 = !DILocation(line: 1100, column: 3, scope: !7384)
!7398 = !DILocation(line: 1103, column: 9, scope: !7024)
!7399 = !DILocation(line: 1103, column: 2, scope: !7024)
!7400 = distinct !DISubprogram(name: "sk_getStrokeDrawPoint", scope: !3, file: !3, line: 947, type: !7025, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!7401 = !DILocalVariable(name: "C", arg: 1, scope: !7400, file: !3, line: 947, type: !228)
!7402 = !DILocation(line: 947, column: 44, scope: !7400)
!7403 = !DILocalVariable(name: "pt", arg: 2, scope: !7400, file: !3, line: 947, type: !203)
!7404 = !DILocation(line: 947, column: 57, scope: !7400)
!7405 = !DILocalVariable(name: "UNUSED_sketch", arg: 3, scope: !7400, file: !3, line: 947, type: !1920)
!7406 = !DILocation(line: 947, column: 72, scope: !7400)
!7407 = !DILocalVariable(name: "stk", arg: 4, scope: !7400, file: !3, line: 947, type: !195)
!7408 = !DILocation(line: 947, column: 99, scope: !7400)
!7409 = !DILocalVariable(name: "dd", arg: 5, scope: !7400, file: !3, line: 947, type: !5058)
!7410 = !DILocation(line: 947, column: 117, scope: !7400)
!7411 = !DILocation(line: 949, column: 13, scope: !7400)
!7412 = !DILocation(line: 949, column: 17, scope: !7400)
!7413 = !DILocation(line: 949, column: 2, scope: !7400)
!7414 = !DILocation(line: 949, column: 6, scope: !7400)
!7415 = !DILocation(line: 949, column: 11, scope: !7400)
!7416 = !DILocation(line: 950, column: 2, scope: !7400)
!7417 = !DILocation(line: 950, column: 6, scope: !7400)
!7418 = !DILocation(line: 950, column: 11, scope: !7400)
!7419 = !DILocation(line: 951, column: 22, scope: !7400)
!7420 = !DILocation(line: 951, column: 25, scope: !7400)
!7421 = !DILocation(line: 951, column: 29, scope: !7400)
!7422 = !DILocation(line: 951, column: 32, scope: !7400)
!7423 = !DILocation(line: 951, column: 37, scope: !7400)
!7424 = !DILocation(line: 951, column: 2, scope: !7400)
!7425 = !DILocation(line: 953, column: 2, scope: !7400)
!7426 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !7427, file: !7427, line: 89, type: !7428, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!7427 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7428 = !DISubroutineType(types: !7429)
!7429 = !{null, !7430}
!7430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !100, size: 64)
!7431 = !DILocalVariable(name: "lb", arg: 1, scope: !7426, file: !7427, line: 89, type: !7430)
!7432 = !DILocation(line: 89, column: 53, scope: !7426)
!7433 = !DILocation(line: 89, column: 71, scope: !7426)
!7434 = !DILocation(line: 89, column: 75, scope: !7426)
!7435 = !DILocation(line: 89, column: 80, scope: !7426)
!7436 = !DILocation(line: 89, column: 59, scope: !7426)
!7437 = !DILocation(line: 89, column: 63, scope: !7426)
!7438 = !DILocation(line: 89, column: 69, scope: !7426)
!7439 = !DILocation(line: 89, column: 93, scope: !7426)
!7440 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !2696, file: !2696, line: 309, type: !2777, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!7441 = !DILocalVariable(name: "r", arg: 1, scope: !7440, file: !2696, line: 309, type: !189)
!7442 = !DILocation(line: 309, column: 32, scope: !7440)
!7443 = !DILocalVariable(name: "a", arg: 2, scope: !7440, file: !2696, line: 309, type: !2699)
!7444 = !DILocation(line: 309, column: 50, scope: !7440)
!7445 = !DILocalVariable(name: "b", arg: 3, scope: !7440, file: !2696, line: 309, type: !2699)
!7446 = !DILocation(line: 309, column: 68, scope: !7440)
!7447 = !DILocation(line: 311, column: 9, scope: !7440)
!7448 = !DILocation(line: 311, column: 16, scope: !7440)
!7449 = !DILocation(line: 311, column: 14, scope: !7440)
!7450 = !DILocation(line: 311, column: 2, scope: !7440)
!7451 = !DILocation(line: 311, column: 7, scope: !7440)
!7452 = !DILocation(line: 312, column: 9, scope: !7440)
!7453 = !DILocation(line: 312, column: 16, scope: !7440)
!7454 = !DILocation(line: 312, column: 14, scope: !7440)
!7455 = !DILocation(line: 312, column: 2, scope: !7440)
!7456 = !DILocation(line: 312, column: 7, scope: !7440)
!7457 = !DILocation(line: 313, column: 9, scope: !7440)
!7458 = !DILocation(line: 313, column: 16, scope: !7440)
!7459 = !DILocation(line: 313, column: 14, scope: !7440)
!7460 = !DILocation(line: 313, column: 2, scope: !7440)
!7461 = !DILocation(line: 313, column: 7, scope: !7440)
!7462 = !DILocation(line: 314, column: 1, scope: !7440)
!7463 = distinct !DISubprogram(name: "len_v3v3", scope: !2696, file: !2696, line: 759, type: !2910, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!7464 = !DILocalVariable(name: "a", arg: 1, scope: !7463, file: !2696, line: 759, type: !2699)
!7465 = !DILocation(line: 759, column: 36, scope: !7463)
!7466 = !DILocalVariable(name: "b", arg: 2, scope: !7463, file: !2696, line: 759, type: !2699)
!7467 = !DILocation(line: 759, column: 54, scope: !7463)
!7468 = !DILocalVariable(name: "d", scope: !7463, file: !2696, line: 761, type: !124)
!7469 = !DILocation(line: 761, column: 8, scope: !7463)
!7470 = !DILocation(line: 763, column: 14, scope: !7463)
!7471 = !DILocation(line: 763, column: 17, scope: !7463)
!7472 = !DILocation(line: 763, column: 20, scope: !7463)
!7473 = !DILocation(line: 763, column: 2, scope: !7463)
!7474 = !DILocation(line: 764, column: 16, scope: !7463)
!7475 = !DILocation(line: 764, column: 9, scope: !7463)
!7476 = !DILocation(line: 764, column: 2, scope: !7463)
!7477 = distinct !DISubprogram(name: "sk_snapPointStroke", scope: !3, file: !3, line: 633, type: !7478, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!7478 = !DISubroutineType(types: !7479)
!7479 = !{!203, !228, !195, !6205, !189, !6205, !91}
!7480 = !DILocalVariable(name: "C", arg: 1, scope: !7477, file: !3, line: 633, type: !228)
!7481 = !DILocation(line: 633, column: 47, scope: !7477)
!7482 = !DILocalVariable(name: "stk", arg: 2, scope: !7477, file: !3, line: 633, type: !195)
!7483 = !DILocation(line: 633, column: 61, scope: !7477)
!7484 = !DILocalVariable(name: "mval", arg: 3, scope: !7477, file: !3, line: 633, type: !6205)
!7485 = !DILocation(line: 633, column: 70, scope: !7477)
!7486 = !DILocalVariable(name: "r_dist_px", arg: 4, scope: !7477, file: !3, line: 633, type: !189)
!7487 = !DILocation(line: 633, column: 86, scope: !7477)
!7488 = !DILocalVariable(name: "index", arg: 5, scope: !7477, file: !3, line: 633, type: !6205)
!7489 = !DILocation(line: 633, column: 102, scope: !7477)
!7490 = !DILocalVariable(name: "all_pts", arg: 6, scope: !7477, file: !3, line: 633, type: !91)
!7491 = !DILocation(line: 633, column: 113, scope: !7477)
!7492 = !DILocalVariable(name: "ar", scope: !7477, file: !3, line: 635, type: !3193)
!7493 = !DILocation(line: 635, column: 11, scope: !7477)
!7494 = !DILocation(line: 635, column: 30, scope: !7477)
!7495 = !DILocation(line: 635, column: 16, scope: !7477)
!7496 = !DILocalVariable(name: "pt", scope: !7477, file: !3, line: 636, type: !203)
!7497 = !DILocation(line: 636, column: 12, scope: !7477)
!7498 = !DILocalVariable(name: "i", scope: !7477, file: !3, line: 637, type: !91)
!7499 = !DILocation(line: 637, column: 6, scope: !7477)
!7500 = !DILocation(line: 639, column: 9, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7477, file: !3, line: 639, column: 2)
!7502 = !DILocation(line: 639, column: 7, scope: !7501)
!7503 = !DILocation(line: 639, column: 14, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7501, file: !3, line: 639, column: 2)
!7505 = !DILocation(line: 639, column: 18, scope: !7504)
!7506 = !DILocation(line: 639, column: 23, scope: !7504)
!7507 = !DILocation(line: 639, column: 16, scope: !7504)
!7508 = !DILocation(line: 639, column: 2, scope: !7501)
!7509 = !DILocation(line: 640, column: 7, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7511, file: !3, line: 640, column: 7)
!7511 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 639, column: 39)
!7512 = !DILocation(line: 640, column: 15, scope: !7510)
!7513 = !DILocation(line: 640, column: 18, scope: !7510)
!7514 = !DILocation(line: 640, column: 23, scope: !7510)
!7515 = !DILocation(line: 640, column: 30, scope: !7510)
!7516 = !DILocation(line: 640, column: 33, scope: !7510)
!7517 = !DILocation(line: 640, column: 38, scope: !7510)
!7518 = !DILocation(line: 640, column: 7, scope: !7511)
!7519 = !DILocalVariable(name: "pval", scope: !7520, file: !3, line: 641, type: !209)
!7520 = distinct !DILexicalBlock(scope: !7510, file: !3, line: 640, column: 51)
!7521 = !DILocation(line: 641, column: 10, scope: !7520)
!7522 = !DILocalVariable(name: "pdist", scope: !7520, file: !3, line: 642, type: !91)
!7523 = !DILocation(line: 642, column: 8, scope: !7520)
!7524 = !DILocation(line: 644, column: 39, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 644, column: 8)
!7526 = !DILocation(line: 644, column: 43, scope: !7525)
!7527 = !DILocation(line: 644, column: 48, scope: !7525)
!7528 = !DILocation(line: 644, column: 55, scope: !7525)
!7529 = !DILocation(line: 644, column: 58, scope: !7525)
!7530 = !DILocation(line: 644, column: 61, scope: !7525)
!7531 = !DILocation(line: 644, column: 8, scope: !7525)
!7532 = !DILocation(line: 644, column: 86, scope: !7525)
!7533 = !DILocation(line: 644, column: 8, scope: !7520)
!7534 = !DILocation(line: 646, column: 13, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 644, column: 106)
!7536 = !DILocation(line: 646, column: 38, scope: !7535)
!7537 = !DILocation(line: 646, column: 36, scope: !7535)
!7538 = !DILocation(line: 646, column: 11, scope: !7535)
!7539 = !DILocation(line: 648, column: 9, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 648, column: 9)
!7541 = !DILocation(line: 648, column: 18, scope: !7540)
!7542 = !DILocation(line: 648, column: 17, scope: !7540)
!7543 = !DILocation(line: 648, column: 15, scope: !7540)
!7544 = !DILocation(line: 648, column: 9, scope: !7535)
!7545 = !DILocation(line: 649, column: 19, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 648, column: 29)
!7547 = !DILocation(line: 649, column: 7, scope: !7546)
!7548 = !DILocation(line: 649, column: 17, scope: !7546)
!7549 = !DILocation(line: 650, column: 11, scope: !7546)
!7550 = !DILocation(line: 650, column: 16, scope: !7546)
!7551 = !DILocation(line: 650, column: 25, scope: !7546)
!7552 = !DILocation(line: 650, column: 23, scope: !7546)
!7553 = !DILocation(line: 650, column: 9, scope: !7546)
!7554 = !DILocation(line: 652, column: 10, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 652, column: 10)
!7556 = !DILocation(line: 652, column: 16, scope: !7555)
!7557 = !DILocation(line: 652, column: 10, scope: !7546)
!7558 = !DILocation(line: 653, column: 16, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7555, file: !3, line: 652, column: 25)
!7560 = !DILocation(line: 653, column: 8, scope: !7559)
!7561 = !DILocation(line: 653, column: 14, scope: !7559)
!7562 = !DILocation(line: 654, column: 6, scope: !7559)
!7563 = !DILocation(line: 655, column: 5, scope: !7546)
!7564 = !DILocation(line: 656, column: 4, scope: !7535)
!7565 = !DILocation(line: 657, column: 3, scope: !7520)
!7566 = !DILocation(line: 658, column: 2, scope: !7511)
!7567 = !DILocation(line: 639, column: 35, scope: !7504)
!7568 = !DILocation(line: 639, column: 2, scope: !7504)
!7569 = distinct !{!7569, !7508, !7570}
!7570 = !DILocation(line: 658, column: 2, scope: !7501)
!7571 = !DILocation(line: 660, column: 9, scope: !7477)
!7572 = !DILocation(line: 660, column: 2, scope: !7477)
!7573 = distinct !DISubprogram(name: "len_v3", scope: !2696, file: !2696, line: 714, type: !7574, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!7574 = !DISubroutineType(types: !7575)
!7575 = !{!106, !2699}
!7576 = !DILocalVariable(name: "a", arg: 1, scope: !7573, file: !2696, line: 714, type: !2699)
!7577 = !DILocation(line: 714, column: 34, scope: !7573)
!7578 = !DILocation(line: 716, column: 24, scope: !7573)
!7579 = !DILocation(line: 716, column: 27, scope: !7573)
!7580 = !DILocation(line: 716, column: 15, scope: !7573)
!7581 = !DILocation(line: 716, column: 9, scope: !7573)
!7582 = !DILocation(line: 716, column: 2, scope: !7573)
!7583 = distinct !DISubprogram(name: "sk_projectDrawPoint", scope: !3, file: !3, line: 920, type: !7584, scopeLine: 921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!7584 = !DISubroutineType(types: !7585)
!7585 = !{null, !228, !189, !195, !5058}
!7586 = !DILocalVariable(name: "C", arg: 1, scope: !7583, file: !3, line: 920, type: !228)
!7587 = !DILocation(line: 920, column: 43, scope: !7583)
!7588 = !DILocalVariable(name: "vec", arg: 2, scope: !7583, file: !3, line: 920, type: !189)
!7589 = !DILocation(line: 920, column: 52, scope: !7583)
!7590 = !DILocalVariable(name: "stk", arg: 3, scope: !7583, file: !3, line: 920, type: !195)
!7591 = !DILocation(line: 920, column: 71, scope: !7583)
!7592 = !DILocalVariable(name: "dd", arg: 4, scope: !7583, file: !3, line: 920, type: !5058)
!7593 = !DILocation(line: 920, column: 89, scope: !7583)
!7594 = !DILocalVariable(name: "ar", scope: !7583, file: !3, line: 922, type: !3193)
!7595 = !DILocation(line: 922, column: 11, scope: !7583)
!7596 = !DILocation(line: 922, column: 30, scope: !7583)
!7597 = !DILocation(line: 922, column: 16, scope: !7583)
!7598 = !DILocalVariable(name: "last", scope: !7583, file: !3, line: 924, type: !203)
!7599 = !DILocation(line: 924, column: 12, scope: !7583)
!7600 = !DILocation(line: 924, column: 38, scope: !7583)
!7601 = !DILocation(line: 924, column: 19, scope: !7583)
!7602 = !DILocalVariable(name: "cval", scope: !7583, file: !3, line: 925, type: !209)
!7603 = !DILocation(line: 925, column: 8, scope: !7583)
!7604 = !DILocalVariable(name: "fp", scope: !7583, file: !3, line: 926, type: !124)
!7605 = !DILocation(line: 926, column: 8, scope: !7583)
!7606 = !DILocalVariable(name: "dvec", scope: !7583, file: !3, line: 927, type: !124)
!7607 = !DILocation(line: 927, column: 8, scope: !7583)
!7608 = !DILocalVariable(name: "mval_f", scope: !7583, file: !3, line: 928, type: !694)
!7609 = !DILocation(line: 928, column: 8, scope: !7583)
!7610 = !DILocalVariable(name: "zfac", scope: !7583, file: !3, line: 929, type: !106)
!7611 = !DILocation(line: 929, column: 8, scope: !7583)
!7612 = !DILocation(line: 931, column: 6, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7583, file: !3, line: 931, column: 6)
!7614 = !DILocation(line: 931, column: 11, scope: !7613)
!7615 = !DILocation(line: 931, column: 6, scope: !7583)
!7616 = !DILocation(line: 932, column: 14, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 931, column: 20)
!7618 = !DILocation(line: 932, column: 18, scope: !7617)
!7619 = !DILocation(line: 932, column: 24, scope: !7617)
!7620 = !DILocation(line: 932, column: 3, scope: !7617)
!7621 = !DILocation(line: 933, column: 2, scope: !7617)
!7622 = !DILocation(line: 935, column: 29, scope: !7583)
!7623 = !DILocation(line: 935, column: 33, scope: !7583)
!7624 = !DILocation(line: 935, column: 45, scope: !7583)
!7625 = !DILocation(line: 935, column: 9, scope: !7583)
!7626 = !DILocation(line: 935, column: 7, scope: !7583)
!7627 = !DILocation(line: 937, column: 37, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7583, file: !3, line: 937, column: 6)
!7629 = !DILocation(line: 937, column: 41, scope: !7628)
!7630 = !DILocation(line: 937, column: 45, scope: !7628)
!7631 = !DILocation(line: 937, column: 6, scope: !7628)
!7632 = !DILocation(line: 937, column: 70, scope: !7628)
!7633 = !DILocation(line: 937, column: 6, scope: !7583)
!7634 = !DILocation(line: 938, column: 3, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7636, file: !3, line: 938, column: 3)
!7636 = distinct !DILexicalBlock(scope: !7628, file: !3, line: 937, column: 90)
!7637 = !DILocation(line: 939, column: 26, scope: !7636)
!7638 = !DILocation(line: 939, column: 30, scope: !7636)
!7639 = !DILocation(line: 939, column: 38, scope: !7636)
!7640 = !DILocation(line: 939, column: 44, scope: !7636)
!7641 = !DILocation(line: 939, column: 3, scope: !7636)
!7642 = !DILocation(line: 940, column: 15, scope: !7636)
!7643 = !DILocation(line: 940, column: 20, scope: !7636)
!7644 = !DILocation(line: 940, column: 24, scope: !7636)
!7645 = !DILocation(line: 940, column: 3, scope: !7636)
!7646 = !DILocation(line: 941, column: 2, scope: !7636)
!7647 = !DILocation(line: 943, column: 11, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7628, file: !3, line: 942, column: 7)
!7649 = !DILocation(line: 943, column: 3, scope: !7648)
!7650 = !DILocation(line: 945, column: 1, scope: !7583)
!7651 = distinct !DISubprogram(name: "sk_start_draw_stroke", scope: !3, file: !3, line: 2170, type: !2455, scopeLine: 2171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!7652 = !DILocalVariable(name: "sketch", arg: 1, scope: !7651, file: !3, line: 2170, type: !1920)
!7653 = !DILocation(line: 2170, column: 45, scope: !7651)
!7654 = !DILocation(line: 2172, column: 6, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7651, file: !3, line: 2172, column: 6)
!7656 = !DILocation(line: 2172, column: 14, scope: !7655)
!7657 = !DILocation(line: 2172, column: 28, scope: !7655)
!7658 = !DILocation(line: 2172, column: 6, scope: !7651)
!7659 = !DILocation(line: 2173, column: 18, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7655, file: !3, line: 2172, column: 37)
!7661 = !DILocation(line: 2173, column: 3, scope: !7660)
!7662 = !DILocation(line: 2174, column: 22, scope: !7660)
!7663 = !DILocation(line: 2174, column: 3, scope: !7660)
!7664 = !DILocation(line: 2176, column: 3, scope: !7660)
!7665 = !DILocation(line: 2176, column: 11, scope: !7660)
!7666 = !DILocation(line: 2176, column: 26, scope: !7660)
!7667 = !DILocation(line: 2176, column: 35, scope: !7660)
!7668 = !DILocation(line: 2177, column: 2, scope: !7660)
!7669 = !DILocation(line: 2178, column: 1, scope: !7651)
!7670 = distinct !DISubprogram(name: "sk_draw_stroke", scope: !3, file: !3, line: 2185, type: !7671, scopeLine: 2186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!7671 = !DISubroutineType(types: !7672)
!7672 = !{!91, !228, !1920, !195, !5058, !1258}
!7673 = !DILocalVariable(name: "C", arg: 1, scope: !7670, file: !3, line: 2185, type: !228)
!7674 = !DILocation(line: 2185, column: 37, scope: !7670)
!7675 = !DILocalVariable(name: "sketch", arg: 2, scope: !7670, file: !3, line: 2185, type: !1920)
!7676 = !DILocation(line: 2185, column: 51, scope: !7670)
!7677 = !DILocalVariable(name: "stk", arg: 3, scope: !7670, file: !3, line: 2185, type: !195)
!7678 = !DILocation(line: 2185, column: 70, scope: !7670)
!7679 = !DILocalVariable(name: "dd", arg: 4, scope: !7670, file: !3, line: 2185, type: !5058)
!7680 = !DILocation(line: 2185, column: 88, scope: !7670)
!7681 = !DILocalVariable(name: "snap", arg: 5, scope: !7670, file: !3, line: 2185, type: !1258)
!7682 = !DILocation(line: 2185, column: 97, scope: !7670)
!7683 = !DILocation(line: 2187, column: 27, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7670, file: !3, line: 2187, column: 6)
!7685 = !DILocation(line: 2187, column: 6, scope: !7684)
!7686 = !DILocation(line: 2187, column: 6, scope: !7670)
!7687 = !DILocation(line: 2188, column: 21, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7684, file: !3, line: 2187, column: 32)
!7689 = !DILocation(line: 2188, column: 24, scope: !7688)
!7690 = !DILocation(line: 2188, column: 32, scope: !7688)
!7691 = !DILocation(line: 2188, column: 37, scope: !7688)
!7692 = !DILocation(line: 2188, column: 41, scope: !7688)
!7693 = !DILocation(line: 2188, column: 3, scope: !7688)
!7694 = !DILocation(line: 2189, column: 21, scope: !7688)
!7695 = !DILocation(line: 2189, column: 3, scope: !7688)
!7696 = !DILocation(line: 2190, column: 22, scope: !7688)
!7697 = !DILocation(line: 2190, column: 30, scope: !7688)
!7698 = !DILocation(line: 2190, column: 3, scope: !7688)
!7699 = !DILocation(line: 2192, column: 3, scope: !7688)
!7700 = !DILocation(line: 2195, column: 2, scope: !7670)
!7701 = !DILocation(line: 2196, column: 1, scope: !7670)
!7702 = distinct !DISubprogram(name: "sk_startStroke", scope: !3, file: !3, line: 844, type: !2455, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!7703 = !DILocalVariable(name: "sketch", arg: 1, scope: !7702, file: !3, line: 844, type: !1920)
!7704 = !DILocation(line: 844, column: 39, scope: !7702)
!7705 = !DILocalVariable(name: "stk", scope: !7702, file: !3, line: 846, type: !195)
!7706 = !DILocation(line: 846, column: 13, scope: !7702)
!7707 = !DILocation(line: 846, column: 19, scope: !7702)
!7708 = !DILocation(line: 848, column: 15, scope: !7702)
!7709 = !DILocation(line: 848, column: 23, scope: !7702)
!7710 = !DILocation(line: 848, column: 32, scope: !7702)
!7711 = !DILocation(line: 848, column: 2, scope: !7702)
!7712 = !DILocation(line: 849, column: 26, scope: !7702)
!7713 = !DILocation(line: 849, column: 2, scope: !7702)
!7714 = !DILocation(line: 849, column: 10, scope: !7702)
!7715 = !DILocation(line: 849, column: 24, scope: !7702)
!7716 = !DILocation(line: 851, column: 19, scope: !7702)
!7717 = !DILocation(line: 851, column: 2, scope: !7702)
!7718 = !DILocation(line: 852, column: 1, scope: !7702)
!7719 = distinct !DISubprogram(name: "sk_addStrokePoint", scope: !3, file: !3, line: 1153, type: !7720, scopeLine: 1154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!7720 = !DISubroutineType(types: !7721)
!7721 = !{null, !228, !1920, !195, !5058, !4977}
!7722 = !DILocalVariable(name: "C", arg: 1, scope: !7719, file: !3, line: 1153, type: !228)
!7723 = !DILocation(line: 1153, column: 41, scope: !7719)
!7724 = !DILocalVariable(name: "sketch", arg: 2, scope: !7719, file: !3, line: 1153, type: !1920)
!7725 = !DILocation(line: 1153, column: 55, scope: !7719)
!7726 = !DILocalVariable(name: "stk", arg: 3, scope: !7719, file: !3, line: 1153, type: !195)
!7727 = !DILocation(line: 1153, column: 74, scope: !7719)
!7728 = !DILocalVariable(name: "dd", arg: 4, scope: !7719, file: !3, line: 1153, type: !5058)
!7729 = !DILocation(line: 1153, column: 92, scope: !7719)
!7730 = !DILocalVariable(name: "snap", arg: 5, scope: !7719, file: !3, line: 1153, type: !4977)
!7731 = !DILocation(line: 1153, column: 107, scope: !7719)
!7732 = !DILocalVariable(name: "ts", scope: !7719, file: !3, line: 1155, type: !1967)
!7733 = !DILocation(line: 1155, column: 16, scope: !7719)
!7734 = !DILocation(line: 1155, column: 44, scope: !7719)
!7735 = !DILocation(line: 1155, column: 21, scope: !7719)
!7736 = !DILocalVariable(name: "point_added", scope: !7719, file: !3, line: 1156, type: !91)
!7737 = !DILocation(line: 1156, column: 6, scope: !7719)
!7738 = !DILocation(line: 1158, column: 6, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 1158, column: 6)
!7740 = !DILocation(line: 1158, column: 6, scope: !7719)
!7741 = !DILocation(line: 1159, column: 39, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 1158, column: 12)
!7743 = !DILocation(line: 1159, column: 42, scope: !7742)
!7744 = !DILocation(line: 1159, column: 50, scope: !7742)
!7745 = !DILocation(line: 1159, column: 55, scope: !7742)
!7746 = !DILocation(line: 1159, column: 17, scope: !7742)
!7747 = !DILocation(line: 1159, column: 15, scope: !7742)
!7748 = !DILocation(line: 1160, column: 2, scope: !7742)
!7749 = !DILocation(line: 1162, column: 6, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 1162, column: 6)
!7751 = !DILocation(line: 1162, column: 18, scope: !7750)
!7752 = !DILocation(line: 1162, column: 6, scope: !7719)
!7753 = !DILocation(line: 1163, column: 39, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7750, file: !3, line: 1162, column: 24)
!7755 = !DILocation(line: 1163, column: 42, scope: !7754)
!7756 = !DILocation(line: 1163, column: 50, scope: !7754)
!7757 = !DILocation(line: 1163, column: 55, scope: !7754)
!7758 = !DILocation(line: 1163, column: 17, scope: !7754)
!7759 = !DILocation(line: 1163, column: 15, scope: !7754)
!7760 = !DILocation(line: 1164, column: 2, scope: !7754)
!7761 = !DILocation(line: 1166, column: 6, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 1166, column: 6)
!7763 = !DILocation(line: 1166, column: 13, scope: !7762)
!7764 = !DILocation(line: 1166, column: 21, scope: !7762)
!7765 = !DILocation(line: 1166, column: 10, scope: !7762)
!7766 = !DILocation(line: 1166, column: 35, scope: !7762)
!7767 = !DILocation(line: 1166, column: 38, scope: !7762)
!7768 = !DILocation(line: 1166, column: 42, scope: !7762)
!7769 = !DILocation(line: 1166, column: 57, scope: !7762)
!7770 = !DILocation(line: 1166, column: 6, scope: !7719)
!7771 = !DILocation(line: 1167, column: 21, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7762, file: !3, line: 1166, column: 82)
!7773 = !DILocation(line: 1167, column: 24, scope: !7772)
!7774 = !DILocation(line: 1167, column: 32, scope: !7772)
!7775 = !DILocation(line: 1167, column: 37, scope: !7772)
!7776 = !DILocation(line: 1167, column: 3, scope: !7772)
!7777 = !DILocation(line: 1168, column: 2, scope: !7772)
!7778 = !DILocation(line: 1169, column: 1, scope: !7719)
!7779 = distinct !DISubprogram(name: "sk_updateDrawData", scope: !3, file: !3, line: 866, type: !7780, scopeLine: 867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!7780 = !DISubroutineType(types: !7781)
!7781 = !{null, !5058}
!7782 = !DILocalVariable(name: "dd", arg: 1, scope: !7779, file: !3, line: 866, type: !5058)
!7783 = !DILocation(line: 866, column: 44, scope: !7779)
!7784 = !DILocation(line: 868, column: 2, scope: !7779)
!7785 = !DILocation(line: 868, column: 6, scope: !7779)
!7786 = !DILocation(line: 868, column: 11, scope: !7779)
!7787 = !DILocation(line: 870, column: 25, scope: !7779)
!7788 = !DILocation(line: 870, column: 29, scope: !7779)
!7789 = !DILocation(line: 870, column: 2, scope: !7779)
!7790 = !DILocation(line: 870, column: 6, scope: !7779)
!7791 = !DILocation(line: 870, column: 23, scope: !7779)
!7792 = !DILocation(line: 871, column: 25, scope: !7779)
!7793 = !DILocation(line: 871, column: 29, scope: !7779)
!7794 = !DILocation(line: 871, column: 2, scope: !7779)
!7795 = !DILocation(line: 871, column: 6, scope: !7779)
!7796 = !DILocation(line: 871, column: 23, scope: !7779)
!7797 = !DILocation(line: 872, column: 1, scope: !7779)
!7798 = distinct !DISubprogram(name: "sk_addStrokeSnapPoint", scope: !3, file: !3, line: 1106, type: !7799, scopeLine: 1107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!7799 = !DISubroutineType(types: !7800)
!7800 = !{!91, !228, !1920, !195, !5058}
!7801 = !DILocalVariable(name: "C", arg: 1, scope: !7798, file: !3, line: 1106, type: !228)
!7802 = !DILocation(line: 1106, column: 44, scope: !7798)
!7803 = !DILocalVariable(name: "sketch", arg: 2, scope: !7798, file: !3, line: 1106, type: !1920)
!7804 = !DILocation(line: 1106, column: 58, scope: !7798)
!7805 = !DILocalVariable(name: "stk", arg: 3, scope: !7798, file: !3, line: 1106, type: !195)
!7806 = !DILocation(line: 1106, column: 77, scope: !7798)
!7807 = !DILocalVariable(name: "dd", arg: 4, scope: !7798, file: !3, line: 1106, type: !5058)
!7808 = !DILocation(line: 1106, column: 95, scope: !7798)
!7809 = !DILocalVariable(name: "point_added", scope: !7798, file: !3, line: 1108, type: !91)
!7810 = !DILocation(line: 1108, column: 6, scope: !7798)
!7811 = !DILocalVariable(name: "ar", scope: !7798, file: !3, line: 1109, type: !3193)
!7812 = !DILocation(line: 1109, column: 11, scope: !7798)
!7813 = !DILocation(line: 1109, column: 30, scope: !7798)
!7814 = !DILocation(line: 1109, column: 16, scope: !7798)
!7815 = !DILocalVariable(name: "rv3d", scope: !7798, file: !3, line: 1110, type: !7816)
!7816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7817, size: 64)
!7817 = !DIDerivedType(tag: DW_TAG_typedef, name: "RegionView3D", file: !3862, line: 148, baseType: !3953)
!7818 = !DILocation(line: 1110, column: 16, scope: !7798)
!7819 = !DILocation(line: 1110, column: 23, scope: !7798)
!7820 = !DILocation(line: 1110, column: 27, scope: !7798)
!7821 = !DILocalVariable(name: "pt", scope: !7798, file: !3, line: 1111, type: !204)
!7822 = !DILocation(line: 1111, column: 11, scope: !7798)
!7823 = !DILocation(line: 1113, column: 20, scope: !7798)
!7824 = !DILocation(line: 1113, column: 24, scope: !7798)
!7825 = !DILocation(line: 1113, column: 30, scope: !7798)
!7826 = !DILocation(line: 1113, column: 2, scope: !7798)
!7827 = !DILocation(line: 1115, column: 38, scope: !7798)
!7828 = !DILocation(line: 1115, column: 46, scope: !7798)
!7829 = !DILocation(line: 1115, column: 54, scope: !7798)
!7830 = !DILocation(line: 1115, column: 59, scope: !7798)
!7831 = !DILocation(line: 1115, column: 16, scope: !7798)
!7832 = !DILocation(line: 1115, column: 14, scope: !7798)
!7833 = !DILocation(line: 1117, column: 6, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7798, file: !3, line: 1117, column: 6)
!7835 = !DILocation(line: 1117, column: 6, scope: !7798)
!7836 = !DILocalVariable(name: "final_p", scope: !7837, file: !3, line: 1118, type: !124)
!7837 = distinct !DILexicalBlock(scope: !7834, file: !3, line: 1117, column: 19)
!7838 = !DILocation(line: 1118, column: 9, scope: !7837)
!7839 = !DILocalVariable(name: "length", scope: !7837, file: !3, line: 1119, type: !106)
!7840 = !DILocation(line: 1119, column: 9, scope: !7837)
!7841 = !DILocalVariable(name: "distance", scope: !7837, file: !3, line: 1119, type: !106)
!7842 = !DILocation(line: 1119, column: 17, scope: !7837)
!7843 = !DILocalVariable(name: "total", scope: !7837, file: !3, line: 1120, type: !91)
!7844 = !DILocation(line: 1120, column: 7, scope: !7837)
!7845 = !DILocalVariable(name: "i", scope: !7837, file: !3, line: 1121, type: !91)
!7846 = !DILocation(line: 1121, column: 7, scope: !7837)
!7847 = !DILocation(line: 1123, column: 14, scope: !7837)
!7848 = !DILocation(line: 1123, column: 26, scope: !7837)
!7849 = !DILocation(line: 1123, column: 23, scope: !7837)
!7850 = !DILocation(line: 1123, column: 3, scope: !7837)
!7851 = !DILocation(line: 1125, column: 23, scope: !7837)
!7852 = !DILocation(line: 1125, column: 29, scope: !7837)
!7853 = !DILocation(line: 1125, column: 26, scope: !7837)
!7854 = !DILocation(line: 1125, column: 32, scope: !7837)
!7855 = !DILocation(line: 1125, column: 37, scope: !7837)
!7856 = !DILocation(line: 1125, column: 3, scope: !7837)
!7857 = !DILocation(line: 1126, column: 24, scope: !7837)
!7858 = !DILocation(line: 1126, column: 3, scope: !7837)
!7859 = !DILocation(line: 1129, column: 9, scope: !7837)
!7860 = !DILocation(line: 1130, column: 10, scope: !7837)
!7861 = !DILocation(line: 1131, column: 12, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7837, file: !3, line: 1131, column: 3)
!7863 = !DILocation(line: 1131, column: 17, scope: !7862)
!7864 = !DILocation(line: 1131, column: 27, scope: !7862)
!7865 = !DILocation(line: 1131, column: 10, scope: !7862)
!7866 = !DILocation(line: 1131, column: 8, scope: !7862)
!7867 = !DILocation(line: 1131, column: 32, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7862, file: !3, line: 1131, column: 3)
!7869 = !DILocation(line: 1131, column: 34, scope: !7868)
!7870 = !DILocation(line: 1131, column: 3, scope: !7862)
!7871 = !DILocation(line: 1132, column: 23, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 1131, column: 44)
!7873 = !DILocation(line: 1132, column: 28, scope: !7872)
!7874 = !DILocation(line: 1132, column: 35, scope: !7872)
!7875 = !DILocation(line: 1132, column: 38, scope: !7872)
!7876 = !DILocation(line: 1132, column: 41, scope: !7872)
!7877 = !DILocation(line: 1132, column: 46, scope: !7872)
!7878 = !DILocation(line: 1132, column: 53, scope: !7872)
!7879 = !DILocation(line: 1132, column: 55, scope: !7872)
!7880 = !DILocation(line: 1132, column: 60, scope: !7872)
!7881 = !DILocation(line: 1132, column: 14, scope: !7872)
!7882 = !DILocation(line: 1132, column: 11, scope: !7872)
!7883 = !DILocation(line: 1133, column: 9, scope: !7872)
!7884 = !DILocation(line: 1134, column: 8, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7872, file: !3, line: 1134, column: 8)
!7886 = !DILocation(line: 1134, column: 13, scope: !7885)
!7887 = !DILocation(line: 1134, column: 20, scope: !7885)
!7888 = !DILocation(line: 1134, column: 23, scope: !7885)
!7889 = !DILocation(line: 1134, column: 28, scope: !7885)
!7890 = !DILocation(line: 1134, column: 39, scope: !7885)
!7891 = !DILocation(line: 1134, column: 42, scope: !7885)
!7892 = !DILocation(line: 1134, column: 47, scope: !7885)
!7893 = !DILocation(line: 1134, column: 54, scope: !7885)
!7894 = !DILocation(line: 1134, column: 57, scope: !7885)
!7895 = !DILocation(line: 1134, column: 62, scope: !7885)
!7896 = !DILocation(line: 1134, column: 8, scope: !7872)
!7897 = !DILocation(line: 1135, column: 5, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7885, file: !3, line: 1134, column: 75)
!7899 = !DILocation(line: 1137, column: 3, scope: !7872)
!7900 = !DILocation(line: 1131, column: 40, scope: !7868)
!7901 = !DILocation(line: 1131, column: 3, scope: !7868)
!7902 = distinct !{!7902, !7870, !7903}
!7903 = !DILocation(line: 1137, column: 3, scope: !7862)
!7904 = !DILocation(line: 1139, column: 7, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7837, file: !3, line: 1139, column: 7)
!7906 = !DILocation(line: 1139, column: 13, scope: !7905)
!7907 = !DILocation(line: 1139, column: 7, scope: !7837)
!7908 = !DILocation(line: 1140, column: 32, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 1139, column: 18)
!7910 = !DILocation(line: 1140, column: 35, scope: !7909)
!7911 = !DILocation(line: 1140, column: 44, scope: !7909)
!7912 = !DILocation(line: 1140, column: 49, scope: !7909)
!7913 = !DILocation(line: 1140, column: 56, scope: !7909)
!7914 = !DILocation(line: 1140, column: 59, scope: !7909)
!7915 = !DILocation(line: 1140, column: 15, scope: !7909)
!7916 = !DILocation(line: 1140, column: 13, scope: !7909)
!7917 = !DILocation(line: 1142, column: 24, scope: !7909)
!7918 = !DILocation(line: 1142, column: 27, scope: !7909)
!7919 = !DILocation(line: 1142, column: 32, scope: !7909)
!7920 = !DILocation(line: 1142, column: 34, scope: !7909)
!7921 = !DILocation(line: 1142, column: 39, scope: !7909)
!7922 = !DILocation(line: 1142, column: 44, scope: !7909)
!7923 = !DILocation(line: 1142, column: 54, scope: !7909)
!7924 = !DILocation(line: 1142, column: 59, scope: !7909)
!7925 = !DILocation(line: 1142, column: 67, scope: !7909)
!7926 = !DILocation(line: 1142, column: 4, scope: !7909)
!7927 = !DILocation(line: 1143, column: 3, scope: !7909)
!7928 = !DILocation(line: 1145, column: 14, scope: !7837)
!7929 = !DILocation(line: 1145, column: 19, scope: !7837)
!7930 = !DILocation(line: 1145, column: 26, scope: !7837)
!7931 = !DILocation(line: 1145, column: 31, scope: !7837)
!7932 = !DILocation(line: 1145, column: 41, scope: !7837)
!7933 = !DILocation(line: 1145, column: 46, scope: !7837)
!7934 = !DILocation(line: 1145, column: 49, scope: !7837)
!7935 = !DILocation(line: 1145, column: 3, scope: !7837)
!7936 = !DILocation(line: 1147, column: 15, scope: !7837)
!7937 = !DILocation(line: 1148, column: 2, scope: !7837)
!7938 = !DILocation(line: 1150, column: 9, scope: !7798)
!7939 = !DILocation(line: 1150, column: 2, scope: !7798)
!7940 = distinct !DISubprogram(name: "sk_addStrokeDrawPoint", scope: !3, file: !3, line: 956, type: !7799, scopeLine: 957, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!7941 = !DILocalVariable(name: "C", arg: 1, scope: !7940, file: !3, line: 956, type: !228)
!7942 = !DILocation(line: 956, column: 44, scope: !7940)
!7943 = !DILocalVariable(name: "sketch", arg: 2, scope: !7940, file: !3, line: 956, type: !1920)
!7944 = !DILocation(line: 956, column: 58, scope: !7940)
!7945 = !DILocalVariable(name: "stk", arg: 3, scope: !7940, file: !3, line: 956, type: !195)
!7946 = !DILocation(line: 956, column: 77, scope: !7940)
!7947 = !DILocalVariable(name: "dd", arg: 4, scope: !7940, file: !3, line: 956, type: !5058)
!7948 = !DILocation(line: 956, column: 95, scope: !7940)
!7949 = !DILocalVariable(name: "ar", scope: !7940, file: !3, line: 958, type: !3193)
!7950 = !DILocation(line: 958, column: 11, scope: !7940)
!7951 = !DILocation(line: 958, column: 30, scope: !7940)
!7952 = !DILocation(line: 958, column: 16, scope: !7940)
!7953 = !DILocalVariable(name: "rv3d", scope: !7940, file: !3, line: 959, type: !7816)
!7954 = !DILocation(line: 959, column: 16, scope: !7940)
!7955 = !DILocation(line: 959, column: 23, scope: !7940)
!7956 = !DILocation(line: 959, column: 27, scope: !7940)
!7957 = !DILocalVariable(name: "pt", scope: !7940, file: !3, line: 960, type: !204)
!7958 = !DILocation(line: 960, column: 11, scope: !7940)
!7959 = !DILocation(line: 962, column: 20, scope: !7940)
!7960 = !DILocation(line: 962, column: 24, scope: !7940)
!7961 = !DILocation(line: 962, column: 30, scope: !7940)
!7962 = !DILocation(line: 962, column: 2, scope: !7940)
!7963 = !DILocation(line: 964, column: 24, scope: !7940)
!7964 = !DILocation(line: 964, column: 32, scope: !7940)
!7965 = !DILocation(line: 964, column: 40, scope: !7940)
!7966 = !DILocation(line: 964, column: 45, scope: !7940)
!7967 = !DILocation(line: 964, column: 2, scope: !7940)
!7968 = !DILocation(line: 966, column: 23, scope: !7940)
!7969 = !DILocation(line: 966, column: 2, scope: !7940)
!7970 = !DILocation(line: 968, column: 2, scope: !7940)
!7971 = distinct !DISubprogram(name: "sk_updateOverdraw", scope: !3, file: !3, line: 731, type: !7972, scopeLine: 732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!7972 = !DISubroutineType(types: !7973)
!7973 = !{null, !228, !1920, !195, !5058}
!7974 = !DILocalVariable(name: "C", arg: 1, scope: !7971, file: !3, line: 731, type: !228)
!7975 = !DILocation(line: 731, column: 41, scope: !7971)
!7976 = !DILocalVariable(name: "sketch", arg: 2, scope: !7971, file: !3, line: 731, type: !1920)
!7977 = !DILocation(line: 731, column: 55, scope: !7971)
!7978 = !DILocalVariable(name: "stk", arg: 3, scope: !7971, file: !3, line: 731, type: !195)
!7979 = !DILocation(line: 731, column: 74, scope: !7971)
!7980 = !DILocalVariable(name: "dd", arg: 4, scope: !7971, file: !3, line: 731, type: !5058)
!7981 = !DILocation(line: 731, column: 92, scope: !7971)
!7982 = !DILocation(line: 733, column: 6, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 733, column: 6)
!7984 = !DILocation(line: 733, column: 14, scope: !7983)
!7985 = !DILocation(line: 733, column: 19, scope: !7983)
!7986 = !DILocation(line: 733, column: 26, scope: !7983)
!7987 = !DILocation(line: 733, column: 6, scope: !7971)
!7988 = !DILocalVariable(name: "target", scope: !7989, file: !3, line: 734, type: !195)
!7989 = distinct !DILexicalBlock(scope: !7983, file: !3, line: 733, column: 35)
!7990 = !DILocation(line: 734, column: 14, scope: !7989)
!7991 = !DILocalVariable(name: "closest_index", scope: !7989, file: !3, line: 735, type: !91)
!7992 = !DILocation(line: 735, column: 7, scope: !7989)
!7993 = !DILocalVariable(name: "dist_px", scope: !7989, file: !3, line: 736, type: !106)
!7994 = !DILocation(line: 736, column: 9, scope: !7989)
!7995 = !DILocation(line: 738, column: 17, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7989, file: !3, line: 738, column: 3)
!7997 = !DILocation(line: 738, column: 25, scope: !7996)
!7998 = !DILocation(line: 738, column: 33, scope: !7996)
!7999 = !DILocation(line: 738, column: 15, scope: !7996)
!8000 = !DILocation(line: 738, column: 8, scope: !7996)
!8001 = !DILocation(line: 738, column: 40, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 738, column: 3)
!8003 = !DILocation(line: 738, column: 3, scope: !7996)
!8004 = !DILocation(line: 739, column: 8, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 739, column: 8)
!8006 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 738, column: 71)
!8007 = !DILocation(line: 739, column: 18, scope: !8005)
!8008 = !DILocation(line: 739, column: 15, scope: !8005)
!8009 = !DILocation(line: 739, column: 8, scope: !8006)
!8010 = !DILocalVariable(name: "index", scope: !8011, file: !3, line: 740, type: !91)
!8011 = distinct !DILexicalBlock(scope: !8005, file: !3, line: 739, column: 23)
!8012 = !DILocation(line: 740, column: 9, scope: !8011)
!8013 = !DILocalVariable(name: "spt", scope: !8011, file: !3, line: 742, type: !203)
!8014 = !DILocation(line: 742, column: 15, scope: !8011)
!8015 = !DILocation(line: 742, column: 40, scope: !8011)
!8016 = !DILocation(line: 742, column: 43, scope: !8011)
!8017 = !DILocation(line: 742, column: 51, scope: !8011)
!8018 = !DILocation(line: 742, column: 55, scope: !8011)
!8019 = !DILocation(line: 742, column: 21, scope: !8011)
!8020 = !DILocation(line: 744, column: 9, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 744, column: 9)
!8022 = !DILocation(line: 744, column: 13, scope: !8021)
!8023 = !DILocation(line: 744, column: 9, scope: !8011)
!8024 = !DILocation(line: 745, column: 28, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8021, file: !3, line: 744, column: 22)
!8026 = !DILocation(line: 745, column: 6, scope: !8025)
!8027 = !DILocation(line: 745, column: 14, scope: !8025)
!8028 = !DILocation(line: 745, column: 19, scope: !8025)
!8029 = !DILocation(line: 745, column: 26, scope: !8025)
!8030 = !DILocation(line: 746, column: 22, scope: !8025)
!8031 = !DILocation(line: 746, column: 20, scope: !8025)
!8032 = !DILocation(line: 747, column: 5, scope: !8025)
!8033 = !DILocation(line: 748, column: 4, scope: !8011)
!8034 = !DILocation(line: 749, column: 3, scope: !8006)
!8035 = !DILocation(line: 738, column: 57, scope: !8002)
!8036 = !DILocation(line: 738, column: 65, scope: !8002)
!8037 = !DILocation(line: 738, column: 55, scope: !8002)
!8038 = !DILocation(line: 738, column: 3, scope: !8002)
!8039 = distinct !{!8039, !8003, !8040}
!8040 = !DILocation(line: 749, column: 3, scope: !7996)
!8041 = !DILocation(line: 751, column: 7, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !7989, file: !3, line: 751, column: 7)
!8043 = !DILocation(line: 751, column: 15, scope: !8042)
!8044 = !DILocation(line: 751, column: 20, scope: !8042)
!8045 = !DILocation(line: 751, column: 27, scope: !8042)
!8046 = !DILocation(line: 751, column: 7, scope: !7989)
!8047 = !DILocation(line: 752, column: 8, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8049, file: !3, line: 752, column: 8)
!8049 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 751, column: 36)
!8050 = !DILocation(line: 752, column: 22, scope: !8048)
!8051 = !DILocation(line: 752, column: 8, scope: !8049)
!8052 = !DILocation(line: 753, column: 28, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !8054, file: !3, line: 753, column: 9)
!8054 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 752, column: 28)
!8055 = !DILocation(line: 753, column: 9, scope: !8053)
!8056 = !DILocation(line: 753, column: 34, scope: !8053)
!8057 = !DILocation(line: 753, column: 39, scope: !8053)
!8058 = !DILocation(line: 753, column: 9, scope: !8054)
!8059 = !DILocation(line: 754, column: 6, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8053, file: !3, line: 753, column: 52)
!8061 = !DILocation(line: 754, column: 14, scope: !8060)
!8062 = !DILocation(line: 754, column: 19, scope: !8060)
!8063 = !DILocation(line: 754, column: 25, scope: !8060)
!8064 = !DILocation(line: 755, column: 5, scope: !8060)
!8065 = !DILocation(line: 757, column: 6, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8053, file: !3, line: 756, column: 10)
!8067 = !DILocation(line: 757, column: 14, scope: !8066)
!8068 = !DILocation(line: 757, column: 19, scope: !8066)
!8069 = !DILocation(line: 757, column: 24, scope: !8066)
!8070 = !DILocation(line: 759, column: 4, scope: !8054)
!8071 = !DILocation(line: 761, column: 8, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8049, file: !3, line: 761, column: 8)
!8073 = !DILocation(line: 761, column: 13, scope: !8072)
!8074 = !DILocation(line: 761, column: 23, scope: !8072)
!8075 = !DILocation(line: 761, column: 8, scope: !8049)
!8076 = !DILocation(line: 762, column: 26, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 761, column: 29)
!8078 = !DILocation(line: 762, column: 5, scope: !8077)
!8079 = !DILocation(line: 762, column: 13, scope: !8077)
!8080 = !DILocation(line: 762, column: 18, scope: !8077)
!8081 = !DILocation(line: 762, column: 24, scope: !8077)
!8082 = !DILocation(line: 763, column: 4, scope: !8077)
!8083 = !DILocation(line: 765, column: 24, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 764, column: 9)
!8085 = !DILocation(line: 765, column: 5, scope: !8084)
!8086 = !DILocation(line: 765, column: 13, scope: !8084)
!8087 = !DILocation(line: 765, column: 18, scope: !8084)
!8088 = !DILocation(line: 765, column: 22, scope: !8084)
!8089 = !DILocation(line: 767, column: 3, scope: !8049)
!8090 = !DILocation(line: 768, column: 2, scope: !7989)
!8091 = !DILocation(line: 769, column: 11, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !7983, file: !3, line: 769, column: 11)
!8093 = !DILocation(line: 769, column: 19, scope: !8092)
!8094 = !DILocation(line: 769, column: 24, scope: !8092)
!8095 = !DILocation(line: 769, column: 31, scope: !8092)
!8096 = !DILocation(line: 769, column: 11, scope: !7983)
!8097 = !DILocalVariable(name: "closest_pt", scope: !8098, file: !3, line: 770, type: !203)
!8098 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 769, column: 40)
!8099 = !DILocation(line: 770, column: 13, scope: !8098)
!8100 = !DILocalVariable(name: "dist_px", scope: !8098, file: !3, line: 771, type: !106)
!8101 = !DILocation(line: 771, column: 9, scope: !8098)
!8102 = !DILocalVariable(name: "index", scope: !8098, file: !3, line: 772, type: !91)
!8103 = !DILocation(line: 772, column: 7, scope: !8098)
!8104 = !DILocation(line: 774, column: 35, scope: !8098)
!8105 = !DILocation(line: 774, column: 38, scope: !8098)
!8106 = !DILocation(line: 774, column: 46, scope: !8098)
!8107 = !DILocation(line: 774, column: 51, scope: !8098)
!8108 = !DILocation(line: 774, column: 59, scope: !8098)
!8109 = !DILocation(line: 774, column: 63, scope: !8098)
!8110 = !DILocation(line: 774, column: 16, scope: !8098)
!8111 = !DILocation(line: 774, column: 14, scope: !8098)
!8112 = !DILocation(line: 776, column: 7, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 776, column: 7)
!8114 = !DILocation(line: 776, column: 18, scope: !8113)
!8115 = !DILocation(line: 776, column: 7, scope: !8098)
!8116 = !DILocation(line: 777, column: 27, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 777, column: 8)
!8118 = distinct !DILexicalBlock(scope: !8113, file: !3, line: 776, column: 27)
!8119 = !DILocation(line: 777, column: 8, scope: !8117)
!8120 = !DILocation(line: 777, column: 33, scope: !8117)
!8121 = !DILocation(line: 777, column: 38, scope: !8117)
!8122 = !DILocation(line: 777, column: 8, scope: !8118)
!8123 = !DILocation(line: 778, column: 5, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8117, file: !3, line: 777, column: 51)
!8125 = !DILocation(line: 778, column: 13, scope: !8124)
!8126 = !DILocation(line: 778, column: 18, scope: !8124)
!8127 = !DILocation(line: 778, column: 24, scope: !8124)
!8128 = !DILocation(line: 779, column: 4, scope: !8124)
!8129 = !DILocation(line: 781, column: 5, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8117, file: !3, line: 780, column: 9)
!8131 = !DILocation(line: 781, column: 13, scope: !8130)
!8132 = !DILocation(line: 781, column: 18, scope: !8130)
!8133 = !DILocation(line: 781, column: 23, scope: !8130)
!8134 = !DILocation(line: 784, column: 23, scope: !8118)
!8135 = !DILocation(line: 784, column: 4, scope: !8118)
!8136 = !DILocation(line: 784, column: 12, scope: !8118)
!8137 = !DILocation(line: 784, column: 17, scope: !8118)
!8138 = !DILocation(line: 784, column: 21, scope: !8118)
!8139 = !DILocation(line: 785, column: 3, scope: !8118)
!8140 = !DILocation(line: 787, column: 4, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8113, file: !3, line: 786, column: 8)
!8142 = !DILocation(line: 787, column: 12, scope: !8141)
!8143 = !DILocation(line: 787, column: 17, scope: !8141)
!8144 = !DILocation(line: 787, column: 21, scope: !8141)
!8145 = !DILocation(line: 789, column: 2, scope: !8098)
!8146 = !DILocation(line: 790, column: 1, scope: !7971)
!8147 = distinct !DISubprogram(name: "sk_distanceDepth", scope: !3, file: !3, line: 874, type: !8148, scopeLine: 875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!8148 = !DISubroutineType(types: !8149)
!8149 = !{!106, !228, !189, !189}
!8150 = !DILocalVariable(name: "C", arg: 1, scope: !8147, file: !3, line: 874, type: !228)
!8151 = !DILocation(line: 874, column: 41, scope: !8147)
!8152 = !DILocalVariable(name: "p1", arg: 2, scope: !8147, file: !3, line: 874, type: !189)
!8153 = !DILocation(line: 874, column: 50, scope: !8147)
!8154 = !DILocalVariable(name: "p2", arg: 3, scope: !8147, file: !3, line: 874, type: !189)
!8155 = !DILocation(line: 874, column: 63, scope: !8147)
!8156 = !DILocalVariable(name: "ar", scope: !8147, file: !3, line: 876, type: !3193)
!8157 = !DILocation(line: 876, column: 11, scope: !8147)
!8158 = !DILocation(line: 876, column: 30, scope: !8147)
!8159 = !DILocation(line: 876, column: 16, scope: !8147)
!8160 = !DILocalVariable(name: "rv3d", scope: !8147, file: !3, line: 877, type: !7816)
!8161 = !DILocation(line: 877, column: 16, scope: !8147)
!8162 = !DILocation(line: 877, column: 23, scope: !8147)
!8163 = !DILocation(line: 877, column: 27, scope: !8147)
!8164 = !DILocalVariable(name: "vec", scope: !8147, file: !3, line: 878, type: !124)
!8165 = !DILocation(line: 878, column: 8, scope: !8147)
!8166 = !DILocalVariable(name: "distance", scope: !8147, file: !3, line: 879, type: !106)
!8167 = !DILocation(line: 879, column: 8, scope: !8147)
!8168 = !DILocation(line: 881, column: 14, scope: !8147)
!8169 = !DILocation(line: 881, column: 19, scope: !8147)
!8170 = !DILocation(line: 881, column: 23, scope: !8147)
!8171 = !DILocation(line: 881, column: 2, scope: !8147)
!8172 = !DILocation(line: 883, column: 18, scope: !8147)
!8173 = !DILocation(line: 883, column: 23, scope: !8147)
!8174 = !DILocation(line: 883, column: 28, scope: !8147)
!8175 = !DILocation(line: 883, column: 34, scope: !8147)
!8176 = !DILocation(line: 883, column: 2, scope: !8147)
!8177 = !DILocation(line: 885, column: 20, scope: !8147)
!8178 = !DILocation(line: 885, column: 13, scope: !8147)
!8179 = !DILocation(line: 885, column: 11, scope: !8147)
!8180 = !DILocation(line: 887, column: 15, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 887, column: 6)
!8182 = !DILocation(line: 887, column: 21, scope: !8181)
!8183 = !DILocation(line: 887, column: 33, scope: !8181)
!8184 = !DILocation(line: 887, column: 6, scope: !8181)
!8185 = !DILocation(line: 887, column: 38, scope: !8181)
!8186 = !DILocation(line: 887, column: 6, scope: !8147)
!8187 = !DILocation(line: 888, column: 12, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8181, file: !3, line: 887, column: 43)
!8189 = !DILocation(line: 889, column: 2, scope: !8188)
!8190 = !DILocation(line: 891, column: 9, scope: !8147)
!8191 = !DILocation(line: 891, column: 2, scope: !8147)
!8192 = distinct !DISubprogram(name: "sk_interpolateDepth", scope: !3, file: !3, line: 894, type: !8193, scopeLine: 895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!8193 = !DISubroutineType(types: !8194)
!8194 = !{null, !228, !195, !91, !91, !106, !106}
!8195 = !DILocalVariable(name: "C", arg: 1, scope: !8192, file: !3, line: 894, type: !228)
!8196 = !DILocation(line: 894, column: 43, scope: !8192)
!8197 = !DILocalVariable(name: "stk", arg: 2, scope: !8192, file: !3, line: 894, type: !195)
!8198 = !DILocation(line: 894, column: 57, scope: !8192)
!8199 = !DILocalVariable(name: "start", arg: 3, scope: !8192, file: !3, line: 894, type: !91)
!8200 = !DILocation(line: 894, column: 66, scope: !8192)
!8201 = !DILocalVariable(name: "end", arg: 4, scope: !8192, file: !3, line: 894, type: !91)
!8202 = !DILocation(line: 894, column: 77, scope: !8192)
!8203 = !DILocalVariable(name: "length", arg: 5, scope: !8192, file: !3, line: 894, type: !106)
!8204 = !DILocation(line: 894, column: 88, scope: !8192)
!8205 = !DILocalVariable(name: "distance", arg: 6, scope: !8192, file: !3, line: 894, type: !106)
!8206 = !DILocation(line: 894, column: 102, scope: !8192)
!8207 = !DILocalVariable(name: "ar", scope: !8192, file: !3, line: 896, type: !3193)
!8208 = !DILocation(line: 896, column: 11, scope: !8192)
!8209 = !DILocation(line: 896, column: 30, scope: !8192)
!8210 = !DILocation(line: 896, column: 16, scope: !8192)
!8211 = !DILocalVariable(name: "sa", scope: !8192, file: !3, line: 897, type: !8212)
!8212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8213, size: 64)
!8213 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !3195, line: 228, baseType: !8214)
!8214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !3195, line: 203, size: 1280, elements: !8215)
!8215 = !{!8216, !8218, !8219, !8236, !8237, !8238, !8239, !8242, !8243, !8244, !8245, !8246, !8247, !8248, !8249, !8250, !8251, !8252, !8253, !8256, !8257, !8258, !8259}
!8216 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8214, file: !3195, line: 204, baseType: !8217, size: 64)
!8217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8214, size: 64)
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8214, file: !3195, line: 204, baseType: !8217, size: 64, offset: 64)
!8219 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8214, file: !3195, line: 206, baseType: !8220, size: 64, offset: 128)
!8220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8221, size: 64)
!8221 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !3195, line: 87, baseType: !8222)
!8222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !3195, line: 82, size: 256, elements: !8223)
!8223 = !{!8224, !8226, !8227, !8228, !8234, !8235}
!8224 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8222, file: !3195, line: 83, baseType: !8225, size: 64)
!8225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8222, size: 64)
!8226 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8222, file: !3195, line: 83, baseType: !8225, size: 64, offset: 64)
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !8222, file: !3195, line: 83, baseType: !8225, size: 64, offset: 128)
!8228 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !8222, file: !3195, line: 84, baseType: !8229, size: 32, offset: 192)
!8229 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !772, line: 43, baseType: !8230)
!8230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !772, line: 41, size: 32, elements: !8231)
!8231 = !{!8232, !8233}
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !8230, file: !772, line: 42, baseType: !210, size: 16)
!8233 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !8230, file: !772, line: 42, baseType: !210, size: 16, offset: 16)
!8234 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8222, file: !3195, line: 86, baseType: !210, size: 16, offset: 224)
!8235 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !8222, file: !3195, line: 86, baseType: !210, size: 16, offset: 240)
!8236 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8214, file: !3195, line: 206, baseType: !8220, size: 64, offset: 192)
!8237 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8214, file: !3195, line: 206, baseType: !8220, size: 64, offset: 256)
!8238 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8214, file: !3195, line: 206, baseType: !8220, size: 64, offset: 320)
!8239 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !8214, file: !3195, line: 207, baseType: !8240, size: 64, offset: 384)
!8240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8241, size: 64)
!8241 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !3195, line: 80, baseType: !3249)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !8214, file: !3195, line: 209, baseType: !1656, size: 128, offset: 448)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !8214, file: !3195, line: 211, baseType: !264, size: 8, offset: 576)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !8214, file: !3195, line: 211, baseType: !264, size: 8, offset: 584)
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !8214, file: !3195, line: 212, baseType: !210, size: 16, offset: 592)
!8246 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !8214, file: !3195, line: 212, baseType: !210, size: 16, offset: 608)
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !8214, file: !3195, line: 214, baseType: !210, size: 16, offset: 624)
!8248 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !8214, file: !3195, line: 215, baseType: !210, size: 16, offset: 640)
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8214, file: !3195, line: 216, baseType: !210, size: 16, offset: 656)
!8250 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !8214, file: !3195, line: 217, baseType: !210, size: 16, offset: 672)
!8251 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !8214, file: !3195, line: 219, baseType: !264, size: 8, offset: 688)
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8214, file: !3195, line: 219, baseType: !264, size: 8, offset: 696)
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8214, file: !3195, line: 221, baseType: !8254, size: 64, offset: 704)
!8254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8255, size: 64)
!8255 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !3195, line: 39, flags: DIFlagFwdDecl)
!8256 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !8214, file: !3195, line: 223, baseType: !98, size: 128, offset: 768)
!8257 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !8214, file: !3195, line: 224, baseType: !98, size: 128, offset: 896)
!8258 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !8214, file: !3195, line: 225, baseType: !98, size: 128, offset: 1024)
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !8214, file: !3195, line: 227, baseType: !98, size: 128, offset: 1152)
!8260 = !DILocation(line: 897, column: 11, scope: !8192)
!8261 = !DILocation(line: 897, column: 28, scope: !8192)
!8262 = !DILocation(line: 897, column: 16, scope: !8192)
!8263 = !DILocalVariable(name: "v3d", scope: !8192, file: !3, line: 898, type: !4116)
!8264 = !DILocation(line: 898, column: 10, scope: !8192)
!8265 = !DILocation(line: 898, column: 16, scope: !8192)
!8266 = !DILocation(line: 898, column: 20, scope: !8192)
!8267 = !DILocation(line: 898, column: 30, scope: !8192)
!8268 = !DILocalVariable(name: "progress", scope: !8192, file: !3, line: 900, type: !106)
!8269 = !DILocation(line: 900, column: 8, scope: !8192)
!8270 = !DILocalVariable(name: "i", scope: !8192, file: !3, line: 901, type: !91)
!8271 = !DILocation(line: 901, column: 6, scope: !8192)
!8272 = !DILocation(line: 903, column: 22, scope: !8192)
!8273 = !DILocation(line: 903, column: 27, scope: !8192)
!8274 = !DILocation(line: 903, column: 34, scope: !8192)
!8275 = !DILocation(line: 903, column: 41, scope: !8192)
!8276 = !DILocation(line: 903, column: 44, scope: !8192)
!8277 = !DILocation(line: 903, column: 49, scope: !8192)
!8278 = !DILocation(line: 903, column: 56, scope: !8192)
!8279 = !DILocation(line: 903, column: 62, scope: !8192)
!8280 = !DILocation(line: 903, column: 67, scope: !8192)
!8281 = !DILocation(line: 903, column: 13, scope: !8192)
!8282 = !DILocation(line: 903, column: 11, scope: !8192)
!8283 = !DILocation(line: 905, column: 11, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 905, column: 2)
!8285 = !DILocation(line: 905, column: 9, scope: !8284)
!8286 = !DILocation(line: 905, column: 7, scope: !8284)
!8287 = !DILocation(line: 905, column: 18, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 905, column: 2)
!8289 = !DILocation(line: 905, column: 23, scope: !8288)
!8290 = !DILocation(line: 905, column: 20, scope: !8288)
!8291 = !DILocation(line: 905, column: 2, scope: !8284)
!8292 = !DILocalVariable(name: "ray_start", scope: !8293, file: !3, line: 906, type: !124)
!8293 = distinct !DILexicalBlock(scope: !8288, file: !3, line: 905, column: 33)
!8294 = !DILocation(line: 906, column: 9, scope: !8293)
!8295 = !DILocalVariable(name: "ray_normal", scope: !8293, file: !3, line: 906, type: !124)
!8296 = !DILocation(line: 906, column: 23, scope: !8293)
!8297 = !DILocalVariable(name: "delta", scope: !8293, file: !3, line: 907, type: !106)
!8298 = !DILocation(line: 907, column: 9, scope: !8293)
!8299 = !DILocation(line: 907, column: 26, scope: !8293)
!8300 = !DILocation(line: 907, column: 31, scope: !8293)
!8301 = !DILocation(line: 907, column: 38, scope: !8293)
!8302 = !DILocation(line: 907, column: 41, scope: !8293)
!8303 = !DILocation(line: 907, column: 44, scope: !8293)
!8304 = !DILocation(line: 907, column: 49, scope: !8293)
!8305 = !DILocation(line: 907, column: 56, scope: !8293)
!8306 = !DILocation(line: 907, column: 58, scope: !8293)
!8307 = !DILocation(line: 907, column: 63, scope: !8293)
!8308 = !DILocation(line: 907, column: 17, scope: !8293)
!8309 = !DILocalVariable(name: "pval", scope: !8293, file: !3, line: 908, type: !694)
!8310 = !DILocation(line: 908, column: 9, scope: !8293)
!8311 = !DILocation(line: 910, column: 34, scope: !8293)
!8312 = !DILocation(line: 910, column: 38, scope: !8293)
!8313 = !DILocation(line: 910, column: 43, scope: !8293)
!8314 = !DILocation(line: 910, column: 50, scope: !8293)
!8315 = !DILocation(line: 910, column: 53, scope: !8293)
!8316 = !DILocation(line: 910, column: 56, scope: !8293)
!8317 = !DILocation(line: 910, column: 3, scope: !8293)
!8318 = !DILocation(line: 911, column: 24, scope: !8293)
!8319 = !DILocation(line: 911, column: 28, scope: !8293)
!8320 = !DILocation(line: 911, column: 33, scope: !8293)
!8321 = !DILocation(line: 911, column: 39, scope: !8293)
!8322 = !DILocation(line: 911, column: 50, scope: !8293)
!8323 = !DILocation(line: 911, column: 3, scope: !8293)
!8324 = !DILocation(line: 913, column: 13, scope: !8293)
!8325 = !DILocation(line: 913, column: 25, scope: !8293)
!8326 = !DILocation(line: 913, column: 36, scope: !8293)
!8327 = !DILocation(line: 913, column: 34, scope: !8293)
!8328 = !DILocation(line: 913, column: 47, scope: !8293)
!8329 = !DILocation(line: 913, column: 45, scope: !8293)
!8330 = !DILocation(line: 913, column: 3, scope: !8293)
!8331 = !DILocation(line: 914, column: 13, scope: !8293)
!8332 = !DILocation(line: 914, column: 18, scope: !8293)
!8333 = !DILocation(line: 914, column: 25, scope: !8293)
!8334 = !DILocation(line: 914, column: 28, scope: !8293)
!8335 = !DILocation(line: 914, column: 31, scope: !8293)
!8336 = !DILocation(line: 914, column: 3, scope: !8293)
!8337 = !DILocation(line: 916, column: 15, scope: !8293)
!8338 = !DILocation(line: 916, column: 12, scope: !8293)
!8339 = !DILocation(line: 917, column: 2, scope: !8293)
!8340 = !DILocation(line: 905, column: 29, scope: !8288)
!8341 = !DILocation(line: 905, column: 2, scope: !8288)
!8342 = distinct !{!8342, !8291, !8343}
!8343 = !DILocation(line: 917, column: 2, scope: !8284)
!8344 = !DILocation(line: 918, column: 1, scope: !8192)
!8345 = distinct !DISubprogram(name: "sketch_draw_modal", scope: !3, file: !3, line: 2429, type: !8346, scopeLine: 2430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!8346 = !DISubroutineType(types: !8347)
!8347 = !{!91, !228, !4736, !4738, !210, !195}
!8348 = !DILocalVariable(name: "C", arg: 1, scope: !8345, file: !3, line: 2429, type: !228)
!8349 = !DILocation(line: 2429, column: 40, scope: !8345)
!8350 = !DILocalVariable(name: "op", arg: 2, scope: !8345, file: !3, line: 2429, type: !4736)
!8351 = !DILocation(line: 2429, column: 55, scope: !8345)
!8352 = !DILocalVariable(name: "event", arg: 3, scope: !8345, file: !3, line: 2429, type: !4738)
!8353 = !DILocation(line: 2429, column: 74, scope: !8345)
!8354 = !DILocalVariable(name: "gesture", arg: 4, scope: !8345, file: !3, line: 2429, type: !210)
!8355 = !DILocation(line: 2429, column: 87, scope: !8345)
!8356 = !DILocalVariable(name: "stk", arg: 5, scope: !8345, file: !3, line: 2429, type: !195)
!8357 = !DILocation(line: 2429, column: 107, scope: !8345)
!8358 = !DILocalVariable(name: "snap", scope: !8345, file: !3, line: 2431, type: !1258)
!8359 = !DILocation(line: 2431, column: 7, scope: !8345)
!8360 = !DILocation(line: 2431, column: 30, scope: !8345)
!8361 = !DILocation(line: 2431, column: 34, scope: !8345)
!8362 = !DILocation(line: 2431, column: 14, scope: !8345)
!8363 = !DILocalVariable(name: "dd", scope: !8345, file: !3, line: 2432, type: !5058)
!8364 = !DILocation(line: 2432, column: 15, scope: !8345)
!8365 = !DILocation(line: 2432, column: 20, scope: !8345)
!8366 = !DILocation(line: 2432, column: 24, scope: !8345)
!8367 = !DILocalVariable(name: "sketch", scope: !8345, file: !3, line: 2433, type: !1920)
!8368 = !DILocation(line: 2433, column: 13, scope: !8345)
!8369 = !DILocation(line: 2433, column: 36, scope: !8345)
!8370 = !DILocation(line: 2433, column: 22, scope: !8345)
!8371 = !DILocalVariable(name: "retval", scope: !8345, file: !3, line: 2434, type: !91)
!8372 = !DILocation(line: 2434, column: 6, scope: !8345)
!8373 = !DILocation(line: 2436, column: 10, scope: !8345)
!8374 = !DILocation(line: 2436, column: 17, scope: !8345)
!8375 = !DILocation(line: 2436, column: 2, scope: !8345)
!8376 = !DILocation(line: 2439, column: 11, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 2436, column: 23)
!8378 = !DILocation(line: 2439, column: 18, scope: !8377)
!8379 = !DILocation(line: 2439, column: 23, scope: !8377)
!8380 = !DILocation(line: 2439, column: 9, scope: !8377)
!8381 = !DILocation(line: 2440, column: 20, scope: !8377)
!8382 = !DILocation(line: 2440, column: 24, scope: !8377)
!8383 = !DILocation(line: 2440, column: 37, scope: !8377)
!8384 = !DILocation(line: 2440, column: 4, scope: !8377)
!8385 = !DILocation(line: 2441, column: 4, scope: !8377)
!8386 = !DILocation(line: 2444, column: 18, scope: !8377)
!8387 = !DILocation(line: 2444, column: 25, scope: !8377)
!8388 = !DILocation(line: 2444, column: 4, scope: !8377)
!8389 = !DILocation(line: 2444, column: 8, scope: !8377)
!8390 = !DILocation(line: 2444, column: 16, scope: !8377)
!8391 = !DILocation(line: 2445, column: 18, scope: !8377)
!8392 = !DILocation(line: 2445, column: 25, scope: !8377)
!8393 = !DILocation(line: 2445, column: 4, scope: !8377)
!8394 = !DILocation(line: 2445, column: 8, scope: !8377)
!8395 = !DILocation(line: 2445, column: 16, scope: !8377)
!8396 = !DILocation(line: 2446, column: 19, scope: !8377)
!8397 = !DILocation(line: 2446, column: 22, scope: !8377)
!8398 = !DILocation(line: 2446, column: 30, scope: !8377)
!8399 = !DILocation(line: 2446, column: 35, scope: !8377)
!8400 = !DILocation(line: 2446, column: 39, scope: !8377)
!8401 = !DILocation(line: 2446, column: 4, scope: !8377)
!8402 = !DILocation(line: 2447, column: 35, scope: !8377)
!8403 = !DILocation(line: 2447, column: 23, scope: !8377)
!8404 = !DILocation(line: 2447, column: 4, scope: !8377)
!8405 = !DILocation(line: 2448, column: 4, scope: !8377)
!8406 = !DILocation(line: 2450, column: 4, scope: !8377)
!8407 = !DILocation(line: 2450, column: 8, scope: !8377)
!8408 = !DILocation(line: 2450, column: 14, scope: !8377)
!8409 = !DILocation(line: 2450, column: 21, scope: !8377)
!8410 = !DILocation(line: 2450, column: 24, scope: !8377)
!8411 = !DILocation(line: 2451, column: 35, scope: !8377)
!8412 = !DILocation(line: 2451, column: 23, scope: !8377)
!8413 = !DILocation(line: 2451, column: 4, scope: !8377)
!8414 = !DILocation(line: 2452, column: 11, scope: !8377)
!8415 = !DILocation(line: 2453, column: 4, scope: !8377)
!8416 = !DILocation(line: 2455, column: 8, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8377, file: !3, line: 2455, column: 8)
!8418 = !DILocation(line: 2455, column: 15, scope: !8417)
!8419 = !DILocation(line: 2455, column: 19, scope: !8417)
!8420 = !DILocation(line: 2455, column: 8, scope: !8377)
!8421 = !DILocation(line: 2456, column: 9, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 2456, column: 9)
!8423 = distinct !DILexicalBlock(scope: !8417, file: !3, line: 2455, column: 34)
!8424 = !DILocation(line: 2456, column: 17, scope: !8422)
!8425 = !DILocation(line: 2456, column: 9, scope: !8423)
!8426 = !DILocation(line: 2457, column: 29, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 2456, column: 23)
!8428 = !DILocation(line: 2457, column: 6, scope: !8427)
!8429 = !DILocation(line: 2458, column: 36, scope: !8427)
!8430 = !DILocation(line: 2458, column: 6, scope: !8427)
!8431 = !DILocation(line: 2459, column: 25, scope: !8427)
!8432 = !DILocation(line: 2459, column: 33, scope: !8427)
!8433 = !DILocation(line: 2459, column: 6, scope: !8427)
!8434 = !DILocation(line: 2460, column: 37, scope: !8427)
!8435 = !DILocation(line: 2460, column: 25, scope: !8427)
!8436 = !DILocation(line: 2460, column: 6, scope: !8427)
!8437 = !DILocation(line: 2461, column: 6, scope: !8427)
!8438 = !DILocation(line: 2461, column: 16, scope: !8427)
!8439 = !DILocation(line: 2461, column: 20, scope: !8427)
!8440 = !DILocation(line: 2462, column: 13, scope: !8427)
!8441 = !DILocation(line: 2463, column: 5, scope: !8427)
!8442 = !DILocation(line: 2465, column: 29, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 2464, column: 10)
!8444 = !DILocation(line: 2465, column: 6, scope: !8443)
!8445 = !DILocation(line: 2466, column: 36, scope: !8443)
!8446 = !DILocation(line: 2466, column: 6, scope: !8443)
!8447 = !DILocation(line: 2468, column: 10, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 2468, column: 10)
!8449 = !DILocation(line: 2468, column: 15, scope: !8448)
!8450 = !DILocation(line: 2468, column: 25, scope: !8448)
!8451 = !DILocation(line: 2468, column: 10, scope: !8443)
!8452 = !DILocation(line: 2470, column: 23, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 2468, column: 30)
!8454 = !DILocation(line: 2470, column: 26, scope: !8453)
!8455 = !DILocation(line: 2470, column: 7, scope: !8453)
!8456 = !DILocation(line: 2471, column: 6, scope: !8453)
!8457 = !DILocation(line: 2473, column: 20, scope: !8443)
!8458 = !DILocation(line: 2473, column: 6, scope: !8443)
!8459 = !DILocation(line: 2474, column: 6, scope: !8443)
!8460 = !DILocation(line: 2474, column: 14, scope: !8443)
!8461 = !DILocation(line: 2474, column: 22, scope: !8443)
!8462 = !DILocation(line: 2476, column: 37, scope: !8443)
!8463 = !DILocation(line: 2476, column: 25, scope: !8443)
!8464 = !DILocation(line: 2476, column: 6, scope: !8443)
!8465 = !DILocation(line: 2477, column: 6, scope: !8443)
!8466 = !DILocation(line: 2477, column: 16, scope: !8443)
!8467 = !DILocation(line: 2477, column: 20, scope: !8443)
!8468 = !DILocation(line: 2478, column: 13, scope: !8443)
!8469 = !DILocation(line: 2480, column: 4, scope: !8423)
!8470 = !DILocation(line: 2481, column: 4, scope: !8377)
!8471 = !DILocation(line: 2484, column: 9, scope: !8345)
!8472 = !DILocation(line: 2484, column: 2, scope: !8345)
!8473 = distinct !DISubprogram(name: "sk_applyGesture", scope: !3, file: !3, line: 1939, type: !3797, scopeLine: 1940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!8474 = !DILocalVariable(name: "C", arg: 1, scope: !8473, file: !3, line: 1939, type: !228)
!8475 = !DILocation(line: 1939, column: 39, scope: !8473)
!8476 = !DILocalVariable(name: "sketch", arg: 2, scope: !8473, file: !3, line: 1939, type: !1920)
!8477 = !DILocation(line: 1939, column: 53, scope: !8473)
!8478 = !DILocalVariable(name: "gest", scope: !8473, file: !3, line: 1941, type: !1910)
!8479 = !DILocation(line: 1941, column: 13, scope: !8473)
!8480 = !DILocalVariable(name: "act", scope: !8473, file: !3, line: 1942, type: !8481)
!8481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64)
!8482 = !DILocation(line: 1942, column: 20, scope: !8473)
!8483 = !DILocation(line: 1944, column: 17, scope: !8473)
!8484 = !DILocation(line: 1944, column: 27, scope: !8473)
!8485 = !DILocation(line: 1944, column: 2, scope: !8473)
!8486 = !DILocation(line: 1947, column: 11, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8473, file: !3, line: 1947, column: 2)
!8488 = !DILocation(line: 1947, column: 7, scope: !8487)
!8489 = !DILocation(line: 1947, column: 30, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 1947, column: 2)
!8491 = !DILocation(line: 1947, column: 35, scope: !8490)
!8492 = !DILocation(line: 1947, column: 41, scope: !8490)
!8493 = !DILocation(line: 1947, column: 2, scope: !8487)
!8494 = !DILocation(line: 1948, column: 7, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 1948, column: 7)
!8496 = distinct !DILexicalBlock(scope: !8490, file: !3, line: 1947, column: 57)
!8497 = !DILocation(line: 1948, column: 12, scope: !8495)
!8498 = !DILocation(line: 1948, column: 19, scope: !8495)
!8499 = !DILocation(line: 1948, column: 29, scope: !8495)
!8500 = !DILocation(line: 1948, column: 7, scope: !8496)
!8501 = !DILocation(line: 1949, column: 4, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8495, file: !3, line: 1948, column: 38)
!8503 = !DILocation(line: 1949, column: 9, scope: !8502)
!8504 = !DILocation(line: 1949, column: 15, scope: !8502)
!8505 = !DILocation(line: 1949, column: 25, scope: !8502)
!8506 = !DILocation(line: 1950, column: 4, scope: !8502)
!8507 = !DILocation(line: 1952, column: 2, scope: !8496)
!8508 = !DILocation(line: 1947, column: 53, scope: !8490)
!8509 = !DILocation(line: 1947, column: 2, scope: !8490)
!8510 = distinct !{!8510, !8493, !8511}
!8511 = !DILocation(line: 1952, column: 2, scope: !8487)
!8512 = !DILocation(line: 1954, column: 2, scope: !8473)
!8513 = !DILocation(line: 1955, column: 1, scope: !8473)
!8514 = distinct !DISubprogram(name: "sk_initGesture", scope: !3, file: !3, line: 1919, type: !1940, scopeLine: 1920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!8515 = !DILocalVariable(name: "C", arg: 1, scope: !8514, file: !3, line: 1919, type: !228)
!8516 = !DILocation(line: 1919, column: 38, scope: !8514)
!8517 = !DILocalVariable(name: "gest", arg: 2, scope: !8514, file: !3, line: 1919, type: !1909)
!8518 = !DILocation(line: 1919, column: 53, scope: !8514)
!8519 = !DILocalVariable(name: "sketch", arg: 3, scope: !8514, file: !3, line: 1919, type: !1920)
!8520 = !DILocation(line: 1919, column: 70, scope: !8514)
!8521 = !DILocation(line: 1921, column: 22, scope: !8514)
!8522 = !DILocation(line: 1921, column: 28, scope: !8514)
!8523 = !DILocation(line: 1921, column: 2, scope: !8514)
!8524 = !DILocation(line: 1922, column: 22, scope: !8514)
!8525 = !DILocation(line: 1922, column: 28, scope: !8514)
!8526 = !DILocation(line: 1922, column: 2, scope: !8514)
!8527 = !DILocation(line: 1924, column: 19, scope: !8514)
!8528 = !DILocation(line: 1924, column: 2, scope: !8514)
!8529 = !DILocation(line: 1924, column: 8, scope: !8514)
!8530 = !DILocation(line: 1924, column: 17, scope: !8514)
!8531 = !DILocation(line: 1925, column: 14, scope: !8514)
!8532 = !DILocation(line: 1925, column: 22, scope: !8514)
!8533 = !DILocation(line: 1925, column: 2, scope: !8514)
!8534 = !DILocation(line: 1925, column: 8, scope: !8514)
!8535 = !DILocation(line: 1925, column: 12, scope: !8514)
!8536 = !DILocation(line: 1927, column: 56, scope: !8514)
!8537 = !DILocation(line: 1927, column: 60, scope: !8514)
!8538 = !DILocation(line: 1927, column: 66, scope: !8514)
!8539 = !DILocation(line: 1927, column: 86, scope: !8514)
!8540 = !DILocation(line: 1927, column: 92, scope: !8514)
!8541 = !DILocation(line: 1927, column: 32, scope: !8514)
!8542 = !DILocation(line: 1927, column: 2, scope: !8514)
!8543 = !DILocation(line: 1927, column: 8, scope: !8514)
!8544 = !DILocation(line: 1927, column: 30, scope: !8514)
!8545 = !DILocation(line: 1928, column: 47, scope: !8514)
!8546 = !DILocation(line: 1928, column: 51, scope: !8514)
!8547 = !DILocation(line: 1928, column: 57, scope: !8514)
!8548 = !DILocation(line: 1928, column: 72, scope: !8514)
!8549 = !DILocation(line: 1928, column: 80, scope: !8514)
!8550 = !DILocation(line: 1928, column: 86, scope: !8514)
!8551 = !DILocation(line: 1928, column: 27, scope: !8514)
!8552 = !DILocation(line: 1928, column: 2, scope: !8514)
!8553 = !DILocation(line: 1928, column: 8, scope: !8514)
!8554 = !DILocation(line: 1928, column: 25, scope: !8514)
!8555 = !DILocation(line: 1929, column: 37, scope: !8514)
!8556 = !DILocation(line: 1929, column: 43, scope: !8514)
!8557 = !DILocation(line: 1929, column: 53, scope: !8514)
!8558 = !DILocation(line: 1929, column: 59, scope: !8514)
!8559 = !DILocation(line: 1929, column: 22, scope: !8514)
!8560 = !DILocation(line: 1929, column: 2, scope: !8514)
!8561 = !DILocation(line: 1929, column: 8, scope: !8514)
!8562 = !DILocation(line: 1929, column: 20, scope: !8514)
!8563 = !DILocation(line: 1930, column: 1, scope: !8514)
!8564 = distinct !DISubprogram(name: "sk_freeGesture", scope: !3, file: !3, line: 1932, type: !8565, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!8565 = !DISubroutineType(types: !8566)
!8566 = !{null, !1909}
!8567 = !DILocalVariable(name: "gest", arg: 1, scope: !8564, file: !3, line: 1932, type: !1909)
!8568 = !DILocation(line: 1932, column: 40, scope: !8564)
!8569 = !DILocation(line: 1934, column: 16, scope: !8564)
!8570 = !DILocation(line: 1934, column: 22, scope: !8564)
!8571 = !DILocation(line: 1934, column: 2, scope: !8564)
!8572 = !DILocation(line: 1935, column: 17, scope: !8564)
!8573 = !DILocation(line: 1935, column: 23, scope: !8564)
!8574 = !DILocation(line: 1935, column: 2, scope: !8564)
!8575 = !DILocation(line: 1936, column: 17, scope: !8564)
!8576 = !DILocation(line: 1936, column: 23, scope: !8564)
!8577 = !DILocation(line: 1936, column: 2, scope: !8564)
!8578 = !DILocation(line: 1937, column: 1, scope: !8564)
!8579 = distinct !DISubprogram(name: "sk_getSelfIntersections", scope: !3, file: !3, line: 1449, type: !8580, scopeLine: 1450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!8580 = !DISubroutineType(types: !8581)
!8581 = !{!91, !228, !282, !195}
!8582 = !DILocalVariable(name: "C", arg: 1, scope: !8579, file: !3, line: 1449, type: !228)
!8583 = !DILocation(line: 1449, column: 46, scope: !8579)
!8584 = !DILocalVariable(name: "list", arg: 2, scope: !8579, file: !3, line: 1449, type: !282)
!8585 = !DILocation(line: 1449, column: 59, scope: !8579)
!8586 = !DILocalVariable(name: "gesture", arg: 3, scope: !8579, file: !3, line: 1449, type: !195)
!8587 = !DILocation(line: 1449, column: 76, scope: !8579)
!8588 = !DILocalVariable(name: "ar", scope: !8579, file: !3, line: 1451, type: !3193)
!8589 = !DILocation(line: 1451, column: 11, scope: !8579)
!8590 = !DILocation(line: 1451, column: 30, scope: !8579)
!8591 = !DILocation(line: 1451, column: 16, scope: !8579)
!8592 = !DILocalVariable(name: "added", scope: !8579, file: !3, line: 1452, type: !91)
!8593 = !DILocation(line: 1452, column: 6, scope: !8579)
!8594 = !DILocalVariable(name: "s_i", scope: !8579, file: !3, line: 1453, type: !91)
!8595 = !DILocation(line: 1453, column: 6, scope: !8579)
!8596 = !DILocation(line: 1455, column: 11, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 1455, column: 2)
!8598 = !DILocation(line: 1455, column: 7, scope: !8597)
!8599 = !DILocation(line: 1455, column: 16, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8597, file: !3, line: 1455, column: 2)
!8601 = !DILocation(line: 1455, column: 22, scope: !8600)
!8602 = !DILocation(line: 1455, column: 31, scope: !8600)
!8603 = !DILocation(line: 1455, column: 41, scope: !8600)
!8604 = !DILocation(line: 1455, column: 20, scope: !8600)
!8605 = !DILocation(line: 1455, column: 2, scope: !8597)
!8606 = !DILocalVariable(name: "s_p1", scope: !8607, file: !3, line: 1456, type: !124)
!8607 = distinct !DILexicalBlock(scope: !8600, file: !3, line: 1455, column: 53)
!8608 = !DILocation(line: 1456, column: 9, scope: !8607)
!8609 = !DILocalVariable(name: "s_p2", scope: !8607, file: !3, line: 1457, type: !124)
!8610 = !DILocation(line: 1457, column: 9, scope: !8607)
!8611 = !DILocalVariable(name: "g_i", scope: !8607, file: !3, line: 1458, type: !91)
!8612 = !DILocation(line: 1458, column: 7, scope: !8607)
!8613 = !DILocation(line: 1460, column: 34, scope: !8607)
!8614 = !DILocation(line: 1460, column: 38, scope: !8607)
!8615 = !DILocation(line: 1460, column: 47, scope: !8607)
!8616 = !DILocation(line: 1460, column: 54, scope: !8607)
!8617 = !DILocation(line: 1460, column: 59, scope: !8607)
!8618 = !DILocation(line: 1460, column: 62, scope: !8607)
!8619 = !DILocation(line: 1460, column: 3, scope: !8607)
!8620 = !DILocation(line: 1461, column: 34, scope: !8607)
!8621 = !DILocation(line: 1461, column: 38, scope: !8607)
!8622 = !DILocation(line: 1461, column: 47, scope: !8607)
!8623 = !DILocation(line: 1461, column: 54, scope: !8607)
!8624 = !DILocation(line: 1461, column: 58, scope: !8607)
!8625 = !DILocation(line: 1461, column: 63, scope: !8607)
!8626 = !DILocation(line: 1461, column: 66, scope: !8607)
!8627 = !DILocation(line: 1461, column: 3, scope: !8607)
!8628 = !DILocation(line: 1464, column: 14, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1464, column: 3)
!8630 = !DILocation(line: 1464, column: 18, scope: !8629)
!8631 = !DILocation(line: 1464, column: 12, scope: !8629)
!8632 = !DILocation(line: 1464, column: 8, scope: !8629)
!8633 = !DILocation(line: 1464, column: 23, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8629, file: !3, line: 1464, column: 3)
!8635 = !DILocation(line: 1464, column: 29, scope: !8634)
!8636 = !DILocation(line: 1464, column: 38, scope: !8634)
!8637 = !DILocation(line: 1464, column: 48, scope: !8634)
!8638 = !DILocation(line: 1464, column: 27, scope: !8634)
!8639 = !DILocation(line: 1464, column: 3, scope: !8629)
!8640 = !DILocalVariable(name: "g_p1", scope: !8641, file: !3, line: 1465, type: !124)
!8641 = distinct !DILexicalBlock(scope: !8634, file: !3, line: 1464, column: 60)
!8642 = !DILocation(line: 1465, column: 10, scope: !8641)
!8643 = !DILocalVariable(name: "g_p2", scope: !8641, file: !3, line: 1466, type: !124)
!8644 = !DILocation(line: 1466, column: 10, scope: !8641)
!8645 = !DILocalVariable(name: "vi", scope: !8641, file: !3, line: 1467, type: !124)
!8646 = !DILocation(line: 1467, column: 10, scope: !8641)
!8647 = !DILocalVariable(name: "lambda", scope: !8641, file: !3, line: 1468, type: !106)
!8648 = !DILocation(line: 1468, column: 10, scope: !8641)
!8649 = !DILocation(line: 1470, column: 35, scope: !8641)
!8650 = !DILocation(line: 1470, column: 39, scope: !8641)
!8651 = !DILocation(line: 1470, column: 48, scope: !8641)
!8652 = !DILocation(line: 1470, column: 55, scope: !8641)
!8653 = !DILocation(line: 1470, column: 60, scope: !8641)
!8654 = !DILocation(line: 1470, column: 63, scope: !8641)
!8655 = !DILocation(line: 1470, column: 4, scope: !8641)
!8656 = !DILocation(line: 1471, column: 35, scope: !8641)
!8657 = !DILocation(line: 1471, column: 39, scope: !8641)
!8658 = !DILocation(line: 1471, column: 48, scope: !8641)
!8659 = !DILocation(line: 1471, column: 55, scope: !8641)
!8660 = !DILocation(line: 1471, column: 59, scope: !8641)
!8661 = !DILocation(line: 1471, column: 64, scope: !8641)
!8662 = !DILocation(line: 1471, column: 67, scope: !8641)
!8663 = !DILocation(line: 1471, column: 4, scope: !8641)
!8664 = !DILocation(line: 1473, column: 34, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 1473, column: 8)
!8666 = !DILocation(line: 1473, column: 40, scope: !8665)
!8667 = !DILocation(line: 1473, column: 46, scope: !8665)
!8668 = !DILocation(line: 1473, column: 52, scope: !8665)
!8669 = !DILocation(line: 1473, column: 58, scope: !8665)
!8670 = !DILocation(line: 1473, column: 8, scope: !8665)
!8671 = !DILocation(line: 1473, column: 8, scope: !8641)
!8672 = !DILocalVariable(name: "isect", scope: !8673, file: !3, line: 1474, type: !2638)
!8673 = distinct !DILexicalBlock(scope: !8665, file: !3, line: 1473, column: 72)
!8674 = !DILocation(line: 1474, column: 22, scope: !8673)
!8675 = !DILocation(line: 1474, column: 30, scope: !8673)
!8676 = !DILocation(line: 1476, column: 28, scope: !8673)
!8677 = !DILocation(line: 1476, column: 5, scope: !8673)
!8678 = !DILocation(line: 1476, column: 12, scope: !8673)
!8679 = !DILocation(line: 1476, column: 26, scope: !8673)
!8680 = !DILocation(line: 1477, column: 21, scope: !8673)
!8681 = !DILocation(line: 1477, column: 5, scope: !8673)
!8682 = !DILocation(line: 1477, column: 12, scope: !8673)
!8683 = !DILocation(line: 1477, column: 19, scope: !8673)
!8684 = !DILocation(line: 1478, column: 20, scope: !8673)
!8685 = !DILocation(line: 1478, column: 24, scope: !8673)
!8686 = !DILocation(line: 1478, column: 5, scope: !8673)
!8687 = !DILocation(line: 1478, column: 12, scope: !8673)
!8688 = !DILocation(line: 1478, column: 18, scope: !8673)
!8689 = !DILocation(line: 1479, column: 21, scope: !8673)
!8690 = !DILocation(line: 1479, column: 5, scope: !8673)
!8691 = !DILocation(line: 1479, column: 12, scope: !8673)
!8692 = !DILocation(line: 1479, column: 19, scope: !8673)
!8693 = !DILocation(line: 1481, column: 17, scope: !8673)
!8694 = !DILocation(line: 1481, column: 24, scope: !8673)
!8695 = !DILocation(line: 1481, column: 27, scope: !8673)
!8696 = !DILocation(line: 1481, column: 36, scope: !8673)
!8697 = !DILocation(line: 1481, column: 43, scope: !8673)
!8698 = !DILocation(line: 1481, column: 47, scope: !8673)
!8699 = !DILocation(line: 1481, column: 52, scope: !8673)
!8700 = !DILocation(line: 1481, column: 55, scope: !8673)
!8701 = !DILocation(line: 1481, column: 64, scope: !8673)
!8702 = !DILocation(line: 1481, column: 71, scope: !8673)
!8703 = !DILocation(line: 1481, column: 76, scope: !8673)
!8704 = !DILocation(line: 1481, column: 5, scope: !8673)
!8705 = !DILocation(line: 1482, column: 15, scope: !8673)
!8706 = !DILocation(line: 1482, column: 22, scope: !8673)
!8707 = !DILocation(line: 1482, column: 25, scope: !8673)
!8708 = !DILocation(line: 1482, column: 5, scope: !8673)
!8709 = !DILocation(line: 1483, column: 15, scope: !8673)
!8710 = !DILocation(line: 1483, column: 22, scope: !8673)
!8711 = !DILocation(line: 1483, column: 25, scope: !8673)
!8712 = !DILocation(line: 1483, column: 34, scope: !8673)
!8713 = !DILocation(line: 1483, column: 41, scope: !8673)
!8714 = !DILocation(line: 1483, column: 46, scope: !8673)
!8715 = !DILocation(line: 1483, column: 5, scope: !8673)
!8716 = !DILocation(line: 1485, column: 17, scope: !8673)
!8717 = !DILocation(line: 1485, column: 23, scope: !8673)
!8718 = !DILocation(line: 1485, column: 5, scope: !8673)
!8719 = !DILocation(line: 1487, column: 10, scope: !8673)
!8720 = !DILocation(line: 1488, column: 4, scope: !8673)
!8721 = !DILocation(line: 1489, column: 3, scope: !8641)
!8722 = !DILocation(line: 1464, column: 56, scope: !8634)
!8723 = !DILocation(line: 1464, column: 3, scope: !8634)
!8724 = distinct !{!8724, !8639, !8725}
!8725 = !DILocation(line: 1489, column: 3, scope: !8629)
!8726 = !DILocation(line: 1490, column: 2, scope: !8607)
!8727 = !DILocation(line: 1455, column: 49, scope: !8600)
!8728 = !DILocation(line: 1455, column: 2, scope: !8600)
!8729 = distinct !{!8729, !8605, !8730}
!8730 = !DILocation(line: 1490, column: 2, scope: !8597)
!8731 = !DILocation(line: 1492, column: 9, scope: !8579)
!8732 = !DILocation(line: 1492, column: 2, scope: !8579)
!8733 = distinct !DISubprogram(name: "sk_getIntersections", scope: !3, file: !3, line: 1521, type: !8734, scopeLine: 1522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!8734 = !DISubroutineType(types: !8735)
!8735 = !{!91, !228, !282, !1920, !195}
!8736 = !DILocalVariable(name: "C", arg: 1, scope: !8733, file: !3, line: 1521, type: !228)
!8737 = !DILocation(line: 1521, column: 42, scope: !8733)
!8738 = !DILocalVariable(name: "list", arg: 2, scope: !8733, file: !3, line: 1521, type: !282)
!8739 = !DILocation(line: 1521, column: 55, scope: !8733)
!8740 = !DILocalVariable(name: "sketch", arg: 3, scope: !8733, file: !3, line: 1521, type: !1920)
!8741 = !DILocation(line: 1521, column: 72, scope: !8733)
!8742 = !DILocalVariable(name: "gesture", arg: 4, scope: !8733, file: !3, line: 1521, type: !195)
!8743 = !DILocation(line: 1521, column: 91, scope: !8733)
!8744 = !DILocalVariable(name: "ar", scope: !8733, file: !3, line: 1523, type: !3193)
!8745 = !DILocation(line: 1523, column: 11, scope: !8733)
!8746 = !DILocation(line: 1523, column: 30, scope: !8733)
!8747 = !DILocation(line: 1523, column: 16, scope: !8733)
!8748 = !DILocalVariable(name: "sa", scope: !8733, file: !3, line: 1524, type: !8212)
!8749 = !DILocation(line: 1524, column: 11, scope: !8733)
!8750 = !DILocation(line: 1524, column: 28, scope: !8733)
!8751 = !DILocation(line: 1524, column: 16, scope: !8733)
!8752 = !DILocalVariable(name: "v3d", scope: !8733, file: !3, line: 1525, type: !4116)
!8753 = !DILocation(line: 1525, column: 10, scope: !8733)
!8754 = !DILocation(line: 1525, column: 16, scope: !8733)
!8755 = !DILocation(line: 1525, column: 20, scope: !8733)
!8756 = !DILocation(line: 1525, column: 30, scope: !8733)
!8757 = !DILocalVariable(name: "stk", scope: !8733, file: !3, line: 1526, type: !195)
!8758 = !DILocation(line: 1526, column: 13, scope: !8733)
!8759 = !DILocalVariable(name: "added", scope: !8733, file: !3, line: 1527, type: !91)
!8760 = !DILocation(line: 1527, column: 6, scope: !8733)
!8761 = !DILocation(line: 1529, column: 13, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 1529, column: 2)
!8763 = !DILocation(line: 1529, column: 21, scope: !8762)
!8764 = !DILocation(line: 1529, column: 29, scope: !8762)
!8765 = !DILocation(line: 1529, column: 11, scope: !8762)
!8766 = !DILocation(line: 1529, column: 7, scope: !8762)
!8767 = !DILocation(line: 1529, column: 36, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8762, file: !3, line: 1529, column: 2)
!8769 = !DILocation(line: 1529, column: 2, scope: !8762)
!8770 = !DILocalVariable(name: "s_added", scope: !8771, file: !3, line: 1530, type: !91)
!8771 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 1529, column: 58)
!8772 = !DILocation(line: 1530, column: 7, scope: !8771)
!8773 = !DILocalVariable(name: "s_i", scope: !8771, file: !3, line: 1531, type: !91)
!8774 = !DILocation(line: 1531, column: 7, scope: !8771)
!8775 = !DILocation(line: 1533, column: 12, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 1533, column: 3)
!8777 = !DILocation(line: 1533, column: 8, scope: !8776)
!8778 = !DILocation(line: 1533, column: 17, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8776, file: !3, line: 1533, column: 3)
!8780 = !DILocation(line: 1533, column: 23, scope: !8779)
!8781 = !DILocation(line: 1533, column: 28, scope: !8779)
!8782 = !DILocation(line: 1533, column: 38, scope: !8779)
!8783 = !DILocation(line: 1533, column: 21, scope: !8779)
!8784 = !DILocation(line: 1533, column: 3, scope: !8776)
!8785 = !DILocalVariable(name: "s_p1", scope: !8786, file: !3, line: 1534, type: !124)
!8786 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 1533, column: 50)
!8787 = !DILocation(line: 1534, column: 10, scope: !8786)
!8788 = !DILocalVariable(name: "s_p2", scope: !8786, file: !3, line: 1535, type: !124)
!8789 = !DILocation(line: 1535, column: 10, scope: !8786)
!8790 = !DILocalVariable(name: "g_i", scope: !8786, file: !3, line: 1536, type: !91)
!8791 = !DILocation(line: 1536, column: 8, scope: !8786)
!8792 = !DILocation(line: 1538, column: 35, scope: !8786)
!8793 = !DILocation(line: 1538, column: 39, scope: !8786)
!8794 = !DILocation(line: 1538, column: 44, scope: !8786)
!8795 = !DILocation(line: 1538, column: 51, scope: !8786)
!8796 = !DILocation(line: 1538, column: 56, scope: !8786)
!8797 = !DILocation(line: 1538, column: 59, scope: !8786)
!8798 = !DILocation(line: 1538, column: 4, scope: !8786)
!8799 = !DILocation(line: 1539, column: 35, scope: !8786)
!8800 = !DILocation(line: 1539, column: 39, scope: !8786)
!8801 = !DILocation(line: 1539, column: 44, scope: !8786)
!8802 = !DILocation(line: 1539, column: 51, scope: !8786)
!8803 = !DILocation(line: 1539, column: 55, scope: !8786)
!8804 = !DILocation(line: 1539, column: 60, scope: !8786)
!8805 = !DILocation(line: 1539, column: 63, scope: !8786)
!8806 = !DILocation(line: 1539, column: 4, scope: !8786)
!8807 = !DILocation(line: 1541, column: 13, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8786, file: !3, line: 1541, column: 4)
!8809 = !DILocation(line: 1541, column: 9, scope: !8808)
!8810 = !DILocation(line: 1541, column: 18, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8808, file: !3, line: 1541, column: 4)
!8812 = !DILocation(line: 1541, column: 24, scope: !8811)
!8813 = !DILocation(line: 1541, column: 33, scope: !8811)
!8814 = !DILocation(line: 1541, column: 43, scope: !8811)
!8815 = !DILocation(line: 1541, column: 22, scope: !8811)
!8816 = !DILocation(line: 1541, column: 4, scope: !8808)
!8817 = !DILocalVariable(name: "g_p1", scope: !8818, file: !3, line: 1542, type: !124)
!8818 = distinct !DILexicalBlock(scope: !8811, file: !3, line: 1541, column: 55)
!8819 = !DILocation(line: 1542, column: 11, scope: !8818)
!8820 = !DILocalVariable(name: "g_p2", scope: !8818, file: !3, line: 1543, type: !124)
!8821 = !DILocation(line: 1543, column: 11, scope: !8818)
!8822 = !DILocalVariable(name: "vi", scope: !8818, file: !3, line: 1544, type: !124)
!8823 = !DILocation(line: 1544, column: 11, scope: !8818)
!8824 = !DILocalVariable(name: "lambda", scope: !8818, file: !3, line: 1545, type: !106)
!8825 = !DILocation(line: 1545, column: 11, scope: !8818)
!8826 = !DILocation(line: 1547, column: 36, scope: !8818)
!8827 = !DILocation(line: 1547, column: 40, scope: !8818)
!8828 = !DILocation(line: 1547, column: 49, scope: !8818)
!8829 = !DILocation(line: 1547, column: 56, scope: !8818)
!8830 = !DILocation(line: 1547, column: 61, scope: !8818)
!8831 = !DILocation(line: 1547, column: 64, scope: !8818)
!8832 = !DILocation(line: 1547, column: 5, scope: !8818)
!8833 = !DILocation(line: 1548, column: 36, scope: !8818)
!8834 = !DILocation(line: 1548, column: 40, scope: !8818)
!8835 = !DILocation(line: 1548, column: 49, scope: !8818)
!8836 = !DILocation(line: 1548, column: 56, scope: !8818)
!8837 = !DILocation(line: 1548, column: 60, scope: !8818)
!8838 = !DILocation(line: 1548, column: 65, scope: !8818)
!8839 = !DILocation(line: 1548, column: 68, scope: !8818)
!8840 = !DILocation(line: 1548, column: 5, scope: !8818)
!8841 = !DILocation(line: 1550, column: 35, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8818, file: !3, line: 1550, column: 9)
!8843 = !DILocation(line: 1550, column: 41, scope: !8842)
!8844 = !DILocation(line: 1550, column: 47, scope: !8842)
!8845 = !DILocation(line: 1550, column: 53, scope: !8842)
!8846 = !DILocation(line: 1550, column: 59, scope: !8842)
!8847 = !DILocation(line: 1550, column: 9, scope: !8842)
!8848 = !DILocation(line: 1550, column: 9, scope: !8818)
!8849 = !DILocalVariable(name: "isect", scope: !8850, file: !3, line: 1551, type: !2638)
!8850 = distinct !DILexicalBlock(scope: !8842, file: !3, line: 1550, column: 73)
!8851 = !DILocation(line: 1551, column: 23, scope: !8850)
!8852 = !DILocation(line: 1551, column: 31, scope: !8850)
!8853 = !DILocalVariable(name: "ray_start", scope: !8850, file: !3, line: 1552, type: !124)
!8854 = !DILocation(line: 1552, column: 12, scope: !8850)
!8855 = !DILocalVariable(name: "ray_end", scope: !8850, file: !3, line: 1552, type: !124)
!8856 = !DILocation(line: 1552, column: 26, scope: !8850)
!8857 = !DILocalVariable(name: "mval", scope: !8850, file: !3, line: 1553, type: !694)
!8858 = !DILocation(line: 1553, column: 12, scope: !8850)
!8859 = !DILocation(line: 1555, column: 29, scope: !8850)
!8860 = !DILocation(line: 1555, column: 6, scope: !8850)
!8861 = !DILocation(line: 1555, column: 13, scope: !8850)
!8862 = !DILocation(line: 1555, column: 27, scope: !8850)
!8863 = !DILocation(line: 1556, column: 22, scope: !8850)
!8864 = !DILocation(line: 1556, column: 6, scope: !8850)
!8865 = !DILocation(line: 1556, column: 13, scope: !8850)
!8866 = !DILocation(line: 1556, column: 20, scope: !8850)
!8867 = !DILocation(line: 1557, column: 21, scope: !8850)
!8868 = !DILocation(line: 1557, column: 25, scope: !8850)
!8869 = !DILocation(line: 1557, column: 6, scope: !8850)
!8870 = !DILocation(line: 1557, column: 13, scope: !8850)
!8871 = !DILocation(line: 1557, column: 19, scope: !8850)
!8872 = !DILocation(line: 1558, column: 22, scope: !8850)
!8873 = !DILocation(line: 1558, column: 6, scope: !8850)
!8874 = !DILocation(line: 1558, column: 13, scope: !8850)
!8875 = !DILocation(line: 1558, column: 20, scope: !8850)
!8876 = !DILocation(line: 1559, column: 22, scope: !8850)
!8877 = !DILocation(line: 1559, column: 6, scope: !8850)
!8878 = !DILocation(line: 1559, column: 13, scope: !8850)
!8879 = !DILocation(line: 1559, column: 20, scope: !8850)
!8880 = !DILocation(line: 1561, column: 16, scope: !8850)
!8881 = !DILocation(line: 1561, column: 6, scope: !8850)
!8882 = !DILocation(line: 1561, column: 14, scope: !8850)
!8883 = !DILocation(line: 1562, column: 16, scope: !8850)
!8884 = !DILocation(line: 1562, column: 6, scope: !8850)
!8885 = !DILocation(line: 1562, column: 14, scope: !8850)
!8886 = !DILocation(line: 1563, column: 31, scope: !8850)
!8887 = !DILocation(line: 1563, column: 35, scope: !8850)
!8888 = !DILocation(line: 1563, column: 40, scope: !8850)
!8889 = !DILocation(line: 1563, column: 46, scope: !8850)
!8890 = !DILocation(line: 1563, column: 57, scope: !8850)
!8891 = !DILocation(line: 1563, column: 6, scope: !8850)
!8892 = !DILocation(line: 1565, column: 25, scope: !8850)
!8893 = !DILocation(line: 1565, column: 30, scope: !8850)
!8894 = !DILocation(line: 1565, column: 37, scope: !8850)
!8895 = !DILocation(line: 1565, column: 42, scope: !8850)
!8896 = !DILocation(line: 1566, column: 25, scope: !8850)
!8897 = !DILocation(line: 1566, column: 30, scope: !8850)
!8898 = !DILocation(line: 1566, column: 37, scope: !8850)
!8899 = !DILocation(line: 1566, column: 41, scope: !8850)
!8900 = !DILocation(line: 1566, column: 46, scope: !8850)
!8901 = !DILocation(line: 1567, column: 25, scope: !8850)
!8902 = !DILocation(line: 1568, column: 25, scope: !8850)
!8903 = !DILocation(line: 1569, column: 25, scope: !8850)
!8904 = !DILocation(line: 1569, column: 32, scope: !8850)
!8905 = !DILocation(line: 1570, column: 25, scope: !8850)
!8906 = !DILocation(line: 1565, column: 6, scope: !8850)
!8907 = !DILocation(line: 1572, column: 18, scope: !8850)
!8908 = !DILocation(line: 1572, column: 24, scope: !8850)
!8909 = !DILocation(line: 1572, column: 6, scope: !8850)
!8910 = !DILocation(line: 1574, column: 13, scope: !8850)
!8911 = !DILocation(line: 1575, column: 5, scope: !8850)
!8912 = !DILocation(line: 1576, column: 4, scope: !8818)
!8913 = !DILocation(line: 1541, column: 51, scope: !8811)
!8914 = !DILocation(line: 1541, column: 4, scope: !8811)
!8915 = distinct !{!8915, !8816, !8916}
!8916 = !DILocation(line: 1576, column: 4, scope: !8808)
!8917 = !DILocation(line: 1577, column: 3, scope: !8786)
!8918 = !DILocation(line: 1533, column: 46, scope: !8779)
!8919 = !DILocation(line: 1533, column: 3, scope: !8779)
!8920 = distinct !{!8920, !8784, !8921}
!8921 = !DILocation(line: 1577, column: 3, scope: !8776)
!8922 = !DILocation(line: 1579, column: 11, scope: !8771)
!8923 = !DILocation(line: 1579, column: 9, scope: !8771)
!8924 = !DILocation(line: 1580, column: 2, scope: !8771)
!8925 = !DILocation(line: 1529, column: 47, scope: !8768)
!8926 = !DILocation(line: 1529, column: 52, scope: !8768)
!8927 = !DILocation(line: 1529, column: 45, scope: !8768)
!8928 = !DILocation(line: 1529, column: 2, scope: !8768)
!8929 = distinct !{!8929, !8769, !8930}
!8930 = !DILocation(line: 1580, column: 2, scope: !8762)
!8931 = !DILocation(line: 1582, column: 15, scope: !8733)
!8932 = !DILocation(line: 1582, column: 2, scope: !8733)
!8933 = !DILocation(line: 1584, column: 9, scope: !8733)
!8934 = !DILocation(line: 1584, column: 2, scope: !8733)
!8935 = distinct !DISubprogram(name: "sk_getSegments", scope: !3, file: !3, line: 1587, type: !8936, scopeLine: 1588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!8936 = !DISubroutineType(types: !8937)
!8937 = !{!91, !195, !195}
!8938 = !DILocalVariable(name: "segments", arg: 1, scope: !8935, file: !3, line: 1587, type: !195)
!8939 = !DILocation(line: 1587, column: 38, scope: !8935)
!8940 = !DILocalVariable(name: "gesture", arg: 2, scope: !8935, file: !3, line: 1587, type: !195)
!8941 = !DILocation(line: 1587, column: 59, scope: !8935)
!8942 = !DILocalVariable(name: "sk_iter", scope: !8935, file: !3, line: 1589, type: !162)
!8943 = !DILocation(line: 1589, column: 20, scope: !8935)
!8944 = !DILocalVariable(name: "iter", scope: !8935, file: !3, line: 1590, type: !242)
!8945 = !DILocation(line: 1590, column: 16, scope: !8935)
!8946 = !DILocation(line: 1590, column: 23, scope: !8935)
!8947 = !DILocalVariable(name: "CORRELATION_THRESHOLD", scope: !8935, file: !3, line: 1592, type: !106)
!8948 = !DILocation(line: 1592, column: 8, scope: !8935)
!8949 = !DILocalVariable(name: "vec", scope: !8935, file: !3, line: 1593, type: !189)
!8950 = !DILocation(line: 1593, column: 9, scope: !8935)
!8951 = !DILocalVariable(name: "i", scope: !8935, file: !3, line: 1594, type: !91)
!8952 = !DILocation(line: 1594, column: 6, scope: !8935)
!8953 = !DILocalVariable(name: "j", scope: !8935, file: !3, line: 1594, type: !91)
!8954 = !DILocation(line: 1594, column: 9, scope: !8935)
!8955 = !DILocation(line: 1596, column: 23, scope: !8935)
!8956 = !DILocation(line: 1596, column: 34, scope: !8935)
!8957 = !DILocation(line: 1596, column: 43, scope: !8935)
!8958 = !DILocation(line: 1596, column: 2, scope: !8935)
!8959 = !DILocation(line: 1597, column: 8, scope: !8935)
!8960 = !DILocation(line: 1597, column: 18, scope: !8935)
!8961 = !DILocation(line: 1597, column: 25, scope: !8935)
!8962 = !DILocation(line: 1597, column: 35, scope: !8935)
!8963 = !DILocation(line: 1597, column: 45, scope: !8935)
!8964 = !DILocation(line: 1597, column: 50, scope: !8935)
!8965 = !DILocation(line: 1597, column: 6, scope: !8935)
!8966 = !DILocation(line: 1599, column: 21, scope: !8935)
!8967 = !DILocation(line: 1599, column: 27, scope: !8935)
!8968 = !DILocation(line: 1599, column: 39, scope: !8935)
!8969 = !DILocation(line: 1599, column: 48, scope: !8935)
!8970 = !DILocation(line: 1599, column: 58, scope: !8935)
!8971 = !DILocation(line: 1599, column: 2, scope: !8935)
!8972 = !DILocation(line: 1601, column: 9, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8935, file: !3, line: 1601, column: 2)
!8974 = !DILocation(line: 1601, column: 16, scope: !8973)
!8975 = !DILocation(line: 1601, column: 7, scope: !8973)
!8976 = !DILocation(line: 1601, column: 21, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8973, file: !3, line: 1601, column: 2)
!8978 = !DILocation(line: 1601, column: 25, scope: !8977)
!8979 = !DILocation(line: 1601, column: 34, scope: !8977)
!8980 = !DILocation(line: 1601, column: 23, scope: !8977)
!8981 = !DILocation(line: 1601, column: 2, scope: !8973)
!8982 = !DILocalVariable(name: "n", scope: !8983, file: !3, line: 1602, type: !124)
!8983 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 1601, column: 50)
!8984 = !DILocation(line: 1602, column: 9, scope: !8983)
!8985 = !DILocation(line: 1605, column: 15, scope: !8983)
!8986 = !DILocation(line: 1605, column: 18, scope: !8983)
!8987 = !DILocation(line: 1605, column: 27, scope: !8983)
!8988 = !DILocation(line: 1605, column: 34, scope: !8983)
!8989 = !DILocation(line: 1605, column: 37, scope: !8983)
!8990 = !DILocation(line: 1605, column: 40, scope: !8983)
!8991 = !DILocation(line: 1605, column: 3, scope: !8983)
!8992 = !DILocation(line: 1607, column: 26, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8983, file: !3, line: 1607, column: 7)
!8994 = !DILocation(line: 1607, column: 32, scope: !8993)
!8995 = !DILocation(line: 1607, column: 35, scope: !8993)
!8996 = !DILocation(line: 1607, column: 38, scope: !8993)
!8997 = !DILocation(line: 1607, column: 43, scope: !8993)
!8998 = !DILocation(line: 1607, column: 7, scope: !8993)
!8999 = !DILocation(line: 1607, column: 48, scope: !8993)
!9000 = !DILocation(line: 1607, column: 46, scope: !8993)
!9001 = !DILocation(line: 1607, column: 7, scope: !8983)
!9002 = !DILocation(line: 1608, column: 8, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 1607, column: 71)
!9004 = !DILocation(line: 1608, column: 10, scope: !9003)
!9005 = !DILocation(line: 1608, column: 6, scope: !9003)
!9006 = !DILocation(line: 1609, column: 25, scope: !9003)
!9007 = !DILocation(line: 1609, column: 36, scope: !9003)
!9008 = !DILocation(line: 1609, column: 45, scope: !9003)
!9009 = !DILocation(line: 1609, column: 52, scope: !9003)
!9010 = !DILocation(line: 1609, column: 4, scope: !9003)
!9011 = !DILocation(line: 1610, column: 10, scope: !9003)
!9012 = !DILocation(line: 1610, column: 20, scope: !9003)
!9013 = !DILocation(line: 1610, column: 27, scope: !9003)
!9014 = !DILocation(line: 1610, column: 37, scope: !9003)
!9015 = !DILocation(line: 1610, column: 47, scope: !9003)
!9016 = !DILocation(line: 1610, column: 52, scope: !9003)
!9017 = !DILocation(line: 1610, column: 8, scope: !9003)
!9018 = !DILocation(line: 1611, column: 4, scope: !9003)
!9019 = !DILocation(line: 1611, column: 14, scope: !9003)
!9020 = !DILocation(line: 1611, column: 21, scope: !9003)
!9021 = !DILocation(line: 1611, column: 31, scope: !9003)
!9022 = !DILocation(line: 1611, column: 41, scope: !9003)
!9023 = !DILocation(line: 1611, column: 46, scope: !9003)
!9024 = !DILocation(line: 1611, column: 51, scope: !9003)
!9025 = !DILocation(line: 1612, column: 3, scope: !9003)
!9026 = !DILocation(line: 1613, column: 2, scope: !8983)
!9027 = !DILocation(line: 1601, column: 46, scope: !8977)
!9028 = !DILocation(line: 1601, column: 2, scope: !8977)
!9029 = distinct !{!9029, !8981, !9030}
!9030 = !DILocation(line: 1613, column: 2, scope: !8973)
!9031 = !DILocation(line: 1615, column: 23, scope: !8935)
!9032 = !DILocation(line: 1615, column: 34, scope: !8935)
!9033 = !DILocation(line: 1615, column: 43, scope: !8935)
!9034 = !DILocation(line: 1615, column: 50, scope: !8935)
!9035 = !DILocation(line: 1615, column: 59, scope: !8935)
!9036 = !DILocation(line: 1615, column: 69, scope: !8935)
!9037 = !DILocation(line: 1615, column: 2, scope: !8935)
!9038 = !DILocation(line: 1617, column: 9, scope: !8935)
!9039 = !DILocation(line: 1617, column: 19, scope: !8935)
!9040 = !DILocation(line: 1617, column: 29, scope: !8935)
!9041 = !DILocation(line: 1617, column: 2, scope: !8935)
!9042 = distinct !DISubprogram(name: "cmpIntersections", scope: !3, file: !3, line: 1495, type: !9043, scopeLine: 1496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!9043 = !DISubroutineType(types: !9044)
!9044 = !{!91, !9045, !9045}
!9045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9046, size: 64)
!9046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!9047 = !DILocalVariable(name: "i1", arg: 1, scope: !9042, file: !3, line: 1495, type: !9045)
!9048 = !DILocation(line: 1495, column: 41, scope: !9042)
!9049 = !DILocalVariable(name: "i2", arg: 2, scope: !9042, file: !3, line: 1495, type: !9045)
!9050 = !DILocation(line: 1495, column: 57, scope: !9042)
!9051 = !DILocalVariable(name: "isect1", scope: !9042, file: !3, line: 1497, type: !9052)
!9052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9053, size: 64)
!9053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2639)
!9054 = !DILocation(line: 1497, column: 25, scope: !9042)
!9055 = !DILocation(line: 1497, column: 34, scope: !9042)
!9056 = !DILocalVariable(name: "isect2", scope: !9042, file: !3, line: 1497, type: !9052)
!9057 = !DILocation(line: 1497, column: 39, scope: !9042)
!9058 = !DILocation(line: 1497, column: 48, scope: !9042)
!9059 = !DILocation(line: 1499, column: 6, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9042, file: !3, line: 1499, column: 6)
!9061 = !DILocation(line: 1499, column: 14, scope: !9060)
!9062 = !DILocation(line: 1499, column: 24, scope: !9060)
!9063 = !DILocation(line: 1499, column: 32, scope: !9060)
!9064 = !DILocation(line: 1499, column: 21, scope: !9060)
!9065 = !DILocation(line: 1499, column: 6, scope: !9042)
!9066 = !DILocation(line: 1500, column: 7, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9068, file: !3, line: 1500, column: 7)
!9068 = distinct !DILexicalBlock(scope: !9060, file: !3, line: 1499, column: 40)
!9069 = !DILocation(line: 1500, column: 15, scope: !9067)
!9070 = !DILocation(line: 1500, column: 24, scope: !9067)
!9071 = !DILocation(line: 1500, column: 32, scope: !9067)
!9072 = !DILocation(line: 1500, column: 22, scope: !9067)
!9073 = !DILocation(line: 1500, column: 7, scope: !9068)
!9074 = !DILocation(line: 1501, column: 4, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 1500, column: 40)
!9076 = !DILocation(line: 1503, column: 12, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 1503, column: 12)
!9078 = !DILocation(line: 1503, column: 20, scope: !9077)
!9079 = !DILocation(line: 1503, column: 29, scope: !9077)
!9080 = !DILocation(line: 1503, column: 37, scope: !9077)
!9081 = !DILocation(line: 1503, column: 27, scope: !9077)
!9082 = !DILocation(line: 1503, column: 12, scope: !9067)
!9083 = !DILocation(line: 1504, column: 4, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 1503, column: 45)
!9085 = !DILocation(line: 1507, column: 8, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 1507, column: 8)
!9087 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 1506, column: 8)
!9088 = !DILocation(line: 1507, column: 16, scope: !9086)
!9089 = !DILocation(line: 1507, column: 25, scope: !9086)
!9090 = !DILocation(line: 1507, column: 33, scope: !9086)
!9091 = !DILocation(line: 1507, column: 23, scope: !9086)
!9092 = !DILocation(line: 1507, column: 8, scope: !9087)
!9093 = !DILocation(line: 1508, column: 5, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 1507, column: 41)
!9095 = !DILocation(line: 1510, column: 13, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 1510, column: 13)
!9097 = !DILocation(line: 1510, column: 21, scope: !9096)
!9098 = !DILocation(line: 1510, column: 30, scope: !9096)
!9099 = !DILocation(line: 1510, column: 38, scope: !9096)
!9100 = !DILocation(line: 1510, column: 28, scope: !9096)
!9101 = !DILocation(line: 1510, column: 13, scope: !9086)
!9102 = !DILocation(line: 1511, column: 5, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9096, file: !3, line: 1510, column: 46)
!9104 = !DILocation(line: 1514, column: 2, scope: !9068)
!9105 = !DILocation(line: 1516, column: 2, scope: !9042)
!9106 = !DILocation(line: 1517, column: 1, scope: !9042)
!9107 = distinct !DISubprogram(name: "sk_start_draw_gesture", scope: !3, file: !3, line: 2180, type: !2455, scopeLine: 2181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1951)
!9108 = !DILocalVariable(name: "sketch", arg: 1, scope: !9107, file: !3, line: 2180, type: !1920)
!9109 = !DILocation(line: 2180, column: 46, scope: !9107)
!9110 = !DILocation(line: 2182, column: 20, scope: !9107)
!9111 = !DILocation(line: 2182, column: 2, scope: !9107)
!9112 = !DILocation(line: 2182, column: 10, scope: !9107)
!9113 = !DILocation(line: 2182, column: 18, scope: !9107)
!9114 = !DILocation(line: 2183, column: 1, scope: !9107)
